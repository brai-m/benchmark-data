coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Conjunction.proj1	40	0.003076	0	1
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Conjunction.proj2	40	0.004407	3	2	0.1	synth with cache (only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Equivalence.iff_refl	40	0.003428	2	1
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Equivalence.iff_trans	40	0.033870	131	41	1.1.3.2.2	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: split; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Equivalence.iff_sym	40	0.013570	53	16	0.0.4.3	synth with cache (only 1: destruct 1; only 1: split; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.and_iff_compat_l	40	0.032194	218	60
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.and_iff_compat_r	40	0.042677	294	104	0.0.0.0.0.0.0.1.0.0.2.0	synth with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: intros [? ?]; only 1: split; only 1: apply Hl; only 1: assumption; only 1: assumption; only 1: intros [? ?]; only 1: split; only 1: apply Hr; only 1: assumption; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.or_iff_compat_l	40	0.055548	381	58
coq-tactician-stdlib.8.11.dev	Coq.Init.Wf.Well_founded.Acc_inv	40	0.009057	16	4	0.4	synth with cache (only 1: intros f [x]; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.or_iff_compat_r	40	0.123924	1214	308	0.1.0.1.1.0.0.1.0.1.2.0.0.0	synth with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: intros [?| ?]; only 1: left; only 1: apply Hl; only 1: assumption; only 1: right; only 1: assumption; only 1: intros [?| ?]; only 1: left; only 1: apply Hr; only 1: assumption; only 1: right; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT_eta	40	0.074064	437	25	0.28	synth with cache (only 1: destruct p; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.imp_iff_compat_l	40	0.063681	588	77	8.8.3.1	synth with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig_eta	40	0.005857	2	2	0.0	synth with cache (only 1: destruct p; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT2_eta	40	0.007144	2	2	0.0	synth with cache (only 1: destruct p; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig2_eta	40	0.006711	2	2	0.0	synth with cache (only 1: destruct p; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.imp_iff_compat_r	40	0.089294	873	154	6.0.0.2.5.0.2.0	synth with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: intros H ?; only 1: apply H; only 1: apply Hr; only 1: assumption; only 1: intros H ?; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.not_iff_compat	40	0.143604	1529	201	6.8.1.2.6	synth with cache (only 1: intros A B [H1 H2]; only 1: split; only 1: intros H ?; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.exists_to_inhabited_sig	40	0.263491	1091	137	0.2.10.2.10	synth with cache (only 1: intros H; only 1: inversion_clear H; only 1: split; only 1: exists x; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.neg_false	40	0.539537	4235	462
coq-tactician-stdlib.8.11.dev	Coq.Init.Byte.of_bits_to_bits	40	0.732095	4205	127
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.inhabited_sig_to_exists	40	3.355747	39025	1152
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT.eq_existT_uncurried	40	0.010471	5	4	0.1.0.0	synth with cache (only 1: destruct pq as [p q]; only 1: destruct q; only 1: destruct p; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic_Type.identity_is_a_congruence.identity_sym	40	0.007564	5	2	3.0	synth with cache (only 1: destruct 1; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic_Type.identity_is_a_congruence.identity_trans	40	0.004739	2	2	0.0	synth with cache (only 1: destruct 2; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic_Type.identity_is_a_congruence.identity_congr	40	0.004692	2	2	0.0	synth with cache (only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.pred_Sn	40	0.002996	4	1	3	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.not_eq_S	40	0.005174	4	2	2.0	synth with cache (only 1: intro H; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic_Type.identity_is_a_congruence.not_identity_sym	40	0.017826	35	8	4.2	synth with cache (only 1: destruct 2; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.O_S	40	0.003193	1	1	0	synth with cache (only 1: discriminate).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic_Type.identity_ind_r	40	0.021775	35	9	0.6.0	synth with cache (only 1: intros A x P H y H0; only 1: destruct H0 in H; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT.eq_existT_curried	40	0.008396	4	3	0.1.0	synth with cache (only 1: destruct q; only 1: destruct p; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic_Type.identity_rec_r	40	0.007029	3	3	0.0.0	synth with cache (only 1: intros A x P H y H0; only 1: case identity_sym with (1 := H0); only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic_Type.identity_rect_r	40	0.006193	3	3	0.0.0	synth with cache (only 1: intros A x P H y H0; only 1: case identity_sym with (1 := H0); only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT.eq_existT_curried_map	40	0.025843	16	5	0.6	synth with cache (only 1: destruct p, q; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.and_comm	40	0.663733	2817	749	0.1.2.3.1.0.2.3.1	synth with cache (only 1: split; only 1: intros [HypL HypR]; only 1: split; only 1: assumption; only 1: assumption; only 1: intros [HypL HypR]; only 1: split; only 1: assumption; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Lists.Streams.Streams.unfold_Stream	40	0.110499	403	41	0.18	synth with cache (only 1: intros [? ?]; only 1: exact eq_refl).
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyClasses.mkapp2	40	0.182413	752	32
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.dec_not_not	40	0.291169	683	141	8.0.1.6	synth with cache (only 1: intros; only 1: inversion_clear H; only 1: auto; only 1: contradiction).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.dec_True	40	0.006437	8	2	3.3	synth with cache (only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.dec_False	40	0.004867	4	2	1.1	synth with cache (only 1: unfold decidable; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ExtensionalityFacts.diagonal_projs_same_behavior	40	0.847391	3197	305	1.5.34	synth with cache (only 1: intro; only 1: intros [x y]; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyClasses.mkapp	40	0.298440	962	37
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrunder.Under_rel.Under_rel_from_rel	40	0.004522	4	2	1.1	synth with cache (only 1: intros; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrunder.Under_rel.Under_relE	40	0.002716	1	1	0	synth with cache (only 1: exact eq_refl).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrunder.Under_rel.over_rel	40	0.003074	2	1	1	synth with cache (only 1: now trivial).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.dec_or	40	0.390716	538	179	9.4	synth with cache (only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrunder.Under_rel.over_rel_done	40	0.003067	2	1	1	synth with cache (only 1: now trivial).
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyClasses.mkapp0	40	0.273807	1403	46
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrunder.Under_rel.under_rel_done	40	0.003702	2	1	1	synth with cache (only 1: now unfold Over_rel).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_1_facts.Rsym_imp_notRsym	40	1.295002	4181	479	8.4.2.21	synth with cache (only 1: intros A P H; only 1: red; only 1: red; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.dec_and	40	0.145247	28	8	1.1	synth with cache (only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyClasses.mkrel	40	0.114697	1007	38
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.dec_not	40	0.029193	10	4	2.1	synth with cache (only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ExtensionalityFacts.diagonal_inverse1	40	0.958386	2801	393	0.15.7.1.4	synth with cache (only 1: constructor; only 1: reflexivity; only 1: intros [x y]; only 1: subst; only 1: exact eq_refl).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.dec_imp	40	0.014129	4	2	1.1	synth with cache (only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.plus_n_O	40	0.185445	453	81	0.13.0.3	synth with cache (only 1: induction n; only 1: reflexivity; only 1: simpl in *; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.plus_O_n	40	0.009237	5	5	0.0.0.0.0	synth with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.plus_n_Sm	40	0.009140	7	4	1.0.0.2	synth with cache (only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.plus_Sn_m	40	0.010959	7	6	1.0.0.0.0.0	synth with cache (only 1: intros n m; only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.dec_iff	40	0.020758	4	2	1.1	synth with cache (only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ExtensionalityFacts.diagonal_inverse2	40	0.011615	7	4	0.1.1.1	synth with cache (only 1: split; only 1: trivial; only 1: destruct b as (a1, a2, []); only 1: exact eq_refl).
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.mult_n_O	40	0.008069	6	4	0.0.0.2	synth with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.Defs.complement_inverse	40	0.003736	1	1	0	synth with cache (only 1: exact eq_refl).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.not_not	40	0.011491	13	4	1.3	synth with cache (only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.or_comm	40	0.825677	3651	672	0.3.0.3.4.0.2.0.2.4.1.0	synth with cache (only 1: intros; only 1: split; only 1: intros [?| ?]; only 1: right; only 1: assumption; only 1: left; only 1: assumption; only 1: intros [?| ?]; only 1: right; only 1: assumption; only 1: left; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.not_or	40	0.007531	2	1	1	synth with cache (only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.diff_true_false	40	0.002792	1	1	0	synth with cache (only 1: discriminate).
coq-tactician-stdlib.8.11.dev	Coq.Logic.JMeq.JMeq_sym	40	0.036761	81	17	0.2.7	synth with cache (only 1: intros A C h1 h2; only 1: destruct 1; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.diff_false_true	40	0.003211	1	1	0	synth with cache (only 1: discriminate).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.not_and	40	0.017498	6	2	2.2	synth with cache (only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Lists.Streams.Streams.tl_nth_tl	40	2.222242	7796	859	0.1.5.4.0.2.18	synth with cache (only 1: induction n; only 1: intro x; only 1: exact eq_refl; only 1: intro p; only 1: simpl; only 1: rewrite <- ?IHn; only 1: exact eq_refl).
coq-tactician-stdlib.8.11.dev	Coq.Logic.JMeq.JMeq_trans	40	0.018052	25	7	2.3.1	synth with cache (only 1: intros; only 1: destruct H; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.not_imp	40	0.017415	6	3	1.1.1	synth with cache (only 1: unfold not; only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.Defs.complement_inverse	40	0.004034	1	1	0	synth with cache (only 1: exact eq_refl).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.imp_simp	40	0.017118	17	6	2.3	synth with cache (only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Program.Combinators.compose_id_left	40	0.005992	3	2	0.1	synth with cache (only 1: intros; only 1: exact eq_refl).
coq-tactician-stdlib.8.11.dev	Coq.Program.Combinators.compose_id_right	40	0.005759	3	2	0.1	synth with cache (only 1: intros; only 1: exact eq_refl).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.not_iff	40	0.048028	4	2	1.1	synth with cache (only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.FunctionalExtensionality.equal_f	40	0.009421	14	4	0.2.3	synth with cache (only 1: destruct 1; only 1: intros; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Program.Combinators.compose_assoc	40	0.010571	27	3	9	synth with cache (only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Transitive_Closure.Wf_Transitive_Closure.incl_clos_trans	40	0.294513	981	97	0.26	synth with cache (only 1: constructor; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Logic.FunctionalExtensionality.equal_f_dep	40	0.006732	5	3	0.0.2	synth with cache (only 1: destruct 1; only 1: intros; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.not_true_iff	40	0.006747	6	1	5	synth with cache (only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Program.Combinators.flip_flip	40	0.006426	3	2	0.1	synth with cache (only 1: intros; only 1: exact eq_refl).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.not_false_iff	40	0.003677	2	1	1	synth with cache (only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrsetoid.compat_Reflexive	40	0.008340	17	2	8	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.not_not_iff	40	0.014625	5	2	1.2	synth with cache (only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Bool.DecBool.ifdec_left	40	0.982376	3061	522	5.3.6.2.3	synth with cache (only 1: intros A C h1 h2; only 1: intros H; only 1: destruct h2; only 1: trivial; only 1: contradiction).
coq-tactician-stdlib.8.11.dev	Coq.Program.Combinators.prod_uncurry_curry	40	0.006557	3	2	0.1	synth with cache (only 1: intros; only 1: exact eq_refl).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.contrapositive	40	0.013868	4	2	1.1	synth with cache (only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Eqdep_dec.EqdepDec.trans_sym_eq	40	0.859027	2378	198	0.8.10.20	synth with cache (only 1: intro x; only 1: intros h1 h2; only 1: destruct h2; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.and_cancel_r	40	5.969322	41785	8076	0.0.0.0.1.0.0.1.0.1.3.1.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0	synth with cache (only 1: intros A B C Hl Hr; only 1: split; only 1: intros [HypL HypR]; only 1: split; only 1: intros; only 1: apply HypL; only 1: split; only 1: assumption; only 1: apply Hl; only 1: assumption; only 1: intros; only 1: apply HypR; only 1: split; only 1: assumption; only 1: apply Hr; only 1: assumption; only 1: intros [HypL HypR]; only 1: split; only 1: intros [? ?]; only 1: split; only 1: apply HypL; only 1: assumption; only 1: assumption; only 1: intros [? ?]; only 1: split; only 1: apply HypR; only 1: assumption; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT.eq_existT_curried_congr	40	1.650733	2475	328	0.20.4	synth with cache (only 1: intro H; only 1: subst; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalFacts.uint_dec	40	1.330430	8227	264
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_2_facts.Rstar_reflexive	40	0.004065	2	1	1	synth with cache (only 1: auto  10 with sets).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Hurkens.Generic.Paradox.Omega	40	1.706169	8091	182
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.or_not_l_iff_1	40	0.022782	5	2	1.2	synth with cache (only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.iff_and	40	0.003954	3	2	1.0	synth with cache (only 1: intros; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_2_facts.Rplus_contains_R	40	0.004245	2	1	1	synth with cache (only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.iff_to_and	40	0.022778	101	23	2.3.3	synth with cache (only 1: split; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.universal_quantification.inst	40	0.004723	13	2	6	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.Proper.eq_proper_proxy	40	0.002744	2	1	1	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.universal_quantification.gen	40	0.005525	3	2	0.1	synth with cache (only 1: unfold all; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.Proper.reflexive_proper_proxy	40	0.004898	9	2	6	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Sumbool.sumbool_of_bool	40	0.529982	1701	202	9.4.3.13	synth with cache (only 1: intros; only 1: destruct b; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.Proper.proper_proper_proxy	40	0.002485	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.or_not_l_iff_2	40	0.092960	4	2	1.1	synth with cache (only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.FunctionalExtensionality.functional_extensionality	40	0.841205	7051	231
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.Proper.eq_proper_proxy	40	0.003086	1	1	0	synth with cache (only 1: exact eq_refl).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.Proper.reflexive_proper_proxy	40	0.004118	3	1	2	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.absurd	40	0.221913	1271	130	0.5.22	synth with cache (only 1: intro H; only 1: intros A B []; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.eq_true_false_abs	40	1.635912	8902	770	9.26.7	synth with cache (only 1: intro z; only 1: inversion 1; only 1: discriminate).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.or_not_r_iff_1	40	0.018018	3	2	0.1	synth with cache (only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.Proper.proper_proper_proxy	40	0.003124	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.not_true_is_false	40	0.008543	8	3	0.2.3	synth with cache (only 1: destr_bool; only 1: reflexivity || destruct H; only 1: exact eq_refl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalFacts.rev_revapp	40	0.258842	1053	39
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.not_false_is_true	40	0.007790	6	3	0.2.1	synth with cache (only 1: destr_bool; only 1: reflexivity || destruct H; only 1: exact eq_refl).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.or_not_r_iff_2	40	0.019607	3	2	0.1	synth with cache (only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.FunctionalExtensionality.forall_extensionality	40	0.312246	1802	53
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.equality.eq_sym	40	0.268721	1916	118	1.16.24	synth with cache (only 1: intro H1; only 1: elim H1; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Logic.FunctionalExtensionality.forall_extensionalityP	40	0.008225	3	3	0.0.0	synth with cache (only 1: apply functional_extensionality in H; only 1: destruct H; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.equality.eq_trans	40	0.006383	5	3	2.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.equality.eq_trans_r	40	0.005146	2	2	0.0	synth with cache (only 1: destruct 2; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.equality.f_equal	40	0.007079	11	3	0.2	synth with cache (only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Sumbool.bool_eq_rec	40	0.377091	1074	126	1.1.9.12	synth with cache (only 1: intros n m; only 1: induction n; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.FunctionalExtensionality.forall_extensionalityS	40	0.009131	3	3	0.0.0	synth with cache (only 1: apply functional_extensionality in H; only 1: destruct H; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.imp_not_l	40	0.018703	4	2	1.1	synth with cache (only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Sumbool.bool_eq_ind	40	0.009279	6	3	1.1.1	synth with cache (only 1: destruct b; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.not_or_iff	40	0.014516	9	3	2	synth with cache (only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.not_and_iff	40	0.078660	2	1	1	synth with cache (only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.FunctionalExtensionality.functional_extensionality_dep_good_refl	40	0.315084	2318	61
coq-tactician-stdlib.8.11.dev	Coq.Program.Equality.JMeq_eq_refl	40	0.003613	2	1	1	synth with cache (only 1: apply UIP_refl).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.not_imp_iff	40	0.023445	4	2	1.1	synth with cache (only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Program.Equality.UIP_refl_refl	40	0.003804	4	1	3	synth with cache (only 1: apply UIP).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.equality.not_eq_sym	40	0.530145	3290	342	26.1	synth with cache (only 1: destruct 2; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Program.Equality.inj_pairT2_refl	40	0.004280	5	1	4	synth with cache (only 1: apply UIP_refl).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.eq_sind_r	40	0.005203	4	2	0.2	synth with cache (only 1: destruct 2; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.eq_ind_r	40	0.006002	4	3	1.0.0	synth with cache (only 1: intros A x P H y H0; only 1: elim eq_sym with (1 := H0); only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.Relations.pointwise_pointwise	40	0.780650	1478	228	5.5.1.5.4.9	synth with cache (only 1: split; only 1: intros; only 1: destruct 1; only 1: auto; only 1: intros; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.eq_rec_r	40	0.005883	3	3	0.0.0	synth with cache (only 1: intros A x P H y H0; only 1: elim eq_sym with (1 := H0); only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.eq_rect_r	40	0.006663	3	3	0.0.0	synth with cache (only 1: intros A x P H y H0; only 1: elim eq_sym with (1 := H0); only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.not_imp_rev_iff	40	0.023533	4	2	1.1	synth with cache (only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Program.Equality.solution_left	40	0.130222	564	55	1.13.12	synth with cache (only 1: intros; only 1: destruct H; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.not_true_iff_false	40	0.839738	1493	333	1.1.1.3.2.1.1.3.1	synth with cache (only 1: destr_bool; only 1: split; only 1: intro H; only 1: intuition; only 1: discriminate; only 1: split; only 1: intro H; only 1: exact eq_refl; only 1: discriminate).
coq-tactician-stdlib.8.11.dev	Coq.Program.Equality.solution_right	40	0.006410	3	3	0.0.0	synth with cache (only 1: intros; only 1: subst; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Inclusion.WfInclusion.Acc_incl	40	2.655276	8435	814	2.13.18.5	synth with cache (only 1: intro x; only 1: apply Acc_rect; only 1: constructor; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Program.Equality.deletion	40	0.002605	2	1	1	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset.The_power_set_partial_order.Empty_set_minimal	40	0.165887	197	38	6.2.1	synth with cache (only 1: red; only 1: intuition; only 1: reflexivity || destruct H).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.not_false_iff_true	40	0.010492	4	3	0.0.1	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Logic.FunctionalExtensionality.forall_sig_eq_rect	40	0.425619	2528	64
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.Relations.subrelation_id_proper	40	0.005594	7	1	6	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Inclusion.WfInclusion.wf_incl	40	0.010258	7	3	0.2.2	synth with cache (only 1: intros; only 1: constructor; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.Relations.subrelation_respectful	40	0.008827	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.equality_dep.f_equal_dep	40	0.333728	2121	111
coq-tactician-stdlib.8.11.dev	Coq.Program.Equality.simplification_heq	40	0.188907	599	99	0.7.3.6	synth with cache (only 1: intros H H'; only 1: subst; only 1: apply H; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.Relations.subrelation_refl	40	0.003719	3	1	2	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.Relations.subrelation_proper	40	0.003701	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.equality_dep2.f_equal_dep2	40	0.236701	891	106	7.10.5	synth with cache (only 1: destruct 1; only 1: destruct H; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.rew_opp_r	40	0.050695	183	28	0.11.0	synth with cache (only 1: intros A C h1 h2; only 1: destruct H; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.rew_opp_l	40	0.005254	4	3	0.1.0	synth with cache (only 1: intros; only 1: destruct H; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.leb_implb	40	0.436221	523	115	2.1.2.1.5	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Program.Wf.Well_founded.Fix_F_eq	40	0.103079	11	6	0.2	synth with cache (only 1: destruct r using Acc_inv_dep; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.f_equal2	40	0.302928	1228	174	1.8.3.3.1	synth with cache (only 1: intros A C h1 h2; only 1: intros; only 1: elim eq_sym with (1 := H0); only 1: destruct H; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.f_equal3	40	0.006623	5	4	0.0.0.1	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.f_equal4	40	0.008895	6	5	0.1.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.eqb_subst	40	0.006548	4	1	3	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.f_equal5	40	0.011149	6	6	0.0.0.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.eqb_reflx	40	0.008184	9	2	6	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Init.Tactics.decide_left	40	8.190124	43034	3588	0.3.10.12.5.18	synth with cache (only 1: intro z; only 1: intros H x0; only 1: reflexivity || destruct H; only 1: trivial; only 1: induction n; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Init.Tactics.decide_right	40	0.008966	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: destruct decide; only 1: contradiction; only 1: apply H0).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.eqb_prop	40	0.031117	32	11	8	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.Relations.proper_subrelation_proper	40	0.724411	166	32	2.2.8	synth with cache (only 1: reduce; only 1: subst; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.f_equal_compose	40	0.278068	1287	142	0.9.10.3	synth with cache (only 1: intros A x P H y H0; only 1: intros h1 h2; only 1: destruct h2; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_trans_refl_l	40	0.004308	2	2	0.0	synth with cache (only 1: destruct e; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_trans_refl_r	40	0.004199	2	2	0.0	synth with cache (only 1: destruct e; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_sym_involutive	40	0.004177	2	2	0.0	synth with cache (only 1: destruct e; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_trans_sym_inv_l	40	0.004248	2	2	0.0	synth with cache (only 1: destruct e; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_trans_sym_inv_r	40	0.004187	2	2	0.0	synth with cache (only 1: destruct e; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.eqb_true_iff	40	0.175934	139	49	1.1.1.1.2	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.Relations.pointwise_subrelation	40	0.008216	6	2	2.2	synth with cache (only 1: unfold subrelation; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.Relations.forall_subrelation	40	0.007196	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_trans_assoc	40	0.206287	595	102	0.5.7.0	synth with cache (only 1: destruct e; only 1: intros h1 h2; only 1: destruct h2; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.rew_map	40	0.030949	52	19	2.0.5	synth with cache (only 1: intros; only 1: destruct H; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Program.Equality.simplification_existT2	40	1.401043	6691	477	0.29.7.2.0	synth with cache (only 1: intros H J; only 1: apply H; only 1: apply eq_dep_eq; only 1: apply eq_sigT_eq_dep; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.eqb_false_iff	40	0.028850	17	7	0.0.0.0.3	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Extension	40	7.494090	31867	2954	3.14.3.14.12.7	synth with cache (only 1: induction 1; only 1: constructor; only 1: intro H; only 1: auto; only 1: intro H; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Noone_in_empty	40	0.048879	80	10	11	synth with cache (only 1: destruct 1).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.negb_orb	40	0.009965	12	2	5	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.iff_impl_subrelation	40	0.004896	3	1	2	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Included_Empty	40	0.007705	7	3	2.1.1	synth with cache (only 1: red; only 1: red; only 1: destruct 1).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.negb_andb	40	0.006007	2	1	1	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.iff_flip_impl_subrelation	40	0.004984	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.negb_involutive	40	0.004102	5	1	4	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.negb_involutive_reverse	40	0.004231	2	1	1	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.negb_sym	40	0.005465	2	1	1	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.no_fixpoint_negb	40	0.005056	5	1	4	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.eqb_negb1	40	0.004366	2	1	1	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CEquivalence.equiv_transitive_obligation_1	40	0.196553	131	47	1.1.4.2	synth with cache (only 1: intros; only 1: transitivity y; only 1: firstorder; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.eqb_negb2	40	0.003693	2	1	1	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.if_negb	40	0.006980	13	2	6	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Uniset.defs.leb_refl	40	0.006233	2	1	1	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.negb_true_iff	40	0.009665	4	3	0.0.1	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.negb_false_iff	40	0.009792	3	3	0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Add_intro1	40	0.964890	1993	414	0.9.3.3	synth with cache (only 1: intro; only 1: intro; only 1: constructor; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Add_intro2	40	0.006422	9	3	3.1	synth with cache (only 1: unfold Add at 1; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.prop_congr	40	0.138411	2	1	1	synth with cache (only 1: Bool.destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssreflect.master_key	40	0.003169	1	1	0	synth with cache (only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.is_true_true	40	0.196773	2	1	1	synth with cache (only 1: exact (erefl _)).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_true_iff	40	0.482522	242	92	1.2.2.1.2	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Equivalence.equiv_transitive_obligation_1	40	0.986403	2049	229	0.0.0.1.18	synth with cache (only 1: compute; only 1: intros; only 1: transitivity y; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Bool.IfProp.Iftrue_inv	40	0.475127	792	129	0.17.3	synth with cache (only 1: destr_bool; only 1: inversion_clear H; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.Dependent_Equality.eq_dep_sym	40	0.006442	8	2	2.4	synth with cache (only 1: destruct 1; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.not_false_is_true	40	0.137018	10	2	5	synth with cache (only 1: discriminate).
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.Dependent_Equality.eq_dep_trans	40	0.006813	4	2	1.1	synth with cache (only 1: destruct 1; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_false_iff	40	0.018324	5	5	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Bool.BoolEq.Bool_eq_dec.beq_eq_true	40	0.232802	214	46	3.6.2	synth with cache (only 1: intuition; only 1: destruct H; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Bool.IfProp.Iffalse_inv	40	0.154995	216	47	0.1.1.6.0.1	synth with cache (only 1: destruct 1; only 1: intros; only 1: apply False_rec; only 1: auto with bool; only 1: intros; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Empty_set_zero_right	40	0.008703	1	1	0	synth with cache (only 1: auto  6 with sets).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_true_elim	40	0.206289	167	58	4.3.2	synth with cache (only 1: destruct b1; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.negbT	40	0.111350	5	1	4	synth with cache (only 1: Bool.destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.negbTE	40	0.074070	2	1	1	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.Dependent_Equality.eq_dep_dep1	40	0.416722	1654	129	0.28.0	synth with cache (only 1: destruct 1; only 1: exists eq_refl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.negbF	40	0.076798	2	1	1	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.Relations.subrelation_id_proper	40	0.005873	7	1	6	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Empty_set_zero'	40	0.315809	286	35	1.20	synth with cache (only 1: unfold Add at 1; only 1: auto  6 with sets).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.Relations.subrelation_respectful	40	0.012806	5	1	4	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.negbFE	40	0.073157	1	1	0	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.Relations.subrelation_refl	40	0.004060	3	1	2	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.Relations.subrelation_proper	40	0.004213	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Bool.IfProp.IfProp_true	40	0.471112	624	148	0.11.3	synth with cache (only 1: destr_bool; only 1: inversion_clear H; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.less_than_empty	40	0.087508	2	1	1	synth with cache (only 1: auto  6 with sets).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_prop	40	0.301776	200	65	2.2.2.2.0	synth with cache (only 1: destruct a, b; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.negbK	40	0.196687	2	1	1	synth with cache (only 1: by case).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_commutative	40	0.011337	8	2	3.3	synth with cache (only 1: intros; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Bool.IfProp.IfProp_false	40	0.013237	12	4	0.4.0	synth with cache (only 1: intros; only 1: inversion H; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Setoids.Setoid.Seq_refl	40	0.008880	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.Relations.pointwise_subrelation	40	0.010943	3	1	2	synth with cache (only 1: simpl_crelation).
coq-tactician-stdlib.8.11.dev	Coq.Setoids.Setoid.Seq_sym	40	0.008661	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.Relations.forall_subrelation	40	0.013095	9	3	3	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.Relations.proper_subrelation_proper_arrow	40	0.339147	109	25	4.6	synth with cache (only 1: intro x; only 1: simpl_crelation).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_true_intro	40	0.027311	20	11	2.2	synth with cache (only 1: destr_bool; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.negbNE	40	0.214705	4	1	3	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.negbLR	40	0.019597	21	4	6	synth with cache (only 1: Bool.destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.negbRL	40	0.020773	19	4	7	synth with cache (only 1: Bool.destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_false_intro	40	0.010482	8	2	5.1	synth with cache (only 1: intros; only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Sumbool.connectives.sumbool_and	40	5.940577	36105	3477	0.0.1.0.3.1.0.0.0.0.21.24	synth with cache (only 1: destruct H2; only 1: elim H1; only 1: left; only 1: split; only 1: assumption; only 1: assumption; only 1: right; only 1: left; only 1: assumption; only 1: right; only 1: right; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.ExtensionalEquality.frefl	40	0.006000	6	2	0.4	synth with cache (only 1: intros H; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Bool.IfProp.IfProp_or	40	0.249065	182	81	0.0.1.0.0.0.3	synth with cache (only 1: destr_bool; only 1: left; only 1: inversion H; only 1: assumption; only 1: right; only 1: inversion H; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Setoids.Setoid.Seq_trans	40	0.207640	23	11	4	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.iff_impl_subrelation	40	0.006429	8	2	5.1	synth with cache (only 1: intros A P H; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Sumbool.connectives.sumbool_or	40	0.014158	8	7	0.0.1.0.0.0.0	synth with cache (only 1: case H1; only 1: case H2; only 1: auto; only 1: auto; only 1: case H2; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.ExtensionalEquality.fsym	40	0.070929	3	2	1.0	synth with cache (only 1: intros; only 1: by [  ]).
coq-tactician-stdlib.8.11.dev	Coq.Setoids.Setoid.gen_st	40	0.091780	57	12	3.7	synth with cache (only 1: intro z; only 1: CRelationClasses.simpl_crelation).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.iff_flip_impl_subrelation	40	0.004867	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.iffT_arrow_subrelation	40	0.005121	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Sumbool.connectives.sumbool_not	40	0.085972	12	5	1.0.3	synth with cache (only 1: case H1; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.contraL	40	0.140638	1	1	0	synth with cache (only 1: by case : b  => //; case : c ).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.iffT_flip_arrow_subrelation	40	0.005306	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_false_elim	40	0.158035	132	51	1.7	synth with cache (only 1: destr_bool; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Bool.IfProp.IfProp_sum	40	0.326929	322	109	0.0.2.0.0.0.5	synth with cache (only 1: destr_bool; only 1: left; only 1: inversion H; only 1: assumption; only 1: right; only 1: inversion H; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Bool.DecBool.ifdec_right	40	7.788314	21146	3689	0.0.6.5.9.3.3	synth with cache (only 1: unfold not; only 1: intros A C h1 h2; only 1: intros; only 1: destruct h2; only 1: case H; only 1: assumption; only 1: exact eq_refl).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.contraR	40	0.172083	1	1	0	synth with cache (only 1: by case : b  => //; case : c ).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_diag	40	0.004228	2	1	1	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.contraLR	40	0.109779	1	1	0	synth with cache (only 1: by case : b  => //; case : c ).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_true_r	40	0.004042	2	1	1	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.flip_proper_obligation_1	40	0.007225	7	1	6	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_3_facts.Rstar_imp_coherent	40	5.003239	5503	1716	0.1.3.4.9	synth with cache (only 1: intros U R; only 1: red; only 1: intros x0 a H'1; only 1: exists a; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.wlog_neg	40	0.042605	1	1	0	synth with cache (only 1: by case : b  => // ->).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_true_l	40	0.003958	2	1	1	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_false_r	40	0.004596	3	1	2	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.trans_contra_co_type_morphism_obligation_1	40	0.187277	12	2	3	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.flip_proper_obligation_1	40	0.017151	38	4	10	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_false_l	40	0.004500	2	1	1	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_negb_r	40	0.004308	2	1	1	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.negb_inj	40	1.591191	143	13	0.16	synth with cache (only 1: red; only 1: Bool.destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.trans_contra_co_morphism_obligation_1	40	0.119981	55	11	9	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_comm	40	0.005519	2	1	1	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Init.Wf.Well_founded.well_founded_induction_type	40	19.783316	228493	5258
coq-tactician-stdlib.8.11.dev	Coq.Init.Wf.Well_founded.well_founded_induction	40	0.007433	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: apply Acc_rect; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Init.Wf.Well_founded.well_founded_ind	40	0.007607	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: apply Acc_rect; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_assoc	40	0.012788	7	2	4.1	synth with cache (only 1: intros; only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Init.Wf.Well_founded.FixPoint.Fix_F_eq	40	0.100504	331	33	1.19	synth with cache (only 1: intros f [x]; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.trans_contra_inv_impl_morphism_obligation_1	40	0.075061	48	13	8	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.trans_contra_inv_impl_type_morphism_obligation_1	40	0.373280	55	19	8	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_true_iff	40	0.029563	13	6	0.0.0.0.1	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.Defs.subrelation_symmetric	40	0.004618	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_false_iff	40	0.025344	5	5	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.Defs.flip.flip_Reflexive	40	0.007514	9	3	2.1	synth with cache (only 1: hnf; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.Defs.flip.flip_Antisymmetric	40	0.026636	46	9	9	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.Defs.flip.flip_PreOrder	40	0.023425	4	1	3	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.Defs.flip.flip_StrictOrder	40	0.018842	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.Defs.flip.flip_PER	40	0.032004	3	1	2	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.contra	40	2.097483	802	58	1.35	synth with cache (only 1: Bool.destr_bool; only 1: auto with bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_true_eq	40	0.047332	35	23	0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct a, b; only 1: repeat split; only 1: repeat split; only 1: assumption; only 1: repeat split; only 1: assumption; only 1: repeat split; only 1: assumption; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_false_intro1	40	0.005841	2	1	1	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.Defs.flip.flip_Equivalence	40	0.099308	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_false_intro2	40	0.010296	3	3	0.0.0	synth with cache (only 1: intros; only 1: apply andb_false_iff; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset.The_power_set_partial_order.Power_set_Inhabited	40	7.393542	61767	1459
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.Defs.subrelation_symmetric	40	0.005734	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.Defs.complement.complement_Irreflexive	40	0.003304	3	1	2	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.trans_co_impl_type_morphism_obligation_1	40	0.792504	393	151	12	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_false_r	40	0.003941	4	1	3	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.Defs.flip.flip_Reflexive	40	0.004981	3	2	1.0	synth with cache (only 1: hnf; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.Defs.complement.complement_Symmetric	40	0.004146	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_false_l	40	0.006115	4	2	1.1	synth with cache (only 1: simpl; only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_diag	40	0.003900	2	1	1	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_true_r	40	0.003951	3	1	2	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.Defs.flip.flip_Antisymmetric	40	0.293797	404	81	3.10.1	synth with cache (only 1: hnf; only 1: intro z; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset.The_power_set_partial_order.Inclusion_is_transitive	40	0.006696	2	1	1	synth with cache (only 1: auto  6 with sets).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.Defs.flip.flip_PreOrder	40	0.018883	4	1	3	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_true_l	40	0.004739	2	1	1	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_false_elim	40	0.013409	8	4	1.1.1.1	synth with cache (only 1: destr_bool; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.trans_co_impl_morphism_obligation_1	40	1.323568	1080	593	4.4.2	synth with cache (only 1: transitivity x0; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.Defs.flip.flip_StrictOrder	40	0.098897	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.BoolIf.ifPn	40	0.373972	1	1	0	synth with cache (only 1: by case  def_b: b ; constructor).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset.The_power_set_partial_order.Inclusion_is_an_order	40	1.324814	511	108	25	synth with cache (only 1: auto  10 with sets).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.Defs.flip.flip_PER	40	0.023460	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.predicate_equivalence_equivalence_obligation_1	40	0.317111	1197	42
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_negb_r	40	0.003920	2	1	1	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.Defs.flip.flip_Equivalence	40	0.034647	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_comm	40	0.005482	2	1	1	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.predicate_equivalence_equivalence_obligation_2	40	0.017105	4	3	0.1.0	synth with cache (only 1: induction l; only 1: firstorder; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.Defs.complement.complement_Irreflexive	40	0.006252	3	1	2	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.Defs.complement.complement_Symmetric	40	0.004966	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_assoc	40	0.069398	2	1	1	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Empty_set_zero	40	5.824301	13625	724	67	synth with cache (only 1: auto  10 with sets).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.trans_sym_co_inv_impl_morphism_obligation_1	40	1.061562	610	442	9	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.contraFT	40	2.606845	486	55	6.19	synth with cache (only 1: Bool.destr_bool; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.Relations.pointwise_pointwise	40	10.357310	38590	3921	7.8.6.10.7.10.3.6	synth with cache (only 1: split; only 1: intros; only 1: intro H; only 1: intros; only 1: elim eq_sym with (1 := H0); only 1: trivial; only 1: red; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_orb_distrib_r	40	0.009351	2	1	1	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset.The_power_set_partial_order.Strict_Rel_is_Strict_Included	40	0.009340	5	2	1.2	synth with cache (only 1: elim Inclusion_is_an_order; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.iffT_Reflexive	40	0.011388	11	5	5	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_orb_distrib_l	40	0.008738	2	1	1	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.iffT_Symmetric	40	0.005191	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_andb_distrib_r	40	0.008807	2	1	1	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_idempotent	40	0.011195	2	1	1	synth with cache (only 1: auto  6 with sets).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.per_partial_app_morphism_obligation_1	40	0.189553	113	62	9	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.iffT_Transitive	40	0.006523	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_absorbs	40	0.013254	2	1	1	synth with cache (only 1: auto  9 with sets).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZBase.NZBaseProp.eq_sym_iff	40	0.020535	16	6	0.1	synth with cache (only 1: intros; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.trans_sym_contra_arrow_morphism_obligation_1	40	1.334179	722	448	10	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_andb_distrib_l	40	0.008522	2	1	1	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.contraT	40	3.234294	366	35	2.21	synth with cache (only 1: Bool.destr_bool; only 1: auto with bool).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersTac.OrderFacts.eq_refl	40	0.004863	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.absorption_andb	40	0.005341	2	1	1	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Program.Wf.Well_founded.Fix_F_inv	40	8.635840	8582	1157	1.7.12.1.1.2	synth with cache (only 1: destruct r using Acc_inv_dep; only 1: induction (Rwf x); only 1: intros; only 1: rewrite <- Wf.Fix_F_eq; only 1: rewrite <- Wf.Fix_F_eq; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.BoolIf.ifF	40	0.167483	1	1	0	synth with cache (only 1: by move ->).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.absorption_orb	40	0.005325	2	1	1	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.per_partial_app_type_morphism_obligation_1	40	0.188795	16	2	7	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.xorb_false_r	40	0.004372	2	1	1	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.xorb_false_l	40	0.004409	2	1	1	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.trans_co_eq_inv_impl_morphism_obligation_1	40	0.231157	221	97	9	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.xorb_true_r	40	0.004034	2	1	1	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZBase.NZBaseProp.neq_sym	40	0.453102	490	120	11.0	synth with cache (only 1: intro H; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.xorb_true_l	40	0.003170	2	1	1	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZBase.NZBaseProp.eq_stepl	40	0.127422	137	40	0.6.3	synth with cache (only 1: symmetry; only 1: rewrite <- H; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.xorb_nilpotent	40	0.004322	2	1	1	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.unitE	40	4.897507	609	47	0.3.6.20	synth with cache (only 1: intro H; only 1: intuition; only 1: reflexivity || destruct H; only 1: exact (erefl _)).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.trans_co_eq_inv_arrow_morphism_obligation_1	40	0.038487	22	8	7	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.xorb_comm	40	0.005880	2	1	1	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.xorb_assoc_reverse	40	0.009606	2	1	1	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.ExtensionalEquality.rrefl	40	0.003747	1	1	0	synth with cache (only 1: by [  ]).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.BoolIf.if_same	40	0.484197	3	1	2	synth with cache (only 1: by case  def_b: b ; constructor; rewrite ?def_b).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.xorb_eq	40	0.006405	2	1	1	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_associative	40	5.337789	4768	396	33.5	synth with cache (only 1: intro x; only 1: auto  10 with sets).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.xorb_move_l_r_1	40	0.074632	9	2	2	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.xorb_move_l_r_2	40	0.015127	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.xorb_move_r_l_1	40	0.009667	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.xorb_move_r_l_2	40	0.009948	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.BoolIf.if_neg	40	0.347526	1	1	0	synth with cache (only 1: by case b).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.negb_xorb_l	40	0.006644	2	1	1	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_neg_neg	40	0.023242	3	3	0.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_lt_mono).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_neg_nonpos	40	0.022549	3	3	0.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_lt_le_mono).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.BoolIf.ifN	40	1.312834	262	29	18	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_nonpos_neg	40	0.023664	3	3	0.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_le_lt_mono).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.BoolIf.fun_if	40	0.177310	1	1	0	synth with cache (only 1: by case  def_b: b ; constructor).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_nonpos_nonpos	40	0.023036	3	3	0.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_le_mono).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.BoolIf.if_arg	40	0.108033	1	1	0	synth with cache (only 1: by case b).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareFacts.compare_eq	40	0.274814	147	50	0.0.0.0.0.0.5	synth with cache (only 1: case compare_spec; only 1: intro H; only 1: easy; only 1: intro H; only 1: easy; only 1: intro H; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.negb_xorb_r	40	0.030008	6	5	0.0.0.0.1	synth with cache (only 1: destruct b, b'; only 1: exact eq_refl; only 1: trivial; only 1: trivial; only 1: exact eq_refl).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.BoolIf.ifE	40	0.268256	2	1	1	synth with cache (only 1: exact (erefl _)).
coq-tactician-stdlib.8.11.dev	Coq.Structures.Equalities.UpdateEq.eq_equiv	40	3.903827	2645	289	0.18.18.1.0.1	synth with cache (only 1: constructor; only 1: now trivial; only 1: auto with *; only 1: red; only 1: intros H x y Hxy; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.xorb_negb_negb	40	0.005466	2	1	1	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.odd_pred	40	0.333965	58	33	0.4.0	synth with cache (only 1: intros; only 1: rewrite <- (succ_pred n)  at 2; only 1: now rewrite <- negb_odd, odd_succ, negb_even).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.symmetric_equiv_flip	40	0.008733	5	2	3.0	synth with cache (only 1: hnf; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectCore.introTF	40	0.512940	1	1	0	synth with cache (only 1: by case c; case Hb).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_pred	40	0.123451	24	18	0.1.1.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- (succ_pred n)  at 2; only 1: symmetry; only 1: apply eq_iff_eq_true; only 1: rewrite even_spec, odd_spec; only 1: apply Odd_succ).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.compose_proper_obligation_1	40	0.076664	182	13	19	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_0_r	40	0.075027	9	5	3.0.0.0	synth with cache (only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: now nzsimpl').
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectCore.elimNTF	40	0.552031	1	1	0	synth with cache (only 1: by case c; case Hb).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.is_true_locked_true	40	8.466685	1458	50	1.51	synth with cache (only 1: unlock; only 1: by [  ]).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.reflexive_eq_dom_reflexive	40	0.044057	57	13	6.3	synth with cache (only 1: intros; only 1: simpl_crelation).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.eq_iff_eq_true	40	0.063341	33	12	0.0.0.0.3	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectCore.elimTF	40	0.510969	1	1	0	synth with cache (only 1: by move <-; case Hb).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.eq_true_negb_classical	40	0.009343	3	2	1.0	synth with cache (only 1: destr_bool; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.eq_true_not_negb	40	0.007611	3	2	1.0	synth with cache (only 1: destr_bool; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.absurd_eq_bool	40	0.070338	12	4	6	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.all_tag	40	1.919862	102	27	0.0.1.4.1	synth with cache (only 1: intro H; only 1: exists (fun z => projT1 (H z)); only 1: intro z; only 1: destruct (H z); only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.absurd_eq_true	40	0.012729	20	4	3.4	synth with cache (only 1: destr_bool; only 1: contradiction).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.all_tag2	40	0.046517	2	1	1	synth with cache (only 1: by move  =>fP; exists (fun x => tag (fP x)) => x; case : (fP x) ).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.eq_true_iff_eq	40	0.478487	434	143	0.0.2.0.0.2.0.0.0.0.0	synth with cache (only 1: destruct b1; only 1: destruct b2; only 1: intros [? ?]; only 1: exact eq_refl; only 1: intros [? ?]; only 1: intuition; only 1: destruct b2; only 1: intros [? ?]; only 1: intuition; only 1: intros [? ?]; only 1: exact eq_refl).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.trans_eq_bool	40	0.017271	14	3	5	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.Is_true_eq_true	40	0.007660	7	2	2.3	synth with cache (only 1: destr_bool; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.Is_true_eq_left	40	0.006858	2	1	1	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.Is_true_eq_right	40	0.007481	4	3	1.0.0	synth with cache (only 1: intros; only 1: subst; only 1: auto with bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.eqb_refl	40	0.004451	4	1	3	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.eqb_eq	40	0.011781	5	3	0.0.2	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_prop_intro	40	0.011911	5	4	0.0.1.0	synth with cache (only 1: destr_bool; only 1: inversion_clear H; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_prop_intro	40	0.016653	8	6	0.1.0.1.0.0	synth with cache (only 1: destr_bool; only 1: inversion_clear H; only 1: auto; only 1: inversion_clear H; only 1: auto; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_prop_elim	40	0.014368	5	5	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto; only 1: tauto; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_prop_elim	40	0.621846	400	128	0.0.0.0.3.0.0.4	synth with cache (only 1: destr_bool; only 1: constructor; only 1: auto; only 1: intuition; only 1: constructor; only 1: auto; only 1: constructor; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.eq_bool_prop_intro	40	0.021713	13	4	1.1.3	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.eq_bool_prop_elim	40	0.019153	7	5	0.1.0.0.1	synth with cache (only 1: intuition; only 1: subst; only 1: tauto; only 1: subst; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Uniset.defs.incl_right	40	0.012473	5	4	1.0.0.0	synth with cache (only 1: unfold incl; only 1: intros s1 s2 E a; only 1: elim (E a); only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.negb_prop_elim	40	0.009252	4	3	0.0.1	synth with cache (only 1: destr_bool; only 1: auto; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Uniset.defs.seq_refl	40	0.004747	3	1	2	synth with cache (only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.negb_prop_intro	40	0.007513	2	2	0.0	synth with cache (only 1: destr_bool; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.negb_prop_classical	40	0.006784	2	2	0.0	synth with cache (only 1: destr_bool; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.negb_prop_involutive	40	0.008557	3	3	0.0.0	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.or_assoc	40	18.459668	153007	8078
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_1_r	40	0.043927	2	2	0.0	synth with cache (only 1: intro n; only 1: now nzsimpl').
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_if	40	0.009755	9	2	3	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Triple_as_Couple	40	4.092423	3052	1185	1.2.2.0.0.0.0.0.1.0.0.3.1.1	synth with cache (only 1: intros x y; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: auto with sets; only 1: auto with sets; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.negb_if	40	0.004536	2	1	1	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_lazy_alt	40	0.005683	2	1	1	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_lazy_alt	40	0.005560	3	1	2	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.map_subst	40	0.004837	2	2	0.0	synth with cache (only 1: destruct H; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.map_subst_map	40	0.006474	3	2	0.1	synth with cache (only 1: destruct H; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.rew_swap	40	0.011371	15	5	0.0.3	synth with cache (only 1: destruct 1; only 1: destruct H; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.trans_sym_co_inv_impl_type_morphism_obligation_1	40	8.822920	4197	3045	12	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.rew_compose	40	0.058742	8	3	4.1.0	synth with cache (only 1: intros; only 1: destruct H2; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.GenericMinMax.min_r	40	0.537404	458	179	0.0.0.1.1.0.0.3.0	synth with cache (only 1: intros; only 1: unfold min, gmin; only 1: case compare_spec; only 1: auto with relations; only 1: intros; only 1: elim (ge_not_lt x y); only 1: auto; only 1: auto; only 1: auto with relations).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_id_comm_l	40	0.305943	2434	121
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_trans_map	40	15.059635	104647	4944
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.iff_reflect	40	0.482015	616	99	5.1.3.5	synth with cache (only 1: destr_bool; only 1: constructor; only 1: tauto; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_refl_map_distr	40	0.004131	2	2	0.0	synth with cache (only 1: intros A C h1 h2; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.reflect_dec	40	0.080821	44	14	1.0.4.0	synth with cache (only 1: unfold not; only 1: induction 1; only 1: tauto; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_refl	40	1.059922	1839	184	11.20.2	synth with cache (only 1: intros; only 1: apply lt_eq_cases; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_id_comm_r	40	0.796458	5344	234
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.eqb_spec	40	0.299694	324	74	2.1.1.1.9	synth with cache (only 1: repeat match goal with | p:(_ * _)%type |- _ => destruct p | b:bool |- _ => destruct b end; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_sym_map_distr	40	0.007818	11	3	0.2	synth with cache (only 1: destruct e; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_trans_sym_distr	40	0.030059	63	14	0.7.0	synth with cache (only 1: destruct e; only 1: destruct e'; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_diag_r	40	0.564846	430	102	0.0.0.7.1.0	synth with cache (only 1: intro n; only 1: apply lt_eq_cases; only 1: constructor; only 1: rewrite lt_succ_r; only 1: apply lt_eq_cases; only 1: now right).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_trans_rew_distr	40	0.011191	17	5	0.5	synth with cache (only 1: destruct e'; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.trans_sym_contra_impl_morphism_obligation_1	40	8.730991	4752	3558	12	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.rew_const	40	0.006386	13	3	2.2	synth with cache (only 1: destruct e; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.reflect_iff	40	1.539116	1320	280	0.0.0.1.14	synth with cache (only 1: red; only 1: destruct 1; only 1: auto; only 1: intuition; only 1: inversion_clear H).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.Reflexive_partial_app_morphism	40	0.035171	125	10	16	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.flip_respectful	40	0.010916	4	3	0.0.1	synth with cache (only 1: split; only 1: firstorder; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.flip1	40	0.004047	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.flip2	40	0.004136	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.eq_subrelation	40	0.049204	47	20	0.1.6	synth with cache (only 1: reduce; only 1: subst; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.reflexive_proper	40	0.003370	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.proper_eq	40	0.003186	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_spec_le	40	1.291192	696	286	1.0.0.0.0.0.0.1.0.0.0.0.0	synth with cache (only 1: destruct (lt_total n m); only 1: left; only 1: split; only 1: rewrite le_lteq; only 1: auto; only 1: apply max_r; only 1: rewrite le_lteq; only 1: auto; only 1: right; only 1: assert (m <= n) by (rewrite le_lteq; intuition); only 1: split; only 1: auto; only 1: now apply max_l).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareFacts.compare_nlt_iff	40	2.260692	964	344	0.0.0.2.1.0.0.0.0.0.1.2.0.0.0	synth with cache (only 1: case compare_spec; only 1: intro H; only 1: split; only 1: intro LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: easy; only 1: intro H; only 1: easy; only 1: intro H; only 1: split; only 1: intro LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.symmetric_equiv_flip	40	0.007966	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.compose_proper_obligation_1	40	0.025001	77	7	13	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.reflexive_eq_dom_reflexive	40	0.010735	7	3	2.0.2	synth with cache (only 1: reduce; only 1: subst; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Inhabited_not_empty	40	10.935588	42743	4334	1.19.4.13.3.2	synth with cache (only 1: red; only 1: destruct 1; only 1: intros; only 1: elim (Noone_in_empty x); only 1: destruct H0 in H; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.and_assoc	40	26.564266	196549	16333	18.3.0.0.0.5.0.15.0.14.0.0.0.2	synth with cache (only 1: intros; only 1: split; only 1: intros [? ?]; only 1: split; only 1: apply H; only 1: split; only 1: apply H; only 1: assumption; only 1: intros [HypL HypR]; only 1: split; only 1: split; only 1: assumption; only 1: apply HypR; only 1: apply HypR).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.contraFN	40	12.622994	102	14	4.9	synth with cache (only 1: Bool.destr_bool; only 1: auto with bool).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.proper_proper	40	0.016764	7	4	0.1.1.1	synth with cache (only 1: intros; only 1: reduce; only 1: subst; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_mono_r	40	0.197172	12	7	1.0.1.0.0.0	synth with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite <- succ_lt_mono).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_proper	40	0.013156	5	3	2.0.0	synth with cache (only 1: intros x x' EQ; only 1: subst; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.Normalize.proper_normalizes_proper	40	0.005641	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_succ_r'	40	5.664343	573	239	1.1.0.0.0.0.1.1.0.0	synth with cache (only 1: intros n m; only 1: nzinduct n; only 1: nzsimpl; only 1: reflexivity; only 1: apply le_0_l; only 1: intro n; only 1: nzsimpl; only 1: now rewrite add_cancel_r; only 1: apply le_0_l; only 1: apply le_0_l).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.Normalize.flip_atom	40	0.007681	2	1	1	synth with cache (only 1: simpl_crelation).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_0_l	40	0.036243	6	5	1.0.0.0.0	synth with cache (only 1: intros a Ha; only 1: destruct (lt_trichotomy a 0) as [LT| [EQ| GT]]; only 1: now rewrite pow_neg_r; only 1: order; only 1: now apply pow_0_l).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_unique	40	1.020883	433	163	0.0.0.1.0.0.1.0.1.0	synth with cache (only 1: intros a b q r Ha (Hb, Hr) EQ; only 1: destruct (div_mod_unique b q (a / b) r (a mod b)); only 1: auto; only 1: apply mod_bound_pos; only 1: order; only 1: order; only 1: rewrite <- div_mod; only 1: order; only 1: order; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareFacts.compare_refl	40	0.010400	7	2	2.3	synth with cache (only 1: autorewrite with order; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareFacts.compare_ngt_iff	40	2.837666	1405	371	0.0.0.0.0.1.0.0.0.0.1.6.0.0.1	synth with cache (only 1: case compare_spec; only 1: intro H; only 1: split; only 1: intro LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: easy; only 1: intro H; only 1: split; only 1: intro LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: easy; only 1: intro H; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareFacts.compare_lt_iff	40	9.606196	7727	1359	0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.3.0.0.5.1	synth with cache (only 1: case compare_spec; only 1: intro EQ; only 1: split; only 1: easy; only 1: intro H; only 1: contradict ltac:(H); only 1: rewrite EQ; only 1: apply irreflexivity; only 1: intro H; only 1: split; only 1: easy; only 1: intro EQ; only 1: reflexivity || destruct H; only 1: intro H; only 1: split; only 1: easy; only 1: intro EQ; only 1: contradict ltac:(H); only 1: rewrite EQ; only 1: apply irreflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_1_l	40	1.385754	209	52	1.0.6.2	synth with cache (only 1: intro H; only 1: nzsimpl; only 1: order'; only 1: apply le_0_l).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.GenericMinMax.max_r	40	8.198259	5721	1898	0.0.3.3.1.1.2.1.0.0.0.1.1	synth with cache (only 1: intros; only 1: unfold max, gmax; only 1: case compare_spec; only 1: auto with relations; only 1: auto with relations; only 1: intros; only 1: rewrite le_lteq in *; only 1: destruct H as [H| H]; only 1: elim (ge_not_lt x y); only 1: rewrite le_lteq in *; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectCore.xorPif	40	9.018721	283	39	0.0.12.3	synth with cache (only 1: intro H; only 1: intuition; only 1: by case Hb; auto; only 1: by case Hb; auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_false	40	1.831420	431	188	1.1.0.1.0.0.0.0.0	synth with cache (only 1: intros a n; only 1: rewrite <- testbit_spec'; only 1: destruct a.[n]; only 1: split; only 1: now try order'; only 1: simpl; only 1: now try order'; only 1: intuition; only 1: now try order').
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.Sig.svalP	40	11.618462	2183	59
coq-tactician-stdlib.8.11.dev	Coq.Logic.JMeq.JMeq_rec	40	0.007126	3	3	0.0.0	synth with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := H'); only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.strong_rec_alt	40	0.008430	2	2	0.0	synth with cache (only 1: intros; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Logic.JMeq.JMeq_rect	40	0.007088	3	3	0.0.0	synth with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := H'); only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.Sig.s2valP	40	0.071946	3	1	2	synth with cache (only 1: by case : u ).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.Sig.s2valP'	40	0.131308	1	1	0	synth with cache (only 1: by case : u ).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.all_sig	40	0.353364	1	1	0	synth with cache (only 1: by move  =>fP; exists (fun x => tag (fP x)) => x; case : (fP x) ).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareFacts.compare_gt_iff	40	13.459397	4971	1083	1.0.0.0.1.0.0.0.0.0.0.5.5.0.1.0.0.0.1	synth with cache (only 1: case compare_spec; only 1: intro H; only 1: split; only 1: easy; only 1: intro LT; only 1: contradict ltac:(H); only 1: intro EQ; only 1: contradict ltac:(LT); only 1: rewrite EQ; only 1: apply irreflexivity; only 1: intro H; only 1: split; only 1: easy; only 1: intro LT; only 1: contradict ltac:(LT); only 1: rewrite H; only 1: apply irreflexivity; only 1: intro H; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_trans_map_distr	40	9.596744	63969	3214	1.27.23.17	synth with cache (only 1: intros A x P H y H0; only 1: intros h1 h2; only 1: destruct h2; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.all_sig2	40	1.433818	1	1	0	synth with cache (only 1: by case /all_tag =>f /all_pair []; exists f).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_preorder	40	4.227470	11444	668	16.9.22.7.58	synth with cache (only 1: split; only 1: repeat red; only 1: iorder; only 1: intros x y H; only 1: iorder).
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.andb_prop	40	41.007349	501203	13218
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.nlt_0_r	40	16.524521	13014	2374	11.14.1	synth with cache (only 1: intro n; only 1: rewrite nlt_ge; only 1: apply le_0_l).
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.eq_true_ind_r	40	0.551220	3848	199	0.39.16	synth with cache (only 1: intros A P H; only 1: destruct 1; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.eq_true_rec_r	40	0.007754	3	3	0.0.0	synth with cache (only 1: intros P b H H0; only 1: destruct H0 in H; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_antisym	40	0.316788	312	95	10.0	synth with cache (only 1: red; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.eq_true_rect_r	40	0.006959	3	3	0.0.0	synth with cache (only 1: intros P b H H0; only 1: destruct H0 in H; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.surjective_pairing	40	0.011215	18	4	1.6	synth with cache (only 1: intros A B []; only 1: split).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.nonpos_pos_cases	40	2.986478	1816	356	1.1.0.5.1.4	synth with cache (only 1: nzinduct n; only 1: left; only 1: order; only 1: intro n; only 1: rewrite lt_succ_r, le_succ_l, !lt_eq_cases; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Triple_as_Couple_Singleton	40	12.697141	7966	3050	1.0.0.2.1.0.0.0.0.0.0.0.0.1.0.0.0.0.0.1	synth with cache (only 1: intros x y z; only 1: apply Extensionality_Ensembles; only 1: red; only 1: split; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: intros x1 H'0; only 1: elim H'0; only 1: auto with sets; only 1: auto with sets; only 1: intros x1 H'0; only 1: elim H'0; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.unique_existence	40	11.313461	96735	3499
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.exists_inhabited	40	0.186534	725	100	5.12	synth with cache (only 1: intros A B []; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.and_cancel_l	40	41.060789	478135	36445
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.inhabited_covariant	40	0.134473	874	74	4.22	synth with cache (only 1: destruct 2; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_stepl	40	0.017161	23	10	0.0.6	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_order	40	1.738837	394	82	1.6.2.2.0	synth with cache (only 1: red; only 1: red; only 1: red; only 1: compute; only 1: iorder).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.lt_not_ge_iff	40	0.008036	1	1	0	synth with cache (only 1: iorder).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_not_gt_iff	40	1.386957	857	204	6.8	synth with cache (only 1: repeat red; only 1: iorder).
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.eq_sigT_eq_dep	40	24.949513	128652	6547	14.39.4.25	synth with cache (only 1: intros n m; only 1: intro x; only 1: inversion 1; only 1: constructor).
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.eq_dep_eq_sigT	40	0.039893	58	13	1.7	synth with cache (only 1: destruct 1; only 1: exact eq_refl).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.recursion_0	40	0.005592	4	1	3	synth with cache (only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.pred_succ	40	0.003935	1	1	0	synth with cache (only 1: exact eq_refl).
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.injective_projections	40	3.047132	11124	1288	1.13.6.4.3.5	synth with cache (only 1: intros A B []; only 1: intros [? ?]; only 1: simpl; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.pred_0	40	0.003656	1	1	0	synth with cache (only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.one_succ	40	0.003498	1	1	0	synth with cache (only 1: exact eq_refl).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ExtensionalityFacts.FunctExt_iff_EqDeltaProjs	40	34.651877	274406	6660
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT.eq_sigT_uncurried	40	40.812046	362499	8867
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.two_succ	40	0.003689	1	1	0	synth with cache (only 1: exact eq_refl).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.add_0_l	40	0.006031	2	2	0.0	synth with cache (only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.add_succ_l	40	0.014777	5	5	0.0.0.0.0	synth with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.lt_or_ge	40	1.951353	436	176	0.0.0.0.3.1.1.0.0	synth with cache (only 1: intros; only 1: rewrite le_lteq; only 1: destruct (OrderTac.TO.compare_spec x y); only 1: destruct (OrderTac.TO.compare_spec x y); only 1: intuition; only 1: auto; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.sub_0_r	40	0.038109	31	11	1.0.6	synth with cache (only 1: induction n; only 1: exact eq_refl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.nle_succ_0	40	8.622263	7637	1590	0.0.17.0	synth with cache (only 1: intro n; only 1: rewrite nle_gt; only 1: rewrite lt_succ_r; only 1: apply le_0_l).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_0_succ	40	0.011356	3	3	0.0.0	synth with cache (only 1: intro n; only 1: rewrite lt_succ_r; only 1: apply le_0_l).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.eq_is_le_ge	40	0.441781	220	83	8.1	synth with cache (only 1: intros; only 1: iorder).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Intersection_commutative	40	3.652388	2295	310	0.2.0.0.0.2.0.0.0.9.10	synth with cache (only 1: intros x y; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x2 H'1; only 1: elim H'1; only 1: auto with sets; only 1: red; only 1: intros x2 H'1; only 1: elim H'1; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.mul_0_l	40	0.005266	2	2	0.0	synth with cache (only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.GenericMinMax.min_l	40	18.505779	17558	6188	0.0.0.1.0.0.0.0.22	synth with cache (only 1: compute; only 1: intros; only 1: case compare_spec; only 1: auto with relations; only 1: auto with relations; only 1: intros; only 1: elim (ge_not_lt y x); only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.eq_sigT_iff_eq_dep	40	2.764468	8406	891	0.4.0.0.23.3	synth with cache (only 1: split; only 1: intros; only 1: dependent rewrite H; only 1: apply eq_dep_intro; only 1: destruct 1; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.eq_sig_eq_dep	40	0.009979	4	3	0.0.1	synth with cache (only 1: intros; only 1: dependent rewrite H; only 1: apply eq_dep_intro).
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.n_Sn	40	40.320301	130447	23850
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.compare_le_iff	40	0.157569	55	20	4.3	synth with cache (only 1: rewrite compare_gt_iff; only 1: iorder).
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.eq_dep_eq_sig	40	0.007195	3	2	0.1	synth with cache (only 1: destruct 1; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.compare_ge_iff	40	0.015293	5	3	0.0.2	synth with cache (only 1: rewrite le_not_gt_iff; only 1: rewrite compare_lt_iff; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Init.Byte.to_bits_of_bits	40	40.098732	35317	4201
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.andb_true_intro	40	40.830296	389391	14456
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT.eq_existT_curried_trans	40	40.483945	213107	8313
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.rew_pair	40	0.006730	2	2	0.0	synth with cache (only 1: destruct H; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT.rew_sigT	40	0.009451	2	2	0.0	synth with cache (only 1: destruct H, u; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.or_cancel_l	40	40.835669	383085	41219
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig.eq_exist_uncurried	40	0.011631	4	4	0.0.0.0	synth with cache (only 1: destruct pq as [p q]; only 1: destruct q; only 1: destruct p; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig.eq_sig_uncurried	40	0.022835	8	6	0.1.0.1.0.0	synth with cache (only 1: destruct u as [u1 u2], v as [v1 v2]; only 1: simpl in *; only 1: destruct pq as [p q]; only 1: destruct q; only 1: destruct p; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.BoolIf.ifP	40	26.395507	7433	166
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.or_cancel_r	40	40.699119	319706	36668
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.eq_sig_iff_eq_dep	40	0.868070	1476	256	0.5.0.0.11.1	synth with cache (only 1: split; only 1: intros; only 1: dependent rewrite H; only 1: apply eq_dep_intro; only 1: destruct 1; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.Dependent_Equality.eq_dep1_dep	40	30.527331	166293	8055	0.41.17.2.33	synth with cache (only 1: inversion 1; only 1: elim eq_sym with (1 := H0); only 1: inversion_clear H; only 1: subst; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.bool_dec	40	40.430437	177763	16138
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.sub_succ_r	40	2.730348	2681	668	0.2.5.0.0.0.3.7	synth with cache (only 1: revert m; only 1: induction n; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: destruct m; only 1: now destruct n; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.ex2.eq_ex2_uncurried	40	0.092925	163	34	0.1.6.0.0	synth with cache (only 1: destruct pq as [p q]; only 1: destruct q; only 1: destruct H; only 1: destruct p; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.ex2.rew_ex2	40	0.009050	2	2	0.0	synth with cache (only 1: destruct H, u; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Berardi.Berardis_paradox.AC_IF	40	40.603664	260539	14169
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NParity.NParityProp.odd_pred	40	9.333578	2279	1003	0.0.1.0.0.0.1.0.2	synth with cache (only 1: cases ltac:(n); only 1: intro H; only 1: exfalso; only 1: now apply H; only 1: intros; only 1: apply eq_iff_eq_true; only 1: rewrite even_spec, odd_spec; only 1: rewrite pred_succ; only 1: now rewrite <- even_spec, even_succ, odd_spec).
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Inverse_Image.Inverse_Image.Acc_lemma	40	40.510818	206130	14685
coq-tactician-stdlib.8.11.dev	Coq.Logic.Berardi.Berardis_paradox.Retracts.AC	40	0.176435	501	76	4.11.1	synth with cache (only 1: intros H; only 1: destruct H; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Logic.PropFacts.injection_is_involution_in_Prop	40	40.652686	292497	10006
coq-tactician-stdlib.8.11.dev	Coq.Logic.StrictProp.Spr1_inj	40	40.900781	418520	8405
coq-tactician-stdlib.8.11.dev	Coq.Sets.Partial_Order.Partial_order_facts.Strict_Rel_Transitive_with_Rel	40	40.463970	196434	12819
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.eq_sigT_fst	40	0.118480	128	41	0.7.1	synth with cache (only 1: intros; only 1: dependent rewrite H; only 1: exact eq_refl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NParity.NParityProp.even_pred	40	0.890141	161	113	0.0.3.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- (succ_pred n)  at 2 by trivial; only 1: symmetry; only 1: apply eq_iff_eq_true; only 1: rewrite even_spec, odd_spec; only 1: apply Odd_succ).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_1_facts.Equiv_from_preorder	40	40.376643	153762	13150
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Disjoint_Union.Wf_Disjoint_Union.acc_A_sum	40	40.259493	92449	17537
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.mult_n_Sm	40	40.197359	75359	14775
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_mul_l	40	8.767683	1340	361	0.0.0.1.1.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros a b c; only 1: destruct (lt_ge_cases c 0) as [Hc| Hc]; only 1: rewrite !(pow_neg_r _ _ Hc); only 1: now nzsimpl; only 1: apply le_ind with (4 := Hc); only 1: solve_proper; only 1: now nzsimpl; only 1: clear c Hc; only 1: intros c Hc IH; only 1: nzsimpl; only 1: rewrite IH; only 1: apply mul_shuffle1; only 1: trivial; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Logic.HLevels.forall_hprop	40	40.357123	147440	14345
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Union.WfUnion.strip_commut	40	40.373275	151994	9973
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.Defs.StrictOrder_Asymmetric	40	40.629956	275515	10642
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Clos_Refl_Trans.clos_rt_idempotent	40	40.438612	184302	13978
coq-tactician-stdlib.8.11.dev	Coq.Lists.Streams.Streams.Str_nth_tl_plus	40	40.283739	95692	12720
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Clos_Refl_Trans.clos_rt_is_preorder	40	41.058743	504085	13755
coq-tactician-stdlib.8.11.dev	Coq.Logic.JMeq.JMeq_ind	40	40.608614	271068	11670
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.Defs.StrictOrder_Asymmetric	40	40.483053	199568	12350
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_1_facts.Equiv_from_order	40	0.022195	14	7	4.0.1	synth with cache (only 1: intros U R H'; only 1: elim H'; only 1: auto  10 with sets).
coq-tactician-stdlib.8.11.dev	Coq.Logic.JMeq.JMeq_rec_r	40	0.007719	4	3	0.1.0	synth with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := JMeq_sym H'); only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_1_facts.contains_is_preorder	40	0.004861	6	1	5	synth with cache (only 1: auto  10 with sets).
coq-tactician-stdlib.8.11.dev	Coq.Logic.JMeq.JMeq_rect_r	40	0.007885	4	3	0.1.0	synth with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := JMeq_sym H'); only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Transitive_Closure.Wf_Transitive_Closure.Acc_clos_trans	40	40.427549	169866	12688
coq-tactician-stdlib.8.11.dev	Coq.Logic.JMeq.JMeq_congr	40	0.022521	38	10	0.3.3	synth with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := JMeq_sym H'); only 1: exact eq_refl).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.BoolIf.ifT	40	29.880011	3268	171	54	synth with cache (only 1: by case : b  => // ->).
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Clos_Refl_Sym_Trans.clos_r_clos_rt	40	0.010977	5	4	0.0.1.0	synth with cache (only 1: red; only 1: induction 1; only 1: auto with sets; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ProofIrrelevanceFacts.ProofIrrelevanceTheory.Eq_rect_eq.eq_rect_eq	40	40.314412	125707	17913
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique_neg	40	0.019817	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: apply div_unique with r; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Eqdep_dec.EqdepDec.nu_constant	40	40.269328	112723	5616
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.le_add_r	40	14.010873	5350	1376	2.0.0.11.1.0.0	synth with cache (only 1: intro n; only 1: intro H; only 1: nzinduct n; only 1: apply le_0_l; only 1: intro; only 1: nzsimpl; only 1: now rewrite 2!lt_eq_cases, <- succ_lt_mono, succ_inj_wd).
coq-tactician-stdlib.8.11.dev	Coq.Logic.PropExtensionalityFacts.PredExt_imp_PropExt	40	40.640200	279830	11580
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT.eq_sigT_uncurried_iff	40	40.448716	197388	10109
coq-tactician-stdlib.8.11.dev	Coq.Program.Combinators.prod_curry_uncurry	40	40.600205	266736	7469
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_2_facts.Rstar_contains_R	40	40.476533	194469	13551
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Transitive_Closure.Wf_Transitive_Closure.Acc_inv_trans	40	0.619087	765	171	1.1.0.17	synth with cache (only 1: induction 1; only 1: destruct 1; only 1: auto with sets; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Hurkens.Generic.Paradox.lemma1	40	40.217689	91649	3719
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.bi_induction	40	8.320679	3678	377	27.2.1	synth with cache (only 1: induction n; only 1: auto; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Transitive_Closure.Wf_Transitive_Closure.wf_clos_trans	40	0.006731	5	2	1.2	synth with cache (only 1: red; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Finite_sets.Ensembles_finis_facts.cardinal_invert	40	40.294848	109688	12823
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.predicate_implication_preorder_obligation_1	40	0.015714	4	3	0.1.0	synth with cache (only 1: induction l; only 1: firstorder; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.nle_succ_diag_l	40	1.248128	371	62	8.0.1.0	synth with cache (only 1: intros n H; only 1: apply (lt_irrefl (S n)); only 1: rewrite lt_succ_r; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.predicate_implication_preorder_obligation_2	40	0.041882	10	7	0.1.0.1.1	synth with cache (only 1: induction l; only 1: firstorder; only 1: intros; only 1: pose (IHl (x x0) (y x0) (z x0)); only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Well_Ordering.WellOrdering.wf_WO	40	40.215384	28295	6562
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.ExtensionalEquality.ftrans	40	34.451345	21748	650
coq-tactician-stdlib.8.11.dev	Coq.Sets.Finite_sets.Ensembles_finis_facts.cardinal_elim	40	0.021063	26	7	0.0.5	synth with cache (only 1: induction 1; only 1: exact eq_refl; only 1: apply Inhabited_add).
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig.eq_sig_uncurried_iff	40	1.247386	1556	352	11.1.0.0.1.0.0.0.0.0	synth with cache (only 1: split; only 1: intro; only 1: subst; only 1: exists eq_refl; only 1: reflexivity; only 1: intro; only 1: destruct u as [u1 u2], v as [v1 v2]; only 1: simpl in *; only 1: apply eq_exist_uncurried; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Lexicographic_Product.WfLexicographic_Product.acc_A_B_lexprod	40	40.189250	64546	13887
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.dec_functional_relation	40	40.285843	110905	12884
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig.rew_sig	40	0.010791	2	2	0.0	synth with cache (only 1: destruct H, u; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_1_facts.same_relation_is_equivalence	40	2.037183	3045	460	2.7.2.1.1.2.4.1.18	synth with cache (only 1: constructor; only 1: auto  10 with sets; only 1: intros x y h; only 1: destruct 2; only 1: reflexivity || destruct H; only 1: auto  10 with sets; only 1: red; only 1: induction 1; only 1: auto  10 with sets).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.Binary.relation_implication_preorder	40	0.009416	6	1	5	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Logic.JMeq.JMeq_eq_dep_id	40	0.008770	4	3	0.0.1	synth with cache (only 1: intros; only 1: destruct H; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.Binary.partial_order_antisym	40	0.019105	5	2	2.1	synth with cache (only 1: red; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Logic.JMeq.eq_dep_id_JMeq	40	0.006992	3	2	0.1	synth with cache (only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT2.eq_existT2_uncurried	40	0.285989	1247	43
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_1_facts.cong_reflexive_same_relation	40	0.228037	388	81	4.10	synth with cache (only 1: intros ? ? ? [Hl Hr]; only 1: auto  10 with sets).
coq-tactician-stdlib.8.11.dev	Coq.Logic.JMeq.eq_dep_JMeq	40	0.011248	6	3	0.2.1	synth with cache (only 1: intros A x P H y H'; only 1: destruct 1; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_inj	40	0.022788	7	3	2.2.0	synth with cache (only 1: destr_bool; only 1: now try order'; only 1: now try order').
coq-tactician-stdlib.8.11.dev	Coq.Program.Subset.subset_eq	40	40.302601	119594	15491
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.Binary.PartialOrder_inverse	40	0.101617	5	2	2.1	synth with cache (only 1: reduce_goal; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_1_facts.cong_symmetric_same_relation	40	0.009704	4	2	1.1	synth with cache (only 1: unfold same_relation; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT2.eq_sigT2_uncurried	40	0.302764	179	47	0.0.0.2.3.1	synth with cache (only 1: destruct pqr as [p q r]; only 1: destruct u as [u1 u2], v as [v1 v2]; only 1: simpl in *; only 1: destruct r, q, p; only 1: simpl; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Logic.FunctionalExtensionality.forall_eq_rect_comp	40	40.838772	397741	5414
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalFacts.rev_rev	40	40.139043	32656	2349
coq-tactician-stdlib.8.11.dev	Coq.Relations.Relations.inverse_image_of_equivalence	40	40.332747	136232	12748
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms_Prop.Acc_pt_morphism	40	40.069408	17469	2518
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_1_facts.cong_antisymmetric_same_relation	40	0.023786	16	6	1.2	synth with cache (only 1: unfold same_relation; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Logic.JMeq.eq_dep_strictly_stronger_JMeq	40	0.842962	4145	124
coq-tactician-stdlib.8.11.dev	Coq.Lists.StreamMemo.MemoFunction.memo_get_correct	40	40.316735	118304	12408
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_2_facts.Rstar_contains_Rplus	40	2.443104	4993	857	1.1.5.0.0.1.8.1.2	synth with cache (only 1: intros U R; only 1: red; only 1: induction 1; only 1: apply Rstar_n with y; only 1: auto with sets; only 1: auto with sets; only 1: apply Rstar_n with y; only 1: auto with sets; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Program.Equality.simplification_existT1	40	40.476531	210086	8064
coq-tactician-stdlib.8.11.dev	Coq.Program.Equality.simplification_K	40	0.007834	7	3	0.4.0	synth with cache (only 1: intros; only 1: rewrite UIP_refl; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.respectful_per_obligation_2	40	40.054841	7587	578
coq-tactician-stdlib.8.11.dev	Coq.Relations.Relations.inverse_image_of_eq	40	0.924598	1848	354	0.1.1.6.4.0.4.1.1.4	synth with cache (only 1: intros; only 1: split; only 1: red; only 1: intros; only 1: trivial; only 1: destruct 1; only 1: intro H; only 1: trivial; only 1: red; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.JMeq.JMeq_eq_dep	40	0.172713	153	40	0.3.5.1	synth with cache (only 1: destruct 1; only 1: intros; only 1: rewrite H; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CEquivalence.Respecting.respecting_equiv_obligation_3	40	40.085434	24715	10606
coq-tactician-stdlib.8.11.dev	Coq.Sets.Uniset.defs.incl_left	40	40.304429	122946	8969
coq-tactician-stdlib.8.11.dev	Coq.Classes.CEquivalence.pointwise_reflexive	40	0.007062	2	1	1	synth with cache (only 1: simpl_crelation).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CEquivalence.pointwise_symmetric	40	0.004242	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CEquivalence.pointwise_transitive	40	0.005454	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Permut.Axiomatisation.cong_congr	40	40.348622	145996	6726
coq-tactician-stdlib.8.11.dev	Coq.Classes.CEquivalence.pointwise_equivalence	40	0.126405	3	1	2	synth with cache (only 1: simpl_crelation).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Uniset.defs.seq_sym	40	0.004967	3	1	2	synth with cache (only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Uniset.defs.union_empty_left	40	0.008796	3	3	0.0.0	synth with cache (only 1: destruct x; only 1: unfold seq; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Program.Subset.match_eq_rewrite	40	2.877544	14738	902	0.8.12.50	synth with cache (only 1: intros A C h1 h2; only 1: intros [Hl Hr]; only 1: subst; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Permut.Axiomatisation.comm_right	40	0.054287	91	17	4.4.1	synth with cache (only 1: intros; only 1: apply cong_right; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Hurkens.Generic.Paradox.lemma2	40	40.086568	30621	2757
coq-tactician-stdlib.8.11.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Inhabited_add	40	40.627104	280203	12881
coq-tactician-stdlib.8.11.dev	Coq.Sets.Permut.Axiomatisation.comm_left	40	0.030488	41	9	1.5.1	synth with cache (only 1: intros; only 1: apply cong_left; only 1: apply op_comm).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Equivalence.Respecting.respecting_equiv_obligation_3	40	40.111379	30814	11183
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssreflect.lock	40	40.665065	288630	5403
coq-tactician-stdlib.8.11.dev	Coq.Bool.BoolEq.Bool_eq_dec.beq_eq_not_false	40	40.196677	72629	6906
coq-tactician-stdlib.8.11.dev	Coq.Classes.Equivalence.pointwise_reflexive	40	0.006904	1	1	0	synth with cache (only 1: simpl_relation).
coq-tactician-stdlib.8.11.dev	Coq.Lists.Streams.Streams.Str_nth_plus	40	40.256453	94417	13228
coq-tactician-stdlib.8.11.dev	Coq.Classes.Equivalence.pointwise_symmetric	40	0.003977	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Equivalence.pointwise_transitive	40	0.006068	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.eq_sigT_sig_eq	40	10.490876	22777	2674	0.21.7.0.2.6.4.1	synth with cache (only 1: split; only 1: intro; only 1: dependent rewrite H; only 1: exists eq_refl; only 1: exact eq_refl; only 1: destruct 1; only 1: subst; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Equivalence.pointwise_equivalence	40	0.115980	2	1	1	synth with cache (only 1: simpl_relation).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Uniset.defs.union_empty_right	40	1.042977	1829	331	0.0.5.3.1.2.0.1	synth with cache (only 1: destruct x; only 1: unfold seq; only 1: unfold union; only 1: simpl; only 1: destr_bool; only 1: destruct b; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_false	40	1.798684	425	146	2.0.1.0.0.2.0.0	synth with cache (only 1: intros a n Hn; only 1: rewrite <- testbit_spec' by trivial; only 1: destruct a.[n]; only 1: split; only 1: now try order'; only 1: simpl; only 1: now try order'; only 1: now try order').
coq-tactician-stdlib.8.11.dev	Coq.Lists.Streams.Streams.sym_EqSt	40
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.b2z_inj	40	0.017873	5	3	1.1.0	synth with cache (only 1: destr_bool; only 1: now try order'; only 1: now try order').
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.Reflexive_partial_app_morphism	40	0.006502	6	2	2.2	synth with cache (only 1: apply H; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalFacts.nzhead_revapp_0	40	40.101889	31393	8654
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.flip_respectful	40	0.019273	9	4	3	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.eq_sig_fst	40	0.309447	438	102	0.8.1.1	synth with cache (only 1: intros; only 1: change x2 with (projT1 (existT P x2 H2)); only 1: dependent rewrite H; only 1: exact eq_refl).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.contraTF	40	39.257171	286	30	4.17	synth with cache (only 1: Bool.destr_bool; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.flip1	40	0.008687	4	2	1.1	synth with cache (only 1: reduce; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.complement_proper_obligation_1	40	40.073350	9679	918
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.respectful_per_obligation_2	40	40.073469	8038	961
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.flip2	40	0.003499	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.eq_subrelation	40	0.017056	20	6	1.0.5	synth with cache (only 1: reduce; only 1: subst; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.reflexive_proper	40	0.003331	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.proper_eq	40	0.003104	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_3_facts.coherent_symmetric	40	40.142167	42982	13559
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.contraNF	40	40.002319	92	8
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.iff_stepl	40	17.596214	92157	11292	4.4.0.6.0.9.4.2.7	synth with cache (only 1: intros A P H; only 1: destruct 1; only 1: intros [Hl Hr]; only 1: split; only 1: intros; only 1: auto; only 1: intros; only 1: apply Hl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Sumbool.bool_of_sumbool	40	40.714527	325110	12602
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.contraFF	40	40.066179	351	42
coq-tactician-stdlib.8.11.dev	Coq.Init.Wf.Well_founded.FixPoint.Fix_F_inv	40	40.550299	239249	8743
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Clos_Refl_Sym_Trans.clos_rt_clos_rst	40	40.266152	105389	11549
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Clos_Refl_Sym_Trans.clos_rst_idempotent	40	0.112815	108	44	0.0.3.0.0.0.0.0	synth with cache (only 1: red; only 1: induction 1; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets; only 1: apply rst_trans with y; only 1: auto with sets; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset.The_power_set_partial_order.Power_set_PO	40	40.173802	59317	8779
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.proper_proper	40	0.758887	191	63	0.4.2.3	synth with cache (only 1: compute; only 1: intros; only 1: subst; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.predicate_equivalence_equivalence_obligation_3	40	40.046832	6915	878
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareFacts.compare_eq_iff	40	40.186476	64545	9947
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT2.eq_sigT2_uncurried_iff	40	7.914196	10526	1707	19.2.0.1.1.0.0.0.0.0	synth with cache (only 1: split; only 1: intro; only 1: subst; only 1: exists eq_refl; only 1: reflexivity; only 1: reflexivity; only 1: intro H; only 1: destruct u as [u1 u2 u3], v as [v1 v2 v3]; only 1: apply eq_existT2_uncurried; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Hurkens.NoRetractToImpredicativeUniverse.Paradox.paradox	40	2.238588	18714	496
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset.The_power_set_partial_order.Strict_inclusion_is_transitive_with_inclusion	40	40.048383	12950	3059
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.Normalize.proper_normalizes_proper	40	0.171615	85	18	7.3	synth with cache (only 1: reduce_goal; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique	40	10.684018	4373	1564	0.1.0.2.1.0.0.0.1.0.2.1.0	synth with cache (only 1: intros a b q r Hr EQ; only 1: assert (Hb : b ~= 0) by (destruct Hr; intuition; order); only 1: destruct (div_mod_unique b q (a / b) r (a mod b)); only 1: trivial; only 1: destruct Hr; only 1: left; only 1: apply mod_pos_bound; only 1: intuition order; only 1: right; only 1: apply mod_neg_bound; only 1: intuition order; only 1: now rewrite <- div_mod; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Couple_as_union	40	40.091994	35590	1543
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.Binary.relation_equivalence_equivalence	40	40.081110	30359	3468
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.Normalize.flip_atom	40	0.009838	6	3	1.1.1	synth with cache (only 1: hnf; only 1: compute; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.Binary.relation_implication_preorder	40	0.007919	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.Binary.partial_order_antisym	40	0.013267	3	1	2	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersTac.OrderFacts.le_refl	40	40.217069	87840	3417
coq-tactician-stdlib.8.11.dev	Coq.Program.Wf.Well_founded.Fix_eq	40	40.111332	32971	1672
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.Binary.PartialOrder_inverse	40	0.111477	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.GenericMinMax.ge_not_lt	40	40.243555	104319	4012
coq-tactician-stdlib.8.11.dev	Coq.Program.Wf.Well_founded.fix_sub_eq	40	0.018859	6	6	0.0.0.0.0.0	synth with cache (only 1: intro x; only 1: unfold Fix_sub; only 1: rewrite <- Fix_F_eq; only 1: apply F_ext; only 1: intros; only 1: apply Fix_F_inv).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Multiset.multiset_defs.meq_refl	40	0.023115	11	3	6.0	synth with cache (only 1: intro; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.PER_morphism_obligation_1	40	40.099624	21746	16762
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_0_l	40	40.096567	5347	1176
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_pred_l	40	40.194300	10381	1723
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique_pos	40	11.719568	5188	1773	0.0.0.1.4.1.3.0.0.1.0.1	synth with cache (only 1: intros; only 1: destruct (Private_NZDiv.div_mod_unique b q (a / b) r (a mod b)); only 1: left; only 1: auto; only 1: left; only 1: apply mod_pos_bound; only 1: intuition order; only 1: intuition; only 1: rewrite <- div_mod; only 1: order; only 1: order; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.subrelation_partial_order_obligation_1	40	0.013952	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.GenericMinMax.max_l	40	40.240552	86704	7615
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Triple_as_union	40	40.124206	41326	8315
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique_neg	40	0.018959	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: apply mod_unique with q; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZBase.NZBaseProp.succ_inj	40	40.215796	82513	10078
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.PER_type_morphism_obligation_1	40	40.090867	18671	12716
coq-tactician-stdlib.8.11.dev	Coq.Arith.Minus.minus_n_O	40	0.008786	1	1	0	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.Composition.eq_comp	40	40.154398	61512	2400
coq-tactician-stdlib.8.11.dev	Coq.Structures.Orders.Compare2EqBool.eqb_eq	40	40.149828	50644	12688
coq-tactician-stdlib.8.11.dev	Coq.Arith.Gt.gt_n_S	40	0.007517	1	1	0	synth with cache (only 1: apply Nat.succ_lt_mono).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Gt.gt_S_n	40	0.006536	2	1	1	synth with cache (only 1: apply Nat.succ_lt_mono).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_0_r	40	40.103139	26435	5633
coq-tactician-stdlib.8.11.dev	Coq.Arith.EqNat.eq_nat_refl	40	0.363806	147	26	0.1.3.9	synth with cache (only 1: Nat.induct n; only 1: constructor; only 1: intro p; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.eq_dec	40	0.018705	1	1	0	synth with cache (only 1: decide equality).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.xI_succ_xO	40	0.006681	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_pred_r	40	40.240822	9864	2797
coq-tactician-stdlib.8.11.dev	Coq.Sets.Uniset.defs.union_comm	40	6.001127	10962	1795	19.7.0	synth with cache (only 1: unfold seq; only 1: simpl; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Structures.Orders.OT_to_Full.le_lteq	40	0.036909	27	7	3	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_succ_comm	40	0.083856	7	6	0.1.0.0.0.0	synth with cache (only 1: intros n m; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_succ_r	40	40.097234	18191	5501
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.pred_double_spec	40	0.007116	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_pos	40	0.057001	31	13	0.0.0.0.1.1	synth with cache (only 1: unfold sgn; only 1: intros; only 1: destruct (compare_spec 0 n); only 1: order; only 1: order; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericAbs.abs_eq	40	40.328631	23223	2536
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_0_sub	40	40.236200	7770	3692
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_neg	40	0.064260	25	11	0.0.0.0.0.1	synth with cache (only 1: unfold sgn; only 1: intros; only 1: destruct (compare_spec 0 n); only 1: order; only 1: order; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Lt.lt_le_S	40	0.012920	5	2	3.0	synth with cache (only 1: intro H; only 1: Nat.order).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Lt.lt_n_Sm_le	40	0.005354	1	1	0	synth with cache (only 1: apply le_S_n).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.zerop	40	0.017586	8	4	4.0.0.0	synth with cache (only 1: destruct n; only 1: now left; only 1: right; only 1: apply Nat.lt_0_succ).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.proper_sym_flip	40	0.220966	71	13	6.4	synth with cache (only 1: intros A B R R' HRR' S S' HSS' f g; only 1: simpl_crelation).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_0_l	40	40.267083	14890	2097
coq-tactician-stdlib.8.11.dev	Coq.Arith.Lt.le_lt_n_Sm	40	0.013901	5	3	0.2.0	synth with cache (only 1: induction 1; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_wf_0	40	40.342651	27822	4681
coq-tactician-stdlib.8.11.dev	Coq.Arith.Div2.ind_0_1_SS	40	0.756102	487	144	1.0.0.0.0.0.2.2	synth with cache (only 1: intros A A_wd A0 AS; only 1: assert (D : forall n, A n /\ A (S n)); only 1: Nat.induct ltac:(n); only 1: auto; only 1: intros n [IH1 IH2]; only 1: auto; only 1: intro n; only 1: exact (proj1 (D n))).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Lt.le_not_lt	40	0.012065	2	2	0.0	synth with cache (only 1: intro H; only 1: Nat.order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_pred_l	40	0.125146	7	4	0.3.0.0	synth with cache (only 1: intros n m; only 1: rewrite <- (succ_pred n)  at 2; only 1: rewrite <- 2!add_opp_r; only 1: now rewrite add_succ_l, pred_succ).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Lt.lt_not_le	40	0.012811	3	2	0.1	synth with cache (only 1: intro H; only 1: Nat.order).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.Injections.can_inj	40	0.255845	3	1	2	synth with cache (only 1: by move  =>fK x y /(congr1 g); rewrite !fK => [[]]).
coq-tactician-stdlib.8.11.dev	Coq.Lists.Streams.Streams.trans_EqSt	40
coq-tactician-stdlib.8.11.dev	Coq.Arith.Lt.neq_0_lt	40	0.012063	3	2	1.0	synth with cache (only 1: intro H; only 1: Nat.auto').
coq-tactician-stdlib.8.11.dev	Coq.Arith.Lt.lt_0_neq	40	0.013183	4	4	0.0.0.0	synth with cache (only 1: intro H; only 1: intro H1; only 1: rewrite H1 in H; only 1: false_hyp H Nat.lt_irrefl).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectCore.introNTF	40	40.240076	963	63
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_comm	40	0.392142	79	40	2.1.0.0.0.0	synth with cache (only 1: intros n m; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Lt.lt_n_S	40	0.039163	16	3	4	synth with cache (only 1: apply le_n_S).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Lt.lt_S_n	40	0.011833	10	2	2	synth with cache (only 1: apply Nat.succ_lt_mono).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.proper_sym_flip	40	0.019478	21	4	4.3	synth with cache (only 1: intros; only 1: simpl_relation).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Le.le_n_0_eq	40	0.027085	16	4	0.1	synth with cache (only 1: inversion 1; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_lt_mono_nonpos	40	40.238470	13845	3514
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_1_r	40	0.024286	2	2	0.0	synth with cache (only 1: intro n; only 1: now nzsimpl').
coq-tactician-stdlib.8.11.dev	Coq.Sets.Uniset.defs.union_ass	40	0.470807	356	149	0.1.0.3.0.0.0	synth with cache (only 1: unfold seq; only 1: unfold charac; only 1: unfold union; only 1: simpl; only 1: destruct x; only 1: destruct y; only 1: auto with bool).
coq-tactician-stdlib.8.11.dev	Coq.Structures.Equalities.HasEqDec2Bool.eqb_eq	40	40.176062	62209	4009
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.pred_double_succ	40	0.237413	23	14	0.0.0.0.1.0.1	synth with cache (only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.bet_eq	40	2.209037	1960	382	13.4.0.4	synth with cache (only 1: intros a b; only 1: intros EQ; only 1: subst; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.funind.Recdef.le_lt_SS	40	0.296231	259	39	15	synth with cache (only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericAbs.abs_neq	40	40.327728	11202	1329
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_id	40	0.087197	164	19	6.10	synth with cache (only 1: apply max_r; only 1: intuition order).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.double_succ	40	0.032690	7	7	0.0.0.0.0.0.0	synth with cache (only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.pred_double_xO_discr	40	0.025136	1	1	0	synth with cache (only 1: now destruct p).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.succ_not_1	40	0.023921	1	1	0	synth with cache (only 1: now destruct p).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_succ_r	40	40.049542	5707	1881
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_wd	40	40.310782	8496	1972
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.respectful_morphism	40	40.080981	13155	2221
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectCore.equivPif	40	40.128226	1067	68
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_opp	40	40.356728	11463	4650
coq-tactician-stdlib.8.11.dev	Coq.Arith.Lt.S_pred	40	1.012675	755	157	0.0.13	synth with cache (only 1: inversion 1; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.In_compat	40	0.899669	279	88	0.2.1.1.0.2.1	synth with cache (only 1: apply proper_sym_impl_iff_2; only 1: intuition; only 1: congruence; only 1: reduce; only 1: subst; only 1: rewrite <- H; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_mono_l	40	40.115478	7844	2183
coq-tactician-stdlib.8.11.dev	Coq.Arith.Lt.S_pred_pos	40	0.029586	18	5	0.0.3	synth with cache (only 1: inversion 1; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.proper_sym_flip_2	40	1.011335	535	113	3.6.2.2	synth with cache (only 1: intros A R1 Sym B R2 f Hf; only 1: intros H; only 1: compute; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.eq_equiv	40	0.066280	92	8	14	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.gt_eq_gt_dec	40	1.231374	230	98	0.0.0.1.1.0.0.0.0.0.1	synth with cache (only 1: induction n in m |- *; only 1: destruct m; only 1: auto with arith; only 1: auto with arith; only 1: destruct m; only 1: auto with arith; only 1: destruct (IHn m) as [H| H]; only 1: destruct H; only 1: auto with arith; only 1: auto with arith; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectNegCore.elimTFn	40	40.023929	692	77
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectNegCore.introTFn	40	40.120789	1013	42
coq-tactician-stdlib.8.11.dev	Coq.Arith.Lt.lt_pred_n_n	40	0.194409	110	46	6.0.0.0	synth with cache (only 1: destruct n; only 1: inversion 1; only 1: intros _; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_twice_r	40	40.236235	8402	610
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.pred_succ	40	0.885478	330	114	0.0.0.0.0.0.0.0.0.3.0.4	synth with cache (only 1: induction p; only 1: simpl; only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: now f_equal).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Lt.lt_pred	40	0.379439	461	78	0.1.0.3.5.3	synth with cache (only 1: induction 1; only 1: auto; only 1: destruct m; only 1: trivial; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Multiset.multiset_defs.meq_trans	40	3.219392	1049	265	0.3.2.3.0.2	synth with cache (only 1: destruct x; only 1: unfold meq; only 1: intros x y z; only 1: intros; only 1: setoid_rewrite  <- H; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Multiset.multiset_defs.meq_sym	40	0.019818	9	5	1.0.1.0	synth with cache (only 1: unfold meq; only 1: destruct x; only 1: intros; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Multiset.multiset_defs.munion_empty_left	40	0.012494	3	3	0.0.0	synth with cache (only 1: destruct x; only 1: unfold meq; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.succ_max_distr	40	40.313828	5341	510
coq-tactician-stdlib.8.11.dev	Coq.Sets.Multiset.multiset_defs.munion_empty_right	40	0.014927	5	4	1.0.0.0	synth with cache (only 1: unfold meq; only 1: unfold munion; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.between_le	40	2.250011	1779	293	1.0.16	synth with cache (only 1: induction 1; only 1: auto with arith; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_pred	40	40.050548	6146	2365
coq-tactician-stdlib.8.11.dev	Coq.Logic.JMeq.JMeq_ind_r	40	28.457855	203218	7763	2.23.8.45.19.16.20	synth with cache (only 1: intro z; only 1: intro x; only 1: intros n m; only 1: intros H H'; only 1: revert m; only 1: case JMeq_eq with (1 := H'); only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.proper_sym_impl_iff	40	0.428811	47	27	4.3	synth with cache (only 1: simpl_relation; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_0_sub	40	40.241958	7008	3666
coq-tactician-stdlib.8.11.dev	Coq.Sets.Multiset.multiset_defs.munion_comm	40	0.155136	99	43	0.2.3.0	synth with cache (only 1: unfold meq; only 1: intros; only 1: simpl; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.Even_wd	40	40.204579	39685	5286
coq-tactician-stdlib.8.11.dev	Coq.Logic.FunctionalExtensionality.f_equal__functional_extensionality_dep_good	40	12.575434	49959	923
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.succ_pred	40	1.073816	379	168	1.1.0.0.0.7.0	synth with cache (only 1: intro H; only 1: induction p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply succ_pred_double; only 1: now f_equal).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_1_r	40	0.026597	8	6	0.0.0.0.0.2	synth with cache (only 1: destruct p; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now f_equal).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_1_l	40	0.009685	1	1	0	synth with cache (only 1: now destruct p).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.plus_assoc_reverse	40	2.798047	538	127	10.0.0.0.0	synth with cache (only 1: nzinduct n; only 1: now Nat.nzsimpl; only 1: intro; only 1: Nat.nzsimpl; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectNegCore.equivPifn	40	40.162096	1414	54
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectNegCore.xorPifn	40	40.041736	1542	108
coq-tactician-stdlib.8.11.dev	Coq.Logic.FunctionalExtensionality.f_equal__functional_extensionality_dep_good__fun	40	0.127452	174	26	0.9.2	synth with cache (only 1: apply forall_eq_rect with (H := H); only 1: rewrite functional_extensionality_dep_good_refl; only 1: exact eq_refl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_assoc	40	2.045108	565	205	0.0.0.1.3.1.0.1	synth with cache (only 1: Bool.destr_bool; only 1: nzinduct n; only 1: apply succ_inj; only 1: nzsimpl; only 1: now f_equiv; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).
coq-tactician-stdlib.8.11.dev	Coq.Logic.FunctionalExtensionality.eta_expansion_dep	40	0.003392	2	1	1	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Logic.FunctionalExtensionality.eta_expansion	40	0.002589	1	1	0	synth with cache (only 1: exact eq_refl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_spec_nonneg	40	40.186498	41968	4104
coq-tactician-stdlib.8.11.dev	Coq.funind.Recdef.Splus_lt	40	1.882161	2335	203	19.1.4.13	synth with cache (only 1: destruct y; only 1: Nat.nzsimpl; only 1: apply le_n_S, le_0_n; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.funind.Recdef.SSplus_lt	40	0.029535	14	3	7	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_le_incl	40	40.172206	47756	5514
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mod_unique	40	40.122279	17841	4570
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.even_or_odd	40	2.351001	4174	318	18.10.0.22	synth with cache (only 1: induction n; only 1: left; only 1: firstorder; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.introT	40	40.115157	2690	158
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_nonneg	40	40.115371	8066	2442
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.equivP	40	0.771844	63	8	0.11	synth with cache (only 1: intuition; only 1: by case : Pb ; constructor; auto).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.even_odd_dec	40	0.023517	5	5	0.0.0.0.0	synth with cache (only 1: induction n; only 1: auto with arith; only 1: elim IHn; only 1: auto with arith; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.introF	40	40.110692	2723	226
coq-tactician-stdlib.8.11.dev	Coq.Arith.Peano_dec.O_or_S	40	3.384512	4667	382	0.15.8.7.10	synth with cache (only 1: induction n; only 1: intuition; only 1: clear IHn; only 1: constructor; only 1: now exists n).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_0_l'	40	40.102440	8334	1121
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_bound_or	40	4.276292	1504	511	2.0.1.0.3.2.0.0	synth with cache (only 1: intros; only 1: destruct (abs_spec b) as [(LE, EQ)| (LE, EQ)]; only 1: left; only 1: apply mod_pos_bound; only 1: order; only 1: destruct (mod_neg_bound a b); only 1: order; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.Odd_wd	40	40.261967	22104	2847
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_succ_0	40	40.265374	46055	4597
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_upper_bound	40	40.300146	25031	5882
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.rwP	40	0.282069	8	1	7	synth with cache (only 1: by case Pb).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Uniset.defs.seq_trans	40	40.216740	80906	7538
coq-tactician-stdlib.8.11.dev	Coq.Sets.Multiset.multiset_defs.munion_ass	40	1.805698	895	388	2.3.0.0.1.0	synth with cache (only 1: unfold meq; only 1: destruct x; only 1: destruct y; only 1: unfold munion; only 1: simpl; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_eq	40	40.230476	15122	3701
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.mod_divide	40	40.284841	23238	4117
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.divide_add_cancel_r	40	40.298611	20603	5369
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_1_l	40	40.149057	8443	2224
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_unique	40	40.181075	16989	6539
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_wd	40	40.170781	11100	1981
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_unique	40	40.237536	13303	2619
coq-tactician-stdlib.8.11.dev	Coq.Sets.Uniset.defs.seq_left	40	3.881833	4076	1216	0.1.4.0.3.1.0.1	synth with cache (only 1: unfold seq; only 1: destruct x; only 1: destruct y; only 1: destruct z; only 1: simpl; only 1: intros; only 1: rewrite H; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.neq_0_lt_0	40	23.804185	16017	3238	1.0.2.0.0.0.0.0.2.0.0.0.3.0.2.8	synth with cache (only 1: cases ltac:(n); only 1: split; only 1: intro H; only 1: exfalso; only 1: now apply H; only 1: intro n; only 1: intro H; only 1: eapply Private_OrderTac.Tac.lt_irrefl; only 1: eauto; only 1: intro n; only 1: split; only 1: intro H; only 1: rewrite lt_succ_r; only 1: apply le_0_l; only 1: intro H; only 1: apply neq_succ_0).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.introN	40	40.195390	4420	233
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.recursion_succ	40	24.608497	17675	2723	11.0.1.0.11.0.6.0.3	synth with cache (only 1: intros; only 1: simpl; only 1: induction n; only 1: simpl; only 1: apply H0; only 1: reflexivity || destruct H; only 1: assumption; only 1: simpl; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Multiset.multiset_defs.meq_left	40	0.594334	217	92	1.1.0.3.0	synth with cache (only 1: unfold meq; only 1: simpl; only 1: destruct x; only 1: destruct y; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationPairs.RelCompFun_Instances.RelCompFun_Reflexive	40	0.008868	2	1	1	synth with cache (only 1: simpl_relation).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_pos_l	40	40.154823	8706	2992
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_succ_diag_r	40	40.158065	40662	5050
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationPairs.RelCompFun_Instances.RelCompFun_Symmetric	40	0.004829	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationPairs.RelCompFun_Instances.RelCompFun_Transitive	40	0.034408	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.proper_sym_arrow_iffT	40	0.016742	7	5	0.0.1.0.1	synth with cache (only 1: intros A R Sym f Hf x x' Hxx'; only 1: repeat red in Hf; only 1: split; only 1: eauto; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Uniset.defs.seq_right	40	0.139157	87	44	0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold seq; only 1: unfold union; only 1: unfold charac; only 1: destruct x; only 1: destruct y; only 1: destruct z; only 1: intros; only 1: elim H; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationPairs.RelCompFun_Instances.RelCompFun_Irreflexive	40	0.003812	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Multiset.multiset_defs.meq_right	40	0.034127	9	9	1.0.0.0.0.0.0	synth with cache (only 1: unfold meq; only 1: unfold munion; only 1: unfold multiplicity; only 1: destruct x; only 1: destruct y; only 1: destruct z; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.introNf	40	40.203382	1306	65
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationPairs.RelProd_Instances.RelProd_Reflexive	40	0.021686	1	1	0	synth with cache (only 1: simpl_relation).
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationPairs.RelProd_Instances.RelProd_Symmetric	40	0.018332	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_eq	40	40.194540	15190	3396
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.introTn	40	40.254235	2733	183
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationPairs.RelProd_Instances.RelProd_Transitive	40	0.218629	10	3	0.5	synth with cache (only 1: compute; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.eq_0_gt_0_cases	40	5.121168	2712	585	0.1.1.0.4.9	synth with cache (only 1: cases ltac:(n); only 1: auto with relations; only 1: intro n; only 1: right; only 1: rewrite lt_succ_r; only 1: apply le_0_l).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Gt.gt_pred	40	0.005449	1	1	0	synth with cache (only 1: apply Nat.lt_succ_lt_pred).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Gt.le_not_gt	40	0.020378	9	2	1	synth with cache (only 1: apply Nat.le_ngt).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Wf_nat.Well_founded_Nat.well_founded_gtof	40	1.575573	994	551	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: assert (H : forall (n : nat) (a : A), f a < n -> Acc ltof a); only 1: induction n; only 1: intros; only 1: absurd (f a < 0); only 1: auto with arith; only 1: auto with arith; only 1: intros a Ha; only 1: apply Acc_intro; only 1: unfold ltof at 1; only 1: intros b Hb; only 1: apply IHn; only 1: apply Nat.lt_le_trans with (f a); only 1: auto with arith; only 1: auto with arith; only 1: intros a; only 1: apply (H (S (f a))); only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Gt.gt_not_le	40	0.065520	16	10	2	synth with cache (only 1: apply Nat.lt_nge).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Gt.le_S_gt	40	0.008487	3	2	1.0	synth with cache (only 1: intro H; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Gt.gt_S_le	40	0.004510	1	1	0	synth with cache (only 1: apply Peano.le_S_n).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_spec	40	40.288413	96653	6656
coq-tactician-stdlib.8.11.dev	Coq.Arith.Gt.gt_le_S	40	0.005869	1	1	0	synth with cache (only 1: apply Nat.le_succ_l).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.nil_cons	40	0.020966	5	2	2.1	synth with cache (only 1: intros; only 1: congruence).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Gt.le_gt_S	40	0.013491	8	3	0.5.0	synth with cache (only 1: induction 1; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationPairs.RelProd_Instances.FstRel_ProdRel	40	0.046435	26	10	7	synth with cache (only 1: firstorder  (subst; auto)).
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationPairs.RelProd_Instances.SndRel_ProdRel	40	0.009600	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationPairs.RelProd_Instances.FstRel_sub	40	0.007692	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationPairs.RelProd_Instances.SndRel_sub	40	0.007429	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationPairs.RelProd_Instances.pair_compat	40	0.007933	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.introFn	40	40.282344	1691	103
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationPairs.RelProd_Instances.fst_compat	40	0.007241	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.neq_succ_diag_l	40	40.301603	106172	8007
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationPairs.RelProd_Instances.snd_compat	40	0.014729	3	3	0.0.0	synth with cache (only 1: intros (x, y) (x', y') (Hx, Hy); only 1: compute in *; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.neq_succ_diag_r	40	40.193812	61607	7956
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_bound_abs	40	40.219381	29040	3902
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_pos_r	40	40.113299	8215	4206
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.eq_dec	40	0.025703	1	1	0	synth with cache (only 1: decide equality).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mod_unique	40	40.160753	14739	3445
coq-tactician-stdlib.8.11.dev	Coq.Arith.Mult.mult_is_O	40	8.381753	7100	965	9.0.10.0.3.0.3	synth with cache (only 1: destruct n; only 1: intro H; only 1: intuition; only 1: intro H; only 1: destruct m; only 1: now right; only 1: now left).
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationPairs.RelProd_Instances.RelCompFun_compat	40	0.896709	134	28	0.13	synth with cache (only 1: compute in *; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT.eq_sigT_rect	40	26.454180	148216	3654
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.nlt_succ_diag_l	40	40.113175	15779	1637
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.Proper_instance_0	40	40.165172	16179	2409
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareFacts.compare_compat	40	40.152694	48161	5150
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_eq	40	40.043194	11193	2711
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.hd_error_some_nil	40	0.024522	13	6	1.0.0.1	synth with cache (only 1: induction l as [| a tail]; only 1: intro H; only 1: firstorder  discriminate; only 1: firstorder  discriminate).
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT2.rew_sigT2	40	0.012146	2	2	0.0	synth with cache (only 1: destruct H, u; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.respectful_morphism	40	40.083170	5521	1201
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.nat_rect_wd	40	8.449173	4240	769	0.4.2.0.3.0.7.1	synth with cache (only 1: red; only 1: intros m H1 H2; only 1: induction n; only 1: red; only 1: auto; only 1: simpl; only 1: red; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig2.eq_exist2_uncurried	40	0.014117	5	4	0.0.0.1	synth with cache (only 1: destruct pqr as [p q r]; only 1: destruct r, q, p; only 1: simpl in *; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique_pos	40	9.512449	3785	1296	0.0.1.1.0.0.1.0.1.1.3.1	synth with cache (only 1: intros a b q r Hr EQ; only 1: assert (Hb : b ~= 0) by (destruct Hr; intuition; order); only 1: destruct (Private_NZDiv.div_mod_unique b q (a / b) r (a mod b)); only 1: left; only 1: auto; only 1: left; only 1: apply mod_pos_bound; only 1: intuition order; only 1: rewrite <- div_mod; only 1: order; only 1: order; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig2.eq_sig2_uncurried	40	0.034418	8	6	0.0.0.2.0.0	synth with cache (only 1: destruct u as [u1 u2 u3], v as [v1 v2 v3]; only 1: simpl in *; only 1: destruct pqr as [p q r]; only 1: destruct r, q, p; only 1: simpl; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow_sub_r	40	40.083944	23981	4611
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_opp_opp	40	40.167180	27896	3813
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique	40	40.282457	21476	4754
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow_div_l	40	40.085224	24951	5349
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.hd_error_nil	40	0.006709	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.hd_error_cons	40	0.012242	8	3	2.3.0	synth with cache (only 1: unfold hd_error; only 1: intros; only 1: firstorder  discriminate).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.in_eq	40	0.007807	2	2	0.0	synth with cache (only 1: intros; only 1: firstorder  discriminate).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_neg_l	40	40.155854	13871	5613
coq-tactician-stdlib.8.11.dev	Coq.Sets.Multiset.multiset_defs.meq_congr	40	2.698622	833	304	1.0.6.1.0	synth with cache (only 1: unfold meq; only 1: destruct z; only 1: compute; only 1: destruct y; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.in_cons	40	0.035953	10	6	2.0.2	synth with cache (only 1: destruct l as [| x xs]; only 1: induction 1; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_opp_l	40	40.076752	22213	4207
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.not_in_cons	40	0.047520	16	7	5.1	synth with cache (only 1: simpl; only 1: now intuition).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.in_nil	40	0.007614	2	2	0.0	synth with cache (only 1: intro n; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_mono	40	40.106436	12217	3156
coq-tactician-stdlib.8.11.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Add_not_Empty	40	40.384972	152124	14654
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.exists_div2	40	40.229671	15918	4516
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.flip_arrow	40	40.143602	9845	1398
coq-tactician-stdlib.8.11.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Singleton_inv	40	0.010652	4	3	0.0.1	synth with cache (only 1: intros B C H'; only 1: rewrite H'; only 1: exact eq_refl).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Singleton_intro	40	0.008150	4	3	0.0.1	synth with cache (only 1: intros B C H'; only 1: rewrite H'; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.le_le_S_dec	40	4.790227	3670	471	5.0.1.9.5.4.0.5.18	synth with cache (only 1: induction n in m |- *; only 1: left; only 1: auto with arith; only 1: destruct m; only 1: auto with arith; only 1: elim (IHn m); only 1: left; only 1: auto with arith; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_mono_r	40	0.504762	34	18	1.0.0.0.0.1	synth with cache (only 1: intros; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite <- succ_le_mono).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.forall_exists_unique_domain_coincide	40	40.512856	212242	20254
coq-tactician-stdlib.8.11.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Union_inv	40	0.123560	96	31	0.1.0.1.4	synth with cache (only 1: destruct 1; only 1: left; only 1: auto with sets; only 1: right; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareFacts.compare_antisym	40	40.127781	32979	8465
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_unique_exact	40	40.276383	49226	3262
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Distributivity_l	40	9.222253	6978	2153	1.0.1.0.0.0.0.0.0.0.0.3.2.0.0.0.0.0.0	synth with cache (only 1: intros A B C; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: intros x0 H'0; only 1: elim H'0; only 1: auto with sets; only 1: auto with sets; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: intros x0 H'0; only 1: elim H'0; only 1: auto with sets; only 1: intros x0 H'0; only 1: elim H'0; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_1_l	40	40.170786	29341	4057
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_nonneg	40	40.070165	5992	3166
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.elimT	40	40.137428	4269	228
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.le_ge_dec	40	0.456140	163	82	0.1.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction n in m |- *; only 1: left; only 1: auto with arith; only 1: destruct m; only 1: right; only 1: auto with arith; only 1: elim (IHn m); only 1: left; only 1: auto with arith; only 1: right; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NIso.Homomorphism.natural_isomorphism_wd	40	40.209939	56285	9379
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.le_gt_dec	40	0.017558	4	4	0.0.0.0	synth with cache (only 1: elim (le_lt_dec n m); only 1: intro; only 1: intuition Nat.order; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.in_inv	40	0.119196	6	2	2.2	synth with cache (only 1: intros; only 1: CRelationClasses.simpl_crelation).
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig2.eq_sig2_uncurried_iff	40	1.641460	1079	375	8.1.0.1.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intro; only 1: subst; only 1: exists eq_refl; only 1: reflexivity; only 1: reflexivity; only 1: intro; only 1: destruct u as [u1 u2 u3], v as [v1 v2 v3]; only 1: apply eq_exist2_uncurried; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_0_r	40	40.242024	20860	4078
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_wd	40	40.221540	25723	3702
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_0_succ	40	40.248020	38601	4721
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.proper_sym_arrow_iffT_2	40	0.022952	7	5	0.0.1.0.1	synth with cache (only 1: intros A R Sym B R' Sym' f Hf x x' Hxx' y y' Hyy'; only 1: repeat red in Hf; only 1: split; only 1: eauto; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_succ_r	40	40.263996	25379	2757
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_r	40	40.253657	8783	1820
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssreflect.not_locked_false_eq_true	40	17.041378	50573	1917
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_spec'	40	40.302839	28719	3948
coq-tactician-stdlib.8.11.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Add_inv	40	0.974164	1627	368	1.9.2.3.1	synth with cache (only 1: intros B C x H'; only 1: elim H'; only 1: auto with sets; only 1: destruct 1; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_unique	40	40.243468	22949	5177
coq-tactician-stdlib.8.11.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Intersection_inv	40	0.008879	4	3	0.0.1	synth with cache (only 1: intros B C x H'; only 1: elim H'; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.quot_div_nonneg	40	40.335449	27035	5200
coq-tactician-stdlib.8.11.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Couple_inv	40	0.011249	8	4	0.2.1.1	synth with cache (only 1: intros B C x H'; only 1: elim H'; only 1: auto with sets; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_compat	40	40.195148	8941	1508
coq-tactician-stdlib.8.11.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Setminus_intro	40	0.005461	3	1	2	synth with cache (only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBase.ZBaseProp.pred_inj	40	40.229181	27620	5656
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_mod_nonneg	40	40.188576	20971	5038
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_spec	40	40.282533	8372	1755
coq-tactician-stdlib.8.11.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Strict_Included_intro	40	0.008974	11	3	5.1	synth with cache (only 1: intros B C H'; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.elimF	40	40.043773	3735	238
coq-tactician-stdlib.8.11.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Strict_Included_strict	40	0.192339	422	86	5.4.4	synth with cache (only 1: red; only 1: destruct 1; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Sorted.defs.HdRel_inv	40	0.032735	17	4	0.2	synth with cache (only 1: inversion 1; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_wd	40	40.176709	30861	4428
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_true	40	40.377626	23656	3125
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Sorted.defs.Sorted_inv	40	0.016540	5	2	3.0	synth with cache (only 1: inversion 1; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.app_nil_l	40	0.008555	2	2	0.0	synth with cache (only 1: simpl; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.app_nil_end	40	0.023822	7	6	0.0.0.0.0.1	synth with cache (only 1: induction l; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: f_equal; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_wd	40	40.163341	18927	1628
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.app_assoc_reverse	40	0.028485	7	7	0.0.0.0.0.0.0	synth with cache (only 1: intros l m n; only 1: induction l; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: f_equal; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.app_comm_cons	40	0.009716	2	2	0.0	synth with cache (only 1: intros l m n; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_compat	40	40.207820	4927	574
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NAdd.NAddProp.eq_add_0	40	40.181071	16897	3680
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.lt_succ_r	40	27.495905	29682	7635	0.0.0.11.0.1.13	synth with cache (only 1: compute; only 1: constructor; only 1: exact (le_pred (S n) (S m)); only 1: induction 1; only 1: constructor; only 1: constructor; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_spec_alt	40	40.135312	13644	1590
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBase.ZBaseProp.pred_inj_wd	40	1.071542	381	162	0.0.2.2.1.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros; only 1: apply succ_wd in H; only 1: now rewrite 2!succ_pred in H; only 1: intros; only 1: now f_equiv).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.app_assoc	40	0.491058	296	98	1.1.3.0.0.0.0	synth with cache (only 1: induction l; only 1: intros; only 1: reflexivity; only 1: simpl; only 1: intros; only 1: f_equal; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_same	40	40.273866	29238	2557
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.app_eq_nil	40	0.538907	409	87	0.0.10	synth with cache (only 1: destruct l; only 1: auto; only 1: firstorder  discriminate).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.succ_pred_or	40	11.227242	5694	1826	5.0.0.0.0.0.0.0.0.2.0.0.2.14	synth with cache (only 1: destruct p; only 1: right; only 1: simpl; only 1: trivial; only 1: right; only 1: simpl; only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: now left).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_0_r	40	40.143022	12112	1647
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.app_length	40	0.310262	191	72	2.2.0.0.2	synth with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_max_l	40	4.498831	3731	700	0.0.4.4.6.13	synth with cache (only 1: rewrite le_lteq; only 1: destruct (max_spec n m); only 1: left; only 1: intuition; only 1: order; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_max_r	40	0.010871	2	1	1	synth with cache (only 1: solve_max).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_pred_r	40	40.192996	5028	1601
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_l_iff	40	0.081388	36	15	4.2	synth with cache (only 1: repeat red; only 1: solve_max).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_r_iff	40	0.037383	14	3	1	synth with cache (only 1: solve_max).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_0	40	40.242005	10638	4271
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit0_mod	40	0.923314	315	114	0.0.0.1.0.0.0.0.1	synth with cache (only 1: intros; only 1: destruct (exists_div2 a) as (a', (b, H)); only 1: rewrite H  at 1; only 1: rewrite testbit_0_r; only 1: apply mod_unique with a'; only 1: destruct b; only 1: order'; only 1: order'; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neg_pos_cases	40	40.188332	29102	3137
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_r	40	40.200327	6805	1617
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.in_or_app	40	0.397562	311	119	4.0.2.0.0.0	synth with cache (only 1: intros l m a; only 1: elim l; only 1: simpl; only 1: tauto; only 1: simpl; only 1: firstorder  discriminate).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.square_lt_mono	40	40.237023	9997	4027
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_0_l	40	1.072964	387	127	0.0.0.4.0.2.0	synth with cache (only 1: intro n; only 1: intro H; only 1: symmetry; only 1: apply div_unique_exact; only 1: order; only 1: order; only 1: now nzsimpl').
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_succ	40	40.225915	15979	2981
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.max_0_l	40	40.402748	44082	2308
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_bit0	40	22.461642	3721	855	1.1.12.4.3	synth with cache (only 1: intros; only 1: apply b2n_inj; only 1: rewrite testbit_spec'; only 1: nzsimpl; only 1: now rewrite mod_small by (destruct a0; order')).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.succ_min_distr	40	40.376047	7398	1275
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_eqb	40	40.047946	12800	2918
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.app_cons_not_nil	40	3.209135	4159	559	4.0.15.5	synth with cache (only 1: intros n m H; only 1: induction n; only 1: discriminate; only 1: discriminate).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_0_l	40	40.189724	19075	1601
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_spec'	40	40.249456	18062	4071
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.nth_S_cons	40	0.008878	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.strong_rec0_wd	40	40.375074	4407	1537
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_square	40	0.107849	23	8	0.5.0	synth with cache (only 1: intro n; only 1: apply sqrt_square; only 1: apply le_0_l).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.max_0_r	40	40.415240	62558	1833
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_0	40	40.228654	9253	4097
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.divide_sub_r	40	40.320337	21394	3623
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_le_mono_nonpos	40	40.277599	8539	2819
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_div_mul_exact	40	40.214089	16099	2889
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_unique'	40	40.134456	12689	2671
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_nonneg_nonpos	40	0.035770	10	6	1.0.0	synth with cache (only 1: intros; only 1: rewrite <- (mul_0_l m); only 1: now apply mul_le_mono_nonpos_r).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.lt_not_eq	40	0.019925	3	2	1.0	synth with cache (only 1: intro H; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.lt_eq	40	0.018462	2	1	1	synth with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.eq_lt	40	0.019446	2	1	1	synth with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).
coq-tactician-stdlib.8.11.dev	Coq.micromega.Refl.make_impl_true	40	2.600811	4354	522	4.10.1.21	synth with cache (only 1: induction l as [| x xs Hrec]; only 1: constructor; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_xO	40	0.012075	3	2	1.0	synth with cache (only 1: simpl; only 1: f_equal).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.le_eq	40	0.226524	15	4	4	synth with cache (only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.eq_le	40	0.106981	3	1	2	synth with cache (only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_opp_l	40	40.165579	11492	3633
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.neq_eq	40	0.107499	3	1	2	synth with cache (only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_comm	40	13.757882	2394	806	11.0.0.0.0.0	synth with cache (only 1: intros n m; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite add_cancel_r).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_add	40	5.391050	4051	1055	0.8.12	synth with cache (only 1: unfold Add at 1; only 1: unfold Add at 1; only 1: auto  9 with sets).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.eq_neq	40	0.113639	3	1	2	synth with cache (only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_diag	40	40.293080	17749	3277
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.le_lt_trans	40	0.020175	9	2	2	synth with cache (only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.lt_le_trans	40	0.019762	9	2	2	synth with cache (only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.eq_dec	40	0.095899	9	3	5.0	synth with cache (only 1: decide equality; only 1: decide equality).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.le_trans	40	0.106389	3	1	2	synth with cache (only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.double_bits_succ	40	0.008365	2	2	0.0	synth with cache (only 1: intros; only 1: apply testbit_even_succ, le_0_l).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.prop_degen_ext	40	40.589030	247689	14149
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.forall_exists_coincide_unique_domain	40	40.412578	167451	23374
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.peano_rect_base	40	0.005275	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.le_antisym	40	0.113140	40	14	7	synth with cache (only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.peano_rec_base	40	0.005280	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_eq	40	40.200111	21584	4030
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.le_neq	40	0.054772	16	5	1	synth with cache (only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.peano_rec_succ	40	0.023511	5	5	0.0.0.0.0	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite Pos.peano_rect_succ).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.neq_sym	40	0.009498	3	1	2	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mod_unique	40	40.256456	17691	4787
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.lt_le	40	0.027868	4	3	0.0.1	synth with cache (only 1: intro H; only 1: rewrite H; only 1: apply irreflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.gt_not_eq	40	0.005808	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.eq_not_lt	40	0.009172	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_unique	40	40.231454	28097	6094
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.eq_not_gt	40	0.005812	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.lt_not_gt	40	0.005626	2	1	1	synth with cache (only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.Injections.can_pcan	40	40.059665	21085	1202
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_opp_r	40	40.228004	23579	5100
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_same	40	0.161742	97	32	1.0.0.2.1	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 1; only 1: auto'; only 1: now nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_same	40	0.260939	138	52	0.0.0.0.0.1.1	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique_exact; only 1: intro H1; only 1: now apply H; only 1: nzsimpl; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_small	40	0.013141	4	3	0.1.0	synth with cache (only 1: intros; only 1: apply mod_small; only 1: auto').
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.pred_min_distr	40	2.830909	439	174	0.0.0.3.0.0.0.2.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?pred_le_mono; only 1: now rewrite <- ?pred_le_mono; only 1: now rewrite <- ?succ_le_mono; only 1: rewrite 2!min_r; only 1: now rewrite <- ?pred_le_mono; only 1: now rewrite <- ?pred_le_mono; only 1: now rewrite <- ?succ_le_mono).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_0_l	40	0.017032	8	4	1.3.0.0	synth with cache (only 1: intro n; only 1: intro H; only 1: apply Private_NZDiv.div_small; only 1: auto').
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_div_factor	40	40.284816	23943	5282
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_0_l	40	0.013767	5	3	0.2.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: auto').
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow_sub_r	40	40.066335	19445	3363
coq-tactician-stdlib.8.11.dev	Coq.micromega.Refl.make_impl_map	40	1.927156	1425	312	4.0.0.1.0.1.6	synth with cache (only 1: induction l; only 1: intros; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: intros; only 1: firstorder  (subst; auto)).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_abs_l	40	40.221128	16120	5890
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_eq_0	40	6.613998	5372	1165	2.9.5.3	synth with cache (only 1: intros a b Ha Hb; only 1: apply pow_eq_0 with b; only 1: apply le_0_l; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mod_unique	40	40.219678	20333	5122
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.incl_soustr_in	40	0.017521	6	5	0.0.1.0.0	synth with cache (only 1: intros X x H'; only 1: red; only 1: intros x0 H'0; only 1: elim H'0; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_0_r	40	40.312557	29543	5708
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.length_zero_iff_nil	40	9.897623	19902	880	0.6.62.1	synth with cache (only 1: red; only 1: destruct l as [| x xs]; only 1: intuition; only 1: firstorder  discriminate).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset.The_power_set_partial_order.Strict_inclusion_is_transitive	40	18.318497	3335	1135	0.0.0.0.0.0.1.5.7	synth with cache (only 1: red; only 1: intros ? ? ? [? ?] [? ?]; only 1: elim Strict_Rel_is_Strict_Included; only 1: unfold contains; only 1: intros H'1 H'2; only 1: apply H'1; only 1: apply Strict_Rel_Transitive_with_Rel with (y := y); only 1: auto with sets; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.eqke_eqk	40	0.028868	13	4	0.6	synth with cache (only 1: induction 1; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.eqk_refl	40	0.005608	1	1	0	synth with cache (only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_unique	40	40.255385	23872	4567
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.eqke_refl	40	0.005217	1	1	0	synth with cache (only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.eqk_sym	40	0.012790	3	2	1.0	synth with cache (only 1: unfold eqk, eqke; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.eqke_sym	40	0.019936	6	2	4.0	synth with cache (only 1: unfold eqk, eqke; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neg_nonneg_cases	40	40.259903	32181	3978
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.eqk_trans	40	0.020121	6	3	1.2.0	synth with cache (only 1: intros x y z; only 1: intuition auto; PeanoNat.Nat.Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_l	40	0.034141	9	4	1.3.0	synth with cache (only 1: intro n; only 1: rewrite <- (succ_pred n)  at 2; only 1: apply lt_succ_diag_r).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_unique	40	40.237742	12908	4983
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_pred_l	40	0.024972	4	4	0.0.0.0	synth with cache (only 1: intro n; only 1: apply lt_le_incl; only 1: rewrite <- (succ_pred n)  at 2; only 1: apply lt_succ_diag_r).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_small	40	1.527755	716	216	4.2.5	synth with cache (only 1: intros; only 1: apply div_small; only 1: auto').
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Prop.Peirce	40	0.115461	96	30	8.2	synth with cache (only 1: intros; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Prop.not_imply_elim	40	0.164643	128	52	3.3.1.0	synth with cache (only 1: unfold not; only 1: intros P H; only 1: intro CDML; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.incl_soustr	40	1.086543	310	148	0.1.1.1.0.1	synth with cache (only 1: intros X Y I NI; only 1: red; only 1: intros x H'; only 1: red; only 1: elim H'; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.impliesP	40	12.442199	188	18	19	synth with cache (only 1: by case).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.in_app_iff	40	5.059096	3845	1169	1.3.1.0.0.1.1.0.0.0.5.0.0.0	synth with cache (only 1: intros l m a; only 1: elim l; only 1: simpl; only 1: split; only 1: auto; only 1: intro H; only 1: elim H; only 1: intro H0; only 1: elim H0; only 1: auto; only 1: simpl; only 1: intro H; only 1: intros; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Prop.not_imply_elim2	40	0.024059	12	8	0.1.0.1	synth with cache (only 1: intros; only 1: intro; only 1: apply H; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.bi_induction	40	2.241074	2175	528	1.0.1.9.2	synth with cache (only 1: intros A A_wd A0 AS n; only 1: apply Pos.peano_ind; only 1: assumption; only 1: intros; only 1: now apply -> AS).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Prop.imply_to_or	40	0.024814	7	3	0.2.2	synth with cache (only 1: intros A; only 1: intro NP; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListDec.Dec_in_Prop.In_decidable	40	5.595298	2237	182	8.0.0.40	synth with cache (only 1: induction l as [| a l' Hrec]; only 1: now constructor; only 1: simpl; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Prop.imply_to_and	40	0.047774	28	11	2.3	synth with cache (only 1: intros Ext A a; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InA_nil	40	0.025567	3	2	0.1	synth with cache (only 1: intuition; only 1: inversion_clear H).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_or_gt	40	40.204649	53373	5783
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Prop.or_to_imply	40	0.041802	30	11	1.1	synth with cache (only 1: unfold not; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_r	40	40.304982	30278	5539
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Prop.not_and_or	40	0.027260	13	5	0.0.1.3	synth with cache (only 1: Bool.destr_bool; only 1: elim (classic P); only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Prop.or_not_and	40	0.036728	19	10	0.0.3.0	synth with cache (only 1: intros; only 1: red; only 1: intro; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Prop.not_or_and	40	0.008930	1	1	0	synth with cache (only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Prop.and_not_or	40	0.009516	1	1	0	synth with cache (only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Prop.imply_and_or	40	0.056965	28	14	5.0	synth with cache (only 1: intros; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Prop.imply_and_or2	40	0.010320	2	1	1	synth with cache (only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_1	40	6.841809	3726	332	1.0.3.2.3.2.1.34	synth with cache (only 1: apply log2_unique; only 1: order; only 1: split; only 1: now nzsimpl; only 1: rewrite two_succ; only 1: nzsimpl; only 1: apply lt_succ_diag_r; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.recursion_0	40	0.006264	2	2	0.0	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.one_succ	40	0.005749	1	1	0	synth with cache (only 1: exact eq_refl).
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_eqk	40	0.010328	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_def	40	0.005796	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_def'	40	0.006372	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.two_succ	40	0.077475	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_1	40	0.013094	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.OrderedTypeLists.In_eq	40	0.364863	217	61	1.5.2.0	synth with cache (only 1: intros x y z; only 1: intuition auto; PeanoNat.Nat.Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: subst; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Integers.Integers_sect.le_reflexive	40	0.006106	2	1	1	synth with cache (only 1: exact PeanoNat.Nat.le_refl).
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_2	40	0.011393	3	1	2	synth with cache (only 1: now destruct 1).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.pred_0	40	0.005391	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Integers.Integers_sect.le_antisym	40	0.020454	10	5	1.0	synth with cache (only 1: red; only 1: PeanoNat.Nat.order).
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.eqk_def	40	0.007338	2	1	1	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.pos_pred_spec	40	0.029744	8	7	1.0.0.0.0.0.0	synth with cache (only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.eqk_def'	40	0.006305	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.eqk_1	40	0.007489	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.succ_pos_spec	40	0.019456	4	4	0.0.0.0	synth with cache (only 1: destruct n; only 1: reflexivity; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Integers.Integers_sect.le_trans	40	0.051152	22	9	3.0	synth with cache (only 1: red; only 1: PeanoNat.Nat.order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_null	40	40.139410	28952	1367
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.eqlistA_altdef	40	0.028702	7	7	0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: induction 1; only 1: constructor; only 1: auto; only 1: induction 1; only 1: auto using Sorted, LocallySorted, HdRel; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation.Permutation_refl	40	0.011472	7	3	0.0.4	synth with cache (only 1: induction l as [| a l IH]; only 1: discriminate || auto; only 1: now constructor).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_1_r	40	1.481963	947	256	1.1.2.1.0.4	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: rewrite one_succ; only 1: apply lt_succ_diag_r; only 1: now nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_1_l	40	0.010725	3	3	0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.inj_1	40	0.004989	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_1_l	40	0.010553	3	3	0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_strorder	40	11.007614	15867	1597	0.0.2.26.4.4.0.8.56	synth with cache (only 1: constructor; only 1: intro n; only 1: intro m; only 1: apply (lt_irrefl n); only 1: auto; only 1: intros n m p; only 1: generalize (lt_trans n m p); only 1: intros H H1 H2; only 1: now apply H).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.pred_succ	40	0.013081	3	3	0.0.0	synth with cache (only 1: destruct n; only 1: reflexivity; only 1: apply Pos.pred_N_succ).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.pred_sub	40	0.036605	9	7	1.1.0.1	synth with cache (only 1: destruct n; only 1: reflexivity; only 1: simpl; only 1: now destruct p).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.succ_0_discr	40	0.015530	8	4	0.0.2.2	synth with cache (only 1: destruct n; only 1: intro H; only 1: destr_eq H; only 1: discriminate).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.add_0_l	40	0.021521	5	4	0.0.0.1	synth with cache (only 1: destruct n; only 1: reflexivity; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.prop_degen_em	40	40.923793	428734	13421
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.ex.eq_ex_uncurried	40	41.104755	536211	11887
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.incl_nil	40	0.857303	1288	184	30	synth with cache (only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.sub_0_r	40	0.034709	10	8	0.1.1.1	synth with cache (only 1: destruct n; only 1: reflexivity; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_cancel_r	40	10.164791	3474	2015	1.4.0.2.3	synth with cache (only 1: split; only 1: now apply add_reg_r; only 1: revert p q; only 1: intros a b H; only 1: now f_equal).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.empty_1	40	0.012591	7	1	6	synth with cache (only 1: inversion_clear 1).
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.map_simpl	40	0.016219	7	4	0.0.3.0	synth with cache (only 1: intros A B f l; only 1: induction l as [| x l IH]; only 1: reflexivity; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.prop_ext_em_degen	40	40.624689	281316	12277
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.empty_NoDup	40	0.014222	7	2	0.5	synth with cache (only 1: unfold Empty, empty; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Integers.Integers_sect.le_Order	40	0.903046	605	208	1.0.0.0.0.5.0.0.3.0.0.4	synth with cache (only 1: split; only 1: red; only 1: intros; only 1: trivial; only 1: red; only 1: intros x y z; only 1: intros x0 H'; only 1: apply PeanoNat.Nat.le_trans with y; only 1: auto; only 1: auto; only 1: red; only 1: PeanoNat.Nat.order).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Integers.Integers_sect.triv_nat	40	0.078916	86	17	9.0	synth with cache (only 1: intros n; only 1: constructor).
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_mem_ind2	40	5.855408	3234	1251	11.0.0.0.0.3.0.0.0	synth with cache (only 1: simple induction x; only 1: simpl; only 1: intros; only 1: auto; only 1: simpl; only 1: intros; only 1: elim (Aeq_dec a a0); only 1: auto with datatypes; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.equivlist_equiv	40	0.987825	798	216	23	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.recursion_wd	40	40.382877	38055	6809
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms_Relations.relation_conjunction_morphism	40	0.387988	137	44	3.2.1	synth with cache (only 1: reduce; only 1: reduce in H; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.proper_sym_impl_iff	40	17.164811	3642	938	2.11.5	synth with cache (only 1: intros A C h1 h2; only 1: simpl_crelation; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.micromega.Refl.make_conj_cons	40	3.860433	3684	739	0.1.1.1.0.0.12	synth with cache (only 1: induction l; only 1: split; only 1: simpl; only 1: auto; only 1: firstorder  discriminate; only 1: simpl; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.app_nth1	40	1.364414	818	251	1.0.0.0.5.1.0	synth with cache (only 1: induction l; only 1: inversion 1; only 1: destruct n; only 1: simpl; only 1: auto with arith; only 1: simpl; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqk_eqke	40	0.029919	3	3	0.0.0	synth with cache (only 1: induction 1; only 1: firstorder; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.OrderedTypeLists.ListIn_In	40	1.859590	1039	326	1.2.0.0.0.8	synth with cache (only 1: induction l; only 1: simpl; only 1: contradiction; only 1: firstorder; only 1: subst; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.lt_strorder	40	0.376971	346	75	4.0.0.0.0.8.1	synth with cache (only 1: split; only 1: repeat red; only 1: intros; only 1: absurd (eq x x); only 1: auto with ordered_type; only 1: auto with ordered_type; only 1: exact PeanoNat.Nat.lt_trans).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Peano_dec.dec_eq_nat	40	17.586330	9183	1195	4.0.0.0.4.7.37	synth with cache (only 1: unfold decidable; only 1: revert m; only 1: Nat.cases ltac:(n); only 1: destruct m; only 1: now left; only 1: now right; only 1: decide equality).
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.pair_equal_spec	40	40.610661	269992	17286
coq-tactician-stdlib.8.11.dev	Coq.Sets.Integers.Integers_sect.nat_po	40	0.860128	7112	112
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.CompOpp_involutive	40	0.009252	5	5	0.0.0.0.0	synth with cache (only 1: intro H; only 1: reflexivity || destruct H; only 1: reflexivity || destruct H; only 1: reflexivity || destruct H; only 1: reflexivity || destruct H).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.cardinal_finite	40	3.194313	6948	813	4.1.23.1	synth with cache (only 1: intros X x H'; only 1: elim H'; only 1: auto with sets; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ExtensionalityFacts.FunctExt_UniqInverse	40	40.442014	184267	11508
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul	40	1.793638	899	322	5.0.0.2.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique_exact; only 1: intro H1; only 1: now apply H; only 1: apply mul_comm).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.succ_pos_pred	40	1.914624	791	351	0.0.0.0.0.0.0.0.1.4.0.0.0.0	synth with cache (only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: f_equal; only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.eq_equiv	40	1.756921	2338	252	14.8.2.4.18	synth with cache (only 1: split; only 1: intuition; only 1: auto with *; only 1: repeat red; only 1: apply Logic.eq_trans).
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqke_eqk	40	2.241493	4043	217	0.4.37	synth with cache (only 1: induction 1; only 1: firstorder; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.micromega.Refl.make_conj_impl	40	0.568527	184	89	1.1.1.0.0.1	synth with cache (only 1: intros; only 1: induction l; only 1: firstorder  (subst; auto); only 1: destruct l; only 1: firstorder  (subst; auto); only 1: firstorder  (subst; auto)).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.empty	40	1.505770	7475	115
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.mul_0_l	40	0.005559	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.mul_succ_l	40	40.233346	32886	11932
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Distributivity	40	40.091736	29479	6208
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.if_same	40	0.518654	447	47	8.12	synth with cache (only 1: intros a n; only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_cnf_tt_cnf_ff	40	0.004149	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_cnf_ff_cnf_ff	40	0.003886	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.pos_pred_succ	40	2.658048	1530	461	0.0.0.0.0.0.0.0.0.0.1.1.0.0.0.16	synth with cache (only 1: destruct n; only 1: exact eq_refl; only 1: destruct p; only 1: simpl; only 1: f_equal; only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation.Permutation_trans	40	0.031640	16	6	1.5	synth with cache (only 1: intros l l' Hperm; only 1: apply perm_trans with (l' := l')).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.app_nil_r	40	10.709414	18657	1214	0.21.6.0.25.3	synth with cache (only 1: intros; only 1: induction l; only 1: reflexivity; only 1: simpl; only 1: apply f_equal; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.le_pred	40	40.285390	108493	18845
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.le_0_n	40	0.029976	66	16	0.0.9	synth with cache (only 1: induction n as [| p H]; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.provable_prop_ext	40	5.824705	8152	548	3.1.0.0.42	synth with cache (only 1: intros Ext A Ha; only 1: apply (Ext A True); only 1: split; only 1: exact (fun _ => I); only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.le_n_S	40	0.018170	18	8	0.0.1	synth with cache (only 1: induction 1; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.CompOpp_inj	40	1.264153	2460	695	0.0.1.0.1.0.1.0.0.0.1.0.1.0.1.0.0.0.1	synth with cache (only 1: destruct c, c'; only 1: intro H; only 1: reflexivity || destruct H; only 1: intro H; only 1: discriminate; only 1: intro H; only 1: discriminate; only 1: intro H; only 1: discriminate; only 1: intro H; only 1: reflexivity || destruct H; only 1: intro H; only 1: discriminate; only 1: intro H; only 1: discriminate; only 1: intro H; only 1: discriminate; only 1: intro H; only 1: reflexivity || destruct H).
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.nat_case	40	0.011893	12	4	1.4.0	synth with cache (only 1: induction n; only 1: auto; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_unicity	40	40.180673	25735	2343
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.eq_is_nlt_ngt	40	6.841304	3141	1060	7.0.1.0.1.10	synth with cache (only 1: firstorder; only 1: rewrite H; only 1: apply irreflexivity; only 1: rewrite H; only 1: apply irreflexivity; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig.eq_sig_rect	40	40.460418	196910	5223
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.nat_double_ind	40	0.629415	1139	235	1.1.3.6.4.1	synth with cache (only 1: induction n; only 1: auto; only 1: intros; only 1: destruct m; only 1: trivial; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Classes.SetoidClass.setoid_refl	40	0.115599	175	33	13	synth with cache (only 1: now trivial).
coq-tactician-stdlib.8.11.dev	Coq.Classes.SetoidClass.setoid_sym	40	0.006035	1	1	0	synth with cache (only 1: typeclasses eauto).
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.comparison_eq_stable	40	40.943939	452925	16084
coq-tactician-stdlib.8.11.dev	Coq.Classes.SetoidClass.setoid_trans	40	0.006574	1	1	0	synth with cache (only 1: typeclasses eauto).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeFacts.lt_dec	40	40.167817	38063	3161
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.eqk_equiv	40	0.353590	129	45	4.0.0.7	synth with cache (only 1: split; only 1: auto; only 1: auto; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.eqke_equiv	40	0.035339	5	4	0.0.0.1	synth with cache (only 1: split; only 1: eauto; only 1: eauto; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.Injections.canLR	40	23.313267	731	87	5.11.7	synth with cache (only 1: intros; only 1: subst; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig2.rew_sig2	40	0.013365	2	2	0.0	synth with cache (only 1: destruct H, u; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeRev.lt_compat	40	0.676716	78	34	1.7	synth with cache (only 1: unfold lt; only 1: auto with *).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lt_iff	40	0.165477	31	20	0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: destruct (max_spec n m); only 1: right; only 1: intuition; only 1: order; only 1: left; only 1: intuition; only 1: order; only 1: solve_max).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_cons	40	1.940371	418	89	1.0.8.5	synth with cache (only 1: intros a a' Ha n; only 1: subst; only 1: intros l H; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.elimN	40	40.325968	4501	253
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_l	40	0.069099	31	11	8	synth with cache (only 1: solve_max).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.ex.rew_ex	40	40.817334	381394	9185
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_r	40	0.012359	1	1	0	synth with cache (only 1: solve_max).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub	40	0.035081	11	5	4	synth with cache (only 1: solve_max).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.OrderedTypeLists.Inf_eq	40	0.485208	390	85	3.4.5	synth with cache (only 1: intros x y z H; only 1: rewrite <- H; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_iff	40	0.090115	24	10	0.3.1	synth with cache (only 1: split; only 1: solve_max; only 1: solve_max).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_lt	40	0.024081	2	1	1	synth with cache (only 1: solve_max).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_lt_iff	40	0.025138	1	1	0	synth with cache (only 1: solve_max).
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Inverse_Image.Inverse_Image.Acc_inverse_image	40	40.352363	131854	15594
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.app_nth2	40	3.768225	2466	830	1.0.3.2.0.1.0.0.0.0.0	synth with cache (only 1: induction l; only 1: inversion 1; only 1: simpl; only 1: auto; only 1: trivial; only 1: intros l' d [| n]; only 1: simpl; only 1: intros; only 1: inversion H; only 1: simpl; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Psucc_Gt	40	2.591173	1954	406	0.0.1.0.6.0.1.0.6	synth with cache (only 1: induction p; only 1: simpl; only 1: Pos.simpl_compare; only 1: now rewrite IHp; only 1: rewrite <- Pos.compare_succ_succ; only 1: simpl; only 1: Pos.simpl_compare; only 1: now rewrite IHp; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.map_app	40	0.031594	7	7	0.0.0.0.0.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: rewrite IHl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.empty_1	40	0.012297	6	1	5	synth with cache (only 1: inversion_clear 1).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.empty_sorted	40	0.008037	2	1	1	synth with cache (only 1: constructor).
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.length_map	40	0.020385	8	6	0.0.0.0.1.1	synth with cache (only 1: intros; only 1: induction l as [| x l IH]; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Berardi.Berardis_paradox.L1	40	40.793728	362647	12121
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.eq_sigT_snd	40	40.109078	29980	9736
coq-tactician-stdlib.8.11.dev	Coq.Sets.Partial_Order.Partial_order_facts.Strict_Rel_Transitive_with_Rel_left	40	40.136638	44596	15572
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.not_even_and_odd	40	22.074758	31677	2931	9.24.9.7.1.0	synth with cache (only 1: induction n; only 1: inversion_clear 1; only 1: inversion_clear 1; only 1: inversion_clear 1; only 1: inversion_clear 1; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NParity.NParityProp.even_sub	40	40.220172	8041	3212
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.nonpos_nonneg_cases	40	12.361258	11182	1367	0.34.0	synth with cache (only 1: intro n; only 1: apply add_le_cases; only 1: now nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.In_compat	40	1.248132	450	143	0.4.0.0.1.0.0.0.0	synth with cache (only 1: apply proper_sym_impl_iff_2; only 1: trivial; only 1: red; only 1: auto with *; only 1: repeat red; only 1: intros; only 1: subst; only 1: setoid_rewrite  <- H; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_mul	40	4.206257	2916	695	1.1.0.0.7.1.1	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: auto'; only 1: intuition; only 1: nzsimpl; only 1: apply mul_comm).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.singleton	40	3.465717	9871	447	60	synth with cache (only 1: eauto with *).
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Disjoint_Union.Wf_Disjoint_Union.acc_B_sum	40	40.217868	79065	12734
coq-tactician-stdlib.8.11.dev	Coq.Logic.Berardi.Berardis_paradox.retract_pow_U_U	40	0.753152	6240	156
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.le_S_n	40	40.279016	111924	19618
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_cons	40	0.018192	5	4	0.0.0.1	synth with cache (only 1: repeat intro; only 1: apply permA_skip; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_mul_r	40	40.252318	13700	2026
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_unicity_ext	40	40.160082	7766	1348
coq-tactician-stdlib.8.11.dev	Coq.Logic.Berardi.Berardis_paradox.not_has_fixpoint	40	0.301343	1403	46
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_nonneg	40	2.845310	3548	542	0.2.0.19.0	synth with cache (only 1: intro; only 1: destruct_max n; only 1: auto; only 1: rewrite opp_nonneg_nonpos; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.HLevels.and_hprop	40	40.385114	155916	13414
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.eqb_eq	40	40.335372	47601	8618
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.in_dec	40	17.569776	3067	506	11.4.1.0.12	synth with cache (only 1: induction l; only 1: auto; only 1: compute; only 1: intuition; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_app_head	40	0.898240	248	122	0.0.0.0.3.1.2	synth with cache (only 1: induction l; only 1: intuition; only 1: intuition; only 1: repeat rewrite <- app_comm_cons; only 1: constructor; only 1: reflexivity; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.is_empty_2	40	2.202961	1244	368	3.0.2.1.0.0.0.2.0	synth with cache (only 1: intros; only 1: unfold Empty, empty; only 1: intros; only 1: intro abs; only 1: inversion abs; only 1: subst; only 1: discriminate H; only 1: subst; only 1: discriminate).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_le	40	1.767823	1013	288	0.0.11.0	synth with cache (only 1: intros; only 1: apply mod_le; only 1: auto'; only 1: auto').
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_str_pos	40	0.068238	18	13	0.2.0.0	synth with cache (only 1: intros a b (Hb, Hab); only 1: assert (LE : 0 <= a / b) by (apply div_pos; order); only 1: apply div_str_pos; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.HLevels.impl_hprop	40	0.235020	648	95	7.11	synth with cache (only 1: intros A P H p q; only 1: eauto using @functional_extensionality_dep).
coq-tactician-stdlib.8.11.dev	Coq.Lists.Streams.Streams.EqSt_reflex	40	40.297683	103458	16370
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Union.WfUnion.Acc_union	40	40.300980	118459	12471
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_compat_r	40	0.027284	3	3	0.0.0	synth with cache (only 1: intros; only 1: apply max_lub_iff; only 1: solve_max).
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Clos_Refl_Sym_Trans.clos_rt_t	40	40.305026	118016	10212
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_compat	40	0.050437	5	3	0.1.1	synth with cache (only 1: intros; only 1: apply max_lub_iff; only 1: solve_max).
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.max_r	40	1.521130	1415	647	0.0.2.0.2.0.0.0.0.0.0.0.0.0	synth with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: destruct m; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.leb_le	40	40.312952	38406	7556
coq-tactician-stdlib.8.11.dev	Coq.Logic.ProofIrrelevanceFacts.ProofIrrelevanceTheory.subset_eq_compat	40	40.295483	113896	11826
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.lt_lt_add_r	40	40.227760	16808	3874
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.Equivalences.eq_rect_eq_on__eq_dep1_eq_on	40	2.224329	8129	426	34.9.11.8	synth with cache (only 1: intros; only 1: destruct H0 in H; only 1: elim eq_sym with (1 := H0); only 1: auto using eq_sigT_eq_dep, eq_dep_eq_sigT).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ProofIrrelevanceFacts.ProofIrrelevanceTheory.subsetT_eq_compat	40	0.011296	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite M.proof_irrelevance with (p1 := q) (p2 := (eq_rect x P p y H)); only 1: elim H using eq_indd; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Logic.HLevels.false_hprop	40	0.245210	906	79	1.7.22	synth with cache (only 1: intros H; only 1: intros; only 1: reflexivity || destruct H).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Eqdep_dec.EqdepDec.nu_left_inv_on	40	40.316896	129687	5872
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_opp_r	40	40.067257	16110	5027
coq-tactician-stdlib.8.11.dev	Coq.Logic.PropExtensionalityFacts.PredExt_imp_PropFunExt	40	40.439418	183054	12376
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.lt_lt_add_l	40	0.249589	35	22	0.0.0.0.2.0	synth with cache (only 1: intros n m p H; only 1: rewrite add_comm; only 1: rewrite <- (add_0_r n); only 1: apply add_lt_le_mono; only 1: assumption; only 1: apply le_0_l).
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Clos_Refl_Sym_Trans.clos_rst_is_equiv	40	40.251037	92856	16873
coq-tactician-stdlib.8.11.dev	Coq.Logic.HLevels.true_hprop	40	0.150310	535	39	0.21.1	synth with cache (only 1: intros p q; only 1: destruct p, q; only 1: exact eq_refl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_spec_alt	40	40.203564	32515	3739
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_opp_opp	40	40.214003	9366	4616
coq-tactician-stdlib.8.11.dev	Coq.Logic.PropExtensionalityFacts.PropExt_and_PropFunExt_imp_PredExt	40	0.349071	728	108	17.1	synth with cache (only 1: intros Ext A P Q Eq; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.elimNf	40	40.172960	2854	191
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.compare_succ	40	0.038262	16	15	1.1.0.1.0	synth with cache (only 1: revert m; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_l	40	40.153631	34373	4025
coq-tactician-stdlib.8.11.dev	Coq.Logic.HLevels.not_hprop	40	0.417878	1010	190	9.1.1.3.1	synth with cache (only 1: intros p q; only 1: intro H; only 1: apply functional_extensionality; only 1: intros; only 1: contradiction).
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.Binary.relation_equivalence_equivalence	40	40.074322	25935	2940
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.min_l	40	1.534524	1342	595	0.0.2.0.2.0.0.0.0.0.0.0.0.0	synth with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: destruct m; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.quot_div	40	40.304816	7345	1897
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.Choice_lemmas.Choice	40	5.920073	35819	808
coq-tactician-stdlib.8.11.dev	Coq.Logic.Hurkens.Generic.Paradox.paradox	40	40.098432	31819	8850
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow_div_l	40	40.352573	5734	1615
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Inverse_Image.Inverse_Image.wf_inverse_image	40	5.252174	14656	2256	0.0.2.3.3.24	synth with cache (only 1: intro z; only 1: split; only 1: intros x H; only 1: apply (Acc_lemma (f x)); only 1: trivial; only 1: exact eq_refl).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.Injections.pcan_inj	40	40.287870	116252	7033
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.proper_sym_flip_2	40	29.556164	5718	1005	7.1.14	synth with cache (only 1: unfold respectful, relation_equivalence in *; only 1: intros A R1 Sym B R2 f Hf; only 1: simpl_crelation).
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Lexicographic_Product.WfLexicographic_Product.wf_lexprod	40	40.147898	45092	14529
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_mod	40	40.031062	7264	2323
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_b2n_double_div2	40	40.410198	4480	680
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Well_Ordering.Characterisation_wf_relations.wof	40	40.782695	347591	10420
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.ltb_lt	40	40.391073	24051	6771
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.exists_div2	40	40.324278	11246	2657
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms_Prop.Acc_rel_morphism	40	40.147269	36621	8781
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.is_empty_2	40	9.758502	6032	1663	0.1.0.2.6.1.4.1	synth with cache (only 1: unfold Empty, PX.MapsTo; only 1: intros m; only 1: case m; only 1: intros p l inlist; only 1: intro abs; only 1: inversion abs; only 1: intros p l inlist; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_1_facts.cong_transitive_same_relation	40	40.127995	22088	4118
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_b2n_double_bit0	40	40.435111	26217	2834
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_0_r	40	40.113093	20317	3511
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.Injections.canRL	40	14.308602	321	43	5.12	synth with cache (only 1: destruct 2; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.min_r	40	1.456853	1248	636	0.0.1.0.1.0.0.1.0.0.0.0.0.0	synth with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: inversion 1; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_succ_r	40	40.266573	18290	2552
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.max_l	40	2.358449	1813	646	0.0.1.0.0.0.0.1.0.0.0.0.0.0.4	synth with cache (only 1: intros n m; only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: inversion 1; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_div2	40	40.098968	34772	3264
coq-tactician-stdlib.8.11.dev	Coq.Lists.StreamMemo.MemoFunction.imemo_get_correct	40	40.178391	58496	19181
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.OrderedTypeLists.Inf_lt	40	10.111547	2783	469	0.5.8.0.0.5	synth with cache (only 1: destruct l; only 1: constructor; only 1: constructor; only 1: setoid_rewrite H; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.OrderedTypeLists.ListIn_Inf	40	0.031584	8	6	0.0.0.0.0.2	synth with cache (only 1: simple induction l; only 1: simpl; only 1: intros; only 1: auto; only 1: simpl; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_spec'	40	40.233183	33203	2729
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.max_r	40	1.468965	966	384	0.0.1.0.1.0.0.0.0.0.0.0.5	synth with cache (only 1: induction n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: destruct m; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.OrderedTypeLists.In_Inf	40	0.315374	232	70	7.0.1.4	synth with cache (only 1: simple induction l; only 1: intros; only 1: constructor; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.of_voidK	40	1.365980	17	2	8	synth with cache (only 1: by case).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Classical_sets.Ensembles_classical.not_included_empty_Inhabited	40	40.206578	74811	13065
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.compare_eq_iff	40	25.146969	22183	5381	0.0.0.3.0.0.0.2.0.0.0.0.2.0.0.0.2.1.0.0.2	synth with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: split; only 1: easy; only 1: easy; only 1: simpl; only 1: split; only 1: easy; only 1: easy; only 1: destruct m; only 1: simpl; only 1: split; only 1: easy; only 1: easy; only 1: simpl; only 1: rewrite ?IHn; only 1: split; only 1: now intros ->; only 1: now injection 1).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_spec	40	40.360430	10058	2459
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.InA_eqke_eqk	40	8.215542	3917	552	0.0.1.6.4.8	synth with cache (only 1: intros n m H; only 1: unfold eqk, eqke; only 1: elim H; only 1: unfold eqk, eqke; only 1: intuition; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalFacts.nzhead_revapp	40	40.117211	37115	8101
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_2_facts.Rstar_transitive	40	40.241189	84183	14878
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_true	40	40.359383	17947	2778
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.min_r	40	0.954718	631	252	0.0.1.0.0.0.0.0.0.0.0.0.5	synth with cache (only 1: induction n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: inversion 1; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.InA_eqk	40	0.451001	218	61	0.5.2.3	synth with cache (only 1: intros x y z; only 1: intuition auto; PeanoNat.Nat.Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: rewrite <- H; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.compare_antisym	40	8.947563	5814	2316	1.5.0.0.0.0.0.3.0.3	synth with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: reflexivity; only 1: reflexivity; only 1: destruct m; only 1: simpl; only 1: reflexivity || destruct H; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.impliesPn	40	26.767605	1675	129	2.2.30	synth with cache (only 1: destruct 1; only 1: intro H; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.nat_rect_succ_r	40	2.206466	6381	759	0.16.14.0.8	synth with cache (only 1: induction n as [| p H]; only 1: trivial; only 1: simpl; only 1: destruct H; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.etrans_id	40	1.491931	77	9	0.12	synth with cache (only 1: subst; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.InjectionsTheory.inj_id	40	0.006126	7	2	0.5	synth with cache (only 1: intros H; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.isok_Ok	40	7.114019	2234	634	0.0.1.1.1.0.0.0.0.0.1.0.5	synth with cache (only 1: induction l; only 1: intros; only 1: auto; only 1: simpl; only 1: rewrite andb_true_iff; only 1: rewrite negb_true_iff; only 1: intros H; only 1: destruct H; only 1: constructors; only 1: rewrite <- mem_spec; only 1: congruence; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Bool.BoolEq.Bool_eq_dec.beq_false_not_eq	40	40.254741	96891	7746
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.Choice_lemmas.Choice2	40	3.755648	25961	677
coq-tactician-stdlib.8.11.dev	Coq.Sets.Permut.Axiomatisation.perm_right	40	40.369426	152069	7117
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_eqb	40	40.068086	18504	3426
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.min_l	40	2.469873	1626	742	0.0.0.0.1.0.0.0.0.0.0.0.0.0.5	synth with cache (only 1: intros n m; only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: destruct m; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Constructive_sets.Ensembles_facts.not_Empty_Add	40	40.416963	173933	14607
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_rem_unique	40	40.233931	11307	3518
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_b2z_double_div2	40	40.546486	6411	2032
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.eq_sig_snd	40	40.120993	35734	9913
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Peano.NPeano.Even_equiv	40	29.288773	23065	4800	0.1.1.0.1.0.0.0.0.1.9.0.4.0.0.0	synth with cache (only 1: induction n; only 1: split; only 1: constructor; only 1: exists 0; only 1: now PeanoNat.Nat.nzsimpl; only 1: induction n; only 1: split; only 1: now rewrite <- PeanoNat.Nat.even_spec; only 1: inversion_clear 1; only 1: exists 0; only 1: now PeanoNat.Nat.nzsimpl; only 1: rewrite PeanoNat.Nat.Even_succ_succ, <- even_equiv; only 1: split; only 1: now do 2 constructor; only 1: inversion_clear 1; only 1: now inversion_clear H0).
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.nat_rect_plus	40	2.287594	2725	901	1.1.3.2.1.13	synth with cache (only 1: intros ? ? ? Fl Fr; only 1: induction n; only 1: trivial; only 1: simpl; only 1: rewrite <- ?IHn; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Hurkens.NoRetractToModalProposition.Paradox.modal	40	0.748627	3756	231	2.19.26	synth with cache (only 1: intro H; only 1: destruct H; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_3_facts.Strong_confluence	40	40.132176	42415	9061
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InA_alt	40	17.548501	15922	2874	0.4.4.0.3.1.3.0.0.3.2.1	synth with cache (only 1: induction l; only 1: split; only 1: intro; only 1: invlist InA; only 1: firstorder; only 1: split; only 1: induction 1; only 1: firstorder; only 1: firstorder; only 1: firstorder; only 1: subst a; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.InjectionsTheory.inj_can_sym	40	2.839520	3447	195	0.0.35.12	synth with cache (only 1: intros H; only 1: red; only 1: intros; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.elimTn	40	40.398120	12655	530
coq-tactician-stdlib.8.11.dev	Coq.Init.Wf.Well_founded.FixPoint.Fix_eq	40	40.166164	48363	2454
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.esymK	40	5.614238	1143	96	0.1.31	synth with cache (only 1: intro H; only 1: destruct H; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_b2z_double_bit0	40	40.393038	27676	3290
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.Choice_lemmas.bool_choice	40	3.289959	22223	581
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.InjectionsTheory.inj_comp	40	1.172536	2268	182	0.3.37	synth with cache (only 1: intros Hfst Hsnd; only 1: intros H; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.elimFn	40	40.296825	7236	419
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.b2z_div2	40	40.391931	16261	1788
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.introP	40	40.315475	5378	227
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_unique_exact	40	21.887896	12419	2501	0.1.13.1.4	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_unique with 0; only 1: auto'; only 1: nzsimpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT2.eq_sigT2_rect	40	40.208167	85329	4455
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_t1n_trans	40	40.217243	80905	8780
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_1_r	40	21.541030	18786	3188	0.3.7.0.7.9.0	synth with cache (only 1: intro n; only 1: symmetry; only 1: apply Private_NZDiv.div_unique_exact; only 1: intro H; only 1: apply (lt_irrefl n); only 1: order'; only 1: now nzsimpl').
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqk	40	17.342194	24615	1523	0.0.48.1.16	synth with cache (only 1: intros Hb; only 1: induction 1; only 1: rewrite <- H; only 1: firstorder; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.altP	40	34.180524	2528	64
coq-tactician-stdlib.8.11.dev	Coq.Arith.Mult.mult_assoc_reverse	40	40.024751	6964	1446
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.absurd_set	40	0.006108	3	3	0.0.0	synth with cache (only 1: unfold not; only 1: intros A C h1 h2; only 1: destruct (h2 h1)).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.flip_arrow	40	40.134287	5663	861
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset.The_power_set_partial_order.Strict_inclusion_is_transitive_with_inclusion_left	40	40.032201	5467	2121
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_tn1_trans	40	0.053229	57	27	3.0.1.0.0.0	synth with cache (only 1: induction 1; only 1: left; only 1: auto; only 1: right with y; only 1: auto; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.b2z_bit0	40	40.055104	16173	1927
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersTac.OrderFacts.lt_irrefl	40	40.284472	118997	4771
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_unique	40	40.082392	26275	3024
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersTac.OrderFacts.eq_sym	40	0.006666	1	1	0	synth with cache (only 1: now trivial).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.pow_neg_r	40	0.127685	151	22	11	synth with cache (only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.pow_0_r	40	0.010148	4	1	3	synth with cache (only 1: now nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.pow_succ_r	40	0.009407	2	2	0.0	synth with cache (only 1: intro n; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.square_spec	40	0.010289	1	1	0	synth with cache (only 1: now nzsimpl').
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_2_r	40	40.163511	5977	657
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_succ_l	40	40.247738	13270	2417
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZBase.NZBaseProp.succ_inj_wd	40	40.093909	23311	11611
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.even_equiv	40	40.076383	24282	4180
coq-tactician-stdlib.8.11.dev	Coq.Arith.Minus.minus_Sn_m	40	40.099437	30151	6404
coq-tactician-stdlib.8.11.dev	Coq.Arith.Minus.pred_of_minus	40	0.028074	1	1	0	synth with cache (only 1: now Nat.nzsimpl').
coq-tactician-stdlib.8.11.dev	Coq.Arith.Factorial.lt_O_fact	40	40.129485	47152	7107
coq-tactician-stdlib.8.11.dev	Coq.Program.Wf.Measure_well_founded.measure_wf	40	40.487207	202790	12488
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_0	40	40.090234	27831	3544
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.CompOpp_iff	40	17.227878	43172	9229	0.0.0.1.0.0.0.1.1.1.0.7.2.0.0.0.5.0.2.13	synth with cache (only 1: split; only 1: intro H; only 1: reflexivity || destruct H; only 1: destruct c; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: intro H; only 1: destruct c, c'; only 1: reflexivity || destruct H; only 1: discriminate; only 1: discriminate; only 1: discriminate; only 1: reflexivity || destruct H; only 1: reflexivity || destruct H; only 1: reflexivity || destruct H; only 1: discriminate; only 1: reflexivity || destruct H; only 1: reflexivity || destruct H; only 1: reflexivity || destruct H).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Gt.gt_S	40	40.103456	28420	3872
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_opp	40	40.047984	12617	2518
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.OrderedTypeLists.Sort_Inf_In	40	15.794533	12779	2023	1.0.8.0.0.3.2.0.5.1.5	synth with cache (only 1: induction l; only 1: intros; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: intros; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: setoid_replace x with a; only 1: trivial; only 1: trivial; only 1: transitivity a; only 1: trivial; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Arith.EqNat.eq_nat_is_eq	40	40.106305	30510	5935
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_in	40	16.253879	8499	2469	1.2.3.0.0.0.1.0.2.0.10	synth with cache (only 1: induction 1; only 1: simpl; only 1: intros; only 1: trivial; only 1: induction 1; only 1: now left; only 1: simpl in *; only 1: auto; only 1: simpl; only 1: tauto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.between_restr	40	37.876434	30244	3618	9.3.1.24.0	synth with cache (only 1: intros x y z; only 1: induction 1; only 1: trivial; only 1: intro; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Arith.EqNat.eq_eq_nat	40	0.021834	6	6	0.0.0.0.0.0	synth with cache (only 1: intros <-; only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.succ_pred_double	40	40.177141	72749	3231
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.succ_discr	40	40.257737	114284	2621
coq-tactician-stdlib.8.11.dev	Coq.Arith.Minus.minus_diag_reverse	40	0.646224	348	54	1.1.15	synth with cache (only 1: induction n as [| n IH]; only 1: now Nat.nzsimpl; only 1: now rewrite IH).
coq-tactician-stdlib.8.11.dev	Coq.Structures.Orders.OTF_LtIsTotal.lt_total	40	40.202243	75862	8342
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.lt_eq_lt_dec	40	40.103260	35892	3577
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_1_l	40	40.087060	11036	2234
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.odd_plus_split	40	0.477949	58	11	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.Private_Parity.Odd_0	40	0.029681	16	6	1.0.0.1	synth with cache (only 1: intros ([| ], H); only 1: discriminate; only 1: pose proof (pred_succ n) as EQ'; only 1: now apply (neq_succ_diag_l 0)).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Div2.lt_div2	40	40.120747	39995	6893
coq-tactician-stdlib.8.11.dev	Coq.Program.Wf.Fix_rects.F_unfold	40	0.107899	24	7	0.6.0	synth with cache (only 1: induction (Rwf x); only 1: rewrite <- Fix_F_eq; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Arith.EqNat.eq_nat_eq	40	0.223373	37	15	2	synth with cache (only 1: apply eq_nat_is_eq).
coq-tactician-stdlib.8.11.dev	Coq.Lists.Streams.Streams.eqst_ntheq	40	40.171891	54470	16519
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_lt_mono	40	40.244893	10387	5353
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.odd_equiv	40	40.053584	16339	3159
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.exists_le_S	40	0.247036	84	24	0.2.4	synth with cache (only 1: induction 1; only 1: auto with arith; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_pred_r	40	40.227634	8927	1751
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.N2Nat.inj_iff	40	0.224224	61	26	5.0.0.0.0	synth with cache (only 1: split; only 1: intro H; only 1: rewrite <- (id a), <- (id a'); only 1: now f_equal; only 1: congruence).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.even_even_plus	40	0.063960	9	2	2	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_mono	40	40.258549	44746	4360
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_gt	40	40.324035	23898	5641
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InA_altdef	40	38.183283	46424	8306	2.0.2.7.0.0.11.6.0.0.1.1	synth with cache (only 1: induction l; only 1: constructor; only 1: inversion 1; only 1: inversion 1; only 1: split; only 1: induction 1; only 1: constructor; only 1: auto; only 1: auto; only 1: inversion 1; only 1: auto; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.odd_plus_l	40	0.094246	2	1	1	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Le.le_elim_rel	40	40.105109	35379	5538
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_cancel_r	40	0.130891	6	6	0.0.0.0.0.0	synth with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.odd_plus_r	40	0.060046	2	1	1	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_nonpos_nonpos	40	40.221047	4582	1889
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.odd_even_plus	40	0.067277	9	2	1	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ExtensionalityFacts.UniqInverse_EqDeltaProjs	40	19.735805	154769	3408
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.between_Sk_l	40	40.111802	19170	3422
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.Power.pow_N_pow_N	40	0.028913	5	1	4	synth with cache (only 1: f_equiv).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle0	40	0.185771	13	8	0.0.0.0.1.0	synth with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_assoc	40	40.160587	6505	1460
coq-tactician-stdlib.8.11.dev	Coq.Structures.Equalities.HasEqBool2Dec.eq_dec	40	40.129389	47352	1916
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.itersucc_or_itersucc	40	40.278293	113742	5250
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.DEFINITIONS.MORPHISM.get_sign_None_th	40	0.020185	17	2	8	synth with cache (only 1: now rewrite ?H, ?IHp).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Hurkens.NoRetractToModalProposition.Paradox.strength	40	40.642780	287166	11509
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Distributivity'	40	40.105899	28629	9678
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.in_int_intro	40	0.052004	21	7	2.3	synth with cache (only 1: intros; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.in_int_lt	40	0.019891	7	2	4.1	synth with cache (only 1: induction 1; only 1: PeanoNat.Nat.order').
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.le_dec	40	0.746855	506	39	0.0.0.0.27	synth with cache (only 1: elim (le_lt_dec n m); only 1: intro H; only 1: intuition Nat.order; only 1: intro H; only 1: intuition Nat.order).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.iffP	40	40.161203	7022	301
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.even_plus_even_inv_r	40	0.069899	2	1	1	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.even_plus_even_inv_l	40	0.067808	1	1	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.11.dev	Coq.Program.Wf.Fix_rects.Fix_F_sub_rect	40	1.218752	2850	337	1.7.5.11.3	synth with cache (only 1: intro x; only 1: induction (Rwf x); only 1: intros; only 1: rewrite <- Init.Wf.Fix_F_eq; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.eq_dec	40	40.113310	37024	5024
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.even_plus_odd_inv_r	40	0.094747	1	1	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.le_lt_dec	40	40.092028	30819	2434
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.add_pos_l	40	13.795316	3193	1092	12.1	synth with cache (only 1: intros n m; only 1: apply lt_lt_add_r).
coq-tactician-stdlib.8.11.dev	Coq.Program.Wf.Fix_rects.eq_Fix_F_sub	40	0.007755	4	2	0.2	synth with cache (only 1: apply Fix_F_inv; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_mono_l	40	40.084486	10397	2446
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.even_plus_odd_inv_l	40	0.067259	1	1	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Lt.le_lt_or_eq	40	40.085039	24925	3884
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.odd_opp	40	40.352818	11919	4431
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.gt_dec	40	0.006525	1	1	0	synth with cache (only 1: apply le_dec).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.ge_dec	40	0.005817	2	1	1	synth with cache (only 1: apply le_dec).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.odd_plus_even_inv_l	40	0.061242	1	1	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Lt.nat_total_order	40	40.042113	9283	1122
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.succ_inj	40	40.205678	82222	2864
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeFacts.if_eq_dec	40	40.152556	43111	5225
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.even_pow	40	40.226485	16968	3900
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.odd_plus_even_inv_r	40	0.067579	1	1	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_gt_cases	40	40.192540	32606	3146
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.even_plus_aux	40	1.248267	110	13	1	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.odd_plus_odd_inv_l	40	0.057121	1	1	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.pred_N_succ	40	40.054020	13995	3509
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.odd_plus_odd_inv_r	40	0.059897	1	1	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.pred_max_distr	40	40.302961	9028	2167
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InA_eqA	40	1.095998	716	133	1.0.1.1.1.7.0	synth with cache (only 1: intros x y z H; only 1: induction 1; only 1: constructor; only 1: transitivity ltac:(y); only 1: auto; only 1: assumption; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.sumboolP	40	40.196891	9683	258
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_le_mono	40	40.231655	8852	3906
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.plus_reg_l	40	40.074332	20329	3023
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_carry_spec	40	40.082873	25331	4110
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.proper_sym_impl_iff_2	40	40.192431	11084	1915
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.appP	40	40.232263	14953	1054
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms_Prop.well_founded_morphism	40	12.163806	7534	2100	0.9.5.0.1.3	synth with cache (only 1: apply proper_sym_impl_iff; only 1: red; only 1: now symmetry; only 1: reduce; only 1: setoid_rewrite  <- H; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.odd_wd	40	40.234769	20235	1925
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.singlx	40	0.740852	554	165	1.1.3.5	synth with cache (only 1: intros X x H'; only 1: elim H'; only 1: destruct 1; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.even_mult_l	40	0.134707	65	10	10	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Minus.minus_plus_simpl_l_reverse	40	2.713881	476	115	10.0.0.1	synth with cache (only 1: nzinduct p; only 1: now Nat.nzsimpl; only 1: intro; only 1: eauto with *).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_cancel_l	40	40.121247	18183	3847
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_neg_r	40	40.176978	11378	5748
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.even_mult_r	40	0.035750	2	1	1	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.11.dev	Coq.funind.Recdef.max	40	40.088326	27834	6336
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.even_mult_inv_r	40	0.050733	1	1	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_comm	40	40.067609	16047	5508
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.even_mult_inv_l	40	0.055137	1	1	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Wf_nat.Well_founded_Nat.well_founded_ltof	40	40.219296	77624	11334
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.odd_mult	40	0.059462	9	2	1	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_succ_r	40	40.047532	9737	3864
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.odd_mult_inv_l	40	0.051019	21	4	2	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.In_InA	40	0.699469	466	81	0.13.4	synth with cache (only 1: intros; only 1: rewrite InA_altdef, Exists_exists; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.odd_mult_inv_r	40	0.056082	14	3	1	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.decP	40	40.045566	2459	107
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.sameP	40	40.327971	1545	101
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_same	40	40.173665	15388	5357
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_unique'	40	40.270510	27663	4410
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalFacts.nzhead_rev	40	40.075216	21215	4323
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.decPcases	40	40.280861	2328	119
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_trichotomy	40	40.169080	22136	3311
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.eq_refl	40	40.185798	72153	2842
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_eq_0	40	40.252898	34601	5229
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.opp_mod_bound_or	40	40.382469	18066	5847
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_neq	40	0.016238	4	4	0.0.0.0	synth with cache (only 1: intros n m; only 1: intros LT EQ; only 1: rewrite EQ in LT; only 1: false_hyp LT lt_irrefl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.le_0_l	40	40.208083	30218	5062
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_square	40	40.285084	14903	3101
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.case_analysis	40	0.080831	44	22	0.1.0.0.0.1.0	synth with cache (only 1: intros A A_wd A0 AS n; only 1: apply right_induction with 0; only 1: assumption; only 1: assumption; only 1: intros; only 1: auto; only 1: apply le_0_l).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_unique	40	40.295388	26665	5262
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.rwP2	40	40.077622	1091	151
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.pos_sub_diag	40	0.032965	7	7	0.0.0.0.0.0.0	synth with cache (only 1: induction p; only 1: simpl; only 1: now rewrite ?IHp; only 1: simpl; only 1: now rewrite ?IHp; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.Even_or_Odd	40	40.355822	96095	4764
coq-tactician-stdlib.8.11.dev	Coq.Arith.Div2.even_div2	40	40.155323	57326	6579
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.AllAnd.all_and3	40	0.479356	2	1	1	synth with cache (only 1: by split => haveP; split => x; case : (haveP x) ).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.double_above	40	1.094168	80	33	0.0.0.0.0.0	synth with cache (only 1: intros n m; only 1: rewrite <- le_succ_l, (mul_le_mono_pos_l (S n) m 2); only 1: rewrite two_succ; only 1: nzsimpl; only 1: now rewrite le_succ_l; only 1: order').
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_wd	40	40.154631	16701	1979
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.peano_rect_base	40	0.006892	1	1	0	synth with cache (only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_1_r	40	0.958460	238	79	0.0.0.2.0.0.2.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique_exact; only 1: order; only 1: rewrite one_succ; only 1: apply lt_succ_diag_r; only 1: nzsimpl; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.Private_BootStrap.mul_0_r	40	0.007349	1	1	0	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.AllAnd.all_and4	40	0.659838	1	1	0	synth with cache (only 1: by split => haveP; split => x; case : (haveP x) ).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.Private_BootStrap.add_0_r	40	0.077036	125	10	16	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.Private_BootStrap.mul_1_l	40	0.006702	2	1	1	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.dec_le	40	2.875296	3902	467	0.0.0.0.34	synth with cache (only 1: unfold decidable; only 1: destruct (le_gt_dec n m); only 1: now left; only 1: right; only 1: now apply gt_not_le).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.PartialOrder_proper	40	40.219209	2865	691
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_0_l	40	40.153363	19723	3049
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.dec_lt	40	0.015920	18	3	7	synth with cache (only 1: apply Nat.le_decidable).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_add_mult_diag_r	40	40.190533	11337	3462
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.dec_gt	40	0.005392	2	1	1	synth with cache (only 1: apply Nat.lt_decidable).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.dec_ge	40	0.005784	4	1	3	synth with cache (only 1: apply Nat.le_decidable).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_nonzero	40	40.247451	19093	3538
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.not_eq	40	0.006354	1	1	0	synth with cache (only 1: apply Nat.lt_gt_cases).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_r	40	40.280930	30227	5227
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.zero_one	40	40.304562	20203	3798
coq-tactician-stdlib.8.11.dev	Coq.Sets.Multiset.multiset_defs.munion_rotate	40	40.115728	21864	6272
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_div_gcd	40	40.417338	20704	3396
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_small	40	40.265323	11850	4072
coq-tactician-stdlib.8.11.dev	Coq.Sets.Uniset.defs.union_rotate	40	40.143503	46227	11341
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.not_le	40	0.259596	86	22	9.0	synth with cache (only 1: intro H; only 1: Nat.order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.succ_swap_pred	40	40.239764	47748	7338
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.not_gt	40	0.017322	10	2	3	synth with cache (only 1: apply Nat.le_ngt).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.proper_sym_impl_iff_2	40	40.195205	14021	2816
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.not_ge	40	0.011898	9	2	1	synth with cache (only 1: apply Nat.nle_gt).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.not_lt	40	0.010629	9	2	2	synth with cache (only 1: apply Nat.le_ngt).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_1_l	40	0.018662	6	4	2.0.0.0	synth with cache (only 1: intros; only 1: apply div_small; only 1: intuition; only 1: order').
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.AllAnd.all_and5	40	0.863698	2	1	1	synth with cache (only 1: by split => haveP; split => x; case : (haveP x) ).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_1_l	40	0.015209	5	4	1.0.0.0	synth with cache (only 1: intros; only 1: apply mod_small; only 1: intuition; only 1: apply le_0_1).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Uniset.defs.seq_congr	40	40.125969	38763	9360
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectConnectives.idPn	40	0.173098	1	1	0	synth with cache (only 1: by case b1; constructor).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Wf_nat.Well_founded_Nat.induction_ltof1	40	40.125393	40863	7954
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectConnectives.boolP	40	0.400156	4	1	3	synth with cache (only 1: by case b1; constructor).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_asymm	40	40.184737	14908	2542
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonneg_l	40	40.203893	11247	2674
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.eq_le_incl	40	0.026674	22	4	3	synth with cache (only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_pred_square	40	40.181156	10691	4121
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectConnectives.negP	40	0.051211	1	1	0	synth with cache (only 1: by case b1; constructor).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_stepl	40	0.016028	3	2	1.0	synth with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_stepr	40	0.019585	3	2	1.0	synth with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Wf_nat.Well_founded_Nat.induction_ltof2	40	0.098414	52	31	1	synth with cache (only 1: exact induction_ltof1).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_stepl	40	0.016690	3	2	1.0	synth with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Wf_nat.Well_founded_Nat.induction_gtof2	40	0.003370	1	1	0	synth with cache (only 1: exact induction_ltof1).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Gt.le_gt_trans	40	40.128369	33118	3148
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_1_l	40	0.004889	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_stepr	40	0.021656	3	2	1.0	synth with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectConnectives.negPn	40	0.104818	1	1	0	synth with cache (only 1: by case b1; constructor).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_1_r	40	40.334306	26868	4283
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_spec	40	1.468379	4532	88
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_lt_trans	40	0.066579	26	9	3	synth with cache (only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Wf_nat.Well_founded_Nat.induction_gtof1	40	2.693353	1850	749	0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros P F; only 1: assert (H : forall (n : nat) (a : A), f a < n -> P a); only 1: induction n; only 1: intros; only 1: absurd (f a < 0); only 1: auto with arith; only 1: auto with arith; only 1: intros a Ha; only 1: apply F; only 1: intros b Hb; only 1: apply IHn; only 1: apply Nat.lt_le_trans with (f a); only 1: auto with arith; only 1: auto with arith; only 1: intros a; only 1: apply (H (S (f a))); only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_le_trans	40	0.020091	15	3	2	synth with cache (only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.destruct_list	40	40.364219	152988	4836
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.unlessL	40	40.085228	1994	81
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.nle_pred_r	40	20.707796	11019	2827	4.1.9.2.0	synth with cache (only 1: intros n H; only 1: apply (lt_irrefl n); only 1: rewrite <- (succ_pred n)  at 2; only 1: rewrite lt_succ_r; only 1: now nzsimpl').
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_1_r	40	0.302478	179	61	0.0.0.4.0.1.2	synth with cache (only 1: induction p; only 1: simpl; only 1: f_equal; only 1: now rewrite ?add_carry_spec, ?IHp; only 1: simpl; only 1: now f_equal; only 1: now f_equal).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.DEFINITIONS.IDmorph	40	5.151805	2814	410	0.0.7.2.3.2.3.2.3.4.3.4.3.4	synth with cache (only 1: constructor; only 1: intuition; only 1: reflexivity; only 1: intuition; only 1: reflexivity; only 1: intros n H; only 1: reflexivity; only 1: intros n H; only 1: reflexivity; only 1: intros n H; only 1: reflexivity; only 1: intros; only 1: reflexivity; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.pair_andP	40	1.360348	1	1	0	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_eq	40	0.007073	2	2	0.0	synth with cache (only 1: intros H; only 1: now apply compare_eq_iff).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_max_distr_r	40	3.680476	671	296	1.0.0.1.1.0.1.0.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply add_le_mono_r; only 1: rewrite 2!max_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply add_le_mono_r).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.Eqsth	40	0.034621	19	8	0.0.0.5	synth with cache (only 1: constructor; only 1: congruence; only 1: congruence; only 1: congruence).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_refl	40	0.009177	7	2	2.3	synth with cache (only 1: apply compare_eq_iff; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.plus_le_reg_l	40	40.056622	18836	2369
coq-tactician-stdlib.8.11.dev	Coq.Arith.Euclid.eucl_dev	40	40.221032	87334	7188
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_opp	40	40.375158	29022	6165
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.plus_le_compat_l	40	0.022232	9	2	1	synth with cache (only 1: apply Nat.add_le_mono_l).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_antisymm	40	0.446643	79	32	0.1.0.3.0	synth with cache (only 1: intros x y; only 1: rewrite 2!lt_eq_cases; only 1: intuition; only 1: elim (lt_irrefl x); only 1: now transitivity y).
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Rtauto.pos_eq_refl	40	40.131507	43542	7721
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.add_pos_r	40	4.876716	1073	435	3.2.2.1.0	synth with cache (only 1: intros; only 1: rewrite add_comm; only 1: apply add_pos_nonneg; only 1: auto; only 1: apply le_0_l).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_0	40	2.613345	3747	392	1.3.1.2.22.0.1	synth with cache (only 1: intro n; only 1: eapply Private_OrderTac.Tac.lt_irrefl; only 1: transitivity 1; only 1: rewrite one_succ; only 1: rewrite lt_succ_r; only 1: now apply eq_le_incl; only 1: apply lt_1_2).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalUniqueChoice.unique_choice	40	40.205969	79178	6972
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.even_mult_aux	40	4.404122	1909	359	3	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorEq.BEQ.eqb_nat_eq	40	40.120741	39550	5887
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_trans	40	40.226851	26577	4739
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_comm	40	40.152290	7729	4389
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.unlessR	40	40.032456	638	44
coq-tactician-stdlib.8.11.dev	Coq.Arith.Mult.mult_is_one	40	40.088595	30159	3486
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.Private_BootStrap.add_opp_diag_r	40	0.125850	50	25	0.0.0.0.0.0.4	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite pos_sub_spec, Pos.compare_refl; only 1: simpl; only 1: now rewrite pos_sub_spec, Pos.compare_refl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonpos_l	40	40.208026	7420	2006
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_succ_l	40	40.068755	12956	6264
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.Eq_s_ext	40	0.768073	864	124	8.1.7.3.2	synth with cache (only 1: constructor; only 1: intros x x' Hx y y' Hy; only 1: rewrite Hx, Hy; only 1: trivial; only 1: congruence).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.hd_error_tl_repr	40	40.147165	51026	5526
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.Eq_ext	40	0.070620	5	4	0.0.0.1	synth with cache (only 1: constructor; only 1: solve_proper; only 1: solve_proper; only 1: congruence).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_opp	40	40.334344	21983	5161
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_trans	40	40.255597	18784	3943
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_succ_l	40	0.208646	90	27	0.1.4.1	synth with cache (only 1: intros; only 1: apply le_succ_l; only 1: apply lt_eq_cases; only 1: now left).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_unique	40	40.086673	26839	4110
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_l_z	40	40.290733	24705	6077
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorSpec.eta	40	40.343265	153821	1757
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Pred_Type.Generic.not_all_not_ex	40	40.210034	77978	8296
coq-tactician-stdlib.8.11.dev	Coq.Sets.Multiset.multiset_defs.munion_perm_left	40	40.079013	20119	4832
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.Private_BootStrap.add_comm	40	3.265679	4463	424	10.2.0.0.0.10.2.0.0.0.0.44	synth with cache (only 1: destruct n, m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: simpl; only 1: now rewrite Pos.add_comm; only 1: trivial; only 1: trivial; only 1: trivial; only 1: simpl; only 1: now rewrite Pos.add_comm).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_no_neutral	40	40.077119	22576	4435
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.In_alt'	40	9.991767	8144	1132	0.0.0.0.0.0.0.16.17.0	synth with cache (only 1: unfold In, MapsTo; only 1: firstorder; only 1: induction H; only 1: firstorder; only 1: firstorder; only 1: apply InA_eqk_eqke in H; only 1: destruct H as ((k', e'), (E, H)); only 1: compute in E; only 1: exists e'; only 1: now rewrite E).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_carry_add	40	40.056053	13473	4754
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_reg_r	40	40.071097	18902	5620
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare.discrete_nat	40	40.119464	28726	4868
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.Private_BootStrap.mul_opp_r	40	1.270475	447	225	1.1.0.0.0.1.0.1.0.0.0.0.0.0.0.0.0.1	synth with cache (only 1: destruct n, m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: trivial using pos_sub_opp).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.in_split	40	40.201891	73570	6333
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_unique	40	40.294543	27873	5163
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_same	40	40.129429	41786	6641
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.incl_add	40	5.775081	4465	1373	0.4.0.0.2.0.7	synth with cache (only 1: intros a b; only 1: red; only 1: intros B C x H'; only 1: elim H'; only 1: auto with sets; only 1: unfold Add at 1; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_l_nz	40	40.335842	19192	6092
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorDef.BASES.trunc	40	40.184372	67025	7146
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation.Permutation_nil	40	40.149307	16100	3705
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonneg_r	40	40.279920	8434	1965
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.one_succ	40	0.005514	1	1	0	synth with cache (only 1: exact eq_refl).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.two_succ	40	0.006394	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.add_0_l	40	0.007267	1	1	0	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.Init.Wf.Well_founded_2.well_founded_induction_type_2	40	12.567779	121006	2749
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.radd_ext1_Proper	40	1.730000	877	130	26	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_mono	40	40.210768	9267	2535
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_0	40	3.001369	678	97	0.12.0.6.1	synth with cache (only 1: apply sqrt_unique; only 1: split; only 1: now nzsimpl; only 1: nzsimpl; only 1: apply lt_succ_diag_r).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_l_z	40	40.381348	25959	5953
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_lt_succ_r	40	0.927406	420	133	0.0.9.0	synth with cache (only 1: intros n m LE; only 1: rewrite lt_succ_r; only 1: apply lt_eq_cases; only 1: now left).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.opp_0	40	0.009514	2	2	0.0	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.le_lt_eq_dec	40	40.071850	22223	3082
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_max	40	40.102177	37289	1749
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_reg_l	40	40.076391	19225	5184
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.eq_mul_1_nonneg	40	40.195855	32051	6012
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_small	40	40.378612	31635	5469
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig2.eq_sig2_rect	40	40.227233	91679	4439
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_unique	40	40.390527	22367	2456
coq-tactician-stdlib.8.11.dev	Coq.Logic.WeakFan.Y_unique	40	40.167804	58640	5110
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Prop.NNPP	40	40.120475	43196	6376
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_neq'	40	40.070911	21426	3509
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_cancel_l	40	40.092077	6789	2101
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.induction	40	40.228122	40510	6184
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NIso.Homomorphism.natural_isomorphism_0	40	40.472047	168189	2924
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.itersucc_or_iterpred	40	41.960776	17702	5683
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_carry_reg_r	40	40.101933	3852	1392
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit0_odd	40	40.073266	21987	4141
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.unless_sym	40	40.021628	292	27
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pow2	40	40.272836	7933	1408
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.opp_succ	40	0.834617	570	139	0.0.0.0.9.0.1.0.0.0.3	synth with cache (only 1: destruct n; only 1: simpl; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l; only 1: simpl; only 1: trivial; only 1: simpl; only 1: induction p; only 1: trivial; only 1: trivial; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_0	40	40.364289	10700	1759
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.PartialOrder_proper_type	40	40.153637	4167	1731
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.pred_succ	40	0.011226	2	2	0.0	synth with cache (only 1: unfold succ, pred; only 1: now rewrite <- add_assoc, add_opp_diag_r, add_0_r).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.sub_0_r	40	0.007001	1	1	0	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.rmul_ext1_Proper	40	1.187264	553	86	22	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRopp_ext	40	0.010910	4	2	0.2	synth with cache (only 1: intros a b H; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_0	40	0.492863	933	46	1.3.36	synth with cache (only 1: rewrite abs_eq; only 1: now nzsimpl; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.nth_indep	40	31.434540	34110	7517	0.2.2.0.0.3.1.2.0.1.0.1.0.1.11	synth with cache (only 1: unfold lt; only 1: induction l; only 1: simpl; only 1: induction n; only 1: intros; only 1: inversion H; only 1: intros; only 1: inversion H; only 1: simpl; only 1: destruct n; only 1: intros; only 1: auto; only 1: intros; only 1: apply IHl; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_carry_reg_l	40	40.088798	17036	4626
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SReqe_Reqe	40	0.225896	8	4	0.0.0.4	synth with cache (only 1: constructor; only 1: solve_proper; only 1: solve_proper; only 1: solve_proper).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_le_mono	40	40.188305	25164	5558
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssreflect.unlock	40	40.533726	227619	5260
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeFacts.eqb_alt	40	40.139894	26074	3862
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRopp_mul_l	40	0.008049	6	1	5	synth with cache (only 1: solve_proper).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_assoc	40	40.074556	8250	3435
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRopp_add	40	0.006358	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRsub_def	40	0.006644	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Vectors.Fin.of_nat_ext	40	40.105139	38033	2573
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_lt_0	40	5.646505	3104	835	8.1.1.1.0.0.1.0	synth with cache (only 1: intro n; only 1: induct ltac:(m); only 1: intro H; only 1: false_hyp H nlt_0_r; only 1: intro; only 1: intros _ H; only 1: rewrite lt_succ_r; only 1: apply le_0_l).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pred_pow2	40	40.177194	9831	2523
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Sorted.defs.Sorted_rect	40	40.111166	31139	8615
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_divide	40	40.055141	12953	4653
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.mod_divide	40	40.299388	13019	5049
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.app_eq_unit	40	40.106455	35115	5296
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit0_eqb	40	40.059130	16840	2785
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRIDmorph	40	0.774092	315	49	20	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Non_disjoint_union'	40	29.062945	39168	6911	0.15.4.1.2.0.0.1.0.0.1.1.1	synth with cache (only 1: intros X x H'; only 1: apply Extensionality_Ensembles; only 1: red; only 1: split; only 1: red; only 1: intros x0 H'0; only 1: elim H'0; only 1: auto with sets; only 1: split; only 1: assumption; only 1: red; only 1: destruct 1; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NAdd.NAddProp.eq_add_succ	40	40.226582	23745	4520
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRmorph_Rmorph	40	0.105326	38	4	10	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.unlessP	40	40.076522	830	88
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBase.ZBaseProp.succ_m1	40	40.200447	23982	3531
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorSpec.eq_nth_iff	40	40.214046	88292	4701
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_odd	40	40.060318	15511	2359
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_In_dec	40	40.129431	37664	4852
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.app_inj_tail	40	40.197445	53568	9101
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_2	40	40.199280	18117	2412
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.double_below	40	40.259163	9270	1897
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Add_commutative	40	0.074784	21	9	1.3	synth with cache (only 1: unfold Add; only 1: auto  9 with sets).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit_log2	40	40.042126	10511	3297
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.in_app_or	40	40.147378	53509	7406
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeFacts.eqb_compat	40	40.132149	14732	2524
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.compare_lt_iff	40	40.388935	40970	9457
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_in'	40	12.310355	8296	1815	1.0.0.0.0.0.1.6.12	synth with cache (only 1: intros a a' Ha n; only 1: subst; only 1: induction 1; only 1: tauto; only 1: simpl in *; only 1: tauto; only 1: simpl in *; only 1: tauto; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.PropExtensionality.proof_irrelevance	40	40.218108	76406	6545
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.radd_ext2_Proper	40	0.903443	363	54	23	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.eq_mul_1_nonneg'	40	40.220298	9279	2989
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_pred_l	40	40.153296	7160	1625
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.app_inv_head	40	40.121905	38165	6090
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le	40	40.188224	9587	2185
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.PartialOrder_StrictOrder	40	40.230049	6826	775
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_above_log2	40	40.085433	25606	4977
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_app_head	40	0.454191	146	48	1.0.0.0.6	synth with cache (only 1: induction l; only 1: intros l l' Hperm; only 1: auto; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_iff	40	40.242999	3145	1091
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.app_inv_tail	40	40.161198	54474	7689
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonpos_r	40	10.134874	1956	698	0.1.0.0.0.1.0.0.0.1.0	synth with cache (only 1: intros n m p H1 H2; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: le_elim H1; only 1: le_elim H2; only 1: apply lt_le_incl; only 1: now apply mul_lt_mono_neg_l; only 1: apply eq_le_incl; only 1: now rewrite H2; only 1: apply eq_le_incl; only 1: rewrite H1; only 1: now do 2 rewrite mul_0_l).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_pos_neg	40	40.281213	21382	2652
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.square_le_mono	40	40.232736	13643	4568
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_bits	40	40.081566	24426	3159
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_0_l	40	40.230645	12663	4387
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_pred	40	40.372270	69767	1571
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_eqf	40	1.382824	475	138	4.6.2	synth with cache (only 1: intros x x' Hx; only 1: intro H; only 1: now f_equiv).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.min_0_l	40	40.364957	31969	1349
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_le_succ_r	40	5.985535	3104	749	0.4.0.12.0.0	synth with cache (only 1: intros; only 1: apply lt_eq_cases; only 1: generalize (le_gt_cases n m); only 1: rewrite lt_eq_cases; only 1: rewrite lt_succ_r; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_assoc	40	40.297935	9798	2792
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.rmul_ext2_Proper	40	0.954364	348	55	22	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.zero_or_succ	40	3.810750	3845	357	0.2.8.13.3	synth with cache (only 1: cases ltac:(n); only 1: intuition; only 1: destr_bool; only 1: right; only 1: now exists n).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.nth_in_or_default	40	40.122740	45794	4567
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_mem_ind	40	40.152317	54117	5224
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_le_square	40	40.074230	18184	6621
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.nth_default_eq	40	40.154759	50067	12006
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ropp_ext2_Proper	40	0.381333	324	46	14.1	synth with cache (only 1: intros x y H; only 1: simpl_relation).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_diag	40	40.297236	7095	1591
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div_pow2_bits	40	40.065009	17156	3302
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.strong_rec_wd	40	40.339102	18746	6324
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_neg_pos	40	40.260084	18729	3327
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectConnectives.nandP	40	0.122251	3	1	2	synth with cache (only 1: by case b1; case b2; constructor; auto; case).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.min_0_r	40	40.406245	63341	3058
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Finite_alt	40	40.169983	44589	2652
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.nth_error_app2	40	0.715833	236	101	0.2.0.0.1.0.0.0.0	synth with cache (only 1: revert l; only 1: induction n; only 1: intros [| a l] H; only 1: auto; only 1: easy; only 1: intros [| a l] H; only 1: auto; only 1: apply IHn; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_nonpos_nonneg	40	40.225417	3679	1868
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.nth_In	40	40.215262	62572	11346
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_add_diag_r	40	40.338624	12596	6127
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_xI_pred_double	40	40.051960	10134	4221
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectConnectives.norP	40	0.186731	1	1	0	synth with cache (only 1: by case b1; case b2; constructor => //; case).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InA_cons	40	40.138564	46418	8965
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_ngt_iff	40	0.008673	2	1	1	synth with cache (only 1: now rewrite <- compare_lt_iff, compare_antisym, CompOpp_iff).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_nlt_iff	40	0.013245	5	1	4	synth with cache (only 1: now rewrite <- compare_lt_iff, compare_antisym, CompOpp_iff).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_mod	40	40.308013	25330	6569
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectConnectives.implyP	40	0.076353	1	1	0	synth with cache (only 1: by case b1; case b2; constructor; auto; case).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pos	40	40.195292	12677	2245
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.sincl_add_x	40	40.141147	29149	7267
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.initial_alt2	40	5.078252	8484	861	13.17	synth with cache (only 1: intros x; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.finite_cardinal	40	40.315898	104368	6923
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_add_distr_r	40	40.098666	4396	1705
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Non_disjoint_union	40	40.119794	38447	3849
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_abs_r	40	40.257019	18022	5108
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.In_nth	40	40.224624	90444	4211
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.discr	40	40.111856	35736	5311
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mul_pow2_bits_add	40	40.031948	8547	1653
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.inj_succ	40	40.099120	32229	3593
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andTb	40	0.171745	1	1	0	synth with cache (only 1: by [  ]).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.peano_rect_succ	40	40.111141	21033	6055
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_succ_l	40	40.378653	19679	3914
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andFb	40	0.270363	2	1	1	synth with cache (only 1: by [  ]).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.nth_error_nth'	40	1.487730	500	222	0.1.0.2.1.1.1	synth with cache (only 1: induction l; only 1: intros; only 1: easy; only 1: intros [| ] ?; only 1: auto; only 1: simpl; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_1_r_abs	40	40.247267	22596	5949
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_cnf_tt_inv	40	35.070943	81470	3562	20.0.67	synth with cache (only 1: intros [| a l] H; only 1: reflexivity; only 1: now rewrite ?firstn_nil).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_max_distr_l	40	40.399948	7366	971
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.prop_ext_A_eq_A_imp_A	40	36.419858	54388	2436	14.41.37	synth with cache (only 1: intros Ext EM A; only 1: apply Ext; only 1: firstorder using PredExt_imp_PropExt, PredExt_imp_PropFunExt, PropExt_and_PropFunExt_imp_PredExt).
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.left_prefix	40	40.141986	48429	6520
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_1_r	40	40.251963	34800	5742
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.inj_add	40	40.098704	28195	5902
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_wd	40	40.337202	15497	2123
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_nonzero	40	40.344759	27823	6107
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.count_occ_nil	40	0.006434	3	1	2	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Injective_map_NoDup	40	40.107131	35151	5249
coq-tactician-stdlib.8.11.dev	Coq.Sets.Image.Image.Im_def	40	40.277265	60571	6686
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_l_z	40	40.272058	27145	4565
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.eqke_trans	40	40.096426	8262	1893
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset.The_power_set_partial_order.Empty_set_is_Bottom	40	40.096431	27827	6282
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_le_pred	40	40.284211	18227	5309
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_1_r	40	40.364852	17099	3834
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.incl_soustr_add_l	40	40.104413	31319	9418
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_spec_le	40	16.515863	7944	3080	11.0.0.0.2.0.0.0.0	synth with cache (only 1: destruct (max_spec n m); only 1: left; only 1: intuition; only 1: order; only 1: apply min_l; only 1: order; only 1: right; only 1: intuition; only 1: now apply min_r).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_l_nz	40	40.087057	23750	4813
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.recursion_wd	40	40.152816	45228	4959
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.BinList.MakeBinList.jump_tl	40	40.197424	68726	3988
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.inj_mul	40	40.084988	22775	7272
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation.Permutation_nil_cons	40	40.115430	41260	4260
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.bind_unless	40	40.083054	1029	92
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListDec.Dec_in_Prop.incl_decidable	40	40.123872	39353	7798
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset.The_power_set_partial_order.Intersection_maximal	40	0.012458	5	4	1.0.0.0	synth with cache (only 1: intros a b X H' H'0; only 1: red; only 1: intros x H'1; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset.The_power_set_partial_order.Union_increases_l	40	0.012731	9	4	2.2.1	synth with cache (only 1: red; only 1: intros H'1 H'2; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Infinite_sets.Infinite_sets.make_new_approximant	40	40.183558	38018	7272
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset.The_power_set_partial_order.Union_increases_r	40	0.004856	2	1	1	synth with cache (only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.NoDupA_altdef	40	40.134359	42850	9216
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_l_z	40	40.097188	26321	6142
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset.The_power_set_partial_order.Intersection_decreases_l	40	0.078863	49	18	0.3.3	synth with cache (only 1: intro A; only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.MOT_to_OT.eq_dec	40	40.137088	52567	5636
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.nth_overflow	40	40.169632	54549	9853
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.eval_f_morph	40	40.169833	58511	8112
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_id	40	0.235641	602	30	0.33	synth with cache (only 1: apply min_l; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.recursion_succ	40	40.233777	62093	4062
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Prop.Eq_rect_eq.eq_rect_eq	40	40.211298	74952	9175
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_null	40	40.229899	14827	3222
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_l_nz	40	40.280433	17302	3743
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset.The_power_set_partial_order.Intersection_decreases_r	40	0.014481	6	5	0.0.0.1.0	synth with cache (only 1: intros a b; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Classes.EquivDec.unit_eqdec_obligation_1	40	40.248660	113259	1101
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Gt_Psucc	40	40.098395	32195	4971
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_mem_correct2	40	6.746537	4367	1243	2.4.4.0.0.0.0.5.0.0	synth with cache (only 1: simple induction x; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intros a0 l; only 1: elim (Aeq_dec a a0); only 1: auto with datatypes; only 1: unfold not; only 1: intros; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation.Permutation_sym	40	40.203119	36913	4835
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.inj_xO	40	40.051938	14785	2060
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_m1	40	40.059618	16721	2803
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.IsTO.le_lteq	40	0.515282	200	84	1.0.0.0.1.3	synth with cache (only 1: constructor; only 1: destruct (compare x y); only 1: auto; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_preorder	40	40.249710	20142	2991
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.add_succ_l	40	40.153470	53666	3113
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_min_distr_r	40	2.804895	397	161	1.0.0.1.1.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?add_le_mono_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_r; only 1: rewrite 2!min_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_r).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.compare_lt_iff	40	0.066916	35	21	0.1.2.0	synth with cache (only 1: revert m; only 1: intro m; only 1: unfold ltb, lt; only 1: now split).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.compare_le_iff	40	0.004723	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.sub_succ_r	40	40.105145	24733	6442
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.is_empty_1	40	40.049385	5656	531
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.eqlistA_equiv	40	40.220880	11471	535
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_X_inv	40	40.158157	39586	3255
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle1	40	19.160189	3990	1186	0.0.0.2.3.3.5.1	synth with cache (only 1: intros n m; only 1: intros; only 1: rewrite <- 2!add_assoc, add_cancel_l; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.lt_antirefl	40	40.302859	125608	4971
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.inf_iff	40	40.061491	19602	2680
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_mem_correct1	40	40.097063	31809	3979
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.eqlistA_equivlistA	40	40.050759	10254	3392
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.count_occ_cons_neq	40	0.014957	3	3	0.0.0	synth with cache (only 1: intro H; only 1: simpl; only 1: now destruct (eq_dec x y)).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle3	40	0.095904	6	6	0.0.0.0.0.0	synth with cache (only 1: intros n m p; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms_Relations.relation_disjunction_morphism	40	40.047154	8834	3044
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.sub_1_r	40	0.026145	2	2	0.0	synth with cache (only 1: intro n; only 1: now nzsimpl').
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_xO_pred_double	40	40.108590	8330	3099
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Mergesort.Sort.Sorted_merge	40	40.183566	71305	6982
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.if_zero_wd	40	40.081149	13627	1929
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.lt_eq	40	40.156242	39576	4903
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.eq_le	40	0.108057	4	1	3	synth with cache (only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.neq_eq	40	0.008947	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.eq_neq	40	0.008900	2	1	1	synth with cache (only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.mem_1	40	40.137655	10509	2356
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.le_lt_trans	40	0.038171	14	4	2	synth with cache (only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.Some_inj	40	37.265418	5125	172
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.prop_ext_retract_A_A_imp_A	40	40.147127	62459	2903
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms_Relations.predicate_equivalence_pointwise	40	0.007562	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.is_empty	40	40.250253	98254	6262
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.lt_le_trans	40	0.088970	17	6	2	synth with cache (only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_0_1	40	0.021923	5	3	0.2.0	synth with cache (only 1: rewrite one_succ; only 1: apply lt_le_incl; only 1: apply lt_succ_diag_r).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectConnectives.and3P	40	14.578500	2747	67
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms_Relations.predicate_implication_pointwise	40	0.010343	3	2	1.0	synth with cache (only 1: do 2 red; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.eq_lt	40	40.181938	58948	6198
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andbT	40	4.888022	833	34	40	synth with cache (only 1: by case).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.le_neq	40	0.052415	30	10	7	synth with cache (only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.le_trans	40	0.009842	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.le_antisym	40	0.007539	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Peano_dec.le_unique	40	40.203955	82263	6714
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.neq_sym	40	0.008316	1	1	0	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Integers.Integers_sect.le_total_order	40	40.099779	33925	4590
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms_Relations.relation_equivalence_pointwise	40	0.099749	9	5	1.0.0	synth with cache (only 1: simpl_relation; only 1: reduce in H; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InA_singleton	40	0.030225	10	4	0.5.0	synth with cache (only 1: intuition; only 1: invlist InA; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.Add_preserves_Finite	40	40.117335	38079	6077
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.gt_not_eq	40	0.006227	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.lt_le	40	0.015115	14	3	4	synth with cache (only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms_Relations.subrelation_pointwise	40	0.016242	3	2	1.0	synth with cache (only 1: intro; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andbF	40	0.107192	2	1	1	synth with cache (only 1: by case).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.eq_not_lt	40	0.006177	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.eq_not_gt	40	0.005952	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms_Relations.flip_pointwise_relation	40	0.007150	1	1	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.lt_not_gt	40	0.006043	1	1	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andbb	40	0.131772	1	1	0	synth with cache (only 1: by case).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.lt_compat	40	40.102896	22095	2843
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeuclid.ZEuclid.mod_wd	40	0.023359	4	3	0.0.1	synth with cache (only 1: intros a a' Ha b b' Hb; only 1: Z.bitwise; only 1: now rewrite Ha, Hb).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeuclid.ZEuclid.div_wd	40	0.023426	4	3	0.0.1	synth with cache (only 1: intros a a' Ha b b' Hb; only 1: Z.bitwise; only 1: now rewrite Ha, Hb).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.mem	40	40.052803	11268	3297
coq-tactician-stdlib.8.11.dev	Coq.micromega.Refl.make_conj_in	40	40.165541	55402	6995
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.mul_succ_l	40	40.067150	17658	5103
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.if_cnf_tt	40	2.194264	3222	320	3.0.0.12.12	synth with cache (only 1: intros n; only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: congruence).
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.In_alt	40	40.241312	44365	5827
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.mem_2	40	40.176834	27306	6271
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.add	40	40.094467	18789	5762
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andbA	40	0.167585	2	1	1	synth with cache (only 1: by case).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.mem_spec	40	40.167198	60874	5230
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andbCA	40	0.007368	1	1	0	synth with cache (only 1: by do 2!case).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andbAC	40	0.011236	1	1	0	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersAlt.Update_OT.lt_strorder	40	40.183791	75529	2318
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Add_distributes	40	5.268124	2973	674	1.0.8.7.0	synth with cache (only 1: unfold Add; only 1: intros a b X H' H'0; only 1: apply Extensionality_Ensembles; only 1: red; only 1: auto  10 with sets).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andbACA	40	0.047867	1	1	0	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.orTb	40	0.070325	1	1	0	synth with cache (only 1: by [  ]).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.elim_compare_gt	40	0.468768	199	78	0.1.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: case (compare x y); only 1: intros H'; only 1: exfalso; only 1: order; only 1: intros H'; only 1: exfalso; only 1: order; only 1: intros H'; only 1: exists H'; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.setcover_intro	40	0.025058	21	9	3.2	synth with cache (only 1: intros A B C; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.orFb	40	0.036389	1	1	0	synth with cache (only 1: by [  ]).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.equal_spec	40	40.270344	47751	3620
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.orbT	40	0.008166	2	1	1	synth with cache (only 1: Bool.destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.find_2	40	40.172263	13988	2121
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidPermutation.Permutation.Equivalence_instance_0	40	40.061874	15555	1159
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.In_nil	40	0.332045	108	36	3.4.0	synth with cache (only 1: unfold In, MapsTo; only 1: firstorder; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.eqb_eq	40	40.082020	22954	7321
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.orbF	40	0.038843	2	1	1	synth with cache (only 1: by case).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.subset_spec	40	40.132834	47005	3515
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.orbb	40	0.035995	1	1	0	synth with cache (only 1: by case).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.orbC	40	0.007413	1	1	0	synth with cache (only 1: by do 2!case).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.remove	40	40.141520	47344	8228
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.orbA	40	0.041032	1	1	0	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersAlt.Update_OT.lt_compat	40	40.128014	30040	4143
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.orbCA	40	0.011182	1	1	0	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.orbAC	40	0.011785	1	1	0	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.orbACA	40	0.020352	1	1	0	synth with cache (only 1: by do 4!case).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.PartialOrder_StrictOrder	40	40.262607	18866	2042
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.ext_prop_fixpoint	40	40.176588	33764	1098
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.elim_compare_lt	40	1.646562	653	200	1.0.0.1.0.0.0.1.0.0.0	synth with cache (only 1: intros; only 1: case (compare x y); only 1: intros H'; only 1: exists H'; only 1: auto; only 1: intros H'; only 1: exfalso; only 1: order; only 1: intros H'; only 1: exfalso; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.max_r	40	0.117097	43	25	1.0.0.1.1	synth with cache (only 1: unfold max, le; only 1: case compare; only 1: trivial; only 1: trivial; only 1: now destruct 1).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andbN	40	0.301543	1	1	0	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.union	40	40.172633	60583	1771
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.Power.pow_pos_swap	40	40.149140	40311	587
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeRev.lt_strorder	40	40.310889	55071	3100
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.max_l	40	40.216780	74815	16299
coq-tactician-stdlib.8.11.dev	Coq.Classes.SetoidClass.nequiv_equiv_trans	40	40.073376	22984	3922
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.compare_le_iff	40	40.480274	37567	8134
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andNb	40	0.206824	1	1	0	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.In_eq	40	0.054824	20	6	0.1.2	synth with cache (only 1: intros; only 1: rewrite <- H; only 1: auto with ordered_type).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.ltb_tree_iff	40	40.103845	33534	5758
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.orbN	40	0.006577	2	1	1	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.find_1	40	40.080690	22117	6114
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.orNb	40	0.005963	1	1	0	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.lt_total	40	40.179860	30592	7252
coq-tactician-stdlib.8.11.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.Singleton_is_finite	40	8.162283	27864	1036	0.71.2	synth with cache (only 1: intro; only 1: rewrite <- (Empty_set_zero' U x); only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andb_orl	40	0.138203	3	1	2	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andb_orr	40	0.079141	1	1	0	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.nth_split	40	40.163209	56107	7015
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeRev.le_lteq	40	40.255778	47514	5162
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.orb_andl	40	0.011617	1	1	0	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.gtb_tree_iff	40	40.077202	20262	7188
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.orb_andr	40	0.146179	1	1	0	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.CompareSpec2Type	40	40.823393	363005	10965
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.nth_error_nth	40	9.798294	8546	1782	2.0.1.4.0.1.3.0.0.6.2.0	synth with cache (only 1: induction l; only 1: simpl; only 1: induction n as [| n hn]; only 1: now symmetry; only 1: now symmetry; only 1: destruct n; only 1: simpl; only 1: intros; only 1: inversion H; only 1: auto; only 1: simpl; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_compat_l	40	40.183122	13950	2736
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_app_tail	40	2.019442	507	222	1.0.3.0.1.0.0.3	synth with cache (only 1: induction 1; only 1: induction l; only 1: eauto; only 1: intuition; only 1: now apply permA_skip; only 1: simpl; only 1: eauto; only 1: do 2 (etransitivity; try eassumption)).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.isok_iff	40	40.082877	14835	2146
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.mem_spec	40	40.087738	24709	5463
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.In_node_iff	40	0.097855	9	3	3	synth with cache (only 1: intuition_in).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.unless_contra	40	40.080887	2562	133
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.is_empty_1	40	40.170117	37226	1561
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.In_leaf_iff	40	0.024729	8	2	5.1	synth with cache (only 1: intro H; only 1: intuition_in).
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Lget_map	40	40.194083	37269	6234
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.nth_error_In	40	40.205827	70910	11317
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.if_zero_0	40	40.197241	74626	4903
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.gt_leaf	40	0.012275	2	2	0.0	synth with cache (only 1: red; only 1: inversion 1).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.lt_dec	40	3.110809	1448	282	4.3.0.4.10	synth with cache (only 1: intros; only 1: destruct (compare x y); only 1: auto; only 1: auto with ordered_type; only 1: auto with ordered_type).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.lt_leaf	40	0.250541	277	43	6.8	synth with cache (only 1: intros x y z; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.even_plus_split	40	40.085136	21078	3119
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InA_double_head	40	4.183293	1698	225	1.0.27	synth with cache (only 1: rewrite InA_altdef, Exists_exists; only 1: rewrite InA_altdef, Exists_exists; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.mem_1	40	40.167681	30965	4066
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.isok_Ok	40	40.085697	29746	2220
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InA_permute_heads	40	0.055423	3	2	1.0	synth with cache (only 1: rewrite !InA_cons; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.gt_tree_node	40	0.176703	12	4	0.0.3	synth with cache (only 1: red; only 1: intuition_in; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectConnectives.negPf	40	19.641469	350	20	26	synth with cache (only 1: by case b1; constructor).
coq-tactician-stdlib.8.11.dev	Coq.Classes.EquivDec.bool_function_eqdec_obligation_1	40	6.077703	6993	111
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.ListIn_In	40	2.276516	1494	379	0.3.0.2.0.0.9	synth with cache (only 1: simple induction l; only 1: simpl; only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: simpl; only 1: intuition; only 1: subst; only 1: auto with ordered_type).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.isok_iff	40	40.108797	26467	4364
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.lt_tree_not_in	40	0.174843	66	19	0.1.5	synth with cache (only 1: intuition_in; only 1: eapply OrderTac.lt_irrefl; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Partial_Order.Partial_order_facts.Strict_Rel_Transitive	40	40.139282	45040	13120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.lt_tree_trans	40	0.047370	23	6	2.4	synth with cache (only 1: intros; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.gt_tree_not_in	40	0.012522	4	3	1.0.0	synth with cache (only 1: intros; only 1: intro; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.gt_tree_trans	40	0.042110	17	4	1	synth with cache (only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.inter	40	40.223372	59744	4512
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.succ_lt_mono	40	17.066077	7706	2486	1.2.14.0	synth with cache (only 1: intros; only 1: generalize (le_gt_cases n m); only 1: rewrite lt_succ_r, le_succ_l, !lt_eq_cases; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Disjoint_Union.Wf_Disjoint_Union.wf_disjoint_sum	40	40.180191	64885	14491
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NParity.NParityProp.odd_sub	40	40.223282	10570	5543
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andb_idr	40	1.524013	1	1	0	synth with cache (only 1: by case : a ; case : b  => // ->).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeRev.compare_spec	40	40.324526	90046	6711
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.lt_tree_node	40	1.045718	153	44	0.0.2.4.1	synth with cache (only 1: intros; only 1: inversion 1; only 1: order; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_0_2	40	0.018791	5	3	0.1.1	synth with cache (only 1: rewrite two_succ; only 1: rewrite lt_succ_r; only 1: apply lt_le_incl, lt_0_1).
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Lget_app	40	6.850044	7982	816	1.1.0.12.0.0.1.8.12	synth with cache (only 1: induction l; only 1: intros [| n]; only 1: simpl; only 1: easy; only 1: easy; only 1: intros [| n]; only 1: auto; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.mem_2	40	40.081976	24072	7949
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_eq_0_iff	40	40.278416	22215	5482
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.if_zero_succ	40	40.152209	53837	5165
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Store.Tget_Tempty	40	0.016045	6	2	2.2	synth with cache (only 1: intros; only 1: now destruct p).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.gt_tree_compat	40	0.478959	93	48	0.0.0.3.0.0.0	synth with cache (only 1: apply proper_sym_impl_iff_2; only 1: auto with *; only 1: auto with *; only 1: intros x x' Hx s s' Hs H y Hy; only 1: subst; only 1: setoid_rewrite  <- Hx; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_0_2	40	0.296880	112	45	0.4.1.0.1	synth with cache (only 1: transitivity 1; only 1: apply lt_le_incl, lt_0_1; only 1: rewrite two_succ; only 1: apply lt_le_incl; only 1: apply lt_succ_diag_r).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.empty_ok	40	0.005928	3	1	2	synth with cache (only 1: intuition_in).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_eq_iff	40	40.116490	37739	4167
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.find_2	40	40.073455	17569	2572
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.empty_spec	40	0.322276	153	45	12	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_wd	40	40.118734	11959	2889
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_app	40	40.049206	13766	3204
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.N2Nat.inj_double	40	26.642298	10304	873	0.3.8.9.1.1.20	synth with cache (only 1: destruct a as [| p]; only 1: now Nat.nzsimpl; only 1: simpl; only 1: unfold Pos.to_nat; only 1: simpl; only 1: rewrite Pmult_nat_mult, Nat.mul_comm; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.find_1	40	40.081038	23514	6338
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.In_1	40	40.088922	29239	2931
coq-tactician-stdlib.8.11.dev	Coq.Logic.Berardi.Berardis_paradox.classical_proof_irrelevance	40	40.712620	311036	7522
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_small_iff	40	40.209920	12944	4222
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_spec	40	40.242550	12066	5731
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Inf_eq	40	2.295226	2236	441	1.12.5.0	synth with cache (only 1: intros x y z; only 1: intro; only 1: rewrite <- H; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.ListIn_Inf	40	0.251815	160	52	1.1.0.0.0.5	synth with cache (only 1: simple induction l; only 1: simpl; only 1: intros; only 1: constructor; only 1: simpl; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Lget_app_Some	40	3.043491	2297	421	0.0.0.2.12.1.3	synth with cache (only 1: induction l; only 1: inversion 1; only 1: intros H; only 1: intros [| ] ? Heq; only 1: auto; only 1: simpl; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.Equivalences.eq_rect_eq_on__eq_dep_eq_on	40	40.435078	171929	6195
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.add_1	40	40.144142	2549	434
coq-tactician-stdlib.8.11.dev	Coq.Logic.Eqdep_dec.EqdepDec.eq_proofs_unicity_on	40	40.351364	141962	6777
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andbC	40	6.845423	1457	47
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_same	40	40.082785	19677	7021
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.In_Inf	40	0.250060	291	44	0.0.0.3.8	synth with cache (only 1: simple induction l; only 1: intros; only 1: auto with ordered_type; only 1: intros x y z; only 1: auto with ordered_type).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.singleton_spec	40	34.841998	23636	2320	14.46	synth with cache (only 1: compute; only 1: intuition_in).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.In_compat	40	4.268203	1981	464	1.3.2.0.0.1.7	synth with cache (only 1: apply proper_sym_impl_iff_2; only 1: auto; only 1: red; only 1: auto with *; only 1: reduce; only 1: subst; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.singleton_ok	40	0.018667	7	5	0.0.0.0.2	synth with cache (only 1: right; only 1: auto; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.Equivalences.UIP_on__UIP_refl_on	40	0.098161	160	40	4.5.1	synth with cache (only 1: red; only 1: intros; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.PropExtensionalityFacts.PropExt_and_PropFunExt_iff_PredExt	40	40.465719	193638	17492
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_small	40	40.276872	16167	3640
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset.The_power_set_partial_order.Union_minimal	40	29.115804	6985	2099	0.0.8.3.1.5	synth with cache (only 1: intros H'1 H'2; only 1: intro A; only 1: intros x H'; only 1: destruct 1; only 1: auto with sets; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andb_id2l	40	2.799205	64	13	3.3.1	synth with cache (only 1: Bool.destr_bool; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andb_id2r	40	0.083654	1	1	0	synth with cache (only 1: by case : a ; case : b ; case : c  => // ->).
coq-tactician-stdlib.8.11.dev	Coq.Lists.Streams.Streams.ntheq_eqst	40	40.240322	74234	16432
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Union.WfUnion.wf_union	40	40.289314	114749	12607
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.In_nth_error	40	40.175221	61296	8685
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.orb_idl	40	0.297345	1	1	0	synth with cache (only 1: by case : a ; case : b  => // ->).
coq-tactician-stdlib.8.11.dev	Coq.Logic.HLevels.hset_hprop	40	40.347389	141123	10056
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.classicP	40	40.034566	1538	143
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_trans_t1n	40	40.280055	107652	11571
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_lt_cancel	40	40.444283	33301	5248
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_l	40	3.208104	1676	474	0.3.0.8.0	synth with cache (only 1: intros; only 1: apply pow_le_mono_l; only 1: split; only 1: apply le_0_l; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.orb_id2l	40	0.369982	1	1	0	synth with cache (only 1: by case : a ; case : b ; case : c  => // ->).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_min_r	40	1.204192	885	178	1.4.2.5.9	synth with cache (only 1: rewrite le_lteq; only 1: destruct (min_spec n m); only 1: intuition; only 1: order || (right; order) || (left; order); only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.orb_idr	40	0.781747	1	1	0	synth with cache (only 1: by case : a ; case : b  => // ->).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_min_l	40	0.010658	2	1	1	synth with cache (only 1: solve_min).
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Inverse_Image.Inverse_Image.Acc_inverse_rel	40	40.267413	91782	9620
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_l_iff	40	0.037690	14	3	3	synth with cache (only 1: solve_min).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZBase.NZBaseProp.succ_inj_wd_neg	40	30.751127	25109	4174	0.1.0.0.1.0.24.0	synth with cache (only 1: intros; only 1: apply imp_iff_compat_r; only 1: split; only 1: intros; only 1: apply pred_wd in H; only 1: now do 2 rewrite pred_succ in H; only 1: intros; only 1: now f_equiv).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_r_iff	40	0.015051	2	1	1	synth with cache (only 1: solve_min).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_partialorder	40	40.225167	26380	4301
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_gt_1	40	0.372168	135	54	0.1.0.0.3	synth with cache (only 1: intros a b Ha Hb; only 1: rewrite <- (Private_NZPow.pow_1_l b) by order; only 1: apply Private_NZPow.pow_lt_mono_l; only 1: order; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_trans_t1n_iff	40	40.346856	142148	16415
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.orb_id2r	40	0.785938	1	1	0	synth with cache (only 1: by case : a ; case : b ; case : c  => // ->).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_mod_eq_0	40	40.037336	9240	2061
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andb_idl	40	6.284844	50	8	5.4	synth with cache (only 1: Bool.destr_bool; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.quot_div_exact	40	40.042986	10236	3485
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Store.get_empty	40	0.007398	2	1	1	synth with cache (only 1: now intros []).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.negb_and	40	1.067268	3	1	2	synth with cache (only 1: Bool.destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andbK	40	0.716021	1	1	0	synth with cache (only 1: by case : a ; case : b  => // ->).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.negb_or	40	0.989668	1	1	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andKb	40	0.432594	1	1	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Lexicographic_Product.Wf_Symmetric_Product.Acc_symprod	40
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt1n_step	40	0.171917	199	27	0.0.8.6	synth with cache (only 1: intros; only 1: right with y; only 1: assumption; only 1: left).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.implybT	40	0.041393	3	1	2	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.find_eq	40	40.078195	22705	7212
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.implybF	40	0.006462	2	1	1	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.orbK	40	0.337397	1	1	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.implyTb	40	0.005437	1	1	0	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_mem_complete2	40	11.769134	6885	1814	0.0.0.4.8.0.0.0.0.0.0	synth with cache (only 1: simple induction x; only 1: simpl; only 1: tauto; only 1: simpl; only 1: intros a0 l; only 1: elim (Aeq_dec a a0); only 1: intros; only 1: absurd (a0 = a); only 1: auto with datatypes; only 1: auto with datatypes; only 1: auto with datatypes).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.implybb	40	0.040029	2	1	1	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.implyFb	40	0.138052	1	1	0	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.negb_imply	40	0.108657	2	1	1	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.OrderedTypeLists.Inf_alt	40	40.136655	35943	6063
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.orKb	40	0.522481	1	1	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_le_mono_l	40	18.118900	7992	1877	0.0.8.13	synth with cache (only 1: intros a b Ha Hb; only 1: apply mul_le_mono_nonneg_l; only 1: apply le_0_l; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.Equivalences.eq_dep_eq_on__UIP_on	40	36.377301	177846	8168	5.18.0.1.3.13.36.38	synth with cache (only 1: red; only 1: subst; only 1: intro eq_rect_eq; only 1: intro H; only 1: rewrite <- eq_rect_eq; only 1: exact eq_refl; only 1: destruct H; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.lt_tree_compat	40	5.784790	2323	622	1.1.4.4.1.0.0.0	synth with cache (only 1: apply proper_sym_impl_iff_2; only 1: auto with *; only 1: auto with *; only 1: repeat red; only 1: intros A x P H y H0; only 1: intuition; only 1: subst; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.implybE	40	0.368912	1	1	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Classical_sets.Ensembles_classical.not_empty_Inhabited	40	40.124088	46450	4990
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.implybNN	40	0.300170	1	1	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.11.dev	Coq.Lists.StreamMemo.DependentMemoFunction.dmemo_get_correct	40	40.446236	186185	9456
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mul_pow2_bits_high	40	40.056403	14133	3569
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.implybN	40	0.545681	2	1	1	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mul_pow2_bits_low	40	40.037343	9413	2011
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.Equivalences.Streicher_K_on__eq_rect_eq_on	40	0.027790	26	10	2.2.2	synth with cache (only 1: intros eq_rect_eq; only 1: red; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mod_pow2_bits_high	40	40.036722	7396	1737
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.In_alt	40	40.203340	54524	6058
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.MapsTo_eq	40	14.485628	12492	1505	1.1.13.1.8.11	synth with cache (only 1: intros Q H H'; only 1: induction 2; only 1: destruct y; only 1: firstorder; only 1: eauto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.KeyOrderedType.ltk_compat	40	0.809299	193	47	11	synth with cache (only 1: solve_proper).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.addFb	40	0.005573	1	1	0	synth with cache (only 1: by [  ]).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_ge_cases	40	1.355621	603	185	1.0.0.8.0	synth with cache (only 1: intros n m; only 1: rewrite lt_eq_cases; only 1: generalize (le_gt_cases n m); only 1: rewrite lt_eq_cases; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.addbF	40	0.006726	1	1	0	synth with cache (only 1: by case).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.implyNb	40	1.056183	1	1	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_ge_cases	40	0.044074	13	9	0.0.1.0	synth with cache (only 1: intros n m; only 1: destruct (le_gt_cases m n); only 1: intuition order; only 1: intuition order).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.addbb	40	0.041901	2	1	1	synth with cache (only 1: by case).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit0_odd	40	40.048074	11506	4410
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_lt	40	28.334853	10695	4416	0.0.0.0.0.0.0.1.0.0.0.0.1.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: assert (0 < b) by (apply lt_trans with 1; auto using lt_0_1); only 1: destruct (lt_ge_cases a b); only 1: rewrite Private_NZDiv.div_small; only 1: order; only 1: order; only 1: rewrite (div_mod a b)  at 2 by order; only 1: apply lt_le_trans with (b * (a / b)); only 1: rewrite <- (mul_1_l (a / b))  at 1; only 1: rewrite <- mul_lt_mono_pos_r; only 1: auto; only 1: apply Private_NZDiv.div_str_pos; only 1: auto; only 1: rewrite <- (add_0_r (b * (a / b)))  at 1; only 1: rewrite <- add_le_mono_l; only 1: destruct (mod_bound_pos a b); only 1: order; only 1: auto; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.addbC	40	0.011075	1	1	0	synth with cache (only 1: by do 2!case).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.implyb_id2l	40	0.595992	1	1	0	synth with cache (only 1: by case : a ; case : b ; case : c  => // ->).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.classicW	40	40.015101	914	61
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.nat_N_Z	40	0.078031	31	16	0.0.0.1.1.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: destruct n as [| [| n]]; only 1: trivial; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_2_facts.Rstar_cases	40	40.273103	94973	11582
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.addbA	40	0.042212	1	1	0	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.addbCA	40	0.012200	1	1	0	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.implyb_idl	40	0.974484	1	1	0	synth with cache (only 1: by case : a ; case : b  => // ->).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.StrictOrder_PreOrder	40	40.144180	8134	1318
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.addbAC	40	0.011092	1	1	0	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.implyb_idr	40	0.898593	1	1	0	synth with cache (only 1: by case : a ; case : b  => // ->).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_le_mono_r	40	1.457380	853	235	0.0.0.11.0	synth with cache (only 1: intros; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: apply mul_le_mono_nonneg_l; only 1: apply le_0_l; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.addbACA	40	0.022620	1	1	0	synth with cache (only 1: by do 4!case).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_le	40	26.906342	6322	2895	9.1.2.1	synth with cache (only 1: intros n m; only 1: rewrite <- (succ_pred m); only 1: rewrite <- le_succ_l; only 1: now rewrite succ_pred).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andb_addl	40	0.012978	1	1	0	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.add_spec	40	40.065254	18356	3199
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit0_eqb	40	40.132263	16462	4872
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.addKb	40	0.023287	17	2	8	synth with cache (only 1: by do 2!case).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andb_addr	40	0.142114	1	1	0	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.addbK	40	0.008205	1	1	0	synth with cache (only 1: by do 2!case).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.addIb	40	0.022485	4	1	3	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N_nat_Z	40	0.664467	434	114	0.1.0.0.0.0.1.2.0.8	synth with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: apply Pos2Nat.inj; only 1: rewrite H; only 1: apply SuccNat2Pos.id_succ).
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rtn1_step	40	2.238774	10342	688	1.1.8.14.25	synth with cache (only 1: intro y0; only 1: intro H; only 1: right with y0; only 1: assumption; only 1: left).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.addTb	40	0.006428	1	1	0	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.positive_nat_Z	40	0.024281	5	5	0.0.0.0.0	synth with cache (only 1: destruct (Pos2Nat.is_succ p) as (m, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit0_mod	40	40.057276	15135	3786
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.positive_N_Z	40	0.005863	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.addbT	40	0.008393	2	1	1	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.positive_N_nat	40	0.006725	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.positive_nat_N	40	0.031544	8	7	0.1.0.0.0.0.0	synth with cache (only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: apply Pos2Nat.inj; only 1: rewrite H; only 1: apply SuccNat2Pos.id_succ).
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt1n_rt	40	0.090928	138	37	0.2.5.0.0	synth with cache (only 1: induction 1; only 1: constructor 2; only 1: apply rt_trans with y; only 1: auto with sets; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.addbI	40	0.237845	1	1	0	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.addbN	40	0.207037	2	1	1	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.11.dev	Coq.Bool.BoolEq.Bool_eq_dec.exists_beq_eq	40	40.507761	210287	4832
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z_N_nat	40	0.200819	141	26	0.0.1.0.11	synth with cache (only 1: unfold N.div2, N.to_nat; only 1: induction n; only 1: trivial; only 1: trivial; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Permut.Axiomatisation.perm_left	40	40.129562	36108	14950
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_div_le	40	1.156994	386	133	0.0.0.1.1.3.0	synth with cache (only 1: intros; only 1: rewrite (add_le_mono_r _ _ (a mod b)), <- div_mod by order; only 1: rewrite <- (add_0_r a)  at 1; only 1: rewrite <- add_le_mono_l; only 1: apply mod_bound_pos; only 1: auto'; only 1: auto').
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_odd	40	40.052579	13327	2942
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs_N_nat	40	0.008862	1	1	0	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.addNb	40	0.136049	1	1	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit_log2	40	40.105667	31640	2775
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z_nat_N	40	0.567892	297	101	0.1.0.0.0.1.1.0.0.6	synth with cache (only 1: destruct n; only 1: simpl; only 1: auto; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Lists.Streams.Streams.Stream_Properties.Co_Induction_ForAll.ForAll_coind	40
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.id	40	0.007258	1	1	0	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.fold	40	11.028445	19698	1764	6.11.4.14.5	synth with cache (only 1: intro H; only 1: intro z; only 1: intros x l; only 1: simpl in *; only 1: eauto with set).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_above_log2	40	40.087306	24242	4037
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs_nat_N	40	0.564464	253	125	2.0.0.1.0.0.0.0.1.0.0.0.0	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: apply Pos2Nat.inj; only 1: rewrite H; only 1: apply SuccNat2Pos.id_succ; only 1: simpl; only 1: apply positive_nat_N).
coq-tactician-stdlib.8.11.dev	Coq.Lists.Streams.Map.Str_nth_tl_map	40	0.216989	139	35	1.3.2.5	synth with cache (only 1: simple induction n; only 1: reflexivity; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.sub_refl	40	0.591120	225	15	21	synth with cache (only 1: by [  ]).
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_add_intro2	40	3.338930	2602	752	0.1.5.1.1.2.0.0.0.0.0	synth with cache (only 1: unfold set_In; only 1: simple induction x; only 1: simpl; only 1: auto with datatypes; only 1: simpl; only 1: intros a0 l; only 1: elim (Aeq_dec b a0); only 1: left; only 1: now subst; only 1: right; only 1: auto with datatypes).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj	40	0.390272	178	74	1.0.0.0.0.0.0.0.0.0.1	synth with cache (only 1: destruct n, m; only 1: simpl; only 1: congruence; only 1: simpl; only 1: intros H; only 1: destr_eq H; only 1: simpl; only 1: intros H; only 1: destr_eq H; only 1: simpl; only 1: congruence).
coq-tactician-stdlib.8.11.dev	Coq.Lists.Streams.Map.Str_nth_map	40	0.011338	6	4	1.1.0.0	synth with cache (only 1: induction n; only 1: reflexivity; only 1: intros s; only 1: apply IHn).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit_log2_neg	40	40.087089	23612	4967
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_small	40	40.090314	26133	6898
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.PredicateSimplification.topredE	40	0.068164	1	1	0	synth with cache (only 1: by case : pT pp ).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Peano.NPeano.Odd_equiv	40	40.115603	28038	7484
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le	40	5.033734	1822	611	0.0.4.8	synth with cache (only 1: pose proof (min_spec n m) as Hm; only 1: intuition; only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order)).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_0	40	0.007171	4	1	3	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_pos	40	0.005192	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Binary.ZBinary.TestOrder.test	40	0.012794	9	2	1	synth with cache (only 1: BinInt.Z.order).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_compare	40	0.100666	40	26	0.0.0.0.0.0.0.0.1	synth with cache (only 1: destruct n, m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_mem_complete1	40	21.240282	16633	4241	4.0.1.0.2.1.1.3.0.3.2.0.0	synth with cache (only 1: simple induction x; only 1: simpl; only 1: intro Ha; only 1: tauto; only 1: simpl; only 1: intros a0 x0 Ha0; only 1: elim (Aeq_dec a a0); only 1: case (Aeq_dec a a0); only 1: discriminate; only 1: auto with datatypes; only 1: intros H1 H2 [H3| H4]; only 1: auto with datatypes; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_add_intro	40	0.772555	535	170	2.1.1.6	synth with cache (only 1: intro eq; only 1: destruct 1; only 1: auto with datatypes; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_above_log2_neg	40	40.083530	24635	3891
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zeven_bool_iff	40	1.348574	730	272	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.4	synth with cache (only 1: destruct n; only 1: simpl; only 1: intuition; only 1: destruct p; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: destruct p; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_iff	40	1.280030	292	170	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: destruct n, m; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: simpl; only 1: intros H; only 1: destr_eq H; only 1: now f_equal; only 1: intro H; only 1: now Morphisms.f_equiv).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_add	40	0.009267	1	1	0	synth with cache (only 1: now destruct n, m).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Hurkens.NoRetractToModalProposition.Paradox.Forall	40	40.389744	172070	14792
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InA_compat	40	40.063100	12064	2776
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_mul	40	0.009682	1	1	0	synth with cache (only 1: now destruct n, m).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Permut.Axiomatisation.op_rotate	40	2.118218	2290	664	1.5.9.2.1	synth with cache (only 1: intros; only 1: apply cong_sym; only 1: apply cong_trans with (op (op x y) z); only 1: trivial; only 1: apply op_ass).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.InjectionsTheory.inj_compr	40	40.040649	11347	887
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_succ	40	0.062719	30	11	0.0.0.6	synth with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: now rewrite Pos.add_1_r).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_pred_max	40	0.042819	10	7	3.0.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: now destruct p).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zodd_bool_iff	40	1.214513	617	252	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.3	synth with cache (only 1: destruct n; only 1: simpl; only 1: intuition; only 1: destruct p; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: destruct p; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_abs_N	40	1.124974	542	75	0.0.0.1.17	synth with cache (only 1: destruct z; only 1: simpl; only 1: trivial; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.Dcompare_inf	40	0.018899	4	4	0.0.0.0	synth with cache (only 1: destruct r; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.Zcompare_rect	40	0.029445	5	5	0.0.0.0.0	synth with cache (only 1: destruct (n ?= m); only 1: now intuition; only 1: intros; only 1: auto; only 1: now intuition).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.InjectionsTheory.can_comp	40	40.060043	1529	115
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_nonneg	40	40.075079	19942	4685
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.Dependent_choice_lemmas.dependent_choice	40	40.624202	263367	6606
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.Zcompare_rec	40	0.025003	6	5	0.0.0.1.0	synth with cache (only 1: intros H1 H2 H3; only 1: destruct (n ?= m); only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.classic_bind	40	40.051768	388	30
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_3_facts.Strong_confluence_direct	40	40.116403	30910	14419
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Ztrichotomy	40	1.070303	354	127	1.0.0.0.0.0.1.0.1.2	synth with cache (only 1: unfold Z.gt, Z.lt; only 1: generalize (Z.compare_eq n m); only 1: destruct (n ?= m); only 1: right; only 1: left; only 1: auto; only 1: left; only 1: auto; only 1: right; only 1: auto with relations).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_pred	40	1.219596	398	136	2.0.3.1.1.0	synth with cache (only 1: intro H; only 1: destruct n; only 1: simpl; only 1: easy; only 1: simpl; only 1: now destruct p).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_small_iff	40	40.250368	20795	5577
coq-tactician-stdlib.8.11.dev	Coq.Strings.Byte.byte_dec_lb	40	40.222506	7921	556
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_lt_mono	40	5.234130	2044	728	0.2.3.0.0.0.2.0.0.0	synth with cache (only 1: intros n m p q H1 H2; only 1: apply le_lt_trans with (m * p); only 1: apply mul_le_mono_nonneg_r; only 1: apply le_0_l; only 1: now apply lt_le_incl; only 1: apply -> mul_lt_mono_pos_l; only 1: assumption; only 1: apply le_lt_trans with n; only 1: now apply le_0_l; only 1: now apply le_lt_trans with n).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_exact	40	0.059963	12	5	0.0.0.1	synth with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite <- (add_0_r (b * (a / b)))  at 2; only 1: apply add_cancel_l).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcompare.Zcompare_opp	40	2.741209	1307	645	2.0.0.0.1.0.0.0.2.0.0.0.0.0.1.0.0.0.0	synth with cache (only 1: destruct n, m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite <- Pos.compare_antisym; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite <- Pos.compare_antisym).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Mult.mult_O_le	40	40.090614	32323	3179
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.classic_EM	40	40.076429	1908	64
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_str_pos_iff	40	40.412433	17517	4370
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.classic_pick	40	40.027359	535	44
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zle_not_lt	40	0.117389	23	7	0.2	synth with cache (only 1: intro H; only 1: Z.order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalFacts.rev_nztail_rev	40	40.083377	25452	3306
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Rmul_0_l	40	24.623813	21740	289
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zlt_not_le	40	0.065866	22	7	0.3	synth with cache (only 1: intro H; only 1: Z.order).
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_trans_tn1	40	40.185560	64854	15714
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zle_not_gt	40	0.060133	13	6	0.1.3	synth with cache (only 1: intro H; only 1: Z.swap_greater; only 1: Z.order).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersTac.OrderFacts.le_antisym	40	40.094433	23235	2356
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndiv_def.Pdiv_eucl_remainder	40	40.171561	69382	964
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.classic_imply	40	40.008886	203	14
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_add_elim2	40	3.199015	1695	639	3.0.1.0.0.1.0.0.0.1.0.0.0	synth with cache (only 1: unfold set_In; only 1: simple induction x; only 1: simpl; only 1: intros [H1| H2]; only 1: auto with datatypes; only 1: auto with datatypes; only 1: simpl; only 1: do 3 intro; only 1: elim (Aeq_dec b a0); only 1: simpl; only 1: tauto; only 1: simpl; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.Private_Parity.Even_1	40	40.174823	57311	3938
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zgt_not_le	40	0.348887	118	41	0.5.4	synth with cache (only 1: intro H; only 1: Z.swap_greater; only 1: Z.order).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.Power.pow_pos_succ	40	40.055514	4000	1472
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersTac.OrderFacts.neq_sym	40	0.014050	6	3	0.3.0	synth with cache (only 1: intro H; only 1: intros; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_eq_0_iff	40	40.057762	17454	2526
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Znot_lt_ge	40	0.029669	17	4	2.2	synth with cache (only 1: intro H; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Znot_gt_le	40	0.004864	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Znot_le_gt	40	0.023960	10	3	0.4	synth with cache (only 1: Z.swap_greater; only 1: apply Z.nle_gt).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_nonneg'	40	40.225208	14194	4848
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_diag_l	40	40.210183	7602	1701
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.N2Nat.id	40	40.185644	29117	4029
coq-tactician-stdlib.8.11.dev	Coq.Arith.Factorial.fact_neq_0	40	40.235745	98891	4547
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_nonneg_ex	40	40.061178	15974	4374
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.is_nonneg	40	4.800159	6880	223	100	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.Zred_factor0	40	0.046098	1	1	0	synth with cache (only 1: now Z.nzsimpl').
coq-tactician-stdlib.8.11.dev	Coq.Arith.Gt.gt_le_trans	40	40.111125	39718	3731
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.N2Nat.inj	40	40.211014	67278	4543
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.Zred_factor1	40	0.128472	11	6	5.0	synth with cache (only 1: change 2 with (1 + 1); only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.OrderedTypeLists.Sort_NoDup	40	40.161279	56251	6335
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.CompSpec2Type	40	40.470286	196952	15497
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.eq_dec	40	40.557325	31524	3410
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.Private_Parity.Odd_2	40	40.095507	20534	4639
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.KeyOrderedType.pair_compat	40	0.014939	3	1	2	synth with cache (only 1: eauto with *).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.N2Nat.inj_succ	40	0.560654	314	68	8.0.1.1.2	synth with cache (only 1: destruct a; only 1: reflexivity; only 1: simpl; only 1: unfold Pos.to_nat; only 1: now rewrite !Pmult_nat_mult, Pos2Nat.inj_succ).
coq-tactician-stdlib.8.11.dev	Coq.Structures.Orders.OTF_to_TTLB.leb_le	40	40.159865	60233	4482
coq-tactician-stdlib.8.11.dev	Coq.Arith.Div2.odd_div2	40	40.092887	33606	3723
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Znot_ge_lt	40	1.211320	571	79	11.7.0	synth with cache (only 1: intro H; only 1: Z.swap_greater; only 1: Z.order).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.exists_S_le	40	40.124529	25083	3825
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.Private_Parity.Even_2	40	40.484398	49016	3467
coq-tactician-stdlib.8.11.dev	Coq.Arith.EqNat.eq_nat_elim	40	40.246112	95240	7918
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_nonneg_nonpos	40	40.242984	18512	3121
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_diag_r	40	40.234193	8715	2106
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalFacts.rev_nil_inv	40	0.498411	244	78	1.6.1.0	synth with cache (only 1: intros; only 1: rewrite <- (rev_rev d); only 1: rewrite H; only 1: now rewrite ?IHd).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.Power.pow_pos_add	40	40.107590	4369	844
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.even_spec	40	40.254569	42749	7554
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.succ_le_mono	40	31.581320	12484	5172	1.2.0.3.7.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: rewrite lt_eq_cases; only 1: generalize (le_gt_cases n m); only 1: rewrite lt_succ_r, le_succ_l, !lt_eq_cases; only 1: symmetry; only 1: now rewrite succ_inj_wd).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub	40	40.314716	20319	3085
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_neg	40	40.133707	21264	4457
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_neg'	40	40.098196	29041	4614
coq-tactician-stdlib.8.11.dev	Coq.Lists.Streams.Streams.Stream_Properties.ForAll_Str_nth_tl	40	40.310764	122458	14740
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_0	40	40.260417	8639	3115
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.in_int_p_Sq	40	40.086600	29160	3397
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.Zred_factor3	40	0.620087	28	9	6	synth with cache (only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.lt_dec	40	40.085137	31584	2990
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.succ_pred	40	31.201183	17714	4804	0.0.1.0.0.0.0.0.0.0.0.1.0.2.0.0.0.0.0.0.0.6.0.0.0.2.3.0.1.0.2.0.0.1	synth with cache (only 1: destruct n; only 1: reflexivity; only 1: simpl; only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: f_equal; only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: induction p; only 1: now f_equal; only 1: now f_equal; only 1: now f_equal; only 1: simpl; only 1: f_equal; only 1: reflexivity; only 1: simpl; only 1: destruct p; only 1: simpl; only 1: f_equal; only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.in_int_Sp_q	40	0.010096	6	2	3.1	synth with cache (only 1: intros * []; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.mul_0_l	40	0.006815	1	1	0	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.Structures.Equalities.BoolEqualityFacts.eqb_compat	40	40.173489	17192	1197
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.odd_spec	40	40.129870	25075	4289
coq-tactician-stdlib.8.11.dev	Coq.Logic.ExtensionalityFacts.FunctExt_iff_UniqInverse	40	40.457493	191919	12711
coq-tactician-stdlib.8.11.dev	Coq.Logic.Hurkens.NoRetractToModalProposition.Paradox.paradox	40	40.156562	59117	5360
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.eq_decidable	40	0.347381	168	56	1.0.3.0.2	synth with cache (only 1: unfold decidable; only 1: intros n m; only 1: destruct (lt_trichotomy n m); only 1: intuition order; only 1: intuition order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.itersucc0_or_iterpred0	40	40.139750	48442	7109
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_neg_ex	40	40.137734	31125	4570
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.in_int_S	40	1.026258	1130	192	6.5.5	synth with cache (only 1: intros x y z; only 1: intuition; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.Zred_factor5	40	0.294527	15	9	6	synth with cache (only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zgt_asym	40	1.191836	260	58	0.7.2	synth with cache (only 1: Z.swap_greater; only 1: intro H; only 1: Z.order).
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.Zred_factor6	40	0.007566	1	1	0	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.in_int_between	40	0.032064	11	5	3.0.0.0	synth with cache (only 1: induction 1; only 1: intros; only 1: auto with arith; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_bits	40	40.219950	12757	2890
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.new_var	40	0.029985	24	6	0.7	synth with cache (only 1: intro n; only 1: now exists n).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.sqrt_neg	40	0.009109	2	2	0.0	synth with cache (only 1: intro H; only 1: false_hyp ltac:(H) nlt_0_r).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.eq_dne	40	0.327528	93	37	1.0.5.0	synth with cache (only 1: intros; only 1: destruct (lt_trichotomy n m); only 1: intuition order; only 1: intuition order).
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.OMEGA1	40	0.065184	49	13	7.1	synth with cache (only 1: intro EQ; only 1: now rewrite EQ).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.empty_spec	40	40.187825	69681	5135
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_succ_div_gt	40	8.087302	3503	744	0.0.0.7.0.5.2	synth with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite mul_succ_r; only 1: rewrite <- add_lt_mono_l; only 1: apply mod_bound_pos; only 1: auto'; only 1: auto').
coq-tactician-stdlib.8.11.dev	Coq.Arith.EqNat.eq_nat_decide	40	1.372955	717	229	0.0.0.2.0.0.0.0.2.1.0	synth with cache (only 1: induction n; only 1: destruct m; only 1: now left; only 1: now right; only 1: destruct m; only 1: now right; only 1: destruct (IHn m); only 1: left; only 1: now rewrite <- ?Nat.succ_le_mono; only 1: right; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_le_mono	40	40.112358	18551	3880
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_ngt	40	0.045408	17	8	0.0.4.0	synth with cache (only 1: intros n m; only 1: destruct (le_gt_cases m n); only 1: intuition order; only 1: intuition order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.nlt_ge	40	0.008486	1	1	0	synth with cache (only 1: intuition order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_decidable	40	0.024359	5	5	0.0.0.0.0	synth with cache (only 1: intros n m; only 1: destruct (lt_trichotomy n m) as [| [| ]]; only 1: (right; order) || (left; order); only 1: (right; order) || (left; order); only 1: (right; order) || (left; order)).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_sub	40	40.196500	6751	2551
coq-tactician-stdlib.8.11.dev	Coq.Program.Wf.Fix_rects.Fix_sub_rect	40	40.137311	44488	11703
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_compat	40	40.269730	11947	2640
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_eqf	40	3.120093	1189	181	5.8.2	synth with cache (only 1: intros x x' Hx; only 1: intro H; only 1: now f_equiv).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.odd_pow	40	40.195033	12508	2659
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.plus_lt_reg_l	40	40.063706	21425	3141
coq-tactician-stdlib.8.11.dev	Coq.Arith.EqNat.beq_nat_refl	40	0.576247	525	48	0.0.25	synth with cache (only 1: induction n; only 1: trivial; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.plus_lt_compat_l	40	0.005886	1	1	0	synth with cache (only 1: apply Nat.add_lt_mono_l).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.AllAnd.all_and2	40	40.134321	1528	82
coq-tactician-stdlib.8.11.dev	Coq.Structures.Equalities.BoolEqualityFacts.eqb_spec	40	1.160036	3132	72
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.StrictOrder_PreOrder	40	40.223769	8012	829
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_nonpos_nonneg	40	40.247280	22563	3273
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.pos_sub_spec	40	40.356163	23088	5350
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_add_not_empty	40	3.717096	3170	695	5.3.1.1.2.0.5.1.0	synth with cache (only 1: simple induction x; only 1: simpl; only 1: discriminate; only 1: simpl; only 1: intros a0 l; only 1: elim (Aeq_dec a a0); only 1: intros _ _ [=]; only 1: unfold not; only 1: intros _ _ [=]).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Minus.plus_minus	40	40.136464	48118	6885
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_diag	40	40.111336	18217	5471
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_gt_cases	40	10.560841	3196	952	9.0.0.2.3.5.0	synth with cache (only 1: intros n m; only 1: split; only 1: intro H; only 1: destruct (le_gt_cases n m); only 1: intuition order; only 1: intuition order; only 1: intuition order).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.peano_rect_succ	40	40.124508	42951	1782
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle2	40	40.141322	10144	2382
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.cadd_ext_Proper	40	1.279904	629	86	17.5	synth with cache (only 1: intros; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InA_split	40	40.061014	16263	3358
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.pos_sub_discr	40	40.138596	50117	5324
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.nle_gt	40	0.008792	1	1	0	synth with cache (only 1: intuition order).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Minus.minus_plus	40	0.437862	227	77	1.0.1.3.0.3	synth with cache (only 1: revert m; only 1: induction n as [| n IH]; only 1: intro n; only 1: now destruct n; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_nge	40	0.009760	1	1	0	synth with cache (only 1: intuition order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_decidable	40	0.023473	5	5	0.0.0.0.0	synth with cache (only 1: intros n m; only 1: destruct (lt_trichotomy n m) as [| [| ]]; only 1: (right; order) || (left; order); only 1: (right; order) || (left; order); only 1: (right; order) || (left; order)).
coq-tactician-stdlib.8.11.dev	Coq.Arith.EqNat.beq_nat_true	40	0.990203	649	156	4.0.0.0.0.0.2.0.4	synth with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: easy; only 1: easy; only 1: destruct m; only 1: easy; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.PredicateSimplification.in_simpl	40	0.315837	2	1	1	synth with cache (only 1: by case : msp  => _ /= ->).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.eq_sym	40	40.129866	36811	9127
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_neq	40	40.217256	22517	6406
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.PredicateSimplification.unfold_in	40	0.129826	1	1	0	synth with cache (only 1: by rewrite -mem_topred).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalFacts.revapp_nil_inv	40	40.089621	25728	5645
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zgt_irrefl	40	2.388138	8548	302	67	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_add_r	40	40.222940	13185	2478
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.PredicateSimplification.simpl_predE	40	0.073545	3	1	2	synth with cache (only 1: by [  ]).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListOps.rev_length	40	12.927695	13128	1833	1.0.5.31.0.0.0.2	synth with cache (only 1: induction l as [| a l IHl]; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite app_length; only 1: rewrite IHl; only 1: simpl; only 1: now Nat.nzsimpl').
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.pos_sub_lt	40	40.230092	23380	6492
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.pos_sub_gt	40	40.197996	15529	4826
coq-tactician-stdlib.8.11.dev	Coq.Arith.Div2.div2_even	40	40.093630	32535	3388
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_le_square	40	40.196887	12566	3496
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.addbP	40	10.590047	608	42	0.0.0.0.30	synth with cache (only 1: Bool.destr_bool; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Div2.even_odd_div2	40	0.009286	1	1	0	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.cmul_ext_Proper	40	1.144666	737	107	18.7	synth with cache (only 1: intros; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.pos_sub_opp	40	40.233641	18214	5901
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.PredicateSimplification.mem_simpl	40	0.405902	1	1	0	synth with cache (only 1: exact (erefl _)).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_lt_square	40	40.207876	12957	4693
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_cancel_r	40	0.127561	44	26	0.2.0	synth with cache (only 1: split; only 1: apply mul_reg_r; only 1: congruence).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.StrictOrder_PartialOrder	40	40.154138	9785	1494
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.Even_Odd_False	40	40.282101	43602	4941
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_cancel_l	40	0.016857	5	4	0.0.1.0	synth with cache (only 1: split; only 1: rewrite 2!(mul_comm r); only 1: apply mul_reg_r; only 1: congruence).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.PredicateSimplification.in_collective	40	6.590565	4067	83
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_l_nz	40	40.392774	16660	4748
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_neq_iff	40	40.121930	38582	4050
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_1_r	40	40.308929	9224	2722
coq-tactician-stdlib.8.11.dev	Coq.Arith.Minus.le_plus_minus_r	40	1.457338	1037	309	0.1.1.1.0.0.0.3.0.0.0	synth with cache (only 1: revert m; only 1: induction n; only 1: intros; only 1: now Nat.nzsimpl; only 1: destruct m; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, Peano.le_S_n; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_eq_1_r	40	0.026377	1	1	0	synth with cache (only 1: now destruct p, q).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.peano_case	40	40.451824	96540	7458
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectConnectives.idP	40	40.179100	3542	77
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_sub_diag_r	40	40.242810	21475	5630
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.eq_dep_eq_positive	40	40.281342	51809	6483
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_1_r_nonneg	40	40.250496	27473	3479
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.Private_BootStrap.opp_add_distr	40	40.203687	30385	4763
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.qualifE	40	0.074163	1	1	0	synth with cache (only 1: by rewrite -mem_topred).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Multiset.multiset_defs.multiset_twist1	40	40.083246	21915	6181
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.orb_even_odd	40	40.189117	29872	1708
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.nat_compare_lt	40	40.094823	21298	7070
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.OMEGA2	40	3.531848	1423	325	5.4.1.1.2.0.1.2	synth with cache (only 1: destruct x; only 1: trivial; only 1: simpl; only 1: destruct y; only 1: auto; only 1: auto; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_dne	40	3.365593	1432	692	2.3.4.0	synth with cache (only 1: intros n m; only 1: generalize (le_gt_cases n m); only 1: rewrite lt_eq_cases; only 1: intuition order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_mul_l	40	40.239736	9172	1286
coq-tactician-stdlib.8.11.dev	Coq.Sets.Uniset.defs.union_perm_left	40	40.140505	45442	10826
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.lt_not_eq	40	1.515523	955	185	2.10.1.0	synth with cache (only 1: intros n m; only 1: intro H; only 1: repeat red; only 1: congruence).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.Private_BootStrap.opp_inj	40	40.174973	66581	3932
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.peano_equiv	40	40.108532	11278	4370
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.PeanoViewUnique	40	40.419346	33202	4907
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.initial_alt	40	40.266472	65583	5479
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_dne	40	2.089744	546	280	1.0.0.1.1.1.0.0	synth with cache (only 1: intros n m; only 1: split; only 1: destruct (le_gt_cases n m); only 1: intuition order; only 1: intuition order; only 1: intro H; only 1: intro H1; only 1: false_hyp H ltac:(H1)).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_equiv1	40	40.294061	19689	3488
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Inf_lt	40	21.469318	8740	1275	0.0.5.3.0.0.15	synth with cache (only 1: induction l; only 1: auto with *; only 1: constructor; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: transitivity y; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Uniset.defs.uniset_twist1	40	40.131902	35542	9823
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.Private_BootStrap.pos_sub_add	40	40.081848	24231	5472
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul	40	40.370001	27185	4246
coq-tactician-stdlib.8.11.dev	Coq.Arith.Gt.gt_trans	40	40.094272	23353	1800
coq-tactician-stdlib.8.11.dev	Coq.Arith.Wf_nat.Well_founded_Nat.well_founded_lt_compat	40	40.143889	47357	10478
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_l	40	0.021113	13	5	0.0.1	synth with cache (only 1: intro n; only 1: intro H; only 1: apply divide_mul_l, divide_refl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_opp_z	40	40.059514	14165	4793
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.square_xO	40	0.968973	339	108	9.0.0	synth with cache (only 1: simpl; only 1: f_equal; only 1: auto using mul_xI_r, mul_xO_r, mul_1_r).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_cancel_l	40	40.256478	6865	2300
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectConnectives.andP	40	40.226874	5367	181
coq-tactician-stdlib.8.11.dev	Coq.Arith.Wf_nat.lt_wf	40	40.232342	33893	4928
coq-tactician-stdlib.8.11.dev	Coq.Arith.Wf_nat.lt_wf_rec	40	0.005086	1	1	0	synth with cache (only 1: exact (fun (p : nat) P F => induction_ltof1 nat (fun m : nat => m) P F p)).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.Private_BootStrap.add_assoc_pos	40	40.121032	44910	5997
coq-tactician-stdlib.8.11.dev	Coq.Arith.Wf_nat.lt_wf_ind	40	0.006281	1	1	0	synth with cache (only 1: exact (fun (p : nat) P F => induction_ltof2 nat (fun m : nat => m) P F p)).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zabs.Zabs_ind	40	8.394299	11296	1160	0.0.1.2.10.4.24	synth with cache (only 1: intro; only 1: intro; only 1: Z.swap_greater; only 1: intros m IH; only 1: Z.destruct_max n; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_1_l'	40	40.333923	15433	3605
coq-tactician-stdlib.8.11.dev	Coq.Arith.Wf_nat.gt_wf_rec	40	0.004375	1	1	0	synth with cache (only 1: exact (fun (p : nat) P F => induction_ltof1 nat (fun m : nat => m) P F p)).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.plus_le_compat_r	40	40.060184	20334	2456
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_same	40	0.302013	141	55	0.0.0.0.1.2.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 1; only 1: split; only 1: order; only 1: now rewrite abs_pos; only 1: now nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Euclid.quotient	40	40.074926	23517	5549
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_xO_r	40	40.321858	12330	4659
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_gt_iff	40	40.197301	35708	10289
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.Private_BootStrap.add_assoc	40	40.065058	19336	4877
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_r	40	40.268797	10671	3527
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_min_distr_l	40	40.320574	11429	1948
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectConnectives.and4P	40	40.256766	3147	78
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalUniqueChoice.classic_set_in_prop_context	40	40.096922	28219	9033
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.succ_pred_pos	40	0.040465	8	7	0.0.0.1.0.0.0	synth with cache (only 1: cases ltac:(n); only 1: intro; only 1: exfalso; only 1: now apply lt_irrefl with 0; only 1: intro n; only 1: intro H; only 1: now rewrite pred_succ).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.nlt_succ_r	40	2.030442	773	386	0.1.3.0.0.0.0.1	synth with cache (only 1: intros n m; only 1: split; only 1: intro H; only 1: apply le_succ_l; only 1: order; only 1: intro H; only 1: rewrite lt_succ_r; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Rtauto.form_eq_refl	40	40.158292	56745	6249
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_0_r	40	40.294030	56426	3932
coq-tactician-stdlib.8.11.dev	Coq.Arith.Mult.mult_le_compat_l	40	40.108603	41561	4315
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.Private_BootStrap.mul_add_distr_pos	40	40.067997	18596	6226
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_eq_1_l	40	2.248534	695	312	1.4.1.0.0.0.0.0.0.0	synth with cache (only 1: revert q; only 1: induction p; only 1: intros [q| q| ] H; only 1: destr_eq H; only 1: simpl in H; only 1: destr_eq H; only 1: simpl in H; only 1: destr_eq H; only 1: discriminate; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectConnectives.and5P	40	40.378406	11017	307
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_small	40	0.769476	272	144	0.5.1	synth with cache (only 1: intros a b (Hb, Hab); only 1: apply div_small; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.copp_ext_Proper	40	2.746795	4129	312	32.4	synth with cache (only 1: intros n m H; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.phi_ext1_Proper	40	0.047019	30	8	3.4	synth with cache (only 1: intros x y H; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_small	40	0.149583	58	31	6.0	synth with cache (only 1: intros; only 1: auto using mod_small).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_cancel_r	40	40.287095	15065	5733
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_r_z	40	40.329173	21214	7283
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_lt_iff	40	4.681832	856	397	1.0.0.0.0.0.0.0.2	synth with cache (only 1: split; only 1: destruct (min_spec n m); only 1: left; only 1: intuition; only 1: order; only 1: right; only 1: intuition; only 1: order; only 1: solve_min).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.Private_BootStrap.mul_add_distr_r	40	40.078325	24351	5019
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_0_l	40	0.307442	127	78	0.0.0.0.1.0.0.0	synth with cache (only 1: intro; only 1: intros NEQ; only 1: symmetry; only 1: apply div_unique with 0; only 1: split; only 1: order; only 1: now rewrite abs_pos; only 1: now nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.compare_lt_iff	40	0.005028	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_0_l	40	40.106042	33105	5842
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.compare_le_iff	40	0.004228	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Pred_Type.Generic.not_all_ex_not	40	40.088153	25911	6750
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorEq.BEQ.eqb_eq	40	41.126852	15631	3646
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_l	40	0.224850	85	30	0.1.0.2.2	synth with cache (only 1: destruct (min_spec n m); only 1: intuition; only 1: order; only 1: intuition; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectConnectives.orP	40	40.275213	1247	43
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorSpec.nth_order_last	40	40.127530	46101	3863
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Pred_Type.Generic.not_ex_all_not	40	0.016759	8	5	0.0.2.1.0	synth with cache (only 1: intros P notall; only 1: intros n H; only 1: apply notall; only 1: exists n; only 1: exact H).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_r	40	0.012356	2	1	1	synth with cache (only 1: solve_min).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_unicity	40	40.155027	14003	3171
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb	40	0.030349	13	4	5	synth with cache (only 1: solve_min).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Multiset.multiset_defs.multiset_twist2	40	40.099538	20469	5433
coq-tactician-stdlib.8.11.dev	Coq.Classes.EquivDec.list_eqdec_obligation_5	40	22.551681	7475	115
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.add_3'	40	24.983486	4225	1768	0.0.2.1.2.1.2.0.0.0	synth with cache (only 1: intros m x y e e'; only 1: generalize y, e; only 1: functional induction (add x e' m); only 1: intros; only 1: eauto; only 1: constructor 2; only 1: eauto; only 1: inversion_clear 2; only 1: intuition; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_iff	40	0.136494	24	10	4	synth with cache (only 1: solve_min).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_lt	40	0.012905	2	1	1	synth with cache (only 1: solve_min).
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.In_alt2	40	40.117753	40354	3955
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_lt_iff	40	0.024512	2	1	1	synth with cache (only 1: solve_min).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.StrictOrder_PartialOrder	40	40.232324	15624	6320
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_r_nz	40	40.323764	9333	4596
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_1_r	40	40.090090	26766	5905
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.nth_error_None	40	40.102234	33749	5965
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_r_z	40	40.352133	20466	6687
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_0_l	40	40.346428	31415	5594
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.add_succ_l	40	40.093027	27662	4924
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.incl_add_x	40	40.166282	47407	12311
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_compat_r	40	0.055776	3	3	0.0.0	synth with cache (only 1: intros; only 1: apply min_glb_iff; only 1: solve_min).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectConnectives.or3P	40	40.255381	5500	134
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.succ_pred	40	1.879705	1070	217	4.0.1.1.0.4	synth with cache (only 1: cases ltac:(n); only 1: intro H; only 1: now elim H; only 1: intro n; only 1: intro H; only 1: now nzsimpl').
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_app_tail	40	40.159198	30061	6871
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_compat	40	0.092557	29	9	1.4.0	synth with cache (only 1: intros Hnm Hpq; only 1: apply min_glb_iff; only 1: solve_min).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_absorption	40	0.037077	18	4	0.5	synth with cache (only 1: apply max_r || apply max_l; only 1: solve_min).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_id_l	40	40.173317	17669	3157
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_lt_mono	40	40.151326	17948	3918
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_1	40	40.232848	12597	1601
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_absorption	40	0.321807	133	39	0.11	synth with cache (only 1: apply min_l; only 1: solve_max).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_r_nz	40	40.375055	10872	5551
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.nat_compare_gt	40	40.091546	26204	8403
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_opp	40	40.141048	21197	2917
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign_nz	40	40.101738	29098	6110
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.nth_error_Some	40	40.158152	22205	8484
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_xI_r	40	40.388567	13470	5415
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Intersection_Empty_set_l	40	0.009835	6	3	1.1.1	synth with cache (only 1: intros A B; only 1: apply Extensionality_Ensembles; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_refl	40	40.232317	10777	1668
coq-tactician-stdlib.8.11.dev	Coq.Logic.WeakFan.Y_approx	40	40.091040	24739	5259
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Intersection_Empty_set_r	40	0.012261	3	2	1.0	synth with cache (only 1: intros; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Gt.gt_0_eq	40	4.105550	5137	376	5.5.32	synth with cache (only 1: induction n; only 1: now right; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Gt.plus_gt_reg_l	40	0.006491	2	1	1	synth with cache (only 1: apply Nat.add_lt_mono_l).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Gt.plus_gt_compat_l	40	0.006496	1	1	0	synth with cache (only 1: apply Nat.add_lt_mono_l).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_small	40	0.122451	25	20	0.0.0.1.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique with a; only 1: intuition; only 1: intuition; only 1: now nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_m1_0	40	36.911876	20341	2012	6.61.7	synth with cache (only 1: rewrite succ_lt_mono, <- one_succ; only 1: apply le_succ_l; only 1: now rewrite one_succ, opp_succ, opp_0, succ_pred).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_mul	40	40.401113	14720	3673
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.max_r	40	1.951871	1020	332	2.0.0.1.0.0.9	synth with cache (only 1: unfold le, max; only 1: rewrite N.compare_antisym; only 1: rewrite N.compare_antisym; only 1: case N.compare_spec; only 1: trivial; only 1: auto; only 1: now destruct 2).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.sub_succ_r	40	40.083206	26139	5321
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NIso.Homomorphism.natural_isomorphism_succ	40	40.465210	166932	3416
coq-tactician-stdlib.8.11.dev	Coq.Sets.Multiset.multiset_defs.treesort_twist2	40	2.075216	845	382	1.1.1.2.1.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply meq_trans with (munion x (munion (munion y z) t)); only 1: apply meq_right; only 1: apply meq_left; only 1: trivial; only 1: apply meq_trans with (munion (munion x (munion y z)) t); only 1: apply meq_sym; only 1: apply munion_ass; only 1: apply meq_left; only 1: apply munion_perm_left).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_small	40	0.275075	35	28	0.0.1.1.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 0; only 1: intuition; only 1: intuition; only 1: now nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_0_iff	40	40.104063	35401	3950
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.nat_compare_eq	40	1.029707	1084	204	0.1.2.1.0.2.1.7	synth with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: auto; only 1: easy; only 1: destruct m; only 1: easy; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Pred_Type.Generic.not_ex_not_all	40	2.686688	2185	848	0.1.2.0.1.2.1.0	synth with cache (only 1: unfold not; only 1: intros P notall; only 1: intro n; only 1: apply NNPP; only 1: intro abs; only 1: apply notall; only 1: exists n; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_comm	40	40.286394	13211	5155
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.nth_error_split	40	40.193665	28243	6408
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_add_distr_l	40	40.251079	11049	5587
coq-tactician-stdlib.8.11.dev	Coq.Vectors.Fin.of_nat_to_nat_inv	40	40.068268	25888	1794
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_le_mono	40	40.287118	20359	6319
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssreflect.locked_withE	40	40.378448	147199	5631
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.incl_soustr_add_r	40	35.968333	11394	5506	0.0.0.0.1.0.0.1.0.1.1.1.0	synth with cache (only 1: unfold Add at 1; only 1: intros X x H'; only 1: unfold Subtract; only 1: split; only 1: auto with sets; only 1: red; only 1: intro H'1; only 1: lapply (Singleton_inv U x x0); only 1: intro H'4; only 1: apply H'; only 1: rewrite H'4; only 1: auto with sets; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.nth_error_app1	40	40.077969	24249	3615
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_2	40	40.258512	13652	3165
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssreflect.unlock_with	40	0.005912	2	1	1	synth with cache (only 1: by case : k ).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mod_pow2_bits_low	40	40.046015	13606	2234
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Sorted.defs.Sorted_LocallySorted_iff	40	40.135378	42381	8225
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_add_distr_r	40	40.449407	11567	4560
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NIso.Homomorphism.hom_nat_iso	40	0.926154	647	130	0.0.1.0.0.1.4.0.0.4	synth with cache (only 1: firstorder; only 1: unfold natural_isomorphism; only 1: now rewrite N1.recursion_0; only 1: unfold natural_isomorphism; only 1: rewrite N1.recursion_succ; only 1: auto with *; only 1: auto with *; only 1: repeat red; only 1: intros; only 1: now f_equiv).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Sorted.defs.StronglySorted_inv	40	0.022455	3	3	0.0.0	synth with cache (only 1: intros a l H; only 1: inversion H; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_assoc	40	40.408924	9412	4607
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.RelElim.le_ind_rel	40	40.477749	40357	4959
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_div_mul_exact	40	40.041995	9457	4037
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.eqf_equiv	40	40.116342	40149	5721
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_lt_cancel	40	40.295733	29149	5103
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_lt	40	16.152970	6312	1634	0.0.0.0.0.0.0.0.10.0.0.0.0.0.0.0.0.0.7	synth with cache (only 1: split; only 1: destruct n as [| n], m as [| m]; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: destruct n as [| n], m as [| m]; only 1: intros H; only 1: trivial; only 1: intros H; only 1: trivial; only 1: intro H; only 1: trivial; only 1: intro H; only 1: now rewrite <- ?Z.succ_le_mono).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_succ_l	40	40.307497	14997	4543
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NAdd.NAddProp.eq_add_1	40	40.312608	13558	3084
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_quot_mul_exact	40	40.044176	11423	4098
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorSpec.shiftin_nth	40	40.112912	40601	2478
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_succ_r	40	40.420403	15199	4370
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_l	40	0.504075	296	91	0.0.1.0.0.0.1.0.1	synth with cache (only 1: cases ltac:(n); only 1: intro H; only 1: exfalso; only 1: now apply H; only 1: intro n; only 1: intro H; only 1: rewrite pred_succ; only 1: rewrite lt_succ_r; only 1: apply le_refl).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Seminus_Empty_set_l	40	2.436007	3602	455	1.0.0.8.8.2.2.0	synth with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intro H; only 1: destruct 1; only 1: unfold In in *; only 1: assumption; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Eqdep_dec.EqdepDec.K_dec_on	40	24.198512	162992	3408
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_eq_or_opp	40	7.371372	4334	892	2.2.11.0.3	synth with cache (only 1: pose proof lt_m1_0 as F; only 1: intro n; only 1: destruct_max n; only 1: now left; only 1: now right).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Seminus_Empty_set_r	40	0.025468	9	8	1.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x H1; only 1: destruct H1; only 1: assumption; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Add_commutative'	40	40.124140	24722	6585
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectConnectives.or4P	40	40.203764	3211	170
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_xI_mul_xO_discr	40	40.152698	33928	5450
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_involutive	40	2.179376	1672	268	2.0.0.0.0.12.0.0	synth with cache (only 1: intro n; only 1: destruct_max n; only 1: rewrite abs_eq; only 1: auto with relations; only 1: auto; only 1: rewrite (abs_eq (- n)); only 1: auto with relations; only 1: now rewrite opp_nonneg_nonpos).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_le_pow2	40	40.250689	16290	4114
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_l	40	40.191156	10674	2334
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_trans	40	40.226227	17566	3563
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_xO_discr	40	40.312493	39716	6705
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.negb_odd	40	40.230057	42369	1826
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.add_soustr_1	40	1.814678	867	425	0.0.1.0.0.1.0.0.0.0	synth with cache (only 1: intros X x H'; only 1: red; only 1: intros x0 H'0; only 1: elim H'0; only 1: intros t H'1; only 1: elim H'1; only 1: auto with sets; only 1: intros t H'1; only 1: elim H'1; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_inj_0	40	40.119354	39541	3563
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.or_cnf_opt_cnf_ff	40	32.827995	41494	4222	0.0.0.11.14.17.0.16	synth with cache (only 1: destruct f; only 1: reflexivity; only 1: firstorder; only 1: destruct c; only 1: induction f; only 1: tauto; only 1: tauto; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Pred_Type.Generic.ex_not_not_all	40	2.465831	2270	570	0.3.2.7.1	synth with cache (only 1: unfold not; only 1: destruct 1; only 1: intro K; only 1: apply H; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_app	40	40.194043	24026	6084
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.compare_antisym	40	5.694633	3038	1553	0.6.1.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n, m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply Pos.compare_antisym; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite CompOpp_involutive; only 1: rewrite <- ?Pos.compare_antisym, ?pos_sub_spec; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_inj	40	40.097310	28977	5511
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_ge_iff	40	40.367297	38202	9229
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_id_r	40	40.272219	20653	3054
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.nat_compare_Lt_lt	40	2.992620	1856	430	21	synth with cache (only 1: apply Nat.compare_lt_iff).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.nat_compare_Gt_gt	40	0.017632	7	1	6	synth with cache (only 1: apply Nat.compare_gt_iff).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_l	40	40.234795	5799	1695
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_inj_iff	40	40.098240	29546	6226
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.succ_max_distr	40	40.299679	7662	527
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.eq_pred_0	40	40.240836	27818	4272
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_le	40	40.264963	26607	4292
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListOps.Reverse_Induction.rev_list_ind	40	0.275366	225	57	3.0.2.2	synth with cache (only 1: intros a H; only 1: induction l as [| a0 l IHl]; only 1: intuition; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.are_bits	40	40.143873	48544	4083
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListOps.concat_nil	40	0.010629	2	2	0.0	synth with cache (only 1: simpl; only 1: f_equal).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_lt_square	40	40.185459	19883	5393
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_add	40	40.416385	23042	5165
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_0_1	40	40.533835	144355	2697
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListOps.concat_cons	40	0.021961	5	4	0.0.1.0	synth with cache (only 1: induction l; only 1: rewrite app_nil_r; only 1: apply app_nil_r; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_mono	40	40.189325	20905	2964
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.In_cons	40	32.221814	11185	2107	7.8.1.2.1	synth with cache (only 1: rewrite In_alt2; only 1: rewrite In_alt2; only 1: setoid_rewrite Exists_exists; only 1: simpl; only 1: firstorder  (subst; auto)).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_unicity_ext	40	40.379651	45610	2530
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_sub_assoc	40	40.299319	7088	1930
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_mask_diag	40	0.029217	7	7	0.0.0.0.0.0.0	synth with cache (only 1: induction p; only 1: simpl; only 1: now rewrite ?IHp; only 1: simpl; only 1: now rewrite ?IHp; only 1: simpl; only 1: now rewrite ?IHp).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec0_0	40	40.411619	15683	645
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Injective_list_carac	40	40.162466	36464	5245
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_mono_l	40	40.289104	10253	4658
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_spec'	40	40.190108	5628	2076
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.succ_min_distr	40	40.334066	13305	1603
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_add_elim	40	19.229400	16784	3323	7.1.3.0.0.4.0.0.0.6.1.2	synth with cache (only 1: simple induction x; only 1: simpl; only 1: destruct 1; only 1: auto with datatypes; only 1: auto with datatypes; only 1: simpl; only 1: intros a0 l; only 1: elim (Aeq_dec b a0); only 1: auto with datatypes; only 1: intros H1 H2 [H3| H4]; only 1: auto with datatypes; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.remove_In	40	40.248972	62721	7979
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_0_mul	40	40.318810	6443	2157
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.Bezout_wd	40	40.196506	6049	1225
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_nle_iff	40	40.339061	22917	7798
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.app_removelast_last	40	40.200229	31675	5284
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_equiv2	40	40.291621	13942	2595
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalProperties.forE	40	0.197166	1	1	0	synth with cache (only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_spec_high'	40	40.086277	4154	1727
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.abs_eq	40	0.015195	3	2	1.0	synth with cache (only 1: intro H; only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.InitialExists.initial_unique	40	40.259258	17578	4863
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.abs_neq	40	0.067246	6	5	0.1.0.0.0	synth with cache (only 1: destruct n; only 1: intro n; only 1: now nzsimpl; only 1: now destruct 1; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.exists_last	40	40.148420	52930	4602
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.sgn_null	40	0.016138	7	2	5.0	synth with cache (only 1: intro H; only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_add_distr_l	40	40.086076	4730	1574
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.sgn_pos	40	0.016556	2	2	0.0	synth with cache (only 1: intro H; only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.sgn_neg	40	0.012577	1	1	0	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.removelast_app	40	40.111259	36021	6144
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.pow_0_r	40	0.006468	1	1	0	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_antisym_abs	40	40.256507	22458	6523
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_lt_pow2	40	40.262054	16206	4982
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InA_app	40	40.117238	20749	3454
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.inj_xI	40	40.062112	19008	2456
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.count_occ_In	40	40.107877	35451	5063
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_div_pow2	40	40.191005	10295	2233
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_eq_l	40	40.362017	19837	4820
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.PredicateSimplification.in_applicative	40	20.854521	6140	139
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_0_l	40	0.086670	21	6	0.1.1.2	synth with cache (only 1: intros; only 1: rewrite shiftl_mul_pow2; only 1: nzsimpl; only 1: order_nz).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_ge	40	20.720517	13007	1744	0.0.0.0.0.0.0.10.0.0.0.0.0.0.0.0.0.32	synth with cache (only 1: split; only 1: destruct n as [| n], m as [| m]; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: destruct n, m; only 1: intros H; only 1: trivial; only 1: simpl; only 1: now destruct p; only 1: simpl; only 1: now destruct p; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Minus.le_plus_minus	40	11.488399	8220	2789	0.1.1.1.0.0.0.3.0.0.2	synth with cache (only 1: revert m; only 1: induction n; only 1: intros; only 1: now Nat.nzsimpl; only 1: destruct m; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, Peano.le_S_n; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.ltb_lt	40	40.130444	31140	6822
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_antisym	40	40.208045	10155	2210
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.leb_le	40	40.104714	34384	5998
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_0_l	40	0.338724	71	21	0.0.0.1.3	synth with cache (only 1: intro H; only 1: rewrite shiftr_div_pow2; only 1: nzsimpl; only 1: order_nz; only 1: order_nz).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.pow_pos_fold	40	0.013057	2	2	0.0	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_reg_r	40	40.457392	6467	2157
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_cnf_ff_inv	40	40.209484	68615	3618
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.count_occ_not_In	40	40.246486	22133	3777
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.right_prefix	40	40.100535	22604	3643
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_sub_r	40	40.222334	16244	2886
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.is_succ	40	40.109124	39419	2658
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.count_occ_inv_nil	40	40.140212	48296	5027
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zle_cases	40	23.267295	33516	2757	0.0.1.2.2.3.4.1.11.97	synth with cache (only 1: unfold Z.geb, Z.leb; only 1: case Z.compare_spec; only 1: intro H; only 1: subst; only 1: Z.order || apply Z.lt_0_1; only 1: intro H; only 1: Z.order; only 1: intro H; only 1: Z.swap_greater; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_mul_pow2	40	40.107979	7874	1940
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.Proof_irrelevance_gen.aux	40	40.155290	24081	1231
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.count_occ_cons_eq	40	40.158593	51865	5443
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.inj_iff	40	0.022681	9	5	2.0.1.0	synth with cache (only 1: split; only 1: intros H; only 1: now rewrite <- (id p), <- (id q), H; only 1: congruence).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_l	40	40.311449	12693	3298
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_div_swap	40	40.301462	14026	2126
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Injective_carac	40	40.136263	39837	12536
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListOps.list_eq_dec	40	0.031549	10	3	2	synth with cache (only 1: decide equality).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Image.Image.Im_add	40	40.148188	14946	1618
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.in2W	40	0.254815	1	1	0	synth with cache (only 1: by move  =>? ?).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Map.map_cons	40	0.003965	2	1	1	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.square_spec	40	1.108634	268	91	1.1.1.1.1.1.0.1.1	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: f_equal; only 1: apply Pos.square_spec; only 1: simpl; only 1: f_equal; only 1: apply Pos.square_spec).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_div2	40	0.754461	486	93	0.0.0.11.0.2	synth with cache (only 1: destruct n; only 1: trivial; only 1: destruct p; only 1: trivial; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_quot2	40	0.020092	3	3	0.0.0	synth with cache (only 1: destruct n as [| p]; only 1: trivial; only 1: now destruct p).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.in3W	40	0.332424	1	1	0	synth with cache (only 1: by move  =>? ?).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Map.map_length	40	0.045814	38	9	3.1.2	synth with cache (only 1: induction l; only 1: firstorder  (subst; auto); only 1: RelationClasses.simpl_relation).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.add_soustr_2	40	40.144476	24626	6837
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_opp_r	40	1.010867	256	152	1.3.0.0.0.0	synth with cache (only 1: intros; only 1: apply gcd_unique_alt; only 1: apply gcd_nonneg; only 1: intros; only 1: rewrite divide_opp_r; only 1: apply gcd_divide_iff).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_lt_pred	40	40.297256	16143	6880
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.BinList.MakeBinList.jump_succ	40	40.109503	35275	3866
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListDec.Dec_in_Prop.NoDup_decidable	40	40.067526	22365	3140
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.is_pos	40	40.116904	36278	4540
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_opp_nz	40	40.096320	6832	2733
coq-tactician-stdlib.8.11.dev	Coq.Sets.Infinite_sets.Infinite_sets.approximants_grow	40	40.240202	51177	7806
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.RelElim.lt_ind_rel	40	40.490310	41101	4852
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Map.in_map_iff	40	1.078250	658	154	0.2.9.0	synth with cache (only 1: red; only 1: induction l; only 1: firstorder  (subst; auto); only 1: firstorder  (subst; auto)).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_app'	40	40.293710	27616	4777
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_opp_z	40	40.063655	13755	5139
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_assoc	40	40.296566	17212	3342
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_opp_nz	40	40.066100	5630	2351
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.negb_even	40	13.885191	2954	1365	1.1.0.1.0.1.0.1.0.0.0	synth with cache (only 1: intros; only 1: generalize (Even_or_Odd n), (Even_Odd_False n); only 1: rewrite <- even_spec, <- odd_spec; only 1: destruct (odd n), (even n); only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_le	40	23.655799	15286	2400	6.0.0.0.1.0.1.0.2.0.14	synth with cache (only 1: destruct n as [| p], m as [| q]; only 1: simpl; only 1: easy'; only 1: simpl; only 1: easy'; only 1: simpl; only 1: split; only 1: now destruct 1; only 1: now destruct p; only 1: simpl; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.compare_eq_iff	40	40.079557	21316	6228
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zodd_even_bool	40	22.232547	41557	2805	0.0.0.0.37.1.0.0.42.1.2.47	synth with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: induction p as [p IHp| p IHp| ]; only 1: trivial; only 1: trivial; only 1: trivial; only 1: destruct p; only 1: trivial; only 1: trivial; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.in2T	40	0.052772	2	1	1	synth with cache (only 1: by move  =>? ?; auto).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset.The_power_set_partial_order.Union_is_Lub	40	40.093820	28872	7411
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InA_app_iff	40	40.058709	14843	2845
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_1_l	40	0.018077	6	5	0.1.0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: split; only 1: apply le_0_1; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.in3T	40	0.091502	2	1	1	synth with cache (only 1: by move  =>? ?; auto).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Map.map_app	40	1.130297	952	248	0.9.0.0.0.0.0.2	synth with cache (only 1: induction l; only 1: simpl map; only 1: simpl in *; only 1: reflexivity; only 1: intro y; only 1: simpl map; only 1: rewrite (IHl y); only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_1_l	40	0.017889	6	5	0.1.0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: split; only 1: apply le_0_1; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.id	40	40.101047	20671	2783
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_same	40	40.358702	34979	5948
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.sub_in1	40	0.154490	2	1	1	synth with cache (only 1: by move  =>? ?; auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_lt_lin	40	40.430146	5448	1253
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.compare_antisym	40	40.105742	28919	9591
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.le_eq	40	40.351755	5184	692
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_testbit	40	0.167429	53	39	0.0.1.0.0.0.0.0.0	synth with cache (only 1: destruct a as [| a], n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now destruct a; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.opp_max_distr	40	40.325066	15577	1718
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_add_inside	40	40.336736	14814	2289
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_1_r	40	0.878458	318	115	0.0.0.0.0.0.6	synth with cache (only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: pose proof lt_0_1 as H; only 1: rewrite abs_pos; only 1: intuition; only 1: order; only 1: now nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.isok_iff	40	40.032576	8277	1109
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Map.map_eq_nil	40	0.895949	493	144	6.3.0.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: firstorder; only 1: discriminate).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.min_l	40	40.107807	34233	5785
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.id	40	0.025186	5	4	1.0.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: trivial; only 1: now destruct 1).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.isok_Ok	40	0.005150	5	1	4	synth with cache (only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.in1W	40	5.024699	115	16	1.13	synth with cache (only 1: move  =>f0 fP; only 1: by do 3!case).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.min_r	40	40.116467	34833	6594
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Pred_Type.Generic.all_not_not_ex	40	7.271762	7192	1587	3.4.1.11	synth with cache (only 1: intros A; only 1: red; only 1: simple induction 2; only 1: exact H).
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_add_intro1	40	40.123368	38698	7541
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.flat_map_concat_map	40	0.636231	369	94	1.0.0.0.1.9	synth with cache (only 1: intros x y z; only 1: induction l as [| a l IHl]; only 1: trivial; only 1: simpl; only 1: rewrite IHl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_0_l	40	40.075813	26550	2088
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.sub_in11	40	1.095470	3	1	2	synth with cache (only 1: by move  =>? ?; auto).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Mergesort.Sort.Permuted_merge	40	40.126208	42808	5256
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InA_rev	40	40.153246	15903	3031
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div_pow2_bits	40	40.183528	7252	1404
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListOps.rev_app_distr	40	40.097122	25750	6974
coq-tactician-stdlib.8.11.dev	Coq.Sets.Integers.Integers_sect.Finite_subset_has_lub	40	40.070052	21690	3193
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.divmod_spec	40	40.117176	31506	5943
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.add_1	40	40.060939	4768	948
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.InjectionsTheory.pcan_pcomp	40	40.033320	2152	143
coq-tactician-stdlib.8.11.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.Union_preserves_Finite	40	40.097341	6129	1579
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_eqk	40	0.018223	11	3	0.6	synth with cache (only 1: induction 1; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_right_r	40	0.008333	2	1	1	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_right_l	40	0.006477	1	1	0	synth with cache (only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_1_2	40	40.472407	106971	2906
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.elim_compare_eq	40	40.234750	92975	5290
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_refl	40	0.015514	4	2	2.0	synth with cache (only 1: intros; only 1: auto with *).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_refl	40	0.006420	1	1	0	synth with cache (only 1: auto with ordered_type).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.in1T	40	3.383111	57	12	1.9	synth with cache (only 1: Bool.destr_bool; only 1: auto with bool).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_sym	40	0.011545	2	2	0.0	synth with cache (only 1: unfold eqk, eqke; only 1: auto using OrderTac.eq_sym).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.map_id	40	0.377031	352	82	1.2.1.0.0.5.0	synth with cache (only 1: intros; only 1: induction l; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: f_equal; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.rplus_morph_Proper	40	6.821907	8010	656	5.3.46	synth with cache (only 1: intros A B H; only 1: intro; only 1: firstorder  (subst; auto)).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeuclid.ZEuclid.div_mod	40	40.100660	26798	3684
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.diff	40	40.194278	41075	3202
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mul	40	1.285359	689	183	0.0.0.0.0.6.2.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: split; only 1: order; only 1: now rewrite abs_pos; only 1: nzsimpl; only 1: apply mul_comm).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj	40	1.156085	1044	135	14.7	synth with cache (only 1: intros Ha Hb H; only 1: now rewrite <- (Nat2Pos.id n), <- (Nat2Pos.id m), H).
coq-tactician-stdlib.8.11.dev	Coq.micromega.Refl.make_conj_app	40	40.157937	28621	4286
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_sym	40	0.325383	7	3	0.4.0	synth with cache (only 1: unfold eqk, eqke; only 1: intros; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.abs_and_pol	40	40.229852	58709	3083
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.is_empty_spec	40	40.168195	61791	4407
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.add_2	40	40.101868	8410	3234
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.map_map	40	0.465661	337	66	3.0.0.3.8	synth with cache (only 1: intros; only 1: induction l as [| x l IH]; only 1: simpl; only 1: auto; only 1: CRelationClasses.simpl_crelation).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_singleton	40	0.018963	7	4	0.0.2.1	synth with cache (only 1: constructor; only 1: intro; only 1: invlist InA; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.log2_nonpos	40	0.036398	29	8	0.3	synth with cache (only 1: inversion 1; only 1: now apply pred_0).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_iff	40	0.414703	93	54	0.0.0.0.4.0	synth with cache (only 1: split; only 1: intros; only 1: rewrite <- (id n), <- (id m) by trivial; only 1: now f_equal; only 1: intros; only 1: now f_equal).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersAlt.Update_OT.compare_spec	40	40.159701	59541	5284
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_0	40	0.010181	3	2	0.1	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.equal	40	40.145957	16313	2591
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersAlt.Backport_OT.lt_trans	40	0.007263	5	1	4	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_pos	40	0.033922	7	7	0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.subset	40	40.100120	5240	2315
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.max_l	40	40.102497	31862	6366
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_neg	40	0.005326	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.concat_map	40	1.536499	1049	262	2.1.7.0.0.0.0.0	synth with cache (only 1: intros A B f l; only 1: induction l as [| x l IH]; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite map_app; only 1: rewrite IH; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_add	40	0.026230	6	2	2.2	synth with cache (only 1: intros; only 1: now destruct n, m).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.add_spec	40	40.159013	58691	5138
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.Proof_irrelevance_gen.ext_prop_dep_proof_irrel_gen	40	40.165837	50565	15898
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Disjoint_Intersection	40	40.236948	66550	6458
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_cons_append	40	13.086791	14540	2231	18.3.2.3.1.3.4	synth with cache (only 1: induction l; only 1: intros h; only 1: auto; only 1: intro y; only 1: simpl in *; only 1: generalize (app_nil_r (A:=l)); only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_reg_l	40	40.208694	17092	6614
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.remove_spec	40	40.223214	69585	4448
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.eqb_alt	40	40.420578	46829	7657
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.double_spec	40	0.063964	3	1	2	synth with cache (only 1: now destruct n as [| [p| p| ]]).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Image.Image.image_empty	40	4.981902	4251	755	4.4.5.1.6.0.2	synth with cache (only 1: firstorder; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: destruct 1; only 1: firstorder; only 1: auto using Im_def with sets).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_mul	40	0.396208	84	48	1.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n, m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: now destruct 1 || now destruct 2).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_middle	40	0.010434	1	1	0	synth with cache (only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.add_3	40	40.055839	8727	3527
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.succ_double_spec	40	0.189265	4	1	3	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersAlt.Backport_OT.lt_not_eq	40	40.164769	64502	4628
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_trans	40	0.861991	641	102	1.4.9	synth with cache (only 1: unfold eqk, eqke; only 1: intros x y z; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.succ_double_add	40	0.013404	1	1	0	synth with cache (only 1: now destruct n, m).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_trans	40	0.045810	16	5	1	synth with cache (only 1: eauto with ordered_type).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_0_r	40	2.127022	1749	155	1.22.2	synth with cache (only 1: intro H; only 1: unfold def_mul; only 1: now rewrite recursion_0).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.double_mul	40	0.044615	12	7	4	synth with cache (only 1: now destruct n, m).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.on1W	40	2.093607	1	1	0	synth with cache (only 1: by move  =>? ?).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_not_eqk	40	0.010030	3	2	1.0	synth with cache (only 1: unfold eqk, eqke; only 1: auto with ordered_type).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.elements	40	40.217467	49096	7118
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.sub_in111	40	2.203513	4	1	3	synth with cache (only 1: by move  =>? ?; auto).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.lt_succ_r	40	40.104642	34560	5557
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_not_eqke	40	0.037690	6	4	0.0.2.0	synth with cache (only 1: unfold eqk, ltk; only 1: unfold eqk, eqke; only 1: intuition; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Classes.SetoidClass.equiv_nequiv_trans	40	40.108432	39951	3659
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_succ	40	0.458775	257	74	0.1.0.2.0.0.4	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: intro H; only 1: simpl; only 1: now rewrite Pos.add_1_r; only 1: now destruct 1 || trivial).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_equiv	40	0.382357	149	45	6.0.0.5	synth with cache (only 1: split; only 1: auto with ordered_type; only 1: auto with ordered_type; only 1: eauto with ordered_type).
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.or_cnf_opt_cnf_ff_r	40	1.308528	729	196	2.0.0.1.5.0.0.0	synth with cache (only 1: intros; only 1: unfold or_cnf_opt; only 1: rewrite is_cnf_tt_cnf_ff; only 1: destruct (is_cnf_tt f) eqn:EQ; only 1: simpl; only 1: apply is_cnf_tt_inv in EQ; only 1: auto; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_equiv	40	0.035970	5	4	0.0.0.1	synth with cache (only 1: constructor; only 1: eauto with ordered_type; only 1: eauto with ordered_type; only 1: eauto with ordered_type).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.Finite_downward_closed	40	40.131684	30264	5321
coq-tactician-stdlib.8.11.dev	Coq.Arith.Factorial.fact_le	40	24.468151	27610	2600	11.0.6.27.0.9	synth with cache (only 1: induction 1; only 1: constructor; only 1: simpl; only 1: destruct m; only 1: trivial; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_nge_iff	40	40.350148	19243	5049
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.on1lW	40	2.421990	1	1	0	synth with cache (only 1: by move  =>? ?).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_cons_append	40	40.044421	8941	2712
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.add_NoDup	40	40.118942	39190	5817
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Ropp_mul_l	40	40.227062	40491	679
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.on2W	40	1.523452	1	1	0	synth with cache (only 1: by move  =>? ?).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Map.in_map	40	6.861651	9135	1258	0.1.0.3.2.20.1.0	synth with cache (only 1: red; only 1: intros; only 1: induction l; only 1: assumption; only 1: firstorder; only 1: subst; only 1: left; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zlt_cases	40	7.472237	8460	710	2.1.3.0.3.4.11.0.27.11	synth with cache (only 1: unfold Z.gtb, Z.ltb; only 1: case Z.compare_spec; only 1: intro H; only 1: Z.swap_greater; only 1: subst; only 1: Z.order || apply Z.lt_0_1; only 1: now Z.swap_greater; only 1: intro H; only 1: Z.swap_greater; only 1: Z.order).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.div2_double	40	0.021856	5	4	0.1.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.div2_succ_double	40	0.006818	1	1	0	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.on1T	40	1.679316	3	1	2	synth with cache (only 1: by move  =>? ?; auto).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareBasedOrderFacts.lt_irrefl	40	40.460402	111093	3179
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_succ_l	40	40.088572	28422	4777
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.Proof_irrelevance_Prop_Ext_CC.ext_prop_dep_proof_irrel_cc	40	40.431930	172431	9747
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_comm	40	40.171393	12235	6954
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InA_app_idem	40	40.070045	10694	2623
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.add_ok	40	40.146154	28301	3252
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_strorder	40	1.949328	1691	126	0.7.3.18.1	synth with cache (only 1: split; only 1: compute; only 1: intros a H; only 1: order; only 1: eauto with ordered_type).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Sort_Inf_In	40	40.298309	48280	5381
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.map_ext	40	0.237529	226	62	0.2.0.2.3.0	synth with cache (only 1: induction l; only 1: auto; only 1: simpl map; only 1: rewrite H by intuition; only 1: rewrite IHl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.odd_1	40	6.511766	9689	196
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Fold_Left_Recursor.fold_left_app	40	0.047917	14	6	0.0.0.0.3	synth with cache (only 1: induction l as [| x l IH]; only 1: simpl in *; only 1: trivial; only 1: intros; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zabs.Zabs_intro	40	19.587478	36850	2287	1.1.0.0.11.6.2.34	synth with cache (only 1: intros def_n0; only 1: intro n; only 1: intro H; only 1: destruct n as [| p| p]; only 1: intros; only 1: trivial; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListOps.rev_unit	40	40.147247	31306	6860
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.pow_neg_r	40	9.501952	4009	614	0.16.2.8	synth with cache (only 1: destruct m as [| m| m]; only 1: now destruct n; only 1: now destruct n; only 1: now destruct 1 || intros _).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.on2T	40	1.344051	1	1	0	synth with cache (only 1: by move  =>? ?; auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.add_2	40	40.035610	3327	639
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.on1lT	40	1.891777	2	1	1	synth with cache (only 1: by move  =>? ?; auto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.singleton_ok	40	0.014836	6	2	2.2	synth with cache (only 1: intros; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.cardinal	40	40.128510	14815	7152
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.remove_spec	40	40.043810	7291	2221
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_unique_exact	40	6.043788	2353	509	0.1.8.1.4.1.2	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_unique with 0; only 1: split; only 1: apply le_refl; only 1: now rewrite abs_pos; only 1: nzsimpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.sqrt_neg	40	0.010310	1	1	0	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_add	40	40.050524	8366	1233
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Store.Tget_Tadd	40	40.123727	43149	4231
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.is_empty_spec	40	40.096967	31034	4830
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.sqrtrem_sqrt	40	0.174392	57	26	0.0.0.0.2.0.0.0	synth with cache (only 1: destruct n; only 1: reflexivity; only 1: simpl; only 1: unfold N.sqrtrem, N.sqrt, Pos.sqrt; only 1: destruct (Pos.sqrtrem p) as (s, r); only 1: now destruct r; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_1_l	40	40.223061	28714	8255
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.add_3	40	40.060714	8702	3858
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListOps.rev_involutive	40	40.126402	43053	6835
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_pos	40	40.079834	21683	3570
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.mem_spec	40	40.099033	31102	5285
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.empty_ok	40	0.010661	3	1	2	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareBasedOrderFacts.lt_eq_cases	40	40.240194	39488	5660
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_wd	40	40.048383	9861	2277
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.empty_spec	40	0.202285	203	29	0.0.12.0	synth with cache (only 1: unfold empty; only 1: compute in *; only 1: intros a H; only 1: inv).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_not_ltk	40	0.009607	2	2	0.0	synth with cache (only 1: unfold eqk, ltk; only 1: auto with ordered_type).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalFacts.nzhead_nonzero	40	18.168921	13894	2873	1.1.0.1.0.1.0.1.0.1.0.1.0.1.0.1.0.1.0.0.8.7	synth with cache (only 1: revert d'; only 1: induction d; only 1: discriminate; only 1: simpl; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: simpl; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: simpl; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: simpl; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: simpl; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: simpl; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: simpl; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: simpl; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: simpl; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_eqk	40	0.016485	3	2	1.0	synth with cache (only 1: intros x y z; only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_ltk	40	0.007228	1	1	0	synth with cache (only 1: eauto with ordered_type).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_app_comm	40	40.133096	49696	4046
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_case	40	0.148054	21	7	0.0.2.1	synth with cache (only 1: intros p n m Hp; only 1: destruct_max n; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.N2Nat.inj_succ_double	40	40.228063	15079	1599
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_middle	40	0.015969	2	1	1	synth with cache (only 1: now rewrite app_comm_cons, (PermutationA_cons_append l₁ x), <- app_assoc).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_pos	40	0.919553	123	59	0.6.0	synth with cache (only 1: intros; only 1: assert (LE : 0 <= a / b) by (apply div_pos; order); only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.add_Inf	40	40.031423	4369	1664
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_str_pos	40	0.165175	23	16	0.3.0.0	synth with cache (only 1: intros a b (Hb, Hab); only 1: assert (LE : 0 <= a / b) by (apply Private_NZDiv.div_pos; order); only 1: apply div_str_pos; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.PredicateSimplification.mem_topred	40	33.360681	4437	87
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.double_lt_mono	40	0.872818	123	64	1.0.0.0.0.0.0.0.1	synth with cache (only 1: destruct n as [| n], m as [| m]; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListOps.in_rev	40	40.127496	38647	9148
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_mono	40	40.235179	19880	4947
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.subon1	40	2.639549	3	1	2	synth with cache (only 1: by move  =>? ?; auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.remove_3'	40	2.035382	294	180	0.0.1.0.0.1.0.0	synth with cache (only 1: intros m Hm x y e; only 1: generalize Hm; only 1: functional induction (remove x m); only 1: auto; only 1: auto; only 1: do 2 inversion_clear 1; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.min_r	40	19.272939	13719	2702	0.2.0.0.1.19	synth with cache (only 1: unfold le, min; only 1: rewrite (compare_antisym n m); only 1: case N.compare_spec; only 1: trivial; only 1: intuition; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zabs.Zabs_dec	40	1.832765	1712	220	0.0.0.18.2	synth with cache (only 1: intro n; only 1: destruct n; only 1: auto with relations; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.add_sorted	40	40.102112	29455	5203
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Inf_alt	40	40.109707	34352	6445
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.remove_1	40	40.068602	17551	4547
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.makeBlack_spec	40	40.055173	15299	2717
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_abs_l	40	10.133415	3774	1697	1.0.0.0.1.0.0.0.0.0.0.1.0	synth with cache (only 1: intros; only 1: destruct (abs_eq_or_opp n) as [H| H]; only 1: rewrite H; only 1: apply gcd_unique_alt; only 1: apply gcd_nonneg; only 1: intros; only 1: apply gcd_divide_iff; only 1: rewrite H; only 1: apply gcd_unique_alt; only 1: apply gcd_nonneg; only 1: intros; only 1: rewrite divide_opp_r; only 1: apply gcd_divide_iff).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.min_elt_spec1	40	40.136254	44052	2822
coq-tactician-stdlib.8.11.dev	Coq.Arith.EqNat.beq_nat_false	40	24.749559	35036	4163	1.3.0.0.0.14.4.1.2.0.7	synth with cache (only 1: revert m; only 1: induction n; only 1: intros; only 1: intro H1; only 1: simpl in H; only 1: subst; only 1: discriminate; only 1: destruct m; only 1: easy; only 1: intro H; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.double_le_mono	40	0.819893	178	73	1.0.0.0.0.0.0.0.1	synth with cache (only 1: destruct n as [| n], m as [| m]; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intro H; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_1_r	40	40.138285	26750	5152
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.subon1l	40	2.320262	1	1	0	synth with cache (only 1: by move  =>allQ x /sub2; apply : allQ ).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.makeRed_spec	40	0.071399	5	5	0.0.0.0.0	synth with cache (only 1: destruct s; only 1: simpl; only 1: intuition_in; only 1: simpl; only 1: intuition_in).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_1	40	2.965413	3764	116
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_abs_r	40	0.499338	120	76	0.0.1.0.2.0	synth with cache (only 1: intros; only 1: destruct (abs_eq_or_opp m) as [H| H]; only 1: rewrite H; only 1: easy; only 1: rewrite H; only 1: now rewrite gcd_comm, gcd_opp_l, gcd_comm).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.succ_double_le_mono	40	0.336636	116	53	0.0.0.0.0.0.0.0.1	synth with cache (only 1: destruct n as [| n], m as [| m]; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Logic.PropExtensionalityFacts.PropExt_imp_ProvPropExt	40	40.284024	100779	4571
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.succ_double_lt_mono	40	0.673407	73	43	1.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n as [| n], m as [| m]; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.compare_0_r	40	0.013293	7	2	2.3	synth with cache (only 1: intro H; only 1: false_hyp H nlt_0_r).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.pow_0_r	40	0.005456	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.elements_1	40	0.008740	1	1	0	synth with cache (only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.elements_2	40	0.009259	1	1	0	synth with cache (only 1: eauto with ordered_type).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.pow_neg_r	40	0.012832	8	2	6.0	synth with cache (only 1: intro; only 1: false_hyp ltac:(H) nlt_0_r).
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.Equivalences.UIP_refl_on__Streicher_K_on	40	40.573299	250687	12644
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.elements_3	40	0.032927	7	5	1.0.0.0.1	synth with cache (only 1: induction m; only 1: intuition; only 1: intros; only 1: destruct a as (x', e'); only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.min_elt_spec2	40	40.066276	19790	2867
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_1_l	40	40.329518	24072	5456
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.remove_2	40	40.044531	3791	1510
coq-tactician-stdlib.8.11.dev	Coq.Logic.PropExtensionalityFacts.PropExt_imp_RefutPropExt	40	0.257018	557	140	2.5.0.0.2.0	synth with cache (only 1: intros Ext A Ha; only 1: apply Ext; only 1: split; only 1: trivial; only 1: intro H1; only 1: elim H1).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.fold_right_app	40	1.395257	1461	270	0.7.1.3.0.2	synth with cache (only 1: induction l; only 1: reflexivity; only 1: intros; only 1: simpl; only 1: rewrite IHl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.fold_1	40	0.200438	151	36	3.0.0.5	synth with cache (only 1: induction m; only 1: destr_bool; only 1: destr_bool; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.subon2	40	3.362210	5	1	4	synth with cache (only 1: by move  =>? ?; auto).
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.rtimes_morph_Proper	40	8.215029	8850	786	5.3.43	synth with cache (only 1: intros A B H; only 1: intro; only 1: firstorder  (subst; auto)).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZBase.NZBaseProp.CentralInduction.central_induction	40	40.138171	10587	741
coq-tactician-stdlib.8.11.dev	Coq.Logic.HLevels.eq_trans_cancel	40	40.323826	131346	10251
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_pos	40	40.434949	13432	2873
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Inverse_Image.Inverse_Image.wf_inverse_rel	40	40.233692	79645	18195
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.max_elt_spec3	40	1.134579	368	160	0.0.0.0.0.0.0.5	synth with cache (only 1: functional induction (max_elt s); only 1: red; only 1: red; only 1: inversion 2; only 1: inversion 1; only 1: intro H0; only 1: destruct (IHo H0 _x3); only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_r	40	40.321729	13776	3621
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Store.get_Full_Gt	40	40.096393	25625	9182
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.subrelUl	40	36.641316	6913	210	7.7.31.55	synth with cache (only 1: inversion 1; only 1: simpl; only 1: red; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.InA_eqke_eqk	40	3.338591	2264	393	0.0.3.13.0	synth with cache (only 1: unfold eqke; only 1: induction 1; only 1: destruct H; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_div_factor	40	40.115231	19856	4770
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.Corollaries.eq_dep_eq_on__inj_pair2_on	40	0.148827	77	28	2.4.0	synth with cache (only 1: intros eq_rect_eq; only 1: intro Streicher_K; only 1: auto using eq_sigT_eq_dep, eq_dep_eq_sigT).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset.The_power_set_partial_order.Intersection_is_Glb	40	40.115495	33923	8146
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_quot_factor	40	40.150922	13995	4747
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.f_eq_dep	40	0.012028	10	3	0.2	synth with cache (only 1: destruct 1; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_def.Zpower_theory	40	40.050931	16650	2275
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_trans_tn1_iff	40	40.345490	141886	16561
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Lexicographic_Product.Wf_Symmetric_Product.wf_symprod	40	40.192979	69361	13816
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.eq_dep_non_dep	40	0.022373	22	8	0.2.4	synth with cache (only 1: intros A x y z H1 H2; only 1: destruct 1; only 1: exact eq_refl).
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.f_eq_dep_non_dep	40	0.009830	10	3	0.2	synth with cache (only 1: intros * []; only 1: exact eq_refl).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.iter_swap	40	24.563412	10066	2315	0.4.2.3.4.2.5.8	synth with cache (only 1: induction p as [p IHp| p IHp| ]; only 1: simpl; only 1: intros; only 1: now rewrite ?H, ?IHp; only 1: intros; only 1: simpl; only 1: now rewrite ?H, ?IHp; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.eqf_equiv	40	33.932510	29652	3127	15.19.8.1.6.6.78	synth with cache (only 1: split; only 1: intro; only 1: firstorder; only 1: intros x x' EQ; only 1: now f_equiv; only 1: compute; only 1: eauto using Private_OrderTac.Tac.eq_trans, Private_OrderTac.Tac.eq_sym).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Classical_sets.Ensembles_classical.Inhabited_Setminus	40	40.088492	30116	5931
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rtn1_rt	40	0.029492	38	13	2.0.2.0.0	synth with cache (only 1: induction 1; only 1: auto with sets; only 1: constructor 3 with y; only 1: auto; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.add_eq	40	40.089981	27114	6248
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.makeBlack_ok	40	3.580607	465	102	9.1.0.8	synth with cache (only 1: induction s; only 1: auto; only 1: simpl; only 1: ok).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.MoreInt.eqb_eq	40	40.133270	40159	2449
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.makeRed_ok	40	0.132679	6	4	0.0.0.2	synth with cache (only 1: destruct s; only 1: auto; only 1: simpl; only 1: ok).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.KeyOrderedType.ltk_compat'	40	40.140796	10402	1871
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.min_elt_spec3	40	40.066441	19604	3139
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.In_inv	40	40.104334	7727	1552
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.In_eq	40	40.242518	52412	5489
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.on_can_inj	40	2.846532	1	1	0	synth with cache (only 1: by move  =>fK x y /fK {+2}<- /fK {+2}<- ->).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.KeyOrderedType.Elt.ltk_not_eqke	40	0.029149	3	3	0.0.0	synth with cache (only 1: intros LT EQ; only 1: rewrite EQ in LT; only 1: elim (StrictOrder_Irreflexive _ LT)).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.KeyOrderedType.Elt.Inf_eq	40	0.023686	1	1	0	synth with cache (only 1: now intros <-).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_lower_bound	40	30.755226	18197	3683	1.1.23.1	synth with cache (only 1: intros n m p H; only 1: apply div_le_lower_bound; only 1: auto'; only 1: auto').
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.In_inv_3	40	0.047820	12	5	0.0.2.0	synth with cache (only 1: inversion_clear 1; only 1: compute in H0; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcompare.Zcompare_Gt_trans	40	40.178145	17538	1708
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.UIP_shift_on	40	40.249878	94728	15009
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zeven_equiv	40	40.098262	8806	1725
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_2_facts.Rstar_equiv_Rstar1	40	40.172440	50985	14948
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_le_pred	40	40.229643	20014	7750
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.div_mod	40	40.330658	21282	7324
coq-tactician-stdlib.8.11.dev	Coq.Lists.StreamMemo.DependentMemoFunction.dimemo_get_correct	40	40.337695	130221	9755
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.elements_1	40	0.011182	2	2	0.0	synth with cache (only 1: intros m x; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.elements_2	40	0.034160	12	7	0.3.0.0	synth with cache (only 1: intros m x; only 1: unfold PX.MapsTo; only 1: intros e' eqfind; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.double_add	40	10.822808	2195	667	0.0.2.0.2.0.4.0.2	synth with cache (only 1: destruct n, m; only 1: unfold succ, add; only 1: reflexivity; only 1: unfold succ, add; only 1: trivial; only 1: unfold succ, add; only 1: trivial; only 1: unfold succ, add; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.elements_3w	40	0.031208	7	5	2.0.0.0.0	synth with cache (only 1: induction m; only 1: intuition; only 1: intros; only 1: destruct a as (x', e'); only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.QArith.QOrderedType.Q_as_OT.lt_strorder	40	2.905253	1774	262	0.0.1.0.1.0.5.11.0.2.0.0	synth with cache (only 1: split; only 1: red; only 1: unfold Qle, Qlt; only 1: intros (x1, x2); only 1: intro m; only 1: Z.order'; only 1: red; only 1: intros; only 1: apply Qle_lt_trans with y; only 1: apply Qlt_le_weak; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.rmatch	40	1.121394	4437	87
coq-tactician-stdlib.8.11.dev	Coq.QArith.QOrderedType.Q_as_OT.lt_compat	40	0.028396	3	3	0.0.0	synth with cache (only 1: intros p q H r s H'; only 1: rewrite 2!Qlt_alt, H, H'; only 1: auto with *).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.auxiliary.Zne_left	40	40.110437	25211	1507
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_wd	40	40.130471	13437	2639
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_spec_alt	40	40.229095	8288	3087
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.remove_sorted	40	5.070879	2080	763	0.0.0.0.1.1.0.0.0.1.0.1.0.0	synth with cache (only 1: induction m; only 1: simpl; only 1: intuition; only 1: intros; only 1: destruct a as (x'', e''); only 1: simpl; only 1: case (X.compare x x''); only 1: intuition; only 1: intuition; only 1: inversion_clear Hm; only 1: auto; only 1: intuition; only 1: inversion_clear Hm; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_wd	40	40.134845	18543	3185
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.remove_ok	40	40.035675	7898	2473
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.In_inv_2	40	1.189000	685	119	0.11.4	synth with cache (only 1: inversion 1; only 1: intuition; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zodd_equiv	40	40.047510	16309	1738
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.singleton_spec	40	7.894979	1402	378	0.6.3.3	synth with cache (only 1: unfold singleton; only 1: intros a b; only 1: rewrite InA_cons, InA_nil; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt_rt1n	40	40.357011	140950	13985
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.canLR_on	40	1.389225	1	1	0	synth with cache (only 1: by move  =>fK D1y ->; rewrite fK).
coq-tactician-stdlib.8.11.dev	Coq.Bool.BoolEq.Bool_eq_dec.not_eq_false_beq	40	40.251721	90459	9174
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.subrelUr	40	40.166809	1291	65
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zmisc.iter_nat_of_Z	40	40.110933	37080	5432
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.elements_spec2w	40	0.011298	6	2	1.3	synth with cache (only 1: intros; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.elements_spec1	40	0.132712	12	7	1.1.0.2	synth with cache (only 1: split; only 1: intros; only 1: auto; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.fold_spec	40	0.007440	2	1	1	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.canRL_on	40	1.365949	2	1	1	synth with cache (only 1: by move  =>fK D1x <-; rewrite fK).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.double_bits_succ	40	40.137922	17511	3048
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.compat_P_aux	40	40.121665	43481	3888
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Wf_Z.Z_of_nat_complete	40	40.153096	58281	4126
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Wf_Z.Z_of_nat_complete_inf	40	0.038311	10	9	1.0.0.0.0.0	synth with cache (only 1: intros H; only 1: exists (Z.to_nat x); only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: now apply Z2Nat.id).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono	40	4.608938	2108	592	0.2.0.1.0.5.4	synth with cache (only 1: intros; only 1: transitivity (a ^ d); only 1: apply Private_NZPow.pow_le_mono_r; only 1: trivial; only 1: trivial; only 1: apply Private_NZPow.pow_le_mono_l; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.double_bits	40	40.061447	16112	3987
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.log2_nonpos	40	0.008096	1	1	0	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.PredicateSimplification.app_predE	40	40.174126	1972	97
coq-tactician-stdlib.8.11.dev	Coq.Lists.Streams.Map.ForAll_map	40	40.338416	91773	11137
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_iff	40	40.174722	11518	7694
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_1_l	40	40.078391	23232	3309
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_alt.Piter_mul_acc	40	40.080993	29142	2176
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mul_pow2_bits_add	40	40.077034	11541	2821
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mul_pow2_bits	40	40.094060	5718	2278
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zeven_dec	40	1.356275	1463	299	0.2.2.1.0.0.0.2.0.2.0.0.0.0.21	synth with cache (only 1: destruct n as [| p| p]; only 1: simpl; only 1: auto; only 1: destruct p; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: destruct p; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mul_pow2_bits_low	40	40.118731	19837	2909
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_gt	40	40.434982	29743	4478
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.MoreInt.eqb_neq	40	40.197942	86748	3358
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zmin.Zmin_spec	40	40.090782	31469	1981
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_sub_max	40	40.205921	16553	2081
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mod_pow2_bits_high	40	40.066412	18407	3365
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zodd_dec	40	0.687649	267	147	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n as [| p| p]; only 1: simpl; only 1: now left || now right; only 1: destruct p; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right; only 1: destruct p; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Ztrichotomy_inf	40	40.113791	46932	1025
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mod_pow2_bits_low	40	40.116520	6537	1409
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.InjectionsTheory.eq_inj	40	40.030349	842	69
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_sub	40	40.438925	27365	2581
coq-tactician-stdlib.8.11.dev	Coq.Sets.Permut.Axiomatisation.twist	40	40.123667	36406	14180
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zgt_trans	40	0.129874	17	9	0.1.0	synth with cache (only 1: Z.swap_greater; only 1: intros; only 1: now transitivity m).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_app	40	40.095881	14015	2769
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zle_gt_trans	40	0.163607	22	6	4.1.0	synth with cache (only 1: Z.swap_greater; only 1: intros; only 1: Z.order).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.dec_Zne	40	40.068454	19544	1578
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.onW_bij	40	2.703561	2	1	1	synth with cache (only 1: by case  =>g' fK g'K; exists g' => * ? *; auto).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.InjectionsTheory.eq_can	40	40.016915	1029	92
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zgt_le_trans	40	0.149879	21	11	3.1.0	synth with cache (only 1: Z.swap_greater; only 1: intros; only 1: Z.order).
coq-tactician-stdlib.8.11.dev	Coq.micromega.Env.S.jump_add	40	40.071046	21686	1705
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.decidability.Z_lt_dec	40	40.117642	47046	2256
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zmax.Zmax_spec	40	40.095961	35434	2259
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zge_trans	40	0.073121	4	2	2.0	synth with cache (only 1: Z.swap_greater; only 1: Z.order).
coq-tactician-stdlib.8.11.dev	Coq.Lists.Streams.Zip.Str_nth_tl_zipWith	40	1.176439	2157	447	0.11.1.2.1.3	synth with cache (only 1: induction n; only 1: intros H; only 1: intros; only 1: trivial; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_max	40	40.083260	28935	2895
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_min	40	40.268030	21663	3068
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_small_iff	40	23.327393	11304	4451	1.0.0.6.0.0.0.0.0.0.0.3.0	synth with cache (only 1: intros a b Ha Hb; only 1: symmetry; only 1: split; only 1: intros Hab; only 1: apply mod_small; only 1: auto; only 1: intros Hab; only 1: destruct (lt_ge_cases a b); only 1: auto; only 1: destruct (mod_bound_pos a b); only 1: auto; only 1: auto; only 1: order').
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.dec_Zgt	40	40.117419	43124	4116
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_div	40	40.037849	12223	1550
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.dec_Zge	40	40.064224	16751	5828
coq-tactician-stdlib.8.11.dev	Coq.Lists.Streams.Zip.Str_nth_zipWith	40	0.520177	555	170	11.0.0.0	synth with cache (only 1: induction n; only 1: reflexivity; only 1: intros [x xs] [y ys]; only 1: apply IHn).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.not_Zeq	40	40.102885	35975	2561
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcompare.Zcompare_Gt_spec	40	40.096622	35572	2516
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_antimono	40	2.053404	988	299	0.1.0.1.0.0.1.1.0.0.0.0	synth with cache (only 1: intros Eqf Lef x y; only 1: destruct (min_spec x y) as [(H, E)| (H, E)]; only 1: rewrite E; only 1: destruct (max_spec (f x) (f y)) as [(H', E')| (H', E')]; only 1: assert (f y <= f x) by (apply Lef; order); only 1: order; only 1: auto; only 1: rewrite E; only 1: destruct (max_spec (f x) (f y)) as [(H', E')| (H', E')]; only 1: auto; only 1: assert (f x <= f y) by (apply Lef; order); only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zsucc_gt_compat	40	0.025984	6	2	0.4	synth with cache (only 1: Z.swap_greater; only 1: apply Z.succ_lt_mono).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Mult.mult_le_compat_r	40	40.075949	27750	3334
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_pred	40	0.604987	110	38	0.0.1.0.0.0.4	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now destruct p; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zeven_not_Zodd	40	2.037816	1282	488	4.0.0.0.0.0.0.0.0.0.8.1	synth with cache (only 1: intros H; only 1: destruct n as [| p| p]; only 1: simpl; only 1: tauto; only 1: destruct p; only 1: simpl; only 1: tauto; only 1: simpl; only 1: tauto; only 1: simpl; only 1: tauto; only 1: now destruct p).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_le_mono	40	40.296126	16695	3659
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_lt_upper_bound	40	40.322184	25113	4226
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zsucc_gt_reg	40	0.149485	58	11	7.1	synth with cache (only 1: Z.swap_greater; only 1: apply Z.succ_lt_mono).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zodd_not_Zeven	40	0.120356	5	5	0.0.0.0.0	synth with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd; only 1: destruct Z.odd; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zsucc_lt_reg	40	0.006264	1	1	0	synth with cache (only 1: apply Z.succ_lt_mono).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_compare	40	0.333623	99	52	1.9	synth with cache (only 1: intros Hqp Hrp; only 1: now destruct n, m).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_lt	40	0.057741	21	7	0.0.2	synth with cache (only 1: unfold N.lt, N.gt; only 1: intros Hn Hm; only 1: now rewrite N2Z.inj_compare).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zgt_succ	40	0.053848	66	10	2.9	synth with cache (only 1: Z.swap_greater; only 1: apply Z.lt_succ_diag_r).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.decidability.Z_le_dec	40	40.085379	28373	3947
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_mono_r	40	25.609341	12541	1989	0.0.29.0	synth with cache (only 1: intros n m p (q, Hq); only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: exists q; only 1: now rewrite mul_shuffle3, Hq).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zsucc_le_reg	40	0.334174	270	30	17	synth with cache (only 1: apply Z.succ_le_mono).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_3_facts.Noetherian_contains_Noetherian	40	40.153083	43254	8427
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_upper_bound	40	40.512224	18262	3736
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.onT_bij	40	1.789744	1	1	0	synth with cache (only 1: by case  =>g' fK g'K; exists g' => * ? *; auto).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Heap.defs.leA_Tree_Leaf	40	0.010114	2	2	0.0	synth with cache (only 1: red; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Znot_le_succ	40	0.406978	654	83	3.0.9.7	synth with cache (only 1: intro H; only 1: apply H; only 1: apply Z.lt_gt; only 1: apply Z.lt_succ_diag_r).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Heap.defs.leA_Tree_Node	40	0.005900	1	1	0	synth with cache (only 1: auto with datatypes).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zeven_Sn	40	0.479425	164	44	4.3.1	synth with cache (only 1: boolify_even_odd; only 1: intro H; only 1: now destruct n as [| [| | ]| [| | ]]).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.inT_bij	40	2.572618	1	1	0	synth with cache (only 1: by case  =>g' fK g'K; exists g' => * ? *; auto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zle_lt_succ	40	0.005935	1	1	0	synth with cache (only 1: apply Z.lt_succ_r).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Ropp_add	40	40.367616	38560	1566
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_add	40	0.537347	79	32	0.1.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply (mul_cancel_l _ _ c); only 1: order; only 1: apply (add_cancel_r _ _ ((a + b * c) mod c)); only 1: rewrite <- div_mod, Private_NZDiv.mod_add by order; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zlt_le_succ	40	0.006979	1	1	0	synth with cache (only 1: apply Z.le_succ_l).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_mod	40	40.070791	19033	3627
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zgt_succ_le	40	0.023789	12	3	5.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.lt_succ_r).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zlt_succ_le	40	0.007302	1	1	0	synth with cache (only 1: apply Z.lt_succ_r).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.MapsTo_eq	40	8.624570	8511	875	2.1.3.31.2	synth with cache (only 1: intros A x y z H1 H2; only 1: elim H2; only 1: firstorder; only 1: eauto with ordered_type; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zle_succ_gt	40	0.022524	8	2	2.4	synth with cache (only 1: Z.swap_greater; only 1: apply Z.le_succ_l).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.not_Zne	40	40.084646	27467	2833
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersTac.OrderFacts.trans	40	40.172041	54641	5164
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_involutive	40	40.255793	11658	2754
coq-tactician-stdlib.8.11.dev	Coq.Arith.Gt.gt_trans_S	40	40.097362	35894	2729
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.Zred_factor2	40	40.064984	3322	809
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_mul_r	40	40.313066	13614	2964
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt_rt1n_iff	40	40.232511	86833	15183
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.N2Nat.inj_add	40	40.234770	39369	2219
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.singleton_spec	40	40.066376	21333	2799
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.singleton_ok	40	0.020104	8	5	0.0.0.0.3	synth with cache (only 1: right; only 1: auto; only 1: auto; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.mod_bound_pos	40	40.269658	18034	2941
coq-tactician-stdlib.8.11.dev	Coq.Strings.Byte.byte_dec_bl	40	40.161173	28558	661
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.KeyOrderedType.Elt.ltk_not_eqk	40	40.145832	4676	780
coq-tactician-stdlib.8.11.dev	Coq.Arith.Div2.div2_odd	40	40.086644	32748	3059
coq-tactician-stdlib.8.11.dev	Coq.Structures.Orders.OTF_to_TTLB.leb_total	40	40.094115	30939	3043
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Ropp_opp	40	40.212814	24408	824
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.Zred_factor4	40	40.033374	4371	671
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_quot	40	40.561913	25981	3164
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.N2Nat.inj_mul	40	40.371098	25065	3751
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_mono_r	40	40.232236	9955	3617
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalFacts.rev_lnorm_rev	40	40.091894	25697	5587
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_add_distr	40	40.244258	7220	2113
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.sqrt_iter_spec	40	40.228648	10872	3596
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.gcd_divide_r	40	0.011579	4	3	0.1.0	synth with cache (only 1: intro n; only 1: intro H; only 1: apply gcd_divide).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_eq_r	40	40.209669	10382	4789
coq-tactician-stdlib.8.11.dev	Coq.Logic.Hurkens.NoRetractToNegativeProp.Paradox.paradox	40	40.321252	141382	8865
coq-tactician-stdlib.8.11.dev	Coq.Arith.EqNat.beq_nat_eq	40	12.797729	20015	2023	5.0.0.0.0.2.0.31	synth with cache (only 1: intro n; only 1: induction n; only 1: destruct m; only 1: trivial; only 1: easy; only 1: destruct m; only 1: easy; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj_0	40	40.079120	18421	2419
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.mul_succ_l	40	40.073172	20244	5760
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.nat_compare_le	40	40.087722	25847	7403
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.between_in_int	40	40.183621	65073	7422
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.sqrtrem_spec	40	23.693264	11091	1812	3.0.1.0.0.0.0.2.5.7.0.1.0.2.0.4	synth with cache (only 1: simpl; only 1: destruct n; only 1: simpl; only 1: intro H; only 1: intuition; only 1: simpl; only 1: now destruct 1 || intros _; only 1: generalize (Pos.sqrtrem_spec p); only 1: destruct 1; only 1: subst; only 1: simpl; only 1: now split; only 1: simpl; only 1: subst; only 1: now split; only 1: now destruct 1).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_antimono	40	3.166780	1536	420	1.1.0.1.0.0.1.1.1.0.0.0	synth with cache (only 1: intros Eqf Lef x y; only 1: destruct (max_spec x y) as [(H, E)| (H, E)]; only 1: rewrite E; only 1: destruct (min_spec (f x) (f y)) as [(H', E')| (H', E')]; only 1: assert (f y <= f x) by (apply Lef; order); only 1: order; only 1: auto; only 1: rewrite E; only 1: destruct (min_spec (f x) (f y)) as [(H', E')| (H', E')]; only 1: auto; only 1: assert (f x <= f y) by (apply Lef; order); only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.InitialExists.initial_ancestor	40	40.093303	27324	6664
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj	40	40.068257	18808	4366
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.subon_bij	40	2.555589	1	1	0	synth with cache (only 1: by move  =>subD [g' fK g'K]; exists g' => x; move /subD ; [ apply : fK  | apply : g'K  ]).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.exists_in_int	40	40.109226	36453	5262
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.gcd_nonneg	40	0.006625	4	1	3	synth with cache (only 1: apply le_0_l).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_mul_0	40	40.159106	6459	2042
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.sqrt_specif	40	40.460411	31771	2897
coq-tactician-stdlib.8.11.dev	Coq.Logic.ExtensionalityFacts.FunctExt_BijComp	40	40.369312	148944	13952
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_pos_pos	40	40.091267	12898	3609
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.singleton_spec	40	40.209917	77464	5074
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.log2_iter_spec	40	40.348757	15658	4733
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.odd_sub	40	40.209064	15896	4636
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.log2_spec	40	40.403506	18931	4646
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_opp_even	40	40.225725	16559	3312
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.plus_lt_compat_r	40	40.059851	20332	2539
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.div2_succ_double	40	0.210169	32	18	0.1.0.1.0.1	synth with cache (only 1: induction n; only 1: trivial; only 1: simpl mul; only 1: rewrite add_succ_r; only 1: simpl; only 1: now f_equal).
coq-tactician-stdlib.8.11.dev	Coq.Program.Wf.WfExtensionality.fix_sub_eq_ext	40	40.159472	56272	6862
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_compat	40	19.145660	8494	1563	2.1.3.8.7.0.0.0	synth with cache (only 1: apply proper_sym_impl_iff_2; only 1: eauto with ordered_type; only 1: eauto with ordered_type; only 1: repeat red; only 1: intros x y; only 1: unfold eqk, eqke; only 1: unfold eqke, ltk; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Structures.Equalities.BoolEqualityFacts.eqb_neq	40	40.094804	25379	4486
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_mono	40	40.302219	24770	5221
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_add_iff	40	40.223743	51517	5928
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_case_strong	40	30.355683	24389	5647	10.5.5.8	synth with cache (only 1: simpl_relation; only 1: destruct_max n; only 1: tauto; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj_iff	40	40.290693	25382	6230
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj'	40	40.122140	39451	4074
coq-tactician-stdlib.8.11.dev	Coq.Lists.Streams.Map.Exists_map	40	40.197614	70804	23245
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.eqb_eq	40	40.104681	21871	6915
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj_iff'	40	40.151200	20665	4645
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zle_lt_or_eq	40	40.104270	31401	3374
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_rev	40	40.070134	20674	4470
coq-tactician-stdlib.8.11.dev	Coq.Structures.Equalities.BoolEqualityFacts.eqb_refl	40	1.325226	708	107	2.19	synth with cache (only 1: apply eqb_eq; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.are_bits	40	40.163039	57925	5028
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListOps.rev_nth	40	40.142387	27915	5320
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.OMEGA5	40	3.352657	2921	273	2.0.13.22	synth with cache (only 1: intros H; only 1: subst; only 1: symmetry; only 1: now subst).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Div2.double_S	40	40.108682	41227	3157
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersEx.PairOrderedType.lt_strorder	40	40.253262	40675	2653
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zlt_succ_pred	40	0.006687	1	1	0	synth with cache (only 1: apply Z.lt_succ_lt_pred).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.PredicateSimplification.mem_mem	40	40.133790	14348	287
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_div2	40	1.506046	390	73	0.0.4.0.0.16	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: now destruct p; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_quot2	40	0.037413	13	6	2.2.0.0	synth with cache (only 1: destruct n as [| p| p]; only 1: trivial; only 1: now destruct p; only 1: now destruct p).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_lt_lin	40	40.412831	47650	4089
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_nonneg	40	40.217878	9238	2260
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_spec	40	40.037565	9380	2209
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_le_lin	40	40.287838	25083	5322
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.KeyedQualifier.keyed_qualifier_suproof	40	40.073666	2899	91
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.KeyPred.keyed_predE	40	40.161830	2761	102
coq-tactician-stdlib.8.11.dev	Coq.Sets.Multiset.multiset_defs.treesort_twist1	40	40.114539	18875	7058
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.OMEGA3	40	40.057901	14730	1387
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.bezout_1_gcd	40	40.249308	13744	3068
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.nat_compare_ge	40	40.086567	23558	8369
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_antisym_nonneg	40	40.252745	25210	5113
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_add_l	40	6.456550	1151	442	0.0.11.0	synth with cache (only 1: intros; only 1: rewrite (add_comm _ c), (add_comm a); only 1: apply Private_NZDiv.div_add; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_pos	40	40.444288	2527	975
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.compare	40	40.094850	27743	5947
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_0	40	40.241920	53561	1306
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.all_tag_cond_dep	40	40.015173	890	70
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign	40	40.428996	21961	4406
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.eq_dec	40	0.020850	3	2	0.1	synth with cache (only 1: unfold eq; only 1: decide equality).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Uniset.defs.uniset_twist2	40	40.132108	40467	10277
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_cancel_r	40	6.548000	2589	949	4.2.1.4.1	synth with cache (only 1: intros; only 1: apply div_mul_cancel_r; only 1: auto'; only 1: auto'; only 1: auto').
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Sort_NoDup	40	40.184588	29207	7452
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_exists_pred_strong	40	40.419074	49598	6520
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.all_tag_cond	40	40.018772	371	38
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.square_xI	40	40.061078	13274	3976
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_cancel_l	40	0.411655	83	40	0.0.0.3.0	synth with cache (only 1: intros; only 1: rewrite !(mul_comm c); only 1: apply Private_NZDiv.div_mul_cancel_r; only 1: order; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.ltb_lt	40	40.090575	27048	6554
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.InitialExists.SuccPred.succ_pred_approx	40	40.301916	33809	3159
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.leb_le	40	40.087908	26711	7191
coq-tactician-stdlib.8.11.dev	Coq.Sets.Uniset.defs.treesort_twist1	40	40.131034	28439	10040
coq-tactician-stdlib.8.11.dev	Coq.Arith.Wf_nat.lt_wf_rec1	40	40.248118	101958	4568
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_r	40	40.318370	25568	3497
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_exists_pred	40	40.473571	51956	6336
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_pos_nonneg	40	40.237083	6195	1978
coq-tactician-stdlib.8.11.dev	Coq.Arith.Wf_nat.lt_wf_double_ind	40	0.027824	7	7	0.0.0.0.0.0.0	synth with cache (only 1: intros P Hrec p; only 1: pattern p; only 1: apply lt_wf_rec; only 1: intros n H q; only 1: pattern q; only 1: apply lt_wf_rec; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.all_sig_cond_dep	40	40.019539	633	51
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersTac.OrderFacts.eq_neq	40	5.995884	530	140	0.1.2.4.2.0	synth with cache (only 1: intros x y z; only 1: intro H; only 1: red; only 1: intros h1 h2; only 1: apply h1; only 1: intuition auto; subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_str_pos	40	40.173662	6256	1804
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.plus_le_compat	40	40.070734	25856	2736
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.plus_lt_le_compat	40	0.006082	2	1	1	synth with cache (only 1: apply Nat.add_le_mono).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Wf_nat.lt_wf_double_rec	40	40.139356	54732	3388
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_pos_l	40	40.293893	8471	3271
coq-tactician-stdlib.8.11.dev	Coq.Arith.Euclid.modulo	40	40.056766	15281	5057
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersTac.OrderFacts.neq_eq	40	0.340228	24	7	3	synth with cache (only 1: eauto using eq_trans, eq_sym).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalUniqueChoice.not_not_classic_set	40	40.111548	33022	9993
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_succ_pred	40	40.077841	23617	5983
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_pred_l	40	40.317154	40769	5034
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.compare_eq_iff	40	40.084365	22124	8581
coq-tactician-stdlib.8.11.dev	Coq.Arith.Mult.mult_le_compat	40	40.148935	61370	4766
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.opp_min_distr	40	40.354512	14428	2294
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.leb_spec0	40	40.162641	13060	2340
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.iter_swap_gen	40	40.333070	44452	6114
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.odd_2	40	1.196371	1683	51
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.compare_sub	40	40.117835	36651	7305
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Rtauto.with_env.compose0	40	40.203047	79235	4995
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.iter_succ	40	40.276615	36312	5186
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Smorph_opp	40	40.256246	12886	1614
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_pos_r	40	40.227346	9084	3384
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.iter_invariant	40	40.091982	25693	3431
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_0_l	40	40.198392	26808	7148
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalFacts.unorm_nonnil	40	2.014684	874	277	0.0.0.0.0.0.0.0.0.0.0.7.5	synth with cache (only 1: unfold unorm, lnorm; only 1: destruct nzhead; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.iter_add	40	40.285558	42367	7575
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.rs_rs'	40	40.439334	16923	3237
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.lt_succ_r	40	40.115942	37862	5145
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.pow_1_r	40	40.098452	27513	3766
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul	40	40.092655	14199	6028
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorSpec.shiftin_last	40	40.149054	50013	7129
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorEq.BEQ.eq_dec	40	40.139392	50977	4625
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign_mul	40	40.298112	19421	4459
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.max_l	40	40.126165	43517	4829
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorEq.CAST.cast	40	0.028474	22	7	0.4.0	synth with cache (only 1: intros x y z; only 1: simple destruct 1; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Uniset.defs.treesort_twist2	40	2.412235	1376	596	0.1.0.2.2.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply seq_trans with (union x (union (union y z) t)); only 1: apply seq_right; only 1: apply seq_left; only 1: trivial; only 1: apply seq_trans with (union (union x (union y z)) t); only 1: apply seq_sym; only 1: apply union_ass; only 1: apply seq_left; only 1: apply union_perm_left).
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorSpec.shiftrepeat_last	40	0.122263	46	17	0.0.4	synth with cache (only 1: refine (@rectS _ _ _ _); only 1: now simpl; only 1: now simpl).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Hurkens.NoRetractFromSmallPropositionToProp.MParadox.mparadox	40	40.264972	98560	10487
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.MapsTo_compat	40	40.130197	10083	1753
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Rtauto.with_env.compose1	40	0.924741	755	171	0.2.1.6.3.0.0	synth with cache (only 1: induction F; only 1: intros; only 1: red; only 1: auto; only 1: intros A H; only 1: intros; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.min_l	40	40.113368	35508	6135
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.sub_in21	40	1.217343	1	1	0	synth with cache (only 1: by move  =>/= sub1 sub; apply : sub_in111 ).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_compat_l	40	40.356351	18798	3325
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.Inf_eq	40	5.532765	4153	647	5.1.18.0	synth with cache (only 1: intros x y z; only 1: destruct 2; only 1: intuition; only 1: eauto with ordered_type).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.add_not_eq	40	40.090604	26599	5528
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.MapsTo_eq	40	0.131159	71	14	11	synth with cache (only 1: now intros <-).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zlt_0_le_0_pred	40	4.415899	3971	523	1.0.13.2.1.13	synth with cache (only 1: destruct n; only 1: intro; only 1: easy; only 1: now destruct p; only 1: intros H; only 1: destr_eq H).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_mul	40	40.152649	11548	7188
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.In_eq	40	0.021424	1	1	0	synth with cache (only 1: now intros <-).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.pred_inj	40	40.193154	29502	7019
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.all_sig_cond	40	40.037512	510	57
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.peano_ind	40	40.219613	84421	7686
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory.mono2W	40	0.935854	1	1	0	synth with cache (only 1: by move  =>hf x ax; rewrite hf).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_neg_l	40	40.141298	10894	3962
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_same	40	40.093166	23989	7011
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.double_spec	40	0.006430	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_pos_nonneg	40	40.161711	7650	2394
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_unique_exact	40	40.347306	40927	3428
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_same	40	40.406330	37986	5164
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.succ_double_spec	40	0.009307	1	1	0	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_1_r	40	1.030269	388	153	0.1.0.0.0.0.1.3	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: left; only 1: split; only 1: order || apply lt_0_1; only 1: order || apply lt_0_1; only 1: now nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.pred_double_spec	40	0.008341	1	1	0	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.bi_induction	40	40.131433	42688	8682
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.sub_in12	40	2.498477	6	2	1.3	synth with cache (only 1: intro H; only 1: by move  =>/= sub_dd'; apply : sub_in111 ).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_1_l	40	0.016747	6	5	0.1.0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: split; only 1: apply le_0_1; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_1_l	40	0.016689	6	5	0.1.0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: split; only 1: apply le_0_1; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.div2_double	40	7.828613	2268	599	0.0.12.0.6.6	synth with cache (only 1: simpl; only 1: nzinduct n; only 1: auto; only 1: destr_bool; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_mul_below	40	40.229741	17801	2414
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.leb_iff_conv	40	8.443289	5018	1436	0.0.0.0.0.5.0.0.3.0.1.0.1	synth with cache (only 1: revert m; only 1: induction n; only 1: intro n; only 1: simpl; only 1: now split; only 1: destruct m; only 1: simpl; only 1: intuition; only 1: simpl; only 1: rewrite IHn; only 1: split; only 1: apply Peano.le_n_S; only 1: apply Peano.le_S_n).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.leb_complete	40	0.012447	9	2	1	synth with cache (only 1: apply Nat.leb_le).
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.In_inv	40	0.818360	151	34	2.9	synth with cache (only 1: rewrite !In_alt2, Exists_cons; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_distr	40	40.444059	15720	2694
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.double_twice	40	0.022095	2	2	0.0	synth with cache (only 1: intro n; only 1: now nzsimpl').
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_or_opp_abs	40	40.159205	31718	3452
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.testbit_0_l	40	0.018515	4	3	0.1.0	synth with cache (only 1: nzinduct n; only 1: now constructor; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_min	40	11.406589	4653	1231	1.0.0.1.4.0.0.1.0.0.0.0.0.4.12	synth with cache (only 1: unfold Z.min, N.min; only 1: destruct n, m; only 1: simpl; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: rewrite Pos2Z.inj_compare; only 1: now case Z.compare_spec; only 1: easy; only 1: easy; only 1: now case Z.compare_spec; only 1: trivial; only 1: now case Z.compare_spec; only 1: now case Z.compare_spec).
coq-tactician-stdlib.8.11.dev	Coq.Logic.WeakFan.WeakFanTheorem	40	40.262526	93392	5708
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_mono_l	40	40.284975	12298	2201
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Heap.defs.invert_heap	40	11.136890	8408	614	0.61	synth with cache (only 1: inversion 1; only 1: auto with datatypes).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory.homoLR	40	1.293026	1	1	0	synth with cache (only 1: by move  =>Hf x y /Hf; rewrite fgK).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Multiset.multiset_defs.meq_singleton	40	40.104040	29292	3233
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Rtauto.with_env.compose2	40	1.762049	1095	273	5.7.0.0.1.1.0	synth with cache (only 1: induction F; only 1: intros x y z; only 1: intros H; only 1: trivial; only 1: intros A B H; only 1: intros R L n; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_rev	40	27.852359	38545	3748	1.1.3.1.42.0.5	synth with cache (only 1: induction l; only 1: auto; only 1: destruct l; only 1: auto; only 1: simpl; only 1: rewrite <- IHl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_mono_l	40	40.334840	11062	2775
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_0_l	40	40.481056	25832	6464
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.plus_lt_compat	40	4.262201	3222	279	4.11.20	synth with cache (only 1: intro H; only 1: apply Nat.add_le_lt_mono; only 1: Nat.order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_0_l	40	40.354839	20147	5689
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zgt_0_le_0_pred	40	1.801054	1561	222	0.26	synth with cache (only 1: Z.swap_greater; only 1: apply Z.lt_le_pred).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zle_neg_pos	40	0.018393	5	2	3.0	synth with cache (only 1: intros a b; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_le	40	0.015125	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: apply mod_le; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zgt_pos_0	40	0.010750	2	2	0.0	synth with cache (only 1: intros a; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_small_iff	40	40.489711	15834	4337
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zle_0_pos	40	0.017446	3	2	1.0	synth with cache (only 1: intros n; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListOps.rev_append_rev	40	40.170979	35750	8571
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zlt_neg_0	40	0.006726	1	1	0	synth with cache (only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_str_pos	40	0.067309	19	12	0.2.0.0	synth with cache (only 1: intros a b (Hb, Hab); only 1: assert (LE : 0 <= a / b) by (apply Private_NZDiv.div_pos; order); only 1: apply div_str_pos; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Vectors.Fin.to_nat_of_nat	40	40.196973	79119	3880
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Sorted.defs.StronglySorted_rect	40	40.060710	16443	4313
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssreflect.nary_congruence	40	40.192024	62450	8534
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Sorted.defs.StronglySorted_rec	40	0.014419	3	3	0.0.0	synth with cache (only 1: induction l; only 1: firstorder using StronglySorted_inv; only 1: firstorder using StronglySorted_inv).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.pow_succ_r	40	40.066131	17007	4585
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_le_lin	40	40.269902	12430	2672
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_neg_r	40	38.052811	9787	3507	0.2.1.1.0.7.0.1	synth with cache (only 1: intros n m p; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: intro H; only 1: do 2 rewrite lt_eq_cases; only 1: rewrite (mul_lt_mono_neg_l p n m); only 1: rewrite (mul_cancel_l m n p) by (intro H1; rewrite H1 in H; false_hyp H lt_irrefl); only 1: now setoid_replace (n == m) with (m == n) by split; now intro; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.RelationProperties.symmetric_from_pre	40	40.021767	1666	128
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_mul_above	40	40.301833	11409	2928
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_le_pred	40	4.773000	2239	662	0.1.12.2	synth with cache (only 1: intros z n H; only 1: destruct (lt_exists_pred _ _ H) as (n', (EQ, LE)); only 1: rewrite EQ; only 1: now rewrite pred_succ).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_le	40	13.516122	12319	1721	1.7.23	synth with cache (only 1: unfold N.le, N.ge; only 1: intros Hn Hm; only 1: now rewrite N2Z.inj_compare).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_div_gcd	40	40.044915	10640	4201
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.RelationProperties.PER.sym_left_transitive	40	40.099710	1394	84
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.leb_correct_conv	40	2.163545	2013	273	0.23.7	synth with cache (only 1: intro H; only 1: rewrite Nat.leb_nle; only 1: Nat.order).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.leb_complete_conv	40	0.049262	39	6	8	synth with cache (only 1: apply leb_iff_conv).
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorSpec.shiftrepeat_nth	40	40.052044	16647	2438
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.square_spec	40	40.099500	14748	4599
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_shiftl	40	40.060592	17488	3914
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_mask_succ_r	40	40.146678	12643	4590
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_mul_below	40	40.328671	7799	2153
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListOps.rev_alt	40	40.129086	41238	6576
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_rem	40	40.110424	36327	3911
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_quot_gcd	40	40.055310	14637	4761
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NAdd.NAddProp.succ_add_discr	40	40.329486	30123	6073
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_spec	40	40.076418	22796	3579
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_distr_r	40	6.712205	1665	620	0.0.0.0.0.0.1.0.0.1.2.0	synth with cache (only 1: intros; only 1: rewrite !(mul_comm _ c); only 1: rewrite <- (add_cancel_l _ _ (c * b * (c * a / (c * b)))); only 1: rewrite <- div_mod; only 1: rewrite Private_NZDiv.div_mul_cancel_l; only 1: rewrite <- mul_assoc, <- mul_add_distr_l, mul_cancel_l by order; only 1: apply div_mod; only 1: auto'; only 1: auto'; only 1: auto'; only 1: rewrite <- neq_mul_0; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_shiftr	40	40.095749	14001	2928
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_base	40	25.443902	8515	735	17.17.5	synth with cache (only 1: unfold ltb; only 1: intros a0; only 1: now rewrite recursion_0).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_pos	40	1.804728	273	121	0.0.0.0.0.0.0.1.0.0	synth with cache (only 1: intros; only 1: rewrite (mul_le_mono_pos_l _ _ b); only 1: nzsimpl; only 1: rewrite (add_le_mono_r _ _ (a mod b)); only 1: rewrite <- div_mod by order; only 1: nzsimpl; only 1: apply Private_NZDiv.mod_le; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorSpec.const_nth	40	4.395537	2816	494	2.0.11.25	synth with cache (only 1: generalize dependent n; only 1: induction p; only 1: now simpl; only 1: now simpl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_le_pred	40	40.511126	20616	6763
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_mask_carry_spec	40	40.059396	13365	5270
coq-tactician-stdlib.8.11.dev	Coq.Logic.Eqdep_dec.EqdepDec.inj_right_pair_on	40	40.500955	208063	7444
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Setminus_Union_l	40	40.227685	50422	6949
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_testbit	40	1.796164	675	318	1.0.0.1.0.0.0.0.0.0.0.1.0	synth with cache (only 1: intro Hn; only 1: destruct a as [| a], n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now destruct a; only 1: simpl; only 1: trivial; only 1: now destruct Hn).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.RelationProperties.PER.sym_right_transitive	40	40.151986	8473	530
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.RelationProperties.equivalence_relP	40	40.037787	1074	75
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_mod	40	0.512541	239	86	5.0.0.1.0	synth with cache (only 1: intros; only 1: destruct (mod_bound_pos a n); only 1: auto'; only 1: auto'; only 1: now rewrite Private_NZDiv.mod_small_iff).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_r	40	40.214140	8639	2067
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.add_soustr_xy	40	40.230088	20851	4610
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Sorted.defs.StronglySorted_Sorted	40	1.781327	1041	374	0.0.1.0.0.1.11	synth with cache (only 1: intros N; only 1: induction 1 as [| a l [| ]]; only 1: auto using Sorted, LocallySorted, HdRel; only 1: auto using Sorted, LocallySorted, HdRel; only 1: inversion H1; only 1: subst; only 1: auto using Sorted, LocallySorted, HdRel).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_mask_spec	40	40.088849	24245	7211
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.abs_or_pol	40	40.145469	25549	5853
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.abs_N_spec	40	0.032274	7	7	0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_app_comm	40	40.200447	36217	5353
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.odd_0	40	40.298638	78219	3618
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_mul_above	40	40.370985	5740	1695
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.id_abs	40	0.086617	20	9	4	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.nat_compare_equiv	40	40.088822	26245	6756
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.id	40	0.005878	1	1	0	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.abs_N_nonneg	40	0.171225	34	12	1.0.0.4	synth with cache (only 1: destruct n; only 1: trivial; only 1: trivial; only 1: now destruct 1 || trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.inj_0	40	0.006598	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_wd	40	0.231171	42	16	0.1.0	synth with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.inj_pos	40	0.005608	2	1	1	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.inj_neg	40	0.005315	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.inj_opp	40	0.030785	7	7	0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zle_0_nat	40	2.836461	3723	387	10.0.4.13.0.0	synth with cache (only 1: intros; only 1: induction n; only 1: simpl; only 1: intuition; only 1: simpl; only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_wd	40	0.054540	4	3	0.1.0	synth with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_mask_nul_iff	40	40.080036	17589	7468
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListOps.Reverse_Induction.rev_ind	40	40.182664	67111	5651
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique_exact	40	3.726719	1653	479	0.1.1.1.0.2.1.1.1.2	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_unique with 0; only 1: destruct (lt_ge_cases 0 b); only 1: left; only 1: now try split; only 1: right; only 1: intuition; only 1: order; only 1: nzsimpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_wd	40	0.062047	3	3	0.0.0	synth with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Rtauto.with_env.compose3	40	3.532271	2298	479	0.0.0.12.1.2.1.0	synth with cache (only 1: induction F; only 1: intros A B C H; only 1: trivial; only 1: intros A B C H; only 1: intros x; only 1: simpl; only 1: apply IHF; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_shiftl_l	40	40.084963	14673	2214
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_sub_distr	40	40.242995	8060	1870
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.leb_spec	40	40.374884	8821	1295
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.eq_opp_r	40	0.039268	18	6	1.0	synth with cache (only 1: intros n m; only 1: now rewrite <- (opp_inj_wd (- n) m), opp_involutive).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_le_lin	40	40.211429	23201	2761
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_shiftl_r	40	40.067064	14118	2263
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_max_distr_l	40	40.422877	2617	388
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.PairInduction.pair_induction	40	40.225954	31211	8694
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListOps.concat_app	40	40.211614	65972	4518
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.In_inv_2	40	4.477064	2550	384	0.5.22	synth with cache (only 1: inversion 1; only 1: firstorder; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.rev_trans	40	40.181227	1389	89
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.In_compat	40	40.089826	10430	1713
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_eq_nz	40	40.327050	9557	3820
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_mask_add	40	40.072393	18635	6098
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.inj_succ	40	0.747631	286	117	0.0.1.0.0.3.1	synth with cache (only 1: intros; only 1: destruct n as [| p| p]; only 1: trivial; only 1: simpl; only 1: now rewrite Pos.add_1_r; only 1: simpl; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_1_l	40	40.053589	8979	1997
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Setminus_Union_r	40	40.181424	36655	13032
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssreflect.ssr_congr_arrow	40	2.896358	357	56	1.9.3	synth with cache (only 1: intro H; only 1: destruct H; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_distr_l	40	8.548454	1523	621	0.1.0.0.0.0.2.0.0.1.0	synth with cache (only 1: intros; only 1: rewrite <- (add_cancel_l _ _ (c * b * (c * a / (c * b)))); only 1: rewrite <- div_mod; only 1: rewrite Private_NZDiv.div_mul_cancel_l; only 1: rewrite <- mul_assoc, <- mul_add_distr_l, mul_cancel_l by order; only 1: apply div_mod; only 1: order; only 1: order; only 1: order; only 1: rewrite <- neq_mul_0; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_cont_Gt_Lt	40	1.288198	426	107	0.0.0.1.9.0	synth with cache (only 1: rewrite compare_cont_spec; only 1: unfold ltb, lt; only 1: destruct (p ?= q); only 1: now split; only 1: now split; only 1: now split).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_inj_wd	40	14.865498	6854	1591	6.0.0.0.0.12.0	synth with cache (only 1: intros; only 1: split; only 1: intro H; only 1: apply opp_wd in H; only 1: now rewrite 2!opp_involutive in H; only 1: intro H; only 1: now f_equiv).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.inj_add	40	0.813141	185	101	0.1.0.1.0.0.0.0.0.0	synth with cache (only 1: destruct n, m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: now destruct 1 || now destruct 2; only 1: trivial; only 1: now destruct 1 || now destruct 2; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_mask_add_diag_l	40	40.063354	14832	5227
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_idemp_r	40	0.035701	8	5	2.0.0.1.0	synth with cache (only 1: intros; only 1: rewrite !(mul_comm a); only 1: apply Private_NZDiv.mul_mod_idemp_l; only 1: intro H1; only 1: now apply H).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssreflect.ApplyIff.iffLR	40	0.039912	3	2	1.0	synth with cache (only 1: intros; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_inj	40	40.337302	17032	5722
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.DoubleInduction.double_induction	40	0.430907	173	64	0.0.3.0.0.1.0	synth with cache (only 1: intros H1 H2 H3; only 1: induct ltac:(n); only 1: auto; only 1: intros n IH; only 1: induct ltac:(m); only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssreflect.ApplyIff.iffRL	40	0.035324	1	1	0	synth with cache (only 1: by case : eqPQ ).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_xO_xO	40	0.010525	3	2	1.0	synth with cache (only 1: unfold compare; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_xI_xI	40	0.004525	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_0_r	40	40.182970	17616	3482
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_mask_pos_iff	40	40.082775	20512	7962
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssreflect.ApplyIff.iffLRn	40	0.057273	8	2	4.2	synth with cache (only 1: intro H; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NIso.Inverse.inverse_nat_iso	40	40.281503	43609	3819
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec0_succ	40	40.420119	12410	974
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_mono_r	40	40.305589	10764	3002
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_add_nodup	40	40.147707	49393	7311
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_max_distr_r	40	40.334157	7485	2830
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssreflect.ApplyIff.iffRLn	40	0.037815	1	1	0	synth with cache (only 1: by move  =>nP tQ; case : nP ; case : eqPQ tQ ).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.auxiliary.Zegal_left	40	21.645566	10757	1652	38	synth with cache (only 1: now rewrite <- Z.sub_move_0_r).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.auxiliary.Zle_left	40	0.031461	12	3	1	synth with cache (only 1: apply Z.le_0_sub).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.auxiliary.Zle_left_rev	40	0.009103	2	1	1	synth with cache (only 1: apply Z.le_0_sub).
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Surjective_list_carac	40	40.406391	64040	5703
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout_pos_pos	40	40.258887	27543	4449
coq-tactician-stdlib.8.11.dev	Coq.ZArith.auxiliary.Zlt_left_rev	40	0.014604	9	2	3	synth with cache (only 1: apply Z.lt_0_sub).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.rs'_rs''	40	40.511180	44898	5270
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_distr	40	40.374514	21200	7647
coq-tactician-stdlib.8.11.dev	Coq.ZArith.auxiliary.Zlt_left_lt	40	0.096517	51	6	9	synth with cache (only 1: apply Z.lt_0_sub).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_assoc	40	40.100068	3312	1282
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_0_r	40	40.218207	14793	3834
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.pow_succ_r	40	40.155205	3234	1269
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Setminus_Included_empty	40	1.863598	1460	369	1.0.0.3.0.5.0.0.0	synth with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x H1; only 1: unfold In in *; only 1: inversion_clear H1; only 1: exfalso; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod	40	0.960117	278	86	1.2.0.2.1.0	synth with cache (only 1: intros; only 1: rewrite Private_NZDiv.mul_mod_idemp_l, Private_NZDiv.mul_mod_idemp_r; only 1: reflexivity; only 1: intro H1; only 1: now apply H; only 1: auto').
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_div	40	40.453410	30145	5100
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_1_l	40	0.061676	8	5	2.0.0.1.0	synth with cache (only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_add_cancel_r	40	40.259590	19318	4341
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_modular	40	40.259135	18690	4331
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_spec0	40	40.298326	17906	4122
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_cancel_r	40	10.331469	4069	1407	1.0.0.1.0.4.1.1	synth with cache (only 1: intros n m p; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: intro H; only 1: split; only 1: intros (q, Hq); only 1: exists q; only 1: now rewrite mul_shuffle3, mul_cancel_l in Hq; only 1: apply mul_divide_mono_l).
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.inj	40	40.082385	20076	6075
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_1_r	40	0.066713	8	5	2.0.0.1.0	synth with cache (only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_xI_xO	40	0.959292	618	197	0.3.8.2	synth with cache (only 1: unfold compare; only 1: simpl; only 1: rewrite compare_cont_spec; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.InitialDontExists.succ_onto_gives_succ_pred	40	40.450123	46588	5292
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_cont_Lt_not_Gt	40	1.421178	327	80	5.7.2	synth with cache (only 1: rewrite compare_cont_spec; only 1: unfold gt, le, compare; only 1: now destruct compare_cont; split; try apply comparison_eq_stable).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_opp_l	40	1.043388	125	59	2.5.0	synth with cache (only 1: intros n m; only 1: rewrite <- 2!add_opp_r; only 1: now rewrite add_comm).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.nlt_square_0	40	40.214561	23526	4308
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.inj_mul	40	1.552749	481	283	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n, m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_0_r	40	0.020771	3	3	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_l).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.inj_compare	40	0.026680	3	2	1.0	synth with cache (only 1: intros Hn Hm; only 1: now destruct n, m).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.inj_le	40	0.017307	3	3	0.0.0	synth with cache (only 1: intros Hn Hm; only 1: unfold Z.le, N.le; only 1: now rewrite Z2N.inj_compare).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_opp_r	40	0.190823	27	11	1.0.1	synth with cache (only 1: intros n m; only 1: rewrite <- add_opp_r; only 1: now rewrite opp_involutive).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.inj_lt	40	0.016760	3	3	0.0.0	synth with cache (only 1: intros Hn Hm; only 1: unfold Z.lt, N.lt; only 1: now rewrite Z2N.inj_compare).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_sub_swap	40	0.101860	15	6	0.0.4.0	synth with cache (only 1: intros n m p; only 1: rewrite <- 2!add_opp_r; only 1: rewrite <- 2!add_assoc, add_cancel_l; only 1: apply add_comm).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Minus.lt_O_minus_lt	40	40.146166	53172	5940
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_add_distr	40	40.354163	11299	2776
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_split	40	40.285552	34325	7181
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Bool.forallb_app	40	0.576005	349	128	0.0.1.0.1.0.0.0.0.0.0	synth with cache (only 1: induction l1; only 1: intros l2; only 1: simpl; only 1: solve [ auto ]; only 1: intros l2; only 1: simpl; only 1: case (f a); only 1: simpl; only 1: solve [ auto ]; only 1: simpl; only 1: solve [ auto ]).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_mul_pow2	40	40.543893	10715	2644
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_eq_0_iff	40	40.153578	25302	4257
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_opp_l	40	40.260978	13877	6371
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_xO_xI	40	1.446881	1109	262	2.7.6.3	synth with cache (only 1: unfold compare; only 1: simpl; only 1: rewrite compare_cont_spec; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_cont_refl	40	0.305776	167	71	0.0.1.0.1.0.7	synth with cache (only 1: induction p as [p IHp| p IHp| ]; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_eq_0_iff	40	40.163188	15245	3890
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.desc_prefix	40	40.269736	61494	7298
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.inj_compare	40	40.243253	15990	5711
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.xcnf_true_mk_arrow_l	40	40.229778	50065	3214
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_r	40	40.329290	21205	4800
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_double_head	40	0.041675	7	3	0.0.4	synth with cache (only 1: intros E; only 1: rewrite !InA_cons; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Surjective_carac	40	40.202951	24629	5207
coq-tactician-stdlib.8.11.dev	Coq.Logic.IndefiniteDescription.constructive_definite_description	40	40.334175	57493	5260
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_least	40	40.428793	23400	4157
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_pow	40	40.095831	31947	3718
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_permute_heads	40	0.341431	154	22	0.0.2.12	synth with cache (only 1: red; only 1: intros; only 1: rewrite !InA_cons; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_0_l	40	0.032414	7	3	3.1.0	synth with cache (only 1: intros; only 1: bitwise; only 1: now nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_eq_0	40	40.169188	24167	5088
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_0_r	40	0.019860	4	3	1.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_l).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Map.map_nth_error	40	40.156229	52411	7258
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.map_ext_in	40	36.347242	26473	2851	0.9.22.0.1.0.0.0.6	synth with cache (only 1: induction l; only 1: intros; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: f_equal; only 1: CRelationClasses.simpl_crelation; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARth_SRth	40	18.395484	30572	839	100	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Map.map_nth	40	40.434638	77478	6764
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_app_idem	40	0.282984	41	22	0.0.3	synth with cache (only 1: intro; only 1: rewrite InA_app_iff; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.BinList.MakeBinList.jump_add	40	40.076712	22775	3150
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_lt	40	40.327672	26478	5021
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.incl_st_add_soustr	40	40.143646	15015	6365
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListDec.Dec_in_Type.incl_dec	40	40.170652	56163	8744
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARmul_1_r	40	0.018416	1	1	0	synth with cache (only 1: mrewrite).
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.inj_lt	40	40.074629	17519	5082
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARmul_0_r	40	0.021746	2	1	1	synth with cache (only 1: mrewrite).
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.In_inv_3	40	4.329513	1972	292	1.0.20	synth with cache (only 1: inversion 1; only 1: firstorder; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_mask_add_diag_r	40	40.079130	21594	5599
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_1_r	40	40.247328	25592	5528
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.quot_rem	40	0.536595	132	82	0.0.1.0.3	synth with cache (only 1: intros _; only 1: rewrite mul_comm; only 1: generalize (quotrem_eq a b); only 1: unfold quot, rem; only 1: now destruct quotrem).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.Proof_irrelevance_CIC.ext_prop_dep_proof_irrel_cic	40	40.427167	107474	7626
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_inj_r	40	1.417264	731	237	1.3.0.1.1.1.2	synth with cache (only 1: intros; only 1: destruct (lt_trichotomy b c) as [LT| [EQ'| GT]]; only 1: assert (a ^ b < a ^ c) by (apply Private_NZPow.pow_lt_mono_r; try split; trivial); only 1: order; only 1: trivial; only 1: assert (a ^ c < a ^ b) by (apply Private_NZPow.pow_lt_mono_r; try split; trivial); only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Infinite_sets.Infinite_sets.approximants_grow'	40	40.227615	26342	11259
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Map.map_rev	40	40.140107	49163	5138
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_lt_pred	40	40.370308	16519	5934
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.homoLR_in	40	3.620750	9	2	0	synth with cache (only 1: by move  =>Hf x y hx hy /Hf; rewrite fgK_on //; apply).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.choose_spec1	40	29.301230	33668	3466	0.0.0.13.0.4.29	synth with cache (only 1: induction s as [| c l IHl y r IHr]; only 1: intuition_in; only 1: now auto; only 1: destruct l; only 1: inversion 1; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zeven_odd_bool	40	40.184516	83444	2684
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.sqrt_spec	40	40.269062	21951	3957
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_cons_app	40	40.300111	29958	4568
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Map.count_occ_map	40	40.182385	23105	2047
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul	40	40.247607	25528	4832
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Map.in_flat_map	40	40.092465	7287	1231
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_min_distr_r	40	4.352875	640	292	1.0.0.1.1.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_r; only 1: rewrite 2!min_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_r).
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.inj_le	40	40.101261	18132	6532
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_swap	40	40.064412	12581	3602
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_modular	40	40.304052	18079	4861
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.inj_pred	40	5.267013	1424	420	3.0.0.0.4.2.0	synth with cache (only 1: destruct n; only 1: easy; only 1: intros; only 1: now destruct Hn || now destruct Hm || clear; only 1: simpl; only 1: now destruct p; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.mem_spec	40	40.083338	26079	6042
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_max_distr_l	40	40.197603	7886	1132
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_max_distr_r	40	13.281819	4756	1359	4.0.0.2.4.0.0.3.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_r; only 1: now apply sub_le_mono_r; only 1: rewrite 2!max_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_r; only 1: now apply sub_le_mono_r).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_Add	40	40.069768	10923	972
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_double	40	40.606349	9058	1976
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_length'	40	1.213083	707	113	2.0.0.0.0.0.0.0.0.14	synth with cache (only 1: repeat red; only 1: intros l l' Hperm; only 1: induction Hperm; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: now transitivity (length l')).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Mergesort.Sort.Sorted_merge_list_to_stack	40	40.211849	83434	5810
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_remove_1	40	40.120362	37975	5702
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_ge	40	6.321984	2790	496	0.6.14	synth with cache (only 1: rewrite <- compare_le_iff; only 1: rewrite compare_gt_iff; only 1: now rewrite <- not_true_iff_false, ltb_lt).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.InjectionsTheory.inj_can_eq	40	40.010370	999	94
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Bool.partition_cons2	40	0.012715	2	2	0.0	synth with cache (only 1: simpl; only 1: now intros -> ->).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.Intersection_preserves_finite	40	40.167773	60637	8305
coq-tactician-stdlib.8.11.dev	Coq.Sets.Integers.Integers_sect.Integers_has_no_ub	40	40.064084	23318	2805
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeuclid.ZEuclid.mod_always_pos	40	40.103190	29695	3740
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_le	40	40.083875	21863	6848
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.filter	40	40.092709	25525	7282
coq-tactician-stdlib.8.11.dev	Coq.micromega.Refl.make_conj_rapp	40	40.207684	32469	4893
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.union_spec	40	40.268708	81600	5023
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersAlt.Backport_OT.compare	40	40.202214	78229	5914
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.le_plus_l	40	11.594922	16858	1423	1.4.0.3.7.0.5.9.0.73	synth with cache (only 1: revert m; only 1: Nat.induct ltac:(m); only 1: now Nat.nzsimpl'; only 1: induction n; only 1: intros m IH; only 1: simpl; only 1: apply le_0_n; only 1: intros m IH; only 1: Nat.nzsimpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_cons_proper	40	40.148181	8077	1463
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.remove_1	40	40.101242	29558	6204
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_cont_Lt_not_Lt	40	8.122630	4911	989	0.0.0.1.24.3	synth with cache (only 1: rewrite compare_cont_spec; only 1: unfold gt; only 1: destruct (p ?= q); only 1: easy'; only 1: easy'; only 1: easy').
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ext_in_map	40	40.149016	52735	6646
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.gcd_divide	40	40.612186	30052	5718
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.for_all	40	40.048693	12248	4571
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.inter_spec	40	40.371832	93200	5348
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.rbase	40	40.585073	13633	2003
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_trans	40	40.132933	8402	1346
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.diff_spec	40	40.242910	68198	4050
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.exists_	40	40.067245	15695	7685
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.add_mod_idemp_l	40	6.976532	1711	522	0.0.0.11.0	synth with cache (only 1: intros; only 1: apply add_mod_idemp_l; only 1: auto'; only 1: auto'; only 1: auto').
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.add_mod_idemp_r	40	0.031156	8	4	0.0.4.0	synth with cache (only 1: intros; only 1: rewrite !(add_comm a); only 1: apply Private_NZDiv.add_mod_idemp_l; only 1: auto').
coq-tactician-stdlib.8.11.dev	Coq.Sets.Image.Image.finite_image	40	40.332721	126235	7487
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_succ_r	40	40.134374	4430	951
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.succ_double_mul	40	40.248354	15375	3335
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersAlt.OT_from_Alt.eq_equiv	40	40.401771	155342	2396
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.remove_2	40	40.062615	7635	2488
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_lt_iff	40	0.008734	3	2	0.1	synth with cache (only 1: unfold lt; only 1: now split).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.map_ext_in_iff	40	40.146684	45012	6692
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_le_iff	40	0.010249	8	1	7	synth with cache (only 1: now split).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_sub	40	40.077471	24162	4333
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.gt_lt_iff	40	0.322962	110	37	5.2	synth with cache (only 1: unfold gt, le, compare; only 1: now rewrite <- compare_lt_iff, compare_antisym, CompOpp_iff).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Setminus_Disjoint_noop	40	40.211005	31232	9104
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.partition	40	40.105434	29831	9319
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.xcnf_true_mk_arrow_r	40	40.357022	41167	3086
coq-tactician-stdlib.8.11.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.cardinalO_empty	40	40.166450	32303	6995
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Bool.partition_inv_nil	40	1.871566	1111	338	0.0.0.0.1.8.0.1.0.5	synth with cache (only 1: induction l as [| a l' Hrec]; only 1: split; only 1: easy; only 1: easy; only 1: split; only 1: simpl; only 1: destruct (f a), (partition l') as (left, right); only 1: intros [=<- <-]; only 1: intros [=<- <-]; only 1: intros [=<- <-]).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.le_plus_r	40	1.688524	1861	129	0.7.0.1.1.42	synth with cache (only 1: Nat.induct n; only 1: trivial; only 1: intro n; only 1: intro H; only 1: constructor; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.ropp_morph_Proper	40	34.513263	65879	2044	106.3	synth with cache (only 1: intros x y H; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.remove_3	40	40.090907	4389	2531
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_mask_neg_iff	40	40.142092	23367	7721
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_opp_r	40	40.070100	18723	4057
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_cons_app	40	40.085856	27273	2237
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zeven_pred	40	5.059662	2540	903	0.0.0.0.0.0.0.5.9.1	synth with cache (only 1: boolify_even_odd; only 1: intros EQ; only 1: destruct n as [| [| | ]| [| | ]]; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zge_cases	40	40.136652	49657	3916
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_spec	40	40.407847	12474	1971
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.double_inj	40	40.180296	27336	3917
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_mul	40	40.042062	7167	1003
coq-tactician-stdlib.8.11.dev	Coq.Logic.SetoidChoice.setoid_choice	40	40.056214	14179	3089
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_compat'	40	40.056283	16848	3327
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Smorph_sub	40	40.413578	15891	1455
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.lt_gt	40	0.006282	1	1	0	synth with cache (only 1: apply gt_lt_iff).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.gt_lt	40	2.102877	1637	381	16.4	synth with cache (only 1: unfold lt, gt; only 1: now rewrite compare_antisym, CompOpp_iff).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.leb_nle	40	40.173644	18832	6003
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.ge_le_iff	40	0.174172	44	10	5.2	synth with cache (only 1: unfold ge, lt, compare; only 1: now rewrite <- compare_le_iff, compare_antisym, CompOpp_iff).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.le_ge	40	0.007042	1	1	0	synth with cache (only 1: apply ge_le_iff).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.fold_left_length	40	40.156542	36558	5947
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_remove_3	40	10.574165	7573	2171	0.0.2.6.0.0.1.0.0.0.0.0.0.0.0	synth with cache (only 1: induction l as [| x l IH]; only 1: intro ND; only 1: simpl; only 1: tauto; only 1: intro ND; only 1: simpl; only 1: inversion_clear ND; only 1: destruct (Aeq_dec b x) as [<-| Hbx]; only 1: congruence; only 1: left; only 1: assumption; only 1: destruct (Aeq_dec b x) as [<-| Hbx]; only 1: congruence; only 1: simpl; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.succ_double_inj	40	40.334460	39754	5349
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.succ_double_lt	40	40.165933	20341	2769
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_app_proper	40	40.243810	10145	2265
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.ge_le	40	0.604547	341	102	2.11	synth with cache (only 1: unfold le, ge; only 1: now rewrite compare_antisym, CompOpp_iff).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_disassoc	40	40.421931	18065	2910
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.pred_lt_mono	40	8.132954	1750	887	1.0.2.0.0.0.3	synth with cache (only 1: symmetry; only 1: rewrite <- le_succ_l; only 1: rewrite <- (succ_pred m); only 1: rewrite pred_succ; only 1: rewrite <- (succ_pred n)  at 2; only 1: symmetry; only 1: apply lt_succ_r).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_wd	40	40.066243	18561	2581
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Filtering.filter_ext_in	40	1.074924	706	250	0.1.3.2.0.0.0.0.0	synth with cache (only 1: induction l as [| a l IHl]; only 1: simpl; only 1: firstorder; only 1: simpl; only 1: intros; only 1: rewrite IHl; only 1: rewrite H by intuition; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_nlt	40	19.455416	18679	2170	0.0.44	synth with cache (only 1: case ltb_spec0; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_lt	40	13.927631	8689	1754	0.0.0.3.0.0.0.2.1.9	synth with cache (only 1: intro n; only 1: cases ltac:(m); only 1: rewrite pred_0; only 1: intro H; only 1: false_hyp H nlt_0_r; only 1: intros m IH; only 1: rewrite pred_succ in IH; only 1: rewrite lt_succ_r; only 1: apply lt_eq_cases; only 1: now left).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.log2_spec	40	40.493263	25336	5544
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.add_mod	40	4.160304	919	321	1.2.0.2.3.0	synth with cache (only 1: intros; only 1: rewrite Private_NZDiv.add_mod_idemp_l, Private_NZDiv.add_mod_idemp_r; only 1: reflexivity; only 1: intro H1; only 1: now apply H; only 1: auto').
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssreflect.abstract_context	40	11.742391	14440	377
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.is_empty_spec	40	40.086484	25068	5994
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxDecProperties.min_dec	40	5.699144	5293	1038	0.0.0.0.0.0.0.0.1.19	synth with cache (only 1: apply min_case_strong; only 1: intros x y H [E| E]; only 1: left; only 1: rewrite <- H; only 1: auto; only 1: right; only 1: rewrite <- H; only 1: auto; only 1: auto with relations; only 1: auto with relations).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_eq_cases	40	40.074325	20840	4379
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_equivlistA	40	40.061626	13437	4066
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalFacts.unorm_0	40	40.084372	22216	5977
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.max_elt_spec1	40	40.076230	21033	2024
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.remove_3	40	40.103306	2816	1026
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.choose_aux	40	40.045842	10783	4920
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.leb_gt	40	40.185854	21682	3119
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.max_elt_spec2	40	40.047712	12029	3352
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.N2Nat.inj_sub	40	40.424858	40631	4080
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalFacts.unorm_invol	40	0.021663	4	2	1.1	synth with cache (only 1: unfold unorm, lnorm; only 1: now induction d).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.remove_NoDup	40	40.072691	19312	5649
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_small_iff	40	40.395600	18328	5081
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zabs.Zabs_spec	40	40.118716	41167	6052
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.remove_Inf	40	40.037590	8098	2661
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.A'A_right	40	40.568860	75194	5719
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.can_in_inj	40	40.157594	558	61
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_compat_l	40	40.288070	16610	4527
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_mul	40	18.529450	7017	3069	0.0.0.0.0.0.0.0.0.0.0.5.3.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: destruct (lt_ge_cases 0 b); only 1: left; only 1: split; only 1: order; only 1: order; only 1: right; only 1: split; only 1: order; only 1: order; only 1: nzsimpl; only 1: apply mul_comm).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.log2_nonpos	40	1.366661	866	118	0.14.0.1.0	synth with cache (only 1: intro H; only 1: le_elim H; only 1: false_hyp ltac:(H) nlt_0_r; only 1: rewrite H; only 1: now apply pred_0).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalFacts.norm_invol	40	0.408659	709	75	1.1.24	synth with cache (only 1: induction d; only 1: now induction d; only 1: now induction d).
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Store.get_Full_Eq	40	40.164623	41518	8278
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.canLR_in	40	40.038843	519	46
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.fold_left_rev_right	40	40.176495	23914	3923
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_mul_r	40	0.388723	79	34	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply add_cancel_l with (b * c * (a / (b * c))); only 1: rewrite <- div_mod by (apply neq_mul_0; split; order); only 1: rewrite <- Private_NZDiv.div_div by trivial; only 1: rewrite add_assoc, add_shuffle0, <- mul_assoc, <- mul_add_distr_l; only 1: rewrite <- div_mod by order; only 1: apply div_mod; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_nonneg	40	40.230538	11201	2359
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_2	40	40.086318	28821	2851
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_0_l	40	40.306465	33450	4903
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.elements_3w	40	40.117939	38054	5614
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.In_alt	40	40.154385	51034	5635
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.pow_succ_r	40	40.294725	12911	2967
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.square_spec	40	40.344102	13404	1849
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.canRL_in	40	40.061477	734	59
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.Proof_irrelevance_EM_CC.p2p1	40	40.232040	86579	11276
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeuclid.ZEuclid.mod_bound_pos	40	8.133780	3613	1265	0.0.9.3.0.0.0	synth with cache (only 1: intros Ha Hb; only 1: destruct b as [| b| b]; only 1: now discriminate Hb || clear Hb; only 1: now destruct Ha || clear Ha; only 1: apply Z.mod_pos_bound; only 1: trivial; only 1: now discriminate Hb || clear Hb).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.fold_symmetric	40	40.205451	47249	5907
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.size_log2	40	40.228390	9166	1599
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.equal_1	40	40.112497	19222	4647
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_nonpos	40	40.341225	18489	4304
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Bool.existsb_exists	40	40.107014	35158	5904
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.choose_spec2	40	40.086210	25930	4573
coq-tactician-stdlib.8.11.dev	Coq.Logic.HLevels.hset_hOneType	40	40.358685	148847	9373
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.Proof_irrelevance_EM_CC.p2p2	40	40.283064	97594	12606
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Store.get_push_Full	40	40.115056	33580	8115
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Filtering.filter_ext	40	0.015647	4	4	0.0.0.0	synth with cache (only 1: intros f g l H; only 1: rewrite filter_map; only 1: apply map_ext_in; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalChoice.singleton_choice	40	40.063965	23424	2782
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_succ_le	40	40.372692	20253	3145
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_mod	40	40.050223	12039	3847
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_min_distr_r	40	10.385383	4246	1030	0.0.0.8.0.0.0.7.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply sub_le_mono_r; only 1: rewrite 2!min_r; only 1: order; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply sub_le_mono_r).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Filtering.ext_in_filter	40	4.323121	1747	509	0.6.0.5	synth with cache (only 1: intro H; only 1: intros l1 l2; only 1: rewrite filter_map; only 1: apply ext_in_map).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_rem	40	40.050101	10627	3221
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Lexicographic_Product.Swap.swap_Acc	40	40.277296	109568	11498
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.equal_2	40	40.324339	11964	4093
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec_0	40	16.355108	1626	221	0.0.0.1.0.2.1.3.9.0	synth with cache (only 1: intros; only 1: rewrite !strong_rec_alt; only 1: f_equiv; only 1: unfold strong_rec0; only 1: rewrite recursion_succ; only 1: f_equiv; only 1: rewrite recursion_0; only 1: f_equiv'; only 1: f_equiv'; only 1: f_equiv').
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_le	40	2.862978	859	235	0.2.0.1.2.0.2.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: order; only 1: rewrite mul_assoc, (mul_comm b c), <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: auto'; only 1: apply Private_NZDiv.mul_div_le; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Classical_sets.Ensembles_classical.Strict_super_set_contains_new_element	40	40.117196	28406	4043
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zdivide_opp_r	40	40.083730	28183	3347
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zdivide_opp_r_rev	40	0.008340	1	1	0	synth with cache (only 1: apply Z.divide_opp_r).
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt_rtn1	40	40.262340	100400	13991
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.MoreInt.ltb_lt	40	40.194925	46718	3374
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.KeyOrderedType.Elt.Inf_lt	40	40.212609	21804	2222
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.choose_spec3	40	40.043862	6962	944
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.eqb_eq	40	40.094245	25989	8325
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcompare.Zcompare_plus_compat	40	40.125811	9999	4323
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_add	40	40.433385	20108	4155
coq-tactician-stdlib.8.11.dev	Coq.Sets.Classical_sets.Ensembles_classical.Subtract_intro	40	1.255238	354	123	3.2.5	synth with cache (only 1: intro X; only 1: red; only 1: auto  7 using Inhabited_Setminus with sets).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Classical_sets.Ensembles_classical.Subtract_inv	40	0.025324	30	8	0.0.3.1	synth with cache (only 1: unfold Subtract at 1; only 1: intros B C x H'; only 1: elim H'; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qminmax.Q.plus_max_distr_l	40	40.025156	5028	1392
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_pred_lt	40	40.233332	26851	5848
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zeven_odd_dec	40	40.206294	74852	4199
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_opp_r	40	40.062772	7332	2258
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.fold_1	40	40.199959	75121	6376
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_succ_lt_pred	40	0.259103	78	36	1.0.4	synth with cache (only 1: symmetry; only 1: rewrite <- le_succ_l; only 1: now rewrite lt_le_pred).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.rrmatch	40	40.198144	76923	4267
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zeven_div2	40	0.019888	2	2	0.0	synth with cache (only 1: intro H; only 1: now destruct n as [| [| | ]| [| | ]]).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_succ_le_pred	40	0.367486	82	46	0.0.1.0.2.0	synth with cache (only 1: intros n m; only 1: rewrite <- lt_pred_le; only 1: rewrite <- (succ_pred m); only 1: rewrite pred_succ; only 1: rewrite pred_succ; only 1: apply lt_succ_r).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.inW_bij	40	40.081042	144	13
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_diag	40	17.090037	5088	2687	0.1.2.0.0.1.7	synth with cache (only 1: intros EQ; only 1: rewrite <- gcd_abs_r; only 1: apply gcd_unique; only 1: apply abs_nonneg; only 1: now apply divide_abs_l; only 1: auto with relations; only 1: trivial using divide_1_l, le_0_1).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.union_ok	40	40.068928	8537	1572
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.size_gt	40	40.080824	13365	2386
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.union_spec	40	40.033434	8162	2308
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.rrmatch'	40	0.595243	264	116	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct t as [| [| ] l x r]; only 1: simpl; only 1: now constructor; only 1: simpl; only 1: destruct l as [| [| ] ll lx lr], r as [| [| ] rl rx rr]; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: simpl; only 1: now constructor).
coq-tactician-stdlib.8.11.dev	Coq.Bool.BoolEq.Bool_eq_dec.eq_dec	40	40.229357	80764	12310
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListPairs.in_split_r	40	2.998390	1648	756	1.0.0.0.0.0.0.0.1.0.0.0.0.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: intros; only 1: auto; only 1: simpl; only 1: intros; only 1: destruct p; only 1: destruct a; only 1: destruct (split l); only 1: simpl in *; only 1: destruct H; only 1: injection H; only 1: auto; only 1: right; only 1: apply (IHl (a0, b) H)).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_div	40	40.234100	11763	3210
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.gcd_divide_l	40	40.609428	26935	5203
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Wf_Z.Z_of_nat_prop	40	40.204600	80266	5341
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_wd	40	40.224959	19407	4184
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListPairs.split_length_r	40	0.112559	50	24	0.0.0.1.0.0.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: destruct a; only 1: destruct (split l); only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_2_facts.Rsym_imp_Rstarsym	40	40.179560	56329	13979
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_eq_iff	40	17.358692	11195	3287	0.1.1.1.1.0.14.0	synth with cache (only 1: split; only 1: rewrite compare_sub_mask; only 1: now case sub_mask_spec; only 1: intros <-; only 1: induction p; only 1: trivial; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_odd	40	40.279577	2866	943
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_inj_l	40	40.283851	31812	7088
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.even_spec	40	40.267744	26276	5324
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutEq.Perm.multiplicity_In	40	36.479984	10385	3537	5.2.2.0.1.0.1.0.0.0.0.1.0	synth with cache (only 1: induction l; only 1: intro n; only 1: simpl; only 1: split; only 1: destruct 1; only 1: apply gt_irrefl; only 1: intro y; only 1: simpl; only 1: destruct eq_dec as [->| Hneq]; only 1: rewrite IHl; only 1: intuition; only 1: rewrite IHl; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_alt.Piter_op_square	40	40.064149	22771	1307
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt_rtn1_iff	40	40.334529	126007	15333
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_max	40	36.525192	20606	3203	0.0.1.0.0.0.1.0.0.0.0.1.0.0.2.4.0.0.0.0.0.0.0.0.0.6.12	synth with cache (only 1: unfold Z.max, N.max; only 1: destruct n, m; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: trivial; only 1: simpl; only 1: auto; only 1: simpl; only 1: case Pos.compare_spec; only 1: destruct Pos.ggcd as (g, (aa, bb)); only 1: trivial; only 1: trivial; only 1: simpl; only 1: congruence; only 1: trivial; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now case Pos.compare).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_sign_mul	40	40.136191	13232	2565
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.div_mod	40	0.023123	4	4	0.0.0.0	synth with cache (only 1: intro H; only 1: generalize (div_eucl_spec a b); only 1: unfold div, modulo; only 1: now destruct div_eucl).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.choose	40	40.037859	7979	3199
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zmin.Zmin_irreducible	40	40.106390	37921	2481
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_0_l	40	0.023754	4	3	0.1.0	synth with cache (only 1: intros; only 1: bitwise; only 1: now constructor).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.MoreInt.ltb_nlt	40	40.171723	70598	4148
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_0_r	40	0.031317	7	4	0.3.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply andb_false_iff; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.equal_cons	40	40.140602	8686	1671
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_lt_succ	40	2.537227	678	358	0.1.1.2.1.0.0	synth with cache (only 1: intros n m; only 1: rewrite <- le_succ_l; only 1: symmetry; only 1: rewrite lt_succ_r; only 1: rewrite <- lt_pred_le; only 1: symmetry; only 1: apply le_succ_l).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.min_monotone	40	3.305924	2335	225	0.1.25.0	synth with cache (only 1: intros; only 1: apply min_mono; only 1: congruence; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.le_plus_trans	40	12.830255	11630	2614	3.8.0.17	synth with cache (only 1: induction 1; only 1: apply Nat.le_add_r; only 1: Nat.nzsimpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.Bijections.bij_inj	40	40.124467	32123	1449
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_pred_lt_succ	40	0.442730	109	46	1.2.3	synth with cache (only 1: symmetry; only 1: rewrite <- lt_pred_le; only 1: apply lt_succ_r).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neq_pred_l	40	0.057026	8	3	0.5.0	synth with cache (only 1: intro n; only 1: rewrite <- (succ_pred n)  at 2; only 1: apply neq_sym, neq_succ_diag_l).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zmax.Zmax_left	40	40.072096	23367	2942
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.sub_in_bij	40	40.016623	197	19
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.Bijections.bij_can_sym	40	40.020298	7522	428
coq-tactician-stdlib.8.11.dev	Coq.micromega.Env.S.jump_simpl	40	40.120940	46190	974
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.decidability.Z_gt_dec	40	40.067238	23824	2402
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zmax.Zpos_max_1	40	0.015281	6	1	5	synth with cache (only 1: now destruct p).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zsucc_le_compat	40	40.064805	21310	2873
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zsucc_lt_compat	40	40.064708	22614	1843
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_div_pow2	40	40.024958	6055	1652
coq-tactician-stdlib.8.11.dev	Coq.Sets.Classical_sets.Ensembles_classical.Included_Strict_Included	40	4.367603	2750	431	2.17.4	synth with cache (only 1: intros x y H'; only 1: compute; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.WKL.is_path_from_characterization	40	40.076021	22917	5151
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.decidability.Z_lt_ge_dec	40	0.390019	223	61	2.8.3	synth with cache (only 1: unfold Z.lt; only 1: unfold Z.ge; only 1: decide equality).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_mul_pow2	40	40.060482	4681	1686
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_cons_nil	40	40.284702	44750	3068
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_str_pos_iff	40	40.453485	11568	3944
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_mul_pow2	40	40.102321	10968	2488
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_div_pow2	40	40.077198	10719	2646
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zodd_div2	40	4.460447	940	430	1.0.2.8.0	synth with cache (only 1: boolify_even_odd; only 1: intros; only 1: rewrite (Zdiv2_odd_eqn n)  at 1; only 1: simpl; only 1: now rewrite H).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcompare.Zplus_compare_compat	40	40.109549	38266	4484
coq-tactician-stdlib.8.11.dev	Coq.Arith.Mult.mult_S_lt_compat_l	40	40.082224	30886	2701
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_wd	40	40.067545	20553	2696
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zgt_le_succ	40	40.070360	24289	2642
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.lt_0_mul'	40	40.310314	9719	3521
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.decidability.Z_ge_dec	40	40.098727	33071	4577
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.OMEGA6	40	34.558894	12648	1167	2.3.1.8.6.7.0.18	synth with cache (only 1: destruct x; only 1: simpl; only 1: intuition; only 1: now subst; only 1: intros Hn; only 1: intro EQ; only 1: now subst; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zle_gt_succ	40	40.089145	30912	3238
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_cancel_l	40	40.170405	17030	5688
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_cont_Gt_not_Lt	40	24.239134	18631	2715	0.0.0.2.31.7	synth with cache (only 1: rewrite compare_cont_spec; only 1: unfold ge; only 1: destruct (p ?= q); only 1: now split; only 1: now split; only 1: now split).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_div	40	40.059255	16161	4810
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_wd	40	40.064734	15098	1979
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListPairs.split_combine	40	4.183077	3362	967	0.0.5.3.0.2.1.0.0.0.1	synth with cache (only 1: induction l; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: destruct (split l); only 1: destruct a; only 1: simpl; only 1: destruct (split l); only 1: rewrite IHl; only 1: destruct (split l); only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_3_facts.Newman	40	40.135399	35386	12175
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zodd_Sn	40	40.089530	29720	4991
coq-tactician-stdlib.8.11.dev	Coq.Sets.Image.Image.Im_inv	40	16.244697	11532	2526	4.0.4.2.12	synth with cache (only 1: intros A x y H'; only 1: elim H'; only 1: intros x0 H'0; only 1: intros; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.rem_opp_l	40	18.609040	5831	3125	0.0.1.0.0.1.0.0.0.1.0.0.1.0.0.0.0.0.2	synth with cache (only 1: now destruct 1 || intros _; only 1: destruct a, b; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: unfold rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: unfold rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: trivial; only 1: unfold rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: unfold rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r])).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zle_succ_le	40	40.107153	39837	2998
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.In_eq	40	40.151613	51911	4467
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_mod	40	40.061092	15433	4978
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zeven_quot2	40	0.201576	12	7	1.0.0.0	synth with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: intros Hn; only 1: now destruct n as [| [| | ]| [| | ]]).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zplus_lt_compat_l	40	0.006712	1	1	0	synth with cache (only 1: apply Z.add_lt_mono_l).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zplus_lt_compat_r	40	0.008197	2	1	1	synth with cache (only 1: apply Z.add_lt_mono_r).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zodd_quot2	40	0.124759	28	18	3.0.0.1	synth with cache (only 1: intro H; only 1: boolify_even_odd; only 1: intros Hn; only 1: now destruct n as [| [| | ]| [| | ]]).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_spec_alt	40	40.053048	12953	4047
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.list_contents_app	40	40.077123	21752	4745
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zgt_succ_pred	40	40.128939	30584	3758
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.sub_in2	40	40.096279	475	50
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_quot	40	40.066128	17648	4850
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zplus_le_reg_l	40	0.362620	135	20	11	synth with cache (only 1: apply Z.add_le_mono_l).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.leb_compare	40	27.956028	14824	3279	1.0.0.2.0.0.0.0.0.0.3.0.1.0.1.0.7	synth with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: intuition; only 1: discriminate; only 1: simpl; only 1: split; only 1: intros; only 1: discriminate; only 1: intro H; only 1: reflexivity || destruct H; only 1: destruct m; only 1: simpl; only 1: intuition; only 1: simpl; only 1: rewrite ?IHn; only 1: easy || now destruct 1).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zplus_le_reg_r	40	0.044050	16	3	6	synth with cache (only 1: apply Z.add_le_mono_r).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zplus_lt_reg_l	40	0.020202	15	3	6	synth with cache (only 1: apply Z.add_lt_mono_l).
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.OMEGA4	40	40.080789	28095	3076
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.create_spec	40	40.060841	12715	1785
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zplus_gt_reg_l	40	0.029063	6	2	0.4	synth with cache (only 1: Z.swap_greater; only 1: apply Z.add_lt_mono_l).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zplus_gt_reg_r	40	0.026959	3	2	1.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.add_lt_mono_r).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zplus_lt_reg_r	40	0.139300	141	20	13	synth with cache (only 1: apply Z.add_lt_mono_r).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_refl	40	0.259175	226	57	2.7.2	synth with cache (only 1: intro; only 1: red; only 1: auto with datatypes).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.max_monotone	40	7.664779	6726	777	0.33	synth with cache (only 1: apply max_mono; only 1: eauto with *).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt2.map_lelistA	40	5.719545	2900	746	9.7.1.0	synth with cache (only 1: intros m x f; only 1: inversion 1; only 1: constructor 1; only 1: simpl_relation).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_sym	40	0.024760	7	2	2.3	synth with cache (only 1: unfold permutation; only 1: auto with datatypes).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Div2.double_plus	40	40.086879	14526	4058
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_Inf_In	40	40.161661	18348	2638
coq-tactician-stdlib.8.11.dev	Coq.Structures.Orders.OTF_to_TTLB.leb_trans	40	40.114845	30817	4417
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_l	40	40.339353	17930	3156
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.N2Nat.inj_pred	40	40.441557	24164	3705
coq-tactician-stdlib.8.11.dev	Coq.Strings.Byte.eqb_false	40	40.345302	7451	2517
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_rem	40	40.053593	13004	4554
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_mono	40	40.277599	20663	3886
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_refl_trans_ind_left	40	40.529482	225150	8035
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zplus_le_compat_r	40	1.940217	1894	116
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARsub_ext	40	40.293569	5322	1005
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.create_ok	40	0.891175	356	34	0.0.0.0.22	synth with cache (only 1: constructor; only 1: auto; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.eq_opp_l	40	40.307309	22474	6889
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARadd_0_r	40	33.308129	41955	2320	85.12	synth with cache (only 1: elim ARth; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_swap	40	40.194764	12289	3104
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.N2Nat.inj_div2	40	40.617537	35893	5164
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt2.mapi_lelistA	40	0.619441	204	98	0.1.0.0.1.0.0.2	synth with cache (only 1: intros m x e f; only 1: induction m; only 1: simpl; only 1: auto; only 1: simpl; only 1: destruct a as (x', e'); only 1: inversion_clear 1; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.gcd_greatest	40	40.511878	24246	4863
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.in_int_exists	40	40.167486	58545	5631
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.inj_succ_abs	40	0.413102	85	39	1.0.1.0.0.0.3	synth with cache (only 1: destruct n as [| p| p]; only 1: simpl; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l; only 1: simpl; only 1: now rewrite Pos.add_1_r; only 1: simpl; only 1: now rewrite Pos.add_1_r).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.inj_mul_abs	40	0.012013	1	1	0	synth with cache (only 1: now destruct n, m).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_trans	40	1.164403	582	200	0.4.0.6	synth with cache (only 1: unfold permutation, meq; only 1: intros; only 1: rewrite H; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.between_or_exists	40	40.069339	21682	3017
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.InitialDontExists.succ_onto_pred_injective	40	40.082551	26998	4448
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxDecProperties.max_case_strong	40	40.316004	40665	1540
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Nat2Z.inj_0	40	0.006409	2	1	1	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zodd_quot2_neg	40	2.173709	348	210	8	synth with cache (only 1: now destruct n as [| [p| p| ]| [p| p| ]]).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonneg_pos	40	40.092832	7795	2737
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Nat2Z.is_nonneg	40	0.082387	52	15	4.0.2.0	synth with cache (only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZOfNat.ofnat_zero	40	0.039972	77	7	13	synth with cache (only 1: solve_proper).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.fold_spec	40	40.245938	87324	4533
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Nat2Z.id	40	0.019664	7	5	1.0.1.0.0	synth with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: apply SuccNat2Pos.id_succ).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt2.mapi_sorted	40	0.665275	215	102	0.0.0.0.0.2.0.0.0.0	synth with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: destruct a as (x', e'); only 1: inversion_clear Hm; only 1: constructor; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_lt_mono_nonpos	40	40.187949	19305	3452
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.odd_spec	40	40.264962	12785	2960
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_2_facts.Sstar_contains_Rstar	40	6.503182	7438	2055	0.0.0.0.0.7.2.0.0.1.1.1	synth with cache (only 1: intuition; only 1: red; only 1: intros x y H'0; only 1: elim H'0; only 1: auto with sets; only 1: intros x0 y0 z H'1 H'2 H'3; only 1: generalize Rstar_transitive; only 1: intro T1; only 1: red in T1; only 1: apply T1 with y0; only 1: auto with sets; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.sub_in3	40	40.192433	653	50
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_cont_Gt_not_Gt	40	27.668565	19446	3550	0.0.0.1.29.5	synth with cache (only 1: rewrite compare_cont_spec; only 1: unfold lt; only 1: destruct (p ?= q); only 1: easy'; only 1: easy'; only 1: easy').
coq-tactician-stdlib.8.11.dev	Coq.Logic.ExtensionalityFacts.BijComp_FunctExt	40	40.334986	134659	12420
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.plus_le_lt_compat	40	40.106811	42418	2641
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_opp_odd	40	40.183283	11671	2505
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.inj_add_abs	40	1.643143	536	138	24	synth with cache (only 1: now destruct n, m).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Nat2Z.inj_iff	40	0.021137	5	5	0.0.0.0.0	synth with cache (only 1: split; only 1: intros H; only 1: now rewrite <- (id n), <- (id m), H; only 1: intros; only 1: now subst).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.le_div2	40	40.547680	39449	5128
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZOfNat.ofnat_succ	40	1.092799	840	257	11.1	synth with cache (only 1: intros a; only 1: now PeanoNat.Nat.nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_lt	40	40.090651	28962	5507
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zquot2_odd_eqn	40	5.002696	1196	336	0.0.0.0.0.0.0.0.0.0.1.1.11	synth with cache (only 1: destruct n as [| [| | ]| [| | ]]; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: now Z.nzsimpl'; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: now Z.nzsimpl').
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_le_mono	40	40.307723	25425	4988
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.lt_div2	40	40.621067	29261	5593
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Bool.find_some	40	23.447374	20360	2758	1.1.2.1.5.2.0.25	synth with cache (only 1: induction l; only 1: firstorder  discriminate; only 1: simpl; only 1: case_eq (f a); only 1: intros; only 1: intuition congruence; only 1: intros; only 1: intuition congruence).
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_remove_2	40	40.192739	47487	7173
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.div2_decr	40	40.546816	34798	7586
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_shiftl	40	40.062993	18235	3116
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Nat2Z.inj	40	1.488808	1429	265	25.0	synth with cache (only 1: intro H; only 1: now rewrite <- (Nat2Pos.id n), <- (Nat2Pos.id m), H).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_shiftl_l	40	40.056063	14204	2716
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Nat2Z.inj_le	40	0.843363	384	111	3.9	synth with cache (only 1: unfold Z.le, N.le; only 1: now rewrite Pos2Nat.inj_compare, Nat.compare_le_iff).
coq-tactician-stdlib.8.11.dev	Coq.Structures.Equalities.BoolEqualityFacts.eqb_sym	40	40.095042	27849	4891
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.rem_opp_r	40	20.309524	6888	3481	0.0.1.0.0.1.0.0.0.1.0.0.1.0.0.0.0.0.0	synth with cache (only 1: intros _; only 1: destruct a, b; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: unfold rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: unfold rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: trivial; only 1: unfold rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: unfold rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r])).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Nat2Z.inj_ge	40	0.155271	13	5	4.1	synth with cache (only 1: unfold Z.ge; only 1: now rewrite Pos2Nat.inj_compare, Nat.compare_ge_iff).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Div2.even_odd_double	40	40.087279	29240	4106
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Nat2Z.inj_gt	40	0.146838	10	3	4.2	synth with cache (only 1: unfold Z.gt; only 1: now rewrite Pos2Nat.inj_compare, Nat.compare_gt_iff).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_idemp_l	40	31.520059	15186	3171	0.0.0.20.0	synth with cache (only 1: intros; only 1: apply mul_mod_idemp_l; only 1: auto'; only 1: auto'; only 1: auto').
coq-tactician-stdlib.8.11.dev	Coq.Arith.Div2.odd_S2n	40	0.013242	3	3	0.0.0	synth with cache (only 1: intros n H; only 1: exists (Nat.div2 n); only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Div2.div2_double	40	0.044361	18	6	1	synth with cache (only 1: apply Nat.div2_double).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Hurkens.NoRetractFromSmallPropositionToProp.Paradox.paradox	40	40.371543	153036	15496
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Filtering.filter_ext_in_iff	40	16.891634	4135	1366	0.0.0.1.0.0.0.3.1.4	synth with cache (only 1: intros; only 1: split; only 1: intros H; only 1: rewrite filter_map in H; only 1: apply ext_in_map; only 1: assumption; only 1: intros H; only 1: rewrite filter_map; only 1: apply map_ext_in; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_2_facts.star_monotone	40	2.007312	1697	629	0.0.5.2.0.0.1.1	synth with cache (only 1: unfold contains; only 1: intros U R S H' x y H'0; only 1: elim H'0; only 1: auto with sets; only 1: intros x0 y0 z H'1 H'2 H'3; only 1: apply Rstar_n with y0; only 1: auto with sets; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_wd	40	0.204869	28	9	0.0.1	synth with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersEx.PairOrderedType.lt_compat	40	40.357910	9239	2007
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_wd	40	0.100350	27	8	0.0.1	synth with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_nil_eq	40	40.059820	14045	1606
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_shiftl_r	40	40.056564	15973	3005
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_pow	40	40.264054	18234	3971
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_wd	40	0.168599	27	8	0.0.1	synth with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.OMEGA8	40	6.433552	4026	564	5.5.6.1.2.2	synth with cache (only 1: destruct x; only 1: trivial; only 1: intros; only 1: destruct H; only 1: easy || now destruct y; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_shiftr	40	40.046464	12113	2225
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.plus_is_O	40	2.712430	2891	455	8.1.1.0.11	synth with cache (only 1: Nat.induct n; only 1: intro H; only 1: auto; only 1: intro n; only 1: now f_equal).
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.OMEGA7	40	40.047634	16036	1719
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.leb_correct	40	40.149578	53256	7329
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_1_l	40	40.040826	9418	1776
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_add_pos_l	40	3.543658	976	297	0.1.2.0.0.1.3.1	synth with cache (only 1: intros z n H; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: rewrite <- le_succ_l; only 1: symmetry; only 1: apply lt_succ_r).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_l	40	40.270330	19489	3610
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.decidability.Z_le_gt_dec	40	6.866514	1833	421	0.0.0.0.11.5	synth with cache (only 1: unfold Z.le; only 1: unfold Z.gt; only 1: case Z.compare; only 1: now left || now right; only 1: now left || now right; only 1: now left || now right).
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.OMEGA11	40	0.083493	12	6	0.1.0	synth with cache (only 1: rewrite ?Z.mul_add_distr_r, ?Z.mul_add_distr_l, ?Z.mul_assoc; only 1: rewrite <- !Z.add_assoc; only 1: f_equal).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_0_r	40	40.094332	16776	3936
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.OMEGA12	40	0.025760	3	2	1.0	synth with cache (only 1: rewrite ?Z.mul_add_distr_r, ?Z.mul_add_distr_l, ?Z.mul_assoc; only 1: apply Z.add_shuffle3).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_succ_or	40	40.548000	17390	5152
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_0_r	40	40.051397	13109	3441
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_eq_succ_iff_square	40	40.375108	40067	3588
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout_pos	40	40.255029	23918	4037
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.bi_induction_pred	40	40.149828	24281	5335
coq-tactician-stdlib.8.11.dev	Coq.Arith.Wf_nat.LT_WF_REL.acc_lt_rel	40	40.130164	12620	3564
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Nat2Z.inj_lt	40	2.628163	1177	267	6.16	synth with cache (only 1: unfold Z.lt, N.lt; only 1: now rewrite Pos2Nat.inj_compare, Nat.compare_lt_iff).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_lt	40	40.482128	14403	5584
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeAlt.OrderedType_to_Alt.compare_sym	40	40.168770	56310	7649
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.Inf_lt	40	39.583375	11096	1427	2.2.8.0.0.18	synth with cache (only 1: simple induction l; only 1: constructor; only 1: unfold ltk, eqk; only 1: intros; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: eauto with *).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.decidability.Z_gt_le_dec	40	0.788000	333	120	4.3.0.0.0	synth with cache (only 1: elim Z_le_dec; only 1: auto with arith; only 1: constructor; only 1: Z.swap_greater; only 1: now apply Z.nle_gt).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Wf_nat.LT_WF_REL.well_founded_inv_lt_rel_compat	40	40.180251	65425	11915
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_1_r	40	40.520640	16814	7049
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.decidability.Z_ge_lt_dec	40	0.078675	39	16	0.0.0.2.2	synth with cache (only 1: elim Z_lt_ge_dec; only 1: right; only 1: trivial; only 1: constructor; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_comm	40	40.307068	23390	3397
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZOfNat.ofnat_pred	40	3.437736	1573	383	3.8.0.0.0.0	synth with cache (only 1: PeanoNat.Nat.cases ltac:(n); only 1: intro H; only 1: exfalso; only 1: now apply H; only 1: Bool.destr_bool; only 1: now rewrite PeanoNat.Nat.pred_succ).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_nonneg	40	40.288361	11963	2528
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_0_r	40	0.018293	4	3	0.1.0	synth with cache (only 1: intro n; only 1: bitwise; only 1: apply xorb_false_l).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.strong_right_induction	40	40.619482	92158	5576
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersTac.OrderFacts.not_neq_eq	40	40.133398	22044	5733
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_gt_1	40	40.230756	4209	3026
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreduction.Qred_correct	40	40.075876	14685	3239
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.right_induction	40	40.427316	23177	3358
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_neg	40	0.028077	4	3	1.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (mul_0_l m); only 1: now apply mul_lt_mono_neg_r).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Bool.existsb_nth	40	40.090455	26572	5415
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_neg_pos	40	0.023071	3	3	0.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (mul_0_l m); only 1: now apply mul_lt_mono_pos_r).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Mult.mult_lt_compat_l	40	40.104862	39413	4367
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_0_l	40	0.074155	8	3	3.1.1	synth with cache (only 1: intro n; only 1: bitwise; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_mono	40	40.505521	18926	3580
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.odd_spec	40	18.768781	12292	3217	0.1.1.0.1.0.2.0.5.2.0.3.2.0.0.0	synth with cache (only 1: destruct n; only 1: split; only 1: now exists 0; only 1: intros (m, H); only 1: now destruct m; only 1: destruct p; only 1: split; only 1: now exists (pos p); only 1: easy; only 1: split; only 1: easy; only 1: intros (m, H); only 1: now destruct m; only 1: split; only 1: now exists 0; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_0_r	40	0.018656	4	3	1.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_r).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_max_distr_l	40	27.671548	2932	1042	0.0.1.0.0.2.0.0.1.0.0.0.4.0	synth with cache (only 1: intros n m p; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: apply mul_le_mono_nonneg_l; only 1: apply le_0_l; only 1: now rewrite <- ?add_le_mono_l; only 1: rewrite 2!max_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: apply mul_le_mono_nonneg_l; only 1: apply le_0_l; only 1: now rewrite <- ?add_le_mono_l).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.right_induction'	40	40.250413	33679	4649
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.Odd_succ	40	40.173196	18737	4426
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.ltb_lt	40	40.124441	40562	7869
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Nat2Z.inj_succ	40	5.840795	2671	917	2.0.10.1.0.0.6	synth with cache (only 1: destruct n as [| [| n]]; only 1: trivial; only 1: trivial; only 1: simpl; only 1: destruct n as [| p]; only 1: trivial; only 1: now rewrite Pos.add_1_r).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zquot2_opp	40	5.942295	5658	228	0.77	synth with cache (only 1: rewrite (Zquot2_odd_eqn n)  at 1; only 1: now destruct n as [| [p| p| ]| [p| p| ]]).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalFacts.nzhead_invol	40	40.041797	5467	1517
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.equivalence_relP_in	40	40.210051	1607	165
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonneg	40	40.329338	11856	3272
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory.monoW	40	40.065341	724	51
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.strong_right_induction'	40	40.316218	43481	7923
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_Inf_In	40	40.059727	18881	2049
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_sign_nz	40	40.282480	22397	4432
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_small_iff	40	40.365479	17778	4853
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory.homoRL	40	40.019752	1027	70
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_div_le	40	0.943664	359	101	0.0.0.2.3.1.0	synth with cache (only 1: intros; only 1: rewrite (add_le_mono_r _ _ (a mod b)), <- div_mod by order; only 1: rewrite <- (add_0_r a)  at 1; only 1: rewrite <- add_le_mono_l; only 1: destruct (mod_pos_bound a b); only 1: auto; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.leb_le	40	40.124332	40911	8141
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_cont_spec	40	40.100444	14598	3696
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory.homo_mono	40	40.031889	204	26
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.TwoDimensionalInduction.two_dim_induction	40	40.272682	50657	4983
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonneg_nonneg	40	40.146855	13412	3929
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_sign	40	40.319553	26376	3998
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_add_pos_r	40	3.917010	1033	282	0.1.1.0.0.1.2.2	synth with cache (only 1: intros z n H; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: rewrite <- le_succ_l; only 1: symmetry; only 1: apply lt_succ_r).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_cont_Eq	40	40.136933	26805	8888
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.A'A_left	40	2.357879	3180	466	22.4	synth with cache (only 1: intros L R n; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_pos	40	40.283466	6870	1754
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_cont_Lt_Gt	40	40.083362	20181	4135
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory.monoLR	40	40.030885	179	27
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_cont_Lt_Lt	40	40.065920	19442	4346
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.submap_1	40	40.059729	19343	3565
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.nlt_1_r	40	0.228275	89	27	9	synth with cache (only 1: now destruct p).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Hurkens.TypeNeqSmallType.Paradox.up_down	40	0.502425	1654	171	0.2.32	synth with cache (only 1: subst; only 1: intros; only 1: exact eq_refl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul	40	40.399147	17821	6687
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.pos_div_eucl_eq	40	40.571119	9927	1638
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListPairs.combine_length	40	0.397563	245	114	0.4.0.0.0.0.1.0	synth with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: destruct l'; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.lt_1_succ	40	0.098235	46	16	2	synth with cache (only 1: now destruct p).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxDecProperties.max_case	40	40.137389	43416	9353
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.le_nlt	40	0.018419	3	3	0.0.0	synth with cache (only 1: unfold gt, le, compare; only 1: rewrite compare_gt_iff; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_abs_l	40	40.312614	10706	5034
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.lt_nle	40	0.131288	26	10	4.1	synth with cache (only 1: unfold ge, lt, compare; only 1: now rewrite <- compare_nle_iff, compare_antisym, CompOpp_iff).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Heap.defs.is_heap_rect	40	40.226201	80317	3445
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_add_r	40	40.290206	15758	2878
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_le	40	40.097882	29892	5985
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.testbit_odd_0	40	40.576142	37070	3677
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_rev'	40	40.098829	29903	6111
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory.monoRL	40	40.004627	204	27
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_add_le	40	40.394825	15792	2300
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.lt_le_incl	40	0.402888	55	20	8	synth with cache (only 1: congruence).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_succ_div_gt	40	0.085397	26	11	1.0.0.0.1	synth with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite mul_succ_r; only 1: rewrite <- add_lt_mono_l; only 1: now destruct (mod_pos_bound a b)).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_lt_mono	40	40.389254	20320	3437
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Heap.defs.is_heap_rec	40	0.555852	322	90	0.0.1.0.0.1.1.1.0.0	synth with cache (only 1: simple induction T; only 1: auto with datatypes; only 1: intros a G PG D PD PN; only 1: elim (invert_heap a G D); only 1: intros H1 H2; only 1: elim H2; only 1: intros H3 H4; only 1: elim H4; only 1: auto with datatypes; only 1: auto with datatypes).
coq-tactician-stdlib.8.11.dev	Coq.Vectors.Fin.to_nat_inj	40	40.155370	57147	4172
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListPairs.in_combine_l	40	5.993919	6415	1213	0.2.5.1.1.6.4.0.0.0.0.0.3	synth with cache (only 1: induction l, l'; only 1: simpl; only 1: intros; only 1: assumption; only 1: trivial; only 1: simpl; only 1: left; only 1: now f_equal; only 1: intros; only 1: simpl in *; only 1: firstorder; only 1: injection H; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.lt_lt_succ	40	0.554321	340	54	0.9.3.0	synth with cache (only 1: intro H; only 1: rewrite PeanoNat.Nat.lt_succ_r; only 1: apply le_lteq; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_small_iff	40	40.373811	13084	4459
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxDecProperties.max_dec	40	40.690720	43301	7186
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory.can_mono	40	40.035146	387	27
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListPairs.in_prod_aux	40	0.049618	38	11	4.0.2	synth with cache (only 1: induction l; only 1: auto; only 1: firstorder  (subst; auto)).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.lt_strorder	40	0.013195	6	3	1.1.1	synth with cache (only 1: split; only 1: exact PeanoNat.Nat.lt_irrefl; only 1: exact PeanoNat.Nat.lt_trans).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.succ_le_mono	40	0.757613	455	73	5.12	synth with cache (only 1: unfold le, ge; only 1: now rewrite compare_succ_succ).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_initial.Zsth	40	0.007096	1	1	0	synth with cache (only 1: exact eq_equivalence).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_div_le	40	40.310251	15205	5347
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.lt_compat	40	0.224688	22	5	0.5	synth with cache (only 1: unfold lt, le; only 1: solve_proper).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_le	40	40.247883	22129	5066
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_neg_neg	40	40.309527	2061	979
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.le_refl	40	0.008948	2	2	0.0	synth with cache (only 1: apply lt_eq_cases; only 1: now right).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Hurkens.NoRetractFromTypeToProp.Paradox.paradox	40	40.304748	101021	14332
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_wd	40	40.100697	21512	2008
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorSpec.nth_map	40	40.229213	97094	5707
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_equiv1	40	40.034949	8422	3239
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_step	40	40.181330	3241	405
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NAdd.NAddProp.add_pred_l	40	40.316571	13414	3234
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.div_eucl_eq	40	40.534199	49305	4189
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorSpec.nth_map2	40	40.140038	49615	3907
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_same	40	40.578245	20013	5958
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_triangle	40	40.057873	6472	1407
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_exact	40	0.469910	145	44	0.2.2.2	synth with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite <- (add_0_r (b * (a / b)))  at 2; only 1: apply add_cancel_l).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_lt_upper_bound	40	0.028162	8	6	0.0.1.0.1.0	synth with cache (only 1: intros; only 1: rewrite (mul_lt_mono_pos_l b) by order; only 1: apply le_lt_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.add_sqrt_le	40	40.406781	11108	3474
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_wd	40	40.224160	21630	4823
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_upper_bound	40	0.024321	8	5	0.1.1.1.0	synth with cache (only 1: intros; only 1: rewrite (mul_le_mono_pos_l _ _ b) by order; only 1: apply le_trans with a; only 1: now apply mul_div_le; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_lower_bound	40	0.035497	7	5	2.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- (div_mul q b) by order; only 1: apply div_le_mono; only 1: auto; only 1: now rewrite mul_comm).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_opp	40	40.212875	11292	2468
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Sorted.defs.Sorted_extends	40	40.083220	22803	4491
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_small_iff	40	40.480748	10148	3957
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Bool.existsb_app	40	40.061560	9559	662
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zodd_pred	40	28.792537	18191	5793	7.2.0.1.1.4.0.0.1.2.4.0.1.0.2	synth with cache (only 1: destruct n as [| p| p]; only 1: simpl; only 1: intros; only 1: tauto; only 1: intros H; only 1: simpl; only 1: destruct p; only 1: easy; only 1: simpl; only 1: destruct p; only 1: auto; only 1: auto; only 1: auto; only 1: trivial; only 1: now destruct p).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.gcd_divide_l	40	0.037984	7	7	0.0.0.0.0.0.0	synth with cache (only 1: rewrite <- N.ggcd_gcd; only 1: generalize (N.ggcd_correct_divisors a b); only 1: destruct ggcd as (g, (aa, bb)); only 1: simpl; only 1: intros (H, _); only 1: exists aa; only 1: now rewrite N.mul_comm).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.gcd_divide_r	40	0.037717	8	7	0.0.0.0.0.0.1	synth with cache (only 1: rewrite <- ggcd_gcd; only 1: generalize (N.ggcd_correct_divisors a b); only 1: destruct ggcd as (g, (aa, bb)); only 1: simpl; only 1: intros (_, H); only 1: exists bb; only 1: now rewrite N.mul_comm).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_succ_le	40	40.690174	25344	4136
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.Sub_Add_new	40	40.224601	14980	7649
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.odd_succ	40	40.152011	12181	4581
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_length	40	40.104527	30672	7322
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_cont_Gt_Gt	40	40.073481	21895	4423
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zgt_succ_gt_or_eq	40	40.267292	31243	3249
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.abst_form_correct	40	40.425244	66666	3557
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_eq	40	40.210921	25510	6402
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_lt	40	40.052847	12005	5462
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Heap.defs.low_trans	40	2.996306	2491	408	11.1.3.0.7	synth with cache (only 1: simple induction T; only 1: auto with datatypes; only 1: simpl; only 1: intros; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Rtauto.with_env.weaken	40	40.140220	50710	5244
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_mul_above	40	40.149198	6023	2582
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorSpec.to_list_of_list_opp	40	1.321494	5537	98
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorSpec.take_O	40	0.012681	5	3	2.0.0	synth with cache (only 1: intros m n; only 1: intro H; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add_distr	40	40.332990	10307	1995
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.monoW_in	40	40.234688	572	49
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_gt_compat_r	40	0.225483	140	15	0.12	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_eqn	40	4.019470	2490	412	0.0.0.5.12.0	synth with cache (only 1: intros a Ha; only 1: unfold sqrt_up; only 1: case compare_spec; only 1: order; only 1: order; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Bool.forallb_forall	40	40.044705	9119	1730
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.inj_sub	40	40.048648	11243	4261
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_gt_0_lt_compat_r	40	0.141872	14	4	0.1	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_min_distr_l	40	40.469771	6496	1531
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.mono2W_in	40	40.220779	947	68
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_sub_distr	40	40.264568	7228	1774
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.PairDecidableType.eq_dec	40	40.128706	46193	4620
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_succ_or	40	40.352577	14525	2498
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.div_mod	40	40.371419	17381	6258
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.pos_div_eucl_bound	40	40.247414	29276	3613
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_sub_l	40	40.390751	30865	5212
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_nilpotent	40	40.209278	15576	3053
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_lt_sub_lt	40	40.306727	19323	6805
coq-tactician-stdlib.8.11.dev	Coq.Logic.Eqdep_dec.K_dec_type	40	40.217681	78671	14196
coq-tactician-stdlib.8.11.dev	Coq.ZArith.auxiliary.Zlt_left	40	40.079635	16546	1238
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.homoRL_in	40	40.220965	550	39
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_eq_0_iff	40	40.251956	26954	4830
coq-tactician-stdlib.8.11.dev	Coq.ZArith.auxiliary.Zge_left	40	0.024006	4	2	1.1	synth with cache (only 1: Z.swap_greater; only 1: apply Z.le_0_sub).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_0_l	40	40.234305	22865	4590
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Endo_Injective_Surjective	40	40.307439	21298	3561
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_sub_mask	40	40.099379	26510	6729
coq-tactician-stdlib.8.11.dev	Coq.Logic.Eqdep_dec.eq_rect_eq_dec	40	0.328949	327	91	0.0.0.0.0.0.0.4.1	synth with cache (only 1: intros A eq_dec x P H p; only 1: elim p using K_dec; only 1: intros; only 1: case (eq_dec x0 y); only 1: left; only 1: assumption; only 1: right; only 1: assumption; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle0	40	40.133297	5541	1778
coq-tactician-stdlib.8.11.dev	Coq.ZArith.auxiliary.Zgt_left	40	0.446642	95	46	0.0.0.0.2	synth with cache (only 1: Z.swap_greater; only 1: intros; only 1: rewrite Z.add_shuffle0; only 1: change (-1) with (- Z.succ 0); only 1: now apply Z.le_0_sub, Z.le_succ_l, Z.lt_0_sub).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutEq.Perm.multiplicity_In_O	40	20.901478	15954	2978	2.0.8.5.1.2.0.2	synth with cache (only 1: induction l as [| x l]; only 1: trivial; only 1: simpl; only 1: intros; only 1: destruct eq_dec as [->| Hneq]; only 1: tauto; only 1: simpl; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_0_l	40	0.021849	3	3	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.auxiliary.Zgt_left_gt	40	0.026987	5	2	2.1	synth with cache (only 1: Z.swap_greater; only 1: apply Z.lt_0_sub).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_mul_l	40	40.279870	16169	2889
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_0_r	40	0.021654	3	3	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_l).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutEq.Perm.multiplicity_In_S	40	0.035799	9	7	2.0.0.0.0	synth with cache (only 1: intros; only 1: eapply In_InA, multiplicity_InA in H; only 1: eauto with typeclass_instances; only 1: eauto with typeclass_instances; only 1: eauto with typeclass_instances).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout	40	40.224957	21337	3909
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.inj_gt	40	40.097234	19769	5809
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_0_r	40	40.280407	11541	7057
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_le_mono_nonpos	40	40.165804	10163	2944
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_factor_r	40	0.020624	6	3	0.3.0	synth with cache (only 1: intros; only 1: rewrite mul_comm; only 1: apply divide_mul_l, divide_refl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.ls_ls'	40	40.525365	38536	7633
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.lt_iff_add	40	40.098609	28020	6382
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_nonneg	40	1.605172	539	155	0.0.1.0.0.0.5.0	synth with cache (only 1: intros; only 1: unfold sqrt_up; only 1: case compare_spec; only 1: order; only 1: intro H; only 1: apply le_le_succ_r, sqrt_nonneg; only 1: intro H; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.mod_pos_bound	40	40.482985	18599	7198
coq-tactician-stdlib.8.11.dev	Coq.ZArith.auxiliary.Zgt_left_rev	40	0.210853	44	9	1.1	synth with cache (only 1: Z.swap_greater; only 1: apply Z.lt_0_sub).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Heap.defs.Equivalence_instance_0	40	2.095630	580	158	0.0.0.0.0.0.1.5.0.0.9	synth with cache (only 1: constructor; only 1: auto with datatypes; only 1: auto with datatypes; only 1: red; only 1: unfold meq; only 1: destruct x; only 1: destruct y; only 1: destruct z; only 1: intros; only 1: rewrite H; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_comm	40	40.165222	24097	4734
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.gt_iff_add	40	40.099100	30427	5661
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.inj_min	40	40.066455	18280	4848
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.leb_refl	40	40.299686	81443	1963
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Bool.filter_In	40	40.090007	25196	5799
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.central_induction_pred	40	40.335659	31077	10120
coq-tactician-stdlib.8.11.dev	Coq.Arith.Minus.not_le_minus_0	40	40.086230	28237	4187
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_divide_iff	40	40.534360	20816	5619
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_cancel_l	40	40.238640	17835	5055
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Heap.defs.Proper_instance_0	40	0.245994	136	34	0.8.1	synth with cache (only 1: intros ? ? E1 ? ? E2 ?; only 1: simpl; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_assoc	40	2.598910	821	215	3.2.7	synth with cache (only 1: intros x y z; only 1: bitwise; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qfield.Qsrt	40	40.028752	7038	1411
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_assoc	40	40.063190	18756	3695
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Bool.filter_app	40	40.148211	52028	6075
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxDecProperties.min_case_strong	40	40.581802	37811	8922
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_0_le	40	40.419992	19513	5549
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.mod_neg_bound	40	40.468437	11190	5236
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_cont_antisym	40	40.104390	25504	9231
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_add	40	2.449021	501	198	0.0.2.1.0.1.0	synth with cache (only 1: intros; only 1: apply (mul_cancel_l _ _ c); only 1: order; only 1: apply (add_cancel_r _ _ ((a + b * c) mod c)); only 1: rewrite <- div_mod, Private_NZDiv.mod_add by order; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Peqb_complete	40	0.007098	2	1	1	synth with cache (only 1: apply Pos.eqb_eq).
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.desc_tail	40	40.247180	48749	7191
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Peqb_Pcompare	40	0.098062	59	13	0.9	synth with cache (only 1: rewrite ?Pos.compare_eq_iff; only 1: now apply Pos.eqb_eq).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.quotrem_eq	40	40.120592	30205	5152
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxDecProperties.min_case	40	40.476231	30335	6551
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Pcompare_Peqb	40	0.030054	2	1	1	synth with cache (only 1: now rewrite Pos.compare_eq_iff, <- Pos.eqb_eq).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.max_case	40	0.056491	5	4	0.0.1.0	synth with cache (only 1: intros; only 1: apply Private_Dec.max_case_strong; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.inj_ge	40	40.273997	18710	5137
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.max_dec	40	0.015824	6	4	0.0.1.1	synth with cache (only 1: Bool.destr_bool; only 1: apply Private_Dec.max_case; only 1: auto with relations; only 1: auto with relations).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_eq_succ_is_pow2	40	40.355716	24066	3479
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.homo_mono_in	40	40.008281	343	38
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.quot_rem'	40	40.065702	15819	6271
coq-tactician-stdlib.8.11.dev	Coq.Logic.IndefiniteDescription.functional_choice	40	40.344526	50594	5483
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.le_preorder	40	0.026209	24	6	4.2.0	synth with cache (only 1: split; only 1: exact PeanoNat.Nat.le_refl; only 1: exact PeanoNat.Nat.le_trans).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_comm	40	40.077031	22168	4610
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_assoc	40	40.069234	19401	3916
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.Nplength_infty	40	0.040815	7	4	0.1.0.2	synth with cache (only 1: induction a as [| p]; only 1: congruence; only 1: simpl; only 1: congruence).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_NoDupA_split	40	40.183373	16809	2661
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Finite_Empty_or_not	40	40.518855	86422	5835
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_unique	40	40.365484	29609	4673
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.BinList.MakeBinList.jump_pred_double	40	40.163566	56347	3890
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.rem_bound_pos	40	40.061220	11854	5533
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.inj_sub	40	40.103204	31930	5060
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.Simplify_add	40	40.210840	22380	5546
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListDec.Dec_in_Type.NoDup_dec	40	40.126948	40127	7916
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARdistr_r	40	40.206396	16826	1337
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.PairUsualDecidableType.eq_dec	40	40.151238	55496	5089
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.rem_opp_l'	40	40.053141	13201	5628
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_diag	40	40.218768	16498	5669
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_case	40	0.013428	6	4	0.0.2.0	synth with cache (only 1: intros; only 1: apply Private_Dec.min_case_strong; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_l_iff	40	40.309815	11214	3689
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_dec	40	0.038251	23	10	0.0.1.4	synth with cache (only 1: intros; only 1: apply Private_Dec.min_case; only 1: auto with relations; only 1: auto with relations).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.monoLR_in	40	40.010811	151	24
coq-tactician-stdlib.8.11.dev	Coq.Sets.Infinite_sets.Infinite_sets.approximant_can_be_any_size	40	40.109314	33537	11413
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.elements_spec1'	40	40.112875	18167	2835
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.le_succ_l	40	1.533806	579	226	0.0.0.6.1	synth with cache (only 1: unfold le; only 1: rewrite compare_gt_iff; only 1: rewrite PeanoNat.Nat.lt_succ_r; only 1: unfold lt; only 1: now rewrite <- compare_nle_iff, compare_antisym, CompOpp_iff).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.le_trans	40	3.419157	1510	417	0.0.0.0.0.0.0.0.0.0.0.1.0.2	synth with cache (only 1: rewrite 3!PeanoNat.Nat.lt_eq_cases; only 1: intros [LT| EQ] [LT'| EQ']; only 1: generalize (PeanoNat.Nat.lt_trans n m p); only 1: auto with relations; only 1: rewrite <- EQ'; only 1: generalize (PeanoNat.Nat.lt_trans n m p); only 1: auto with relations; only 1: rewrite EQ; only 1: generalize (PeanoNat.Nat.lt_trans n m p); only 1: auto with relations; only 1: rewrite EQ; only 1: rewrite <- EQ'; only 1: generalize (PeanoNat.Nat.lt_trans n m p); only 1: auto with relations).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Bool.concat_filter_map	40	40.153280	53746	5927
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_pred_le	40	40.236055	21274	5218
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.rem_opp_r'	40	40.059737	13737	5296
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_lt	40	40.372469	11422	5248
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.testbit_of_N	40	0.896712	353	157	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1	synth with cache (only 1: destruct a as [| [a| a| ]], n as [| n]; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.inj_sub_max	40	40.128994	31907	7025
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.testbit_Zpos	40	0.176319	71	33	1.0.0.0.0.1.0	synth with cache (only 1: intro Hn; only 1: rewrite <- testbit_of_N; only 1: f_equal; only 1: destruct n; only 1: trivial; only 1: trivial; only 1: now destruct Hn).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.lt_succ_diag_r	40	24.601754	20206	3290	0.1.49	synth with cache (only 1: rewrite PeanoNat.Nat.lt_succ_r; only 1: apply lt_eq_cases; only 1: now right).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.testbit_0_l	40	0.009254	7	1	6	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.div2_spec	40	0.042985	1	1	0	synth with cache (only 1: now nzsimpl').
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.testbit_neg_r	40	0.013469	1	1	0	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.testbit_even_0	40	0.008095	2	1	1	synth with cache (only 1: now destruct a).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.inj_max	40	40.063908	18290	4602
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_mono	40	40.430869	13193	2575
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.radd_term_term	40	40.134860	48928	4133
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_exact	40	0.157809	34	12	0.0.1.2	synth with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite <- (add_0_r (b * (a / b)))  at 2; only 1: apply add_cancel_l).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.inj_quot	40	40.056363	13411	5038
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_antisym	40	40.115336	29428	9650
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.add_inf	40	40.089608	29441	2756
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_lt_upper_bound	40	0.174161	61	27	0.1.1.0.1.0	synth with cache (only 1: intros; only 1: rewrite (mul_lt_mono_pos_l b) by order; only 1: apply le_lt_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: order; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_min_distr_l	40	40.276734	11216	1860
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.BoundFromZero	40	0.475333	627	56	20.1	synth with cache (only 1: intros; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.length_order.lel_trans	40	0.736282	373	78	13.0	synth with cache (only 1: unfold lel; only 1: now intros -> ->).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_ind_bis	40	40.072140	15755	2125
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_max_distr_r	40	13.470585	2192	906	0.0.2.0.0.1.0.0.2.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: order; only 1: now rewrite <- ?add_le_mono_l; only 1: apply mul_le_mono_nonneg_r; only 1: apply le_0_l; only 1: now rewrite <- ?add_le_mono_l; only 1: rewrite 2!max_l; only 1: order; only 1: now rewrite <- ?add_le_mono_l; only 1: apply mul_le_mono_nonneg_r; only 1: apply le_0_l; only 1: now rewrite <- ?add_le_mono_l).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Bool.find_none	40	40.112391	34336	4749
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.length_order.lel_cons_cons	40	0.162850	8	4	0.3.0.1	synth with cache (only 1: unfold lel; only 1: intros; only 1: simpl; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Bool.partition_cons1	40	40.095735	31479	3924
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_lower_bound	40	0.038414	7	5	2.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- (div_mul q b) by order; only 1: apply div_le_mono; only 1: auto; only 1: now rewrite mul_comm).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.length_order.lel_cons	40	0.012001	3	3	0.0.0	synth with cache (only 1: unfold lel; only 1: simpl; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.length_order.lel_tail	40	0.011957	3	3	0.0.0	synth with cache (only 1: unfold lel; only 1: simpl; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Mergesort.Sort.Permuted_merge_list_to_stack	40	40.126349	43826	5350
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.length_order.lel_refl	40	1.334990	1704	125	0.0.12.0.0.2.34	synth with cache (only 1: destruct l; only 1: red; only 1: simpl; only 1: constructor; only 1: red; only 1: simpl; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_remove_iff	40	40.107772	16001	4461
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NIso.Isomorphism.iso_nat_iso	40	40.065300	15859	6373
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.Bijections.bij_can_eq	40	40.080680	5661	266
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.leb_antisym	40	40.315760	70922	7646
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Bool.partition_length	40	40.089940	24313	6975
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_nil_app_cons	40	40.122845	42779	6950
coq-tactician-stdlib.8.11.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.inh_card_gt_O	40	40.114111	36445	7384
coq-tactician-stdlib.8.11.dev	Coq.Sets.Integers.Integers_sect.Integers_infinite	40	40.109733	44875	2582
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Fold.fold_right_eqlistA	40	40.137139	18167	2845
coq-tactician-stdlib.8.11.dev	Coq.Classes.DecidableClass.Decidable_sound	40	0.158894	319	66	0.6.8	synth with cache (only 1: intros; only 1: apply H; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.SetIncl.incl_refl	40	0.014403	7	2	3.2	synth with cache (only 1: intros; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_compat_l	40	8.343327	2636	1118	0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0	synth with cache (only 1: intros p q r Hp (Hq, Hqr); only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite (div_mod p r)  at 2 by order; only 1: apply le_trans with (r * (p / r)); only 1: apply mul_le_mono_nonneg_r; only 1: apply Private_NZDiv.div_pos; only 1: auto; only 1: order; only 1: order; only 1: rewrite <- (add_0_r (r * (p / r)))  at 1; only 1: rewrite <- add_le_mono_l; only 1: destruct (mod_bound_pos p r); only 1: auto; only 1: order; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_eq_succ_iff_pow2	40	40.371196	26040	7981
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Fold.fold_right_commutes	40	1.654880	717	238	2.0.0.0.0.3.1.1.1.3	synth with cache (only 1: induction s1; only 1: simpl; only 1: auto with relations; only 1: simpl; only 1: intros; only 1: transitivity (f a (f x (fold_right f i (s1 ++ s2)))); only 1: apply Comp; only 1: auto; only 1: apply IHs1; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_divides	40	30.289384	17058	3759	0.2.3.0.0.0.0.4.0.2.6	synth with cache (only 1: split; only 1: intros; only 1: exists (a / b); only 1: rewrite Private_NZDiv.div_exact; only 1: auto; only 1: intro H1; only 1: now apply H; only 1: intros (c, Hc); only 1: rewrite Hc, mul_comm; only 1: apply Private_NZDiv.mod_mul; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.SetIncl.incl_tl	40	0.491266	304	69	1.1.6.2	synth with cache (only 1: intros n m p H; only 1: intro H0; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.micromega.Refl.not_make_conj_cons	40	40.191024	10940	1558
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_upper_bound	40	1.423182	380	125	0.0.2.1.2.1	synth with cache (only 1: intros; only 1: rewrite (mul_le_mono_pos_l _ _ b) by order; only 1: apply le_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: order; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_div_le	40	40.109332	15594	3212
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.cardinal_spec	40	40.245057	61110	2547
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.SetIncl.incl_tran	40	0.011292	6	2	3.1	synth with cache (only 1: intros x y z; only 1: intuition auto; Nat.Private_OrderTac.Tac.subst_eqns; eauto using (RelationClasses.StrictOrder_Transitive x y z) with *).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.SetIncl.incl_appl	40	0.010496	1	1	0	synth with cache (only 1: auto with datatypes).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.SetIncl.incl_appr	40	0.012088	1	1	0	synth with cache (only 1: auto with datatypes).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersAlt.OT_from_Alt.lt_strorder	40	40.150568	49724	9804
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NAdd.NAddProp.add_pred_r	40	9.545170	1713	715	2.4.0.0.0.1.0	synth with cache (only 1: intros n m; only 1: cases m; only 1: intro H; only 1: exfalso; only 1: now apply H; only 1: intros; only 1: now nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.filter_spec	40	40.238801	35358	3289
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.testbit_of_N'	40	2.935800	1380	517	4.0.0.1.0.0.0.0.0.0.0.1.1	synth with cache (only 1: intros H; only 1: destruct a as [| a], n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now destruct a; only 1: simpl; only 1: trivial; only 1: now rewrite <- ?Pos.compare_antisym).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.for_all_spec	40	40.182486	45019	3696
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.cO	40	0.006338	3	1	2	synth with cache (only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.cI	40	0.004612	1	1	0	synth with cache (only 1: exact ring0).
coq-tactician-stdlib.8.11.dev	Coq.Classes.DecidableClass.Decidable_complete	40	1.335569	5211	389	0.14.12.18	synth with cache (only 1: intro H; only 1: intros; only 1: apply H0; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_Inf_NotIn	40	40.084069	10705	1511
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.choose_ok1	40	40.178068	66288	6422
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.ls'_ls''	40	40.515189	55095	7594
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_add	40	0.686837	114	59	0.1.1.0.0.0.0	synth with cache (only 1: intros; only 1: apply (mul_cancel_l _ _ c); only 1: now nzsimpl; only 1: apply (add_cancel_r _ _ ((a + b * c) mod c)); only 1: rewrite <- div_mod, Private_NZDiv.mod_add by order; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Fold.Fold_With_Restriction.ForallOrdPairs_inclA	40	40.065050	7387	1320
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersAlt.OT_from_Alt.lt_eq	40	40.184939	31050	6307
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_0	40	40.260304	104811	3003
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.submap_2	40	40.078970	22046	5689
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.testbit_even_0	40	40.701008	36291	3394
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.choose_ok2	40	40.162835	21363	5814
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Bool.elements_in_partition	40	40.074761	19042	5156
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.choose_equal	40	40.070607	19452	5325
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_add	40	1.784771	440	149	1.1.2.0.2.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with (a / c + b); only 1: now apply mod_always_pos; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.card_soustr_1	40	40.219388	38281	8557
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_min_distr_r	40	3.065602	258	151	0.0.0.1.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply mul_le_mono_r; only 1: rewrite 2!min_r; only 1: order; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply mul_le_mono_r).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Mergesort.Sort.Sorted_merge_stack	40	2.883779	2793	501	2.0.0.1.8.0.0.9.1.0.1	synth with cache (only 1: induction stack as [| []]; only 1: simpl; only 1: intros; only 1: constructor; only 1: intros; only 1: simpl; only 1: destruct H; only 1: apply Sorted_merge; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.rle_morph_Proper	40	40.221715	16517	1891
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.firstn_nil	40	0.105046	95	17	0.0.0.11	synth with cache (only 1: induction n; only 1: simpl; only 1: f_equal; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.firstn_cons	40	0.004200	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.size_le	40	40.495475	12377	3282
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.firstn_all	40	0.146934	78	27	0.2.1.0.0.3	synth with cache (only 1: induction l as [| x l IH]; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: f_equal; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Filtering.filter_map	40	40.145162	50522	8867
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidPermutation.Permutation.NoDupA_equivlistA_PermutationA	40	40.090649	30012	4525
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.equal_1	40	40.104506	31080	6516
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.firstn_O	40	0.012214	3	3	0.0.0	synth with cache (only 1: induction l as [| ? ? H]; only 1: now simpl; only 1: now simpl).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zgt_cases	40	40.157843	61640	2101
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonneg_r	40	3.927187	675	303	0.1.0.0.1.0.1.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: order; only 1: order; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonneg_l; only 1: rewrite 2!max_l; only 1: order; only 1: order; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonneg_l).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.min_elt	40	40.060834	17282	4288
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_0_l	40	40.099120	32325	4476
coq-tactician-stdlib.8.11.dev	Coq.Logic.SetoidChoice.representative_choice	40	40.060217	13196	3554
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.Proof_irrelevance_EM_CC.proof_irrelevance_cc	40	40.290817	116231	10661
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.In_inv_2	40	1.652023	925	184	0.3.1.12	synth with cache (only 1: intros P Q H xs H0; only 1: inversion_clear 1; only 1: intuition; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_irrefl	40	40.368067	34745	2562
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.inj_rem	40	40.054307	13580	5257
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.equal_2	40	40.062783	16629	5660
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.In_inv_3	40	0.176716	23	7	0.0.2.1	synth with cache (only 1: inversion_clear 1; only 1: compute in H0; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_0_succ	40	40.144426	56022	3068
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_NoDupA	40	40.086090	27406	3830
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_succ_r	40	40.098894	22890	6096
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_cons_app_inv	40	4.358672	472	128	1.2.0.7.0	synth with cache (only 1: intros; only 1: eapply Permutation_Add_inv; only 1: eauto using Add_app; only 1: now constructor; only 1: apply Add_app).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.log2_spec	40	40.501628	18075	4158
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_antisym	40	40.165183	17836	5041
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.firstn_le_length	40	1.402978	732	177	0.2.2.1.0.7	synth with cache (only 1: induction n; only 1: auto; only 1: induction l as [| a l' Hrec]; only 1: auto with arith; only 1: simpl; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_remove_nodup	40	40.257783	48552	5367
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_lt_mono_r	40	4.177193	1754	368	0.0.0.17	synth with cache (only 1: rewrite 2!(add_comm _ p); only 1: unfold lt; only 1: rewrite add_compare_mono_l; only 1: apply iff_refl).
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_union_intro	40	0.103826	47	24	0.0.4	synth with cache (only 1: intros a b x [H1| H2]; only 1: auto with datatypes; only 1: auto with datatypes).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_succ_l	40	40.060057	14639	5957
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARadd_assoc1	40	40.337455	16163	1381
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.radd_term_term'	40	40.053665	12575	4553
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.pred_le_mono	40	40.227065	15990	3781
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.succ_ltb_mono	40	40.071701	13315	2481
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.eqb_compare	40	40.205800	32929	4169
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.pred_le_mono	40	40.485479	20085	7683
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_le_mono_l	40	0.072931	21	10	0.2.3	synth with cache (only 1: unfold lt, le; only 1: rewrite add_compare_mono_l; only 1: apply iff_refl).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidPermutation.Permutation.Permutation_eqlistA_commute	40	40.092129	17048	2418
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.inter_ok	40	40.055976	14418	1316
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.even_spec	40	40.462301	41537	6350
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_div	40	40.552202	18523	3821
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zabs.Zsgn_spec	40	40.095192	33671	2421
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_sub_triangle	40	40.180039	9505	2531
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.SetIncl.incl_cons	40	5.602103	3987	891	1.8.0.1.4.5	synth with cache (only 1: intros a b c Ha Hb; only 1: intro H0; only 1: simpl; only 1: firstorder; only 1: subst; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidPermutation.Permutation.Permutation_PermutationA	40	0.199864	38	16	1.0.3.0.0	synth with cache (only 1: induction 1; only 1: intuition; only 1: intuition; only 1: eauto; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.N2Nat.inj_compare	40	40.139234	21653	2711
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidPermutation.Permutation.eqlistA_PermutationA	40	0.013861	3	3	0.0.0	synth with cache (only 1: induction 1; only 1: intuition; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.elements_spec1	40	40.095300	29384	4252
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Fold.Fold_With_Restriction.fold_right_commutes_restr	40	40.079788	21722	2151
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_compare	40	40.196030	25635	3772
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.max_elt	40	40.052456	11621	6931
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.max_case_strong	40	20.059166	15160	4851	0.0.0.7.5.7.2	synth with cache (only 1: intros; only 1: apply max_case_strong; only 1: intros; only 1: subst; only 1: assumption; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_le_mono_r	40	0.707263	65	29	0.0.0.5	synth with cache (only 1: rewrite 2!(add_comm _ p); only 1: unfold le; only 1: rewrite add_compare_mono_l; only 1: apply iff_refl).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.elements_spec2'	40	40.071131	20898	2764
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_succ_div_gt	40	40.339427	10670	2207
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.lbase	40	40.517837	23312	4562
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_mono	40	40.284712	13173	2591
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Store.Full_push_compat	40	40.249138	35445	7765
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_succ	40	40.140195	13097	4498
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_add_mult_diag_r	40	40.221303	8294	1799
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_cancel_r	40	19.540157	3778	1623	1.0.0.0.1.0.8	synth with cache (only 1: intro p; only 1: intro n; only 1: rewrite mul_comm; only 1: intro H; only 1: rewrite <- (mul_0_r n)  at 1; only 1: symmetry; only 1: now apply mul_lt_mono_pos_l).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_tac.Zeqb_ok	40	0.267791	205	42	2.10	synth with cache (only 1: intros a n; only 1: apply Zeq_is_eq_bool).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_In_cons_1	40	40.102129	13101	2814
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_abs_r	40	40.409889	14554	4460
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.monoRL_in	40	40.029975	154	27
coq-tactician-stdlib.8.11.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.cardinal_Empty	40	4.673594	4806	757	1.1.0.11.12	synth with cache (only 1: intro X; only 1: inversion 1; only 1: auto; only 1: elim (not_Empty_Add U A x); only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.Proof_irrelevance_WEM_CC.wp2p1	40	40.166654	57219	11034
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.even_0	40	3.203208	4764	143	12.63	synth with cache (only 1: unfold even; only 1: now rewrite recursion_0).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.pos_div_eucl_spec	40	40.361293	87305	3869
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.div_eucl_spec	40	40.123028	29441	5086
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_abs	40	40.064234	10466	3423
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.divide_Zpos	40	40.079562	23815	5985
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.can_mono_in	40	40.013825	252	37
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.elements_spec2	40	40.093378	29622	4311
coq-tactician-stdlib.8.11.dev	Coq.Logic.HLevels.hprop_hprop	40	40.149797	51192	14642
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.div_mod'	40	40.390141	35113	4039
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Store.Full_index_one_empty	40	40.132510	40300	8860
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListPairs.in_split_l	40	40.222017	39933	7117
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalChoice.choice	40	40.208597	81444	5710
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt2.map_1	40	40.098416	20568	3546
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonneg_l	40	40.240088	7805	2520
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_equiv2	40	40.087624	9359	3657
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.Proof_irrelevance_WEM_CC.wp2p2	40	40.187205	62533	10046
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_div_swap	40	40.089354	8816	3084
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.sqrt_neg	40	0.008806	2	2	0.0	synth with cache (only 1: intro H; only 1: false_hyp ltac:(H) nlt_0_r).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Cring.cring.cring_eq_ext	40	5.295585	867	54	1.0.0.36	synth with cache (only 1: constructor; only 1: solve_proper; only 1: solve_proper; only 1: solve_proper).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec0_more_steps	40	40.330797	16724	1994
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.SetIncl.incl_app	40	9.313079	4812	1318	0.0.6.0.4.0.0.4.1	synth with cache (only 1: unfold incl; only 1: induction l; only 1: firstorder; only 1: simpl; only 1: intros l1 l2 Eq x; only 1: intros; only 1: inversion H; only 1: eauto; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListPairs.split_nth	40	40.201044	74043	8121
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_union_intro2	40	10.703770	4695	797	6.6.2.2.3.1.0	synth with cache (only 1: simple induction y; only 1: simpl; only 1: destruct 1; only 1: intros a0 x0 Ha0; only 1: intros; only 1: simpl in *; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.Nat_as_OT.lt_trans	40	0.210108	129	32	1.8	synth with cache (only 1: intros n m p H H'; only 1: now transitivity m).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zdivide_opp_l	40	40.116032	46673	2304
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zdivide_opp_l_rev	40	0.008026	1	1	0	synth with cache (only 1: apply Z.divide_opp_l).
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Lexicographic_Product.Swap.Acc_swapprod	40	40.161988	56466	9513
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.MoreInt.leb_le	40	40.115260	31985	3575
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListPairs.split_length_l	40	40.248429	37826	5953
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetLogicalFacts.test_push	40	0.014406	1	1	0	synth with cache (only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt2.map_1	40	40.062393	7713	1887
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_Inf_NotIn	40	40.169963	5671	838
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetLogicalFacts.test_pull	40	0.148321	4	3	1.0.0	synth with cache (only 1: intros; only 1: push not in *; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qround.Qopp_lt_compat	40	40.079707	25400	3601
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideAuxiliary.eq_refl_iff	40	0.007377	2	1	1	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qminmax.Q.plus_max_distr_r	40	40.028580	6551	1792
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_min_distr_l	40	18.117569	1602	515	1.0.0.3.1.0.0.2.1.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: now rewrite <- ?add_le_mono_r; only 1: now apply mul_le_mono_l; only 1: rewrite 2!min_r; only 1: order; only 1: now rewrite <- ?add_le_mono_r; only 1: now apply mul_le_mono_l).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcompare.Zcompare_succ_Gt	40	40.178523	21650	2819
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt2.map_2	40	40.138867	45883	7041
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.rt1n_ind_right	40	40.269382	101999	14434
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qround.Qfloor_Z	40	0.309203	98	33	1.1.4	synth with cache (only 1: simpl; only 1: intro n; only 1: now Z.nzsimpl').
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.elements_spec2w	40	40.140594	36148	4383
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst1n_trans	40	0.297025	437	113	0.1.2.0.9	synth with cache (only 1: induction 1; only 1: auto; only 1: right with y; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListPairs.in_combine_r	40	28.547834	16420	3965	0.2.6.2.7.0.0.0.0.1.1.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: intros; only 1: contradiction; only 1: destruct l'; only 1: simpl; only 1: intros; only 1: contradiction; only 1: firstorder; only 1: injection H; only 1: injection H; only 1: simpl in *; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.skipn_O	40	0.004328	1	1	0	synth with cache (only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.skipn_nil	40	0.016978	5	4	0.0.0.1	synth with cache (only 1: intros; only 1: induction n; only 1: now simpl; only 1: now simpl).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.skipn_cons	40	0.004826	1	1	0	synth with cache (only 1: now simpl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_add_diag_r	40	40.263771	9047	2264
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.skipn_none	40	0.037058	14	8	0.0.0.0.2	synth with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_0_l	40	40.102120	28614	5432
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.inter_spec	40	40.075040	22954	4381
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.lbal_match	40	40.255524	105578	3229
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.rbal_match	40	0.008981	2	1	1	synth with cache (only 1: exact (rrmatch _ _ _)).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.Nat_as_OT.lt_not_eq	40	2.227557	1081	243	17	synth with cache (only 1: Nat.order).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Wf_Z.Z_of_nat_set	40	40.202912	78211	5360
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.lt_succ_r	40	40.093410	10798	3683
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Rings_Z.Zcri	40	0.019732	4	2	1.1	synth with cache (only 1: red; only 1: exact Z.mul_comm).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt2.map_sorted	40	40.074596	19744	5406
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.diff_ok	40	40.073575	13570	2022
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Rings_Z.Z_one_zero	40	0.009802	2	2	0.0	synth with cache (only 1: intro EQ; only 1: discriminate).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_alt.Zpower_equiv	40	40.085053	32059	2089
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zle_bool_imp_le	40	10.434626	9783	853	0.5.5.9.17.1.4	synth with cache (only 1: unfold Z.geb, Z.leb; only 1: intros H; only 1: intro H'; only 1: destruct (n ?= m); only 1: discriminate; only 1: discriminate; only 1: discriminate).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zle_imp_le_bool	40	0.016243	11	3	5	synth with cache (only 1: apply Z.leb_le).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.skipn_all2	40	0.948875	227	139	0.0.1.0.0.0.0.0.0.0	synth with cache (only 1: induction n as [| k iHk]; only 1: intro; only 1: now destruct l; only 1: destruct l as [| x xs]; only 1: simpl; only 1: now reflexivity; only 1: simpl; only 1: intro H; only 1: apply Peano.le_S_n in H; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_alt.Zpower_alt_0_r	40	0.006465	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.In_1	40	0.020436	8	2	2.4	synth with cache (only 1: intros H; only 1: now rewrite H).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_l_iff	40	40.363885	16545	4134
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.testbit_odd_succ'	40	40.717959	25561	4785
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonneg_r	40	4.208530	687	382	1.0.0.1.1.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: order; only 1: now apply mul_le_mono_nonneg_r; only 1: rewrite 2!min_r; only 1: order; only 1: order; only 1: now apply mul_le_mono_nonneg_r).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_eq_0_l	40	40.351849	32987	5665
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_eq_0_iff	40	40.283781	18045	4627
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.pos_div_eucl_remainder	40	40.555014	58573	4252
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt2.mapi_1	40	40.098879	28402	5792
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_refl_trans_ind_right	40	40.297010	101545	14252
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_abs_l	40	40.346667	12103	4025
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zmin.Zmin_le_prime_inf	40	40.092462	32451	1429
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.MoreInt.leb_nle	40	40.168379	68397	4230
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_comm	40	40.110266	21148	5210
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.MapsTo_In	40	0.062019	24	10	0.0.0.2.2	synth with cache (only 1: intuition; only 1: induction H; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_compat_l	40	15.389087	4444	1849	0.1.0.0.0.0.0.1.0.0.0.0.1.0.0.0	synth with cache (only 1: intros p q r Hp (Hq, Hqr); only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite (div_mod p r)  at 2 by order; only 1: apply le_trans with (r * (p / r)); only 1: apply mul_le_mono_nonneg_r; only 1: apply Private_NZDiv.div_pos; only 1: auto; only 1: order; only 1: auto; only 1: rewrite <- (add_0_r (r * (p / r)))  at 1; only 1: rewrite <- add_le_mono_l; only 1: destruct (mod_bound_pos p r); only 1: auto; only 1: order; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt2.map_2	40	40.143614	46291	6045
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_assoc	40	10.515006	5237	878	11.2.8	synth with cache (only 1: intros x y z; only 1: bitwise; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_eqn0	40	40.497752	6080	1086
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.lt_plus_trans	40	40.109077	20402	2516
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.empty_1	40	40.310844	130924	5318
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.BijectionsTheory.eq_bij	40	40.045312	738	81
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.min_max_antimonotone	40	40.336076	32414	2357
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.firstn_app	40	10.475890	6702	1610	5.2.3.2.1.0.2.2.5	synth with cache (only 1: induction n as [| k iHk]; only 1: intros [| ] ?; only 1: now simpl; only 1: auto; only 1: intros [| a l] H; only 1: now simpl; only 1: simpl; only 1: f_equal; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.skipn_all	40	0.151921	74	26	0.1.0.0.7	synth with cache (only 1: induction l as [| ? ? H]; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul_cancel_l	40	7.215189	1166	636	0.0.2.5.0	synth with cache (only 1: intros; only 1: rewrite !(mul_comm c); only 1: apply Private_NZDiv.div_mul_cancel_r; only 1: order; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.firstn_skipn_comm	40	8.086078	5019	1067	1.0.3.2.0.16	synth with cache (only 1: induction n; only 1: auto; only 1: induction l as [| x xs Hl]; only 1: now rewrite ?firstn_nil; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.firstn_length	40	1.667478	876	274	1.0.0.8.0.1	synth with cache (only 1: induction n; only 1: auto; only 1: induction l; only 1: now simpl; only 1: simpl in *; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.BijectionsTheory.bij_comp	40	40.012626	312	43
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.equal_2	40	0.233875	178	59	0.1.0.2.2.0	synth with cache (only 1: intros s x; only 1: unfold equal; only 1: case M.equal; only 1: auto; only 1: intros; only 1: discriminate H).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.inj_pow	40	40.047770	11726	3851
coq-tactician-stdlib.8.11.dev	Coq.micromega.Env.S.jump_tl	40	40.104876	34923	3472
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.gcd_divide_l	40	0.039991	8	7	0.0.0.0.1.0.0	synth with cache (only 1: rewrite <- Pos.ggcd_gcd; only 1: generalize (Pos.ggcd_correct_divisors a b); only 1: destruct ggcd as (g, (aa, bb)); only 1: simpl; only 1: intros (H, _); only 1: exists aa; only 1: now rewrite Pos.mul_comm).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.skipn_length	40	1.425417	590	245	1.0.0.0.0.0.0.0.0.0.4	synth with cache (only 1: induction n; only 1: destruct l; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: destruct l; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_m1_r	40	40.339554	19550	4157
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.gcd_divide_r	40	0.040839	7	7	0.0.0.0.0.0.0	synth with cache (only 1: rewrite <- Pos.ggcd_gcd; only 1: generalize (Pos.ggcd_correct_divisors a b); only 1: destruct ggcd as (g, (aa, bb)); only 1: simpl; only 1: intros (_, H); only 1: exists bb; only 1: now rewrite Pos.mul_comm).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Classical_sets.Ensembles_classical.Strict_Included_inv	40	40.124338	44907	7404
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.skipn_app	40	0.661781	250	135	0.0.0.2.0.0.0.0.0	synth with cache (only 1: induction n as [| k iHk]; only 1: intros l1 l2; only 1: now simpl; only 1: intros l1 l2; only 1: destruct l1 as [| x xs]; only 1: now rewrite 2!app_nil_l, <- minus_n_O; only 1: rewrite <- app_comm_cons; only 1: simpl; only 1: apply iHk).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zplus_gt_compat_l	40	40.038073	14329	1193
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eqn	40	8.412537	4340	809	0.0.0.2.2.12.5	synth with cache (only 1: intro n; only 1: unfold log2_up; only 1: intro H; only 1: case compare_spec; only 1: order; only 1: order; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Classical_sets.Ensembles_classical.not_SIncl_empty	40	0.032065	14	8	0.0.0.0.0.1.0	synth with cache (only 1: red; only 1: intro; only 1: intro H'; only 1: elim H'; only 1: intros H'0 H'1; only 1: elim H'1; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.decidability.Z_lt_le_dec	40	40.064489	21192	2762
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zplus_gt_compat_r	40	40.050759	18692	1630
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_lt_0_le_compat_r	40	0.008192	1	1	0	synth with cache (only 1: apply Z.mul_le_mono_pos_r).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_0_l	40	19.141674	16407	1978	1.0.37	synth with cache (only 1: unfold lcm; only 1: intro n; only 1: now nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_lt_compat_l	40	0.007657	1	1	0	synth with cache (only 1: apply Z.mul_lt_mono_pos_l).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_gt_compat_l	40	0.041079	3	2	1.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_l).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_0_r	40	0.143494	57	27	0.1.0.0.1.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: order; only 1: exists 0; only 1: now nzsimpl; only 1: apply divide_refl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zmin.Zpos_min_1	40	1.996480	1309	54	50	synth with cache (only 1: now destruct p).
coq-tactician-stdlib.8.11.dev	Coq.Logic.WKL.is_path_from_restrict	40	40.098731	32597	4308
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_ge_compat_r	40	0.045925	15	4	3.0.2	synth with cache (only 1: Z.swap_greater; only 1: intros; only 1: now apply Z.mul_le_mono_nonneg_r).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Mult.mult_lt_compat_r	40	40.112193	43078	4807
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcompare.Zcompare_Gt_not_Lt	40	40.063653	16216	2222
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_eq_0_iff	40	40.124656	21566	3790
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.divide_Zpos_Zneg_r	40	40.074615	24778	2091
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_ge_compat_l	40	0.154066	25	6	6.0.0	synth with cache (only 1: Z.swap_greater; only 1: intros; only 1: now apply Z.mul_le_mono_nonneg_l).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.firstn_skipn	40	3.609207	2004	637	2.2.2.0.0.0.0.0.0.3	synth with cache (only 1: intro; only 1: induction n as [| k iHk]; only 1: symmetry; only 1: now simpl; only 1: destruct l as [| x xs]; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: f_equal; only 1: apply iHk).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_eq_0_iff	40	40.067627	20280	3681
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.eq_mul_1	40	40.319196	17392	4067
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zplus_le_compat_l	40	40.080173	28982	1509
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_1_l	40	0.782199	249	84	0.0.0.0.0.5.0	synth with cache (only 1: intro n; only 1: apply lcm_unique; only 1: apply le_0_l; only 1: trivial using divide_1_l, le_0_1; only 1: exists 1; only 1: now nzsimpl'; only 1: trivial using divide_1_l, le_0_1).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_succ_div_gt	40	40.549203	13118	3592
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_mul_r	40	40.249910	14893	2196
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_1_r	40	0.034042	7	7	0.0.0.0.0.0.0	synth with cache (only 1: intro n; only 1: apply lcm_unique; only 1: apply le_0_l; only 1: exists 1; only 1: now nzsimpl'; only 1: trivial using divide_1_l, le_0_1; only 1: trivial using divide_1_l, le_0_l, divide_refl).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListPairs.combine_split	40	40.178693	62010	6924
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_diag	40	0.160984	53	27	0.0.0.0.0.0.1.0	synth with cache (only 1: intro n; only 1: apply lcm_unique; only 1: apply le_0_l; only 1: exists 1; only 1: now nzsimpl'; only 1: exists 1; only 1: now nzsimpl'; only 1: trivial using divide_1_l, le_0_1).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonneg_l	40	14.420187	2277	628	0.0.0.5.0.0.0.6.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: order; only 1: now apply mul_le_mono_nonneg_l; only 1: rewrite 2!min_r; only 1: order; only 1: order; only 1: now apply mul_le_mono_nonneg_l).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_eq_0	40	40.066954	16199	3492
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.divide_Zpos_Zneg_l	40	40.113688	39544	3045
coq-tactician-stdlib.8.11.dev	Coq.Sets.Image.Image.not_injective_elim	40	40.351879	75978	5654
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_div	40	40.055443	15250	3894
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_In_cons_2	40	40.055390	6608	1021
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt2.mapi_2	40	40.062645	15751	7470
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Fold.Fold_With_Restriction.fold_right_equivlistA_restr	40	40.081979	12676	1440
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_wd	40	40.065857	18620	3232
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Combining.combine_nil	40	0.006264	1	1	0	synth with cache (only 1: now intros []).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_0_l	40	0.019798	5	3	0.2.0	synth with cache (only 1: intros; only 1: bitwise; only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Combining.combine_firstn_l	40	0.041774	8	8	0.0.0.0.0.0.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: destruct l'; only 1: auto; only 1: simpl; only 1: f_equal; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Store.push_not_empty	40	10.926878	11648	1153	3.20.4.14	synth with cache (only 1: intuition; only 1: destr_eq H; only 1: pose proof (Pos.succ_not_1 (index S)) as h; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_odd	40	40.014436	2352	779
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_0_r	40	0.224595	47	17	0.4.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply andb_false_iff; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_le_compat_r	40	40.107349	39919	3213
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_succ_succ	40	40.073886	17417	7978
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.OMEGA9	40	40.050055	16926	1071
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_le_compat_l	40	40.228625	37152	2600
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_NoDupA	40	40.146613	12599	1906
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.eq_bool_alt	40	0.035549	5	5	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.max_min_antimonotone	40	40.376318	43337	2537
coq-tactician-stdlib.8.11.dev	Coq.Arith.Div2.even_2n	40	40.107093	40416	3222
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_gt_0_lt_reg_r	40	0.020792	2	2	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_lt_reg_r	40	0.007926	1	1	0	synth with cache (only 1: apply Z.mul_lt_mono_pos_r).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_0_l	40	0.019287	3	3	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_wd	40	40.132389	20982	2436
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_le_reg_r	40	0.019805	2	2	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_le_mono_pos_r).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_0_r	40	0.019516	3	3	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_l).
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.OMEGA14	40	0.284010	17	11	0.1.0.0.0	synth with cache (only 1: rewrite Z.add_shuffle1; only 1: rewrite Z.add_shuffle1; only 1: rewrite Z.add_shuffle1; only 1: rewrite <- Z.mul_add_distr_l, <- Pos2Z.opp_neg, Z.add_opp_diag_r; only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_lt_0_le_reg_r	40	0.007842	1	1	0	synth with cache (only 1: apply Z.mul_le_mono_pos_r).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_ge_reg_r	40	0.034171	2	2	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_le_mono_pos_r).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_gt_reg_r	40	0.096291	2	2	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.bal_spec	40	40.065012	11746	1336
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.OMEGA15	40	0.156405	28	11	0.1.0.2	synth with cache (only 1: rewrite ?Z.mul_add_distr_r, ?Z.mul_add_distr_l, ?Z.mul_assoc; only 1: rewrite <- !Z.add_assoc; only 1: f_equal; only 1: apply Z.add_shuffle3).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_le_sub_lt	40	40.274699	20461	5892
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.OMEGA16	40	0.051051	7	2	3.2	synth with cache (only 1: rewrite ?Z.mul_add_distr_r, ?Z.mul_add_distr_l, ?Z.mul_assoc; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Structures.Orders.TTLB_to_OTF.compare_spec	40	40.448036	165358	6494
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_lt_compat_r	40	40.087849	30111	1921
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.N2Nat.inj_max	40	40.552678	29056	6365
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.OMEGA17	40	0.051769	2	2	0.0	synth with cache (only 1: intros H ->; only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARadd_assoc2	40	40.268132	26638	1520
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListPairs.combine_nth	40	31.567221	40856	5200	1.0.27.0.0.0.0.0.0.0.5.1.1	synth with cache (only 1: induction l, l'; only 1: simpl; only 1: intros [| ] ? Heq; only 1: auto; only 1: auto; only 1: simpl; only 1: discriminate; only 1: simpl; only 1: discriminate; only 1: simpl; only 1: induction n; only 1: trivial; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_r	40	40.246809	11724	2366
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_cancel_r	40	40.174734	13400	3782
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARmul_assoc1	40	40.274333	37434	1854
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.N2Nat.inj_min	40	40.094948	27127	6931
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.between_not_exists	40	40.170245	58072	7792
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_add_le	40	40.359949	17495	3838
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.nth_le	40	40.099157	33534	4254
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_cons_eq	40	40.091853	23641	6088
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst1n_rst	40	40.240087	93214	14182
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_cons	40	0.065842	15	8	1.0.1.0	synth with cache (only 1: unfold permutation, meq; only 1: simpl; only 1: intros; only 1: congruence).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.exists_spec	40	40.213913	51229	3891
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.testbit_even_succ'	40	40.581164	22740	5169
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_lt_simpl_nonpos	40	40.201677	16217	4139
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2Nat.id	40	4.038486	1884	404	1.0.0.0.0.1.0.3.8.0.0	synth with cache (only 1: destruct n; only 1: now destruct 1 || trivial; only 1: intros H; only 1: now destruct Hn || now destruct Hm || clear; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv; only 1: now destruct 1 || trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2Nat.inj	40	0.019705	3	3	0.0.0	synth with cache (only 1: intros; only 1: rewrite <- (Z2N.id n), <- (Z2N.id m) by trivial; only 1: now f_equal).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2Nat.inj_iff	40	0.021034	5	5	0.0.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: now apply Z2N.inj; only 1: intros; only 1: now subst).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.Nat2N.id	40	0.502517	484	84	0.0.11.2.2	synth with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: rewrite Pos.of_nat_succ; only 1: now apply Nat2Pos.id).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2Nat.inj_0	40	0.005860	2	1	1	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2Nat.inj_pos	40	0.007398	1	1	0	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt3.map2_alt_equiv	40	40.120970	40316	5058
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2Nat.inj_neg	40	0.005578	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.Nat2N.inj_iff	40	0.097069	48	21	3.1.0.0.0.0	synth with cache (only 1: split; only 1: intros H; only 1: rewrite <- (id n), <- (id n'); only 1: now f_equal; only 1: intros H; only 1: now subst).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_even_abs	40	40.194506	11757	3119
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Nat2Z.inj_compare	40	40.096030	26698	7626
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zquot2_quot	40	40.052851	16452	2441
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_le_sub_lt	40	40.295323	19475	5990
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_union_intro1	40	40.191062	35773	6538
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_mul	40	40.039344	11354	2343
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zeven_ex	40	0.042803	6	3	2.0.1	synth with cache (only 1: intro H; only 1: exists (Z.div2 n); only 1: now destruct n as [| [| | ]| [| | ]]).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.le_1_l	40	40.099623	28630	4550
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetLogicalFacts.test_push	40	0.012806	1	1	0	synth with cache (only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.shiftr_specif	40	40.749444	13463	6617
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.shiftl_specif_high	40	40.631094	14980	3479
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Combining.combine_firstn_r	40	4.061706	3520	895	1.0.0.0.0.1.0.13	synth with cache (only 1: induction l, l'; only 1: reflexivity; only 1: trivial; only 1: reflexivity; only 1: simpl; only 1: specialize IHl with (l' := l'); only 1: rewrite <- IHl; only 1: f_equal).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetLogicalFacts.test_pull	40	0.009927	2	2	0.0	synth with cache (only 1: intros; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.shiftl_spec_low	40	40.680183	21811	3972
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideAuxiliary.eq_refl_iff	40	0.007272	1	1	0	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Strings.Byte.nat.of_to_nat	40	40.040587	9841	4872
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.ggcd_gcd	40	40.069654	20797	5385
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Nat2Z.inj_abs_nat	40	40.107635	37720	2926
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.ldiff_spec	40	0.013990	4	3	0.0.1	synth with cache (only 1: apply testbit_bitwise_1; only 1: destr_bool; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_union_elim	40	18.137123	11485	2289	4.4.0.1.2.1.3.0.0.1	synth with cache (only 1: simple induction y; only 1: simpl; only 1: auto with datatypes; only 1: intros a0 x0 Ha0; only 1: intros; only 1: simpl in *; only 1: case (set_add_elim _ _ _ H); only 1: auto with datatypes; only 1: intros; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Div2.div2_double_plus_one	40	40.060136	18881	3045
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_assoc	40	4.700960	1989	362	11.2.5	synth with cache (only 1: intros x y z; only 1: bitwise; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_eq	40	40.055126	13596	4019
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_0	40	1.145547	1789	83	2.2.51	synth with cache (only 1: rewrite sgn_null; only 1: auto using eq_refl, le_refl; only 1: auto using eq_refl, le_refl).
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.OMEGA10	40	40.048906	18828	1007
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.plus_is_one	40	40.086539	27754	3404
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zodd_ex	40	1.553259	270	84	4.5.0	synth with cache (only 1: exists (Z.div2 n); only 1: rewrite (Zdiv2_odd_eqn n)  at 1; only 1: now destruct n as [| [p| p| ]| [p| p| ]]).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zeven_2p	40	0.011138	2	1	1	synth with cache (only 1: now destruct p).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_nilpotent	40	40.221384	20402	2904
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersEx.PairOrderedType.compare_spec	40	40.419399	40264	3003
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_2_facts.RstarRplus_RRstar	40	40.245453	87245	13495
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2Nat.inj_succ	40	0.564396	273	84	1.3.0.1.1.1	synth with cache (only 1: unfold Z.succ; only 1: intro H; only 1: rewrite Z2N.inj_add by easy; only 1: simpl; only 1: unfold Pos.to_nat; only 1: now Nat.nzsimpl').
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.OMEGA13	40	40.058967	20414	1393
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Add.Add_app	40	1.583831	4725	90
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_r	40	40.072886	21357	5087
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_eq_0_iff	40	40.053400	13766	4269
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.OMEGA20	40	0.113022	4	4	0.0.0.0	synth with cache (only 1: unfold Zne, not; only 1: intros NE EQ; only 1: subst; only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Nat2Z.inj_add	40	40.059830	16537	3114
coq-tactician-stdlib.8.11.dev	Coq.Arith.Wf_nat.well_founded_inv_rel_inv_lt_rel	40	40.182267	66552	6913
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeAlt.OrderedType_to_Alt.compare_trans	40	40.121997	37469	5155
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_mul_mono_l	40	40.344373	13033	2652
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_0_l	40	40.065988	16541	2233
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.decidability.Z_le_lt_eq_dec	40	40.083226	26831	3164
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_In_cons_3	40	40.092480	6161	1407
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_comm	40	40.063343	17323	4361
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.OMEGA18	40	5.436555	2607	350	5.5.12.8	synth with cache (only 1: unfold Zne, not; only 1: intros NE EQ; only 1: subst; only 1: now intros ->).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.ggcd_correct_divisors	40	40.083048	24122	8494
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Fold.Fold_With_Restriction.fold_right_add_restr	40	40.133581	40389	7004
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_distr_l	40	9.788796	1513	538	0.0.0.0.0.0.2.1.0.2.0	synth with cache (only 1: intros; only 1: rewrite <- (add_cancel_l _ _ (c * b * (c * a / (c * b)))); only 1: rewrite <- div_mod; only 1: rewrite Private_NZDiv.div_mul_cancel_l; only 1: rewrite <- mul_assoc, <- mul_add_distr_l, mul_cancel_l by order; only 1: apply div_mod; only 1: tauto; only 1: tauto; only 1: order; only 1: rewrite <- neq_mul_0; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreduction.Qred_complete	40	40.079798	25693	3864
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_assoc	40	40.072628	20698	2464
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_unique_alt	40	40.340471	31982	4919
coq-tactician-stdlib.8.11.dev	Coq.Arith.Wf_nat.dec_inh_nat_subset_has_unique_least_element	40	40.208201	77783	7278
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_distr_r	40	0.109488	18	9	1.2.0	synth with cache (only 1: intros; only 1: rewrite !(mul_comm _ c); only 1: now rewrite Private_NZDiv.mul_mod_distr_l).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersTac.OrderFacts.not_ge_lt	40	40.090150	23794	7099
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_lt_mono_r	40	2.302104	799	283	0.0.10.0	synth with cache (only 1: unfold lt; only 1: rewrite 2!(mul_comm _ p); only 1: rewrite mul_compare_mono_l; only 1: apply iff_refl).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Mult.mult_S_le_reg_l	40	40.148002	55968	7613
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_comm	40	40.079269	21900	4643
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_nonneg	40	40.313411	5134	2560
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_exact	40	40.589830	13736	4519
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2Nat.inj_add	40	4.693676	3806	898	0.0.1.0.0.0.3.0.4.1.0.0.0.0.0.0.0.0.1	synth with cache (only 1: destruct n, m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: intros n m; only 1: apply Pos2Nat.inj_add; only 1: now destruct 1 || now destruct 2; only 1: simpl; only 1: trivial; only 1: simpl; only 1: intros Hn Hm; only 1: now destruct Hn || now destruct Hm || clear; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Nat2Z.inj_mul	40	40.054999	15091	3253
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.Even_succ	40	40.219746	23660	4329
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2Nat.inj_mul	40	3.985816	2499	577	1.2.0.0.0.0.0.1.4.0.0.0.0.0.0.3	synth with cache (only 1: destruct n, m; only 1: simpl; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: simpl; only 1: intros; only 1: apply Pos2Nat.inj_mul; only 1: simpl; only 1: trivial; only 1: trivial; only 1: simpl; only 1: trivial; only 1: intros Hn Hm; only 1: now destruct Hn || now destruct Hm || clear).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersTac.OrderFacts.not_gt_le	40	0.402611	181	106	0.2.0.2.0.0	synth with cache (only 1: intros x y H; only 1: destruct (P.lt_total x y); only 1: rewrite P.le_lteq; only 1: intuition; only 1: rewrite P.le_lteq; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_S_gt_0	40	40.076316	19807	2088
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_S_neq_0	40	40.123467	25704	5862
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.strong_left_induction	40	40.636695	61986	7093
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono	40	40.563377	14912	3534
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersTac.OrderFacts.le_neq_lt	40	0.135916	51	30	0.1.1	synth with cache (only 1: intros x y; only 1: rewrite ?P.le_lteq; only 1: intuition auto; subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Nat2Z.inj_sub_max	40	40.123405	26137	5087
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Z_modulo_2	40	40.054232	18861	1905
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_lt_upper_bound	40	40.572746	26575	3392
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zodd_2p_plus_1	40	2.649495	663	129	6.0.0.4.1.11	synth with cache (only 1: destruct p; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: now destruct p).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.left_induction	40	40.496161	36397	6462
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_cancel_l	40	40.325594	11280	2832
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.mod_lt	40	40.094603	28972	6666
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.In_inv	40	40.056726	6630	831
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_div_ge	40	40.029290	2206	962
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zeven_plus_Zeven	40	0.599982	255	49	1.2.1.3.0.0	synth with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: intros Ha Hb; only 1: now rewrite Z.odd_add, Ha, Hb).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zodd_plus_Zeven	40	0.050499	5	4	0.1.0.0	synth with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: intros Ha Hb; only 1: now rewrite Z.odd_add, Ha, Hb).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_pred_div_gt	40	40.062561	7605	2303
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zodd_plus_Zodd	40	0.099343	39	13	0.0.1.1	synth with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: intros Ha Hb; only 1: now rewrite Z.odd_add, Ha, Hb).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_abs_r	40	40.321284	8134	3547
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.left_induction'	40	40.384945	43402	7671
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_lt_add_lt	40	40.124367	16940	3740
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.gcd_nonneg	40	0.274091	97	46	4	synth with cache (only 1: apply le_0_l).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_le_add_lt	40	40.187623	18948	5225
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Add.Add_in	40	3.660887	1184	414	0.0.3.0.0.7.2	synth with cache (only 1: simpl; only 1: induction 1; only 1: now constructor; only 1: intuition; only 1: firstorder; only 1: firstorder; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.Involutions.inv_bij	40	12.651636	6887	162
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.lt_le_trans	40	37.942218	29111	2942	0.0.1.0.6.40	synth with cache (only 1: intros LE; only 1: intro H; only 1: apply le_lteq in H; only 1: destruct H; only 1: now apply lt_trans with m; only 1: now subst).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.strong_left_induction'	40	40.498820	30823	7993
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_abs	40	40.318747	9619	4209
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_distr_r	40	0.203045	20	9	3.2.0	synth with cache (only 1: intros; only 1: rewrite !(mul_comm _ c); only 1: now rewrite Private_NZDiv.mul_mod_distr_l).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Add.Add_length	40	0.505470	174	38	3.5.0.1	synth with cache (only 1: induction 1; only 1: auto; only 1: simpl in *; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Hurkens.TypeNeqSmallType.Paradox.paradox	40	40.675121	311635	14219
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_Add_inv	40	40.059912	15558	1796
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_factor_l	40	40.289062	9969	2533
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_square	40	40.064167	18592	4173
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.lxor_spec	40	6.035690	4374	1090	1.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.5	synth with cache (only 1: apply testbit_bitwise_2; only 1: reflexivity; only 1: destruct (compare_spec a b); only 1: rewrite max_l; only 1: subst; only 1: trivial; only 1: subst; only 1: trivial; only 1: apply lt_le_incl in H; only 1: now rewrite max_r; only 1: apply lt_le_incl in H; only 1: now rewrite max_l; only 1: destruct (compare_spec a b); only 1: rewrite max_r; only 1: subst; only 1: trivial; only 1: subst; only 1: trivial; only 1: apply lt_le_incl in H; only 1: now rewrite max_r; only 1: apply lt_le_incl in H; only 1: now rewrite max_l).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_bound_abs	40	40.077296	21321	4339
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_spec	40	40.073424	15806	5070
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.div2_spec	40	0.008866	3	2	1.0	synth with cache (only 1: simpl; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.testbit_neg_r	40	0.009063	1	1	0	synth with cache (only 1: inversion H).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.succ_lt_mono	40	40.091093	30579	3131
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_add_lt_sub_r	40	40.333430	8831	2664
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.div2_bitwise	40	40.632559	15919	3486
coq-tactician-stdlib.8.11.dev	Coq.Vectors.Fin.L_sanity	40	40.061549	17776	4126
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.lt_trans	40	40.234486	34812	2939
coq-tactician-stdlib.8.11.dev	Coq.micromega.Env.S.jump_succ	40	14.239383	22899	1514	36.0.6.1	synth with cache (only 1: rewrite <- ?jump_add; only 1: unfold jump; only 1: f_equal; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_succ_div_lt	40	40.052748	4440	1686
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListPairs.in_prod	40	40.148946	27040	5435
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.lt_ind	40	40.213787	65312	6328
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.lt_total	40	40.076105	23277	5056
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_initial.Zr	40	40.044006	7768	1384
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_le_mono_r	40	0.063971	21	7	0.0.0.4	synth with cache (only 1: rewrite 2!(mul_comm _ p); only 1: unfold le; only 1: rewrite mul_compare_mono_l; only 1: apply iff_refl).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_le_mono_l	40	1.609329	418	153	0.9.1	synth with cache (only 1: unfold le; only 1: rewrite mul_compare_mono_l; only 1: apply iff_refl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_l	40	40.080548	23499	3650
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_upper_bound	40	40.329032	19844	3565
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.le_lt_trans	40	40.377339	49273	3574
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.lt_add_r	40	0.013279	2	2	0.0	synth with cache (only 1: rewrite lt_iff_add; only 1: now exists q).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.pred_lt_mono	40	40.379291	16215	4430
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_cancel_l	40	40.339782	4543	1630
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorSpec.fold_left_right_assoc_eq	40	40.173750	65658	5228
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonpos_r	40	13.305416	3071	903	1.4.0.0.1.1.4.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite min_l by trivial; only 1: rewrite max_l; only 1: order; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonpos_l; only 1: rewrite min_r by trivial; only 1: rewrite max_r; only 1: order; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonpos_l).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_r	40	40.069586	21429	3618
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_nonneg	40	0.009341	3	2	1.0	synth with cache (only 1: intros n m; only 1: apply abs_nonneg).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_1_r	40	0.028189	7	6	0.0.0.0.0.1	synth with cache (only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: reflexivity; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.pred_sub	40	0.007939	1	1	0	synth with cache (only 1: now destruct p).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_lt	40	40.088737	27420	6724
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt2.map_NoDup	40	40.129170	28572	5999
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_comm	40	40.224519	11881	2556
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Sorted.defs.Sorted_StronglySorted	40	40.114281	34833	6924
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.In_In	40	0.028494	2	2	0.0	synth with cache (only 1: intros; only 1: Dec.fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_wd	40	40.260026	16266	2064
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.gcd_greatest	40	40.073935	23212	3555
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Subset_Included	40	0.029024	2	2	0.0	synth with cache (only 1: intros; only 1: Dec.fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.firstn_all2	40	29.444243	19553	5106	0.5.2.0.0.12.8.0.0	synth with cache (only 1: induction n; only 1: intros; only 1: simpl; only 1: firstorder; only 1: intros [| a l] H; only 1: now simpl; only 1: simpl in *; only 1: apply f_equal, IHn, Peano.le_S_n; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zsplit2	40	40.070863	23632	616
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_union_emptyL	40	8.761634	5649	1458	0.0.5.1.2.1.0.0.0.2	synth with cache (only 1: simple induction x; only 1: simpl; only 1: intros; only 1: auto with datatypes; only 1: intros a0 x0 Ha0; only 1: simpl; only 1: intros; only 1: case (set_add_elim _ _ _ H); only 1: auto with datatypes; only 1: auto with datatypes).
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_union_emptyR	40	0.015414	4	4	0.0.0.0	synth with cache (only 1: intros a x H; only 1: case (set_union_elim _ _ _ H); only 1: auto || contradiction; only 1: auto || contradiction).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.Included_Add	40	40.190747	14144	3351
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_succ_double	40	40.792947	4259	1295
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.Even_succ_succ	40	40.200358	20192	3725
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.QSeqEquiv_sym	40	40.095297	21542	4404
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_app_inv	40	40.062575	9678	1186
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_succ_le	40	40.203332	15144	4384
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorSpec.take_idem	40	40.117508	41603	5126
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_add	40	40.081381	8147	1809
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Rtauto.with_env.project_In	40	40.192314	75440	5434
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_gt_0_le_compat_r	40	40.091535	32067	2084
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_l	40	40.364250	11845	2708
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_add_le	40	40.473330	27461	4382
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_diag	40	40.183713	32188	5723
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_r	40	40.269408	12651	3441
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Equal_Same_set	40	1.632844	256	74	8.1	synth with cache (only 1: compute; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod	40	0.126675	18	9	0.0.0.2.0	synth with cache (only 1: intros a b n Hn; only 1: rewrite Private_NZDiv.mul_mod_idemp_l, Private_NZDiv.mul_mod_idemp_r; only 1: now rewrite mul_comm; only 1: order; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_sub_le_add_r	40	40.195583	9997	3259
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorSpec.take_prf_irr	40	1.091309	572	225	2.1.0.0.2.0.0.0.0	synth with cache (only 1: induction p; only 1: intros n v le le'; only 1: auto; only 1: intros n v le le'; only 1: destruct v; only 1: inversion le; only 1: simpl; only 1: apply f_equal; only 1: apply IHp).
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorSpec.uncons_cons	40	0.006346	3	1	2	synth with cache (only 1: now simpl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_add_le_sub_r	40	40.147834	10480	2643
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorSpec.append_comm_cons	40	0.006649	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle1	40	40.160003	8318	1935
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutEq.Perm.multiplicity_NoDup	40	40.089645	26909	6699
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.empty_Empty_Set	40	0.801146	260	69	2.7.3	synth with cache (only 1: vm_compute; only 1: intuition; only 1: Dec.fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListPairs.in_prod_iff	40	40.152264	14331	3124
coq-tactician-stdlib.8.11.dev	Coq.Logic.Eqdep_dec.DecidableEqDep.inj_pairP2	40	40.306561	112606	10029
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Nat2Z.inj_sub	40	40.073035	22501	4288
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.inj_pred	40	40.066469	19322	4125
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_diag	40	40.275457	16650	3404
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_pos_le	40	40.192537	25928	5996
coq-tactician-stdlib.8.11.dev	Coq.ZArith.auxiliary.Zle_mult_approx	40	40.071473	25319	2387
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.add_log2_lt	40	40.508093	9702	2604
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_le_simpl_nonpos	40	40.249089	16599	4858
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Surjective_inverse	40	40.301867	15248	1735
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_sub_diag_r	40	40.264265	4587	1746
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_land_distr_l	40	40.302741	25365	3535
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_wd	40	40.443396	17804	3221
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_mul_mono_r	40	40.327410	13201	2612
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.of_lu_eqn	40	0.046409	1	1	0	synth with cache (only 1: now induction d).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Heap.defs.merge	40	40.151939	56501	4347
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_land_distr_r	40	40.102704	18130	3177
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qfield.Qsft	40	40.060590	5694	2092
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.leb_compare	40	40.192240	29888	5434
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_unique	40	40.081270	24216	6442
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.gcd_nonneg	40	40.067948	19646	4637
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_l	40	40.365959	16083	3219
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.order_induction	40	40.488391	24346	5802
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lor_distr_l	40	40.148106	16586	3037
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lor_distr_r	40	40.113402	19523	2890
coq-tactician-stdlib.8.11.dev	Coq.Logic.Hurkens.PropNeqType.paradox	40	40.547118	244993	12694
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_gt_0_le_0_compat	40	1.735262	862	99	23.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_le_mono_pos_r).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_assoc	40	40.661480	15660	2855
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.xror_clause_clause	40	40.194670	78606	4114
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListPairs.prod_length	40	40.118829	35658	5409
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ldiff_l	40	40.061388	17841	3529
coq-tactician-stdlib.8.11.dev	Coq.NArith.NArith.TestOrder.test	40	0.042129	11	4	1	synth with cache (only 1: N.order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_add_l	40	40.293616	7413	1908
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Nat2Z.inj_pred_max	40	40.064325	18758	4336
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_sub_le_add_l	40	40.225306	10296	4530
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.dist_aux	40	40.300048	28396	10473
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Neqb_Ncompare	40	40.154689	47537	3165
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_injective	40	40.150001	53655	6276
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.ggcd_opp	40	40.070906	18129	5738
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.inj_pred_max	40	40.287886	45233	3176
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.le_antisym	40	40.264142	25290	6369
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Ncompare_Neqb	40	0.033203	1	1	0	synth with cache (only 1: now rewrite N.compare_eq_iff, <- N.eqb_eq).
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorSpec.take_app	40	5.271037	2873	649	4.2.0.7.3	synth with cache (only 1: intros; only 1: induction v; only 1: auto; only 1: simpl; only 1: now f_equal).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_case_strong	40	40.405918	39851	7762
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2Nat.abs_nat_spec	40	0.007235	1	1	0	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2Nat.abs_nat_nonneg	40	0.034458	16	6	2.0.0.2	synth with cache (only 1: destruct n; only 1: trivial; only 1: trivial; only 1: now destruct 1 || trivial).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.le_partorder	40	40.376800	20279	4393
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Neqb_complete	40	0.168367	5	1	4	synth with cache (only 1: now rewrite N.eqb_eq, <- N.compare_eq_iff).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Empty_Empty_set	40	2.101753	783	191	4.1.0.0.0.3.2	synth with cache (only 1: intros a Ha; only 1: unfold Same_set, Included, mkEns, In; only 1: split; only 1: intro; only 1: Dec.fsetdec; only 1: intro; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qfield.Qpower_theory	40	1.704619	548	163	4.0.0.0.0.3.2	synth with cache (only 1: constructor; only 1: intros; only 1: destruct n; only 1: red; only 1: simpl; only 1: trivial; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.Nplength_zeros	40	40.208673	26535	5750
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.BinList.MakeBinList.nth_jump	40	40.123192	31128	3693
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_ldiff_and	40	40.066435	17984	4733
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_ldiff	40	40.109475	23064	3809
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qfield.Examples.ex1	40	0.099348	5	5	0.0.0.0.0	synth with cache (only 1: intros (x1, x2) (y1, y2) (z1, z2); only 1: unfold Qeq, Qmult, Qplus; only 1: simpl; only 1: simpl_mult; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_square	40	40.077883	15521	3544
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.inj_min	40	40.104089	23602	7190
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qfield.Examples.ex2	40	0.084966	9	9	1.0.0.0.0.0.0	synth with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: intros; only 1: rewrite Pos.mul_comm; only 1: rewrite Pos.mul_comm; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListDec.uniquify_map	40	40.081379	26888	1976
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARmul_assoc2	40	40.194073	21086	1196
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Injective_Surjective_Bijective	40	40.391254	40618	6464
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qfield.Examples.ex3	40	0.098098	5	5	0.0.0.0.0	synth with cache (only 1: intros (x1, x2) (y1, y2) (z1, z2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: simpl_mult; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_compare_mono_l	40	40.489116	12909	4741
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.setcover_inv	40	40.140473	14241	2155
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qfield.Examples.ex4	40	0.009136	1	1	0	synth with cache (only 1: split).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qfield.Examples.ex5	40	0.017238	1	1	0	synth with cache (only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qfield.Examples.ex6	40	0.018265	1	1	0	synth with cache (only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_idemp_r	40	6.811091	1032	501	0.3.5.0	synth with cache (only 1: intros a b n Hn; only 1: rewrite !(mul_comm a); only 1: apply Private_NZDiv.mul_mod_idemp_l; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Infinite_sets.Infinite_sets.Image_set_continuous	40	40.220609	82493	7705
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_r_iff	40	40.313626	11829	5182
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qfield.Examples.ex7	40	0.287561	24	10	0.1.0.2	synth with cache (only 1: red; only 1: simpl; only 1: intro n; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod	40	0.028325	7	5	0.0.1.1.0	synth with cache (only 1: intros; only 1: rewrite Private_NZDiv.add_mod_idemp_l, Private_NZDiv.add_mod_idemp_r; only 1: reflexivity; only 1: order; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qfield.Examples.ex8	40	0.031508	4	4	0.0.0.0	synth with cache (only 1: intro n; only 1: red; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.lt_add_diag_r	40	40.085865	23114	5138
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qfield.Examples.ex9	40	0.027202	3	3	0.0.0	synth with cache (only 1: intros; only 1: compute; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.WF.Rlt_wd	40	10.464313	2345	447	0.7.7.3	synth with cache (only 1: intros H; only 1: compute; only 1: Bool.destr_bool; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.testbit_Zneg	40	40.161733	23535	3785
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_compare_mono_r	40	40.409146	17680	7603
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_succ_lt_pred	40	40.266092	19203	5194
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.inj_max	40	40.120466	26377	7202
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2Nat.id_abs	40	1.762790	849	269	1.0.0.0.1.0.0.1.0.0.0.0.1.0.0.0.4	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: apply Pos2Nat.inj; only 1: rewrite H; only 1: apply SuccNat2Pos.id_succ; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2Nat.id	40	0.021261	7	5	1.0.0.0.1	synth with cache (only 1: induction n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply SuccNat2Pos.id_succ).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_spec'	40	40.283223	9603	3631
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.testbit_odd_0	40	40.049497	16109	1164
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2Nat.inj_0	40	0.005560	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Nat2Pos.id_max	40	0.695442	338	120	3.0.1.0.1.0.0.0.2	synth with cache (only 1: induction n; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: induction n; only 1: reflexivity; only 1: rewrite Pos2Nat.inj_succ; only 1: f_equal; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.elements_aux_cardinal	40	40.248895	26524	2447
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2Nat.inj_pos	40	0.005849	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2Nat.inj_neg	40	0.006108	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.testbit_odd_succ	40	40.048653	12626	2917
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_0_l	40	3.243798	1055	301	0.12.0	synth with cache (only 1: intros; only 1: rewrite <- (add_opp_r n m); only 1: now rewrite add_move_l, sub_0_l).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.testbit_even_succ	40	40.055084	13089	5088
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.add_ok	40	40.034790	5623	675
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.QCauchySeq_bounded	40	40.141869	55365	3391
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.shiftr_spec_aux	40	40.059933	18213	4719
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_lt_mono_l	40	40.160261	19525	4451
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.length_order.lel_nil	40	40.127723	41089	5723
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.ror_clause_clause	40	40.068684	16830	7293
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.BijectionsTheory.bij_can_bij	40	40.032927	1825	167
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_cons_inv	40	40.033029	5523	531
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Nat2Z.inj_pred	40	40.075137	24360	4308
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.shiftl_spec_low	40	40.095622	33724	4578
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Nat2Z.inj_min	40	40.094161	30533	4701
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul_cancel_r	40	40.080184	22756	5532
coq-tactician-stdlib.8.11.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.cardinal_is_functional	40	40.273904	26493	4222
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Fold.fold_right_equivlistA	40	40.133507	45012	7169
coq-tactician-stdlib.8.11.dev	Coq.micromega.Refl.not_make_conj_app	40	40.229384	17619	2602
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.shiftl_spec_high	40	40.106159	17967	4795
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.partition_spec1	40	40.279330	63791	4933
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersAlt.OT_from_Alt.eq_lt	40	40.115021	18877	4888
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.firstn_length_le	40	37.593737	21321	4861	0.1.8.3.0.0.1.3.0.1.0.9	synth with cache (only 1: destruct n; only 1: inversion 1 as [H1| ?]; only 1: auto; only 1: auto; only 1: revert n; only 1: induction l as [| ? ? H]; only 1: intros; only 1: now simpl; only 1: simpl; only 1: induction n; only 1: trivial; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Fold.fold_right_add	40	40.134055	26459	3919
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.partition_spec2	40	40.275014	42855	5097
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.elements_spec1	40	40.266815	78603	4695
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.MoreInt.norm_ez_correct	40	26.380634	9638	2153	0.1.0.1.0.0.1.0.0.1.0.0.2.1.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.3.0.3.0.3.0.2.0.3.0.1	synth with cache (only 1: induction e; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: simpl; only 1: induction e; only 1: simpl; only 1: i2z; only 1: trivial; only 1: simpl; only 1: i2z; only 1: reflexivity; only 1: simpl; only 1: i2z; only 1: auto; only 1: simpl; only 1: i2z; only 1: auto; only 1: simpl; only 1: i2z; only 1: congruence; only 1: simpl; only 1: i2z; only 1: congruence; only 1: simpl; only 1: i2z; only 1: congruence; only 1: simpl; only 1: i2z; only 1: congruence; only 1: simpl; only 1: i2z; only 1: congruence; only 1: simpl; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Classes.DecidableClass.Decidable_sound_alt	40	40.413142	174015	13925
coq-tactician-stdlib.8.11.dev	Coq.Structures.Orders.TTLB_to_OTF.eqb_eq	40	22.152424	16684	6001	0.0.1.0.0.0.0.0.0.0.1.8.0	synth with cache (only 1: intros; only 1: compute; only 1: case_eq (x <=? y); only 1: repeat split; only 1: auto; only 1: intros [? ?]; only 1: congruence; only 1: constructor; only 1: repeat split; only 1: assumption; only 1: congruence; only 1: intros [? ?]; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_add_l	40	40.293142	7352	2019
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_ge	40	40.080974	23719	4793
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersAlt.OT_from_Alt.lt_compat	40	40.355707	22261	5365
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Integral_domain.integral_domain.integral_domain_minus_one_zero	40	40.016492	2991	579
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.TOMaxEqDec_to_Compare.compare_spec	40	40.344111	132943	7958
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersAlt.OT_from_Alt.eq_dec	40	0.014415	5	2	1.2	synth with cache (only 1: unfold eq, lt, compare; only 1: decide equality).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.shiftr_spec	40	40.056142	13764	5271
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.order_induction'	40	40.534908	19731	7062
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Mergesort.Sort.Permuted_merge_stack	40	40.086469	25660	6469
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.rlt_morph_Proper	40	40.233292	17979	1967
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.is_empty_1	40	40.251085	104153	3997
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_max_distr_l	40	40.370421	3610	523
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_eq_r	40	17.251636	8703	1754	0.9.0.1.5.6	synth with cache (only 1: intros z n H; only 1: apply lcm_unique; only 1: apply le_0_l; only 1: trivial; only 1: intuition; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.odd_bitwise	40	40.708858	17195	6281
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_cancel_r	40	40.478617	13561	2919
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.is_empty_2	40	40.215604	81887	6025
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.mem_1	40	40.149332	55828	3847
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Fold2.fold_right_eqlistA2	40	40.082448	24569	2911
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_decompose	40	40.075406	27407	2970
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.Peq_ok	40	42.152173	9715	1225
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.subset_2	40	0.550043	374	110	0.0.0.3.3.0	synth with cache (only 1: intros s x; only 1: unfold subset; only 1: case M.subset; only 1: auto; only 1: intros; only 1: discriminate H).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eqn0	40	40.074866	19567	3026
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ReDun.NoDup_remove_2	40	0.018514	10	3	0.1	synth with cache (only 1: apply NoDup_Add; only 1: apply Add_app).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ReDun.NoDup_cons_iff	40	0.032133	4	4	0.0.0.0	synth with cache (only 1: split; only 1: inversion_clear 1; only 1: now split; only 1: now constructor).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.singleton_Singleton	40	7.043578	3128	359	1.3.20	synth with cache (only 1: unfold Same_set, Included, mkEns, In; only 1: intuition; only 1: Dec.fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.mem_2	40	40.113900	35701	6816
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.even_wd	40	40.072196	19906	2239
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_app_inv_l	40	40.062293	7030	2610
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rle_refl	40	0.019295	6	2	4.0	synth with cache (only 1: intros; only 1: now left || now right).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.Proof_irrelevance_WEM_CC.wproof_irrelevance_cc	40	40.180995	63945	11001
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rge_refl	40	0.011437	3	3	0.0.0	synth with cache (only 1: intros; only 1: right; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.mod_bound_pos	40	40.288379	24345	3751
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Nat2Z.inj_max	40	40.084471	26122	4367
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt2.mapi_1	40	40.094908	27712	6588
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_lt_mono	40	40.585203	17521	3921
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt2.mapi_NoDup	40	39.008431	14559	5719	0.0.0.0.2.1.0.0.1.1.0.0.2.0.0.0	synth with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: intros; only 1: destruct a as (x', e'); only 1: inversion_clear Hm; only 1: constructor; only 1: contradict H; only 1: clear IHm H0; only 1: induction m; only 1: inversion H; only 1: destruct a; only 1: inversion H; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.firstn_app_2	40	40.077897	22986	4915
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARopp_mul_r	40	40.372429	29726	1766
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.ror_cnf_cnf	40	40.098942	31316	6094
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.excluded_middle_Godel_Dummett	40	0.579352	995	245	3.4.5.0.0	synth with cache (only 1: intros H A; only 1: destruct (H A); only 1: auto; only 1: left; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.testbit_odd_0	40	0.020745	12	2	7	synth with cache (only 1: now destruct a).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt2.mapi_2	40	40.064311	15682	7426
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_le_mono	40	40.135426	22603	5081
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.firstn_firstn	40	40.397288	44192	4776
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zabs.Zabs_nat_le	40	40.105356	36982	3070
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_succ_le_pred	40	40.547350	24053	6793
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidPermutation.Permutation.NoDupA_equivlistA_decompose	40	40.076345	19261	6970
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.sqrtrem_sqrt	40	40.272002	35027	2921
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.diff_spec	40	40.065750	20264	4146
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_spec	40	40.225713	16869	2771
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_compare_mono_l	40	40.488566	20132	6528
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.elements_cardinal	40	40.242476	30409	3272
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.equal_1	40	40.164519	65057	4662
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.elements_app	40	40.089494	26859	4059
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.sqrtrem_spec	40	40.104969	29692	3453
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.N2Nat.inj_iter	40	40.553617	114226	7960
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.Odd_succ_succ	40	40.203862	18318	3087
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_tac.comm	40	40.087479	4240	769
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRcomplete.CReal_absSmall	40	40.060198	18871	2675
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.Nat2N.inj_succ_double	40	0.086180	32	13	2	synth with cache (only 1: nat2N).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Fold2.Fold2_With_Restriction.fold_right_commutes_restr2	40	40.112324	35797	5974
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.lt_ind	40	40.084587	20212	10095
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.Nat2N.inj_succ	40	0.038945	9	5	1.0.2	synth with cache (only 1: induction n; only 1: trivial; only 1: nat2N).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.Bezout_wd	40	40.291837	3774	932
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_cancel_l	40	40.092446	11592	3473
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_cancel_r	40	40.379883	6090	2417
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.testbit_even_succ	40	0.099020	30	20	0.0.0.1	synth with cache (only 1: intros H; only 1: rewrite testbit_succ_r_div2 by trivial; only 1: f_equal; only 1: now destruct a).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.Nat2N.inj_pred	40	0.076005	18	12	2	synth with cache (only 1: nat2N).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.cardinal_unicity	40	40.173215	30408	6660
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.choose_2	40	5.045465	2881	1083	0.6.0.0.2.1.3	synth with cache (only 1: unfold choose; only 1: intro s; only 1: case (M.choose s); only 1: simple destruct s0; only 1: intros; only 1: discriminate H; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_le	40	40.115955	14772	6481
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.even_succ	40	40.122072	44856	2739
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_add_lt_sub_l	40	29.226301	10125	1932	0.7.19	synth with cache (only 1: intros p n m; only 1: rewrite add_comm; only 1: now rewrite (sub_lt_mono_r _ _ p), add_simpl_r).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.elements_3	40	0.542132	626	85	0.1.1.17	synth with cache (only 1: unfold elements; only 1: intros; only 1: case (M.elements s); only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.elements_3w	40	0.081243	36	16	4.0	synth with cache (only 1: intros; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Store.get_In	40	40.177644	60238	8277
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.elements_node	40	40.149831	57844	2163
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.Proof_irrelevance_CCI.proof_irrelevance_cci	40	40.340083	132697	12138
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.sqrt_spec	40	40.077907	22230	6178
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_pos	40	40.042871	8976	2773
coq-tactician-stdlib.8.11.dev	Coq.Logic.HLevels.hprop_hset	40	40.311240	127985	14196
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.ggcd_gcd	40	40.088452	27475	5207
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_div	40	40.052634	12491	4070
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Cring.cring.cring_almost_ring_theory	40	40.033003	7286	186
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.testbit_neg_r	40	2.108337	1047	217	15	synth with cache (only 1: now induction n).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_least	40	40.213874	21026	3429
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.ggcd_correct_divisors	40	40.240712	37100	3929
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_nonpos	40	10.612604	5427	1405	0.12.3.0.0.0.0	synth with cache (only 1: intros a Ha; only 1: unfold log2_up; only 1: case compare_spec; only 1: order; only 1: intros H; only 1: order_pos; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.functional_rel_reification_and_rel_choice_imp_fun_choice	40	40.079310	12611	1372
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_union_iff	40	40.136453	43371	6504
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zdivide_Zabs_l	40	40.069802	23851	3446
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.Weak_proof_irrelevance_CCI.wem_proof_irrelevance_cci	40	40.276342	81969	12442
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zdivide_Zabs_inv_l	40	0.010347	3	1	2	synth with cache (only 1: apply Z.divide_abs_l).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec0_fixpoint	40	40.288039	7382	1706
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.MoreInt.norm_ei_correct	40	40.108807	37145	967
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.skipn_firstn_comm	40	40.167854	33600	4359
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_0	40	6.902291	2120	62	2.61	synth with cache (only 1: compute in *; only 1: now rewrite recursion_0).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideAuxiliary.dec_In	40	40.051539	18212	1959
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt3.fold_right_pair_NoDup	40	40.109743	38735	4160
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qminmax.Q.plus_min_distr_l	40	40.031628	7222	1902
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_In_cons_1	40	40.100602	17931	2604
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcompare.Zcompare_succ_compat	40	40.168509	24161	5047
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_idemp_r	40	8.009176	1045	570	1.4.2.0	synth with cache (only 1: intros a b n Hn; only 1: rewrite !(mul_comm a); only 1: apply Private_NZDiv.mul_mod_idemp_l; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qround.Qceiling_Z	40	40.071333	22764	2545
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.lor_spec	40	40.216560	26894	5636
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_max_distr_r	40	40.235680	10203	3415
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Lexicographic_Product.Swap.wf_swapprod	40	40.133573	41970	9451
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.elements_2	40	4.854469	3851	647	0.1.8.15	synth with cache (only 1: intros s x; only 1: unfold elements; only 1: case (M.elements s); only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.rev_elements_app	40	40.155864	28470	3781
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod	40	4.179750	867	356	1.1.1.5.0	synth with cache (only 1: intros a b n Hn; only 1: rewrite Private_NZDiv.mul_mod_idemp_l, Private_NZDiv.mul_mod_idemp_r; only 1: now rewrite mul_comm; only 1: order; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_gt_0_compat	40	32.581104	29378	2086	0.0.1.0.1.0.1.0.0.0.1.0.1.0.1.0.0.1.11.22.11.3	synth with cache (only 1: intro H; only 1: Z.swap_greater; only 1: symmetry; only 1: destruct n as [| n| n], m as [| m| m]; only 1: simpl; only 1: now subst; only 1: simpl; only 1: now subst; only 1: simpl; only 1: now subst; only 1: simpl; only 1: now subst; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now subst; only 1: simpl; only 1: now subst; only 1: simpl; only 1: now subst; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst1n_sym	40	40.212173	73936	14895
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod_idemp_r	40	16.223195	2896	1022	0.7.4.0	synth with cache (only 1: intros a b n Hn; only 1: rewrite !(add_comm a); only 1: apply Private_NZDiv.add_mod_idemp_l; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.rbal'_match	40	40.176874	67147	3430
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.bezout_1_gcd	40	40.317407	31804	5634
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Wf_Z.natlike_ind	40	40.217575	81159	8248
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.Nat_as_OT.compare	40	40.151620	25873	5761
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt3.combine_lelistA	40	40.043608	12759	2083
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.WF.Rgt_wd	40	24.839368	5426	946	2.5.13.2	synth with cache (only 1: intro n; only 1: compute; only 1: intro H; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.Z_as_OT.lt_trans	40	0.026337	4	2	2.0	synth with cache (only 1: intros x y z; only 1: intuition auto; Z.Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt3.combine_sorted	40	40.080855	25356	5157
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Rings_Z.Zdi	40	40.130457	9947	1169
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zle_bool_antisym	40	40.115472	38288	4444
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_alt.Zpower_alt_succ_r	40	40.063292	18250	4433
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.subset_spec	40	40.084729	25754	5287
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.Z_as_OT.lt_not_eq	40	0.007740	1	1	0	synth with cache (only 1: Z.order).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.mem_1	40	40.125073	38058	3476
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.equal_spec	40	40.101964	32932	6246
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_r_iff	40	40.327189	14030	4133
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_diag	40	40.116676	16239	4880
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.cardinal_spec	40	0.012105	4	2	2.0	synth with cache (only 1: intros; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonpos_l	40	40.238572	9062	2374
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_compare_mono_r	40	40.078574	18017	7463
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zle_bool_trans	40	1.051342	948	103	1.22	synth with cache (only 1: rewrite !Z.leb_le; only 1: Z.order).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.In_MapsTo	40	40.170988	63289	6137
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rstn1_rst	40	1.477295	1790	610	1.3.1.1.1.2.0.1.0.0	synth with cache (only 1: induction 1; only 1: auto with sets; only 1: constructor 4 with y; only 1: auto; only 1: case H; only 1: constructor 4 with y; only 1: auto with sets; only 1: auto with sets; only 1: constructor 3; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.testbit_bitwise_1	40	40.665533	17462	2857
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_spec'	40	40.078867	15063	1818
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_eq_0_l	40	40.118598	18434	4584
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_wd	40	40.071321	12560	2755
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.plus_tail_plus	40	40.058992	17192	5571
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qminmax.Q.plus_min_distr_r	40	3.722056	497	172	0.0.0.0.0.0.0.0.3.0	synth with cache (only 1: intros; only 1: rewrite (Qplus_comm n p), (Qplus_comm m p), (Qplus_comm _ p); only 1: apply min_monotone; only 1: intros x x' Hx; only 1: rewrite Hx; only 1: auto with qarith; only 1: intros x x' Hx; only 1: apply Qplus_le_compat; only 1: q_order; only 1: q_order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_wd	40	40.176464	13263	2839
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.Involutions.inv_inj	40	40.099328	10723	847
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst_rst1n	40	40.211146	71426	9310
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_distr_l	40	40.437432	9551	2942
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_str_pos	40	40.500157	14920	2637
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.subset_1	40	40.073066	24364	3314
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.gt_lt	40	0.026730	12	2	4	synth with cache (only 1: apply N.gt_lt_iff).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.lt_gt	40	0.028132	9	2	1	synth with cache (only 1: apply gt_lt_iff).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt3.map2_sorted	40	40.149666	24969	6914
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.firstn_skipn_rev	40	40.296482	39449	5607
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.gcd_greatest	40	40.075309	18784	4054
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_spec	40	40.046957	12425	2602
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.firstn_rev	40	40.352034	3306	1163
coq-tactician-stdlib.8.11.dev	Coq.Sets.Classical_sets.Ensembles_classical.Complement_Complement	40	40.165247	69145	4479
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.skipn_rev	40	40.328012	4295	1390
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonpos_l	40	25.125975	4673	1070	1.1.6.1.1.8.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite max_r by trivial; only 1: apply min_r; only 1: now apply mul_le_mono_nonpos_l; only 1: rewrite max_l by trivial; only 1: apply min_l; only 1: now apply mul_le_mono_nonpos_l).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_gt_0_lt_compat_l	40	40.068373	21715	2965
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.removelast_firstn	40	40.224049	5846	1681
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.Zlt_cotrans	40	40.088667	33157	2670
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.add_mod	40	0.119889	27	21	0.0.0.2.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: rewrite Private_NZDiv.add_mod_idemp_l, Private_NZDiv.add_mod_idemp_r; only 1: reflexivity; only 1: order; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.firstn_removelast	40	40.093070	25078	6597
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_succ_square	40	40.113302	14790	4616
coq-tactician-stdlib.8.11.dev	Coq.Arith.Mult.odd_even_lem	40	40.120250	43838	4403
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcompare.Zcompare_mult_compat	40	40.092744	24167	6202
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_ge_compat	40	40.082487	31180	2479
coq-tactician-stdlib.8.11.dev	Coq.Logic.WKL.inductively_barred_at_monotone	40	40.151664	42211	6241
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt3.combine_NoDup	40	40.166272	59576	5312
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_gt_0_lt_0_reg_r	40	0.020680	3	2	1.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_pos_cancel_r).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt3.combine_1	40	40.110829	33674	6952
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_alt.Zpower_alt_neg_r	40	3.331051	1012	235	0.0.0.4.0.0.0.1.0.3	synth with cache (only 1: destruct b as [| b| b]; only 1: intros Hb; only 1: Z.bitwise; only 1: easy; only 1: intros Hb; only 1: simpl; only 1: now elim Hb; only 1: intros Hb; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.shiftl_succ_r	40	7.148468	3043	833	2.1.3.1.4.0.7.0.0	synth with cache (only 1: destruct n; only 1: simpl; only 1: now destruct a; only 1: simpl; only 1: induction a; only 1: trivial; only 1: simpl; only 1: f_equal; only 1: apply Pos.iter_succ).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.div2_spec	40	0.007034	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_le_compat	40	40.103239	37245	2529
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_unique	40	40.352976	14511	3448
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_eq_0	40	40.358111	18382	5748
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_eq_0_iff	40	40.068544	18364	5155
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_lower_bound	40	40.636448	10841	4602
coq-tactician-stdlib.8.11.dev	Coq.Sets.Image.Image.cardinal_Im_intro	40	40.232608	89010	10121
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zgt_square_simpl	40	0.119635	48	14	0.7	synth with cache (only 1: Z.swap_greater; only 1: apply Z.square_lt_simpl_nonneg).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Rings_Q.Qri	40	40.038682	7433	1205
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_comm	40	40.077662	21644	4371
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_diag	40	40.190978	24108	6637
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.eq_option_alt	40	40.072446	24937	3863
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_In_cons_2	40	40.106689	12423	1650
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.ge_le	40	0.059017	23	5	5	synth with cache (only 1: apply N.ge_le_iff).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.le_ge	40	0.007367	1	1	0	synth with cache (only 1: apply ge_le_iff).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_land_distr_l	40	40.064910	18872	2451
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_lt_compat2	40	40.074049	25921	1967
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_diag	40	40.320500	21827	3219
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Fold2.Fold2_With_Restriction.fold_right_equivlistA_restr2	40	40.107369	34007	5863
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.add_mod_idemp_r	40	6.866000	1058	461	0.3.5.0	synth with cache (only 1: intros a b n Hn; only 1: rewrite !(add_comm a); only 1: apply Private_NZDiv.add_mod_idemp_l; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_lt_compat	40	40.332423	41374	2993
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARopp_zero	40	40.232784	11168	2880
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_lt_mono_l	40	40.536552	17131	4493
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.land_spec	40	40.097361	30208	4510
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_land_distr_r	40	40.096356	18542	3219
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_r	40	40.290180	7967	2877
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.event_O	40	40.232828	94257	4852
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.Nplength_one	40	23.106101	23211	3385	0.4.1.6.2.0.9.3.2.0.7	synth with cache (only 1: destruct a; only 1: intros; only 1: simpl; only 1: simpl in *; only 1: inversion H; only 1: intros; only 1: injection H as [=<-]; only 1: induction p; only 1: trivial; only 1: easy; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Map.Tget_Tmap	40	40.293705	78923	4961
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono	40	40.275655	22820	4137
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.bal_ok	40	40.041834	10528	603
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_sub_lt_add_r	40	40.358851	12865	4625
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_app	40	40.111273	21974	6814
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Rings_Q.Qcri	40	2.105310	714	147	1.0.0.1.0.6.10	synth with cache (only 1: intros H1; only 1: intros; only 1: apply Qeq_sym; only 1: red; only 1: simpl; only 1: rewrite Pos.mul_comm; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Rings_Q.Q_one_zero	40	0.014298	2	2	0.0	synth with cache (only 1: unfold Qeq; only 1: auto with qarith).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Combining.combine_firstn	40	40.165558	27489	8919
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.elements_spec2w	40	40.301433	71904	4888
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_1_mul_neg	40	40.155837	12879	3089
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.ldiff_spec	40	40.115044	36743	5898
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.Nat2N.inj	40	40.275295	73633	5552
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst_rst1n_iff	40	40.255454	65872	13445
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.Nat2N.inj_sub	40	0.021813	1	1	0	synth with cache (only 1: nat2N).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.Nat2N.inj_mul	40	0.022346	1	1	0	synth with cache (only 1: nat2N).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.Nat2N.inj_div2	40	0.019079	1	1	0	synth with cache (only 1: nat2N).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.Nat2N.inj_double	40	40.294003	11669	2876
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_even_nonneg	40	40.216450	19049	3578
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.Nat2N.inj_min	40	0.022839	1	1	0	synth with cache (only 1: nat2N).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.Nat2N.inj_max	40	0.023181	1	1	0	synth with cache (only 1: nat2N).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.testbit_bitwise_2	40	40.589077	20460	4913
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.choose_spec2	40	7.727737	3902	1073	1.0.0.1.0.4.7	synth with cache (only 1: unfold Empty; only 1: destruct s; only 1: intros; only 1: intro; only 1: inv; only 1: intros; only 1: discriminate).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt3.map2_0	40	40.068887	18326	5934
coq-tactician-stdlib.8.11.dev	Coq.Reals.ClassicalDedekindReals.isLowerCut_hprop	40	40.158160	61802	5064
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_add_le_sub_l	40	40.282580	15673	2763
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.In_alt	40	7.480478	6867	1372	0.1.1.0.2.1.0.1.5.0.0.0.2.5	synth with cache (only 1: firstorder; only 1: induction H; only 1: auto; only 1: auto; only 1: auto; only 1: induction H; only 1: exists e; only 1: auto; only 1: destruct IHIn as (e, He); only 1: exists e; only 1: auto; only 1: destruct IHIn as (e, He); only 1: exists e; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Nat2Pos.inj_iff	40	23.636934	15597	3956	2.0.1.1.5.9	synth with cache (only 1: intro H1; only 1: intro H2; only 1: split; only 1: intros H; only 1: now rewrite <- (id n), <- (id m), H; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalN.Unsigned.of_to	40	40.098527	32851	5981
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Nat2Pos.inj_succ	40	0.012151	4	3	0.1.0	synth with cache (only 1: destruct n; only 1: now destruct 1; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_union_nodup	40	40.317934	64119	9203
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideAuxiliary.dec_In	40	40.085731	26187	3722
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.mul_reg_l	40	0.017955	12	3	1	synth with cache (only 1: apply mul_cancel_l).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.mul_reg_r	40	0.027791	18	5	0.4	synth with cache (only 1: rewrite (N.mul_comm n p), (N.mul_comm m p); only 1: exact (fun Hp => proj1 (mul_cancel_l n m p Hp))).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.add_diag	40	0.115985	3	3	0.0.0	synth with cache (only 1: rewrite two_succ; only 1: nzsimpl; only 1: order').
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_lor_distr_l	40	40.064837	19915	2446
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.land_spec	40	40.682997	46763	3397
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_le_add_r	40	29.611259	7987	2532	1.17.2	synth with cache (only 1: intros n m; only 1: symmetry; only 1: now rewrite (sub_le_mono_r _ _ p), add_simpl_r).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_pos_iff	40	40.185862	30193	3884
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rdefinitions.total_order_T	40	40.112184	40210	3060
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Add.Add_split	40	40.383314	37596	4816
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.succ_plus_discr	40	40.117326	36262	4436
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.lor_spec	40	40.838544	30092	4077
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2Nat.inj_sub	40	40.092187	27454	6304
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.OMEGA19	40	40.062353	21559	1359
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_lor_distr_r	40	40.078035	22764	3017
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_min_distr_r	40	12.314001	1884	574	0.0.0.3.0.0.0.6.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: order; only 1: now apply sub_le_mono_r; only 1: rewrite 2!min_r; only 1: order; only 1: order; only 1: now apply sub_le_mono_r).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersEx.PositiveOrderedTypeBits.bits_lt_antirefl	40	40.535473	67577	2714
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.intro_Z	40	40.062428	21763	2308
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_0	40	34.429444	14948	4145	1.1.0.0.0.0.2.28	synth with cache (only 1: unfold sqrt_up; only 1: case compare_spec; only 1: symmetry; only 1: trivial; only 1: intro n; only 1: order; only 1: symmetry; only 1: now rewrite ?Hx).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ldiff_l	40	40.067598	19926	3390
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_2_facts.Lemma1	40	40.174697	48374	14070
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_inj_l	40	40.420934	18600	3406
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.Zlt_cotrans_pos	40	40.059802	20201	1560
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2Nat.inj_pred	40	40.105560	36085	3658
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gauss	40	40.186317	22022	5604
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_ldiff_and	40	40.075932	19536	4462
coq-tactician-stdlib.8.11.dev	Coq.Arith.Mult.mult_acc_aux	40	40.037089	9817	3103
coq-tactician-stdlib.8.11.dev	Coq.Strings.Byte.nat.to_of_nat	40	40.152112	52860	7254
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_mod	40	40.187605	22904	6351
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_lt_mono	40	40.231803	21587	3707
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2Nat.inj_compare	40	39.950369	24325	5411	0.0.0.0.1.0.8.1.2.2.1.0.1.1.0.0.7	synth with cache (only 1: destruct n, m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now destruct (Pos2Nat.is_succ p) as (n, ->); only 1: easy || now destruct y; only 1: simpl; only 1: now destruct (Pos2Nat.is_succ p) as (n, ->); only 1: intros; only 1: now destruct Hn || now destruct Hm || clear; only 1: symmetry; only 1: simpl; only 1: apply Pos2Nat.inj_compare; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ldiff	40	40.099555	21910	2928
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_spec'	40	40.056314	14900	3781
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.VALUE_OF_BOOLEAN_VECTORS.binary_value	40	0.025568	22	4	6	synth with cache (only 1: constructor).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.lt_1_mul_pos	40	40.383488	14189	2768
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2Nat.inj_le	40	40.116156	37962	5136
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_succ_succ	40	40.176469	13119	4013
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.VALUE_OF_BOOLEAN_VECTORS.two_compl_value	40	0.030238	8	6	2.0.0.0.0.0	synth with cache (only 1: refine (nat_rect _ _ _); only 1: intros; only 1: exact 0%Z; only 1: intros; only 1: inversion H0; only 1: exact (bit_value h + 2 * H H2)%Z).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_spec'	40	40.085606	16231	3353
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.lxor_spec	40	40.085317	27274	4434
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_eq	40	40.089890	22746	5077
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2Nat.inj_le	40	0.017298	3	3	0.0.0	synth with cache (only 1: intros Hn Hm; only 1: unfold Z.le; only 1: now rewrite nat_compare_le, Z2Nat.inj_compare).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.compare_opp	40	3.053838	1228	710	1.0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0.6	synth with cache (only 1: destruct n, m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite <- ?Pos.compare_antisym; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply Pos.compare_antisym).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2Nat.inj_lt	40	0.017138	3	3	0.0.0	synth with cache (only 1: intros Hn Hm; only 1: unfold Z.lt; only 1: now rewrite nat_compare_lt, Z2Nat.inj_compare).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2Nat.inj_lt	40	40.102244	31307	3961
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt3.map2_1	40	40.220210	23460	7582
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreduction.Qred_eq_iff	40	40.481970	27545	3197
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_compat_l	40	40.618215	7801	4074
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zeven_plus_Zodd	40	40.091133	31488	4647
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_lt	40	40.279167	12686	3627
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_wd	40	40.315798	10122	1776
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2Nat.inj_min	40	40.075128	22996	4741
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.factorDenom	40	34.306170	12961	2938	0.0.0.0.19.0.0.3	synth with cache (only 1: intros; only 1: unfold Qeq; only 1: simpl; only 1: induction a as [a IH| a IH| ]; only 1: simpl; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_inj_r	40	40.553691	14238	2707
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.mem_eq	40	0.848509	93	55	0.0.1.0.1.0.0	synth with cache (only 1: intros; only 1: generalize (mem_iff s x), (mem_iff s y), (In_eq_iff s H); only 1: destruct (mem x s); only 1: intuition; only 1: destruct (mem y s); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.opp_eq_mul_m1	40	4.497433	1516	93	43	synth with cache (only 1: now rewrite mul_comm).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Fold2.Fold2_With_Restriction.fold_right_add_restr2	40	40.164292	25805	3768
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_mul_0	40	40.352256	10636	2755
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_add	40	40.710242	12320	2093
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.le_ind	40	40.353901	16843	7987
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zeven_mult_Zeven_l	40	40.110924	43883	1847
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2Nat.inj_succ_abs	40	0.860429	484	98	6.6.0.0.3	synth with cache (only 1: destruct n; only 1: simpl; only 1: reflexivity; only 1: now rewrite <- !Zabs_N_nat, Zabs2N.inj_succ, N2Nat.inj_succ; only 1: now rewrite <- !Zabs_N_nat, Zabs2N.inj_succ, N2Nat.inj_succ).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul_le	40	0.815245	238	91	0.1.0.1.1.0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite mul_assoc, (mul_comm b c), <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: auto; only 1: apply Private_NZDiv.mul_div_le; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_mul_0_r	40	0.215834	127	44	1.2.2.0.0	synth with cache (only 1: intros n m H1 H2; only 1: apply eq_mul_0 in H1; only 1: destruct H1 as [H1| H1]; only 1: false_hyp H1 H2; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.testbit_even_0	40	40.124130	44268	2619
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_le_add_le	40	40.165494	14678	5310
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.MapsTo_1	40	1.898179	1502	200	0.2.2.18.5	synth with cache (only 1: intros; only 1: apply InA_eqA with (x, e); only 1: eauto with *; only 1: eauto with *; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_cases	40	40.225853	18374	5372
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_idemp_l	40	40.167539	12994	3410
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_small_iff	40	40.443962	13797	3948
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mod	40	40.059803	15696	4467
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2Nat.inj_mul_abs	40	1.081504	401	196	0.0.0.0.0.0.0.0.0.0.0.0.1.0.1.0.0.0.1	synth with cache (only 1: destruct n, m; only 1: simpl; only 1: auto; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Add.Add_inv	40	40.305259	58488	9710
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_lt_0_reg_r	40	16.353172	13162	998	0.1.0.1.1.1.1.0.2.1.1.1.0.0.1.0.1.0.33	synth with cache (only 1: destruct n, m; only 1: auto; only 1: reflexivity; only 1: simpl; only 1: easy; only 1: intros H; only 1: easy; only 1: simpl; only 1: auto; only 1: simpl; only 1: easy; only 1: intros H; only 1: destr_eq H; only 1: simpl; only 1: intros; only 1: destr_eq H; only 1: simpl; only 1: intros; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonpos_r	40	14.692519	3320	1261	5.0.0.1.3.2.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite max_r by trivial; only 1: rewrite min_r; only 1: order; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonpos_l; only 1: rewrite max_l by trivial; only 1: rewrite min_l; only 1: order; only 1: now apply mul_le_mono_nonpos_r).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zle_minus_le_0	40	0.079750	77	7	13	synth with cache (only 1: apply Z.le_0_sub).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_app_inv_r	40	40.061798	7767	1992
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_wd	40	40.362653	15369	1992
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_small_iff	40	40.429758	11563	6908
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalZ.of_to	40	40.099381	33877	4647
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_null_iff	40	40.113828	36768	5194
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.empty_1	40	0.659679	337	73	4.4.7	synth with cache (only 1: intros m; only 1: intuition; only 1: inversion_clear H).
coq-tactician-stdlib.8.11.dev	Coq.Vectors.Fin.L_R	40	40.147350	57191	4460
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_lt	40	40.132426	8795	3356
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rstn1_trans	40	14.730962	32348	3687	0.0.3.0.0.3.17.0.15	synth with cache (only 1: destruct 1; only 1: auto; only 1: induction 1; only 1: right with y; only 1: auto; only 1: auto with sets; only 1: right with y0; only 1: tauto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_lt_add_r	40	40.330803	10099	2503
coq-tactician-stdlib.8.11.dev	Coq.micromega.Env.S.jump_pred_double	40	40.076716	21715	6244
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.WF.lt_wf	40	40.402188	49502	4972
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_le_mono	40	40.290524	27766	4186
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.lt_not_add_l	40	40.136248	21025	7074
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.same_gen	40	40.098335	31676	1669
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_nonneg	40	29.282795	6760	2428	0.0.0.0.0.18.0	synth with cache (only 1: intros a; only 1: unfold log2_up; only 1: case compare_spec; only 1: order; only 1: intros H; only 1: order_pos; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_lt_succ	40	40.268855	23969	8333
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.pow_gt_1	40	40.272457	40917	5568
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_comm	40	40.223920	23115	3607
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.neq_mul_0	40	40.272826	11632	2842
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_wd	40	40.071660	21129	3841
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_add	40	40.609715	13110	2066
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_divide_iff	40	40.080320	22802	5535
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_mask_pos'	40	40.335844	32292	5602
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.choose_spec1	40	24.791230	22669	3653	0.5.11.1.1.0.2.7	synth with cache (only 1: induction s; only 1: intros; only 1: discriminate; only 1: simpl; only 1: intros H; only 1: inversion 1; only 1: constructors; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_xI_xI	40	0.029964	5	4	0.1.0.0	synth with cache (only 1: intros H; only 1: unfold sub; only 1: simpl; only 1: now destruct (sub_mask_pos n m H) as (p, ->)).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_sub_distr_l	40	40.212753	7606	1920
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_succ_r	40	40.762824	17135	4789
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_xI_xO	40	0.022053	4	4	0.0.0.0	synth with cache (only 1: intros H; only 1: unfold sub; only 1: simpl; only 1: now destruct (sub_mask_pos n m H) as (p, ->)).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_mask_pos	40	40.183468	11210	3013
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_inter_intro	40	40.099108	29188	5621
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.rem_mul_r	40	31.523703	6185	1626	1.2.2.5.2.1.0.0	synth with cache (only 1: intros a b c Hb Hc; only 1: apply add_cancel_l with (b * c * (a / (b * c))); only 1: rewrite <- div_mod by (apply neq_mul_0; split; order); only 1: rewrite <- Private_NZDiv.div_div by trivial; only 1: rewrite add_assoc, add_shuffle0, <- mul_assoc, <- mul_add_distr_l; only 1: rewrite <- div_mod by order; only 1: rewrite (div_mod a b)  at 1 by order; only 1: now rewrite mul_comm).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zeven_mult_Zeven_r	40	40.115879	47176	1799
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.odd_succ_succ	40	40.232683	17074	3585
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_neg_iff	40	40.231810	29711	8060
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.Add_covers	40	40.112863	34252	7689
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_length_1_inv	40	40.096160	19751	2175
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_succ_or	40	40.202266	28758	7162
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Rtauto.with_env.project	40	40.101580	32901	6322
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt3.combine_l_1	40	40.089038	25556	7744
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_0_l	40	40.194225	15067	3168
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec_fixpoint	40	22.890992	5069	1475	0.0.2.1.0.0.0.2.1.0.0.11.0	synth with cache (only 1: intros; only 1: rewrite strong_rec_alt, strong_rec0_succ; only 1: apply step_good; only 1: intros m Hm; only 1: symmetry; only 1: setoid_replace n with (S m + (n - S m)); only 1: apply strong_rec0_more_steps; only 1: apply lt_succ_diag_r; only 1: rewrite add_comm; only 1: symmetry; only 1: apply sub_add; only 1: rewrite le_succ_l; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod_idemp_l	40	40.193819	9680	2336
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_0_r	40	40.292246	16228	4002
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_true	40	40.226859	13003	2705
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorSpec.splitat_append	40	40.087340	27287	3966
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsLUB.is_upper_bound_dec	40	41.958712	17314	2194
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_sub_lt_add_l	40	40.329981	17679	5845
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_0_l	40	2.384471	1062	242	0.0.0.3.0.10	synth with cache (only 1: unfold lcm; only 1: intro n; only 1: nzsimpl; only 1: rewrite abs_eq; only 1: auto using eq_refl, le_refl; only 1: order || apply lt_0_1).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Add.incl_Add_inv	40	40.167818	46655	7002
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle2	40	40.127709	8822	1941
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_0_r	40	0.253261	56	27	0.1.0.1.0.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: order || apply lt_0_1; only 1: exists 0; only 1: now nzsimpl; only 1: apply divide_refl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutEq.Perm.NoDup_permut	40	40.086517	25810	5524
coq-tactician-stdlib.8.11.dev	Coq.ZArith.auxiliary.Zmult_le_approx	40	40.098461	35637	1891
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.inj_iter	40	40.135938	43607	6816
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_m1_neg	40	40.274865	20181	5732
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2Nat.inj_max	40	40.083220	26018	4748
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_divide_iff	40	40.247534	25354	5437
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ReDun.NoDup_Add	40	40.280413	36437	7513
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_bezout	40	40.300189	30707	3745
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_false	40	40.063413	17498	4778
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_increasing_inv	40	40.438816	14208	3400
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_1	40	40.087685	24121	6073
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_eqb	40	40.096248	12679	2615
coq-tactician-stdlib.8.11.dev	Coq.Logic.Eqdep_dec.inj_pair2_eq_dec	40	40.336271	127355	13027
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.of_lu_revapp	40	40.047150	11645	3061
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.divide_mul_split	40	40.481623	31469	6950
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_eqb	40	40.093847	27784	4868
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Heap.defs.insert	40	40.208450	61468	2262
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_le_0_reg_r	40	40.252144	33301	2240
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.ror_opt_cnf_cnf	40	40.106731	34690	5389
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_iff	40	40.040946	10944	2869
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mul_r	40	16.432060	4273	1172	0.0.1.7.1.2.0.0	synth with cache (only 1: intros a b c Hb Hc; only 1: apply add_cancel_l with (b * c * (a / (b * c))); only 1: rewrite <- div_mod by (apply neq_mul_0; split; order); only 1: rewrite <- Private_NZDiv.div_div by trivial; only 1: rewrite add_assoc, add_shuffle0, <- mul_assoc, <- mul_add_distr_l; only 1: rewrite <- div_mod by order; only 1: apply div_mod; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_2	40	40.092894	19226	4098
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_eq	40	40.092109	29462	3528
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_add_le_sub_r	40	40.298304	10842	4052
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_iff	40	40.420806	23623	6525
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_neq	40	40.020362	3330	1031
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.Pphi0	40	32.599483	10581	516	53.0	synth with cache (only 1: simpl; only 1: CRelationClasses.simpl_crelation).
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorSpec.append_splitat	40	40.073013	22429	4531
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_le	40	40.154317	17157	5212
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.dist_Desc_concat	40	40.339501	37406	6838
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_1	40	5.213218	1963	498	1.5.0.1.0.0.9	synth with cache (only 1: unfold log2_up; only 1: case compare_spec; only 1: symmetry; only 1: order; only 1: intro n; only 1: order; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nxor_eq_true	40	40.208793	52347	3212
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.NatSeq.seq_length	40	9.756557	13163	1428	4.4.4.0.4.0.4.10	synth with cache (only 1: intro n; only 1: induction n; only 1: intros; only 1: Nat.bitwise; only 1: trivial; only 1: intro m; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.WF.gt_wf	40	40.455511	30437	7363
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Nat2Pos.id	40	40.099907	33194	6134
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.BinList.MakeBinList.nth_pred_double	40	40.134074	43753	5108
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.RealField.RTheory	40	40.080988	28070	5094
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2Nat.inj_add_abs	40	9.976037	6709	1542	2.0.2.0.0.0.2.0.2.0.0.0.0.0.0.0.0.0.14	synth with cache (only 1: destruct n, m; only 1: simpl; only 1: auto; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply Pos2Nat.inj_add; only 1: simpl; only 1: apply Pos2Nat.inj_add; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply Pos2Nat.inj_add; only 1: simpl; only 1: apply Pos2Nat.inj_add).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_le	40	1.068037	348	126	1.1.0.1.1.0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite mul_assoc, (mul_comm b c), <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: auto; only 1: apply Private_NZDiv.mul_div_le; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.le_sqrt_sqrt_up	40	40.073722	20124	3615
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_eqb	40	40.078328	24242	2597
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListDec.uniquify	40	40.143979	17335	3048
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_inter_elim	40	5.011954	1748	656	2.3.1.2.0.1.0	synth with cache (only 1: simple induction x; only 1: simpl; only 1: tauto; only 1: intros; only 1: generalize (set_mem_correct1 a0 y); only 1: intros; only 1: eauto with datatypes).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_iff	40	40.062157	18151	3615
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.testbit_ones_nonneg	40	3.788085	1761	325	0.0.11.0.0.0.0.0.19	synth with cache (only 1: destruct (leb_spec 0 i), (ltb_spec i n); only 1: rewrite ?testbit_neg_r, ?ones_spec_low, ?ones_spec_high by auto; only 1: trivial; only 1: rewrite ?testbit_neg_r, ?ones_spec_low, ?ones_spec_high by auto; only 1: trivial; only 1: rewrite ?testbit_neg_r, ?ones_spec_low, ?ones_spec_high by auto; only 1: order'; only 1: rewrite ?testbit_neg_r, ?ones_spec_low, ?ones_spec_high by auto; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Fin2Restrict.extend_ok	40	40.411436	33952	3833
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.MapsTo_1	40	15.539287	17222	2375	0.0.6.3.21	synth with cache (only 1: intros A n AB AS m; only 1: induction 1; only 1: eauto with ordered_type; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_gt_lin_r	40	40.364007	24151	4109
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_add	40	40.735331	14039	3680
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qfield.Examples.ex10	40	40.038629	9386	2564
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.covers_Add	40	40.159582	18137	5178
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_div	40	40.365888	13563	3635
coq-tactician-stdlib.8.11.dev	Coq.Sets.Infinite_sets.Infinite_sets.Image_set_continuous'	40	40.081411	25367	5947
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qfield.Qopp_plus	40	0.188338	35	19	1.0.0.0.2	synth with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: intros; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_sub	40	40.347158	19935	5994
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qfield.Qopp_opp	40	0.037086	4	4	0.0.0.0	synth with cache (only 1: red; only 1: simpl; only 1: intros; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Nat2Pos.inj	40	40.081397	23792	4302
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_pred_le_succ	40	40.246691	18597	5344
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2Nat.inj_succ	40	40.092027	18265	2164
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_sub_distr_l	40	40.072583	17791	5286
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ReDun.NoDup_remove	40	40.249332	29530	5060
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_l_nonneg	40	4.395904	4779	565	0.0.0.5.0.23.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: auto; only 1: exists n; only 1: now nzsimpl'; only 1: trivial using divide_refl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.add_spec	40	40.030313	7479	1959
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_r_nonneg	40	0.018502	6	6	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: auto; only 1: trivial using divide_refl; only 1: trivial using divide_1_l, le_0_1, divide_refl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_0_r	40	40.404946	16657	5398
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutEq.Perm.permut_In_In	40	4.234100	3105	547	1.5.5.3.2.1	synth with cache (only 1: intros x y z; only 1: do 2 rewrite multiplicity_In; only 1: unfold PermutSetoid.permutation, meq; only 1: intros H; only 1: rewrite H; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.rev_elements_node	40	40.469821	64008	3002
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_eq	40	40.113808	9886	3000
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_sub_distr_r	40	40.732711	18643	5416
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rrepr_0	40	40.077827	25020	3007
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.ratom_cnf	40	40.106300	33941	7351
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_cauchy	40	40.093919	13453	1976
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_length_1	40	40.181531	72842	5069
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Fin_Finite	40
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.tail_add_spec	40	40.075312	14044	3757
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_wd	40	40.125177	26908	4018
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_diag_nonneg	40	1.178547	1179	210	0.0.0.0.13.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: auto; only 1: trivial using divide_refl; only 1: trivial using divide_refl; only 1: trivial using divide_refl).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_lt_mono_l	40	40.404143	27477	3773
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2Nat.inj_add	40	40.092144	27267	6097
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.tail_addmul_spec	40	40.073562	23808	2720
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ReDun.NoDup_remove_1	40	40.210115	63314	5083
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2Nat.inj_mul	40	40.083287	26076	5284
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersAlt.OT_from_Alt.compare_spec	40	40.125358	33547	9880
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.choose_spec1	40	40.351213	101525	4026
coq-tactician-stdlib.8.11.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.card_Add_gen	40	40.247510	41189	9508
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.NatSeq.seq_NoDup	40	2.661951	9288	129
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_compare_mono_l	40	40.372641	24844	3677
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.choose_spec2	40	40.301885	66570	4176
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.MoreInt.norm_ep_correct	40	40.096660	37702	1677
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.In_1	40	3.470951	3463	435	0.0.2.7.2.12	synth with cache (only 1: intros m Hm x y; only 1: intro H; only 1: induction H; only 1: eauto with ordered_type; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Fold2.fold_right_commutes2	40	40.109133	33054	5394
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.Raw2SetsOn.lt_strorder	40	40.279964	93984	4777
coq-tactician-stdlib.8.11.dev	Coq.Classes.DecidableClass.Decidable_complete_alt	40	40.304231	121116	10293
coq-tactician-stdlib.8.11.dev	Coq.Structures.Orders.TTLB_to_OTF.eq_equiv	40	40.213008	60364	3773
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.eval_cnf_ff	40	1.484718	871	175	0.1.5.7.0	synth with cache (only 1: unfold eval_cnf; only 1: split; only 1: intros; only 1: now apply H; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.eval_cnf_tt	40	0.015208	1	1	0	synth with cache (only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_wd	40	40.059758	16922	2780
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Integral_domain.integral_domain.pow_not_zero	40	40.090442	4534	1161
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.In_In	40	0.024629	3	2	0.1	synth with cache (only 1: intros; only 1: Dec.fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersAlt.OT_to_Alt.compare_sym	40	40.401319	52598	7484
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Subset_Included	40	0.125879	11	3	1.2	synth with cache (only 1: intros; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Mergesort.Sort.Sorted_iter_merge	40	40.146496	49797	7028
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.In_node_iff	40	0.799893	142	31	0.4.4	synth with cache (only 1: split; only 1: intuition_in; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_idemp_l	40	40.452152	18713	3854
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Fold2.fold_right_equivlistA2	40	40.109904	34992	8004
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.rminus_morph_Proper	40	40.257866	35737	2405
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_leaf	40	0.264990	74	17	10	synth with cache (only 1: inversion 1).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.max_r	40	0.087984	54	22	0.0.1.0.0.0.0.0	synth with cache (only 1: intros x y H; only 1: unfold max; only 1: case compare_spec; only 1: trivial; only 1: auto; only 1: intros H'; only 1: apply le_nlt in H; only 1: now elim H).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_mul_mono_l	40	40.341237	18611	3977
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_min_distr_l	40	40.311639	5580	981
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_leaf	40	0.190366	45	9	9	synth with cache (only 1: inversion 1).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.choose_1	40	40.132311	46848	6999
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_preserves_NoDupA	40	40.066655	20762	3751
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.choose_3	40	40.105051	33778	5246
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ReDun.nodup_fixed_point	40	40.140136	48687	6888
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Exists_Forall.One_predicate.Exists_nil	40	0.444198	206	31	11.2	synth with cache (only 1: intuition; only 1: inversion_clear H).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.union_Union	40	40.028605	8335	1356
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ReDun.nodup_In	40	40.063971	18868	4093
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Fold2.fold_right_add2	40	40.090422	28962	6222
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.elements_1	40	40.192166	70144	5354
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_unique	40	40.126644	10728	5260
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rneq_symm	40	1.514173	717	98	6.12.6	synth with cache (only 1: intros n m H1 H2; only 1: elim H1; only 1: now rewrite H2).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_length_2_inv	40	40.058283	14123	2105
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rlt_irrefl	40	40.078473	22548	3760
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rgt_irrefl	40	0.021584	12	5	0.0.0.1	synth with cache (only 1: intros r H; only 1: eapply Rlt_asym; only 1: eauto; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.rbalS_match	40	0.010332	2	1	1	synth with cache (only 1: exact (rmatch _ _ _)).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2Nat.inj_sub	40	40.161543	23851	4450
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.testbit_succ_r_div2	40	40.079715	23284	4501
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.rxcnf_xcnf	40	40.151339	58599	5456
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.Godel_Dummett_iff_right_distr_implication_over_disjunction	40	40.401865	108050	18105
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zabs.Zabs_nat_lt	40	40.073409	23540	3249
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Decidable_sound	40	0.028389	3	3	0.0.0	synth with cache (only 1: intros P H Hp; only 1: apply -> Decidable_spec; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Decidable_complete	40	0.028263	3	3	0.0.0	synth with cache (only 1: intros P H Hp; only 1: apply <- Decidable_spec; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt3.combine_r_1	40	40.155936	18998	7576
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.TestOrder.test	40	0.030044	16	6	1	synth with cache (only 1: Nat.order).
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Decidable_sound_alt	40	0.133940	5	5	0.0.0.0.0	synth with cache (only 1: intros P [wit spec] Hd; only 1: simpl; only 1: destruct wit; only 1: tauto; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt3.combine_1	40	40.071250	16737	7205
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Decidable_complete_alt	40	0.031833	3	3	0.0.0	synth with cache (only 1: intros P [wit spec] Hd Hc; only 1: simpl in *; only 1: intuition congruence).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_compare_mono_r	40	40.639151	24123	5074
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_opp	40	40.217066	23933	2803
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.sorted_app_inv	40	40.215370	71817	2615
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.testbit_odd_succ	40	40.058925	15215	5118
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.rev_elements_rev	40	40.361136	31332	2702
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_lt_mono_r	40	40.757978	21730	3396
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Computational.Decidable_PosEq_obligation_1	40	0.199774	54	37	0.2	synth with cache (only 1: rewrite Pos.eqb_eq; only 1: auto with relations).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_tree_node	40	4.509335	668	119	6.5.6	synth with cache (only 1: unfold lt_tree; only 1: intuition_in; only 1: L.MX.order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec_0_any	40	14.238045	1659	316	8.1.7.0.0	synth with cache (only 1: intros; only 1: rewrite strong_rec_alt, strong_rec0_succ; only 1: apply step_good; only 1: intros m Hm; only 1: destruct (nlt_0_r _ Hm)).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_add	40	40.231487	23990	3321
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt3.map2_NoDup	40	40.057856	14829	6396
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.Nat2N.inj_add	40	40.265722	34334	4539
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_Ifp.tech_up	40	40.082985	28810	2979
coq-tactician-stdlib.8.11.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.incl_st_card_lt	40	40.211343	38960	8928
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_square_0	40	40.529410	6087	942
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ReDun.NoDup_nodup	40	40.348710	87775	6271
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Exists_Forall.One_predicate.Forall_forall	40	2.443252	1409	399	0.0.6.0.5.1.0.0.0	synth with cache (only 1: split; only 1: induction 1; only 1: firstorder; only 1: firstorder; only 1: subst; only 1: auto; only 1: induction l; only 1: firstorder; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_decr	40	40.462549	35201	4186
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Exists_Forall.One_predicate.Forall_inv	40	0.016314	11	3	0.2	synth with cache (only 1: inversion 1; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_succ	40	40.164346	5782	549
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_lt_add_l	40	40.275101	5257	1802
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.gt_lt_iff	40	40.026153	3815	1658
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRcomplete.Un_cv_mod_eq	40	41.295094	40475	3653
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.min_elt_1	40	40.090854	27382	5517
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_l	40	40.692780	9230	2012
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_tree_node	40	1.481162	72	19	1.0.7	synth with cache (only 1: unfold gt_tree; only 1: intuition_in; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Remove.InA_dec	40	40.065093	18204	2187
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ReDun.nodup_inv	40	40.108084	29378	5375
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_left	40	0.016004	3	2	1.0	synth with cache (only 1: unfold lt_tree in *; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_right	40	0.012518	1	1	0	synth with cache (only 1: intuition_in).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_le_mono_nonneg	40	0.417693	141	59	0.0.0.0.4.0	synth with cache (only 1: intros n m H1 H2; only 1: apply mul_le_mono_nonneg; only 1: order; only 1: order; only 1: order; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_mono	40	40.551217	13764	2618
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_left	40	0.012027	1	1	0	synth with cache (only 1: intuition_in).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_right	40	0.011973	1	1	0	synth with cache (only 1: intuition_in).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.elements_sort_ok	40	40.064818	5732	1028
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_quot_le	40	40.071408	19255	3713
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Equal_Same_set	40	7.413412	1014	224	10.3	synth with cache (only 1: compute; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.Godel_Dummett_weak_excluded_middle	40	40.262503	94165	16054
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.shiftr_succ_r	40	40.073257	23785	3023
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.eq_equiv	40	2.391486	1564	385	17.0.0.2.0.0.1	synth with cache (only 1: split; only 1: red; only 1: intros; only 1: now reflexivity; only 1: red; only 1: easy; only 1: congruence).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.empty_Empty_Set	40	0.036258	7	3	2.0.2	synth with cache (only 1: vm_compute; only 1: intuition; only 1: Dec.fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_r_nonneg	40	0.656990	56	32	0.4.0.0	synth with cache (only 1: intros; only 1: rewrite <- (abs_eq p)  at 3; only 1: now rewrite !(mul_comm _ p), gcd_mul_mono_l, mul_comm; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_unique	40	40.068708	16830	4690
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Cring.cring.cring_morph	40	40.062548	3719	713
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zmult_one	40	40.092529	31093	4143
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Map.Tmap_Tadd	40	40.113176	33363	6015
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.shiftr_spec	40	40.089624	27939	5891
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.fun_choice_imp_rel_choice	40	40.120588	42823	4450
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_inter_elim1	40	40.178786	18953	12735
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_unique_alt	40	40.536138	29296	5559
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.shiftl_spec_high	40	40.148454	17925	6240
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_spec	40	40.062616	22625	1269
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideAuxiliary.dec_eq	40	40.054418	18417	2303
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.weak_excluded_middle_iff_classical_de_morgan_law	40	40.346350	71528	12367
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_pow2	40	40.156402	9396	1671
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_In_cons_3	40	40.095972	6333	1035
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.max_1_r	40	0.061667	25	15	2.1	synth with cache (only 1: apply max_l; only 1: apply le_1_l).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.max_1_l	40	0.580525	745	96	0.0.0.5.4.15	synth with cache (only 1: apply PeanoNat.Nat.max_r; only 1: unfold le; only 1: induction n; only 1: discriminate; only 1: discriminate; only 1: discriminate).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.min_1_l	40	0.009521	5	2	2.1	synth with cache (only 1: apply min_l; only 1: apply le_1_l).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.add_mod_idemp_l	40	40.039596	5105	2542
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qround.Qfloor_le	40	40.093800	29952	5150
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.min_1_r	40	0.098820	41	24	0.0.0.0.1.0.0.0	synth with cache (only 1: unfold min; only 1: case compare_spec; only 1: auto; only 1: intros H; only 1: apply lt_nle in H; only 1: elim H; only 1: apply le_1_l; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.MoreInt.norm_ep_correct2	40	40.070107	25100	2161
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcompare.Zmult_compare_compat_l	40	40.161985	14816	4510
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.max_elt_3	40	7.259325	2018	637	0.0.0.1.5.6.0	synth with cache (only 1: intro s; only 1: unfold max_elt; only 1: case (M.max_elt s); only 1: simple destruct s0; only 1: intros; only 1: discriminate H; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.add_2	40	0.022547	5	5	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold add; only 1: case (M.add x s); only 1: unfold Add; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rlt_not_eq	40	7.579694	5268	1027	0.0.0.1.2.6.9	synth with cache (only 1: intro abs; only 1: intros a Ha; only 1: intro H; only 1: destruct H; only 1: eapply Rlt_asym; only 1: eauto; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.min_elt_2	40	40.071680	19344	3778
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Exists_Forall.Forall_inv_tail	40	0.017429	5	3	0.0.2	synth with cache (only 1: intros a b l H; only 1: inversion H; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rgt_not_eq	40	0.350682	174	80	0.0.0.1.0.1.1	synth with cache (only 1: red; only 1: intros x y z; only 1: intro H; only 1: destruct H; only 1: eapply Rlt_asym; only 1: eauto; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt3.map2_0	40	40.071255	15874	8324
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.for_all_spec	40	40.253957	26041	3154
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.lbalS_match	40	40.110872	43083	1260
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.succ_min_distr	40	1.227529	716	195	0.1.1.7.0	synth with cache (only 1: symmetry; only 1: apply min_mono; only 1: congruence; only 1: intros x x'; only 1: apply succ_le_mono).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Wf_Z.natlike_rec	40	40.222917	79311	7252
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_tree_not_in	40	3.902735	1840	353	0.9.15	synth with cache (only 1: intuition_in; only 1: apply (StrictOrder_Irreflexive x); only 1: auto with ordered_type).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.Z_as_OT.compare	40	40.134632	47796	3580
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_tree_trans	40	0.391275	23	5	4	synth with cache (only 1: eauto with ordered_type).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.mem_2	40	40.303330	129595	4843
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_div	40	40.767249	17972	5444
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_tree_not_in	40	0.034865	7	5	0.2.0.0.0	synth with cache (only 1: intros; only 1: intro; only 1: absurd (X.eq x x); only 1: order; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Empty_Empty_set	40	3.699233	1170	250	0.1.8.0.5	synth with cache (only 1: red; only 1: intuition; only 1: unfold Same_set, Included, mkEns, In; only 1: intro; only 1: Dec.fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.filter_spec'	40	40.058584	14773	2703
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_tree_trans	40	0.018906	1	1	0	synth with cache (only 1: eauto with ordered_type).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.empty_bst	40	0.007785	2	1	1	synth with cache (only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ReDun.NoDup_count_occ	40	40.177252	32153	6190
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_lower	40	40.372200	12640	2142
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.Elt.MapsTo_1	40	1.203918	1480	188	0.0.14.5.3	synth with cache (only 1: intros; only 1: apply InA_eqA with (x, e); only 1: intuition; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.tail_mul_spec	40	40.079401	14132	3691
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.empty_1	40	0.204127	288	36	15	synth with cache (only 1: inversion_clear 1).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_l_nonneg	40	40.689257	14907	4683
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zle_bool_total	40	40.048369	16849	1598
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.add_3	40	2.571987	2942	415	0.0.1.0.13.6	synth with cache (only 1: intros s x y; only 1: intro H; only 1: unfold add; only 1: case (M.add x s); only 1: unfold Add; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rlt_dichotomy_converse	40	2.204033	1027	379	0.0.0.2.0.0.0.2.1	synth with cache (only 1: intros x y [H| H] abs; only 1: destruct abs; only 1: eapply Rlt_asym; only 1: eauto; only 1: eauto; only 1: destruct abs; only 1: eapply Rlt_asym; only 1: eauto; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.Elt.empty_1	40	0.580643	477	95	11.1.2	synth with cache (only 1: intros m; only 1: intuition; only 1: inversion_clear H).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_wd	40	40.430139	10507	1508
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.max_elt_2	40	11.209638	3496	1095	0.0.0.0.0.0.0.0.0.5.2.0	synth with cache (only 1: intros s x y; only 1: unfold max_elt; only 1: case (M.max_elt s); only 1: unfold For_all; only 1: simple destruct s0; only 1: intros; only 1: injection H; only 1: intros; only 1: subst; only 1: firstorder; only 1: intros; only 1: discriminate H).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_neq	40	40.117396	5690	1915
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.ge_le_iff	40	40.063970	17168	4027
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_lxor	40	40.096091	17307	3707
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_sub_assoc	40	40.872590	18420	5663
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_nonpos	40	26.017133	13630	2724	1.4.0.0.0.8.0.1.1.0.0.0.0.1.0.1.0.0.1	synth with cache (only 1: split; only 1: destruct_sgn n; only 1: intros; only 1: elim (lt_irrefl 0); only 1: apply lt_le_trans with 1; only 1: auto using lt_0_1; only 1: auto using lt_0_1; only 1: intros; only 1: order; only 1: intros; only 1: now apply lt_le_incl; only 1: destruct_sgn n; only 1: intros; only 1: order; only 1: intros; only 1: auto using eq_refl, le_refl; only 1: intros; only 1: rewrite opp_nonpos_nonneg; only 1: apply lt_le_incl, lt_0_1).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.remove_2	40	1.068039	389	148	0.1.1.4.2	synth with cache (only 1: intros; only 1: unfold remove; only 1: case (M.add x s); only 1: case (M.remove x s); only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_quot_ge	40	40.079009	11360	3295
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow2_bits_true	40	40.201605	22074	4762
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.min_elt_3	40	40.141744	5349	1475
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_lxor	40	40.065135	17104	2593
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rstn1_sym	40	40.310620	75072	10548
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_div	40	40.081593	15879	3662
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.Zlt_cotrans_neg	40	40.108730	32207	2083
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InfA_ltA	40	10.938728	7492	1299	0.5.0.1.5.0.0.14	synth with cache (only 1: induction l; only 1: intros z Hz; only 1: auto; only 1: constructor; only 1: transitivity y; only 1: auto; only 1: inv; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.shiftl_spec_low	40	40.114779	19842	2103
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.singleton_2	40	0.022649	12	5	0.0.0.1	synth with cache (only 1: intros x y; only 1: unfold singleton; only 1: case (M.singleton x); only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Mult.mult_tail_mult	40	40.069632	16371	5685
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcompare.Zmult_compare_compat_r	40	40.078948	20866	8348
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_gt_0_reg_l	40	40.068669	24409	1731
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.le_sqrt_up_succ_sqrt	40	40.133271	19022	5090
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_alt.Zpower_alt_Ppow	40	40.080241	22934	5551
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.Z_dec	40	0.593322	257	86	0.1.0.0.0.1.0.0.0.0	synth with cache (only 1: intros n m; only 1: unfold Z.gt, Z.lt; only 1: generalize (Z.compare_eq n m); only 1: destruct (n ?= m); only 1: right; only 1: auto; only 1: left; only 1: auto with relations; only 1: left; only 1: auto with relations).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_pow2	40	40.274045	11479	2760
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zlt_square_simpl	40	40.112143	40649	3217
coq-tactician-stdlib.8.11.dev	Coq.Logic.WKL.inductively_barred_at_imp_is_path_from	40	40.537612	18295	2180
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.pos_lxor_spec	40	40.110374	37735	5429
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt3.map2_2	40	40.183013	25434	5821
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Exists_Forall.Exists_impl	40	5.495699	5760	1047	3.1.0.6.9.3	synth with cache (only 1: intros f g H l; only 1: induction 1; only 1: constructor; only 1: auto; only 1: specialize (H x); only 1: now apply Exists_cons_tl).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Image.Image.In_Image_elim	40	40.245883	35619	6266
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Cring.cring.cring_power_theory	40	7.176810	793	38	0.0.37	synth with cache (only 1: constructor; only 1: intros; only 1: let rec norm := gen_rewrite in norm).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_unique_alt	40	40.372884	36251	6050
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zeq_plus_swap	40	40.024596	7260	906
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.Pphi1	40	22.028540	6581	423	18.22	synth with cache (only 1: intro x; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ReDun.NoDup_count_occ'	40	40.083159	22778	6675
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_mul_mono_r	40	40.398520	7751	2749
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ReDun.NoDup_nth_error	40	40.111662	33721	6928
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow2_bits_false	40	40.177991	14593	2733
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_add_l	40	40.737267	14242	2928
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow2_bits_eqb	40	40.050862	12430	2640
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.singleton_Singleton	40	5.085402	1753	252	1.1.12.4	synth with cache (only 1: intros; only 1: unfold Same_set, Included, mkEns, In; only 1: intuition; only 1: Dec.fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.gtb_ltb	40	40.069476	21063	3016
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.MapsTo_fun	40	40.175220	63817	6555
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ReDun.NoDup_nth	40	40.105315	31107	7165
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.geb_leb	40	40.089500	18893	2773
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt3.map2_1	40	40.060379	14212	7448
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zlt_0_minus_lt	40	40.080183	27078	2952
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ReDun.NoDup_incl_length	40	40.094157	26726	7880
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_iff	40	40.060238	11680	1785
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_eqb	40	40.319582	26036	3888
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ReDun.NoDup_length_incl	40	40.212858	41545	9793
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zle_0_minus_le	40	40.268532	32884	1469
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Cring.cring.cring_div_theory	40	1.821825	503	127	1.3.0.0.0.3.0.2	synth with cache (only 1: constructor; only 1: intros; only 1: generalize (Z.quotrem_eq a b); only 1: case Z.quotrem; only 1: intros; only 1: subst; only 1: rewrite Z.mul_comm; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_simpl_l	40	40.304975	8309	2333
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_eq	40	40.323996	12792	2848
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_max_distr_l	40	7.438723	3185	647	2.3.12.0.0	synth with cache (only 1: apply max_mono; only 1: eauto with *; only 1: intros Hqp Hpr; only 1: intros; only 1: now apply add_le_mono_l).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Rings_Q.Qdi	40	40.056580	14561	2517
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_min_distr_l	40	0.019492	8	3	0.0.5	synth with cache (only 1: apply min_monotone; only 1: intros x x'; only 1: apply add_le_mono_l).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add	40	0.020903	3	2	1.0	synth with cache (only 1: intros; only 1: now rewrite <- sub_sub_distr, sub_diag, sub_0_r).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_min_distr_r	40	0.023869	7	4	0.0.0.3	synth with cache (only 1: rewrite 3!(add_comm _ p); only 1: apply min_monotone; only 1: intros x x'; only 1: apply add_le_mono_l).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_l_iff	40	40.265151	19068	3675
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_neq	40	40.033286	8068	2210
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Map.get_map	40	40.241900	35716	9336
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Remove.removeA_filter	40	40.108178	33534	4592
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_add_inside_eq	40	40.129723	16711	2126
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcompare.Zcompare_eq_case	40	4.042240	3106	636	5.3.5.3.0.0.0	synth with cache (only 1: intros; only 1: case Z.compare_spec; only 1: trivial; only 1: intros; only 1: Z.order; only 1: intros; only 1: Z.order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_m1_pos	40	40.171866	19022	3661
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_max_distr_l	40	0.245123	89	29	3.3.0.0	synth with cache (only 1: apply max_monotone; only 1: intros x x'; only 1: intros; only 1: now apply mul_le_mono_l).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_add_le_sub_l	40	40.290130	17310	5603
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.Nplength_first_one	40	40.567000	40058	3456
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.gtb_lt	40	40.076745	20398	4905
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.geb_le	40	40.054258	14112	4212
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.add_spec'	40	40.092493	29899	4016
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.Raw2SetsOn.lt_compat	40	40.257807	18636	4033
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.Nat2N.inj_compare	40	40.200160	41431	3384
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_odd_abs_sgn	40	40.194431	9551	2823
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.gtb_spec	40	40.083583	22824	1149
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.Nat2N.inj_iter	40	40.108930	29166	10828
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.filter_spec	40	40.050660	11392	2559
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.geb_spec	40	40.074901	22681	1233
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_add_distr	40	40.430501	17723	4481
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.min_r	40	13.091468	9905	2259	0.0.1.1.0.0.7.4.0	synth with cache (only 1: unfold le, min; only 1: intros; only 1: case compare_spec; only 1: symmetry; only 1: auto; only 1: intros H'; only 1: apply le_nlt in H; only 1: now elim H; only 1: constructor).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.add_reg_l	40	40.079266	23398	3425
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst_rstn1	40	40.340167	105522	11431
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Forall2.Forall2_refl	40	0.011005	27	3	9	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Exists_Forall.neg_Forall_Exists_neg	40	1.219814	317	140	1.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intro Dec; only 1: intros NF; only 1: induction l as [| a l IH]; only 1: destruct NF; only 1: apply Forall_nil; only 1: destruct (Dec a) as [Ha| Ha]; only 1: apply Exists_cons_tl, IH; only 1: contradict NF; only 1: now constructor; only 1: now apply Exists_cons_hd).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ClassicalDedekindReals.lowerCutBelow	40	40.199106	83070	3121
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_le_add_l	40	40.276857	8094	2487
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Exists_Forall.Forall_impl	40	0.686479	418	132	1.1.5.0.0.0	synth with cache (only 1: intros P Q H xs H0; only 1: induction H0; only 1: constructor; only 1: constructor; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalN.Unsigned.to_of	40	40.081530	23263	7098
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Nat2Pos.inj_pred	40	40.072076	21153	6057
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideAuxiliary.dec_eq	40	40.093871	33879	5169
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_inter_elim2	40	40.275318	7969	2571
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.inter_Intersection	40	19.425187	3188	821	0.2.1.1.0.0.5.0.1.1.0.0	synth with cache (only 1: unfold Same_set, Included, mkEns, In; only 1: split; only 1: intro; only 1: set_iff; only 1: destruct 1; only 1: constructor 1; only 1: auto; only 1: auto; only 1: intro; only 1: set_iff; only 1: inversion 1; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_min_distr_l	40	0.018153	4	3	0.0.1	synth with cache (only 1: apply min_monotone; only 1: intros x x'; only 1: apply mul_le_mono_l).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_min_distr_r	40	0.050834	20	8	0.0.0.5	synth with cache (only 1: rewrite 3!(mul_comm _ p); only 1: apply min_monotone; only 1: intros x x'; only 1: apply mul_le_mono_l).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlogic.Arithmetical_dec.sig_forall_dec	40	40.086948	21524	8899
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.Nadd_simpl	40	26.991735	2396	837	18	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_lt_add	40	40.217195	12236	2176
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rdefinitions.Req_appart_dec	40	40.107202	35688	5235
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_eqb	40	40.069051	19557	3360
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.iter_op_succ	40	0.508305	330	89	3.0.2.2.3	synth with cache (only 1: induction p as [p IHp| p IHp| ]; only 1: simpl; only 1: congruence; only 1: trivial; only 1: now symmetry).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_nonneg	40	40.178583	21750	3661
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2Nat.inj_pred	40	40.130781	43809	4414
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.add_compare_mono_l	40	40.055537	15852	3886
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.NoDup_map_inv	40	40.291516	88218	9335
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersEx.PositiveOrderedTypeBits.bits_lt_trans	40	40.537851	36284	3136
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.ni_min_idemp	40	2.995187	1907	242	0.0.1.0.5.13	synth with cache (only 1: vm_compute; only 1: destruct x; only 1: easy; only 1: f_equal; only 1: apply Nat.min_l; only 1: apply Nat.le_refl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_sqrt_up_spec	40	40.131857	13797	3902
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_iff	40	40.126484	21449	3541
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcompare.Zle_compare	40	4.160590	2383	266	4.0.0.18.0	synth with cache (only 1: intros; only 1: case Z.compare_spec; only 1: trivial; only 1: auto; only 1: Z.order).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.not_Zeq_inf	40	40.094939	31341	3701
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcompare.Zlt_compare	40	0.085517	35	13	2.0.2.0.0	synth with cache (only 1: intros; only 1: case Z.compare_spec; only 1: Z.order; only 1: trivial; only 1: Z.order).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcompare.Zge_compare	40	0.023306	5	5	0.0.0.0.0	synth with cache (only 1: intros; only 1: case Z.compare_spec; only 1: trivial; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcompare.Zgt_compare	40	0.018144	2	2	0.0	synth with cache (only 1: intros x y H; only 1: now rewrite H).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_l_iff	40	40.318728	10881	3476
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.Z_zerop	40	0.030748	6	4	0.0.1.1	synth with cache (only 1: intro n; only 1: decide equality; only 1: apply Pos.eq_dec; only 1: apply Pos.eq_dec).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersEx.PositiveOrderedTypeBits.lt_compat	40	0.196011	16	5	4.1	synth with cache (only 1: intros x x' Hx y y' Hy; only 1: now f_equiv).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2Nat.inj_compare	40	40.085694	25605	5097
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.of_nat_succ	40	1.577280	1411	278	1.3.0.4.1.3.12	synth with cache (only 1: revert n; only 1: simpl; only 1: intros; only 1: induction n; only 1: trivial; only 1: simpl; only 1: now f_equal).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.add_spec	40	4.189616	841	265	0.0.0.0.0.0.2.0.1.1.1.0	synth with cache (only 1: induct ltac:(s) ltac:(x); only 1: intuition_in; only 1: intuition_in; only 1: setoid_replace y with x'; only 1: auto; only 1: eauto; only 1: rewrite ?bal_spec, ?IHl, ?IHr; only 1: intuition_in; only 1: auto; only 1: rewrite ?bal_spec, ?IHl, ?IHr; only 1: intuition_in; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_eq	40	40.177296	23694	4334
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_neq	40	40.039703	9889	2608
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2Nat.inj_min	40	40.096275	25999	6618
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_sgn	40	1.055449	611	115	0.0.0.0.0.7.2.0	synth with cache (only 1: intro n; only 1: destruct_sgn n; only 1: apply sgn_pos; only 1: apply lt_0_1; only 1: apply sgn_0; only 1: apply sgn_neg; only 1: rewrite opp_neg_pos; only 1: apply lt_0_1).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.testbit_mod_pow2	40	40.070442	23178	936
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_mul_0_l	40	40.072936	20954	4410
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_add_l	40	40.119602	26861	4803
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_lxor	40	40.137413	25550	2684
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2Nat.inj_max	40	40.109704	31197	6612
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.radd_ext_Proper	40	0.011231	2	1	1	synth with cache (only 1: exact (Radd_ext Reqe)).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zodd_mult_Zodd	40	40.097462	34822	3905
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_sub_distr	40	40.084414	22390	4978
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rmul_ext_Proper	40	0.009488	3	1	2	synth with cache (only 1: exact (Rmul_ext Reqe)).
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_neg	40	40.526786	25297	5671
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.ENCODING_VALUE.Zmod2_twice	40	40.505998	5983	1076
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.ropp_ext_Proper	40	0.009242	3	1	2	synth with cache (only 1: exact (Ropp_ext Reqe)).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_lxor	40	40.188803	22350	2550
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreduction.Qred_comp_Proper	40	40.520104	15186	3698
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rsub_ext_Proper	40	0.010247	4	1	3	synth with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rinv_ext_Proper	40	0.020979	7	2	1.4	synth with cache (only 1: intros x y H; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add	40	40.259446	17140	4941
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.QSeqEquiv_trans	40	40.035629	7917	1903
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_mem_1	40	40.086828	29740	1794
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_land	40	40.220433	27491	2777
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_add	40	40.411825	25491	5691
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.Z_dec'	40	10.089064	5122	1745	0.0.0.0.1.0.2.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros x y; only 1: case (Z_lt_ge_dec x y); only 1: intro H; only 1: left; only 1: left; only 1: trivial; only 1: intro H; only 1: generalize (Z.ge_le _ _ H); only 1: intro H0; only 1: case (Z_le_lt_eq_dec y x H0); only 1: intro H1; only 1: left; only 1: right; only 1: auto; only 1: intro; only 1: right; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.testbit_ones	40	40.104075	20903	2497
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul_cancel_r	40	40.474243	15254	3461
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_r_iff	40	40.684397	11126	3577
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_land	40	40.307291	23019	2696
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.mem_1	40	40.115149	42415	3419
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Forall2.Forall2_app	40	5.365851	4302	1175	0.1.0.0.3.15.2	synth with cache (only 1: intros; only 1: elim H; only 1: simpl; only 1: trivial; only 1: intros; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul_cancel_l	40	40.449014	12270	6578
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_cases	40	40.167868	17519	5022
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.id	40	0.006038	2	1	1	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj	40	0.004892	1	1	0	synth with cache (only 1: congruence).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.lt_0_mul	40	40.494942	8706	2528
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_iff	40	0.013992	3	3	0.0.0	synth with cache (only 1: split; only 1: now injection 1; only 1: now injection 1 || (intros; now f_equal)).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_pos_cases	40	0.027735	3	3	0.0.0	synth with cache (only 1: intros n m H; only 1: apply add_lt_cases; only 1: now nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.mem_2	40	40.190407	55242	7829
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_m1_l	40	1.411194	511	92	11.0.0	synth with cache (only 1: intro n; only 1: bitwise; only 1: now rewrite bits_opp, one_succ, pred_succ, bits_0).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.is_pos	40	0.135271	9	2	5	synth with cache (only 1: now destruct p).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_neg_cases	40	40.262712	12997	3745
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.is_nonneg	40	0.019151	7	3	1.0.3	synth with cache (only 1: induction p using Pos.peano_ind; only 1: Z.order'; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Computational.Decidable_PosLt_obligation_1	40	20.703828	12749	2862	0.0.0.22.0	synth with cache (only 1: unfold Pos.ltb, Pos.lt; only 1: case Pos.compare_spec; only 1: easy'; only 1: easy'; only 1: easy').
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_1	40	0.022695	1	1	0	synth with cache (only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonneg_cases	40	0.028724	3	3	0.0.0	synth with cache (only 1: intros n m H; only 1: apply add_le_cases; only 1: now nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_xO	40	0.009279	2	2	0.0	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_xI	40	0.009870	2	2	0.0	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_succ	40	0.022786	5	3	0.1.1	synth with cache (only 1: simpl; only 1: f_equal; only 1: now destruct p).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.inj_neq	40	40.114051	38224	3589
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_add	40	0.111136	27	22	0.3.0	synth with cache (only 1: revert q; only 1: intro n; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.lxor_spec	40	40.115914	42387	1978
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Remove.removeA_InA	40	40.112496	24811	4600
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_div	40	40.059524	14556	4596
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_succ_quot_gt	40	40.028808	7674	1702
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_length_2	40	40.133296	49143	5497
coq-tactician-stdlib.8.11.dev	Coq.Vectors.Fin.R_sanity	40	40.078378	26062	4251
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalZ.to_of	40	40.087699	27498	5367
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_comm	40	40.220581	22915	4264
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.is_empty_1	40	40.274399	94965	7286
coq-tactician-stdlib.8.11.dev	Coq.micromega.Env.S.nth_spec	40	40.084723	26403	4804
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_0_r_nonneg	40	0.018236	8	6	0.1.1.0.0.0	synth with cache (only 1: intros; only 1: apply gcd_unique; only 1: trivial; only 1: apply divide_refl; only 1: apply divide_0_r; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.micromega.Env.S.nth_jump	40	0.018253	7	3	3.1.0	synth with cache (only 1: unfold hd, nth, tail, jump; only 1: f_equal; only 1: apply Pos.add_comm).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalZ.to_int_inj	40	0.010726	2	2	0.0	synth with cache (only 1: intro E; only 1: now rewrite <- (Unsigned.of_to n), <- (Unsigned.of_to n'), E).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_le_add	40	40.371385	15663	3989
coq-tactician-stdlib.8.11.dev	Coq.micromega.Env.S.nth_pred_double	40	0.162893	54	18	4.0.2	synth with cache (only 1: unfold hd, nth, tail, jump; only 1: f_equal; only 1: now rewrite Pos.add_1_r, Pos.succ_pred_double, Pos.add_diag).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_pred_quot_lt	40	40.330269	10115	2242
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_pred_quot_gt	40	40.023975	5438	1684
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.In_InfA	40	0.032426	7	6	0.0.1.0.0.0	synth with cache (only 1: destruct l; only 1: constructor; only 1: constructor; only 1: apply H; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst_rstn1_iff	40	40.220146	75429	15332
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InA_InfA	40	0.030760	8	6	0.0.1.0.1.0	synth with cache (only 1: simple induction l; only 1: intros; only 1: constructor; only 1: intros; only 1: constructor; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_lower_bound	40	0.036259	6	5	1.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- (quot_mul q b) by order; only 1: apply quot_le_mono; only 1: auto; only 1: now rewrite mul_comm).
coq-tactician-stdlib.8.11.dev	Coq.btauto.Reflect.Translation.poly_of_formula_eval_compat	40	40.441375	27934	2187
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.INR_fact_neq_0	40	40.157057	25121	4014
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.ARgen_phiPOS_Psucc	40	40.068150	2746	624
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.fact_simpl	40	0.069649	3	3	0.0.0	synth with cache (only 1: intros; only 1: simpl; only 1: now Nat.nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_assoc	40	40.328341	8988	2549
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.NatSeq.seq_nth	40	40.086041	25254	4075
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_spec2	40	40.105787	10867	1248
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_lt_mono_nonneg	40	40.235105	20991	3625
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_sub_distr_r	40	40.200937	8175	1617
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.is_empty_2	40	40.182187	67889	6502
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.filter_ok	40	40.038032	10144	2423
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.to_lu_succ	40	0.016134	5	3	0.0.2	synth with cache (only 1: induction n; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.fun_choice_imp_functional_rel_reification	40	40.076191	29737	2680
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyComparison.Z_of_comparison_bound	40	0.768527	452	67	4.10	synth with cache (only 1: intros; only 1: now destruct x).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_xO_xO	40	40.940267	43664	4670
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_distr_l	40	40.845863	15202	3407
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_xO_xI	40	40.911610	60103	4760
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_1_l	40	2.762677	970	196	0.0.0.0.3.5.1.1	synth with cache (only 1: intro n; only 1: apply gcd_unique; only 1: apply lt_le_incl, lt_0_1; only 1: exists 1; only 1: now nzsimpl; only 1: exists n; only 1: now nzsimpl'; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_1_r	40	0.035505	14	7	0.0.0.0.0.1	synth with cache (only 1: intro n; only 1: apply gcd_unique; only 1: trivial using divide_1_l, le_0_1; only 1: trivial using divide_1_l, le_0_1; only 1: trivial using divide_1_l, le_0_1; only 1: trivial using divide_1_l, le_0_1).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zquot_0_r	40	40.069848	26714	1956
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_diag_nonneg	40	0.068077	46	22	0.1.1.0.1.0	synth with cache (only 1: intros; only 1: apply gcd_unique; only 1: trivial; only 1: apply divide_refl; only 1: apply divide_refl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_mask_neg_iff'	40	40.917264	15207	5289
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_more_than_1_digit	40	40.102134	37017	1564
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zrem_0_r	40	0.042145	10	2	3	synth with cache (only 1: now destruct a).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.add_sqrt_le	40	40.165708	5568	2033
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zrem_0_l	40	0.023733	2	2	0.0	synth with cache (only 1: Z.bitwise; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zquot_0_l	40	0.008557	1	1	0	synth with cache (only 1: now destruct a).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_mul	40	40.063185	11731	3683
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.NoDup_Permutation	40	40.089162	24250	5911
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Rtauto.with_env.interp_proof	40	40.161001	57352	5584
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.covers_is_Add	40	40.049213	13075	3931
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_mul	40	40.227655	10161	2476
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_mask_neg	40	40.695847	22536	6584
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_le	40	40.501711	20046	6261
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_lt	40	40.165422	24867	6983
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_simpl_r	40	40.211887	10092	1724
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyBool.Z_of_bool_bound	40	4.300390	1406	216	18.4	synth with cache (only 1: intro n; only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add_even	40	0.037965	14	8	0.0.0.2.0	synth with cache (only 1: intros n m Hm; only 1: rewrite <- !negb_even; only 1: apply even_spec in Hm; only 1: rewrite even_add, Hm; only 1: now destruct (even n)).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_simpl_l	40	40.351369	7077	1664
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Qpower_positive_1	40	40.260853	6193	861
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_pred	40	0.018553	5	3	2.0.0	synth with cache (only 1: intros H; only 1: simpl; only 1: now destruct p).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Heap.defs.list_to_heap	40	38.417671	182057	3397
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_mul	40	0.006167	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_add_lt_sub_r	40	40.273734	7287	3008
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle3	40	40.123400	4912	1546
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.add_1	40	40.237670	70420	5879
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_land	40	40.080914	20263	3016
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Repeat.repeat_length	40	1.177020	1151	249	0.0.9.9.0.0	synth with cache (only 1: destruct n; only 1: auto; only 1: simpl; only 1: induction n as [| n IH]; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_1_mul_l	40	40.212129	7215	2685
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_pow_pos	40	0.771300	324	98	0.5.0.1.4	synth with cache (only 1: generalize (Pos.ggcd_gcd p q); only 1: intros H; only 1: destruct Pos.ggcd as (g, (aa, bb)); only 1: destruct H; only 1: now apply Pos.iter_swap_gen).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_pow	40	0.007096	2	1	1	synth with cache (only 1: now apply Pos.iter_swap_gen).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_square	40	0.010170	3	2	1.0	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Nat2Pos.inj_add	40	40.073898	23094	4513
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsLUB.is_upper_bound_epsilon	40	41.204485	20701	1751
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_compare	40	0.198556	42	41	4.0	synth with cache (only 1: revert q; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_assoc	40	40.277759	18111	5516
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.succ_of_nat	40	9.771582	8265	1887	15.0.0.7.2.0	synth with cache (only 1: intro H; only 1: symmetry; only 1: induction n; only 1: exfalso; only 1: now apply H; only 1: apply of_nat_succ).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_leb	40	0.033401	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_ltb	40	0.005429	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.inj_minus2	40	40.065708	22518	3006
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt3.map2_2	40	40.070339	20554	5108
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_eqb	40	0.005416	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_sqrt_up_exact	40	40.092512	18503	4767
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_unique	40	40.041185	9893	3478
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_land	40	40.080653	24232	2584
coq-tactician-stdlib.8.11.dev	Coq.Logic.Eqdep_dec.UIP_refl_unit	40	40.223723	73839	14261
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_max_distr_r	40	15.070495	10608	1190	0.0.0.39	synth with cache (only 1: rewrite !(PeanoNat.Nat.mul_comm _ p); only 1: apply max_monotone; only 1: intros x x'; only 1: apply mul_le_mono_l).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_lor	40	40.061376	17130	3136
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_lor	40	40.067656	20441	2831
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_ldiff	40	40.056236	17007	2396
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_mono	40	40.061524	18166	4008
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_r	40	40.554733	11834	4014
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_add_lt_sub_l	40	40.263378	8942	3090
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_ldiff	40	40.054166	12396	2265
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_mul	40	40.047874	15529	2368
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_wd	40	40.064279	18810	3460
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.desc_end	40	40.344029	24570	6232
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_2	40	40.208104	12880	2948
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.eval_cnf_app	40	40.071073	23328	1960
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.NatSeq.seq_shift	40	40.175548	21022	5110
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nxor_eq_false	40	40.129544	32021	4345
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.NatSeq.in_seq	40	40.061066	18884	2843
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.RealField.Rfield	40	40.070173	22305	6057
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_1_lcm_mul	40	40.420120	14608	3896
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Nat2Pos.inj_mul	40	40.071381	21629	4198
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_divides	40	40.061524	16486	3238
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.radd_ext_Proper	40	0.008012	3	1	2	synth with cache (only 1: exact (Radd_ext Reqe)).
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.rmul_ext_Proper	40	0.007222	2	1	1	synth with cache (only 1: exact (Rmul_ext Reqe)).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_lt_cancel	40	40.094043	26376	5718
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.ropp_ext_Proper	40	0.021622	10	2	3	synth with cache (only 1: exact (Ropp_ext Reqe)).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_eq_r	40	27.055346	19815	3563	0.3.0.0.20.0.1	synth with cache (only 1: intros n m Hn; only 1: intros; only 1: apply lcm_unique; only 1: trivial; only 1: auto; only 1: auto with relations; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_ones	40	0.024715	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: unfold lnot; only 1: bitwise; only 1: apply xorb_nilpotent).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Zerob.zerob_true_intro	40	0.429606	361	57	12.2	synth with cache (only 1: intros a Ha; only 1: now rewrite Ha).
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_inter_iff	40	40.356024	40497	5767
coq-tactician-stdlib.8.11.dev	Coq.Bool.Zerob.zerob_true_elim	40	0.018961	6	5	0.0.0.0.1	synth with cache (only 1: destruct n; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_wd	40	40.048687	12630	2626
coq-tactician-stdlib.8.11.dev	Coq.Bool.Zerob.zerob_false_intro	40	0.099973	65	21	1.1.0.3	synth with cache (only 1: destruct n; only 1: simpl; only 1: Nat.order'; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Fin2Restrict.extend_f2n	40	40.439287	43270	3461
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_equiv	40	40.069813	14278	3787
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_upper	40	40.357089	8766	1775
coq-tactician-stdlib.8.11.dev	Coq.Sets.Infinite_sets.Infinite_sets.Pigeonhole_bis	40	40.115319	37144	9288
coq-tactician-stdlib.8.11.dev	Coq.Bool.Zerob.zerob_false_elim	40	0.245736	195	64	1.0.1.4.0.0	synth with cache (only 1: destruct n; only 1: simpl; only 1: intro H; only 1: intro; only 1: now subst; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.Singleton_atomic	40	40.082319	25888	7193
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.of_uint_acc_eqn	40	14.751658	9390	1227	1.1.1.1.1.1.1.1.1.1.2.13	synth with cache (only 1: induction d; only 1: easy || now destruct 1; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Nat2Pos.inj_compare	40	40.108590	28881	4928
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutEq.Perm.permut_cons_In	40	40.108021	37561	4414
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.remove_inf	40	40.058214	16326	3220
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_simpl_r	40	40.411412	9792	2117
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.size_nat_monotone	40	40.128643	17928	3114
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rrepr_1	40	40.100697	36596	5443
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.remove_3	40	24.320251	13982	2543	0.1.25.2	synth with cache (only 1: intros s x y; only 1: unfold remove; only 1: case (M.remove x s); only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_sqrt	40	0.005618	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.radd_ext_Proper	40	0.008631	1	1	0	synth with cache (only 1: exact (Radd_ext Reqe)).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_gcd	40	0.007087	3	1	2	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_add	40	40.030028	7661	1770
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_diag	40	40.667591	40300	3272
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.rmul_ext_Proper	40	0.032504	12	2	7	synth with cache (only 1: exact (Rmul_ext Reqe)).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.ropp_ext_Proper	40	0.039421	14	3	4	synth with cache (only 1: exact (Ropp_ext Reqe)).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutEq.Perm.permut_nil	40	0.919267	373	132	0.0.0.4.0.0.0.1	synth with cache (only 1: induction l as [| x l IHl]; only 1: trivial; only 1: intros H; only 1: specialize (H x); only 1: simpl in H; only 1: destruct eq_dec as [_| NEQ]; only 1: discriminate; only 1: now elim NEQ).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.NoDup_Permutation_bis	40	40.070465	18962	5190
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Fin2Restrict.extend_n2f	40	40.146754	51716	4141
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_eq_0	40	40.076237	21169	4389
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.exists_spec	40	40.097640	30796	4942
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.size_gt	40	40.087415	22478	4296
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.linear_max	40	40.071330	21156	5222
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_opp_r	40	2.748495	643	181	0.0.0.0.9.0	synth with cache (only 1: intros; only 1: apply lcm_unique_alt; only 1: apply lcm_nonneg; only 1: intros; only 1: rewrite divide_opp_l; only 1: apply lcm_divide_iff).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult	40	0.052501	25	8	1	synth with cache (only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Exists_Forall.Forall_Exists_dec	40	19.399132	6600	1757	0.0.1.4.0.0.4.0.0.0.2.1	synth with cache (only 1: intro Pdec; only 1: induction l as [| a l' Hrec]; only 1: left; only 1: apply Forall_nil; only 1: destruct (Pdec a) as [Ha| Ha]; only 1: firstorder; only 1: left; only 1: now apply Forall_cons; only 1: right; only 1: now constructor; only 1: right; only 1: now apply Exists_cons_hd).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.le_log2_log2_up	40	40.176830	16871	4512
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring.BoolTheory	40	0.408504	239	68	0.0.0.0.0.0.0.0.0.11	synth with cache (only 1: split; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersAlt.OT_to_Alt.compare_Eq	40	40.150254	28256	7281
coq-tactician-stdlib.8.11.dev	Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Direct.linear_search_smallest	40	0.010350	2	1	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.size_le	40	40.038015	8201	3220
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.NatSeq.seq_app	40	40.193147	11434	2127
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring.bool_eq_ok	40	0.009608	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.Raw2SetsOn.Spec.compare_spec	40	40.300009	121423	4758
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Repeat.repeat_spec	40	6.751807	14570	1001	2.1.0.34.24	synth with cache (only 1: revert n; only 1: induction n; only 1: destruct 1; only 1: simpl; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.incl_card_le	40	40.107095	32528	8045
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.Z_as_Int.gt_le_dec	40	40.185669	81392	1470
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Zpower_nat_0_r	40	0.007622	2	1	1	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.max_l	40	40.177359	38452	4966
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Zpower_nat_succ_r	40	0.025145	5	4	0.0.0.1	synth with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.Raw2SetsOn.Spec.elements_spec2	40	40.145392	29992	1964
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.Z_as_Int.i2z_eq	40	0.009116	3	2	0.1	synth with cache (only 1: intros H; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.Raw2SetsOn.Spec.min_elt_spec1	40	40.118120	31949	4100
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.Z_as_Int.i2z_0	40	0.006636	4	1	3	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.Z_as_Int.i2z_1	40	0.006473	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.Z_as_Int.i2z_2	40	0.007221	2	1	1	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Exists_Forall.One_predicate.Exists_exists	40	40.289129	37126	6371
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.eval_cnf_and_opt	40	40.080741	22825	3858
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.Z_as_Int.i2z_3	40	0.007247	2	1	1	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.Z_as_Int.i2z_add	40	0.006610	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.Z_as_Int.i2z_opp	40	0.021878	27	3	9	synth with cache (only 1: auto with relations).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.Z_as_Int.i2z_sub	40	0.007019	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.Z_as_Int.i2z_mul	40	0.006206	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.Z_as_Int.i2z_max	40	0.006275	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Structures.Orders.TTLB_to_OTF.lt_strorder	40	40.120208	23179	5960
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.Z_as_Int.i2z_eqb	40	0.024077	9	5	2.1.1	synth with cache (only 1: symmetry; only 1: symmetry; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.Z_as_Int.i2z_leb	40	0.005317	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_abs_r	40	1.543786	324	121	1.2.0.1.2.0	synth with cache (only 1: intros; only 1: destruct (abs_eq_or_opp m) as [H| H]; only 1: rewrite H; only 1: easy; only 1: rewrite H; only 1: now rewrite lcm_comm, lcm_opp_l, lcm_comm).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.Z_as_Int.i2z_ltb	40	0.005733	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.in_holed_interval_dec	40	40.149954	57622	3251
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_0	40	40.078949	24611	4205
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Mergesort.Sort.Permuted_iter_merge	40	40.113622	34044	5860
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_map.Permutation_map'	40	1.637170	192	73	1.0.0.0.0.0.0.0.1.0	synth with cache (only 1: intros Su; only 1: intros Ij; only 1: induction 1; only 1: simpl; only 1: eauto; only 1: simpl; only 1: eauto; only 1: simpl; only 1: eauto; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Remove.removeA_NoDupA	40	40.154874	34195	5332
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Integral_domain.integral_domain.Rintegral_domain_pow	40	40.025964	7228	1404
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.min_l	40	40.197970	39902	6281
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersAlt.OT_to_Alt.compare_Lt	40	40.237416	23466	6172
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_0_l	40	38.940244	104472	1612	43.103.34	synth with cache (only 1: intro H; only 1: generalize H; only 1: firstorder  (subst; auto)).
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_0_r	40	0.017783	2	2	0.0	synth with cache (only 1: intro; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_0_r	40	0.019882	2	2	0.0	synth with cache (only 1: intro; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_comm	40	0.043906	24	6	0.7	synth with cache (only 1: intros n m; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_0_l	40	0.019831	2	2	0.0	synth with cache (only 1: intro; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_comm	40	0.021315	2	2	0.0	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.max_elt_1	40	40.110283	35421	6261
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_abs_l	40	3.316937	1124	418	0.1.0.0.3.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct (abs_eq_or_opp n) as [H| H]; only 1: rewrite H; only 1: easy; only 1: rewrite H; only 1: apply lcm_unique_alt; only 1: apply lcm_nonneg; only 1: intros; only 1: rewrite divide_opp_l; only 1: apply lcm_divide_iff).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Exists_Forall.One_predicate.Exists_cons	40	40.250017	77111	5458
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_add_opp	40	0.032409	15	4	1.1.3	synth with cache (only 1: intros a b; only 1: destruct a, b; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Remove.removeA_equivlistA	40	40.077632	19038	3996
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.union_3	40	0.020767	4	4	0.0.0.0	synth with cache (only 1: intros s s' x; only 1: unfold union; only 1: case (M.union s s'); only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.gt_lt	40	1.640018	369	101	5.7.0	synth with cache (only 1: intro H; only 1: apply lt_nge; only 1: now rewrite <- ?succ_le_mono).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.lt_gt	40	0.016259	10	2	2	synth with cache (only 1: apply gt_lt_iff).
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyInst.PropAnd	40	1.395920	1128	292	1.0.1.0.0.0.3.19	synth with cache (only 1: constructor; only 1: intro p; only 1: intros ? ? ? [? ?] [? ?]; only 1: split; only 1: intros (U, V); only 1: auto; only 1: intros (U, V); only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyInst.PropOr	40	0.030122	2	2	0.0	synth with cache (only 1: constructor; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.remove_ok	40	7.355685	1010	364	0.0.0.0.0.0.0.1.0.1.0.0.0.0	synth with cache (only 1: repeat rewrite <- isok_iff; only 1: revert s x; only 1: simple induction s; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intros; only 1: elim_compare x a; only 1: inv; only 1: auto; only 1: inv; only 1: auto; only 1: inv; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyInst.PropArrow	40	0.095067	248	18	0.21	synth with cache (only 1: constructor; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyInst.PropIff	40	0.041486	3	2	0.1	synth with cache (only 1: constructor; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_NoDup	40	40.138220	47287	7323
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcomplements.floor_gt0	40	0.008856	1	1	0	synth with cache (only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyInst.PropNot	40	0.017076	3	3	0.0.0	synth with cache (only 1: constructor; only 1: intros; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.le_log2_up_succ_log2	40	40.241303	15218	5280
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Cring.Zcri	40	24.478008	11447	1059	2.49.8.1	synth with cache (only 1: intros x y; only 1: apply Ncring_initial.Zsth; only 1: generalize x, y; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.singleton_ok	40	0.015889	9	2	3	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.lbal_spec	40	40.163209	25735	1820
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InfA_app	40	1.564726	1490	263	1.0.2.0.1.1.1.7.6	synth with cache (only 1: intros l m a; only 1: destruct l; only 1: simpl; only 1: intros; only 1: trivial; only 1: intros; only 1: constructor; only 1: inv; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.singleton_spec	40	0.302372	87	32	0.1.0.3.0	synth with cache (only 1: intro n; only 1: unfold singleton; only 1: intro l; only 1: rewrite InA_cons, InA_nil; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.micromega.Ztac.eq_incl	40	0.020724	3	3	0.0.0	synth with cache (only 1: intros x y; only 1: intro EQ; only 1: now rewrite EQ).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Exists_Forall.One_predicate.Exists_dec	40	40.105077	25302	2594
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.pos_lor_spec	40	40.081328	21310	6688
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.add_term_correct	40	40.072090	16212	2157
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.independence_general_premises_right_distr_implication_over_disjunction	40	40.303722	98721	16172
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.union_2	40	7.494151	5545	1004	0.1.0.20	synth with cache (only 1: intros s s' x; only 1: unfold union; only 1: case (M.union s s'); only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.inter_2	40	0.020646	4	4	0.0.0.0	synth with cache (only 1: intros s s' x; only 1: unfold inter; only 1: case (M.inter s s'); only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_testbit	40	0.763948	311	113	0.0.0.1.0.5.0	synth with cache (only 1: intro Hn; only 1: destruct n as [| n| n]; only 1: simpl; only 1: now destruct a; only 1: simpl; only 1: now destruct n; only 1: now destruct Hn).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_neg	40	0.005385	1	1	0	synth with cache (only 1: now injection 1 || (intros; now f_equal)).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_neg_iff	40	0.013186	3	3	0.0.0	synth with cache (only 1: split; only 1: now injection 1 || (intros; now f_equal); only 1: now injection 1 || (intros; now f_equal)).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_pos	40	0.004057	1	1	0	synth with cache (only 1: apply inj).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_pos_iff	40	0.015304	4	4	0.0.0.0	synth with cache (only 1: split; only 1: apply inj; only 1: intros; only 1: now f_equal).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.neg_is_neg	40	0.005863	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.inter_3	40	0.202960	138	40	0.0.2.5	synth with cache (only 1: intros s s' x; only 1: unfold inter; only 1: case (M.inter s s'); only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.neg_is_nonpos	40	0.010000	1	1	0	synth with cache (only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.pos_is_pos	40	0.006006	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.pos_is_nonneg	40	0.010105	1	1	0	synth with cache (only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.neg_le_pos	40	0.027442	17	4	7	synth with cache (only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.neg_lt_pos	40	0.007332	1	1	0	synth with cache (only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_abs	40	40.092297	23790	4303
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec_any_fst_arg	40	40.284996	14278	5250
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_Ifp.up_tech	40	40.038933	10251	5716
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersAlt.OT_to_Alt.compare_Gt	40	6.920605	2672	1000	0.0.1.0.0.0.0.0.2.0.0.1.0.0	synth with cache (only 1: unfold compare; only 1: intros x y; only 1: destruct (compare_spec x y); only 1: intuition; only 1: discriminate; only 1: rewrite H in H0; only 1: elim (StrictOrder_Irreflexive y); only 1: auto; only 1: intuition; only 1: discriminate; only 1: rewrite H in H0; only 1: elim (StrictOrder_Irreflexive y); only 1: auto; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.lor_spec	40	40.108416	36784	4081
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.fold_spec'	40	40.232806	72632	3698
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Exists_Forall.One_predicate.Forall_rect	40	40.058022	14621	3495
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.fold_spec	40	40.169187	52369	3301
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.odd_mul	40	40.228177	17899	6145
coq-tactician-stdlib.8.11.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.G_aux	40	40.180816	67566	5661
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_pos	40	40.317418	10415	4353
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_1	40	40.119409	40312	5260
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.add_1	40	40.177023	47574	6103
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_mod	40	22.037563	9025	2837	0.0.0.3.16.1	synth with cache (only 1: intros a b Ha Hb; only 1: apply mod_small; only 1: destruct (mod_bound_pos a b); only 1: order; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_lt_simpl_nonneg	40	40.442086	19676	5033
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Ring63.ring_theory_switch_eq	40	13.965329	8254	995	7.2.12.10	synth with cache (only 1: intros p1 p2; only 1: intros P Q H xs H0; only 1: intros; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.pos_le_pos	40	0.019570	15	4	2.0	synth with cache (only 1: intros; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.pos_lt_pos	40	0.019083	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: unfold Z.lt; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.neg_xO	40	0.006347	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InfA_compat	40	40.052712	11295	2014
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.neg_xI	40	0.007814	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.In_compat	40	0.152886	21	9	1.0.1	synth with cache (only 1: intros x x' Hx y y' Hy; only 1: rewrite Hx, Hy; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.pos_xO	40	0.007608	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.diff_2	40	0.248760	18	12	0.1.0.0	synth with cache (only 1: intros s s' x; only 1: unfold diff; only 1: case (M.diff s s'); only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.pos_xI	40	0.006409	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.opp_neg	40	0.006187	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.opp_pos	40	0.005923	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.diff_3	40	0.053607	13	8	0.1.1.0	synth with cache (only 1: intros s s' x; only 1: unfold diff; only 1: case (M.diff s s'); only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.add_neg_neg	40	0.006507	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_exact	40	40.042081	8245	2405
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.subsetl_spec	40	40.056660	15941	2654
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zdivide_bounds	40	40.080719	28051	3165
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.gt_wB_1	40	40.096531	26327	938
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.add_pos_neg	40	0.110183	27	22	0.1.0	synth with cache (only 1: revert q; only 1: intro n; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_succ_quot_lt	40	40.240041	5207	1533
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.add_neg_pos	40	0.007402	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.add_pos_pos	40	0.006984	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.independence_general_premises_Godel_Dummett	40	40.333405	107948	17725
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Map.map_push	40	40.136825	44664	8117
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gauss	40	40.407751	17215	4637
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.pos_land_spec	40	40.083207	24510	5067
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_inter_nodup	40	40.281364	61761	8497
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.fun_choice_iff_rel_choice_and_functional_rel_reification	40	40.132969	45681	4767
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_trans_1	40	40.046401	14339	2133
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_double	40	40.065726	4675	565
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.succ_max_distr	40	40.066691	15510	4706
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.land_spec	40	40.117940	38741	4515
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.Z_as_Int.ge_lt_dec	40	40.053337	13180	5848
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qround.Qle_ceiling	40	40.099878	31870	5617
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.testbit_neg	40	0.043487	8	7	0.0.0.0.0.1.0	synth with cache (only 1: intro Hn; only 1: destruct n as [| n| n]; only 1: unfold Z.testbit; only 1: now destruct a as [| [| | ]| ]; only 1: simpl; only 1: now destruct n; only 1: now destruct Hn).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.testbit_pos	40	0.011140	9	2	1	synth with cache (only 1: apply Z.testbit_Zpos).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Exists_Forall.One_predicate.Forall_dec	40	40.074054	15757	3098
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qround.Qle_floor_ceiling	40	0.080517	15	12	0.0.2.0.0.0	synth with cache (only 1: intros; only 1: apply Qle_trans with (- - x); only 1: rewrite Qopp_involutive; only 1: auto with *; only 1: change (Qceiling x : Q) with (- Qfloor (- x)); only 1: auto with *).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcompare.Zcompare_elim	40	40.193350	48135	5200
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.independence_general_premises_drinker	40	40.167075	31955	10179
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_log2_up_spec	40	40.220346	10559	2040
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_iff	40	40.659250	19723	5260
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.pos_ldiff_spec	40	40.082366	25983	4565
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.remove_1	40	40.211435	10447	2225
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_trans_2	40	1.757375	168	44	2.7	synth with cache (only 1: intros s s' H s'' s''' H0 a; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRcomplete.Rfloor	40	42.248341	13492	334
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Wf_Z.Efficient_Rec.R_wf	40	40.108776	33797	6498
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.Elt.mem_1	40	40.130546	44360	5637
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.lbal_ok	40	40.040138	10043	1101
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_neq_trans_1	40	0.164465	12	3	2.4	synth with cache (only 1: intro H; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.Elt.mem_2	40	40.280919	112491	7681
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.equal_1	40	40.115559	42702	2689
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.even_pow	40	40.196613	18853	3974
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.Positive_as_OT.lt_not_eq	40	40.264006	34353	4475
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.is_empty_1	40	40.184794	39191	6558
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.for_all_spec	40	40.121880	42152	4815
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z2Pos.to_pos_nonpos	40	0.937631	1034	93	31	synth with cache (only 1: now destruct x).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.eq_equiv	40	2.532585	3077	194	62	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z2Pos.inj_1	40	0.005761	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.gt_wB_0	40	3.880835	3530	339	8.24	synth with cache (only 1: unfold base; only 1: auto with zarith).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zle_bool_plus_mono	40	40.151869	59270	3585
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.subsetr_spec	40	40.156178	10951	3524
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z2Pos.inj_double	40	0.037552	10	5	2	synth with cache (only 1: now destruct x).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zone_pos	40	0.005775	4	1	3	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z2Pos.inj_succ_double	40	0.013872	1	1	0	synth with cache (only 1: now destruct x).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.Elt.is_empty_1	40	40.179202	70983	4769
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_m1_l	40	28.625959	15968	2826	5.0.10.14.0.1	synth with cache (only 1: intro n; only 1: bitwise; only 1: rewrite <- (succ_pred n)  at 1; only 1: apply eq_true_iff_eq; only 1: intuition; only 1: now rewrite bits_opp, one_succ, pred_succ, bits_0).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_mul_split	40	40.430406	28547	5047
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Req_dec	40	40.513866	16304	3650
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z2Pos.inj_succ	40	0.656377	270	93	0.0.0.0.1.0.1.6	synth with cache (only 1: symmetry; only 1: destruct x; only 1: simpl; only 1: now rewrite ?Pos.square_xO; only 1: simpl; only 1: now destruct p; only 1: simpl; only 1: destr_eq H).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rtotal_order	40	0.314820	205	54	4.0.0.0.2	synth with cache (only 1: intros x y; only 1: destruct (total_order_T x y); only 1: intuition; only 1: right; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.singleton_1	40	40.367634	84491	7032
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_div_pow2	40	40.109099	19935	5459
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_sgn	40	40.102333	9899	3358
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_lor	40	40.318833	17760	3636
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_mod_pow2	40	40.095474	12950	2954
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InfA_eqA	40	40.107570	21437	3883
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.f_dec	40	0.007036	1	1	0	synth with cache (only 1: decide equality).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_lt_upper_bound	40	40.069184	19899	4757
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_spec_low	40	40.058797	17721	2756
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.union_1	40	40.433878	17963	2906
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.WW.spec_WO	40	40.035308	11614	748
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_lor	40	40.244453	20056	2732
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_lt_square	40	40.084711	13611	4953
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Exists_Forall.Forall_Exists_neg	40	40.061810	17025	3225
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.eq_equiv	40	7.257532	8100	880	65	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.ldiff_spec	40	40.085008	28436	2894
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_log2_up_exact	40	40.144844	19264	3345
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.is_empty_2	40	3.325629	2525	660	4.0.0.3.5.1.1	synth with cache (only 1: destruct m as [| r x e l h]; only 1: simpl; only 1: intros; only 1: unfold empty, Empty; only 1: intuition_in; only 1: simpl; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.mem_spec	40	0.316772	367	92	0.0.3.4	synth with cache (only 1: split; only 1: easy; only 1: intros; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.mem_Leaf	40	0.010446	2	2	0.0	synth with cache (only 1: intros n; only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.empty_spec	40	0.034100	77	7	13	synth with cache (only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Exists_Forall.Exists_Forall_neg	40	40.119346	4607	1397
coq-tactician-stdlib.8.11.dev	Coq.Sets.Image.Image.injective_preserves_cardinal	40	40.084330	26284	4287
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z2Pos.inj_pred	40	0.410270	136	33	0.9.0.0	synth with cache (only 1: destruct x; only 1: trivial; only 1: now destruct p; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z2Pos.inj_mul	40	0.106160	4	4	0.0.0.0	synth with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).
coq-tactician-stdlib.8.11.dev	Coq.Logic.WKL.is_path_from_imp_inductively_barred_at	40	40.367738	38799	5680
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.Elt.is_empty_2	40	40.158070	58873	5406
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_0_l_nonneg	40	40.258922	27137	3112
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rdichotomy	40	3.182024	1658	405	2.1.0.1.4.3.0	synth with cache (only 1: intros x y H; only 1: destruct (total_order_T x y); only 1: left; only 1: destruct s; only 1: auto; only 1: contradiction; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rlt_le	40	0.128310	85	24	0.1.1.4	synth with cache (only 1: intros a b H; only 1: red; only 1: left; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.In_iff	40	40.111911	41755	4744
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rgt_ge	40	0.015595	3	3	0.0.0	synth with cache (only 1: intros; only 1: red; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_max_distr_r	40	40.247138	20120	3845
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.union_Union	40	40.565057	8732	1429
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.clos_trans_transp_permute	40	40.268228	75030	10475
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_ldiff	40	40.137408	24034	4035
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_ldiff	40	40.266240	17317	2289
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_distr_r	40	40.786348	8376	2738
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.mkPX_ok	40	42.253918	6690	776
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_wd	40	40.126916	21340	2882
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_l_l	40	40.200456	6970	1572
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreals.IZR_nz	40	0.031927	14	5	1.0	synth with cache (only 1: intro H; only 1: now apply not_0_IZR).
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Map.Full_map	40	40.167460	57634	9562
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_spec	40	40.301713	11191	4410
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.flatten_e_elements	40	3.667635	1487	342	6.0.8.3.1	synth with cache (only 1: unfold elements; only 1: intuition_in; only 1: rewrite elements_node; only 1: simpl; only 1: now rewrite !app_assoc_reverse).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_r_iff	40	40.351015	10395	4169
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_m1_mul_r	40	40.218775	10710	4431
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_add_inside	40	40.049998	12531	2479
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.le_ge	40	0.025309	10	2	2	synth with cache (only 1: apply ge_le_iff).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_lt	40	40.318741	24782	4110
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_involutive	40	40.198200	24070	3229
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.iszero_eq0	40	40.055822	18776	1118
coq-tactician-stdlib.8.11.dev	Coq.micromega.Ztac.elim_concl_eq	40	15.380734	10558	1830	1.14.11	synth with cache (only 1: intros a n Hn; only 1: intuition; only 1: Z.order').
coq-tactician-stdlib.8.11.dev	Coq.micromega.Ztac.elim_concl_le	40	0.025768	13	4	6.0	synth with cache (only 1: intros; only 1: now apply Z.ge_le).
coq-tactician-stdlib.8.11.dev	Coq.micromega.Ztac.elim_concl_lt	40	0.029936	16	6	4.0	synth with cache (only 1: intros; only 1: now apply Z.lt_nge).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.Raw2SetsOn.Spec.min_elt_spec2	40	40.179689	14493	1462
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_0	40	40.206671	13174	2413
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.SortA_InfA_InA	40	40.058041	15934	2772
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_odd_sgn	40	40.279710	23693	4852
coq-tactician-stdlib.8.11.dev	Coq.micromega.Ztac.Zlt_le_add_1	40	0.287630	29	8	0.2	synth with cache (only 1: intros n m; only 1: apply Z.le_succ_l).
coq-tactician-stdlib.8.11.dev	Coq.micromega.Ztac.add_le	40	0.013680	6	2	4.0	synth with cache (only 1: intros n m H1 H2; only 1: now apply Z.add_nonneg_nonneg).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Forall2.Forall2_app_inv_l	40	40.146069	53382	6147
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.exists_spec	40	40.108713	37723	4376
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.EqlistA.eqlistA_app	40	0.041853	11	6	0.3.0.0	synth with cache (only 1: induction 1; only 1: auto; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Forall2.Forall2_app_inv_r	40	40.164314	57883	5804
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalN.Unsigned.to_uint_inj	40	40.140140	54739	3087
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_m1_r	40	0.024897	6	3	3.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: now rewrite lnot_spec, bits_m1).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_m1_l	40	0.025553	6	3	3.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: now rewrite lnot_spec, bits_m1).
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Nat2Pos.inj_sub	40	40.082330	28485	4679
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_trans_1	40	40.061639	20794	2704
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_nonneg	40	40.352707	10293	4518
coq-tactician-stdlib.8.11.dev	Coq.Reals.ClassicalDedekindReals.lowerCutAbove	40	40.163925	14427	4540
coq-tactician-stdlib.8.11.dev	Coq.micromega.Ztac.mul_le	40	0.709540	222	50	5.4	synth with cache (only 1: intros a b Ha Hb; only 1: Z.order_pos).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ForallPairs.ForallOrdPairs_In	40	40.084719	24527	4413
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_trans_2	40	0.353776	24	6	4	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zone_min_pos	40	8.515147	6847	535	3.3.3.34.10	synth with cache (only 1: intuition; only 1: induction n; only 1: (specialize (IH p'); destruct Pos.lxor; trivial; now rewrite <- IH) || now destruct Pos.testbit; only 1: now destruct p; only 1: now destruct p).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.add_Add	40	40.041040	11415	2134
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.MapsTo_iff	40	3.988509	4241	512	1.1.7.7.13	synth with cache (only 1: intros Hab; only 1: intros x y z; only 1: intuition; only 1: apply (MapsTo_1 H H0); only 1: apply (MapsTo_1 (E.eq_sym H) H0)).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_neq_trans_1	40	0.220044	9	2	1	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zle_is_le_bool	40	0.212054	67	14	0.0.7	synth with cache (only 1: split; only 1: apply Z.leb_le; only 1: apply Z.leb_le).
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_diff_intro	40	40.255108	9055	3994
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.ge_le	40	3.925527	1638	340	19	synth with cache (only 1: apply Pos.ge_le_iff).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rdefinitions.Rrepr_appart_0	40	40.092070	23076	3989
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.mem_in_iff	40	0.391189	308	76	10.0	synth with cache (only 1: intros; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.Elt.add_1	40	40.226597	88897	6806
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_cases	40	40.262568	20276	5440
coq-tactician-stdlib.8.11.dev	Coq.Reals.DiscrR.Rlt_R0_R2	40	0.051086	8	7	0.0.0.0.1.0.0	synth with cache (only 1: apply Rlt_trans with (0 + 1); only 1: apply Rlt_n_Sn; only 1: rewrite Rplus_comm; only 1: apply Rplus_lt_compat_l; only 1: replace R1 with (0 + 1); only 1: apply Rlt_n_Sn; only 1: apply Rplus_0_l).
coq-tactician-stdlib.8.11.dev	Coq.Reals.DiscrR.IZR_eq	40	0.049493	5	3	0.0.2	synth with cache (only 1: intros; only 1: subst; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_m1	40	40.117944	13358	1741
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlogic.not_not_archimedean	40	40.113939	37643	5963
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.pred_of_succ_nat	40	40.074006	18748	4230
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.ni_min_comm	40	40.156296	38280	3437
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_square	40	40.286049	12432	4108
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_m1_r	40	40.289041	20066	3003
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.pred_div2_up	40	1.401789	498	231	0.0.2.0.1.1.4	synth with cache (only 1: destruct p; only 1: simpl; only 1: apply Pos.pred_N_succ; only 1: simpl; only 1: now destruct p; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.add_ok	40	40.125892	10678	1382
coq-tactician-stdlib.8.11.dev	Coq.Strings.Byte.nat.to_of_nat_iff	40	40.307302	3750	1012
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersEx.PositiveOrderedTypeBits.lt_strorder	40	40.543589	74922	4018
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.add_2	40	40.187986	53349	7693
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_gt_lin_r	40	40.698174	12903	2767
coq-tactician-stdlib.8.11.dev	Coq.Reals.ROrderedType.Req_dec	40	0.221944	38	26	0.0.2.0	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), Rlt_dichotomy_converse; only 1: unfold not; only 1: intuition eauto  3).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_sub_r	40	40.100984	33258	4360
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_m1_r	40	40.167557	19687	2011
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.ceqb_spec	40	40.063415	12829	576
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ForallPairs.ForallPairs_ForallOrdPairs	40	40.160878	40481	7099
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_le_simpl_nonneg	40	40.480595	12394	4393
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_mult	40	40.548681	36115	4727
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreduction.Qplus'_correct	40	40.417912	7772	2787
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_plus	40	0.032797	5	2	3.0	synth with cache (only 1: intros; only 1: ring_Rsqr).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.to_Z_rec_bounded	40	40.062460	16193	1488
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreduction.Qmult'_correct	40	0.012510	4	2	2.0	synth with cache (only 1: intros; only 1: apply Qred_correct).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreduction.Qminus'_correct	40	0.012800	5	2	3.0	synth with cache (only 1: intros; only 1: apply Qred_correct).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_mem_2	40	40.101981	33764	3657
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_minus	40	0.033081	2	2	0.0	synth with cache (only 1: intros; only 1: ring_Rsqr).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_m1_r	40	40.327567	19583	2389
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.QSeqEquivEx_sym	40	40.157570	35211	3429
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_neg_minus	40	0.130627	15	3	5.1	synth with cache (only 1: intros x y; only 1: ring_Rsqr).
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_1	40	0.025977	3	2	0.1	synth with cache (only 1: unfold Rsqr; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.ENCODING_VALUE.Z_to_binary	40	40.832288	54035	6777
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_even	40	40.221697	9858	2940
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_sub	40	40.297101	39563	4274
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_m1_l	40	40.166614	23728	2689
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.iszero_not_eq0	40	5.991013	1888	304	0.17.0.1	synth with cache (only 1: intros; only 1: intros Heq; only 1: subst; only 1: discriminate).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.sneakl_shiftr	40	0.109936	54	12	0.7.0	synth with cache (only 1: intros; only 1: destruct x; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.add_3	40	40.153571	47461	5552
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.elements_1	40	0.005380	1	1	0	synth with cache (only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.elements_2	40	0.007902	1	1	0	synth with cache (only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ForallPairs.ForallOrdPairs_ForallPairs	40	40.115320	33573	5644
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonpos_cases	40	40.223628	16794	3292
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.remove_1	40	40.136492	36090	5371
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.elements_3	40	0.217984	371	42	0.18	synth with cache (only 1: induction m; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.sneakr_shiftl	40	0.039013	2	2	0.0	synth with cache (only 1: destruct x; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Computational.Decidable_PosLe_obligation_1	40	40.047509	14200	2566
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.cardinal_1	40	0.011803	2	2	0.0	synth with cache (only 1: intros m; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_add_lower	40	40.361884	13128	3031
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_lnot_diag	40	40.221577	15595	3104
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_sub	40	40.083182	24509	6150
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_exists_sub	40	40.329120	39012	4936
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_lnot_diag	40	40.293912	15584	3115
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_2_mono_l	40	40.515653	6985	1479
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_idemp_l	40	40.829486	15488	4702
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.divide_pos_neg_l	40	17.869832	15892	1019	7.26.0.0.7.26.0.0.0	synth with cache (only 1: split; only 1: intros (m, H); only 1: exists (- m); only 1: subst; only 1: now destruct m; only 1: intros (m, H); only 1: exists (- m); only 1: subst; only 1: now destruct m).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_facts.Zpower_pos_1_l	40	40.052637	16072	1262
coq-tactician-stdlib.8.11.dev	Coq.Vectors.Fin.depair_sanity	40	40.054786	17450	2683
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_upper_bound	40	40.066104	16982	4031
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.remove_2	40	40.232297	63013	6810
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_NoDup'	40	40.170359	47793	8620
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalZ.to_int_surj	40	40.098905	32700	6330
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Ring31.Int31_canonic	40	40.050103	10256	1451
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z2Pos.inj_compare	40	0.053597	4	4	0.0.0.0	synth with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z2Pos.inj_leb	40	0.051627	4	4	0.0.0.0	synth with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sqrtrem_step_spec	40	40.110483	35550	3201
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z2Pos.inj_ltb	40	0.054049	4	4	0.0.0.0	synth with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).
coq-tactician-stdlib.8.11.dev	Coq.Floats.FloatAxioms.Prim2SF_inj	40	40.169218	52646	6177
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z2Pos.inj_eqb	40	0.051513	4	4	0.0.0.0	synth with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_cases	40	40.390288	18575	5404
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InfA_alt	40	40.025028	5575	1945
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_compat_l	40	40.052851	13104	3820
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_add	40	40.056744	16593	2843
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEeval_ext	40	3.595509	356	124	6.3	synth with cache (only 1: unfold NPEequiv; only 1: solve_proper).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rsub_0_l	40	0.033915	4	1	3	synth with cache (only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.omega.PreOmega.Z.mod_0_r_ext	40	40.112366	38887	3517
coq-tactician-stdlib.8.11.dev	Coq.omega.PreOmega.Z.div_0_r_ext	40	0.029216	6	6	0.0.0.0.0.0	synth with cache (only 1: intro; only 1: subst; only 1: destruct x; only 1: trivial; only 1: reflexivity; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.omega.PreOmega.Z.rem_0_r_ext	40	0.025875	9	5	4.1.0	synth with cache (only 1: symmetry; only 1: subst; only 1: now destruct x).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_sub_max	40	40.074292	21993	4750
coq-tactician-stdlib.8.11.dev	Coq.omega.PreOmega.Z.quot_0_r_ext	40	0.029320	6	6	0.0.0.0.0.0	synth with cache (only 1: intro; only 1: subst; only 1: destruct x; only 1: trivial; only 1: reflexivity; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.simpl_fact	40	40.053743	15137	3832
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalEpsilon.constructive_definite_description	40	40.103018	40881	3982
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.gt_lt_iff	40	40.059502	13324	2965
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.inter_Intersection	40	11.588308	1691	417	1.3.1.0.0.3.0.1.1.0.0	synth with cache (only 1: unfold Same_set, Included, mkEns, In; only 1: split; only 1: intro; only 1: set_iff; only 1: intuition; only 1: constructor 1; only 1: Dec.fsetdec; only 1: Dec.fsetdec; only 1: intro; only 1: inversion 1; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_O	40	0.024702	2	2	0.0	synth with cache (only 1: intro n; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.btauto.Reflect.Translation.poly_of_formula_valid_compat	40	40.405774	29529	1132
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.to_little_uint_succ	40	40.178324	24625	4047
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.remove_3	40	40.217611	79578	5422
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_upper_bound	40	40.035219	4396	892
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_1	40	0.283229	60	13	3.4	synth with cache (only 1: intros a0; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyComparison.Zcompare_spec	40	40.064311	20276	3469
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.add_le_mul	40	40.315030	12098	2083
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_opp_l	40	40.219812	18172	3625
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.ARgen_phiPOS_add	40	40.044210	8461	1807
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.rel_choice_and_proof_irrel_imp_guarded_rel_choice	40	40.063107	24133	2188
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_add	40	0.341062	75	44	0.0.1.0.0.0.0.0	synth with cache (only 1: intros x n; only 1: elim n; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: intros n0 H' m; only 1: rewrite H'; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.wB_pos	40	40.099570	33819	2989
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Z_rem_same	40	40.042225	11554	3475
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalDescription.excluded_middle_informative	40	40.326786	27454	8299
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_eq_0_l	40	40.424283	26594	4054
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rminmax.Rmax_l	40	0.020381	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmax_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z2Pos.inj_sqrt	40	0.031211	12	5	7	synth with cache (only 1: now destruct x as [| [x| x| ]| ]).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zwf.wf_proof.Zwf_well_founded	40	40.048153	10908	2022
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.less_than_singleton	40	40.082901	25987	6729
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rminmax.Rmax_r	40	0.021248	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmax_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_spec1	40	40.128804	12315	2043
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z2Pos.inj_gcd	40	0.134723	23	11	0.0.0.1	synth with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcabs.Qred_abs	40	40.059520	13059	2869
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rminmax.Rmin_l	40	0.020684	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmin_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.mem_2	40	0.038160	8	6	0.0.0.0.1.1	synth with cache (only 1: intros m x; only 1: functional induction (mem x m); only 1: easy; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rminmax.Rmin_r	40	0.020641	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmin_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rsub_0_r	40	2.581127	244	33	16	synth with cache (only 1: let rec Esimpl := let rec rsimpl := gen_srewrite Rsth Reqe ARth in try rewrite_db Esimpl; rsimpl; simpl in Esimpl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_idemp_r	40	40.966166	4843	2687
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_l_r	40	40.186036	7718	1853
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyBool.Z_eqb_isZero	40	40.103306	17003	3027
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_map.Permutation_map	40	40.149399	51374	7131
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_mul_even	40	40.060075	15892	4127
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.height_non_negative	40	40.057536	14424	2110
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_distr_l	40	2.100957	451	251	0.0.0.0.5.0	synth with cache (only 1: intros; only 1: rewrite !(mul_comm c); only 1: assert (b * c ~= 0) by (rewrite <- neq_mul_0; tauto); only 1: rewrite !rem_eq by trivial; only 1: rewrite quot_mul_cancel_r by order; only 1: now rewrite mul_sub_distr_r, <- !mul_assoc, (mul_comm (a ÷ b) c)).
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.no_middle_eval_tt	40	36.167302	17840	1100	18.17.29	synth with cache (only 1: intros m IH; only 1: intuition; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalZ.of_int_norm	40	4.186526	1903	519	17.0.0.0	synth with cache (only 1: destruct d; only 1: simpl; only 1: now induction d; only 1: now induction d).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Qpower_1	40	40.044041	7011	1013
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.avl_node	40	0.008016	1	1	0	synth with cache (only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_r_l	40	40.437899	8847	1598
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_le_mono_r	40	40.333493	33391	5520
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Heap.defs.heap_to_list	40	40.409486	76631	2353
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.find_1	40	40.296131	64508	5101
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalZ.of_inj	40	0.030142	12	5	2.0.0	synth with cache (only 1: intros [=H]; only 1: rewrite <- !Unsigned.to_of; only 1: now f_equal).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Qpower_positive_0	40	0.834779	97	38	0.0.0.0.0.0.0.0.1	synth with cache (only 1: induction n; only 1: simpl; only 1: rewrite IHn; only 1: reflexivity; only 1: simpl; only 1: rewrite IHn; only 1: reflexivity; only 1: simpl; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.eq_mul_1	40	40.232116	10080	1929
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Nat2Pos.inj_min	40	40.091364	27924	6596
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_max	40	40.104962	20857	4656
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_spec_high	40	40.062366	17030	4388
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsLUB.is_upper_bound_not_epsilon	40	40.246185	33041	6874
coq-tactician-stdlib.8.11.dev	Coq.Logic.Epsilon.constructive_indefinite_description	40	40.280155	90819	6097
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Rtauto.with_env.Reflect	40	40.929803	102820	3717
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.Endomorph_id	40	40.042617	9517	3548
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_eq_0_r	40	40.376159	14989	3694
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_pos	40	40.069943	19402	3962
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sqrtrem_spec	40	40.069165	20213	3135
coq-tactician-stdlib.8.11.dev	Coq.Logic.Eqdep_dec.UIP_refl_bool	40	40.196115	64250	13516
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add_simpl_r_r	40	2.332382	504	112	0.11.0	synth with cache (only 1: intros n m p; only 1: rewrite (add_comm p m); only 1: now rewrite <- sub_sub_distr, sub_add_distr, sub_diag, sub_0_l, sub_opp_r).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sqrt_spec	40	40.076846	15994	3883
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_spec_iff	40	40.049473	11487	3850
coq-tactician-stdlib.8.11.dev	Coq.Strings.Ascii.ascii_dec	40	40.045654	14024	2296
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_le_mono_l	40	40.279485	24886	6512
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_lt_lin	40	40.067360	19451	3914
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_spec_low	40	40.018705	3665	1799
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_spec_high	40	40.020947	3964	1831
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.divide_add_cancel_l	40	40.155099	31169	5230
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.divide_xO_xI	40	40.124962	25533	5013
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.RealField.Rlt_n_Sn	40	40.117019	45595	3951
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.divide_xO_xO	40	40.103344	26852	6419
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.ltl_unit	40	40.100561	30788	6771
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.divide_mul_l	40	40.082058	23254	5990
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nodd_not_double	40	40.190781	63168	4712
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Nat2Pos.inj_max	40	40.088864	26587	7776
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_involutive	40	40.056923	15771	3628
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.ggcdn_gcdn	40	40.091652	29414	4390
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.divide_mul_r	40	40.162760	20241	4210
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_pos	40	40.209667	6943	2533
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_0_l	40	40.068000	20094	3418
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.acc_app	40	0.230749	92	36	0.0.6	synth with cache (only 1: destruct 1; only 1: intros; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.prop_ext	40	40.123540	40225	4290
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Zpos_eq	40	0.039537	3	2	0.1	synth with cache (only 1: intros n1 n2 H; only 1: now f_equiv).
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.rsub_ext_Proper	40	40.060820	12438	1040
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_ones_low	40	40.062231	15855	4308
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring.Ring.pow_pos_comm	40	40.194178	31209	1452
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.ZL0	40	0.110200	3	1	2	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_lin	40	40.066617	18056	4250
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.compat_P_aux	40	21.535176	28156	2921	0.15.16.5.0	synth with cache (only 1: destr_bool; only 1: intro s; only 1: intros; only 1: rewrite <- (H _ _ H0); only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_min	40	40.072177	22087	4952
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_diff_elim1	40	40.276917	3506	1266
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Fin2Restrict.restrict_f2n	40	40.460501	30579	6034
coq-tactician-stdlib.8.11.dev	Coq.Sets.Infinite_sets.Infinite_sets.Pigeonhole_ter	40	40.198531	76183	8589
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.odd_pow	40	40.404886	15154	3723
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.of_uint_acc_rev	40	40.058462	15597	3861
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Zplus_diag_eq_mult_2	40	0.969261	163	61	5.0	synth with cache (only 1: change 2 with (1 + 1); only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z_eq_mult	40	0.033220	16	3	2	synth with cache (only 1: now destruct m).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_ones	40	40.035797	9036	2593
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.rel_choice_indep_of_general_premises_imp_guarded_rel_choice	40	40.270774	30786	3712
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2SuccNat.id_succ	40	40.052818	17236	2280
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.rbal_spec	40	40.039312	11810	1073
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_ones_low	40	40.103198	23917	4412
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.remove_spec	40	40.036241	9923	2230
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Cyclic63.is_zero_spec_aux	40	40.699973	29133	2232
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zgcd_alt.Zgcdn_pos	40	40.087373	19820	3602
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rrepr_plus	40	40.072999	20555	3110
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_divide	40	40.077685	24053	6894
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_r_r	40	40.359503	9381	1636
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.EqlistA.app_eqlistA_compat	40	22.646469	6266	814	0.1.0.0.8.27	synth with cache (only 1: compute; only 1: induction 1; only 1: induction 1; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.Elt.add_2	40	40.142559	48532	6419
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_div_mod_POS	40	40.059090	14384	3040
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lnot_diag	40	2.496911	709	251	0.0.1.0.0.0.1.0.1.0.0	synth with cache (only 1: intros a n; only 1: bitwise; only 1: destruct (le_gt_cases n m); only 1: rewrite lnot_spec_high, ones_spec_high; only 1: now destruct a.[m]; only 1: trivial; only 1: trivial; only 1: rewrite lnot_spec_low, ones_spec_low; only 1: now destruct a.[m]; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.rsub_ext_Proper	40	40.066836	15985	994
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutEq.Perm.permutation_Permutation	40	40.113830	36587	8991
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pcompare_eq_Gt	40	0.005444	2	1	1	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Fin2Restrict.restrict_n2f	40	40.185863	76542	2900
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ones_r	40	40.042466	10106	2734
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_neq_trans_2	40	17.416560	1833	296	6.11.3	synth with cache (only 1: firstorder; only 1: apply <- remove_spec; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.EqlistA.eqlistA_rev	40	0.938353	447	110	13.0	synth with cache (only 1: intros; only 1: now rewrite H).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.EqlistA.eqlistA_length	40	30.212666	18551	2914	0.8.0.0.18	synth with cache (only 1: induction 1; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_unfold	40	40.070060	18029	4155
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_In_singleton	40	0.071600	94	14	8.1	synth with cache (only 1: intro; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_add_In	40	0.065895	9	2	1	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.Raw2SetsOn.Spec.min_elt_spec3	40	40.093731	10613	1301
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_null	40	40.176819	17219	4886
coq-tactician-stdlib.8.11.dev	Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Direct.epsilon_smallest	40	40.358506	16794	542
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.subset_spec	40	40.089974	30371	4237
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Zpower_nat_is_exp	40	40.045447	14477	2624
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.ArithRing.natSRth	40	40.021137	3830	1449
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.Raw2SetsOn.Spec.max_elt_spec1	40	40.115713	20507	1962
coq-tactician-stdlib.8.11.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.Generalized_induction_on_finite_sets	40	40.108762	36029	9329
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.Raw2SetsOn.Spec.max_elt_spec2	40	40.142930	16794	1808
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zmod_divide	40	31.599881	8372	1495	0.0.8.2.4.3	synth with cache (only 1: intros a b; only 1: zero_or_not b; only 1: easy; only 1: rewrite Z.mod_divide; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qabs.Qabs_case	40	40.104688	37622	3172
coq-tactician-stdlib.8.11.dev	Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Acc.P_implies_acc	40	0.261368	276	48	0.1.1.2.8	synth with cache (only 1: intros n H; only 1: constructor; only 1: intros y [H1 H2]; only 1: elim H2; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_l	40	40.196707	22781	3342
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.nat_bijection_Permutation	40	40.092420	24346	3409
coq-tactician-stdlib.8.11.dev	Coq.Structures.Orders.TTLB_to_OTF.lt_compat	40	40.139061	22899	6143
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.middle_in_interval	40	40.095143	30551	5814
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Mergesort.Sort.Sorted_sort	40	40.189404	69281	6708
coq-tactician-stdlib.8.11.dev	Coq.Reals.ArithProp.minus_neq_O	40	40.182467	33786	5382
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.Zth	40	40.212580	7381	1509
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.inject_Z_injective	40	40.090207	31481	4128
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.ggcd_gcd	40	40.118237	37560	4323
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_lower_bound	40	40.121874	2798	811
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qlt_alt	40	0.004681	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.radd_ext3_Proper	40	0.007709	2	1	1	synth with cache (only 1: exact (Radd_ext Reqe)).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi_ext	40	2.673555	823	217	9.3	synth with cache (only 1: unfold Pequiv; only 1: solve_proper).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.rmul_ext3_Proper	40	0.008389	3	1	2	synth with cache (only 1: exact (Rmul_ext Reqe)).
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.or_clause_correct	40	40.042801	8339	1853
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.ropp_ext3_Proper	40	0.006215	1	1	0	synth with cache (only 1: exact (Ropp_ext Reqe)).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersAlt.OT_to_Alt.compare_trans	40	40.266469	31735	4535
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rminus_eq_0	40	40.262146	33742	2636
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.MakeSetOrdering.eq_equiv	40	1.144531	1684	90	15.38	synth with cache (only 1: compute; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_r	40	40.097317	20407	6087
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.ggcdn_correct_divisors	40	40.174655	62585	4350
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qred_identity	40	40.097814	34836	3037
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_Subset_add_remove	40	2.809554	1141	277	16	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_diag	40	31.379245	12762	3733	0.1.0.6.0.9.2.0	synth with cache (only 1: intros; only 1: rewrite <- lcm_abs_r; only 1: apply lcm_unique; only 1: apply abs_nonneg; only 1: now apply divide_abs_l; only 1: exists 1; only 1: now nzsimpl'; only 1: trivial using divide_1_l, le_0_1).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.eq_equiv	40	40.333905	49734	3219
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_disjunction	40	0.147594	12	4	1.0.1	synth with cache (only 1: intros s s' E; only 1: intuition; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.ge_le_iff	40	40.064976	18672	4666
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.inter_1	40	40.226572	35889	4798
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_not_In_disj	40	0.201407	2	1	1	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.ggcd_correct_divisors	40	40.486400	34729	2899
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.SortA_app	40	40.111988	35140	6031
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcomplements.floor_ok	40	40.082251	26441	2931
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyInst.of_nat_to_nat_eq	40	40.090841	31365	3165
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.eval_cnf_cons_iff	40	0.049458	6	5	0.1.0.0.0	synth with cache (only 1: intros; only 1: unfold eval_cnf in *; only 1: rewrite make_conj_cons; only 1: unfold eval_clause at 2; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.gcd_divide_l	40	40.104476	33409	6063
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_not_In_conj	40	0.501660	6	2	1.3	synth with cache (only 1: vm_compute; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_iff_conj	40	0.174709	23	4	4	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRlt_asym	40	40.082646	18863	1931
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_le_mono	40	40.200760	19877	4000
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.gcd_divide_r	40	40.073120	22428	3752
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.union_inf	40	40.053889	13792	2861
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_alt.adapt_injective	40	40.064265	21895	2555
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.SortA_NoDupA	40	40.163766	19680	3382
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_r_nonneg	40	1.572693	325	134	0.7.0.0	synth with cache (only 1: intros; only 1: rewrite <- (abs_eq p)  at 3; only 1: now rewrite !(mul_comm _ p), lcm_mul_mono_l, mul_comm; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.rbal_ok	40	40.031146	7338	1007
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.gcdn_greatest	40	40.112010	36936	6136
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.mem_eq	40	0.441901	63	32	6	synth with cache (only 1: Dec.fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.excluded_middle_independence_general_premises	40	40.247508	80274	12366
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.diff_1	40	40.201552	29363	4270
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.neg_le_neg	40	40.089681	20478	5736
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.eval_cnf_cons	40	11.857197	4353	932	1.1.4.1.2.4.3.0	synth with cache (only 1: intros; only 1: unfold cnf_tt, eval_cnf, eval_clause; only 1: generalize nil as acc; only 1: induction f; only 1: simpl; only 1: tauto; only 1: simpl; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_Ifp.fp_R0	40	40.055064	16900	1651
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.or_clause_cnf_correct	40	40.124626	22340	3180
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.filter_3	40	3.181729	616	204	0.6.0.0.0.0.0	synth with cache (only 1: intros s x f; only 1: unfold filter; only 1: destruct M.filter as (x0, Hiff); only 1: intuition; only 1: generalize (Hiff (compat_P_aux H)); only 1: rewrite <- H1; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.SetoidDec.unit_eqdec_obligation_1	40	40.194736	78953	1564
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add_mul_even	40	40.284385	22143	5218
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.neg_lt_neg	40	40.118517	18872	5612
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_neg_cases	40	40.236861	8672	1872
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_nz	40	40.095490	8877	2593
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Ring63.Int63Ring	40	40.257241	32718	6118
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.for_all_2	40	1.428879	566	200	1.6.0.0.0.0	synth with cache (only 1: intros s f; only 1: unfold for_all; only 1: case M.for_all; only 1: intuition; only 1: case (M.elements s); only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Pinj_ext	40	7.227194	2204	517	13.5	synth with cache (only 1: unfold Pequiv; only 1: solve_proper).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.cardinal_1	40	40.246551	18514	4637
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.divide_pos_neg_r	40	40.127736	33737	2174
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod	40	40.658482	5310	2327
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_add	40	40.046203	11000	4109
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_nonneg	40	40.662385	13957	1664
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_add_l	40	40.475529	12654	3606
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.exists_2	40	0.029455	8	6	0.0.0.1.1.0	synth with cache (only 1: intros s f; only 1: unfold exists_; only 1: case M.exists_; only 1: intuition; only 1: intuition; only 1: inversion H0).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qround.Qlt_floor	40	40.085019	24328	4446
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.In_dec	40	0.203519	8	5	0.0.2.0.1	synth with cache (only 1: intros; only 1: generalize (F.mem_iff s x); only 1: case (mem x s); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z2Pos.id	40	40.126817	47897	2233
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_diff_elim2	40	40.045728	9728	4001
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_decrease	40	40.144846	13297	2160
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.eq_Leq	40	40.100941	32176	4455
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Ring63.eq31_correct	40	1.993331	1402	192	0.23	synth with cache (only 1: intros f w; only 1: auto using eqb_correct, eqb_complete).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.guarded_rel_choice_imp_rel_choice	40	40.099044	34806	3680
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z2Pos.inj	40	40.130859	48460	5232
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_lt_cancel	40	40.166343	25084	5198
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.rbal'_spec	40	40.050537	10899	1159
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z2Pos.inj_iff	40	40.088191	24221	6995
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rle_ge	40	33.685993	20039	3079	4.0.25.0.0	synth with cache (only 1: intros; only 1: red; only 1: destruct H; only 1: tauto; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rge_le	40	0.025185	5	5	0.0.0.0.0	synth with cache (only 1: destruct 1; only 1: red; only 1: tauto; only 1: red; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rlt_gt	40	0.013624	3	3	0.0.0	synth with cache (only 1: intros; only 1: red; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rgt_lt	40	0.008780	2	2	0.0	synth with cache (only 1: intros; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.fold_1	40	40.298564	26236	4730
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_neq_trans_2	40	40.036678	8007	1157
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Wf_Z.Efficient_Rec.natlike_rec2	40	40.180510	42980	4131
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.Elt.add_3	40	40.184069	64804	6515
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.Elt.elements_1	40	0.005981	1	1	0	synth with cache (only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.In_dec	40	0.087845	6	5	0.0.0.0.1	synth with cache (only 1: intros; only 1: generalize (F.mem_iff s x); only 1: case (mem x s); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.Elt.elements_2	40	0.007149	1	1	0	synth with cache (only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_In_singleton	40	0.019693	15	3	5.1	synth with cache (only 1: intro; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_add_In	40	0.048740	2	1	1	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_Subset_add_remove	40	0.142302	32	10	7	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.Elt.remove_1	40	40.155298	55717	6319
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.equal_2	40	40.149994	56059	3874
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.lt_strorder	40	40.106481	25251	3535
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.Elt.cardinal_1	40	0.008040	1	1	0	synth with cache (only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_disjunction	40	0.112172	9	2	1	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.add_spec	40	0.041255	2	2	0.0	synth with cache (only 1: unfold add; only 1: now autorew).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.rbal'_ok	40	40.067498	4584	758
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_not_In_disj	40	0.208702	2	1	1	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_ok2'	40	18.270724	3877	1732	0.0.2.0.0.0.0.0.0.0.0.1.0.0.0.0	synth with cache (only 1: induction s; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: inv; only 1: generalize (IHs H1 f x); only 1: destruct (f a); only 1: destruct (partition f s); only 1: simpl in *; only 1: auto; only 1: destruct (partition f s); only 1: simpl in *; only 1: inversion_clear H; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.add_ok	40	0.175629	15	3	7	synth with cache (only 1: ok).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.Positive_as_OT.compare	40	40.256343	35894	4828
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.one_mod_wB	40	40.057389	19505	2047
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.lt_compat	40	40.086478	7190	1436
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.gcd_greatest	40	40.074450	22145	4586
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.Elt.remove_2	40	40.101597	29220	3528
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRcomplete.FQ_dense	40	40.127029	2558	1111
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_not_In_conj	40	0.525468	14	4	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_land	40	40.053875	13958	3625
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.Elt.elements_3w	40	1.564959	4546	249	46	synth with cache (only 1: now intros []).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z2Pos.inj_add	40	40.058605	18905	2494
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_iff_conj	40	0.256860	30	7	6	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z2Pos.inj_sub	40	40.049920	14733	2082
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qle_alt	40	0.004756	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_spec2	40	40.051657	3197	1837
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_mul_diag_l	40	23.953942	12883	3708	0.0.6.0.17.4	synth with cache (only 1: intros n m p; only 1: apply gcd_unique; only 1: order; only 1: apply divide_refl; only 1: apply divide_mul_l, divide_refl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.WW.spec_OW	40	40.179350	15657	2292
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ones_r_low	40	40.107166	28829	4881
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul_cancel_r	40	40.064860	19856	4036
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Ring63.TestRing.test	40	5.155993	1616	595	6.9	synth with cache (only 1: intros a b; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ones_l_low	40	40.156779	22763	4249
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_lnot_diag	40	40.389440	23228	4377
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.filter_1	40	40.231885	18434	2633
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_mul_above	40	40.099460	12695	3427
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_lnot_diag	40	40.087613	17149	3518
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.mem_1	40	40.169510	16572	2600
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lor	40	40.282476	22475	4595
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.mem_node	40	40.207345	23659	3228
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z2Pos.inj_pow	40	40.047592	14395	1848
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_lt_pow2	40	40.062705	15459	4453
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z2Pos.inj_pow_pos	40	40.071174	23253	3226
coq-tactician-stdlib.8.11.dev	Coq.Sets.Image.Image.cardinal_decreases	40	40.266786	50227	7519
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.Elt.remove_3	40	40.198166	71116	6556
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.subset_Leaf_s	40	0.696797	480	73	17.0	synth with cache (only 1: intros n; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_eq_0	40	40.319697	14964	3913
coq-tactician-stdlib.8.11.dev	Coq.Logic.WKL.find_left_path	40	40.410075	40308	4229
coq-tactician-stdlib.8.11.dev	Coq.micromega.Fourier_util.Rlt_mult_inv_pos	40	0.912349	292	157	0.0.0.1.4	synth with cache (only 1: intros a b Ha Hb; only 1: apply Rmult_lt_0_compat; only 1: assumption; only 1: apply Rinv_0_lt_compat; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_land	40	40.072875	19794	3686
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rnot_le_gt	40	0.046847	22	8	0.0.0.1	synth with cache (only 1: intros r1 r2; only 1: generalize (Rtotal_order r1 r2); only 1: unfold Rle; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rnot_ge_lt	40	0.037338	21	8	0.0.1	synth with cache (only 1: intros; only 1: apply Rnot_le_lt; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rnot_lt_le	40	0.056472	24	9	2.0.0.1	synth with cache (only 1: intros r1 r2; only 1: generalize (Rtotal_order r1 r2); only 1: unfold Rle; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rnot_gt_le	40	0.051033	25	11	0.0.0.1.0.1	synth with cache (only 1: intros; only 1: destruct (Rtotal_order r1 r2) as [| [H0| H0]]; only 1: auto with real; only 1: subst; only 1: auto with rorders; only 1: contradiction).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_ldiff	40	40.308605	17013	3967
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreals.eqR_Qeq	40	40.068162	21699	4275
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add_simpl_r_l	40	40.222042	10911	1611
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.cons_1	40	40.084450	24235	4762
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rnot_gt_ge	40	0.385844	162	64	0.0.0.0.2.0.1	synth with cache (only 1: intros; only 1: destruct (Rtotal_order r1 r2) as [| [H0| H0]]; only 1: red; only 1: auto with real; only 1: subst; only 1: auto with rorders; only 1: contradiction).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.pos_pred_shiftl_low	40	40.122576	15978	2901
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.add_mod_idemp_l	40	40.481909	3731	1798
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rnot_lt_ge	40	0.204485	23	14	1.4.0	synth with cache (only 1: intros r1 r2; only 1: intro abs; only 1: eauto using Rnot_lt_le with rorders).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_lnot_lnot	40	40.384297	22505	4547
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_add_cons_inside_eq	40	40.040099	7489	3562
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_diag_l	40	40.276410	10901	3639
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.mul_pred_r	40	40.308063	8837	2329
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.Raw2SetsOn.Spec.max_elt_spec3	40	40.152931	21559	1804
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lxor_l	40	40.330900	21196	3859
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.abs_pow	40	40.292864	13838	4200
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.EqlistA.eqlistA_rev_app	40	40.046161	10970	1930
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lxor_r	40	40.302726	18431	3778
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalN.Unsigned.to_uint_surj	40	40.093469	27049	7447
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalN.Unsigned.of_uint_norm	40	0.010780	1	1	0	synth with cache (only 1: now induction d).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalN.Unsigned.of_inj	40	0.017534	5	3	1.0.1	synth with cache (only 1: intros; only 1: rewrite <- !DecimalPos.Unsigned.to_of; only 1: now f_equal).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_add_upper	40	40.719271	8812	2141
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalN.Unsigned.of_iff	40	0.022792	6	5	1.0.0.0.0	synth with cache (only 1: split; only 1: apply DecimalPos.Unsigned.of_inj; only 1: intros E; only 1: rewrite <- DecimalPos.Unsigned.of_uint_norm, E; only 1: apply DecimalPos.Unsigned.of_uint_norm).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_lor	40	40.225027	22706	4363
coq-tactician-stdlib.8.11.dev	Coq.Reals.ClassicalDedekindReals.DRealQlim_rec	40	40.146709	16648	2196
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEequiv_eq	40	40.034892	9203	218
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.ggcd_greatest	40	40.234291	23675	5226
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_pos_cases	40	40.218190	10274	2390
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2SuccNat.pred_id	40	40.030639	5009	1134
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Add_Add	40	40.064112	18286	3877
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zge_is_le_bool	40	40.076749	23498	5237
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableTypeEx.PairDecidableType.eq_refl	40	0.489273	400	64	3.3.0.5	synth with cache (only 1: induction x; only 1: constructor; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Ring31.ring_theory_switch_eq	40	33.785222	27811	2776	21.1.23	synth with cache (only 1: intros EQ; only 1: intros; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_diff_nodup	40	24.859159	28335	5712	3.19.0.2.0.0.0.0.0.1	synth with cache (only 1: induction 1 as [| x l H H' IH]; only 1: intro Hl'; only 1: simpl; only 1: constructor; only 1: intro Hl'; only 1: simpl; only 1: destruct (set_mem x l'); only 1: auto; only 1: firstorder; only 1: now apply set_add_nodup).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.not_mem_in_iff	40	40.176856	50845	4282
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.pos_pred_shiftl_high	40	40.052410	13958	3480
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.Elt.find_1	40	40.174698	64182	6673
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.PaddCl_ok	40	40.024158	5676	1699
coq-tactician-stdlib.8.11.dev	Coq.micromega.Fourier_util.Rlt_zero_pos_plus1	40	4.027875	1206	510	1.1.2.0.3.0.0.0	synth with cache (only 1: intros; only 1: apply Rlt_le_trans with 1; only 1: auto with real; only 1: elim (Rplus_ne 1); only 1: intros a b; only 1: pattern 1 at 1; only 1: rewrite <- a; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_diff_iff	40	40.093446	29223	4519
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_nonpos_cases	40	40.200403	10314	2818
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rdefinitions.up	40	40.492450	224852	3340
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.SuccNat2Pos.inj_iff	40	1.308277	551	293	1.0.0.0.0.0.3	synth with cache (only 1: split; only 1: intro H; only 1: apply (f_equal Pos.to_nat) in H; only 1: rewrite !id_succ in H; only 1: now injection H; only 1: intro H; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.string_dec	40	1.706361	436	116	0.0.0.0.0.0.0.0.6.0	synth with cache (only 1: decide equality; only 1: decide equality; only 1: apply bool_dec; only 1: apply bool_dec; only 1: apply bool_dec; only 1: apply bool_dec; only 1: apply bool_dec; only 1: apply bool_dec; only 1: apply bool_dec; only 1: apply bool_dec).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmin_case	40	40.140272	51889	5000
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.ALMOST_RING.rsub_ext3_Proper	40	0.008102	1	1	0	synth with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlogic.sig_not_dec	40	40.109634	37138	5446
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_shiftr	40	40.237316	20297	3867
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.ni_min_assoc	40	40.087600	29630	3966
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Pequiv_eq	40	40.041222	11198	373
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.join_spec	40	40.037387	10321	1379
coq-tactician-stdlib.8.11.dev	Coq.Strings.Byte.nat.to_of_nat_option_map	40	40.066057	19462	2572
coq-tactician-stdlib.8.11.dev	Coq.micromega.Fourier_util.Rle_zero_pos_plus1	40	1.741727	405	254	1.2.0.3	synth with cache (only 1: left; only 1: rewrite Rplus_comm; only 1: apply Rle_lt_0_plus_1; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_ok1'	40	40.076269	10004	2911
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_div_mod	40	40.050114	14968	3862
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersEx.PositiveOrderedTypeBits.compare_spec	40	40.434486	23036	2182
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.find_2	40	40.233341	85415	7587
coq-tactician-stdlib.8.11.dev	Coq.Reals.ROrderedType.Reqb_eq	40	40.074178	22122	4289
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_mul_below	40	40.676406	16567	3697
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_2	40	12.904650	6119	1173	0.1.0.8.6.0.1.0.1.1.0	synth with cache (only 1: intros m x; only 1: functional induction (L.find (elt:=x) m); only 1: intros e' eqfind; only 1: inversion eqfind; only 1: intros; only 1: auto; only 1: intros e' eqfind; only 1: inversion eqfind; only 1: auto; only 1: intros; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_wd	40	40.363420	19154	2820
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_0	40	24.259637	7656	1255	1.21.3	synth with cache (only 1: intros x x' Hx y y' Hy; only 1: rewrite Hx; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableTypeEx.PairDecidableType.eq_sym	40	3.029126	987	205	1.0.7.0.5	synth with cache (only 1: induction x; only 1: intros y [H1 H2]; only 1: generalize dependent y; only 1: red; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmin_case_strong	40	2.092135	685	250	4.3.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec r1 r2); only 1: auto; only 1: generalize (Rlt_asym r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Rsrt	40	0.049534	15	10	1	synth with cache (only 1: exact RTheory).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.subset_mem_1	40	40.046481	12839	1655
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.to_Z_bounded	40	40.082526	16928	2757
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.QSeqEquivEx_trans	40	40.085755	27411	3935
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.ENCODING_VALUE.Z_to_two_compl	40	40.202817	60563	7311
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreduction.Qplus'_comp_Proper	40	40.612235	15188	2135
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_equiv	40	40.233103	7711	1509
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.crossmul_le_addsquare	40	40.314859	16188	2226
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.binary_value_Sn	40	0.011646	2	2	0.0	synth with cache (only 1: intros; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_gt_0_0	40	40.592267	11800	2580
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_mul_2	40	40.293695	8313	2168
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Wf_Z.Efficient_Rec.natlike_rec3	40	14.686344	12399	2935	1.0.1.0.2.2.3.0.0.0.0.0.1.0.0	synth with cache (only 1: intros P Ho Hrec; only 1: induction z as [z IH] using (well_founded_induction_type R_wf); only 1: intros Hz; only 1: destruct z; only 1: apply Ho; only 1: set (y := Z.pred (Z.pos p)); only 1: assert (LE : 0 <= y) by (unfold y; now apply Z.lt_le_pred); only 1: assert (EQ : Z.pos p = Z.succ y) by (unfold y; now rewrite Z.succ_pred); only 1: apply Hrec, IH; only 1: split; only 1: split; only 1: trivial; only 1: apply Z.lt_pred_l; only 1: trivial; only 1: now destruct Hz).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.ni_min_O_l	40	2.310594	1205	198	16.1	synth with cache (only 1: simpl; only 1: now intros []).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_add	40	40.162313	12783	2710
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.eq_le_iff	40	0.064867	5	4	1.0.0.0	synth with cache (only 1: split; only 1: intro EQ; only 1: now rewrite EQ; only 1: now destruct x).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.fold_1	40	40.196575	71217	4778
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_div_pow2	40	40.175276	16176	3007
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.twice_zero	40	40.065307	14599	1309
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Computational.Decidable_eq_poly_obligation_1	40	40.159846	15259	3819
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.elements_3w	40	40.518368	215298	3878
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.lt_le_iff	40	0.652468	341	77	10.1	synth with cache (only 1: intro n; only 1: apply Z.lt_le_pred).
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_pos_lt	40	1.580759	489	128	2.1.1.5.0.0	synth with cache (only 1: intros; only 1: destruct (Rabs_pos x) as [| Heq]; only 1: auto with real; only 1: apply Rabs_no_R0 in H; only 1: symmetry in Heq; only 1: contradiction).
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qeq_alt	40	40.095128	28490	2895
coq-tactician-stdlib.8.11.dev	Coq.Vectors.Fin.eqb_nat_eq	40	40.091630	31152	4343
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_facts.Zpower_pos_0_l	40	40.248902	26094	2777
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_mod_pow2	40	40.163347	14591	4281
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_spec_low	40	40.090313	28180	3854
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_in	40	3.231642	1718	332	1.0.0.0.0.1.2.5.4	synth with cache (only 1: intros m x; only 1: functional induction (find x m); only 1: now destruct 1; only 1: intros; only 1: clearf; only 1: auto; only 1: auto; only 1: intros; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.add_square_le	40	40.355435	6579	2072
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.add_mod_idemp_r	40	40.510709	4853	2190
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z2Pos.inj_max	40	40.068889	16656	1308
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.equal_1	40	40.401566	94479	5562
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow_succ	40	20.046069	2735	432	0.0.0.0.14.1	synth with cache (only 1: intros x y; only 1: compute; only 1: rewrite recursion_succ; only 1: auto with *; only 1: auto with *; only 1: f_equiv').
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul_cancel_l	40	40.052754	11208	5954
coq-tactician-stdlib.8.11.dev	Coq.Floats.FloatAxioms.SF2Prim_inj	40	40.143853	50065	4632
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.ni_min_O_r	40	1.890602	673	166	0.0.6.5.0.0	synth with cache (only 1: simple induction d; only 1: trivial; only 1: unfold ni_min; only 1: simple induction n; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z2Pos.inj_min	40	40.081192	26878	2890
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.ni_min_inf_l	40	0.005920	3	1	2	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_neg	40	0.035348	4	3	0.1.0	synth with cache (only 1: intros a n; only 1: rewrite <- shiftl_opp_r; only 1: now rewrite 2!lt_nge, shiftl_nonneg).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_nonneg_cases	40	40.214838	11777	2453
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.EqlistA.rev_eqlistA_compat	40	40.053168	12407	1244
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_alt.adapt_ok	40	40.129449	30559	4433
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.ni_min_inf_r	40	0.055211	25	8	0.0.6	synth with cache (only 1: simple induction d; only 1: reflexivity; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_distr_r	40	40.053905	12179	5037
coq-tactician-stdlib.8.11.dev	Coq.omega.PreOmega.Z.rem_bound_pos_pos	40	40.072645	23186	4432
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.append_assoc_0	40	8.237182	5406	966	0.0.2.4.0.2.4.0.0.8	synth with cache (only 1: intros a b; only 1: induction a as [a IH| a IH| ]; only 1: simpl; only 1: f_equal; only 1: trivial; only 1: simpl; only 1: f_equal; only 1: trivial; only 1: simpl; only 1: f_equal).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalEpsilon.excluded_middle_informative	40	40.251557	30895	9029
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.to_lu_equiv	40	40.089889	25662	6182
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.add_Add	40	40.489371	8550	1598
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.In_1	40	2.100407	1537	342	7.2.9	synth with cache (only 1: intros l; only 1: intros x y H; only 1: now rewrite H).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.equal_2	40	40.245279	55761	4865
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.eq_refl	40	0.137746	97	22	0.8	synth with cache (only 1: intros a Ha; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_l	40	40.325702	6640	1212
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_to_Z_1	40	40.069002	20669	2829
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Z_rem_mult	40	40.070462	23659	3338
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.Rpow_mult_distr	40	40.089424	30676	3884
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_to_Z_2	40	0.020420	4	4	0.0.0.0	synth with cache (only 1: unfold to_Z; only 1: intros; only 1: destruct (Z_mod_lt x wB wB_pos); only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow_wd	40	40.132838	10846	1985
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_to_Z	40	0.016106	3	3	0.0.0	synth with cache (only 1: intros; only 1: destruct (Z_mod_lt x wB wB_pos); only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.eq_sym	40	0.220028	26	6	1.5	synth with cache (only 1: intros y z H1 H2; only 1: now subst).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.subset_types_imp_guarded_rel_choice_iff_rel_choice	40	40.073674	13291	1674
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_set_ops_1	40	27.827800	7243	1306	2.20.4	synth with cache (only 1: intros; only 1: contradict H; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_1	40	40.094995	23393	3927
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalDescription.classical_definite_description	40	40.456136	77729	5325
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_add_le	40	40.633998	6823	2253
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcabs.Qcabs_canon	40	40.074677	22657	3790
coq-tactician-stdlib.8.11.dev	Coq.btauto.Reflect.Translation.poly_of_formula_sound	40	40.646202	10173	1240
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zwf.wf_proof_up.Zwf_up_well_founded	40	40.057285	14364	6229
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv_simpl	40	40.035073	5915	528
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zdivide_mod	40	31.919074	11587	2839	0.1.1.0.10.12	synth with cache (only 1: intros a b; only 1: zero_or_not b; only 1: intros (c, Hc); only 1: subst; only 1: apply Z.mod_mul; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.le_0_iff	40	4.197063	1704	373	7.5.3	synth with cache (only 1: split; only 1: apply Z.le_0_sub; only 1: apply Z.le_0_sub).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Zplus_minus_eq	40	40.393706	41194	4984
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_rem	40	40.059876	14028	4366
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Z_lt_neq	40	0.153378	14	6	4.0	synth with cache (only 1: intro H; only 1: Z.order).
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyBool.Z_leb_sub	40	40.069147	21184	4072
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add_mul_2	40	40.060307	15898	4818
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.height_0	40	40.076639	23589	2673
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_alt.Permutation_nth_error	40	40.126207	44986	4276
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.add_mod	40	40.506013	10124	3220
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.empty_avl	40	0.007525	1	1	0	synth with cache (only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.create_avl	40	0.061165	20	7	0.0.3	synth with cache (only 1: unfold create; only 1: intros; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.create_height	40	0.008065	1	1	0	synth with cache (only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rminmax.R.plus_max_distr_l	40	40.054823	8238	3933
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.mul_sub_distr_r	40	40.342824	7990	1847
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalZ.of_iff	40	40.099719	31932	4890
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Peqb_true_eq	40	40.263160	87464	4784
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.map_1	40	40.268022	39228	6372
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Heap.defs.treesort	40	40.409927	89614	4564
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Qpower_0	40	40.208205	3909	549
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_diag_r	40	40.233215	7163	2937
coq-tactician-stdlib.8.11.dev	Coq.Classes.DecidableClass.Decidable_eq_bool_obligation_1	40	5.064535	2356	498	0.0.0.0.15	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.SuccNat2Pos.id_succ	40	40.098695	33358	4450
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.Unrestricted_minimization_entails_excluded_middle.unrestricted_minimization_entails_excluded_middle	40	40.176705	67266	8530
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsLUB.DDlow_below_up	40	40.078879	24769	3931
coq-tactician-stdlib.8.11.dev	Coq.Logic.Epsilon.small_drinkers'_paradox	40	40.373911	28811	3593
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_proper	40	40.056853	17732	2016
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.SuccNat2Pos.inj_succ	40	0.034048	9	7	2.0.0.1	synth with cache (only 1: induction n; only 1: trivial; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_gcd_iff	40	40.215421	26036	4818
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_lnot_diag_low	40	40.096245	19748	4844
coq-tactician-stdlib.8.11.dev	Coq.Classes.DecidableClass.Decidable_eq_nat_obligation_1	40	0.493073	766	152	2.1.10	synth with cache (only 1: split; only 1: apply Nat.eqb_eq; only 1: apply Nat.eqb_eq).
coq-tactician-stdlib.8.11.dev	Coq.Classes.DecidableClass.Decidable_le_nat_obligation_1	40	0.032196	22	9	4.0.0	synth with cache (only 1: symmetry; only 1: symmetry; only 1: apply Nat.leb_le).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_succ_le	40	40.060067	16237	3086
coq-tactician-stdlib.8.11.dev	Coq.Logic.Eqdep_dec.UIP_refl_nat	40	40.185106	57565	12853
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rgt_not_le	40	0.057764	19	5	1.1	synth with cache (only 1: intros; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.ni_le_refl	40	5.659040	6874	326	0.0.1.0.3.44	synth with cache (only 1: vm_compute; only 1: destruct x; only 1: easy; only 1: f_equal; only 1: apply Nat.min_l; only 1: apply Nat.le_refl).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_add_cons_inside	40	15.129140	2535	897	0.0.0.3.5.2.0	synth with cache (only 1: intros; only 1: replace (a :: l) with ([ ] ++ a :: l); only 1: apply permut_add_inside_eq; only 1: reflexivity; only 1: auto with datatypes; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Strings.Ascii.eqb_spec	40	40.141389	52228	4737
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.mul_sub_distr_l	40	40.352066	9980	2553
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_succ_or	40	40.078515	10237	3593
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.RealField.Rlt_0_2	40	40.139052	39445	2276
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nnot_div2_not_double	40	40.131833	33201	3122
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetCompat.Backport_Sets.lt_not_eq	40	19.456725	6770	1212	14.3.4.1	synth with cache (only 1: intros; only 1: contradict H; only 1: rewrite H; only 1: apply StrictOrder_Irreflexive).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lnot_diag_low	40	40.111280	19679	3294
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_lor_low	40	40.079793	24061	3363
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.wf_lex_exp	40	40.250616	12959	2567
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.SuccNat2Pos.pred_id	40	40.087556	27124	5811
coq-tactician-stdlib.8.11.dev	Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.proof_irrel	40	40.097764	32346	6276
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.append_assoc_1	40	6.146819	3673	875	0.0.9.0.1.2.0.1.7	synth with cache (only 1: intros a b; only 1: induction a as [a IH| a IH| ]; only 1: simpl; only 1: f_equal; only 1: trivial; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: f_equal).
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.Peq_ok	40	40.048279	16659	961
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_le_pow2	40	40.059750	14536	4059
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_land_low	40	40.109258	19891	2693
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring.Ring.pow_pos_succ	40	40.263872	5131	1935
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_eq_succ_iff_square	40	40.067942	15141	6454
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_land_low	40	40.158275	29604	4413
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.filter_2	40	40.141930	8066	2537
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.Excluded_middle_entails_unrestricted_minimization.excluded_middle_entails_unrestricted_minimization	40	40.113434	34906	8417
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_ldiff_low	40	40.169488	20617	2763
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.is_empty_spec	40	40.246651	37085	3770
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Fin2Restrict.extend_surjective	40	40.499148	63757	6759
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.SuccNat2Pos.inj	40	40.157361	56767	6409
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.guarded_iff_omniscient_rel_choice	40	40.097744	37004	3719
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rrepr_opp	40	40.103042	38543	2442
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zgcd_alt.Zgcd_alt_pos	40	40.122476	26939	2998
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.union_ok	40	40.040620	9225	1476
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Cyclic63.positive_to_int_spec	40	40.413525	13724	1388
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.Elt.find_2	40	40.242194	96368	7969
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_lnot_lnot	40	40.217813	15285	2865
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Remainder_equiv	40	40.084640	30483	2996
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.of_uint_alt	40	40.050334	10908	5524
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_lxor_l	40	40.086640	14584	2254
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.ins_spec	40	40.055436	17334	2530
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutEq.Perm.permut_length_1	40	40.204329	79172	5167
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pminus_mask_Gt	40	40.214339	49586	5446
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Fin2Restrict.extend_injective	40	40.162056	57413	7766
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_lxor_r	40	40.149267	16974	4635
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.ARgen_phiPOS_mult	40	40.030697	2176	544
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.EqlistA.SortA_equivlistA_eqlistA	40	40.260046	23212	2964
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_assoc_bounded_r	40	40.078557	24980	3601
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.Raw2SetsOn.Spec.choose_spec3	40	40.114141	34763	2913
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Filter.filter_sort	40	40.084668	22942	4246
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_lor	40	40.081058	22990	4052
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Zpower_pos_nat	40	40.040169	7669	2099
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.remove_Subtract	40	18.385481	3318	943	1.1.1.0.5.1.0.1.1.0.0	synth with cache (only 1: unfold Same_set, Included, mkEns, In; only 1: split; only 1: intro; only 1: set_iff; only 1: split; only 1: Dec.fsetdec; only 1: intuition; only 1: intro; only 1: set_iff; only 1: destruct 1; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.ArithRing.nat_morph_N	40	40.089862	28972	6376
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_in_iff	40	7.474071	2854	1037	0.0.0.0.0.0.0.0.0.10	synth with cache (only 1: firstorder; only 1: case_eq (find x m); only 1: intros; only 1: apply MapsTo_In with e; only 1: apply find_2; only 1: auto; only 1: congruence; only 1: destruct (In_MapsTo H0) as (d, Hd); only 1: rewrite (find_1 H Hd); only 1: discriminate).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qabs.Qabs_wd_Proper	40	40.072162	21590	4938
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.append_neutral_r	40	4.509840	4689	406	0.0.0.0.0.0.30.4	synth with cache (only 1: intro n; only 1: induction n; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_lt_lin	40	40.195019	14297	4719
coq-tactician-stdlib.8.11.dev	Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Acc.P_eventually_implies_acc	40	40.489927	28772	5197
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.append_neutral_l	40	0.032110	7	7	0.0.0.0.0.0.0	synth with cache (only 1: induction i; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Mergesort.Sort.LocallySorted_sort	40	40.207428	76325	6602
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.Pphi0	40	4.725021	6235	209	72	synth with cache (only 1: CRelationClasses.simpl_crelation).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ArithProp.le_minusni_n	40	40.107936	32100	3787
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qgt_alt	40	40.107757	35941	4992
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.point_in_holed_interval_works	40	40.082083	30363	2429
coq-tactician-stdlib.8.11.dev	Coq.Structures.Orders.TTLB_to_OTF.le_lteq	40	40.219148	22242	6759
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qeq_refl	40	0.063285	225	15	21	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qeq_sym	40	0.011511	4	2	2.0	synth with cache (only 1: symmetry; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_l_nonneg	40	40.250894	7580	2038
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.get_signZ_th	40	40.349764	10285	710
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_alt.Permutation_nth_error_bis	40	40.060753	16552	5571
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow_0	40	40.075255	18050	2389
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_1	40	40.042977	9447	1398
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_cancel_l	40	40.269727	28174	3371
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.compare_end_Cmp	40	40.243174	59691	4068
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qred_identity2	40	40.079178	26627	2181
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.ins_ok	40	40.024626	5394	703
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.pair_wd	40	40.259843	18568	3029
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_r	40	40.134786	10551	3794
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyInst.z_max_spec	40	40.073158	24757	2816
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcomplements.Z_lt_abs_rec	40	40.163457	57097	5586
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.or_cnf_correct	40	40.102097	18796	4242
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Filter.filter_InA	40	40.048819	8309	2135
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pplus_minus	40	40.191170	32246	3663
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rgt_not_ge	40	0.047371	14	6	0.0.1.0.1	synth with cache (only 1: red; only 1: intros; only 1: eapply Rlt_not_le; only 1: eauto with real; only 1: eauto with real).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.union_spec	40	40.019567	4032	1329
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rle_not_lt	40	0.039216	6	5	0.0.1.0.0	synth with cache (only 1: intros; only 1: intro abs; only 1: eapply Rlt_not_le; only 1: eauto with real; only 1: eauto with real).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Dcompare	40	40.230109	34228	1781
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rge_not_lt	40	0.038890	5	5	0.0.0.0.0	synth with cache (only 1: intros; only 1: intro abs; only 1: eapply Rlt_not_le; only 1: eauto with real; only 1: eauto with real).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_le_lin	40	40.054673	13069	4366
coq-tactician-stdlib.8.11.dev	Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.guarded_rel_choice	40	8.507130	3944	890	1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: red; only 1: intros A B P R H; only 1: destruct (rel_choice _ _ (fun (x : {x : _ & P x}) (y : B) => R (projT1 x) y)) as (R', (HR'R, H0)); only 1: intros (x, HPx); only 1: destruct (H x HPx) as (y, HRxy); only 1: exists y; only 1: exact HRxy; only 1: set (R'' := fun (x : A) (y : B) => exists H : P x, R' (existT P x H) y); only 1: exists R''; only 1: split; only 1: intros x y (HPx, HR'xy); only 1: change x with (projT1 (existT P x HPx)); only 1: apply HR'R; only 1: exact HR'xy; only 1: intros x HPx; only 1: destruct (H0 (existT P x HPx)) as (y, (HR'xy, Huniq)); only 1: exists y; only 1: split; only 1: exists HPx; only 1: exact HR'xy; only 1: intros y' (H'Px, HR'xy'); only 1: apply Huniq; only 1: rewrite proof_irrel with (a1 := HPx) (a2 := H'Px); only 1: exact HR'xy').
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rle_not_gt	40	0.046285	5	4	0.0.0.1	synth with cache (only 1: intros r1 r2; only 1: generalize (Rlt_asym r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: unfold Rle; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_1_lcm_mul	40	40.044058	11347	2694
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rge_not_gt	40	0.039236	7	5	0.0.1.0.1	synth with cache (only 1: intros; only 1: intro abs; only 1: eapply Rlt_not_le; only 1: eauto with real; only 1: eauto with real).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qabs.Qabs_pos	40	4.201209	1879	377	6.0.0.0.0.0.0.0.0.9	synth with cache (only 1: intros [[| n| n] d] Ha; only 1: red; only 1: simpl; only 1: trivial; only 1: red; only 1: simpl; only 1: reflexivity; only 1: red; only 1: simpl; only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Req_le	40	0.031726	5	3	0.0.2	synth with cache (only 1: destruct 1; only 1: right; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Strings.HexString.Raw.to_N_of_pos	40	0.008819	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_alt.Permutation_nth	40	40.052073	14173	3699
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Req_ge	40	0.030692	6	3	0.0.3	synth with cache (only 1: destruct 1; only 1: right; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_mem_1	40	40.108985	42331	1649
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qabs.Qabs_neg	40	0.364549	106	44	0.0.0.1.0.0.0.0.0	synth with cache (only 1: intros x H; only 1: apply Qabs_case; only 1: intros H0; only 1: setoid_replace x with 0; only 1: reflexivity; only 1: apply Qle_antisym; only 1: assumption; only 1: assumption; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Strings.OctalString.Raw.to_N_of_pos	40	0.043777	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rseries.sequence.EUn_noempty	40	40.087252	27336	6811
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Filter.filter_split	40	40.100545	27649	6196
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Req_le_sym	40	0.594768	3	2	1.0	synth with cache (only 1: unfold Rle; only 1: auto with *).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rseries.sequence.Un_in_EUn	40	0.092804	86	17	0.8.0	synth with cache (only 1: unfold EUn; only 1: intros; only 1: now exists n).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qabs.Qabs_nonneg	40	0.428226	115	40	0.0.0.0.1.3.0	synth with cache (only 1: intros; only 1: destruct x as [[| xn| xn] xd]; only 1: red; only 1: simpl; only 1: auto with zarith; only 1: abstract (compute; discriminate); only 1: abstract (compute; discriminate)).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.add_spec'	40	40.049064	13006	1378
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qabs.Zabs_Qabs	40	0.020703	2	1	1	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Req_ge_sym	40	0.026436	3	2	1.0	synth with cache (only 1: unfold Rge; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRlt_proper	40	42.577727	1896	439
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rgt_asym	40	0.041256	7	5	0.0.1.0.1	synth with cache (only 1: intros; only 1: intro abs; only 1: eapply Rlt_not_le; only 1: eauto with real; only 1: eauto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_Ifp.for_base_fp	40	40.048341	12135	4846
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.or_cnf_opt_correct	40	40.070974	19833	3384
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.Pphi1	40	5.292185	6938	197	74	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableTypeEx.PairDecidableType.eq_trans	40	21.344492	9197	2293	3.2.0.0.2.4.2.4	synth with cache (only 1: induction x; only 1: induction y; only 1: unfold eq; only 1: intros (x1, x2) (y1, y2); only 1: simpl; only 1: intuition; only 1: eauto; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.for_all_1	40	40.064030	14448	2407
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.find_mapsto_iff	40	0.104161	114	20	9.0	synth with cache (only 1: intros n m Hn; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Classes.SetoidDec.bool_function_eqdec_obligation_1	40	40.146401	41089	794
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.rplus_morph_Proper	40	0.023772	9	2	4	synth with cache (only 1: exact (SORplus_wd sor)).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.PosNeg.zero_pos_neg	40	40.155616	29008	6558
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.rtimes_morph_Proper	40	0.747815	142	34	12	synth with cache (only 1: exact (SORtimes_wd sor)).
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.ropp_morph_Proper	40	0.032759	16	3	4	synth with cache (only 1: exact (SORopp_wd sor)).
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.rle_morph_Proper	40	0.012081	4	1	3	synth with cache (only 1: exact (SORle_wd sor)).
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.rlt_morph_Proper	40	0.015278	5	1	4	synth with cache (only 1: exact (SORlt_wd sor)).
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.xcnf_correct	40	40.137401	41327	4472
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.exists_1	40	40.091624	31341	3962
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.QSeqEquiv_cau_r	40	40.126562	5431	1734
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Neven_not_double_plus_one	40	12.833128	19121	1677	0.0.1.7.28.0.1	synth with cache (only 1: intros m H; only 1: eqb2eq; only 1: destruct H; only 1: intros <-; only 1: discriminate || simpl; only 1: intros <-; only 1: discriminate || simpl).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.PX_ext	40	40.056873	8077	1695
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Zpower_nat_Zpower	40	0.683938	196	87	1.0.2.0.2.0	synth with cache (only 1: intro Hn; only 1: induction n; only 1: trivial; only 1: simpl; only 1: apply Pos2Nat.inj_iter; only 1: now destruct Hn).
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.rminus_morph_Proper	40	0.942476	212	55	1.4.0.0.5	synth with cache (only 1: intros x1 x2 H1 y1 y2 H2; only 1: rewrite (Rsub_def (SORrt sor) x1 y1); only 1: rewrite (Rsub_def (SORrt sor) x2 y2); only 1: rewrite H1; only 1: now rewrite H2).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.append_rr_match	40	2.527936	1548	194	16.5	synth with cache (only 1: simpl; only 1: exact (rmatch _ _ _)).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.append_bb_match	40	0.009985	1	1	0	synth with cache (only 1: exact (rmatch _ _ _)).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_idemp_l	40	40.063499	17454	5130
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.partition_1	40	40.101062	11908	3376
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_div	40	40.884580	15316	7075
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qround.Qceiling_lt	40	40.055009	15152	3022
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Add_Equal	40	40.100736	15177	3348
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.equal_refl	40	0.032410	6	6	0.0.0.0.0.0	synth with cache (only 1: red; only 1: split; only 1: intros; only 1: trivial; only 1: intros; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.quadmul_le_squareadd	40	40.349604	6178	2075
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.equal_sym	40	0.014345	1	1	0	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_diff_trivial	40	40.166552	21754	4991
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rseries.sequence.Un_bound_imp	40	4.650951	2758	713	6.3.1.4	synth with cache (only 1: intros a Ha; only 1: intro p; only 1: intros (r, H); only 1: now subst).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.equal_trans	40	0.052387	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_refl	40	0.013787	4	3	0.1.0	synth with cache (only 1: red; only 1: intros y LT; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_trans	40	0.038685	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_antisym	40	0.039008	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_prewd	40	40.072117	20831	6155
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.compare_more_Cmp	40	40.090208	20840	3439
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_equal	40	0.074337	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_empty	40	0.040393	8	3	4.1.0	synth with cache (only 1: red; only 1: intros y LT; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_remove_3	40	0.042668	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_diff	40	0.042700	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_idemp_r	40	40.100450	10280	5269
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_mul_above	40	40.045655	11530	2960
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_add_3	40	0.432976	9	3	2.3	synth with cache (only 1: intros Heq H Hr; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.guarded_fun_choice_imp_indep_of_general_premises	40	40.243798	95636	9414
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Add_Equal	40	40.107165	9640	1707
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_add_2	40	0.033428	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.in_subset	40	0.029258	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rnot_le_lt	40	40.889511	22969	3623
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.subset_1	40	40.082698	28026	1789
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.equal_refl	40	0.022507	6	3	1.1.1	synth with cache (only 1: constructor; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.equal_sym	40	0.017445	1	1	0	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.Elt.fold_1	40	40.175993	66665	6203
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.equal_trans	40	0.219141	2	1	1	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.Peq_spec	40	40.052217	16636	2063
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.lbalS_spec	40	40.060562	9864	999
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.compare_cont_Cmp	40	40.080771	22842	4404
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_refl	40	0.018254	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.partition_2	40	40.148098	10727	4403
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_ok1	40	40.139697	14718	4511
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_trans	40	0.041179	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qabs.Qabs_opp	40	6.670319	2356	674	0.0.0.0.0.4.0.2.2	synth with cache (only 1: red; only 1: intros (n, d); only 1: simpl; only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rge_antisym	40	0.029693	12	4	1.0.1	synth with cache (only 1: intros r1 r2; only 1: generalize (Rlt_asym r1 r2); only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_antisym	40	0.037411	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rle_le_eq	40	0.054396	20	7	3.1	synth with cache (only 1: intros a b; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rge_ge_eq	40	0.016599	1	1	0	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.succ_mod_wB	40	40.052585	4313	702
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_equal	40	0.033943	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_empty	40	0.019511	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.Elt.equal_1	40	40.178272	8345	887
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rlt_eq_compat	40	0.280859	112	22	1.7.0	synth with cache (only 1: intuition eauto  3; only 1: subst; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.Elt.equal_2	40	40.162147	50283	5359
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_remove_3	40	0.041784	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.compare_Cmp	40	40.089856	27149	5142
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rgt_eq_compat	40	0.021829	5	5	0.0.0.0.0	synth with cache (only 1: intros x x' y y'; only 1: intros; only 1: replace x with x'; only 1: replace y with y'; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.N_as_OT.compare	40	40.429520	90925	3123
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_set_ops_1	40	40.048322	7719	1224
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_diff	40	0.045214	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_add_3	40	0.067329	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Strings.BinaryString.Raw.to_N_of_pos	40	0.007687	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_spec_high	40	40.099093	29075	7372
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_add_2	40	0.391807	6	2	3.1	synth with cache (only 1: intuition; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.lbalS_ok	40	40.090649	2614	552
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.double_inclusion	40	2.408753	444	203	1.2.3.0.1.0.0	synth with cache (only 1: split; only 1: split; only 1: red; only 1: intros y LT; only 1: fsetdec; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.in_subset	40	0.038232	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_is_empty_1	40	0.078905	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_is_empty_2	40	0.039377	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.add_equal	40	0.057540	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.double_inclusion	40	0.255444	24	9	1.2.2.0	synth with cache (only 1: intuition; only 1: fsetdec; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qge_alt	40	40.077849	25621	2886
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_is_empty_1	40	0.055500	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_is_empty_2	40	0.091464	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.WW.spec_WW	40	40.067662	19673	4761
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.add_add	40	0.589923	15	6	0.0.0.3	synth with cache (only 1: vm_compute; only 1: split; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.add_equal	40	0.076836	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zdivide_dec	40
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.remove_equal	40	0.152800	13	5	1	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.Equal_remove	40	0.102493	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem	40	40.051933	12908	5512
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.of_lu_eqn	40	0.026220	1	1	0	synth with cache (only 1: now induction d).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv_ext	40	40.073203	8685	1402
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.PairOrderedType.eq_refl	40	1.127453	614	76	16.0	synth with cache (only 1: intros; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_add_le	40	40.288282	11986	3176
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.add_remove	40	0.457346	13	5	2.2.1	synth with cache (only 1: split; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_bits_unique	40	40.494601	57611	5646
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rnot_ge_gt	40	40.647604	10737	2553
coq-tactician-stdlib.8.11.dev	Coq.Sets.Image.Image.Pigeonhole	40	40.217804	27521	6290
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_shiftr	40	40.105983	15011	3338
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_ok2	40	40.099243	10248	7283
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.map_1	40	40.157476	34210	6323
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_shiftl	40	40.134974	21749	4379
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_mul_below	40	40.049262	12436	2998
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.singleton_equal_add	40	0.092943	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_spec_iff	40	40.063712	16324	4448
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRcomplete.RQ_limit	40	40.980672	22847	3105
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.subset_spec	40	40.323179	40280	5662
coq-tactician-stdlib.8.11.dev	Coq.Logic.WKL.Y_unique	40	40.341223	21619	2615
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.eps2_Rgt_R0	40	40.045886	10308	5088
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.remove_add	40	0.836613	38	13	1	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.eps2	40	0.037523	5	5	0.0.0.0.0	synth with cache (only 1: intro; only 1: rewrite <- double; only 1: rewrite <- Rmult_assoc; only 1: apply Rinv_r_simpl_m; only 1: now apply not_0_IZR).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_ones_low	40	40.072736	21266	3979
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_iff	40	40.296586	19284	4597
coq-tactician-stdlib.8.11.dev	Coq.Reals.AltSeries.CV_ALT_step0	40	40.404991	22641	3007
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_sym	40	0.070644	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.tech1	40	40.104602	33217	6378
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_equal	40	0.605063	34	18	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_equal_1	40	0.089084	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Cauchy_prod.sum_N_predN	40	0.038718	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: elim (Nat.lt_irrefl _ H); only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreals.Qeq_eqR	40	40.054725	16577	3473
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Req_em	40	40.068486	24954	1372
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rlt_not_le	40	40.040071	5159	1430
coq-tactician-stdlib.8.11.dev	Coq.Reals.Cauchy_prod.sum_plus	40	0.113062	7	7	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: ring; only 1: do 3 rewrite tech5; only 1: rewrite HrecN; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.remove_equal	40	0.628914	12	6	3.0	synth with cache (only 1: intuition; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.compare_spec	40	40.144895	51204	5499
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_mul_diag_l	40	40.264219	7156	2151
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_equal_2	40	0.862353	46	18	0.7	synth with cache (only 1: intro H; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_equiv	40	40.470863	8942	2543
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ones	40	40.252203	15749	3653
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_2	40	40.075506	18317	2266
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_mul_r	40	40.785602	13541	2346
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.Equal_remove	40	0.843182	29	7	1	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qred_iff	40	40.054812	17298	2326
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_assoc	40	0.582633	6	4	0.0.0.2	synth with cache (only 1: vm_compute; only 1: split; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qeq_dec	40	1.554067	460	85	0.0.1.18	synth with cache (only 1: unfold Qeq, Qlt, Qcompare; only 1: decide equality; only 1: apply Pos.eq_dec; only 1: apply Pos.eq_dec).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalN.Signed.of_to	40	40.057763	18432	2388
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.add_union_singleton	40	0.079173	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.mem_1	40	0.009348	5	2	2.1	synth with cache (only 1: intros; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.mem_2	40	0.010004	6	2	0.4	synth with cache (only 1: unfold In; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.mem_Leaf	40	0.011354	4	2	2.0	synth with cache (only 1: intros n; only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ones_low	40	40.212027	13949	7005
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.empty_1	40	0.006902	6	1	5	synth with cache (only 1: discriminate).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_neg	40	32.626672	18296	2771	26.7.0	synth with cache (only 1: intro n; only 1: rewrite div2_spec; only 1: now rewrite 2!lt_nge, shiftr_nonneg).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rmul_reg_l	40	40.033555	6374	376
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zlt_is_lt_bool	40	40.076670	24159	4868
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.add_remove	40	0.766272	22	6	2.1	synth with cache (only 1: intuition; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_add	40	0.688873	15	7	0.0.0.4	synth with cache (only 1: vm_compute; only 1: split; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_r	40	40.298799	19292	3579
coq-tactician-stdlib.8.11.dev	Coq.Reals.ClassicalDedekindReals.DRealQlim	40	40.483724	66396	8588
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Ring31.Int31Ring	40	40.058584	1088	235
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.In_dec	40	40.065941	13229	1840
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.jump_add'	40	40.044579	15629	804
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_r_low	40	40.081070	23805	3823
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.map_2	40	40.145433	39547	7223
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_l_low	40	40.145896	20467	5936
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Q_Setoid	40	7.424703	5876	715	0.0.0.0.0.4.25.5.12.5	synth with cache (only 1: split; only 1: intuition; only 1: congruence; only 1: unfold Qeq, Qlt, Qcompare; only 1: red; only 1: intros x y z; only 1: intros XY YZ; only 1: apply Z.mul_reg_r with (QDen y); only 1: auto with qarith; only 1: now rewrite Z.mul_shuffle0, XY, Z.mul_shuffle0, YZ, Z.mul_shuffle0).
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.SuccNat2Pos.inv	40	40.157736	59151	6380
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.eqb_spec	40	40.105343	29746	2595
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qeq_bool_eq	40	0.005737	1	1	0	synth with cache (only 1: apply Zeq_is_eq_bool).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.remove_add	40	0.816583	20	7	1.1.3	synth with cache (only 1: constructor; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qeq_eq_bool	40	0.005810	2	1	1	synth with cache (only 1: apply Qeq_bool_iff).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.ALMOST_RING.same_gen	40	40.297824	18998	1403
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_nonneg	40	40.344354	11324	3102
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.singleton_equal_add	40	0.096728	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.PmulC_aux_ok	40	40.120759	2855	704
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Peq_ok	40	40.048219	15959	1271
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qc_decomp	40	3.117348	2883	305	0.0.0.0.0.0.24	synth with cache (only 1: intros (q, hq) (q', hq') H; only 1: simpl in *; only 1: subst q'; only 1: f_equal; only 1: apply eq_proofs_unicity; only 1: intros; only 1: repeat decide equality).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.add_add	40	8.589787	454	114	0.1.7.2.3	synth with cache (only 1: vm_compute; only 1: intros; only 1: split; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.gempty	40	22.684975	44353	2085	0.0.0.0.29.10.12.37	synth with cache (only 1: intros n; only 1: pattern n; only 1: pattern n; only 1: induction n; only 1: constructor; only 1: constructor; only 1: simpl; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.micromega.Fourier_util.Rle_mult_inv_pos	40	40.056991	14454	6046
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Find.findA_NoDupA	40	40.044340	8987	1794
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv_r_r	40	7.751776	3303	213	25.16	synth with cache (only 1: rewrite rdiv_def; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Alembert.Alembert_C1	40	40.121162	42438	6039
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.join_ok	40	40.046628	14415	1975
coq-tactician-stdlib.8.11.dev	Coq.Reals.ROrderedType.Rcompare_spec	40	40.131308	50743	4628
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_div_mod_full	40	40.064002	21030	3559
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.inter_inf	40	40.052495	14266	2566
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_pt_locally_ext	40	40.090667	25718	5229
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.map_2	40	40.292073	31450	6839
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_3	40	40.103289	13310	1837
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmin_Rgt_l	40	40.085071	27735	4243
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_sym	40	0.076838	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Rsor	40	40.052400	16079	3096
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.subset_mem_2	40	40.080966	15621	2153
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.Z_lt_div2	40	40.062361	19883	2514
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.add_sqrt_up_le	40	40.806440	14820	3529
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.increasing_modulus_inc	40	40.092822	24467	2988
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_equal	40	0.605868	31	9	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_neg	40	40.254576	13077	4506
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreduction.Qmult'_comp_Proper	40	40.582412	14527	2105
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_equal_1	40	0.107371	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Wf_Z.Efficient_Rec.Zlt_0_rec	40	40.124930	42935	5611
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Z_to_binary_Sn	40	40.730495	17361	3098
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.In_eq_iff	40	40.550050	49915	5410
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.mapi_1	40	40.200479	70114	5447
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_equal_2	40	0.511984	11	3	1.3	synth with cache (only 1: intuition; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_le	40	0.035763	6	5	0.0.0.0.1	synth with cache (only 1: intros; only 1: intro abs; only 1: apply CRmorph_increasing_inv in abs; only 1: destruct H; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.mem_iff	40	0.068672	9	5	2.1.1	synth with cache (only 1: symmetry; only 1: symmetry; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.mapi_2	40	40.311160	37593	7322
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_le_inv	40	0.037532	8	5	0.1.0.1.1	synth with cache (only 1: intros; only 1: intro abs; only 1: destruct H; only 1: apply CRmorph_increasing; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_nonneg	40	40.261926	9689	4659
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_facts.Zpower_pos_pos	40	40.072471	15340	4992
coq-tactician-stdlib.8.11.dev	Coq.Vectors.Fin.eqb_eq	40	40.081398	18589	4747
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.twice_or_twice_plus_one	40	40.123456	46151	2796
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qcompare_antisym	40	40.199885	73605	3701
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmin_Rgt_r	40	5.872927	4326	891	1.0.2.12.0.0	synth with cache (only 1: intros r1 r2 r; only 1: unfold Rmin; only 1: intuition; only 1: destruct (Rle_dec r1 r2) as [Hle| Hnle]; only 1: auto; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Computational.Decidable_null_obligation_3	40	40.141903	51814	3714
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.in_find	40	40.099171	12514	3185
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_div	40	40.581309	13004	2215
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_S	40	0.022956	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.remove_min_spec	40	40.245220	11259	1440
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_wd	40	40.143540	18729	2186
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rgt_trans	40	8.946772	7962	1255	27.1	synth with cache (only 1: generalize eq_trans, Rlt_trans, Rlt_eq_compat; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.map2_1	40	40.271586	36036	5675
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rle_lt_trans	40	0.063558	27	8	0.0.2	synth with cache (only 1: generalize eq_trans, Rlt_trans, Rlt_eq_compat; only 1: unfold Rle; only 1: intuition eauto  2).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_nonneg	40	40.096888	27455	4836
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rlt_le_trans	40	0.064021	28	8	1.0.2	synth with cache (only 1: generalize eq_trans, Rlt_trans, Rlt_eq_compat; only 1: unfold Rle; only 1: intuition eauto  2).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_nonneg	40	40.219594	18695	5241
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.add_rem_idemp_l	40	40.052215	11483	5034
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.eps4	40	11.458764	4170	558	17.14.0	synth with cache (only 1: intro; only 1: rewrite <- double; only 1: field).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_S_tail	40	0.717317	248	93	1.1.0.0.1.4	synth with cache (only 1: intros; only 1: induction n; only 1: destruct x; only 1: trivial; only 1: simpl; only 1: now f_equal).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.Rlt_eps2_eps	40	0.020948	2	2	0.0	synth with cache (only 1: intros a Ha; only 1: lra).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul_le	40	40.625973	19219	4464
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_neg	40	40.055713	11163	2823
coq-tactician-stdlib.8.11.dev	Coq.omega.PreOmega.Z.rem_bound_neg_pos	40	40.059788	18508	3629
coq-tactician-stdlib.8.11.dev	Coq.Reals.ROrderedType.R_as_OT.lt_strorder	40	5.147898	3166	492	6.5.0.0.1.0.15.7.0	synth with cache (only 1: split; only 1: red; only 1: compute; only 1: intros x abs; only 1: eapply Rlt_asym; only 1: eauto; only 1: eauto; only 1: red; only 1: eauto using Rlt_trans with rorders).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalEpsilon.classical_indefinite_description	40	40.252365	35637	3594
coq-tactician-stdlib.8.11.dev	Coq.Reals.ROrderedType.R_as_OT.lt_compat	40	0.055195	6	4	0.0.2.0	synth with cache (only 1: repeat red; only 1: intros; only 1: subst; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.add_rem_idemp_r	40	40.054536	11413	5411
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Wf_Z.Efficient_Rec.Zlt_0_ind	40	3.462158	1994	682	0.0.3.0.1.3.1.0.0	synth with cache (only 1: intros P Hrec; only 1: induction x as [x IH] using (well_founded_induction_type R_wf); only 1: intros Hx; only 1: apply Hrec; only 1: intros y (Hy, Hy'); only 1: apply IH; only 1: now split; only 1: trivial; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ROrderedType.R_as_OT.le_lteq	40	0.031830	9	2	1	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_mod_remainder	40	40.096575	36566	3145
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.to_uint_alt	40	40.194714	31975	4542
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_nonneg	40	40.099963	29191	5333
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Add_Add	40	40.531747	12257	2672
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zquot_opp_l	40	40.077160	25745	3923
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.map2_2	40	40.344545	42391	6592
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_of_pos	40	40.076036	24546	2479
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_nonzero	40	40.047035	9872	2146
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.Example_of_undecidable_predicate_with_the_minimization_property.undecidable_predicate_with_the_minimization_property	40	40.152025	54028	8688
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.eq_trans	40	40.108593	23069	2959
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.Rlt_eps4_eps	40	2.139517	1272	287	13.2	synth with cache (only 1: intros x H; only 1: lra).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.eq_chain_test	40	40.049275	5612	995
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_good_step	40	40.214811	19351	2303
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.cleb_sound	40	22.522809	17870	722	76	synth with cache (only 1: CRelationClasses.simpl_crelation).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcabs.Qcabs_case	40	40.109017	18280	1105
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_eq_0	40	3.323514	1294	255	0.13.1.1	synth with cache (only 1: intro z; only 1: intros; only 1: apply Rsqr_0_uniq; only 1: auto with zarith real).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_too_complex	40	0.064739	10	3	0.2	synth with cache (only 1: vm_compute; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalDescription.dependent_unique_choice	40	40.447343	49077	4033
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.guarded_fun_choice_imp_fun_choice	40	40.206190	82038	6294
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.field_is_integral_domain	40	40.052433	13949	948
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.function_test_1	40	0.113348	7	2	5.0	synth with cache (only 1: intuition; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zdivide_Zdiv_eq	40	40.040189	11881	1961
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Wf_Z.Efficient_Rec.Z_lt_rec	40	2.024973	1077	307	0.3.0.1.2.1.0.1	synth with cache (only 1: intros P Hrec; only 1: induction x as [x IH] using (well_founded_induction_type R_wf); only 1: intros Hx; only 1: apply Hrec; only 1: intros y (Hy, Hy'); only 1: apply IH; only 1: now split; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.le_neg	40	40.086852	28544	3200
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.equal_subset	40	40.721404	13195	660
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Wf_Z.Efficient_Rec.Z_lt_induction	40	0.013573	3	3	0.0.0	synth with cache (only 1: intros P Hrec; only 1: apply Zlt_0_rec; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyBool.Z_ltb_leb	40	40.137448	17087	3246
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_minus_plus	40	0.763505	75	13	0.9	synth with cache (only 1: intros x y; only 1: ring_Rsqr).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_assoc	40	5.576948	237	32	0.0.8.2.1	synth with cache (only 1: vm_compute; only 1: intros; only 1: split; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.rbalS_spec	40	40.119445	12096	1263
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_plus_minus	40	0.029288	2	2	0.0	synth with cache (only 1: intros; only 1: ring_Rsqr).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.add_rem	40	40.046809	10003	4617
coq-tactician-stdlib.8.11.dev	Coq.btauto.Reflect.Completeness.reduce_poly_of_formula_sound	40	40.580219	26946	4044
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.bal_avl	40	40.089598	15586	2060
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.function_test_2	40	0.881776	183	52	6.3	synth with cache (only 1: intros; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.btauto.Reflect.Completeness.list_nth_base	40	0.006008	1	1	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsLUB.DDcut_limit_fix	40	39.069964	57556	3995	13.64	synth with cache (only 1: intuition; only 1: eauto with qarith).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.add_union_singleton	40	0.082429	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rminmax.R.plus_max_distr_r	40	40.193141	8688	3492
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_baydemir	40	0.071090	6	2	4.0	synth with cache (only 1: intuition; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Qpower_not_0_positive	40	40.112675	12904	2296
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_equiv	40	40.630089	7325	1912
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_mul_diag_r	40	40.223766	7436	2235
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_divides	40	41.106050	19588	4280
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.compare_bool_inv	40	1.342640	394	138	0.0.1.0.0.0.0.0.0.4	synth with cache (only 1: intros n m; only 1: destruct n, m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.SuccNat2Pos.inj_compare	40	40.122751	36169	7871
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_compose	40	40.061487	18158	3588
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qcompare_spec	40	40.179777	71975	2629
coq-tactician-stdlib.8.11.dev	Coq.Classes.DecidableClass.Decidable_eq_Z_obligation_1	40	40.093869	27500	3009
coq-tactician-stdlib.8.11.dev	Coq.Reals.ClassicalDedekindReals.DRealAbstr	40	12.502830	89281	1245
coq-tactician-stdlib.8.11.dev	Coq.Logic.Epsilon.iota_statement	40	40.619766	116600	5631
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rlt_dec	40	0.257505	71	23	0.1.0.5	synth with cache (only 1: intros; only 1: generalize (Rlt_asym r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: generalize (total_order_T r1 r2); only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.PairOrderedType.eq_sym	40	18.051259	5888	746	2.1.1.29	synth with cache (only 1: intros A B H; only 1: elim H; only 1: elim H; only 1: now simpl).
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qle_bool_imp_le	40	0.011508	6	1	5	synth with cache (only 1: apply Z.leb_le).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.representative_boolean_partition_imp_excluded_middle	40	40.102583	34727	7247
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qnot_eq_sym	40	0.008409	1	1	0	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rle_dec	40	0.097801	3	3	0.0.0	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.create_bst	40	6.111900	3993	740	21.1	synth with cache (only 1: intros n m p q H1 H2 H3 H4; only 1: now right).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_middle	40	40.047738	10430	2788
coq-tactician-stdlib.8.11.dev	Coq.Strings.Ascii.eqb_refl	40	40.113312	34047	2260
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rminmax.R.plus_min_distr_l	40	1.920123	388	74	0.0.0.10.0	synth with cache (only 1: intros; only 1: apply min_mono; only 1: eauto with *; only 1: intros x y; only 1: apply Rplus_le_compat_l).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rminmax.R.plus_min_distr_r	40	0.030158	6	5	0.0.0.1.0	synth with cache (only 1: intros; only 1: rewrite (Rplus_comm n p), (Rplus_comm m p), (Rplus_comm _ p); only 1: apply min_monotone; only 1: intros x y; only 1: apply Rplus_le_compat_l).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rminmax.R.opp_max_distr	40	0.026751	4	4	0.0.0.0	synth with cache (only 1: intros x y; only 1: apply Rmax_case_strong; only 1: now intros w; rewrite Rmin_left; [  | apply Rge_le, Ropp_le_ge_contravar ]; only 1: now intros w; rewrite Rmin_right; [  | apply Rge_le, Ropp_le_ge_contravar ]).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rminmax.R.opp_min_distr	40	0.027799	5	4	1.0.0.0	synth with cache (only 1: intros x y; only 1: apply Rmin_case_strong; only 1: now intros w; rewrite Rmax_left; [  | apply Rge_le, Ropp_le_ge_contravar ]; only 1: now intros w; rewrite Rmax_right; [  | apply Rge_le, Ropp_le_ge_contravar ]).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rlt_not_ge	40	40.720537	27284	4365
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.ni_le_antisym	40	40.504865	37001	4187
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_lor	40	40.066956	6068	1485
coq-tactician-stdlib.8.11.dev	Coq.Strings.Byte.nat.to_nat_bounded	40	40.365467	4912	103
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.RealField.Rgen_phiPOS	40	40.175896	55713	4658
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetCompat.Backport_Sets.compare	40	40.117239	40086	6345
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rgt_dec	40	0.531180	23	10	0.0.1	synth with cache (only 1: intros r1 r2; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.fun_choice_and_indep_general_prem_imp_guarded_fun_choice	40	40.136463	26920	2787
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_alt_wd	40	40.517801	12462	2902
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_mult	40	40.142019	22818	5676
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZCoeff.InitialMorphism.req_refl	40	40.280952	19727	1921
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rge_dec	40	0.519113	21	7	0.0.1	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring.Ring.pow_pos_add	40	40.084924	7569	1676
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rlt_le_dec	40	0.472571	33	12	1.1.1.2	synth with cache (only 1: intros; only 1: generalize (Rtotal_order r1 r2); only 1: generalize (total_order_T r1 r2); only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rgt_ge_dec	40	0.073142	3	3	0.0.0	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_lxor	40	40.214683	11437	2755
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.excluded_middle_imp_representative_boolean_partition	40	40.193827	74019	3161
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_land	40	40.458415	11927	2318
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_mul_pow2	40	40.050680	13613	3103
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.not_find_iff	40	40.167615	12181	3228
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring.Ring.pow_N_pow_N	40	0.009335	2	1	1	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rle_lt_dec	40	0.129171	3	3	0.0.0	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rge_gt_dec	40	0.064961	15	9	0.0.0.1.0.0	synth with cache (only 1: intros; only 1: edestruct Rlt_le_dec; only 1: right; only 1: eauto with rorders; only 1: left; only 1: eauto with rorders).
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Fin2Restrict.restrict_surjective	40	40.423741	33778	4856
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.ropp_neq_0	40	40.043477	10197	840
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_succ_morphism	40	40.143448	52713	7837
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_bit0	40	40.066948	18346	4973
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rrepr_minus	40	40.083614	28352	3225
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rgt_or_ge	40	0.157053	31	14	0.1.0.0.0.1	synth with cache (only 1: intros; only 1: edestruct Rlt_le_dec; only 1: left; only 1: eauto with rorders; only 1: right; only 1: eauto with rorders).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rlt_or_le	40	0.341203	38	19	0.0.3	synth with cache (only 1: intuition eauto  2; only 1: generalize (total_order_T r1 r2); only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zgcd_alt.Zgcdn_linear_bound	40	40.103167	15216	2434
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.Pjump_xO_tail	40	0.928652	340	56	0.1.9.0.0	synth with cache (only 1: apply env_morph; only 1: intros; only 1: unfold tail; only 1: rewrite <- jump_add; only 1: f_equal).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.mapi_1	40	40.135621	38442	4818
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add3_bit0	40	40.335270	15385	2519
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.fun_choice_and_indep_general_prem_iff_guarded_fun_choice	40	40.074997	25972	3342
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutEq.Perm.permut_length_2	40	40.100481	34825	4444
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add3_bits_div2	40	40.379219	8258	1649
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_div_mod_eq	40	40.075344	29822	3276
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rge_or_gt	40	0.427032	101	66	0.0.1.1	synth with cache (only 1: intros n m; only 1: elim (Rle_lt_dec m n); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.create_in	40	3.545274	443	86	4.7	synth with cache (only 1: compute; only 1: intuition_in).
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Fin2Restrict.restrict_injective	40	40.101528	32701	6230
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rle_or_lt	40	0.803295	109	50	0.0.1	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make_ord.eq_equal	40	40.092647	29987	6475
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.equal_spec	40	40.370647	29694	4629
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetCompat.Update_WSets.In_compat	40	1.772897	491	171	0.10.3	synth with cache (only 1: intros x x' Hx y y' Hy; only 1: rewrite Hy; only 1: now f_equiv).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.inter_ok	40	40.041256	6882	1546
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_assoc	40	40.066916	5378	1862
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rle_lt_or_eq_dec	40	0.653758	112	36	1.1.3	synth with cache (only 1: intros r1 r2; only 1: generalize (total_order_T r1 r2); only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Ptestbit_Pbit	40	40.313920	28694	3932
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Cyclic63.mulc_WW_spec	40	40.225429	16175	5866
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.of_lu_rev	40	40.077114	19777	4110
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_0_r	40	0.230651	13	10	0.2.0.0.0	synth with cache (only 1: intros; only 1: apply Rquot1; only 1: rewrite Rrepr_plus, Rrepr_0; only 1: rewrite CReal_plus_comm; only 1: apply CReal_plus_0_l).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Zpower_nat_Z	40	40.079419	25603	2933
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_carry_div2	40	40.302293	5085	1180
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.same_genZ	40	40.036420	7943	1310
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_opp_l	40	0.179278	6	5	0.1.0.0.0	synth with cache (only 1: intros; only 1: apply Rquot1; only 1: rewrite Rrepr_plus, Rrepr_opp, Rrepr_0; only 1: rewrite CReal_plus_comm; only 1: apply CReal_plus_opp_r).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.mkEns_Finite	40	40.194361	78729	2044
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_ne	40	0.276559	26	15	0.0.0.1.2	synth with cache (only 1: split; only 1: ring; only 1: apply Rquot1; only 1: rewrite Rrepr_plus, Rrepr_0; only 1: apply CReal_plus_0_l).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_carry_bits	40	40.118411	35305	3943
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_4	40	40.038749	6214	959
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_eq_compat_l	40	0.029404	8	3	5.0.0	synth with cache (only 1: intros x y; only 1: intros; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_find	40	40.492835	23302	3916
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.diff_ok	40	0.215143	6	5	0.0.1.0.0	synth with cache (only 1: repeat rewrite <- isok_iff; only 1: revert s s'; only 1: intros s s'; only 1: revert s s'; only 1: induction2).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_eq_compat_r	40	0.029244	5	2	3.0	synth with cache (only 1: intros r r1 r2; only 1: congruence).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Acc.P_eventually_implies_acc_ex	40	40.162210	36761	8634
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Mergesort.Sort.Permuted_sort	40	40.082966	25071	8073
coq-tactician-stdlib.8.11.dev	Coq.Reals.ArithProp.lt_minus_O_lt	40	40.064456	13628	2373
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.ObsoletePmultNat.ZL6	40	3.709944	3855	309	3.3.27.0	synth with cache (only 1: intros; only 1: unfold Pos.to_nat; only 1: rewrite !Pmult_nat_mult; only 1: now Nat.nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qeq_trans	40	40.116403	42993	2295
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.first_in_holed_interval	40	40.169895	64351	3907
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.MakeSetOrdering.lt_compat	40	40.055037	7777	951
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_double	40	40.082827	5187	1835
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.rbalS_ok	40	40.026330	3561	703
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalString.uint_of_char_spec	40	40.342251	4703	560
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_init	40	40.128544	5599	1096
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.ALMOST_RING.ARgen_phiPOS_Psucc	40	40.518225	1994	860
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_bit1	40	40.240420	20981	2094
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Req_dne	40	40.275445	15317	3103
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.equal_spec	40	40.103021	27882	4825
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qeq_bool_refl	40	0.989283	470	52	0.23	synth with cache (only 1: apply Qeq_bool_iff; only 1: auto with qarith).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLtForget	40	2.994243	1958	514	0.0.0.0.2.1.0.0.0.0.0.0.0.0.1.0	synth with cache (only 1: intros; only 1: assert (exists n : nat, n <> 0%nat /\ (2 # Pos.of_nat n < proj1_sig y n - proj1_sig x n)%Q); only 1: destruct H as [n maj]; only 1: exists (Pos.to_nat n); only 1: split; only 1: intro abs; only 1: destruct (Pos2Nat.is_succ n); only 1: rewrite H in abs; only 1: inversion abs; only 1: rewrite Pos2Nat.id; only 1: apply maj; only 1: destruct H0 as [n maj]; only 1: exists (Pos.of_nat n); only 1: rewrite Nat2Pos.id; only 1: apply maj; only 1: apply maj).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.remove_Subtract	40	11.638555	1850	490	0.3.1.0.0.0.1.0.1.1.0.0	synth with cache (only 1: unfold Same_set, Included, mkEns, In; only 1: split; only 1: intro; only 1: set_iff; only 1: intuition; only 1: constructor 1; only 1: auto; only 1: intuition; only 1: intro; only 1: set_iff; only 1: inversion 1; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qc_is_canon	40	40.221160	37444	5935
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.succ_wd	40	40.228863	24306	3499
coq-tactician-stdlib.8.11.dev	Coq.micromega.QMicromega.Qsor	40	40.329952	5270	1762
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyInst.z_min_spec	40	40.026401	5320	3566
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.remove_ok	40	0.294493	25	12	1.1.2.0.0	synth with cache (only 1: induct s x; only 1: auto; only 1: apply lbal_ok || apply rbal_ok || ok; only 1: apply lbal_ok || apply rbal_ok || ok; only 1: apply lbal_ok || apply rbal_ok || ok).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.nocarry_equiv	40	40.392074	37663	5191
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.equal_iff	40	0.029544	12	3	3	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.subset_iff	40	0.028726	13	3	3	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcomplements.Z_lt_abs_induction	40	40.336912	27702	7640
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetCompat.Update_WSets.Spec.mem_spec	40	4.544492	4809	701	14.3.5	synth with cache (only 1: intuition; only 1: red; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_add	40	11.123167	436	119	1.0.5.5	synth with cache (only 1: red; only 1: split; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.AC_bool_subset_to_bool	40	40.125968	52903	558
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.rsub_ext4_Proper	40	0.008537	1	1	0	synth with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_mem_2	40	40.109436	37601	2716
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.cnf_checker_sound	40	40.185321	47078	3567
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make_ord.eq_2	40	12.595084	11426	1743	0.2.28.1	synth with cache (only 1: intros; only 1: apply Raw.equal_2; only 1: generalize (eq_equal m m'); only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.inter_spec	40	40.029970	7162	1691
coq-tactician-stdlib.8.11.dev	Coq.Floats.FloatLemmas.shift_value	40	0.126367	3	1	2	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalDescription.unique_choice	40	13.575655	24308	2244	21.1.6.0.13.0	synth with cache (only 1: intros A B R H; only 1: assert (Hexuni : forall x, exists ! y, R x y); only 1: firstorder; only 1: exists (fun x => proj1_sig (constructive_definite_description (R x) (Hexuni x))); only 1: intro x; only 1: apply (proj2_sig (constructive_definite_description (R x) (Hexuni x)))).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_same	40	40.056186	13771	3805
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_sym_app	40	40.121696	40538	5150
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rle_antisym	40	40.085376	22789	3646
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_Ifp.base_fp	40	40.044555	11188	5346
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.env_morph	40	40.078690	29222	1167
coq-tactician-stdlib.8.11.dev	Coq.Strings.OctalString.to_N_of_N	40	40.180214	13457	2436
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.gleaf	40	0.053607	6	6	0.0.0.0.0.0	synth with cache (only 1: destruct i; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableTypeEx.PairDecidableType.eq_dec	40	40.045704	8509	1174
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRle_refl	40	40.151803	56700	3570
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.not_find_in_iff	40	40.043263	10770	3611
coq-tactician-stdlib.8.11.dev	Coq.Strings.HexString.to_N_of_N	40	40.159863	22317	4005
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZCoeff.InitialMorphism.req_sym	40	11.525657	2555	261	10.5.12	synth with cache (only 1: intro n; only 1: destruct (SORsetoid sor) as (Equivalence_Reflexive, _, _); only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.tauto_checker_sound	40	40.132339	47180	5066
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_comm	40	40.051551	8274	2909
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_0_r_uniq	40	1.159281	441	82	1.0.0.9.0	synth with cache (only 1: intros x y H; only 1: replace y with (- x + x + y) by ring; only 1: rewrite Rplus_assoc; only 1: rewrite H; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.increasing_modulus_max	40	40.130060	42164	4776
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nnot_div2_not_double_plus_one	40	40.144436	39244	3550
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qeq_bool_sym	40	6.304150	8214	483	0.0.0.56	synth with cache (only 1: inversion 1; only 1: apply eq_true_iff_eq; only 1: rewrite !Qeq_bool_iff; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Zpower_pos_is_exp	40	40.056198	20274	926
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Powers_of_2.shift_nat_equiv	40	0.006771	1	1	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.append_spec	40	40.080396	25826	2282
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Powers_of_2.shift_pos_equiv	40	0.006686	2	1	1	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Peq_spec	40	40.079047	26258	3449
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.standard_modulus	40	40.115889	40745	6143
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.eval_bf_map	40	40.151959	17370	1879
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qround.Qfloor_resp_le	40	40.103577	27730	3851
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_mapsto_equiv	40	40.767799	23432	5191
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rseries.sequence.growing_prop	40	40.120555	37602	5244
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_quot	40	40.091345	12899	5883
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qeq_bool_trans	40	5.780613	4875	654	0.0.0.0.1.26	synth with cache (only 1: rewrite !Qeq_bool_iff; only 1: unfold Qeq; only 1: intros XY YZ; only 1: apply Z.mul_reg_r with (QDen y); only 1: auto with qarith; only 1: now rewrite Z.mul_shuffle0, XY, Z.mul_shuffle0, YZ, Z.mul_shuffle0).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nbit0_neq	40	2.081454	1208	215	6.2.6.1	synth with cache (only 1: intros Ha Hb; only 1: eqb2eq; only 1: intro H1; only 1: congruence).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_step	40	40.324477	2543	939
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.mindepth_maxdepth	40	40.117470	24193	1445
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Ndiv2_neq	40	0.187744	14	4	2.0.2	synth with cache (only 1: intros Heqn; only 1: eqb2eq; only 1: now intros <-).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Cos_rel.cos_plus_form	40	40.082912	27197	4021
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mod_mul_r	40	40.055933	13010	5648
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.subset_2	40	40.172192	49398	3548
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zmod_eq_full	40	40.085930	34755	3044
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv5	40	19.074861	16190	789	18.36.35	synth with cache (only 1: rewrite rdiv_def; only 1: rewrite rdiv_def; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.mapi_2	40	40.164546	49399	6062
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.PairOrderedType.eq_trans	40	17.483740	14306	1316	8.19.11.1	synth with cache (only 1: intros; only 1: firstorder; only 1: MO1.order; only 1: MO2.order).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.omniscient_fun_choice_imp_small_drinker	40	40.216927	82660	6013
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_le	40	40.070267	18264	5081
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.Pjump_add	40	40.077234	27547	1367
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.maxdepth_cardinal	40	40.191601	34673	2056
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.pred_mod_wB	40	40.022117	4531	638
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qabs.Qabs_triangle	40	40.077438	17881	3141
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmake_Qdiv	40	4.412618	3723	436	0.0.2.7.28	synth with cache (only 1: unfold Qeq, Qlt, Qcompare; only 1: simpl; only 1: Z.nzsimpl; only 1: Z.bitwise; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.map2_1	40	40.109292	35275	6401
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.append_ok	40	40.106878	2858	728
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rle_trans	40	40.132659	44294	3330
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.map2_2	40	40.148821	50205	7541
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.eq_chain_test	40	40.055258	6296	833
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.mindepth_cardinal	40	40.134115	10106	7422
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zdivide_Zdiv_eq_2	40	40.060031	10656	3375
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_too_complex	40	0.025610	6	3	2.1.0	synth with cache (only 1: unfold Subset; only 1: intros x y H s s' H0 a; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qabs.Qabs_Qmult	40	0.409877	78	32	0.4.0.0.0	synth with cache (only 1: intros (x1, x2) (y1, y2); only 1: unfold Qeq, Qinv, Qmult; only 1: simpl; only 1: repeat rewrite <- Z.abs_mul; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Powers_of_2.shift_equiv	40	4.921983	1914	577	2.0.3.0.0.0.5	synth with cache (only 1: case n; only 1: trivial; only 1: intros; only 1: now apply Pos.iter_swap_gen; only 1: simpl; only 1: intros; only 1: now rewrite ?Pos.max_1_r, <- ?Pos2Z.inj_max).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.function_test_1	40	0.091862	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Strings.BinaryString.to_N_of_N	40	40.381468	10746	1835
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_mem_1	40	40.060024	21456	1931
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_conv_inv	40	8.532829	7282	1597	0.0.0.1.0.0.0.2.9	synth with cache (only 1: intro a; only 1: unfold permutation, meq; only 1: intros; only 1: generalize (H a0); only 1: clear H; only 1: simpl; only 1: destruct (eqA_dec a a0); only 1: auto with arith; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Cos_plus.Majxy_cv_R0	40	40.098333	16256	5885
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qabs.Qabs_Qinv	40	0.748797	141	74	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros [[| n| n] d]; only 1: red; only 1: simpl; only 1: trivial; only 1: red; only 1: simpl; only 1: reflexivity; only 1: red; only 1: simpl; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.PairOrderedType.lt_trans	40	2.260207	449	99	4.3.4	synth with cache (only 1: intros (x1, x2) (y1, y2) (z1, z2); only 1: vm_compute; only 1: intuition eauto with ordered_type).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Cos_rel.pow_sqr	40	1.497949	487	223	0.0.0.0.0.0.0.0.0.0.1	synth with cache (only 1: intro; only 1: intro n; only 1: induction n as [| n Hrecn]; only 1: reflexivity; only 1: replace (2 * S n)%nat with (S (S (2 * n))); only 1: replace (x ^ S (S (2 * n))) with (x * x * x ^ (2 * n)); only 1: rewrite Hrecn; only 1: reflexivity; only 1: simpl; only 1: ring; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.not_mem_iff	40	28.093194	24002	2204	4.5.0.10.11.8.6.22.2	synth with cache (only 1: intuition; only 1: Ndec.eqb2eq; only 1: red; only 1: intros; only 1: intuition; only 1: absurd (false = true); only 1: discriminate; only 1: inversion H; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.Of_Z.of_pos_correct	40	40.028701	8178	1261
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRle_lt_trans	40	41.296530	22081	2755
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_neg	40	40.089911	23224	4973
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_size	40	0.370432	24	7	0.5.1	synth with cache (only 1: intros; only 1: destruct x; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zdivide_le	40	40.090037	29315	3642
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.function_test_2	40	1.415122	895	189	4.11	synth with cache (only 1: intros n m; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_baydemir	40	0.062062	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.of_lu_succ	40	40.081815	25797	4406
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.is_empty_iff	40	0.054867	9	3	2	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.singleton_iff	40	0.058112	11	4	1	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.choose_mem_1	40	0.054000	22	6	6	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.choose_mem_2	40	0.015943	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_mem_1	40	0.073099	3	2	0.1	synth with cache (only 1: generalize (mem_iff s x), (elements_iff s x), (existsb_exists (eqb x) (elements s)); only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Image.Image.Pigeonhole_principle	40	40.131114	37530	10857
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_quot	40	40.186627	13308	4401
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_alt.pre_sin_bound	40	40.124011	10227	1719
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.remove_singleton_empty	40	40.336158	5549	1003
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_mem_2	40	0.688677	88	53	1.0.0.0.1.0.0	synth with cache (only 1: intros; only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_neq_iff s H); only 1: destruct (mem y s); only 1: intuition; only 1: intuition; only 1: rewrite <- not_mem_iff; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.remove_mem_1	40	0.064344	2	2	0.0	synth with cache (only 1: rewrite <- not_mem_iff; only 1: Dec.fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.pred_wd	40	40.070506	22047	3719
coq-tactician-stdlib.8.11.dev	Coq.Logic.WKL.Y_approx	40	40.402109	38114	3592
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rge_trans	40	40.795638	19015	3996
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_or	40	40.061164	13564	4727
coq-tactician-stdlib.8.11.dev	Coq.Reals.AltSeries.CV_ALT_step1	40	40.062207	16714	4563
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.remove_mem_2	40	0.692165	84	51	0.0.0.0.0.1.0.0	synth with cache (only 1: intros; only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_neq_iff s H); only 1: destruct (mem y s); only 1: intuition; only 1: intuition; only 1: rewrite <- not_mem_iff; only 1: rewrite remove_spec; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.singleton_equal_add	40	0.007733	2	1	1	synth with cache (only 1: auto with set relations).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.is_empty_iff	40	0.056511	26	8	4.3	synth with cache (only 1: intros; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_nonneg	40	40.046563	11146	3250
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_in_equiv	40	40.557313	28804	6459
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRcomplete.Rdiag_cauchy_sequence	40	40.571188	49872	3899
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.growing_cv	40	40.114609	40866	6309
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.tech2	40	40.107300	17459	3206
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_neg	40	40.063873	17440	4034
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.eq_dec	40	40.746373	27777	2693
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_lt_eq	40	40.039791	10719	2049
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_1	40	0.038998	2	1	1	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreals.Rle_Qle	40	40.098349	16668	2880
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_2	40	0.035546	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Cauchy_prod.cauchy_finite	40	40.062021	14424	4294
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_3	40	0.063776	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_RN_plus	40	40.355699	13117	2889
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.PairOrderedType.lt_not_eq	40	3.805548	815	186	0.0.0.0.1.10	synth with cache (only 1: intros (x1, x2) (y1, y2); only 1: unfold eq, lt; only 1: simpl; only 1: intuition; only 1: MO1.order; only 1: MO2.order).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_4	40	0.063042	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.maxdepth_log_cardinal	40	40.059952	8129	1718
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.compare_bool_Eq	40	0.030172	5	5	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: easy'; only 1: easy'; only 1: easy'; only 1: easy').
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_r	40	40.306100	18644	3705
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_nocarry_lxor	40	40.172638	22095	3497
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_5	40	0.377438	15	4	1.3	synth with cache (only 1: intro LT; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_le	40	40.193512	25645	6236
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.MakeSetOrdering.lt_strorder	40	40.077310	21249	2026
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qeq_bool_iff	40	40.094316	33704	3258
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_union_1	40	0.077366	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalN.Signed.to_of	40	40.074907	23822	2455
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.empty_mem	40	40.038865	8320	4027
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.guarded_iff_omniscient_fun_choice	40	7.655177	12963	1288	0.1.1.11.0.1.0.4.4.7.5.1	synth with cache (only 1: split; only 1: intros GAC_rel A B R; only 1: intro H; only 1: apply (GAC_rel A B (fun x => exists y, R x y) R); only 1: trivial; only 1: auto; only 1: intros OAC_rel A B P R H; only 1: intros; only 1: destruct (OAC_rel A B R) as (f, Hf); only 1: eauto; only 1: exists f; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_alt_wd	40	40.514316	13352	2375
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.exp_cof_no_R0	40	40.102000	32186	5986
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_union_2	40	0.071161	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.sub_nocarry_ldiff	40	40.086927	25612	4566
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qle_bool_iff	40	32.846959	33500	3288	21.9.15	synth with cache (only 1: split; only 1: apply Z.leb_le; only 1: apply Z.leb_le).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rinv_l_sym	40	1.022194	22	10	0.1.0	synth with cache (only 1: intros; only 1: field; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.not_in_union	40	0.062112	9	2	1	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.mem_node	40	40.089888	29178	5200
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_sym	40	0.086704	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zgt_is_gt_bool	40	40.090795	29861	5116
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_nonneg	40	40.053111	13442	3607
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv1	40	40.050216	14635	696
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_remove_add_1	40	40.305929	1565	515
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.in_find_iff	40	40.043172	11393	3495
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_subset_equal	40	0.544956	7	4	1.0.0.2	synth with cache (only 1: vm_compute; only 1: intros; only 1: intuition; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rinv_r_sym	40	0.952701	23	11	0.1.0	synth with cache (only 1: intros; only 1: field; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.MaxRlist_P1	40	40.057650	17855	2848
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_neg	40	40.230849	17293	4048
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_0_r	40	0.020226	2	2	0.0	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.del_spec	40	40.622133	9258	1956
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi0	40	40.135881	56632	931
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_equal_1	40	0.109274	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_l_plus_morphism	40	40.096426	29731	7966
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_nonneg	40	40.106508	30876	6282
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.eqb_refl	40	40.089902	31714	2647
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qeq_bool_neq	40	40.136739	48880	4306
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_0_l	40	0.766244	10	4	0.2.0	synth with cache (only 1: intro; only 1: rewrite Rmult_comm; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Ring31.eqb31_eq	40	41.356871	9541	1608
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmin_r	40	2.701008	1623	281	1.7.2.0.5.0	synth with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: auto with qarith; only 1: intro; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_equal_2	40	0.719346	21	7	0.4	synth with cache (only 1: intuition; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.remove_singleton_empty	40	40.332394	3611	595
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_bits_unique	40	40.146162	50299	4996
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.ALMOST_RING.ARgen_phiPOS_add	40	40.216487	3918	964
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_ne	40	0.247953	8	7	0.0.0.1.0.0.0	synth with cache (only 1: split; only 1: apply Rquot1; only 1: rewrite Rrepr_mult, Rrepr_1; only 1: ring; only 1: apply Rquot1; only 1: rewrite Rrepr_mult, Rrepr_1; only 1: apply CReal_mult_1_l).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.is_empty_2	40	2.205771	1003	252	0.2.18	synth with cache (only 1: intro; only 1: rewrite is_empty_spec; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_1_r	40	0.019997	2	2	0.0	synth with cache (only 1: intro; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_eq_compat_l	40	0.010085	2	2	0.0	synth with cache (only 1: intros r r1 r2; only 1: apply f_equal).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rprod.prod_SO_split	40	40.071553	22242	3979
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.subset_Leaf_s	40	0.189411	301	37	16.0	synth with cache (only 1: intros n; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsigma.Sigma.sigma_split	40	40.076277	18700	2938
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_assoc	40	0.605803	6	4	0.0.0.2	synth with cache (only 1: vm_compute; only 1: split; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qred_involutive	40	40.065327	17041	5380
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_shiftr	40	40.161453	14849	2372
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.gss	40	40.138765	46846	5101
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi1	40	40.084177	31600	1154
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qclt_alt	40	0.020929	4	3	1.0.0	synth with cache (only 1: split; only 1: trivial; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv2	40	40.040439	11768	1119
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcgt_alt	40	0.021981	5	3	2.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Z.gt_lt_iff).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcle_alt	40	0.008269	2	2	0.0	synth with cache (only 1: intros; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_inter_1	40	0.696901	7	4	0.1.0.2	synth with cache (only 1: vm_compute; only 1: intuition; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_shiftl	40	40.140156	12025	3021
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcge_alt	40	0.039247	13	9	2.0.0.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: apply Z.ge_le_iff).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.rleaf	40	0.027137	6	5	0.0.0.0.1	synth with cache (only 1: destruct i; only 1: auto; only 1: simpl; only 1: auto; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.is_empty_1	40	40.284465	91189	1902
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zmod_eq	40	40.069091	10425	1417
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_pt_plus	40	40.100044	31493	5522
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.add_2	40	0.019509	3	3	0.0.0	synth with cache (only 1: intros; only 1: apply <- add_spec; only 1: auto with relations).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_inter_2	40	0.655197	12	5	0.1.1.2	synth with cache (only 1: vm_compute; only 1: intuition; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.remove_min_ok	40	40.152708	8833	1254
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_shiftl'	40	40.055199	12896	3375
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zmod_0_l	40	0.026453	3	3	0.0.0	synth with cache (only 1: intros; only 1: Z.bitwise; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.del_ok	40	40.014833	3465	491
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Q2Qc_eq_iff	40	40.084876	12119	2971
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zmod_0_r	40	0.021621	7	4	1.1.1.0	synth with cache (only 1: destruct a; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_eq_compat_r	40	1.562094	370	143	1.7.2	synth with cache (only 1: intros r r1 r2 H; only 1: rewrite <- H; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_1	40	0.037922	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zdiv_0_l	40	0.026461	3	3	0.0.0	synth with cache (only 1: intros; only 1: Z.bitwise; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmin_Rgt	40	40.070431	22106	5375
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zdiv_0_r	40	0.021614	6	4	0.1.1.0	synth with cache (only 1: destruct a; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_2	40	0.036672	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Q_apart_0_1	40	0.007672	2	1	1	synth with cache (only 1: auto with qarith).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Alembert.Alembert_C2	40	40.059424	15438	7193
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rinv_r	40	8.343752	556	227	0.0.0.0.0.0.4.1	synth with cache (only 1: intros; only 1: rewrite Rmult_comm; only 1: rewrite RinvImpl.Rinv_def; only 1: destruct (Req_appart_dec r R0); only 1: contradiction; only 1: apply Rquot1; only 1: rewrite Rrepr_mult, Rquot2, Rrepr_1; only 1: apply CReal_inv_l).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.Zmod_le_first	40	40.103430	11133	3163
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.PmulC_ok	40	40.290775	2996	617
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zmod_1_r	40	0.064512	13	4	6.0	synth with cache (only 1: intros; only 1: now Z.nzsimpl').
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.is_empty_equal_empty	40	40.079036	24470	4170
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.diff_inf	40	40.051004	12611	2352
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_3	40	0.049165	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmin_right	40	0.030993	7	4	0.0.3.0	synth with cache (only 1: intros; only 1: apply Rmin_case_strong; only 1: auto using Rle_antisym; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Ring31.eqb31_correct	40	2.389772	1465	233	0.4.15.1	synth with cache (only 1: intros; only 1: apply Int31_canonic; only 1: apply Zeq_bool_eq; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_4	40	0.060273	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zdiv_1_r	40	0.215837	18	10	0.3.0.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: symmetry; only 1: Z.nzsimpl; only 1: Z.order).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.treeify_zero_spec	40	0.066689	64	11	0.0.10	synth with cache (only 1: split; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_5	40	0.092529	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.MakeSetOrdering.lt_empty_r	40	40.152377	46424	5494
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_union_1	40	0.083996	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Rinv_1	40	40.073345	22162	4856
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_add_2	40	0.891176	27	10	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_union_2	40	0.068271	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_inter_1	40	0.062322	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_inter_2	40	0.039750	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.pow2_pos	40	0.051043	9	3	5.0	synth with cache (only 1: Z.swap_greater; only 1: now apply Z.pow_pos_nonneg).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_subset_1	40	0.039681	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rcomplete.R_complete	40	40.073777	21314	5699
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkPinj_ok	40	42.087070	18241	1468
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_subset_2	40	0.059003	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLtEpsilon	40	40.242544	21917	1754
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreduction.Qminus'_comp_Proper	40	40.576459	14414	1799
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.pow2_nz	40	0.024876	2	2	0.0	synth with cache (only 1: intros LT; only 1: Z.order_nz).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_sym	40	0.089570	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_subset_3	40	0.045962	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.not_in_union	40	0.472642	14	4	2.4	synth with cache (only 1: intro H; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.wB_diff_0	40	0.010863	5	1	4	synth with cache (only 1: now apply Z_lt_neq).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_subset_equal	40	0.084466	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.wB_pos	40	0.027148	2	2	0.0	synth with cache (only 1: red; only 1: now subst).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.to_Z_0	40	0.022900	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_diff_1	40	0.377626	15	4	0.5	synth with cache (only 1: intuition; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_equal_1	40	0.113295	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_diff_2	40	0.435822	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_zero	40	40.097216	14888	3027
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.to_Z_1	40	0.024205	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.diff_subset	40	0.029551	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.binary_value_pos	40	40.893977	29776	5084
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_facts.Zpower_le_monotone	40	40.178851	6257	831
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.ceqb_spec	40	3.436373	2747	67
coq-tactician-stdlib.8.11.dev	Coq.Vectors.Fin.eq_dec	40	40.165866	65115	4977
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqSeries.sum_maj1	40	40.075781	24488	4922
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_lor	40	40.056728	15820	3018
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.remove_diff_singleton	40	0.200478	5	3	0.0.2	synth with cache (only 1: split; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmin_l	40	40.070098	22726	5306
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Computational.Decidable_valid_obligation_1	40	40.064424	8510	2029
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_add_1	40	3.041322	177	47	3.4.0.1	synth with cache (only 1: vm_compute; only 1: intuition; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rle_min_compat_l	40	0.030345	6	6	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: do 2 (apply Rmin_case_strong; intro); only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_equal_2	40	0.801885	20	5	0.6	synth with cache (only 1: intros E; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.two_compl_value_Sn	40	0.006954	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_assoc	40	0.657480	13	3	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.diff_subset_equal	40	0.793293	29	13	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_fun.Alembert_exp	40	40.703977	13689	5985
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.diff_inter_empty	40	0.613873	8	4	1.1.0.2	synth with cache (only 1: vm_compute; only 1: split; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rge_gt_trans	40	40.084004	26965	3837
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.can_inj	40	1.406571	962	37	43	synth with cache (only 1: congruence).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Binomial.pascal_step1	40	40.064587	19188	3852
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow2_log	40	40.218568	3290	1272
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis2.formule	40	40.673015	3766	823
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.diff_inter_all	40	0.250939	6	4	0.0.0.2	synth with cache (only 1: vm_compute; only 1: split; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_n_0	40	40.082974	26081	2238
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_land	40	40.074180	14251	3197
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.remove_min_gt_tree	40	40.357633	14079	3272
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rderiv.cont_deriv	40	40.092601	29359	5314
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_inter_2	40	0.620679	8	4	0.0.2.2	synth with cache (only 1: vm_compute; only 1: split; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.omega.PreOmega.Z.rem_bound_pos_neg	40	40.068803	20636	4064
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.mem_3	40	0.035720	7	3	0.1.3	synth with cache (only 1: intros n; only 1: rewrite <- not_mem_iff; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.mem_4	40	0.076384	13	4	0.1	synth with cache (only 1: rewrite <- not_mem_iff; only 1: Dec.fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_refl	40	0.023851	6	1	5	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftl_S	40	0.018959	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalEpsilon.epsilon_inh_irrelevance	40	40.360230	44481	4857
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zdiv_eucl_exist	40	40.061090	18092	3687
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.choose_mem_1	40	0.015670	7	2	3.2	synth with cache (only 1: intro; only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftl_S_tail	40	0.061183	8	7	0.1.0.0.0.0.0	synth with cache (only 1: intros n; only 1: elim n; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: now f_equal).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.choose_mem_2	40	0.011500	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul_le	40	40.301098	24413	3494
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.add_mem_1	40	0.036117	3	2	0.1	synth with cache (only 1: apply eq_true_iff_eq; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.Add_add	40	1.249540	159	48	3.0.8	synth with cache (only 1: vm_compute; only 1: intuition; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.Add_remove	40	1.076562	50	15	2.3	synth with cache (only 1: vm_compute; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_lxor	40	40.105109	12982	3439
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.of_to_lu	40	40.115287	44800	4659
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftl_n_0	40	0.056199	6	6	0.0.0.0.0.0	synth with cache (only 1: induction n; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: rewrite IHn; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.add_mem_2	40	0.298458	19	13	0.0.0.0.1.0.0	synth with cache (only 1: intros; only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_neq_iff s H); only 1: destruct (mem y s); only 1: intuition; only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zquot_opp_r	40	40.109966	20428	2725
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftl_size	40	0.018152	2	2	0.0	synth with cache (only 1: destruct x; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_mem_1	40	0.076898	3	2	0.1	synth with cache (only 1: rewrite <- not_mem_iff; only 1: Dec.fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_zdigits	40	40.102353	32318	1766
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_bit0	40	40.076470	21479	3801
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make_ord.eq_1	40	40.168438	62332	4481
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_0	40	0.021728	4	4	0.0.0.0	synth with cache (only 1: unfold to_Z, zdigits; only 1: apply Zmod_small; only 1: unfold wB, base; only 1: auto with zarith).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add3_bit0	40	40.104501	19609	2850
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.prop_eps	40	40.071409	20188	4503
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.excluded_middle_iff_representative_boolean_partition	40	40.080192	3340	1228
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_lt	40	40.076252	22902	6134
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.firstr_firstl	40	0.125545	8	3	0.0.5	synth with cache (only 1: intros; only 1: destruct x; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.cneqb_sound	40	40.110349	40665	2514
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.firstl_firstr	40	0.018862	2	2	0.0	synth with cache (only 1: destruct x; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcabs.Qcabs_pos	40	40.076399	26630	1980
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.is_empty_spec	40	40.122863	45184	4541
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add3_bits_div2	40	40.024227	6153	1424
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Wf_Z.Efficient_Rec.Zlt_lower_bound_rec	40	40.096843	28861	4252
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zdivide_Zdiv_lt_pos	40	40.073106	21294	4678
coq-tactician-stdlib.8.11.dev	Coq.Vectors.Fin.cast	40	4.209115	4312	1176	2.6.8	synth with cache (only 1: intros n m p; only 1: intros <-; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.tech_pow_Rmult	40	0.031902	6	3	1.2.0	synth with cache (only 1: intros n m; only 1: simpl; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rgt_ge_trans	40	41.516679	26172	4186
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.eq_cnf	40	40.052004	14941	2959
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv2b	40	40.043557	12972	1249
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.omniscient_fun_choice_imp_fun_choice	40	40.181548	72742	5602
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyBool.Z_of_nat_eqb_iff	40	40.268810	23715	4782
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.lex_Opp	40	40.505202	23873	5149
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_incr_0	40	40.455095	15743	6180
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_predsize_0_firstl	40	1.379581	202	75	1.3.0.0.5	synth with cache (only 1: destruct x; only 1: intro H; only 1: injection H; only 1: simpl in *; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsLUB.DDcut_limit	40	40.141443	47733	6324
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zrem_opp_l	40	2.341262	862	281	0.0.1.0.0.1.0.0.0.1.0.0.1.0.0.0.0.0	synth with cache (only 1: destruct a, b; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: unfold Z.rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: unfold Z.rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: trivial; only 1: unfold Z.rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: unfold Z.rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r])).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.tech_pow_Rplus	40	1.048437	118	55	2.1.1.0.1	synth with cache (only 1: induction n; only 1: simpl; only 1: ring_Rsqr; only 1: simpl; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_sym	40	3.484052	811	187	2.3.0.2.3.0.0.3	synth with cache (only 1: apply eq_true_iff_eq; only 1: split; only 1: intros; only 1: rewrite (equal_2 H); only 1: auto with set; only 1: intros; only 1: rewrite (equal_2 H); only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.epsilon_imp_constructive_indefinite_description	40	0.108861	114	41	3.0.0.0.0.0.1	synth with cache (only 1: intros D_iota A P H; only 1: destruct D_iota with (P := P) as (x, H1); only 1: destruct H; only 1: auto; only 1: exists x; only 1: apply H1; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.btauto.Reflect.Completeness.list_nth_succ	40	40.641222	38967	7942
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make_ord.eq_refl	40	40.314067	125588	1937
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Qpower_pos_positive	40	40.172304	15331	1778
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zis_gcd_sym	40	1.436382	690	109	2.0.0.4.7	synth with cache (only 1: intros * []; only 1: constructor; only 1: trivial; only 1: trivial; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.eqb_sym	40	11.157703	9830	1146	27.2.6	synth with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: t_eqb).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis3.derivable_pt_lim_div	40	40.067005	18845	5049
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_alt_dichotomy	40	40.345709	11800	3135
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_plus_carry_morphism	40	40.038545	11045	2757
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_inter_1	40	5.734085	227	41	0.0.5.4.2	synth with cache (only 1: vm_compute; only 1: intros; only 1: split; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.bal_height_1	40	40.029118	5819	1728
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_one	40	40.084450	10810	2782
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qeq_bool_comm	40	40.089259	16303	1402
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.compare_inv	40	40.422014	25158	3146
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make_ord.eq_sym	40	40.248142	54840	5625
coq-tactician-stdlib.8.11.dev	Coq.Strings.Ascii.eqb_sym	40	40.111814	34221	2644
coq-tactician-stdlib.8.11.dev	Coq.Logic.Epsilon.constructive_definite_description	40	40.549527	69423	5641
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.remove_spec	40	40.099878	5540	1162
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_mem	40	14.148054	1371	854	0.0.2.0.0.0.0.0.0.0.0.0	synth with cache (only 1: generalize (mem_iff (inter s s') x), (mem_iff s x), (mem_iff s' x), (inter_spec s s' x); only 1: destruct (mem x s); only 1: destruct (mem x s'); only 1: destruct (mem x (inter s s')); only 1: intuition; only 1: intuition; only 1: destruct (mem x (inter s s')); only 1: intuition; only 1: intuition; only 1: destruct (mem x (inter s s')); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_rev	40	40.070118	17480	4366
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zis_gcd_0	40	1.595018	982	178	0.0.0.1.0.0.4.8.0	synth with cache (only 1: intros; only 1: constructor; only 1: exists 1; only 1: Z.nzsimpl; only 1: Z.order'; only 1: exists 0; only 1: Z.bitwise; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_equal	40	0.025677	4	3	0.0.1	synth with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_cardinal	40	0.011947	3	1	2	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rminmax.R.minus_max_distr_l	40	40.442732	6204	3623
coq-tactician-stdlib.8.11.dev	Coq.Strings.Byte.nat.of_nat_None_iff	40	40.067727	8678	927
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_add_2	40	0.737241	19	5	3.3	synth with cache (only 1: intros; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.subset_refl	40	0.013164	2	1	1	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.RealField.Rgen_phiPOS_not_0	40	40.173432	53077	5507
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_eq_0_compat_r	40	0.030548	3	3	0.0.0	synth with cache (only 1: intros; only 1: rewrite H; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.subset_antisym	40	0.055042	23	4	6	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_eq_0_compat_l	40	0.020887	1	1	0	synth with cache (only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_inter_1	40	0.057716	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.equal_iff	40	40.217062	25168	4309
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_r_plus_morphism	40	40.087012	26320	3595
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zrem_opp_r	40	2.776881	990	390	0.0.1.0.0.1.0.0.0.1.0.0.1.0.0.0.0.0	synth with cache (only 1: destruct a, b; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: unfold Z.rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: unfold Z.rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: trivial; only 1: unfold Z.rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: unfold Z.rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r])).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_neq_0_reg	40	0.062425	15	6	2.0.1	synth with cache (only 1: intros n m; only 1: intro H; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_inter_2	40	0.052639	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.fun_choice_and_small_drinker_imp_omniscient_fun_choice	40	40.105225	39062	3242
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_subset_1	40	0.030495	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_dichotomy	40	40.522418	25461	4251
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_subset_2	40	0.034896	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_subset_3	40	0.055524	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_integral_contrapositive_currified	40	0.443991	74	42	0.0.0.0.0.2.0	synth with cache (only 1: intros r1 r2 H; only 1: intro; only 1: intro abs; only 1: case (Rmult_integral r1 r2); only 1: auto with real; only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.if_eqA_then	40	1.190499	838	79	0.0.20.4	synth with cache (only 1: intros; only 1: destruct (eqA_dec a a') as [HeqA| ]; only 1: congruence; only 1: congruence).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_diff_1	40	0.055442	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.ni_le_trans	40	41.485151	33915	2715
coq-tactician-stdlib.8.11.dev	Coq.Reals.ClassicalDedekindReals.UpperAboveLower	40	40.456387	25479	4324
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring.Ring.ring_mul_0_l	40	40.088466	33011	1325
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.ALMOST_RING.ARgen_phiPOS_mult	40	40.077980	2280	736
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_diff_2	40	0.077243	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.diff_subset	40	0.033430	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make_ord.eq_trans	40	40.153209	55231	4791
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rrepr_mult	40	40.113111	24504	2396
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eq_succ_is_pow2	40	40.069550	18349	4267
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_plus_distr_r	40	0.989706	30	10	6.0	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_add_1	40	8.172363	550	90	3.2.10.1	synth with cache (only 1: intuition; only 1: constructor; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.Pjump_pred_double	40	40.044625	12965	1963
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.add_neq_mapsto_iff	40	1.069819	308	104	0.0.0.7.1	synth with cache (only 1: intros; only 1: intuition; only 1: apply add_3 with x e; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.bInjective_bSurjective	40	40.189179	34720	4741
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.diff_subset_equal	40	0.690438	15	5	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv3b	40	40.025023	3840	2737
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_remove_add_2	40	40.207230	2814	834
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.bal_bst	40	40.601680	31047	4627
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zgcd_alt.fibonacci_pos	40	40.089953	29803	5139
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zdiv_mod_unique	40	40.055067	17312	2294
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutEq.Perm.permut_length	40	40.105570	32844	7740
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.inser_trans_R	40	40.043521	10185	2069
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.fun_choice_and_small_drinker_iff_omniscient_fun_choice	40	40.136750	52474	4808
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.remove_diff_singleton	40	0.475669	1	1	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.bSurjective_bBijective	40	40.230064	18819	1328
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_lnot_diag_low	40	40.189957	21600	5255
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.empty_ok	40	0.007590	1	1	0	synth with cache (only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Sqrt_reg.sqrt_var_maj	40	40.039173	9467	4534
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.lex_Eq	40	40.534090	35580	5192
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Zpower_exp	40	40.054581	14924	3305
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.diff_inter_empty	40	0.715853	7	4	0.0.2.1	synth with cache (only 1: vm_compute; only 1: split; only 1: fsetdec; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.epsilon_imp_small_drinker	40	2.420979	7125	638	0.9.0.28.1	synth with cache (only 1: intros D_epsilon A P H; only 1: destruct D_epsilon with (P := P) as (x, H1); only 1: auto; only 1: exists x; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Ntestbit_Nbit	40	40.331409	24818	5663
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_opp_r_uniq	40	40.056367	12057	2530
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_Zeqb_ok	40	40.038335	12362	1449
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_proper_l	40	40.082265	7127	2083
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.diff_inter_all	40	0.742748	25	5	0	synth with cache (only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zis_gcd_1	40	4.635547	4498	365	1.1.1.0.31.0	synth with cache (only 1: intros n; only 1: split; only 1: exists n; only 1: now Z.nzsimpl'; only 1: auto with zarith; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Cyclic63.diveucl_spec_aux	40	40.593894	32823	3839
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zis_gcd_refl	40	0.017287	4	4	0.0.0.0	synth with cache (only 1: constructor; only 1: auto with zarith; only 1: auto with zarith; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.mkEns_cardinal	40	40.066989	15852	2837
coq-tactician-stdlib.8.11.dev	Coq.Strings.Ascii.eqb_neq	40	0.010720	1	1	0	synth with cache (only 1: now rewrite <- not_true_iff_false, Pos.eqb_eq).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_sub_low	40	40.049380	13650	3623
coq-tactician-stdlib.8.11.dev	Coq.Strings.Ascii.eqb_compat	40	0.018392	3	3	0.0.0	synth with cache (only 1: intros x x' Exx' y y' Eyy'; only 1: apply eq_true_iff_eq; only 1: now rewrite 2!Nat.eqb_eq, Exx', Eyy').
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zis_gcd_minus	40	0.053119	15	6	0.0.1.0.2	synth with cache (only 1: induction 1; only 1: constructor; only 1: intuition; only 1: trivial; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zis_gcd_opp	40	0.073834	8	5	0.1.1.1.0	synth with cache (only 1: induction 1; only 1: constructor; only 1: intuition; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.empty_spec	40	1.398387	1637	129	2.3.33	synth with cache (only 1: intros n; only 1: intuition; only 1: inversion_clear H).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make_ord.lt_trans	40	40.133961	30752	5097
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.diff_spec	40	40.143125	7763	1839
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_nocarry_lt_pow2	40	40.304738	25410	4433
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_eq_reg_l	40	40.094108	27343	3797
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.bal_in	40	40.561327	3503	657
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nbit_Ntestbit	40	0.912941	347	127	0.1.5.0.1	synth with cache (only 1: destruct a; only 1: trivial; only 1: intros; only 1: simpl; only 1: now rewrite <- Ptestbit_Pbit, N2Nat.id).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Mergesort.Sort.StronglySorted_sort	40	40.146157	51977	4814
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nshiftr_nat_S	40	0.023513	11	4	2	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nshiftl_nat_S	40	0.006282	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_nocarry_mod_lt_pow2	40	40.193840	10432	2249
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.Add_add	40	0.652965	25	10	1.0.1	synth with cache (only 1: vm_compute; only 1: intuition; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_eq_compat	40	0.005732	1	1	0	synth with cache (only 1: congruence).
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.ceqb_spec	40	2.945053	2183	59
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.MVT	40	40.055338	16832	2561
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_0	40	0.028380	8	2	3.3	synth with cache (only 1: unfold IZR; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ArithProp.even_odd_cor	40	40.038006	11211	2429
coq-tactician-stdlib.8.11.dev	Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Acc.acc_implies_P_eventually	40	40.568075	55850	7541
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_eq_0_compat	40	0.068640	28	9	0.5.1	synth with cache (only 1: intros; only 1: rewrite H; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.ObsoletePmultNat.le_Pmult_nat	40	40.120455	43138	5128
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.Add_remove	40	0.739572	30	9	1.1.1	synth with cache (only 1: intuition; only 1: expAdd; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_involutive	40	0.046624	20	6	2.1	synth with cache (only 1: intros z; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.MakeSetOrdering.lt_empty_l	40	40.217291	22055	2688
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.first_in_holed_interval_works	40	40.194100	78180	3535
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.add_neq_in_iff	40	3.749765	1565	557	0.0.0.1.0.0.0.1.2.0.0.1	synth with cache (only 1: unfold In; only 1: split; only 1: intros (e0, H0); only 1: exists e0; only 1: apply add_3 with x e; only 1: auto; only 1: auto; only 1: intros (e0, H0); only 1: exists e0; only 1: apply add_2; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_app_inv2	40	5.243418	1176	688	2.0.0.0.0.0.0.1.0.0	synth with cache (only 1: intros l l1 l2; only 1: unfold permutation, meq; only 1: intros H a; only 1: generalize (H a); only 1: clear H; only 1: do 2 rewrite list_contents_app; only 1: simpl; only 1: intros; only 1: apply plus_reg_l with (multiplicity (list_contents l) a); only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.of_lu_double_gen	40	42.521279	5774	1132
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eq_succ_iff_pow2	40	40.062521	16499	4154
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_eq_reg_r	40	40.129733	8256	2645
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.add_wd	40	40.057036	17764	3184
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_trans	40	40.573879	10556	1901
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.interior_P1	40	40.147501	56501	6148
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.MakeSetOrdering.lt_add_lt	40	40.128375	27535	4533
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.nsatz1.psos_r1b	40	40.064452	10056	1947
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_mem_2	40	12.239135	1526	820	2.0.1.0.4.1	synth with cache (only 1: intros; only 1: apply eq_true_iff_eq; only 1: split; only 1: do 2 rewrite <- mem_iff; only 1: apply remove_3; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.elements_spec1	40	0.015191	5	3	0.0.2	synth with cache (only 1: split; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_remove_add_1	40	40.345735	1824	201
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.singleton_equal_add	40	0.008684	2	1	1	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.mindepth_log_cardinal	40	40.328794	15609	5981
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.interior_P2	40	0.044590	21	6	5.0.0	synth with cache (only 1: intros; only 1: unfold included; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.mkEns_Finite	40	40.577061	56782	2931
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qceq_alt	40	40.418183	24060	4686
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.delmin_spec	40	40.491134	15865	2473
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetCompat.Update_WSets.Spec.equal_spec	40	40.103424	36164	4565
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_pos	40	40.105886	24251	5626
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_positivity	40	0.100839	42	17	0.0.2.2.0	synth with cache (only 1: intros; only 1: unfold sqrt; only 1: destruct (Rcase_abs x) as [Hlt| Hge]; only 1: auto with real; only 1: apply Rsqrt_positivity).
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.nsatz1.psos_r1	40	0.241411	12	6	2.2.0	synth with cache (only 1: intros; only 1: setoid_rewrite H; only 1: cring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_plus_distr	40	1.834220	109	25	5.3	synth with cache (only 1: intros a b; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_mult_distr_l	40	0.047964	3	2	1.0	synth with cache (only 1: intros a b; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcomplements.Zcase_sign	40	40.375237	52460	4298
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.empty_iff	40	40.631873	81803	5151
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_mult_distr_l_reverse	40	0.041854	2	2	0.0	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcomplements.sqr_pos	40	0.037862	15	4	5	synth with cache (only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.elements_spec2	40	0.838006	540	102	2.10.1	synth with cache (only 1: intro l; only 1: repeat rewrite <- isok_iff; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_opp_opp	40	0.047239	7	2	5.0	synth with cache (only 1: intros a b; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.elements_spec2w	40	0.021376	4	3	1.0.0	synth with cache (only 1: intro s; only 1: repeat rewrite <- isok_iff; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.micromega.QMicromega.QSORaddon	40	40.909488	5394	793
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_mult_distr_r_reverse	40	0.045995	2	2	0.0	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.bal_mapsto	40	40.307999	8606	2209
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rminus_0_r	40	0.040405	2	2	0.0	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.pred_ext_and_rel_choice_imp_EM	40	40.074759	20143	4723
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rminus_0_l	40	0.217527	19	4	0.4	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.same_genZ	40	40.199681	21389	2119
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_mult_distr_r	40	0.803920	28	7	1.3	synth with cache (only 1: intros a b; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_remove_add_2	40	40.339015	2065	287
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_minus_distr	40	0.046106	2	2	0.0	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Diaconescu.ProofIrrel_RelChoice_imp_EqEM.a1'	40	0.149201	284	27	16.1	synth with cache (only 1: red; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Diaconescu.ProofIrrel_RelChoice_imp_EqEM.a2'	40	0.013593	2	2	0.0	synth with cache (only 1: exists a1; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_minus_distr'	40	0.031210	2	2	0.0	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_mem_2	40	40.100904	29054	2730
coq-tactician-stdlib.8.11.dev	Coq.Floats.FloatLemmas.frexp_spec	40	40.546493	91842	3705
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_double	40	40.050572	6937	1938
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.bal_find	40	40.137568	5925	1551
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.constructive_indefinite_description_and_small_drinker_imp_epsilon	40	12.786329	17400	1470	8.38	synth with cache (only 1: compute; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_Ifp.base_Int_part	40	40.046422	11960	5071
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.gso	40	40.129618	44076	4725
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.mkPinj_ok	40	40.093987	10305	328
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableTypeEx.PairUsualDecidableType.eq_dec	40	40.095228	35132	3568
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRlt_le_trans	40	40.098481	33742	3408
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Pbit_Ptestbit	40	40.089841	29798	4420
coq-tactician-stdlib.8.11.dev	Coq.Strings.OctalString.to_Z_of_Z	40	40.416690	35046	949
coq-tactician-stdlib.8.11.dev	Coq.Strings.HexString.to_Z_of_Z	40	40.083001	28648	2727
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.empty_mapsto_iff	40	40.127196	48904	3823
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_Add	40	5.900111	276	69	2.1.2.1.3	synth with cache (only 1: expAdd; only 1: intuition; only 1: red; only 1: intro n; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.micromega.QMicromega.Qeval_expr_simpl	40	2.812685	1322	154	15.11	synth with cache (only 1: intros a n; only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make_ord.lt_not_eq	40	40.093682	28435	6082
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.equal_spec	40	40.055688	15061	4845
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLt_lpo_dec	40
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zdiv_unique	40	40.070875	25372	2988
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalString.NilEmpty.usu	40	40.242935	41884	569
coq-tactician-stdlib.8.11.dev	Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Acc.constructive_indefinite_ground_description_nat_Acc	40	6.563610	4026	1774	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.1	synth with cache (only 1: intros H; only 1: pattern 0; only 1: apply Fix_F with (R := R); only 1: intros x IH; only 1: destruct (P_decidable x) as [Px| not_Px]; only 1: exists x; only 1: assumption; only 1: set (y := S x); only 1: assert (Ryx : R y x); only 1: unfold R; only 1: split; only 1: auto; only 1: auto; only 1: destruct (IH y Ryx) as [n Hn]; only 1: exists n; only 1: assumption; only 1: elim H; only 1: intros x Px; only 1: apply P_eventually_implies_acc with (n := x); only 1: replace (x + 0) with x; only 1: auto with arith; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.micromega.QMicromega.QNpower	40	0.037941	6	6	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct n; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZCoeff.InitialMorphism.req_trans	40	40.645077	6142	655
coq-tactician-stdlib.8.11.dev	Coq.Logic.ConstructiveEpsilon.ConstructiveGroundEpsilon.P'_decidable	40	0.189106	253	41	15	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZCoeff.InitialMorphism.rplus_morph_Proper	40	0.022078	1	1	0	synth with cache (only 1: exact (SORplus_wd sor)).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_eq_0_l	40	40.119676	4948	1132
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZCoeff.InitialMorphism.rtimes_morph_Proper	40	0.008037	1	1	0	synth with cache (only 1: exact (SORtimes_wd sor)).
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZCoeff.InitialMorphism.ropp_morph_Proper	40	0.016993	1	1	0	synth with cache (only 1: exact (SORopp_wd sor)).
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZCoeff.InitialMorphism.rle_morph_Proper	40	0.008136	1	1	0	synth with cache (only 1: exact (SORle_wd sor)).
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZCoeff.InitialMorphism.rlt_morph_Proper	40	0.016739	1	1	0	synth with cache (only 1: exact (SORlt_wd sor)).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_0_compat	40	40.527560	13857	2312
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZCoeff.InitialMorphism.rminus_morph_Proper	40	0.138475	5	5	0.0.0.0.0	synth with cache (only 1: intros x1 x2 H1 y1 y2 H2; only 1: rewrite (Rsub_def (SORrt sor) x1 y1); only 1: rewrite (Rsub_def (SORrt sor) x2 y2); only 1: rewrite H1; only 1: now rewrite H2).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkPinj_ext	40	40.021927	5610	717
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLe_not_lt	40	40.184585	19077	2434
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qround.Qceiling_resp_le	40	40.093429	29396	3665
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.remove_min_spec1	40	40.079329	28455	3056
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZCoeff.InitialMorphism.ring_ops_wd	40	0.920904	213	30	1.0.0.11	synth with cache (only 1: split; only 1: Morphisms.solve_proper; only 1: Morphisms.solve_proper; only 1: Morphisms.solve_proper).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealEq_diff	40	40.156936	13096	3568
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rseries.sequence.Un_cv_crit_lub	40	40.123730	42224	5799
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Ndiv2_eq	40	40.140255	51677	3616
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qplus_comp	40	40.085782	20985	3463
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.empty_in_iff	40	33.388061	33848	3030	0.31.0.9	synth with cache (only 1: unfold In; only 1: intuition; only 1: destruct H as (b, H); only 1: apply (empty_1 H)).
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_incr_0_var	40	40.059226	15539	5534
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_plus_distr_l	40	40.707033	8741	2844
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Ndiv2_bit_eq	40	40.136087	38287	4358
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.remove_neq_mapsto_iff	40	0.366267	159	60	0.0.3.4	synth with cache (only 1: intro H1; only 1: intuition; only 1: apply remove_3 with x; only 1: auto with map).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.is_empty_2	40	40.140737	49306	5090
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zmod_unique	40	40.063562	21909	3169
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv6	40	40.074358	23856	1860
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.pow_pos_add	40	40.049515	17592	691
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_add_le	40	40.038540	8906	2770
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qopp_comp	40	40.068541	22252	3730
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.NZ_to_Z_mod	40	40.102514	19630	1092
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.remove_neq_in_iff	40	1.620626	859	333	0.0.0.0.0.0.1.1.0.0.0.0	synth with cache (only 1: unfold In; only 1: split; only 1: intros (e0, H0); only 1: exists e0; only 1: intuition; only 1: apply remove_3 with x; only 1: auto; only 1: intros (e0, H0); only 1: exists e0; only 1: apply remove_2; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zmod_div_mod	40	40.125168	28605	1772
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Powers_of_2.two_power_nat_equiv	40	40.058583	13586	5961
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.empty_mem	40	40.069341	17433	5393
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_app_inv1	40	40.078444	22720	5722
coq-tactician-stdlib.8.11.dev	Coq.Strings.BinaryString.Z_of_of_Z	40	40.348690	42151	1630
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qabs.Qabs_Qminus	40	40.138892	46607	3516
coq-tactician-stdlib.8.11.dev	Coq.Reals.Cos_rel.A1_cvg	40	40.081160	23112	7605
coq-tactician-stdlib.8.11.dev	Coq.Reals.Cos_plus.reste1_maj	40	40.119019	19769	3101
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRle_trans	40	40.047440	9590	2563
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Powers_of_2.two_p_equiv	40	1.432099	451	148	0.0.2.0.16	synth with cache (only 1: destruct x; only 1: now Z.nzsimpl; only 1: now apply Pos.iter_swap_gen; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zmod_divide_minus	40	40.027073	4190	634
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.Of_Z.of_Z_correct	40	40.076237	9781	1305
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_above_size	40	40.057435	19382	2189
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Powers_of_2.two_power_nat_S	40	0.316977	79	46	8	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.of_lu_revapp	40	40.040332	7751	2483
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_in	40	40.037335	9368	1781
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_eq_R0	40	41.138908	12913	1866
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.add_iff	40	40.119247	27722	2055
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.is_empty_equal_empty	40	40.044946	11362	2328
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRlt_trans	40	41.163041	24656	2794
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.mem_3	40	0.035262	4	2	0.2	synth with cache (only 1: rewrite <- not_mem_iff; only 1: Dec.fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.add_neq_iff	40	13.037055	10907	1227	4.1.3.5.2.0.11	synth with cache (only 1: destruct (eq_dec x y) as [E| E]; only 1: constructor; only 1: intuition; only 1: apply add_2; only 1: intro n; only 1: intuition; only 1: exact (add_3 E H)).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.mem_4	40	0.064117	12	4	0.1	synth with cache (only 1: rewrite <- not_mem_iff; only 1: Dec.fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_refl	40	0.017919	5	1	4	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CReq_sym	40	0.033759	4	3	0.1.0	synth with cache (only 1: intros n m Hm (q, Hq); only 1: red; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.union_iff	40	0.068568	16	6	1	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.remove_2	40	0.663064	230	57	0.8.2	synth with cache (only 1: intros; only 1: rewrite remove_spec; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rrepr_inv	40	40.492398	26042	3251
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.PsubC_ok	40	3.676343	695	349	0.1.0.0.0.0.0.0.0.0.1.0	synth with cache (only 1: revert l; only 1: induction P; only 1: simpl; only 1: intros; only 1: Esimpl; only 1: simpl; only 1: intros; only 1: trivial; only 1: simpl; only 1: intros; only 1: rewrite IHP2; only 1: rsimpl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.opp_wd	40	40.065675	20625	4119
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_carry_div2	40	40.291578	9770	1436
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_minus	40	0.195427	9	3	1.0	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rminus_eq_contra	40	0.085867	25	9	2.2.1	synth with cache (only 1: red; only 1: intros r1 r2; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_mem	40	40.045792	1516	843
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.remove_min_spec2	40	40.256643	13051	3888
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rminus_not_eq_right	40	0.023335	5	5	0.0.0.0.0	synth with cache (only 1: red; only 1: intros; only 1: elim H; only 1: apply Rminus_diag_eq; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rminus_not_eq	40	0.038177	6	4	0.2.0.0	synth with cache (only 1: red; only 1: intros r1 r2 H H0; only 1: apply H; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CReq_refl	40	2.627624	1159	272	0.0.5.0.0.5.0	synth with cache (only 1: constructor; only 1: intuition; only 1: destruct (CRltLinear R), p; only 1: exact (f x x H H); only 1: intuition; only 1: destruct (CRltLinear R), p; only 1: exact (f x x H H)).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.remove_min_ok	40	40.267091	23394	2773
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.remove_neq_iff	40	1.479607	194	40	0.3.3.2	synth with cache (only 1: intro n; only 1: intuition; only 1: apply remove_3 with x; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.add_mapsto_iff	40	40.057126	14516	2750
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.subset_equal	40	0.024023	10	3	5.0	synth with cache (only 1: intros; only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.Logic.WKL.PreWeakKonigsLemma	40	40.231134	78095	4132
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.add_log2_up_lt	40	40.031473	5998	2634
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_minus_distr_l	40	0.381595	13	4	1.0	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.decreasing_growing	40	40.064429	20773	2861
coq-tactician-stdlib.8.11.dev	Coq.Reals.PSeries_reg.Boule_convex	40	40.085865	25691	4333
coq-tactician-stdlib.8.11.dev	Coq.Reals.AltSeries.CV_ALT_step2	40	40.603471	17018	4272
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.is_empty_1	40	40.130768	34584	3264
coq-tactician-stdlib.8.11.dev	Coq.Reals.ArithProp.le_double	40	18.112803	13366	1883	27.0	synth with cache (only 1: intros n m; only 1: apply Nat.mul_le_mono_pos_l, Nat.lt_0_succ).
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_lt_trans	40	40.055820	8319	2020
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreals.Qle_Rle	40	40.046326	13383	2766
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.tech3	40	40.151984	19798	3189
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_neq	40	0.056274	5	4	0.1.0.0	synth with cache (only 1: intros n m; only 1: intro H; only 1: rewrite Rlt_le_neq in H; only 1: now destruct H).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.split_couple_eq	40	18.266082	7454	1252	0.0.0.0.2.13.4	synth with cache (only 1: intros; only 1: injection H; only 1: split; only 1: destruct (Rle_dec b c); only 1: auto with real; only 1: auto with real; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.compare_equal	40	40.465583	21070	3606
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_alt.pre_cos_bound	40	40.065634	16647	6439
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.treeify_one_spec	40	34.535048	25502	2777	5.0.8.1.17.34	synth with cache (only 1: intros s Hs; only 1: destruct s as [| c l y r]; only 1: split; only 1: Nat.order'; only 1: auto; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.Rlt_pow_R1	40	40.670975	28332	4327
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_xce	40	0.017298	4	4	0.0.0.0	synth with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_lxl	40	0.021499	15	5	0.0.0.4	synth with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.exist_exp	40	40.076342	23958	6047
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_gxg	40	0.016068	4	4	0.0.0.0	synth with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.PairOrderedType.compare	40	40.783997	39558	4884
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_xll	40	0.015731	4	4	0.0.0.0	synth with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_carry_bits_aux	40	40.090990	30971	3941
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalN.Signed.to_int_inj	40	40.124602	49883	2145
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.dicho_comp	40	40.063474	18395	4253
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qminus_comp	40	40.029594	6503	2033
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_xgg	40	0.014576	4	4	0.0.0.0	synth with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.iota_imp_constructive_definite_description	40	40.180985	69958	4774
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rminus_diag_eq	40	15.955737	1872	683	0.8.3.3	synth with cache (only 1: intros r b; only 1: intros H2; only 1: subst; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_Bm1	40	0.113089	19	7	0.1.0	synth with cache (only 1: apply Zmod_small; only 1: generalize wB_pos; only 1: lia).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zlt_is_le_bool	40	40.068823	19354	3763
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRcomplete.doubleLeCovariant	40	41.292133	10514	1862
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_sym	40	4.176914	1519	368	3.5.0.3.5.0.0.4	synth with cache (only 1: apply eq_true_iff_eq; only 1: split; only 1: intros; only 1: rewrite (equal_2 H); only 1: auto with set; only 1: intros; only 1: rewrite (equal_2 H); only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_compare	40	0.022914	4	2	0.2	synth with cache (only 1: intros x y; only 1: auto with zarith).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rinv_1	40	3.225291	1443	142	0.37	synth with cache (only 1: field_simplify; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_comp	40	40.039144	10325	2290
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_equal	40	0.019997	5	3	1.0.1	synth with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.Zsor	40	40.542633	4131	1507
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_cardinal	40	0.018486	4	3	0.0.1	synth with cache (only 1: intro; only 1: rewrite (equal_2 H); only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.MakeSetOrdering.lt_add_eq	40	40.107001	28127	4907
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_refl	40	0.006218	2	1	1	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qabs.Qle_Qabs	40	6.554709	4180	825	0.3.0.1.0.0.4.0.0.9	synth with cache (only 1: intros [n d]; only 1: red; only 1: simpl; only 1: destruct n; only 1: simpl; only 1: auto with zarith; only 1: simpl; only 1: apply Z.le_refl; only 1: red; only 1: discriminate).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rinv_involutive	40	0.184448	31	17	0.3.0	synth with cache (only 1: intros; only 1: field; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_antisym	40	0.015796	7	2	5.0	synth with cache (only 1: intros; only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.of_lu_succ_double	40	0.014919	2	1	1	synth with cache (only 1: apply of_lu_double_gen).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.add_1	40	40.274494	84389	3913
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_inv_permute	40	0.057730	3	3	0.0.0	synth with cache (only 1: intros; only 1: field; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.add_in_iff	40	40.094139	30076	5229
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.MinRlist_P1	40	40.052031	14587	4143
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.pow_pos_add	40	40.058615	20930	1065
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.elements_empty	40	1.999769	3519	129
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv4	40	40.038156	9065	2557
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zdivide_mod_minus	40	40.059960	19172	2743
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Powers_of_2.shift_nat_plus	40	6.947848	2651	482	11.0.6.1.2.1.10	synth with cache (only 1: induction n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: induction n; only 1: trivial; only 1: now f_equal).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmin_left	40	40.077936	26213	3499
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qinv_comp	40	40.066496	21224	3239
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_cxe	40	3.560997	3932	303	2.3.2.4.6.15.1	synth with cache (only 1: intro; only 1: destruct x; only 1: constructor; only 1: simpl; only 1: constructor; only 1: simpl; only 1: constructor).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_mem	40	17.799400	1549	981	0.0.2.0.0.0.0.0.0.0.0.0	synth with cache (only 1: generalize (mem_iff (inter s s') x), (mem_iff s x), (mem_iff s' x), (inter_iff s s' x); only 1: destruct (mem x s); only 1: destruct (mem x s'); only 1: destruct (mem x (inter s s')); only 1: intuition; only 1: intuition; only 1: destruct (mem x (inter s s')); only 1: intuition; only 1: intuition; only 1: destruct (mem x (inter s s')); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_carry_bits	40	40.066755	8955	1690
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.subset_spec	40	40.100277	36739	4116
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_equal	40	0.047368	9	3	4.0	synth with cache (only 1: intros; only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Q_apart_0_1	40	0.093649	57	15	6.3	synth with cache (only 1: unfold not; only 1: now try destruct p).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rprod.prod_SO_pos	40	40.073237	20990	4526
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_bst	40	40.102051	34251	3344
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_gt_cases	40	19.841044	8200	1266	2.0.3.7.13.0.2.0	synth with cache (only 1: intros; only 1: destruct (Rlt_trichotomy n m) as [H| [H| H]]; only 1: rewrite Rlt_le_neq in H; only 1: intuition BinNat.N.order; only 1: rewrite H; only 1: left; only 1: apply Rle_refl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qc_eq_dec	40	40.067277	16945	2227
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.Zmod_distr	40	40.095225	6389	1024
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.grs	40	40.077952	24574	3457
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsigma.Sigma.sigma_diff	40	40.074246	19630	6333
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.pow_i	40	4.032449	2668	512	9.3.4.1.1	synth with cache (only 1: simple induction 1; only 1: auto with real; only 1: intros a b; only 1: simpl; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.add_3	40	40.119979	29563	3953
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_compare_bool	40	0.671081	257	72	0.0.0.0.0.0.0.0.9	synth with cache (only 1: destr_bool; only 1: ct; only 1: constructor; only 1: ct; only 1: constructor; only 1: constructor; only 1: ct; only 1: constructor; only 1: ct).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_pt_opp	40	40.068732	19609	5785
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_eq_reg_l	40	40.081060	12783	2023
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsigma.Sigma.sigma_diff_neg	40	0.261408	71	36	1.1.1	synth with cache (only 1: intros low high k H1 H2; only 1: rewrite (sigma_split H1 H2); only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_pt_minus	40	0.128950	35	18	0.1.0.1.1	synth with cache (only 1: intros; only 1: apply limit_plus; only 1: assumption; only 1: apply limit_Ropp; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.gen_Zeqb_ok	40	40.102492	32782	4234
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.singleton_2	40	0.234124	17	5	0.2	synth with cache (only 1: rewrite singleton_spec; only 1: auto with relations).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.PaddC_ok	40	15.598320	10636	334
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv4b	40	40.052501	5490	2228
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rle_min_compat_r	40	40.034587	6486	1402
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.merge_spec	40	40.282008	34029	4089
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_mod_same_full	40	40.128939	26534	3379
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.diff_mem	40	40.055850	4903	3125
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcplus_assoc	40	40.629984	32631	3062
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.compare_x_Leaf	40	1.023459	156	29	0.0.4.5	synth with cache (only 1: intro n; only 1: destruct n; only 1: reflexivity; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.treeify_cont_spec	40	40.109534	37761	3540
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.MakeListOrdering.eq_cons	40	21.506997	4068	739	0.6.5.10.0	synth with cache (only 1: intros x y z; only 1: intuition auto; MO.OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: intro H; only 1: rewrite <- H0; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.Popp_ok	40	40.244786	1945	335
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Qeq_true	40	40.103711	38443	3469
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_div_le	40	0.023214	7	4	0.2.1.0	synth with cache (only 1: intros a b c Hc Hab; only 1: apply Z.div_le_mono; only 1: auto using Z.gt_lt, Z.ge_le; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_bit1	40	40.074211	21005	4221
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcopp_involutive	40	0.161326	96	23	0.1.6	synth with cache (only 1: intros (x, y); only 1: qc; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_integral	40	40.045921	11172	2342
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_eq_reg_r	40	40.611985	5975	1271
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreduction.Qred_opp	40	40.536440	16999	3890
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.nocarry_equiv	40	40.085966	26121	3505
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.MakeListOrdering.lt_strorder	40	40.374500	62181	3549
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_opp	40	40.150064	15934	4271
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkPX_ok	40	40.033666	10857	584
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_facts.Zpower_lt_monotone	40	40.107562	4160	463
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.subset_spec	40	40.087456	26163	5837
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qplus_assoc	40	3.443424	1775	388	9.0.0.2.4	synth with cache (only 1: intros a b (Hb, Hab); only 1: unfold Qeq; only 1: simpl; only 1: simpl_mult; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qplus_0_l	40	0.657307	258	51	2.0.3.3.0	synth with cache (only 1: intro n; only 1: destruct n; only 1: unfold Qeq, Qlt, Qcompare; only 1: simpl; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealEq_modindep	40	40.038834	10121	2970
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_lxor	40	40.177698	18404	3994
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmin_comm	40	40.099717	35741	4684
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Z_to_two_compl_Sn	40	40.081927	18108	3156
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_1	40	40.064988	7826	1605
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Z_to_binary_Sn_z	40	0.007116	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_le	40	40.214088	22662	4696
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rinv_r_simpl_l	40	2.006718	431	120	1.9.0	synth with cache (only 1: intros; only 1: field; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.treeify_aux_spec	40	40.140144	42697	3660
coq-tactician-stdlib.8.11.dev	Coq.Reals.Binomial.pascal_step2	40	40.051870	11612	5630
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.to_Z_inj	40	40.090072	8034	1089
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_mem_3	40	0.027889	8	2	6.0	synth with cache (only 1: intros; only 1: auto with set relations).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkPX_ext	40	40.244569	8293	1026
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.choose_mem_4	40	2.494921	1762	87
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_equal	40	0.024684	5	2	3.0	synth with cache (only 1: intros; only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Validity.valid_le_compat	40	40.094362	27717	5811
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.remove_mem_3	40	0.110368	16	4	0.4	synth with cache (only 1: do 2 rewrite <- mem_iff; only 1: Dec.fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.omega.PreOmega.Z.rem_bound_neg_neg	40	40.066536	19445	4015
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.min_elt_spec3	40	0.745098	146	41	1.1.6	synth with cache (only 1: destruct s; only 1: inversion 2; only 1: discriminate).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.sub_nocarry_ldiff	40	40.111699	19991	4414
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Validity.linear_le_compat	40	0.236193	92	33	0.0.0.1.0.0.0.1	synth with cache (only 1: intros k l p H Hl; only 1: induction H; only 1: constructor; only 1: constructor; only 1: now eapply Pos.lt_le_trans; eassumption; only 1: eauto; only 1: eauto; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_Add	40	40.196859	3052	589
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_eq_0_compat	40	40.043446	3117	691
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_lt_pow2	40	40.058518	15191	2420
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.merge_ok	40	40.337240	4765	681
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis2.maj_term1	40	40.057347	17471	3644
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqSeries.Rseries_CV_comp	40	40.144841	15273	5835
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalEpsilon.choice	40	40.483905	75871	5553
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcplus_comm	40	5.801057	3264	531	1.0.0.10.10.0	synth with cache (only 1: intros; only 1: qc; only 1: red; only 1: simpl; only 1: rewrite Pos.mul_comm; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.ni_le_min_2	40	0.223061	83	32	0.2.2.0.0	synth with cache (only 1: unfold ni_le; only 1: intros; only 1: rewrite ni_min_assoc; only 1: rewrite ni_min_idemp; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_mod_mult	40	40.069665	16948	2285
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_mod_lt_pow2	40	40.352691	13490	1952
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Ring31.TestRing.test	40
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_Add	40	40.280403	4470	797
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftl_above_size	40	40.039265	6818	1734
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.Rlt_pow	40	40.169063	25719	3692
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_1	40	40.064327	14037	5992
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rderiv.Dconst	40	40.087997	29890	6093
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_gt_compat_l	40	2.441265	655	115	7.7	synth with cache (only 1: generalize eq_trans, Rlt_trans, Rlt_eq_compat; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmin_glb_lt	40	0.045958	7	7	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: intro; only 1: eauto using Rle_trans, Rle_refl; only 1: intro; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.cltb_sound	40	40.083628	28816	2031
coq-tactician-stdlib.8.11.dev	Coq.Reals.Alembert.AlembertC3_step1	40	40.106407	33578	6041
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.of_uint_acc_spec	40	40.047065	12184	5473
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_Equal	40	40.174091	3315	792
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcabs.Qcabs_neg	40	40.061214	12170	6248
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.mul_factor_wd	40	40.146603	14299	3402
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Wf_Z.Efficient_Rec.Zlt_lower_bound_ind	40	40.070914	14863	9217
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qeqb_comp	40	10.346957	4604	850	9.9.0.0	synth with cache (only 1: intros x x' Exx' y y' Eyy'; only 1: apply eq_true_iff_eq; only 1: rewrite !Qeq_bool_iff; only 1: now f_equiv).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rinv_r_simpl_m	40	4.308158	967	394	0.0.7.1.0.0	synth with cache (only 1: intros; only 1: transitivity (r2 * 1); only 1: transitivity (r2 * (r1 * / r1)); only 1: ring; only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_gt_compat_r	40	0.909088	132	44	2.3.1.1	synth with cache (only 1: intros; only 1: rewrite (Rplus_comm r1 r); only 1: rewrite (Rplus_comm r2 r); only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qopp_involutive	40	0.037306	4	4	0.0.0.0	synth with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qplus_opp_r	40	0.038601	4	4	0.0.0.0	synth with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyBool.Z_of_nat_leb_iff	40	40.285184	20763	6441
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.subset_1	40	40.177420	47039	4338
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_0_propagates	40	40.058387	17119	2871
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Z_div2_value	40	4.615188	669	114	10.4	synth with cache (only 1: intros n m; only 1: now destruct n as [| [p| p| ]| [p| p| ]]).
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.ZSORaddon	40	40.052370	5715	1856
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rinv_r_simpl_r	40	10.918200	2519	659	2.3.1.10	synth with cache (only 1: intros x y; only 1: intros Hy; only 1: field; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_trans	40	40.048454	16124	1016
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsLUB.glb_dec_Q	40	40.119065	30265	5959
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_incr_1	40	40.435985	18813	5189
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.poly	40	40.054600	13404	5229
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make_ord.compare	40	40.120879	44418	6693
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_remove	40	4.156571	308	47	0.13.0	synth with cache (only 1: intros; only 1: generalize (mem_iff s x); only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv7	40	40.035290	8175	2510
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcplus_0_r	40	29.991175	9786	994	0.1.0.0.0.15.0.9	synth with cache (only 1: intros (x, y); only 1: qc; only 1: destruct x; only 1: unfold Qeq, Qplus; only 1: simpl; only 1: rewrite Pos.mul_comm; only 1: simpl; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.eqb_eq	40	40.078598	21598	6405
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_le_compat_l	40	1.481548	191	61	0.3.0.5	synth with cache (only 1: generalize eq_trans, Rlt_trans, Rlt_eq_compat; only 1: unfold Rle; only 1: intros A P H p q; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Qpower_pos	40	40.184102	16016	2142
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qplus_comm	40	5.998361	1904	469	4.5.1.0.7	synth with cache (only 1: red; only 1: intros a b; only 1: simpl; only 1: simpl_mult; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.eqb_neq	40	0.009547	1	1	0	synth with cache (only 1: now rewrite <- not_true_iff_false, BinInt.Z.eqb_eq).
coq-tactician-stdlib.8.11.dev	Coq.btauto.Reflect.Completeness.list_nth_nil	40	40.619159	18197	11192
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.eqb_compat	40	0.018851	3	3	0.0.0	synth with cache (only 1: intros x x' Exx' y y' Eyy'; only 1: apply eq_true_iff_eq; only 1: now rewrite 2!BinPos.Pos.eqb_eq, Exx', Eyy').
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.compare_gt	40	40.615540	19023	2778
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcmult_0_l	40	0.098228	13	4	0.2.1	synth with cache (only 1: intro H; only 1: compute; only 1: auto with qarith).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcmult_0_r	40	0.085784	7	5	0.1.1.0.0	synth with cache (only 1: intros; only 1: qc; only 1: red; only 1: simpl; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_ge_compat_r	40	0.365345	98	28	1.3.2.1	synth with cache (only 1: intros; only 1: rewrite (Rplus_comm r2 r); only 1: rewrite (Rplus_comm r1 r); only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Strings.Ascii.eqb_eq	40	40.050904	10942	3146
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRplus_pos_rat_lt	40	40.131212	21275	2065
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcplus_0_l	40	37.811127	24000	1212	11.46.1	synth with cache (only 1: intros; only 1: qc; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.compare_eq	40	40.553287	24874	4031
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qdiv_comp	40	40.042960	9075	2104
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Popp_ok	40	9.135663	1553	661	0.5.0.0.0.1.0.0.0.0.0.1.0	synth with cache (only 1: revert l; only 1: induction P; only 1: simpl; only 1: intros; only 1: Esimpl; only 1: simpl; only 1: intros; only 1: rewrite IHP; only 1: rsimpl; only 1: simpl; only 1: intros; only 1: rewrite IHP1, IHP2; only 1: rsimpl).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.RealField.Rdef_pow_add	40	40.139606	27573	3908
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.subset_trans	40	40.045050	14136	2295
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.bal_height_2	40	40.037726	4871	1454
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_integral_contrapositive	40	40.031768	6446	1746
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcmult_1_r	40	0.043253	6	4	0.2.0.0	synth with cache (only 1: intros; only 1: qc; only 1: rewrite Qmult_comm; only 1: apply Qmult_1_l).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLt_aboveSig	40	40.150194	12128	1564
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zquot_opp_opp	40	40.140035	13001	2889
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rminmax.R.minus_max_distr_r	40	40.488254	9454	3727
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcmult_comm	40	0.191432	46	21	1.0.0.2.0.0	synth with cache (only 1: intros; only 1: qc; only 1: red; only 1: simpl; only 1: rewrite Pos.mul_comm; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.singleton_mem_1	40	0.008699	2	1	1	synth with cache (only 1: auto with set relations).
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_assoc	40	0.086104	7	5	1.0.1.0.0	synth with cache (only 1: intros (x1, x2) (y1, y2) (z1, z2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: simpl_mult; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.singleton_mem_2	40	0.018840	6	3	3.0.0	synth with cache (only 1: intros; only 1: rewrite <- not_mem_iff; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.plength_aux_spec	40	40.213312	16304	1566
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_0_l	40	0.056780	8	4	0.3.0.1	synth with cache (only 1: intros a; only 1: red; only 1: Z.bitwise; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_div_ge0	40	29.019206	18451	2065	0.0.2.0.25.5.3	synth with cache (only 1: intros a b; only 1: intros E; only 1: Z.swap_greater; only 1: intros Hab; only 1: apply Z.div_pos; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.P_Rmin	40	0.026182	6	5	0.0.1.0.0	synth with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRlt_trans_flip	40	30.247670	22236	2457	0.1.0.9.0.4.7.9	synth with cache (only 1: intros H1; only 1: intro abs; only 1: intros x y H; only 1: intro; only 1: apply (CRlt_le_trans _ _ x); only 1: assumption; only 1: apply CRlt_asym; only 1: auto with relations).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring.Ring.ring_mul_0_r	40	40.053122	14827	1058
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_gt_compat	40	0.039489	6	4	0.0.2.0	synth with cache (only 1: intros; only 1: apply Rlt_trans with (r2 + r3); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ClassicalDedekindReals.DRealRepr	40	40.591536	276203	3813
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.gen_phiZ1_pos_sub	40	40.027747	4973	1179
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rsqr_0	40	40.063138	15321	2111
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rrepr_le	40	40.165626	36315	5183
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_0_r	40	1.130464	144	38	0.0.0.6	synth with cache (only 1: red; only 1: simpl; only 1: intros; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.ni_le_min_1	40	40.157411	47913	2872
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcmult_plus_distr_r	40	1.627090	156	47	0.0.0.5.0.0	synth with cache (only 1: intros; only 1: qc; only 1: unfold Qeq, Qmult, Qplus; only 1: simpl; only 1: simpl_mult; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLe_refl	40	0.032880	25	5	0.5	synth with cache (only 1: intros x abs; only 1: exact (CRealLt_asym x x abs abs)).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_le_compat_r	40	4.470662	656	301	2.4.0.2	synth with cache (only 1: intros; only 1: rewrite (Rplus_comm r1 r); only 1: rewrite (Rplus_comm r2 r); only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zgcd_alt.fibonacci_incr	40	40.110771	37395	5695
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.gen_phiZ_ext	40	0.015913	6	3	3.0.0	synth with cache (only 1: intros x y H; only 1: rewrite H; only 1: rrefl).
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qcompare_comp	40	40.070815	22853	2947
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_div_pos	40	40.102301	25915	2543
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutEq.Perm.permutation_map	40	40.098160	28995	4761
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.equal_2	40	5.450938	4162	784	0.1.4.19.1	synth with cache (only 1: intros s s'; only 1: rewrite equal_subset; only 1: rewrite andb_true_iff; only 1: rewrite <- 2!subset_spec; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.PsubC_ok	40	25.643461	3433	1821	1.2.0.0.1.0.0.1.0.0.0.0.0	synth with cache (only 1: revert l; only 1: induction P; only 1: simpl; only 1: intros; only 1: rsimpl; only 1: Esimpl; only 1: simpl; only 1: intros; only 1: trivial; only 1: simpl; only 1: intros; only 1: rewrite IHP2; only 1: Esimpl).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv7b	40	40.033709	6189	1496
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_gt_ge_compat	40	0.064339	13	7	0.0.2.2	synth with cache (only 1: intros; only 1: apply Rle_lt_trans with (r2 + r3); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealEq_sym	40	0.035518	20	7	0.0.4.0	synth with cache (only 1: intros; only 1: split; only 1: apply H; only 1: apply H).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_ge_gt_compat	40	0.037866	7	4	0.0.0.3	synth with cache (only 1: intros; only 1: apply Rlt_le_trans with (r2 + r3); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.subset_2	40	40.138959	42520	5498
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Powers_of_2.two_power_pos_equiv	40	40.052246	14686	2958
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_div_exact_full_2	40	0.847187	445	112	0.0.0.9	synth with cache (only 1: intros a b Hb; only 1: rewrite Z.div_exact; only 1: auto; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcmult_plus_distr_l	40	1.484742	97	32	0.0.0.4.0.0	synth with cache (only 1: intros; only 1: qc; only 1: unfold Qeq, Qmult, Qplus; only 1: simpl; only 1: simpl_mult; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ1_add_pos_neg	40	40.035892	2330	523
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcmult_assoc	40	9.282827	6362	871	1.0.0.9.7.12	synth with cache (only 1: intros a n Hn; only 1: qc; only 1: red; only 1: simpl; only 1: rewrite Pos.mul_assoc; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.constructive_indefinite_description_and_small_drinker_iff_epsilon	40	40.310565	124981	6365
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rsqr_0_uniq	40	40.079652	21417	2186
coq-tactician-stdlib.8.11.dev	Coq.Strings.Ascii.ascii_N_embedding	40	40.176018	23501	1834
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.compare_spec	40	40.489410	36336	4568
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.gro	40	40.064245	19386	4649
coq-tactician-stdlib.8.11.dev	Coq.Reals.Sqrt_reg.sqrt_continuity_pt_R1	40	40.056160	15670	5719
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Ens_to_FSet	40	40.091235	33308	3579
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zis_gcd_0_abs	40	40.081692	33065	1447
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zrem_opp_opp	40	30.016990	13329	3311	0.0.1.0.0.0.1.0.0.0.0.0.1.1.0.0.1.0.0.0.0.0.0.0.0.0.1	synth with cache (only 1: destruct a, b; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: unfold Z.rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: simpl; only 1: unfold Z.rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: unfold Z.rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: simpl; only 1: unfold Z.rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r])).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.is_empty_spec	40	40.182736	34279	5753
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_1_r	40	0.745406	147	61	0.0.1.0.0.1.0	synth with cache (only 1: intro; only 1: destruct n; only 1: unfold Qeq, Qplus; only 1: simpl; only 1: rewrite Pos.mul_comm; only 1: simpl; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Cyclic63.shift_unshift_mod_2	40	40.622578	12569	1632
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Mergesort.NatOrder.leb_total	40	40.084720	32000	3379
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_comm	40	0.204706	16	11	0.1.0.1.0.0	synth with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: intros; only 1: rewrite Pos.mul_comm; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcplus_opp_r	40	14.689068	3813	418	24.0.1	synth with cache (only 1: intros; only 1: qc; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rinv_nz	40	40.058258	17749	1251
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Powers_of_2.shift_pos_nat	40	0.651588	401	32	25	synth with cache (only 1: apply Pos2Nat.inj_iter).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nshiftr_nat_equiv	40	40.293392	21363	4322
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_neq_0_compat	40	40.077243	24915	2737
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.CVN_R_cos	40	40.138116	51182	6638
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_Add	40	40.290600	2801	427
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_reg.continuity_sin	40	40.034620	8324	5713
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_Add_2	40	40.295513	3634	859
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_Equal	40	40.187587	2315	420
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qplus_0_r	40	14.559235	4363	755	0.1.6.6.4.0.0.0	synth with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: Z.nzsimpl; only 1: generalize 1%Z; only 1: intros; only 1: simpl_mult; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_remove_hd_eq	40	40.043675	9177	3253
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_0	40	7.855496	3608	408	1.1.6.5.3.5.18	synth with cache (only 1: induction p as [p IH| p IH| ]; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite !IH, ?H; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.remove_mapsto_iff	40	40.479734	24024	3732
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcabs.Qcabs_nonneg	40	11.181439	2292	373	0.1.0.13.2.4	synth with cache (only 1: ring_simplify; only 1: red; only 1: simpl; only 1: apply Qabs_case; only 1: auto; only 1: apply (Qopp_le_compat x 0)).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_wd	40	40.050525	14880	2278
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.MakeListOrdering.lt_compat'	40	40.326868	15932	4259
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.choose_mem_4	40	0.989916	1104	66
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_mem	40	40.043778	2333	1554
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_plus_distr_l	40	0.367109	24	14	0.0.0.1.0	synth with cache (only 1: intros (x1, x2) (y1, y2) (z1, z2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: simpl_mult; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_le_trans	40	40.450685	13246	2311
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.add_mem_3	40	0.012489	6	2	4.0	synth with cache (only 1: intros; only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.mkPX_ok	40	42.213558	7196	282
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.add_equal	40	0.012287	5	2	3.0	synth with cache (only 1: intros; only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetCompat.Update_WSets.Spec.subset_spec	40	40.121798	43491	4743
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_mem_3	40	0.148314	12	3	0.4	synth with cache (only 1: do 2 rewrite <- mem_iff; only 1: Dec.fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.MVT_cor1	40	40.085195	29012	4351
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.adherence_P1	40	40.132147	48992	6534
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealEq_refl	40	5.346575	3526	319	0.12.0.12.5	synth with cache (only 1: constructor; only 1: intro abs; only 1: exact (CRealLt_asym x x abs abs); only 1: intro abs; only 1: exact (CRealLt_asym x x abs abs)).
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_sqrt	40	40.063330	20343	3574
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_plus_distr_r	40	40.590137	3497	1719
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.nsatz1.nsatzR_diff	40	40.020585	2426	490
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.if_eqA_refl	40	1.077243	707	150	12.1.0.0.1	synth with cache (only 1: intros; only 1: destruct eqA_dec as [_| NEQ]; only 1: auto; only 1: contradict NEQ; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.of_lu_double	40	40.077549	23800	3669
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nshiftr_equiv_nat	40	40.058304	16185	5157
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.mkEns_cardinal	40	40.722737	19133	2888
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.nsatz1.P0Z_correct	40	0.022292	3	2	1.0	synth with cache (only 1: intros; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.min_elt_spec1	40	40.261909	35495	4698
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcomplements.Zlength_properties.Zlength_correct	40	40.342105	31288	2931
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.succ_double_alt	40	0.030488	2	1	1	synth with cache (only 1: now induction d).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_lt_0_compat	40	4.974477	2800	392	1.2.2.14.0	synth with cache (only 1: intros a b Ha Hb; only 1: apply Rle_lt_trans with (a + 0); only 1: rewrite Rplus_0_r; only 1: auto with *; only 1: auto using Rplus_lt_compat_l with real).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.elements_Empty	40	40.377884	27100	2914
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.match_compOpp	40	3.950053	844	188	1.0.0.7.6	synth with cache (only 1: intros n A f x; only 1: induction n; only 1: firstorder; only 1: firstorder; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.plength_spec	40	40.086825	28485	3494
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcomplements.Zlength_properties.Zlength_nil	40	0.500814	64	38	4.2	synth with cache (only 1: unfold Zlength; only 1: eauto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.included_trans	40	1.027314	398	123	4.0.2.1.2	synth with cache (only 1: intros; only 1: revert H; only 1: intros P H; only 1: intros; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_2	40	40.053946	13418	4133
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.gen_phiZ_add	40	40.075425	24524	3490
coq-tactician-stdlib.8.11.dev	Coq.Logic.Diaconescu.ProofIrrel_RelChoice_imp_EqEM.projT1_injective	40	40.153266	59425	2257
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_mul_l	40	2.363613	586	143	0.0.3.2.5.2.2	synth with cache (only 1: induction p; only 1: simpl; only 1: ring [ IHp ]; only 1: simpl; only 1: ring [ IHp ]; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rminus_diag_uniq	40	40.129952	4312	1610
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_add_r	40	0.066041	38	4	10	synth with cache (only 1: apply (pow_pos_add Rsth (Rmul_ext Reqe) (ARmul_assoc ARth))).
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_plus_distr_r	40	4.967077	727	316	0.0.2.0.4	synth with cache (only 1: intros (x1, x2) (y1, y2) (z1, z2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: simpl_mult; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.remove_iff	40	40.127468	49822	2680
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_3	40	40.063509	15576	3532
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_Ifp.Int_part_INR	40	40.068013	23047	3130
coq-tactician-stdlib.8.11.dev	Coq.Floats.FloatLemmas.ldexp_spec	40	40.426608	28737	3856
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nshiftl_nat_equiv	40	40.066676	20166	4786
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.sum_inequa_Rle_lt	40	0.040338	5	4	0.1.0.0	synth with cache (only 1: intros n m p q; only 1: intros; only 1: generalize (Rlt_le_dec m q); only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.PaddC_ok	40	40.060748	21234	1179
coq-tactician-stdlib.8.11.dev	Coq.Strings.HexString.to_nat_of_nat	40	40.066037	22237	2594
coq-tactician-stdlib.8.11.dev	Coq.Strings.OctalString.to_nat_of_nat	40	40.134206	36685	2947
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rec_nodep	40	1.160158	323	105	0.1.1.4.3	synth with cache (only 1: intros A P f i s Pempty Pstep; only 1: apply fold_rec; only 1: auto; only 1: intros; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.remove_in_iff	40	40.063574	19653	4194
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_Add_2	40	40.292151	4136	866
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.IZN_var	40	0.935600	661	142	1.0.0.10	synth with cache (only 1: intros x H1; only 1: exists (Z.to_nat x); only 1: symmetry; only 1: now apply Z2Nat.id).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_find	40	40.199045	4582	1133
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_le_lt_0_compat	40	5.703290	2657	837	0.0.0.0.4.0.0.0.0.0.0.1.0	synth with cache (only 1: intros x y; only 1: intros [H| H] abs; only 1: apply Rlt_trans with x; only 1: assumption; only 1: pattern x at 1; only 1: rewrite <- (Rplus_0_r x); only 1: apply Rplus_lt_compat_l; only 1: assumption; only 1: rewrite H; only 1: pattern x at 1; only 1: rewrite <- (Rplus_0_r x); only 1: apply Rplus_lt_compat_l; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_min_in	40	40.273477	5921	1144
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.elements_Empty	40	40.406469	25837	2492
coq-tactician-stdlib.8.11.dev	Coq.Logic.ConstructiveEpsilon.ConstructiveGroundEpsilon.constructive_indefinite_ground_description	40	40.798250	179203	5239
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.min_elt_spec2	40	40.351525	16840	3745
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_correct	40	40.074133	23006	3497
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qround.Qfloor_comp_Proper	40	40.088176	29518	4404
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLt_above	40	40.121183	10811	5645
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.ZNpower	40	30.422613	11780	4540	1.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: unfold Z.pow_pos; only 1: rewrite <- (Z.mul_1_r (pow_pos _ _ _)); only 1: generalize 1; only 1: induction p; only 1: simpl; only 1: intros; only 1: rewrite ?IHp, ?Z.mul_assoc; only 1: trivial; only 1: simpl; only 1: intros; only 1: rewrite ?IHp, ?Z.mul_assoc; only 1: trivial; only 1: simpl; only 1: intros; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rminus_diag_uniq_sym	40	40.060994	4425	2138
coq-tactician-stdlib.8.11.dev	Coq.Reals.Exp_prop.E1_cvg	40	40.189270	17605	5896
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalString.NilEmpty.sus	40	40.336964	66765	1707
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.elements_empty	40	40.906047	63091	3018
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Ndiv2_bit_neq	40	40.351678	34816	5079
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rgeom.distance_refl	40	40.084746	15694	2280
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZCoeff.InitialMorphism.Zring_morph	40	40.669280	11361	2782
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_incrst_0	40	40.073407	19924	5982
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.Popp_ok	40	3.396840	658	273	0.0.2.0.0.0.0.0.1.0.0.1.1	synth with cache (only 1: revert l; only 1: induction P; only 1: simpl; only 1: intros; only 1: Esimpl; only 1: simpl; only 1: intros; only 1: trivial; only 1: simpl; only 1: intros; only 1: Esimpl; only 1: rewrite IHP1, IHP2; only 1: rsimpl).
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.nsatz1.Rext	40	6.951035	1057	245	0.0.0.30	synth with cache (only 1: apply mk_reqe; only 1: solve_proper; only 1: solve_proper; only 1: solve_proper).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.treeify_elements	40	40.134671	46522	3218
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.nsatz1.Rset	40	0.016082	2	2	0.0	synth with cache (only 1: unfold Setoid_Theory; only 1: apply ring_setoid).
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qle_comp	40	40.049557	13917	2830
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qround.Qceiling_comp_Proper	40	1.616715	507	219	1.2.2.0.0.0.0	synth with cache (only 1: intros x y H; only 1: apply Z.le_antisymm; only 1: unfold Qceiling; only 1: rewrite <- Z.opp_le_mono; only 1: auto with *; only 1: symmetry in H; only 1: auto with *).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nneq_elim	40	40.141953	27371	3344
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis3.derivable_pt_div	40	40.247242	36857	5516
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.partition_spec1	40	0.055277	23	8	3.2	synth with cache (only 1: unfold partition, filter; only 1: now rewrite partition_aux_spec).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.partition_spec2	40	0.015543	1	1	0	synth with cache (only 1: now rewrite partition_spec).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rseries.sequence.Un_cv_crit	40	40.112202	38327	5626
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.remove_1	40	40.111241	27992	3165
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalN.Signed.to_int_pos_surj	40	31.288663	24116	4603	15.21.0	synth with cache (only 1: exists (N.of_uint d); only 1: apply Unsigned.to_of; only 1: now induction d).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcmult_inv_l	40	1.567242	245	70	0.0.7.0.0	synth with cache (only 1: intros; only 1: qc; only 1: rewrite Qmult_comm; only 1: apply Qmult_inv_r; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLt_above_same	40	40.086234	15418	3844
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.union_2	40	0.183116	34	8	1.6	synth with cache (only 1: rewrite union_spec; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.micromega.QMicromega.Qeval_expr_compat	40	44.654598	8184	1119
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.union_3	40	0.019100	2	2	0.0	synth with cache (only 1: rewrite union_spec; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_div_lt	40	40.066961	23338	2086
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_1_l	40	40.955250	7978	2291
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.elements_mapsto_iff	40	40.127703	46898	4429
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.elements_in_iff	40	40.076607	21398	6505
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_ne_zero	40	4.736053	2845	856	1.0.5.2.0.0.0.0.2.2	synth with cache (only 1: intro n; only 1: case n; only 1: intro H; only 1: absurd (0%nat = 0%nat); only 1: trivial; only 1: trivial; only 1: intro H; only 1: simpl; only 1: intros Hm; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.pred_succ	40	40.098887	35997	2660
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv8	40	40.065256	4179	1467
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qlt_compat	40	40.053573	16760	2992
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.inject_Z_mult	40	0.049483	13	6	5.0	synth with cache (only 1: unfold Qplus, inject_Z; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.eqb_complete	40	40.061820	16576	1918
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLt_asym	40	40.093662	29325	5027
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.inject_Z_opp	40	0.009820	1	1	0	synth with cache (only 1: now destruct x).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.eqb_false_correct	40	0.032437	12	4	0.3.0	synth with cache (only 1: intros x y; only 1: rewrite eqb_false_spec; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.diff_mem	40	40.029513	5127	3064
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_remove_hd	40	40.035464	8691	3350
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zis_gcd_unique	40	40.086255	19001	2599
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmin_glb	40	26.563503	5997	2261	0.1.0.1.0.0.13	synth with cache (only 1: intros r1 r2 P H1 H2; only 1: unfold Rmin; only 1: case (Rle_dec r1 r2); only 1: intros; only 1: eauto using Rle_trans, Rle_refl; only 1: intros; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_sym	40	0.007931	2	1	1	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmax_case_strong	40	0.034281	6	5	0.0.0.1.0	synth with cache (only 1: intros; only 1: unfold Rmax; only 1: destruct (Rle_dec r1 r2); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_subset_equal	40	0.036687	9	3	4.0	synth with cache (only 1: intros; only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_isRingExt	40	40.258957	14424	3588
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_equal_1	40	0.020790	6	2	4.0	synth with cache (only 1: intros; only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.Strings.BinaryString.to_nat_of_nat	40	40.339160	34293	4064
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.remove_spec	40	40.403078	23770	4145
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_equal_2	40	0.015246	5	2	3.0	synth with cache (only 1: intros; only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalN.Signed.of_int_norm	40	2.922671	2849	419	8.4.5.9	synth with cache (only 1: induction d; only 1: unfold norm; only 1: now induction d; only 1: now induction d).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_assoc	40	0.008154	2	1	1	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.Neqb_ok	40	2.884391	2989	429	0.6.0.0.1.0.1.0.0.10	synth with cache (only 1: intros [| ] [| ]; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: simpl; only 1: rewrite Pos.eqb_eq; only 1: congruence).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_union_singleton	40	0.008150	3	1	2	synth with cache (only 1: auto with set relations).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Cos_rel.C1_cvg	40	40.048746	12096	3919
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.NMORPHISM.radd_ext4_Proper	40	0.006842	1	1	0	synth with cache (only 1: exact (SRadd_ext SReqe)).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.NMORPHISM.rmul_ext4_Proper	40	0.008116	2	1	1	synth with cache (only 1: exact (SRmul_ext SReqe)).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_add	40	0.007625	2	1	1	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.PaddXPX	40	40.015796	4232	792
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_subset_1	40	0.032139	9	5	2.0.0.1	synth with cache (only 1: apply eq_true_iff_eq; only 1: split; only 1: auto; only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_subset_2	40	0.006515	2	1	1	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rinv_mult_distr	40	34.061380	5889	1069	0.12.0.9	synth with cache (only 1: intros a b; only 1: intuition; only 1: field; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.tan_PI	40	40.056121	13894	4529
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.OpMult_sound	40	40.553077	18618	1335
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zis_gcd_uniqueness_apart_sign	40	0.043469	6	6	0.0.0.0.0.0	synth with cache (only 1: intros a b c d [Hc1 Hc2 Hc3] [Hd1 Hd2 Hd3]; only 1: assert (c | d) by auto; only 1: assert (d | c) by auto; only 1: apply Z.divide_antisym; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_subset_3	40	0.244960	4	3	0.1.0	synth with cache (only 1: do 3 rewrite <- subset_iff; only 1: intros; only 1: Dec.fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zis_gcd_for_euclid	40	40.109854	9834	1356
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_0_l	40	40.093311	31430	2486
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_sym	40	0.019352	2	1	1	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_subset_equal	40	0.148447	5	2	3.0	synth with cache (only 1: intros; only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.inter_2	40	0.184554	2	2	0.0	synth with cache (only 1: rewrite inter_spec; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_equal_1	40	0.007753	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.lt_strorder	40	14.299544	24830	529
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.inter_3	40	0.039735	2	2	0.0	synth with cache (only 1: rewrite inter_spec; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_equal_2	40	0.007673	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_assoc	40	0.008311	2	1	1	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_inter_1	40	0.008674	2	1	1	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_inter_2	40	0.014596	2	1	1	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_0_firstl	40	40.057634	18941	2488
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_add_1	40	0.119456	15	3	1	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.remove_3	40	40.115968	36902	5440
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CReq_trans	40	40.223600	26650	7150
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_morph_T	40	3.237643	202	86	8	synth with cache (only 1: apply CReal_isRingExt).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_comm	40	40.066917	22433	2550
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.PmulC_aux_ok	40	40.035615	7259	2761
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.diff_2	40	0.042403	18	4	0.4	synth with cache (only 1: rewrite diff_spec; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.inter_iff	40	40.676570	42356	4043
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.of_uint_alt	40	40.134807	9346	2893
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.diff_3	40	0.552194	295	49	0.5.8	synth with cache (only 1: intros EQ; only 1: rewrite diff_spec; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_min_mapsto	40	40.041843	3901	797
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.for_all_iff	40	0.027859	4	2	0.2	synth with cache (only 1: intro n; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.choose_mem_3	40	40.158497	57681	2255
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rinv_neq_0_compat	40	40.061538	10314	2252
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rrepr_appart	40	40.503586	18522	2031
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.exists_iff	40	0.089146	61	16	3.5	synth with cache (only 1: intro n; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.elements_iff	40	0.018741	9	2	1	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CR_setoid	40	40.514262	19003	5488
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.decreasing_cv	40	40.113089	40375	6034
coq-tactician-stdlib.8.11.dev	Coq.Reals.Cos_plus.reste2_maj	40	40.041930	7271	4926
coq-tactician-stdlib.8.11.dev	Coq.Logic.WKL.inductively_barred_at_decidable	40	40.228961	7554	1564
coq-tactician-stdlib.8.11.dev	Coq.Strings.Byte.N.of_to_N	40	40.044649	6116	2334
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.map_mapsto_iff	40	40.151671	51269	5023
coq-tactician-stdlib.8.11.dev	Coq.Reals.PSeries_reg.boule_of_interval	40	40.144041	51900	5688
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.treeify_spec	40	40.232528	37371	4392
coq-tactician-stdlib.8.11.dev	Coq.Reals.ArithProp.euclidian_division	40	40.103061	34748	4134
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.treeify_ok	40	40.055972	12832	2469
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_min_bst	40	40.062042	15756	2211
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_ngt	40	40.057850	12616	2645
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.partition_ok2	40	0.012996	2	2	0.0	synth with cache (only 1: rewrite partition_spec; only 1: now apply filter_ok).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreals.Rlt_Qlt	40	40.052905	14396	5069
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_subset_1	40	0.007869	2	1	1	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_subset_2	40	0.009284	2	1	1	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.diff_iff	40	41.212107	23662	6798
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.add_avl_1	40	40.466601	15728	2574
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.first_two_in_interval_works	40	40.129924	50436	2325
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_subset_3	40	0.064274	6	3	2.1.0	synth with cache (only 1: intros; only 1: apply subset_1; only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.diff_subset	40	0.007086	2	1	1	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.equal_subset	40	40.131756	47986	3760
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_comm	40	3.727854	3218	373	3.2.25.0	synth with cache (only 1: intros; only 1: zify; only 1: f_equal; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.diff_subset_equal	40	0.015632	4	2	2.0	synth with cache (only 1: intros; only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.remove_inter_singleton	40	0.007852	2	1	1	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_div_ge	40	40.077898	29044	2647
coq-tactician-stdlib.8.11.dev	Coq.Reals.AltSeries.CV_ALT_step3	40	40.644784	17573	5658
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.diff_inter_empty	40	0.007416	2	1	1	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.diff_inter_all	40	0.008793	2	1	1	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_morph_Proper	40	14.083804	1406	688	0.0.2.0.1.0.0.0.0.0	synth with cache (only 1: intros x y H z t H0; only 1: apply (CRealEq_trans _ (x * t)); only 1: apply CReal_mult_proper_l; only 1: assumption; only 1: apply (CRealEq_trans _ (t * y)); only 1: apply (CRealEq_trans _ (t * x)); only 1: apply CReal_mult_comm; only 1: apply CReal_mult_proper_l; only 1: apply H; only 1: apply CReal_mult_comm).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.eqb_spec	40	40.133649	48588	7452
coq-tactician-stdlib.8.11.dev	Coq.Reals.ArithProp.tech8	40	0.066535	14	4	3.0	synth with cache (only 1: intro n; only 1: auto with arith real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.tech4	40	40.341770	20955	4739
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_lex	40	40.050148	18320	1918
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.int31_ind_sneakl	40	40.190327	69970	5322
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.filter_aux_elements	40	40.092729	28901	3085
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.tech5	40	0.012167	2	2	0.0	synth with cache (only 1: intros; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zgt_is_le_bool	40	40.075958	20599	3614
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_trans	40	40.050828	16591	2551
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_eq0	40	40.050701	14374	3100
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.dicho_lb_growing	40	40.074008	20663	6035
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.compare_bool_inv	40	0.711343	492	79	2.14	synth with cache (only 1: intros n m; only 1: now destruct n, m).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_trans	40	40.052442	16290	2746
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.of_to	40	40.078480	25564	2385
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qabs.Qabs_triangle_reverse	40	40.092505	10795	3836
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.PairOrderedType.eq_dec	40	41.068390	16230	2978
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.singleton_mem_1	40	0.007459	2	1	1	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.singleton_1	40	40.207732	63832	2969
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.singleton_mem_2	40	0.018424	4	3	1.0.0	synth with cache (only 1: intros; only 1: rewrite <- not_mem_iff; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qleb_comp	40	40.056002	16527	2354
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.Power_monotonic	40	40.089445	24893	4447
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRcomplete.CReal_cv_self	40	41.272746	14900	5987
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.map_in_iff	40	40.068495	15003	4251
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.AbsList_P1	40	40.068435	19868	3271
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.int31_ind_twice	40	40.089661	12517	3925
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Powers_of_2.shift_nat_correct	40	40.056036	18572	1941
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.lex_Opp	40	22.914031	22952	3423	1.0.1.0.3.13.15	synth with cache (only 1: intros a b c Ha Hb Hc; only 1: destruct c; only 1: now subst; only 1: simpl; only 1: now subst; only 1: simpl; only 1: now subst).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.of_list_1	40	40.520444	19803	2953
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.filter_2	40	0.132362	17	6	0.0.2.0	synth with cache (only 1: intros P; only 1: rewrite filter_spec; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zis_gcd_for_euclid2	40	40.034433	6825	1207
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.MakeListOrdering.cons_CompSpec	40	40.228087	9774	3205
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.Zeval_expr_compat	40	40.413050	14059	1212
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.singleton_mem_3	40	0.709965	990	99	0.25	synth with cache (only 1: generalize (mem_iff (singleton x) y), (singleton_iff x y); only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.filter_3	40	0.039268	8	5	0.0.3.0.0	synth with cache (only 1: intros P; only 1: intuition; only 1: rewrite filter_spec; only 1: now constructor; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_sym	40	0.007708	2	1	1	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_subset_equal	40	0.024890	5	3	1.1.0	synth with cache (only 1: intros; only 1: apply equal_1; only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.PmulC_ok	40	40.030881	8243	2258
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_equal_1	40	0.026055	5	4	0.0.1.0	synth with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: apply equal_1; only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.of_list_1	40	40.051558	15237	2486
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_equal_2	40	0.016299	3	3	0.0.0	synth with cache (only 1: intros; only 1: apply equal_1; only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_assoc	40	0.007708	2	1	1	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmin_stable_in_posreal	40	40.060202	16396	5333
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.add_union_singleton	40	0.007306	2	1	1	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.cross_product_eq	40	40.037349	6127	2204
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_add	40	0.007644	2	1	1	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_subset_1	40	0.006844	2	1	1	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_subset_2	40	0.007339	2	1	1	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_subset_3	40	0.075015	2	2	0.0	synth with cache (only 1: do 3 rewrite <- subset_iff; only 1: Dec.fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_sym	40	0.008472	2	1	1	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.choose_mem_3	40	40.222530	84224	4729
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.mapi_in_iff	40	40.062777	18010	4762
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_subset_equal	40	0.020080	5	3	1.1.0	synth with cache (only 1: intros; only 1: apply equal_1; only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_equal_1	40	0.025257	5	4	0.0.1.0	synth with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: apply equal_1; only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_equal_2	40	0.093870	1	1	0	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_assoc	40	0.007626	2	1	1	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_inter_1	40	0.008262	2	1	1	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_inter_2	40	0.007791	2	1	1	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rprod.prod_SO_Rle	40	40.103152	35448	4034
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_add_1	40	0.143658	6	3	3.0.0	synth with cache (only 1: intros; only 1: apply equal_1; only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.exist_exp0	40	40.079628	26318	5589
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.equal_spec	40	40.095517	32664	5391
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_nge	40	40.554363	11591	2335
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_ext	40	40.084881	8295	1842
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_subset_1	40	0.007620	2	1	1	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.derivable_pt_inv	40	40.122133	42862	6599
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsigma.Sigma.sigma_first	40	40.075033	23145	4639
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_subset_2	40	0.007367	2	1	1	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.compare_bool_Eq	40	0.030676	5	5	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: easy'; only 1: easy'; only 1: now split; only 1: easy').
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.eqb_false_spec	40	40.085165	28305	3173
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_pt_mult	40	40.091012	19371	4638
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_subset_3	40	0.039321	5	3	1.1.0	synth with cache (only 1: intros; only 1: apply subset_1; only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.union_1	40	40.109035	28317	4074
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.diff_subset	40	0.013035	2	1	1	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.diff_subset_equal	40	0.015675	5	2	3.0	synth with cache (only 1: intros; only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_inter_singleton	40	0.007702	2	1	1	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.diff_inter_empty	40	0.007865	2	1	1	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.diff_inter_all	40	0.006954	2	1	1	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.gen_phiZ_mul	40	40.045491	10482	4421
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmin_pos	40	40.095752	13918	7152
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Qeq_false	40	40.060966	18195	2243
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_mult_div_ge	40	40.086918	30406	2885
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.compare_empty_x	40	40.324741	29265	4227
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.equal_1	40	37.657406	53603	5462	25.4.8.11.3	synth with cache (only 1: intros; only 1: rewrite equal_subset; only 1: rewrite andb_true_iff; only 1: rewrite <- 2!subset_spec; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_min_gt_tree	40	40.049656	7385	1913
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.eqo_refl	40	0.910507	697	140	1.0.0.0.0.0.10	synth with cache (only 1: compute; only 1: intros; only 1: generalize (eqb_correct i i); only 1: rewrite eqb_refl; only 1: intros; only 1: rewrite (Eqdep_dec.eq_proofs_unicity eq_dec (e eq_refl) eq_refl); only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.PaddX_ok2	40	40.210933	3194	1021
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.filter_elements	40	40.080350	24019	3814
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.remove_ok	40	40.253558	7127	1175
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEsub_ext	40	0.088821	3	3	0.0.0	synth with cache (only 1: intros ? ? E ? ? E' l; only 1: simpl; only 1: now rewrite E, E').
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.eqo_diff	40	0.096632	38	14	0.0.1.3.0	synth with cache (only 1: intros; only 1: unfold eqo; only 1: generalize (eqb_correct i j); only 1: rewrite H; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_N_ext	40	40.260686	8766	1350
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEmul_ext	40	0.074815	3	3	0.0.0	synth with cache (only 1: intros ? ? E ? ? E' l; only 1: simpl; only 1: now rewrite E, E').
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.elements_correct	40	40.083732	21170	6072
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_facts.Zpower_gt_1	40	40.077598	24188	4567
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreduction.Qred_compare	40	40.620403	32887	4953
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rinv_mult_simpl	40	40.048940	6360	1244
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.PaddX_ok	40	40.030385	7558	1795
coq-tactician-stdlib.8.11.dev	Coq.Reals.Binomial.pascal_step3	40	40.056468	14696	4606
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.eqb_false_complete	40	40.158792	43483	3815
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.remove_equal	40	40.169471	5979	1066
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.filter_spec	40	40.041466	11716	1675
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.max_elt_spec1	40	40.212437	10134	2633
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreduction.Qred_le	40	2.150603	303	53	12.1.0.0	synth with cache (only 1: intuition; only 1: rewrite <- (Qred_correct q), <- (Qred_correct q'); only 1: easy; only 1: now rewrite !Qred_correct).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rplus_comm	40	10.957438	6773	1288	1.2.11.9.2	synth with cache (only 1: intros; only 1: apply Rquot1; only 1: rewrite Rplus_def, Rquot2; only 1: rewrite Rplus_def, Rquot2; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Validity.linear_valid_incl	40	40.250192	20853	4178
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRplus_neg_rat_lt	40	42.349295	24000	2690
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.fold_spec	40	0.009210	3	1	2	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_min_find	40	40.037209	7057	1731
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.cardinal_spec	40	0.012738	2	2	0.0	synth with cache (only 1: intros x l; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis2.maj_term2	40	40.155880	13888	3346
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqSeries.Cesaro	40	40.063282	18845	6305
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.classical_denumerable_description_imp_fun_choice	40	40.150892	19416	2303
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLt_irrefl	40	40.200035	49845	4630
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.concat_spec	40	40.049330	14596	2737
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_lt_compat_r	40	40.057022	6859	1278
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_opp_c	40	40.089717	27439	3958
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Padd_ok	40	40.422414	9961	3772
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rderiv.Dx	40	40.114574	35458	6248
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmax_case	40	40.095755	20549	5037
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_mult_div_ge_neg	40	40.445430	31966	2798
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Pdiv2	40	38.317869	38696	2579	2.4.0.0.0.30.2.27	synth with cache (only 1: red; only 1: intro n; only 1: destruct n as [| p| p]; only 1: intro H; only 1: discriminate; only 1: intros; only 1: now destruct p; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.mul_factor_gt	40	40.075663	24799	5441
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.ni_min_case	40	40.882821	33541	3007
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.dep_non_dep_functional_rel_reification	40	0.041336	22	8	1.0.1.2	synth with cache (only 1: intros AC_depfun A B R H; only 1: destruct (AC_depfun A (fun _ => B) R H) as (f, Hf); only 1: exists f; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.OpAdd_sound	40	40.038125	6274	1768
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recr_aux_eqn	40	40.134070	45726	6037
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.RPow_abs	40	40.055042	10726	5067
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.filter_ok	40	40.088389	4551	1043
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.of_list_2	40	40.371731	19002	2759
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_pt_const	40	40.141105	53832	4691
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmax_r	40	0.177957	59	32	0.0.0.0.0.0.1.0	synth with cache (only 1: intros; only 1: unfold Rmax; only 1: case (Rle_dec x y); only 1: intro H1; only 1: right; only 1: reflexivity || (apply Rle_antisym; assumption || auto with real); only 1: intro H1; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_ge_compat_l	40	40.046564	14036	2057
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.div_eq_inv	40	0.006821	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.of_to	40	40.188934	48209	4730
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qplus_inj_r	40	40.058337	16247	2559
coq-tactician-stdlib.8.11.dev	Coq.Reals.Alembert.AlembertC3_step2	40	40.681674	16717	8274
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreduction.Qred_lt	40	2.887061	668	128	12.1.0.6	synth with cache (only 1: intuition; only 1: rewrite <- (Qred_correct q), <- (Qred_correct q'); only 1: easy; only 1: now rewrite !Qred_correct).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.of_list_3	40	40.537046	16406	2771
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyBool.Z_of_nat_ltb_iff	40	40.309417	30168	5484
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recr_aux_converges	40	40.043819	9347	1260
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Evaluation.eval_null_zero	40	4.685368	3391	485	13.14	synth with cache (only 1: intros a n; only 1: now destruct 1 || intros _).
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_incrst_1	40	40.080819	25154	5507
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.remove_add	40	40.079269	2486	549
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.is_empty_cardinal	40	40.069250	11302	2294
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_spec_right	40	40.730377	27818	2291
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_add_2	40	9.254387	2073	292	2.3.18	synth with cache (only 1: rewrite <- not_mem_iff; only 1: intros; only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.get_correct	40	40.152588	56097	5518
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qplus_inj_l	40	40.044537	12027	3013
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.Pow_x_infinity	40	40.113250	39228	4998
coq-tactician-stdlib.8.11.dev	Coq.btauto.Reflect.Completeness.make_last_nth_1	40	40.644905	37516	3864
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_lt_compat	40	40.088625	29644	3065
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.extended_euclid_algorithm.euclid_rec	40	40.131573	27502	2730
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_plus_rat	40	40.120273	27035	5392
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_eq_o	40	0.031363	4	3	0.0.1	synth with cache (only 1: intros; only 1: generalize (mem_in_iff m x), (mem_in_iff m y), (In_iff m H); only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsLUB.is_upper_bound_glb	40	40.647203	29045	5657
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.dep_non_dep_functional_choice	40	40.171939	62013	4423
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Qmult_power_positive	40	41.752665	4114	770
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcmult_1_l	40	41.206858	15428	2247
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.add_remove	40	31.878605	4271	673	0.30.0	synth with cache (only 1: intros; only 1: generalize (mem_iff s x), (mem_iff s' y); only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.compare_x_empty	40	40.071073	19093	3257
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.RealField.R_power_theory	40	40.187461	29580	4800
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.Zeval_formula_compat'	40	41.998570	2949	601
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zrem_sgn	40	40.163504	22215	2573
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rminmax.R.minus_min_distr_l	40	40.450055	7617	4135
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.fold_empty	40	0.645235	345	86	1.11	synth with cache (only 1: apply fold_1b; only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.singleton_mem_3	40	40.122670	44689	4248
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_le_compat	40	40.059820	18370	2687
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_lt_gt_contravar	40	0.059352	27	8	0.0.4	synth with cache (only 1: intros r1 r2; only 1: generalize (total_order_T r1 r2); only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_compare	40	40.067783	26683	1932
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_div_exact_full_1	40	40.071903	26373	2100
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.exp_le_3	40	40.107494	15438	2360
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_lt_contravar	40	0.069864	8	8	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Rlt_def; only 1: rewrite Rrepr_opp, Rrepr_opp; only 1: apply CRealLtForget; only 1: apply CReal_opp_gt_lt_contravar; only 1: rewrite Rlt_def in H; only 1: apply CRealLtEpsilon; only 1: exact H).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring.Ring.ring_opp_mul_l	40	40.052551	15800	859
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRplus_0_r	40	40.134565	40605	4693
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.INV_sym	40	17.510537	10174	817	0.0.0.0.0.1.60	synth with cache (only 1: destruct 1; only 1: constructor; only 1: auto; only 1: auto; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.if_eqA_else	40	40.057213	14894	2062
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.partition_aux_spec	40	40.197158	30079	1798
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.fold_add	40	0.869999	391	184	0.0.4.0.0.0.0.2	synth with cache (only 1: intros; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto; only 1: auto with set; only 1: rewrite not_mem_iff; only 1: auto with set; only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_ge_compat	40	40.075003	23684	3262
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_gt_contravar	40	0.468605	40	18	1	synth with cache (only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcmult_inv_r	40	36.213013	9302	1499	6.18.0.0	synth with cache (only 1: intros; only 1: qc; only 1: apply Qmult_inv_r; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.pred_succ	40	19.529757	8382	650	2.13.5.13	synth with cache (only 1: unfold Z.succ, Z.eq; only 1: intro n; only 1: simpl in *; only 1: now nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_1_l	40	40.082184	14130	2332
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rappart_repr	40	40.167894	29284	5417
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.add_avl	40	40.059001	15701	4717
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_ge_le_contravar	40	0.041582	10	3	0.1	synth with cache (only 1: unfold Rge; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.fold_empty	40	0.017690	4	2	0.2	synth with cache (only 1: apply fold_1b; only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_le_contravar	40	0.007968	2	1	1	synth with cache (only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ClassicalDedekindReals.Rle_antisym	40	40.451517	45311	4146
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_lt_le_compat	40	40.094811	27050	3520
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_le_lt_compat	40	40.071208	20148	4807
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.gen_phiZ_morph	40	40.038974	8975	4235
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zgcd_alt.Zgcdn_worst_is_fibonacci	40	40.084809	12725	2158
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_ge_contravar	40	0.159311	8	7	0.0.0.0.1.0.0	synth with cache (only 1: unfold Rge; only 1: intros; only 1: elim H; only 1: intro; only 1: auto with real; only 1: intro; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.succ_pred	40	0.566631	29	9	0.0.4.0	synth with cache (only 1: unfold Z.pred, Z.succ, Z.eq; only 1: intro; only 1: simpl; only 1: now nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.fold_equal	40	2.637626	1134	431	0.0.0.0.1.10	synth with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set; only 1: auto; only 1: auto; only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zmod_le	40	40.090009	23612	6219
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.one_succ	40	0.134556	31	8	0.7	synth with cache (only 1: compute; only 1: now nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Psub_opp	40	40.040567	9403	3826
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.two_succ	40	0.097174	3	3	0.0.0	synth with cache (only 1: unfold Z.eq; only 1: simpl; only 1: now nzsimpl').
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.eq_dec	40	40.061028	19778	3050
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.PmulC_aux_ok	40	40.031658	6476	3512
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_0_gt_lt_contravar	40	0.042622	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: replace 0 with (- 0); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.opp_0	40	0.110381	6	3	3.0.0	synth with cache (only 1: unfold Z.eq; only 1: simpl; only 1: now nzsimpl').
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_lt_gt_0_contravar	40	0.041998	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: replace 0 with (- 0); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.remove_fold_1	40	0.835891	420	159	0.2.0.0.0.2.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set relations; only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Powers_of_2.two_power_nat_correct	40	40.071731	20568	5116
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zdiv_lt_upper_bound	40	40.095458	36129	3087
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.ni_le_total	40	41.391438	63383	3676
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_gt_lt_0_contravar	40	0.045675	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: replace 0 with (- 0); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.opp_succ	40	0.245010	15	5	0.1.0	synth with cache (only 1: unfold Z.pred, Z.succ, Z.eq; only 1: simpl; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealEq_relT	40	5.670283	1117	440	2.1.2.0.0.0.0.0.1.1.0.0.0.0.0.0.0.7	synth with cache (only 1: split; only 1: red; only 1: intros; only 1: split; only 1: apply CRealLe_refl; only 1: apply CRealLe_refl; only 1: red; only 1: intros; only 1: destruct H; only 1: split; only 1: intro abs; only 1: contradiction; only 1: intro abs; only 1: contradiction; only 1: red; only 1: intros n m p; only 1: intros; only 1: now transitivity m).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_0_le_ge_contravar	40	0.046778	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: replace 0 with (- 0); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_le_ge_contravar	40	2.315411	275	124	0.3.1.3	synth with cache (only 1: red; only 1: intros r1 r2 H; only 1: generalize (total_order_T r1 r2); only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_0_ge_le_contravar	40	0.050517	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: replace 0 with (- 0); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_neq_o	40	4.749435	1661	441	0.0.4.2.0.2.2.1.1	synth with cache (only 1: intros; only 1: intuition; only 1: rewrite eq_option_alt; only 1: intro n; only 1: rewrite <- 2!find_mapsto_iff; only 1: intuition; only 1: apply add_3 with x e; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_1	40	40.040881	5451	1604
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Powers_of_2.two_power_pos_correct	40	0.386733	302	65	14	synth with cache (only 1: now apply Pos.iter_swap_gen).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLt_dec	40	40.772655	29563	3366
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.fold_equal	40	1.857145	860	348	0.0.0.0.2.8	synth with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_gt_cancel	40	0.039639	4	4	0.0.0.0	synth with cache (only 1: intros x y H'; only 1: rewrite <- (Ropp_involutive x); only 1: rewrite <- (Ropp_involutive y); only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcmult_integral_l	40	40.070480	12153	1768
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_le_cancel	40	0.020774	4	4	0.0.0.0	synth with cache (only 1: intros x y H'; only 1: rewrite <- (Ropp_involutive x); only 1: rewrite <- (Ropp_involutive y); only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_ge_cancel	40	0.029071	4	4	0.0.0.0	synth with cache (only 1: intros x y H; only 1: rewrite <- (Ropp_involutive x); only 1: rewrite <- (Ropp_involutive y); only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zrem_sgn2	40	40.072070	22504	3882
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_gt_compat_r	40	0.076888	38	10	5	synth with cache (only 1: auto using Rplus_lt_le_compat with rorders).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.fold_add	40	0.336562	111	63	0.0.2.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: rewrite not_mem_iff; only 1: auto with set; only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Sqrt_reg.sqrt_continuity_pt	40	40.095341	32467	4940
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcmult_integral	40	41.076109	14653	1800
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Powers_of_2.two_power_pos_nat	40	40.120690	33529	3786
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.max_elt_spec2	40	40.268252	11717	3024
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcle_refl	40	0.502338	871	81	0.0.19	synth with cache (only 1: red; only 1: intros a; only 1: auto with qarith).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_gt_compat_l	40	0.597609	217	40	3.8	synth with cache (only 1: intros p q H H1 H2; only 1: auto with *).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmax_right	40	0.041000	8	4	0.0.4.0	synth with cache (only 1: intros; only 1: apply Rmax_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.extended_euclid_algorithm.euclid	40	40.403719	174891	5949
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_cst	40	40.046575	3831	814
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcle_antisym	40	0.410761	210	60	7.3	synth with cache (only 1: intros x y z; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nshiftl_equiv_nat	40	40.542767	20131	4823
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Cyclic63.div_le_0	40	40.735628	13299	1822
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rec	40	40.592648	29941	3074
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Pshiftl_nat_0	40	0.009650	2	2	0.0	synth with cache (only 1: intros; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Pshiftl_nat_S	40	0.005275	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_reg.CVN_R_sin	40	40.043138	11347	6211
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zrem_lt_pos	40	40.082763	23646	5002
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qclt_not_eq	40	0.258531	168	65	1.0.1.5	synth with cache (only 1: intros; only 1: contradict H; only 1: subst; only 1: apply Z.lt_irrefl).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmax_left	40	10.112033	6459	1034	0.0.0.24.0	synth with cache (only 1: intros; only 1: unfold Rmax; only 1: case (Rle_dec x y); only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_lt_le_0_compat	40	40.057784	13337	7372
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.append_correct1	40	40.090916	25343	2940
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zrem_lt_pos_neg	40	0.109376	21	16	0.3.0	synth with cache (only 1: intros Ha Hb; only 1: generalize (Zrem_lt_pos a b); only 1: lia).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rle_max_compat_l	40	0.039927	6	6	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: do 2 (apply Rmax_case_strong; intro); only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcabs.Qcabs_opp	40	40.051241	12503	4709
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xfind_left	40	40.087721	26116	5524
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_wd	40	40.035353	6430	1239
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_integral	40	40.046698	13277	2277
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_equal	40	40.037355	10527	1961
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetCompat.Update_WSets.Spec.is_empty_spec	40	40.149204	56444	4248
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_ii	40	40.064143	14833	6560
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.Induction.bi_induction	40	40.100749	28635	7732
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.continuity_cos	40	40.133290	21386	6165
coq-tactician-stdlib.8.11.dev	Coq.Strings.Ascii.N_ascii_embedding	40	40.282012	8853	2099
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_0	40	40.065175	20481	4038
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.mapi_inv	40	40.284039	36718	3888
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.MVT_cor2	40	40.054511	14218	6359
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.of_list_2	40	40.243855	14550	1983
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_le_mono_l	40	40.472895	8928	1375
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qinv_minus_distr	40	0.079352	6	5	1.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Qeq; only 1: simpl; only 1: rewrite Pos2Z.inj_mul; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.if_eqA	40	40.118383	33384	5696
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.PmulC_ok	40	40.036797	10244	2399
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nshiftr_nat_spec	40	40.077742	27897	4257
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PE_1_r	40	0.778414	260	61	8.0.0.0	synth with cache (only 1: intros l; only 1: simpl; only 1: rewrite phi_1; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rec_bis	40	40.196727	23712	7360
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.of_list_3	40	40.799070	14027	2755
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_0_r	40	0.075838	5	3	2.0.0	synth with cache (only 1: intros l; only 1: simpl; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.double_succ	40	40.062615	16032	4146
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ_add	40	40.034805	6534	1643
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nshiftl_nat_spec_high	40	40.083828	27629	5112
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.max_elt_spec3	40	40.164443	11656	4076
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.interior_P3	40	40.110907	39034	7460
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcomplements.Zlength_properties.Zlength_cons	40	40.375560	32522	5534
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.partition_spec	40	40.108253	35259	5229
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_le_le_0_compat	40	40.441372	18068	4228
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Ens_to_MSet	40	40.790728	46578	3840
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_1_r	40	0.629268	285	64	8.0.0.0	synth with cache (only 1: red; only 1: intros; only 1: simpl; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Diaconescu.ProofIrrel_RelChoice_imp_EqEM.decide	40	40.125625	44936	2927
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.mapi_1bis	40	40.153058	53521	6497
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.add_succ_l	40	1.255902	322	101	8.0.1	synth with cache (only 1: intros (n1, n2) (m1, m2); only 1: compute; only 1: now nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_ge_compat_l	40	1.258651	862	142	3.10	synth with cache (only 1: intros x Ex; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_isRing	40	41.122001	10457	5137
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_mul_r	40	40.048954	16916	489
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_plus	40	40.557384	21406	4023
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.remove_fold_1	40	0.124750	62	29	0.0.0.0.0.1.1	synth with cache (only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_1	40	2.530668	1566	325	2.9.0.0.2.5	synth with cache (only 1: intros; only 1: apply fold_rec_bis; only 1: auto; only 1: auto with *; only 1: intros a b Ha Hb; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qclt_le_weak	40	3.579506	1278	201	16.2	synth with cache (only 1: intros; only 1: now apply Z.lt_le_incl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.nat_iter_S	40	0.009454	2	2	0.0	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_integral_l	40	40.042302	12069	2388
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.nat_iter_0	40	0.004995	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.filter_iff	40	40.157769	27082	6251
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcle_lt_trans	40	0.169092	73	31	1.0.0.4	synth with cache (only 1: intros; only 1: apply Qle_lt_trans with y; only 1: auto; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_1b	40	0.156512	79	23	0.1.0.2.2	synth with cache (only 1: intros; only 1: rewrite M.fold_1; only 1: auto; only 1: auto with *; only 1: auto with *).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.Nth	40	40.014785	3850	1194
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.dep_iff_non_dep_functional_rel_reification	40	10.833645	7921	1969	1.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.1.0.0.0.0.0.0.0.0.0.2	synth with cache (only 1: split; only 1: intros AC_fun A B R H; only 1: pose (B' := {x : A & B x}); only 1: pose (R' := fun (x : A) (y : B') => projT1 y = x /\ R (projT1 y) (projT2 y)); only 1: destruct (AC_fun A B' R') as (f, Hf); only 1: intros x; only 1: destruct (H x) as (y, (Hy, Huni)); only 1: exists (existT (fun x => B x) x y); only 1: repeat split; only 1: trivial; only 1: intros (x', y') (Heqx', Hy'); only 1: simpl in *; only 1: destruct Heqx'; only 1: rewrite (Huni y'); only 1: trivial; only 1: trivial; only 1: exists (fun x => eq_rect _ _ (projT2 (f x)) _ (proj1_inf (Hf x))); only 1: intro x; only 1: destruct (Hf x) as (Heq, HR) using and_indd; only 1: destruct (f x); only 1: simpl in *; only 1: destruct Heq using eq_indd; only 1: trivial; only 1: intros DepFunReify A B R H; only 1: destruct (DepFunReify A (fun _ => B) R H) as (f, Hf); only 1: exists f; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_le_lt_trans	40	40.849227	34686	3270
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_Ifp.fp_nat	40	40.184080	74877	5269
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_succ_r	40	0.839066	137	43	6.0.1	synth with cache (only 1: intros (n1, n2) (m1, m2); only 1: compute; only 1: now nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_lt_reg_l	40	40.101478	30597	3166
coq-tactician-stdlib.8.11.dev	Coq.Strings.HexString.to_pos_of_pos	40	40.099960	19159	1480
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRmult_1_r	40	40.052623	9297	3408
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nshiftl_nat_spec_low	40	40.097374	33877	4415
coq-tactician-stdlib.8.11.dev	Coq.Strings.OctalString.to_pos_of_pos	40	40.129070	32115	2039
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rec_weak	40	40.452827	38146	6732
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nxor_semantics	40	0.457772	188	75	1.0.0.0.1.0.1.0.0.0	synth with cache (only 1: destruct a, a'; only 1: simpl; only 1: trivial; only 1: rewrite ?BinInt.Z.testbit_0_l, ?xorb_false_l, ?xorb_false_r; only 1: trivial; only 1: rewrite ?BinInt.Z.testbit_0_l, ?xorb_false_l, ?xorb_false_r; only 1: trivial; only 1: simpl; only 1: rewrite <- Ntestbit_Nbit, <- !Ptestbit_Pbit; only 1: apply N.pos_lxor_spec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.merge_in	40	40.068636	19989	4714
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.mapi_mapsto_iff	40	40.078937	22155	7037
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.Nzorn	40	40.173212	70169	6494
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.add_neq_b	40	1.342796	232	112	0.0.2.0.1.3	synth with cache (only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_iff s x y); only 1: destruct (mem y (add x s)); only 1: intuition; only 1: destruct (mem y s); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_lt_mono_r	40	4.656268	727	287	0.0.3.2.1.0	synth with cache (only 1: intros n m p; only 1: rewrite (Rplus_comm m p); only 1: rewrite (Rplus_comm n p); only 1: do 2 rewrite Rlt_le_neq; only 1: rewrite Rplus_cancel_l; only 1: now rewrite <- Rplus_le_mono_l).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_ge_compat_r	40	3.333737	1567	439	3.11	synth with cache (only 1: intros x Ex; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_lt_reg_r	40	40.059012	3643	1455
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_spec_right	40	40.816741	106856	1252
coq-tactician-stdlib.8.11.dev	Coq.Logic.ConstructiveEpsilon.ConstructiveGroundEpsilon.constructive_definite_ground_description	40	40.153373	44716	14566
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_ge_compat	40	0.252205	113	29	9	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_oi	40	5.580292	2431	857	0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: intros; only 1: destruct o; only 1: simpl; only 1: intro H; only 1: destruct (in_app_or _ _ _ H); only 1: apply (IHm1 _ _ _ H0); only 1: destruct (in_inv H0); only 1: congruence; only 1: apply (IHm2 _ _ _ H1); only 1: simpl; only 1: intro H; only 1: destruct (in_app_or _ _ _ H); only 1: apply (IHm1 _ _ _ H0); only 1: apply (IHm2 _ _ _ H0)).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.merge_mapsto	40	40.172024	10044	2718
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zrem_lt_neg_pos	40	7.013680	2237	819	1.7.4.0.0	synth with cache (only 1: intros Ha Hb; only 1: generalize (Zrem_lt_pos a b); only 1: intros H; only 1: generalize (Z.rem_nonpos a b), (Z.rem_bound_abs a b); only 1: lia).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_minus_morph_T	40	2.090731	53	26	0.0.0.2	synth with cache (only 1: intros x y H x0 y0 H0; only 1: unfold CReal_minus; only 1: rewrite H, H0; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rec	40	40.859853	21775	3220
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.choose_spec3	40	40.173962	19588	2820
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.add_0_l	40	10.404207	1485	239	0.1.1.5	synth with cache (only 1: unfold Z.pred, Z.succ, Z.eq; only 1: intro n; only 1: simpl; only 1: now nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rec_bis	40	40.081294	20831	7363
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.merge_bst	40	40.289500	27572	3299
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_cardinal_1	40	0.094549	60	14	5.4	synth with cache (only 1: intros x y H; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_in	40	40.054061	14970	2530
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalString.NilEmpty.isi	40	40.229685	8377	1896
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_io	40	40.076861	20494	4486
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_neg_pos_le_0	40	40.078435	22968	5626
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.PaddX_ok	40	40.030324	8132	1991
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.Zeval_nformula_dec	40	40.360094	28222	2826
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rgeom.distance_symm	40	40.075724	25531	4345
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_cardinal_2	40	0.669727	136	62	0.0.0.0.0.0.0.2	synth with cache (only 1: intuition; only 1: do 2 rewrite cardinal_fold; only 1: change S with ((fun _ => S) x); only 1: apply MP.fold_add with (eqA := Logic.eq); only 1: auto with *; only 1: congruence; only 1: auto with *; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Ndouble_or_double_plus_un	40	40.437489	77986	5123
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.nsatz1.Rtheory	40	40.027104	7047	1531
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qround.Zdiv_Qdiv	40	40.073993	24971	3295
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_cardinal_1	40	0.256301	117	39	0.0.0.0.1.0.1.2	synth with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: change S with ((fun _ => S) x); only 1: apply MP.remove_fold_1 with (eqA := Logic.eq); only 1: auto with *; only 1: congruence; only 1: auto with *; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZCoeff.InitialMorphism.phi_pos1_pos	40	40.580993	19425	2013
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.partition_ok1	40	40.078742	6647	1772
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_le_reg_l	40	40.044050	7300	3514
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nleb_alt	40	40.184040	25584	3566
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rseries.sequence.finite_greater	40	40.095756	31487	6661
coq-tactician-stdlib.8.11.dev	Coq.Reals.Exp_prop.exp_form	40	41.397148	13992	3795
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rec_nodep	40	40.160280	50003	7531
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis3.derivable_div	40	40.129103	46880	5219
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.inject_Z_plus	40	40.045155	14001	1741
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.inter_1	40	40.120483	32986	4292
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.Rinv_pow	40	39.272062	16027	2169	3.0.0.6.1.0.3.15.0	synth with cache (only 1: intros; only 1: induction n; only 1: field; only 1: reflexivity || assumption; only 1: simpl; only 1: rewrite Rinv_mult_distr; only 1: now f_equal; only 1: trivial; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zdiv_le_upper_bound	40	40.093448	22908	3414
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcinv_mult_distr	40	40.689630	26317	3752
coq-tactician-stdlib.8.11.dev	Coq.Reals.Exp_prop.div2_double	40	0.054002	17	8	1.0	synth with cache (only 1: intro n; only 1: apply Nat.div2_double).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_1	40	1.897364	967	289	5.2.0.2.4	synth with cache (only 1: intros; only 1: apply fold_rec_bis; only 1: auto; only 1: reflexivity; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zrem_lt_neg_neg	40	3.599073	1167	479	0.11.0	synth with cache (only 1: intros Ha Hb; only 1: generalize (Zrem_lt_neg a b); only 1: lia).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Exp_prop.div2_S_double	40	0.045476	17	9	1.0	synth with cache (only 1: intro n; only 1: apply Nat.div2_succ_double).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.non_dep_dep_functional_choice	40	40.163976	64332	4481
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_nz	40	40.046183	12095	1537
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qle_refl	40	0.263763	536	29	32	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_le_ge_compat_neg_l	40	0.101448	19	8	0.1.1.1.0	synth with cache (only 1: intros r r1 r2 H H0; only 1: replace r with (- - r); only 1: do 2 rewrite (Ropp_mult_distr_l_reverse (- r)); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.Padd_ok	40	40.177818	15495	4360
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.one_succ	40	40.140435	32704	2052
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_lt_le_trans	40	40.897874	12988	5673
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qinv_involutive	40	40.055513	16095	2573
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.remove_min_avl_1	40	40.036425	9358	2334
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qle_antisym	40	0.670456	415	77	14.2	synth with cache (only 1: unfold Qeq, Qlt, Qcompare; only 1: apply Z.le_antisymm).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.complementary_P1	40	8.549450	18014	1403	0.5.6.20.10	synth with cache (only 1: intros P H; only 1: destruct H as (b, H); only 1: apply H; only 1: elim H; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.two_succ	40	0.079617	2	2	0.0	synth with cache (only 1: zify; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.eq_dec	40	40.093335	17220	1698
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.mem_find_b	40	40.056138	14410	2195
coq-tactician-stdlib.8.11.dev	Coq.micromega.QMicromega.Qeval_formula_compat	40	40.475095	7923	1457
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.Induction.B0	40	0.005405	1	1	0	synth with cache (only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_bst	40	40.071059	18612	3733
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_le	40	0.624920	137	68	0.0.0.1.0.0.0.0.0	synth with cache (only 1: intros x n; only 1: elim n; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: intros n0 H' H'0; only 1: replace 0 with (x * 0); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.if_eqA_rewrite_l	40	40.105123	37468	3940
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmax_Rle	40	40.084763	3460	810
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.mem_b	40	40.155811	49181	4122
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_add	40	40.028885	6207	1019
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_inv_r	40	40.114286	9710	1596
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_div	40	40.035314	7566	1941
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalN.Signed.of_inj_pos	40	40.083100	22825	4253
coq-tactician-stdlib.8.11.dev	Coq.Strings.BinaryString.to_pos_of_pos	40	40.290282	15179	1890
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.NMORPHISM.same_genN	40	40.137805	19503	1577
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qlt_irrefl	40	0.333278	350	20	26	synth with cache (only 1: apply Z.lt_irrefl).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_opp_morph_Proper	40	40.340293	2040	1105
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qclt_trans	40	1.962249	441	165	5.0.1.0.1	synth with cache (only 1: unfold Qcle, Qclt; only 1: intros; only 1: eapply Qlt_le_trans; only 1: eauto; only 1: auto with *).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_le_trans	40	40.188636	39392	4044
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_neq_o	40	0.391433	137	55	0.4.0.1.0	synth with cache (only 1: intros; only 1: rewrite eq_option_alt; only 1: intro e; only 1: rewrite <- find_mapsto_iff, remove_mapsto_iff; only 1: now intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Cos_rel.B1_cvg	40	40.078194	21582	7326
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.sin_3PI2	40	40.049537	12000	4010
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_o	40	0.238976	39	25	1.0.0.1.0.0.0	synth with cache (only 1: intros; only 1: destruct (eq_dec x y); only 1: rewrite eq_option_alt; only 1: intros; only 1: rewrite <- find_mapsto_iff, remove_mapsto_iff; only 1: now intuition; only 1: auto with map).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zis_gcd_bezout	40	40.095329	21321	2171
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.concat_ok	40	40.124963	4467	942
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_le_reg_r	40	40.115897	9382	4189
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_0_r	40	0.020037	2	2	0.0	synth with cache (only 1: intro; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.compare_compat_1	40	40.074118	21781	4057
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.diff_1	40	40.103337	31791	4685
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_cxe	40	0.251953	144	50	1.2.0.3.0	synth with cache (only 1: intro n; only 1: destruct n as [| p| p]; only 1: constructor; only 1: constructor; only 1: constructor).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_lt_gt_compat_neg_l	40	3.203011	1181	251	0.4.4.8.0	synth with cache (only 1: intros; only 1: replace r with (- - r); only 1: do 2 rewrite (Ropp_mult_distr_l_reverse (- r)); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_xce	40	0.020282	4	4	0.0.0.0	synth with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_1_r	40	0.407893	61	33	1.2	synth with cache (only 1: intro r; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_lxl	40	0.053381	32	10	0.0.0.5	synth with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcnot_lt_le	40	1.601110	370	88	8.3	synth with cache (only 1: intros (x1, x2) (y1, y2); only 1: apply Z.nlt_ge).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_gxg	40	0.024308	4	4	0.0.0.0	synth with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_gt_reg_l	40	40.063784	4267	972
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_add_2	40	40.034010	4397	717
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zis_gcd_mult	40	40.081053	3519	1002
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.PaddX_ok	40	3.034727	634	333	0.5.4	synth with cache (only 1: intro P; only 1: elim (PaddX_ok2 P); only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_xll	40	0.022940	4	4	0.0.0.0	synth with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.pexpr_times_nformula_correct	40	40.124635	38680	2992
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcnot_le_lt	40	0.044395	23	7	0.0.2.1	synth with cache (only 1: unfold Qcle, Qclt; only 1: intros H1; only 1: intros H3; only 1: apply Z.nle_gt).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.add_cardinal_1	40	0.090125	66	12	9	synth with cache (only 1: auto with set fset).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_xgg	40	0.022118	4	4	0.0.0.0	synth with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qclt_not_le	40	0.011977	4	2	2.0	synth with cache (only 1: intros n m; only 1: apply Z.lt_nge).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcle_not_lt	40	0.016784	7	2	5.0	synth with cache (only 1: intros n m; only 1: apply Z.le_ngt).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_opp	40	40.086975	26442	6459
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recr_eqn	40	40.393686	14559	2684
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recrbis_aux_equiv	40	40.073366	22305	3967
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.add_cardinal_2	40	0.413880	138	63	0.0.0.0.0.0.0.2	synth with cache (only 1: destr_bool; only 1: do 2 rewrite cardinal_fold; only 1: change S with ((fun _ => S) x); only 1: apply MP.fold_add with (eqA := Logic.eq); only 1: auto with fset; only 1: auto with fset; only 1: auto with fset; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.to_lu_tenfold	40	40.088007	28498	4067
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRplus_opp_l	40	40.305287	9032	3301
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_cardinal_1	40	0.233247	138	42	0.0.0.0.0.0.1.3	synth with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: change S with ((fun _ => S) x); only 1: apply MP.remove_fold_1 with (eqA := Logic.eq); only 1: auto with fset; only 1: auto with fset; only 1: auto with fset; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.filter_1	40	40.106505	33655	4130
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_opp_morph_T	40	41.027582	2361	1233
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.ub_to_lub	40	40.095884	32232	6467
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_lt_trans	40	41.362522	14723	5424
coq-tactician-stdlib.8.11.dev	Coq.Logic.WKL.inductively_barred_at_is_path_from_decidable	40	40.095317	14660	2487
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRplus_lt_compat_r	40	40.447812	15046	2801
coq-tactician-stdlib.8.11.dev	Coq.Reals.PSeries_reg.boule_in_interval	40	40.129769	47668	5658
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.mem_b	40	40.738545	29889	3385
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.INV_init	40	40.080219	24897	4071
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyBool.Z_eqb_ZSpec_ok	40	26.850593	11350	1417	0.1.0.1.0.1.11.0.1.0.1.0.1.0.0.0.0.6.7	synth with cache (only 1: split; only 1: destruct x; only 1: compute; only 1: intuition congruence; only 1: compute; only 1: intuition congruence; only 1: compute; only 1: intuition congruence; only 1: split; only 1: intros H; only 1: subst; only 1: reflexivity; only 1: destruct x; only 1: intros H; only 1: trivial; only 1: intros H; only 1: destr_eq H; only 1: intros H; only 1: destr_eq H).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRplus_le_reg_l	40	0.081572	16	9	0.3.0.0.0	synth with cache (only 1: intros; only 1: intro abs; only 1: apply H; only 1: apply CRplus_lt_compat_l; only 1: exact abs).
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_le_mono_r	40	40.139330	15851	2448
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_gt_reg_l	40	0.933716	187	76	5.0.0.1	synth with cache (only 1: intros; only 1: apply Rmult_lt_reg_l with r; only 1: exact H; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreals.Qlt_Rlt	40	40.087102	12694	5196
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_ge_reg_l	40	40.050268	8280	1934
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_opp_mult_distr_r	40	0.024115	2	2	0.0	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_assoc	40	40.137559	21113	2485
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.lb_to_glb	40	40.105505	35108	6586
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zdiv_le_lower_bound	40	40.127458	31432	4115
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.cast_refl	40	40.115604	42889	4754
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.tearing_sequences	40	40.196145	78623	3664
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.find_o	40	40.039170	6089	4491
coq-tactician-stdlib.8.11.dev	Coq.Reals.AltSeries.CV_ALT_step4	40	40.066913	19626	5901
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PE_1_l	40	19.259914	3088	485	22.2.0.0	synth with cache (only 1: red; only 1: intros; only 1: simpl; only 1: now rewrite (morph1 CRmorph)).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.set_rec	40	40.035950	6071	637
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zeq_is_eq_bool	40	40.091152	30127	3684
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_minus_morph_Proper	40	40.030517	2222	773
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_1_l	40	0.797921	154	36	0.0.5.0.0	synth with cache (only 1: intros; only 1: zify; only 1: Z.nzsimpl; only 1: apply Zmod_small; only 1: apply ZnZ.spec_to_Z).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.remove_min_avl	40	40.046527	12348	3533
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_1	40	40.069472	8695	2807
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.tech6	40	40.327031	14255	5563
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.INV_drop	40	40.124211	42184	4219
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_2	40	40.031270	7780	2451
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recrbis_equiv	40	40.040169	9543	753
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_opp_carry	40	40.096377	24468	6213
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.compare_inv	40	40.118960	39892	5762
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.is_empty_cardinal	40	40.067465	15982	2351
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.dicho_up_decreasing	40	40.077110	21103	6272
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.subset_cardinal	40	0.017249	6	2	0.4	synth with cache (only 1: intros x y EQ; only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.min_ss	40	1.404332	758	221	0.0.1.0.0.0.0.2.0.0.2.0	synth with cache (only 1: intros; only 1: elim H; only 1: intros; only 1: unfold is_upper_bound in H0; only 1: exists x; only 1: unfold is_upper_bound; only 1: intros; only 1: apply H0; only 1: elim H1; only 1: intros; only 1: exists (k + x1)%nat; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.cast_diff	40	40.131312	47797	3187
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.Comp'	40	0.124557	15	3	5	synth with cache (only 1: solve_proper).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Phi.phibis_aux_equiv	40	0.042275	5	3	0.0.2	synth with cache (only 1: intros; only 1: apply recrbis_aux_equiv; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_comm	40	0.452731	155	26	5.3.0.0	synth with cache (only 1: intros; only 1: zify; only 1: f_equal; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.empty_b	40	40.887637	35231	2190
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qabs.Qabs_Qle_condition	40	40.140789	8442	858
coq-tactician-stdlib.8.11.dev	Coq.Reals.Cos_plus.reste1_cv_R0	40	40.055081	13119	7795
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.compare_compat	40	40.070252	17119	3642
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Psub_ok	40	40.537131	7850	5189
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.MinRlist_P2	40	40.086785	28356	4739
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Powers_of_2.shift_pos_correct	40	40.071342	17761	1570
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.to_lu_succ	40	40.089810	27991	5001
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.lex_Eq	40	40.102685	32343	5645
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.for_all_1	40	40.135304	24165	1942
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring.Ring.ring_opp_mul_r	40	40.203335	12753	638
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.bits_lt_trans	40	41.226875	35983	3499
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_lt_1_zero	40	40.170780	35832	6137
coq-tactician-stdlib.8.11.dev	Coq.Strings.Byte.N.to_of_N	40	40.048842	15369	1894
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_le_reg_pos_r	40	40.092727	11009	2506
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmax_comm	40	40.094988	11548	2535
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rel	40	40.146948	30791	2921
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Powers_of_2.two_p_gt_ZERO	40	0.778121	203	58	1.0.0.0.0.1.3	synth with cache (only 1: destruct x; only 1: constructor; only 1: simpl; only 1: intros H; only 1: easy; only 1: simpl; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rec_weak	40	40.128005	39874	7128
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.empty_o	40	40.069563	21461	3967
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.In_eq_iff	40	0.065921	18	5	1.0.3	synth with cache (only 1: intros E; only 1: rewrite E; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Incr.incrbis_aux_equiv	40	40.405746	10433	588
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qinv_mult_distr	40	40.173015	8596	2597
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.ZWeakChecker_sound	40	40.156648	57223	4183
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.mem_iff	40	0.067259	23	9	5.0.0	synth with cache (only 1: symmetry; only 1: symmetry; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRcomplete.Un_cv_extens	40	40.458543	34824	4407
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.union_cardinal	40	0.107928	39	20	0.0.0.0.0.0.0.1	synth with cache (only 1: intros; only 1: do 3 rewrite cardinal_fold; only 1: rewrite <- fold_plus; only 1: apply MP.fold_union; only 1: auto with fset; only 1: auto with fset; only 1: auto with fset; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.add_b	40	40.450335	12814	4224
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.rel_prime_bezout	40	40.087374	29454	3685
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rprod.fact_prodSO	40	40.066928	20748	2628
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.exp_0	40	40.100318	14125	3198
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmax_lub	40	0.195752	115	33	0.0.0.0.5	synth with cache (only 1: intros r1 r2 P H1 H2; only 1: unfold Rmax; only 1: destruct (Rle_dec r1 r2) as [| Hnle]; only 1: trivial; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.lt_spec.compare_x_Leaf	40	0.270887	198	35	0.0.7.4	synth with cache (only 1: intro n; only 1: destruct n; only 1: reflexivity; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmax_lub_lt	40	0.051777	8	7	0.0.0.0.0.1.0	synth with cache (only 1: intros; only 1: unfold Rmax; only 1: case (Rle_dec x y); only 1: intro; only 1: eauto using Rle_trans, Rle_refl; only 1: intro; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rprod.le_n_2n	40	0.041696	7	6	0.0.0.1.0.0	synth with cache (only 1: intro n; only 1: simpl; only 1: rewrite <- (Nat.add_0_r n); only 1: rewrite <- Nat.add_assoc; only 1: apply Nat.add_le_mono_l; only 1: apply Nat.le_0_l).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEadd_ext	40	40.031434	3724	1332
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.pr_nu_var	40	40.065996	18465	6384
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_lt_mono_l	40	40.481030	7174	1708
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsigma.Sigma.sigma_last	40	40.055450	13294	7508
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_pt_scal	40	40.165367	23818	5409
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.rel_prime_sym	40	0.290290	71	20	0.0.0.2.2	synth with cache (only 1: simple induction 1; only 1: constructor; only 1: trivial; only 1: trivial; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_b	40	4.608684	1796	468	0.0.0.0.0.0.5.2.1.0	synth with cache (only 1: intros; only 1: do 2 rewrite mem_find_b; only 1: unfold eqb; only 1: destruct (eq_dec x y); only 1: rewrite remove_eq_o; only 1: trivial; only 1: auto; only 1: rewrite remove_neq_o; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.for_all_2	40	40.109663	25761	2304
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.compare_gt	40	40.093655	31637	4182
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Qle_true	40	40.126860	45995	3947
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_compare_bool	40	2.659304	3080	378	0.0.0.0.0.0.0.0.26	synth with cache (only 1: destr_bool; only 1: ct; only 1: constructor; only 1: ct; only 1: constructor; only 1: constructor; only 1: ct; only 1: constructor; only 1: ct).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nor_semantics	40	0.503436	137	75	1.0.0.1.0.0.0.0.0.0	synth with cache (only 1: destruct a, a'; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite orb_false_r; only 1: simpl; only 1: rewrite <- !Ptestbit_Pbit; only 1: apply N.pos_lor_spec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.set_rec	40	40.042693	5094	584
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zdiv_le_compat_l	40	40.389213	28777	2306
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmax_l	40	40.108045	32314	6075
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.equal_iff	40	0.034213	4	1	3	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Por_semantics	40	19.090386	13864	3763	0.0.0.0.0.0.0.0.1.0.0.1.0.0.1.0.0.0.1.0.0.1.0.0.1.0.0.0.0	synth with cache (only 1: revert p' n; only 1: induction p as [p IH| p IH| ]; only 1: intros [p'| p'| ] [| n]; only 1: trivial; only 1: simpl; only 1: apply IH || now rewrite orb_false_r; only 1: trivial; only 1: simpl; only 1: apply IH || now rewrite orb_false_r; only 1: trivial; only 1: simpl; only 1: apply IH || now rewrite orb_false_r; only 1: intros [p'| p'| ] [| n]; only 1: trivial; only 1: simpl; only 1: apply IH || now rewrite orb_false_r; only 1: trivial; only 1: simpl; only 1: apply IH || now rewrite orb_false_r; only 1: trivial; only 1: simpl; only 1: apply IH || now rewrite orb_false_r; only 1: intros [p'| p'| ] [| n]; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_0_r	40	22.025715	1585	304	0.0.4.6.2	synth with cache (only 1: unfold Z.pred, Z.succ, Z.eq; only 1: intro p; only 1: destruct p; only 1: simpl; only 1: now nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.subset_iff	40	0.028664	5	1	4	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.AbsList_P2	40	40.140261	29931	4280
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.compare_eq	40	40.072565	23619	3618
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.is_zero_spec	40	5.945951	5414	869	0.3.2.16.5	synth with cache (only 1: split; only 1: auto using eqb_correct, eqb_complete; only 1: intro; only 1: subst; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEopp_ext	40	40.034777	2668	1324
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.eqbP	40	40.175767	12699	2220
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.empty_a	40	42.108046	38159	1856
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.INV_eq	40	40.097616	17201	1416
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nand_semantics	40	0.443520	146	80	1.0.0.1.0.0.0.0.0.0	synth with cache (only 1: destruct a, a'; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite andb_false_r; only 1: simpl; only 1: rewrite <- Ntestbit_Nbit, <- !Ptestbit_Pbit; only 1: apply N.pos_land_spec).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.NMORPHISM.gen_phiN_add	40	40.056658	10380	2015
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_facts.Zmult_power	40	40.034360	11281	1439
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.tearing_sequences_projsig	40	40.504624	9966	1631
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.Comp'	40	0.024265	3	1	2	synth with cache (only 1: solve_proper).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.compare_equal	40	42.441667	13372	2960
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsigma.Sigma.sigma_eq_arg	40	1.805766	1420	196	1.3.2.11.1	synth with cache (only 1: intros; only 1: unfold sigma; only 1: rewrite <- minus_n_n; only 1: simpl; only 1: now rewrite Nat.add_0_r).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.lt_compat	40	40.080883	8087	1524
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.split_spec1	40	40.661714	9014	1926
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_oo	40	40.054056	10541	6351
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_ho	40	14.201531	7097	2371	1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction m; only 1: intros; only 1: simpl; only 1: auto; only 1: intros; only 1: destruct o; only 1: simpl; only 1: intro H; only 1: destruct (in_app_or _ _ _ H); only 1: generalize H0; only 1: apply IHm1; only 1: destruct (in_inv H0); only 1: congruence; only 1: generalize H1; only 1: apply IHm2; only 1: simpl; only 1: intro H; only 1: destruct (in_app_or _ _ _ H); only 1: generalize H0; only 1: apply IHm1; only 1: generalize H0; only 1: apply IHm2).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.PmulI_ok	40	40.468528	6841	2637
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.split_lt_succ	40	0.021334	4	2	2.0	synth with cache (only 1: intros; only 1: now apply Nat.lt_eq_cases, Nat.succ_le_mono).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.radd_ext5_Proper	40	0.007278	2	1	1	synth with cache (only 1: exact (Radd_ext Reqe)).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.rmul_ext5_Proper	40	0.009149	3	1	2	synth with cache (only 1: exact (Rmul_ext Reqe)).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.ropp_ext5_Proper	40	0.005990	1	1	0	synth with cache (only 1: exact (Ropp_ext Reqe)).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.rsub_ext7_Proper	40	0.008540	1	1	0	synth with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_cardinal	40	9.047657	2959	569	2.0.0.0.0.0.3.6.0.0.0	synth with cache (only 1: intuition; only 1: do 3 rewrite cardinal_fold; only 1: rewrite <- fold_plus; only 1: apply MP.fold_union; only 1: split; only 1: congruence; only 1: congruence; only 1: congruence; only 1: congruence; only 1: auto; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.pos_Rl_P1	40	0.924948	379	74	0.0.12.0	synth with cache (only 1: intros z n H; only 1: inversion H; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Strings.Ascii.N_ascii_bounded	40	41.820075	6613	455
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_ext	40	40.193055	3531	1163
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.find_xfind_h	40	0.727962	457	122	0.0.0.0.0.0.0.0.0.5	synth with cache (only 1: destruct i; only 1: destruct m; only 1: auto; only 1: auto; only 1: destruct m; only 1: auto; only 1: auto; only 1: destruct m; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Binomial.pascal	40	40.047965	10850	4780
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis_reg.AppVar	40	40.059072	17093	3556
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_3	40	40.098594	13923	3244
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_lt_reg_pos_r	40	40.079612	23990	4830
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_lt_cancel	40	29.843959	4029	1036	5.0.7.1.1.1	synth with cache (only 1: intros; only 1: apply Rnot_le_lt; only 1: intro abs; only 1: eapply Rlt_not_le; only 1: eauto with rorders; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.functional_choice_to_inhabited_forall_commute	40	40.273214	106018	8945
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.INV_lt	40	40.041482	9554	4032
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nleb_Nle	40	40.162556	24573	3411
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rplus_assoc	40	40.628928	27361	3444
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Evaluation.eval_extensional_eq_compat	40	40.283752	16459	1588
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lebP	40	40.063639	21256	2036
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.filter_inf	40	40.249217	14543	4203
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.ltbP	40	41.373035	9315	1326
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rgt_minus	40	0.037535	4	4	0.0.0.0	synth with cache (only 1: intros; only 1: apply (Rplus_lt_reg_l r2); only 1: replace (r2 + (r1 - r2)) with r1 by ring; only 1: now rewrite Rplus_0_r).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.Zmod_equal	40	40.080125	20508	3684
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Z_to_two_compl_Sn_z	40	0.024058	2	2	0.0	synth with cache (only 1: intros; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.inhabited_forall_commute_to_functional_choice	40	40.338396	83817	5205
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.mul_factor_gt_f	40	40.045289	10811	4457
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rderiv.Dadd	40	40.057936	14579	5291
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.split_spec2	40	40.037360	8470	2749
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.non_dep_dep_functional_rel_reification	40	40.114801	35480	5620
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_pt_inv	40	40.127484	21837	4137
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.ni_le_min_induc	40	40.157368	22515	3233
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zdiv_sgn	40	40.183494	25220	3164
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.constructive_definite_descr_fun_reification	40	0.018186	7	4	0.0.3.0	synth with cache (only 1: intros IndefDescr A B R H; only 1: exists (fun x => proj1_sig (IndefDescr B (R x) (H x))); only 1: intro x; only 1: apply (proj2_sig (IndefDescr B (R x) (H x)))).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nleb_trans	40	1.410154	1037	139	2.2.2.15	synth with cache (only 1: rewrite !Nleb_Nle; only 1: intro LE; only 1: intro LT; only 1: N.order).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Zdiv2_two_power_nat	40	40.743897	37461	4218
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.exclusive_set	40	40.227506	3111	1804
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_ge_reg_neg_r	40	40.074431	25174	4027
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqSeries.Cesaro_1	40	40.054947	14017	5869
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_pt_div	40	40.071134	20439	4931
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.nformula_times_nformula_correct	40	40.083606	27557	2770
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rle_minus	40	0.707687	87	38	0.1.0.4	synth with cache (only 1: do 2 intro; only 1: generalize (total_order_T r1 r2); only 1: unfold Rle; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_pos	40	40.135642	16348	5520
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealEq_trans	40	40.379067	28676	3459
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.lt_trans	40	40.267542	29347	4457
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.of_lu_0	40	40.161087	17229	5230
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Incr.incr_eqn1	40	40.156466	5615	1162
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_abs	40	0.537988	133	62	0.0.2.3.0	synth with cache (only 1: intros; only 1: unfold Rabs; only 1: destruct (Rcase_abs x) as [Hlt| Hge]; only 1: ring_Rsqr; only 1: ring_Rsqr).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Alembert.Alembert_C3	40	40.063387	15199	7690
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.set_induction	40	40.105783	32341	3439
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.set_induction_bis	40	40.163923	61845	4718
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.INV_rev	40	39.418811	60450	1079
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_R1	40	40.091156	18901	3016
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Evaluation.eval_suffix_compat	40	40.102720	29166	3161
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_gt_reg_neg_r	40	40.081348	21056	8021
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Pmul_ok	40	40.044361	9952	4989
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.join_in	40	40.054378	7791	1527
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis2.maj_term3	40	40.742376	17556	3461
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_identity	40	40.063423	14695	2658
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qdiv_mult_l	40	40.042014	9708	3558
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_neg_pos_le_1	40	40.448528	18527	5989
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zrem_lt_pos_pos	40	33.290805	8984	4013	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros Ha Hb; only 1: destruct b as [| b| b]; only 1: now discriminate Hb || clear Hb; only 1: now discriminate Hb || clear Hb; only 1: destruct a as [| a| a]; only 1: now destruct Ha || clear Ha; only 1: compute; only 1: now split; only 1: now destruct Ha || clear Ha; only 1: unfold Z.rem, Z.quotrem; only 1: pose proof (N.pos_div_eucl_remainder a (N.pos b)) as H; only 1: destruct N.pos_div_eucl as (q, [| r]); only 1: simpl; only 1: split; only 1: easy; only 1: easy; only 1: simpl; only 1: split; only 1: easy; only 1: now apply H; only 1: now destruct Ha || clear Ha; only 1: now discriminate Hb || clear Hb).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Incr.incr_eqn2	40	40.044042	9681	3095
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.append_correct2	40	40.082448	28120	4645
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.join_bst	40	40.118403	18410	4018
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.remove_fold_2	40	0.014859	4	3	0.1.0	synth with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_div_r	40	40.038838	10006	3464
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.exclusive_set	40	40.030511	6487	2549
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_0	40	40.099306	36190	2665
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_0_l	40	28.475768	2152	348	0.0.9.0	synth with cache (only 1: unfold Z.mul, Z.eq; only 1: symmetry; only 1: simpl; only 1: now nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.btauto.Reflect.Completeness.make_last_nth_2	40	40.538606	39203	5046
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_opp_mult_distr_l	40	18.354352	1837	668	14.1	synth with cache (only 1: intros x y; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.eval_pol_sub	40	40.828295	3100	524
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_gt_lt_contravar	40	40.051646	14954	3965
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_irrefl	40	0.022050	9	3	2.0	synth with cache (only 1: intros; only 1: apply BinInt.Z.lt_irrefl).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.phi_sequence_prop	40	40.119376	35506	4187
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.bezout_rel_prime	40	40.091132	22334	2373
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rel	40	40.098440	32272	3873
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Qmult_power	40	40.525380	6355	1614
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.partition_filter_1	40	0.060770	10	7	2.2.0	synth with cache (only 1: intros; only 1: apply eq_true_iff_eq; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.union_spec	40	3.986285	907	368	0.1.0.1.0.0.0.0.0.2.3	synth with cache (only 1: unfold union; only 1: intros a b c Ha Hc; only 1: destruct compare_height; only 1: unfold linear_union; only 1: rewrite treeify_spec, union_list_spec, !rev_elements_rev; only 1: rewrite !InA_rev, InA_nil, !elements_spec1 by auto_tc; only 1: tauto; only 1: rewrite fold_add_spec; only 1: tauto; only 1: rewrite fold_add_spec; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.partition_filter_2	40	0.062724	10	7	2.2.0	synth with cache (only 1: intros; only 1: apply eq_true_iff_eq; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Zodd_bit_value	40	3.305405	1406	369	1.2.0.1.0.2.0.3.1.0	synth with cache (only 1: destruct z; only 1: unfold bit_value; only 1: tauto || (intro H; elim H); only 1: unfold bit_value; only 1: destruct p; only 1: reflexivity; only 1: tauto || (intro H; elim H); only 1: reflexivity; only 1: intro H; only 1: now destruct p).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zrem_lt_neg	40	40.113067	16099	3400
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Incr.incr_twice	40	40.050610	12792	3713
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_Rsqr	40	40.131760	12869	3323
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rminmax.R.minus_min_distr_r	40	40.462511	8805	3543
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.remove_fold_1	40	2.727590	1339	534	0.0.0.0.0.1.6.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zrem_unique_full	40	0.029481	5	5	0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct (Zquot_mod_unique_full a b q r); only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsLUB.is_upper_bound_closed	40	41.571124	21301	5238
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkZmon_ok	40	40.163072	16348	1638
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.add_fold	40	40.116366	31409	7851
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring.Ring.ring_opp_add	40	40.036856	8443	1269
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.add_spec	40	40.126134	21976	3299
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.if_eqA_rewrite_r	40	40.053639	14077	2114
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.rel_prime_1	40	0.453047	87	26	1.1.0.1.1	synth with cache (only 1: constructor; only 1: auto with zarith; only 1: exists n; only 1: now Z.nzsimpl'; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRplus_lt_reg_r	40	40.063077	17737	3164
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.exp_increasing	40	40.080419	23651	5616
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcdiv_mult_l	40	40.998434	23640	3049
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_mod_plus_full	40	40.059486	19069	3600
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rplus_opp_r	40	40.108355	39772	2874
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qlt_le_weak	40	2.478819	1086	175	16.5	synth with cache (only 1: intro E; only 1: now apply Z.lt_le_incl).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.remove_spec	40	40.061383	18550	4471
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rminus_le	40	0.066727	7	7	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: replace r1 with (r1 - r2 + r2); only 1: pattern r2 at 3; only 1: replace r2 with (0 + r2); only 1: auto with real; only 1: auto with real; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_0_lt_gt_contravar	40	40.096019	23941	3229
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcmult_div_r	40	40.715630	14945	2367
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qle_lteq	40	4.293833	1237	237	5.2.3.3.3	synth with cache (only 1: split; only 1: unfold Qeq, Qmult; only 1: apply Z.lt_eq_cases; only 1: intuition; only 1: now apply Z.lt_le_incl).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.merge_avl_1	40	40.051945	15884	1824
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.NatOfZ	40	40.460232	68432	4561
coq-tactician-stdlib.8.11.dev	Coq.Reals.ClassicalDedekindReals.lowerUpper	40	40.453334	15903	9284
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.remove_fold_2	40	40.110901	31884	7472
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.union_list_ok	40	40.107161	34802	2858
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qinv_plus_distr	40	40.094602	10415	2677
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zgcd_alt.Zgcdn_ok_before_fibonacci	40	40.062244	16881	2806
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.eval_pol_add	40	42.497072	3223	436
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.linear_union_ok	40	40.040313	12250	775
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.NMORPHISM.gen_phiN_mult	40	40.041236	10173	2860
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zdiv_opp_opp	40	40.086948	28024	5913
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qclt_le_dec	40	0.463821	249	45	0.0.0.10	synth with cache (only 1: unfold Qcle, Qclt; only 1: unfold Qlt, Qle; only 1: intros; only 1: exact (Z_lt_le_dec (Qnum x * QDen y) (Qnum y * QDen x))).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.fold_union	40	40.072996	16106	8676
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.if_true	40	13.185709	1271	195	0.19	synth with cache (only 1: Bool.destr_bool; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Powers_of_2.two_power_pos_is_exp	40	40.064028	18630	1677
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_o	40	40.056110	13929	3609
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.compare	40	40.111275	31421	4254
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zmod_opp_opp	40	40.072890	16264	5117
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_lt_compat_r	40	40.092616	4367	1294
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_le_compat_l	40	40.067200	18885	2981
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.add_fold	40	40.116260	29978	7774
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.eval_pol_Pc	40	0.017994	2	2	0.0	synth with cache (only 1: intros; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.Padd_ok	40	40.033765	3259	613
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Powers_of_2.two_p_is_exp	40	40.103626	17998	3510
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rge_minus	40	8.384278	1318	370	0.0.0.0.3.3.4	synth with cache (only 1: unfold Rge; only 1: intuition eauto  3; only 1: left; only 1: apply (Rplus_lt_reg_l r2); only 1: replace (r2 + (r1 - r2)) with r1 by ring; only 1: now rewrite Rplus_0_r; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.le_ni_le	40	41.419475	30584	3727
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_le_compat_r	40	40.046437	5571	2462
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rle_max_compat_r	40	40.146482	5353	1719
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcle_trans	40	40.167061	22923	3247
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.filter_ok	40	40.073611	20358	2848
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.partition_filter_1	40	0.041335	8	7	0.0.0.0.0.1.0	synth with cache (only 1: intros; only 1: apply eq_true_iff_eq; only 1: split; only 1: intros; only 1: trivial; only 1: intros; only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.partition_filter_2	40	0.039730	8	7	1.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply eq_true_iff_eq; only 1: split; only 1: intros; only 1: trivial; only 1: intros; only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.fold_add_ok	40	40.790605	3833	448
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Zeven_bit_value	40	10.552283	6302	638	0.30.3	synth with cache (only 1: intros n Hn; only 1: apply Zeven_bool_iff in Hn; only 1: now destruct n as [| [| | ]| [| | ]]).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.zmon_pred_ok	40	40.045451	12602	1682
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Gauss	40	40.172352	7279	1058
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Cyclic63.div_lt	40	40.761341	29064	3724
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcabs.Qcabs_triangle	40	40.060146	14209	2963
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.RmaxRmult	40	40.107251	19469	3298
coq-tactician-stdlib.8.11.dev	Coq.Reals.Sqrt_reg.derivable_pt_lim_sqrt	40	40.066405	18261	5900
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.substring_correct1	40	40.107850	18797	3727
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Cyclic63.P	40	0.006827	3	1	2	synth with cache (only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetCompat.Update_WSets.Spec.add_spec	40	40.152080	60849	4943
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.is_empty_iff	40	0.115497	20	5	8	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_1	40	40.075759	24550	3785
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.singleton_iff	40	0.011061	2	1	1	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_inj_r	40	40.046443	12304	2659
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.MVT_cor3	40	40.044488	9115	6842
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_reg.derivable_pt_lim_sin_0	40	40.379904	23101	4551
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Pshiftl_nat_plus	40	40.068949	23213	4473
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_ih	40	40.085546	24376	4383
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.set_induction	40	40.066852	22717	2138
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_2	40	40.052803	12453	1829
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.multiplicity_eqA	40	40.370027	18224	2014
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.subset_cardinal	40	20.457203	9842	1752	30.3	synth with cache (only 1: intros x y H; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Ndiff_semantics	40	0.310152	129	70	8.1	synth with cache (only 1: rewrite <- !Ntestbit_Nbit; only 1: now rewrite <- N.ldiff_spec).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealGt_morph	40	41.459003	10531	3238
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Pxor_semantics	40	40.132595	24788	6574
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.PsubX_ok	40	40.290733	6875	3205
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_1_l	40	40.041302	8229	1240
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qnot_le_lt	40	0.716940	410	64	7.13	synth with cache (only 1: intros H; only 1: now apply Z.nle_gt).
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qlt_not_le	40	0.012415	5	1	4	synth with cache (only 1: apply Z.nle_gt).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ_opp	40	40.022715	5487	1230
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qle_not_lt	40	0.014322	6	1	5	synth with cache (only 1: apply Z.nlt_ge).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcomplements.Zlength_properties.Zlength_nil_inv	40	40.393453	46680	4207
coq-tactician-stdlib.8.11.dev	Coq.Logic.Diaconescu.ProofIrrel_RelChoice_imp_EqEM.proof_irrel_rel_choice_imp_eq_dec	40	40.161564	61148	4948
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLt_morph	40
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.filter_spec	40	40.159094	12885	2237
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.remove_fold_2	40	40.122468	34418	8440
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.set_induction_bis	40	40.155680	54220	4114
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Zlt_two_power_nat_S	40	3.098693	693	201	0.0.2.0.1.0.0.0.0.0	synth with cache (only 1: intros n z; only 1: rewrite (two_power_nat_S n); only 1: generalize (Zmod2_twice z); only 1: destruct (Zeven_odd_dec z) as [H| H]; only 1: rewrite (Zeven_bit_value z H); only 1: intros; only 1: lia; only 1: rewrite (Zodd_bit_value z H); only 1: intros; only 1: lia).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_mod_zero_opp_full	40	40.254727	28570	2412
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.multiplicity_InA_S	40	0.611292	58	22	0.1.0.3.0	synth with cache (only 1: intros l a; only 1: rewrite multiplicity_InA; only 1: inversion 1; only 1: auto with arith; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_gt_cos_7_8	40	41.354460	29115	3881
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_commutes	40	40.127247	46526	3016
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_eq_b	40	40.031341	6209	3334
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qclt_le_trans	40	40.221407	19886	5284
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_Ifp.R0_fp_O	40	40.034736	7930	2538
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.relative_non_contradiction_of_indefinite_descr	40	40.323802	133629	8235
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.to_ldec_tenfold	40	40.608605	8775	1918
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.NMORPHISM.gen_phiN_sub	40	40.051711	14543	3256
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Pshiftl_nat_N	40
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_inj_l	40	40.041478	10068	2892
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_add_r	40	40.044801	13223	2027
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.union_ok	40	40.424252	21490	2029
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRplus_le_compat_l	40	40.084720	18111	3477
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_neq_b	40	40.688621	23548	3962
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qlt_not_eq	40	32.464044	11870	1495	3.1.32	synth with cache (only 1: unfold Qeq, Qlt, Qcompare; only 1: intros LE EQ; only 1: Z.order).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLe_proper_l	40	0.655311	330	89	12	synth with cache (only 1: now unfold Zdiv.eqm; intros a b c ->).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_le_compat	40	40.822119	9862	1806
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLe_proper_r	40	0.291774	138	40	10	synth with cache (only 1: now unfold Zdiv.eqm; intros a b c ->).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.remove_b	40	40.170743	5300	2995
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword_Nwcons	40	1.258574	161	85	0.0.1.0.0.0.0.0.0.0	synth with cache (only 1: induction w; only 1: destruct n; only 1: simpl; only 1: norm; only 1: simpl; only 1: norm; only 1: intros; only 1: destruct n; only 1: norm; only 1: norm).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.add_iff	40	4.919035	2573	319	3.2.1.11.10	synth with cache (only 1: split; only 1: rewrite add_spec; only 1: intuition; only 1: intros; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_init	40	40.087635	15663	936
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_gt_0_lt_compat	40	40.074680	15761	4314
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_appart_morph	40	41.621062	12562	4761
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qle_lt_or_eq	40	3.569872	943	290	4.0.10	synth with cache (only 1: assert (R : forall n, 0%Z = n <-> n = 0%Z) by (intros; split; apply Z.eq_sym); only 1: intros n m; only 1: apply Z.lt_eq_cases).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_le_0_lt_compat	40	40.051665	12675	4677
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.nsatz1.PolZadd_correct	40	40.026597	6337	1829
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_b	40	40.084909	21740	5995
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_lt_mono	40	40.643479	13579	2040
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_oh	40	40.069272	17206	6351
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Qinv_power_positive	40	40.447817	11510	1646
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_int	40	40.046346	9926	4426
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qnot_lt_le	40	6.833223	4288	413	20.5.1.7	synth with cache (only 1: red; only 1: intro; only 1: intuition; only 1: Z.order).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_identity	40	40.039236	10716	2535
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_0_l	40	40.691624	2400	627
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.add_neq_iff	40	1.549445	482	114	2.2.5.0	synth with cache (only 1: rewrite add_spec; only 1: intuition; only 1: elim H; only 1: auto with relations).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_0	40	40.126404	46172	3664
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P1	40	40.741305	21205	3508
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_lt_0_compat	40	40.125627	15534	6419
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rlt_0_1	40	0.023486	3	3	0.0.0	synth with cache (only 1: replace 1 with (0 + 1); only 1: apply Rlt_n_Sn; only 1: apply Rplus_0_l).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.for_all_spec	40	40.064989	14970	2331
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rle_0_1	40	0.064175	16	6	0.2.0.2	synth with cache (only 1: replace 1 with 1²; only 1: auto with real; only 1: unfold Rsqr; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.Psub_ok	40	40.050468	11154	5949
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalString.NilEmpty.sis	40	40.065333	18260	4295
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.neg_pos_Rsqr_le	40	40.063397	17334	5339
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.nsatz1.PolZmul_correct	40	40.037792	4027	644
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.remove_fold_2	40	0.023418	4	3	0.1.0	synth with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_le_compat_neg_l	40	40.054679	5777	2283
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.eval_pol_mul	40	40.171391	11642	930
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_2	40	40.043409	10606	1816
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_cardinal_2	40	40.040109	12048	1322
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rgeom.law_cosines	40	40.073166	10276	2804
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nleb_refl	40	40.410787	42130	2864
coq-tactician-stdlib.8.11.dev	Coq.Reals.Exp_prop.div2_not_R0	40	38.483151	21396	3693	1.4.1.0.5.0.4.13	synth with cache (only 1: intro n; only 1: destruct n; only 1: inversion 1; only 1: destruct n; only 1: inversion 1; only 1: Nat.order'; only 1: intros _; only 1: apply Nat.lt_0_succ).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkVmon_ok	40	40.203175	12829	1221
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rseries.sequence.cauchy_bound	40	40.101312	34688	4298
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.join_find	40	40.056345	8882	2449
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_hi	40	40.176446	14437	3577
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nleb_antisym	40	40.312041	37665	3486
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZCoeff.InitialMorphism.phi_pos1_succ	40	40.583910	28372	2734
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis3.derive_pt_div	40	40.049763	11447	4933
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_1b	40	40.109533	33715	5592
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.exists_1	40	40.225786	26715	2069
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Remainder_equiv	40	40.087090	24363	3261
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_commutes	40	40.130516	47608	3064
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_mod_nz_opp_full	40	40.045828	12916	2991
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.fold_union	40	40.217660	17141	9037
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.remove_neq_iff	40	0.081707	27	7	0.3	synth with cache (only 1: rewrite remove_spec; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.constructive_indefinite_descr_fun_choice	40	40.189289	72199	8372
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.union_list_spec	40	40.073354	21366	3584
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.for_all_iff	40	0.029276	3	2	1.0	synth with cache (only 1: intros; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.exists_iff	40	0.028409	4	2	2.0	synth with cache (only 1: intros; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.elements_iff	40	0.010223	1	1	0	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rminus_gt	40	18.206676	4971	2162	0.0.0.5.3.0.0.0.0	synth with cache (only 1: intros; only 1: replace r1 with (r1 - r2 + r2); only 1: pattern r2 at 3; only 1: replace r2 with (0 + r2); only 1: pattern r2 at 3; only 1: unfold Rgt; only 1: auto with real; only 1: auto with real; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_eq_o	40	40.049726	11457	4583
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_succ	40	4.592176	2341	463	0.15.0.0	synth with cache (only 1: intros; only 1: unfold opp, to_Z; only 1: rewrite Zplus_mod_idemp_l; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qle_trans	40	40.129570	27712	3463
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.adherence_P2	40	40.174396	63231	6722
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rinv_lt_0_compat	40	3.309413	870	440	0.0.0.1.1.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Rnot_le_lt; only 1: red; only 1: intros; only 1: absurd (1 <= 0); only 1: auto with real; only 1: replace 1 with (r * / r); only 1: replace 0 with (r * 0); only 1: auto with real; only 1: ring; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_1_even	40	40.037788	9005	2478
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_mul_l	40	40.038910	10164	2463
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_in_1	40	40.034149	8946	2242
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.multiplicity_InA	40	40.095493	29274	3506
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.Induction.BS	40	40.302449	30552	3740
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.adherence_P3	40	40.090465	19651	7826
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.merge_avl	40	40.045697	11742	3186
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.compare_spec	40	40.320422	125247	3344
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_in_2	40	40.043651	11663	4345
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLt_proper_r	40	9.002891	3687	600	0.1.4.0.3.12.0	synth with cache (only 1: intros x y z; only 1: intro; only 1: destruct H; only 1: intro abs; only 1: apply (CReal_lt_le_trans _ x); only 1: assumption; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.micromega.QMicromega.Qeval_nformula_dec	40	40.492388	12709	2451
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_equal	40	40.120307	19510	1743
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmax_stable_in_negreal	40	40.060597	17355	4936
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_eq_b	40	40.033784	6986	4140
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.NMORPHISM.gen_phiN_morph	40	40.178065	7973	2873
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_neq_b	40	40.079789	23501	3532
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Zle_Qle	40	40.104816	32160	5420
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.tan_2PI	40	40.043479	9997	3929
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_succ_l	40
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLtProp_morph_Proper	40	40.401946	17842	6498
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.rel_prime_mult	40	40.035443	9367	1573
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_mul_r	40	40.044309	12053	1970
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.split_spec3	40	40.046120	13249	3201
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_lt_reg_l	40	40.136581	3360	1313
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLe_morph_Proper	40	40.303763	11677	4688
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.PI_2_aux	40	41.036353	14003	5601
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.rel_prime_cross_prod	40	40.244733	22752	3577
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.exists_2	40	40.177573	38719	2299
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.split_ok2	40	0.015468	4	3	0.0.1	synth with cache (only 1: destruct (@split_ok s x); only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.tech_Rgt_minus	40	1.980423	540	192	3.1.0.0.1.2	synth with cache (only 1: intros x y; only 1: intros; only 1: pattern x at 1; only 1: rewrite <- (Rplus_0_r x); only 1: apply Rplus_lt_compat_l; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.Psub_ok	40	40.477276	2797	1073
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_succ_c	40	40.068993	18414	6052
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_in_3	40	40.123350	5615	1508
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.singleton_spec	40	40.089421	27616	4620
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcle_lt_or_eq	40	40.404709	8624	1586
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_cardinal_2	40	40.083213	28200	2363
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_lex	40	40.782693	23572	2331
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zis_gcd_rel_prime	40	40.128607	23673	4063
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.nformula_plus_nformula_correct	40	40.074667	20589	5210
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.to_of_lu_tenfold	40	40.088522	10508	3153
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.elements_1	40	40.106789	36644	2818
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_lt_reg_r	40	40.794376	4417	1576
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.elements_2	40	40.112971	29879	4017
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.PmulI_ok	40	40.026486	6096	1978
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_add	40	13.217841	7542	2994	9.0.0.0.0.5.0	synth with cache (only 1: intros; only 1: apply fold_2 with (eqA := eqA); only 1: auto; only 1: auto; only 1: auto; only 1: auto; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRplus_le_compat_r	40	40.587579	16481	3308
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Incr.incr_twice_plus_one_firstl	40	40.112832	9238	2936
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.maj_ss	40	40.141450	50669	7005
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_1_odd	40	40.071439	13254	3326
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyBool.leZeroSpec_ok	40	40.082417	26218	4154
coq-tactician-stdlib.8.11.dev	Coq.Logic.WKL.WeakKonigsLemma	40	40.256002	22688	4758
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.tech_Rplus	40	19.276519	5629	2678	0.0.2.2.4.0.2	synth with cache (only 1: intros x y; only 1: intros; only 1: apply not_eq_sym; only 1: apply Rlt_not_eq; only 1: apply Rplus_le_lt_0_compat; only 1: assumption; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRplus_le_reg_r	40	40.292970	16703	3891
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.S_INR	40	2.161438	930	264	2.3.0.1.4	synth with cache (only 1: simpl; only 1: intros; only 1: destruct n; only 1: auto with real; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_le_reg_l	40	40.068960	7374	2291
coq-tactician-stdlib.8.11.dev	Coq.Reals.PSeries_reg.Ball_in_inter	40	40.114271	42125	4937
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_bst	40	40.105558	12646	3258
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_le_mono	40	40.258376	17662	1972
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreals.Q2R_plus	40	40.093460	13267	2074
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.remove_avl_1	40	41.278040	13384	2248
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_compat_l	40	40.390506	7583	1362
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.tearing_sequences_inc_dec	40	40.072967	19705	2728
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZCoeff.InitialMorphism.clt_pos_morph	40	40.153399	10467	1209
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.add_neq_b	40	0.787292	172	55	0.0.0.0.1.5	synth with cache (only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_iff s x y); only 1: destruct (mem y (add x s)); only 1: intuition; only 1: destruct (mem y s); only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.AltSeries.CV_ALT	40	40.107247	34575	6416
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.remove_neq_b	40	40.330096	6425	3851
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zeq_bool_eq	40	40.113995	31169	4040
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.tech7	40	40.068823	5597	1272
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Ropp_div	40	0.039833	3	3	0.0.0	synth with cache (only 1: intros x y; only 1: unfold Rdiv; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_mod_zero_opp_r	40	40.065432	22009	2673
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.pos_half_prf	40	0.025511	2	2	0.0	synth with cache (only 1: apply Rinv_0_lt_compat; only 1: prove_sup0).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.S_O_plus_INR	40	1.474355	294	112	0.1.0.0.4.0	synth with cache (only 1: intro n; only 1: case n; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.tech12	40	0.102730	43	16	2.1.1	synth with cache (only 1: intros Un pr; only 1: intros eps Heps; only 1: eassumption).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_le_reg_r	40	40.064182	12591	4504
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealGe_morph_Proper	40	39.562547	8309	2662	1.2.2.1.0.3.1.2.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros H1 H2; only 1: rewrite <- H in H2; only 1: rewrite <- H0 in H2; only 1: contradiction; only 1: intros H1 H2; only 1: rewrite H0 in H2; only 1: rewrite H in H2; only 1: contradiction).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetCompat.Update_WSets.Spec.remove_spec	40	40.108649	34481	4468
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.filter_mem	40	40.039153	8073	2760
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_nz	40	40.033494	3799	804
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.Wn_decreasing	40	40.112775	36722	6609
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.linear_union_spec	40	40.095398	33112	1548
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.dicho_lb_maj_y	40	40.094746	24307	7066
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_add_c	40	40.059898	15856	4530
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.tech11	40	40.458333	28082	2544
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetCompat.Update_WSets.Spec.elements_spec1	40	0.568154	559	84	2.2.9.0	synth with cache (only 1: split; only 1: vm_compute; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qabs.Qabs_diff_Qle_condition	40	40.065402	6291	665
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.Pmul_ok	40	40.051763	10760	5193
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_compat_r	40	40.084630	1695	710
coq-tactician-stdlib.8.11.dev	Coq.Reals.Cos_plus.reste2_cv_R0	40	40.054533	12779	7686
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.map_o	40	40.111363	21353	5113
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.remove_avl	40	40.067954	18942	3639
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Phi.phi_eqn1	40	40.987013	7522	1594
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.singleton_b	40	40.036884	7672	2852
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.neighbourhood_P1	40	1.606036	1000	212	9.5.1	synth with cache (only 1: unfold included; only 1: intros P Q H l; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.MaxRlist_P2	40	40.093088	31483	4338
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.union_spec	40	40.065498	9326	2056
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.union_b	40	40.032862	2477	1603
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.of_lu_0	40	40.056944	12822	4812
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Powers_of_2.two_p_S	40	40.089820	11251	3291
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring.Ring.ring_opp_opp	40	40.126522	26511	1179
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_mem_1	40	0.566850	143	69	1.0.0.1.0.2.0	synth with cache (only 1: intuition; only 1: apply for_all_1; only 1: auto; only 1: red; only 1: intros; only 1: revert H; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.fold_add_spec	40	40.082078	27092	1312
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.add_2	40	0.162588	92	27	2.1.4	synth with cache (only 1: intros; only 1: apply <- add_spec; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Phi.phi_twice_firstl	40	40.051880	6430	1969
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_assoc	40	42.391591	9490	1114
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring.Ring.ring_add_0_r	40	0.043772	5	4	0.0.1.0	synth with cache (only 1: intros x; only 1: rewrite (ring_add_comm x); only 1: rewrite ring_add_0_l; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.not_mem_iff	40	40.480634	35909	2071
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Phi.phi_eqn2	40	40.970248	6454	1274
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_init	40	40.047371	12256	1351
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.eval_pol_norm	40	40.303434	16888	3508
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.cosh_0	40	40.041907	10066	4338
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_equal	40	40.073524	17945	1596
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.map_b	40	40.065661	16884	5422
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.diveucl_spec	40	42.650690	13621	640
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_empty	40	40.100625	28550	8673
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmax_Rlt	40	40.060474	15524	7250
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.lt_spec.compare_empty_x	40	40.127579	42453	6353
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_1_abs	40	40.103446	11531	4220
coq-tactician-stdlib.8.11.dev	Coq.Strings.Byte.N.to_of_N_iff	40	40.068993	7325	1568
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.pr_nu_var2	40	40.067204	20545	5069
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rprod.RfactN_fact2N_factk	40	40.084434	17975	5060
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rlt_minus	40	40.068512	9244	2924
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.Mjump_pred_double	40	0.041022	5	4	0.1.0.0	synth with cache (only 1: apply Mphi_morph; only 1: intros; only 1: rewrite jump_pred_double; only 1: now jump_simpl).
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.Mjump_add	40	0.052520	8	5	0.0.0.0.3	synth with cache (only 1: apply Mphi_morph; only 1: intros; only 1: rewrite <- jump_add; only 1: f_equal; only 1: apply Pos.add_comm).
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_lt_le_mono	40	40.046101	12260	2343
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Zlt_Qlt	40	40.575720	39835	4892
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.bits_lt_antirefl	40	41.197331	52234	3441
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.rel_prime_div	40	40.182618	14295	1724
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.inter_b	40	40.230120	3112	1978
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Q2R_0	40	40.051356	14302	4927
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.Equal_refl	40	0.023936	6	3	0.0.3	synth with cache (only 1: intros; only 1: intro k; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Mcphi_ok	40	40.038742	10435	2909
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.mapi_b	40	40.059207	14576	4313
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.Equal_sym	40	0.070665	20	11	4.0.0	synth with cache (only 1: intros y z H1 H2; only 1: intro k; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_lt_tree	40	40.045561	11763	2982
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Pand_semantics	40	40.096406	21574	6364
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRcomplete.R_has_all_rational_limits	40	40.280273	115791	3895
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.eval_Psatz_Sound	40	40.069852	19445	4683
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.open_set_P2	40	3.222623	2877	543	8.0.6.7	synth with cache (only 1: intros x y; only 1: intros Ext EM A; only 1: intros; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.lt_spec.compare_x_empty	40	40.132282	35550	6744
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_pt_comp	40	40.524346	20039	4530
coq-tactician-stdlib.8.11.dev	Coq.Strings.Ascii.ascii_nat_embedding	40	41.299371	3185	715
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_gt_tree	40	40.049098	10290	3407
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.empty_iff	40	40.321742	73826	2873
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow1	40	1.236938	336	145	0.0.0.1.0.0.1.0.0	synth with cache (only 1: intro; only 1: induction n as [| n Hrecn]; only 1: field; only 1: replace (S n) with (n + 1)%nat; only 1: rewrite pow_add; only 1: rewrite Hrecn; only 1: simpl; only 1: ring; only 1: now Nat.nzsimpl').
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Pdiff_semantics	40	40.092297	27154	5977
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_facts.Zpower_le_monotone3	40	40.154230	5717	734
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.succ_spec	40	40.040613	14338	1235
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_zero	40	0.040382	8	7	0.0.0.0.0.0.1	synth with cache (only 1: intros; only 1: compute; only 1: constructor; only 1: symmetry; only 1: auto; only 1: symmetry; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_eq_cases	40	40.058457	17543	2080
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Phi.phi_twice_plus_one_firstl	40	40.115630	8886	2750
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.filter_mem	40	40.071335	10836	4151
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmax_neg	40	40.067109	14533	7311
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Ndouble_bit0	40	0.013703	3	2	1.0	synth with cache (only 1: intros n; only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_compare_fun	40	40.143250	54529	4137
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Ndouble_plus_one_bit0	40	0.012331	6	2	3.1	synth with cache (only 1: intros; only 1: now destruct n).
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_eq_0	40	40.625182	22310	2624
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.oppc_spec	40	0.009627	1	1	0	synth with cache (only 1: apply subc_spec).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_reg_l	40	40.040670	8210	2124
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.opp_spec	40	0.010487	1	1	0	synth with cache (only 1: apply sub_spec).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.increase_seq_transit	40	40.174174	36782	4953
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.mapi_o	40	40.060598	13319	5558
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.Equal_ST	40	0.028007	19	4	2.3	synth with cache (only 1: intros a; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword0_ok	40	40.064379	20441	1133
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_mod_nz_opp_r	40	40.757666	15233	2675
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreals.Q2R_mult	40	7.869335	1803	519	0.0.9.0.0.0.0.0	synth with cache (only 1: unfold Qplus, Qeq, Q2R; only 1: intros (x1, x2) (y1, y2); only 1: unfold Qden, Qnum; only 1: simpl; only 1: simpl_mult; only 1: do 2 rewrite mult_IZR; only 1: field; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_filter	40	40.049568	8500	1308
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PExpr_eq_semi_ok	40	40.064056	19656	2796
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zquot_mod_unique_full	40	40.309648	29450	2506
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.pos_Rl_P2	40	40.150150	26922	3627
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.addc_spec	40	43.387832	32605	1449
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qc_dec	40	40.826695	23278	3500
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_complete	40	40.072633	19080	5401
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.inter_spec	40	40.047274	13810	3686
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_R1_Rle	40	14.281128	4597	1657	0.1.7.1.0.0.0.0.0	synth with cache (only 1: intros x n; only 1: elim n; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: intros n0 H' H'0; only 1: replace 1 with (1 * 1); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Binomial.binomial	40	40.139247	25414	2625
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.Nwopp_ok	40	0.174641	35	8	2.0.4	synth with cache (only 1: induction x; only 1: norm; only 1: norm).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_filter	40	40.049111	12855	1687
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.elements_complete	40	40.105250	27503	6348
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Ndiv2_double	40	1.774231	804	328	0.3.0.0.0.0.0.3.0	synth with cache (only 1: intros; only 1: destruct n; only 1: simpl; only 1: auto; only 1: vm_compute in H; only 1: destruct p; only 1: discriminate; only 1: tauto; only 1: discriminate).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.split_ok	40	40.389078	5396	1517
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.succc_spec	40	42.385819	14439	733
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.relative_non_contradiction_of_definite_descr	40	40.200254	74765	8091
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.lt_trans	40	40.105233	36123	4546
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.union_spec'	40	40.051940	12327	2396
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rprod.INR_fact_lt_0	40	3.877296	1508	417	0.0.0.0.0.10.0	synth with cache (only 1: intro; only 1: apply lt_0_INR; only 1: induction n; only 1: simpl; only 1: auto with arith; only 1: simpl; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_mem_1	40	1.634523	650	261	1.2.0.0.0.3.3	synth with cache (only 1: intros; only 1: apply for_all_1; only 1: auto; only 1: red; only 1: intros; only 1: generalize (H x); only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rplus_0_l	40	40.789772	6144	673
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.addcarry_spec	40	40.045618	13232	2159
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.remove_2	40	0.201680	111	28	1.7.0	synth with cache (only 1: intros s x y H; only 1: rewrite remove_spec; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rlt_Rminus	40	40.102254	10513	2309
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.diff_spec	40	40.067075	18191	5343
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.lt_not_eq	40	40.102231	8906	1631
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.tech_limit	40	40.090782	29832	3116
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Algebra.poly_add_compat	40	40.313526	26138	2109
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rmult_comm	40	40.989002	5920	1002
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_add_carry_c	40	40.079860	22263	5056
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.addcarryc_spec	40	40.085496	13146	2097
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_le_lt_mono	40	40.040004	8995	2373
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rderiv.Dmult	40	40.067240	9543	5346
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.constructive_definite_descr_excluded_middle	40	40.195916	72847	6673
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_plus	40	40.068905	20102	5038
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.ni_le_le	40	40.121052	42839	4524
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.fun_reification_descr_computational_excluded_middle_in_prop_context	40	40.136551	42891	8315
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nleb_ltb_trans	40	40.158814	18971	2408
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Rings_R.Rsth	40	0.287694	73	44	0.0.1.0.0.0.0.2	synth with cache (only 1: constructor; only 1: constructor; only 1: unfold Symmetric; only 1: auto with *; only 1: unfold Transitive; only 1: intros x y z H1 H2; only 1: subst; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Mphi_ok	40	40.432938	12793	2900
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.split_ok1	40	40.035001	7249	885
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PExpr_eq_spec	40	40.075117	24121	3768
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_le_abs_0	40	40.067253	13459	5639
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_opp	40	40.085031	27521	4892
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.exists_spec	40	40.092616	20859	3145
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.fold_remove_ok	40	0.578639	45	26	0.0.0.0.0.0.0.1	synth with cache (only 1: rewrite fold_spec, <- fold_left_rev_right; only 1: unfold elt in *; only 1: induction (rev (elements s1)); only 1: simpl; only 1: auto; only 1: simpl; only 1: unfold flip in *; only 1: auto_tc).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_div_zero_opp_full	40	40.211616	17120	5613
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_minus	40	40.063937	18921	5431
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.lt_not_eq	40	40.391468	21745	2964
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_add	40	40.082181	20983	8611
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.to_of_lu	40	40.235942	21158	4982
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_const	40	5.910885	2587	833	0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0	synth with cache (only 1: unfold continuity; only 1: unfold constant, continuity_pt; only 1: unfold continue_in; only 1: unfold limit1_in; only 1: unfold limit_in; only 1: intros; only 1: exists 1; only 1: split; only 1: apply Rlt_0_1; only 1: intros; only 1: generalize (H x x0); only 1: intro; only 1: rewrite H2; only 1: simpl; only 1: rewrite R_dist_eq; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.eq_dec	40	0.023034	1	1	0	synth with cache (only 1: decide equality).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.singleton_2	40	1.056157	603	157	0.2.10	synth with cache (only 1: intros; only 1: apply <- add_spec; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.exists_filter	40	40.448820	17413	2983
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.ge_bool_cases	40	40.144984	55135	3596
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.add_fold	40	40.084847	20436	8921
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_le_abs_1	40	40.083329	10930	3894
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_find	40	40.113630	11024	2995
coq-tactician-stdlib.8.11.dev	Coq.Reals.Alembert.Alembert_C4	40	40.671131	24462	6740
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rminus_lt	40	40.049363	12766	4529
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rcase_abs	40	32.503121	10936	4007	0.0.0.0.0.0.0.0.0.0.9.5.0	synth with cache (only 1: intro; only 1: cut (r - IZR (up r) < 0); only 1: case (Rlt_le_dec r 0); only 1: intro; only 1: auto with real; only 1: intro; only 1: auto with real; only 1: elim (for_base_fp r); only 1: intros; only 1: rewrite <- Ropp_0; only 1: rewrite <- Ropp_minus_distr; only 1: apply Ropp_gt_lt_contravar; only 1: auto with zarith real).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.inter_list_ok	40	40.101026	28990	4604
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zquot_unique_full	40	40.061635	20050	1984
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_mult	40	40.050643	15364	2623
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLt_proper_l	40	40.107367	13015	1431
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_union_inter	40	40.086310	23685	8731
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Algebra.poly_mul_cst_compat	40	40.091806	28966	2979
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.substring_correct2	40	40.086456	27742	5547
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_succ_r	40	40.060546	18184	2421
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.Zunsat_sound	40	40.132733	40789	3158
coq-tactician-stdlib.8.11.dev	Coq.btauto.Reflect.Completeness.list_replace_nth_1	40	40.443143	24103	3382
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring.Ring.ring_sub_ext	40	37.907966	21886	2734	7.8.2.21	synth with cache (only 1: intros Hx; only 1: intros x y z; only 1: pattern (x - z)%Z; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.exists_filter	40	40.080167	25189	3067
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_inv	40	41.854636	11064	3894
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P1	40	40.119049	31573	3094
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_mem_2	40	4.947137	2288	587	0.4.2.4.0.2.1	synth with cache (only 1: intros; only 1: apply filter_2 with s; only 1: auto; only 1: rewrite <- (for_all_iff s (f:=f)) in H; only 1: revert H; only 1: auto with set; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Ndiv2_double_plus_one	40	6.407418	3859	851	0.0.4.0.0.1.0.7.2.0	synth with cache (only 1: destruct n; only 1: intros Hn; only 1: now N.nzsimpl; only 1: intro H; only 1: simpl; only 1: vm_compute in H; only 1: destruct p; only 1: easy; only 1: discriminate; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.linear_inter_ok	40	40.071217	22210	3357
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.filter_add_1	40	40.059823	2504	499
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis2.maj_term4	40	40.883011	17222	3367
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Qinv_power	40	40.153497	17149	2832
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_diff_inter	40	40.084235	22158	8340
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.Rsqr_pow2	40	0.674018	129	43	8.0	synth with cache (only 1: intros; only 1: ring_Rsqr).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_inv	40	3.732921	2288	641	0.0.3.0.4.10	synth with cache (only 1: red; only 1: intros a b c; only 1: intros n; only 1: apply continuity_pt_inv; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_empty	40	40.148194	26324	8401
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_incr	40	40.057665	17152	4172
coq-tactician-stdlib.8.11.dev	Coq.Logic.Diaconescu.ProofIrrel_RelChoice_imp_EqEM.proof_irrel_rel_choice_imp_eq_dec'	40	31.592528	22593	6792	1.0.0.0.0.0.0.0.0.2.0.1.0.1.1.0.0.1.0.0.0.0	synth with cache (only 1: destruct (rel_choice A' bool (fun x y => projT1 x = a1 /\ y = true \/ projT1 x = a2 /\ y = false)) as (R, (HRsub, HR)); only 1: intros [a [Ha1| Ha2]]; only 1: exists true; only 1: auto; only 1: exists false; only 1: auto; only 1: destruct (HR a1') as (b1, (Ha1'b1, _Huni1)); only 1: destruct (HR a2') as (b2, (Ha2'b2, Huni2)); only 1: destruct (HRsub a2' b2 Ha2'b2) as [(Ha2a1, _Hb2true)| (_, Hb2false)]; only 1: left; only 1: symmetry; only 1: assumption; only 1: destruct (HRsub a1' b1 Ha1'b1) as [(_, Hb1true)| (Ha1a2, _Hb1false)]; only 1: right; only 1: intro H; only 1: subst b1; only 1: subst b2; only 1: rewrite (projT1_injective H) in Ha1'b1; only 1: assert (false = true) by auto using Huni2; only 1: discriminate; only 1: left; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Zge_minus_two_power_nat_S	40	40.748496	28558	5404
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Z_quot_pos	40	40.251666	25370	2196
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_facts.Zpower_le_monotone_inv	40	40.257756	16268	1285
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.concat_in	40	40.105195	16021	2608
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.xnnormalise_correct	40	40.225390	23687	4981
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rminus_gt_0_lt	40	40.049347	10550	4893
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nbit0_correct	40	10.687788	9545	1418	6.1.0.15	synth with cache (only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: now destruct p).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.not_rel_prime_0	40	40.164128	29466	3345
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.exp_lt_inv	40	40.075012	22312	6356
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_div_nz_opp_full	40	40.025448	6960	1431
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.multiplicity_InA_O	40	40.088681	25456	3871
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRplus_lt_le_compat	40	40.088222	10618	3187
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_union	40	40.057763	11296	7725
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Ndiv2_correct	40	1.645864	744	330	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct a as [| [a| a| ]], n as [| n]; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now destruct n; only 1: trivial; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phibis_aux_pos	40	40.089286	31708	4373
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.map2_1bis	40	40.064669	19217	3708
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_abs_appart_zero	40	40.064155	10356	1125
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rmult_assoc	40	40.205306	6838	1007
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phibis_aux_bounded	40	40.067826	10081	1777
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qle_lt_trans	40	40.089145	26245	3256
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rminus_ge	40	40.077368	8109	3399
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_div	40	5.301446	4001	837	3.1.0.1.0.0.11.2	synth with cache (only 1: intros; only 1: intro Hnotz; only 1: rewrite (div_eq_inv f1 f2); only 1: apply continuity_pt_mult; only 1: trivial; only 1: apply continuity_pt_inv; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.filter_add_2	40	40.128547	3748	760
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.concat_bst	40	40.083143	18775	4913
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.i2l_length	40	0.008646	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ClassicalDedekindReals.DRealOpen	40	40.523056	22996	5307
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.l2i_i2l	40	0.030962	14	4	0.1.3	synth with cache (only 1: Bool.destr_bool; only 1: destruct x; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qlt_le_trans	40	40.274367	15001	4018
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.POneSubst_ok	40	40.193018	12880	650
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zgcd_alt.Zgcd_bound_fibonacci	40	40.101295	34452	4627
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.fold_spec	40	40.094239	33928	3035
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Q2R_1	40	40.077865	19087	3265
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_div_zero_opp_r	40	40.074501	25208	4502
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qlt_trans	40	40.058202	15884	3529
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rlt_plus_1	40	24.619815	7943	3888	20.0	synth with cache (only 1: intro; only 1: apply Rlt_n_Sn).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Powers_of_2.two_p_pred	40	40.083856	25101	4501
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.cardinal_spec	40	40.059357	20886	1961
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword_cons	40	40.071965	5455	1036
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEadd_ok	40	40.082845	15927	2253
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zgcd_alt.Zgcd_bound_opp	40	0.164931	140	17	5.10	synth with cache (only 1: Nat.bitwise; only 1: now destruct a).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_rat	40	40.542658	13299	5729
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.i2l_sneakl	40	0.078340	5	4	0.1.0.0	synth with cache (only 1: destruct x; only 1: simpl; only 1: intros; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.join_avl_1	40	40.326394	9767	2534
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.inter_ok	40	40.075696	18715	4586
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.concat_find	40	40.112742	25247	4100
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.add_filter_1	40	40.034467	4792	704
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcopp_le_compat	40	41.220630	23455	2950
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.inter_list_spec	40	40.052689	15359	3000
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.i2l_sneakr	40	0.998315	179	40	0.1.9	synth with cache (only 1: intros n; only 1: elim n; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis5.f_incr_implies_g_incr_interv	40	40.127513	12621	5336
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_div_nz_opp_r	40	40.032799	8648	2284
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsLUB.sig_lub	40	43.222764	65418	4088
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.INR_not_0	40	0.160544	54	20	0.1.0.1	synth with cache (only 1: Bool.destr_bool; only 1: intro H1; only 1: rewrite H1 in H; only 1: now apply H).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcle_minus_iff	40	41.302757	14426	2631
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.xnormalise_correct	40	40.065773	17010	4641
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.add_filter_2	40	40.056244	3373	717
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.Pmul_ok	40	40.034363	3888	1399
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.rel_prime_le_prime	40	0.555330	139	49	1.7	synth with cache (only 1: induction 1; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rle_0_sqr	40	40.086337	19335	4181
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.power_div_with_rest.Zdiv_rest_correct1	40	40.097036	26666	1585
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.elements_o	40	40.058424	16550	3498
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool'.Comp'	40	0.505192	29	6	8	synth with cache (only 1: solve_proper).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis5.derivable_pt_id_interv	40	0.105835	15	9	2.1	synth with cache (only 1: intros; only 1: apply derivable_pt_id).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.Nplength_lb	40	40.121592	38686	6281
coq-tactician-stdlib.8.11.dev	Coq.Strings.Ascii.nat_ascii_embedding	40	40.115187	18828	2521
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.PNSubst1_ok	40	40.063978	14484	2706
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.filter_add_1	40	40.013577	2931	809
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qclt_minus_iff	40	40.389289	18842	2682
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_Ifp.Rminus_Int_part1	40	40.118724	14919	1337
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcabs.Qcabs_Qcmult	40	40.057353	17832	2203
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rlt_0_sqr	40	40.081913	23744	5266
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.tail00_spec	40	0.009796	1	1	0	synth with cache (only 1: now intros h; rewrite (to_Z_inj _ 0 h)).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.Induction.Zbounded_induction	40	40.155474	41767	3692
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_R0	40	40.125272	29023	2014
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_sqr_eq_0_l	40	40.655984	15063	2720
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_nonneg	40	40.170364	5112	433
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetCompat.Update_WSets.Spec.singleton_spec	40	40.222755	90289	5926
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Cyclic63.shift_unshift_mod_3	40	40.743376	5616	3439
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.rel_prime_mod	40	40.387573	25931	3033
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_sqr_eq_0	40	40.068579	6899	1708
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcabs.Qcabs_Qcminus	40	40.128137	10370	3565
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CRealShiftReal	40	12.207698	5532	1508	0.5.4.12	synth with cache (only 1: intros a b; only 1: destruct a; only 1: intros k p r H H0; only 1: auto with *).
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_lem_0	40	40.082990	18246	3310
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.add_spec	40	40.065893	20936	2974
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.prefix_correct	40	40.657711	22589	3544
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_def	40	0.039655	6	6	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold sqrt; only 1: destruct (Rcase_abs x) as [Hlt| Hge]; only 1: elim (Rlt_irrefl _ (Rlt_le_trans _ _ _ Hlt H)); only 1: rewrite Rsqrt_Rsqrt; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Sqrt_reg.derivable_pt_sqrt	40	40.090368	28147	5821
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.Rolle	40	40.097846	33297	4573
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.partition_inf1	40	40.057751	14963	4228
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Pbit_faithful_0	40	40.092471	29922	4119
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.Comp'	40	0.564535	298	52	0.7.2.6	synth with cache (only 1: intros a; only 1: intros; only 1: f_equal; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcpower_0	40	2.096517	923	260	1.1.0.0.3.1.0.4	synth with cache (only 1: Nat.cases ltac:(n); only 1: intro H; only 1: now elim H; only 1: Nat.cases ltac:(n); only 1: intro H; only 1: trivial; only 1: intro H; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.inject_Q_morph_T	40	1.230430	307	128	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intros [n abs]; only 1: simpl in abs; only 1: rewrite H in abs; only 1: unfold Qminus in abs; only 1: rewrite Qplus_opp_r in abs; only 1: discriminate abs; only 1: intros [n abs]; only 1: simpl in abs; only 1: rewrite H in abs; only 1: unfold Qminus in abs; only 1: rewrite Qplus_opp_r in abs; only 1: discriminate abs).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Pbit_faithful	40	40.109122	30334	6868
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEsub_ok	40	40.084618	11772	2651
coq-tactician-stdlib.8.11.dev	Coq.Reals.Sqrt_reg.derive_pt_sqrt	40	1.046614	316	170	0.1.6.0	synth with cache (only 1: intros; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_sqrt; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Map.map_height	40	0.279521	119	34	0.0.0.0.9	synth with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_reg.derivable_pt_lim_cos_0	40	40.041142	9509	5493
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.linear_inter_spec	40	40.211866	22926	2143
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ_mul	40	40.074320	4885	2287
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.filter_add_2	40	40.029966	7562	1570
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.cardinal_1	40	40.401616	27276	3456
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring.Ring.ring_add_assoc2	40	10.288577	3457	534	2.0.0.17.0	synth with cache (only 1: intros; only 1: rewrite (ring_add_comm y); only 1: rewrite <- (ring_add_assoc x); only 1: rewrite (ring_add_comm x); only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.add_filter_1	40	40.029264	6198	1450
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zdiv_mult_cancel_r	40	40.082870	24784	4572
coq-tactician-stdlib.8.11.dev	Coq.Reals.PSeries_reg.Boule_center	40	25.138833	30762	2936	13.0.20.1.3.6	synth with cache (only 1: intros P H; only 1: unfold Boule; only 1: unfold Rminus; only 1: rewrite Rplus_opp_r; only 1: rewrite Rabs_R0; only 1: apply H).
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.mkZmon_ok	40	20.907891	7927	605	0.1.0.0.0.0.1.0.0.24.15.1	synth with cache (only 1: simpl; only 1: revert l; only 1: induction M; only 1: simpl; only 1: intros; only 1: intuition; only 1: simpl; only 1: intros; only 1: Esimpl; only 1: simpl; only 1: intros; only 1: rsimpl).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_plus	40	40.048117	18770	1755
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.multiplicity_NoDupA	40	40.516894	22438	3838
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ_ext	40	0.029250	4	3	1.0.0	synth with cache (only 1: intros x y H7; only 1: subst; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.add_fold	40	40.082208	19543	9382
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.add_filter_2	40	40.195547	5111	1512
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.PNSubst_ok	40	40.059562	11274	4647
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.PowerRZ.Zpower_NR0	40	8.760752	4979	1279	12.0.1.1.0.0.3	synth with cache (only 1: intros a n; only 1: elim n; only 1: simpl; only 1: intro; only 1: Z.order'; only 1: simpl; only 1: auto with zarith real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRplus_eq_reg_l	40	40.061941	17291	4570
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_Ifp.Rminus_Int_part2	40	40.031628	6906	4579
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.COHERENT_VALUE.binary_to_Z_to_binary	40	40.391847	20510	5836
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_O	40	0.040036	3	2	1.0	synth with cache (only 1: intro; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcplus_le_compat	40	40.074371	23257	4299
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_right	40	19.231698	5078	2111	0.0.5.0.1.0.4.0	synth with cache (only 1: intros; only 1: unfold Rabs; only 1: case (Rcase_abs r); only 1: intro; only 1: absurd (r >= 0); only 1: auto with real; only 1: assumption; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.not_prime_0	40	0.735706	229	29	0.0.18	synth with cache (only 1: intros (H, _); only 1: contradict H; only 1: discriminate).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nbit_faithful	40	40.121565	40464	6709
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_1	40	0.139949	29	8	2.4	synth with cache (only 1: simpl; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.elements_b	40	40.068586	14097	3886
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.remove_fold_1	40	40.096231	25630	8761
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Q_dec	40	40.069277	17865	2073
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_pi2	40	40.224169	13319	5088
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.to_of_lu_tenfold	40	40.087034	21893	5171
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.partition_inf2	40	40.077014	11797	5372
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.empty_cardinal	40	0.023787	6	4	0.0.0.2	synth with cache (only 1: rewrite cardinal_fold; only 1: apply fold_1; only 1: exact eq_equivalence; only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.Nadd_alt	40	40.066794	9602	1849
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword_ok	40	40.067131	22033	1560
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.ConstCauchy	40	40.311854	13059	1847
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nneg_bit0_2	40	0.087817	52	16	0.1.0.4	synth with cache (only 1: intros; only 1: apply Nneg_bit0; only 1: rewrite H; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.diff_list_ok	40	24.780401	14370	2786	0.1.0.0.0.0.0.0.0.0.2.3.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: revert l2 acc; only 1: induction l1 as [| x1 l1 IH1]; only 1: simpl; only 1: eauto; only 1: induction l2 as [| x2 l2 IH2]; only 1: intros acc inv; only 1: eapply INV_rev; only 1: eauto; only 1: intros acc inv; only 1: simpl; only 1: case X.compare_spec; only 1: intro C; only 1: apply IH1; only 1: eapply INV_drop; only 1: eapply INV_sym, INV_drop, INV_sym; only 1: eauto; only 1: intro C; only 1: apply (IH2 acc); only 1: eapply INV_sym, INV_drop, INV_sym; only 1: eauto; only 1: intro C; only 1: apply IH1; only 1: eapply INV_sym, INV_lt; only 1: now apply INV_sym; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qarchimedean	40	40.074734	24157	1683
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qlt_le_dec	40	40.384709	24898	2773
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRplus_eq_reg_r	40	40.036001	6967	4400
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.nsatz1.R_power_theory	40	40.162416	3243	928
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.not_1_INR	40	3.183084	1179	349	5.2.1.1	synth with cache (only 1: red; only 1: intros n H H1; only 1: apply H; only 1: now apply not_INR in H).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.cardinal_fold	40	40.170879	68255	2763
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.diff_b	40	40.023106	4375	3059
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.MapsTo_1	40	0.026140	3	1	2	synth with cache (only 1: congruence).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Qdiv_power	40	40.119690	15727	2744
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_pos_pos	40	40.629330	15599	1975
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.find_1	40	0.008760	2	2	0.0	synth with cache (only 1: intros; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalString.NilZero.uint_of_string_nonnil	40	40.357384	26023	7603
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qopp_le_compat	40	40.079003	19348	2986
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Mapi.mapi_height	40	0.028193	3	3	0.0.0	synth with cache (only 1: destruct m; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.find_2	40	0.023248	2	2	0.0	synth with cache (only 1: unfold MapsTo; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.empty_1	40	0.030696	9	3	2.2	synth with cache (only 1: rewrite Empty_alt; only 1: exact gempty).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.not_prime_1	40	2.315186	1074	105	0.0.22	synth with cache (only 1: destruct 1; only 1: contradict H; only 1: discriminate).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.mem_proper	40	40.147320	9068	1415
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.remove_iff	40	40.079749	24368	2936
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_pos_pos_le	40	40.129331	11566	4065
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PCond_cons_inv_l	40	4.705815	1258	313	0.2.0.0.8.4	synth with cache (only 1: simpl; only 1: destruct l1; only 1: intros; only 1: trivial; only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.cardinal_0	40	40.133842	51201	3904
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.Equalities.Equal_mapsto_iff	40	40.070195	21074	3725
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rinv_0_lt_compat	40	40.368487	9240	5302
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.add_1	40	40.076681	23570	4397
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_lt_abs_0	40	40.069957	18403	5244
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_union_inter	40	40.096425	26550	7770
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.nsatz1.norm_correct	40	40.098945	8430	1143
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P2	40	40.807107	38771	3978
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.inject_Q	40	40.667263	111010	5474
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.cardinal_1	40	40.126315	42836	2645
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rgeom.triangle	40	40.036157	10226	2897
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus	40	0.006113	1	1	0	synth with cache (only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.Equalities.Equal_Equiv	40	40.068420	19114	3405
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_diff_inter	40	40.120832	17915	7585
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nltb_leb_trans	40	40.425319	33098	5036
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nbit_faithful_iff	40	40.104902	28915	5595
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PCond_cons_inv_r	40	4.994853	2383	341	7.3.0.12.1	synth with cache (only 1: red; only 1: destruct l1; only 1: reflexivity; only 1: simpl; only 1: now f_equiv).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rgeom.translation_0	40	0.048132	5	3	1.0.1	synth with cache (only 1: split; only 1: eauto with real; only 1: eauto with real).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nltb_trans	40	40.219894	30700	5964
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_union	40	40.058669	13590	8859
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rinv_lt_contravar	40	40.322711	8744	3011
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.union_filter	40	40.041175	2204	497
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalString.NilZero.sus	40	40.066328	17959	4762
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rinv_1_lt_contravar	40	40.041509	10666	1717
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZCoeff.InitialMorphism.clt_morph	40	40.794452	26791	3405
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalString.NilZero.usu_nil	40	0.008522	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rseries.GP_infinite	40	40.078477	23855	6587
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.E_ST	40	1.678254	1845	349	6.0.8.1.0.2.6.0.5.0	synth with cache (only 1: constructor; only 1: red; only 1: intros; only 1: trivial; only 1: red; only 1: intros; only 1: auto; only 1: red; only 1: intros x y z; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.Psquare_ok	40	40.041613	8927	4326
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.absurd_PCond_bottom	40	0.805413	359	89	12	synth with cache (only 1: now f_equiv).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zdiv_mult_cancel_l	40	40.062089	19500	4007
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.partition_ok1	40	40.136668	11491	2105
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Z_quot_lt	40	40.169227	12634	1308
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CRealArchimedean	40	40.294551	30190	2007
coq-tactician-stdlib.8.11.dev	Coq.Reals.Exp_prop.Reste_E_maj	40	41.631526	12683	5980
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rle_lt_0_plus_1	40	40.043142	9390	5030
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_add	40	40.103052	32784	4129
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zplus_mod_idemp_r	40	0.019471	3	3	0.0.0	synth with cache (only 1: intros; only 1: rewrite Zplus_mod, Zmod_mod, <- Zplus_mod; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.mem_find	40	40.529506	22667	4073
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.mem_b	40	40.363442	25231	2166
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qplus_le_r	40	13.319324	1458	582	0.0.0.0.0.0.1.0.0.0.0.1	synth with cache (only 1: rewrite (Qplus_comm z x), (Qplus_comm z y); only 1: split; only 1: intros; only 1: rewrite <- (Qplus_0_r x), <- (Qplus_0_r y), <- (Qplus_opp_r z); only 1: do 2 rewrite Qplus_assoc; only 1: apply Qplus_le_compat; only 1: auto with *; only 1: auto with *; only 1: intros; only 1: apply Qplus_le_compat; only 1: auto with *; only 1: auto with *).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_plus	40	40.045491	16670	1552
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.subc_spec	40	40.060093	16123	3595
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qle_minus_iff	40	40.130447	13036	2346
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_InA_InA	40	40.100950	23670	3549
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.open_set_P1	40	40.086719	28939	6302
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLt_0_1	40	40.108193	41166	2916
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.tech_limit_contr	40	40.807628	18740	6086
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.find_m_Proper	40	11.554199	4455	1029	1.0.2.1.11.2	synth with cache (only 1: intros k k' Hk m m' Hm; only 1: rewrite eq_option_alt; only 1: intro e; only 1: rewrite <- 2!find_mapsto_iff; only 1: rewrite (MapsTo_iff m e Hk), find_mapsto_iff, find_mapsto_iff, Hm; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.Induction.B_holds	40	40.170094	47089	3688
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_R1	40	40.083343	14275	2798
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.sin_cos_PI4	40	40.052133	13013	4111
coq-tactician-stdlib.8.11.dev	Coq.micromega.QMicromega.QWeakChecker_sound	40	40.641985	54687	4138
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.inter_spec	40	40.078966	21867	3530
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.min_l	40	40.031232	8848	1521
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_nth	40	3.350531	575	138	0.13	synth with cache (only 1: intros (a, b) (c, d); only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_no_R0	40	40.356710	7599	3169
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.add_0_l	40	0.176949	16	5	3.1.1	synth with cache (only 1: intro n; only 1: zify; only 1: apply NZ_to_Z_mod).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEopp_ok	40	40.127130	25979	3052
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.cardinal_fold	40	40.191368	76101	3443
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.PSubstL1_ok	40	40.063246	20093	3510
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.open_set_P4	40	0.027330	4	2	2.0	synth with cache (only 1: intros P H; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.union_filter	40	40.420460	3843	914
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.empty_cardinal	40	0.018784	6	2	0.4	synth with cache (only 1: apply cardinal_1; only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.mkX_ok	40	15.147270	2407	214	30.2.1	synth with cache (only 1: intros; only 1: simpl; only 1: Esimpl2).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_opp	40	0.005669	3	1	2	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.Empty_alt	40	40.110251	37180	3987
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.Nwadd_ok	40	40.187281	10631	2505
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qlt_minus_iff	40	40.261846	13743	2660
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.Equalities.Cmp.Equiv_Equivb	40	40.071252	18281	4132
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.In_compat	40	0.108531	49	14	8.0	synth with cache (only 1: intros x x' Hxx' y y' Hyy'; only 1: now rewrite Hxx', Hyy').
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_injectQPos	40	40.167287	15303	1997
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.rel_prime_mod_rev	40	40.069189	23402	2226
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.closed_set_P1	40	41.014770	22589	7355
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_aux_mapsto	40	40.053045	4124	766
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.cnf_of_list_correct	40	44.910802	24606	2658
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.inter_spec_ok	40	40.035814	9817	2196
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.join_avl	40	40.040484	9811	2736
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.pi2_int	40	40.064673	19213	3647
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.GEN_DIV.radd_ext_Proper	40	0.006664	1	1	0	synth with cache (only 1: exact (Radd_ext Reqe)).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin2	40	0.031639	3	3	0.0.0	synth with cache (only 1: intros x; only 1: rewrite <- (sin2_cos2 x); only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_add_carry	40	40.091289	30115	3432
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_bounded	40	41.176372	4344	897
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.cardinal_2	40	40.101511	35360	3526
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.Mphi_morph	40	40.084538	22693	1421
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_mapsto	40	40.088005	26732	5519
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.empty_b	40	40.300809	60447	4656
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.Equalities.Equal_Equivb	40	40.053483	12527	3129
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.Equalities.Equal_Equivb_eqdec	40	40.074908	17512	4348
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_le_l	40	2.113132	185	96	0.0.0.0.0.0.0.1	synth with cache (only 1: rewrite (Qmult_comm z x), (Qmult_comm z y); only 1: split; only 1: intro; only 1: now apply Qmult_lt_0_le_reg_r with z; only 1: intro; only 1: apply Qmult_le_compat_r; only 1: auto with *; only 1: auto with qarith).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.pred_spec	40	42.683081	20560	1236
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_in	40	40.111630	31748	4659
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.Psquare_ok	40	40.334098	2614	896
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.prime_divisors	40	40.151656	9413	1301
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_pred	40	0.197267	73	31	1.4.0.0	synth with cache (only 1: intros; only 1: unfold succ, to_Z, Z.succ; only 1: symmetry; only 1: apply Zplus_mod_idemp_l).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.Empty_Node	40	40.258634	10549	1891
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.to_of	40	40.084151	23502	6513
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.xfilter_spec	40	40.054144	15353	3853
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.arb_nrr_rb	40	0.288227	270	49	0.0.14	synth with cache (only 1: destruct 1; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.sinh_0	40	40.513493	17124	3805
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEpow_ok	40	40.246368	13907	1845
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zrel_prime_neq_mod_0	40	41.037381	22407	4251
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.extract_hyps_app	40	40.067473	17518	5433
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.filter_union	40	40.017129	2958	762
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.add_b	40	40.139785	18829	3395
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLtQ	40	41.561747	22406	3462
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.belowMultiple	40	2.690621	1323	232	0.0.0.11.1	synth with cache (only 1: intros n m; only 1: induction 1; only 1: now rewrite Nat.mul_1_l; only 1: simpl; only 1: trivial using Nat.le_add_r).
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.Vn_growing	40	40.119118	27507	4129
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_cons_InA	40	21.888525	19341	3322	0.0.1.0.3.1.1.2.12	synth with cache (only 1: intros l1 l2; only 1: intro a; only 1: unfold permutation, meq; only 1: simpl; only 1: intros H; only 1: rewrite multiplicity_InA; only 1: specialize (H a); only 1: rewrite if_eqA_refl in H; only 1: omega).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcmult_le_compat_r	40	41.167748	17463	2632
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.of_uint_norm	40	0.920064	348	140	0.0.0.0.0.0.0.0.0.0.0.4	synth with cache (only 1: induction d; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.Rle_pow	40	40.049359	8978	4542
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.flatten_e_elements	40	0.103390	7	6	0.1.0.0.0.0	synth with cache (only 1: simpl; only 1: unfold elements; only 1: simpl; only 1: intros; only 1: rewrite !elements_app, !app_nil_r, !app_assoc_reverse; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.GEN_DIV.rmul_ext_Proper	40	1.870299	395	82	14	synth with cache (only 1: exact (Rmul_ext Reqe)).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.GEN_DIV.ropp_ext_Proper	40	0.007576	3	1	2	synth with cache (only 1: exact (Ropp_ext Reqe)).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.GEN_DIV.rsub_ext_Proper	40	0.010912	4	1	3	synth with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.plus_INR	40	40.054301	14289	4901
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.arb_nr_rb	40	1.027958	868	151	1.10.3.0.1	synth with cache (only 1: destruct 1; only 1: auto; only 1: intros; only 1: destruct H; only 1: invrb).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRopp_involutive	40	40.488801	20367	3098
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.to_uint_inj	40	40.147132	53804	3922
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_pos_nonneg	40	40.301078	9230	1775
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.MapsTo_m_Proper	40	31.212095	17551	3506	1.1.3.0.1.4.0.3.3	synth with cache (only 1: intros k k' Hk m m' Hm; only 1: rewrite Equal_mapsto_iff; only 1: split; only 1: rewrite H; only 1: apply MapsTo_1; only 1: trivial; only 1: rewrite H; only 1: apply MapsTo_1; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zgcd_alt.Zgcdn_opp	40	20.602972	10337	1168	4.4.0.4.11.9.0.0.2.28	synth with cache (only 1: case n; only 1: Z.bitwise; only 1: trivial; only 1: intros; only 1: Z.bitwise; only 1: simpl; only 1: destruct a; only 1: trivial; only 1: reflexivity; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_aux_sort	40	40.092055	27231	3547
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRopp_gt_lt_contravar	40	40.482361	13055	2074
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.filter_union	40	40.100561	1858	462
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.remove_b	40	40.139400	5644	3060
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zeq_bool_neq	40	40.150020	47129	4468
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.decrease_seq_transit	40	40.104916	32808	5872
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZCoeff.InitialMorphism.Zcleb_morph	40	40.070596	17228	5124
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Boule_half_to_interval	40	40.113499	19093	5098
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.minus_INR	40	40.074737	22125	3775
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.cardinal_0	40	40.096643	35426	3657
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.scal_sum	40	40.104013	35145	5024
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zmult_mod_distr_l	40	40.137495	13598	1974
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.mult_INR	40	40.375487	14217	3794
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLtQopp	40	40.529658	17036	6284
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.remove_neq_b	40	36.063945	4805	2770	0.2.0.10.0	synth with cache (only 1: intros; only 1: generalize (mem_iff (remove x s) y), (mem_iff s y), (remove_iff s x y); only 1: intuition; only 1: apply eq_true_iff_eq; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zminus_mod_idemp_r	40	0.022540	4	3	0.1.0	synth with cache (only 1: intros; only 1: rewrite Zminus_mod, Zmod_mod, <- Zminus_mod; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.Mjump_xO_tail	40	40.087038	13725	1260
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.elements_b	40	40.287349	6105	3779
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetCompat.Update_WSets.Spec.for_all_spec	40	40.122064	42598	3825
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.dicho_lb_maj	40	40.126628	30441	7037
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_pred_c	40	40.115402	16045	5786
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_mult	40	37.845683	18057	4614	5.7.4.1.1.0	synth with cache (only 1: unfold continuity; only 1: unfold continuity_pt, mult_fct; only 1: intros; only 1: apply limit_mul; only 1: apply H; only 1: apply H0).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.pow_INR	40	40.037485	10843	1765
coq-tactician-stdlib.8.11.dev	Coq.Reals.Cos_plus.reste_cv_R0	40	40.056726	13382	7545
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.eqk_equiv	40	7.603925	2603	832	11.1.9.9	synth with cache (only 1: vm_compute; only 1: dintuition; only 1: red; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.AltSeries.alternated_series	40	41.134842	32869	6118
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phibis_aux_lowerbound	40	40.410073	15209	2834
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.concat_avl	40	40.054298	15052	3312
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.decomp_sum	40	40.485583	26536	2819
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.Vn_Un_Wn_order	40	40.560270	28871	7015
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_mem_2	40	40.067472	20757	3192
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.Rlist_P1	40	40.156723	53655	4271
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.power_div_with_rest.Zdiv_rest_correct2	40	40.031436	7874	1923
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.lt_INR	40	40.099109	19874	4469
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.filter_b	40	40.083429	3030	2236
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.add_3	40	40.102373	33567	3229
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.inject_Q_compare	40	40.396493	42426	5008
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring.Ring.ring_add_assoc1	40	40.149353	10643	1628
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.lt_0_INR	40	40.635821	21918	5544
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.union_3	40	1.076887	480	110	10.0.0	synth with cache (only 1: intros; only 1: apply <- union_spec; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_add_distr_r	40	40.055305	17614	1773
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.split_avl	40	40.045065	11035	4645
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.simpl_cos_n	40	40.065264	8377	1383
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.to_of_lu	40	40.070182	19076	3860
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.filter_spec	40	40.072860	21068	5052
coq-tactician-stdlib.8.11.dev	Coq.Strings.Byte.N.to_of_N_option_map	40	40.061754	10635	1029
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.Rup_pos	40	40.124353	5932	1010
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.for_all_b	40	40.044930	4878	2687
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.derivable_inv	40	40.093367	29500	6574
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_left	40	40.211875	9426	3390
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_nonneg_pos	40	40.043402	9610	1899
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEmul_ok	40	40.042508	11801	3543
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CRealLtDisjunctEpsilon	40	40.153503	27035	2966
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Q2R_inv_ext	40	40.066514	21772	3101
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_sort	40	40.301327	63198	2742
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.diff_inter_ok	40	40.145824	13785	2276
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.predc_spec	40	40.085691	13522	2657
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.Equal_trans	40	40.052006	14295	4197
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_minus	40	41.287012	8210	4028
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRcomplete.Rcauchy_complete	40	40.147357	56927	2811
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.open_set_P3	40	40.064624	16864	7191
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_lowerbound	40	40.032057	8314	1814
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.compare	40	40.769046	42678	5390
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_Rabs	40	40.042495	11525	4329
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_facts.Zpower2_lt_lin	40	40.093329	26512	3983
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_size	40	40.088058	19338	2363
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qplus_le_compat	40	40.074488	10512	3488
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.cardinal_1	40	40.147254	55611	3092
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.exists_b	40	40.403566	6640	3765
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.cardinal_2	40	40.099874	33037	4434
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.min_r	40	40.043065	4749	1091
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.remove_spec	40	40.063238	19105	3620
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.nhyps_of_psatz_correct	40	40.351850	26632	3616
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.cardinal_Empty	40	40.091955	25489	8794
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qplus_lt_r	40	18.073465	2573	1071	0.0.0.0.0.0.2.0.0.0.0.1	synth with cache (only 1: rewrite (Qplus_comm z x), (Qplus_comm z y); only 1: split; only 1: intro E; only 1: rewrite <- (Qplus_0_r x), <- (Qplus_0_r y), <- (Qplus_opp_r z); only 1: do 2 rewrite Qplus_assoc; only 1: apply Qplus_lt_le_compat; only 1: auto with *; only 1: auto with *; only 1: intro E; only 1: apply Qplus_lt_le_compat; only 1: auto; only 1: auto with *).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.oppcarry_spec	40	40.044548	5291	438
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.exists_mem_3	40	19.804894	11053	1476	2.7.0.9.1.14	synth with cache (only 1: unfold compat_bool, Proper, respectful in *; only 1: intros; only 1: apply exists_1; only 1: auto; only 1: exists x; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.to_uint_nonnil	40	0.122846	6	3	0.0.3	synth with cache (only 1: intro E; only 1: generalize (of_to p); only 1: now rewrite E).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_le	40	40.089413	23010	4435
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.tearing_sequences_ordered_forall	40	40.070662	18409	5580
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.In_m_Proper	40	40.083861	26610	4992
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.singleton_b	40	40.044565	6366	3124
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreals.Q2R_opp	40	40.065830	19822	2071
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.lt_1_INR	40	40.331113	27659	5145
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.prime_rel_prime	40	40.724764	24662	3333
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nbit0_gt	40	5.235156	3068	777	0.1.0.0.1.0.1.1.0.0.1.0.2.0.0.0.0	synth with cache (only 1: intros; only 1: destruct (N.discr (N.lxor a a')) as [(p, H2)| H1]; only 1: unfold Nless; only 1: rewrite H2; only 1: destruct p; only 1: simpl; only 1: rewrite H, H0; only 1: trivial; only 1: assert (H1 : N.odd (N.lxor a a') = false) by (rewrite H2; reflexivity); only 1: rewrite (Nxor_bit0 a a'), H, H0 in H1; only 1: discriminate H1; only 1: simpl; only 1: rewrite H, H0; only 1: trivial; only 1: assert (H2 : N.odd (N.lxor a a') = false) by (rewrite H1; reflexivity); only 1: rewrite (Nxor_bit0 a a'), H, H0 in H2; only 1: discriminate H2).
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_lem_1	40	40.797876	13083	3720
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.int_eqm	40	0.006535	1	1	0	synth with cache (only 1: now intros ->).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zmult_mod_distr_r	40	40.455153	10790	2120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Z_quot_monotone	40	40.438863	25893	2312
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.inter_2	40	0.022870	3	3	0.0.0	synth with cache (only 1: intros s s' x; only 1: rewrite inter_spec; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.Nwscal_ok	40	40.029619	6685	1549
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.inter_spec	40	40.063144	13910	3100
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.inter_3	40	0.151681	116	22	1.3.4	synth with cache (only 1: intros x y z; only 1: rewrite inter_spec; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_Rsqr	40	0.071820	31	12	0.0.5.0	synth with cache (only 1: intros; only 1: apply (Rsqr_inj (sqrt x²) x (sqrt_positivity x² (Rle_0_sqr x)) H); only 1: unfold Rsqr; only 1: apply (sqrt_sqrt x² (Rle_0_sqr x))).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_maj_Rabs	40	40.056953	11350	4089
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P0	40	40.074411	22698	2951
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.Empty_m_Proper	40	40.048910	15224	2763
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zmult_mod_idemp_r	40	0.022070	3	3	0.0.0	synth with cache (only 1: intros; only 1: rewrite Zmult_mod, Zmod_mod, <- Zmult_mod; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_nodup	40	40.155327	58537	3216
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.EqualityModulo.eqm_refl	40	0.013894	7	2	5.0	synth with cache (only 1: intros; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_firstr	40	40.805131	9684	1419
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_pow2	40	0.260557	120	38	0.1.0.0.4	synth with cache (only 1: intros a0 a; only 1: simpl; only 1: rewrite Rmult_1_r; only 1: apply sqrt_square; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.EqualityModulo.eqm_sym	40	0.015225	6	2	4.0	synth with cache (only 1: intros; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.remove_1	40	40.106676	33718	6267
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P1	40	40.097764	32576	4590
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcmult_lt_0_le_reg_r	40	40.390405	17607	3741
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.elements_empty	40	5.892466	11174	252
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.xforall_spec	40	40.078517	24046	4757
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.EqualityModulo.eqm_trans	40	0.134077	66	23	2.5	synth with cache (only 1: unfold eqm; only 1: eauto using Z.Private_OrderTac.Tac.eq_trans, Z.Private_OrderTac.Tac.eq_sym).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.subcarry_spec	40	40.073041	18612	3893
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_twice	40	40.509375	28138	4785
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_aux_cardinal	40	40.111184	29729	3779
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.nonneg_derivative_1	40	40.124305	23655	5514
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_mem_3	40	40.097758	16775	2645
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rprod.C_maj	40	40.059608	15116	5999
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.partition_spec2	40	0.018578	3	3	0.0.0	synth with cache (only 1: intros; only 1: rewrite partition_filter; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv	40	0.021572	12	2	4	synth with cache (only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.remove_3	40	40.130418	45872	4087
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.PSubstL_ok	40	40.087930	24171	3451
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.subcarryc_spec	40	40.055306	12558	1588
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_mem_3	40	40.058630	15848	2105
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.is_empty_m_Proper	40	40.133998	15013	1391
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.singleton_1	40	40.114840	39045	5427
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.lim_x	40	40.118546	33672	4074
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.to_Z_gcd	40	40.057454	11522	740
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.le_INR	40	31.560818	16263	4663	2.2.13.4.3.3	synth with cache (only 1: induction n; only 1: intros; only 1: auto with real; only 1: inversion 1; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.inter_ok	40	40.174804	5767	966
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_sub_c	40	40.079970	20780	6124
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_nonneg_nonneg	40	40.180541	13699	2046
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rinv_l	40	41.028571	27505	2348
coq-tactician-stdlib.8.11.dev	Coq.Reals.NewtonInt.FTCN_step1	40	40.092285	32376	3701
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_scal	40	40.105256	30065	5683
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Rings_R.Rri	40	40.046573	12689	4435
coq-tactician-stdlib.8.11.dev	Coq.Reals.NewtonInt.FTC_Newton	40	0.021631	8	2	6.0	synth with cache (only 1: intros; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.for_all_spec	40	40.059266	17017	2852
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.normalise_correct	40
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nltb_leb_weak	40	40.148563	32869	2953
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.diff_2	40	0.026806	4	3	0.1.0	synth with cache (only 1: intros s s' x; only 1: rewrite diff_spec; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.equal_more_IfEq	40	9.997747	4082	1160	0.0.3.1.11	synth with cache (only 1: simpl; only 1: red; only 1: destruct 1; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.diff_3	40	0.048977	13	4	0.0.3	synth with cache (only 1: intros s s' x; only 1: rewrite diff_spec; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_lt_abs_1	40	40.076071	19357	7940
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.mem_1	40	40.097440	30011	4629
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rderiv.Dmult_const	40	40.054388	14532	5701
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rmult_1_l	40	41.267890	10265	1612
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_cardinal	40	40.312882	17613	2606
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.mem_2	40	40.175754	49015	6912
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.diff_ok	40	40.438075	20797	4989
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.Nplength_ub	40	41.150830	22528	6228
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.diff_spec_ok	40	40.036984	6377	2215
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Algebra.poly_mul_mon_compat	40	40.122053	31045	3677
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.union_spec	40	40.077145	9978	2195
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_comp	40	40.064440	17506	4932
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEsimp_ok	40	40.212132	10833	3569
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_inj	40	40.065623	15397	5831
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.to_uint_surj	40	40.072647	19030	2848
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zmod_mod	40	40.468525	22490	3523
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.partition_ok2	40	40.298178	7472	3472
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.min_maj	40	40.244823	24518	6063
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.String_as_OT.nat_of_ascii_inverse	40	40.637144	60569	3128
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Z_mult_quot_le	40	40.057139	13476	2316
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_left1	40	40.056108	16390	2576
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Z_mult_quot_ge	40	40.378375	21140	3712
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin2_cos2	40	40.059542	16977	3811
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.dicho_up_min_x	40	40.083897	17164	7912
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Algebra.poly_mul_compat	40	40.070004	22070	3662
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.check_inconsistent_sound	40	40.268389	27099	2598
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.pos_INR_nat_of_P	40	40.913644	20734	4910
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.index_correct1	40	40.093615	33775	3620
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.max_l	40	40.022013	5653	1324
coq-tactician-stdlib.8.11.dev	Coq.btauto.Reflect.Completeness.list_replace_nth_2	40	40.086693	29693	3987
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.sin_PI3_cos_PI6	40	40.060329	9977	2081
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_mem_4	40	40.089903	10753	3270
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.cardinal_inv_1	40	40.129343	41944	5632
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.pos_INR	40	40.055433	14964	5356
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.head00_spec	40	40.303754	29291	2898
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.PI6_RGT_0	40	0.118393	11	9	2.0.0.0.0	synth with cache (only 1: unfold Rdiv; only 1: apply Rmult_lt_0_compat; only 1: apply PI_RGT_0; only 1: apply Rinv_0_lt_compat; only 1: prove_sup).
coq-tactician-stdlib.8.11.dev	Coq.Strings.Ascii.nat_ascii_bounded	40	40.096967	21073	658
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.cardinal_inv_2	40	40.105418	40165	2911
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P2	40	40.080855	26589	4448
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Qinv_power_n	40	40.257316	12618	2648
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.PI6_RLT_PI2	40	0.063781	2	2	0.0	synth with cache (only 1: pose proof PI_RGT_0 as H; only 1: Lra.lra).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.diff_list_spec	40	40.443198	4848	2050
coq-tactician-stdlib.8.11.dev	Coq.Reals.Alembert.Alembert_C5	40	40.869289	17463	7192
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.PowerRZ.Z_compl.intP	40	40.292136	100562	3644
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.maxdepth_lowerbound	40	0.048537	8	8	0.0.0.0.0.0.0.0	synth with cache (only 1: intros H; only 1: apply Nat.log2_lt_pow2; only 1: destruct s; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: apply maxdepth_cardinal).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.uniqueness_step1	40	40.112688	17745	2255
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.inject_Q_morph_Proper	40	40.690352	29502	3943
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.xnegate_correct	40	40.048843	11453	5390
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.PNSubstL_ok	40	40.073195	23729	3773
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_exists	40	40.116537	21339	4951
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.cardinal_inv_2b	40	40.149827	57581	3914
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcrt	40	16.009628	2099	1346	0.0.0.4.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: constructor; only 1: intros; only 1: qc; only 1: apply Qplus_0_l; only 1: intros; only 1: qc; only 1: apply Qplus_comm; only 1: intros; only 1: qc; only 1: apply Qplus_assoc; only 1: intros; only 1: qc; only 1: apply Qmult_1_l; only 1: intros; only 1: qc; only 1: apply Qmult_comm; only 1: intros; only 1: qc; only 1: apply Qmult_assoc; only 1: intros; only 1: qc; only 1: apply Qmult_plus_distr_l; only 1: trivial; only 1: intros; only 1: qc; only 1: apply Qplus_opp_r).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Diaconescu.ExtensionalEpsilon_imp_EM.extensional_epsilon_imp_EM	40	40.094674	28072	5497
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_mem_4	40	40.582893	10994	3463
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.exp_ineq1	40	40.056564	13862	6240
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.Rsqr_sqrt	40	0.042348	7	7	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rsqr; only 1: unfold sqrt; only 1: destruct (Rcase_abs x) as [Hlt| Hge]; only 1: elim (Rlt_irrefl _ (Rlt_le_trans _ _ _ Hlt H)); only 1: rewrite Rsqrt_Rsqrt; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_facts.Zpower2_le_lin	40	40.174891	22279	3592
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.singleton_rb	40	0.825708	1777	85	3.37.0	synth with cache (only 1: unfold singleton; only 1: red; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nxor_bit0	40	40.094697	32809	3965
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_exists	40	40.074140	17034	4013
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derive_pt_eq_0	40	2.475546	503	202	2.1.0.0.0.0.4	synth with cache (only 1: intros; only 1: pose proof (proj2_sig pr) as H1; only 1: unfold derivable_pt_abs in H1; only 1: pose proof (uniqueness_limite _ _ _ _ H H1) as H2; only 1: unfold derive_pt; only 1: symmetry; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zmult_mod	40	40.103665	22616	2652
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Z_quot_exact_full	40	40.603126	20166	3022
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.add_cancel_r	40	0.055257	7	7	0.0.0.0.0.0.0	synth with cache (only 1: intros h; only 1: apply int_eqm in h; only 1: rewrite !add_spec in h; only 1: apply eqm_mod, eqm_sub in h; only 1: replace (_ + _ - _) with (φ (y) - φ (z)) in h by lia; only 1: rewrite <- eqm_subE in h; only 1: apply eqmI, h).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nxor_div2	40	40.067781	20338	3701
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_app	40	40.493910	31877	2242
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derive_pt_eq_1	40	0.035700	5	5	0.0.0.0.0	synth with cache (only 1: intros; only 1: pose proof (proj2_sig pr) as H1; only 1: unfold derive_pt in H; only 1: rewrite H in H1; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.test_field	40	0.715742	231	103	0.0.0.4.0.0	synth with cache (only 1: unfold Qcdiv; only 1: intros; only 1: rewrite <- Qcmult_assoc; only 1: rewrite Qcmult_inv_l; only 1: apply Qcmult_1_r; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.rr_nrr_rb	40	23.895246	33989	2934	2.26.0.5.28.4	synth with cache (only 1: intuition; only 1: destruct H; only 1: destruct l as [| [| ] ll lx lr]; only 1: auto; only 1: now subst; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.R1_neq_R0	40	40.236604	72234	6000
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.gcd_spec	40
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_node	40	40.138158	21352	2780
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.COHERENT_VALUE.two_compl_to_Z_to_two_compl	40	40.426838	28171	4268
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRopp_lt_cancel	40	40.041107	10174	3574
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Equal_cardinal	40	40.114414	40609	4130
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.add_cardinal_1	40	0.486998	175	58	8.1	synth with cache (only 1: intros a b H; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.uniqueness_step2	40	40.102070	35794	6823
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qplus_lt_le_compat	40	40.048331	14338	3829
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.linear_diff_spec	40	40.140480	16422	1941
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.INR_lt	40	40.110557	31910	5265
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.add_cardinal_2	40	0.853105	367	113	0.0.0.0.0.0.0.2.0.1	synth with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: change S with ((fun _ => S) x); only 1: apply fold_2; only 1: auto with fset; only 1: auto with fset; only 1: auto with fset; only 1: auto; only 1: expAdd; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nless_def_2	40	0.532043	201	107	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct a; only 1: destruct a'; only 1: reflexivity; only 1: trivial; only 1: destruct a'; only 1: trivial; only 1: unfold Nless; only 1: simpl; only 1: destruct (Pos.lxor p p0); only 1: reflexivity; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.QSORaddon	40	40.033446	7390	3187
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zplus_mod	40	40.066237	22996	3363
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CRealShiftEqual	40	40.100011	20464	3012
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.remove_cardinal_2	40	0.055235	14	6	2	synth with cache (only 1: auto with set fset).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.cardinal_m_Proper	40	40.079966	24140	3591
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.cardinal_Empty	40	40.068868	16067	5825
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PCond_cons	40	40.102448	13729	1284
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lsr_0_r	40	0.287014	24	6	1.0.1	synth with cache (only 1: apply to_Z_inj; only 1: rewrite lsr_spec; only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_opp_r	40	40.116924	27977	1860
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.xexists_spec	40	40.092753	30486	4645
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.i2l_l2i	40	40.282520	7326	1151
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_pos_pos	40	40.045454	10137	4457
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.exists_spec	40	40.041237	11552	1838
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.power_div_with_rest.Zdiv_rest_correct	40	40.204519	72863	3736
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.union_b	40	40.075845	4384	2220
coq-tactician-stdlib.8.11.dev	Coq.Reals.ClassicalDedekindReals.DRealReprQ	40	40.686319	13400	2350
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkX_ok	40	40.374400	12374	1193
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.fold_equiv_aux	40	40.122562	34932	3342
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.mem_m_Proper	40	40.058329	16134	3646
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qplus_le_l	40	40.273952	7986	1882
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.i2l_nshiftl	40	40.294386	7047	1439
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.Nwmul_ok	40	40.033155	8840	1674
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zminus_mod	40	40.404524	19938	2602
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.not_0_INR	40	40.278626	29478	4627
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis2.D_x_no_cond	40	41.224564	19840	2602
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.is_neg_false	40	0.936283	442	132	0.2.0.0.1.1.3.0.0.0	synth with cache (only 1: destruct z; only 1: simpl; only 1: destruct z; only 1: discriminate; only 1: intros; only 1: easy; only 1: congruence; only 1: simpl; only 1: intro; only 1: now induction n).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.EqualityModulo.eqm_setoid	40	11.319914	11448	509	1.13.0.0.70.16	synth with cache (only 1: unfold eqm; only 1: constructor; only 1: auto; only 1: auto; only 1: red; only 1: now unfold eqm; intros a b c ->).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.prime_mult	40	40.316555	4955	863
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcmult_lt_compat_r	40	40.203973	16806	3056
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool'.exists_mem_1	40	40.344438	31096	1944
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis5.pr_nu_var2_interv	40	40.222815	20043	4067
coq-tactician-stdlib.8.11.dev	Coq.Strings.Ascii.ascii_of_byte_of_ascii	40	40.182684	4292	423
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.power_div_with_rest.Zdiv_rest_ok	40	40.096469	32079	3936
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.fold_equiv	40	40.123963	28665	3597
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.makeRed_rr	40	2.603076	2134	418	1.2.1.1.1.1.1.8	synth with cache (only 1: destruct t; only 1: intro H; only 1: invrb; only 1: descolor; only 1: invrb; only 1: invrb; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.negate_correct	40	42.774331	20751	4037
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcpower_1	40	40.123114	16233	3765
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcabs.Qcle_Qcabs	40	40.052033	12243	2172
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.POWER.Ppow_pos_ok	40	40.035575	10587	2124
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.fold_1	40	40.122151	18487	3223
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.Npdist_eq_1	40	41.180713	44685	4422
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool'.exists_mem_2	40	40.217619	25624	4514
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.In_m	40	11.459130	2585	387	7.13.1	synth with cache (only 1: intros x x' Hx y y' Hy; only 1: setoid_rewrite Hx; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.not_INR	40	40.082865	21181	3494
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.Induction.bi_induction	40	40.295941	117583	6403
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool'.exists_mem_3	40	40.266968	19031	1988
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsLUB.CR_sig_lub	40	42.745815	20874	3164
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetCompat.Update_WSets.Spec.exists_spec	40	40.075497	21527	4893
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.fold_remove_spec	40	40.247493	8814	1745
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.diff_spec	40	40.088732	13998	2354
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_lt	40	5.099771	1759	755	1.3.3.3.0.1.0.0	synth with cache (only 1: intros x n; only 1: elim n; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_pos	40	40.135341	27318	3491
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcabs.Qcabs_triangle_reverse	40	40.096347	7939	2342
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_square	40	40.076328	24418	4449
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_le	40	0.064018	9	8	2.0	synth with cache (only 1: intros x z; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Strings.Byte.N.to_N_bounded	40	40.402276	3815	549
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Cyclic63.pos_mod_spec	40	40.126495	14133	2356
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.nonpos_derivative_0	40	40.058994	15501	6177
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_Ifp.Rminus_fp1	40	40.027899	5491	1807
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.INR_eq	40	40.118664	29769	5182
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CRealNegShift	40	40.515709	28615	2506
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.index_correct2	40	40.120140	17677	4225
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_cauchy	40	40.043496	10845	2192
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.exists_mem_1	40	40.289435	33890	4266
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.partition_spec1	40	40.164933	16167	3398
coq-tactician-stdlib.8.11.dev	Coq.Reals.Sqrt_reg.continuity_pt_sqrt	40	40.044701	11277	4948
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Map.map_avl	40	40.048577	13455	3073
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcpower_pos	40	40.516415	27320	4511
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CRealPosShift	40	40.038932	7259	5162
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nneg_bit0	40	40.108700	36810	4137
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.union_1	40	40.060855	18088	3743
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.INR_le	40	40.108501	37618	5888
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.eqm_mod	40	43.318255	18042	3717
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring.Ring.ring_opp_zero	40	40.052560	18330	468
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_i2l	40	40.038818	5776	1618
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult	40	40.165360	13754	5588
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.zmon_pred_ok	40	40.039365	11215	1519
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qinv_le_0_compat	40	6.259523	2249	507	1.0.0.0.0.1.1.0.0.9	synth with cache (only 1: intros [[| n| n] d]; only 1: red; only 1: red; only 1: intros; only 1: discriminate; only 1: red; only 1: intro H; only 1: red; only 1: discriminate; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Machin.atan_sub_correct	40	41.034312	16586	2503
coq-tactician-stdlib.8.11.dev	Coq.Reals.PSeries_reg.CVN_CVU	40	40.134163	30641	5079
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nneg_bit0_1	40	40.455900	37800	4385
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ_morph	40	40.078442	6742	3277
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_appart	40	40.068610	16636	6000
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zplus_mod_idemp_l	40	40.378294	16177	4296
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Map.map_2	40	0.763278	306	84	0.0.0.2.3.1.2	synth with cache (only 1: induction m; only 1: simpl; only 1: inversion_clear 1; only 1: inversion_clear 1; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.add_3	40	13.786978	9593	1721	0.0.0.0.2.5.1.1.9	synth with cache (only 1: intros EQ; only 1: unfold MapsTo; only 1: intro; only 1: rewrite <- H; only 1: rewrite gso; only 1: destruct m; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_NOR	40	40.042213	9556	2142
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_nil	40	40.561880	27009	4274
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_reg.derivable_pt_lim_sin	40	40.058999	17327	6334
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rle_abs	40	40.165425	15970	3782
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.COHERENT_VALUE.Z_to_binary_to_Z	40	40.071975	22800	2602
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRopp_plus_distr	40	40.051596	11667	3860
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.exists_mem_2	40	40.155228	20342	2693
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.singleton_cardinal	40	40.119421	47702	2607
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos2	40	40.240065	17154	4338
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.POWER.Ppow_N_ok	40	40.067241	21462	1955
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_Ifp.Rminus_fp2	40	40.023447	3104	990
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.exists_mem_4	40	40.100601	20966	3811
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nsame_bit0	40	40.091038	30326	3316
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qc_eq_bool_correct	40	40.386769	31335	3476
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.partition_spec2	40	40.051919	10978	5122
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.nsatz1.PolZeq_correct	40	40.054911	17027	1891
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qplus_lt_l	40	40.191005	8141	1609
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword_morph	40	40.029553	7849	1931
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRmult_plus_distr_l	40	40.047038	5161	3528
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.isZ0_0	40	3.006240	1246	361	0.0.0.0.0.0.0.0.4.2.3	synth with cache (only 1: intro n; only 1: intuition; only 1: destruct n as [| [| | ]| [| | ]]; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: now subst).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.cardinal_inv_1	40	40.086560	26341	4891
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Mapi.mapi_avl	40	40.047862	13699	3430
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Sum.sum_plus	40	40.570512	18792	2354
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_twice_plus_one	40	40.049939	12256	4232
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.add_m_Proper	40	40.062253	17434	3863
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.to_of	40	40.084948	22765	8314
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_pos_sub	40	40.094877	22116	1807
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.is_empty_1	40	40.191120	46043	3674
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.IZN	40	41.025836	41301	2497
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Mapi.mapi_2	40	0.105066	8	8	0.0.0.0.0.0.0.0	synth with cache (only 1: induction m; only 1: simpl; only 1: inversion_clear 1; only 1: simpl; only 1: inversion_clear 1; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalString.NilZero.usu	40	40.385699	18748	2468
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_le_minus	40	40.698767	7984	1271
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Qpower_plus_positive	40	40.514269	7824	1596
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.prime_2	40	40.428215	15612	2200
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.N0_less_1	40	0.973538	693	102	0.0.0.4.12	synth with cache (only 1: intros n m; only 1: destruct n; only 1: easy; only 1: exists p; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.diff_inter_cardinal	40	40.160934	48186	4933
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.remove_m_Proper	40	40.057152	15576	3178
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.cardinal_inv_2	40	40.123047	42971	5379
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.Empty_m	40	11.123543	5068	862	25.0	synth with cache (only 1: unfold Equal; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_rec_nodep	40	0.071487	31	14	0.0.1.1.0	synth with cache (only 1: intros A P f i m Hempty Hstep; only 1: apply fold_rec; only 1: auto; only 1: intros; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_le_compat_r	40	40.596632	10437	2555
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.equal_end_IfEq	40	30.569390	18125	1714	20.2.10.13	synth with cache (only 1: unfold IfEq; only 1: intros a; only 1: simpl; only 1: now destruct a).
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_lt_0_le_reg_r	40	40.246283	9417	2644
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PCond_app	40	40.615772	12142	1474
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_eq_abs_0	40	40.050009	6579	2484
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.nsatz1.mult_l_correct	40	40.028151	3265	1493
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.PowerRZ.pow_powerRZ	40	0.048785	8	5	0.2.1.0.0	synth with cache (only 1: induction n; only 1: easy; only 1: simpl; only 1: rewrite SuccNat2Pos.id_succ; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.inter_b	40	40.040435	3768	2355
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.union_cardinal	40	40.075546	23648	3799
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.to_uint_nonzero	40	40.107083	36967	3429
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rgeom.isometric_translation	40	40.028178	7977	1714
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nleb_double_mono	40	40.575433	39228	5308
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.subset_cardinal	40	40.096255	24893	4122
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.union_2	40	40.130854	47074	3579
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nleb_double_plus_one_mono	40	40.110281	34198	3804
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.of_uint_norm	40	0.152449	11	6	4	synth with cache (only 1: now induction d).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.union_cardinal_le	40	0.834485	307	57	2.9.1	synth with cache (only 1: intros; only 1: rewrite <- union_inter_cardinal; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.map_m_Proper	40	40.067918	17462	4275
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalString.NilZero.usu_gen	40	40.061095	19127	2972
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P3	40	40.932104	26702	4548
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qinv_lt_0_compat	40	0.036997	4	4	0.0.0.0	synth with cache (only 1: intros [[| n| n] d] Ha; only 1: assumption; only 1: assumption; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nbit0_less	40	40.170568	37605	3630
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Z_pos_sub_gt	40	40.034102	11836	607
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.Equal_ST	40	40.262994	35287	4631
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.eval_pol_add	40	17.470482	10030	529	54.10.0	synth with cache (only 1: intros; only 1: rewrite (Padd_ok (SORsetoid sor) Rops_wd (Rth_ARth (SORsetoid sor) Rops_wd (SORrt sor)) (SORrm addon)); only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.remove_cardinal_1	40	13.989172	11262	1501	1.0.1.9.18	synth with cache (only 1: symmetry; only 1: apply cardinal_2 with x; only 1: fsetdec; only 1: expAdd; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalString.NilZero.isi_posnil	40	0.008819	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalString.NilZero.isi_negnil	40	0.009356	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zrem_le	40	40.248722	27906	3108
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zminus_mod_idemp_l	40	40.064666	18495	5260
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rseries.CV_shift	40	40.122071	31847	4297
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.cardinal_inv_2b	40	40.154776	59534	3904
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Equal_cardinal	40	40.042304	8377	4237
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.INR_IPR	40	40.707566	23292	4589
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_appart_zero	40	40.090692	16367	5150
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZCoeff.InitialMorphism.Zcneqb_morph	40	40.524996	25299	3329
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_sub_carry_c	40	40.109089	18723	5484
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.ln_exists1	40	40.057538	15143	5914
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_unfold	40	40.047634	13395	3265
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.isZ0_n0	40	4.601827	1725	358	0.0.2.12.0.0.0	synth with cache (only 1: destr_bool; only 1: <Coq.Strings.Ascii.t_eqb>; only 1: discriminate || simpl; only 1: destruct x; only 1: now destruct H; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.cardinal_m	40	40.070783	20061	7279
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.Zdivide_ceiling	40
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rmult_plus_distr_l	40	22.350350	1168	277	0.8.1.1.0.0.0	synth with cache (only 1: intros; only 1: apply Rquot1; only 1: repeat rewrite Rrepr_plus; only 1: repeat rewrite Rrepr_mult; only 1: repeat rewrite Rrepr_plus; only 1: rewrite CReal_mult_plus_distr_l; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.INR_IZR_INZ	40	40.045078	9377	3057
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.default_isIn_ok	40	40.061405	19920	2536
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.plus_IZR_NEG_POS	40	40.058323	16321	3871
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.filter_3	40	0.058522	15	6	0.1.1.2	synth with cache (only 1: unfold filter; only 1: intros s x f _; only 1: rewrite xfilter_spec; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rseries.CV_shift'	40	0.841027	261	114	0.0.5.1.0	synth with cache (only 1: intros f' k l cvfk eps ep; only 1: destruct (cvfk eps ep) as [N Pn]; only 1: exists N; only 1: intros n nN; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.mkVmon_ok	40	40.178369	9849	1503
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_length_1	40	40.143666	47319	6665
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rseries.Un_growing_shift	40	0.112878	36	12	3.3.0	synth with cache (only 1: intros; only 1: intro; only 1: now Nat.nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.plus_IZR	40	40.169903	12881	2796
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.is_empty_2	40	40.637807	24330	6411
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_le_r	40	40.590905	4986	1725
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool'.exists_mem_4	40	40.099398	31633	4278
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.limit_plus	40	40.156906	24140	3770
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.sin_PI6_cos_PI3	40	40.034088	7802	2162
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.remove_cardinal_2	40	0.069138	19	6	4.0	synth with cache (only 1: intros; only 1: auto with *).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.diff_b	40	40.251651	4736	3168
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.In_m	40	31.745158	13851	1866	1.0.0.0.7.16.5	synth with cache (only 1: intros x x' Hxx' l l' Hll'; only 1: rewrite (Hll' x); only 1: constructor; only 1: apply In_1; only 1: trivial; only 1: apply In_1; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_le	40	40.047851	13009	2159
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.max_r	40	40.020860	4579	1116
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Sum.sum_plus	40	40.054654	17236	2093
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.add_cardinal_2	40	0.501874	156	59	0.0.0.4.2	synth with cache (only 1: intros; only 1: apply cardinal_2 with x; only 1: auto; only 1: expAdd; only 1: fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.eqm_sub	40	40.072052	22960	3619
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.add_succ_l	40	40.075626	25238	2759
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.singleton_cardinal	40	40.182199	73294	3726
coq-tactician-stdlib.8.11.dev	Coq.micromega.QMicromega.QTautoChecker_sound	40	41.010602	39051	3720
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.open_set_P5	40	40.205628	61765	5687
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.POWER2.Ppow_pos_ok	40	40.062253	2133	453
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_pos_eq	40	40.392413	24722	3576
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.add_cardinal_1	40	4.076463	1763	446	16	synth with cache (only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_neg	40	40.082857	18082	3714
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.compare_spec_aux	40	8.229292	5167	1270	0.1.9.1.5	synth with cache (only 1: let rec induction2 := let rec inv := let rec inv_ok := match goal with | H:Sorted X.lt (_ :: _) |- _ => inversion_clear H; inv_ok | H:Sorted X.lt nil |- _ => clear H; inv_ok | H:Sorted X.lt ?l |- _ => change (Ok l) in H; inv_ok | H:Ok _ |- _ => rewrite <- isok_iff in H; inv_ok | |- Ok _ => rewrite <- isok_iff | _ => idtac end in invlist InA; inv_ok; invlist HdRel in simple induction s; [ simpl; auto; try (solve [ intros; inv ]) | intros x l Hrec; simple induction s'; [ simpl; auto; try (solve [ intros; inv ]) | intros x' l' Hrec'; simpl; elim_compare x x'; intros; inv; auto ] ] in induction2; only 1: intro H; only 1: induction H; only 1: auto using @ok with *; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.diff_inter_cardinal	40	40.148675	50340	4132
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.NORM_SUBST_REC.norm_aux_PEadd	40	40.036532	10797	654
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.IZR_neq	40	0.375681	143	48	0.5.0.0.0	synth with cache (only 1: red; only 1: intros r1 r2 H H0; only 1: apply H; only 1: apply eq_IZR; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.lt_strorder	40	40.099330	31508	5324
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.eqke_equiv	40	40.102573	6226	1424
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_assoc	40	40.132339	41609	4995
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_PI2	40	40.042647	11076	3480
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcft	40	28.060760	4987	2961	0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: constructor; only 1: constructor; only 1: intros; only 1: qc; only 1: apply Qplus_0_l; only 1: exact Qcplus_comm; only 1: intros; only 1: qc; only 1: apply Qplus_assoc; only 1: intros; only 1: qc; only 1: apply Qmult_1_l; only 1: intros; only 1: qc; only 1: apply Qmult_comm; only 1: intros; only 1: qc; only 1: apply Qmult_assoc; only 1: intros; only 1: qc; only 1: apply Qmult_plus_distr_l; only 1: reflexivity; only 1: intros; only 1: qc; only 1: apply Qplus_opp_r; only 1: unfold Q2Qc; only 1: intros H; only 1: discriminate H; only 1: reflexivity; only 1: intros; only 1: rewrite Qcmult_comm; only 1: apply Qcmult_inv_r; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.add_1	40	40.343647	23520	3838
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_lt_compat_r	40	40.522147	13416	4202
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_sub	40	40.109389	20822	2854
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Map.map_1	40	18.731578	12335	2246	0.1.0.1.0.1.2.1.11.3.2.3	synth with cache (only 1: induction m; only 1: simpl; only 1: intros; only 1: now Z.nzsimpl; only 1: intros; only 1: inversion_clear H; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.isIn_ok	40	40.204431	14075	1290
coq-tactician-stdlib.8.11.dev	Coq.Reals.Exp_prop.maj_Reste_cv_R0	40	40.053207	11297	7735
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.Mphi_ok	40	40.125098	5338	1419
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_lt_r	40	40.629035	14749	3851
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.rb_maxdepth	40	40.073332	21678	4724
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nltb_double_mono	40	6.697587	2325	609	0.0.0.8.0.1.0.2	synth with cache (only 1: unfold Nleb; only 1: intros H; only 1: eqb2eq; only 1: rewrite !N2Nat.inj_double; only 1: contradict H; only 1: apply leb_correct; only 1: apply (mult_S_le_reg_l 1); only 1: now apply leb_complete).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.subset_cardinal_lt	40	40.053910	14755	1973
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.diff_spec	40	40.048139	12660	3507
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.partition_filter	40	40.082741	28543	2414
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.add_2	40	40.173012	25234	4132
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.eqmE	40	40.091365	32513	2116
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.archimed_cor1	40	40.103995	33600	5928
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.of_inj	40	40.108228	20783	3790
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.disc_P1	40	40.084182	29068	5577
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.cons_1	40	40.092091	28614	3241
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_length_2	40	40.108597	34564	6865
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.POWER2.Ppow_N_ok	40	40.070082	6049	513
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.prime_3	40	40.182001	14464	2229
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.cons_IfEq	40	40.102471	26224	2671
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.GEN_DIV.triv_div_th	40	40.308796	32955	1067
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.elements_b	40	40.078414	5401	3008
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Sum.sum_filter	40	40.110066	12443	5125
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.of_iff	40	40.100737	13728	3786
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.InA_eqke_eqk	40	40.128574	45439	4563
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.rb_mindepth	40	40.165931	20885	3576
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zgcd_alt.Zgcdn_is_gcd_pos	40	40.069108	21917	2994
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_0_l	40	40.092300	23260	2659
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.uniqueness_step3	40	40.109356	32819	6351
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.checker_nf_sound	40	40.093539	33587	2412
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_lt_minus	40	40.432392	6336	1512
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zeq_bool_if	40	40.145709	52597	3271
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRzero_double	40	40.047001	6845	3034
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_shiftr	40	40.056006	16215	2483
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Boule_lt	40	40.092668	32329	4685
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.maj_min	40	40.067177	18338	7258
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.filter_b	40	40.214741	3340	2422
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Map_option.map_option_avl	40	40.167891	26444	3175
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_add	40	40.054541	13070	6944
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.NoDupA_eqk_eqke	40	40.080458	25573	3584
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.cosn_no_R0	40	0.761602	470	159	0.0.0.0.6.0	synth with cache (only 1: intro; only 1: apply Rmult_integral_contrapositive_currified; only 1: apply pow_nonzero; only 1: discrR; only 1: apply Rinv_neq_0_compat; only 1: apply INR_fact_neq_0).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.torn_number	40	40.313175	133793	3719
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.plus_sum	40	40.087336	30688	3362
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_aux_ok1	40	40.047437	11260	2492
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.findA_rev	40	40.139306	17357	3277
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.mult_IZR	40	40.447146	17215	3610
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zmult_mod_idemp_l	40	40.105869	16573	4561
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Sum.fold_compat	40	40.225728	11392	2824
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_incrbis	40	40.393773	13622	3085
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_comm	40	42.095571	22868	4052
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.union_cardinal	40	40.096948	13707	5030
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.prime_ge_2	40	40.794207	30233	4614
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.pow_IZR	40	40.071352	13040	3316
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_reg_r	40	3.843982	521	155	0.2.0.0.0.3.0	synth with cache (only 1: intros; only 1: rewrite (CReal_plus_comm y), (CReal_plus_comm z) in H; only 1: intro abs; only 1: apply H; only 1: clear H; only 1: apply CReal_plus_lt_compat_l; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.minus_sum	40	0.157692	7	7	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: ring; only 1: do 3 rewrite tech5; only 1: rewrite HrecN; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.for_all_b	40	40.118457	5970	2963
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.dicho_up_min	40	40.137390	22121	6664
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_sub_carry	40	40.119015	28453	5141
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRmult_0_r	40	40.643632	6097	2133
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nltb_double_plus_one_mono	40	10.118598	4988	1484	1.0.0.6.4.1.0.1	synth with cache (only 1: unfold Nleb; only 1: intros; only 1: eqb2eq; only 1: rewrite !N2Nat.inj_succ_double; only 1: contradict H; only 1: apply leb_correct; only 1: apply (mult_S_le_reg_l 1); only 1: now apply leb_complete).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Cos_plus.cos_plus	40	40.127880	15548	2909
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nleb_double_mono_conv	40	40.814610	39742	4610
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.elements_Empty	40	40.113879	24484	2878
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P3	40	40.062339	14867	5822
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.uniqueness_limite	40	40.056469	15747	4790
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.narrow_interval_lower_bound	40	40.077416	27622	3068
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_derive	40	0.611148	674	93	18	synth with cache (only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.succ_IZR	40	40.649087	10215	1877
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetCompat.Update_Sets.lt_strorder	40	40.134108	39071	3828
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_0_r	40	40.127018	23511	5987
coq-tactician-stdlib.8.11.dev	Coq.Reals.AltSeries.alternated_series_ineq	40	41.273992	23689	4878
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Z_0_1_more	40	40.306825	26314	2479
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.inter_spec	40	40.044194	12923	2900
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Sum.sum_filter	40	40.268475	13236	5401
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.opp_IZR	40	40.322605	29707	3206
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.power_div_with_rest.Zdiv_rest_shiftr	40	40.050581	12922	4040
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_reg_l	40	8.607873	8437	1344	0.0.4.14.3.6	synth with cache (only 1: intro q; only 1: intros; only 1: intro abs; only 1: apply H; only 1: apply CReal_plus_lt_compat_l; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.exists_b	40	40.221277	8158	4906
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_opp_diag_r	40	40.059095	20636	1468
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_le_pos	40	0.156457	48	21	0.0.0.1	synth with cache (only 1: intros; only 1: replace 0 with (0 * r2); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P2	40	40.106791	37566	4440
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_lt_compat_l	40	40.079186	14457	1899
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.derive_pt_inv	40	40.091186	21457	6038
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.cauchy_maj	40	40.656903	16881	7209
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.sum_eq	40	40.899128	37161	4204
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_eq_asb_1	40	32.461280	11247	4294	1.8.2.6.0	synth with cache (only 1: intros; only 1: rewrite (Rsqr_abs x); only 1: rewrite (Rsqr_abs y); only 1: rewrite H; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.POneSubst_ok	40	40.172165	12693	1000
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.partition_spec1	40	40.056956	20237	1939
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Ropp_lt_mono	40	40.051113	13477	2791
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.minus_IZR	40	40.070134	10455	4424
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.Alembert_cos	40	40.060154	14073	6690
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.inter_1	40	40.121099	40650	4374
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_Rabsolu	40	40.084410	15863	4191
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.is_empty_m	40	40.320109	37703	2601
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.maxdepth_upperbound	40	40.170452	13704	5778
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.is_neg_true	40	40.107686	37509	4426
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.double	40	0.022411	2	2	0.0	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Sum.fold_compat	40	40.142240	8812	1735
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.Empty_m	40	40.094062	30744	5720
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Z_R_minus	40	40.046216	8597	3428
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_lt_compat_r	40	40.045745	11594	2888
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRcomplete.CRealImplem	40	40.101090	34249	4300
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_incr	40	40.084684	27284	4452
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_facts.Zpower2_Psize	40	40.097493	31191	5623
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.eqm_subE	40	40.066702	15105	7966
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.continuity_P1	40	40.101593	34548	6721
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.equal_cont_IfEq	40	40.324630	26772	3754
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_nge	40	40.053417	14604	2733
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RinvN_pos	40	0.068145	7	5	0.0.2.0.0	synth with cache (only 1: intro n; only 1: apply Rinv_0_lt_compat; only 1: case n; only 1: auto with real; only 1: auto with arith real).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Map2_opt.map2_opt_avl	40	40.141914	25689	2914
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.for_all_2	40	0.033103	5	4	0.1.0.0	synth with cache (only 1: intros s f _; only 1: unfold for_all; only 1: rewrite xforall_spec; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.to_uint_inj	40	40.120108	41321	3455
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.subset_cardinal	40	40.099486	34710	3940
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.subset_cardinal_lt	40	40.045139	13564	1811
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreals.Q2R_minus	40	40.058573	6791	1983
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_lt_l	40	40.128990	6245	2139
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.PowerRZ.Zpower_nat_powerRZ	40	40.051500	13486	3105
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_pos_tech	40	40.751324	21966	4547
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Map2.map2_avl	40	40.094433	23519	2484
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.union_inter_cardinal	40	40.097251	11986	1790
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.String_as_OT.lts_tail_unique	40	40.086588	31371	1303
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nless_not_refl	40	40.136248	50419	4839
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.eqmI	40	40.049485	12394	1362
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_pos	40	40.045539	7389	3244
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.torn_number_above_first_sequence	40	40.611661	70014	3501
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.OrdProperties.gtb_compat	40	6.980205	1220	112	1.17.5.3	synth with cache (only 1: intros s s' H; only 1: apply eq_true_iff_eq; only 1: compute; only 1: Dec.fsetdec).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.diff_spec	40	40.063957	17970	4647
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.mem_m	40	40.047513	10572	4376
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.ifred_or	40	1.123323	2426	429	0.1.0.0.3.0.1.9.3	synth with cache (only 1: intuition; only 1: destruct s; only 1: right; only 1: assumption; only 1: descolor; only 1: left; only 1: assumption; only 1: right; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Sum.sum_compat	40	40.060355	16488	3716
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zquot_le_upper_bound	40	40.583028	43544	4932
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.OrdProperties.gtb_compat	40	13.091539	3254	435	0.0.0.0.0.0.3.2.16	synth with cache (only 1: compute; only 1: intros; only 1: ME.elim_comp; only 1: ME.elim_comp; only 1: trivial; only 1: ME.elim_comp; only 1: trivial; only 1: ME.elim_comp; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.double_var	40	2.748740	758	124	16.0	synth with cache (only 1: intros; only 1: field).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.of_list_1	40	40.073435	22724	4493
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_Rsqr_abs	40	40.178063	15103	5138
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.eval_pol_sub	40	40.439793	28547	1076
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_aux_ok	40	40.173816	11600	3446
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P3	40	40.169461	14382	6212
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.of_list_1b	40	40.224648	12421	4308
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.diff_ok	40	40.044465	8183	2664
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.GEN_DIV.Ztriv_div_th	40	40.126672	35927	1346
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.xelements_spec	40	40.115806	40430	5160
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P4	40	41.038860	51546	3991
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.equal_IfEq	40	40.100923	37141	3494
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_le_0_compat	40	40.096784	14915	3247
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.lt_0_IZR	40	40.708941	41398	4146
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.PowerRZ.Zpower_pos_powerRZ	40	40.059530	16968	4105
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P4	40	40.111508	28265	4409
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.add_assoc	40	40.108191	40657	1129
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.diff_1	40	40.163885	50045	4667
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.incr_twice_plus_one	40	40.260830	4256	1485
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.prime_alt	40	40.976783	32622	3245
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.OrdProperties.leb_compat	40	8.956621	2029	214	0.2.16.4	synth with cache (only 1: intros s s' H; only 1: compute; only 1: rewrite H; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_proper_l	40	2.822509	898	544	0.0.0.0.0.0.0.0.2.0	synth with cache (only 1: intros; only 1: split; only 1: intro abs; only 1: apply CReal_plus_lt_reg_l in abs; only 1: destruct H; only 1: contradiction; only 1: intro abs; only 1: apply CReal_plus_lt_reg_l in abs; only 1: destruct H; only 1: contradiction).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.Equivb_elements	40	40.279639	24457	3151
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.limit_Ropp	40	40.068869	19873	5108
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.add_comm	40	40.108979	13571	464
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_mul_c	40	40.103740	31389	5980
coq-tactician-stdlib.8.11.dev	Coq.Reals.NewtonInt.NewtonInt_P1	40	40.081747	27877	3474
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_0_lt_compat	40	41.682836	13534	2887
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Ropp_pos_neg	40	40.340198	26452	2469
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.increasing_decreasing_opp	40	40.166655	16757	3653
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.fold_1	40	40.106300	38641	3582
coq-tactician-stdlib.8.11.dev	Coq.Strings.Byte.N.of_N_None_iff	40	40.048886	9533	1779
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nleb_double_plus_one_mono_conv	40	40.260932	22228	5062
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_ok_l	40	40.050789	13908	2666
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Rings_R.Rcri	40	40.066151	18351	5237
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.of_list_2	40	40.299520	18340	5105
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.equal_Equivb	40	40.057339	16087	3546
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rderiv.Dopp	40	40.049019	12650	6310
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_mul	40	40.068713	18426	5966
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_ge_0_gt_0_lt_compat	40	0.112264	17	11	0.0.2.0	synth with cache (only 1: intros; only 1: apply Rle_lt_trans with (r2 * r3); only 1: auto with real; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.union_spec	40	40.052160	12512	3071
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Rings_R.R_one_zero	40	0.005673	1	1	0	synth with cache (only 1: exact R1_neq_R0).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.cardinal_1	40	40.196915	31333	3182
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.remove_cardinal_1	40	17.833913	8120	2312	0.0.6.8.3	synth with cache (only 1: symmetry; only 1: apply cardinal_2 with x; only 1: rewrite remove_spec; only 1: intuition; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.elements_spec1	40	40.105726	35294	5410
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.exists_2	40	0.153129	91	28	0.4.2.0	synth with cache (only 1: intros s f _; only 1: unfold exists_; only 1: rewrite xexists_spec; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derive_pt_eq	40	40.076820	24711	4122
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.NORM_SUBST_REC.norm_aux_PEopp	40	40.268909	113692	3586
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Sum.sum_compat	40	40.075815	18323	4073
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.add_le_r	40	41.384420	39578	2146
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.nsatz1.compute_list_correct	40	40.321909	20072	2115
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.remove_1	40	40.258322	18897	3489
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.incr_firstr	40	40.059555	7923	1611
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.triangle_rectangle	40	40.058531	16180	4165
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.of_list_3	40	40.172434	13522	3923
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.lt_IZR	40	40.815978	31941	4052
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Algebra.poly_add_valid_compat	40	40.277519	29358	3276
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.Npdist_eq_2	40	41.154775	31013	4658
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zquot_lt_upper_bound	40	40.093217	26553	4550
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.singleton_m	40	40.160146	19306	3189
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.partition_2	40	0.023881	8	3	3.0.2	synth with cache (only 1: intros s f _; only 1: rewrite partition_filter; only 1: apply eq_refl).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.union_ok	40	40.035822	4358	1299
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rlt_asym	40	41.718463	46024	3799
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.cauchy_opp	40	40.317120	19103	5877
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zquot_le_lower_bound	40	40.112190	37993	4356
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.String_as_OT.lt_trans	40	40.580446	31796	3878
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_pos_lt	40	40.071428	23138	3281
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Signed.of_to	40	40.391914	32427	4469
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.xfilter_spec	40	40.160107	22839	3963
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.incr_inv	40	40.858344	5130	576
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_wd	40	40.034895	5857	2611
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.dicho_lb_cv	40	40.129752	44543	7036
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.EqualityModulo.Zplus_eqm	40	41.212998	20089	2287
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.Rabs_derive_1	40	40.070207	20950	6656
coq-tactician-stdlib.8.11.dev	Coq.btauto.Reflect.Completeness.boolean_witness_nonzero	40	40.072422	24806	2658
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_PI2	40	40.059266	9585	4001
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Algebra.poly_mul_cst_valid_compat	40	40.119755	34279	2593
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_inv_double_plus_one	40	40.482264	1619	268
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.index_correct3	40	40.048971	12823	2405
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.sin_PI6	40	40.045055	12705	2501
coq-tactician-stdlib.8.11.dev	Coq.Strings.Ascii.byte_of_ascii_of_byte	40	40.202999	4913	2043
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Qpower_opp	40	40.276985	13094	2422
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Signed.to_int_pos_surj	40	1.541980	290	76	2.9.0	synth with cache (only 1: exists (Nat.of_uint d); only 1: apply Unsigned.to_of; only 1: now induction d).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.union_cardinal_inter	40	40.105899	35252	4686
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.union_cardinal_le	40	40.069635	24516	2051
coq-tactician-stdlib.8.11.dev	Coq.Reals.Alembert.Alembert_C6	40	40.121851	15675	7213
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.functional_choice_imp_functional_dependent_choice	40	40.167519	62943	6642
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.add_cancel_l	40	40.240531	82879	2863
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_mult_alt	40	40.110173	29568	4350
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_rec	40	40.302098	58829	4975
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.makeBlack_rb	40	40.306930	53511	5651
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P5	40	40.228839	25892	3795
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lsr0	40	40.081074	24557	1113
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.lt_compat	40	40.155749	23179	4279
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zquot_sgn	40	40.046618	11685	4055
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.EqualityModulo.Zminus_eqm	40	40.107769	24737	3152
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_inv_double	40	40.847590	2676	738
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nless_def_1	40	40.095991	31747	6360
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_ok_r	40	40.036698	9054	3086
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_facts.Zpower_mod	40	40.487661	19989	2050
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.ln_exists	40	40.047046	10007	6884
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Signed.of_int_norm	40	1.175228	342	80	3.2.2.4	synth with cache (only 1: induction d; only 1: unfold norm; only 1: now induction d; only 1: now induction d).
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.Rlt_mult_inv_pos	40	0.456437	168	77	0.0.0.1.3	synth with cache (only 1: intros a b Ha Hb; only 1: apply Rmult_lt_0_compat; only 1: assumption; only 1: apply Rinv_0_lt_compat; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.COHERENT_VALUE.Z_to_two_compl_to_Z	40	40.062085	20333	3219
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_exists	40	40.085776	29462	4661
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rlt_trans	40	40.601096	62049	3258
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.Rle_mult_inv_pos	40	0.054159	8	4	1.0.3.0	synth with cache (only 1: intros x y H H0; only 1: apply Rmult_le_pos; only 1: assumption; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.eq_IZR_R0	40	41.111358	37994	2869
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_D_in	40	40.144852	13046	5764
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derive_pt_D_in	40	41.112228	18136	2309
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.NORM_SUBST_REC.norm_aux_spec	40	40.069775	28370	1104
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRopp_mult_distr_r	40	40.085447	6724	3411
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.eq_IZR	40	40.964666	33762	5257
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_spec_right	40	44.291046	39645	2084
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nless_def_3	40	40.241246	63007	4108
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.EqualityModulo.Zmult_eqm	40	40.102178	18118	2363
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lsr_1	40	40.111617	24208	1422
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.CyclicRing	40	40.063693	21819	2262
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nltb_double_mono_conv	40	21.292174	10475	3171	0.0.0.0.9.3.0.2	synth with cache (only 1: unfold Nleb; only 1: intros; only 1: eqb2eq; only 1: contradict H; only 1: rewrite !N2Nat.inj_double; only 1: apply leb_correct; only 1: apply mult_le_compat_l; only 1: now apply leb_complete).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.lt_rev_append	40	40.096243	34375	3544
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Q2R_m_Proper	40	40.044697	10961	4891
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.union_inter_cardinal	40	40.041727	13137	1762
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.elements_spec2	40	40.138313	57160	2353
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.not_0_IZR	40	40.050831	13551	2942
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.EqualityModulo.Zopp_eqm	40	40.071919	19916	2643
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_lt_reg_l	40	40.124025	21994	3382
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_ext	40	40.769106	34073	3989
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.GEN_DIV.Ntriv_div_th	40	40.062399	17380	3692
coq-tactician-stdlib.8.11.dev	Coq.Reals.ClassicalDedekindReals.DRealReprQup	40	40.074312	23768	4239
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_nz_l	40	40.041095	8540	1205
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.lbal_rb	40	40.052010	15162	2641
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_inv	40	40.053668	13603	4823
coq-tactician-stdlib.8.11.dev	Coq.Strings.Ascii.ascii_of_byte_via_N	40	40.149854	1902	762
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcabs.Qcabs_Qcle_condition	40	40.090775	10570	2660
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis2.Rabs_4	40	41.199882	16393	3986
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.EqualityModulo.Zmod_eqm	40	40.977659	15858	3025
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.uniqueness_sum	40	40.886047	10030	1826
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qle_shift_div_l	40	40.802008	12287	3435
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_modulo	40	9.593083	2938	1132	0.1.0.0.1.0.0.0.0.0.0.0.0.1	synth with cache (only 1: intros; only 1: assert ([|b|] > 0) by lia; only 1: assert (Z.div_eucl [|a|] [|b|] = ([|a|] / [|b|], [|a|] mod [|b|])); only 1: unfold Z.modulo, Z.div; only 1: destruct Z.div_eucl; only 1: auto; only 1: generalize (Z_div_mod [|a|] [|b|] H0); only 1: destruct Z.div_eucl as (h, l); only 1: destruct 1; only 1: injection H1 as [=? ?]; only 1: apply Zmod_small; only 1: generalize (Z_mod_lt b wB wB_pos); only 1: fold [|b|]; only 1: lia).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.rbal_rb	40	40.068213	20789	2324
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.sub_0_r	40	40.077102	21672	1955
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.is_empty_m	40	40.358902	43531	4553
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.le_0_IZR	40	40.662953	21603	4134
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_locally_ext	40	40.115289	29395	4269
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.mul_0_l	40	0.037650	11	4	0.0.3	synth with cache (only 1: intro n; only 1: zify; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.PowerRZ.Zpower_nat_powerRZ_absolu	40	40.059098	20019	2297
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis5.leftinv_is_rightinv	40	40.158313	57322	4587
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_minus_sym	40	40.055364	16174	4381
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcabs.Qcabs_diff_Qcle_condition	40	40.147346	8916	1654
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_linear_shift	40	40.061070	21212	2840
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.OrdProperties.sort_equivlistA_eqlistA	40	40.056935	16775	1846
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.NORM_SUBST_REC.norm_subst_spec	40	40.060209	20772	1423
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_inv	40	9.907860	4465	1019	0.1.0.16	synth with cache (only 1: unfold Rsqr; only 1: intros; only 1: field; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.square_not_prime	40	40.831733	28219	5193
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.Npdist_comm	40	40.394474	17696	2657
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.Subset_m	40	16.633272	6588	1173	17.3.1	synth with cache (only 1: repeat red; only 1: intros; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_mult	40	40.052099	12533	4763
coq-tactician-stdlib.8.11.dev	Coq.Strings.Byte.N.to_N_via_nat	40	40.101226	9162	4249
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.mem_m	40	40.511232	25368	2863
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nltb_double_plus_one_mono_conv	40	21.448991	12508	3974	0.0.0.1.6.4.0.2	synth with cache (only 1: unfold Nleb; only 1: intros; only 1: eqb2eq; only 1: contradict H; only 1: rewrite !N2Nat.inj_succ_double; only 1: apply leb_correct; only 1: apply le_n_S, mult_le_compat_l; only 1: now apply leb_complete).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.le_IZR	40	40.278241	28556	4535
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_Ifp.plus_Int_part1	40	40.066246	6482	3445
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetCompat.Update_Sets.lt_compat	40	40.087582	19651	3344
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.OrdProperties.gtb_1	40	40.111316	25604	3766
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mon_of_pol_ok	40	40.057865	19490	2527
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.nonpos_derivative_1	40	40.057576	13728	6824
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.eqb_correct	40	5.111351	6658	658	27.7	synth with cache (only 1: intros x y H; only 1: now apply Fin.eqb_eq).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_rec_bis	40	40.276519	18423	8237
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Req_EM_T	40	0.048073	7	4	0.0.1.2	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), Rlt_dichotomy_converse; only 1: unfold not; only 1: intuition eauto  3).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.le_IZR_R1	40	40.081722	25075	5044
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_nz_r	40	40.103327	8578	1370
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nless_def_4	40	40.130887	46713	4851
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.functional_dependent_choice_imp_functional_countable_choice	40	40.304429	124195	6682
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qle_shift_inv_l	40	40.365556	19680	3074
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph	40	40.158829	59630	3061
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Map.map_bst	40	40.123203	20285	2707
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.remove_2	40	40.500895	24965	3508
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.strictincreasing_strictdecreasing_opp	40	0.728702	368	135	3.0.0.0.2.0.2	synth with cache (only 1: unfold increasing, decreasing, opp_fct; only 1: intros; only 1: intro; only 1: intros; only 1: generalize (H x y H0); only 1: intro; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_lt_reg_r	40	40.070564	20489	4627
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.SubsetSetoid	40	1.578672	1418	235	6.3.0.5.2.0	synth with cache (only 1: split; only 1: red; only 1: congruence; only 1: red; only 1: intros; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_rat	40	40.023656	4694	2351
coq-tactician-stdlib.8.11.dev	Coq.Reals.PSeries_reg.CVU_continuity	40	40.082875	26976	4558
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.remove_3	40	40.151421	21369	3428
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.filter_1	40	40.119904	39468	5800
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Mapi.mapi_1	40	40.504502	16723	3219
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.index_correct4	40	40.756275	11666	1565
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_inv_incr	40	42.133420	13957	3269
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.IZR_ge	40	40.474243	17842	2039
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.rbal'_rb	40	40.056654	16158	2380
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zdiv_Zdiv	40	40.455531	10952	1976
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nless_z	40	40.531251	32486	3403
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.In_s_m	40	0.785326	28	7	1.0.4	synth with cache (only 1: intros x y H s s' H0; only 1: rewrite (In_eq_iff s H); only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_mult	40	40.091443	9803	2851
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.filter_2	40	40.117672	31726	3996
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_length	40	40.154658	32089	6160
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rdiv_plus_distr	40	6.750592	1300	222	5.1.10.2	synth with cache (only 1: intros x n; only 1: unfold Rdiv; only 1: intro; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRopp_mult_distr_l	40	40.042639	6253	3304
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.Empty_s_m	40	0.058612	10	2	2	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_reg.derivable_pt_lim_cos	40	40.043086	10581	6098
coq-tactician-stdlib.8.11.dev	Coq.Reals.Machin.tech	40	41.527626	13029	4410
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_R1	40	40.084361	18429	2573
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.lbalS_rb	40	40.048928	13857	1817
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_inv_phi_aux	40	41.139431	7883	3101
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_Ifp.plus_Int_part2	40	40.030635	7727	4389
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_mod_same	40	0.660521	36	17	0.2.2.0	synth with cache (only 1: intros; only 1: zero_or_not a; only 1: apply Z.mod_same; only 1: now Z.nzsimpl).
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.nsatz1.check_correct	40	40.031253	9731	1250
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.PI_RGT_0	40	40.072247	7375	4397
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.PNSubst1_ok	40	40.059241	21392	968
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.add_s_m	40	0.611706	4	3	1.0.0	synth with cache (only 1: intros x x' Hx s s' Hs a; only 1: rewrite !add_iff, Hx, Hs; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRmult_lt_compat_r	40	40.043270	10073	3262
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_linear_shift_eq	40	40.098531	23820	5170
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.remove_s_m	40	0.086951	4	3	0.1.0	synth with cache (only 1: intros x x' Hx s s' Hs a; only 1: rewrite !remove_iff, Hx, Hs; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lsr_add	40	40.743143	19941	2612
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.del_arb	40	0.015270	2	2	0.0	synth with cache (only 1: invrb; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.union_s_m	40	0.101655	3	3	0.0.0	synth with cache (only 1: intros s1 s1' Hs1 s2 s2' Hs2 a; only 1: rewrite !union_spec, Hs1, Hs2; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.to_uint_pos_surj	40	40.068975	19244	5763
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Mapi.mapi_bst	40	40.082486	26317	3882
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_l	40	40.202469	17535	3455
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.N0_less_2	40	40.132176	48563	4834
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.inter_s_m	40	0.178307	15	5	0.3.0	synth with cache (only 1: intros s1 s1' Hs1 s2 s2' Hs2 a; only 1: rewrite !inter_spec, Hs1, Hs2; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.elements_1	40	40.126162	21303	2317
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_rec_weak	40	40.102711	31203	7557
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CauchyMorphism	40	2.441776	4437	87
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Qpower_minus_positive	40	40.170837	19612	3290
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.diff_s_m	40	0.120855	6	3	0.3.0	synth with cache (only 1: intros s1 s1' Hs1 s2 s2' Hs2 a; only 1: rewrite !diff_spec, Hs1, Hs2; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.union_cardinal_inter	40	40.082712	24259	3231
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalString.NilZero.isi	40	40.330739	15556	4194
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_nonneg_nonneg	40	40.508408	11073	1659
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qle_shift_div_r	40	41.144678	12900	3921
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.triangle_rectangle_lt	40	40.072238	20637	5886
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Map_option.map_option_bst	40	40.319379	25964	3233
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_ind	40	40.105003	38056	4819
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.singleton_m	40	40.542183	16440	2498
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.PI_4	40	40.020185	5270	1510
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Map_option.map_option_2	40	41.423318	23516	2429
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.treeify_zero_rb	40	0.023957	7	4	0.0.0.3	synth with cache (only 1: constructor; only 1: auto; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.prime_div_prime	40	40.505276	19028	3452
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.compare_spec	40	40.120099	18317	4184
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.treeify_one_rb	40	0.207964	95	35	0.1.1.1.4	synth with cache (only 1: intros [| x acc]; only 1: intro H; only 1: intuition; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qle_shift_inv_r	40	40.622064	15838	3023
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rgeom.rotation_0	40	40.028641	6860	2306
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.of_inj	40	40.070004	18705	5391
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.lbalS_arb	40	40.076978	16067	2625
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nless_trans	40	40.148311	10461	1516
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.interp_PElist_ok	40	40.403556	19704	2265
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.rbalS_rb	40	40.048768	14279	2056
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_inv_phi	40	40.466147	1438	193
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalString.NilZero.sis	40	40.046480	11212	4219
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.eval_pol_mul	40	40.484495	19604	961
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P5	40	40.091248	27914	4252
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.filter_subset	40	0.063307	3	3	0.0.0	synth with cache (only 1: intros f Hf s s' Hs a; only 1: rewrite !filter_spec, Hs by auto; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.OrdProperties.leb_1	40	40.066992	23443	2911
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.IZR_le	40	40.711269	15811	2037
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qlt_shift_div_l	40	40.814166	13671	3689
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.add_m	40	40.349498	10484	3147
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.list_ascii_of_string_of_list_ascii	40	5.984147	13607	273
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.continuity_P2	40	40.119639	42027	6938
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Z_rem_plus	40	40.109716	10637	2856
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zmod_div	40	40.126756	27758	3243
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Algebra.poly_mul_mon_null_compat	40	40.131671	48491	4132
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.add_m	40	40.203673	12445	2812
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_increasing_Ql	40	40.171502	16663	3285
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nless_total	40	40.098971	14365	1373
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.Zdiv_pol_correct	40	40.515738	14787	2098
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.xforall_spec	40	40.176230	34413	4912
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_square_c	40	40.073962	18770	5582
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_inv_1	40	0.816694	150	52	1.0.8	synth with cache (only 1: intros e; only 1: rewrite <- cardinal_Empty; only 1: auto with map).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.p2ibis_bounded	40	40.071981	22510	4347
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_rel	40	40.561409	52521	3868
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.NoDupA_equivlistA_permut	40	40.095150	29039	7222
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zeven_mod	40	11.966564	5390	1192	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.7.3.0	synth with cache (only 1: intros; only 1: rewrite Zmod_odd; only 1: destruct a as [| [a| a| ]| [a| a| ]]; only 1: reflexivity; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: unfold Zeq_bool; only 1: rewrite Z.compare_refl; only 1: trivial; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: unfold Zeq_bool; only 1: rewrite Z.compare_refl; only 1: trivial; only 1: simpl; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.exp_ln	40	40.121224	19386	4993
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.map_induction	40	40.333823	19728	1550
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.sqrt2_neq_0	40	40.062687	5169	1294
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.OrdProperties.FoldOpt.add_fold	40	0.014520	3	3	0.0.0	synth with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.remove_m	40	40.070052	10003	3367
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.OrdProperties.FoldOpt.remove_fold_2	40	0.019796	3	3	0.0.0	synth with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_Rinv	40	40.051695	9250	2435
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.IZR_lt	40	40.149945	25202	1838
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rplus_lt_compat_l	40	41.480539	26233	1921
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.sub_succ_r	40	40.064145	18642	3893
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.elements_2	40	40.652965	27423	5284
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qlt_shift_inv_l	40	40.046564	13817	1793
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Ncompare_Gt_Nltb	40	24.142312	19268	3541	0.14.10.0.1.1	synth with cache (only 1: intros H; only 1: elim (sumbool_of_bool (Nleb a b)); only 1: intro H0; only 1: eqb2eq; only 1: now rewrite Nleb_alt, N.leb_le; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.limit_minus	40	40.654311	11228	6423
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.OrdProperties.leb_compat	40	40.042627	8941	3722
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nmin_le_2	40	0.084611	68	11	8.1	synth with cache (only 1: rewrite Nleb_Nle; only 1: N.solve_min).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.one_IZR_r_R1	40	40.422995	25313	3786
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.one_IZR_lt1	40	40.659661	26604	3226
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.OrdProperties.elements_split	40	40.032644	8480	1908
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_Ropp	40	40.433935	19106	5111
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lsl0	40	40.091709	30678	4810
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.continuity_P3	40	40.062284	17482	7631
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.p2ibis_spec	40	40.050349	15319	2108
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.OrdProperties.elements_Add	40	40.029478	7536	1389
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.PNSubst_ok	40	40.061096	17259	5248
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Z_quot_plus	40	40.060740	18606	2520
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P4	40	40.153161	22099	4850
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.map_induction_bis	40	40.120835	27638	2641
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Pcond_Fnorm	40	40.253843	24096	2194
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.PI_neq0	40	40.048476	11153	4943
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Un_cv_ext	40	40.100715	32670	7205
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nmin_le_3	40	1.448418	611	142	3.11	synth with cache (only 1: rewrite !Nleb_Nle; only 1: N.solve_min).
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.string_of_list_ascii_of_string	40	21.231010	22405	1483	0.20.2.0.0.78	synth with cache (only 1: elim s; only 1: reflexivity; only 1: simpl; only 1: intros a b H; only 1: rewrite H; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.single_z_r_R1	40	40.694355	17070	2842
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.Zgcd_pol_ge	40	41.232956	7981	1236
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Map_option.map_option_find	40	40.094823	16053	3066
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_div	40	40.050898	14498	3898
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.remove_m	40	40.544772	9410	2666
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.open_set_P6	40	0.063701	12	5	1.0.1.0	synth with cache (only 1: unfold open_set; only 1: intros Ext A B Equiv; only 1: intros; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.family_P1	40	4.427939	5898	767	5.4.14.0.4	synth with cache (only 1: intros x z; only 1: intro; only 1: intros A *; only 1: simpl; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nmin_le_4	40	0.512390	107	30	7.1	synth with cache (only 1: rewrite !Nleb_Nle; only 1: N.solve_min).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.OrdProperties.sort_equivlistA_eqlistA	40	40.057082	18045	1776
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.NORM_SUBST_REC.norm_aux_spec	40	42.363544	3129	296
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.OrdProperties.gtb_1	40	40.092684	27745	3086
coq-tactician-stdlib.8.11.dev	Coq.Reals.AltSeries.PI_tg_pos	40	40.634297	26596	6261
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.xelements_bits_lt_1	40	40.735884	26418	5088
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nmin_le_5	40	0.492822	95	27	8.0	synth with cache (only 1: rewrite !Nleb_Nle; only 1: N.solve_min).
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qlt_shift_div_r	40	40.709654	12152	3816
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.filter_spec	40	40.052488	13146	1883
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.xelements_bits_lt_2	40	40.305800	15722	7097
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fnorm_FEeval_PEeval	40	40.108659	24717	1338
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zodd_mod	40	18.764923	11052	1679	0.1.0.0.0.0.0.0.2.0.0.0.0.0.0.0.10.6.0	synth with cache (only 1: intros a; only 1: rewrite Zmod_odd, Zodd_even_bool; only 1: destruct a as [| [a| a| ]| [a| a| ]]; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: unfold Zeq_bool; only 1: rewrite Z.compare_refl; only 1: trivial; only 1: now destruct a as [| [| | ]| ]; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: unfold Zeq_bool; only 1: rewrite Z.compare_refl; only 1: trivial; only 1: now destruct a as [| [| | ]| ]; only 1: simpl; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Exp_prop.Reste_E_cv	40	40.052003	11283	7859
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Q2R_pow_N	40	19.685358	6248	2152	0.0.0.0.1.0.0.0.1.0.0.0.2.1.1.0.1	synth with cache (only 1: intros; only 1: destruct n; only 1: simpl; only 1: compute; only 1: apply Rinv_1; only 1: simpl; only 1: induction p; only 1: simpl; only 1: rewrite <- IHp; only 1: repeat rewrite Q2R_mult; only 1: reflexivity; only 1: simpl; only 1: rewrite <- IHp; only 1: repeat rewrite Q2R_mult; only 1: reflexivity; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Signed.to_of	40	40.142619	25331	2905
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_mod_plus	40	0.058406	14	10	0.2.0.0.0.0	synth with cache (only 1: intros; only 1: zero_or_not c; only 1: symmetry; only 1: symmetry; only 1: apply Z.mod_add; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.elements_spec2w	40	40.081700	24170	6190
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.rbalS_arb	40	40.055771	15450	3386
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_r	40	40.050478	7892	3746
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.eval_pol_opp	40	40.071664	23035	1277
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Qmult_integral	40	0.040468	4	4	0.0.0.0	synth with cache (only 1: intros (x1, x2) (y1, y2); only 1: unfold Qeq, Qmult; only 1: simpl; only 1: now rewrite <- Z.mul_eq_0, !Z.mul_1_r).
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qlt_shift_inv_r	40	41.026232	18230	2275
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zgcd_alt.Zgcdn_is_gcd	40	40.063657	20883	2713
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_identity	40	40.449113	15507	4234
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.partition_spec2'	40	0.049311	7	6	1.0.0.0.0.0	synth with cache (only 1: induction s as [| h l Hl x r Hr]; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite <- Hl, <- Hr; only 1: now destruct (partition f l), (partition f r), (f x)).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.norm_subst_ok	40	40.090912	25210	4219
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.Zdivide_pol_Zdivide	40	40.151918	43151	3727
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Signed.to_int_inj	40	40.203687	40160	2941
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_compat_l	40	40.120904	29116	4425
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Alt_first_term_bound	40	40.233526	23599	5513
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_pos_neg	40	40.495506	10451	1877
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.cauchy_min	40	40.095682	25927	6823
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.OrdProperties.leb_1	40	40.055814	11471	2243
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut_map.permut_map	40	40.507402	9132	924
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zgcd_is_gcd	40	40.768096	26321	4229
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.exist_cos	40	40.064297	18489	5685
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lsl0_r	40	40.064967	19636	3426
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRinv_r	40	40.064014	3489	830
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.torn_number_below_second_sequence	40	40.062792	11628	6519
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.PSubstL1_ok	40	40.073211	22021	4848
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Map2_opt.map2_opt_2	40	40.480683	20715	2519
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.not_Rlt	40	0.005716	1	1	0	synth with cache (only 1: eauto using Rnot_gt_ge with rorders).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.Rsepare	40	40.160903	26052	5173
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zdiv_mult_le	40	40.125778	17585	2445
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_inv	40	40.086482	25667	1182
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.OrdProperties.FoldOpt.add_fold	40	0.027256	3	3	0.0.0	synth with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.ifred_notred	40	40.166589	49545	8476
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.OrdProperties.FoldOpt.remove_fold_2	40	0.028970	3	3	0.0.0	synth with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_lt_compat	40	40.117274	13929	2305
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.sum_decomposition	40	40.071403	23020	3829
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.dicho_up_cv	40	40.058135	12947	6214
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rdiv_minus_distr	40	21.197571	7839	1302	0.4.3.23	synth with cache (only 1: intros H1; only 1: unfold Rdiv; only 1: intros l l'; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.union_m	40	40.333645	8368	1544
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_morph_T	40	20.638331	7540	2148	0.1.0.0.0.0.0.0.0.0.0.9	synth with cache (only 1: intros x y H z t H0; only 1: apply (CRealEq_trans _ (x + t)); only 1: destruct H0; only 1: split; only 1: intro abs; only 1: apply CReal_plus_lt_reg_l in abs; only 1: contradiction; only 1: intro abs; only 1: apply CReal_plus_lt_reg_l in abs; only 1: contradiction; only 1: apply CReal_plus_proper_r; only 1: apply H).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_div_exact_2	40	0.537776	121	39	0.0.0.3.0.0	synth with cache (only 1: intros a b Hb; only 1: zero_or_not b; only 1: now Z.nzsimpl'; only 1: rewrite Z.div_exact; only 1: auto; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.pow2_ge_0	40	0.078969	21	10	0.2.2.0	synth with cache (only 1: intros x; only 1: simpl; only 1: rewrite Rmult_1_r; only 1: apply Rle_0_sqr).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_div_gt	40	40.049877	12934	4119
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_init	40	40.565048	36366	2986
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_mod_zero_opp	40	0.229885	68	36	0.0.1.1.2	synth with cache (only 1: intros; only 1: zero_or_not b; only 1: apply Z.mod_opp_l_z; only 1: trivial; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.inter_m	40	40.433561	13021	2096
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRmult_lt_reg_r	40	40.045728	9265	3287
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetCompat.Update_Sets.compare_spec	40	40.160604	59998	3646
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_prop_repr	40	40.129402	39074	1571
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nltb_Ncompare	40	41.019730	24958	5268
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.filter_rb	40	0.207015	238	27	1.17	synth with cache (only 1: unfold partition, filter; only 1: auto_tc).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_continuous_pt	40	40.557819	44708	5149
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.partition_rb1	40	0.029481	13	6	0.0.4.0	synth with cache (only 1: rewrite partition_spec; only 1: simpl; only 1: unfold filter; only 1: auto_tc).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_Empty	40	40.126074	41142	6689
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.partition_rb2	40	0.019487	4	4	0.0.0.0	synth with cache (only 1: unfold partition; only 1: destruct partition_aux; only 1: simpl; only 1: auto_tc).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zgcd_spec	40	40.727879	14996	2567
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.tech_single_z_r_R1	40	40.669430	7881	1440
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_opp_r	40	40.039666	6561	2491
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.eqb_eq	40	40.097871	34491	3849
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeWithLeibniz.eq_leibniz_list	40	40.136826	27237	3347
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_compat	40	40.395072	10987	1869
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.fold_add_rb	40	0.698778	239	115	0.0.0.0.0.3.0.2	synth with cache (only 1: rewrite fold_spec, <- fold_left_rev_right; only 1: unfold elt in *; only 1: induction (rev (elements s1)); only 1: simpl; only 1: auto; only 1: simpl; only 1: unfold flip in *; only 1: auto_tc).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.Rabs_derive_2	40	40.050617	11409	6414
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.triangle_rectangle_le	40	40.064743	19210	5403
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nmin_lt_4	40	0.060006	3	3	0.0.0	synth with cache (only 1: rewrite <- !not_true_iff_false, !Nleb_Nle; only 1: rewrite N.min_le_iff; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_neg_neg	40	40.060134	17165	3108
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.pow2_abs	40	1.660633	72	38	0.0.0.0.0.0.1.0	synth with cache (only 1: intro; only 1: unfold Rabs; only 1: case (Rcase_abs x); only 1: intro; only 1: simpl; only 1: ring; only 1: intro; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P6	40	40.073304	22785	5471
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_commutes	40	40.271005	26214	2013
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.diff_m	40	40.410073	11505	1943
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fnorm_crossproduct	40	40.086072	12325	1779
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rinv_le_contravar	40	41.048214	14464	4866
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.fold_remove_rb	40	0.510637	135	73	0.0.0.1.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite fold_spec, <- fold_left_rev_right; only 1: unfold elt in *; only 1: induction (rev (elements s1)); only 1: simpl; only 1: auto_tc; only 1: simpl; only 1: unfold flip in *; only 1: auto_tc).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zdivide_Zgcd	40	40.533041	13012	1642
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_1	40	21.666563	11485	1941	0.6.36	synth with cache (only 1: intro Eq; only 1: rewrite cardinal_1, elements_Empty; only 1: now intros ->).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_continuous	40	40.083976	27501	6063
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_pred_repr	40	40.139322	47442	4521
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.OrdProperties.elements_Add_Above	40	40.063490	20553	1922
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.inter_rb	40	0.039167	7	7	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold inter; only 1: destruct compare_height; only 1: unfold linear_inter; only 1: auto_tc; only 1: auto_tc; only 1: auto_tc).
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.maj_cv	40	40.781167	29221	6000
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_opp_l	40	40.165964	9156	3288
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.PSubstL_ok	40	40.207471	20814	2922
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.for_all_1	40	40.098266	27143	2501
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.simpl_sin_n	40	40.054292	12156	3836
coq-tactician-stdlib.8.11.dev	Coq.Reals.AltSeries.PI_tg_decreasing	40	41.059901	36902	5981
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.wB_pos	40	0.008707	1	1	0	synth with cache (only 1: split).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_proper_r	40	40.042578	11082	2508
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.union_rb	40	0.540607	238	88	0.0.5.0.0.0.0	synth with cache (only 1: intros; only 1: unfold union; only 1: destruct compare_height; only 1: unfold linear_union; only 1: auto_tc; only 1: auto_tc; only 1: auto_tc).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_zdigits	40	0.009718	3	1	2	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Q2R_pow_pos	40	40.068762	21123	4325
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_more_than_1_digit	40	0.013828	2	2	0.0	synth with cache (only 1: red; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_inv_2b	40	6.836390	3038	954	3.0.0.0.0.3.1.2.0.0	synth with cache (only 1: intros; only 1: rewrite M.cardinal_1 in *; only 1: generalize (elements_mapsto_iff m); only 1: destruct (elements m); only 1: intuition; only 1: exists p; only 1: rewrite H0; only 1: destruct p; only 1: simpl; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_0	40	0.008410	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_div	40	40.462067	12643	2849
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.choose_spec1	40	40.097946	34822	3604
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_1	40	0.008411	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rle_Rinv	40	40.839147	20406	5722
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_m1	40	0.009522	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_compare	40	0.011274	6	2	4.0	synth with cache (only 1: intros x y; only 1: easy || now destruct y).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeWithLeibniz.eq_leibniz	40	40.188867	44186	4450
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_Equal	40	40.620546	8078	707
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_triang	40	40.051418	14603	2499
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.union_m	40	40.457082	19868	3035
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.Zdivide_pol_one	40	40.736800	60866	2773
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_0_1	40	1.297165	3458	76
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_facts.Zpow_mod_pos_correct	40	40.097448	34391	3407
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RinvN_cv	40	40.049360	11541	5981
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.inter_m	40	40.071108	13621	2012
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.xexists_spec	40	40.108462	36278	4689
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.Subset_refl	40	0.025387	24	4	5	synth with cache (only 1: congruence).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.of_iff	40	40.072708	19788	5514
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.OrdProperties.elements_split	40	40.029276	6486	2023
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_function_repr	40	40.078223	23071	2223
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.R_rm	40	40.081266	11280	4310
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreals.Q2R_inv	40	40.081933	14317	2012
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_inv_positive_p2ibis	40	40.048982	9794	2088
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.sin_no_R0	40	0.440228	203	97	0.0.0.0.5.0	synth with cache (only 1: intro; only 1: apply Rmult_integral_contrapositive_currified; only 1: apply pow_nonzero; only 1: discrR; only 1: apply Rinv_neq_0_compat; only 1: apply INR_fact_neq_0).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.Subset_trans	40	0.517323	418	84	4.2.8	synth with cache (only 1: intros; only 1: red; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.In_s_m	40	0.028601	7	3	2.1.1	synth with cache (only 1: intros x y H s s' H0; only 1: rewrite (In_eq_iff s H); only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.Empty_s_m_Proper	40	0.013185	7	2	5.0	synth with cache (only 1: intros a b Hab; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.restriction_family	40	40.125306	42945	6427
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.sum_Rle	40	41.303815	11084	2065
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.exp_inv	40	40.064242	15332	4932
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.inject_Q_one	40	0.023410	2	1	1	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_PI	40	40.038872	9366	4246
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.OrdProperties.elements_Add	40	40.038403	10708	1331
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.ins_rr_rb	40	40.091857	31636	3418
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_neg	40	40.109277	16352	3375
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.String_as_OT.lt_not_eq	40	40.230250	11244	2177
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qinv_lt_contravar	40	40.583802	15690	2302
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_add_mul_div	40	0.103312	33	11	4.2	synth with cache (only 1: unfold to_Z, minus_one; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.remove_s_m_Proper	40	1.231167	301	95	0.0.1.4.1	synth with cache (only 1: intros x y H s s' H0 a; only 1: do 2 rewrite remove_iff; only 1: rewrite H; only 1: rewrite H0; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.limit_index_above_all_indices	40	40.748607	10677	5438
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Zeq_bool_IZR	40	40.164977	34269	4576
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fnorm_ok	40	40.060452	15037	3736
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.eval_pol_norm	40	40.414438	23444	1342
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lsl_add_distr	40	40.076257	22348	2466
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Z_quot_plus_l	40	40.327353	15250	2381
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_lt_R0	40	40.478131	23921	5304
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.diff_m	40	40.664391	18519	2749
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Bv2N_N2Bv	40	40.279314	33349	3947
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.NORM_SUBST_REC.norm_subst_spec	40	40.026074	1969	592
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lsr_M_r	40	40.152661	23130	2195
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_phi_inv_positive	40	40.705502	4973	941
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.exists_1	40	40.124703	33959	3678
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_rw_correct	40	40.044071	12185	1444
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.normalise_sound	40	40.073577	18046	1250
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.OrdProperties.elements_Add_Below	40	40.067747	20969	2532
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_PI	40	41.285961	12970	3901
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_mult_distr	40	40.049749	13307	2105
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P7	40	40.062454	17013	5141
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Map2_opt.map2_opt_bst	40	40.447340	17198	2667
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.filter_weak_spec	40	40.091358	26585	2843
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_morph_Proper	40	40.136170	17305	4064
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_1	40	40.046987	7049	1767
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qpower_positive_comp	40	40.117433	13811	2383
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.inter_s_m_Proper	40	0.079828	12	5	0.2.0	synth with cache (only 1: intros s s' H s'' s''' H0 a; only 1: do 2 rewrite inter_iff; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P8	40	40.091275	18605	2491
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.choose_spec2	40	40.171385	58406	6612
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.norm_subst_ok	40	0.302836	18	10	5.0	synth with cache (only 1: intros; only 1: apply norm_aux_spec).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P6	40	41.138724	31505	3721
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.limit_free	40	40.137226	47856	6091
coq-tactician-stdlib.8.11.dev	Coq.Reals.NewtonInt.NewtonInt_P2	40	40.097236	35721	3402
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.OrdProperties.elements_Add_Above	40	40.056820	17538	2189
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.bit_0_spec	40	40.040913	11833	1576
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.positive_derivative	40	40.039174	8818	6080
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_square_nonneg	40	40.493818	55945	1748
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rderiv.Dminus	40	40.037126	8573	5481
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Rings_R.Rdi	40	40.057378	16171	5470
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_modulo_gt	40	40.056833	15117	4975
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_Equal2	40	40.249360	18816	2263
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Map2_opt.map2_opt_1	40	40.154494	15747	2868
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zis_gcd_gcd	40	41.232974	19912	2284
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.partition_filter	40	40.473207	25502	4448
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.le_epsilon	40	40.848989	6083	2579
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.union_s_m_Proper	40	3.651153	1490	266	4.11.0.0	synth with cache (only 1: unfold Subset; only 1: intros x y H s s' H0 a; only 1: do 2 rewrite union_iff; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.partition_1	40	40.140413	19909	3079
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_Add	40	40.134402	35070	3492
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.OrdProperties.elements_Add_Below	40	40.185404	18754	2654
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.filter_ok	40	40.031391	6566	487
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.choose_empty	40	40.066086	15193	1477
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.OrdProperties.set_induction_max	40	40.024728	6425	1005
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.Nplength_ultra_1	40	40.076571	25885	3449
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.bit_split	40	40.098209	15120	3855
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.xelements_sort	40	40.376128	55487	3663
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_mult_distr	40	40.443667	13560	2043
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.xelements_spec	40	40.124862	24402	4973
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.double_twice_firstl	40	40.027126	1894	470
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.R1_sqrt2_neq_0	40	40.066521	5449	2189
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.diff_s_m_Proper	40	3.057487	961	215	0.2.8.2	synth with cache (only 1: unfold Subset; only 1: intros s s' H s'' s''' H0 a; only 1: do 2 rewrite diff_iff; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.OrdProperties.set_induction_max	40	40.070264	14748	1917
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zquot_mult_cancel_r	40	40.063966	18881	4687
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Disjoint_alt	40	6.570310	2225	421	18	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.dicho_lb_dicho_up	40	40.053732	17331	2402
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.Subset_m	40	40.588465	22517	3650
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.partition_spec1'	40	40.205722	18979	1183
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.min_cv	40	40.385547	32524	5809
coq-tactician-stdlib.8.11.dev	Coq.btauto.Reflect.Completeness.reduce_poly_of_formula_sound_alt	40	40.104916	33863	4789
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.MapsTo_1	40	40.261320	53337	4356
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zquot_mult_cancel_l	40	40.521371	14322	2921
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.Rderivable_pt_abs	40	40.114738	40851	5437
coq-tactician-stdlib.8.11.dev	Coq.Strings.Byte.N.to_nat_via_N	40	40.043718	9393	4618
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.bit_lsr	40	40.089537	17499	1055
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_plus	40	40.253827	16064	5865
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_compat_r	40	0.028386	3	3	0.0.0	synth with cache (only 1: intros; only 1: rewrite H; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Algebra.poly_mul_mon_valid_compat	40	40.076309	22203	4062
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.ring_correct	40	40.054712	17980	2216
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_bound	40	40.064162	15879	6615
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.String_as_OT.compare	40	40.882536	117534	3622
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rmult_lt_compat_l	40	41.234430	8793	1136
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_triang_inv	40	40.060521	11986	4287
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.completeness_weak	40	40.696645	17369	6509
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.mem_1	40	40.114488	31531	3038
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.elements_1	40	40.168783	47256	4591
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qpower_comp	40	32.789740	6607	1233	0.2.1.2.4.0.2.0.0.2.0.0.0	synth with cache (only 1: intros x x' Hx y y' Hy; only 1: rewrite <- Hy; only 1: clear y' Hy; only 1: induction y; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: unfold Qpower_positive; only 1: rewrite Hx; only 1: reflexivity; only 1: simpl; only 1: rewrite Hx; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.sqrt3_2_neq_0	40	40.114916	4744	2469
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Qpower_plus	40	40.412046	12034	2426
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_add	40	40.424733	27834	2590
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zmod_divides	40	41.194944	14434	3546
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.PI4_RGT_0	40	0.070012	5	5	0.0.0.0.0	synth with cache (only 1: unfold Rdiv; only 1: apply Rmult_lt_0_compat; only 1: apply PI_RGT_0; only 1: apply Rinv_0_lt_compat; only 1: prove_sup0).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.bit_b2i	40	40.076318	23143	2382
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zmod_odd	40	40.053774	17290	2515
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Algebra.poly_mul_valid_compat	40	40.559663	13690	4402
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_rw_pow_correct	40	40.026858	2906	447
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_facts.Zpow_mod_correct	40	40.077680	19733	5304
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Signed.of_inj_pos	40	40.582397	15142	3433
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.repr_fun_choice_imp_excluded_middle	40	40.087508	27201	7878
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_div_alt	40	40.047999	12132	3793
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.exp_Ropp	40	40.099454	31957	4130
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P10	40	11.419086	8801	1382	0.0.3.1.4.12.0.3.1	synth with cache (only 1: intros; only 1: induction l as [| r l Hrecl]; only 1: repeat match goal with | _ => reflexivity | _ => progress subst | H:Some ?a = Some ?b |- _ => assert (a = b) by refine match H with | eq_refl => eq_refl end; clear H | H:None = Some _ |- _ => solve [ inversion H ] end; only 1: Nat.bitwise; only 1: simpl; only 1: case (Rle_dec r a); only 1: simpl; only 1: auto; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P9	40	40.126739	45661	5378
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.mem_2	40	40.547506	68923	5096
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_fold	40	40.320103	47584	1592
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rrepr_INR	40	40.690472	6752	1122
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.Zgcd_minus	40	40.451486	25153	2332
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.ins_arb	40	40.118588	10220	1964
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Bv2N_Nsize	40	40.161335	61574	4709
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.OrdProperties.set_induction_min	40	40.060399	8027	3178
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zmult_rem_distr_l	40	41.488768	7126	1191
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRmult_lt_reg_l	40	40.082965	8416	4314
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zmod_even	40	40.111516	20316	2892
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.bit_1	40	40.084143	25519	2256
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rdiv_lt_0_compat	40	40.090494	16746	7044
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.p2i_p2ibis	40	40.064098	16878	5623
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Ncompare_Lt_Nltb	40	40.679619	35008	8308
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_opp	40	40.117265	37944	3549
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_correct	40	40.043643	6419	676
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.choose_spec3'	40	40.098906	23601	3626
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Bv2N_Nsize_1	40	40.343652	17648	2186
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_Empty	40	40.362960	21436	4613
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.cond_eq	40	40.050055	13678	3666
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.Riemann_integrable_ext	40	40.105986	30696	4281
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.choose_spec3	40	40.101201	33139	4440
coq-tactician-stdlib.8.11.dev	Coq.Strings.Ascii.ascii_of_byte_via_nat	40	40.772621	1228	573
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Map2.map2_bst	40	40.241804	30823	3927
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.to_Z_split	40	40.040365	12543	1462
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkmult_rec_ok	40	40.097390	34803	2071
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.Zdivide_pol_sub	40	40.734958	21771	2629
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcabs.Qcabs_null	40	40.079327	16980	6415
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis2.Rlt_4	40	40.083993	24814	3647
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.Zgcd_bound	40	40.063966	18969	2887
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_opp_0	40	20.418551	7721	1439	8.8.9.2.3	synth with cache (only 1: simpl; only 1: repeat red; only 1: firstorder; only 1: discriminate; only 1: discriminate).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ClassicalDedekindReals.DRealQuot1	40	40.853710	42548	4353
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_minus	40	40.060386	16691	6959
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.positive_to_int31_spec	40	40.209960	12490	3276
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_increasing_Qr	40	40.115984	8263	1477
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis2.quadruple	40	0.027514	3	2	1.0	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis2.quadruple_var	40	0.056177	4	2	2.0	synth with cache (only 1: intro; only 1: field).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.mul_succ_l	40	40.061437	18410	2738
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.OrdProperties.set_induction_min	40	40.049963	12350	4110
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.add_rb	40	40.093740	28697	4513
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.canonical_Rsqr	40	40.036343	7932	1709
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Equal_cardinal	40	40.105365	33770	2179
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.OrdProperties.fold_3	40	40.101933	13389	3959
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis5.leftinv_is_rightinv_interv	40	40.041154	11080	3243
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Disjoint_sym	40	10.505018	4506	1013	3.1.17	synth with cache (only 1: intros m1 m2; only 1: compute; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_mult	40	40.058484	13203	6363
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.append_arb_rb	40	40.109596	22660	2193
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_twice	40	40.621916	8096	1829
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.equal_m	40	40.059900	6850	4029
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.positive_to_int31_phi_inv_positive	40	42.551228	18267	5177
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.bit_M	40	40.403602	51991	3047
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.subset_m	40	40.347673	9782	4319
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_div	40	40.049318	11969	5195
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.double_twice_plus_one_firstl	40
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.GP_finite	40	40.047084	12908	3622
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.Nplength_ultra	40	40.653656	31984	3515
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nmin_le_1	40	40.338787	23368	3320
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_div_exact_1	40	24.571097	10735	1171	0.0.0.0.11.23	synth with cache (only 1: intros a b; only 1: intro H; only 1: zero_or_not b; only 1: rewrite Z.div_exact; only 1: auto; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_triang_inv2	40	40.059605	13247	3460
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.Rinv_eq_compat	40	40.556547	10401	2058
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_const	40	40.523208	40195	6155
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.Rsum_abs	40	41.127029	18337	5015
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_succ	40	0.531632	111	67	7.0	synth with cache (only 1: intros; only 1: apply phi_phi_inv).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zgcd_div_swap0	40	40.836651	18894	2069
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P14	40	5.387511	2503	724	1.0.0.0.14	synth with cache (only 1: induction l; only 1: reflexivity; only 1: simpl; only 1: intro H; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkmult1_ok	40	40.037021	10780	2005
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_Ifp.plus_frac_part1	40	40.025659	6133	2301
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_twice_plus_one	40	41.349428	8762	6380
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.OrdProperties.fold_4	40	40.070777	18846	4499
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.bit_half	40	40.293601	28176	5651
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P7	40	40.478945	18896	3792
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_simplify_eq_correct	40	40.030909	3307	915
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Map2.map2_1	40	40.071369	22792	3303
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.negative_derivative	40	40.049765	11981	6946
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkmultm1_ok	40	40.031594	8182	2363
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_bound	40	40.046362	11154	5407
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.OrdProperties.FoldOpt.fold_equal	40	40.078859	18692	6356
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.OrdProperties.fold_3	40	40.154163	17809	7060
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.Rabs_triang_gen	40	1.177685	463	177	0.0.1.0.0.0.0.0.0.0.1	synth with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: right; only 1: reflexivity; only 1: do 2 rewrite tech5; only 1: apply Rle_trans with (Rabs (sum_f_R0 An N) + Rabs (An (S N))); only 1: apply Rabs_triang; only 1: do 2 rewrite <- (Rplus_comm (Rabs (An (S N)))); only 1: apply Rplus_le_compat_l; only 1: apply HrecN).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_eq_reg_l	40	40.072019	12401	2857
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Bv2N_upper_bound	40	40.040866	12125	892
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.repr_fun_choice_imp_relational_choice	40	40.087190	26797	3352
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.empty_1	40	38.070835	5928	1050	13.9.8	synth with cache (only 1: intros m x; only 1: red; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Map2.map2_2	40	40.205054	28810	5046
coq-tactician-stdlib.8.11.dev	Coq.Reals.PSeries_reg.continuity_pt_finite_SF	40	40.087949	29192	6241
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_reg.derivable_pt_sin	40	40.063514	18726	6143
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.elements_3	40	40.443256	33225	2091
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRmult_le_compat_l	40	40.407620	12683	4422
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.PNSubstL_ok	40	40.087548	28245	4645
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.neg_cos	40	40.052259	14296	4629
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_Ifp.plus_frac_part2	40	40.027112	6711	2528
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.elements_2	40	40.128349	38001	3670
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_div_same	40	40.800828	16551	4021
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.elements_3w	40	41.099769	35057	3303
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRmult_le_compat_r	40	40.064178	17272	5050
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.sum_f_R0_triangle	40	40.091281	28668	4319
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_lt_1	40	5.344820	2038	920	0.0.0.1.0.1.0.0.1.1	synth with cache (only 1: intros x y Hx _; only 1: intro l; only 1: apply Rsqr_incrst_0; only 1: rewrite 2!Rsqr_sqrt; only 1: auto; only 1: apply Rlt_le; only 1: now apply Rle_lt_trans with x; only 1: exact Hx; only 1: apply sqrt_pos; only 1: apply sqrt_pos).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.lt_rev_append	40	40.173801	35366	3829
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_2	40	40.411884	31775	6149
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_def1	40	40.219974	24875	4647
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.RightBound	40	40.096326	9284	2882
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.remove_rb	40	40.143164	29992	3717
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_simplify_eq_pow_correct	40	40.037577	5400	1336
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.empty_1	40	0.772186	294	88	4.1.3.5	synth with cache (only 1: intros m; only 1: intro H; only 1: intro abs; only 1: inversion abs).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Machin.Machin_2_3	40	41.766710	8661	2959
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.ByteV2N_upper_bound	40	40.391420	11186	645
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.filter_equal	40	40.493283	14940	2080
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Qpower_plus'	40	40.071819	12700	2417
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_eq	40	40.120881	11304	4522
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_reg_l	40	40.277432	12073	2470
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_increasing	40	44.083792	8155	1004
coq-tactician-stdlib.8.11.dev	Coq.Strings.Byte.N.of_N_via_nat	40	40.218303	6101	1208
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_neq_0	40	40.560770	26420	2832
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.treeify_cont_rb	40	40.060683	18269	2547
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.N2Bv_N2Bv_gen	40	40.068735	20889	2646
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rgeom.rotation_PI2	40	40.036048	10183	3262
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.R_dist_pos	40	40.096203	33247	4556
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_cos	40	40.055957	17337	3566
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_incr	40	40.047123	9848	6565
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_reg_r	40	40.117881	10563	1740
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zgcd_div_swap	40	40.436765	13155	2606
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_compat_l	40	20.569641	3368	1330	15	synth with cache (only 1: now unfold Zdiv.eqm; intros a b c ->).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_scal	40	40.458203	16745	6745
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Signed.of_to	40	40.053859	13310	2691
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.filter_ext	40	40.134108	18044	2893
coq-tactician-stdlib.8.11.dev	Coq.Strings.Ascii.byte_of_ascii_via_N	40	42.803120	3030	358
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.negate_correct	40	40.230680	8672	2256
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut_permut.Permutation_impl_permutation	40	40.080316	22462	5645
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.is_even_0	40	0.005693	1	1	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_div_plus	40	40.045086	11078	2267
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut_permut.permut_eqA	40	34.885399	21394	5490	0.0.0.12.0.4.1.0.0	synth with cache (only 1: induction 1; only 1: apply permut_refl; only 1: red; only 1: red; only 1: simpl; only 1: apply permut_cons_eq; only 1: auto using Equivalence_Reflexive, permut_refl; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.subset_m	40	40.412886	21623	2852
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zmult_rem_distr_r	40	40.274626	8189	2012
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.string_of_list_byte_of_string	40	40.498854	4058	294
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.is_empty_1	40	40.196181	79169	2716
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.r_list_pow_rev	40	40.362857	28049	1294
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.N2Bv_N2Bv_gen_above	40	40.166117	13599	2309
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_inv_2	40	40.275570	54383	4788
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_div_mult	40	40.072875	20678	4195
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P8	40	41.028146	25742	3630
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.bit_ext	40	40.118307	19668	1616
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inv	40	40.049802	12615	4760
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_gcd	40	40.045905	11576	2737
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_phi_inv_negative	40	41.380774	15330	4099
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.simple_setoid_fun_choice_imp_setoid_fun_choice	40	5.765325	1595	333	7.6.0.0.1	synth with cache (only 1: intros A B GenSetoidFunChoice R T Hequiv Hcompat Hex; only 1: apply GenSetoidFunChoice; only 1: easy; only 1: intro x; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_simplify_aux_ok	40	40.076516	10965	2553
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.Rlt_sqrt2_0	40	40.078299	23349	4101
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.treeify_aux_rb	40	40.379791	22467	2088
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.OrdProperties.choose_equal	40	40.132637	30527	2314
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.ln_increasing	40	40.075838	16324	5588
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.treeify_rb	40	40.120443	39399	5002
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.equal_m	40	40.059921	13680	6580
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Algebra.poly_add_linear_compat	40	40.056084	13769	3558
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.add_2	40	19.496484	13901	2126	4.4.2.14.1.2	synth with cache (only 1: intros m x y e e'; only 1: induction m; only 1: red; only 1: intros; only 1: simpl; only 1: eauto using add_2, add_3).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.add_s_m_Proper	40	28.660985	10457	1344	5.3.4.18.2	synth with cache (only 1: vm_compute; only 1: intros s s' H s'' s''' H0 a; only 1: do 2 rewrite add_iff; only 1: rewrite H; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.Zdivide_pol_sub_0	40	41.255249	25849	2055
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.is_empty_2	40	40.066857	16285	2134
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.elements_3	40	40.190571	80253	2702
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.limit_mul	40	40.047758	10985	6409
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_2a_sin	40	3.167471	659	383	0.0.2.0.0.0.0.0.0	synth with cache (only 1: intro x; only 1: rewrite double; only 1: unfold Rminus; only 1: rewrite cos_plus; only 1: generalize (sin2_cos2 x); only 1: rewrite double; only 1: intro H1; only 1: rewrite <- H1; only 1: ring_Rsqr).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_sub	40	0.013635	2	2	0.0	synth with cache (only 1: intros; only 1: apply phi_phi_inv).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_def2	40	40.140531	16529	4135
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.N2Bv_Bv2N	40	40.116608	39144	4465
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.xgmapi	40	40.302145	25284	2488
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_sub_carry	40	0.061105	12	5	0.0.0.2	synth with cache (only 1: unfold sub31carryc, sub31, interp_carry; only 1: intros; only 1: repeat rewrite phi_phi_inv; only 1: apply Zplus_mod_idemp_l).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Signed.to_of	40	40.081709	27261	1742
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.OrdProperties.fold_4	40	40.082583	19537	4854
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rrepr_IPR2	40	40.991574	23654	2931
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_neg	40	0.131418	7	7	0.0.0.0.0.0.0	synth with cache (only 1: intro; only 1: unfold sin; only 1: replace (- x)² with x²; only 1: case (exist_sin x²); only 1: intros; only 1: ring; only 1: ring_Rsqr).
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.mkX_ok	40	40.055579	18754	1608
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_neg	40	0.103963	5	5	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold cos; only 1: replace (- x)² with x²; only 1: reflexivity; only 1: ring_Rsqr).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zrem_rem	40	40.171549	11303	6223
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.Zgcd_pol_div	40	41.301721	17573	2289
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_plus	40	40.037043	8708	3685
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.list_byte_of_string_of_list_byte	40	40.420796	4922	283
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.compact_P1	40	40.143991	53963	6914
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Signed.of_int_norm	40	0.993621	664	105	0.0.1.0.11	synth with cache (only 1: induction d; only 1: unfold norm; only 1: now induction d; only 1: unfold norm; only 1: now destruct nzhead).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_pred_c	40	0.127023	3	2	1.0	synth with cache (only 1: intros; only 1: apply spec_sub_c).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_phi_inv	40	43.589249	5402	1773
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_pred	40	0.095106	4	3	1.0.0	synth with cache (only 1: intros; only 1: rewrite <- spec_1; only 1: apply phi_phi_inv).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_gcd_gt	40	40.047335	11742	4657
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nmin_lt_3	40	40.122430	20017	7199
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Specs.filter_iff	40	40.549016	16777	2141
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CauchyMorphismInv	40	2.202511	3053	71
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.RmaxAbs	40	40.891677	6813	3833
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.compact_P2	40	40.087036	12854	7153
coq-tactician-stdlib.8.11.dev	Coq.Reals.Exp_prop.exp_plus	40	40.073214	23505	4211
coq-tactician-stdlib.8.11.dev	Coq.Reals.AltSeries.PI_tg_cv	40	40.469671	24562	6292
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Qpower_positive_eq_zero	40	40.047781	15247	2365
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.partition_spec1	40	40.060602	18543	3296
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zgcd_alt.Zgcd_is_gcd	40	40.055467	17811	2578
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.map2.xgmap2_r	40	2.292942	1388	416	0.0.0.0.0.0.0.2.1.0.0.0.2.1.0.0.0	synth with cache (only 1: induction i; only 1: intros; only 1: destruct m; only 1: auto; only 1: simpl; only 1: auto; only 1: intros; only 1: destruct m; only 1: auto; only 1: simpl; only 1: auto; only 1: intros; only 1: destruct m; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.min_elt_spec1	40	40.089494	22182	6460
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Alt_CVU	40	41.276111	24336	5153
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P5	40	40.084793	24680	4397
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_reg_r	40	40.039853	2696	764
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkmult_c_pos_ok	40	40.037690	10631	2778
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.cnf_of_list_correct	40	40.053053	15987	2195
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.OrdProperties.FoldOpt.fold_equal	40	40.086906	22921	8627
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRmult_eq_reg_r	40	40.037468	7935	4160
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.approx_maj	40	40.111722	35362	5629
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.Alembert_sin	40	40.055762	13348	7057
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.POWER.Ppow_pos_ok	40	40.037763	11318	1808
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.bit_lsl	40	40.299375	20347	1962
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.first_indices_increasing	40	40.140916	15191	2541
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.Zgcd_pol_correct_lt	40	41.622656	11506	1858
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Ropp_neg_pos	40	40.435274	22083	2535
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Specs.for_all_iff	40	40.045797	7580	1776
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.OrdProperties.choose_equal	40	40.090316	31077	2110
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zgcd_ass	40	40.877585	18332	2333
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.gmapi	40	40.176021	24978	3155
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_opp_plus_distr	40	40.054336	6074	2693
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.R_dist_sym	40	40.090313	31231	4421
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.is_pol_Z0_eval_pol	40	40.730452	32876	2829
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.pow_2_n_neq_R0	40	40.117419	35329	7094
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zmod_POS_correct	40	40.131818	15249	1965
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_opp_involutive	40	40.527524	12165	3657
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_div21	40	40.095694	21428	3656
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.sum_growing	40	34.583827	16034	3237	1.8.2.0.3.0.1.0.0.0.0	synth with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: apply H; only 1: do 2 rewrite tech5; only 1: apply Rle_trans with (sum_f_R0 An N + Bn (S N)); only 1: apply Rplus_le_compat_l; only 1: apply H; only 1: do 2 rewrite <- (Rplus_comm (Bn (S N))); only 1: apply Rplus_le_compat_l; only 1: apply HrecN).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.SubEqui_P1	40	0.044539	5	3	0.2.0	synth with cache (only 1: intros; only 1: simpl; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CR_of_Q_proper	40	40.147060	18499	3733
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut_permut.permutation_Permutation	40	40.166802	22835	2813
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zgcd_1_rel_prime	40	40.087100	24542	4541
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_opp_gt_lt_contravar	40	40.077813	11686	1296
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.Rcontinuity_abs	40	40.063096	19289	5948
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.gen_setoid_fun_choice_imp_setoid_fun_choice	40	40.076707	19134	3561
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.compact_EMP	40	40.125180	16022	946
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Qpower_positive_zero	40	40.050284	11098	1501
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.diff_rb	40	40.415214	31332	7139
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Specs.exists_iff	40	40.106722	18836	7636
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_div_scal	40	40.693604	18518	7201
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_add_c	40	40.127797	4126	608
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.derivable_pt_tan	40	40.692949	13331	5142
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Q2RpowerRZ	40	40.035468	11184	1792
coq-tactician-stdlib.8.11.dev	Coq.Reals.PSeries_reg.SFL_continuity_pt	40	40.579185	31456	5312
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.mapi_1	40	40.457215	37044	3798
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.rel_prime_dec	40	40.120336	20045	4552
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_succ_r	40	40.083905	13594	1511
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.min_elt_spec3	40	40.092103	24267	8132
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.POWER.Ppow_N_ok	40	40.146618	15892	3577
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_scal_right	40	40.063970	16382	5641
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_mul	40	0.013417	2	2	0.0	synth with cache (only 1: intros; only 1: apply phi_phi_inv).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_gen_setoid_fun_choice	40	40.059862	14641	1881
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_opp_ge_le_contravar	40	40.070023	21182	3965
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.mapi_2	40	40.117917	38315	6191
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_facts.Zpower_divide	40	40.070280	22261	4512
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.elements_3w	40	40.090144	28921	6778
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.exist_sin	40	40.062425	18531	6580
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreals.Q2R_div	40	40.045539	12070	2735
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.inject_Q_plus	40	40.065741	20080	2429
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.approx_min	40	40.968122	15241	6197
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.maxN	40	40.112386	41333	4813
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_succ_c	40	41.274504	3781	1901
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_simplify_eq_pow_in_correct	40	40.035456	6841	1303
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.sum_cte	40
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_Zabs	40	40.463565	11905	3655
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.inject_Q_lt	40	40.402458	15196	1341
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.ln_exp	40	40.122879	16113	3267
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.map_2	40	13.508748	6019	2370	2.0.3.0.0.2.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply mem_2; only 1: rewrite mem_find; only 1: destruct H as (v, H); only 1: generalize (find_1 H); only 1: clear H; only 1: unfold map; only 1: intros; only 1: rewrite gmapi in H; only 1: destruct (find x m); only 1: auto; only 1: discriminate).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.N2Bv_sized_Nsize	40	11.715778	3537	1157	0.0.2.3.0.1.3.0.0.0.0.0.11	synth with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: induction p; only 1: simpl; only 1: unfold Bcons; only 1: congruence; only 1: simpl; only 1: unfold Bcons; only 1: congruence; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_functional_rel_reification	40	1.130944	1062	230	0.0.7.1.0.1.4	synth with cache (only 1: intros A B SetoidFunChoice T Hexists; only 1: destruct SetoidFunChoice with (R := eq) (T := T) as (f, Hf); only 1: apply eq_equivalence; only 1: now intros * ->; only 1: firstorder; only 1: exists f; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition.partition_iff_1	40	40.379751	11441	3601
coq-tactician-stdlib.8.11.dev	Coq.Reals.AltSeries.exist_PI	40	41.156641	15800	5311
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.setoid_fun_choice_iff_gen_setoid_fun_choice	40	40.053993	13056	2731
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.choose_1	40	40.111801	37778	5563
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_simplify_eq_in_correct	40	40.061411	6462	1133
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.pos_le_add	40	40.800739	26605	2703
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_pos_mod	40	40.466374	25288	4947
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.find_2	40	12.702770	18333	1449	1.3.41	synth with cache (only 1: compute; only 1: intros m x e; only 1: auto using Proofs.find_1, find_2).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lor_lsr	40	40.728650	20342	1730
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_minus	40	40.076646	9713	4415
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.R_dist_refl	40	40.074468	19014	6755
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition.partition_iff_2	40	40.128141	16292	4828
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zmult_rem	40	40.395336	13473	4168
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition.partition_Partition	40	40.266366	15806	1829
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_lt_0_alt	40	40.425038	23388	5971
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.R_uncountable	40	40.337329	69856	5434
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.compact_eqDom	40	40.072760	21956	6913
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.partition_spec2	40	40.061055	18398	3179
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.ring_correct	40	40.064927	5562	708
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Ropp_Rmin	40	20.570285	6135	2040	0.1.3.4.1.0.2.1.0.0	synth with cache (only 1: intros; only 1: apply Rmax_case_strong; only 1: intros; only 1: apply Rmin_case_strong; only 1: auto using Rle_antisym; only 1: auto with real; only 1: intros; only 1: apply Rmin_case_strong; only 1: auto with real; only 1: auto using Rle_antisym).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.R_dist_eq	40	40.091925	28163	3353
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.eq0_cnf	40	40.187010	19910	1444
coq-tactician-stdlib.8.11.dev	Coq.Reals.NewtonInt.NewtonInt_P3	40	40.104044	36058	4765
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.min_elt_spec2	40	40.108745	36422	6455
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.xnormalise_correct	40	40.034410	10171	1926
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_impl.fcons_ok	40	40.195281	19319	1509
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.choose_2	40	40.108551	31696	5079
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.single_limit	40	40.092279	19443	3550
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P11	40	40.092929	29553	7796
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Signed.to_int_inj	40	40.095072	28684	5068
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.null_derivative_0	40	40.066115	19307	6100
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rderiv.Dx_pow_n	40	40.088668	21362	6626
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_In	40	40.254949	12106	1331
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_add_carry_c	40	40.844901	3408	725
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P12	40	40.158000	21857	3370
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.tan_plus	40	40.770541	7855	3909
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_lt_succ	40	40.254217	14637	2768
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.opp_inject_Q	40	40.052280	15841	2085
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.filter_equal	40	40.079330	25942	3052
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nbit0_Blow	40	41.333510	18968	2569
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_is_even	40	40.065394	17772	6473
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.partition_ok1	40	40.090850	7461	3240
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.Rlt_sqrt3_0	40	40.074561	10583	4424
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons_fcons_inv	40	40.073207	21828	3364
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P9	40	40.664960	15007	2946
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.prime_dec_aux	40	40.893615	17249	2904
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.max_elt_spec1	40	40.106898	20997	6834
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zplus_rem	40	40.104158	20446	3561
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.filter_ext	40	40.680364	25779	3166
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.Npdist_ultra	40	40.260100	21316	3411
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.partition_ok2	40	40.068895	9199	3393
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.add_1	40	40.249011	62216	4628
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_sym	40	40.186393	15267	3384
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.pow_2_n_growing	40	40.114854	35756	4960
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.continuity_finite_sum	40	40.088913	30534	5961
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.choose_empty	40	40.139870	27271	3899
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_pos_appart_zero	40	40.280797	18589	3213
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons0_fcons_inv	40	40.072641	15210	3682
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zplus_rem_idemp_l	40	40.586905	23554	3967
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zplus_rem_idemp_r	40	40.301180	18482	4093
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P18	40	0.394917	139	58	5.0.0.0.0.0	synth with cache (only 1: simple induction l; only 1: intros; only 1: reflexivity; only 1: intros; only 1: simpl; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkmult_c_ok	40	40.037102	9303	2599
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_2a	40	40.073877	22139	3798
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.choose_3'	40	40.904601	32759	4222
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.UL_sequence	40	40.457400	7551	1782
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.filter_subset	40	40.753156	13299	4275
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_id	40	40.074949	16455	4960
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.choose_3	40	40.531370	27369	4909
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.cardinal_m_Proper	40	0.762217	287	118	0.0.0.0.0.0.1.0.0.1	synth with cache (only 1: intros m m' Hm; only 1: do 2 rewrite cardinal_fold; only 1: apply fold_Equal with (eqA := eq); only 1: auto; only 1: compute; only 1: auto; only 1: compute; only 1: auto; only 1: compute; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.cos_PI4	40	40.073219	10008	1853
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.abs_IZR	40	40.251913	13853	4875
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_lt_0	40	40.062450	16277	6751
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Qpower_mult_positive	40	40.190589	20105	3052
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lor_le	40	40.466672	20746	4268
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.ln_1	40	40.059169	17206	5152
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.min_elt_1	40	40.085400	26229	6104
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zdiv_eucl_extended	40	40.067563	20303	4694
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rrepr_IPR	40	41.076434	20492	6320
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_facts.rel_prime_Zpower_r	40	40.419183	26783	2470
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.find_2	40	1.207804	913	147	0.12.4	synth with cache (only 1: intuition; only 1: apply find_2; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P13	40	40.071508	22461	4075
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zmod'_correct	40	40.924847	18330	2383
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_lt_1_alt	40	40.271656	25300	5617
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_Empty	40	40.266188	8019	1846
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_add	40	41.134448	7146	1367
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.bit_0	40	40.078391	16047	1257
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_simple_setoid_fun_choice	40	40.059541	17884	2393
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.add_3	40	40.589610	26598	3228
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.Make.remove_min_spec1	40	40.249429	43386	1844
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rrepr_IZR	40	40.221278	14339	2915
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.MapsTo_1	40	40.157276	36235	3412
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.map_1	40	40.068055	18882	6207
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Reduce.reduce_aux_eval_compat	40	40.050436	12878	2188
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CR_of_Q_zero	40	40.068218	2554	547
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zmult_rem_idemp_l	40	40.494527	14186	4710
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_Add	40	40.301766	20004	3049
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.div_Zdiv	40	40.227253	14856	3143
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Bnth_Nbit	40	40.139370	32729	3859
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.elements_2	40	1.037844	346	98	0.7.1.1	synth with cache (only 1: intros; only 1: unfold elements, MapsTo, eq_key_elt; only 1: rewrite <- elements_mapsto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.max_var_le	40	40.151923	37992	3623
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.bit_add_or	40	40.360125	37987	2002
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.max_elt_spec3	40	40.065782	15530	8158
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.Heine_cor1	40	40.059108	18928	4559
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.max_elt_spec2	40	40.094315	20219	7525
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_add_carry	40	40.312421	7023	1149
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkadd_mult_ok	40	40.033452	9374	2302
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.derive_pt_tan	40	40.056063	14832	4410
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P15	40	40.046985	13881	2198
coq-tactician-stdlib.8.11.dev	Coq.Reals.ClassicalDedekindReals.DRealAbstrFalse	40	40.664760	19986	2613
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.remove_1	40	40.067971	18663	2002
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_sqrt	40	40.056150	12986	4428
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_fold	40	40.065907	14343	2089
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_Rsqr	40	40.750211	22075	5576
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.CV_plus	40	40.114984	38413	5952
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inv_rat	40	40.076749	15974	2311
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons00_fcons_inv	40	40.097117	30595	3208
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.pow_2_n_infty	40	40.105473	27834	5248
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nbit_Nsize	40	40.112936	38717	5745
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.lt_inject_Q	40	40.056431	17419	2625
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.elements_3w	40	0.504039	547	65	1.16.0	synth with cache (only 1: intros m; only 1: apply PX.Sort_NoDupA; only 1: exact (elements_sort (is_bst m))).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.cardinal_1	40	0.009172	1	1	0	synth with cache (only 1: exact (fun m : Raw.t elt => elements_aux_cardinal nil)).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis5.IVT_interv_prelim0	40	40.083664	24351	3259
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis2.continuous_neq_0	40	41.612893	23651	3092
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_comp	40	40.888693	21063	6674
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.Make.remove_min_spec2	40	40.129582	33674	5620
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Reduce.reduce_eval_compat	40	40.067540	16171	3882
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.max_var_correct	40	41.147161	43164	5821
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.R_dist_tri	40	40.075714	24865	3408
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_sub_c	40	40.029989	4936	1643
coq-tactician-stdlib.8.11.dev	Coq.Strings.Byte.N.of_nat_via_N	40	40.125174	9533	2488
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P21	40	0.033194	5	3	2.0.0	synth with cache (only 1: intros; only 1: rewrite H; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.ceqb_spec'	40	40.073751	25230	1214
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.mod_Zmod	40	40.381375	16611	3552
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_plus	40	40.170542	49367	4858
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P22	40	0.241991	68	19	1.2.2.0	synth with cache (only 1: intros; only 1: induction l1 as [| r l1 Hrecl1]; only 1: easy; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.mem_1	40	40.226897	25002	1525
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_cardinal	40	40.072172	17035	2417
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Ropp_Rmax	40	40.269530	18659	4782
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.elements_2	40	0.671233	377	97	0.4.3.3	synth with cache (only 1: intros m x e; only 1: unfold elements, MapsTo, eq_key_elt; only 1: rewrite elements_mapsto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.mem_2	40	40.283075	46495	5841
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.increasing_decreasing	40	40.050481	13751	6139
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_partition	40	40.437348	17107	4753
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P16	40	40.613948	11181	4934
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.cardinal_1	40	0.013750	1	1	0	synth with cache (only 1: exact (fun m : Raw.tree elt => elements_aux_cardinal nil)).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.add_pow_list_ok	40	40.047940	15874	2209
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.sin_PI4	40	40.071080	10839	2743
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.elements_3w	40	0.352562	109	31	1.7.0	synth with cache (only 1: intros m; only 1: apply PX.Sort_NoDupA; only 1: exact (elements_sort (is_bst m))).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_opp	40	40.609773	53135	6179
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P23	40	0.907848	424	138	2.0.7.0.0.0	synth with cache (only 1: simple induction l1; only 1: intro; only 1: reflexivity; only 1: intros n; only 1: simpl; only 1: auto with real).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.add_mult_dev_ok	40	40.026699	6397	2568
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.prime_dec	40	40.645808	27645	3610
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.update_mapsto_iff	40	40.047471	13931	3174
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_reg.derivable_sin	40	0.040789	5	5	0.0.0.0.0	synth with cache (only 1: unfold derivable; only 1: unfold derivable_pt; only 1: intro; only 1: exists (cos x); only 1: apply derivable_pt_lim_sin).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_2a	40	40.066850	20939	3845
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.remove_2	40	40.084134	27391	4076
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.ln_lt_inv	40	40.074793	22383	7568
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_reg.derivable_pt_cos	40	40.054479	16540	4871
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P10	40	40.272975	22863	5354
coq-tactician-stdlib.8.11.dev	Coq.Reals.PSeries_reg.SFL_continuity	40	40.057180	15268	4538
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.cond_pos_sum	40	41.150049	19879	3319
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.tech9	40	2.236724	946	271	11.0.0.0	synth with cache (only 1: intros x y z; only 1: intros n H; only 1: apply Rge_le; only 1: now apply growing_prop).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_reg.derive_pt_sin	40	0.681199	309	60	1.10.0	synth with cache (only 1: intros; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_sin).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_reg.derivable_cos	40	0.993421	145	89	1.3.0.0.0	synth with cache (only 1: unfold derivable; only 1: unfold derivable_pt; only 1: intro; only 1: exists (- sin x); only 1: apply derivable_pt_lim_cos).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_le_compat_l_half	40	41.203634	1992	1095
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CR_of_Q_opp	40	40.283809	24608	3729
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nbit_Bth	40	40.088945	25925	6661
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_le_0	40	40.107705	13503	6288
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.le_inject_Q	40	40.086486	10959	3769
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.NORM_SUBST_REC.norm_aux_PEadd	40	40.035385	8890	785
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.equal_2	40	1.004629	437	127	0.0.0.4.0.1.1	synth with cache (only 1: unfold equal; only 1: intros (m, b, a) (m', b', a') cmp; only 1: rewrite Equivb_Equivb; only 1: rewrite equal_Equivb; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.addmuldiv_spec	40	40.071320	20478	2162
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CR_of_Q_le	40	40.069457	22492	3050
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.R_dist_plus	40	40.133092	23915	3471
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_reg.derive_pt_cos	40	1.267402	427	156	1.8.0	synth with cache (only 1: intros; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_cos).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.update_dec	40	40.047594	10252	1823
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.is_empty_1	40	40.085058	30913	2134
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.is_empty_2	40	40.100584	24190	3552
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_2a_cos	40	40.043669	11670	3346
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons1_fcons_inv	40	40.076991	23329	3865
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_opp	40	32.481778	4498	2810	9.7	synth with cache (only 1: destruct x; only 1: apply phi_phi_inv).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.is_even_bit	40	40.102515	20766	2772
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.Complete.radd_ext3_Proper	40	0.015479	2	1	1	synth with cache (only 1: exact (Radd_ext Reqe)).
coq-tactician-stdlib.8.11.dev	Coq.Strings.Ascii.byte_of_ascii_via_nat	40	40.175329	2546	686
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.Complete.rmul_ext3_Proper	40	0.011212	3	1	2	synth with cache (only 1: exact (Rmul_ext Reqe)).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.Complete.ropp_ext3_Proper	40	0.010922	2	1	1	synth with cache (only 1: exact (Ropp_ext Reqe)).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inv_increasing_Qr	40	40.089365	22500	2596
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rgeom.isometric_rotation_0	40	40.028106	7218	2062
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_sub_carry_c	40	40.215884	4238	1701
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Qpower_mult	40	40.583698	18748	2783
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.is_even_spec	40	40.161188	62670	3598
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis5.IVT_interv_prelim1	40	40.043571	8940	1628
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.min_elt_3	40	40.428949	23425	7550
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.add_1	40	40.149866	52857	4101
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.R_dist_mult_l	40	40.058311	18485	3780
coq-tactician-stdlib.8.11.dev	Coq.Reals.Machin.Machin_4_5_239	40	41.824430	7847	1207
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_minus	40	40.391036	15976	6449
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nxor_BVxor	40	40.068542	24843	2327
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.not_prime_divide	40	40.099525	34506	5548
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.min_elt_2	40	41.176761	33424	5393
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Signed.to_int_pos_surj	40	40.087915	24957	6268
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.is_even_lsl_1	40	40.186999	17888	1880
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.cos_sym	40	40.108222	21966	4662
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.equal_2	40	2.864998	975	275	0.0.0.7.0.0.0	synth with cache (only 1: unfold equal; only 1: intros (m, b) (m', b') cmp; only 1: rewrite Equivb_Equivb; only 1: rewrite equal_Equivb; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nand_BVand	40	40.050050	13472	3342
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inv_increasing	40	41.358311	12531	3895
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CRealQ_dense	40	40.110774	37672	3827
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zmult_rem_idemp_r	40	40.429995	12087	3343
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_invQ	40	40.767621	16931	2113
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.remove_3	40	40.230991	43270	3628
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_mult	40	40.667956	17441	5159
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.setoid_fun_choice_iff_simple_setoid_fun_choice	40	40.066370	17937	2926
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.quotient_by_2	40	41.177401	8277	551
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons2_fcons_inv	40	40.226030	18713	4542
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.xnegate_correct	40	40.368222	13312	3736
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.map2.xgmap2_l	40	40.224936	85100	3539
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.ln_inv	40	40.050110	13857	5075
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.tan_PI4	40	40.060784	17754	2778
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.tan_2a	40	40.049053	12847	4573
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_sqrt2	40	40.066546	18502	4476
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.update_in_iff	40	40.058290	17451	4646
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.find_1	40	40.099584	33464	3164
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_const	40	0.182017	67	27	0.0.0.0.4.0	synth with cache (only 1: intro; only 1: intro; only 1: unfold derivable_pt; only 1: exists 0; only 1: unfold fct_cte, derivable_pt_lim; only 1: apply derivable_pt_lim_const).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.inject_Q_mult	40	40.253135	10778	1845
coq-tactician-stdlib.8.11.dev	Coq.Reals.Exp_prop.exp_pos_pos	40	40.088727	18420	5732
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_opp_c	40	40.180575	2664	1281
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.null_derivative_1	40	40.059259	9510	5943
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mult_dev_ok	40	40.145290	6844	3718
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmax_assoc	40	40.068448	23167	2902
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.tan_0	40	40.078282	26336	4456
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.sqrt_main_trick	40	40.230068	8309	865
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zquot_Zquot	40	40.201685	12495	2922
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_opp_carry	40	40.332781	3644	1757
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Signed.of_inj_pos	40	40.069882	19880	4497
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.add_2	40	40.113808	35942	5002
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.NORM_SUBST_REC.norm_aux_PEopp	40	40.076843	31714	1387
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.add_3	40	40.076105	20643	2833
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.N2Bv_sized_Bv2N	40	40.162278	62321	1419
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.max_elt_1	40	40.092564	22108	7106
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Reduce.reduce_aux_le_compat	40	40.032631	6167	1155
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.archimed	40	40.787048	76218	2346
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_surject	40	40.091343	5754	1981
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.phi2_phi_inv2	40	40.503883	6014	1341
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.tan_neg	40	40.089591	27824	5073
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.sqrt_main	40	40.336226	12059	1957
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.limit_comp	40	40.726463	9535	5574
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.SubEqui_P3	40	30.717809	13808	2380	1.8.2.1.1.0.0.16	synth with cache (only 1: intro; only 1: induction N as [| N HrecN]; only 1: reflexivity; only 1: intro; only 1: intros; only 1: simpl; only 1: Morphisms.f_equiv; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Exp_prop.exp_pos	40	40.080089	25564	5770
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Qpower0	40	40.076187	12412	1691
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.two_p_power2	40	40.078480	23981	4201
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zodd_rem	40	0.655545	213	80	1.1.0.0.3.0	synth with cache (only 1: intros; only 1: rewrite Zrem_even; only 1: destruct a as [| p| p]; only 1: trivial; only 1: now destruct p; only 1: now destruct p).
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.MaxVar.max_var_nformulae_mono_aux	40	41.057081	23618	3091
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_mul_c	40	40.132842	4796	733
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.sqrt_test_false	40	40.110419	16421	4288
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_shift	40	0.063061	10	7	0.2.0.1.0	synth with cache (only 1: intro x; only 1: rewrite sin_minus; only 1: rewrite sin_PI2; only 1: rewrite cos_PI2; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.MaxVar.max_var_nformulae_mono_aux'	40	40.717582	14622	2889
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.map2.gmap2	40	40.629649	26272	4076
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CR_of_Q_pos	40	40.061090	19341	2703
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.diff_mapsto_iff	40	40.561308	13012	4513
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rminmax	40	40.942080	17457	4495
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.compact_P3	40	40.138036	39911	5272
coq-tactician-stdlib.8.11.dev	Coq.Reals.AltSeries.Alt_PI_ineq	40	40.787395	22159	2445
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.Heine_cor2	40	40.129673	19621	5900
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.sin_antisym	40	40.168891	24066	3187
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.derive_increasing_interv	40	41.081202	21768	5138
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.NORM_SUBST_REC.norm_aux_spec	40	40.086051	30026	2431
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.plus_Rsqr_gt_0	40	40.048342	12448	4571
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.derivable_pt_lim_fs	40	40.070670	20785	6544
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.cv_cvabs	40	40.062403	17866	5844
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.map2_1	40	40.069556	22822	3039
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Qsqr_nonneg	40	11.198405	3706	599	1.1.5.9.6	synth with cache (only 1: red; only 1: intros [[| n| n] d] Ha; only 1: discriminate || simpl; only 1: discriminate; only 1: discriminate).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.Pphi_avoid_ok	40	40.037983	10425	3205
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.cv_dicho	40	40.099443	15547	4261
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.SubEqui_P2	40	40.114313	18356	6250
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P11	40	40.283217	14634	3871
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.inject_Q_le	40	40.061608	18780	3083
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.cauchy_abs	40	40.113910	39000	4552
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.derivable_finite_sum	40	0.858051	287	121	0.0.0.0.0.0.0.2.0	synth with cache (only 1: intros; only 1: intro; only 1: unfold derivable_pt; only 1: pose proof (derivable_pt_lim_finite_sum An x N) as H; only 1: induction N as [| N HrecN]; only 1: exists 0; only 1: apply H; only 1: exists (sum_f_R0 (fun k : nat => INR (S k) * An (S k) * x ^ k) (Init.Nat.pred (S N))); only 1: apply H).
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.MaxVar.max_var_nformulae_correct_aux	40	40.760072	20678	3803
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_head00	40	40.093302	15217	3851
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_fun_choice	40	40.164011	59531	6850
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CR_cv_above_rat	40	40.926756	31495	3588
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Q_of_RcstR	40	40.080531	28438	2674
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.derivable_pt_lim_finite_sum	40	40.271731	15441	6277
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.diff_in_iff	40	40.051691	14119	4397
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.compact_P4	40	40.068501	15271	6610
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P19	40	29.839034	40096	3285	49.2.0.0	synth with cache (only 1: induction l; only 1: intros; only 1: easy; only 1: eauto with rorders).
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.max_var_nformalae_correct	40	41.412122	14399	5240
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.inject_Z_plus	40	40.082037	19003	2363
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_square_c	40	40.030369	7822	2207
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.dicho_up_car	40	0.540565	137	53	0.0.1.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: induction n as [| n Hrecn]; only 1: assumption; only 1: simpl; only 1: destruct (sumbool_of_bool (P ((Dichotomy_lb x y P n + Dichotomy_ub x y P n) / 2))) as [Heq| Heq]; only 1: rewrite Heq; only 1: assumption; only 1: rewrite Heq; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.opp_inject_Z	40	40.068819	22565	3725
coq-tactician-stdlib.8.11.dev	Coq.Reals.PSeries_reg.CVN_R_CVS	40	40.432230	21911	6888
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_facts.rel_prime_Zpower	40	40.124164	20007	2106
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.remove_1	40	40.081324	18349	3051
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_div21	40	40.023449	6477	1248
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.map2_2	40	40.058439	16310	3876
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.sin_0	40	40.091488	16571	3563
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.remove_2	40	40.121626	32263	3934
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_tail00	40	0.052178	8	7	1.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (phi_inv_phi x); only 1: rewrite H; only 1: simpl phi_inv; only 1: intros H'; only 1: rewrite <- H'; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.cnf_normalise_correct	40
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Reval_formula_compat	40	40.124953	44972	4444
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.CV_Cauchy	40	40.088119	18743	5421
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_const	40	41.061123	77796	5663
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_scal	40	40.614986	25419	6920
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.PI2_lower_bound	40	40.820311	16713	5106
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_sin	40	0.607634	163	40	0.0.0.7.0	synth with cache (only 1: intro x; only 1: rewrite sin_plus; only 1: rewrite sin_PI2; only 1: rewrite cos_PI2; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_repr_fun_choice	40	40.104785	35045	5501
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rderiv.Dcomp	40	40.047113	13036	4941
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.restrict_mapsto_iff	40	40.619657	21709	4918
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.Fold.xfoldi_1	40	40.040150	11956	1754
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_div	40	40.091346	26022	2426
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.ln_mult	40	40.093415	18071	3767
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_Rsqr	40	0.034239	11	6	1.1.0.0.0	synth with cache (only 1: unfold derivable; only 1: unfold derivable_pt; only 1: intro; only 1: exists (2 * x); only 1: apply derivable_pt_lim_Rsqr).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_id	40	0.294512	93	27	0.0.0.0.6	synth with cache (only 1: unfold derivable; only 1: unfold derivable_pt; only 1: intro; only 1: exists 1; only 1: apply derivable_pt_lim_id).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.sqrt_test_true	40	40.088793	11133	3375
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmin_assoc	40	40.088354	31094	4189
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.functional_rel_reification_and_repr_fun_choice_imp_setoid_fun_choice	40	40.061496	12550	2475
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.N2Bv_N2Bv_sized_above	40	40.469527	29783	1079
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.max_elt_3	40	40.072262	18914	8498
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.fold_1	40	40.184838	25324	1992
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.maj_by_pos	40	40.091878	32997	5069
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.PI2_RGT_0	40	0.821156	188	66	1.7.0	synth with cache (only 1: destruct pi2_int; only 1: unfold PI; only 1: lra).
coq-tactician-stdlib.8.11.dev	Coq.Reals.AltSeries.Alt_PI_RGT_0	40	41.150077	23295	4839
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P12	40	40.876091	16807	4728
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.compact_P5	40	40.078318	19997	6818
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_head0	40	40.089163	12038	5039
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zquot_mult_le	40	40.480853	27719	3834
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.restrict_in_iff	40	40.063889	16605	4004
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.eval_nformula_bound_var	40	0.037411	6	3	0.3.0	synth with cache (only 1: intros; only 1: rewrite xnnormalise_correct; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.fold_1	40	40.649918	30616	2943
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_le_1_alt	40	40.429313	5214	1507
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.compact_carac	40	40.049740	10593	6136
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.tan_minus	40	40.031243	7444	3378
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.in_bdepth	40	40.336127	27313	3812
coq-tactician-stdlib.8.11.dev	Coq.Reals.NewtonInt.NewtonInt_P4	40	40.092671	32658	4482
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_mod	40	41.392986	10970	1841
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P26	40	3.990444	1314	633	0.0.0.0.1.0.1.0.0.1.0.0	synth with cache (only 1: intros s1; only 1: elim s1; only 1: simpl; only 1: intros s2 n H; only 1: inversion H; only 1: intros; only 1: induction i as [| i Hreci]; only 1: reflexivity; only 1: simpl; only 1: apply H; only 1: apply lt_S_n; only 1: apply H0).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.max_elt_2	40	40.081463	23533	7399
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_id	40	40.111232	36556	5332
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkopp_pow_ok	40	7.282700	794	340	1.0.0.0.2.0.0.2.1.0.3	synth with cache (only 1: destruct p; only 1: simpl; only 1: Esimpl; only 1: rewrite !mkmult_pow_ok; only 1: Esimpl; only 1: simpl; only 1: rewrite mkmult_pow_ok; only 1: Esimpl; only 1: change x with (x ^ 1)  at 1; only 1: now rewrite <- pow_pos_add, Pos.add_1_r, Pos.succ_pred_double; only 1: now rewrite ?(rpow_pow_N pow_th)).
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.eval_nformula_dec	40	40.031639	8665	2322
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.derive_increasing_interv_ax	40	40.096434	15788	4565
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.phi_gcd	40	40.817571	11304	973
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.cv_cauchy_1	40	40.315654	24898	6478
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.limit_inv	40	40.528678	18968	4842
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P17	40	40.125723	34118	5161
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.cnf_negate_correct	40	41.656338	16193	3863
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_gcd	40	40.063440	17522	1452
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.Ptail_pos	40	40.088182	21053	2901
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rderiv.D_pow_n	40	40.244667	16607	5098
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.cos_3PI4	40	40.031762	7969	3220
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zrem_divides	40	40.079216	23425	5350
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.remove_3	40	40.167418	58431	5241
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_3PI2	40	40.091772	8453	3648
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.elements_1	40	40.167769	28241	1778
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.find_1	40	40.183646	29755	2032
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_2PI	40	40.065030	9226	3726
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.continuity_compact	40	40.089129	29277	6649
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.derivable_pt_finite_sum	40	40.087599	26485	6681
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zrem_Zmod_pos	40	0.168158	106	23	0.4.3	synth with cache (only 1: intros a b Ha Hb; only 1: generalize (Zquotrem_Zdiv_eucl_pos a b Ha Hb); only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zrem_odd	40	40.074880	16676	3794
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.continuity_seq	40	40.102146	20791	6273
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zquot2_odd_remainder	40	40.851940	21975	2033
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Disjoint_m_Proper	40	40.069967	15352	4592
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Partition_m_Proper	40	40.042858	10553	3478
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_2PI	40	40.051495	11537	2810
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.elements_3	40	32.150088	33312	3299	28.0.0.21.5.4.4	synth with cache (only 1: intros; only 1: unfold elements, MapsTo, eq_key_elt; only 1: unfold Raw.elements; only 1: apply elements_aux_sort; only 1: apply (is_bst m); only 1: auto; only 1: now subst).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.update_m_Proper	40	40.091872	12731	3658
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_le_1	40	40.092464	16059	5725
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Zpower_Qpower	40	40.334301	17067	2330
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.ln_Rinv	40	40.069381	20846	5176
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.sin_3PI4	40	40.069589	8559	3533
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.iter_int31_iter_nat	40	40.258908	60520	3581
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.fold_1	40	40.095613	26558	1617
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.sqrt_step_correct	40	40.977123	6598	1310
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_facts.prime_power_prime	40	40.428110	25937	4761
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_inj	40	40.183014	11874	6086
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.CV_mult	40	41.047159	8026	5383
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P27	40	7.686702	5426	769	2.2.0.0.0.0.0.5.3.10	synth with cache (only 1: intros l m n; only 1: induction l; only 1: elim m; only 1: induction n; only 1: reflexivity; only 1: now f_equal; only 1: intros p IH H; only 1: trivial; only 1: simpl; only 1: now f_equal).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.local_mkpow_ok	40	40.039393	9650	728
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.functional_rel_reification_and_repr_fun_choice_iff_setoid_fun_choice	40	40.055938	8371	1871
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.elements_1	40	40.285037	12482	1141
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P28	40	3.793385	2750	395	4.1.0.7.13	synth with cache (only 1: intro n; only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: now f_equal).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P20	40	40.132544	48614	4363
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.restrict_m_Proper	40	40.049249	11798	3773
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zrem_even	40	40.061678	16215	6124
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_Rsqr	40	41.242099	30703	5901
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CR_cv_below_rat	40	40.092440	7891	4017
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.elements_3	40	40.727905	90591	2669
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Reduce.linear_reduce_aux	40	40.068019	22147	3268
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.completeness	40	40.217124	90707	4373
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.equal_1	40	40.102727	14830	1439
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.sqrt2_spec	40
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.eval_Psatz_sound	40	40.229453	27609	3216
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.iter_sqrt_correct	40	40.335364	14757	2376
coq-tactician-stdlib.8.11.dev	Coq.Reals.ClassicalDedekindReals.DRealQuot2	40	40.750086	4626	1509
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.diff_m_Proper	40	40.055786	13738	4014
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.Equivb_Equivb	40	40.071560	22837	3045
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.Ptail_bounded	40	40.257551	16698	3854
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.SubEqui_P4	40	40.561253	33014	3527
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis5.IVT_interv	40	40.059957	11699	5821
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inject	40	40.097596	10281	2020
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.PI2_3_2	40	40.027523	5652	3504
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.dicho_lb_car	40	40.120300	41434	6558
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_comp	40	40.078130	15142	5634
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi_pow_ok	40	40.030574	8964	1163
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.sum_eq_R0	40	25.374752	28334	2900	0.0.0.0.0.18.5.2.0.6.0.1.0.0.0	synth with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: apply H; only 1: apply le_n; only 1: unfold IZR; only 1: simpl; only 1: rewrite HrecN; only 1: rewrite (H (S N)); only 1: auto with real; only 1: apply le_n; only 1: intros; only 1: apply H; only 1: apply le_S; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_opp	40	40.169665	39014	5763
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Reduce.linear_reduce	40	40.067112	19880	3370
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.adherence_P4	40	3.552419	2034	392	5.2.1.11	synth with cache (only 1: red; only 1: unfold included, neighbourhood; only 1: intros P Q H l; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P13	40	40.048666	13049	5328
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.SubEqui_P5	40	40.082188	21318	5513
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.Equivb_Equivb	40	40.375839	12641	2283
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.cos_PI6	40	40.041921	11715	2558
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_plus	40	41.232121	50785	5089
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.equal_1	40	40.096243	15417	2053
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P24	40	40.071212	22450	3684
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.derive_increasing_interv	40	40.047046	10042	6190
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_minus	40	40.167806	39414	5823
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.makeCuttingPlane_ns_sound	40	40.745072	5722	1067
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.addmuldiv31_equiv	40	43.173836	6256	1118
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.equal_1	40	40.251793	18122	1518
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.ln_continue	40	40.090612	17048	4518
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.tech13	40	40.140352	35874	4207
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.neg_sin	40	40.048899	12828	5013
coq-tactician-stdlib.8.11.dev	Coq.Reals.PSeries_reg.CVU_cv	40	40.087992	29284	6133
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_less_alt	40	40.053718	16465	3059
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derive_pt_const	40	1.300061	653	129	1.10.0.2	synth with cache (only 1: intro; only 1: intros; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_const).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.ring_rw_pow_correct	40	40.024947	7848	948
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P25	40	40.801696	30566	4484
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.map_1	40	40.102107	33497	5154
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.cv_cauchy_2	40	40.081699	28649	6060
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkmult_pow_ok	40	40.103051	3384	605
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CR_cv_const	40	40.415761	27314	4907
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.Complete.AlmostField.add_inj_r	40	40.102866	26057	3154
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.map_1	40	40.212618	31582	4520
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_PI_x	40	40.073153	19288	6448
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.sqrt_init	40	40.067583	15647	944
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rgeom.isometric_rotation	40	40.029704	6655	3430
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.shift_unshift_mod_2	40	40.075005	12997	1624
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rgeom.isometric_rot_trans	40	40.023635	4309	1524
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.map_2	40	40.182183	30875	5382
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_mult	40	40.135115	46788	5512
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.exist_cos0	40	40.103787	13513	5998
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis5.f_interv_is_interv	40	40.110240	39096	5056
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.mapi_1	40	40.123531	41516	4356
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_add_mul_div	40
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zeven_rem	40	40.388097	32801	3165
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1._PI2_RLT_0	40	0.799034	204	76	0.6.3	synth with cache (only 1: destruct pi2_int; only 1: unfold PI; only 1: lra).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.fun_choice_and_ext_functions_repr_and_excluded_middle_imp_setoid_fun_choice	40	40.066497	18799	2193
coq-tactician-stdlib.8.11.dev	Coq.Reals.Machin.Machin_2_3_7	40	41.181214	10194	1575
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.sqrt2_step_def	40	40.080921	26379	4261
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derive_pt_Rsqr	40	5.873775	2534	460	1.18.0	synth with cache (only 1: intro; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_Rsqr).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.sort_equivlistA_eqlistA	40	40.093031	29694	3996
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.negbE	40	1.361257	64	20	2.3.2	synth with cache (only 1: intros; only 1: rewrite H; only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.tan_PI6	40	40.045763	11753	3971
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_pos_mod	40	40.089383	11054	2485
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.map_2	40	40.548460	51048	5582
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.Z_oddE	40	0.028884	2	2	0.0	synth with cache (only 1: rewrite Zmod_odd; only 1: now destruct Z.odd).
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.xdenorm_correct	40	40.372209	14569	2044
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.sqrt2_lower_bound	40	40.110349	22027	2437
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.Z_evenE	40	0.028626	2	2	0.0	synth with cache (only 1: rewrite Zmod_even; only 1: now destruct Z.even).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.diveucl_21_spec_aux	40	40.048030	15637	1916
coq-tactician-stdlib.8.11.dev	Coq.Reals.Exp_prop.derivable_pt_lim_exp_0	40	40.077094	24312	4735
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.Rpower_plus	40	40.187522	21837	4394
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.gtb_1	40	40.072291	20889	2774
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_period	40	40.066406	19068	4030
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.derive_increasing_interv_var	40	40.046617	10384	5646
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_tail00	40	40.220949	3686	730
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_scal	40	41.823521	52534	5890
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.equal_2	40	40.069565	19262	4461
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.leb_1	40	40.146726	13228	2849
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.mapi_1	40	40.216144	28572	4309
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.div2_phi	40	40.064885	20426	3318
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_period	40	40.053000	13736	3701
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.sqrt2_step_correct	40	40.257307	6342	1861
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.Complete.AlmostField.gen_phiPOS_inj	40	40.138267	37663	2478
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_head00	40	42.117748	5915	1302
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.mapi_2	40	40.139714	29032	5172
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.sqrt_spec	40
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.map2_1	40	40.287295	22213	2340
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkpow_ok	40	40.029718	3183	846
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.gtb_compat	40	40.062213	9908	1765
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.SubEqui_P6	40	40.059666	18661	3852
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_shift	40	40.053953	13789	4042
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zquotrem_Zdiv_eucl_pos	40	40.435871	8370	1898
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.PI2_Rlt_PI	40	0.062180	6	3	0.2.1	synth with cache (only 1: destruct pi2_int; only 1: unfold PI; only 1: lra).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.leb_compat	40	40.050944	11150	5390
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_tail0	40	40.496703	8835	2939
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P14	40	40.350941	9539	2942
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Reval_nformula_dec	40	40.073613	20260	2930
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.Complete.AlmostField.gen_phiN_inj	40	40.141244	26619	2960
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.SubEqui_P7	40	40.059347	17825	6093
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake_ord.compare_end_Cmp	40	0.723724	499	96	0.5.0.1.8	synth with cache (only 1: destruct e2; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.elements_split	40	40.058432	18472	3428
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.cos_0	40	40.046335	11272	4573
coq-tactician-stdlib.8.11.dev	Coq.Reals.Exp_prop.derivable_pt_lim_exp	40	40.057643	17087	5542
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.Complete.AlmostField.gen_phiN_complete	40	40.092832	21446	5245
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.setoid_functional_choice_first_characterization	40	40.174755	8301	1570
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.cutting_plane_sound	40	41.192351	11626	1459
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.PI2_1	40	40.032183	7595	3538
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.derivable_pt_lim_cosh	40	40.063769	13123	6798
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.elements_Add	40	40.089087	24933	4022
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Qpower_decomp	40	41.478537	13625	2306
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.SubEqui_P8	40	40.193700	21750	5070
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zrem_Zmod_zero	40	29.546672	12086	3020	0.5.0.0.1.5.0.0.0.10.0	synth with cache (only 1: intros a b Hb; only 1: rewrite Z.rem_divide; only 1: split; only 1: intros (c, Hc); only 1: rewrite Hc; only 1: subst; only 1: apply Z.mod_mul; only 1: trivial; only 1: intros Hab; only 1: now apply Z.mod_divide; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.phi_nz	40	40.047736	10071	3608
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.derivable_pt_lim_sinh	40	40.338344	9801	5162
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.tan_increasing	40	40.750269	24345	5631
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.genCuttingPlaneNone	40	41.454079	21480	3153
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.fun_choice_and_ext_pred_ext_and_proof_irrel_imp_setoid_fun_choice	40	40.063525	9917	2171
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_head0	40	40.224303	6070	930
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.cv_pow_half	40	40.093007	28439	5355
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_facts.Zdivide_power_2	40	40.129311	45862	4675
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P15	40	40.059917	19290	5008
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.growing_ineq	40	40.608486	33460	5845
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.sum_incr	40	40.959410	41192	5679
coq-tactician-stdlib.8.11.dev	Coq.Reals.NewtonInt.NewtonInt_P5	40	40.064358	19850	6729
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.Complete.Field.ring_S_inj	40	40.130000	33381	2124
coq-tactician-stdlib.8.11.dev	Coq.Reals.PSeries_reg.CVU_ext_lim	40	40.536189	42726	5946
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.map2_2	40	40.360450	23705	4537
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.tail031_equiv	40	40.505442	4316	1950
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_lor	40	41.604972	11059	1689
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.iter2_sqrt_correct	40	40.437678	5714	1228
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.denorm_correct	40	40.028079	7321	1939
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.prolongement_C0	40	40.106599	36227	5596
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake_ord.eq_seq	40	0.029640	3	2	1.0	synth with cache (only 1: intros; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.Complete.Field.gen_phiPOS_discr_sgn	40	40.184923	21352	1211
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake_ord.lt_slt	40	0.014296	3	2	1.0	synth with cache (only 1: intros; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.eval_nformula_mk_eq_pos	40	40.154349	12194	1815
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_comp	40	40.128833	35682	5242
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derive_pt_plus	40	40.654410	20491	2755
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.SIN_bound	40	40.073331	21918	4835
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.min_elt_Empty	40	12.237989	4517	1384	3.0.0.0.1.0.10	synth with cache (only 1: unfold min_elt, Below; only 1: intros; only 1: rewrite elements_Empty; only 1: induction (elements m); only 1: auto; only 1: destruct a; only 1: discriminate).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.tan_is_inj	40	40.728464	19465	4190
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.eq_true_iff_eq	40	0.040960	5	5	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.min_elt_MapsTo	40	15.728091	7835	2470	0.0.1.2.0.3.0.1.0.2.0.1	synth with cache (only 1: unfold min_elt, Below; only 1: intros; only 1: rewrite elements_mapsto_iff; only 1: induction (elements m); only 1: discriminate; only 1: destruct a; only 1: injection H; only 1: intros; only 1: subst; only 1: constructor; only 1: red; only 1: auto with ordered_type).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.setoid_functional_choice_second_characterization	40	40.048641	12539	3116
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.gsspec	40	40.201357	40454	2943
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.Rpower_mult	40	40.762519	21633	4196
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.mapi_2	40	40.101213	28062	5340
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.agree_env_subset	40	40.109283	26355	3053
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.head031_equiv	40
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.gsident	40	40.111252	38571	4539
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.RTautoChecker_sound	40	42.772284	42487	3153
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_less	40	40.461313	12911	2801
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zquot_Zdiv_pos	40	40.742047	22315	3561
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_land	40	40.098218	24051	6026
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.elements_Add_Above	40	40.109363	28257	3801
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi_dev_ok	40	40.094179	6173	1622
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.RWeakChecker_sound	40	44.296157	40652	3302
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.CV_opp	40	40.389349	16903	5723
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derive_pt_opp	40	40.078290	25456	3070
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.decreasing_ineq	40	40.089375	13337	6860
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.ub_opp	40	1.525419	1035	151	0.6.0.11	synth with cache (only 1: pose proof PI_RGT_0 as H; only 1: intros; only 1: unfold Rdiv; only 1: lra).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.COS_bound	40	40.051192	12777	5769
coq-tactician-stdlib.8.11.dev	Coq.Reals.NewtonInt.antiderivative_P1	40	40.044949	11299	6063
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.eval_pexprSC	40	40.084903	30795	2621
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_tail0	40	40.044719	9912	3052
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.sum_cv_maj	40	40.072551	23806	5054
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.IAF	40	40.189371	16407	4630
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.agree_env_jump	40	40.113725	33767	4004
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P16	40	40.063257	17445	5208
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.Rpower_O	40	40.234716	19635	4384
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.continuity_ab_maj	40	40.605575	13384	4233
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.eval_formulaSC	40	40.120372	49220	3278
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.xmap2_lr	40	40.094892	30002	4619
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_lxor	40	40.098618	30705	5774
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.sin_PI3	40	40.069758	13065	6937
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.quotient_by_2	40	40.464242	22109	2019
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.derivable_pt_exp	40	40.063709	17659	6298
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.derivable_exp	40	0.038129	10	6	0.1.0.0.0	synth with cache (only 1: unfold derivable; only 1: intro; only 1: unfold derivable_pt; only 1: exists (exp x); only 1: apply derivable_pt_lim_exp).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.Complete.Field.gen_phiZ_inj	40	40.071861	21774	3045
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.derivable_cosh	40	0.024263	5	5	0.0.0.0.0	synth with cache (only 1: unfold derivable; only 1: intro; only 1: unfold derivable_pt; only 1: exists (sinh x); only 1: apply derivable_pt_lim_cosh).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.derivable_sinh	40	0.042606	10	7	0.1.0.0.0	synth with cache (only 1: unfold derivable; only 1: intro; only 1: unfold derivable_pt; only 1: exists (cosh x); only 1: apply derivable_pt_lim_sinh).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.derive_pt_exp	40	0.037754	9	7	1.0.0.2.0	synth with cache (only 1: intro x; only 1: apply derive_pt_eq_0; only 1: pose proof derivable_pt_lim_exp_0 as H0; only 1: unfold derivable_pt_lim in H0; only 1: apply derivable_pt_lim_exp).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.map2_1	40	40.082736	20343	2070
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.continuity_ab_min	40	40.062105	13632	6524
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt_main_trick	40	40.218004	7038	938
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_sin_0	40	40.169423	10727	2686
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.derive_pt_cosh	40	0.353080	50	44	3.0.0	synth with cache (only 1: intro; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_cosh).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.map2_commut	40	40.070236	22931	2357
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_sin_0_var	40	40.101598	5797	1252
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.ValAdh_un_exists	40	40.085661	27175	6273
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.IVT	40	40.121050	32947	4124
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.derive_pt_sinh	40	0.326651	44	39	4.0.0	synth with cache (only 1: intro; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_sinh).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.ValAdh_un_prop	40	40.128260	46711	6075
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.Complete.Field.gen_phiZ_complete	40	40.075759	22693	4504
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_more	40	40.222429	19097	4050
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.land0_r	40	0.098409	34	15	3.0.0.1	synth with cache (only 1: apply bit_ext; only 1: intros n; only 1: rewrite land_spec, bit_0; only 1: now rewrite andb_false_r).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_lb_gt_0	40	40.066895	19757	3219
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.cos_PI3	40	40.055431	13264	5953
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_cauchy	40	40.113389	18799	3856
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.Rpower_1	40	40.124924	18986	3137
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P29	40	40.052590	15679	3131
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.elements_Add_Below	40	40.077571	23866	3817
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt_main	40	40.745352	16078	3157
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pow	40	7.092063	2707	1029	1.0.0.0.9	synth with cache (only 1: unfold derivable, continuity; only 1: intros; only 1: unfold derivable_pt; only 1: exists (INR n * x ^ Init.Nat.pred n); only 1: apply derivable_pt_lim_pow).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P17	40	40.054842	14867	4319
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.pr_nu	40	5.530209	3672	562	0.7.3.5.8	synth with cache (only 1: intros p q r H; only 1: elim H; only 1: intros m n; only 1: apply derive_pt_eq_0; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.ring_rw_correct	40	40.049872	15658	1826
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.of_pos_rec_spec	40	40.053579	15628	2429
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt_init	40	40.055861	16111	1317
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.Rsqr_sol_eq_0_1	40	40.070908	7753	2003
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.elements_Equal_eqlistA	40	40.357137	38934	3771
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.pos_opp_lt	40	9.056813	2787	669	4.3.2.0.10.0	synth with cache (only 1: intros; only 1: pose proof (Dln x H) as H0; only 1: unfold D_in in H0; only 1: rewrite <- (Rmult_1_l x)  at 1; only 1: elim archimed with x; only 1: lra).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.is_lub_u	40	3.007516	1262	308	1.6.6	synth with cache (only 1: intros r1 r2 H; only 1: intros (x1, x2) (y1, y2); only 1: reflexivity || (apply Rle_antisym; assumption || auto with real)).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derive_pt_minus	40	41.228124	13521	5979
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.map2_2	40	40.262828	19105	3960
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.of_Z_spec	40	41.711211	8273	1623
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt_test_true	40	40.106399	3790	657
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.SubEqui_P9	40	40.067161	21700	5821
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.SIN	40	40.078902	15870	4402
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.CV_minus	40	40.039968	8678	5628
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lor0_r	40	0.044836	15	7	2.0.0.1	synth with cache (only 1: apply bit_ext; only 1: intros n; only 1: rewrite lor_spec, bit_0; only 1: now rewrite orb_false_r).
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.agree_env_tail	40	40.099132	32328	3978
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P6	40	40.636285	24726	5346
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.exists_atan_in_frame	40	40.071170	13434	2886
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt_test_false	40	40.150542	10501	3650
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.compact_P6	40	40.106637	41161	6429
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis5.continuity_pt_recip_prelim	40	40.065869	17203	5436
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.IVT_cor	40	40.232829	39055	4880
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.IAF_var	40	40.062877	18535	4077
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.tan_PI3	40	40.071739	11031	2874
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derive_pt_mult	40	40.051345	12613	5930
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.sin_2PI3	40	40.051542	12003	3402
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.max_elt_Above	40	40.410263	38933	4541
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.is_int	40
coq-tactician-stdlib.8.11.dev	Coq.Reals.PSeries_reg.CVU_derivable	40	40.121143	24495	4031
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.decreasing_prop	40	21.217743	10846	2879	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.2.1.0	synth with cache (only 1: intros; only 1: induction n as [| n Hrecn]; only 1: induction m as [| m Hrecm]; only 1: right; only 1: trivial; only 1: elim (Nat.nle_succ_0 _ H0); only 1: cut ((m <= n)%nat \/ m = S n); only 1: intro; only 1: elim H1; only 1: intro; only 1: apply Rle_trans with (Un n); only 1: apply H; only 1: apply Hrecn; only 1: trivial; only 1: intro; only 1: rewrite H2; only 1: right; only 1: reflexivity; only 1: inversion H0; only 1: right; only 1: reflexivity; only 1: left; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derive_pt_id	40	40.054143	15006	2833
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.Rpower_pow	40	40.482693	18763	4740
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P7	40	40.800291	36894	3309
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.Rsqr_sol_eq_0_0	40	40.054718	14597	2884
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.max_var_acc	40	40.059898	18079	4271
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derive_pt_scal	40	41.191373	16173	2043
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.tan_1_gt_1	40	40.081175	16723	4118
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.COS	40	40.056353	18092	4299
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt31_step_def	40	41.168082	28757	2475
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.cv_infty_cv_R0	40	41.268602	38803	6111
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P18	40	40.045582	14304	1924
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.Rsth	40	0.148613	47	24	9	synth with cache (only 1: exact eq_equivalence).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rgeom.isometric_trans_rot	40	40.014480	3567	1007
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.max_elt_MapsTo	40	40.318193	43448	4835
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.max_elt_Empty	40	40.096992	21708	5320
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.min_elt_Below	40	40.543905	21484	6795
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.PI4_RLT_PI2	40	40.050807	12657	2469
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake_ord.cons_Cmp	40	40.086123	29292	2458
coq-tactician-stdlib.8.11.dev	Coq.Reals.Machin.PI_2_3_7_ineq	40	40.076804	20963	6412
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derive_pt_comp	40	40.972946	21297	3973
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.cos_2PI3	40	40.039614	9450	3652
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.div31_phi	40	40.104488	6024	364
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.null_derivative_loc	40	40.046689	11839	2250
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.Rpower_lt	40	40.319814	26959	3445
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.is_zeroE	40	40.948143	10537	732
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis5.continuity_pt_recip_interv	40	40.111448	17336	7268
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_pow_pos	40	41.727885	25222	5902
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.form2	40	0.241608	8	8	0.0.0.0.0.0.0.0	synth with cache (only 1: intros p q; only 1: pattern p at 1; only 1: replace p with ((p - q) / 2 + (p + q) / 2) by field; only 1: rewrite <- (cos_neg q); only 1: replace (- q) with ((p - q) / 2 - (p + q) / 2) by field; only 1: rewrite cos_plus; only 1: rewrite cos_minus; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Induction_Principles.map_induction_max	40	40.361401	17834	783
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.bitE	40	40.085853	19952	2892
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_gt_0	40	40.151911	25279	4530
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt31_step_correct	40	41.634789	6947	2089
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake_ord.compare_more_Cmp	40	40.067021	21475	2701
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.Rpower_sqrt	40	40.072453	21363	4674
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_gt_0	40	40.058934	18022	5039
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.iter31_sqrt_correct	40	40.503322	8135	1480
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_ge_0	40	40.058386	14592	6449
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.continuity_implies_RiemannInt	40	40.066081	17372	5799
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_pow	40	40.235121	18274	5801
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake_ord.compare_cont_Cmp	40	40.099659	30239	3455
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake_ord.compare_Cmp	40	40.409999	72270	2704
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lt_pow_lt_log	40	40.513053	27657	2712
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Induction_Principles.map_induction_min	40	40.074786	15117	8225
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.derivable_pt_cosh	40	40.067020	17478	5694
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_pow	40	40.691146	22197	5359
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.Rgt_3PI2_0	40	8.257585	2028	951	0.0.2.12	synth with cache (only 1: destruct pi2_int; only 1: prove_sup; only 1: Lra.lra; only 1: Lra.lra).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.frame_tan	40	40.046467	12993	4350
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.land_spec'	40	40.071577	21925	2707
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.Rgt_2PI_0	40	0.229446	59	27	0.0.6	synth with cache (only 1: apply Rmult_lt_0_compat; only 1: prove_sup0; only 1: apply PI_RGT_0).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_ge_0	40	40.078107	21962	4578
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P8	40	40.631597	19982	5359
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.Rlt_PI_3PI2	40	0.199165	93	16	1.11	synth with cache (only 1: pose proof PI_RGT_0 as H; only 1: Lra.lra).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.Rlt_3PI2_2PI	40	0.050550	11	3	0.6	synth with cache (only 1: pose proof PI_RGT_0 as H; only 1: Lra.lra).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.derivable_pt_sinh	40	40.378500	10066	4872
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Fold_properties.fold_Equal	40	40.631165	15130	2703
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake_ord.compare	40	40.185954	71719	1043
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.agree_env_eval_nformula	40	40.562601	28659	3268
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P19	40	40.053619	16085	3950
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_sqrt	40	43.067591	6811	2530
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Fold_properties.fold_Add_Above	40	40.110342	13590	2498
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P20	40	40.101649	33018	5565
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.agree_env_eval_nformulae	40	40.225413	34583	3498
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake_ord.eq_1	40	40.070723	22168	4785
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt312_step_def	40	40.786415	10407	3283
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.limit1_imp	40	6.171848	3434	947	1.1.1.0.0.1.0.1.1.1.1.2	synth with cache (only 1: intros P allnot exP; only 1: unfold limit1_in; only 1: unfold limit_in; only 1: intros; only 1: case (H0 eps); only 1: auto; only 1: intros x0 [H2 H3]; only 1: exists x0; only 1: split; only 1: auto; only 1: intros x1 [H4 H5]; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.NewtonInt.NewtonInt_P6	40	40.060919	18727	4856
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.Rsqrt_exists	40	40.054855	12795	2183
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.ZChecker_sound	40	40.092541	32413	2392
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.Rinv_Rdiv	40	0.690932	268	74	0.6.2.0	synth with cache (only 1: intros; only 1: unfold Rdiv; only 1: field; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Fold_properties.fold_Add_Below	40	40.437114	12857	2958
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_sqrt2	40
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lor_spec'	40	40.059268	12776	6986
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.Rpower_Ropp	40	40.442680	24025	5921
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis5.derivable_pt_recip_interv_prelim1	40	8.146968	2611	1296	10.2	synth with cache (only 1: intros; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt312_lower_bound	40	40.553334	12818	1667
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_le_0	40	40.055152	15582	5442
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.div312_phi	40	40.045210	8110	3570
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.tech_opp_tan	40	40.098571	32590	5857
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake_ord.eq_2	40	40.078936	21492	3895
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P9	40	40.742521	44619	3375
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.cv_speed_pow_fact	40	40.087437	22269	6665
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake_ord.eq_seq	40	0.020362	4	2	2.0	synth with cache (only 1: intros; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake_ord.lt_slt	40	0.026787	2	2	0.0	synth with cache (only 1: intros; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derive_pt_pow	40	40.149948	16176	3477
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt312_step_correct	40	40.107123	7759	3435
coq-tactician-stdlib.8.11.dev	Coq.Reals.NewtonInt.antiderivative_P2	40	40.054822	14482	4747
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.antiderivative_Ucte	40	40.151978	27114	4582
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P21	40	40.083592	27230	5480
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.Bolzano_Weierstrass	40	40.121244	42498	7647
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_le_0	40	40.054486	14533	5436
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.ZTautoChecker_sound	40	40.173580	43109	2647
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lxor_spec'	40	40.062131	14098	6836
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.tan_2PI3	40	40.043420	10570	3167
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.pre_atan	40	42.273684	20895	4635
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake_ord.eq_sym	40	40.053389	15186	3563
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.landC	40	40.048601	11421	2215
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_eq0	40	26.034687	4487	654	23.0	synth with cache (only 1: destruct x; only 1: apply Zeq_is_eq_bool).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake_ord.eq_refl	40	40.389987	22974	2126
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis5.derivable_pt_lim_recip_interv	40	40.069644	21618	5151
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.sinh_lt	40	40.096492	31210	5850
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.landA	40	40.094480	27638	4983
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.powerRZ_Rpower	40	41.454102	19273	3306
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.land0	40	40.077931	22408	4092
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lorC	40	40.078505	22968	5168
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.cos_5PI4	40	40.041526	9974	1855
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.Rle_Rpower	40	40.046262	13679	2673
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_lt_0	40	40.056305	12542	5945
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_lt_0_var	40	40.049479	14166	4994
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.deriv_maximum	40	40.318407	14673	2230
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.Rsqrt_positivity	40	40.117356	21383	6342
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_lt_0	40	40.051099	13330	4716
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake_ord.eq_trans	40	40.118148	41388	3689
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.R_one_zero	40	0.033460	18	4	1	synth with cache (only 1: exact R1_neq_R0).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.domain_P1	40	40.219548	13210	729
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake_ord.lt_trans	40	40.122554	25481	3711
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.iter312_sqrt_correct	40	40.517194	7174	3260
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P22	40	40.125547	33038	3446
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.atan_bound	40	40.056853	15155	4943
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lorA	40	40.939500	21364	4484
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.tan_gt_0	40	40.130630	32178	5346
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.Heine	40	40.115109	26565	5469
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lor0	40	40.086049	25630	4122
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lxorC	40	40.077370	22774	4873
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.deriv_minimum	40	40.049367	10426	6262
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.form4	40	20.986973	2760	1177	0.0.0.0.0.1.1.0.1.1.0.0	synth with cache (only 1: intros p q; only 1: pattern p at 1; only 1: replace p with ((p - q) / 2 + (p + q) / 2) by field; only 1: pattern q at 3; only 1: replace q with ((p + q) / 2 - (p - q) / 2); only 1: rewrite sin_plus; only 1: rewrite sin_minus; only 1: ring; only 1: pattern q at 3; only 1: rewrite double_var; only 1: unfold Rdiv; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake_ord.cons_cardinal_e	40	40.697424	19358	3349
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake_ord.lt_not_eq	40	40.086686	11409	2213
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.tan_lt_0	40	40.078168	18874	5959
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake_ord.compare_aux_tcc	40	40.636507	6231	925
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.sin_5PI4	40	40.034714	9649	2874
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.sin_cos5PI4	40	40.069207	8058	3426
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.MVT_abs	40	40.040365	7944	5849
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.Rcri	40	7.103045	2708	810	4.0.3.7.3	synth with cache (only 1: red; only 1: unfold equality; only 1: unfold eq_notation in *; only 1: intros; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lxorA	40	40.114109	19121	2948
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake_ord.compare	40	19.131051	33019	588
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.Rsqrt_Rsqrt	40	40.106038	17412	3636
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.atan_right_inv	40	40.229878	19758	3909
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake_ord.cons_Cmp	40	40.089201	30272	2651
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.ln_lt_2	40	40.052131	15651	3463
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lxor0	40	40.579303	26744	5842
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P10	40	41.198530	24292	4248
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.Rri	40	40.075579	12992	3595
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.deriv_constant2	40	40.047067	11368	5922
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_ge_0_3PI2	40	40.054451	11505	5551
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.log2_phi_bounded	40	40.569240	9548	2042
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_is_even	40	41.023009	4507	391
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.Q_one_zero	40	0.006519	1	1	0	synth with cache (only 1: discriminate).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.atan_opp	40	40.055873	13893	3967
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_lor	40	40.224282	13156	2157
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P11	40	41.615953	21130	3776
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P23	40	40.061947	17492	5350
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake_ord.compare_aux_Cmp	40	40.055631	14640	1153
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis5.derivable_pt_recip_interv_prelim0	40	40.059044	16040	4671
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.nonneg_derivative_0	40	40.088867	27043	5099
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.form1	40	40.054132	13293	1708
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.Qcri	40	3.648094	3492	298	1.0.0.2.6.6.0.34	synth with cache (only 1: intros H; only 1: intros; only 1: red; only 1: red; only 1: red; only 1: simpl; only 1: rewrite Pos.mul_comm; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P24	40	40.045963	10468	5889
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.limit1_ext	40	40.063190	17733	6213
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.form3	40	40.027821	6754	1637
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_land	40
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P12	40	41.578140	28594	3736
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake_ord.compare_Cmp	40	40.042155	9964	1652
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lxor0_r	40	40.150161	22814	4331
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P29	40	2.361509	1249	158	0.1.2.0.14	synth with cache (only 1: unfold is_subdivision; only 1: intros a b f; only 1: destruct (projT2 (pre f)) as (x, H); only 1: apply existT with x; only 1: apply H).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_lxor	40	43.698998	4974	1027
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_increasing_0	40	40.076675	9851	3913
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.rad_deg	40	40.075013	22497	3258
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_increasing_1	40	40.065793	17495	6096
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.derivable_pt_atan	40	40.048041	12990	5413
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.Dln	40	40.042873	9599	5439
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_decreasing_0	40	40.046237	9858	5834
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P13	40	40.342585	10989	6078
coq-tactician-stdlib.8.11.dev	Coq.Reals.NewtonInt.antiderivative_P3	40	40.052955	13223	5886
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis5.derivable_pt_recip_interv	40	40.037712	7817	3601
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.atan_increasing	40	40.071475	19279	6430
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.derivable_pt_lim_ln	40	40.082229	12550	5634
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake_ord.eq_1	40	40.418030	23325	1811
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P14	40	40.098477	24673	3875
coq-tactician-stdlib.8.11.dev	Coq.Reals.NewtonInt.antiderivative_P4	40	40.084098	8544	5655
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P25	40	40.048805	14108	5669
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_decreasing_1	40	40.053432	13790	4979
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.toRad_inj	40	40.053322	13719	3448
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake_ord.eq_2	40	40.469425	18316	2866
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.deg_rad	40	40.078816	19011	3046
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P26	40	40.071524	19302	5231
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P15	40	40.349908	32878	2729
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.atan_0	40	41.828748	11475	2742
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_increasing_0	40	40.064393	15418	5823
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.Rsqr_sin_cos_d_one	40	40.066102	14830	4641
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.D_in_imp	40	40.051797	11389	5497
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.D_in_ext	40	40.073241	20323	6482
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.atan_1	40	40.092261	16417	6664
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.derive_pt_atan	40	40.060115	12692	5628
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake_ord.eq_refl	40	40.267351	39691	2056
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis5.derive_pt_recip_interv_prelim0	40	40.615647	8877	3053
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_increasing_1	40	40.041525	10554	2893
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_decreasing_0	40	40.056458	12585	4191
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.Rdi	40	40.071708	18393	4685
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_decreasing_1	40	40.061210	16369	3847
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P27	40	40.053061	13810	5628
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.Z_one_zero	40	0.006321	3	1	2	synth with cache (only 1: discriminate).
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.Zcri	40	0.013215	2	2	0.0	synth with cache (only 1: red; only 1: exact Z.mul_comm).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.tan_diff	40	40.110243	10677	2826
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P16	40	40.105232	9913	4028
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.sin_lb_ge_0	40	40.040459	9597	5648
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.Qri	40	40.051581	11390	1871
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake_ord.lt_trans	40	40.113978	36007	2953
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake_ord.eq_sym	40	40.667106	17846	2248
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake_ord.eq_trans	40	40.414846	39907	3030
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.tan_increasing_0	40	40.054658	10679	5235
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake_ord.lt_not_eq	40	40.388260	7517	1244
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P28	40	40.169359	41549	3476
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.derivable_pt_lim_atan	40	40.060586	16252	5646
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.tan_increasing_1	40	41.164078	13057	3845
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.Dpower	40	40.646830	12566	3220
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Ratan_seq_decreasing	40	40.087237	26723	4704
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis5.derive_pt_recip_interv_prelim1_0	40	40.067443	15997	6946
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.Qdi	40	40.037916	11085	2539
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Ratan_seq_converging	40	40.084960	20048	4808
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_incr_0	40	40.090823	11556	6156
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.derivable_pt_lim_power	40	40.203737	14926	4743
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.Rpower_mult_distr	40	40.129186	21354	4017
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.Rle_cv_lim	40	40.054551	16161	5085
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_incr_1	40	40.062134	14890	4613
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P30	40	40.077311	19276	3872
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P31	40	40.065801	14586	5410
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_decr_0	40	40.044031	10050	5211
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P32	40	40.056329	14667	2578
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P17	40	40.078535	23683	3704
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P18	40	40.083374	16226	3093
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_decr_1	40	40.038827	9070	4355
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_incr_0	40	40.037477	8032	3422
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.ps_atan_exists_01	40	40.058751	18473	5042
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.Rlt_Rpower_l	40	40.072638	25568	1474
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P19	40	40.057059	11922	4092
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_eq_0_2PI_1	40	5.659110	650	330	0.0.0.0.0.0.0.0.0.0.0.0.1.0	synth with cache (only 1: intros Lo Hi Hx; only 1: intuition subst; try ring; auto with real; only 1: unfold PI; only 1: generalize cos_pi2; only 1: replace (2 * PI2 / 2) with PI2 by field; only 1: tauto; only 1: replace (3 * (PI / 2)) with (PI + PI / 2); only 1: rewrite cos_plus; only 1: rewrite sin_PI; only 1: rewrite cos_PI2; only 1: ring; only 1: pattern PI at 1; only 1: rewrite (double_var PI); only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_incr_1	40	40.315509	7676	3414
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis5.ub_lt_2_pos	40	14.534778	6280	1846	8.1.0.9	synth with cache (only 1: assert (Hyp : 0 < 2); only 1: prove_sup0; only 1: intros; only 1: lra).
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_decr_0	40	40.084709	9902	5112
coq-tactician-stdlib.8.11.dev	Coq.Reals.NewtonInt.NewtonInt_P7	40	40.876748	14202	6595
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis5.derive_pt_recip_interv_prelim1_1	40	40.023926	3594	2132
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Ratan_seq_opp	40	40.057720	12564	6653
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.Rle_Rpower_l	40	40.141547	17979	2085
coq-tactician-stdlib.8.11.dev	Coq.Reals.NewtonInt.NewtonInt_P8	40	40.079015	13394	6575
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.FTC_P1	40	41.630381	31608	4435
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P33	40	40.086031	31572	3962
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P20	40	40.096739	35747	4657
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_decr_1	40	40.050718	10488	5368
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P34	40	40.069563	8053	1800
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.arcsinh_sinh	40	40.072386	15599	4035
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.sinh_arcsinh	40	40.059150	10636	3362
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.sum_Ratan_seq_opp	40	40.069095	13633	5823
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.tan_incr_0	40	40.069587	9407	5283
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.ps_atan_exists_1	40	40.059935	15818	6048
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P21	40	40.111044	28055	5278
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis5.derive_pt_recip_interv	40	40.061625	5811	2101
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.in_int	40	40.063187	13026	6368
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.Zdi	40	40.111506	18059	2353
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P35	40	40.084533	26752	3915
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.tan_incr_1	40	40.110386	15915	5263
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_eq_0_1	40	40.075676	22086	3631
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_eq_0_0	40	40.149623	54508	5416
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_eq_0_0	40	40.534081	20343	4364
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.ps_atan0_0	40	40.051190	14175	4471
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P36	40	40.076334	9336	2496
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_eq_0_1	40	40.148827	12933	5398
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_eq_O_2PI_0	40	40.069777	3488	917
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.derivable_pt_lim_arcsinh	40	40.280092	11968	5829
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.ps_atan_exists_1_opp	40	40.080987	21439	5625
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.ps_atan_opp	40	40.074956	10220	5698
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P22	40	40.085367	16286	6587
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.arcsinh_lt	40	40.085181	24066	6028
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.ps_atanSeq_continuity_pt_1	40	40.104237	26484	5323
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_eq_O_2PI_1	40	40.860854	8986	2052
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_eq_0_2PI_0	40	40.652085	15663	3716
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.arcsinh_le	40	40.058547	11313	3596
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Datan_seq_pos	40	18.082094	11174	2503	0.23.1	synth with cache (only 1: intros; only 1: apply pow_lt; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P37	40	40.066399	18777	3181
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P38	40	40.111924	38460	4632
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P39	40	40.082596	23087	2195
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P23	40	40.040882	10439	5296
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.pow_lt_1_compat	40	40.064283	15598	5083
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis5.mkposreal_lb_ub	40	40.235159	100664	3463
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.arcsinh_0	40	40.049017	13863	2803
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis5.derivable_pt_lim_CVU	40	40.104050	32044	4378
coq-tactician-stdlib.8.11.dev	Coq.Reals.NewtonInt.NewtonInt_P9	40	41.331525	17928	4731
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Datan_seq_Rabs	40	40.091027	24684	5446
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P24	40	40.071696	11569	5590
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P25	40	40.066143	17164	3243
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P40	40	40.052774	15176	3586
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P26	40	40.060483	7664	4521
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Datan_sum_eq	40	40.052434	13854	3946
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Datan_seq_increasing	40	40.097124	25746	5762
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P41	40	40.091931	26647	3760
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P42	40	40.087800	21985	4762
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P27	40	40.099770	22363	5449
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Datan_seq_decreasing	40	40.083630	23860	4664
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Datan_seq_CV_0	40	40.076817	19881	5645
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P28	40	40.060977	13373	6208
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Datan_lim	40	40.056879	14193	4807
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Datan_CVU_prelim	40	40.064755	16651	5144
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P43	40	40.041799	8460	3719
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Datan_is_datan	40	40.046036	7926	3205
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Ratan_CVU'	40	40.084046	18902	3380
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P29	40	40.103073	12758	5345
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P30	40	40.118696	36080	5224
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Ratan_CVU	40	40.060985	15299	5210
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P44	40	40.271751	16587	2661
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Alt_PI_tg	40	40.128207	33455	4071
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P31	40	41.259943	38749	3172
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P45	40	40.064420	12570	6829
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P46	40	41.590620	15205	4730
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Ratan_is_ps_atan	40	40.048878	10871	5561
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Datan_continuity	40	40.085821	15306	5185
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P32	40	41.124032	15189	4215
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.FTC_Riemann	40	40.068331	17244	4267
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_const_bound	40	40.073581	21388	3327
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P33	40	42.307972	19072	2917
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.derivable_pt_lim_ps_atan	40	40.100084	16941	5783
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.derivable_pt_ps_atan	40	40.059583	10650	5549
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.ps_atan_continuity_pt_1	40	40.133288	20081	4713
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Datan_eq_DatanSeq_interv	40	40.070314	20566	3929
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.atan_eq_ps_atan	40	40.242680	16092	3712
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.Riemann_integrable_scal	40	40.105030	19459	5522
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.Riemann_integrable_Ropp	40	40.050439	8370	4648
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Alt_PI_eq	40	40.097681	15100	4282
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.PI_ineq	40	40.193945	13403	4995
