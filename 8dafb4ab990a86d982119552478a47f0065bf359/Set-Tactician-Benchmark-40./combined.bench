
Coq.micromega.OrderedRing.rplus_morph_Proper	40	23.0	search with cache (only 1: intros A B H; only 1: firstorder  (subst; auto)).	1.08518099785	1951
Coq.micromega.OrderedRing.rtimes_morph_Proper	40	17.1	search with cache (only 1: intros A B H; only 1: firstorder  (subst; auto)).	0.784339904785	853
Coq.micromega.OrderedRing.ropp_morph_Proper	40
Coq.micromega.OrderedRing.rle_morph_Proper	40
Coq.micromega.OrderedRing.rlt_morph_Proper	40
Coq.micromega.OrderedRing.rminus_morph_Proper	40
Coq.micromega.OrderedRing.Rneq_symm	40
Coq.micromega.OrderedRing.Rplus_0_l	40
Coq.micromega.OrderedRing.Rplus_0_r	40	0.1	search with cache (only 1: intro; only 1: ring).	0.0392398834229	3
Coq.micromega.OrderedRing.Rtimes_0_r	40	0.19	search with cache (only 1: intros; only 1: ring).	0.109336853027	186
Coq.micromega.OrderedRing.Rplus_comm	40	0.2.2	search with cache (only 1: intro; only 1: intro; only 1: ring).	0.0459840297699	7
Coq.micromega.OrderedRing.Rtimes_0_l	40	0.0	search with cache (only 1: intro; only 1: ring).	0.0368719100952	2
Coq.micromega.OrderedRing.Rtimes_comm	40	0.2.1	search with cache (only 1: intro; only 1: intro; only 1: ring).	0.0441200733185	6
Coq.micromega.OrderedRing.Rminus_eq_0	40
Coq.micromega.OrderedRing.Rplus_cancel_l	40
Coq.micromega.OrderedRing.Req_em	40
Coq.micromega.OrderedRing.Req_dne	40	8.1.12.0.1.2.0	search with cache (only 1: intros n m; only 1: destruct (Rlt_trichotomy n m) as [H| [H| H]]; only 1: rewrite Rlt_le_neq in H; only 1: now destruct H; only 1: intuition BinInt.Z.order; only 1: rewrite Rlt_le_neq in H; only 1: firstorder).	29.7590510845	20755
Coq.micromega.OrderedRing.Rle_lt_eq	40
Coq.micromega.OrderedRing.Rlt_trans	40
Coq.micromega.OrderedRing.Rle_lt_trans	40
Coq.micromega.OrderedRing.Rlt_le_trans	40
Coq.micromega.OrderedRing.Rle_gt_cases	40
Coq.micromega.OrderedRing.Rlt_neq	40	6.10.17.7	search with cache (only 1: red; only 1: intros n m; only 1: rewrite Rlt_le_neq; only 1: tauto).	7.88184595108	14863
Coq.micromega.OrderedRing.Rle_ngt	40
Coq.micromega.OrderedRing.Rlt_nge	40
Coq.micromega.OrderedRing.Rplus_le_mono_l	40
Coq.micromega.OrderedRing.Rplus_le_mono_r	40
Coq.micromega.OrderedRing.Rplus_lt_mono_l	40
Coq.micromega.OrderedRing.Rplus_lt_mono_r	40
Coq.micromega.OrderedRing.Rplus_lt_mono	40
Coq.micromega.OrderedRing.Rplus_le_mono	40
Coq.micromega.OrderedRing.Rplus_lt_le_mono	40
Coq.micromega.OrderedRing.Rplus_le_lt_mono	40
Coq.micromega.OrderedRing.Rplus_pos_pos	40
Coq.micromega.OrderedRing.Rplus_pos_nonneg	40
Coq.micromega.OrderedRing.Rplus_nonneg_pos	40
Coq.micromega.OrderedRing.Rplus_nonneg_nonneg	40
Coq.micromega.OrderedRing.Rle_le_minus	40
Coq.micromega.OrderedRing.Rlt_lt_minus	40
Coq.micromega.OrderedRing.Ropp_lt_mono	40
Coq.micromega.OrderedRing.Ropp_pos_neg	40
Coq.micromega.OrderedRing.Rtimes_nonneg_nonneg	40
Coq.micromega.OrderedRing.Rtimes_pos_neg	40
Coq.micromega.OrderedRing.Rtimes_neg_neg	40
Coq.micromega.OrderedRing.Rtimes_square_nonneg	40
Coq.micromega.OrderedRing.Rtimes_neq_0	40
Coq.micromega.OrderedRing.Ropp_neg_pos	40
Coq.micromega.OrderedRing.Rlt_0_1	40
Coq.micromega.OrderedRing.Rlt_succ_r	40
Coq.micromega.OrderedRing.Rlt_lt_succ	40
Coq.micromega.Ztac.eq_incl	40	0	search with cache (only 1: intuition Z.Private_Tac.order).	0.0364639759064	1
Coq.micromega.Ztac.elim_concl_eq	40	4.12.15	search with cache (only 1: intros a b; only 1: intuition; only 1: Z.order).	27.6045479774	25486
Coq.micromega.Ztac.elim_concl_le	40	7.0	search with cache (only 1: intros x y z; only 1: Z.order).	0.0347459316254	9
Coq.micromega.Ztac.elim_concl_lt	40	0.10	search with cache (only 1: intros a b; only 1: Z.order).	0.634113073349	513
Coq.micromega.Ztac.Zlt_le_add_1	40	0.1.2.4	search with cache (only 1: intros; only 1: Z.nzsimpl; only 1: apply Z.le_succ_l; only 1: auto).	0.201732158661	66
Coq.micromega.Ztac.add_le	40	1.1	search with cache (only 1: intros n m H1 H2; only 1: now apply Z.add_nonneg_nonneg).	0.0448400974274	13
Coq.micromega.Ztac.mul_le	40	0.0.0.0.0.0.0.0.1.12.0	search with cache (only 1: intros n m H1 H2; only 1: destruct n, m; only 1: apply Z.le_refl; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	2.86142611504	2925
Coq.micromega.ZifyInst.PropAnd	40	8.10	search with cache (only 1: split; only 1: tauto).	0.141854047775	235
Coq.micromega.ZifyInst.PropOr	40	0.0	search with cache (only 1: constructor; only 1: tauto).	0.0235819816589	2
Coq.micromega.ZifyInst.PropArrow	40	0.4	search with cache (only 1: constructor; only 1: tauto).	0.0186059474945	6
Coq.micromega.ZifyInst.PropIff	40	0.0.2	search with cache (only 1: constructor; only 1: intros; only 1: tauto).	0.0819158554077	5
Coq.micromega.ZifyInst.PropNot	40	0.0.3	search with cache (only 1: constructor; only 1: intros; only 1: tauto).	0.0153329372406	6
Coq.micromega.ZifyInst.of_nat_to_nat_eq	40	0.0.0.0.0.5.0.1.0.0.0.9.2	search with cache (only 1: intros n; only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: unfold Z.max, Pos.max; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv; only 1: simpl; only 1: trivial).	3.41683387756	4527
Coq.micromega.ZifyInst.z_max_spec	40	19.1	search with cache (only 1: intros; only 1: Z.solve_max).	1.97059893608	1568
Coq.micromega.ZifyInst.z_min_spec	40	14.2.0	search with cache (only 1: intros; only 1: generalize (Z.le_max_l n m); only 1: Z.solve_min).	18.926347971	9233
Coq.micromega.ZCoeff.req_refl	40
Coq.micromega.ZCoeff.req_sym	40	4.0	search with cache (only 1: destruct (SORsetoid sor) as (Equivalence_Reflexive, _, _); only 1: firstorder).	0.0388848781586	6
Coq.micromega.ZCoeff.req_trans	40	3.7.1	search with cache (only 1: destruct (SORsetoid sor) as (Equivalence_Reflexive, _, _); only 1: destruct (SORsetoid sor) as (_, Equivalence_Symmetric, _); only 1: firstorder).	32.6805989742	304
Coq.micromega.ZCoeff.rplus_morph_Proper	40	0	search with cache (only 1: exact (SORplus_wd sor)).	0.00968503952026	1
Coq.micromega.ZCoeff.rtimes_morph_Proper	40	0	search with cache (only 1: exact (SORtimes_wd sor)).	0.00980997085571	1
Coq.micromega.ZCoeff.ropp_morph_Proper	40	0	search with cache (only 1: exact (SORopp_wd sor)).	0.0107071399689	1
Coq.micromega.ZCoeff.rle_morph_Proper	40	0	search with cache (only 1: exact (SORle_wd sor)).	0.00991606712341	1
Coq.micromega.ZCoeff.rlt_morph_Proper	40	0	search with cache (only 1: exact (SORlt_wd sor)).	0.0103640556335	1
Coq.micromega.ZCoeff.rminus_morph_Proper	40	1.0.0.0.0	search with cache (only 1: intros x1 x2 H1 y1 y2 H2; only 1: rewrite (Rsub_def (SORrt sor) x1 y1); only 1: rewrite (Rsub_def (SORrt sor) x2 y2); only 1: rewrite H1; only 1: now rewrite H2).	0.0416731834412	6
Coq.micromega.ZCoeff.ring_ops_wd	40	11.4	search with cache (only 1: destruct (SORsetoid sor) as (_, Equivalence_Symmetric, _); only 1: firstorder).	1.19953203201	933
Coq.micromega.ZCoeff.Zring_morph	40
Coq.micromega.ZCoeff.phi_pos1_pos	40
Coq.micromega.ZCoeff.phi_pos1_succ	40
Coq.micromega.ZCoeff.clt_pos_morph	40
Coq.micromega.ZCoeff.clt_morph	40
Coq.micromega.ZCoeff.Zcleb_morph	40
Coq.micromega.ZCoeff.Zcneqb_morph	40
Coq.micromega.Fourier_util.Rlt_mult_inv_pos	40	1.6.7.0	search with cache (only 1: intros; only 1: replace 0 with x * 0; only 1: auto with real; only 1: auto with real).	1.2327671051	248
Coq.micromega.Fourier_util.Rlt_zero_pos_plus1	40	1.6.0	search with cache (only 1: intros; only 1: rewrite Rplus_comm; only 1: auto with real).	0.0874791145325	52
Coq.micromega.Fourier_util.Rle_zero_pos_plus1	40	4.2.1	search with cache (only 1: intros; only 1: rewrite Rplus_comm; only 1: auto with real).	1.06005907059	447
Coq.micromega.Fourier_util.Rle_mult_inv_pos	40	0.0.7.5	search with cache (only 1: intros r r1 r2 H; only 1: replace 0 with r * 0; only 1: auto with real; only 1: auto with real).	1.34282803535	864
Coq.micromega.ZifyClasses.mkapp2	40
Coq.micromega.ZifyClasses.mkapp	40
Coq.micromega.ZifyClasses.mkapp0	40
Coq.micromega.ZifyClasses.mkrel	40
Coq.micromega.ZMicromega.eq_le_iff	40	0.1.0.5.7.0.1	search with cache (only 1: intros; only 1: split; only 1: now destruct 1 || trivial; only 1: destruct x; only 1: now destruct 1 || trivial; only 1: now destruct 1 || trivial; only 1: now destruct 1 || trivial).	1.55717992783	1541
Coq.micromega.ZMicromega.lt_le_iff	40	12	search with cache (only 1: apply Z.lt_le_pred).	0.457832098007	133
Coq.micromega.ZMicromega.le_0_iff	40
Coq.micromega.ZMicromega.le_neg	40	0.0.0.5.2	search with cache (only 1: intros a; only 1: rewrite ?Z.opp_pos_neg; only 1: intuition; only 1: Z.order; only 1: Z.order).	0.433768033981	223
Coq.micromega.ZMicromega.eq_cnf	40
Coq.micromega.ZMicromega.Zsor	40
Coq.micromega.ZMicromega.ZSORaddon	40
Coq.micromega.ZMicromega.ZNpower	40
Coq.micromega.ZMicromega.Zeval_expr_compat	40
Coq.micromega.ZMicromega.Zeval_formula_compat'	40
Coq.micromega.ZMicromega.Zeval_nformula_dec	40
Coq.micromega.ZMicromega.ZWeakChecker_sound	40
Coq.micromega.ZMicromega.eval_pol_sub	40
Coq.micromega.ZMicromega.eval_pol_add	40
Coq.micromega.ZMicromega.eval_pol_mul	40
Coq.micromega.ZMicromega.eval_pol_norm	40
Coq.micromega.ZMicromega.Zunsat_sound	40
Coq.micromega.ZMicromega.xnnormalise_correct	40
Coq.micromega.ZMicromega.eval_pol_Pc	40	1	search with cache (only 1: auto with *).	0.0101130008698	2
Coq.micromega.ZMicromega.xnormalise_correct	40
Coq.micromega.ZMicromega.cnf_of_list_correct	40
Coq.micromega.ZMicromega.normalise_correct	40
Coq.micromega.ZMicromega.xnegate_correct	40
Coq.micromega.ZMicromega.negate_correct	40
Coq.micromega.ZMicromega.Zdivide_ceiling	40
Coq.micromega.ZMicromega.narrow_interval_lower_bound	40
Coq.micromega.ZMicromega.isZ0_0	40	0.1.0.9.3	search with cache (only 1: intros s1; only 1: elim s1; only 1: now split; only 1: now split; only 1: now split).	0.656277894974	647
Coq.micromega.ZMicromega.isZ0_n0	40	0.0.4.6	search with cache (only 1: destruct x; only 1: easy'; only 1: now split; only 1: now split).	0.672121047974	578
Coq.micromega.ZMicromega.Zdiv_pol_correct	40
Coq.micromega.ZMicromega.Zgcd_pol_ge	40
Coq.micromega.ZMicromega.Zdivide_pol_Zdivide	40
Coq.micromega.ZMicromega.Zdivide_pol_one	40
Coq.micromega.ZMicromega.Zgcd_minus	40
Coq.micromega.ZMicromega.Zdivide_pol_sub	40
Coq.micromega.ZMicromega.Zdivide_pol_sub_0	40
Coq.micromega.ZMicromega.Zgcd_pol_div	40
Coq.micromega.ZMicromega.Zgcd_pol_correct_lt	40
Coq.micromega.ZMicromega.is_pol_Z0_eval_pol	40	2.3.0.0.3.15.10.7.16	search with cache (only 1: intros x y H; only 1: apply Zeq_bool_eq; only 1: destruct x; only 1: destruct z as [| p| p]; only 1: trivial; only 1: trivial; only 1: trivial; only 1: now apply Z.eqb_eq; only 1: now destruct Hn || easy).	19.9396538734	32421
Coq.micromega.ZMicromega.pos_le_add	40
Coq.micromega.ZMicromega.max_var_le	40
Coq.micromega.ZMicromega.max_var_correct	40
Coq.micromega.ZMicromega.max_var_nformulae_mono_aux	40
Coq.micromega.ZMicromega.max_var_nformulae_mono_aux'	40
Coq.micromega.ZMicromega.max_var_nformulae_correct_aux	40
Coq.micromega.ZMicromega.max_var_nformalae_correct	40
Coq.micromega.ZMicromega.in_bdepth	40
Coq.micromega.ZMicromega.eval_Psatz_sound	40
Coq.micromega.ZMicromega.makeCuttingPlane_ns_sound	40
Coq.micromega.ZMicromega.cutting_plane_sound	40
Coq.micromega.ZMicromega.genCuttingPlaneNone	40
Coq.micromega.ZMicromega.eval_nformula_mk_eq_pos	40
Coq.micromega.ZMicromega.eval_nformula_bound_var	40	0.8.0	search with cache (only 1: intros; only 1: rewrite xnnormalise_correct; only 1: easy).	1.07578396797	74
Coq.micromega.ZMicromega.agree_env_subset	40
Coq.micromega.ZMicromega.agree_env_jump	40
Coq.micromega.ZMicromega.agree_env_tail	40
Coq.micromega.ZMicromega.max_var_acc	40
Coq.micromega.ZMicromega.agree_env_eval_nformula	40
Coq.micromega.ZMicromega.agree_env_eval_nformulae	40
Coq.micromega.ZMicromega.eq_true_iff_eq	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0298781394958	5
Coq.micromega.ZMicromega.ZChecker_sound	40
Coq.micromega.ZMicromega.ZTautoChecker_sound	40
Coq.micromega.ZifyBool.Z_of_bool_bound	40	3.30	search with cache (only 1: intros n; only 1: now destruct n).	1.83987116814	3165
Coq.micromega.ZifyBool.Z_eqb_isZero	40
Coq.micromega.ZifyBool.Z_leb_sub	40
Coq.micromega.ZifyBool.Z_ltb_leb	40
Coq.micromega.ZifyBool.Z_of_nat_eqb_iff	40
Coq.micromega.ZifyBool.Z_of_nat_leb_iff	40
Coq.micromega.ZifyBool.Z_of_nat_ltb_iff	40
Coq.micromega.ZifyBool.Z_eqb_ZSpec_ok	40	2.2.0.0.0.0.1.2.1	search with cache (only 1: split; only 1: compute; only 1: destruct x; only 1: intuition congruence; only 1: now split; only 1: now split; only 1: split; only 1: now destruct x; only 1: now destruct x).	2.57442593575	1113
Coq.micromega.ZifyBool.leZeroSpec_ok	40	7.3.3.16.0	search with cache (only 1: intros; only 1: destruct x; only 1: intuition try congruence; compute; congruence; only 1: intuition try congruence; compute; congruence; only 1: intuition try congruence; compute; congruence).	16.1864731312	14918
Coq.micromega.Env.jump_add	40
Coq.micromega.Env.jump_simpl	40
Coq.micromega.Env.jump_tl	40	13.9.0.0	search with cache (only 1: unfold tail; only 1: rewrite <- ?jump_add; only 1: rewrite Pos.add_1_r; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l).	4.78664398193	8276
Coq.micromega.Env.jump_succ	40	12.0	search with cache (only 1: rewrite <- !jump_add; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l).	0.78976392746	839
Coq.micromega.Env.jump_pred_double	40
Coq.micromega.Env.nth_spec	40
Coq.micromega.Env.nth_jump	40	1.0.1	search with cache (only 1: unfold hd, nth, tail, jump; only 1: f_equal; only 1: apply Pos.add_comm).	0.0286860466003	21
Coq.micromega.Env.nth_pred_double	40	1.0.0	search with cache (only 1: unfold hd, nth, tail, jump; only 1: f_equal; only 1: now rewrite Pos.add_1_r, Pos.succ_pred_double, Pos.add_diag).	0.0129430294037	4
Coq.micromega.Tauto.eval_f_morph	40
Coq.micromega.Tauto.map_simpl	40	0.0.0.0.0	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0125558376312	5
Coq.micromega.Tauto.is_X_inv	40
Coq.micromega.Tauto.if_same	40	3	search with cache (only 1: destr_bool).	0.0102741718292	4
Coq.micromega.Tauto.is_cnf_tt_cnf_ff	40	1.0	search with cache (only 1: simpl; only 1: solve [ auto ]).	0.00951504707336	3
Coq.micromega.Tauto.is_cnf_ff_cnf_ff	40	2.0	search with cache (only 1: simpl; only 1: reflexivity).	0.0066831111908	4
Coq.micromega.Tauto.is_cnf_tt_inv	40	8.0.27.12	search with cache (only 1: intros a Ha; only 1: destruct a; only 1: reflexivity; only 1: easy).	2.3332901001	5555
Coq.micromega.Tauto.is_cnf_ff_inv	40
Coq.micromega.Tauto.if_cnf_tt	40	0.0.3.1	search with cache (only 1: unfold cnf_tt; only 1: destruct f; only 1: auto; only 1: auto).	0.0123748779297	8
Coq.micromega.Tauto.or_cnf_opt_cnf_ff	40
Coq.micromega.Tauto.abs_and_pol	40
Coq.micromega.Tauto.abs_or_pol	40
Coq.micromega.Tauto.xcnf_true_mk_arrow_l	40
Coq.micromega.Tauto.or_cnf_opt_cnf_ff_r	40	0.0.1.3.23.2.3	search with cache (only 1: intros; only 1: unfold or_cnf_opt; only 1: destruct (is_cnf_tt f) eqn:EQ; only 1: simpl; only 1: apply is_cnf_tt_inv in EQ; only 1: auto; only 1: easy).	4.16532206535	8092
Coq.micromega.Tauto.xcnf_true_mk_arrow_r	40
Coq.micromega.Tauto.abst_form_correct	40
Coq.micromega.Tauto.radd_term_term	40
Coq.micromega.Tauto.radd_term_term'	40
Coq.micromega.Tauto.xror_clause_clause	40
Coq.micromega.Tauto.ror_clause_clause	40
Coq.micromega.Tauto.ror_cnf_cnf	40
Coq.micromega.Tauto.ror_opt_cnf_cnf	40
Coq.micromega.Tauto.ratom_cnf	40
Coq.micromega.Tauto.rxcnf_xcnf	40
Coq.micromega.Tauto.eval_cnf_app	40
Coq.micromega.Tauto.eval_cnf_ff	40	20.1	search with cache (only 1: intuition; only 1: firstorder).	3.83226299286	3778
Coq.micromega.Tauto.eval_cnf_tt	40	0.0.0	search with cache (only 1: unfold cnf_ff, eval_cnf, eval_clause; only 1: simpl; only 1: tauto).	0.010890007019	3
Coq.micromega.Tauto.eval_cnf_and_opt	40
Coq.micromega.Tauto.add_term_correct	40
Coq.micromega.Tauto.no_middle_eval_tt	40	19.10	search with cache (only 1: intuition; only 1: firstorder).	2.46511292458	1715
Coq.micromega.Tauto.or_clause_correct	40
Coq.micromega.Tauto.or_clause_cnf_correct	40
Coq.micromega.Tauto.eval_cnf_cons	40	0.3.1.6	search with cache (only 1: unfold cnf_ff, eval_cnf, eval_clause; only 1: intros; only 1: rewrite !make_conj_cons in *; only 1: tauto).	1.35142707825	856
Coq.micromega.Tauto.eval_cnf_cons_iff	40	0.1.0.0.0	search with cache (only 1: intros; only 1: unfold eval_cnf in *; only 1: rewrite make_conj_cons; only 1: unfold eval_clause at 2; only 1: tauto).	0.0287551879883	6
Coq.micromega.Tauto.or_cnf_correct	40
Coq.micromega.Tauto.or_cnf_opt_correct	40
Coq.micromega.Tauto.xcnf_correct	40
Coq.micromega.Tauto.cnf_checker_sound	40
Coq.micromega.Tauto.tauto_checker_sound	40
Coq.micromega.Tauto.eval_bf_map	40
Coq.micromega.ZifyComparison.Z_of_comparison_bound	40	5.3	search with cache (only 1: intros n; only 1: now destruct n).	0.0587069988251	13
Coq.micromega.ZifyComparison.Zcompare_spec	40
Coq.micromega.EnvRing.radd_ext_Proper	40	0	search with cache (only 1: exact (Radd_ext Reqe)).	0.0276989936829	1
Coq.micromega.EnvRing.rmul_ext_Proper	40	1	search with cache (only 1: exact (Rmul_ext Reqe)).	0.0309920310974	2
Coq.micromega.EnvRing.ropp_ext_Proper	40	1	search with cache (only 1: exact (Ropp_ext Reqe)).	0.0301249027252	2
Coq.micromega.EnvRing.rsub_ext_Proper	40	0.12	search with cache (only 1: intros x1 x2 Ex y1 y2 Ey; only 1: now rewrite !(ARsub_def ARth), Ex, Ey).	0.200030088425	66
Coq.micromega.EnvRing.Peq_ok	40
Coq.micromega.EnvRing.Peq_spec	40
Coq.micromega.EnvRing.Pphi0	40
Coq.micromega.EnvRing.Pphi1	40
Coq.micromega.EnvRing.env_morph	40
Coq.micromega.EnvRing.Pjump_add	40
Coq.micromega.EnvRing.Pjump_xO_tail	40	0.0.3.0.0	search with cache (only 1: apply env_morph; only 1: intros; only 1: unfold tail; only 1: rewrite <- jump_add; only 1: f_equal).	0.0563299655914	19
Coq.micromega.EnvRing.Pjump_pred_double	40
Coq.micromega.EnvRing.mkPinj_ok	40
Coq.micromega.EnvRing.pow_pos_add	40
Coq.micromega.EnvRing.ceqb_spec	40
Coq.micromega.EnvRing.mkPX_ok	40
Coq.micromega.EnvRing.PaddC_ok	40
Coq.micromega.EnvRing.PsubC_ok	40	0.2.0.0.1.0.0.1.1.2.1.0.0	search with cache (only 1: revert l; only 1: induction P; only 1: simpl; only 1: intros; only 1: rsimpl; only 1: Esimpl; only 1: simpl; only 1: intros; only 1: trivial; only 1: simpl; only 1: intros; only 1: rewrite IHP2; only 1: Esimpl).	33.2670359612	9081
Coq.micromega.EnvRing.PmulC_aux_ok	40
Coq.micromega.EnvRing.PmulC_ok	40
Coq.micromega.EnvRing.Popp_ok	40	0.3.0.0.0.0.0.5.1.1.1.1	search with cache (only 1: revert l; only 1: induction P; only 1: simpl; only 1: intros; only 1: Esimpl; only 1: simpl; only 1: intros; only 1: trivial; only 1: simpl; only 1: intros; only 1: rewrite IHP1, IHP2; only 1: rsimpl).	5.26286482811	3016
Coq.micromega.EnvRing.PaddX_ok	40
Coq.micromega.EnvRing.Padd_ok	40
Coq.micromega.EnvRing.PsubX_ok	40
Coq.micromega.EnvRing.Psub_ok	40
Coq.micromega.EnvRing.PmulI_ok	40
Coq.micromega.EnvRing.Pmul_ok	40
Coq.micromega.EnvRing.Psquare_ok	40
Coq.micromega.EnvRing.Mphi_morph	40
Coq.micromega.EnvRing.Mjump_xO_tail	40
Coq.micromega.EnvRing.Mjump_pred_double	40	0.0.0.2	search with cache (only 1: apply Mphi_morph; only 1: intros; only 1: rewrite jump_pred_double; only 1: now jump_simpl).	0.0390071868896	6
Coq.micromega.EnvRing.Mjump_add	40	0.0.0.0.5	search with cache (only 1: apply Mphi_morph; only 1: intros; only 1: rewrite <- jump_add; only 1: f_equal; only 1: apply Pos.add_comm).	0.0597989559174	18
Coq.micromega.EnvRing.mkZmon_ok	40	0.0.0.0.1.16.1	search with cache (only 1: simpl; only 1: induction M; only 1: rsimpl; only 1: simpl; only 1: rsimpl; only 1: simpl; only 1: rsimpl).	1.07352304459	651
Coq.micromega.EnvRing.zmon_pred_ok	40
Coq.micromega.EnvRing.mkVmon_ok	40
Coq.micromega.EnvRing.Mphi_ok	40
Coq.micromega.EnvRing.POneSubst_ok	40
Coq.micromega.EnvRing.PNSubst1_ok	40
Coq.micromega.EnvRing.PNSubst_ok	40
Coq.micromega.EnvRing.PSubstL1_ok	40
Coq.micromega.EnvRing.PSubstL_ok	40
Coq.micromega.EnvRing.PNSubstL_ok	40
Coq.micromega.EnvRing.mkX_ok	40
Coq.micromega.EnvRing.Ppow_pos_ok	40
Coq.micromega.EnvRing.Ppow_N_ok	40
Coq.micromega.EnvRing.norm_aux_PEadd	40
Coq.micromega.EnvRing.norm_aux_PEopp	40
Coq.micromega.EnvRing.norm_aux_spec	40
Coq.micromega.RingMicromega.rplus_morph_Proper	40	0	search with cache (only 1: exact (SORplus_wd sor)).	0.0100779533386	1
Coq.micromega.RingMicromega.rtimes_morph_Proper	40	1	search with cache (only 1: exact (SORtimes_wd sor)).	0.0114970207214	2
Coq.micromega.RingMicromega.ropp_morph_Proper	40	0	search with cache (only 1: exact (SORopp_wd sor)).	0.0102250576019	1
Coq.micromega.RingMicromega.rle_morph_Proper	40	0	search with cache (only 1: exact (SORle_wd sor)).	0.0105130672455	1
Coq.micromega.RingMicromega.rlt_morph_Proper	40	0	search with cache (only 1: exact (SORlt_wd sor)).	0.0106580257416	1
Coq.micromega.RingMicromega.rminus_morph_Proper	40	2.1.1.0.0	search with cache (only 1: intros x1 x2 H1 y1 y2 H2; only 1: rewrite (Rsub_def (SORrt sor) x1 y1); only 1: rewrite (Rsub_def (SORrt sor) x2 y2); only 1: rewrite H1; only 1: now rewrite H2).	0.0449521541595	9
Coq.micromega.RingMicromega.cleb_sound	40
Coq.micromega.RingMicromega.cneqb_sound	40
Coq.micromega.RingMicromega.cltb_sound	40
Coq.micromega.RingMicromega.OpMult_sound	40
Coq.micromega.RingMicromega.OpAdd_sound	40
Coq.micromega.RingMicromega.pexpr_times_nformula_correct	40
Coq.micromega.RingMicromega.nformula_times_nformula_correct	40
Coq.micromega.RingMicromega.nformula_plus_nformula_correct	40
Coq.micromega.RingMicromega.eval_Psatz_Sound	40
Coq.micromega.RingMicromega.ge_bool_cases	40
Coq.micromega.RingMicromega.extract_hyps_app	40
Coq.micromega.RingMicromega.nhyps_of_psatz_correct	40
Coq.micromega.RingMicromega.check_inconsistent_sound	40
Coq.micromega.RingMicromega.checker_nf_sound	40
Coq.micromega.RingMicromega.eval_pol_sub	40
Coq.micromega.RingMicromega.eval_pol_add	40
Coq.micromega.RingMicromega.eval_pol_mul	40
Coq.micromega.RingMicromega.eval_pol_opp	40
Coq.micromega.RingMicromega.eval_pol_norm	40
Coq.micromega.RingMicromega.normalise_sound	40
Coq.micromega.RingMicromega.negate_correct	40
Coq.micromega.RingMicromega.cnf_of_list_correct	40
Coq.micromega.RingMicromega.eq0_cnf	40
Coq.micromega.RingMicromega.xnormalise_correct	40
Coq.micromega.RingMicromega.xnegate_correct	40
Coq.micromega.RingMicromega.cnf_normalise_correct	40
Coq.micromega.RingMicromega.cnf_negate_correct	40
Coq.micromega.RingMicromega.eval_nformula_dec	40
Coq.micromega.RingMicromega.xdenorm_correct	40
Coq.micromega.RingMicromega.denorm_correct	40
Coq.micromega.RingMicromega.eval_pexprSC	40
Coq.micromega.RingMicromega.eval_formulaSC	40
Coq.micromega.Refl.make_impl_true	40	3.2.0.2.4	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: red; only 1: intuition).	0.0599038600922	220
Coq.micromega.Refl.make_impl_map	40	3.3.2	search with cache (only 1: induction l as [| a l IH]; only 1: intuition; only 1: firstorder  (subst; auto)).	0.265353918076	239
Coq.micromega.Refl.make_conj_cons	40	3.0.1.1.4.4	search with cache (only 1: intros Q H H'; only 1: simpl; only 1: induction l as [| a l IH]; only 1: intuition; only 1: constructor; only 1: intuition).	3.23929977417	5728
Coq.micromega.Refl.make_conj_impl	40	2.3.2.0.1.0.3.1	search with cache (only 1: intros; only 1: induction l; only 1: simpl; only 1: tauto; only 1: simpl; only 1: destruct l; only 1: tauto; only 1: tauto).	13.0511310101	18882
Coq.micromega.Refl.make_conj_in	40	0.0.6.0.0.3.1.4.1.0.0	search with cache (only 1: induction l as [| a l IH]; only 1: firstorder; only 1: simpl; only 1: firstorder; only 1: subst; only 1: induction l; only 1: firstorder; only 1: firstorder; only 1: induction l; only 1: firstorder; only 1: firstorder).	14.9476640224	35067
Coq.micromega.Refl.make_conj_app	40
Coq.micromega.Refl.make_conj_rapp	40
Coq.micromega.Refl.not_make_conj_cons	40
Coq.micromega.Refl.not_make_conj_app	40
Coq.micromega.QMicromega.Qsor	40
Coq.micromega.QMicromega.QSORaddon	40
Coq.micromega.QMicromega.Qeval_expr_simpl	40	18.1	search with cache (only 1: intros; only 1: repeat match goal with | |- context [ match ?x with | _ => _ end ] => is_var x; destruct x | _ => intro | _ => reflexivity | _ => progress subst | H:Some ?a = Some ?b |- _ => assert (a = b) by refine match H with | eq_refl => eq_refl end; clear H | H:None = Some _ |- _ => solve [ inversion H ] end).	0.439418792725	364
Coq.micromega.QMicromega.QNpower	40	0.0.0.0	search with cache (only 1: intros r [| n]; only 1: simpl; only 1: auto; only 1: reflexivity).	0.061840057373	4
Coq.micromega.QMicromega.Qeval_expr_compat	40
Coq.micromega.QMicromega.Qeval_formula_compat	40
Coq.micromega.QMicromega.Qeval_nformula_dec	40
Coq.micromega.QMicromega.QWeakChecker_sound	40
Coq.micromega.QMicromega.QTautoChecker_sound	40
Coq.micromega.RMicromega.Rsrt	40	14	search with cache (only 1: exact RTheory).	0.131746053696	115
Coq.micromega.RMicromega.Rsor	40
Coq.micromega.RMicromega.Rinv_1	40	1.1	search with cache (only 1: intro; only 1: field).	0.0567998886108	4
Coq.micromega.RMicromega.Qeq_true	40
Coq.micromega.RMicromega.Qeq_false	40
Coq.micromega.RMicromega.Qle_true	40
Coq.micromega.RMicromega.Q2R_0	40	1.37	search with cache (only 1: unfold Qinv, Q2R, Qeq; only 1: auto with real).	6.16912603378	7109
Coq.micromega.RMicromega.Q2R_1	40
Coq.micromega.RMicromega.Q2R_inv_ext	40
Coq.micromega.RMicromega.QSORaddon	40
Coq.micromega.RMicromega.is_neg_true	40
Coq.micromega.RMicromega.is_neg_false	40	8.0.13.7.1.2.6	search with cache (only 1: destruct z; only 1: simpl; only 1: destruct z; only 1: easy; only 1: now destruct Hn || easy; only 1: congruence; only 1: now destruct n).	21.2318220139	25517
Coq.micromega.RMicromega.Q2R_m_Proper	40
Coq.micromega.RMicromega.Q2R_pow_pos	40
Coq.micromega.RMicromega.Q2R_pow_N	40
Coq.micromega.RMicromega.Qmult_integral	40	0.0.0.0	search with cache (only 1: intros (x1, x2) (y1, y2); only 1: unfold Qeq, Qmult; only 1: simpl; only 1: now rewrite <- Z.mul_eq_0, !Z.mul_1_r).	0.0533840656281	4
Coq.micromega.RMicromega.Qpower_positive_eq_zero	40
Coq.micromega.RMicromega.Qpower_positive_zero	40
Coq.micromega.RMicromega.Q2RpowerRZ	40
Coq.micromega.RMicromega.Qpower0	40
Coq.micromega.RMicromega.Q_of_RcstR	40
Coq.micromega.RMicromega.Reval_formula_compat	40	3.18.0.19	search with cache (only 1: generalize eq_trans, Rlt_trans, Rlt_eq_compat; only 1: intros x x' y y'; only 1: fix even_equiv 1; only 1: intuition).	11.2172861099	13221
Coq.micromega.RMicromega.Reval_nformula_dec	40
Coq.micromega.RMicromega.RWeakChecker_sound	40
Coq.micromega.RMicromega.RTautoChecker_sound	40
Coq.rtauto.Bintree.Gt_Psucc	40
Coq.rtauto.Bintree.Psucc_Gt	40	1.2.5.0.4.1.3	search with cache (only 1: induction p; only 1: simpl; only 1: Pos.simpl_compare; only 1: now rewrite IHp; only 1: rewrite <- Pos.compare_succ_succ; only 1: now destruct p; only 1: trivial).	5.28882098198	6624
Coq.rtauto.Bintree.map_app	40	0.2.0.1.0.0.0	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: intro y; only 1: simpl; only 1: rewrite (IHl y); only 1: auto).	0.0323538780212	21
Coq.rtauto.Bintree.length_map	40	0.0.0.0.0	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0135419368744	5
Coq.rtauto.Bintree.Lget_map	40
Coq.rtauto.Bintree.Lget_app	40	1.0.1.5.0.0.1.2.3	search with cache (only 1: induction l; only 1: intros [| n]; only 1: auto; only 1: simpl; only 1: reflexivity; only 1: intros [| n]; only 1: auto; only 1: simpl; only 1: auto).	4.59577703476	7179
Coq.rtauto.Bintree.Lget_app_Some	40	0.0.4.0.6.0.1	search with cache (only 1: induction l; only 1: simpl; only 1: easy; only 1: simpl Lget; only 1: induction i; only 1: auto; only 1: auto).	1.93662905693	2670
Coq.rtauto.Bintree.Tget_Tempty	40	3.0.1.0	search with cache (only 1: intros; only 1: revert p; only 1: intros; only 1: now induction p).	0.0207908153534	16
Coq.rtauto.Bintree.Tget_Tadd	40
Coq.rtauto.Bintree.get_empty	40	0.0.0.10.2	search with cache (only 1: intros; only 1: destruct i; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	0.073301076889	200
Coq.rtauto.Bintree.get_Full_Gt	40
Coq.rtauto.Bintree.get_Full_Eq	40
Coq.rtauto.Bintree.get_push_Full	40
Coq.rtauto.Bintree.Full_push_compat	40
Coq.rtauto.Bintree.Full_index_one_empty	40
Coq.rtauto.Bintree.push_not_empty	40	0.1.8.2.9	search with cache (only 1: unfold not; only 1: intros; only 1: pose proof (Pos.succ_not_1 (index S)) as h; only 1: destr_eq H; only 1: congruence).	0.62472987175	987
Coq.rtauto.Bintree.get_In	40
Coq.rtauto.Bintree.Tget_Tmap	40
Coq.rtauto.Bintree.Tmap_Tadd	40
Coq.rtauto.Bintree.get_map	40
Coq.rtauto.Bintree.map_push	40
Coq.rtauto.Bintree.Full_map	40	0.10	search with cache (only 1: fix sqrtrem_spec 1; only 1: auto).	0.0603229999542	129
Coq.rtauto.Rtauto.pos_eq_refl	40
Coq.rtauto.Rtauto.form_eq_refl	40
Coq.rtauto.Rtauto.compose0	40	1.1.0.5	search with cache (only 1: fix sqrtrem_spec 1; only 1: intros S F; only 1: intros; only 1: auto).	0.170785903931	185
Coq.rtauto.Rtauto.compose1	40
Coq.rtauto.Rtauto.compose2	40	0.1.3.0.1.0.1.0.0	search with cache (only 1: induction F; only 1: intros A H; only 1: simpl; only 1: auto; only 1: intros A B H; only 1: simpl; only 1: intro z; only 1: apply IHF; only 1: auto).	2.0348751545	2761
Coq.rtauto.Rtauto.compose3	40	0.1.4.0.0.0.0.0.0	search with cache (only 1: induction F; only 1: intros A H; only 1: simpl; only 1: auto; only 1: intros A B H; only 1: simpl; only 1: intros x y; only 1: apply IHF; only 1: auto).	1.20322108269	1419
Coq.rtauto.Rtauto.weaken	40
Coq.rtauto.Rtauto.project_In	40	5.6.7	search with cache (only 1: intros [index0 contents0] F; only 1: fix sqrtrem_spec 1; only 1: auto).	1.11929321289	2791
Coq.rtauto.Rtauto.project	40
Coq.rtauto.Rtauto.interp_proof	40
Coq.rtauto.Rtauto.Reflect	40
Coq.nsatz.Nsatz.psos_r1b	40
Coq.nsatz.Nsatz.psos_r1	40	9.3.1.0.0	search with cache (only 1: intros x y H; only 1: setoid_replace x with x - y + y; only 1: setoid_rewrite H; only 1: cring; only 1: cring).	8.5649600029	1024
Coq.nsatz.Nsatz.nsatzR_diff	40
Coq.nsatz.Nsatz.P0Z_correct	40	2.2.1.0	search with cache (only 1: intros; only 1: induction l; only 1: auto; only 1: auto).	0.0904409885406	16
Coq.nsatz.Nsatz.Rext	40	0.0.0.4	search with cache (only 1: apply mk_reqe; only 1: solve_proper; only 1: solve_proper; only 1: solve_proper).	0.137746095657	8
Coq.nsatz.Nsatz.Rset	40	1.0	search with cache (only 1: unfold Setoid_Theory; only 1: apply ring_setoid).	0.0668029785156	3
Coq.nsatz.Nsatz.Rtheory	40
Coq.nsatz.Nsatz.PolZadd_correct	40
Coq.nsatz.Nsatz.PolZmul_correct	40
Coq.nsatz.Nsatz.R_power_theory	40
Coq.nsatz.Nsatz.norm_correct	40
Coq.nsatz.Nsatz.PolZeq_correct	40
Coq.nsatz.Nsatz.mult_l_correct	40
Coq.nsatz.Nsatz.compute_list_correct	40
Coq.nsatz.Nsatz.check_correct	40
Coq.nsatz.Nsatz.Rsth	40	3.0.0.0.3	search with cache (only 1: constructor; only 1: constructor; only 1: unfold Symmetric; only 1: auto; only 1: congruence).	0.222651958466	55
Coq.nsatz.Nsatz.Rri	40
Coq.nsatz.Nsatz.R_one_zero	40	0	search with cache (only 1: exact R1_neq_R0).	0.112906932831	1
Coq.nsatz.Nsatz.Rcri	40
Coq.nsatz.Nsatz.Rdi	40
Coq.nsatz.Nsatz.Qri	40
Coq.nsatz.Nsatz.Q_one_zero	40	0.0.0	search with cache (only 1: intuition subst; auto with qarith; only 1: compute in H; only 1: discriminate).	0.120486021042	3
Coq.nsatz.Nsatz.Qcri	40	1.0.0.5.2.23	search with cache (only 1: intros x H; only 1: apply Q_Setoid; only 1: red; only 1: simpl; only 1: rewrite Pos.mul_comm; only 1: ring).	1.30361509323	1031
Coq.nsatz.Nsatz.Qdi	40
Coq.nsatz.Nsatz.Z_one_zero	40	0.0	search with cache (only 1: intro EQ; only 1: discriminate).	0.118859052658	2
Coq.nsatz.Nsatz.Zcri	40	0.0	search with cache (only 1: red; only 1: exact Z.mul_comm).	0.121823072433	2
Coq.nsatz.Nsatz.Zdi	40
Coq.omega.OmegaLemmas.Zred_factor0	40	0	search with cache (only 1: now Z.nzsimpl).	0.0326960086823	1
Coq.omega.OmegaLemmas.Zred_factor1	40	1.0.0.0.0.0.0.0	search with cache (only 1: rewrite Z.mul_comm; only 1: rewrite Z.mul_comm; only 1: rewrite Z.mul_comm; only 1: rewrite Z.mul_comm; only 1: rewrite Z.mul_comm; only 1: rewrite Z.mul_comm; only 1: rewrite Z.mul_comm; only 1: apply Z.add_diag).	0.0291910171509	12
Coq.omega.OmegaLemmas.Zred_factor2	40
Coq.omega.OmegaLemmas.Zred_factor3	40	3	search with cache (only 1: now Z.nzsimpl).	0.378739118576	24
Coq.omega.OmegaLemmas.Zred_factor4	40	2.0.4.2	search with cache (only 1: rewrite Z.mul_add_distr_l; only 1: nzinduct n; only 1: now Z.nzsimpl; only 1: now Z.nzsimpl).	0.448628902435	61
Coq.omega.OmegaLemmas.Zred_factor5	40	3.0.0.12	search with cache (only 1: nzinduct n; only 1: now Z.nzsimpl; only 1: intro; only 1: now Z.nzsimpl).	0.465487957001	181
Coq.omega.OmegaLemmas.Zred_factor6	40	0	search with cache (only 1: now destruct n).	0.00975513458252	1
Coq.omega.OmegaLemmas.new_var	40	0.9.13	search with cache (only 1: intros; only 1: exists x; only 1: reflexivity).	0.239134073257	594
Coq.omega.OmegaLemmas.OMEGA1	40	2	search with cache (only 1: Z.order).	0.0111038684845	3
Coq.omega.OmegaLemmas.OMEGA2	40	0.9.0.5	search with cache (only 1: destruct x; only 1: trivial; only 1: easy || now destruct y; only 1: easy).	2.0290350914	487
Coq.omega.OmegaLemmas.OMEGA3	40
Coq.omega.OmegaLemmas.OMEGA4	40
Coq.omega.OmegaLemmas.OMEGA5	40	24.15	search with cache (only 1: intros Hx Hxy; only 1: now subst).	2.77819895744	1746
Coq.omega.OmegaLemmas.OMEGA6	40	4.5.10.7.9	search with cache (only 1: intros LT -> EQ; only 1: destruct x; only 1: easy || now destruct y; only 1: easy; only 1: easy).	8.14874315262	2041
Coq.omega.OmegaLemmas.OMEGA7	40	2.7.8	search with cache (only 1: intros a b Ha Hb; only 1: Z.swap_greater; only 1: Z.order_pos).	1.86750292778	361
Coq.omega.OmegaLemmas.OMEGA8	40	2.14.0.39	search with cache (only 1: destruct x; only 1: reflexivity; only 1: now destruct y; only 1: now destruct 1 || trivial).	22.4363439083	3066
Coq.omega.OmegaLemmas.OMEGA9	40
Coq.omega.OmegaLemmas.OMEGA10	40
Coq.omega.OmegaLemmas.OMEGA11	40	0.1.0	search with cache (only 1: rewrite ?Z.mul_add_distr_r, ?Z.mul_add_distr_l, ?Z.mul_assoc; only 1: rewrite <- !Z.add_assoc; only 1: f_equal).	0.0742511749268	19
Coq.omega.OmegaLemmas.OMEGA12	40	0.1	search with cache (only 1: rewrite ?Z.mul_add_distr_r, ?Z.mul_add_distr_l, ?Z.mul_assoc; only 1: apply Z.add_shuffle3).	0.0119600296021	3
Coq.omega.OmegaLemmas.OMEGA13	40
Coq.omega.OmegaLemmas.OMEGA14	40	0.1.0.0.0.0.0.0.0	search with cache (only 1: rewrite Z.add_shuffle1; only 1: rewrite Z.add_shuffle1; only 1: rewrite Z.add_shuffle1; only 1: rewrite Z.add_shuffle1; only 1: rewrite Z.add_shuffle1; only 1: rewrite Z.add_shuffle1; only 1: rewrite Z.add_shuffle1; only 1: rewrite <- Z.mul_add_distr_l, <- Pos2Z.opp_neg, Z.add_opp_diag_r; only 1: now Z.nzsimpl).	0.103728055954	13
Coq.omega.OmegaLemmas.OMEGA15	40	0.0.1.0	search with cache (only 1: rewrite ?Z.mul_add_distr_r, ?Z.mul_add_distr_l, ?Z.mul_assoc; only 1: rewrite <- !Z.add_assoc; only 1: f_equal; only 1: apply Z.add_shuffle3).	0.0296700000763	20
Coq.omega.OmegaLemmas.OMEGA16	40	1.1	search with cache (only 1: rewrite ?Z.mul_add_distr_r, ?Z.mul_add_distr_l, ?Z.mul_assoc; only 1: now Z.nzsimpl).	0.0307140350342	4
Coq.omega.OmegaLemmas.OMEGA17	40	0.1	search with cache (only 1: intros H ->; only 1: now Z.nzsimpl).	0.0464689731598	3
Coq.omega.OmegaLemmas.OMEGA18	40	4.5.7	search with cache (only 1: intros H1 H2 H3; only 1: subst; only 1: auto with arith).	0.614388942719	278
Coq.omega.OmegaLemmas.OMEGA19	40
Coq.omega.OmegaLemmas.OMEGA20	40	0.1.0.0	search with cache (only 1: unfold Zne, not; only 1: intros NE EQ; only 1: subst; only 1: now Z.nzsimpl).	0.0392329692841	5
Coq.omega.OmegaLemmas.intro_Z	40
Coq.omega.PreOmega.Z.mod_0_r_ext	40	7.8.0.7	search with cache (only 1: destruct x; only 1: auto with relations; only 1: easy || now destruct y; only 1: easy || now destruct y).	1.32854485512	1062
Coq.omega.PreOmega.Z.div_0_r_ext	40	0.0.0.0.2.0	search with cache (only 1: intro; only 1: subst; only 1: destruct x; only 1: trivial; only 1: reflexivity; only 1: reflexivity).	0.0183141231537	8
Coq.omega.PreOmega.Z.rem_0_r_ext	40	1.5.2	search with cache (only 1: intro; only 1: subst; only 1: now destruct x).	0.0358498096466	35
Coq.omega.PreOmega.Z.quot_0_r_ext	40	0.0.0.0.1.0	search with cache (only 1: intro; only 1: subst; only 1: destruct x; only 1: trivial; only 1: reflexivity; only 1: reflexivity).	0.0170559883118	7
Coq.omega.PreOmega.Z.rem_bound_pos_pos	40
Coq.omega.PreOmega.Z.rem_bound_neg_pos	40
Coq.omega.PreOmega.Z.rem_bound_pos_neg	40
Coq.omega.PreOmega.Z.rem_bound_neg_neg	40
Coq.btauto.Algebra.Decidable_sound	40	0.0.0	search with cache (only 1: intros P H Hp; only 1: apply -> Decidable_spec; only 1: assumption).	0.0159640312195	3
Coq.btauto.Algebra.Decidable_complete	40	2.8.2	search with cache (only 1: intros f w; only 1: simpl; only 1: apply <- Decidable_spec).	0.0819420814514	174
Coq.btauto.Algebra.Decidable_sound_alt	40	0.0.0.0.0	search with cache (only 1: intros P [wit spec] Hd; only 1: simpl; only 1: destruct wit; only 1: tauto; only 1: tauto).	0.0210709571838	5
Coq.btauto.Algebra.Decidable_complete_alt	40	0.1.23.1.3	search with cache (only 1: intro; only 1: intros x y H; only 1: destruct x; only 1: simpl in *; only 1: intuition congruence).	3.71232390404	4983
Coq.btauto.Algebra.Decidable_PosEq_obligation_1	40	2.0.2.0	search with cache (only 1: revert q; only 1: intros s1; only 1: rewrite Pos.eqb_eq; only 1: now rewrite ?Pos.max_1_r, <- ?Pos2Z.inj_max).	0.0574238300323	53
Coq.btauto.Algebra.Decidable_PosLt_obligation_1	40	0.0.0.22.0	search with cache (only 1: unfold Positive_as_OT.ltb, Positive_as_OT.lt; only 1: case Pos.compare_spec; only 1: easy'; only 1: easy'; only 1: easy').	3.45811319351	2347
Coq.btauto.Algebra.Decidable_PosLe_obligation_1	40	37.0	search with cache (only 1: unfold Positive_as_OT.leb, Positive_as_OT.le; only 1: now case Pos.compare).	14.5770168304	9499
Coq.btauto.Algebra.Decidable_eq_poly_obligation_1	40
Coq.btauto.Algebra.Decidable_null_obligation_3	40	11.0.6.41.0	search with cache (only 1: induction p; only 1: destruct b; only 1: now split; only 1: intuition congruence; only 1: now split).	16.3422238827	31979
Coq.btauto.Algebra.Decidable_valid_obligation_1	40
Coq.btauto.Algebra.valid_le_compat	40
Coq.btauto.Algebra.linear_le_compat	40
Coq.btauto.Algebra.linear_valid_incl	40
Coq.btauto.Algebra.eval_null_zero	40	0.0.0.6.5.2.1	search with cache (only 1: intros x y H; only 1: apply eq_true_iff_eq; only 1: compute; only 1: destruct H as [H1 H2]; only 1: first [ discriminate | constructor ]; only 1: first [ discriminate | constructor ]; only 1: first [ discriminate | constructor ]).	2.01167106628	1223
Coq.btauto.Algebra.eval_extensional_eq_compat	40
Coq.btauto.Algebra.eval_suffix_compat	40
Coq.btauto.Algebra.poly_add_compat	40
Coq.btauto.Algebra.poly_mul_cst_compat	40
Coq.btauto.Algebra.poly_mul_mon_compat	40
Coq.btauto.Algebra.poly_mul_compat	40
Coq.btauto.Algebra.poly_add_valid_compat	40
Coq.btauto.Algebra.poly_mul_cst_valid_compat	40
Coq.btauto.Algebra.poly_mul_mon_null_compat	40
Coq.btauto.Algebra.poly_mul_mon_valid_compat	40
Coq.btauto.Algebra.poly_mul_valid_compat	40
Coq.btauto.Algebra.poly_add_linear_compat	40
Coq.btauto.Algebra.reduce_aux_eval_compat	40
Coq.btauto.Algebra.reduce_eval_compat	40
Coq.btauto.Algebra.reduce_aux_le_compat	40
Coq.btauto.Algebra.linear_reduce_aux	40
Coq.btauto.Algebra.linear_reduce	40
Coq.btauto.Reflect.poly_of_formula_eval_compat	40
Coq.btauto.Reflect.poly_of_formula_valid_compat	40
Coq.btauto.Reflect.poly_of_formula_sound	40
Coq.btauto.Reflect.reduce_poly_of_formula_sound	40
Coq.btauto.Reflect.list_nth_base	40	2.1.0	search with cache (only 1: induction l; only 1: auto; only 1: auto).	0.0451679229736	6
Coq.btauto.Reflect.list_nth_succ	40	33.1.3	search with cache (only 1: intros A def l; only 1: unfold list_nth; only 1: now rewrite Pos.peano_rect_succ).	20.035130024	24537
Coq.btauto.Reflect.list_nth_nil	40
Coq.btauto.Reflect.make_last_nth_1	40
Coq.btauto.Reflect.make_last_nth_2	40	1.0.1.0.2.0.1.6	search with cache (only 1: intros; only 1: induction n using Pos.peano_rect; only 1: reflexivity; only 1: unfold make_last; only 1: rewrite list_nth_succ; only 1: unfold list_nth; only 1: rewrite Pos.peano_rect_succ; only 1: auto).	6.64219999313	6802
Coq.btauto.Reflect.list_replace_nth_1	40
Coq.btauto.Reflect.list_replace_nth_2	40
Coq.btauto.Reflect.boolean_witness_nonzero	40
Coq.btauto.Reflect.reduce_poly_of_formula_sound_alt	40
Coq.funind.Recdef.le_lt_SS	40	13	search with cache (only 1: auto with arith).	0.0164458751678	60
Coq.funind.Recdef.Splus_lt	40	37	search with cache (only 1: auto with arith).	2.21790981293	5224
Coq.funind.Recdef.SSplus_lt	40	28	search with cache (only 1: auto with arith).	16.9345970154	34919
Coq.funind.Recdef.max	40
Coq.setoid_ring.Rings_Z.Zcri	40	0.0	search with cache (only 1: red; only 1: exact Z.mul_comm).	0.0113019943237	2
Coq.setoid_ring.Rings_Z.Z_one_zero	40	3.0.0	search with cache (only 1: intro EQ; only 1: revert EQ; only 1: discriminate).	0.0119547843933	6
Coq.setoid_ring.Rings_Z.Zdi	40
Coq.setoid_ring.Integral_domain.integral_domain_minus_one_zero	40
Coq.setoid_ring.Integral_domain.pow_not_zero	40
Coq.setoid_ring.Integral_domain.Rintegral_domain_pow	40
Coq.setoid_ring.Ncring_polynom.cO	40	10	search with cache (only 1: assumption).	0.0164818763733	21
Coq.setoid_ring.Ncring_polynom.cI	40	0	search with cache (only 1: exact ring0).	0.00990390777588	1
Coq.setoid_ring.Ncring_polynom.Peq_ok	40
Coq.setoid_ring.Ncring_polynom.Pphi0	40
Coq.setoid_ring.Ncring_polynom.Pphi1	40
Coq.setoid_ring.Ncring_polynom.mkPX_ok	40
Coq.setoid_ring.Ncring_polynom.PaddCl_ok	40
Coq.setoid_ring.Ncring_polynom.PmulC_aux_ok	40
Coq.setoid_ring.Ncring_polynom.PmulC_ok	40
Coq.setoid_ring.Ncring_polynom.Popp_ok	40
Coq.setoid_ring.Ncring_polynom.PaddXPX	40
Coq.setoid_ring.Ncring_polynom.PaddX_ok2	40
Coq.setoid_ring.Ncring_polynom.Padd_ok	40
Coq.setoid_ring.Ncring_polynom.PaddX_ok	40
Coq.setoid_ring.Ncring_polynom.Psub_ok	40
Coq.setoid_ring.Ncring_polynom.Pmul_ok	40
Coq.setoid_ring.Ncring_polynom.Psquare_ok	40
Coq.setoid_ring.Ncring_polynom.mkX_ok	40	1.3.0.0.0.0	search with cache (only 1: intros; only 1: simpl; only 1: rewrite ring_morphism0; only 1: rsimpl; only 1: rewrite ring_morphism1; only 1: rsimpl).	0.347820997238	10
Coq.setoid_ring.Ncring_polynom.Ppow_pos_ok	40
Coq.setoid_ring.Ncring_polynom.Ppow_N_ok	40
Coq.setoid_ring.Ncring_polynom.norm_aux_spec	40
Coq.setoid_ring.Ncring_polynom.norm_subst_spec	40
Coq.setoid_ring.Ncring_polynom.norm_subst_ok	40	2.0.0	search with cache (only 1: intros; only 1: unfold norm_subst; only 1: apply norm_aux_spec).	0.607172012329	33
Coq.setoid_ring.Ncring_polynom.ring_correct	40
Coq.setoid_ring.Ring.BoolTheory	40	0.0.0.0.0.0.0.0.0.55	search with cache (only 1: constructor; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool).	2.47063302994	2308
Coq.setoid_ring.Ring.bool_eq_ok	40	0.0.0.0.19	search with cache (only 1: intros [| ] [| ]; only 1: trivial; only 1: auto; only 1: auto; only 1: auto).	0.290117025375	650
Coq.setoid_ring.Field_theory.radd_ext_Proper	40	2	search with cache (only 1: exact (Radd_ext Reqe)).	0.012687921524	3
Coq.setoid_ring.Field_theory.rmul_ext_Proper	40	1	search with cache (only 1: exact (Rmul_ext Reqe)).	0.0095739364624	2
Coq.setoid_ring.Field_theory.ropp_ext_Proper	40	3	search with cache (only 1: exact (Ropp_ext Reqe)).	0.0148098468781	4
Coq.setoid_ring.Field_theory.rsub_ext_Proper	40	4	search with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).	0.0162220001221	5
Coq.setoid_ring.Field_theory.rinv_ext_Proper	40	7	search with cache (only 1: auto with arith).	0.0305960178375	13
Coq.setoid_ring.Field_theory.ceqb_spec	40
Coq.setoid_ring.Field_theory.NPEequiv_eq	40
Coq.setoid_ring.Field_theory.NPEeval_ext	40	0	search with cache (only 1: now intros l l' <- P Q H).	0.0129511356354	1
Coq.setoid_ring.Field_theory.rsub_0_l	40
Coq.setoid_ring.Field_theory.rsub_0_r	40
Coq.setoid_ring.Field_theory.rdiv_simpl	40
Coq.setoid_ring.Field_theory.rdiv_ext	40
Coq.setoid_ring.Field_theory.rmul_reg_l	40
Coq.setoid_ring.Field_theory.field_is_integral_domain	40
Coq.setoid_ring.Field_theory.ropp_neq_0	40
Coq.setoid_ring.Field_theory.rdiv_r_r	40
Coq.setoid_ring.Field_theory.rdiv1	40
Coq.setoid_ring.Field_theory.rdiv2	40
Coq.setoid_ring.Field_theory.rdiv2b	40
Coq.setoid_ring.Field_theory.rdiv5	40
Coq.setoid_ring.Field_theory.rdiv3b	40
Coq.setoid_ring.Field_theory.rdiv6	40
Coq.setoid_ring.Field_theory.rdiv4	40
Coq.setoid_ring.Field_theory.rdiv4b	40
Coq.setoid_ring.Field_theory.rdiv7	40
Coq.setoid_ring.Field_theory.rdiv7b	40
Coq.setoid_ring.Field_theory.rinv_nz	40
Coq.setoid_ring.Field_theory.rdiv8	40
Coq.setoid_ring.Field_theory.cross_product_eq	40
Coq.setoid_ring.Field_theory.pow_ext	40
Coq.setoid_ring.Field_theory.pow_N_ext	40
Coq.setoid_ring.Field_theory.pow_pos_0	40
Coq.setoid_ring.Field_theory.pow_pos_1	40
Coq.setoid_ring.Field_theory.pow_pos_cst	40
Coq.setoid_ring.Field_theory.pow_pos_mul_l	40
Coq.setoid_ring.Field_theory.pow_pos_add_r	40
Coq.setoid_ring.Field_theory.pow_pos_mul_r	40
Coq.setoid_ring.Field_theory.pow_pos_nz	40
Coq.setoid_ring.Field_theory.pow_pos_div	40
Coq.setoid_ring.Field_theory.PEadd_ext	40
Coq.setoid_ring.Field_theory.PEsub_ext	40	0.0.0	search with cache (only 1: intros ? ? E ? ? E' l; only 1: simpl; only 1: now rewrite E, E').	0.0592691898346	3
Coq.setoid_ring.Field_theory.PEmul_ext	40	0.0.0	search with cache (only 1: intros ? ? E ? ? E' l; only 1: simpl; only 1: now rewrite E, E').	0.0416960716248	3
Coq.setoid_ring.Field_theory.PEopp_ext	40
Coq.setoid_ring.Field_theory.PEpow_ext	40
Coq.setoid_ring.Field_theory.PE_1_l	40
Coq.setoid_ring.Field_theory.PE_1_r	40
Coq.setoid_ring.Field_theory.PEpow_0_r	40
Coq.setoid_ring.Field_theory.PEpow_1_r	40	0.0.0	search with cache (only 1: intros l; only 1: simpl; only 1: now rewrite !rpow_pow).	0.0219180583954	3
Coq.setoid_ring.Field_theory.PEpow_1_l	40
Coq.setoid_ring.Field_theory.PEpow_add_r	40
Coq.setoid_ring.Field_theory.PEpow_mul_l	40
Coq.setoid_ring.Field_theory.PEpow_mul_r	40
Coq.setoid_ring.Field_theory.PEpow_nz	40
Coq.setoid_ring.Field_theory.if_true	40	0.0.0.3.4	search with cache (only 1: destruct a as [| p], b as [| q]; only 1: auto; only 1: auto; only 1: auto; only 1: auto).	0.106523036957	51
Coq.setoid_ring.Field_theory.PExpr_eq_semi_ok	40
Coq.setoid_ring.Field_theory.PExpr_eq_spec	40
Coq.setoid_ring.Field_theory.NPEadd_ok	40
Coq.setoid_ring.Field_theory.NPEsub_ok	40
Coq.setoid_ring.Field_theory.NPEopp_ok	40
Coq.setoid_ring.Field_theory.NPEpow_ok	40
Coq.setoid_ring.Field_theory.NPEmul_ok	40
Coq.setoid_ring.Field_theory.PEsimp_ok	40
Coq.setoid_ring.Field_theory.PCond_cons	40
Coq.setoid_ring.Field_theory.PCond_cons_inv_l	40	0.3.0.1.2	search with cache (only 1: simpl; only 1: destruct l1; only 1: trivial; only 1: destruct 1; only 1: trivial).	0.554089784622	224
Coq.setoid_ring.Field_theory.PCond_cons_inv_r	40	0.1	search with cache (only 1: rewrite PCond_cons; only 1: now destruct 1).	0.0246179103851	3
Coq.setoid_ring.Field_theory.PCond_app	40
Coq.setoid_ring.Field_theory.absurd_PCond_bottom	40
Coq.setoid_ring.Field_theory.Z_pos_sub_gt	40
Coq.setoid_ring.Field_theory.default_isIn_ok	40
Coq.setoid_ring.Field_theory.isIn_ok	40
Coq.setoid_ring.Field_theory.split_aux_ok1	40
Coq.setoid_ring.Field_theory.split_aux_ok	40
Coq.setoid_ring.Field_theory.split_ok_l	40
Coq.setoid_ring.Field_theory.split_ok_r	40
Coq.setoid_ring.Field_theory.split_nz_l	40
Coq.setoid_ring.Field_theory.split_nz_r	40
Coq.setoid_ring.Field_theory.Pcond_Fnorm	40
Coq.setoid_ring.Field_theory.Fnorm_FEeval_PEeval	40
Coq.setoid_ring.Field_theory.Fnorm_crossproduct	40
Coq.setoid_ring.Field_theory.Fnorm_ok	40
Coq.setoid_ring.Field_theory.Field_rw_correct	40
Coq.setoid_ring.Field_theory.Field_rw_pow_correct	40
Coq.setoid_ring.Field_theory.Field_correct	40
Coq.setoid_ring.Field_theory.Field_simplify_eq_correct	40
Coq.setoid_ring.Field_theory.Field_simplify_eq_pow_correct	40
Coq.setoid_ring.Field_theory.Field_simplify_aux_ok	40
Coq.setoid_ring.Field_theory.Field_simplify_eq_pow_in_correct	40
Coq.setoid_ring.Field_theory.Field_simplify_eq_in_correct	40
Coq.setoid_ring.Field_theory.fcons_ok	40
Coq.setoid_ring.Field_theory.PFcons_fcons_inv	40
Coq.setoid_ring.Field_theory.PFcons0_fcons_inv	40
Coq.setoid_ring.Field_theory.PFcons00_fcons_inv	40
Coq.setoid_ring.Field_theory.ceqb_spec'	40
Coq.setoid_ring.Field_theory.PFcons1_fcons_inv	40
Coq.setoid_ring.Field_theory.PFcons2_fcons_inv	40
Coq.setoid_ring.Field_theory.radd_ext3_Proper	40	0	search with cache (only 1: exact (Radd_ext Reqe)).	0.0101270675659	1
Coq.setoid_ring.Field_theory.rmul_ext3_Proper	40	0	search with cache (only 1: exact (Rmul_ext Reqe)).	0.0102000236511	1
Coq.setoid_ring.Field_theory.ropp_ext3_Proper	40	0	search with cache (only 1: exact (Ropp_ext Reqe)).	0.00987815856934	1
Coq.setoid_ring.Field_theory.add_inj_r	40
Coq.setoid_ring.Field_theory.gen_phiPOS_inj	40
Coq.setoid_ring.Field_theory.gen_phiN_inj	40
Coq.setoid_ring.Field_theory.gen_phiN_complete	40
Coq.setoid_ring.Field_theory.ring_S_inj	40
Coq.setoid_ring.Field_theory.gen_phiPOS_discr_sgn	40
Coq.setoid_ring.Field_theory.gen_phiZ_inj	40
Coq.setoid_ring.Field_theory.gen_phiZ_complete	40
Coq.setoid_ring.Ncring_initial.Zsth	40	4.2.1.1	search with cache (only 1: split; only 1: auto; only 1: auto; only 1: congruence).	0.0834679603577	76
Coq.setoid_ring.Ncring_initial.Zr	40
Coq.setoid_ring.Ncring_initial.same_gen	40
Coq.setoid_ring.Ncring_initial.ARgen_phiPOS_Psucc	40
Coq.setoid_ring.Ncring_initial.ARgen_phiPOS_add	40
Coq.setoid_ring.Ncring_initial.ARgen_phiPOS_mult	40
Coq.setoid_ring.Ncring_initial.same_genZ	40
Coq.setoid_ring.Ncring_initial.gen_Zeqb_ok	40
Coq.setoid_ring.Ncring_initial.gen_phiZ1_add_pos_neg	40
Coq.setoid_ring.Ncring_initial.match_compOpp	40	0.0.0.25	search with cache (only 1: destruct x; only 1: trivial; only 1: trivial; only 1: trivial).	11.3981089592	724
Coq.setoid_ring.Ncring_initial.gen_phiZ_add	40
Coq.setoid_ring.Ncring_initial.gen_phiZ_opp	40
Coq.setoid_ring.Ncring_initial.gen_phiZ_mul	40
Coq.setoid_ring.Ncring_initial.gen_phiZ_ext	40	1.10.2	search with cache (only 1: intros x y z; only 1: subst; only 1: reflexivity).	0.630064964294	533
Coq.setoid_ring.Ncring_initial.gen_phiZ_morph	40
Coq.setoid_ring.ArithRing.natSRth	40
Coq.setoid_ring.ArithRing.nat_morph_N	40
Coq.setoid_ring.Rings_R.Rsth	40	0.0.1.0.0.0.0.1	search with cache (only 1: constructor; only 1: constructor; only 1: unfold Symmetric; only 1: auto; only 1: unfold Transitive; only 1: intros; only 1: subst; only 1: reflexivity).	0.0308749675751	10
Coq.setoid_ring.Rings_R.Rri	40
Coq.setoid_ring.Rings_R.Rcri	40	8.5.3.14.1.0.0.6	search with cache (only 1: red; only 1: unfold equality; only 1: unfold eq_notation in *; only 1: intros; only 1: destruct (Rcase_abs (x - y)) as [Hlt| Hge]; only 1: apply Rminus_lt, Rlt_asym in Hlt; only 1: auto with real; only 1: auto with real).	28.4079320431	31332
Coq.setoid_ring.Rings_R.R_one_zero	40	0	search with cache (only 1: exact R1_neq_R0).	0.0114779472351	1
Coq.setoid_ring.Rings_R.Rdi	40
Coq.setoid_ring.RealField.RTheory	40
Coq.setoid_ring.RealField.Rfield	40
Coq.setoid_ring.RealField.Rlt_n_Sn	40
Coq.setoid_ring.RealField.Rlt_0_2	40
Coq.setoid_ring.RealField.Rgen_phiPOS	40
Coq.setoid_ring.RealField.Rgen_phiPOS_not_0	40
Coq.setoid_ring.RealField.Rdef_pow_add	40
Coq.setoid_ring.RealField.R_power_theory	40
Coq.setoid_ring.Ring_theory.pow_pos_swap	40
Coq.setoid_ring.Ring_theory.pow_pos_succ	40
Coq.setoid_ring.Ring_theory.pow_pos_add	40
Coq.setoid_ring.Ring_theory.pow_N_pow_N	40	0	search with cache (only 1: reflexivity).	0.00691699981689	1
Coq.setoid_ring.Ring_theory.get_sign_None_th	40	21.13	search with cache (only 1: split; only 1: easy).	0.199877023697	1207
Coq.setoid_ring.Ring_theory.IDmorph	40	7.8.0.9.9.0.9.0.12.12.2	search with cache (only 1: constructor; only 1: reflexivity; only 1: reflexivity; only 1: intros; only 1: reflexivity; only 1: intros; only 1: reflexivity; only 1: reflexivity; only 1: intros; only 1: reflexivity; only 1: assumption).	6.27594184875	34489
Coq.setoid_ring.Ring_theory.Eqsth	40	0	search with cache (only 1: auto with *).	0.00624704360962	1
Coq.setoid_ring.Ring_theory.Eq_s_ext	40	2.2.13	search with cache (only 1: constructor; only 1: auto with *; only 1: auto with *).	0.0907340049744	194
Coq.setoid_ring.Ring_theory.Eq_ext	40	0.0.0.0	search with cache (only 1: constructor; only 1: solve_proper; only 1: solve_proper; only 1: solve_proper).	0.109885931015	4
Coq.setoid_ring.Ring_theory.radd_ext1_Proper	40
Coq.setoid_ring.Ring_theory.rmul_ext1_Proper	40
Coq.setoid_ring.Ring_theory.SRopp_ext	40	1.5	search with cache (only 1: intros n m; only 1: trivial).	0.0110611915588	8
Coq.setoid_ring.Ring_theory.SReqe_Reqe	40	0.0.4.5.5	search with cache (only 1: constructor; only 1: solve_proper; only 1: exact (SRmul_ext SReqe); only 1: intros x y H; only 1: exact H).	0.255093097687	375
Coq.setoid_ring.Ring_theory.SRopp_mul_l	40
Coq.setoid_ring.Ring_theory.SRopp_add	40	2	search with cache (only 1: reflexivity).	0.0082471370697	3
Coq.setoid_ring.Ring_theory.SRsub_def	40	1	search with cache (only 1: reflexivity).	0.0078911781311	2
Coq.setoid_ring.Ring_theory.SRIDmorph	40	7.11.10.2.12.2.10.15.15.9	search with cache (only 1: constructor; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: intros; only 1: reflexivity; only 1: intros; only 1: reflexivity; only 1: reflexivity; only 1: assumption).	8.04414796829	27407
Coq.setoid_ring.Ring_theory.SRmorph_Rmorph	40
Coq.setoid_ring.Ring_theory.radd_ext2_Proper	40
Coq.setoid_ring.Ring_theory.rmul_ext2_Proper	40	39.32.4	search with cache (only 1: intros x y H; only 1: intro; only 1: firstorder).	17.2417728901	53031
Coq.setoid_ring.Ring_theory.ropp_ext2_Proper	40
Coq.setoid_ring.Ring_theory.Rmul_0_l	40
Coq.setoid_ring.Ring_theory.Ropp_mul_l	40
Coq.setoid_ring.Ring_theory.Ropp_add	40
Coq.setoid_ring.Ring_theory.Ropp_opp	40
Coq.setoid_ring.Ring_theory.cadd_ext_Proper	40
Coq.setoid_ring.Ring_theory.cmul_ext_Proper	40
Coq.setoid_ring.Ring_theory.copp_ext_Proper	40
Coq.setoid_ring.Ring_theory.phi_ext1_Proper	40
Coq.setoid_ring.Ring_theory.Smorph_opp	40
Coq.setoid_ring.Ring_theory.Smorph_sub	40
Coq.setoid_ring.Ring_theory.ARth_SRth	40
Coq.setoid_ring.Ring_theory.ARsub_ext	40
Coq.setoid_ring.Ring_theory.ARadd_0_r	40
Coq.setoid_ring.Ring_theory.ARmul_1_r	40	2	search with cache (only 1: mrewrite).	0.0154759883881	3
Coq.setoid_ring.Ring_theory.ARmul_0_r	40	1	search with cache (only 1: mrewrite).	0.0163009166718	2
Coq.setoid_ring.Ring_theory.ARdistr_r	40
Coq.setoid_ring.Ring_theory.ARadd_assoc1	40
Coq.setoid_ring.Ring_theory.ARadd_assoc2	40
Coq.setoid_ring.Ring_theory.ARmul_assoc1	40
Coq.setoid_ring.Ring_theory.ARmul_assoc2	40
Coq.setoid_ring.Ring_theory.ARopp_mul_r	40
Coq.setoid_ring.Ring_theory.ARopp_zero	40
Coq.setoid_ring.InitialRing.Zth	40
Coq.setoid_ring.InitialRing.radd_ext3_Proper	40	0	search with cache (only 1: exact (Radd_ext Reqe)).	0.0266578197479	1
Coq.setoid_ring.InitialRing.rmul_ext3_Proper	40	0	search with cache (only 1: exact (Rmul_ext Reqe)).	0.0265560150146	1
Coq.setoid_ring.InitialRing.ropp_ext3_Proper	40	0	search with cache (only 1: exact (Ropp_ext Reqe)).	0.0265421867371	1
Coq.setoid_ring.InitialRing.get_signZ_th	40
Coq.setoid_ring.InitialRing.rsub_ext3_Proper	40	4	search with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).	0.0326008796692	5
Coq.setoid_ring.InitialRing.same_gen	40
Coq.setoid_ring.InitialRing.ARgen_phiPOS_Psucc	40
Coq.setoid_ring.InitialRing.ARgen_phiPOS_add	40
Coq.setoid_ring.InitialRing.ARgen_phiPOS_mult	40
Coq.setoid_ring.InitialRing.rsub_ext4_Proper	40	0	search with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).	0.0277237892151	1
Coq.setoid_ring.InitialRing.same_genZ	40
Coq.setoid_ring.InitialRing.gen_Zeqb_ok	40
Coq.setoid_ring.InitialRing.gen_phiZ1_pos_sub	40
Coq.setoid_ring.InitialRing.gen_phiZ_add	40
Coq.setoid_ring.InitialRing.gen_phiZ_mul	40
Coq.setoid_ring.InitialRing.gen_phiZ_ext	40
Coq.setoid_ring.InitialRing.gen_phiZ_morph	40
Coq.setoid_ring.InitialRing.Nth	40
Coq.setoid_ring.InitialRing.Neqb_ok	40	0.8.1.3.3.1.0	search with cache (only 1: intros [| ] [| ]; only 1: trivial; only 1: now try N.order'; only 1: now try N.order'; only 1: simpl; only 1: rewrite Pos.eqb_eq; only 1: congruence).	15.0112369061	13907
Coq.setoid_ring.InitialRing.radd_ext4_Proper	40	0	search with cache (only 1: exact (Radd_ext Reqe)).	0.0274741649628	1
Coq.setoid_ring.InitialRing.rmul_ext4_Proper	40	0	search with cache (only 1: exact (Rmul_ext Reqe)).	0.0268249511719	1
Coq.setoid_ring.InitialRing.same_genN	40
Coq.setoid_ring.InitialRing.gen_phiN_add	40
Coq.setoid_ring.InitialRing.gen_phiN_mult	40
Coq.setoid_ring.InitialRing.gen_phiN_sub	40
Coq.setoid_ring.InitialRing.gen_phiN_morph	40
Coq.setoid_ring.InitialRing.radd_ext5_Proper	40	0	search with cache (only 1: exact (Radd_ext Reqe)).	0.0265321731567	1
Coq.setoid_ring.InitialRing.rmul_ext5_Proper	40	0	search with cache (only 1: exact (Rmul_ext Reqe)).	0.0264120101929	1
Coq.setoid_ring.InitialRing.ropp_ext5_Proper	40	0	search with cache (only 1: exact (Ropp_ext Reqe)).	0.0265438556671	1
Coq.setoid_ring.InitialRing.rsub_ext7_Proper	40	0	search with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).	0.0276868343353	1
Coq.setoid_ring.InitialRing.gen_phiNword0_ok	40
Coq.setoid_ring.InitialRing.gen_phiNword_cons	40
Coq.setoid_ring.InitialRing.gen_phiNword_Nwcons	40	0.0.0.0.0.0.0.0.0.0	search with cache (only 1: induction w; only 1: destruct n; only 1: simpl; only 1: norm; only 1: simpl; only 1: norm; only 1: intros; only 1: destruct n; only 1: norm; only 1: norm).	0.128793954849	10
Coq.setoid_ring.InitialRing.gen_phiNword_ok	40
Coq.setoid_ring.InitialRing.Nwadd_ok	40
Coq.setoid_ring.InitialRing.Nwopp_ok	40
Coq.setoid_ring.InitialRing.Nwscal_ok	40
Coq.setoid_ring.InitialRing.Nwmul_ok	40
Coq.setoid_ring.InitialRing.gen_phiNword_morph	40
Coq.setoid_ring.InitialRing.radd_ext_Proper	40	0	search with cache (only 1: exact (Radd_ext Reqe)).	0.0308239459991	1
Coq.setoid_ring.InitialRing.rmul_ext_Proper	40	0	search with cache (only 1: exact (Rmul_ext Reqe)).	0.0306079387665	1
Coq.setoid_ring.InitialRing.ropp_ext_Proper	40	0	search with cache (only 1: exact (Ropp_ext Reqe)).	0.0302600860596	1
Coq.setoid_ring.InitialRing.rsub_ext_Proper	40	0	search with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).	0.0317358970642	1
Coq.setoid_ring.InitialRing.triv_div_th	40
Coq.setoid_ring.InitialRing.Ztriv_div_th	40
Coq.setoid_ring.InitialRing.Ntriv_div_th	40
Coq.setoid_ring.Cring.cring_eq_ext	40	4.4.4.5	search with cache (only 1: constructor; only 1: solve_proper; only 1: solve_proper; only 1: solve_proper).	2.00913405418	522
Coq.setoid_ring.Cring.cring_almost_ring_theory	40
Coq.setoid_ring.Cring.cring_morph	40
Coq.setoid_ring.Cring.cring_power_theory	40
Coq.setoid_ring.Cring.cring_div_theory	40	5.0.1.1.1.0.2.2	search with cache (only 1: constructor; only 1: intros; only 1: generalize (Z.quotrem_eq a b); only 1: case Z.quotrem; only 1: intros; only 1: subst; only 1: rewrite Z.mul_comm; only 1: intuition).	2.07380509377	1382
Coq.setoid_ring.Cring.Zcri	40
Coq.setoid_ring.Ring_polynom.radd_ext_Proper	40	0	search with cache (only 1: exact (Radd_ext Reqe)).	0.0092761516571	1
Coq.setoid_ring.Ring_polynom.rmul_ext_Proper	40	0	search with cache (only 1: exact (Rmul_ext Reqe)).	0.00932097434998	1
Coq.setoid_ring.Ring_polynom.ropp_ext_Proper	40	1	search with cache (only 1: exact (Ropp_ext Reqe)).	0.00997090339661	2
Coq.setoid_ring.Ring_polynom.rsub_ext_Proper	40	0.7	search with cache (only 1: intros x1 x2 Ex y1 y2 Ey; only 1: now rewrite !(ARsub_def ARth), Ex, Ey).	0.0398509502411	12
Coq.setoid_ring.Ring_polynom.Pequiv_eq	40
Coq.setoid_ring.Ring_polynom.Pphi_ext	40	2.4	search with cache (only 1: unfold Pequiv; only 1: solve_proper).	0.210036993027	27
Coq.setoid_ring.Ring_polynom.Pinj_ext	40	3.2	search with cache (only 1: unfold Pequiv; only 1: solve_proper).	0.252954006195	42
Coq.setoid_ring.Ring_polynom.PX_ext	40
Coq.setoid_ring.Ring_polynom.jump_add'	40
Coq.setoid_ring.Ring_polynom.Peq_ok	40
Coq.setoid_ring.Ring_polynom.Peq_spec	40
Coq.setoid_ring.Ring_polynom.Pphi0	40
Coq.setoid_ring.Ring_polynom.Pphi1	40
Coq.setoid_ring.Ring_polynom.mkPinj_ok	40
Coq.setoid_ring.Ring_polynom.mkPinj_ext	40
Coq.setoid_ring.Ring_polynom.pow_pos_add	40
Coq.setoid_ring.Ring_polynom.ceqb_spec	40
Coq.setoid_ring.Ring_polynom.mkPX_ok	40
Coq.setoid_ring.Ring_polynom.mkPX_ext	40
Coq.setoid_ring.Ring_polynom.PaddC_ok	40
Coq.setoid_ring.Ring_polynom.PsubC_ok	40
Coq.setoid_ring.Ring_polynom.PmulC_aux_ok	40
Coq.setoid_ring.Ring_polynom.PmulC_ok	40
Coq.setoid_ring.Ring_polynom.Popp_ok	40	5.0.0.0.1.0.0.5.1.1.2.1	search with cache (only 1: revert l; only 1: induction P; only 1: intros; only 1: simpl; only 1: Esimpl; only 1: simpl; only 1: intros; only 1: trivial; only 1: simpl; only 1: intros; only 1: rewrite IHP1, IHP2; only 1: Esimpl).	30.7420530319	19710
Coq.setoid_ring.Ring_polynom.PaddX_ok	40
Coq.setoid_ring.Ring_polynom.Padd_ok	40
Coq.setoid_ring.Ring_polynom.Psub_opp	40
Coq.setoid_ring.Ring_polynom.Psub_ok	40
Coq.setoid_ring.Ring_polynom.PmulI_ok	40
Coq.setoid_ring.Ring_polynom.Pmul_ok	40
Coq.setoid_ring.Ring_polynom.mkZmon_ok	40
Coq.setoid_ring.Ring_polynom.zmon_pred_ok	40
Coq.setoid_ring.Ring_polynom.mkVmon_ok	40
Coq.setoid_ring.Ring_polynom.Mcphi_ok	40
Coq.setoid_ring.Ring_polynom.Mphi_ok	40
Coq.setoid_ring.Ring_polynom.POneSubst_ok	40
Coq.setoid_ring.Ring_polynom.PNSubst1_ok	40
Coq.setoid_ring.Ring_polynom.PNSubst_ok	40
Coq.setoid_ring.Ring_polynom.PSubstL1_ok	40
Coq.setoid_ring.Ring_polynom.PSubstL_ok	40
Coq.setoid_ring.Ring_polynom.PNSubstL_ok	40
Coq.setoid_ring.Ring_polynom.mkX_ok	40
Coq.setoid_ring.Ring_polynom.Ppow_pos_ok	40
Coq.setoid_ring.Ring_polynom.Ppow_N_ok	40
Coq.setoid_ring.Ring_polynom.norm_aux_PEadd	40
Coq.setoid_ring.Ring_polynom.norm_aux_PEopp	40
Coq.setoid_ring.Ring_polynom.norm_aux_spec	40
Coq.setoid_ring.Ring_polynom.norm_subst_spec	40
Coq.setoid_ring.Ring_polynom.mon_of_pol_ok	40
Coq.setoid_ring.Ring_polynom.interp_PElist_ok	40
Coq.setoid_ring.Ring_polynom.norm_subst_ok	40
Coq.setoid_ring.Ring_polynom.ring_correct	40	5.28.1	search with cache (only 1: simpl; only 1: fix even_spec 1; only 1: auto).	12.7727570534	13309
Coq.setoid_ring.Ring_polynom.mkmult_rec_ok	40
Coq.setoid_ring.Ring_polynom.mkmult1_ok	40
Coq.setoid_ring.Ring_polynom.mkmultm1_ok	40
Coq.setoid_ring.Ring_polynom.r_list_pow_rev	40
Coq.setoid_ring.Ring_polynom.mkmult_c_pos_ok	40
Coq.setoid_ring.Ring_polynom.mkmult_c_ok	40
Coq.setoid_ring.Ring_polynom.mkadd_mult_ok	40
Coq.setoid_ring.Ring_polynom.add_pow_list_ok	40
Coq.setoid_ring.Ring_polynom.add_mult_dev_ok	40
Coq.setoid_ring.Ring_polynom.mult_dev_ok	40
Coq.setoid_ring.Ring_polynom.Pphi_avoid_ok	40
Coq.setoid_ring.Ring_polynom.local_mkpow_ok	40
Coq.setoid_ring.Ring_polynom.Pphi_pow_ok	40
Coq.setoid_ring.Ring_polynom.ring_rw_pow_correct	40
Coq.setoid_ring.Ring_polynom.mkmult_pow_ok	40
Coq.setoid_ring.Ring_polynom.mkpow_ok	40
Coq.setoid_ring.Ring_polynom.mkopp_pow_ok	40
Coq.setoid_ring.Ring_polynom.Pphi_dev_ok	40
Coq.setoid_ring.Ring_polynom.ring_rw_correct	40
Coq.setoid_ring.BinList.jump_tl	40	0.25	search with cache (only 1: fix sqrtrem_spec 1; only 1: auto).	1.34981179237	2349
Coq.setoid_ring.BinList.jump_succ	40
Coq.setoid_ring.BinList.jump_add	40
Coq.setoid_ring.BinList.jump_pred_double	40	0.1.20	search with cache (only 1: fix sqrtrem_spec 1; only 1: intros; only 1: now rewrite ?IHj).	13.9775109291	15036
Coq.setoid_ring.BinList.nth_jump	40
Coq.setoid_ring.BinList.nth_pred_double	40
Coq.setoid_ring.Ncring.pow_pos_comm	40
Coq.setoid_ring.Ncring.pow_pos_succ	40
Coq.setoid_ring.Ncring.pow_pos_add	40
Coq.setoid_ring.Ncring.pow_N_pow_N	40	0	search with cache (only 1: reflexivity).	0.0279059410095	1
Coq.setoid_ring.Ncring.ring_mul_0_l	40
Coq.setoid_ring.Ncring.ring_mul_0_r	40
Coq.setoid_ring.Ncring.ring_opp_mul_l	40
Coq.setoid_ring.Ncring.ring_opp_mul_r	40
Coq.setoid_ring.Ncring.ring_opp_add	40
Coq.setoid_ring.Ncring.ring_opp_opp	40
Coq.setoid_ring.Ncring.ring_sub_ext	40
Coq.setoid_ring.Ncring.ring_add_0_r	40	0.1.0.8	search with cache (only 1: intros; only 1: rewrite (ring_add_comm x); only 1: rewrite ring_add_0_l; only 1: reflexivity).	0.292672157288	93
Coq.setoid_ring.Ncring.ring_add_assoc1	40	0.5.1.0	search with cache (only 1: intros; only 1: rewrite <- ring_add_assoc; only 1: rewrite ring_add_comm; only 1: reflexivity).	0.0814681053162	15
Coq.setoid_ring.Ncring.ring_add_assoc2	40
Coq.setoid_ring.Ncring.ring_opp_zero	40
Coq.setoid_ring.Ncring_tac.Zeqb_ok	40	0.0.1	search with cache (only 1: intros; only 1: apply Zeq_is_eq_bool; only 1: trivial).	0.014552116394	4
Coq.setoid_ring.Ncring_tac.comm	40
Coq.setoid_ring.Rings_Q.Qri	40
Coq.setoid_ring.Rings_Q.Qcri	40	1.0.0.2.2.6.20	search with cache (only 1: intro; only 1: intros; only 1: apply Q_Setoid; only 1: red; only 1: simpl; only 1: rewrite Pos.mul_comm; only 1: ring).	0.821084976196	895
Coq.setoid_ring.Rings_Q.Q_one_zero	40	0.0	search with cache (only 1: unfold Qeq; only 1: auto with qarith).	0.0122520923615	2
Coq.setoid_ring.Rings_Q.Qdi	40
Coq.ssr.ssreflect.master_key	40	0	search with cache (only 1: tauto).	0.00591611862183	1
Coq.ssr.ssreflect.lock	40
Coq.ssr.ssreflect.not_locked_false_eq_true	40
Coq.ssr.ssreflect.unlock	40
Coq.ssr.ssreflect.locked_withE	40
Coq.ssr.ssreflect.unlock_with	40	2	search with cache (only 1: by case : {}k {}).	0.00764393806458	3
Coq.ssr.ssreflect.nary_congruence	40
Coq.ssr.ssreflect.ssr_congr_arrow	40	0.13	search with cache (only 1: destruct 1; only 1: tauto).	0.0243890285492	75
Coq.ssr.ssreflect.iffLR	40	0	search with cache (only 1: intuition).	0.00980401039124	1
Coq.ssr.ssreflect.iffRL	40	0	search with cache (only 1: by case : {}eqPQ {}).	0.00768899917603	1
Coq.ssr.ssreflect.iffLRn	40	2	search with cache (only 1: intuition).	0.0156450271606	3
Coq.ssr.ssreflect.iffRLn	40	0	search with cache (only 1: by move  {}=>nP tQ; case : {}nP {}; case : {}eqPQ {}tQ {}).	0.00868082046509	1
Coq.ssr.ssreflect.abstract_context	40
Coq.ssr.ssrbool.prop_congr	40	1	search with cache (only 1: Bool.destr_bool).	0.0109758377075	2
Coq.ssr.ssrbool.is_true_true	40	9	search with cache (only 1: now constructor).	0.0518012046814	10
Coq.ssr.ssrbool.not_false_is_true	40	0	search with cache (only 1: by [  ]).	0.0515639781952	1
Coq.ssr.ssrbool.is_true_locked_true	40	0.2	search with cache (only 1: unlock; only 1: by [  ]).	0.0739331245422	4
Coq.ssr.ssrbool.negbT	40	4	search with cache (only 1: Bool.destr_bool).	0.00980114936829	5
Coq.ssr.ssrbool.negbTE	40	0	search with cache (only 1: by case : {}b {}).	0.00926899909973	1
Coq.ssr.ssrbool.negbF	40	0	search with cache (only 1: by case : {}b {}).	0.00928092002869	1
Coq.ssr.ssrbool.negbFE	40	0	search with cache (only 1: by case : {}b {}).	0.00929498672485	1
Coq.ssr.ssrbool.negbK	40	4	search with cache (only 1: by case).	0.117618083954	5
Coq.ssr.ssrbool.negbNE	40	6	search with cache (only 1: Bool.destr_bool).	0.0154888629913	7
Coq.ssr.ssrbool.negb_inj	40
Coq.ssr.ssrbool.negbLR	40	6	search with cache (only 1: Bool.destr_bool).	0.0187509059906	7
Coq.ssr.ssrbool.negbRL	40	4	search with cache (only 1: Bool.destr_bool).	0.0152380466461	5
Coq.ssr.ssrbool.contra	40
Coq.ssr.ssrbool.contraL	40	1	search with cache (only 1: by case : {}b {} =>//; case : {}c {}).	0.0166869163513	2
Coq.ssr.ssrbool.contraR	40	0	search with cache (only 1: by case : {}b {} =>//; case : {}c {}).	0.0140309333801	1
Coq.ssr.ssrbool.contraLR	40	0	search with cache (only 1: by case : {}b {} =>//; case : {}c {}).	0.0141568183899	1
Coq.ssr.ssrbool.contraT	40
Coq.ssr.ssrbool.wlog_neg	40	1	search with cache (only 1: by case : {}b {} =>// {+}->).	0.127096891403	2
Coq.ssr.ssrbool.contraFT	40	9.3	search with cache (only 1: Bool.destr_bool; only 1: intuition).	0.296319007874	90
Coq.ssr.ssrbool.contraFN	40	9.1	search with cache (only 1: Bool.destr_bool; only 1: intuition).	5.09130001068	43
Coq.ssr.ssrbool.contraTF	40	7.9	search with cache (only 1: Bool.destr_bool; only 1: intuition).	3.85025000572	133
Coq.ssr.ssrbool.contraNF	40
Coq.ssr.ssrbool.contraFF	40
Coq.ssr.ssrbool.ifP	40
Coq.ssr.ssrbool.ifPn	40	0	search with cache (only 1: by case  def_b: {}b {}; constructor).	0.0113348960876	1
Coq.ssr.ssrbool.ifT	40	11	search with cache (only 1: by case : {}b {} =>// {+}->).	0.0489270687103	42
Coq.ssr.ssrbool.ifF	40	1	search with cache (only 1: by move {+}->).	0.336422920227	2
Coq.ssr.ssrbool.ifN	40	4	search with cache (only 1: by case : {}b {}).	0.018208026886	5
Coq.ssr.ssrbool.if_same	40	4	search with cache (only 1: by case  def_b: {}b {}; constructor; rewrite ?def_b).	0.0576870441437	5
Coq.ssr.ssrbool.if_neg	40	1	search with cache (only 1: by case b).	0.336840867996	2
Coq.ssr.ssrbool.fun_if	40	4	search with cache (only 1: by case b).	0.0364899635315	5
Coq.ssr.ssrbool.if_arg	40	1	search with cache (only 1: by case b).	0.00936484336853	2
Coq.ssr.ssrbool.ifE	40
Coq.ssr.ssrbool.introNTF	40
Coq.ssr.ssrbool.introTF	40	0	search with cache (only 1: by case c; case Hb).	0.0810499191284	1
Coq.ssr.ssrbool.elimNTF	40	0	search with cache (only 1: by case c; case Hb).	0.0150859355927	1
Coq.ssr.ssrbool.elimTF	40	0	search with cache (only 1: by case c; case Hb).	0.081102848053	1
Coq.ssr.ssrbool.equivPif	40
Coq.ssr.ssrbool.xorPif	40	0.0.4	search with cache (only 1: intuition; only 1: by case Hb; auto; only 1: by case Hb; auto).	0.030916929245	7
Coq.ssr.ssrbool.introTFn	40
Coq.ssr.ssrbool.elimTFn	40
Coq.ssr.ssrbool.equivPifn	40
Coq.ssr.ssrbool.xorPifn	40
Coq.ssr.ssrbool.introT	40
Coq.ssr.ssrbool.introF	40
Coq.ssr.ssrbool.introN	40
Coq.ssr.ssrbool.introNf	40
Coq.ssr.ssrbool.introTn	40
Coq.ssr.ssrbool.introFn	40
Coq.ssr.ssrbool.elimT	40
Coq.ssr.ssrbool.elimF	40
Coq.ssr.ssrbool.elimN	40
Coq.ssr.ssrbool.elimNf	40
Coq.ssr.ssrbool.elimTn	40
Coq.ssr.ssrbool.elimFn	40
Coq.ssr.ssrbool.introP	40
Coq.ssr.ssrbool.iffP	40
Coq.ssr.ssrbool.equivP	40	0.3	search with cache (only 1: intuition; only 1: by case : {}Pb {}; constructor; auto).	0.0189490318298	5
Coq.ssr.ssrbool.sumboolP	40
Coq.ssr.ssrbool.appP	40
Coq.ssr.ssrbool.sameP	40
Coq.ssr.ssrbool.decPcases	40
Coq.ssr.ssrbool.decP	40
Coq.ssr.ssrbool.rwP	40
Coq.ssr.ssrbool.rwP2	40
Coq.ssr.ssrbool.altP	40
Coq.ssr.ssrbool.impliesP	40	5	search with cache (only 1: by case).	0.0533649921417	6
Coq.ssr.ssrbool.impliesPn	40
Coq.ssr.ssrbool.unlessL	40
Coq.ssr.ssrbool.unlessR	40
Coq.ssr.ssrbool.unless_sym	40
Coq.ssr.ssrbool.unlessP	40
Coq.ssr.ssrbool.bind_unless	40
Coq.ssr.ssrbool.unless_contra	40
Coq.ssr.ssrbool.classicP	40
Coq.ssr.ssrbool.classicW	40
Coq.ssr.ssrbool.classic_bind	40
Coq.ssr.ssrbool.classic_EM	40
Coq.ssr.ssrbool.classic_pick	40
Coq.ssr.ssrbool.classic_imply	40
Coq.ssr.ssrbool.all_and2	40
Coq.ssr.ssrbool.all_and3	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtclintros@0> split =>haveP; <ssreflect_plugin::ssrtclintros@0> split =>x; case : {}(haveP x) {}).	0.0569610595703	1
Coq.ssr.ssrbool.all_and4	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtclintros@0> split =>haveP; <ssreflect_plugin::ssrtclintros@0> split =>x; case : {}(haveP x) {}).	0.0170559883118	1
Coq.ssr.ssrbool.all_and5	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtclintros@0> split =>haveP; <ssreflect_plugin::ssrtclintros@0> split =>x; case : {}(haveP x) {}).	0.0202782154083	1
Coq.ssr.ssrbool.pair_andP	40	1	search with cache (only 1: intuition).	0.0141170024872	2
Coq.ssr.ssrbool.idP	40
Coq.ssr.ssrbool.boolP	40	0	search with cache (only 1: by case b1; constructor).	0.00878214836121	1
Coq.ssr.ssrbool.idPn	40	0	search with cache (only 1: by case b1; constructor).	0.00903916358948	1
Coq.ssr.ssrbool.negP	40	0	search with cache (only 1: by case b1; constructor).	0.0114390850067	1
Coq.ssr.ssrbool.negPn	40	1	search with cache (only 1: by case b1; constructor).	0.0091609954834	2
Coq.ssr.ssrbool.negPf	40
Coq.ssr.ssrbool.andP	40
Coq.ssr.ssrbool.and3P	40
Coq.ssr.ssrbool.and4P	40
Coq.ssr.ssrbool.and5P	40
Coq.ssr.ssrbool.orP	40
Coq.ssr.ssrbool.or3P	40
Coq.ssr.ssrbool.or4P	40
Coq.ssr.ssrbool.nandP	40	1	search with cache (only 1: by case b1; case b2; constructor; auto; case).	0.0166010856628	2
Coq.ssr.ssrbool.norP	40	0	search with cache (only 1: by case b1; case b2; <ssreflect_plugin::ssrtclintros@0> constructor =>//; case).	0.0231618881226	1
Coq.ssr.ssrbool.implyP	40	3	search with cache (only 1: by case b1; case b2; constructor; auto; case).	0.0492451190948	4
Coq.ssr.ssrbool.andTb	40	0	search with cache (only 1: by [  ]).	0.00820279121399	1
Coq.ssr.ssrbool.andFb	40	0	search with cache (only 1: by [  ]).	0.0332520008087	1
Coq.ssr.ssrbool.andbT	40
Coq.ssr.ssrbool.andbF	40	1	search with cache (only 1: by case).	0.0109651088715	2
Coq.ssr.ssrbool.andbb	40	0	search with cache (only 1: by case).	0.00902795791626	1
Coq.ssr.ssrbool.andbC	40
Coq.ssr.ssrbool.andbA	40	0	search with cache (only 1: by case).	0.00927305221558	1
Coq.ssr.ssrbool.andbCA	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 2!case).	0.0113971233368	1
Coq.ssr.ssrbool.andbAC	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0147950649261	1
Coq.ssr.ssrbool.andbACA	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0161690711975	1
Coq.ssr.ssrbool.orTb	40	0	search with cache (only 1: reflexivity).	0.00778198242188	1
Coq.ssr.ssrbool.orFb	40	0	search with cache (only 1: by case).	0.00884294509888	1
Coq.ssr.ssrbool.orbT	40	4	search with cache (only 1: Bool.destr_bool).	0.0115880966187	5
Coq.ssr.ssrbool.orbF	40	1	search with cache (only 1: by case).	0.0108859539032	2
Coq.ssr.ssrbool.orbb	40	0	search with cache (only 1: by case).	0.00887894630432	1
Coq.ssr.ssrbool.orbC	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 2!case).	0.0108509063721	1
Coq.ssr.ssrbool.orbA	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0151121616364	1
Coq.ssr.ssrbool.orbCA	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0149350166321	1
Coq.ssr.ssrbool.orbAC	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0151350498199	1
Coq.ssr.ssrbool.orbACA	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 4!case).	0.0228130817413	1
Coq.ssr.ssrbool.andbN	40	1	search with cache (only 1: Bool.destr_bool).	0.0758519172668	2
Coq.ssr.ssrbool.andNb	40	0	search with cache (only 1: by case : {}b {}).	0.00916385650635	1
Coq.ssr.ssrbool.orbN	40	3	search with cache (only 1: Bool.destr_bool).	0.00953602790833	4
Coq.ssr.ssrbool.orNb	40	0	search with cache (only 1: by case : {}b {}).	0.00915908813477	1
Coq.ssr.ssrbool.andb_orl	40	1	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0178470611572	2
Coq.ssr.ssrbool.andb_orr	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0154819488525	1
Coq.ssr.ssrbool.orb_andl	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0152471065521	1
Coq.ssr.ssrbool.orb_andr	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0153369903564	1
Coq.ssr.ssrbool.andb_idl	40	9.1	search with cache (only 1: Bool.destr_bool; only 1: intuition).	0.434806108475	50
Coq.ssr.ssrbool.andb_idr	40	0	search with cache (only 1: by case : {}a {}; case : {}b {} =>// {+}->).	0.0809938907623	1
Coq.ssr.ssrbool.andb_id2l	40	0	search with cache (only 1: by case : {}a {}; case : {}b {} =>// {+}->).	0.233145952225	1
Coq.ssr.ssrbool.andb_id2r	40	2	search with cache (only 1: by case : {}a {}; case : {}b {}; case : {}c {} =>// {+}->).	0.262433052063	3
Coq.ssr.ssrbool.orb_idl	40	1	search with cache (only 1: by case : {}a {}; case : {}b {} =>// {+}->).	0.0155701637268	2
Coq.ssr.ssrbool.orb_idr	40	1	search with cache (only 1: by case : {}a {}; case : {}b {} =>// {+}->).	0.0156989097595	2
Coq.ssr.ssrbool.orb_id2l	40	0	search with cache (only 1: by case : {}a {}; case : {}b {} =>// {+}->).	0.0182909965515	1
Coq.ssr.ssrbool.orb_id2r	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}; case : {}c {} =>// {+}->).	0.151818037033	1
Coq.ssr.ssrbool.negb_and	40	0	search with cache (only 1: Bool.destr_bool).	0.0112018585205	1
Coq.ssr.ssrbool.negb_or	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}).	0.0119340419769	1
Coq.ssr.ssrbool.andbK	40	0	search with cache (only 1: by case : {}a {}; case : {}b {} =>// {+}->).	0.0117008686066	1
Coq.ssr.ssrbool.andKb	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}).	0.0116019248962	1
Coq.ssr.ssrbool.orbK	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}).	0.0116741657257	1
Coq.ssr.ssrbool.orKb	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}).	0.0118060112	1
Coq.ssr.ssrbool.implybT	40	3	search with cache (only 1: by case : {}b {} =>// {+}->).	0.0139448642731	4
Coq.ssr.ssrbool.implybF	40	0	search with cache (only 1: by case : {}b {}).	0.00961303710938	1
Coq.ssr.ssrbool.implyFb	40	0	search with cache (only 1: by case : {}b {}).	0.00921988487244	1
Coq.ssr.ssrbool.implyTb	40	0	search with cache (only 1: by case : {}b {}).	0.00947499275208	1
Coq.ssr.ssrbool.implybb	40	0	search with cache (only 1: by case : {}b {}).	0.00908708572388	1
Coq.ssr.ssrbool.negb_imply	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}).	0.0120408535004	1
Coq.ssr.ssrbool.implybE	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}).	0.012011051178	1
Coq.ssr.ssrbool.implyNb	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}).	0.0118770599365	1
Coq.ssr.ssrbool.implybN	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}).	0.0356390476227	1
Coq.ssr.ssrbool.implybNN	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}).	0.0119390487671	1
Coq.ssr.ssrbool.implyb_idl	40	2	search with cache (only 1: by case : {}a {}; case : {}b {} =>// {+}->).	0.112357139587	3
Coq.ssr.ssrbool.implyb_idr	40	0	search with cache (only 1: by case : {}a {}; case : {}b {} =>// {+}->).	0.0155918598175	1
Coq.ssr.ssrbool.implyb_id2l	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}; case : {}c {} =>// {+}->).	0.0876371860504	1
Coq.ssr.ssrbool.addFb	40	0	search with cache (only 1: by [  ]).	0.00825786590576	1
Coq.ssr.ssrbool.addbF	40	1	search with cache (only 1: by case).	0.0111448764801	2
Coq.ssr.ssrbool.addbb	40	1	search with cache (only 1: by case).	0.0110199451447	2
Coq.ssr.ssrbool.addbC	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 2!case).	0.0109820365906	1
Coq.ssr.ssrbool.addbA	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0151100158691	1
Coq.ssr.ssrbool.addbCA	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0618898868561	1
Coq.ssr.ssrbool.addbAC	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0152101516724	1
Coq.ssr.ssrbool.addbACA	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 4!case).	0.0231609344482	1
Coq.ssr.ssrbool.andb_addl	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0157039165497	1
Coq.ssr.ssrbool.andb_addr	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.01589012146	1
Coq.ssr.ssrbool.addKb	40
Coq.ssr.ssrbool.addbK	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 2!case).	0.011440038681	1
Coq.ssr.ssrbool.addIb	40	1	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0197968482971	2
Coq.ssr.ssrbool.addbI	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0174059867859	1
Coq.ssr.ssrbool.addTb	40	1	search with cache (only 1: trivial).	0.00837516784668	2
Coq.ssr.ssrbool.addbT	40	1	search with cache (only 1: by case : {}b {}).	0.0115830898285	2
Coq.ssr.ssrbool.addbN	40	1	search with cache (only 1: by case : {}a {}; case : {}b {}).	0.0145809650421	2
Coq.ssr.ssrbool.addNb	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}).	0.0122270584106	1
Coq.ssr.ssrbool.addbP	40
Coq.ssr.ssrbool.subrelUl	40
Coq.ssr.ssrbool.subrelUr	40
Coq.ssr.ssrbool.sub_refl	40
Coq.ssr.ssrbool.mem_topred	40
Coq.ssr.ssrbool.topredE	40	0	search with cache (only 1: by case : {}pT {}pp {}).	0.0105819702148	1
Coq.ssr.ssrbool.app_predE	40
Coq.ssr.ssrbool.in_applicative	40
Coq.ssr.ssrbool.in_collective	40
Coq.ssr.ssrbool.in_simpl	40	3	search with cache (only 1: by case : {}msp {} =>_ /= {+}->).	0.0338201522827	4
Coq.ssr.ssrbool.unfold_in	40	4	search with cache (only 1: Bool.destr_bool).	0.00924706459045	5
Coq.ssr.ssrbool.simpl_predE	40	0	search with cache (only 1: by [  ]).	0.00826907157898	1
Coq.ssr.ssrbool.mem_simpl	40	2	search with cache (only 1: by [  ]).	0.00905799865723	3
Coq.ssr.ssrbool.mem_mem	40
Coq.ssr.ssrbool.qualifE	40	1	search with cache (only 1: by [  ]).	0.0308799743652	2
Coq.ssr.ssrbool.keyed_predE	40
Coq.ssr.ssrbool.keyed_qualifier_suproof	40
Coq.ssr.ssrbool.all_tag_cond_dep	40
Coq.ssr.ssrbool.all_tag_cond	40
Coq.ssr.ssrbool.all_sig_cond_dep	40
Coq.ssr.ssrbool.all_sig_cond	40
Coq.ssr.ssrbool.symmetric_from_pre	40
Coq.ssr.ssrbool.sym_left_transitive	40
Coq.ssr.ssrbool.sym_right_transitive	40
Coq.ssr.ssrbool.equivalence_relP	40
Coq.ssr.ssrbool.rev_trans	40
Coq.ssr.ssrbool.forE	40	1	search with cache (only 1: by [  ]).	0.133504152298	2
Coq.ssr.ssrbool.in1W	40	0.10	search with cache (only 1: intros; only 1: by [  ]).	0.470457077026	33
Coq.ssr.ssrbool.in2W	40	0	search with cache (only 1: by move  {}=>? ?).	0.0605499744415	1
Coq.ssr.ssrbool.in3W	40	0	search with cache (only 1: by move  {}=>? ?).	0.0107550621033	1
Coq.ssr.ssrbool.in1T	40
Coq.ssr.ssrbool.in2T	40	1	search with cache (only 1: by move  {}=>? ?; auto).	0.0154180526733	2
Coq.ssr.ssrbool.in3T	40	1	search with cache (only 1: by move  {}=>? ?; auto).	0.0164420604706	2
Coq.ssr.ssrbool.sub_in1	40	1	search with cache (only 1: by move  {}=>? ?; auto).	0.0152730941772	2
Coq.ssr.ssrbool.sub_in11	40	1	search with cache (only 1: by move  {}=>? ?; auto).	0.159511089325	2
Coq.ssr.ssrbool.sub_in111	40	3	search with cache (only 1: by move  {}=>? ?; auto).	0.544810056686	4
Coq.ssr.ssrbool.on1W	40	0	search with cache (only 1: by move  {}=>? ?).	0.556189060211	1
Coq.ssr.ssrbool.on1lW	40	0	search with cache (only 1: by move  {}=>? ?).	0.344478130341	1
Coq.ssr.ssrbool.on2W	40	0	search with cache (only 1: by move  {}=>? ?).	0.0843858718872	1
Coq.ssr.ssrbool.on1T	40	1	search with cache (only 1: by move  {}=>? ?; auto).	0.0157489776611	2
Coq.ssr.ssrbool.on1lT	40	1	search with cache (only 1: by move  {}=>? ?; auto).	0.0160050392151	2
Coq.ssr.ssrbool.on2T	40	1	search with cache (only 1: by move  {}=>? ?; auto).	0.0172190666199	2
Coq.ssr.ssrbool.subon1	40	3	search with cache (only 1: by move  {}=>? ?; auto).	0.945793151855	4
Coq.ssr.ssrbool.subon1l	40	0	search with cache (only 1: by move  {}=>allQ x /sub2; apply : {}allQ {}).	1.1541800499	1
Coq.ssr.ssrbool.subon2	40	6	search with cache (only 1: by move  {}=>? ?; auto).	0.961120128632	7
Coq.ssr.ssrbool.can_in_inj	40
Coq.ssr.ssrbool.canLR_in	40
Coq.ssr.ssrbool.canRL_in	40
Coq.ssr.ssrbool.on_can_inj	40	0	search with cache (only 1: by move  {}=>fK x y /fK {+2}<- /fK {+2}<- {+}->).	1.49756503105	1
Coq.ssr.ssrbool.canLR_on	40	0	search with cache (only 1: by move  {}=>fK D1y {+}->; rewrite fK).	0.158014059067	1
Coq.ssr.ssrbool.canRL_on	40	1	search with cache (only 1: by move  {}=>fK D1x {+}<-; rewrite fK).	0.226052045822	2
Coq.ssr.ssrbool.inW_bij	40
Coq.ssr.ssrbool.onW_bij	40	1	search with cache (only 1: by case  {}=>g' fK g'K; <ssreflect_plugin::ssrtclintros@0> exists g' =>* ? *; auto).	0.149705886841	2
Coq.ssr.ssrbool.inT_bij	40	0	search with cache (only 1: by case  {}=>g' fK g'K; <ssreflect_plugin::ssrtclintros@0> exists g' =>* ? *; auto).	0.114097118378	1
Coq.ssr.ssrbool.onT_bij	40	1	search with cache (only 1: by case  {}=>g' fK g'K; <ssreflect_plugin::ssrtclintros@0> exists g' =>* ? *; auto).	0.0194690227509	2
Coq.ssr.ssrbool.sub_in_bij	40
Coq.ssr.ssrbool.subon_bij	40	6	search with cache (only 1: by move  {}=>subD [g' fK g'K]; <ssreflect_plugin::ssrtclintros@0> exists g' =>x; move /subD {}; [ apply : {}fK {} | apply : {}g'K {} ]).	0.0583760738373	7
Coq.ssr.ssrbool.sub_in2	40	20.18	search with cache (only 1: move  {}=>iPQ [] // notPQ; only 1: by move  {}=>? ?; auto).	7.55243492126	849
Coq.ssr.ssrbool.sub_in3	40
Coq.ssr.ssrbool.sub_in12	40
Coq.ssr.ssrbool.sub_in21	40	0	search with cache (only 1: by move  {}=>/= sub1 sub; apply : {}sub_in111 {}).	0.013167142868	1
Coq.ssr.ssrbool.equivalence_relP_in	40
Coq.ssr.ssrbool.monoW	40
Coq.ssr.ssrbool.mono2W	40	0	search with cache (only 1: by move  {}=>hf x ax; rewrite hf).	0.0360100269318	1
Coq.ssr.ssrbool.homoRL	40
Coq.ssr.ssrbool.homoLR	40	0	search with cache (only 1: by move  {}=>Hf x y /Hf; rewrite fgK).	0.451560974121	1
Coq.ssr.ssrbool.homo_mono	40
Coq.ssr.ssrbool.monoLR	40
Coq.ssr.ssrbool.monoRL	40
Coq.ssr.ssrbool.can_mono	40
Coq.ssr.ssrbool.monoW_in	40
Coq.ssr.ssrbool.mono2W_in	40	0	search with cache (only 1: by move  {}=>hf x ax; rewrite hf).	0.111577033997	1
Coq.ssr.ssrbool.homoRL_in	40
Coq.ssr.ssrbool.homoLR_in	40	0	search with cache (only 1: by move  {}=>Hf x y hx hy /Hf; rewrite fgK_on //; apply).	0.872069120407	1
Coq.ssr.ssrbool.homo_mono_in	40
Coq.ssr.ssrbool.monoLR_in	40
Coq.ssr.ssrbool.monoRL_in	40
Coq.ssr.ssrbool.can_mono_in	40
Coq.ssr.ssrsetoid.compat_Reflexive	40	0	search with cache (only 1: firstorder).	0.00583791732788	1
Coq.ssr.ssrfun.unitE	40
Coq.ssr.ssrfun.frefl	40
Coq.ssr.ssrfun.fsym	40
Coq.ssr.ssrfun.ftrans	40
Coq.ssr.ssrfun.rrefl	40	0	search with cache (only 1: by [  ]).	0.0047070980072	1
Coq.ssr.ssrfun.eq_comp	40
Coq.ssr.ssrfun.all_tag	40	2.0.0.3.2	search with cache (only 1: intro H; only 1: exists (fun z => projT1 (H z)); only 1: intro z; only 1: destruct (H z); only 1: by [  ]).	3.65850400925	90
Coq.ssr.ssrfun.all_tag2	40	1	search with cache (only 1: by move  {}=>fP; <ssreflect_plugin::ssrtclintros@0> exists (fun x => tag (fP x)) =>x; case : {}(fP x) {}).	0.323636054993	2
Coq.ssr.ssrfun.svalP	40	21	search with cache (only 1: apply proj2_sig).	1.19469690323	208
Coq.ssr.ssrfun.s2valP	40	1	search with cache (only 1: by case : {}u {}).	0.0470139980316	2
Coq.ssr.ssrfun.s2valP'	40	0	search with cache (only 1: by case : {}u {}).	0.00478911399841	1
Coq.ssr.ssrfun.all_sig	40	1	search with cache (only 1: by move  {}=>fP; <ssreflect_plugin::ssrtclintros@0> exists (fun x => tag (fP x)) =>x; case : {}(fP x) {}).	0.485373020172	2
Coq.ssr.ssrfun.all_sig2	40	2	search with cache (only 1: by case /all_tag {}=>f /all_pair []; exists f).	0.577491998672	3
Coq.ssr.ssrfun.can_pcan	40
Coq.ssr.ssrfun.pcan_inj	40
Coq.ssr.ssrfun.can_inj	40	0	search with cache (only 1: by move  {}=>fK x y /(congr1 g); <ssreflect_plugin::ssrtclintros@0> rewrite !fK =>[[]]).	0.441884040833	1
Coq.ssr.ssrfun.canLR	40
Coq.ssr.ssrfun.canRL	40
Coq.ssr.ssrfun.Some_inj	40
Coq.ssr.ssrfun.of_voidK	40	8	search with cache (only 1: by case).	0.380118131638	9
Coq.ssr.ssrfun.esymK	40
Coq.ssr.ssrfun.etrans_id	40
Coq.ssr.ssrfun.inj_id	40	2	search with cache (only 1: by [  ]).	0.00486993789673	3
Coq.ssr.ssrfun.inj_can_sym	40
Coq.ssr.ssrfun.inj_comp	40
Coq.ssr.ssrfun.inj_compr	40
Coq.ssr.ssrfun.can_comp	40
Coq.ssr.ssrfun.pcan_pcomp	40
Coq.ssr.ssrfun.eq_inj	40
Coq.ssr.ssrfun.eq_can	40
Coq.ssr.ssrfun.inj_can_eq	40
Coq.ssr.ssrfun.bij_inj	40
Coq.ssr.ssrfun.bij_can_sym	40
Coq.ssr.ssrfun.bij_can_eq	40
Coq.ssr.ssrfun.eq_bij	40
Coq.ssr.ssrfun.bij_comp	40
Coq.ssr.ssrfun.bij_can_bij	40
Coq.ssr.ssrfun.inv_inj	40
Coq.ssr.ssrfun.inv_bij	40
Coq.ssr.ssrunder.Under_rel.Under_rel_from_rel	40	0.1	search with cache (only 1: intros; only 1: trivial).	0.00617480278015	3
Coq.ssr.ssrunder.Under_rel.Under_relE	40	0	search with cache (only 1: auto).	0.00535202026367	1
Coq.ssr.ssrunder.Under_rel.over_rel	40	0.1	search with cache (only 1: intros; only 1: trivial).	0.00599598884583	3
Coq.ssr.ssrunder.Under_rel.over_rel_done	40	0	search with cache (only 1: now trivial).	0.00537610054016	1
Coq.ssr.ssrunder.Under_rel.under_rel_done	40	0	search with cache (only 1: now unfold Over_rel).	0.00557494163513	1
Coq.Vectors.VectorEq.eqb_nat_eq	40
Coq.Vectors.VectorEq.eqb_eq	40	4.0.13	search with cache (only 1: fix even_spec 1; only 1: intros m n v1; only 1: eauto).	9.69473409653	11015
Coq.Vectors.VectorEq.eq_dec	40
Coq.Vectors.VectorEq.cast	40	2.1.13.3	search with cache (only 1: intros x y z; only 1: intros; only 1: rewrite <- H; only 1: auto).	0.646271944046	1298
Coq.Vectors.VectorDef.trunc	40
Coq.Vectors.VectorSpec.eta	40
Coq.Vectors.VectorSpec.eq_nth_iff	40
Coq.Vectors.VectorSpec.nth_order_last	40
Coq.Vectors.VectorSpec.shiftin_nth	40
Coq.Vectors.VectorSpec.shiftin_last	40
Coq.Vectors.VectorSpec.shiftrepeat_nth	40
Coq.Vectors.VectorSpec.shiftrepeat_last	40	0.0.2	search with cache (only 1: refine (@rectS _ _ _ _); only 1: now simpl; only 1: now simpl).	0.0258350372314	20
Coq.Vectors.VectorSpec.const_nth	40
Coq.Vectors.VectorSpec.nth_map	40
Coq.Vectors.VectorSpec.nth_map2	40
Coq.Vectors.VectorSpec.fold_left_right_assoc_eq	40
Coq.Vectors.VectorSpec.to_list_of_list_opp	40
Coq.Vectors.VectorSpec.take_O	40	1.1.1.0.0.0	search with cache (only 1: nzinduct n; only 1: trivial; only 1: intro n; only 1: split; only 1: trivial; only 1: trivial).	0.018070936203	9
Coq.Vectors.VectorSpec.take_idem	40
Coq.Vectors.VectorSpec.take_app	40
Coq.Vectors.VectorSpec.take_prf_irr	40	0.0.0.0.0.0.0.0.0	search with cache (only 1: induction p; only 1: intros n v le le'; only 1: auto; only 1: intros n v le le'; only 1: destruct v; only 1: inversion le; only 1: simpl; only 1: apply f_equal; only 1: apply IHp).	0.0149171352386	9
Coq.Vectors.VectorSpec.uncons_cons	40	1	search with cache (only 1: now f_equal).	0.00706005096436	2
Coq.Vectors.VectorSpec.append_comm_cons	40	1.0	search with cache (only 1: intros; only 1: now simpl).	0.00800704956055	3
Coq.Vectors.VectorSpec.splitat_append	40
Coq.Vectors.VectorSpec.append_splitat	40
Coq.Vectors.Fin.of_nat_ext	40
Coq.Vectors.Fin.of_nat_to_nat_inv	40
Coq.Vectors.Fin.to_nat_of_nat	40
Coq.Vectors.Fin.to_nat_inj	40
Coq.Vectors.Fin.L_sanity	40
Coq.Vectors.Fin.L_R	40
Coq.Vectors.Fin.R_sanity	40
Coq.Vectors.Fin.depair_sanity	40
Coq.Vectors.Fin.eqb_nat_eq	40
Coq.Vectors.Fin.eqb_eq	40	15.1.7	search with cache (only 1: fix even_spec 1; only 1: intros m n p; only 1: easy).	7.66102290154	16945
Coq.Vectors.Fin.eq_dec	40
Coq.Vectors.Fin.cast	40	1.19.16.5	search with cache (only 1: intros m n p; only 1: intros; only 1: subst p; only 1: auto with arith).	4.96461701393	16318
Coq.Setoids.Setoid.Seq_refl	40	0	search with cache (only 1: firstorder).	0.0113620758057	1
Coq.Setoids.Setoid.Seq_sym	40	1.0.0	search with cache (only 1: unfold Setoid_Theory in s; only 1: intros; only 1: now transitivity y).	0.0131158828735	4
Coq.Setoids.Setoid.Seq_trans	40	2.0.0.0.0.0.0.0	search with cache (only 1: unfold Setoid_Theory in s; only 1: intros; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: now transitivity y).	0.0199220180511	13
Coq.Setoids.Setoid.gen_st	40	2	search with cache (only 1: simpl_relation).	0.0153758525848	3
Coq.Bool.IfProp.Iftrue_inv	40
Coq.Bool.IfProp.Iffalse_inv	40
Coq.Bool.IfProp.IfProp_true	40
Coq.Bool.IfProp.IfProp_false	40	2.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: inversion H; only 1: inversion H; only 1: inversion H; only 1: inversion H; only 1: inversion H; only 1: inversion H; only 1: assumption).	0.0122520923615	13
Coq.Bool.IfProp.IfProp_or	40	0.2.0.1.2	search with cache (only 1: destruct 1; only 1: left; only 1: assumption; only 1: right; only 1: assumption).	0.0408601760864	107
Coq.Bool.IfProp.IfProp_sum	40
Coq.Bool.Zerob.zerob_true_intro	40	1.0.0.8	search with cache (only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: discriminate).	0.064759016037	92
Coq.Bool.Zerob.zerob_true_elim	40	0.0.0	search with cache (only 1: destruct n; only 1: trivial with bool; only 1: inversion 1).	0.0119700431824	3
Coq.Bool.Zerob.zerob_false_intro	40	2.2.2	search with cache (only 1: destruct n; only 1: now try Nat.order'; only 1: reflexivity).	0.0595011711121	17
Coq.Bool.Zerob.zerob_false_elim	40	4.8.0	search with cache (only 1: destruct n; only 1: discriminate; only 1: discriminate).	0.423232078552	549
Coq.Bool.DecBool.ifdec_left	40	11.0.6.5	search with cache (only 1: intros; only 1: destruct H; only 1: trivial; only 1: contradiction).	0.483743906021	3792
Coq.Bool.DecBool.ifdec_right	40
Coq.Bool.Sumbool.sumbool_of_bool	40
Coq.Bool.Sumbool.bool_eq_rec	40	2.2.0	search with cache (only 1: destruct b; only 1: auto; only 1: auto).	0.00743198394775	7
Coq.Bool.Sumbool.bool_eq_ind	40	0.0.0	search with cache (only 1: destruct b; only 1: auto; only 1: auto).	0.00591278076172	3
Coq.Bool.Sumbool.sumbool_and	40
Coq.Bool.Sumbool.sumbool_or	40
Coq.Bool.Sumbool.sumbool_not	40
Coq.Bool.Sumbool.bool_of_sumbool	40
Coq.Bool.Bool.bool_dec	40
Coq.Bool.Bool.diff_true_false	40	2	search with cache (only 1: discriminate).	0.00573492050171	3
Coq.Bool.Bool.diff_false_true	40	0	search with cache (only 1: discriminate).	0.00539588928223	1
Coq.Bool.Bool.eq_true_false_abs	40
Coq.Bool.Bool.not_true_is_false	40
Coq.Bool.Bool.not_false_is_true	40	0.0	search with cache (only 1: destr_bool; only 1: intuition).	0.00819396972656	2
Coq.Bool.Bool.not_true_iff_false	40	0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0113780498505	3
Coq.Bool.Bool.not_false_iff_true	40	0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0114190578461	3
Coq.Bool.Bool.leb_implb	40	1.1.1.1.2	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.04168009758	74
Coq.Bool.Bool.eqb_subst	40	5.2	search with cache (only 1: intuition; only 1: destr_bool).	0.0173628330231	25
Coq.Bool.Bool.eqb_reflx	40	0	search with cache (only 1: destr_bool).	0.00706791877747	1
Coq.Bool.Bool.eqb_prop	40	1	search with cache (only 1: destr_bool).	0.00935101509094	2
Coq.Bool.Bool.eqb_true_iff	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.014221906662	5
Coq.Bool.Bool.eqb_false_iff	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0177879333496	5
Coq.Bool.Bool.negb_orb	40	0	search with cache (only 1: destr_bool).	0.00937294960022	1
Coq.Bool.Bool.negb_andb	40	0	search with cache (only 1: destr_bool).	0.0093400478363	1
Coq.Bool.Bool.negb_involutive	40	1	search with cache (only 1: destr_bool).	0.00784397125244	2
Coq.Bool.Bool.negb_involutive_reverse	40	0	search with cache (only 1: destr_bool).	0.00765705108643	1
Coq.Bool.Bool.negb_sym	40	0	search with cache (only 1: destr_bool).	0.00966715812683	1
Coq.Bool.Bool.no_fixpoint_negb	40	1	search with cache (only 1: destr_bool).	0.00851798057556	2
Coq.Bool.Bool.eqb_negb1	40	0	search with cache (only 1: destr_bool).	0.00792789459229	1
Coq.Bool.Bool.eqb_negb2	40	0	search with cache (only 1: destr_bool).	0.00800800323486	1
Coq.Bool.Bool.if_negb	40	0	search with cache (only 1: destr_bool).	0.00820899009705	1
Coq.Bool.Bool.negb_true_iff	40	0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0112979412079	3
Coq.Bool.Bool.negb_false_iff	40	0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0115010738373	3
Coq.Bool.Bool.orb_true_iff	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0204441547394	5
Coq.Bool.Bool.orb_false_iff	40	3.1.1.1.3	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.374888181686	570
Coq.Bool.Bool.orb_true_elim	40	2.2.1.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition).	0.0174300670624	9
Coq.Bool.Bool.orb_prop	40	3.3.1.1	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition).	0.0383651256561	55
Coq.Bool.Bool.orb_true_intro	40	0.0.0	search with cache (only 1: intros; only 1: apply orb_true_iff; only 1: assumption).	0.00918197631836	3
Coq.Bool.Bool.orb_false_intro	40	2	search with cache (only 1: destr_bool).	0.01118516922	3
Coq.Bool.Bool.orb_false_elim	40	1.1	search with cache (only 1: destr_bool; only 1: intuition).	0.0283770561218	28
Coq.Bool.Bool.orb_diag	40	4.0	search with cache (only 1: intros; only 1: destr_bool).	0.01127409935	6
Coq.Bool.Bool.orb_true_r	40	1	search with cache (only 1: destr_bool).	0.00881910324097	2
Coq.Bool.Bool.orb_true_l	40	0	search with cache (only 1: destr_bool).	0.00887703895569	1
Coq.Bool.Bool.orb_false_r	40	4.0	search with cache (only 1: intros; only 1: destr_bool).	0.0110249519348	6
Coq.Bool.Bool.orb_false_l	40	0	search with cache (only 1: destr_bool).	0.00873994827271	1
Coq.Bool.Bool.orb_negb_r	40	0	search with cache (only 1: destr_bool).	0.00887203216553	1
Coq.Bool.Bool.orb_comm	40	0	search with cache (only 1: destr_bool).	0.0109238624573	1
Coq.Bool.Bool.orb_assoc	40	0	search with cache (only 1: destr_bool).	0.0147831439972	1
Coq.Bool.Bool.andb_true_iff	40	0.0.0.1.2	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.13952589035	127
Coq.Bool.Bool.andb_false_iff	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0236639976501	5
Coq.Bool.Bool.andb_true_eq	40	4.7	search with cache (only 1: destr_bool; only 1: intuition).	0.394514083862	595
Coq.Bool.Bool.andb_false_intro1	40	1.1.0	search with cache (only 1: intros; only 1: subst; only 1: trivial).	0.00876903533936	5
Coq.Bool.Bool.andb_false_intro2	40	0.0.0	search with cache (only 1: intros; only 1: apply andb_false_iff; only 1: auto).	0.00936007499695	3
Coq.Bool.Bool.andb_false_r	40	1.1.1	search with cache (only 1: intros; only 1: apply andb_false_iff; only 1: auto).	0.00971508026123	6
Coq.Bool.Bool.andb_false_l	40	0	search with cache (only 1: destr_bool).	0.0088791847229	1
Coq.Bool.Bool.andb_diag	40	0	search with cache (only 1: destr_bool).	0.00895500183105	1
Coq.Bool.Bool.andb_true_r	40	1	search with cache (only 1: destr_bool).	0.00883102416992	2
Coq.Bool.Bool.andb_true_l	40	1	search with cache (only 1: destr_bool).	0.00870418548584	2
Coq.Bool.Bool.andb_false_elim	40
Coq.Bool.Bool.andb_negb_r	40	0	search with cache (only 1: destr_bool).	0.00882697105408	1
Coq.Bool.Bool.andb_comm	40	0	search with cache (only 1: destr_bool).	0.0107729434967	1
Coq.Bool.Bool.andb_assoc	40	0	search with cache (only 1: destr_bool).	0.0147950649261	1
Coq.Bool.Bool.andb_orb_distrib_r	40	0	search with cache (only 1: destr_bool).	0.0149810314178	1
Coq.Bool.Bool.andb_orb_distrib_l	40	0	search with cache (only 1: destr_bool).	0.0150990486145	1
Coq.Bool.Bool.orb_andb_distrib_r	40	0	search with cache (only 1: destr_bool).	0.0349650382996	1
Coq.Bool.Bool.orb_andb_distrib_l	40	0	search with cache (only 1: destr_bool).	0.0151879787445	1
Coq.Bool.Bool.absorption_andb	40	0	search with cache (only 1: destr_bool).	0.010861158371	1
Coq.Bool.Bool.absorption_orb	40	0	search with cache (only 1: destr_bool).	0.0106880664825	1
Coq.Bool.Bool.xorb_false_r	40	0	search with cache (only 1: destr_bool).	0.00880193710327	1
Coq.Bool.Bool.xorb_false_l	40	0	search with cache (only 1: destr_bool).	0.00879812240601	1
Coq.Bool.Bool.xorb_true_r	40	0	search with cache (only 1: destr_bool).	0.00903511047363	1
Coq.Bool.Bool.xorb_true_l	40	0	search with cache (only 1: reflexivity).	0.00751900672913	1
Coq.Bool.Bool.xorb_nilpotent	40	0	search with cache (only 1: destr_bool).	0.0090389251709	1
Coq.Bool.Bool.xorb_comm	40	1	search with cache (only 1: destr_bool).	0.0109798908234	2
Coq.Bool.Bool.xorb_assoc_reverse	40	0	search with cache (only 1: destr_bool).	0.0151169300079	1
Coq.Bool.Bool.xorb_eq	40	0	search with cache (only 1: destr_bool).	0.0118019580841	1
Coq.Bool.Bool.xorb_move_l_r_1	40	0	search with cache (only 1: destr_bool).	0.0165011882782	1
Coq.Bool.Bool.xorb_move_l_r_2	40	0	search with cache (only 1: destr_bool).	0.0163941383362	1
Coq.Bool.Bool.xorb_move_r_l_1	40	0	search with cache (only 1: destr_bool).	0.0165779590607	1
Coq.Bool.Bool.xorb_move_r_l_2	40	0	search with cache (only 1: destr_bool).	0.0166099071503	1
Coq.Bool.Bool.negb_xorb_l	40	0	search with cache (only 1: destr_bool).	0.0111191272736	1
Coq.Bool.Bool.negb_xorb_r	40	0.0.0.0.0	search with cache (only 1: destruct b, b'; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial).	0.0114808082581	5
Coq.Bool.Bool.xorb_negb_negb	40	0.0.0.0.0	search with cache (only 1: destruct b, b'; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial).	0.0114409923553	5
Coq.Bool.Bool.eq_iff_eq_true	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0289459228516	5
Coq.Bool.Bool.eq_true_iff_eq	40	0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0182571411133	3
Coq.Bool.Bool.eq_true_negb_classical	40	0.0	search with cache (only 1: destr_bool; only 1: intuition).	0.0111479759216	2
Coq.Bool.Bool.eq_true_not_negb	40	1.0	search with cache (only 1: destr_bool; only 1: intuition).	0.0111248493195	3
Coq.Bool.Bool.absurd_eq_bool	40	5.5.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0948169231415	110
Coq.Bool.Bool.absurd_eq_true	40	4.0	search with cache (only 1: destr_bool; only 1: intuition).	0.0105929374695	6
Coq.Bool.Bool.trans_eq_bool	40	1	search with cache (only 1: destr_bool).	0.0159201622009	2
Coq.Bool.Bool.Is_true_eq_true	40	4.4	search with cache (only 1: destr_bool; only 1: intuition).	0.074844121933	17
Coq.Bool.Bool.Is_true_eq_left	40	0	search with cache (only 1: destr_bool).	0.00930404663086	1
Coq.Bool.Bool.Is_true_eq_right	40	0	search with cache (only 1: destr_bool).	0.00922894477844	1
Coq.Bool.Bool.eqb_refl	40	0	search with cache (only 1: destr_bool).	0.00873112678528	1
Coq.Bool.Bool.eqb_eq	40	0.0.0	search with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.0679099559784	3
Coq.Bool.Bool.orb_prop_elim	40	1.1.1.0.0	search with cache (only 1: destr_bool; only 1: auto with bool; only 1: tauto; only 1: tauto; only 1: tauto).	0.0151698589325	8
Coq.Bool.Bool.orb_prop_intro	40	0.0	search with cache (only 1: destr_bool; only 1: tauto).	0.013368844986	2
Coq.Bool.Bool.andb_prop_intro	40	0.0.0.0	search with cache (only 1: destr_bool; only 1: tauto; only 1: tauto; only 1: tauto).	0.0148980617523	4
Coq.Bool.Bool.andb_prop_elim	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: tauto; only 1: tauto; only 1: tauto; only 1: tauto).	0.0162057876587	5
Coq.Bool.Bool.eq_bool_prop_intro	40	0.0.1	search with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.0169081687927	4
Coq.Bool.Bool.eq_bool_prop_elim	40	0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: tauto).	0.0153248310089	3
Coq.Bool.Bool.negb_prop_elim	40	2.0	search with cache (only 1: unfold not; only 1: destr_bool).	0.00954079627991	4
Coq.Bool.Bool.negb_prop_intro	40	0.0	search with cache (only 1: destr_bool; only 1: tauto).	0.010626077652	2
Coq.Bool.Bool.negb_prop_classical	40	0.0	search with cache (only 1: destr_bool; only 1: tauto).	0.0105891227722	2
Coq.Bool.Bool.negb_prop_involutive	40	0.0.0	search with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.0110909938812	3
Coq.Bool.Bool.andb_if	40	0	search with cache (only 1: destr_bool).	0.0117259025574	1
Coq.Bool.Bool.negb_if	40	0	search with cache (only 1: destr_bool).	0.009357213974	1
Coq.Bool.Bool.andb_lazy_alt	40	0	search with cache (only 1: destr_bool).	0.0111169815063	1
Coq.Bool.Bool.orb_lazy_alt	40	0	search with cache (only 1: destr_bool).	0.0110359191895	1
Coq.Bool.Bool.reflect_iff	40
Coq.Bool.Bool.iff_reflect	40
Coq.Bool.Bool.reflect_dec	40	0.0.4.0.0.5.2.0	search with cache (only 1: unfold not; only 1: destr_bool; only 1: destruct H; only 1: tauto; only 1: tauto; only 1: destruct H; only 1: tauto; only 1: tauto).	0.947762012482	1055
Coq.Bool.Bool.eqb_spec	40	4.7.7.4.2	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.292802810669	760
Coq.Bool.BoolEq.beq_eq_true	40	3.5.2	search with cache (only 1: intros; only 1: destruct H; only 1: auto).	0.0206201076508	90
Coq.Bool.BoolEq.beq_eq_not_false	40
Coq.Bool.BoolEq.beq_false_not_eq	40
Coq.Bool.BoolEq.exists_beq_eq	40
Coq.Bool.BoolEq.not_eq_false_beq	40
Coq.Bool.BoolEq.eq_dec	40
Coq.Lists.ListSet.set_In_dec	40
Coq.Lists.ListSet.set_mem_ind	40
Coq.Lists.ListSet.set_mem_ind2	40
Coq.Lists.ListSet.set_mem_correct1	40	1.1.2.0.1.1.1.1.1	search with cache (only 1: unfold set_In; only 1: simple induction x; only 1: simpl; only 1: Bool.destr_bool; only 1: intros a0 x0 Ha0; only 1: simpl; only 1: elim (Aeq_dec a a0); only 1: auto; only 1: auto).	4.01462197304	5419
Coq.Lists.ListSet.set_mem_correct2	40	7.0.0.0.1.1.0.0.2	search with cache (only 1: unfold set_In; only 1: simple induction x; only 1: simpl; only 1: contradiction; only 1: intros a0 x0 Ha0; only 1: simpl; only 1: elim (Aeq_dec a a0); only 1: auto; only 1: intuition).	13.1799809933	18793
Coq.Lists.ListSet.set_mem_complete1	40
Coq.Lists.ListSet.set_mem_complete2	40	1.0.0.4.0.0.0.0.0.0	search with cache (only 1: simple induction x; only 1: simpl; only 1: tauto; only 1: simpl; only 1: intros a0 l; only 1: elim (Aeq_dec a a0); only 1: intuition; only 1: now subst; only 1: unfold not; only 1: auto with datatypes).	2.4736700058	3972
Coq.Lists.ListSet.set_add_intro1	40
Coq.Lists.ListSet.set_add_intro2	40	0.3.1.0.1.12.1.0.0.0.0	search with cache (only 1: unfold set_In; only 1: simple induction x; only 1: simpl; only 1: auto with datatypes; only 1: simpl; only 1: intuition; only 1: elim (Aeq_dec b a0); only 1: left; only 1: now subst; only 1: simpl; only 1: auto).	8.09539008141	19764
Coq.Lists.ListSet.set_add_intro	40	1.1.5	search with cache (only 1: induction 1; only 1: auto with datatypes; only 1: auto with datatypes).	0.0483148097992	64
Coq.Lists.ListSet.set_add_elim	40
Coq.Lists.ListSet.set_add_elim2	40	1.0.0.0.0.1.0.0.0.1.0.0.0	search with cache (only 1: unfold set_In; only 1: simple induction x; only 1: simpl; only 1: intros [H1| H2]; only 1: auto with datatypes; only 1: auto with datatypes; only 1: simpl; only 1: do 3 intro; only 1: elim (Aeq_dec b a0); only 1: simpl; only 1: auto with datatypes; only 1: simpl; only 1: tauto).	0.380432128906	549
Coq.Lists.ListSet.set_add_not_empty	40	3.3.5.3.0.1.1	search with cache (only 1: simple induction x; only 1: easy; only 1: simpl; only 1: intros; only 1: elim (Aeq_dec a a0); only 1: discriminate; only 1: discriminate).	6.32196307182	4945
Coq.Lists.ListSet.set_add_iff	40	0.0.0.0.2.0.3.0.0.5.0.26	search with cache (only 1: induction l; only 1: simpl; only 1: intuition; only 1: simpl; only 1: elim (Aeq_dec b a0); only 1: intuition; only 1: left; only 1: now subst; only 1: simpl; only 1: auto; only 1: simpl; only 1: tauto).	32.88884902	27019
Coq.Lists.ListSet.set_add_nodup	40
Coq.Lists.ListSet.set_remove_1	40
Coq.Lists.ListSet.set_remove_2	40	0.0.4.0.5.3.0.0.0.4	search with cache (only 1: induction 1 as [| x l H H' IH]; only 1: simpl; only 1: auto with datatypes; only 1: simpl; only 1: destruct (Aeq_dec b x); only 1: intuition; only 1: now subst; only 1: simpl; only 1: intuition; only 1: now subst).	8.0532348156	16769
Coq.Lists.ListSet.set_remove_3	40
Coq.Lists.ListSet.set_remove_iff	40	0.0.1.0.0.0.0.1.0.1.0.0	search with cache (only 1: induction l as [| x l IH]; only 1: now simpl; only 1: intro ND; only 1: simpl; only 1: inversion_clear ND; only 1: destruct (Aeq_dec b x); only 1: intuition; only 1: now subst; only 1: now subst; only 1: simpl; only 1: intuition; only 1: now subst).	19.083302021	10593
Coq.Lists.ListSet.set_remove_nodup	40
Coq.Lists.ListSet.set_union_intro1	40	0.0.0.2.12.0	search with cache (only 1: intros a b x H; only 1: revert x; only 1: simple induction x; only 1: auto with datatypes; only 1: simpl; only 1: auto with datatypes).	1.75517201424	2858
Coq.Lists.ListSet.set_union_intro2	40	7.0.3.0.0	search with cache (only 1: simple induction y; only 1: simpl; only 1: tauto; only 1: simpl; only 1: intuition).	0.724410057068	861
Coq.Lists.ListSet.set_union_intro	40	0.0.1	search with cache (only 1: intros a b x [H1| H2]; only 1: auto with datatypes; only 1: auto with datatypes).	0.199851989746	106
Coq.Lists.ListSet.set_union_elim	40
Coq.Lists.ListSet.set_union_iff	40
Coq.Lists.ListSet.set_union_nodup	40
Coq.Lists.ListSet.set_union_emptyL	40
Coq.Lists.ListSet.set_union_emptyR	40	1.1.1.0.0.0	search with cache (only 1: intros a x H; only 1: case (set_union_elim _ _ _ H); only 1: case (set_union_elim _ _ _ H); only 1: auto || contradiction; only 1: auto || contradiction; only 1: auto || contradiction).	0.179088115692	72
Coq.Lists.ListSet.set_inter_intro	40
Coq.Lists.ListSet.set_inter_elim1	40
Coq.Lists.ListSet.set_inter_elim2	40
Coq.Lists.ListSet.set_inter_elim	40
Coq.Lists.ListSet.set_inter_iff	40
Coq.Lists.ListSet.set_inter_nodup	40
Coq.Lists.ListSet.set_diff_intro	40
Coq.Lists.ListSet.set_diff_elim1	40
Coq.Lists.ListSet.set_diff_elim2	40
Coq.Lists.ListSet.set_diff_iff	40
Coq.Lists.ListSet.set_diff_nodup	40
Coq.Lists.ListSet.set_diff_trivial	40
Coq.Lists.ListDec.In_decidable	40	1.0.0.1.1.0	search with cache (only 1: induction l; only 1: simpl; only 1: unfold decidable, not; only 1: auto; only 1: simpl; only 1: intuition).	0.0127029418945	9
Coq.Lists.ListDec.incl_decidable	40
Coq.Lists.ListDec.NoDup_decidable	40
Coq.Lists.ListDec.incl_dec	40
Coq.Lists.ListDec.NoDup_dec	40
Coq.Lists.ListDec.uniquify_map	40
Coq.Lists.ListDec.uniquify	40
Coq.Lists.Streams.unfold_Stream	40
Coq.Lists.Streams.tl_nth_tl	40
Coq.Lists.Streams.Str_nth_tl_plus	40
Coq.Lists.Streams.Str_nth_plus	40
Coq.Lists.Streams.EqSt_reflex	40
Coq.Lists.Streams.sym_EqSt	40
Coq.Lists.Streams.trans_EqSt	40
Coq.Lists.Streams.eqst_ntheq	40
Coq.Lists.Streams.ntheq_eqst	40
Coq.Lists.Streams.ForAll_Str_nth_tl	40
Coq.Lists.Streams.ForAll_coind	40	0.0.2	search with cache (only 1: coinduction ltac:(EqSt_reflex); only 1: auto; only 1: auto).	0.00634813308716	5
Coq.Lists.Streams.Str_nth_tl_map	40	1.0.0.0.0.2	search with cache (only 1: simple induction n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: intros; only 1: trivial).	0.00878977775574	18
Coq.Lists.Streams.Str_nth_map	40	0.0.0.0.8	search with cache (only 1: unfold Str_nth; only 1: simple induction n; only 1: reflexivity; only 1: simpl; only 1: auto).	0.765667915344	1245
Coq.Lists.Streams.ForAll_map	40
Coq.Lists.Streams.Exists_map	40
Coq.Lists.Streams.Str_nth_tl_zipWith	40	0.0.1.1.0.0.1	search with cache (only 1: induction n; only 1: simpl; only 1: intros n s; only 1: reflexivity; only 1: intros; only 1: simpl; only 1: apply IHn).	0.0916841030121	24
Coq.Lists.Streams.Str_nth_zipWith	40	1.2.0.1.0.0.1	search with cache (only 1: induction n; only 1: intros n s; only 1: reflexivity; only 1: intros [x xs] [y ys]; only 1: unfold Str_nth in *; only 1: simpl in *; only 1: apply IHn).	0.150299072266	478
Coq.Lists.List.nil_cons	40	1.2.4	search with cache (only 1: intros n m; only 1: red; only 1: discriminate).	0.0148420333862	17
Coq.Lists.List.destruct_list	40
Coq.Lists.List.hd_error_tl_repr	40	4.17	search with cache (only 1: fix even_spec 1; only 1: destr_bool).	4.66135907173	8474
Coq.Lists.List.hd_error_some_nil	40	2.2.0.2	search with cache (only 1: induction l as [| a tail]; only 1: intros; only 1: discriminate; only 1: discriminate).	0.0182211399078	21
Coq.Lists.List.length_zero_iff_nil	40	4.1.6.8.1.6.0	search with cache (only 1: split; only 1: destruct l; only 1: reflexivity; only 1: firstorder  discriminate; only 1: destruct l; only 1: reflexivity; only 1: congruence).	1.3081009388	2599
Coq.Lists.List.hd_error_nil	40	0	search with cache (only 1: reflexivity).	0.00510406494141	1
Coq.Lists.List.hd_error_cons	40	1.2.1	search with cache (only 1: intros; only 1: simpl; only 1: reflexivity).	0.00712299346924	7
Coq.Lists.List.in_eq	40	1.4.2.2	search with cache (only 1: intros n; only 1: intros; only 1: simpl; only 1: now left).	0.0490651130676	225
Coq.Lists.List.in_cons	40	0.0	search with cache (only 1: simpl; only 1: auto).	0.00578212738037	2
Coq.Lists.List.not_in_cons	40	18.5	search with cache (only 1: simpl; only 1: now intuition).	0.867063999176	1140
Coq.Lists.List.in_nil	40	0.0	search with cache (only 1: simpl; only 1: tauto).	0.00588893890381	2
Coq.Lists.List.in_split	40
Coq.Lists.List.in_inv	40	0	search with cache (only 1: auto).	0.0046980381012	1
Coq.Lists.List.in_dec	40
Coq.Lists.List.app_cons_not_nil	40
Coq.Lists.List.app_nil_l	40	0.0.0	search with cache (only 1: induction l as [| a tail]; only 1: reflexivity; only 1: reflexivity).	0.00807881355286	3
Coq.Lists.List.app_nil_r	40
Coq.Lists.List.app_nil_end	40	1.0.0.0.0.1	search with cache (only 1: induction l; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: f_equal; only 1: auto).	0.0106317996979	8
Coq.Lists.List.app_assoc	40	1.16.1.1.2.20	search with cache (only 1: induction l; only 1: auto; only 1: simpl; only 1: intros; only 1: f_equal; only 1: auto).	9.85970401764	33677
Coq.Lists.List.app_assoc_reverse	40	1.0.0.0.0.0.0	search with cache (only 1: intros l m n; only 1: induction l; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: f_equal; only 1: auto).	0.0192341804504	14
Coq.Lists.List.app_comm_cons	40	0.1.0	search with cache (only 1: intros l m n; only 1: simpl; only 1: f_equal).	0.00904297828674	4
Coq.Lists.List.app_eq_nil	40	3.0.3.1	search with cache (only 1: induction l; only 1: intros a r; only 1: firstorder  discriminate; only 1: firstorder  discriminate).	0.0398190021515	49
Coq.Lists.List.app_eq_unit	40
Coq.Lists.List.app_inj_tail	40
Coq.Lists.List.app_length	40	9.0.1.1.6.6	search with cache (only 1: intros; only 1: induction l; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: auto).	2.63214802742	4015
Coq.Lists.List.in_app_or	40	13.0.1.0.2.5	search with cache (only 1: intros l m n; only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: tauto).	6.04762196541	12821
Coq.Lists.List.in_or_app	40
Coq.Lists.List.in_app_iff	40	5.0.8.0.0.0	search with cache (only 1: intros l m a; only 1: elim l; only 1: simpl; only 1: tauto; only 1: simpl; only 1: RelationClasses.simpl_relation).	2.72601389885	6146
Coq.Lists.List.app_inv_head	40
Coq.Lists.List.app_inv_tail	40
Coq.Lists.List.nth_in_or_default	40
Coq.Lists.List.nth_S_cons	40	0.0	search with cache (only 1: simpl; only 1: auto).	0.00563883781433	2
Coq.Lists.List.nth_default_eq	40
Coq.Lists.List.nth_In	40
Coq.Lists.List.In_nth	40
Coq.Lists.List.nth_overflow	40	12.0.3.2.2.6.0.0.0.0.3	search with cache (only 1: intros n l d; only 1: revert n; only 1: induction l; only 1: intros [| ] ?; only 1: trivial; only 1: inversion_clear H; only 1: induction n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: auto with arith).	38.5208981037	91111
Coq.Lists.List.nth_indep	40	0.0.0.0.0.2.0.1	search with cache (only 1: induction l as [| a l IH]; only 1: easy; only 1: intros [| n]; only 1: intros n m; only 1: simpl; only 1: auto with arith; only 1: simpl; only 1: auto with arith).	0.48188996315	520
Coq.Lists.List.app_nth1	40	1.0.0.0.10.0.0	search with cache (only 1: induction l; only 1: inversion 1; only 1: induction n; only 1: simpl; only 1: auto with arith; only 1: simpl; only 1: auto with arith).	6.60134315491	8319
Coq.Lists.List.app_nth2	40
Coq.Lists.List.nth_split	40
Coq.Lists.List.nth_error_In	40
Coq.Lists.List.In_nth_error	40
Coq.Lists.List.nth_error_None	40
Coq.Lists.List.nth_error_Some	40
Coq.Lists.List.nth_error_split	40	0.32	search with cache (only 1: fix gcd_divide 1; only 1: auto).	38.0520861149	56464
Coq.Lists.List.nth_error_app1	40	1.0.0.0.1.0.0.0	search with cache (only 1: revert n; only 1: induction l; only 1: inversion 1; only 1: destruct n; only 1: simpl; only 1: auto with arith; only 1: simpl; only 1: auto with arith).	0.0201969146729	11
Coq.Lists.List.nth_error_app2	40	3.0.1.0.1.0.0.0.1.0.0	search with cache (only 1: revert n; only 1: induction l; only 1: destruct n; only 1: simpl; only 1: auto; only 1: auto; only 1: destruct n; only 1: simpl; only 1: now auto with arith; only 1: simpl; only 1: auto with arith).	2.85805892944	3728
Coq.Lists.List.nth_error_nth	40
Coq.Lists.List.nth_error_nth'	40	1.0.3.0.0.0	search with cache (only 1: induction l; only 1: inversion 1; only 1: intros [| n] d d'; only 1: auto; only 1: simpl; only 1: auto with arith).	0.020574092865	20
Coq.Lists.List.remove_In	40
Coq.Lists.List.app_removelast_last	40
Coq.Lists.List.exists_last	40
Coq.Lists.List.removelast_app	40
Coq.Lists.List.count_occ_In	40
Coq.Lists.List.count_occ_not_In	40
Coq.Lists.List.count_occ_nil	40	11	search with cache (only 1: auto).	0.0149781703949	54
Coq.Lists.List.count_occ_inv_nil	40
Coq.Lists.List.count_occ_cons_eq	40
Coq.Lists.List.count_occ_cons_neq	40	0.1.0	search with cache (only 1: intros H; only 1: simpl; only 1: now destruct (eq_dec x y)).	0.0106270313263	4
Coq.Lists.List.rev_app_distr	40
Coq.Lists.List.rev_unit	40	3.14.0.2.1.21	search with cache (only 1: induction l; only 1: auto; only 1: intro y; only 1: simpl; only 1: rewrite (IHl y); only 1: auto).	12.3844609261	39306
Coq.Lists.List.rev_involutive	40
Coq.Lists.List.in_rev	40
Coq.Lists.List.rev_length	40
Coq.Lists.List.rev_nth	40
Coq.Lists.List.rev_append_rev	40
Coq.Lists.List.rev_alt	40
Coq.Lists.List.rev_list_ind	40	1.1.0.3	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: auto).	0.0276148319244	47
Coq.Lists.List.rev_ind	40
Coq.Lists.List.concat_nil	40	1	search with cache (only 1: reflexivity).	0.00624799728394	2
Coq.Lists.List.concat_cons	40	0	search with cache (only 1: auto).	0.00534296035767	1
Coq.Lists.List.concat_app	40
Coq.Lists.List.list_eq_dec	40
Coq.Lists.List.map_cons	40	0	search with cache (only 1: auto).	0.00564408302307	1
Coq.Lists.List.in_map	40	5.0.3.0.0.5.1.0.0.1	search with cache (only 1: induction l; only 1: intros a H; only 1: inversion_clear H; only 1: intros; only 1: elim H; only 1: simpl; only 1: destruct 1; only 1: auto; only 1: simpl; only 1: auto).	11.7239468098	25104
Coq.Lists.List.in_map_iff	40	5.7.4.6	search with cache (only 1: intros; only 1: induction l; only 1: firstorder  (subst; auto); only 1: firstorder  (subst; auto)).	4.75604391098	9133
Coq.Lists.List.map_length	40	0.0.0.0.1	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.00970697402954	6
Coq.Lists.List.map_nth	40	0.0.0.0.1.0.0.0.3.0.0.3	search with cache (only 1: intros; only 1: revert n; only 1: induction l; only 1: intros; only 1: destruct n; only 1: trivial; only 1: trivial; only 1: intros [| n]; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: auto).	1.70306587219	2589
Coq.Lists.List.map_nth_error	40
Coq.Lists.List.map_app	40	0.2.0.0.1.0.0.0	search with cache (only 1: intros l1; only 1: induction l1 as [| x l1 IH]; only 1: simpl; only 1: reflexivity; only 1: intros l2; only 1: simpl; only 1: rewrite IH; only 1: auto).	0.220886945724	227
Coq.Lists.List.map_rev	40
Coq.Lists.List.map_eq_nil	40	1.0.2	search with cache (only 1: destruct l as [| x l]; only 1: auto; only 1: discriminate).	0.00869607925415	6
Coq.Lists.List.count_occ_map	40
Coq.Lists.List.in_flat_map	40
Coq.Lists.List.flat_map_concat_map	40	0.4.0.0.0.4	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite IHl; only 1: auto).	0.206732034683	377
Coq.Lists.List.concat_map	40	1.0.12.0.0.0.0	search with cache (only 1: intros A B f l; only 1: induction l as [| x l IH]; only 1: reflexivity; only 1: simpl; only 1: rewrite map_app; only 1: rewrite IH; only 1: reflexivity).	2.38105893135	4093
Coq.Lists.List.map_id	40	1.7.0.0.0.4	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite IHl; only 1: auto).	1.17518305779	2714
Coq.Lists.List.map_map	40	0.1.0.0.3	search with cache (only 1: induction l; only 1: auto; only 1: simpl; only 1: rewrite IHl; only 1: auto).	0.0378110408783	43
Coq.Lists.List.map_ext_in	40
Coq.Lists.List.ext_in_map	40
Coq.Lists.List.map_ext_in_iff	40
Coq.Lists.List.map_ext	40	1.0.8.0.0.0	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: apply map_ext_in; only 1: simpl; only 1: auto).	0.900200128555	1294
Coq.Lists.List.fold_left_app	40	0.0.0.1	search with cache (only 1: induction l; only 1: auto; only 1: simpl; only 1: auto).	0.0104908943176	5
Coq.Lists.List.fold_left_length	40
Coq.Lists.List.fold_right_app	40	0.4.1.0.0.0.0	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: rewrite IHl; only 1: auto).	0.775429010391	583
Coq.Lists.List.fold_left_rev_right	40
Coq.Lists.List.fold_symmetric	40
Coq.Lists.List.existsb_exists	40	2.15	search with cache (only 1: fix even_spec 1; only 1: intuition).	5.54367804527	4876
Coq.Lists.List.existsb_nth	40
Coq.Lists.List.existsb_app	40
Coq.Lists.List.forallb_forall	40	3.13	search with cache (only 1: fix even_spec 1; only 1: intuition).	14.2459721565	4668
Coq.Lists.List.forallb_app	40	2.1.0.1.0.0.0.0	search with cache (only 1: induction l1; only 1: intros l2; only 1: simpl; only 1: solve [ auto ]; only 1: simpl; only 1: case (f a); only 1: solve [ auto ]; only 1: trivial).	0.713541030884	920
Coq.Lists.List.filter_In	40
Coq.Lists.List.filter_app	40	1.1.0.0.7.0.0.0.11	search with cache (only 1: induction l; only 1: simpl; only 1: solve [ auto ]; only 1: simpl; only 1: case (f a); only 1: simpl; only 1: f_equal; only 1: auto; only 1: auto).	1.78294420242	3348
Coq.Lists.List.concat_filter_map	40
Coq.Lists.List.find_some	40	0.0.6.0.0.0.13	search with cache (only 1: induction l; only 1: simpl; only 1: easy; only 1: simpl; only 1: case_eq (f a); only 1: intuition congruence; only 1: intuition congruence).	3.11876797676	4012
Coq.Lists.List.find_none	40
Coq.Lists.List.partition_cons1	40
Coq.Lists.List.partition_cons2	40	1.0	search with cache (only 1: simpl; only 1: now intros -> ->).	0.00828289985657	3
Coq.Lists.List.partition_length	40
Coq.Lists.List.partition_inv_nil	40
Coq.Lists.List.elements_in_partition	40
Coq.Lists.List.filter_map	40
Coq.Lists.List.filter_ext_in	40
Coq.Lists.List.ext_in_filter	40
Coq.Lists.List.filter_ext_in_iff	40	0.0.1.0.1	search with cache (only 1: split; only 1: rewrite filter_map; only 1: apply ext_in_map; only 1: rewrite filter_map; only 1: apply map_ext_in).	0.0206880569458	7
Coq.Lists.List.filter_ext	40	0.0.0.0	search with cache (only 1: intros f g l H; only 1: rewrite filter_map; only 1: apply map_ext_in; only 1: auto).	0.0104079246521	4
Coq.Lists.List.in_split_l	40
Coq.Lists.List.in_split_r	40	0.0.1.0.4.0.1.2.0.0.1.0.0	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: destruct a; only 1: destruct (split l); only 1: simpl in *; only 1: destruct p; only 1: destruct H; only 1: injection H; only 1: auto; only 1: auto).	28.97220397	37714
Coq.Lists.List.split_nth	40
Coq.Lists.List.split_length_l	40
Coq.Lists.List.split_length_r	40	0.0.0.1.0.0.0.0	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: destruct a; only 1: destruct (split l); only 1: simpl; only 1: auto).	0.0159530639648	9
Coq.Lists.List.split_combine	40	0.4.1.2.15.1.0.1.2	search with cache (only 1: induction l as [| a l IHl]; only 1: simpl; only 1: auto; only 1: simpl; only 1: destruct a; only 1: destruct (split l); only 1: simpl; only 1: rewrite IHl; only 1: auto).	12.2992248535	45397
Coq.Lists.List.combine_split	40
Coq.Lists.List.in_combine_l	40
Coq.Lists.List.in_combine_r	40	0.4.0.3.2.0.1.0	search with cache (only 1: induction l; only 1: firstorder  (subst; auto); only 1: destruct l'; only 1: auto; only 1: firstorder  (subst; auto); only 1: simpl; only 1: injection H; only 1: auto).	3.50081896782	4879
Coq.Lists.List.combine_length	40	0.0.1.0.0.0.0.0.0	search with cache (only 1: induction l, l'; only 1: simpl; only 1: Nat.order_nz; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.018611907959	10
Coq.Lists.List.combine_nth	40	0.0.0.0.3.1.0.1.0.0.0.1.0.0.0.3.0	search with cache (only 1: induction l, l'; only 1: destruct n; only 1: simpl; only 1: intros; only 1: auto; only 1: simpl; only 1: intros; only 1: auto; only 1: simpl; only 1: discriminate; only 1: simpl; only 1: discriminate; only 1: destruct n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	37.2530958652	68601
Coq.Lists.List.in_prod_aux	40	1.1.0	search with cache (only 1: induction l; only 1: firstorder  (subst; auto); only 1: firstorder  (subst; auto)).	0.0220050811768	12
Coq.Lists.List.in_prod	40
Coq.Lists.List.in_prod_iff	40
Coq.Lists.List.prod_length	40
Coq.Lists.List.lel_refl	40
Coq.Lists.List.lel_trans	40	9.9.19.0	search with cache (only 1: unfold lel; only 1: induction n; only 1: Nat.order'; only 1: Nat.order').	17.4417779446	50924
Coq.Lists.List.lel_cons_cons	40	0.0.1	search with cache (only 1: unfold lel; only 1: simpl; only 1: auto with arith).	0.0119500160217	4
Coq.Lists.List.lel_cons	40	0.0.0	search with cache (only 1: unfold lel; only 1: simpl; only 1: auto with arith).	0.00629591941833	3
Coq.Lists.List.lel_tail	40	0.0.0	search with cache (only 1: unfold lel; only 1: simpl; only 1: auto with arith).	0.00620198249817	3
Coq.Lists.List.lel_nil	40
Coq.Lists.List.incl_refl	40	1	search with cache (only 1: auto).	0.00553107261658	2
Coq.Lists.List.incl_tl	40	7.3	search with cache (only 1: intros; only 1: intuition).	0.0515339374542	88
Coq.Lists.List.incl_tran	40	0	search with cache (only 1: auto).	0.0069751739502	1
Coq.Lists.List.incl_appl	40	6.2	search with cache (only 1: intros l m a; only 1: auto using in_app_or, in_or_app).	0.0189189910889	14
Coq.Lists.List.incl_appr	40	0	search with cache (only 1: auto with datatypes).	0.0115721225739	1
Coq.Lists.List.incl_cons	40	5.3	search with cache (only 1: intros; only 1: firstorder  (subst; auto)).	0.0189399719238	13
Coq.Lists.List.incl_app	40
Coq.Lists.List.firstn_nil	40	0.0.0.1	search with cache (only 1: destruct n; only 1: auto; only 1: simpl; only 1: auto).	0.00855302810669	5
Coq.Lists.List.firstn_cons	40	1.0	search with cache (only 1: simpl; only 1: auto).	0.00611186027527	3
Coq.Lists.List.firstn_all	40	4.0.0.7	search with cache (only 1: induction l as [| x l IH]; only 1: now simpl; only 1: simpl; only 1: now rewrite IH).	0.0713350772858	151
Coq.Lists.List.firstn_all2	40
Coq.Lists.List.firstn_O	40	0	search with cache (only 1: now simpl).	0.00549292564392	1
Coq.Lists.List.firstn_le_length	40	0.0.1.0.0.0.0	search with cache (only 1: induction n as [| k iHk]; only 1: intro; only 1: auto with arith; only 1: destruct l as [| x xs]; only 1: auto with arith; only 1: simpl; only 1: auto with arith).	0.0204799175262	14
Coq.Lists.List.firstn_length_le	40	0.0.3.0.4.2.1.3.2	search with cache (only 1: induction l; only 1: destruct n; only 1: auto; only 1: now rewrite <- ?Nat.succ_le_mono; only 1: destruct n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto with arith).	3.96022510529	6814
Coq.Lists.List.firstn_app	40	1.3.0.0.1.0.0	search with cache (only 1: induction n; only 1: auto; only 1: intros [| a l] H; only 1: auto; only 1: simpl; only 1: f_equal; only 1: auto with arith).	0.674096822739	571
Coq.Lists.List.firstn_app_2	40
Coq.Lists.List.firstn_firstn	40
Coq.Lists.List.firstn_skipn_comm	40
Coq.Lists.List.skipn_firstn_comm	40
Coq.Lists.List.skipn_O	40	0	search with cache (only 1: auto).	0.00539398193359	1
Coq.Lists.List.skipn_nil	40	0.0.0.1	search with cache (only 1: intros; only 1: induction n; only 1: now simpl; only 1: now simpl).	0.00890398025513	5
Coq.Lists.List.skipn_cons	40	0	search with cache (only 1: now simpl).	0.00571203231812	1
Coq.Lists.List.skipn_none	40	2.0.1.0.0.7.3	search with cache (only 1: intros; only 1: destruct l as [| a l']; only 1: auto; only 1: simpl; only 1: elim l'; only 1: auto; only 1: auto).	0.322205066681	430
Coq.Lists.List.skipn_all2	40	3.0.0.1.2.1.0	search with cache (only 1: induction n as [| k iHk]; only 1: now induction l; only 1: simpl; only 1: destruct l as [| x xs]; only 1: simpl; only 1: now reflexivity; only 1: auto with arith).	1.70346498489	1570
Coq.Lists.List.firstn_skipn	40	3.0.0.0.2.0.6	search with cache (only 1: induction n as [| k iHk]; only 1: reflexivity; only 1: destruct l as [| x xs]; only 1: auto; only 1: simpl; only 1: f_equal; only 1: auto).	6.02835988998	8678
Coq.Lists.List.firstn_length	40	0.0.0.0.1.0.11	search with cache (only 1: induction n; only 1: auto; only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	3.68879389763	6258
Coq.Lists.List.skipn_length	40	0.0.0.3.0.0.0.0.1.1	search with cache (only 1: induction n as [| k iHk]; only 1: destruct l; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: destruct l; only 1: auto; only 1: simpl; only 1: auto).	0.664976835251	1049
Coq.Lists.List.skipn_all	40	4	search with cache (only 1: now induction l).	0.00861310958862	5
Coq.Lists.List.skipn_app	40	0.0.0.4.0.0.0.0.0	search with cache (only 1: induction n as [| k iHk]; only 1: intros l1 l2; only 1: now simpl; only 1: intros l1 l2; only 1: destruct l1 as [| x xs]; only 1: now rewrite 2!app_nil_l, <- minus_n_O; only 1: rewrite <- app_comm_cons; only 1: simpl; only 1: apply iHk).	0.905829191208	1198
Coq.Lists.List.firstn_skipn_rev	40
Coq.Lists.List.firstn_rev	40
Coq.Lists.List.skipn_rev	40
Coq.Lists.List.removelast_firstn	40
Coq.Lists.List.firstn_removelast	40
Coq.Lists.List.combine_nil	40	3	search with cache (only 1: now intros []).	0.00703406333923	4
Coq.Lists.List.combine_firstn_l	40	0.2.0.2.1.0.0.3	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: destruct l'; only 1: auto; only 1: simpl; only 1: f_equal; only 1: auto).	1.13744592667	1562
Coq.Lists.List.combine_firstn_r	40	1.0.0.0.0.0.0.0.0.0.0.7.0	search with cache (only 1: induction l as [| x l IHl]; only 1: destruct l'; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: intros l'; only 1: destruct l' as [| x' l']; only 1: reflexivity; only 1: simpl; only 1: specialize IHl with (l' := l'); only 1: rewrite <- IHl; only 1: reflexivity).	5.60973310471	9206
Coq.Lists.List.combine_firstn	40
Coq.Lists.List.Add_app	40
Coq.Lists.List.Add_split	40
Coq.Lists.List.Add_in	40
Coq.Lists.List.Add_length	40
Coq.Lists.List.Add_inv	40
Coq.Lists.List.incl_Add_inv	40
Coq.Lists.List.NoDup_Add	40
Coq.Lists.List.NoDup_remove	40
Coq.Lists.List.NoDup_remove_1	40
Coq.Lists.List.NoDup_remove_2	40	0.0	search with cache (only 1: apply NoDup_Add; only 1: apply Add_app).	0.00675511360168	2
Coq.Lists.List.NoDup_cons_iff	40	1.0.0.0.0	search with cache (only 1: split; only 1: inversion_clear 1; only 1: now split; only 1: inversion_clear 1; only 1: now constructor).	0.0139429569244	6
Coq.Lists.List.nodup_fixed_point	40
Coq.Lists.List.nodup_In	40
Coq.Lists.List.NoDup_nodup	40
Coq.Lists.List.nodup_inv	40
Coq.Lists.List.NoDup_count_occ	40
Coq.Lists.List.NoDup_count_occ'	40
Coq.Lists.List.NoDup_nth_error	40
Coq.Lists.List.NoDup_nth	40
Coq.Lists.List.NoDup_incl_length	40
Coq.Lists.List.NoDup_length_incl	40
Coq.Lists.List.NoDup_map_inv	40
Coq.Lists.List.seq_length	40
Coq.Lists.List.seq_nth	40
Coq.Lists.List.seq_shift	40	2.1.6.0.0.2.7.11	search with cache (only 1: intro n; only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: intro m; only 1: f_equal; only 1: auto).	8.75862812996	18973
Coq.Lists.List.in_seq	40
Coq.Lists.List.seq_NoDup	40
Coq.Lists.List.seq_app	40
Coq.Lists.List.Exists_exists	40	0.12.0.12.0	search with cache (only 1: split; only 1: fix gcd_divide 1; only 1: auto; only 1: fix gcd_divide 1; only 1: auto).	6.51903891563	13461
Coq.Lists.List.Exists_nil	40	1.0	search with cache (only 1: intuition; only 1: inversion_clear H).	0.0137531757355	3
Coq.Lists.List.Exists_cons	40	1.1.12.7	search with cache (only 1: intuition; only 1: inversion_clear H; only 1: auto; only 1: auto).	0.69725894928	947
Coq.Lists.List.Exists_dec	40
Coq.Lists.List.Forall_forall	40	0.0.1.2.1.3.0.1.0.0	search with cache (only 1: split; only 1: induction 1; only 1: firstorder; only 1: firstorder; only 1: subst; only 1: auto; only 1: induction l; only 1: firstorder; only 1: simpl; only 1: auto).	3.62773799896	6437
Coq.Lists.List.Forall_inv	40	1.3.0.2.8	search with cache (only 1: destruct l as [| x xs]; only 1: inversion 1; only 1: auto; only 1: inversion 1; only 1: auto).	0.315714836121	447
Coq.Lists.List.Forall_rect	40
Coq.Lists.List.Forall_dec	40
Coq.Lists.List.Forall_inv_tail	40	0.1.0	search with cache (only 1: intros; only 1: inversion H; only 1: auto).	0.00962686538696	4
Coq.Lists.List.Exists_impl	40	0.0.30.5.5.2	search with cache (only 1: intro Pdec; only 1: intros f g H l; only 1: induction l as [| a l' Hrec]; only 1: left; only 1: auto; only 1: now apply Exists_cons_tl).	37.5910749435	112481
Coq.Lists.List.Forall_Exists_neg	40
Coq.Lists.List.Exists_Forall_neg	40
Coq.Lists.List.neg_Forall_Exists_neg	40
Coq.Lists.List.Forall_Exists_dec	40	0.4.4.3.0.0.2.2.0.1.1.0	search with cache (only 1: intro Pdec; only 1: induction l as [| a l' Hrec]; only 1: left; only 1: apply Forall_nil; only 1: destruct Hrec as [Hl'| Hl']; only 1: destruct (Pdec a) as [Ha| Ha]; only 1: left; only 1: now apply Forall_cons; only 1: right; only 1: now apply Exists_cons_hd; only 1: right; only 1: now apply Exists_cons_tl).	34.3329648972	39029
Coq.Lists.List.Forall_impl	40	0.0.0.0.3.5.0	search with cache (only 1: intros P Q H xs H0; only 1: apply Forall_forall with (l := xs); only 1: induction H0; only 1: firstorder; only 1: firstorder; only 1: subst; only 1: auto).	0.581897974014	749
Coq.Lists.List.Forall2_refl	40	2	search with cache (only 1: constructor).	0.00512290000916	3
Coq.Lists.List.Forall2_app_inv_l	40
Coq.Lists.List.Forall2_app_inv_r	40
Coq.Lists.List.Forall2_app	40	0.2.0.1.8.9	search with cache (only 1: intros P Q H xs H0; only 1: induction H0; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	1.03557991982	2976
Coq.Lists.List.ForallOrdPairs_In	40
Coq.Lists.List.ForallPairs_ForallOrdPairs	40
Coq.Lists.List.ForallOrdPairs_ForallPairs	40
Coq.Lists.List.repeat_length	40	1.0.0.19	search with cache (only 1: induction n as [| n IH]; only 1: auto; only 1: simpl; only 1: auto).	0.728451013565	1532
Coq.Lists.List.repeat_spec	40	1.1.2.1.4	search with cache (only 1: induction n as [| k Hrec]; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).	0.083211183548	203
Coq.Lists.SetoidPermutation.Equivalence_instance_0	40
Coq.Lists.SetoidPermutation.PermutationA_cons	40	0.1	search with cache (only 1: repeat intro; only 1: auto).	0.00853586196899	3
Coq.Lists.SetoidPermutation.PermutationA_app_head	40	0.1.1.0.1.0	search with cache (only 1: intro; only 1: induction l; only 1: simpl; only 1: intuition; only 1: repeat rewrite <- app_comm_cons; only 1: intuition).	0.0187561511993	9
Coq.Lists.SetoidPermutation.PermutationA_app	40
Coq.Lists.SetoidPermutation.PermutationA_app_tail	40
Coq.Lists.SetoidPermutation.PermutationA_cons_append	40	0.0.1.1.1.41	search with cache (only 1: induction l; only 1: repeat constructor; only 1: intuition; only 1: simpl; only 1: rewrite <- IHl; only 1: auto).	7.01080012321	6206
Coq.Lists.SetoidPermutation.PermutationA_app_comm	40
Coq.Lists.SetoidPermutation.PermutationA_cons_app	40
Coq.Lists.SetoidPermutation.PermutationA_middle	40	0	search with cache (only 1: now rewrite app_comm_cons, (PermutationA_cons_append l₁ x), <- app_assoc).	0.0142970085144	1
Coq.Lists.SetoidPermutation.PermutationA_equivlistA	40
Coq.Lists.SetoidPermutation.NoDupA_equivlistA_PermutationA	40
Coq.Lists.SetoidPermutation.Permutation_eqlistA_commute	40
Coq.Lists.SetoidPermutation.PermutationA_decompose	40
Coq.Lists.SetoidPermutation.Permutation_PermutationA	40
Coq.Lists.SetoidPermutation.eqlistA_PermutationA	40	0.0.0	search with cache (only 1: induction 1; only 1: intuition; only 1: auto).	0.00999402999878	3
Coq.Lists.SetoidPermutation.NoDupA_equivlistA_decompose	40
Coq.Lists.SetoidPermutation.PermutationA_preserves_NoDupA	40
Coq.Lists.StreamMemo.memo_get_correct	40
Coq.Lists.StreamMemo.imemo_get_correct	40
Coq.Lists.StreamMemo.dmemo_get_correct	40
Coq.Lists.StreamMemo.dimemo_get_correct	40
Coq.Lists.SetoidList.InA_altdef	40	0.0.1.0.0.1.2.0	search with cache (only 1: split; only 1: induction 1; only 1: auto; only 1: auto; only 1: induction 1 as [| a l [| ]]; only 1: auto; only 1: auto using Sorted, LocallySorted, HdRel; only 1: auto using Sorted, LocallySorted, HdRel).	0.30951499939	395
Coq.Lists.SetoidList.InA_cons	40	0.0.1.0.0.1.0	search with cache (only 1: split; only 1: inversion 1; only 1: auto; only 1: auto; only 1: inversion 1; only 1: auto; only 1: auto).	0.0170669555664	9
Coq.Lists.SetoidList.InA_nil	40	3.0	search with cache (only 1: intuition; only 1: easy).	0.0203149318695	5
Coq.Lists.SetoidList.InA_alt	40	0.0.0.0.3.0.0.1.0	search with cache (only 1: split; only 1: induction 1; only 1: firstorder; only 1: firstorder; only 1: induction l; only 1: firstorder; only 1: firstorder; only 1: subst; only 1: firstorder).	0.904513835907	776
Coq.Lists.SetoidList.NoDupA_altdef	40
Coq.Lists.SetoidList.incl_nil	40	9	search with cache (only 1: now simpl).	0.0276379585266	21
Coq.Lists.SetoidList.eqlistA_altdef	40	0.0.0.0.0.0.0	search with cache (only 1: split; only 1: induction 1; only 1: constructor; only 1: auto; only 1: induction 1; only 1: constructor; only 1: auto).	0.01402592659	7
Coq.Lists.SetoidList.equivlist_equiv	40
Coq.Lists.SetoidList.eqlistA_equiv	40
Coq.Lists.SetoidList.eqlistA_equivlistA	40
Coq.Lists.SetoidList.InA_compat	40
Coq.Lists.SetoidList.InA_eqA	40	0.9.1	search with cache (only 1: intros x y z H; only 1: rewrite 2!InA_alt; only 1: firstorder).	0.444878101349	125
Coq.Lists.SetoidList.In_InA	40	0.5.1	search with cache (only 1: firstorder; only 1: rewrite InA_alt; only 1: firstorder).	0.031867980957	9
Coq.Lists.SetoidList.InA_split	40
Coq.Lists.SetoidList.InA_app	40
Coq.Lists.SetoidList.InA_app_iff	40
Coq.Lists.SetoidList.InA_rev	40
Coq.Lists.SetoidList.InA_singleton	40	0.2.0	search with cache (only 1: intuition; only 1: invlist InA; only 1: auto).	0.0187540054321	5
Coq.Lists.SetoidList.InA_double_head	40	2.2	search with cache (only 1: rewrite 2!InA_cons; only 1: tauto).	0.100953102112	6
Coq.Lists.SetoidList.InA_permute_heads	40	0.0	search with cache (only 1: rewrite !InA_cons; only 1: tauto).	0.0354158878326	2
Coq.Lists.SetoidList.InA_app_idem	40
Coq.Lists.SetoidList.NoDupA_app	40
Coq.Lists.SetoidList.NoDupA_rev	40
Coq.Lists.SetoidList.NoDupA_split	40
Coq.Lists.SetoidList.NoDupA_swap	40
Coq.Lists.SetoidList.NoDupA_singleton	40	0.0.2.4	search with cache (only 1: constructor; only 1: intuition; only 1: invlist InA; only 1: auto).	0.0273458957672	10
Coq.Lists.SetoidList.equivlistA_cons_proper	40
Coq.Lists.SetoidList.equivlistA_app_proper	40
Coq.Lists.SetoidList.equivlistA_cons_nil	40
Coq.Lists.SetoidList.equivlistA_nil_eq	40
Coq.Lists.SetoidList.equivlistA_double_head	40	1.0.0.0	search with cache (only 1: red; only 1: intros; only 1: rewrite 2!InA_cons; only 1: tauto).	0.0261008739471	5
Coq.Lists.SetoidList.equivlistA_permute_heads	40	0.1.0	search with cache (only 1: intro; only 1: rewrite !InA_cons; only 1: tauto).	0.0379590988159	4
Coq.Lists.SetoidList.equivlistA_app_idem	40	0.0.0.1	search with cache (only 1: red; only 1: intros; only 1: rewrite InA_app_iff; only 1: tauto).	0.0128359794617	5
Coq.Lists.SetoidList.equivlistA_NoDupA_split	40
Coq.Lists.SetoidList.fold_right_eqlistA	40
Coq.Lists.SetoidList.ForallOrdPairs_inclA	40
Coq.Lists.SetoidList.fold_right_commutes_restr	40
Coq.Lists.SetoidList.fold_right_equivlistA_restr	40
Coq.Lists.SetoidList.fold_right_add_restr	40
Coq.Lists.SetoidList.fold_right_commutes	40	0.0.1.3.2.2.0.5.0.0	search with cache (only 1: induction s1; only 1: simpl in *; only 1: auto with relations; only 1: simpl; only 1: intros; only 1: transitivity (f a (f x (fold_right f i (s1 ++ s2)))); only 1: apply Comp; only 1: auto; only 1: auto; only 1: auto).	22.389040947	8091
Coq.Lists.SetoidList.fold_right_equivlistA	40
Coq.Lists.SetoidList.fold_right_add	40
Coq.Lists.SetoidList.fold_right_eqlistA2	40	0.0.0.0.0.0.6.17.0.6	search with cache (only 1: intros x y z H; only 1: revert z; only 1: intros b Hb; only 1: induction 1; only 1: simpl; only 1: auto with relations; only 1: simpl; only 1: apply Comp; only 1: auto; only 1: auto).	1.3616361618	3287
Coq.Lists.SetoidList.fold_right_commutes_restr2	40
Coq.Lists.SetoidList.fold_right_equivlistA_restr2	40
Coq.Lists.SetoidList.fold_right_add_restr2	40
Coq.Lists.SetoidList.fold_right_commutes2	40
Coq.Lists.SetoidList.fold_right_equivlistA2	40
Coq.Lists.SetoidList.fold_right_add2	40
Coq.Lists.SetoidList.InA_dec	40
Coq.Lists.SetoidList.removeA_filter	40
Coq.Lists.SetoidList.removeA_InA	40
Coq.Lists.SetoidList.removeA_NoDupA	40
Coq.Lists.SetoidList.removeA_equivlistA	40
Coq.Lists.SetoidList.InfA_ltA	40	0.0.8.9.5.0.13	search with cache (only 1: induction l; only 1: constructor; only 1: constructor; only 1: inv; only 1: transitivity y; only 1: auto; only 1: auto).	23.053068161	7054
Coq.Lists.SetoidList.InfA_compat	40
Coq.Lists.SetoidList.InfA_eqA	40	0.6.22	search with cache (only 1: intro; only 1: rewrite <- H; only 1: eauto).	1.52657985687	1394
Coq.Lists.SetoidList.SortA_InfA_InA	40
Coq.Lists.SetoidList.In_InfA	40	0.3.0.0.0	search with cache (only 1: destruct l; only 1: constructor; only 1: constructor; only 1: simpl in *; only 1: auto).	0.0122578144073	8
Coq.Lists.SetoidList.InA_InfA	40	3.0.0.0	search with cache (only 1: destruct l; only 1: constructor; only 1: constructor; only 1: eauto).	0.0132741928101	7
Coq.Lists.SetoidList.InfA_alt	40
Coq.Lists.SetoidList.InfA_app	40	1.4.1.1.0.1.0.1	search with cache (only 1: induction l1; only 1: simpl; only 1: intros; only 1: intuition; only 1: simpl in *; only 1: intuition; only 1: inv; only 1: auto).	1.94150805473	2176
Coq.Lists.SetoidList.SortA_app	40
Coq.Lists.SetoidList.SortA_NoDupA	40
Coq.Lists.SetoidList.eqlistA_length	40	1.0.1.18	search with cache (only 1: induction 1; only 1: constructor; only 1: simpl; only 1: auto).	1.54151391983	2988
Coq.Lists.SetoidList.app_eqlistA_compat	40	2.2.5.0.0.2.1.2.2.2	search with cache (only 1: red; only 1: red; only 1: induction 1; only 1: simpl; only 1: induction 1; only 1: auto; only 1: auto; only 1: constructor; only 1: auto; only 1: auto).	10.2876319885	5940
Coq.Lists.SetoidList.eqlistA_app	40	2.0.0.0	search with cache (only 1: induction 1; only 1: auto; only 1: simpl; only 1: auto).	0.0113241672516	6
Coq.Lists.SetoidList.eqlistA_rev_app	40
Coq.Lists.SetoidList.rev_eqlistA_compat	40
Coq.Lists.SetoidList.eqlistA_rev	40	1.1.3.2.0.2	search with cache (only 1: induction 1; only 1: constructor; only 1: simpl; only 1: apply eqlistA_rev_app; only 1: auto; only 1: auto).	0.343766927719	458
Coq.Lists.SetoidList.SortA_equivlistA_eqlistA	40
Coq.Lists.SetoidList.filter_sort	40
Coq.Lists.SetoidList.filter_InA	40
Coq.Lists.SetoidList.filter_split	40	2.0.6.1.1	search with cache (only 1: induction l; only 1: auto; only 1: fix odd_spec 1; only 1: simpl; only 1: auto).	1.09654998779	1289
Coq.Lists.SetoidList.findA_NoDupA	40
Coq.NArith.BinNat.N.eq_dec	40	3.0	search with cache (only 1: decide equality; only 1: decide equality).	0.0286681652069	5
Coq.NArith.BinNat.N.discr	40
Coq.NArith.BinNat.N.peano_rect_base	40	0	search with cache (only 1: trivial).	0.00691699981689	1
Coq.NArith.BinNat.N.peano_rect_succ	40
Coq.NArith.BinNat.N.peano_rec_base	40	0	search with cache (only 1: reflexivity).	0.00565695762634	1
Coq.NArith.BinNat.N.peano_rec_succ	40	0.0.0.0.0	search with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite Pos.peano_rect_succ).	0.0111689567566	5
Coq.NArith.BinNat.N.bi_induction	40
Coq.NArith.BinNat.N.recursion_wd	40
Coq.NArith.BinNat.N.recursion_0	40	1	search with cache (only 1: trivial).	0.00596618652344	2
Coq.NArith.BinNat.N.recursion_succ	40
Coq.NArith.BinNat.N.one_succ	40	0	search with cache (only 1: trivial).	0.00558590888977	1
Coq.NArith.BinNat.N.two_succ	40	0	search with cache (only 1: trivial).	0.00563883781433	1
Coq.NArith.BinNat.N.pred_0	40	0	search with cache (only 1: trivial).	0.00577807426453	1
Coq.NArith.BinNat.N.pos_pred_spec	40	0	search with cache (only 1: auto).	0.00568890571594	1
Coq.NArith.BinNat.N.succ_pos_spec	40	0.0.2	search with cache (only 1: destruct n; only 1: reflexivity; only 1: auto).	0.00895214080811	5
Coq.NArith.BinNat.N.pos_pred_succ	40	0.0.1.0.0.0.0.0.2.1.0.2.0.2	search with cache (only 1: destruct n; only 1: reflexivity; only 1: destruct p; only 1: simpl; only 1: f_equal; only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: f_equal; only 1: trivial; only 1: trivial).	3.07496285439	4224
Coq.NArith.BinNat.N.succ_pos_pred	40
Coq.NArith.BinNat.N.pred_succ	40	3.0.0	search with cache (only 1: destruct n; only 1: reflexivity; only 1: apply Pos.pred_N_succ).	0.0173690319061	18
Coq.NArith.BinNat.N.pred_sub	40	1.0.2	search with cache (only 1: destruct n; only 1: trivial; only 1: now destruct p).	0.0117089748383	6
Coq.NArith.BinNat.N.succ_0_discr	40	0	search with cache (only 1: now destruct n).	0.0133321285248	1
Coq.NArith.BinNat.N.add_0_l	40	0.0.0	search with cache (only 1: destruct n; only 1: trivial; only 1: auto).	0.00800395011902	3
Coq.NArith.BinNat.N.add_succ_l	40
Coq.NArith.BinNat.N.sub_0_r	40	0.0.1	search with cache (only 1: destruct n; only 1: trivial; only 1: auto).	0.00833106040955	4
Coq.NArith.BinNat.N.sub_succ_r	40
Coq.NArith.BinNat.N.mul_0_l	40	0	search with cache (only 1: now destruct n).	0.00639510154724	1
Coq.NArith.BinNat.N.mul_succ_l	40
Coq.NArith.BinNat.N.eqb_eq	40
Coq.NArith.BinNat.N.ltb_lt	40
Coq.NArith.BinNat.N.leb_le	40
Coq.NArith.BinNat.N.compare_eq_iff	40
Coq.NArith.BinNat.N.compare_lt_iff	40	10	search with cache (only 1: now split).	0.159916162491	205
Coq.NArith.BinNat.N.compare_le_iff	40	2.2.3	search with cache (only 1: split; only 1: easy || now destruct 1; only 1: easy || now destruct 1).	0.16849899292	98
Coq.NArith.BinNat.N.compare_antisym	40
Coq.NArith.BinNat.N.min_l	40
Coq.NArith.BinNat.N.min_r	40
Coq.NArith.BinNat.N.max_l	40
Coq.NArith.BinNat.N.max_r	40	0.2.0.0.0.1	search with cache (only 1: unfold max, le; only 1: rewrite compare_antisym; only 1: case compare_spec; only 1: trivial; only 1: now destruct 2; only 1: trivial).	0.0941681861877	74
Coq.NArith.BinNat.N.lt_succ_r	40
Coq.NArith.BinNat.N.double_spec	40	0	search with cache (only 1: reflexivity).	0.00617098808289	1
Coq.NArith.BinNat.N.succ_double_spec	40	4	search with cache (only 1: now destruct n as [| [p| p| ]]).	0.048317193985	5
Coq.NArith.BinNat.N.double_add	40	0.1.0.1.0.1.0.4	search with cache (only 1: destruct n, m; only 1: now nzsimpl; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	8.34505605698	2245
Coq.NArith.BinNat.N.succ_double_add	40	1.0.0.0	search with cache (only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: now destruct n, m).	0.194375038147	16
Coq.NArith.BinNat.N.double_mul	40	8	search with cache (only 1: now destruct n, m).	1.04070091248	165
Coq.NArith.BinNat.N.succ_double_mul	40
Coq.NArith.BinNat.N.div2_double	40	6	search with cache (only 1: now destruct n).	0.00890302658081	7
Coq.NArith.BinNat.N.div2_succ_double	40	0	search with cache (only 1: now destruct n).	0.00665903091431	1
Coq.NArith.BinNat.N.double_inj	40
Coq.NArith.BinNat.N.succ_double_inj	40
Coq.NArith.BinNat.N.succ_double_lt	40
Coq.NArith.BinNat.N.double_lt_mono	40	2.0.1.1.1.0	search with cache (only 1: destruct n as [| n], m as [| m]; only 1: easy; only 1: easy; only 1: easy; only 1: intros H; only 1: assumption).	0.192268133163	278
Coq.NArith.BinNat.N.double_le_mono	40
Coq.NArith.BinNat.N.succ_double_lt_mono	40	2.1.1.1.0	search with cache (only 1: destruct n as [| n], m as [| m]; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.0743219852448	100
Coq.NArith.BinNat.N.succ_double_le_mono	40
Coq.NArith.BinNat.N.compare_0_r	40	0.0.5	search with cache (only 1: rewrite compare_lt_iff; only 1: apply le_ngt; only 1: apply le_0_l).	0.0176270008087	8
Coq.NArith.BinNat.N.pow_0_r	40	1	search with cache (only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l).	0.00697898864746	2
Coq.NArith.BinNat.N.pow_succ_r	40
Coq.NArith.BinNat.N.pow_neg_r	40	3.17	search with cache (only 1: intro H; only 1: false_hyp H nlt_0_r).	0.710215091705	1524
Coq.NArith.BinNat.N.square_spec	40
Coq.NArith.BinNat.N.size_log2	40
Coq.NArith.BinNat.N.size_gt	40
Coq.NArith.BinNat.N.size_le	40
Coq.NArith.BinNat.N.log2_spec	40
Coq.NArith.BinNat.N.log2_nonpos	40	0.1.1.0.1.0.9.1	search with cache (only 1: intro H; only 1: le_elim H; only 1: false_hyp H nlt_0_r; only 1: destruct n as [| [n| n| ]]; only 1: trivial; only 1: now destruct n; only 1: now destruct n; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l).	0.274196147919	408
Coq.NArith.BinNat.N.even_spec	40
Coq.NArith.BinNat.N.odd_spec	40
Coq.NArith.BinNat.N.pos_div_eucl_spec	40
Coq.NArith.BinNat.N.div_eucl_spec	40
Coq.NArith.BinNat.N.div_mod'	40
Coq.NArith.BinNat.N.div_mod	40	0.0.0	search with cache (only 1: generalize (div_eucl_spec a b); only 1: unfold div, modulo; only 1: now destruct div_eucl).	0.0109450817108	3
Coq.NArith.BinNat.N.pos_div_eucl_remainder	40
Coq.NArith.BinNat.N.mod_lt	40
Coq.NArith.BinNat.N.mod_bound_pos	40
Coq.NArith.BinNat.N.sqrtrem_sqrt	40
Coq.NArith.BinNat.N.sqrtrem_spec	40
Coq.NArith.BinNat.N.sqrt_spec	40
Coq.NArith.BinNat.N.sqrt_neg	40	0.1	search with cache (only 1: intro H; only 1: false_hyp H nlt_0_r).	0.00799608230591	3
Coq.NArith.BinNat.N.ggcd_gcd	40
Coq.NArith.BinNat.N.ggcd_correct_divisors	40
Coq.NArith.BinNat.N.gcd_divide_l	40	0.17.0.0.2.1.7	search with cache (only 1: rewrite <- Pos.ggcd_gcd; only 1: generalize (Pos.ggcd_correct_divisors a b); only 1: destruct ggcd as (g, (aa, bb)); only 1: simpl; only 1: intros (H, _); only 1: exists aa; only 1: now rewrite Pos.mul_comm).	16.5838418007	12075
Coq.NArith.BinNat.N.gcd_divide_r	40	0.11.3.0.1.0.0	search with cache (only 1: rewrite <- ggcd_gcd; only 1: generalize (ggcd_correct_divisors a b); only 1: destruct ggcd as (g, (aa, bb)); only 1: simpl; only 1: intros (_, H); only 1: exists bb; only 1: now rewrite Pos.mul_comm).	26.9473030567	16109
Coq.NArith.BinNat.N.gcd_greatest	40
Coq.NArith.BinNat.N.gcd_nonneg	40	1	search with cache (only 1: apply le_0_l).	0.0110239982605	2
Coq.NArith.BinNat.N.testbit_even_0	40	1.3.56	search with cache (only 1: destruct a as [| a]; only 1: easy; only 1: trivial).	4.05155706406	10159
Coq.NArith.BinNat.N.testbit_odd_0	40	1	search with cache (only 1: now destruct a).	0.00983190536499	2
Coq.NArith.BinNat.N.testbit_succ_r_div2	40
Coq.NArith.BinNat.N.testbit_odd_succ	40
Coq.NArith.BinNat.N.testbit_even_succ	40	0.0.1.0	search with cache (only 1: intros H; only 1: rewrite testbit_succ_r_div2 by trivial; only 1: f_equal; only 1: now destruct a).	0.013072013855	5
Coq.NArith.BinNat.N.testbit_neg_r	40	13	search with cache (only 1: now destruct n).	0.717910051346	423
Coq.NArith.BinNat.N.shiftr_succ_r	40
Coq.NArith.BinNat.N.shiftl_succ_r	40
Coq.NArith.BinNat.N.shiftr_spec	40
Coq.NArith.BinNat.N.shiftl_spec_high	40
Coq.NArith.BinNat.N.shiftl_spec_low	40
Coq.NArith.BinNat.N.div2_spec	40	0	search with cache (only 1: trivial).	0.00746893882751	1
Coq.NArith.BinNat.N.pos_lxor_spec	40
Coq.NArith.BinNat.N.lxor_spec	40
Coq.NArith.BinNat.N.pos_lor_spec	40
Coq.NArith.BinNat.N.lor_spec	40
Coq.NArith.BinNat.N.pos_land_spec	40
Coq.NArith.BinNat.N.land_spec	40
Coq.NArith.BinNat.N.pos_ldiff_spec	40
Coq.NArith.BinNat.N.ldiff_spec	40
Coq.NArith.BinNat.N.gt_lt_iff	40
Coq.NArith.BinNat.N.gt_lt	40	0.1	search with cache (only 1: unfold lt, gt; only 1: now rewrite compare_antisym, CompOpp_iff).	0.0428860187531	3
Coq.NArith.BinNat.N.lt_gt	40	0	search with cache (only 1: apply gt_lt_iff).	0.0090389251709	1
Coq.NArith.BinNat.N.ge_le_iff	40
Coq.NArith.BinNat.N.ge_le	40	0.1	search with cache (only 1: unfold le, ge; only 1: now rewrite compare_antisym, CompOpp_iff).	0.0168259143829	3
Coq.NArith.BinNat.N.le_ge	40	0	search with cache (only 1: apply ge_le_iff).	0.00944209098816	1
Coq.NArith.BinNat.N.pos_pred_shiftl_low	40
Coq.NArith.BinNat.N.pos_pred_shiftl_high	40
Coq.NArith.BinNat.N.pred_div2_up	40	0.5.1.0.2	search with cache (only 1: destruct p; only 1: simpl; only 1: apply Pos.pred_N_succ; only 1: now destruct p; only 1: trivial).	0.502902030945	231
Coq.NArith.Ndec.Peqb_complete	40	2.9	search with cache (only 1: rewrite Pos.eqb_eq; only 1: now rewrite ?Pos.max_1_r, <- ?BinInt.Pos2Z.inj_max).	0.102319002151	49
Coq.NArith.Ndec.Peqb_Pcompare	40	0.4	search with cache (only 1: rewrite ?CompOpp_iff, ?Pos.compare_eq_iff; only 1: now apply Pos.eqb_eq).	0.0368731021881	6
Coq.NArith.Ndec.Pcompare_Peqb	40	0	search with cache (only 1: now rewrite Pos.compare_eq_iff, <- Pos.eqb_eq).	0.0327899456024	1
Coq.NArith.Ndec.Neqb_Ncompare	40
Coq.NArith.Ndec.Ncompare_Neqb	40	0	search with cache (only 1: now rewrite N.compare_eq_iff, <- N.eqb_eq).	0.0302600860596	1
Coq.NArith.Ndec.Neqb_complete	40	2	search with cache (only 1: now rewrite N.eqb_eq, <- N.compare_eq_iff).	0.0417330265045	15
Coq.NArith.Ndec.Nxor_eq_true	40
Coq.NArith.Ndec.Nxor_eq_false	40
Coq.NArith.Ndec.Nodd_not_double	40
Coq.NArith.Ndec.Nnot_div2_not_double	40
Coq.NArith.Ndec.Neven_not_double_plus_one	40
Coq.NArith.Ndec.Nnot_div2_not_double_plus_one	40	0.0.3.2.10.0.10.0.1.0	search with cache (only 1: intros H; only 1: eqb2eq; only 1: contradict H; only 1: apply Nbit_faithful; only 1: subst; only 1: vm_compute; only 1: destr_bool; only 1: repeat match goal with | |- context [ match ?x with | _ => _ end ] => is_var x; destruct x end; only 1: trivial; only 1: trivial).	17.0280649662	22733
Coq.NArith.Ndec.Nbit0_neq	40	6.1.6.10	search with cache (only 1: intros; only 1: eqb2eq; only 1: intros <-; only 1: intuition).	4.98980212212	3006
Coq.NArith.Ndec.Ndiv2_eq	40	7.10	search with cache (only 1: eqb2eq; only 1: now intros <-).	0.273840904236	255
Coq.NArith.Ndec.Ndiv2_neq	40	1.0.1.0	search with cache (only 1: intros H; only 1: eqb2eq; only 1: contradict H; only 1: now subst).	0.0797221660614	6
Coq.NArith.Ndec.Ndiv2_bit_eq	40
Coq.NArith.Ndec.Ndiv2_bit_neq	40	1.0.2.3	search with cache (only 1: eqb2eq; only 1: intros H H'; only 1: contradict H; only 1: now rewrite (N.div2_odd a), (N.div2_odd a'), H, H').	0.180040836334	55
Coq.NArith.Ndec.Nneq_elim	40
Coq.NArith.Ndec.Ndouble_or_double_plus_un	40
Coq.NArith.Ndec.Nleb_alt	40
Coq.NArith.Ndec.Nleb_Nle	40
Coq.NArith.Ndec.Nleb_refl	40	9	search with cache (only 1: now rewrite Nleb_alt, N.leb_le).	0.0297639369965	11
Coq.NArith.Ndec.Nleb_antisym	40	7.0.0	search with cache (only 1: rewrite Nleb_Nle; only 1: rewrite Nleb_Nle; only 1: N.order').	0.0838189125061	43
Coq.NArith.Ndec.Nleb_trans	40	0.0.0.0	search with cache (only 1: rewrite Nleb_Nle; only 1: rewrite Nleb_Nle; only 1: rewrite Nleb_Nle; only 1: N.order').	0.0527758598328	4
Coq.NArith.Ndec.Nleb_ltb_trans	40	1.0.4.0	search with cache (only 1: rewrite !Nleb_Nle; only 1: eqb2eq; only 1: rewrite !Nleb_Nle; only 1: N.order').	0.0670340061188	9
Coq.NArith.Ndec.Nltb_leb_trans	40	1.0.5.1	search with cache (only 1: rewrite !Nleb_Nle; only 1: eqb2eq; only 1: rewrite !Nleb_Nle; only 1: N.order').	0.40098285675	149
Coq.NArith.Ndec.Nltb_trans	40	1.0.3	search with cache (only 1: eqb2eq; only 1: rewrite !Nleb_Nle; only 1: N.order').	0.288953065872	47
Coq.NArith.Ndec.Nltb_leb_weak	40	0.0.0.16	search with cache (only 1: eqb2eq; only 1: rewrite Nleb_Nle; only 1: rewrite Nleb_Nle; only 1: N.order').	1.34120297432	1689
Coq.NArith.Ndec.Nleb_double_mono	40	0.0.0.0.0.0.0.0.0.19.0.0	search with cache (only 1: rewrite Nleb_Nle; only 1: rewrite Nleb_Nle; only 1: generalize (N.div_eucl_spec a b); only 1: destruct a as [| a], b as [| b]; only 1: unfold N.div_eucl; only 1: trivial; only 1: unfold N.div_eucl; only 1: trivial; only 1: unfold N.div_eucl; only 1: trivial; only 1: unfold N.div_eucl; only 1: trivial).	10.9789848328	11217
Coq.NArith.Ndec.Nleb_double_plus_one_mono	40	1.0.0.0.0.0.0.0.0.22.0	search with cache (only 1: rewrite !Nleb_Nle; only 1: generalize (N.div_eucl_spec a b); only 1: destruct a as [| a], b as [| b]; only 1: unfold N.div_eucl; only 1: trivial; only 1: unfold N.div_eucl; only 1: trivial; only 1: unfold N.div_eucl; only 1: trivial; only 1: unfold N.div_eucl; only 1: trivial).	7.11821699142	9441
Coq.NArith.Ndec.Nleb_double_mono_conv	40	0.0.0.0.0.0.0.0.0.20.1	search with cache (only 1: rewrite !Nleb_Nle; only 1: generalize (N.div_eucl_spec a b); only 1: destruct a as [| a], b as [| b]; only 1: unfold N.div_eucl; only 1: trivial; only 1: unfold N.div_eucl; only 1: trivial; only 1: unfold N.div_eucl; only 1: trivial; only 1: unfold N.div_eucl; only 1: trivial).	6.37470912933	7905
Coq.NArith.Ndec.Nleb_double_plus_one_mono_conv	40	2.1.0.13.1.0	search with cache (only 1: unfold Nleb; only 1: rewrite !N2Nat.inj_succ_double; only 1: intro; only 1: apply leb_correct; only 1: apply (mult_S_le_reg_l 1); only 1: now apply leb_complete).	2.09933805466	1932
Coq.NArith.Ndec.Nltb_double_mono	40	0.0.0.16.1.1.0.0.3	search with cache (only 1: eqb2eq; only 1: unfold Nleb; only 1: intros; only 1: rewrite !N2Nat.inj_double; only 1: intro; only 1: apply H; only 1: apply leb_correct; only 1: apply (mult_S_le_reg_l 1); only 1: now apply leb_complete).	31.9322299957	16314
Coq.NArith.Ndec.Nltb_double_plus_one_mono	40
Coq.NArith.Ndec.Nltb_double_mono_conv	40
Coq.NArith.Ndec.Nltb_double_plus_one_mono_conv	40
Coq.NArith.Ndec.Nltb_Ncompare	40
Coq.NArith.Ndec.Ncompare_Gt_Nltb	40	0	search with cache (only 1: now rewrite N.compare_nle_iff, <- Nleb_Nle, not_true_iff_false).	0.0359718799591	1
Coq.NArith.Ndec.Ncompare_Lt_Nltb	40
Coq.NArith.Ndec.Nmin_le_1	40
Coq.NArith.Ndec.Nmin_le_2	40
Coq.NArith.Ndec.Nmin_le_3	40
Coq.NArith.Ndec.Nmin_le_4	40
Coq.NArith.Ndec.Nmin_le_5	40
Coq.NArith.Ndec.Nmin_lt_3	40
Coq.NArith.Ndec.Nmin_lt_4	40	0.1.4	search with cache (only 1: rewrite <- !not_true_iff_false, !Nleb_Nle; only 1: rewrite N.min_le_iff; only 1: auto).	0.0831518173218	35
Coq.NArith.Ndiv_def.Pdiv_eucl_remainder	40
Coq.NArith.Ndist.Nplength_infty	40	2.0.3	search with cache (only 1: induction a as [| p]; only 1: trivial; only 1: now try rewrite H).	0.0565569400787	8
Coq.NArith.Ndist.Nplength_zeros	40
Coq.NArith.Ndist.Nplength_one	40
Coq.NArith.Ndist.Nplength_first_one	40
Coq.NArith.Ndist.ni_min_idemp	40
Coq.NArith.Ndist.ni_min_comm	40
Coq.NArith.Ndist.ni_min_assoc	40
Coq.NArith.Ndist.ni_min_O_l	40	1.0.1	search with cache (only 1: simple induction d; only 1: trivial; only 1: trivial).	0.050332069397	5
Coq.NArith.Ndist.ni_min_O_r	40	0.0.0.4.0.0	search with cache (only 1: simple induction d; only 1: trivial; only 1: simpl; only 1: simple induction n; only 1: trivial; only 1: trivial).	0.0587928295135	10
Coq.NArith.Ndist.ni_min_inf_l	40	0.0.0	search with cache (only 1: simple induction d; only 1: reflexivity; only 1: trivial).	0.121603012085	3
Coq.NArith.Ndist.ni_min_inf_r	40	0.0.0	search with cache (only 1: simple induction d; only 1: reflexivity; only 1: trivial).	0.0495800971985	3
Coq.NArith.Ndist.ni_le_refl	40
Coq.NArith.Ndist.ni_le_antisym	40	1.3.9.14	search with cache (only 1: intros; only 1: inversion H; only 1: rewrite ni_min_comm; only 1: auto).	3.24094200134	2733
Coq.NArith.Ndist.ni_le_trans	40
Coq.NArith.Ndist.ni_le_min_1	40
Coq.NArith.Ndist.ni_le_min_2	40	0.3.1.1.0	search with cache (only 1: unfold ni_le; only 1: intros; only 1: rewrite ni_min_assoc; only 1: rewrite ni_min_idemp; only 1: reflexivity).	0.109241008759	47
Coq.NArith.Ndist.ni_min_case	40
Coq.NArith.Ndist.ni_le_total	40
Coq.NArith.Ndist.ni_le_min_induc	40
Coq.NArith.Ndist.le_ni_le	40
Coq.NArith.Ndist.ni_le_le	40
Coq.NArith.Ndist.Nplength_lb	40
Coq.NArith.Ndist.Nplength_ub	40
Coq.NArith.Ndist.Npdist_eq_1	40
Coq.NArith.Ndist.Npdist_eq_2	40
Coq.NArith.Ndist.Npdist_comm	40
Coq.NArith.Ndist.Nplength_ultra_1	40
Coq.NArith.Ndist.Nplength_ultra	40
Coq.NArith.Ndist.Npdist_ultra	40
Coq.NArith.Ndigits.Ptestbit_Pbit	40
Coq.NArith.Ndigits.Ntestbit_Nbit	40
Coq.NArith.Ndigits.Pbit_Ptestbit	40
Coq.NArith.Ndigits.Nbit_Ntestbit	40	1.0.2.0.0	search with cache (only 1: destruct a; only 1: trivial; only 1: simpl; only 1: intros; only 1: now rewrite <- Ptestbit_Pbit, N2Nat.id).	0.047082901001	8
Coq.NArith.Ndigits.Nshiftr_nat_S	40	4.0.0.0.1	search with cache (only 1: simpl; only 1: destruct a; only 1: intros; only 1: auto; only 1: trivial).	0.0491960048676	10
Coq.NArith.Ndigits.Nshiftl_nat_S	40	0	search with cache (only 1: reflexivity).	0.0341119766235	1
Coq.NArith.Ndigits.Nshiftr_nat_equiv	40
Coq.NArith.Ndigits.Nshiftr_equiv_nat	40
Coq.NArith.Ndigits.Nshiftl_nat_equiv	40
Coq.NArith.Ndigits.Nshiftl_equiv_nat	40
Coq.NArith.Ndigits.Nshiftr_nat_spec	40
Coq.NArith.Ndigits.Nshiftl_nat_spec_high	40
Coq.NArith.Ndigits.Nshiftl_nat_spec_low	40
Coq.NArith.Ndigits.Pshiftl_nat_0	40	0	search with cache (only 1: reflexivity).	0.0355629920959	1
Coq.NArith.Ndigits.Pshiftl_nat_S	40	0	search with cache (only 1: reflexivity).	0.035542011261	1
Coq.NArith.Ndigits.Pshiftl_nat_N	40
Coq.NArith.Ndigits.Pshiftl_nat_plus	40
Coq.NArith.Ndigits.Pxor_semantics	40
Coq.NArith.Ndigits.Nxor_semantics	40
Coq.NArith.Ndigits.Por_semantics	40
Coq.NArith.Ndigits.Nor_semantics	40	0.0.3.0.1.0.0.0.0.0	search with cache (only 1: rewrite <- !Ntestbit_Nbit; only 1: destruct a, a'; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite orb_false_r; only 1: simpl; only 1: apply N.pos_lor_spec).	2.11190986633	1448
Coq.NArith.Ndigits.Pand_semantics	40
Coq.NArith.Ndigits.Nand_semantics	40	0.0.1.0.0.0.0.0.0.0	search with cache (only 1: rewrite <- !Ntestbit_Nbit; only 1: destruct a, a'; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite andb_false_r; only 1: simpl; only 1: apply N.pos_land_spec).	0.349346876144	222
Coq.NArith.Ndigits.Pdiff_semantics	40
Coq.NArith.Ndigits.Ndiff_semantics	40	0.0.2.0.0.0.0.0.0.0	search with cache (only 1: rewrite <- !Ntestbit_Nbit; only 1: destruct a, a'; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite andb_true_r; only 1: simpl; only 1: apply N.pos_ldiff_spec).	1.13268899918	493
Coq.NArith.Ndigits.Pbit_faithful_0	40
Coq.NArith.Ndigits.Pbit_faithful	40
Coq.NArith.Ndigits.Nbit_faithful	40
Coq.NArith.Ndigits.Nbit_faithful_iff	40
Coq.NArith.Ndigits.Nbit0_correct	40	1.0.0.0.1.0.10.1.0.2	search with cache (only 1: induction n; only 1: simpl; only 1: reflexivity; only 1: destruct p; only 1: simpl; only 1: easy; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	2.5371530056	3508
Coq.NArith.Ndigits.Ndouble_bit0	40	0.1.0	search with cache (only 1: induction n; only 1: reflexivity; only 1: trivial).	0.04217004776	4
Coq.NArith.Ndigits.Ndouble_plus_one_bit0	40	0.1.4	search with cache (only 1: destruct n; only 1: trivial; only 1: trivial).	0.0471749305725	14
Coq.NArith.Ndigits.Ndiv2_double	40	1.0.9.1.5.10	search with cache (only 1: intros a n; only 1: destruct a as [| [p| p| ]]; only 1: trivial; only 1: now try rewrite H; only 1: trivial; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l).	2.39767813683	2059
Coq.NArith.Ndigits.Ndiv2_double_plus_one	40	1.10.0.1.4.0	search with cache (only 1: destruct n; only 1: now try rewrite H; only 1: destruct p; only 1: trivial; only 1: now try rewrite H; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l).	3.69897198677	2491
Coq.NArith.Ndigits.Ndiv2_correct	40	0.0.0.5.0.2	search with cache (only 1: destruct a; only 1: trivial; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	0.57177901268	411
Coq.NArith.Ndigits.Nxor_bit0	40
Coq.NArith.Ndigits.Nxor_div2	40
Coq.NArith.Ndigits.Nneg_bit0	40	3.23	search with cache (only 1: fix odd_spec 1; only 1: trivial).	2.67854809761	2088
Coq.NArith.Ndigits.Nneg_bit0_1	40
Coq.NArith.Ndigits.Nneg_bit0_2	40	0.0.0.0	search with cache (only 1: intros; only 1: apply Nneg_bit0; only 1: rewrite H; only 1: easy).	0.0464169979095	4
Coq.NArith.Ndigits.Nsame_bit0	40
Coq.NArith.Ndigits.Nbit0_less	40
Coq.NArith.Ndigits.Nbit0_gt	40	0.0.0.1.0.0.0.0.0.1.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: destruct (N.discr (N.lxor a a')) as [(p, H2)| H1]; only 1: unfold Nless; only 1: rewrite H2; only 1: destruct p; only 1: simpl; only 1: rewrite H, H0; only 1: reflexivity; only 1: assert (H1 : N.odd (N.lxor a a') = false) by (rewrite H2; reflexivity); only 1: rewrite (Nxor_bit0 a a'), H, H0 in H1; only 1: discriminate H1; only 1: simpl; only 1: rewrite H, H0; only 1: reflexivity; only 1: assert (H2 : N.odd (N.lxor a a') = false) by (rewrite H1; reflexivity); only 1: rewrite (Nxor_bit0 a a'), H, H0 in H2; only 1: discriminate H2).	5.09103798866	4777
Coq.NArith.Ndigits.Nless_not_refl	40
Coq.NArith.Ndigits.Nless_def_1	40
Coq.NArith.Ndigits.Nless_def_2	40	0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: destruct a; only 1: destruct a'; only 1: reflexivity; only 1: trivial; only 1: destruct a'; only 1: trivial; only 1: unfold Nless; only 1: simpl; only 1: destruct (Pos.lxor p p0); only 1: reflexivity; only 1: trivial).	0.958234071732	296
Coq.NArith.Ndigits.Nless_def_3	40	0.0.0.0.1.0.0.0.0.1.1	search with cache (only 1: destruct a; only 1: destruct a'; only 1: trivial; only 1: trivial; only 1: destruct a'; only 1: trivial; only 1: unfold Nless; only 1: simpl; only 1: destruct (Pos.lxor p p0); only 1: reflexivity; only 1: trivial).	1.17471790314	722
Coq.NArith.Ndigits.Nless_def_4	40	0.0.1.0.1.0.0.0.0.2.2	search with cache (only 1: destruct a; only 1: destruct a'; only 1: trivial; only 1: trivial; only 1: destruct a'; only 1: trivial; only 1: unfold Nless; only 1: simpl; only 1: destruct (Pos.lxor p p0); only 1: reflexivity; only 1: reflexivity).	2.36277103424	1963
Coq.NArith.Ndigits.Nless_z	40	0.3.0.15.1.13.2.1	search with cache (only 1: intros n; only 1: unfold Nless; only 1: case n; only 1: reflexivity; only 1: induction p as [p IH| p IH| ]; only 1: reflexivity; only 1: trivial; only 1: reflexivity).	20.6389729977	36347
Coq.NArith.Ndigits.N0_less_1	40	0.0.7.27.1	search with cache (only 1: intros; only 1: induction a; only 1: now try N.order'; only 1: exists p; only 1: trivial).	0.938848018646	2884
Coq.NArith.Ndigits.N0_less_2	40
Coq.NArith.Ndigits.Nless_trans	40
Coq.NArith.Ndigits.Nless_total	40
Coq.NArith.Ndigits.Bv2N_N2Bv	40
Coq.NArith.Ndigits.Bv2N_Nsize	40
Coq.NArith.Ndigits.Bv2N_Nsize_1	40
Coq.NArith.Ndigits.Bv2N_upper_bound	40
Coq.NArith.Ndigits.ByteV2N_upper_bound	40
Coq.NArith.Ndigits.N2Bv_N2Bv_gen	40
Coq.NArith.Ndigits.N2Bv_N2Bv_gen_above	40
Coq.NArith.Ndigits.N2Bv_Bv2N	40
Coq.NArith.Ndigits.Nbit0_Blow	40	0.0.0.0.3.0.1.1.1.4.3.4	search with cache (only 1: apply Vector.rectS; only 1: simpl; only 1: destruct a; only 1: reflexivity; only 1: trivial; only 1: intros; only 1: simpl; only 1: destruct a, (Bv2N v); only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial).	9.16282606125	8399
Coq.NArith.Ndigits.Bnth_Nbit	40
Coq.NArith.Ndigits.Nbit_Nsize	40
Coq.NArith.Ndigits.Nbit_Bth	40
Coq.NArith.Ndigits.Nxor_BVxor	40
Coq.NArith.Ndigits.Nand_BVand	40
Coq.NArith.Ndigits.N2Bv_sized_Nsize	40
Coq.NArith.Ndigits.N2Bv_sized_Bv2N	40
Coq.NArith.Ndigits.N2Bv_N2Bv_sized_above	40	0.0.1.0.0.1.0.0.0.0.0.0.1	search with cache (only 1: destruct a; only 1: simpl; only 1: auto; only 1: simpl; only 1: induction p; only 1: simpl; only 1: f_equal; only 1: auto; only 1: simpl; only 1: rewrite IHp; only 1: auto; only 1: simpl; only 1: f_equal).	6.75948905945	3380
Coq.NArith.NArith.test	40	3	search with cache (only 1: N.order).	0.0348949432373	29
Coq.NArith.Nnat.N2Nat.id	40
Coq.NArith.Nnat.N2Nat.inj	40
Coq.NArith.Nnat.N2Nat.inj_iff	40	8.9.2.1.0.0.1.0.2	search with cache (only 1: split; only 1: intro H; only 1: rewrite <- (id a), <- (id a'); only 1: now f_equal; only 1: intro H; only 1: rewrite <- (id a), <- (id a'); only 1: destruct a as [| p]; only 1: now rewrite H; only 1: now rewrite H).	19.2597980499	15618
Coq.NArith.Nnat.N2Nat.inj_double	40
Coq.NArith.Nnat.N2Nat.inj_succ_double	40	1.4.4.12.1.0.0.0	search with cache (only 1: destruct a; only 1: simpl N.to_nat; only 1: reflexivity; only 1: simpl N.to_nat; only 1: unfold Pos.to_nat; only 1: simpl; only 1: rewrite Pmult_nat_mult, Nat.mul_comm; only 1: trivial).	18.8602859974	6822
Coq.NArith.Nnat.N2Nat.inj_succ	40	3.0.1.0.1.1	search with cache (only 1: destruct a; only 1: simpl N.to_nat; only 1: reflexivity; only 1: simpl N.to_nat; only 1: unfold Pos.to_nat; only 1: now rewrite !Pmult_nat_mult, Pos2Nat.inj_succ).	0.0674521923065	134
Coq.NArith.Nnat.N2Nat.inj_add	40
Coq.NArith.Nnat.N2Nat.inj_mul	40
Coq.NArith.Nnat.N2Nat.inj_sub	40
Coq.NArith.Nnat.N2Nat.inj_pred	40
Coq.NArith.Nnat.N2Nat.inj_div2	40
Coq.NArith.Nnat.N2Nat.inj_compare	40
Coq.NArith.Nnat.N2Nat.inj_max	40
Coq.NArith.Nnat.N2Nat.inj_min	40
Coq.NArith.Nnat.N2Nat.inj_iter	40
Coq.NArith.Nnat.Nat2N.id	40	0.0.5.1.12	search with cache (only 1: induction n as [| n H]; only 1: trivial; only 1: simpl; only 1: rewrite Pos.of_nat_succ; only 1: now apply Nat2Pos.id).	0.238172054291	330
Coq.NArith.Nnat.Nat2N.inj	40
Coq.NArith.Nnat.Nat2N.inj_iff	40	10.1.0.1.0.2	search with cache (only 1: split; only 1: intros H; only 1: rewrite <- (id n), <- (id n'); only 1: now f_equal; only 1: rewrite <- (id n), <- (id n'); only 1: eauto with *).	2.53473091125	2804
Coq.NArith.Nnat.Nat2N.inj_double	40
Coq.NArith.Nnat.Nat2N.inj_succ_double	40	0	search with cache (only 1: nat2N).	0.0180149078369	1
Coq.NArith.Nnat.Nat2N.inj_succ	40	1	search with cache (only 1: nat2N).	0.0168709754944	2
Coq.NArith.Nnat.Nat2N.inj_pred	40	1.0.0.1	search with cache (only 1: destruct n as [| [| n]]; only 1: trivial; only 1: trivial; only 1: nat2N).	0.0228898525238	6
Coq.NArith.Nnat.Nat2N.inj_add	40	1	search with cache (only 1: nat2N).	0.018158197403	2
Coq.NArith.Nnat.Nat2N.inj_sub	40	1	search with cache (only 1: nat2N).	0.128450870514	2
Coq.NArith.Nnat.Nat2N.inj_mul	40	0.0.1.0	search with cache (only 1: destruct n; only 1: simpl; only 1: N.order_nz; only 1: nat2N).	0.024610042572	5
Coq.NArith.Nnat.Nat2N.inj_div2	40	0	search with cache (only 1: nat2N).	0.014720916748	1
Coq.NArith.Nnat.Nat2N.inj_compare	40
Coq.NArith.Nnat.Nat2N.inj_min	40	0	search with cache (only 1: nat2N).	0.015997171402	1
Coq.NArith.Nnat.Nat2N.inj_max	40	0	search with cache (only 1: nat2N).	0.0160291194916	1
Coq.NArith.Nnat.Nat2N.inj_iter	40
Coq.Strings.Ascii.ascii_dec	40	3.3.3.3.3.3.3.3.0	search with cache (only 1: decide equality; only 1: decide equality; only 1: decide equality; only 1: decide equality; only 1: decide equality; only 1: decide equality; only 1: decide equality; only 1: decide equality; only 1: decide equality).	10.6319859028	8236
Coq.Strings.Ascii.eqb_spec	40
Coq.Strings.Ascii.eqb_refl	40	44.2.0	search with cache (only 1: destruct x; only 1: simpl; only 1: destr_bool).	4.48847389221	7592
Coq.Strings.Ascii.eqb_sym	40	7.0	search with cache (only 1: apply eq_true_iff_eq; only 1: t_eqb).	0.0379331111908	21
Coq.Strings.Ascii.eqb_eq	40	3.3.4.6	search with cache (only 1: destruct n; only 1: split; only 1: t_eqb; only 1: t_eqb).	0.995390892029	641
Coq.Strings.Ascii.eqb_neq	40	0	search with cache (only 1: now rewrite <- not_true_iff_false, N.eqb_eq).	0.0120780467987	1
Coq.Strings.Ascii.eqb_compat	40	0.0.0	search with cache (only 1: intros x x' Exx' y y' Eyy'; only 1: apply eq_true_iff_eq; only 1: now rewrite 2!Pos.eqb_eq, Exx', Eyy').	0.0147659778595	3
Coq.Strings.Ascii.ascii_N_embedding	40
Coq.Strings.Ascii.N_ascii_embedding	40
Coq.Strings.Ascii.N_ascii_bounded	40
Coq.Strings.Ascii.ascii_nat_embedding	40
Coq.Strings.Ascii.nat_ascii_embedding	40
Coq.Strings.Ascii.nat_ascii_bounded	40
Coq.Strings.Ascii.ascii_of_byte_of_ascii	40
Coq.Strings.Ascii.byte_of_ascii_of_byte	40	4.7	search with cache (only 1: compute; only 1: repeat match goal with | |- context [ match ?x with | _ => _ end ] => is_var x; destruct x | _ => intro | _ => reflexivity | _ => progress subst | H:Some ?a = Some ?b |- _ => assert (a = b) by refine match H with | eq_refl => eq_refl end; clear H | H:None = Some _ |- _ => solve [ inversion H ] end).	7.58191895485	423
Coq.Strings.Ascii.ascii_of_byte_via_N	40
Coq.Strings.Ascii.ascii_of_byte_via_nat	40
Coq.Strings.Ascii.byte_of_ascii_via_N	40
Coq.Strings.Ascii.byte_of_ascii_via_nat	40
Coq.Strings.String.string_dec	40	0.0.0.0.0.0.0.0.0.0	search with cache (only 1: decide equality; only 1: decide equality; only 1: decide equality; only 1: decide equality; only 1: decide equality; only 1: decide equality; only 1: decide equality; only 1: decide equality; only 1: decide equality; only 1: decide equality).	0.0814378261566	10
Coq.Strings.String.eqb_spec	40
Coq.Strings.String.eqb_refl	40
Coq.Strings.String.eqb_sym	40	6.1	search with cache (only 1: apply eq_true_iff_eq; only 1: t_eqb).	0.0218369960785	16
Coq.Strings.String.eqb_eq	40	2.1.7.2	search with cache (only 1: split; only 1: t_eqb; only 1: <Coq.Strings.Ascii.t_eqb>; only 1: t_eqb).	3.09857106209	2379
Coq.Strings.String.eqb_neq	40	1	search with cache (only 1: now rewrite <- not_true_iff_false, BinInt.Z.eqb_eq).	0.0378701686859	11
Coq.Strings.String.eqb_compat	40	0.0.0	search with cache (only 1: intros x x' Exx' y y' Eyy'; only 1: apply eq_true_iff_eq; only 1: now rewrite 2!BinInt.Z.eqb_eq, Exx', Eyy').	0.018639087677	3
Coq.Strings.String.get_correct	40
Coq.Strings.String.append_correct1	40	1.0.0.0.8.0.2.10.12	search with cache (only 1: intros s1; only 1: elim s1; only 1: inversion 1; only 1: intros x y z; only 1: induction n; only 1: simpl; only 1: auto with arith; only 1: simpl; only 1: auto with arith).	16.0044009686	25878
Coq.Strings.String.append_correct2	40
Coq.Strings.String.substring_correct1	40
Coq.Strings.String.substring_correct2	40
Coq.Strings.String.prefix_correct	40
Coq.Strings.String.index_correct1	40
Coq.Strings.String.index_correct2	40
Coq.Strings.String.index_correct3	40
Coq.Strings.String.index_correct4	40
Coq.Strings.String.string_of_list_ascii_of_string	40	17.3.0.26	search with cache (only 1: elim s; only 1: reflexivity; only 1: simpl; only 1: t_eqb).	14.6946508884	4811
Coq.Strings.String.list_ascii_of_string_of_list_ascii	40	2.0.0.4	search with cache (only 1: induction s as [| ? ? IHs]; only 1: auto; only 1: cbn; only 1: apply f_equal, IHs).	0.0192441940308	10
Coq.Strings.String.string_of_list_byte_of_string	40
Coq.Strings.String.list_byte_of_string_of_list_byte	40
Coq.Strings.Byte.byte_dec_lb	40
Coq.Strings.Byte.byte_dec_bl	40
Coq.Strings.Byte.eqb_false	40
Coq.Strings.Byte.of_to_nat	40
Coq.Strings.Byte.to_of_nat	40
Coq.Strings.Byte.to_of_nat_iff	40
Coq.Strings.Byte.to_of_nat_option_map	40
Coq.Strings.Byte.to_nat_bounded	40
Coq.Strings.Byte.of_nat_None_iff	40
Coq.Strings.Byte.of_to_N	40
Coq.Strings.Byte.to_of_N	40
Coq.Strings.Byte.to_of_N_iff	40
Coq.Strings.Byte.to_of_N_option_map	40	4.5.0.0	search with cache (only 1: destruct x; only 1: reflexivity; only 1: simpl; only 1: repeat match goal with | |- context [ match ?x with | _ => _ end ] => is_var x; destruct x | _ => intro | _ => reflexivity | _ => progress subst | H:Some ?a = Some ?b |- _ => assert (a = b) by refine match H with | eq_refl => eq_refl end; clear H | H:None = Some _ |- _ => solve [ inversion H ] end).	0.721194028854	154
Coq.Strings.Byte.to_N_bounded	40
Coq.Strings.Byte.of_N_None_iff	40
Coq.Strings.Byte.to_N_via_nat	40
Coq.Strings.Byte.to_nat_via_N	40
Coq.Strings.Byte.of_N_via_nat	40
Coq.Strings.Byte.of_nat_via_N	40
Coq.Strings.HexString.Raw.to_N_of_pos	40	1	search with cache (only 1: trivial).	0.0101130008698	2
Coq.Strings.HexString.to_N_of_N	40
Coq.Strings.HexString.to_Z_of_Z	40
Coq.Strings.HexString.to_nat_of_nat	40
Coq.Strings.HexString.to_pos_of_pos	40
Coq.Strings.OctalString.Raw.to_N_of_pos	40	1	search with cache (only 1: trivial).	0.0101480484009	2
Coq.Strings.OctalString.to_N_of_N	40
Coq.Strings.OctalString.to_Z_of_Z	40
Coq.Strings.OctalString.to_nat_of_nat	40
Coq.Strings.OctalString.to_pos_of_pos	40
Coq.Strings.BinaryString.Raw.to_N_of_pos	40	2	search with cache (only 1: trivial).	0.0244297981262	3
Coq.Strings.BinaryString.to_N_of_N	40
Coq.Strings.BinaryString.Z_of_of_Z	40
Coq.Strings.BinaryString.to_nat_of_nat	40
Coq.Strings.BinaryString.to_pos_of_pos	40
Coq.Reals.Rdefinitions.total_order_T	40
Coq.Reals.Rdefinitions.Req_appart_dec	40
Coq.Reals.Rdefinitions.Rrepr_appart_0	40
Coq.Reals.Rdefinitions.up	40	9	search with cache (only 1: constructor).	0.00832104682922	10
Coq.Reals.Rtrigo_alt.pre_sin_bound	40
Coq.Reals.Rtrigo_alt.pre_cos_bound	40
Coq.Reals.Ratan.Ropp_div	40	0.0.0	search with cache (only 1: intros x y; only 1: unfold Rdiv; only 1: ring).	0.109846115112	3
Coq.Reals.Ratan.pos_half_prf	40	0.0	search with cache (only 1: apply Rinv_0_lt_compat; only 1: prove_sup0).	0.0893089771271	2
Coq.Reals.Ratan.Boule_half_to_interval	40
Coq.Reals.Ratan.Boule_lt	40
Coq.Reals.Ratan.Un_cv_ext	40
Coq.Reals.Ratan.Alt_first_term_bound	40	4.13.2.0	search with cache (only 1: unfold Un_decreasing; only 1: intros P H0 HS; only 1: fix ind_0_1_SS 1; only 1: auto with arith).	20.8853371143	17495
Coq.Reals.Ratan.Alt_CVU	40
Coq.Reals.Ratan.pow2_ge_0	40
Coq.Reals.Ratan.pow2_abs	40	1.5.0.1.1.1.2.0	search with cache (only 1: intros; only 1: simpl; only 1: rewrite Rmult_1_r; only 1: rewrite Rmult_1_r; only 1: unfold Rabs; only 1: case (Rcase_abs x); only 1: auto with real; only 1: reflexivity).	14.6809360981	6872
Coq.Reals.Ratan.derivable_pt_tan	40
Coq.Reals.Ratan.derive_pt_tan	40
Coq.Reals.Ratan.derive_increasing_interv	40
Coq.Reals.Ratan.plus_Rsqr_gt_0	40
Coq.Reals.Ratan.PI2_lower_bound	40
Coq.Reals.Ratan.PI2_3_2	40
Coq.Reals.Ratan.PI2_1	40
Coq.Reals.Ratan.tan_increasing	40
Coq.Reals.Ratan.tan_is_inj	40
Coq.Reals.Ratan.exists_atan_in_frame	40
Coq.Reals.Ratan.tan_1_gt_1	40
Coq.Reals.Ratan.frame_tan	40
Coq.Reals.Ratan.ub_opp	40	0.5.9	search with cache (only 1: intros a a_encad; only 1: pose proof PI_RGT_0 as H; only 1: lra).	2.82476806641	1813
Coq.Reals.Ratan.pos_opp_lt	40	17.13	search with cache (only 1: intros eps Heps; only 1: lra).	4.04051804543	3076
Coq.Reals.Ratan.tech_opp_tan	40
Coq.Reals.Ratan.pre_atan	40
Coq.Reals.Ratan.atan_bound	40
Coq.Reals.Ratan.atan_right_inv	40
Coq.Reals.Ratan.atan_opp	40
Coq.Reals.Ratan.derivable_pt_atan	40
Coq.Reals.Ratan.atan_increasing	40
Coq.Reals.Ratan.atan_0	40
Coq.Reals.Ratan.atan_1	40
Coq.Reals.Ratan.derive_pt_atan	40
Coq.Reals.Ratan.derivable_pt_lim_atan	40
Coq.Reals.Ratan.Ratan_seq_decreasing	40
Coq.Reals.Ratan.Ratan_seq_converging	40
Coq.Reals.Ratan.ps_atan_exists_01	40
Coq.Reals.Ratan.Ratan_seq_opp	40
Coq.Reals.Ratan.sum_Ratan_seq_opp	40
Coq.Reals.Ratan.ps_atan_exists_1	40
Coq.Reals.Ratan.in_int	40
Coq.Reals.Ratan.ps_atan0_0	40
Coq.Reals.Ratan.ps_atan_exists_1_opp	40
Coq.Reals.Ratan.ps_atan_opp	40
Coq.Reals.Ratan.ps_atanSeq_continuity_pt_1	40
Coq.Reals.Ratan.pow_lt_1_compat	40
Coq.Reals.Ratan.Datan_seq_Rabs	40
Coq.Reals.Ratan.Datan_seq_pos	40	0.0.0.0.1.0.0.0.18.0	search with cache (only 1: intros x n; only 1: unfold Datan_seq; only 1: elim n; only 1: simpl; only 1: auto with real; only 1: intros; only 1: simpl; only 1: replace 0 with x * 0; only 1: auto with real; only 1: auto with real).	7.41782903671	7857
Coq.Reals.Ratan.Datan_sum_eq	40
Coq.Reals.Ratan.Datan_seq_increasing	40
Coq.Reals.Ratan.Datan_seq_decreasing	40
Coq.Reals.Ratan.Datan_seq_CV_0	40
Coq.Reals.Ratan.Datan_lim	40
Coq.Reals.Ratan.Datan_CVU_prelim	40
Coq.Reals.Ratan.Datan_is_datan	40
Coq.Reals.Ratan.Ratan_CVU'	40
Coq.Reals.Ratan.Ratan_CVU	40
Coq.Reals.Ratan.Alt_PI_tg	40
Coq.Reals.Ratan.Ratan_is_ps_atan	40
Coq.Reals.Ratan.Datan_continuity	40
Coq.Reals.Ratan.derivable_pt_lim_ps_atan	40
Coq.Reals.Ratan.derivable_pt_ps_atan	40
Coq.Reals.Ratan.ps_atan_continuity_pt_1	40
Coq.Reals.Ratan.Datan_eq_DatanSeq_interv	40
Coq.Reals.Ratan.atan_eq_ps_atan	40
Coq.Reals.Ratan.Alt_PI_eq	40
Coq.Reals.Ratan.PI_ineq	40
Coq.Reals.RList.MaxRlist_P1	40
Coq.Reals.RList.MinRlist_P1	40
Coq.Reals.RList.AbsList_P1	40
Coq.Reals.RList.MinRlist_P2	40
Coq.Reals.RList.AbsList_P2	40
Coq.Reals.RList.MaxRlist_P2	40	3.11	search with cache (only 1: fix odd_equiv 1; only 1: eauto using Rlt_trans with rorders).	0.38360786438	283
Coq.Reals.RList.pos_Rl_P1	40	0.0.0.1.6	search with cache (only 1: intros [| a l] H; only 1: simpl; only 1: easy; only 1: simpl; only 1: auto with arith).	0.839573860168	333
Coq.Reals.RList.pos_Rl_P2	40	0.11	search with cache (only 1: fix even_odd_double 1; only 1: firstorder  (subst; auto)).	0.680637121201	434
Coq.Reals.RList.Rlist_P1	40
Coq.Reals.RList.RList_P0	40
Coq.Reals.RList.RList_P1	40	4.11	search with cache (only 1: fix odd_equiv 1; only 1: eauto using Rlt_trans with rorders).	0.908138990402	760
Coq.Reals.RList.RList_P2	40
Coq.Reals.RList.RList_P3	40
Coq.Reals.RList.RList_P4	40
Coq.Reals.RList.RList_P5	40
Coq.Reals.RList.RList_P6	40	13.2	search with cache (only 1: fix odd_equiv 1; only 1: auto).	1.09506988525	1160
Coq.Reals.RList.RList_P7	40
Coq.Reals.RList.RList_P8	40
Coq.Reals.RList.RList_P9	40	1.5	search with cache (only 1: fix odd_equiv 1; only 1: tauto).	0.171553850174	64
Coq.Reals.RList.RList_P10	40	5.14	search with cache (only 1: fix even_odd_double 1; only 1: auto).	2.89028000832	1890
Coq.Reals.RList.RList_P11	40	1.51	search with cache (only 1: fix odd_equiv 1; only 1: trivial).	20.4065768719	37756
Coq.Reals.RList.RList_P12	40
Coq.Reals.RList.RList_P13	40
Coq.Reals.RList.RList_P14	40	2.2.0.0.0.1.7	search with cache (only 1: intros n H; only 1: induction n; only 1: reflexivity; only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: auto with arith).	6.74512219429	5788
Coq.Reals.RList.RList_P15	40
Coq.Reals.RList.RList_P16	40
Coq.Reals.RList.RList_P17	40
Coq.Reals.RList.RList_P18	40	1.1.0.6.1	search with cache (only 1: intros; only 1: induction l as [| r l Hrecl]; only 1: reflexivity; only 1: simpl; only 1: auto).	2.04004502296	1659
Coq.Reals.RList.RList_P19	40	6.22.3.6.6	search with cache (only 1: intro; only 1: induction l as [| r l Hrecl]; only 1: easy; only 1: unfold not; only 1: eauto).	13.5641610622	33371
Coq.Reals.RList.RList_P20	40
Coq.Reals.RList.RList_P21	40	1.3.10	search with cache (only 1: intros; only 1: f_equal; only 1: auto).	0.147854089737	127
Coq.Reals.RList.RList_P22	40	0.1.9.1.7.4	search with cache (only 1: intros n; only 1: case n; only 1: intros; only 1: easy; only 1: intros; only 1: reflexivity).	10.8443479538	10306
Coq.Reals.RList.RList_P23	40	6.0.0.0.0.0	search with cache (only 1: simple induction l1; only 1: intro; only 1: reflexivity; only 1: intros; only 1: simpl; only 1: auto).	0.887846946716	448
Coq.Reals.RList.RList_P24	40
Coq.Reals.RList.RList_P25	40
Coq.Reals.RList.RList_P26	40	0.1.0.0.0.0.0.0.0.18	search with cache (only 1: simple induction l1; only 1: intros; only 1: elim (Nat.nlt_0_r _ H); only 1: intros; only 1: induction i as [| i Hreci]; only 1: reflexivity; only 1: simpl; only 1: apply H; only 1: apply lt_S_n; only 1: apply H0).	11.062212944	10996
Coq.Reals.RList.RList_P27	40	0.3.3.0.0.0.1	search with cache (only 1: simple induction l1; only 1: intros; only 1: reflexivity; only 1: intros; only 1: simpl; only 1: elim H; only 1: reflexivity).	0.542590856552	389
Coq.Reals.RList.RList_P28	40	1.2.3.0.5.0	search with cache (only 1: intros; only 1: induction l as [| ? ? H]; only 1: reflexivity; only 1: simpl; only 1: rewrite H; only 1: reflexivity).	0.95245718956	456
Coq.Reals.RList.RList_P29	40
Coq.Reals.Sqrt_reg.sqrt_var_maj	40
Coq.Reals.Sqrt_reg.sqrt_continuity_pt_R1	40
Coq.Reals.Sqrt_reg.sqrt_continuity_pt	40
Coq.Reals.Sqrt_reg.derivable_pt_lim_sqrt	40
Coq.Reals.Sqrt_reg.derivable_pt_sqrt	40
Coq.Reals.Sqrt_reg.derive_pt_sqrt	40	0.1.2.0	search with cache (only 1: intros; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_sqrt; only 1: assumption).	0.102597951889	58
Coq.Reals.Sqrt_reg.continuity_pt_sqrt	40
Coq.Reals.Rsigma.sigma_split	40
Coq.Reals.Rsigma.sigma_diff	40
Coq.Reals.Rsigma.sigma_diff_neg	40	0.1.0.0.0.0.0.0.0	search with cache (only 1: intros low high k H1 H2; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: rewrite (sigma_split H1 H2); only 1: ring).	0.109879970551	13
Coq.Reals.Rsigma.sigma_first	40
Coq.Reals.Rsigma.sigma_last	40
Coq.Reals.Rsigma.sigma_eq_arg	40	0.0.0.0.0.3.3	search with cache (only 1: intros; only 1: unfold sigma; only 1: rewrite <- minus_n_n; only 1: simpl; only 1: replace (low + 0)%nat with low; only 1: reflexivity; only 1: ring).	0.088408946991	86
Coq.Reals.Rbasic_fun.Rmin_case	40
Coq.Reals.Rbasic_fun.Rmin_case_strong	40	0.0.1.1.0	search with cache (only 1: intros r1 r2 P H1 H2; only 1: unfold Rmin; only 1: case (Rle_dec r1 r2); only 1: auto; only 1: auto with real).	0.167706012726	26
Coq.Reals.Rbasic_fun.Rmin_Rgt_l	40
Coq.Reals.Rbasic_fun.Rmin_Rgt_r	40	0.0.3.1.0.1	search with cache (only 1: intros r1 r2 r; only 1: unfold Rmin; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: destruct (Rle_dec r1 r2) as [Hle| Hnle]; only 1: tauto; only 1: tauto).	0.651744842529	148
Coq.Reals.Rbasic_fun.Rmin_Rgt	40
Coq.Reals.Rbasic_fun.Rmin_l	40
Coq.Reals.Rbasic_fun.Rmin_r	40
Coq.Reals.Rbasic_fun.Rmin_left	40	1.0.1.1.4.7.0	search with cache (only 1: intros r1 r2; only 1: unfold Rmin; only 1: case (Rle_dec r1 r2); only 1: generalize (Rlt_asym r1 r2); only 1: unfold Rle; only 1: intuition; only 1: auto with real).	37.0245690346	5360
Coq.Reals.Rbasic_fun.Rmin_right	40	1.0.0.7.0	search with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: auto using Rle_antisym; only 1: auto with real).	1.51089501381	147
Coq.Reals.Rbasic_fun.Rle_min_compat_r	40
Coq.Reals.Rbasic_fun.Rle_min_compat_l	40	0.0.0.0.0.0	search with cache (only 1: intros; only 1: do 2 (apply Rmin_case_strong; intro); only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl).	0.0236728191376	6
Coq.Reals.Rbasic_fun.Rmin_comm	40	0.0.0.0.0.0.2.0	search with cache (only 1: intros x y; only 1: apply Rmin_case_strong; only 1: apply Rmin_case_strong; only 1: auto using Rle_antisym; only 1: reflexivity; only 1: apply Rmin_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	0.042809009552	10
Coq.Reals.Rbasic_fun.Rmin_stable_in_posreal	40
Coq.Reals.Rbasic_fun.Rmin_pos	40	1.1.2.2.0	search with cache (only 1: intros; only 1: apply Rmin_Rgt_r; only 1: split; only 1: assumption; only 1: assumption).	0.078901052475	41
Coq.Reals.Rbasic_fun.Rmin_glb	40	0.0.0.2.0	search with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl).	0.663413047791	7
Coq.Reals.Rbasic_fun.Rmin_glb_lt	40	6.0.2.0.1.0	search with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: eauto using Rle_trans, Rle_refl; only 1: intro; only 1: assumption).	1.51532411575	791
Coq.Reals.Rbasic_fun.Rmax_case	40
Coq.Reals.Rbasic_fun.Rmax_case_strong	40	1.0.0.2.0	search with cache (only 1: intros r1 r2 P H1 H2; only 1: unfold Rmax; only 1: destruct (Rle_dec r1 r2); only 1: auto; only 1: auto with real).	0.0239109992981	8
Coq.Reals.Rbasic_fun.Rmax_Rle	40
Coq.Reals.Rbasic_fun.Rmax_comm	40
Coq.Reals.Rbasic_fun.Rmax_l	40
Coq.Reals.Rbasic_fun.Rmax_r	40	1.0.2.0.1.0	search with cache (only 1: intros; only 1: unfold Rmax; only 1: case (Rle_dec x y); only 1: right; only 1: auto using Rle_antisym; only 1: auto with real).	0.0342309474945	17
Coq.Reals.Rbasic_fun.Rmax_left	40	0.0.0.1.2.1.0.2	search with cache (only 1: intros p q; only 1: unfold Rmax; only 1: case (Rle_dec p q); only 1: intros H1 H2; only 1: apply Rle_antisym; only 1: auto with real; only 1: auto with real; only 1: auto).	3.01325106621	867
Coq.Reals.Rbasic_fun.Rmax_right	40	0.0.1.2.0.1.0.1	search with cache (only 1: intros p q; only 1: unfold Rmax; only 1: case (Rle_dec p q); only 1: auto; only 1: intros H1 H2; only 1: apply Rle_antisym; only 1: auto with real; only 1: auto with real).	1.50830483437	615
Coq.Reals.Rbasic_fun.Rle_max_compat_r	40
Coq.Reals.Rbasic_fun.Rle_max_compat_l	40	0.0.0.0.0.0	search with cache (only 1: intros; only 1: do 2 (apply Rmax_case_strong; intro); only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl).	0.0253038406372	6
Coq.Reals.Rbasic_fun.RmaxRmult	40
Coq.Reals.Rbasic_fun.Rmax_stable_in_negreal	40
Coq.Reals.Rbasic_fun.Rmax_lub	40
Coq.Reals.Rbasic_fun.Rmax_lub_lt	40	1.0.1.0.0.14.0	search with cache (only 1: intros; only 1: unfold Rmax; only 1: case (Rle_dec x y); only 1: intro; only 1: assumption; only 1: intro; only 1: assumption).	4.74331998825	4707
Coq.Reals.Rbasic_fun.Rmax_Rlt	40
Coq.Reals.Rbasic_fun.Rmax_neg	40	1.0.1.0.0.2.0	search with cache (only 1: intros; only 1: unfold Rmax; only 1: case (Rle_dec x y); only 1: intro; only 1: assumption; only 1: intro; only 1: assumption).	0.205734968185	71
Coq.Reals.Rbasic_fun.Rcase_abs	40	1.0.0.0.5.0.10.0	search with cache (only 1: intros; only 1: replace r with - - r; only 1: replace 0 with - 0; only 1: case (Rlt_le_dec r 0); only 1: auto with real; only 1: auto with real; only 1: ring; only 1: ring).	11.1939229965	6037
Coq.Reals.Rbasic_fun.Rabs_R0	40
Coq.Reals.Rbasic_fun.Rabs_R1	40
Coq.Reals.Rbasic_fun.Rabs_no_R0	40
Coq.Reals.Rbasic_fun.Rabs_left	40
Coq.Reals.Rbasic_fun.Rabs_right	40
Coq.Reals.Rbasic_fun.Rabs_left1	40
Coq.Reals.Rbasic_fun.Rabs_pos	40
Coq.Reals.Rbasic_fun.Rle_abs	40
Coq.Reals.Rbasic_fun.Rabs_le	40
Coq.Reals.Rbasic_fun.Rabs_pos_eq	40	3.0.5.7	search with cache (only 1: intros a b; only 1: rewrite Rabs_right; only 1: auto with real; only 1: auto with real).	4.58940291405	3235
Coq.Reals.Rbasic_fun.Rabs_Rabsolu	40
Coq.Reals.Rbasic_fun.Rabs_pos_lt	40	8.1.12.0.0	search with cache (only 1: intros; only 1: unfold Rabs; only 1: case (Rcase_abs x); only 1: auto with real; only 1: easy').	27.781291008	21287
Coq.Reals.Rbasic_fun.Rabs_minus_sym	40
Coq.Reals.Rbasic_fun.Rabs_mult	40
Coq.Reals.Rbasic_fun.Rabs_Rinv	40
Coq.Reals.Rbasic_fun.Rabs_Ropp	40
Coq.Reals.Rbasic_fun.Rabs_triang	40
Coq.Reals.Rbasic_fun.Rabs_triang_inv	40
Coq.Reals.Rbasic_fun.Rabs_triang_inv2	40
Coq.Reals.Rbasic_fun.Rabs_def1	40
Coq.Reals.Rbasic_fun.Rabs_def2	40
Coq.Reals.Rbasic_fun.RmaxAbs	40
Coq.Reals.Rbasic_fun.Rabs_Zabs	40
Coq.Reals.Rbasic_fun.abs_IZR	40
Coq.Reals.Rbasic_fun.Ropp_Rmax	40
Coq.Reals.Rbasic_fun.Ropp_Rmin	40
Coq.Reals.Rbasic_fun.Rmax_assoc	40
Coq.Reals.Rbasic_fun.Rminmax	40
Coq.Reals.Rbasic_fun.Rmin_assoc	40
Coq.Reals.ROrderedType.Req_dec	40	0.0.0.0.2.0.0.0.0.0.0	search with cache (only 1: intros; only 1: destruct (total_order_T r1 r2) as [[H| ]| H]; only 1: right; only 1: red; only 1: intros ->; only 1: elim (Rlt_irrefl r2 H); only 1: intuition eauto  4 with real; only 1: right; only 1: red; only 1: intros ->; only 1: elim (Rlt_irrefl r2 H)).	1.34719586372	399
Coq.Reals.ROrderedType.Reqb_eq	40
Coq.Reals.ROrderedType.Rcompare_spec	40
Coq.Reals.ROrderedType.R_as_OT.lt_strorder	40
Coq.Reals.ROrderedType.R_as_OT.lt_compat	40	2.0.1.3	search with cache (only 1: repeat red; only 1: intros; only 1: subst; only 1: auto).	0.0485100746155	34
Coq.Reals.ROrderedType.R_as_OT.le_lteq	40	1.1.1.0	search with cache (only 1: intuition eauto  2; only 1: auto with real; only 1: right; only 1: auto).	0.0223948955536	7
Coq.Reals.SeqSeries.sum_maj1	40
Coq.Reals.SeqSeries.Rseries_CV_comp	40
Coq.Reals.SeqSeries.Cesaro	40
Coq.Reals.SeqSeries.Cesaro_1	40
Coq.Reals.Rtrigo_def.exp_cof_no_R0	40
Coq.Reals.Rtrigo_def.exist_exp	40
Coq.Reals.Rtrigo_def.pow_i	40	1.0.3.2.2.0	search with cache (only 1: simple induction 1; only 1: simpl; only 1: ring; only 1: simpl; only 1: intros n Hn IHn; only 1: auto with real).	1.47186017036	501
Coq.Reals.Rtrigo_def.exist_exp0	40
Coq.Reals.Rtrigo_def.exp_0	40
Coq.Reals.Rtrigo_def.cosh_0	40
Coq.Reals.Rtrigo_def.sinh_0	40
Coq.Reals.Rtrigo_def.simpl_cos_n	40
Coq.Reals.Rtrigo_def.archimed_cor1	40
Coq.Reals.Rtrigo_def.Alembert_cos	40
Coq.Reals.Rtrigo_def.cosn_no_R0	40
Coq.Reals.Rtrigo_def.exist_cos	40
Coq.Reals.Rtrigo_def.simpl_sin_n	40
Coq.Reals.Rtrigo_def.Alembert_sin	40
Coq.Reals.Rtrigo_def.sin_no_R0	40
Coq.Reals.Rtrigo_def.exist_sin	40
Coq.Reals.Rtrigo_def.cos_sym	40
Coq.Reals.Rtrigo_def.sin_antisym	40
Coq.Reals.Rtrigo_def.sin_0	40
Coq.Reals.Rtrigo_def.exist_cos0	40
Coq.Reals.Rtrigo_def.cos_0	40
Coq.Reals.NewtonInt.FTCN_step1	40
Coq.Reals.NewtonInt.FTC_Newton	40	3.0	search with cache (only 1: intros; only 1: split).	0.114096164703	5
Coq.Reals.NewtonInt.NewtonInt_P1	40
Coq.Reals.NewtonInt.NewtonInt_P2	40
Coq.Reals.NewtonInt.NewtonInt_P3	40
Coq.Reals.NewtonInt.NewtonInt_P4	40
Coq.Reals.NewtonInt.NewtonInt_P5	40
Coq.Reals.NewtonInt.antiderivative_P1	40
Coq.Reals.NewtonInt.NewtonInt_P6	40
Coq.Reals.NewtonInt.antiderivative_P2	40
Coq.Reals.NewtonInt.antiderivative_P3	40
Coq.Reals.NewtonInt.antiderivative_P4	40
Coq.Reals.NewtonInt.NewtonInt_P7	40
Coq.Reals.NewtonInt.NewtonInt_P8	40
Coq.Reals.NewtonInt.NewtonInt_P9	40
Coq.Reals.Runcountable.in_holed_interval_dec	40
Coq.Reals.Runcountable.middle_in_interval	40
Coq.Reals.Runcountable.point_in_holed_interval_works	40
Coq.Reals.Runcountable.first_in_holed_interval	40
Coq.Reals.Runcountable.first_in_holed_interval_works	40
Coq.Reals.Runcountable.split_couple_eq	40
Coq.Reals.Runcountable.first_two_in_interval_works	40
Coq.Reals.Runcountable.tearing_sequences	40	3.32	search with cache (only 1: fix odd_equiv 1; only 1: assumption).	1.34859681129	3550
Coq.Reals.Runcountable.tearing_sequences_projsig	40
Coq.Reals.Runcountable.tearing_sequences_inc_dec	40	7.27	search with cache (only 1: fix even_odd_double 1; only 1: auto with arith real).	25.5384271145	23748
Coq.Reals.Runcountable.split_lt_succ	40	6.2	search with cache (only 1: intros; only 1: now apply Nat.lt_eq_cases, Nat.succ_le_mono).	0.0342609882355	22
Coq.Reals.Runcountable.increase_seq_transit	40
Coq.Reals.Runcountable.decrease_seq_transit	40
Coq.Reals.Runcountable.tearing_sequences_ordered_forall	40
Coq.Reals.Runcountable.torn_number	40
Coq.Reals.Runcountable.torn_number_above_first_sequence	40
Coq.Reals.Runcountable.torn_number_below_second_sequence	40
Coq.Reals.Runcountable.limit_index_above_all_indices	40
Coq.Reals.Runcountable.first_indices_increasing	40
Coq.Reals.Runcountable.R_uncountable	40
Coq.Reals.Rfunctions.INR_fact_neq_0	40
Coq.Reals.Rfunctions.fact_simpl	40	0.2.3	search with cache (only 1: intros; only 1: simpl; only 1: auto with arith).	0.0148680210114	8
Coq.Reals.Rfunctions.simpl_fact	40
Coq.Reals.Rfunctions.pow_O	40	0	search with cache (only 1: auto with real).	0.0102851390839	1
Coq.Reals.Rfunctions.pow_1	40	4.1.2	search with cache (only 1: intros; only 1: simpl; only 1: auto with real).	0.02006316185	10
Coq.Reals.Rfunctions.pow_add	40	1.0.1.0.0.0.0.0	search with cache (only 1: intros x n; only 1: elim n; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: intros n0 H' m; only 1: rewrite H'; only 1: auto with real).	0.0361039638519	10
Coq.Reals.Rfunctions.Rpow_mult_distr	40
Coq.Reals.Rfunctions.pow_nonzero	40
Coq.Reals.Rfunctions.pow_RN_plus	40
Coq.Reals.Rfunctions.pow_lt	40
Coq.Reals.Rfunctions.Rlt_pow_R1	40
Coq.Reals.Rfunctions.Rlt_pow	40
Coq.Reals.Rfunctions.tech_pow_Rmult	40	1.0.1	search with cache (only 1: intro; only 1: simpl; only 1: auto with real).	0.0143899917603	5
Coq.Reals.Rfunctions.tech_pow_Rplus	40	0.4.0.3	search with cache (only 1: intros n m; only 1: intro; only 1: repeat rewrite S_INR; only 1: ring).	1.17000508308	411
Coq.Reals.Rfunctions.poly	40
Coq.Reals.Rfunctions.Power_monotonic	40
Coq.Reals.Rfunctions.RPow_abs	40
Coq.Reals.Rfunctions.Pow_x_infinity	40
Coq.Reals.Rfunctions.pow_ne_zero	40	3.0.3.0.0.2.0.1.1	search with cache (only 1: intro n; only 1: case n; only 1: intro; only 1: absurd (0%nat = 0%nat); only 1: trivial; only 1: trivial; only 1: simpl; only 1: intros; only 1: auto with real).	3.38444113731	3802
Coq.Reals.Rfunctions.Rinv_pow	40	1.1.1.3.0.0.4.0.6	search with cache (only 1: intros z; only 1: simple induction n; only 1: auto with real; only 1: simpl; only 1: intros; only 1: rewrite Rinv_mult_distr; only 1: auto with real; only 1: auto with real; only 1: auto with real).	7.84534287453	8814
Coq.Reals.Rfunctions.pow_lt_1_zero	40
Coq.Reals.Rfunctions.pow_R1	40
Coq.Reals.Rfunctions.pow_Rsqr	40
Coq.Reals.Rfunctions.pow_le	40	0.1.3.2.0.1.0.1.2	search with cache (only 1: intros x n; only 1: elim n; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: intros n0 H' H'0; only 1: replace 0 with x * 0; only 1: auto with real; only 1: auto with real).	16.777285099	10483
Coq.Reals.Rfunctions.pow_1_even	40
Coq.Reals.Rfunctions.pow_1_odd	40
Coq.Reals.Rfunctions.pow_1_abs	40
Coq.Reals.Rfunctions.pow_mult	40
Coq.Reals.Rfunctions.pow_incr	40
Coq.Reals.Rfunctions.pow_R1_Rle	40
Coq.Reals.Rfunctions.Rle_pow	40
Coq.Reals.Rfunctions.pow1	40	0.1.0.0.1.0.0.0.0.0	search with cache (only 1: intro; only 1: induction n as [| n Hrecn]; only 1: easy; only 1: replace (S n) with (n + 1)%nat; only 1: rewrite pow_add; only 1: rewrite Hrecn; only 1: rewrite Rmult_1_l; only 1: simpl; only 1: auto with real; only 1: ring).	1.92399501801	604
Coq.Reals.Rfunctions.pow_Rabs	40	1.3.2	search with cache (only 1: intro; only 1: fix odd_equiv 1; only 1: auto with real).	1.15777111053	289
Coq.Reals.Rfunctions.pow_maj_Rabs	40
Coq.Reals.Rfunctions.Rsqr_pow2	40	4.0.0	search with cache (only 1: simpl; only 1: intros; only 1: ring_Rsqr).	0.02747797966	7
Coq.Reals.Rfunctions.intP	40
Coq.Reals.Rfunctions.Zpower_NR0	40	8.1.0.1.2.10.2	search with cache (only 1: intros; only 1: elim n; only 1: simpl; only 1: Z.order'; only 1: simpl; only 1: intros; only 1: auto with zarith).	31.0220279694	21588
Coq.Reals.Rfunctions.powerRZ_O	40	1	search with cache (only 1: reflexivity).	0.00999116897583	2
Coq.Reals.Rfunctions.powerRZ_1	40	0.5	search with cache (only 1: simpl; only 1: auto with real).	0.0257160663605	23
Coq.Reals.Rfunctions.powerRZ_NOR	40
Coq.Reals.Rfunctions.powerRZ_pos_sub	40
Coq.Reals.Rfunctions.powerRZ_add	40
Coq.Reals.Rfunctions.Zpower_nat_powerRZ	40
Coq.Reals.Rfunctions.Zpower_pos_powerRZ	40
Coq.Reals.Rfunctions.powerRZ_lt	40	2.0.2.0.3.0.0	search with cache (only 1: intros x n; only 1: elim n; only 1: auto with real; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: auto with real).	0.819528102875	596
Coq.Reals.Rfunctions.powerRZ_le	40	0.0.0.0.0.0.0.0	search with cache (only 1: intros x z; only 1: case z; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: auto with real).	0.0333521366119	8
Coq.Reals.Rfunctions.Zpower_nat_powerRZ_absolu	40
Coq.Reals.Rfunctions.powerRZ_R1	40
Coq.Reals.Rfunctions.pow_powerRZ	40	2.0.1.0.1	search with cache (only 1: induction n; only 1: easy; only 1: simpl; only 1: rewrite SuccNat2Pos.id_succ; only 1: auto).	0.0421888828278	19
Coq.Reals.Rfunctions.powerRZ_ind	40
Coq.Reals.Rfunctions.powerRZ_inv	40
Coq.Reals.Rfunctions.powerRZ_neg	40
Coq.Reals.Rfunctions.powerRZ_mult_distr	40
Coq.Reals.Rfunctions.GP_finite	40
Coq.Reals.Rfunctions.sum_f_R0_triangle	40
Coq.Reals.Rfunctions.R_dist_pos	40	4.26.1	search with cache (only 1: intros; only 1: apply Rle_ge; only 1: apply Rabs_pos).	11.3501551151	13163
Coq.Reals.Rfunctions.R_dist_sym	40
Coq.Reals.Rfunctions.R_dist_refl	40
Coq.Reals.Rfunctions.R_dist_eq	40
Coq.Reals.Rfunctions.R_dist_tri	40
Coq.Reals.Rfunctions.R_dist_plus	40
Coq.Reals.Rfunctions.R_dist_mult_l	40
Coq.Reals.Rprod.prod_SO_split	40
Coq.Reals.Rprod.prod_SO_pos	40
Coq.Reals.Rprod.prod_SO_Rle	40
Coq.Reals.Rprod.fact_prodSO	40
Coq.Reals.Rprod.le_n_2n	40	0.1.0.0.0.0.0	search with cache (only 1: intros; only 1: simpl; only 1: rewrite <- (Nat.add_0_r n); only 1: rewrite <- Nat.add_assoc; only 1: rewrite <- Nat.add_assoc; only 1: apply Nat.add_le_mono_l; only 1: apply Nat.le_0_l).	0.0243949890137	8
Coq.Reals.Rprod.RfactN_fact2N_factk	40
Coq.Reals.Rprod.INR_fact_lt_0	40	0.0.0.0.0.5.0	search with cache (only 1: intro; only 1: apply lt_0_INR; only 1: induction n; only 1: simpl; only 1: apply Nat.lt_0_succ; only 1: simpl; only 1: auto with arith).	1.78087210655	484
Coq.Reals.Rprod.C_maj	40
Coq.Reals.Exp_prop.E1_cvg	40
Coq.Reals.Exp_prop.exp_form	40
Coq.Reals.Exp_prop.div2_double	40	0.2	search with cache (only 1: intro; only 1: apply Nat.div2_double).	0.0132629871368	4
Coq.Reals.Exp_prop.div2_S_double	40	0.0.0	search with cache (only 1: intro; only 1: rewrite Nat.div2_succ_double; only 1: reflexivity).	0.0151650905609	3
Coq.Reals.Exp_prop.div2_not_R0	40	1.0.3.6.1.11.0.5.4	search with cache (only 1: intros n m; only 1: destruct n; only 1: auto with arith; only 1: simpl; only 1: cut (n = 0%nat \/ (0 < n)%nat); only 1: destruct n; only 1: auto with arith; only 1: auto with arith; only 1: lia).	6.98360109329	8147
Coq.Reals.Exp_prop.Reste_E_maj	40
Coq.Reals.Exp_prop.maj_Reste_cv_R0	40
Coq.Reals.Exp_prop.Reste_E_cv	40
Coq.Reals.Exp_prop.exp_plus	40
Coq.Reals.Exp_prop.exp_pos_pos	40
Coq.Reals.Exp_prop.exp_pos	40
Coq.Reals.Exp_prop.derivable_pt_lim_exp_0	40
Coq.Reals.Exp_prop.derivable_pt_lim_exp	40
Coq.Reals.Rpower.P_Rmin	40	0.0.7.0.0	search with cache (only 1: intros r1 r2 P H1 H2; only 1: unfold Rmin; only 1: edestruct Rle_dec; only 1: auto with real; only 1: auto with real).	0.152749061584	51
Coq.Reals.Rpower.exp_le_3	40
Coq.Reals.Rpower.exp_increasing	40
Coq.Reals.Rpower.exp_lt_inv	40
Coq.Reals.Rpower.exp_ineq1	40
Coq.Reals.Rpower.ln_exists1	40
Coq.Reals.Rpower.ln_exists	40
Coq.Reals.Rpower.exp_ln	40
Coq.Reals.Rpower.exp_inv	40
Coq.Reals.Rpower.exp_Ropp	40
Coq.Reals.Rpower.ln_increasing	40
Coq.Reals.Rpower.ln_exp	40
Coq.Reals.Rpower.ln_1	40
Coq.Reals.Rpower.ln_lt_inv	40
Coq.Reals.Rpower.ln_inv	40
Coq.Reals.Rpower.ln_mult	40
Coq.Reals.Rpower.ln_Rinv	40
Coq.Reals.Rpower.ln_continue	40
Coq.Reals.Rpower.Rpower_plus	40
Coq.Reals.Rpower.Rpower_mult	40
Coq.Reals.Rpower.Rpower_O	40
Coq.Reals.Rpower.Rpower_1	40
Coq.Reals.Rpower.Rpower_pow	40
Coq.Reals.Rpower.Rpower_lt	40
Coq.Reals.Rpower.Rpower_sqrt	40
Coq.Reals.Rpower.Rpower_Ropp	40
Coq.Reals.Rpower.powerRZ_Rpower	40
Coq.Reals.Rpower.Rle_Rpower	40
Coq.Reals.Rpower.ln_lt_2	40
Coq.Reals.Rpower.limit1_ext	40
Coq.Reals.Rpower.limit1_imp	40
Coq.Reals.Rpower.Rinv_Rdiv	40	2.17.1	search with cache (only 1: intros; only 1: field; only 1: now split).	2.10342597961	1689
Coq.Reals.Rpower.Dln	40
Coq.Reals.Rpower.derivable_pt_lim_ln	40
Coq.Reals.Rpower.D_in_imp	40	11.3.0.0.2	search with cache (only 1: unfold D_in; only 1: unfold limit1_in; only 1: unfold limit_in; only 1: unfold dist; only 1: firstorder using PropExtensionalityFacts.PredExt_imp_PropExt, PropExtensionalityFacts.PredExt_imp_PropFunExt, PropExtensionalityFacts.PropExt_and_PropFunExt_imp_PredExt).	28.9524290562	17707
Coq.Reals.Rpower.D_in_ext	40
Coq.Reals.Rpower.Dpower	40
Coq.Reals.Rpower.derivable_pt_lim_power	40
Coq.Reals.Rpower.Rpower_mult_distr	40
Coq.Reals.Rpower.Rlt_Rpower_l	40
Coq.Reals.Rpower.Rle_Rpower_l	40
Coq.Reals.Rpower.arcsinh_sinh	40
Coq.Reals.Rpower.sinh_arcsinh	40
Coq.Reals.Rpower.derivable_pt_lim_arcsinh	40
Coq.Reals.Rpower.arcsinh_lt	40
Coq.Reals.Rpower.arcsinh_le	40
Coq.Reals.Rpower.arcsinh_0	40
Coq.Reals.ConstructiveRcomplete.CReal_absSmall	40
Coq.Reals.ConstructiveRcomplete.Un_cv_mod_eq	40
Coq.Reals.ConstructiveRcomplete.Rfloor	40
Coq.Reals.ConstructiveRcomplete.FQ_dense	40
Coq.Reals.ConstructiveRcomplete.RQ_limit	40
Coq.Reals.ConstructiveRcomplete.Rdiag_cauchy_sequence	40
Coq.Reals.ConstructiveRcomplete.doubleLeCovariant	40
Coq.Reals.ConstructiveRcomplete.CReal_cv_self	40
Coq.Reals.ConstructiveRcomplete.Un_cv_extens	40
Coq.Reals.ConstructiveRcomplete.R_has_all_rational_limits	40
Coq.Reals.ConstructiveRcomplete.Rcauchy_complete	40
Coq.Reals.ConstructiveRcomplete.CRealImplem	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_increasing_inv	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_unique	40
Coq.Reals.ConstructiveRealsMorphisms.Endomorph_id	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_proper	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_compose	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_le	40	0.2.2.0	search with cache (only 1: intros; only 1: intro abs; only 1: apply CRmorph_increasing_inv in abs; only 1: contradiction).	0.0163140296936	8
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_le_inv	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_zero	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_one	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_opp	40
Coq.Reals.ConstructiveRealsMorphisms.CRplus_pos_rat_lt	40
Coq.Reals.ConstructiveRealsMorphisms.CRplus_neg_rat_lt	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_plus_rat	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_plus	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_pos	40
Coq.Reals.ConstructiveRealsMorphisms.NatOfZ	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_int	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_inv	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_rat	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_pos_pos_le	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_pos_pos	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_appart	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_appart_zero	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_inv	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_rat	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_increasing_Ql	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_increasing_Qr	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_increasing	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorphism	40
Coq.Reals.ConstructiveRealsMorphisms.RightBound	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inv	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inv_rat	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inv_increasing_Qr	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inv_increasing	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorphismInv	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_surject	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inject	40
Coq.Reals.RIneq.Rle_refl	40	1.3.14	search with cache (only 1: intro n; only 1: red; only 1: now right).	0.867984056473	899
Coq.Reals.RIneq.Rge_refl	40	0.0.0	search with cache (only 1: intro; only 1: right; only 1: reflexivity).	0.0489218235016	3
Coq.Reals.RIneq.Rlt_irrefl	40
Coq.Reals.RIneq.Rgt_irrefl	40	0.0.0.0.0	search with cache (only 1: intros; only 1: intro abs; only 1: eapply Rlt_asym; only 1: eauto; only 1: eauto).	0.0552570819855	5
Coq.Reals.RIneq.Rlt_not_eq	40
Coq.Reals.RIneq.Rgt_not_eq	40	2.0.1.2.4.3.0	search with cache (only 1: red; only 1: intro x; only 1: intros; only 1: subst x; only 1: eapply Rlt_asym; only 1: eauto; only 1: eauto).	8.06326079369	2880
Coq.Reals.RIneq.Rlt_dichotomy_converse	40
Coq.Reals.RIneq.Req_dec	40
Coq.Reals.RIneq.Rtotal_order	40	0.0.2.0	search with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), Rlt_dichotomy_converse; only 1: unfold not; only 1: intuition eauto  3).	0.0970649719238	27
Coq.Reals.RIneq.Rdichotomy	40	0.0.6.0	search with cache (only 1: intuition; only 1: generalize (total_order_T r1 r2), Rlt_dichotomy_converse; only 1: unfold not; only 1: intuition eauto  3).	0.0874898433685	18
Coq.Reals.RIneq.Rlt_le	40
Coq.Reals.RIneq.Rgt_ge	40	1.6.0.0	search with cache (only 1: intro; only 1: intro; only 1: red; only 1: tauto).	1.09194993973	79
Coq.Reals.RIneq.Rle_ge	40
Coq.Reals.RIneq.Rge_le	40	2.0.0.0.0.0	search with cache (only 1: destruct 1; only 1: red; only 1: generalize (total_order_T r1 r2); only 1: tauto; only 1: red; only 1: auto with real).	0.0833508968353	11
Coq.Reals.RIneq.Rlt_gt	40	0.0	search with cache (only 1: intros; only 1: auto with real).	0.0474300384521	2
Coq.Reals.RIneq.Rgt_lt	40	0	search with cache (only 1: trivial).	0.0437290668488	1
Coq.Reals.RIneq.Rnot_le_lt	40	16.0.3.4.0	search with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: generalize (total_order_T r1 r2), Rlt_dichotomy_converse; only 1: unfold not; only 1: firstorder).	10.2217159271	5703
Coq.Reals.RIneq.Rnot_ge_gt	40
Coq.Reals.RIneq.Rnot_le_gt	40	0.0.0.0.1	search with cache (only 1: intros r1 r2; only 1: red; only 1: generalize (Rtotal_order r1 r2); only 1: unfold Rle; only 1: tauto).	0.0648808479309	6
Coq.Reals.RIneq.Rnot_ge_lt	40	0.0.1.0	search with cache (only 1: intros r1 r2; only 1: intro abs; only 1: apply Rnot_le_lt; only 1: auto with real).	0.0537130832672	5
Coq.Reals.RIneq.Rnot_lt_le	40	4.0.1.0	search with cache (only 1: intros; only 1: generalize (Rtotal_order r1 r2); only 1: unfold Rle; only 1: intuition).	0.654956817627	14
Coq.Reals.RIneq.Rnot_gt_le	40	0.3.0.1	search with cache (only 1: intros; only 1: red; only 1: generalize (total_order_T r1 r2); only 1: tauto).	0.0662889480591	8
Coq.Reals.RIneq.Rnot_gt_ge	40	0.0.4.0.1	search with cache (only 1: intros; only 1: red; only 1: generalize (total_order_T r1 r2), Rlt_dichotomy_converse; only 1: unfold not; only 1: intuition eauto  3).	0.0718629360199	10
Coq.Reals.RIneq.Rnot_lt_ge	40	0.4.2.0	search with cache (only 1: intros; only 1: red; only 1: generalize (total_order_T r1 r2); only 1: tauto).	0.0660059452057	10
Coq.Reals.RIneq.Rlt_not_le	40
Coq.Reals.RIneq.Rgt_not_le	40	1.0	search with cache (only 1: intros; only 1: auto with real).	0.0544171333313	11
Coq.Reals.RIneq.Rlt_not_ge	40
Coq.Reals.RIneq.Rgt_not_ge	40	2.2.2.0.1	search with cache (only 1: red; only 1: intros; only 1: eapply Rlt_not_le; only 1: eauto; only 1: auto with real).	0.462778091431	200
Coq.Reals.RIneq.Rle_not_lt	40
Coq.Reals.RIneq.Rge_not_lt	40
Coq.Reals.RIneq.Rle_not_gt	40
Coq.Reals.RIneq.Rge_not_gt	40	0.2.0	search with cache (only 1: intros; only 1: apply Rle_not_lt; only 1: auto with real).	0.22243309021	14
Coq.Reals.RIneq.Req_le	40	0.0.1	search with cache (only 1: intros; only 1: red; only 1: tauto).	0.0540928840637	4
Coq.Reals.RIneq.Req_ge	40	0.0.3	search with cache (only 1: intros; only 1: red; only 1: tauto).	0.0556139945984	6
Coq.Reals.RIneq.Req_le_sym	40	1.1.0	search with cache (only 1: unfold Rle; only 1: intros; only 1: auto with real).	0.055997133255	5
Coq.Reals.RIneq.Req_ge_sym	40	1.1.0	search with cache (only 1: unfold Rge; only 1: intros; only 1: auto with real).	0.0566279888153	5
Coq.Reals.RIneq.Rgt_asym	40	0.0.1.2	search with cache (only 1: intros; only 1: apply Rle_not_lt; only 1: red; only 1: auto with real).	0.0563409328461	7
Coq.Reals.RIneq.Rle_antisym	40
Coq.Reals.RIneq.Rge_antisym	40	2.1.1.1	search with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), Rlt_dichotomy_converse; only 1: intros; only 1: intuition).	0.121937036514	25
Coq.Reals.RIneq.Rle_le_eq	40	0.1.1.0.0	search with cache (only 1: intros; only 1: red; only 1: generalize (Rlt_asym r1 r2); only 1: unfold Rle; only 1: intuition).	0.0809860229492	7
Coq.Reals.RIneq.Rge_ge_eq	40	0	search with cache (only 1: intuition).	0.0619471073151	1
Coq.Reals.RIneq.Rlt_eq_compat	40	0.11.1.14	search with cache (only 1: intros A x y z H1 H2; only 1: destruct 1; only 1: subst x; only 1: auto).	5.66738796234	6820
Coq.Reals.RIneq.Rgt_eq_compat	40	1.0.4.5	search with cache (only 1: intros; only 1: generalize (Rlt_asym r1 r2); only 1: subst; only 1: auto with rorders).	1.63330006599	637
Coq.Reals.RIneq.Rle_trans	40
Coq.Reals.RIneq.Rge_trans	40
Coq.Reals.RIneq.Rgt_trans	40	4.5.7	search with cache (only 1: generalize eq_trans, Rlt_trans, Rlt_eq_compat; only 1: red; only 1: intuition eauto  3).	2.0147998333	1549
Coq.Reals.RIneq.Rle_lt_trans	40
Coq.Reals.RIneq.Rlt_le_trans	40	1.0.1	search with cache (only 1: generalize Rlt_trans, Rlt_eq_compat; only 1: unfold Rle; only 1: intuition eauto  2).	0.0984449386597	31
Coq.Reals.RIneq.Rge_gt_trans	40
Coq.Reals.RIneq.Rgt_ge_trans	40
Coq.Reals.RIneq.Rlt_dec	40
Coq.Reals.RIneq.Rle_dec	40	1.1.1	search with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition).	0.145845174789	6
Coq.Reals.RIneq.Rgt_dec	40	0.1.1	search with cache (only 1: intros r1 r2; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition).	0.10492515564	5
Coq.Reals.RIneq.Rge_dec	40	0.0.0	search with cache (only 1: do 2 intro; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition).	0.132107019424	3
Coq.Reals.RIneq.Rlt_le_dec	40	1.4.1	search with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition eauto  4 with real).	1.44566607475	64
Coq.Reals.RIneq.Rgt_ge_dec	40	2.3.0	search with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition).	0.709236860275	8
Coq.Reals.RIneq.Rle_lt_dec	40	1.0.0	search with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition).	0.125726938248	4
Coq.Reals.RIneq.Rge_gt_dec	40	0.2.2.0.0	search with cache (only 1: intros; only 1: edestruct Rlt_le_dec; only 1: eauto with rorders; only 1: left; only 1: eauto with rorders).	0.32958817482	90
Coq.Reals.RIneq.Rlt_or_le	40	1.12.0.0.0	search with cache (only 1: generalize Rlt_trans, Rlt_eq_compat; only 1: unfold Rle; only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition eauto  3).	5.76546597481	2059
Coq.Reals.RIneq.Rgt_or_ge	40	3.9.2	search with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition).	1.8187379837	952
Coq.Reals.RIneq.Rle_or_lt	40	1.2.1.1	search with cache (only 1: intros; only 1: edestruct Rlt_or_le; only 1: eauto with real; only 1: eauto with real).	0.195944070816	33
Coq.Reals.RIneq.Rge_or_gt	40	0.2.0.2.0.0	search with cache (only 1: intros; only 1: edestruct Rlt_or_le; only 1: right; only 1: eauto with rorders; only 1: left; only 1: eauto with rorders).	0.259575843811	83
Coq.Reals.RIneq.Rle_lt_or_eq_dec	40	0.8.0	search with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition).	1.24551510811	128
Coq.Reals.RIneq.inser_trans_R	40
Coq.Reals.RIneq.Rplus_0_r	40
Coq.Reals.RIneq.Rplus_ne	40	4	search with cache (only 1: intuition).	0.122205018997	26
Coq.Reals.RIneq.Rplus_opp_l	40	10.0	search with cache (only 1: intros; only 1: ring).	34.0486950874	249
Coq.Reals.RIneq.Rplus_opp_r_uniq	40
Coq.Reals.RIneq.Rplus_eq_compat_l	40	2.5.0	search with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), Rlt_dichotomy_converse; only 1: intuition).	0.126837968826	32
Coq.Reals.RIneq.Rplus_eq_compat_r	40
Coq.Reals.RIneq.Rplus_eq_reg_l	40
Coq.Reals.RIneq.Rplus_eq_reg_r	40
Coq.Reals.RIneq.Rplus_0_r_uniq	40	0.1.0.1.0	search with cache (only 1: intros x y H; only 1: replace y with - x + x + y by ring; only 1: rewrite Rplus_assoc; only 1: rewrite H; only 1: ring).	0.0786600112915	7
Coq.Reals.RIneq.Rplus_eq_0_l	40
Coq.Reals.RIneq.Rplus_eq_R0	40	1.1.1.0.0.0.1.0.3.2	search with cache (only 1: intros a b H [H0| H0] H1; only 1: absurd (0 < a + b); only 1: rewrite H1; only 1: auto with real; only 1: apply Rle_lt_trans with (a + 0); only 1: rewrite Rplus_0_r; only 1: assumption; only 1: auto using Rplus_lt_compat_l with real; only 1: rewrite <- H0, Rplus_0_r in H1; only 1: auto).	6.10705399513	2243
Coq.Reals.RIneq.Rinv_r	40
Coq.Reals.RIneq.Rinv_l_sym	40	0.1.0	search with cache (only 1: intros; only 1: field; only 1: trivial).	1.91893696785	75
Coq.Reals.RIneq.Rinv_r_sym	40	0.0.0	search with cache (only 1: intros; only 1: field; only 1: trivial).	0.0654580593109	3
Coq.Reals.RIneq.Rmult_0_r	40	2.0	search with cache (only 1: intros; only 1: ring).	0.0822761058807	19
Coq.Reals.RIneq.Rmult_0_l	40	0.0	search with cache (only 1: intro; only 1: ring).	0.057391166687	2
Coq.Reals.RIneq.Rmult_ne	40	0.0.1.2	search with cache (only 1: split; only 1: rewrite Rmult_comm; only 1: apply Rmult_1_l; only 1: apply Rmult_1_l).	0.114135026932	55
Coq.Reals.RIneq.Rmult_1_r	40	0.0	search with cache (only 1: intros; only 1: ring).	0.0558278560638	2
Coq.Reals.RIneq.Rmult_eq_compat_l	40	2.0.1.1.0	search with cache (only 1: intros; only 1: apply f_equal; only 1: generalize (Rlt_asym r1 r2); only 1: subst; only 1: auto with rorders).	0.0904750823975	28
Coq.Reals.RIneq.Rmult_eq_compat_r	40	3.0.9.1	search with cache (only 1: intros; only 1: generalize (Rlt_asym r1 r2); only 1: subst; only 1: reflexivity).	2.97614192963	1377
Coq.Reals.RIneq.Rmult_eq_reg_l	40
Coq.Reals.RIneq.Rmult_eq_reg_r	40
Coq.Reals.RIneq.Rmult_integral	40
Coq.Reals.RIneq.Rmult_eq_0_compat	40
Coq.Reals.RIneq.Rmult_eq_0_compat_r	40	1.0.0	search with cache (only 1: intros; only 1: rewrite H; only 1: auto with real).	0.0547630786896	4
Coq.Reals.RIneq.Rmult_eq_0_compat_l	40	0	search with cache (only 1: auto with real).	0.0483679771423	1
Coq.Reals.RIneq.Rmult_neq_0_reg	40	6.0	search with cache (only 1: intros; only 1: intuition).	0.273586034775	13
Coq.Reals.RIneq.Rmult_integral_contrapositive	40
Coq.Reals.RIneq.Rmult_integral_contrapositive_currified	40	1.0	search with cache (only 1: intros; only 1: auto with real).	0.065484046936	3
Coq.Reals.RIneq.Rmult_plus_distr_r	40
Coq.Reals.RIneq.Rsqr_0	40
Coq.Reals.RIneq.Rsqr_0_uniq	40
Coq.Reals.RIneq.Ropp_eq_compat	40	0	search with cache (only 1: auto with real).	0.0496208667755	1
Coq.Reals.RIneq.Ropp_0	40	4	search with cache (only 1: ring).	0.806881904602	27
Coq.Reals.RIneq.Ropp_eq_0_compat	40	1.10.4	search with cache (only 1: intros; only 1: rewrite H; only 1: ring).	0.554275989532	365
Coq.Reals.RIneq.Ropp_involutive	40	5.6.11.3.1	search with cache (only 1: intros; only 1: apply Rquot1; only 1: rewrite RbaseSymbolsImpl.Ropp_def, Rquot2; only 1: rewrite RbaseSymbolsImpl.Ropp_def, Rquot2; only 1: ring).	8.17914795876	1071
Coq.Reals.RIneq.Ropp_neq_0_compat	40
Coq.Reals.RIneq.Ropp_plus_distr	40	4.1	search with cache (only 1: intros; only 1: ring).	1.63146209717	19
Coq.Reals.RIneq.Ropp_mult_distr_l	40	2.1	search with cache (only 1: intros; only 1: ring).	1.46990704536	17
Coq.Reals.RIneq.Ropp_mult_distr_l_reverse	40	1.0	search with cache (only 1: intros; only 1: ring).	1.58437800407	17
Coq.Reals.RIneq.Rmult_opp_opp	40	0.0	search with cache (only 1: intros; only 1: ring).	0.063729763031	2
Coq.Reals.RIneq.Ropp_mult_distr_r	40	0.0	search with cache (only 1: intros; only 1: ring).	0.0627529621124	2
Coq.Reals.RIneq.Ropp_mult_distr_r_reverse	40	0.0	search with cache (only 1: intros; only 1: ring).	0.0621569156647	2
Coq.Reals.RIneq.Rminus_0_r	40	10.1	search with cache (only 1: intros; only 1: ring).	0.626523017883	110
Coq.Reals.RIneq.Rminus_0_l	40	1.0	search with cache (only 1: intro; only 1: ring).	0.0607750415802	3
Coq.Reals.RIneq.Ropp_minus_distr	40	7.2.2	search with cache (only 1: intro; only 1: intro; only 1: ring).	2.63877296448	202
Coq.Reals.RIneq.Ropp_minus_distr'	40	0.0	search with cache (only 1: intros; only 1: ring).	0.0612280368805	2
Coq.Reals.RIneq.Rminus_diag_eq	40	3.0.2.1	search with cache (only 1: intro; only 1: intros; only 1: rewrite H; only 1: ring).	0.0923218727112	17
Coq.Reals.RIneq.Rminus_diag_uniq	40
Coq.Reals.RIneq.Rminus_diag_uniq_sym	40
Coq.Reals.RIneq.Rplus_minus	40	2.0	search with cache (only 1: intros; only 1: ring).	2.46028804779	18
Coq.Reals.RIneq.Rminus_eq_contra	40	2.3.0	search with cache (only 1: red; only 1: intros; only 1: auto with real).	1.10404396057	29
Coq.Reals.RIneq.Rminus_not_eq	40	0.0.2.0	search with cache (only 1: red; only 1: intros r1 r2 H H0; only 1: apply H; only 1: auto with real).	0.0690879821777	18
Coq.Reals.RIneq.Rminus_not_eq_right	40	0.1.0.0.0	search with cache (only 1: red; only 1: intros r1 r2 H H0; only 1: apply H; only 1: apply Rminus_diag_eq; only 1: auto).	0.0581250190735	6
Coq.Reals.RIneq.Rmult_minus_distr_l	40	1.1	search with cache (only 1: intros; only 1: ring).	1.55835199356	17
Coq.Reals.RIneq.Rinv_1	40	20	search with cache (only 1: field).	0.609477996826	262
Coq.Reals.RIneq.Rinv_neq_0_compat	40
Coq.Reals.RIneq.Rinv_involutive	40
Coq.Reals.RIneq.Rinv_mult_distr	40	0.0.0.0.2.0.0	search with cache (only 1: intros; only 1: apply Rmult_eq_reg_l with r1; only 1: field; only 1: split; only 1: auto with real; only 1: auto with real; only 1: auto with real).	0.780369997025	63
Coq.Reals.RIneq.Ropp_inv_permute	40	0.6.2	search with cache (only 1: intros; only 1: field; only 1: trivial).	0.845639944077	117
Coq.Reals.RIneq.Rinv_r_simpl_r	40	1.1.0.0.0.0	search with cache (only 1: intros; only 1: field; only 1: red; only 1: intro; only 1: apply H; only 1: auto with real).	0.0761630535126	8
Coq.Reals.RIneq.Rinv_r_simpl_l	40	0.1.0	search with cache (only 1: intros; only 1: field; only 1: auto with real).	0.0829699039459	6
Coq.Reals.RIneq.Rinv_r_simpl_m	40
Coq.Reals.RIneq.Rinv_mult_simpl	40
Coq.Reals.RIneq.Rplus_gt_compat_l	40	7.2.1	search with cache (only 1: intros; only 1: red; only 1: auto with real).	0.446600198746	179
Coq.Reals.RIneq.Rplus_lt_compat_r	40
Coq.Reals.RIneq.Rplus_gt_compat_r	40	1.1.2	search with cache (only 1: intros; only 1: red; only 1: auto with real).	0.0725469589233	12
Coq.Reals.RIneq.Rplus_le_compat_l	40
Coq.Reals.RIneq.Rplus_ge_compat_l	40
Coq.Reals.RIneq.Rplus_le_compat_r	40	1.0.3.2.2.1.0.0	search with cache (only 1: unfold Rle; only 1: intros; only 1: elim H; only 1: left; only 1: auto with real; only 1: right; only 1: rewrite <- H0; only 1: auto with zarith real).	7.15818119049	2445
Coq.Reals.RIneq.Rplus_ge_compat_r	40	5.10.3.2	search with cache (only 1: intros; only 1: red; only 1: generalize (total_order_T r1 r2), Rlt_dichotomy_converse; only 1: intuition).	31.9443371296	995
Coq.Reals.RIneq.Rplus_lt_compat	40
Coq.Reals.RIneq.Rplus_le_compat	40
Coq.Reals.RIneq.Rplus_gt_compat	40	2.2.1.1	search with cache (only 1: do 3 intro; only 1: do 3 intro; only 1: red; only 1: auto with real).	0.0705089569092	11
Coq.Reals.RIneq.Rplus_ge_compat	40
Coq.Reals.RIneq.Rplus_lt_le_compat	40
Coq.Reals.RIneq.Rplus_le_lt_compat	40
Coq.Reals.RIneq.Rplus_gt_ge_compat	40	0.0.1.1.0	search with cache (only 1: intros; only 1: red; only 1: apply Rle_lt_trans with (r2 + r3); only 1: auto with real; only 1: auto with real).	0.104156970978	21
Coq.Reals.RIneq.Rplus_ge_gt_compat	40
Coq.Reals.RIneq.Rplus_lt_0_compat	40
Coq.Reals.RIneq.Rplus_le_lt_0_compat	40
Coq.Reals.RIneq.Rplus_lt_le_0_compat	40
Coq.Reals.RIneq.Rplus_le_le_0_compat	40
Coq.Reals.RIneq.sum_inequa_Rle_lt	40	6.0	search with cache (only 1: intros; only 1: intuition).	0.0841131210327	21
Coq.Reals.RIneq.Rplus_lt_reg_l	40
Coq.Reals.RIneq.Rplus_lt_reg_r	40	5.0.0.0.0.0.1.0	search with cache (only 1: intros; only 1: rewrite Rlt_def; only 1: apply CRealLtForget; only 1: apply (CReal_plus_lt_reg_l (Rrepr r)); only 1: rewrite <- Rrepr_plus, <- Rrepr_plus; only 1: rewrite Rlt_def in H; only 1: apply CRealLtEpsilon; only 1: now rewrite 2!(Rplus_comm r)).	30.8308069706	828
Coq.Reals.RIneq.Rplus_le_reg_l	40
Coq.Reals.RIneq.Rplus_le_reg_r	40
Coq.Reals.RIneq.Rplus_gt_reg_l	40
Coq.Reals.RIneq.Rplus_ge_reg_l	40
Coq.Reals.RIneq.Rplus_le_reg_pos_r	40
Coq.Reals.RIneq.Rplus_lt_reg_pos_r	40
Coq.Reals.RIneq.Rplus_ge_reg_neg_r	40
Coq.Reals.RIneq.Rplus_gt_reg_neg_r	40
Coq.Reals.RIneq.Ropp_gt_lt_contravar	40
Coq.Reals.RIneq.Ropp_lt_gt_contravar	40	1.1.0	search with cache (only 1: intros; only 1: red; only 1: auto with real).	0.0540769100189	5
Coq.Reals.RIneq.Ropp_lt_contravar	40	0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: rewrite Rlt_def; only 1: rewrite Rrepr_opp, Rrepr_opp; only 1: apply CRealLtForget; only 1: apply CReal_opp_gt_lt_contravar; only 1: rewrite Rlt_def in H; only 1: apply CRealLtEpsilon; only 1: exact H).	0.0891230106354	8
Coq.Reals.RIneq.Ropp_gt_contravar	40	0	search with cache (only 1: eauto using Rlt_trans with rorders).	0.0479171276093	1
Coq.Reals.RIneq.Ropp_le_ge_contravar	40	1.0.0.2.0	search with cache (only 1: destruct 1; only 1: red; only 1: auto with real; only 1: red; only 1: auto with real).	0.103384971619	8
Coq.Reals.RIneq.Ropp_ge_le_contravar	40	0.3.0.0.0.1	search with cache (only 1: destruct 1; only 1: red; only 1: auto with real; only 1: rewrite H; only 1: red; only 1: tauto).	0.74476313591	10
Coq.Reals.RIneq.Ropp_le_contravar	40	0.0.1	search with cache (only 1: intro; only 1: intro; only 1: auto with real).	0.0561308860779	4
Coq.Reals.RIneq.Ropp_ge_contravar	40	0.0.2.2	search with cache (only 1: unfold Rge; only 1: intros r1 r2 [H| H]; only 1: auto with real; only 1: auto with real).	0.159096956253	8
Coq.Reals.RIneq.Ropp_0_lt_gt_contravar	40
Coq.Reals.RIneq.Ropp_0_gt_lt_contravar	40	0.1.0.0	search with cache (only 1: intros; only 1: replace 0 with - 0; only 1: auto with real; only 1: ring).	0.194450139999	55
Coq.Reals.RIneq.Ropp_lt_gt_0_contravar	40	0.1.0.0	search with cache (only 1: intros; only 1: replace 0 with - 0; only 1: auto with real; only 1: auto with real).	0.109275102615	33
Coq.Reals.RIneq.Ropp_gt_lt_0_contravar	40	0.0.0.0	search with cache (only 1: intros; only 1: replace 0 with - 0; only 1: auto with real; only 1: auto with real).	0.0596439838409	4
Coq.Reals.RIneq.Ropp_0_le_ge_contravar	40	0.0.2.4	search with cache (only 1: intros; only 1: replace 0 with - 0; only 1: auto with real; only 1: auto with real).	0.567563056946	61
Coq.Reals.RIneq.Ropp_0_ge_le_contravar	40	0.1.0.0	search with cache (only 1: intros; only 1: replace 0 with - 0; only 1: auto with real; only 1: auto with real).	0.845717906952	43
Coq.Reals.RIneq.Ropp_lt_cancel	40
Coq.Reals.RIneq.Ropp_gt_cancel	40	1.1.2	search with cache (only 1: intros; only 1: red; only 1: auto with real).	0.0588340759277	7
Coq.Reals.RIneq.Ropp_le_cancel	40
Coq.Reals.RIneq.Ropp_ge_cancel	40
Coq.Reals.RIneq.Rmult_lt_compat_r	40
Coq.Reals.RIneq.Rmult_gt_compat_r	40	1	search with cache (only 1: eauto using Rlt_trans with rorders).	0.395549058914	24
Coq.Reals.RIneq.Rmult_gt_compat_l	40	1.0.6	search with cache (only 1: unfold Rgt; only 1: intros; only 1: auto with real).	0.119547128677	42
Coq.Reals.RIneq.Rmult_le_compat_l	40
Coq.Reals.RIneq.Rmult_le_compat_r	40
Coq.Reals.RIneq.Rmult_ge_compat_l	40	6.8.0	search with cache (only 1: intros r r1 r2 H H0; only 1: apply Rle_ge; only 1: auto with real).	4.1799249649	2022
Coq.Reals.RIneq.Rmult_ge_compat_r	40	6.8.2	search with cache (only 1: intros; only 1: apply Rle_ge; only 1: auto with real).	7.93440818787	3996
Coq.Reals.RIneq.Rmult_le_compat	40
Coq.Reals.RIneq.Rmult_ge_compat	40
Coq.Reals.RIneq.Rmult_gt_0_lt_compat	40
Coq.Reals.RIneq.Rmult_le_0_lt_compat	40
Coq.Reals.RIneq.Rmult_lt_0_compat	40
Coq.Reals.RIneq.Rmult_le_compat_neg_l	40
Coq.Reals.RIneq.Rmult_le_ge_compat_neg_l	40	4	search with cache (only 1: auto with real rorders).	0.266967058182	76
Coq.Reals.RIneq.Rmult_lt_gt_compat_neg_l	40
Coq.Reals.RIneq.Rmult_lt_reg_l	40
Coq.Reals.RIneq.Rmult_lt_reg_r	40
Coq.Reals.RIneq.Rmult_gt_reg_l	40
Coq.Reals.RIneq.Rmult_le_reg_l	40
Coq.Reals.RIneq.Rmult_le_reg_r	40
Coq.Reals.RIneq.Rlt_minus	40
Coq.Reals.RIneq.Rgt_minus	40	1.0.2.2	search with cache (only 1: intros; only 1: apply (Rplus_lt_reg_l r2); only 1: replace (r2 + (r1 - r2)) with r1 by ring; only 1: now rewrite Rplus_0_r).	0.0937440395355	9
Coq.Reals.RIneq.Rlt_Rminus	40
Coq.Reals.RIneq.Rle_minus	40	0.1.0.1.5.0	search with cache (only 1: intros; only 1: elim H; only 1: red; only 1: auto with real; only 1: red; only 1: auto with real).	1.18845891953	467
Coq.Reals.RIneq.Rge_minus	40
Coq.Reals.RIneq.Rminus_lt	40
Coq.Reals.RIneq.Rminus_gt	40	0.0.0.4.0.0.3.8.0	search with cache (only 1: intros; only 1: unfold Rgt in H; only 1: replace r1 with r1 - r2 + r2; only 1: pattern r2 at 3; only 1: replace r2 with 0 + r2; only 1: apply (Rplus_lt_reg_l r2); only 1: auto with real; only 1: auto with real; only 1: ring).	18.7340509892	11735
Coq.Reals.RIneq.Rminus_gt_0_lt	40
Coq.Reals.RIneq.Rminus_le	40	0.4.0.0.0.0.0.1.0.0	search with cache (only 1: destruct 1; only 1: left; only 1: replace r1 with r1 - r2 + r2; only 1: pattern r2 at 3; only 1: replace r2 with 0 + r2; only 1: auto with real; only 1: auto with real; only 1: ring; only 1: red; only 1: auto with real).	2.86781597137	1423
Coq.Reals.RIneq.Rminus_ge	40	1.0.0.0.0.0.1.1.14.1.0	search with cache (only 1: destruct 1; only 1: red; only 1: left; only 1: replace r2 with 0 + r2; only 1: replace r1 with r1 - r2 + r2; only 1: apply Rplus_gt_compat_r; only 1: assumption; only 1: ring; only 1: auto with real; only 1: red; only 1: auto with real).	24.7412099838	19062
Coq.Reals.RIneq.tech_Rplus	40
Coq.Reals.RIneq.Rle_0_sqr	40
Coq.Reals.RIneq.Rlt_0_sqr	40
Coq.Reals.RIneq.Rplus_sqr_eq_0_l	40
Coq.Reals.RIneq.Rplus_sqr_eq_0	40
Coq.Reals.RIneq.Rlt_0_1	40	0.0.1	search with cache (only 1: replace 1 with 0 + 1; only 1: apply Rlt_n_Sn; only 1: apply Rplus_0_l).	0.054190158844	4
Coq.Reals.RIneq.Rle_0_1	40	0.1.0.1	search with cache (only 1: replace 1 with 1²; only 1: auto with real; only 1: unfold Rsqr; only 1: auto with real).	0.0690901279449	6
Coq.Reals.RIneq.Rinv_0_lt_compat	40
Coq.Reals.RIneq.Rinv_lt_0_compat	40	0.0.0.1.1.0.1.0.0.0.0	search with cache (only 1: intros; only 1: apply Rnot_le_lt; only 1: red; only 1: intros; only 1: absurd (1 <= 0); only 1: auto with real; only 1: replace 1 with r * / r; only 1: replace 0 with r * 0; only 1: auto with real; only 1: auto with real; only 1: auto with real).	2.34159588814	999
Coq.Reals.RIneq.Rinv_lt_contravar	40
Coq.Reals.RIneq.Rinv_1_lt_contravar	40
Coq.Reals.RIneq.Rle_lt_0_plus_1	40
Coq.Reals.RIneq.Rlt_plus_1	40	5.0	search with cache (only 1: intro; only 1: apply Rlt_n_Sn).	0.0581660270691	12
Coq.Reals.RIneq.tech_Rgt_minus	40	0.2.2.0.0.3.3.4	search with cache (only 1: intros x y z; only 1: unfold Rminus, CReal_minus; only 1: pattern x at 1; only 1: rewrite <- (Rplus_0_r x); only 1: apply Rplus_lt_compat_l; only 1: replace 0 with - 0; only 1: auto with real; only 1: ring).	37.5306088924	25929
Coq.Reals.RIneq.S_INR	40	1.0.1.3.3	search with cache (only 1: destruct n; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: constructor).	0.67373919487	237
Coq.Reals.RIneq.S_O_plus_INR	40	0.0.0.0.0.0	search with cache (only 1: simpl; only 1: intro; only 1: case n; only 1: auto with real; only 1: intro; only 1: auto with real).	0.0682339668274	6
Coq.Reals.RIneq.plus_INR	40
Coq.Reals.RIneq.minus_INR	40
Coq.Reals.RIneq.mult_INR	40
Coq.Reals.RIneq.pow_INR	40
Coq.Reals.RIneq.lt_0_INR	40
Coq.Reals.RIneq.lt_INR	40
Coq.Reals.RIneq.lt_1_INR	40
Coq.Reals.RIneq.pos_INR_nat_of_P	40
Coq.Reals.RIneq.pos_INR	40
Coq.Reals.RIneq.INR_lt	40
Coq.Reals.RIneq.le_INR	40
Coq.Reals.RIneq.INR_not_0	40	0.0.7.0.1	search with cache (only 1: red; only 1: intros; only 1: subst n; only 1: apply H; only 1: auto with real).	0.584738969803	180
Coq.Reals.RIneq.not_0_INR	40
Coq.Reals.RIneq.not_INR	40
Coq.Reals.RIneq.INR_eq	40
Coq.Reals.RIneq.INR_le	40
Coq.Reals.RIneq.not_1_INR	40
Coq.Reals.RIneq.IZN	40	6.0.3.0.0.3.7	search with cache (only 1: intros [| p| n]; only 1: exists 0%nat; only 1: reflexivity; only 1: exists (Pos.to_nat p); only 1: rewrite positive_nat_Z; only 1: trivial; only 1: now destruct 1 || trivial).	5.16408205032	5676
Coq.Reals.RIneq.INR_IPR	40
Coq.Reals.RIneq.INR_IZR_INZ	40
Coq.Reals.RIneq.plus_IZR_NEG_POS	40
Coq.Reals.RIneq.plus_IZR	40
Coq.Reals.RIneq.mult_IZR	40
Coq.Reals.RIneq.pow_IZR	40
Coq.Reals.RIneq.succ_IZR	40
Coq.Reals.RIneq.opp_IZR	40	0.6.0.2.0.9	search with cache (only 1: intro z; only 1: case z; only 1: auto with real; only 1: auto with real; only 1: unfold IZR; only 1: auto with real).	1.87611103058	1050
Coq.Reals.RIneq.minus_IZR	40
Coq.Reals.RIneq.Z_R_minus	40
Coq.Reals.RIneq.lt_0_IZR	40
Coq.Reals.RIneq.lt_IZR	40
Coq.Reals.RIneq.eq_IZR_R0	40
Coq.Reals.RIneq.eq_IZR	40
Coq.Reals.RIneq.not_0_IZR	40
Coq.Reals.RIneq.le_0_IZR	40
Coq.Reals.RIneq.le_IZR	40
Coq.Reals.RIneq.le_IZR_R1	40
Coq.Reals.RIneq.IZR_ge	40
Coq.Reals.RIneq.IZR_le	40
Coq.Reals.RIneq.IZR_lt	40
Coq.Reals.RIneq.IZR_neq	40	3.2.2.0.1.6	search with cache (only 1: intros z1 z2 H; only 1: red; only 1: intros H0; only 1: case H; only 1: apply eq_IZR; only 1: auto).	7.85958600044	2145
Coq.Reals.RIneq.one_IZR_lt1	40
Coq.Reals.RIneq.one_IZR_r_R1	40
Coq.Reals.RIneq.single_z_r_R1	40
Coq.Reals.RIneq.tech_single_z_r_R1	40
Coq.Reals.RIneq.Rmult_le_pos	40	0.0.13.1	search with cache (only 1: intros; only 1: replace 0 with 0 * r2; only 1: auto with real; only 1: auto with real).	12.9633929729	4658
Coq.Reals.RIneq.Rinv_le_contravar	40
Coq.Reals.RIneq.Rle_Rinv	40
Coq.Reals.RIneq.Ropp_div	40
Coq.Reals.RIneq.double	40	6.2	search with cache (only 1: intros; only 1: ring).	0.0656170845032	10
Coq.Reals.RIneq.double_var	40	31.0	search with cache (only 1: intro; only 1: field).	10.1156919003	2634
Coq.Reals.RIneq.R_rm	40
Coq.Reals.RIneq.Zeq_bool_IZR	40
Coq.Reals.RIneq.Rmult_ge_0_gt_0_lt_compat	40	0.0.0.1.0.2.0	search with cache (only 1: intros; only 1: apply Rle_lt_trans with (r2 * r3); only 1: apply Rmult_le_compat_r; only 1: auto with real; only 1: left; only 1: auto with real; only 1: auto with real).	0.875147819519	59
Coq.Reals.RIneq.le_epsilon	40
Coq.Reals.RIneq.completeness_weak	40
Coq.Reals.RIneq.Rdiv_lt_0_compat	40
Coq.Reals.RIneq.Rdiv_plus_distr	40	1.1.1.2	search with cache (only 1: intros x y; only 1: intros; only 1: unfold Rdiv; only 1: ring).	0.279824018478	45
Coq.Reals.RIneq.Rdiv_minus_distr	40	0.1.0.3	search with cache (only 1: intros x y; only 1: unfold Rdiv; only 1: intros; only 1: ring).	0.226201057434	16
Coq.Reals.RIneq.Req_EM_T	40	0.0.2.1	search with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), Rlt_dichotomy_converse; only 1: unfold not; only 1: intuition eauto  3).	0.956477880478	19
Coq.Reals.ClassicalDedekindReals.isLowerCut_hprop	40
Coq.Reals.ClassicalDedekindReals.lowerCutBelow	40
Coq.Reals.ClassicalDedekindReals.lowerCutAbove	40
Coq.Reals.ClassicalDedekindReals.DRealQlim_rec	40
Coq.Reals.ClassicalDedekindReals.DRealQlim	40
Coq.Reals.ClassicalDedekindReals.DRealAbstr	40
Coq.Reals.ClassicalDedekindReals.UpperAboveLower	40
Coq.Reals.ClassicalDedekindReals.DRealRepr	40
Coq.Reals.ClassicalDedekindReals.Rle_antisym	40
Coq.Reals.ClassicalDedekindReals.lowerUpper	40
Coq.Reals.ClassicalDedekindReals.DRealOpen	40
Coq.Reals.ClassicalDedekindReals.DRealReprQ	40
Coq.Reals.ClassicalDedekindReals.DRealReprQup	40
Coq.Reals.ClassicalDedekindReals.DRealQuot1	40
Coq.Reals.ClassicalDedekindReals.DRealAbstrFalse	40
Coq.Reals.ClassicalDedekindReals.DRealQuot2	40
Coq.Reals.ArithProp.minus_neq_O	40
Coq.Reals.ArithProp.le_minusni_n	40	0.1.4	search with cache (only 1: fix odd_equiv 1; only 1: intros n m le; only 1: auto with real).	0.285192012787	78
Coq.Reals.ArithProp.lt_minus_O_lt	40	3.0.4	search with cache (only 1: intros; only 1: apply Nat.lt_add_lt_sub_r; only 1: now Nat.nzsimpl).	0.595854997635	100
Coq.Reals.ArithProp.even_odd_cor	40
Coq.Reals.ArithProp.le_double	40
Coq.Reals.ArithProp.euclidian_division	40
Coq.Reals.ArithProp.tech8	40	0.0.3.0.0.0.0	search with cache (only 1: intros; only 1: revert n; only 1: intros; only 1: revert n; only 1: induction n; only 1: auto with arith; only 1: auto with arith).	0.100571870804	34
Coq.Reals.R_Ifp.tech_up	40
Coq.Reals.R_Ifp.up_tech	40
Coq.Reals.R_Ifp.fp_R0	40
Coq.Reals.R_Ifp.for_base_fp	40
Coq.Reals.R_Ifp.base_fp	40
Coq.Reals.R_Ifp.base_Int_part	40
Coq.Reals.R_Ifp.Int_part_INR	40
Coq.Reals.R_Ifp.fp_nat	40
Coq.Reals.R_Ifp.R0_fp_O	40
Coq.Reals.R_Ifp.Rminus_Int_part1	40
Coq.Reals.R_Ifp.Rminus_Int_part2	40
Coq.Reals.R_Ifp.Rminus_fp1	40
Coq.Reals.R_Ifp.Rminus_fp2	40
Coq.Reals.R_Ifp.plus_Int_part1	40
Coq.Reals.R_Ifp.plus_Int_part2	40
Coq.Reals.R_Ifp.plus_frac_part1	40
Coq.Reals.R_Ifp.plus_frac_part2	40
Coq.Reals.Machin.atan_sub_correct	40
Coq.Reals.Machin.tech	40
Coq.Reals.Machin.Machin_2_3	40
Coq.Reals.Machin.Machin_4_5_239	40
Coq.Reals.Machin.Machin_2_3_7	40
Coq.Reals.Machin.PI_2_3_7_ineq	40
Coq.Reals.RiemannInt.phi_sequence_prop	40
Coq.Reals.RiemannInt.RiemannInt_P1	40
Coq.Reals.RiemannInt.RiemannInt_P2	40
Coq.Reals.RiemannInt.RiemannInt_P3	40
Coq.Reals.RiemannInt.RiemannInt_exists	40
Coq.Reals.RiemannInt.RiemannInt_P4	40
Coq.Reals.RiemannInt.RinvN_pos	40	0.0	search with cache (only 1: intros; only 1: auto with real).	0.0178611278534	2
Coq.Reals.RiemannInt.RinvN_cv	40
Coq.Reals.RiemannInt.Riemann_integrable_ext	40
Coq.Reals.RiemannInt.RiemannInt_P5	40
Coq.Reals.RiemannInt.maxN	40
Coq.Reals.RiemannInt.Heine_cor1	40
Coq.Reals.RiemannInt.Heine_cor2	40
Coq.Reals.RiemannInt.SubEqui_P1	40	2.0	search with cache (only 1: intros x x' y y'; only 1: reflexivity).	0.0579040050507	38
Coq.Reals.RiemannInt.SubEqui_P2	40
Coq.Reals.RiemannInt.SubEqui_P3	40
Coq.Reals.RiemannInt.SubEqui_P4	40
Coq.Reals.RiemannInt.SubEqui_P5	40
Coq.Reals.RiemannInt.SubEqui_P6	40
Coq.Reals.RiemannInt.SubEqui_P7	40
Coq.Reals.RiemannInt.SubEqui_P8	40
Coq.Reals.RiemannInt.SubEqui_P9	40
Coq.Reals.RiemannInt.RiemannInt_P6	40
Coq.Reals.RiemannInt.RiemannInt_P7	40
Coq.Reals.RiemannInt.continuity_implies_RiemannInt	40
Coq.Reals.RiemannInt.RiemannInt_P8	40
Coq.Reals.RiemannInt.RiemannInt_P9	40
Coq.Reals.RiemannInt.RiemannInt_P10	40
Coq.Reals.RiemannInt.RiemannInt_P11	40
Coq.Reals.RiemannInt.RiemannInt_P12	40
Coq.Reals.RiemannInt.RiemannInt_P13	40
Coq.Reals.RiemannInt.RiemannInt_P14	40
Coq.Reals.RiemannInt.RiemannInt_P15	40
Coq.Reals.RiemannInt.RiemannInt_P16	40
Coq.Reals.RiemannInt.Rle_cv_lim	40
Coq.Reals.RiemannInt.RiemannInt_P17	40
Coq.Reals.RiemannInt.RiemannInt_P18	40
Coq.Reals.RiemannInt.RiemannInt_P19	40
Coq.Reals.RiemannInt.FTC_P1	40
Coq.Reals.RiemannInt.RiemannInt_P20	40
Coq.Reals.RiemannInt.RiemannInt_P21	40
Coq.Reals.RiemannInt.RiemannInt_P22	40
Coq.Reals.RiemannInt.RiemannInt_P23	40
Coq.Reals.RiemannInt.RiemannInt_P24	40
Coq.Reals.RiemannInt.RiemannInt_P25	40
Coq.Reals.RiemannInt.RiemannInt_P26	40
Coq.Reals.RiemannInt.RiemannInt_P27	40
Coq.Reals.RiemannInt.RiemannInt_P28	40
Coq.Reals.RiemannInt.RiemannInt_P29	40
Coq.Reals.RiemannInt.RiemannInt_P30	40
Coq.Reals.RiemannInt.RiemannInt_P31	40
Coq.Reals.RiemannInt.RiemannInt_P32	40
Coq.Reals.RiemannInt.RiemannInt_P33	40
Coq.Reals.RiemannInt.FTC_Riemann	40
Coq.Reals.RiemannInt.RiemannInt_const_bound	40
Coq.Reals.RiemannInt.Riemann_integrable_scal	40
Coq.Reals.RiemannInt.Riemann_integrable_Ropp	40
Coq.Reals.Ranalysis2.formule	40
Coq.Reals.Ranalysis2.maj_term1	40
Coq.Reals.Ranalysis2.maj_term2	40
Coq.Reals.Ranalysis2.maj_term3	40
Coq.Reals.Ranalysis2.maj_term4	40
Coq.Reals.Ranalysis2.D_x_no_cond	40
Coq.Reals.Ranalysis2.Rabs_4	40
Coq.Reals.Ranalysis2.Rlt_4	40
Coq.Reals.Ranalysis2.quadruple	40	1.0	search with cache (only 1: intro; only 1: ring_Rsqr).	0.0224421024323	3
Coq.Reals.Ranalysis2.quadruple_var	40	6.0.0	search with cache (only 1: intro; only 1: rewrite <- double; only 1: field).	0.0503950119019	13
Coq.Reals.Ranalysis2.continuous_neq_0	40
Coq.Reals.Rtopology.interior_P1	40
Coq.Reals.Rtopology.interior_P2	40	2.0.0.0	search with cache (only 1: intros; only 1: unfold included; only 1: unfold interior; only 1: assumption).	0.0265820026398	12
Coq.Reals.Rtopology.adherence_P1	40
Coq.Reals.Rtopology.included_trans	40	1.2.2.0	search with cache (only 1: intro; only 1: unfold included; only 1: intros A P h x; only 1: auto).	0.125325918198	117
Coq.Reals.Rtopology.interior_P3	40
Coq.Reals.Rtopology.complementary_P1	40	2.1.22.2.0	search with cache (only 1: intros; only 1: intro; only 1: destruct H as (b, H); only 1: elim H; only 1: auto).	2.60635399818	5218
Coq.Reals.Rtopology.adherence_P2	40
Coq.Reals.Rtopology.adherence_P3	40
Coq.Reals.Rtopology.open_set_P1	40
Coq.Reals.Rtopology.closed_set_P1	40
Coq.Reals.Rtopology.neighbourhood_P1	40	10.2.0	search with cache (only 1: unfold included; only 1: intros A P h x; only 1: firstorder).	3.0980591774	1824
Coq.Reals.Rtopology.open_set_P2	40	10.2.0	search with cache (only 1: unfold open_set, complementary, point_adherent; only 1: intros A P h x; only 1: firstorder).	2.94005203247	1743
Coq.Reals.Rtopology.open_set_P3	40
Coq.Reals.Rtopology.open_set_P4	40	0.0.19	search with cache (only 1: unfold open_set, interior; only 1: intros; only 1: elim H).	0.0901348590851	290
Coq.Reals.Rtopology.open_set_P5	40
Coq.Reals.Rtopology.disc_P1	40
Coq.Reals.Rtopology.continuity_P1	40
Coq.Reals.Rtopology.continuity_P2	40
Coq.Reals.Rtopology.continuity_P3	40
Coq.Reals.Rtopology.Rsepare	40
Coq.Reals.Rtopology.restriction_family	40	5.9.1.20	search with cache (only 1: intros []; only 1: simpl; only 1: intros A P H; only 1: firstorder).	37.427243948	56968
Coq.Reals.Rtopology.family_P1	40
Coq.Reals.Rtopology.open_set_P6	40
Coq.Reals.Rtopology.compact_P1	40
Coq.Reals.Rtopology.compact_P2	40
Coq.Reals.Rtopology.compact_EMP	40
Coq.Reals.Rtopology.compact_eqDom	40
Coq.Reals.Rtopology.compact_P3	40
Coq.Reals.Rtopology.compact_P4	40
Coq.Reals.Rtopology.compact_P5	40
Coq.Reals.Rtopology.compact_carac	40
Coq.Reals.Rtopology.continuity_compact	40
Coq.Reals.Rtopology.prolongement_C0	40
Coq.Reals.Rtopology.continuity_ab_maj	40
Coq.Reals.Rtopology.continuity_ab_min	40
Coq.Reals.Rtopology.ValAdh_un_exists	40
Coq.Reals.Rtopology.ValAdh_un_prop	40
Coq.Reals.Rtopology.adherence_P4	40
Coq.Reals.Rtopology.compact_P6	40
Coq.Reals.Rtopology.Bolzano_Weierstrass	40
Coq.Reals.Rtopology.is_lub_u	40
Coq.Reals.Rtopology.domain_P1	40
Coq.Reals.Rtopology.Heine	40
Coq.Reals.Raxioms.Rrepr_0	40
Coq.Reals.Raxioms.Rrepr_1	40
Coq.Reals.Raxioms.Rrepr_plus	40
Coq.Reals.Raxioms.Rrepr_opp	40
Coq.Reals.Raxioms.Rrepr_minus	40
Coq.Reals.Raxioms.Rrepr_mult	40
Coq.Reals.Raxioms.Rrepr_inv	40
Coq.Reals.Raxioms.Rrepr_le	40
Coq.Reals.Raxioms.Rrepr_appart	40
Coq.Reals.Raxioms.Rappart_repr	40
Coq.Reals.Raxioms.Rplus_comm	40
Coq.Reals.Raxioms.Rplus_assoc	40
Coq.Reals.Raxioms.Rplus_opp_r	40
Coq.Reals.Raxioms.Rplus_0_l	40
Coq.Reals.Raxioms.Rmult_comm	40
Coq.Reals.Raxioms.Rmult_assoc	40
Coq.Reals.Raxioms.Rinv_l	40
Coq.Reals.Raxioms.Rmult_1_l	40
Coq.Reals.Raxioms.R1_neq_R0	40
Coq.Reals.Raxioms.Rmult_plus_distr_l	40
Coq.Reals.Raxioms.Rlt_asym	40
Coq.Reals.Raxioms.Rlt_trans	40
Coq.Reals.Raxioms.Rplus_lt_compat_l	40
Coq.Reals.Raxioms.Rmult_lt_compat_l	40
Coq.Reals.Raxioms.Rrepr_INR	40
Coq.Reals.Raxioms.Rrepr_IPR2	40
Coq.Reals.Raxioms.Rrepr_IPR	40
Coq.Reals.Raxioms.Rrepr_IZR	40
Coq.Reals.Raxioms.archimed	40
Coq.Reals.Raxioms.completeness	40
Coq.Reals.Rseries.EUn_noempty	40
Coq.Reals.Rseries.Un_in_EUn	40	3.8	search with cache (only 1: fix odd_equiv 1; only 1: assumption).	0.69357919693	580
Coq.Reals.Rseries.Un_bound_imp	40	16.1	search with cache (only 1: unfold EUn; only 1: firstorder  (subst; auto)).	4.18777489662	4605
Coq.Reals.Rseries.growing_prop	40
Coq.Reals.Rseries.Un_cv_crit_lub	40
Coq.Reals.Rseries.Un_cv_crit	40
Coq.Reals.Rseries.finite_greater	40
Coq.Reals.Rseries.cauchy_bound	40
Coq.Reals.Rseries.GP_infinite	40
Coq.Reals.Rseries.CV_shift	40
Coq.Reals.Rseries.CV_shift'	40	2.0.3.0.0	search with cache (only 1: intros f' k l cvfk eps ep; only 1: destruct (cvfk eps ep) as [N Pn]; only 1: exists N; only 1: intros n nN; only 1: auto with arith).	0.173040866852	47
Coq.Reals.Rseries.Un_growing_shift	40	0.3.11.15	search with cache (only 1: intros; only 1: intros m; only 1: simpl; only 1: auto with arith).	1.86762595177	2721
Coq.Reals.Binomial.pascal_step1	40
Coq.Reals.Binomial.pascal_step2	40
Coq.Reals.Binomial.pascal_step3	40
Coq.Reals.Binomial.pascal	40
Coq.Reals.Binomial.binomial	40
Coq.Reals.PSeries_reg.Boule_convex	40
Coq.Reals.PSeries_reg.boule_of_interval	40
Coq.Reals.PSeries_reg.boule_in_interval	40
Coq.Reals.PSeries_reg.Ball_in_inter	40
Coq.Reals.PSeries_reg.Boule_center	40
Coq.Reals.PSeries_reg.CVN_CVU	40
Coq.Reals.PSeries_reg.CVU_continuity	40
Coq.Reals.PSeries_reg.continuity_pt_finite_SF	40
Coq.Reals.PSeries_reg.SFL_continuity_pt	40
Coq.Reals.PSeries_reg.SFL_continuity	40
Coq.Reals.PSeries_reg.CVN_R_CVS	40
Coq.Reals.PSeries_reg.CVU_cv	40
Coq.Reals.PSeries_reg.CVU_ext_lim	40
Coq.Reals.PSeries_reg.CVU_derivable	40
Coq.Reals.Ranalysis_reg.AppVar	40
Coq.Reals.MVT.MVT	40
Coq.Reals.MVT.MVT_cor1	40
Coq.Reals.MVT.MVT_cor2	40
Coq.Reals.MVT.MVT_cor3	40
Coq.Reals.MVT.Rolle	40
Coq.Reals.MVT.nonneg_derivative_1	40
Coq.Reals.MVT.nonpos_derivative_0	40
Coq.Reals.MVT.increasing_decreasing_opp	40	7.3.6.4	search with cache (only 1: intros f X x; only 1: unfold opp_fct; only 1: intros; only 1: auto with real).	19.7336411476	5944
Coq.Reals.MVT.nonpos_derivative_1	40
Coq.Reals.MVT.positive_derivative	40
Coq.Reals.MVT.strictincreasing_strictdecreasing_opp	40	1.3.4	search with cache (only 1: intros f X x; only 1: unfold opp_fct; only 1: auto with real).	0.0912749767303	103
Coq.Reals.MVT.negative_derivative	40
Coq.Reals.MVT.null_derivative_0	40
Coq.Reals.MVT.increasing_decreasing	40
Coq.Reals.MVT.null_derivative_1	40
Coq.Reals.MVT.derive_increasing_interv_ax	40
Coq.Reals.MVT.derive_increasing_interv	40
Coq.Reals.MVT.derive_increasing_interv_var	40
Coq.Reals.MVT.IAF	40
Coq.Reals.MVT.IAF_var	40
Coq.Reals.MVT.null_derivative_loc	40
Coq.Reals.MVT.antiderivative_Ucte	40
Coq.Reals.MVT.MVT_abs	40
Coq.Reals.Ranalysis1.continuity_pt_locally_ext	40
Coq.Reals.Ranalysis1.continuity_pt_plus	40
Coq.Reals.Ranalysis1.continuity_pt_opp	40
Coq.Reals.Ranalysis1.continuity_pt_minus	40
Coq.Reals.Ranalysis1.continuity_pt_mult	40
Coq.Reals.Ranalysis1.continuity_pt_const	40
Coq.Reals.Ranalysis1.continuity_pt_scal	40
Coq.Reals.Ranalysis1.continuity_pt_inv	40
Coq.Reals.Ranalysis1.div_eq_inv	40	5	search with cache (only 1: reflexivity).	0.0504310131073	13
Coq.Reals.Ranalysis1.continuity_pt_div	40
Coq.Reals.Ranalysis1.continuity_pt_comp	40
Coq.Reals.Ranalysis1.continuity_plus	40
Coq.Reals.Ranalysis1.continuity_opp	40	4.1.1.0.0.1	search with cache (only 1: unfold continuity; only 1: unfold continuity_pt, opp_fct; only 1: unfold continue_in; only 1: intros; only 1: apply limit_Ropp; only 1: auto).	1.54133701324	859
Coq.Reals.Ranalysis1.continuity_minus	40
Coq.Reals.Ranalysis1.continuity_mult	40
Coq.Reals.Ranalysis1.continuity_const	40	0.0.3.2.0.1.0.0.0.0.0.0.1.0.0.1	search with cache (only 1: unfold continuity; only 1: unfold constant, continuity_pt; only 1: unfold continue_in; only 1: unfold limit1_in; only 1: unfold limit_in; only 1: intros; only 1: exists 1; only 1: split; only 1: apply Rlt_0_1; only 1: intros; only 1: generalize (H x x0); only 1: intro; only 1: rewrite H2; only 1: simpl; only 1: rewrite R_dist_eq; only 1: assumption).	20.8238630295	17005
Coq.Reals.Ranalysis1.continuity_scal	40
Coq.Reals.Ranalysis1.continuity_inv	40
Coq.Reals.Ranalysis1.continuity_div	40
Coq.Reals.Ranalysis1.continuity_comp	40
Coq.Reals.Ranalysis1.uniqueness_step1	40
Coq.Reals.Ranalysis1.uniqueness_step2	40
Coq.Reals.Ranalysis1.uniqueness_step3	40
Coq.Reals.Ranalysis1.uniqueness_limite	40
Coq.Reals.Ranalysis1.derive_pt_eq	40
Coq.Reals.Ranalysis1.derive_pt_eq_0	40	1.0.0.1.0.1.0.0	search with cache (only 1: intros; only 1: pose proof (proj2_sig pr) as H1; only 1: unfold derivable_pt_abs in H1; only 1: pose proof (uniqueness_limite _ _ _ _ H H1) as H2; only 1: unfold derive_pt; only 1: unfold derivable_pt_abs; only 1: symmetry; only 1: assumption).	0.919611930847	39
Coq.Reals.Ranalysis1.derive_pt_eq_1	40	0.0.0.2.0	search with cache (only 1: intros; only 1: pose proof (proj2_sig pr) as H1; only 1: unfold derive_pt in H; only 1: rewrite H in H1; only 1: assumption).	0.0537531375885	7
Coq.Reals.Ranalysis1.derive_pt_D_in	40
Coq.Reals.Ranalysis1.derivable_pt_lim_D_in	40
Coq.Reals.Ranalysis1.derivable_pt_lim_ext	40
Coq.Reals.Ranalysis1.derivable_pt_lim_locally_ext	40
Coq.Reals.Ranalysis1.derivable_derive	40
Coq.Reals.Ranalysis1.derivable_continuous_pt	40
Coq.Reals.Ranalysis1.derivable_continuous	40
Coq.Reals.Ranalysis1.derivable_pt_lim_plus	40
Coq.Reals.Ranalysis1.derivable_pt_lim_opp	40
Coq.Reals.Ranalysis1.derivable_pt_lim_minus	40
Coq.Reals.Ranalysis1.derivable_pt_lim_mult	40
Coq.Reals.Ranalysis1.derivable_pt_lim_const	40
Coq.Reals.Ranalysis1.derivable_pt_lim_scal	40
Coq.Reals.Ranalysis1.derivable_pt_lim_div_scal	40
Coq.Reals.Ranalysis1.derivable_pt_lim_scal_right	40
Coq.Reals.Ranalysis1.derivable_pt_lim_id	40
Coq.Reals.Ranalysis1.derivable_pt_lim_Rsqr	40
Coq.Reals.Ranalysis1.derivable_pt_lim_comp	40
Coq.Reals.Ranalysis1.derivable_pt_plus	40
Coq.Reals.Ranalysis1.derivable_pt_opp	40
Coq.Reals.Ranalysis1.derivable_pt_minus	40
Coq.Reals.Ranalysis1.derivable_pt_mult	40
Coq.Reals.Ranalysis1.derivable_pt_const	40
Coq.Reals.Ranalysis1.derivable_pt_scal	40
Coq.Reals.Ranalysis1.derivable_pt_id	40
Coq.Reals.Ranalysis1.derivable_pt_Rsqr	40
Coq.Reals.Ranalysis1.derivable_pt_comp	40
Coq.Reals.Ranalysis1.derivable_plus	40
Coq.Reals.Ranalysis1.derivable_opp	40
Coq.Reals.Ranalysis1.derivable_minus	40
Coq.Reals.Ranalysis1.derivable_mult	40
Coq.Reals.Ranalysis1.derivable_const	40	0.0.0.0.1	search with cache (only 1: unfold derivable, continuity; only 1: intros; only 1: unfold derivable_pt; only 1: exists 0; only 1: apply derivable_pt_lim_const).	0.0599091053009	15
Coq.Reals.Ranalysis1.derivable_scal	40
Coq.Reals.Ranalysis1.derivable_id	40
Coq.Reals.Ranalysis1.derivable_Rsqr	40	1.0.0.0.0	search with cache (only 1: unfold derivable; only 1: unfold derivable_pt; only 1: intro; only 1: exists (2 * x); only 1: apply derivable_pt_lim_Rsqr).	0.0590839385986	6
Coq.Reals.Ranalysis1.derivable_comp	40
Coq.Reals.Ranalysis1.derive_pt_plus	40
Coq.Reals.Ranalysis1.derive_pt_opp	40
Coq.Reals.Ranalysis1.derive_pt_minus	40
Coq.Reals.Ranalysis1.derive_pt_mult	40
Coq.Reals.Ranalysis1.derive_pt_const	40
Coq.Reals.Ranalysis1.derive_pt_scal	40
Coq.Reals.Ranalysis1.derive_pt_id	40
Coq.Reals.Ranalysis1.derive_pt_Rsqr	40	1.16.0	search with cache (only 1: intro; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_Rsqr).	1.27080488205	636
Coq.Reals.Ranalysis1.derive_pt_comp	40
Coq.Reals.Ranalysis1.derivable_pt_lim_pow_pos	40
Coq.Reals.Ranalysis1.derivable_pt_lim_pow	40
Coq.Reals.Ranalysis1.derivable_pt_pow	40	4.3.13	search with cache (only 1: fix odd_equiv 1; only 1: intro; only 1: auto with real).	25.1628859043	28186
Coq.Reals.Ranalysis1.derivable_pow	40	0.0.0.0.1	search with cache (only 1: unfold derivable; only 1: intros; only 1: unfold derivable_pt; only 1: exists (INR n * x ^ Init.Nat.pred n); only 1: apply derivable_pt_lim_pow).	0.103518009186	35
Coq.Reals.Ranalysis1.derive_pt_pow	40
Coq.Reals.Ranalysis1.pr_nu	40
Coq.Reals.Ranalysis1.deriv_maximum	40
Coq.Reals.Ranalysis1.deriv_minimum	40
Coq.Reals.Ranalysis1.deriv_constant2	40
Coq.Reals.Ranalysis1.nonneg_derivative_0	40
Coq.Reals.SeqProp.growing_cv	40
Coq.Reals.SeqProp.decreasing_growing	40
Coq.Reals.SeqProp.decreasing_cv	40
Coq.Reals.SeqProp.ub_to_lub	40
Coq.Reals.SeqProp.lb_to_glb	40
Coq.Reals.SeqProp.maj_ss	40
Coq.Reals.SeqProp.min_ss	40	1.1.0.0.0.0.0.6.0.1.3.0	search with cache (only 1: intros; only 1: elim H; only 1: intros; only 1: unfold is_upper_bound in H0; only 1: exists x; only 1: unfold is_upper_bound; only 1: intros; only 1: apply H0; only 1: elim H1; only 1: intros; only 1: exists (k + x1)%nat; only 1: assumption).	19.4082138538	18898
Coq.Reals.SeqProp.Wn_decreasing	40
Coq.Reals.SeqProp.Vn_growing	40
Coq.Reals.SeqProp.Vn_Un_Wn_order	40
Coq.Reals.SeqProp.min_maj	40
Coq.Reals.SeqProp.maj_min	40
Coq.Reals.SeqProp.cauchy_maj	40
Coq.Reals.SeqProp.cauchy_opp	40
Coq.Reals.SeqProp.cauchy_min	40	0.0.0.0.0.0.0.2.0.3.0.0.0.0.5.0	search with cache (only 1: intros; only 1: apply cauchy_bound; only 1: unfold Cauchy_crit; only 1: unfold R_dist; only 1: intros; only 1: elim (H eps H0); only 1: intros; only 1: exists x; only 1: intros; only 1: unfold opp_seq; only 1: rewrite <- Rabs_Ropp; only 1: replace (- (- Un n - - Un m)) with Un n - Un m; only 1: apply H1; only 1: assumption; only 1: assumption; only 1: ring).	10.9152629375	11429
Coq.Reals.SeqProp.maj_cv	40
Coq.Reals.SeqProp.min_cv	40
Coq.Reals.SeqProp.cond_eq	40
Coq.Reals.SeqProp.not_Rlt	40	0	search with cache (only 1: eauto using Rnot_gt_ge with rorders).	0.0139338970184	1
Coq.Reals.SeqProp.approx_maj	40
Coq.Reals.SeqProp.approx_min	40
Coq.Reals.SeqProp.UL_sequence	40
Coq.Reals.SeqProp.CV_plus	40
Coq.Reals.SeqProp.cv_cvabs	40
Coq.Reals.SeqProp.CV_Cauchy	40
Coq.Reals.SeqProp.maj_by_pos	40
Coq.Reals.SeqProp.CV_mult	40
Coq.Reals.SeqProp.tech9	40
Coq.Reals.SeqProp.tech13	40
Coq.Reals.SeqProp.growing_ineq	40
Coq.Reals.SeqProp.CV_opp	40
Coq.Reals.SeqProp.decreasing_ineq	40
Coq.Reals.SeqProp.CV_minus	40
Coq.Reals.SeqProp.cv_infty_cv_R0	40
Coq.Reals.SeqProp.decreasing_prop	40
Coq.Reals.SeqProp.cv_speed_pow_fact	40
Coq.Reals.Rcomplete.R_complete	40
Coq.Reals.Rtrigo_calc.tan_PI	40
Coq.Reals.Rtrigo_calc.sin_3PI2	40
Coq.Reals.Rtrigo_calc.tan_2PI	40	1.0.2.2.7.4	search with cache (only 1: change_no_check 2 with (IZR (- -2)); only 1: unfold tan; only 1: unfold Rdiv; only 1: rewrite sin_2a; only 1: rewrite sin_PI; only 1: ring).	6.68310189247	1250
Coq.Reals.Rtrigo_calc.sin_cos_PI4	40
Coq.Reals.Rtrigo_calc.sin_PI3_cos_PI6	40
Coq.Reals.Rtrigo_calc.sin_PI6_cos_PI3	40	1.0.0.3.0	search with cache (only 1: replace (PI / 6) with PI / 2 - PI / 3 by field; only 1: rewrite sin_minus; only 1: rewrite sin_PI2; only 1: rewrite cos_PI2; only 1: ring).	0.296319961548	21
Coq.Reals.Rtrigo_calc.PI6_RGT_0	40	1.0.0.0.0	search with cache (only 1: unfold Rdiv; only 1: apply Rmult_lt_0_compat; only 1: apply PI_RGT_0; only 1: apply Rinv_0_lt_compat; only 1: prove_sup).	0.115221977234	13
Coq.Reals.Rtrigo_calc.PI6_RLT_PI2	40	0.0	search with cache (only 1: pose proof PI_RGT_0 as H; only 1: Lra.lra).	0.0931720733643	2
Coq.Reals.Rtrigo_calc.sin_PI6	40
Coq.Reals.Rtrigo_calc.sqrt2_neq_0	40
Coq.Reals.Rtrigo_calc.R1_sqrt2_neq_0	40
Coq.Reals.Rtrigo_calc.sqrt3_2_neq_0	40
Coq.Reals.Rtrigo_calc.Rlt_sqrt2_0	40
Coq.Reals.Rtrigo_calc.Rlt_sqrt3_0	40
Coq.Reals.Rtrigo_calc.PI4_RGT_0	40	0.0.0.0.0	search with cache (only 1: unfold Rdiv; only 1: apply Rmult_lt_0_compat; only 1: apply PI_RGT_0; only 1: apply Rinv_0_lt_compat; only 1: prove_sup0).	0.097186088562	5
Coq.Reals.Rtrigo_calc.cos_PI4	40
Coq.Reals.Rtrigo_calc.sin_PI4	40
Coq.Reals.Rtrigo_calc.tan_PI4	40
Coq.Reals.Rtrigo_calc.cos_3PI4	40
Coq.Reals.Rtrigo_calc.sin_3PI4	40
Coq.Reals.Rtrigo_calc.cos_PI6	40
Coq.Reals.Rtrigo_calc.tan_PI6	40
Coq.Reals.Rtrigo_calc.sin_PI3	40
Coq.Reals.Rtrigo_calc.cos_PI3	40
Coq.Reals.Rtrigo_calc.tan_PI3	40	4.0.0.0.12.8.1	search with cache (only 1: unfold tan; only 1: rewrite sin_PI3_cos_PI6; only 1: rewrite sin_PI6_cos_PI3; only 1: rewrite sin_PI6; only 1: rewrite cos_PI6; only 1: unfold Rdiv; only 1: field).	11.6840209961	8457
Coq.Reals.Rtrigo_calc.sin_2PI3	40
Coq.Reals.Rtrigo_calc.cos_2PI3	40
Coq.Reals.Rtrigo_calc.tan_2PI3	40
Coq.Reals.Rtrigo_calc.cos_5PI4	40
Coq.Reals.Rtrigo_calc.sin_5PI4	40	0.0.0.8.0.0.0.1	search with cache (only 1: replace (5 * (PI / 4)) with PI / 4 + PI by field; only 1: rewrite sin_plus; only 1: rewrite sin_PI; only 1: rewrite cos_PI; only 1: ring_simplify; only 1: rewrite sin_PI4; only 1: unfold Rdiv; only 1: ring).	12.7976720333	4724
Coq.Reals.Rtrigo_calc.sin_cos5PI4	40	0.0.0.0.5.2.0	search with cache (only 1: replace (5 * (PI / 4)) with PI / 4 + PI by field; only 1: rewrite neg_cos; only 1: rewrite neg_sin; only 1: rewrite cos_sin; only 1: replace (PI / 2 + PI / 4) with - (PI / 4) + PI by field; only 1: rewrite neg_sin, sin_neg; only 1: ring).	3.1735060215	790
Coq.Reals.Rtrigo_calc.Rgt_3PI2_0	40	0.0.0.2	search with cache (only 1: pose proof PI_RGT_0 as H; only 1: apply Rmult_lt_0_compat; only 1: prove_sup0; only 1: Lra.lra).	0.225217103958	67
Coq.Reals.Rtrigo_calc.Rgt_2PI_0	40	0.0.2	search with cache (only 1: apply Rmult_lt_0_compat; only 1: prove_sup0; only 1: apply PI_RGT_0).	0.206503868103	66
Coq.Reals.Rtrigo_calc.Rlt_PI_3PI2	40	1.0	search with cache (only 1: pose proof PI_RGT_0 as H; only 1: Lra.lra).	0.0946588516235	3
Coq.Reals.Rtrigo_calc.Rlt_3PI2_2PI	40	1.9	search with cache (only 1: pose proof PI_RGT_0 as H; only 1: Lra.lra).	0.450128078461	184
Coq.Reals.Rtrigo_calc.rad_deg	40
Coq.Reals.Rtrigo_calc.toRad_inj	40
Coq.Reals.Rtrigo_calc.deg_rad	40
Coq.Reals.Rtrigo_calc.Rsqr_sin_cos_d_one	40
Coq.Reals.Rtrigo_calc.sin_lb_ge_0	40
Coq.Reals.Ranalysis4.derivable_pt_inv	40
Coq.Reals.Ranalysis4.pr_nu_var	40
Coq.Reals.Ranalysis4.pr_nu_var2	40
Coq.Reals.Ranalysis4.derivable_inv	40
Coq.Reals.Ranalysis4.derive_pt_inv	40
Coq.Reals.Ranalysis4.Rabs_derive_1	40
Coq.Reals.Ranalysis4.Rabs_derive_2	40
Coq.Reals.Ranalysis4.Rderivable_pt_abs	40
Coq.Reals.Ranalysis4.Rcontinuity_abs	40
Coq.Reals.Ranalysis4.continuity_finite_sum	40
Coq.Reals.Ranalysis4.derivable_pt_lim_fs	40
Coq.Reals.Ranalysis4.derivable_pt_lim_finite_sum	40
Coq.Reals.Ranalysis4.derivable_pt_finite_sum	40
Coq.Reals.Ranalysis4.derivable_finite_sum	40	0.0.0.0.0.0.0.1.0	search with cache (only 1: intros; only 1: intro; only 1: unfold derivable_pt; only 1: pose proof (derivable_pt_lim_finite_sum An x N) as H; only 1: induction N as [| N HrecN]; only 1: exists 0; only 1: apply H; only 1: exists (sum_f_R0 (fun k : nat => INR (S k) * An (S k) * x ^ k) (Init.Nat.pred (S N))); only 1: apply H).	0.036926984787	10
Coq.Reals.Ranalysis4.derivable_pt_lim_cosh	40
Coq.Reals.Ranalysis4.derivable_pt_lim_sinh	40
Coq.Reals.Ranalysis4.derivable_pt_exp	40
Coq.Reals.Ranalysis4.derivable_pt_cosh	40
Coq.Reals.Ranalysis4.derivable_pt_sinh	40
Coq.Reals.Ranalysis4.derivable_exp	40	0.0.0.0.0	search with cache (only 1: unfold derivable; only 1: intro; only 1: unfold derivable_pt; only 1: exists (exp x); only 1: apply derivable_pt_lim_exp).	0.0228929519653	5
Coq.Reals.Ranalysis4.derivable_cosh	40	0.0.0.0.0	search with cache (only 1: unfold derivable; only 1: intro; only 1: unfold derivable_pt; only 1: exists (sinh x); only 1: apply derivable_pt_lim_cosh).	0.0237629413605	5
Coq.Reals.Ranalysis4.derivable_sinh	40	0.0.0.0.0	search with cache (only 1: unfold derivable; only 1: intro; only 1: unfold derivable_pt; only 1: exists (cosh x); only 1: apply derivable_pt_lim_sinh).	0.0231249332428	5
Coq.Reals.Ranalysis4.derive_pt_exp	40	1.9.1	search with cache (only 1: intros; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_exp).	0.0984189510345	152
Coq.Reals.Ranalysis4.derive_pt_cosh	40	1.0.1	search with cache (only 1: intro; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_cosh).	0.152523040771	28
Coq.Reals.Ranalysis4.derive_pt_sinh	40	1.0.0	search with cache (only 1: intro; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_sinh).	0.224020957947	41
Coq.Reals.Ranalysis4.sinh_lt	40
Coq.Reals.Ranalysis3.derivable_pt_lim_div	40
Coq.Reals.Ranalysis3.derivable_pt_div	40
Coq.Reals.Ranalysis3.derivable_div	40
Coq.Reals.Ranalysis3.derive_pt_div	40
Coq.Reals.DiscrR.Rlt_R0_R2	40	0.0.0.1.0.0.0.0.0	search with cache (only 1: apply Rlt_trans with (0 + 1); only 1: apply Rlt_n_Sn; only 1: rewrite Rplus_comm; only 1: rewrite Rplus_comm; only 1: rewrite Rplus_comm; only 1: apply Rplus_lt_compat_l; only 1: replace R1 with 0 + 1; only 1: apply Rlt_n_Sn; only 1: apply Rplus_0_l).	0.0503079891205	18
Coq.Reals.DiscrR.IZR_eq	40	5.0	search with cache (only 1: intros z1 z2 H; only 1: congruence).	0.0227808952332	7
Coq.Reals.ConstructiveReals.CRlt_asym	40
Coq.Reals.ConstructiveReals.CRlt_proper	40
Coq.Reals.ConstructiveReals.CRle_refl	40
Coq.Reals.ConstructiveReals.CRle_lt_trans	40
Coq.Reals.ConstructiveReals.CRlt_le_trans	40
Coq.Reals.ConstructiveReals.CRle_trans	40
Coq.Reals.ConstructiveReals.CRlt_trans	40
Coq.Reals.ConstructiveReals.CRlt_trans_flip	40
Coq.Reals.ConstructiveReals.CReq_refl	40
Coq.Reals.ConstructiveReals.CReq_sym	40
Coq.Reals.ConstructiveReals.CReq_trans	40
Coq.Reals.ConstructiveReals.CR_setoid	40
Coq.Reals.ConstructiveReals.CRplus_0_r	40
Coq.Reals.ConstructiveReals.CRmult_1_r	40
Coq.Reals.ConstructiveReals.CRplus_opp_l	40
Coq.Reals.ConstructiveReals.CRplus_lt_compat_r	40
Coq.Reals.ConstructiveReals.CRplus_lt_reg_r	40
Coq.Reals.ConstructiveReals.CRplus_le_compat_l	40
Coq.Reals.ConstructiveReals.CRplus_le_compat_r	40
Coq.Reals.ConstructiveReals.CRplus_le_reg_l	40	2.3.1.0.0.0	search with cache (only 1: intros; only 1: intros abs; only 1: apply H; only 1: destruct (CRisRing R); only 1: apply CRplus_lt_compat_l; only 1: exact abs).	0.165254116058	98
Coq.Reals.ConstructiveReals.CRplus_le_reg_r	40
Coq.Reals.ConstructiveReals.CRplus_lt_le_compat	40
Coq.Reals.ConstructiveReals.CRplus_eq_reg_l	40
Coq.Reals.ConstructiveReals.CRplus_eq_reg_r	40
Coq.Reals.ConstructiveReals.CRopp_involutive	40
Coq.Reals.ConstructiveReals.CRopp_gt_lt_contravar	40
Coq.Reals.ConstructiveReals.CRopp_lt_cancel	40
Coq.Reals.ConstructiveReals.CRopp_plus_distr	40
Coq.Reals.ConstructiveReals.CRmult_plus_distr_l	40
Coq.Reals.ConstructiveReals.CRzero_double	40
Coq.Reals.ConstructiveReals.CRmult_0_r	40
Coq.Reals.ConstructiveReals.CRopp_mult_distr_r	40
Coq.Reals.ConstructiveReals.CRopp_mult_distr_l	40
Coq.Reals.ConstructiveReals.CRmult_lt_compat_r	40
Coq.Reals.ConstructiveReals.CRinv_r	40
Coq.Reals.ConstructiveReals.CRmult_lt_reg_r	40
Coq.Reals.ConstructiveReals.CRmult_lt_reg_l	40
Coq.Reals.ConstructiveReals.CRmult_le_compat_l	40
Coq.Reals.ConstructiveReals.CRmult_le_compat_r	40
Coq.Reals.ConstructiveReals.CRmult_eq_reg_r	40
Coq.Reals.ConstructiveReals.CR_of_Q_proper	40
Coq.Reals.ConstructiveReals.CR_of_Q_zero	40
Coq.Reals.ConstructiveReals.CR_of_Q_opp	40
Coq.Reals.ConstructiveReals.CR_of_Q_le	40
Coq.Reals.ConstructiveReals.CR_of_Q_pos	40
Coq.Reals.ConstructiveReals.CR_cv_above_rat	40
Coq.Reals.ConstructiveReals.CR_cv_below_rat	40
Coq.Reals.ConstructiveReals.CR_cv_const	40
Coq.Reals.ConstructiveCauchyRealsMult.BoundFromZero	40
Coq.Reals.ConstructiveCauchyRealsMult.QCauchySeq_bounded	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_cauchy	40
Coq.Reals.ConstructiveCauchyRealsMult.linear_max	40	1.4.10.11.0	search with cache (only 1: intros; only 1: rewrite Pos2Nat.inj_mul; only 1: rewrite max_l; only 1: auto with arith; only 1: apply Nat.le_refl).	8.80457496643	14548
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult	40	3.1	search with cache (only 1: destruct x as [xn limx]; only 1: trivial).	0.0250678062439	23
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_unfold	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_assoc_bounded_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_assoc	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_comm	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_proper_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_0_compat	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_plus_distr_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_plus_distr_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_1_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_isRingExt	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_isRing	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_morph_Proper	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_morph_T	40	10	search with cache (only 1: apply CReal_isRingExt).	3.13513088226	286
Coq.Reals.ConstructiveCauchyRealsMult.CReal_opp_morph_Proper	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_opp_morph_T	40	1	search with cache (only 1: apply CReal_isRingExt).	7.17735600471	105
Coq.Reals.ConstructiveCauchyRealsMult.CReal_minus_morph_Proper	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_minus_morph_T	40	1.0.0.3	search with cache (only 1: intros x y H x0 y0 H0; only 1: unfold CReal_minus; only 1: rewrite H, H0; only 1: reflexivity).	0.062509059906	23
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_0_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_0_r	40	0.0	search with cache (only 1: intro; only 1: ring).	0.0158388614655	2
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_1_r	40	19.0	search with cache (only 1: intros [rn limr]; only 1: ring).	5.28222894669	1860
Coq.Reals.ConstructiveCauchyRealsMult.CReal_opp_mult_distr_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_opp_mult_distr_r	40	0.0	search with cache (only 1: intros; only 1: ring).	0.0189909934998	2
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_compat_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_compat_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_reg_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_abs_appart_zero	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealArchimedean	40
Coq.Reals.ConstructiveCauchyRealsMult.Rup_pos	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealLtDisjunctEpsilon	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealShiftReal	40	7.7.3.10	search with cache (only 1: intros p n k H H0; only 1: unfold proj1_sig; only 1: induction p; only 1: auto with arith).	11.9478058815	8335
Coq.Reals.ConstructiveCauchyRealsMult.CRealShiftEqual	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealNegShift	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealPosShift	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_neg	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_pos	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv	40	9	search with cache (only 1: assumption).	0.0108470916748	10
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_0_lt_compat	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_linear_shift	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_linear_shift_eq	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_1	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_mult_distr	40
Coq.Reals.ConstructiveCauchyRealsMult.Rinv_eq_compat	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_reg_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_reg_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_reg_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_compat_l	40	3.1.13.0	search with cache (only 1: intros; only 1: apply CReal_isRingExt; only 1: ring; only 1: exact H).	7.74233603477	1806
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_compat_r	40	1.0.0	search with cache (only 1: intros; only 1: rewrite H; only 1: reflexivity).	0.0154819488525	4
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_pos_appart_zero	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_le_compat_l_half	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_invQ	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealQ_dense	40
Coq.Reals.ConstructiveCauchyRealsMult.inject_Q_mult	40
Coq.Reals.Rtrigo_fun.Alembert_exp	40
Coq.Reals.Alembert.Alembert_C1	40
Coq.Reals.Alembert.Alembert_C2	40
Coq.Reals.Alembert.AlembertC3_step1	40
Coq.Reals.Alembert.AlembertC3_step2	40
Coq.Reals.Alembert.Alembert_C3	40
Coq.Reals.Alembert.Alembert_C4	40
Coq.Reals.Alembert.Alembert_C5	40
Coq.Reals.Alembert.Alembert_C6	40
Coq.Reals.R_sqr.Rsqr_neg	40	0.1.8	search with cache (only 1: intros p0; only 1: unfold Rsqr; only 1: auto with real).	0.722615003586	274
Coq.Reals.R_sqr.Rsqr_mult	40	9.0	search with cache (only 1: intros; only 1: ring_Rsqr).	0.036276102066	22
Coq.Reals.R_sqr.Rsqr_plus	40	10.0.0	search with cache (only 1: intro; only 1: intro; only 1: ring_Rsqr).	0.736394882202	222
Coq.Reals.R_sqr.Rsqr_minus	40	0.0.0	search with cache (only 1: intro; only 1: intro; only 1: ring_Rsqr).	0.323122024536	3
Coq.Reals.R_sqr.Rsqr_neg_minus	40	3.0	search with cache (only 1: intros; only 1: ring_Rsqr).	0.0217161178589	5
Coq.Reals.R_sqr.Rsqr_1	40	0.1	search with cache (only 1: unfold Rsqr; only 1: auto with real).	0.0185751914978	3
Coq.Reals.R_sqr.Rsqr_gt_0_0	40
Coq.Reals.R_sqr.Rsqr_pos_lt	40	2.0	search with cache (only 1: intros; only 1: auto with real).	0.0124170780182	4
Coq.Reals.R_sqr.Rsqr_div	40
Coq.Reals.R_sqr.Rsqr_eq_0	40	3.5.1	search with cache (only 1: intros a b; only 1: apply Rsqr_0_uniq; only 1: easy).	0.0885789394379	94
Coq.Reals.R_sqr.Rsqr_minus_plus	40	0.4	search with cache (only 1: intros x n; only 1: ring_Rsqr).	0.460283041	25
Coq.Reals.R_sqr.Rsqr_plus_minus	40	0.0	search with cache (only 1: intros; only 1: ring_Rsqr).	0.0214200019836	2
Coq.Reals.R_sqr.Rsqr_incr_0	40
Coq.Reals.R_sqr.Rsqr_incr_0_var	40
Coq.Reals.R_sqr.Rsqr_incr_1	40
Coq.Reals.R_sqr.Rsqr_incrst_0	40
Coq.Reals.R_sqr.Rsqr_incrst_1	40
Coq.Reals.R_sqr.Rsqr_neg_pos_le_0	40
Coq.Reals.R_sqr.Rsqr_neg_pos_le_1	40
Coq.Reals.R_sqr.neg_pos_Rsqr_le	40
Coq.Reals.R_sqr.Rsqr_abs	40	2.0.0.5.0	search with cache (only 1: intro; only 1: unfold Rabs; only 1: destruct (Rcase_abs x) as [Hlt| Hge]; only 1: ring_Rsqr; only 1: trivial).	0.378695011139	147
Coq.Reals.R_sqr.Rsqr_le_abs_0	40
Coq.Reals.R_sqr.Rsqr_le_abs_1	40
Coq.Reals.R_sqr.Rsqr_lt_abs_0	40
Coq.Reals.R_sqr.Rsqr_lt_abs_1	40
Coq.Reals.R_sqr.Rsqr_inj	40
Coq.Reals.R_sqr.Rsqr_eq_abs_0	40
Coq.Reals.R_sqr.Rsqr_eq_asb_1	40
Coq.Reals.R_sqr.triangle_rectangle	40
Coq.Reals.R_sqr.triangle_rectangle_lt	40
Coq.Reals.R_sqr.triangle_rectangle_le	40
Coq.Reals.R_sqr.Rsqr_inv	40	3.3.5.6.0.3	search with cache (only 1: unfold Rsqr; only 1: intros; only 1: rewrite Rinv_mult_distr; only 1: reflexivity; only 1: assumption; only 1: assumption).	11.6948978901	13672
Coq.Reals.R_sqr.canonical_Rsqr	40
Coq.Reals.R_sqr.Rsqr_eq	40
Coq.Reals.RiemannInt_SF.IZN_var	40	0.0.4.0.0.1.12.0	search with cache (only 1: intros z; only 1: destruct z; only 1: exists 0%nat; only 1: reflexivity; only 1: exists (Pos.to_nat p); only 1: rewrite positive_nat_Z; only 1: now destruct 1 || trivial; only 1: now destruct 1 || trivial).	39.0062959194	34610
Coq.Reals.RiemannInt_SF.Nzorn	40
Coq.Reals.RiemannInt_SF.StepFun_P1	40
Coq.Reals.RiemannInt_SF.StepFun_P2	40
Coq.Reals.RiemannInt_SF.StepFun_P3	40
Coq.Reals.RiemannInt_SF.StepFun_P4	40
Coq.Reals.RiemannInt_SF.StepFun_P5	40
Coq.Reals.RiemannInt_SF.StepFun_P6	40
Coq.Reals.RiemannInt_SF.StepFun_P7	40
Coq.Reals.RiemannInt_SF.StepFun_P8	40
Coq.Reals.RiemannInt_SF.StepFun_P9	40
Coq.Reals.RiemannInt_SF.StepFun_P10	40
Coq.Reals.RiemannInt_SF.StepFun_P11	40
Coq.Reals.RiemannInt_SF.StepFun_P12	40
Coq.Reals.RiemannInt_SF.StepFun_P13	40
Coq.Reals.RiemannInt_SF.StepFun_P14	40
Coq.Reals.RiemannInt_SF.StepFun_P15	40
Coq.Reals.RiemannInt_SF.StepFun_P16	40
Coq.Reals.RiemannInt_SF.StepFun_P17	40
Coq.Reals.RiemannInt_SF.StepFun_P18	40
Coq.Reals.RiemannInt_SF.StepFun_P19	40
Coq.Reals.RiemannInt_SF.StepFun_P20	40
Coq.Reals.RiemannInt_SF.StepFun_P21	40
Coq.Reals.RiemannInt_SF.StepFun_P22	40
Coq.Reals.RiemannInt_SF.StepFun_P23	40
Coq.Reals.RiemannInt_SF.StepFun_P24	40
Coq.Reals.RiemannInt_SF.StepFun_P25	40
Coq.Reals.RiemannInt_SF.StepFun_P26	40
Coq.Reals.RiemannInt_SF.StepFun_P27	40
Coq.Reals.RiemannInt_SF.StepFun_P28	40
Coq.Reals.RiemannInt_SF.StepFun_P29	40
Coq.Reals.RiemannInt_SF.StepFun_P30	40
Coq.Reals.RiemannInt_SF.StepFun_P31	40
Coq.Reals.RiemannInt_SF.StepFun_P32	40
Coq.Reals.RiemannInt_SF.StepFun_P33	40
Coq.Reals.RiemannInt_SF.StepFun_P34	40
Coq.Reals.RiemannInt_SF.StepFun_P35	40
Coq.Reals.RiemannInt_SF.StepFun_P36	40
Coq.Reals.RiemannInt_SF.StepFun_P37	40
Coq.Reals.RiemannInt_SF.StepFun_P38	40
Coq.Reals.RiemannInt_SF.StepFun_P39	40
Coq.Reals.RiemannInt_SF.StepFun_P40	40
Coq.Reals.RiemannInt_SF.StepFun_P41	40
Coq.Reals.RiemannInt_SF.StepFun_P42	40
Coq.Reals.RiemannInt_SF.StepFun_P43	40
Coq.Reals.RiemannInt_SF.StepFun_P44	40
Coq.Reals.RiemannInt_SF.StepFun_P45	40
Coq.Reals.RiemannInt_SF.StepFun_P46	40
Coq.Reals.Cos_rel.cos_plus_form	40
Coq.Reals.Cos_rel.pow_sqr	40
Coq.Reals.Cos_rel.A1_cvg	40
Coq.Reals.Cos_rel.C1_cvg	40
Coq.Reals.Cos_rel.B1_cvg	40
Coq.Reals.Ranalysis5.f_incr_implies_g_incr_interv	40
Coq.Reals.Ranalysis5.derivable_pt_id_interv	40	0.1.1	search with cache (only 1: intro f; only 1: intros; only 1: apply derivable_pt_id).	0.0185618400574	5
Coq.Reals.Ranalysis5.pr_nu_var2_interv	40
Coq.Reals.Ranalysis5.leftinv_is_rightinv	40
Coq.Reals.Ranalysis5.leftinv_is_rightinv_interv	40
Coq.Reals.Ranalysis5.IVT_interv_prelim0	40
Coq.Reals.Ranalysis5.IVT_interv_prelim1	40
Coq.Reals.Ranalysis5.IVT_interv	40
Coq.Reals.Ranalysis5.f_interv_is_interv	40
Coq.Reals.Ranalysis5.continuity_pt_recip_prelim	40
Coq.Reals.Ranalysis5.continuity_pt_recip_interv	40
Coq.Reals.Ranalysis5.derivable_pt_lim_recip_interv	40
Coq.Reals.Ranalysis5.derivable_pt_recip_interv_prelim0	40
Coq.Reals.Ranalysis5.derivable_pt_recip_interv_prelim1	40
Coq.Reals.Ranalysis5.derivable_pt_recip_interv	40
Coq.Reals.Ranalysis5.derive_pt_recip_interv_prelim0	40
Coq.Reals.Ranalysis5.derive_pt_recip_interv_prelim1_0	40
Coq.Reals.Ranalysis5.derive_pt_recip_interv_prelim1_1	40
Coq.Reals.Ranalysis5.derive_pt_recip_interv	40
Coq.Reals.Ranalysis5.ub_lt_2_pos	40	3.0.5	search with cache (only 1: intros y z H; only 1: unfold Rdiv; only 1: lra).	0.153674840927	154
Coq.Reals.Ranalysis5.mkposreal_lb_ub	40	0.39	search with cache (only 1: exists {| pos := 1; cond_pos := Rlt_0_1 |}; only 1: apply Rlt_0_1).	0.688107967377	1769
Coq.Reals.Ranalysis5.derivable_pt_lim_CVU	40
Coq.Reals.AltSeries.CV_ALT_step0	40
Coq.Reals.AltSeries.CV_ALT_step1	40
Coq.Reals.AltSeries.CV_ALT_step2	40
Coq.Reals.AltSeries.CV_ALT_step3	40
Coq.Reals.AltSeries.CV_ALT_step4	40
Coq.Reals.AltSeries.CV_ALT	40
Coq.Reals.AltSeries.alternated_series	40
Coq.Reals.AltSeries.alternated_series_ineq	40
Coq.Reals.AltSeries.PI_tg_pos	40
Coq.Reals.AltSeries.PI_tg_decreasing	40
Coq.Reals.AltSeries.PI_tg_cv	40
Coq.Reals.AltSeries.exist_PI	40
Coq.Reals.AltSeries.Alt_PI_ineq	40
Coq.Reals.AltSeries.Alt_PI_RGT_0	40
Coq.Reals.Rminmax.Rmax_l	40	0.0.0.0	search with cache (only 1: intros; only 1: apply Rmax_case_strong; only 1: reflexivity; only 1: auto using Rle_antisym).	0.0174660682678	4
Coq.Reals.Rminmax.Rmax_r	40	0.0.0.0	search with cache (only 1: intros; only 1: apply Rmax_case_strong; only 1: reflexivity || (apply Rle_antisym; assumption || auto with real); only 1: reflexivity).	0.0160281658173	4
Coq.Reals.Rminmax.Rmin_l	40	1.0.0.0	search with cache (only 1: intros; only 1: apply Rmin_case_strong; only 1: reflexivity; only 1: auto using Rle_antisym).	0.0175549983978	5
Coq.Reals.Rminmax.Rmin_r	40	0.1.0.0	search with cache (only 1: intros; only 1: apply Rmin_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	0.0187029838562	5
Coq.Reals.Rminmax.R.plus_max_distr_l	40
Coq.Reals.Rminmax.R.plus_max_distr_r	40
Coq.Reals.Rminmax.R.plus_min_distr_l	40
Coq.Reals.Rminmax.R.plus_min_distr_r	40
Coq.Reals.Rminmax.R.opp_max_distr	40	1.0.0.0	search with cache (only 1: intros x y; only 1: apply Rmax_case_strong; only 1: now intros w; rewrite Rmin_left; [  | apply Rge_le, Ropp_le_ge_contravar ]; only 1: now intros w; rewrite Rmin_right; [  | apply Rge_le, Ropp_le_ge_contravar ]).	0.0244379043579	5
Coq.Reals.Rminmax.R.opp_min_distr	40	1.0.0.0	search with cache (only 1: intros x y; only 1: apply Rmin_case_strong; only 1: now intros w; rewrite Rmax_left; [  | apply Rge_le, Ropp_le_ge_contravar ]; only 1: now intros w; rewrite Rmax_right; [  | apply Rge_le, Ropp_le_ge_contravar ]).	0.0242249965668	5
Coq.Reals.Rminmax.R.minus_max_distr_l	40
Coq.Reals.Rminmax.R.minus_max_distr_r	40
Coq.Reals.Rminmax.R.minus_min_distr_l	40
Coq.Reals.Rminmax.R.minus_min_distr_r	40
Coq.Reals.Rlimit.eps2_Rgt_R0	40	2.1.2.3.14	search with cache (only 1: unfold Rgt; only 1: intros; only 1: apply Rmult_lt_0_compat; only 1: assumption; only 1: apply Rinv_0_lt_compat, Rlt_0_2).	2.66317105293	2227
Coq.Reals.Rlimit.eps2	40	0.1.2.0.0.0.0	search with cache (only 1: intro; only 1: rewrite <- double; only 1: symmetry; only 1: symmetry; only 1: rewrite <- Rmult_assoc; only 1: apply Rinv_r_simpl_m; only 1: now apply not_0_IZR).	0.0629739761353	32
Coq.Reals.Rlimit.eps4	40	14.0	search with cache (only 1: intro; only 1: field).	0.844171047211	647
Coq.Reals.Rlimit.Rlt_eps2_eps	40	0.0	search with cache (only 1: intros; only 1: lra).	0.0156948566437	2
Coq.Reals.Rlimit.Rlt_eps4_eps	40	0.0	search with cache (only 1: intros; only 1: lra).	0.0159089565277	2
Coq.Reals.Rlimit.prop_eps	40
Coq.Reals.Rlimit.mul_factor_wd	40
Coq.Reals.Rlimit.mul_factor_gt	40
Coq.Reals.Rlimit.mul_factor_gt_f	40
Coq.Reals.Rlimit.tech_limit	40
Coq.Reals.Rlimit.tech_limit_contr	40
Coq.Reals.Rlimit.lim_x	40	22.3.1	search with cache (only 1: intros; only 1: intros a b; only 1: firstorder).	1.16470313072	1571
Coq.Reals.Rlimit.limit_plus	40
Coq.Reals.Rlimit.limit_Ropp	40
Coq.Reals.Rlimit.limit_minus	40
Coq.Reals.Rlimit.limit_free	40
Coq.Reals.Rlimit.limit_mul	40
Coq.Reals.Rlimit.single_limit	40
Coq.Reals.Rlimit.limit_comp	40	2.0.0.3.0	search with cache (only 1: unfold limit1_in; only 1: intros r1 r2 P H1 H2; only 1: unfold limit_in; only 1: simpl; only 1: firstorder).	0.344438076019	45
Coq.Reals.Rlimit.limit_inv	40
Coq.Reals.R_sqrt.sqrt_pos	40
Coq.Reals.R_sqrt.sqrt_positivity	40	1.0.1.2.0.0	search with cache (only 1: intros x; only 1: unfold sqrt; only 1: intro; only 1: destruct (Rcase_abs x) as [Hlt| Hge]; only 1: apply Rle_refl; only 1: apply Rsqrt_positivity).	0.0574510097504	33
Coq.Reals.R_sqrt.sqrt_sqrt	40
Coq.Reals.R_sqrt.sqrt_0	40
Coq.Reals.R_sqrt.sqrt_1	40
Coq.Reals.R_sqrt.sqrt_eq_0	40
Coq.Reals.R_sqrt.sqrt_lem_0	40
Coq.Reals.R_sqrt.sqrt_lem_1	40
Coq.Reals.R_sqrt.sqrt_def	40	0.0.0.0.0.0	search with cache (only 1: intros; only 1: unfold sqrt; only 1: destruct (Rcase_abs x) as [Hlt| Hge]; only 1: elim (Rlt_irrefl _ (Rlt_le_trans _ _ _ Hlt H)); only 1: rewrite Rsqrt_Rsqrt; only 1: reflexivity).	0.0257799625397	6
Coq.Reals.R_sqrt.sqrt_square	40
Coq.Reals.R_sqrt.sqrt_Rsqr	40	0.0.0.0	search with cache (only 1: intros; only 1: apply (Rsqr_inj (sqrt x²) x (sqrt_positivity x² (Rle_0_sqr x)) H); only 1: unfold Rsqr; only 1: apply (sqrt_sqrt x² (Rle_0_sqr x))).	0.0187559127808	4
Coq.Reals.R_sqrt.sqrt_pow2	40	0.0.0.10.0.0	search with cache (only 1: simpl; only 1: intros; only 1: rewrite Rmult_1_r; only 1: apply (Rsqr_inj (sqrt x²) x (sqrt_positivity x² (Rle_0_sqr x)) H); only 1: unfold Rsqr; only 1: apply (sqrt_sqrt x² (Rle_0_sqr x))).	1.75447106361	691
Coq.Reals.R_sqrt.sqrt_Rsqr_abs	40
Coq.Reals.R_sqrt.Rsqr_sqrt	40	0.0.0.0.0.3.0	search with cache (only 1: intros; only 1: unfold Rsqr; only 1: unfold sqrt; only 1: destruct (Rcase_abs x) as [Hlt| Hge]; only 1: elim (Rlt_irrefl _ (Rlt_le_trans _ _ _ Hlt H)); only 1: rewrite Rsqrt_Rsqrt; only 1: reflexivity).	0.0288109779358	10
Coq.Reals.R_sqrt.sqrt_mult_alt	40
Coq.Reals.R_sqrt.sqrt_mult	40
Coq.Reals.R_sqrt.sqrt_lt_R0	40
Coq.Reals.R_sqrt.Rlt_mult_inv_pos	40
Coq.Reals.R_sqrt.Rle_mult_inv_pos	40	0.0.4.5	search with cache (only 1: intros r r1 r2 H; only 1: replace 0 with r * 0; only 1: auto with real; only 1: auto with real).	1.34465694427	240
Coq.Reals.R_sqrt.sqrt_div_alt	40
Coq.Reals.R_sqrt.sqrt_div	40
Coq.Reals.R_sqrt.sqrt_lt_0_alt	40
Coq.Reals.R_sqrt.sqrt_lt_0	40
Coq.Reals.R_sqrt.sqrt_lt_1_alt	40
Coq.Reals.R_sqrt.sqrt_lt_1	40	1.1.0.0.0.1.1.1	search with cache (only 1: intros; only 1: apply Rsqr_incrst_0; only 1: rewrite 2!Rsqr_sqrt; only 1: assumption; only 1: assumption; only 1: assumption; only 1: apply sqrt_pos; only 1: apply sqrt_pos).	2.06684803963	607
Coq.Reals.R_sqrt.sqrt_le_0	40
Coq.Reals.R_sqrt.sqrt_le_1_alt	40
Coq.Reals.R_sqrt.sqrt_le_1	40
Coq.Reals.R_sqrt.sqrt_inj	40
Coq.Reals.R_sqrt.sqrt_less_alt	40
Coq.Reals.R_sqrt.sqrt_less	40
Coq.Reals.R_sqrt.sqrt_more	40
Coq.Reals.R_sqrt.sqrt_cauchy	40
Coq.Reals.R_sqrt.Rsqr_sol_eq_0_1	40
Coq.Reals.R_sqrt.Rsqr_sol_eq_0_0	40
Coq.Reals.ConstructiveRealsLUB.is_upper_bound_dec	40
Coq.Reals.ConstructiveRealsLUB.is_upper_bound_epsilon	40
Coq.Reals.ConstructiveRealsLUB.is_upper_bound_not_epsilon	40
Coq.Reals.ConstructiveRealsLUB.DDlow_below_up	40
Coq.Reals.ConstructiveRealsLUB.DDcut_limit_fix	40
Coq.Reals.ConstructiveRealsLUB.DDcut_limit	40
Coq.Reals.ConstructiveRealsLUB.glb_dec_Q	40
Coq.Reals.ConstructiveRealsLUB.is_upper_bound_glb	40
Coq.Reals.ConstructiveRealsLUB.is_upper_bound_closed	40
Coq.Reals.ConstructiveRealsLUB.sig_lub	40
Coq.Reals.ConstructiveRealsLUB.CR_sig_lub	40
Coq.Reals.Rderiv.cont_deriv	40
Coq.Reals.Rderiv.Dconst	40
Coq.Reals.Rderiv.Dx	40
Coq.Reals.Rderiv.Dadd	40
Coq.Reals.Rderiv.Dmult	40
Coq.Reals.Rderiv.Dmult_const	40
Coq.Reals.Rderiv.Dopp	40
Coq.Reals.Rderiv.Dminus	40
Coq.Reals.Rderiv.Dx_pow_n	40	8.12	search with cache (only 1: fix ind_0_1_SS 1; only 1: auto with arith).	2.8723449707	3144
Coq.Reals.Rderiv.Dcomp	40
Coq.Reals.Rderiv.D_pow_n	40
Coq.Reals.Cauchy_prod.sum_N_predN	40	1.0.0.0.1	search with cache (only 1: intro p; only 1: intros; only 1: inversion H; only 1: repeat match goal with | _ => reflexivity | _ => progress subst | H:Some ?a = Some ?b |- _ => assert (a = b) by refine match H with | eq_refl => eq_refl end; clear H | H:None = Some _ |- _ => solve [ inversion H ] end; only 1: trivial).	0.0586819648743	22
Coq.Reals.Cauchy_prod.sum_plus	40	1.0.0.0.0.0.0	search with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: ring; only 1: do 3 rewrite tech5; only 1: rewrite HrecN; only 1: ring).	0.0514709949493	8
Coq.Reals.Cauchy_prod.cauchy_finite	40
Coq.Reals.Rlogic.sig_forall_dec	40
Coq.Reals.Rlogic.not_not_archimedean	40
Coq.Reals.Rlogic.sig_not_dec	40
Coq.Reals.Rtrigo1.CVN_R_cos	40
Coq.Reals.Rtrigo1.continuity_cos	40
Coq.Reals.Rtrigo1.sin_gt_cos_7_8	40
Coq.Reals.Rtrigo1.PI_2_aux	40
Coq.Reals.Rtrigo1.cos_pi2	40
Coq.Reals.Rtrigo1.pi2_int	40	1.0.3.5	search with cache (only 1: vm_compute; only 1: case PI_2_aux; only 1: intros; only 1: intuition).	1.73260402679	677
Coq.Reals.Rtrigo1.cos_minus	40
Coq.Reals.Rtrigo1.sin2_cos2	40
Coq.Reals.Rtrigo1.cos2	40
Coq.Reals.Rtrigo1.sin2	40	0.0.0	search with cache (only 1: intros x; only 1: rewrite <- (sin2_cos2 x); only 1: ring).	0.213630199432	3
Coq.Reals.Rtrigo1.cos_PI2	40
Coq.Reals.Rtrigo1.sin_pos_tech	40
Coq.Reals.Rtrigo1.sin_PI2	40
Coq.Reals.Rtrigo1.PI_RGT_0	40	0.7.2.0.0.0.1.0.9	search with cache (only 1: pose proof (Alt_PI_ineq 0) as H; only 1: prove_sup0; only 1: apply Rmult_lt_reg_l with (/ 4); only 1: apply Rinv_0_lt_compat; only 1: prove_sup0; only 1: rewrite Rmult_0_r; only 1: clear H; only 1: destruct pi2_int; only 1: lra).	20.8051300049	13927
Coq.Reals.Rtrigo1.PI_4	40	0.3.5.0	search with cache (only 1: assert (lo1 : 0 <= 7 / 8) by lra; only 1: unfold PI; only 1: destruct pi2_int; only 1: lra).	0.558151006699	239
Coq.Reals.Rtrigo1.PI_neq0	40
Coq.Reals.Rtrigo1.cos_PI	40
Coq.Reals.Rtrigo1.sin_PI	40
Coq.Reals.Rtrigo1.sin_bound	40
Coq.Reals.Rtrigo1.cos_bound	40
Coq.Reals.Rtrigo1.neg_cos	40
Coq.Reals.Rtrigo1.sin_cos	40	1.1.0.0.0	search with cache (only 1: intro; only 1: rewrite cos_plus; only 1: rewrite sin_PI2; only 1: rewrite cos_PI2; only 1: ring).	0.166176080704	16
Coq.Reals.Rtrigo1.sin_plus	40
Coq.Reals.Rtrigo1.sin_minus	40
Coq.Reals.Rtrigo1.tan_plus	40
Coq.Reals.Rtrigo1.sin_2a	40
Coq.Reals.Rtrigo1.cos_2a	40	2.2.0.0	search with cache (only 1: intros; only 1: rewrite double; only 1: rewrite cos_plus; only 1: ring).	0.126054048538	8
Coq.Reals.Rtrigo1.cos_2a_cos	40	10.4.4.3.2.0	search with cache (only 1: intro x; only 1: rewrite double; only 1: rewrite double; only 1: rewrite <- (sin2_cos2 x); only 1: rewrite cos_plus; only 1: ring_Rsqr).	14.5695648193	10558
Coq.Reals.Rtrigo1.cos_2a_sin	40	0.4.1.0.0.1.0.0.0	search with cache (only 1: intro x; only 1: rewrite double; only 1: unfold Rminus; only 1: rewrite cos_plus; only 1: generalize (sin2_cos2 x); only 1: rewrite double; only 1: intro H1; only 1: rewrite <- H1; only 1: ring_Rsqr).	19.187967062	7350
Coq.Reals.Rtrigo1.tan_2a	40
Coq.Reals.Rtrigo1.sin_neg	40	0.0.0.0.0.0.0	search with cache (only 1: intro; only 1: unfold sin; only 1: replace (- x)² with x²; only 1: case (exist_sin x²); only 1: intros; only 1: ring; only 1: apply Rsqr_neg).	0.11869096756	7
Coq.Reals.Rtrigo1.cos_neg	40	0.0.0.0.0	search with cache (only 1: intros; only 1: unfold cos; only 1: replace (- x)² with x²; only 1: reflexivity; only 1: apply Rsqr_neg).	0.0959260463715	5
Coq.Reals.Rtrigo1.tan_0	40
Coq.Reals.Rtrigo1.tan_neg	40
Coq.Reals.Rtrigo1.tan_minus	40
Coq.Reals.Rtrigo1.cos_3PI2	40
Coq.Reals.Rtrigo1.sin_2PI	40
Coq.Reals.Rtrigo1.cos_2PI	40
Coq.Reals.Rtrigo1.neg_sin	40
Coq.Reals.Rtrigo1.sin_PI_x	40	0.0.1.1.2.0.5	search with cache (only 1: unfold Rminus, opp_seq; only 1: intro; only 1: rewrite sin_plus; only 1: rewrite sin_neg; only 1: rewrite sin_PI; only 1: rewrite cos_PI; only 1: ring).	9.18004393578	3179
Coq.Reals.Rtrigo1.sin_period	40
Coq.Reals.Rtrigo1.cos_period	40	0.1.1.0.0.0.4.0.0.0.0.0.0	search with cache (only 1: intros x k; only 1: induction k as [| k Hreck]; only 1: simpl; only 1: ring_simplify x + 2 * 0 * PI; only 1: trivial; only 1: replace (x + 2 * INR (S k) * PI) with x + 2 * INR k * PI + 2 * PI; only 1: rewrite cos_plus; only 1: rewrite sin_2PI; only 1: rewrite cos_2PI; only 1: ring_simplify; only 1: trivial; only 1: rewrite S_INR; only 1: ring).	13.4952919483	6867
Coq.Reals.Rtrigo1.sin_shift	40	0.0.0.8.0	search with cache (only 1: intro x; only 1: rewrite sin_minus; only 1: rewrite sin_PI2; only 1: rewrite cos_PI2; only 1: ring).	0.854702949524	387
Coq.Reals.Rtrigo1.cos_shift	40	0.0.0.3.1.3.0	search with cache (only 1: intro x; only 1: unfold Rminus; only 1: rewrite cos_plus; only 1: rewrite sin_neg; only 1: rewrite sin_PI2; only 1: rewrite cos_PI2; only 1: ring).	1.58327507973	447
Coq.Reals.Rtrigo1.cos_sin	40	0.0.0.6.0	search with cache (only 1: intro x; only 1: rewrite sin_plus; only 1: rewrite sin_PI2; only 1: rewrite cos_PI2; only 1: ring).	0.499522924423	123
Coq.Reals.Rtrigo1.PI2_RGT_0	40	0.3.7	search with cache (only 1: unfold PI; only 1: destruct pi2_int; only 1: lra).	2.64374804497	949
Coq.Reals.Rtrigo1.SIN_bound	40
Coq.Reals.Rtrigo1.COS_bound	40
Coq.Reals.Rtrigo1.cos_sin_0	40
Coq.Reals.Rtrigo1.cos_sin_0_var	40
Coq.Reals.Rtrigo1.sin_lb_gt_0	40
Coq.Reals.Rtrigo1.SIN	40
Coq.Reals.Rtrigo1.COS	40
Coq.Reals.Rtrigo1._PI2_RLT_0	40
Coq.Reals.Rtrigo1.PI4_RLT_PI2	40	0.0.0	search with cache (only 1: unfold PI; only 1: destruct pi2_int; only 1: lra).	0.0897169113159	3
Coq.Reals.Rtrigo1.PI2_Rlt_PI	40	0.0	search with cache (only 1: pose proof PI_RGT_0 as H; only 1: lra).	0.084422826767	2
Coq.Reals.Rtrigo1.sin_gt_0	40
Coq.Reals.Rtrigo1.cos_gt_0	40
Coq.Reals.Rtrigo1.sin_ge_0	40
Coq.Reals.Rtrigo1.cos_ge_0	40
Coq.Reals.Rtrigo1.sin_le_0	40
Coq.Reals.Rtrigo1.cos_le_0	40
Coq.Reals.Rtrigo1.sin_lt_0	40
Coq.Reals.Rtrigo1.sin_lt_0_var	40
Coq.Reals.Rtrigo1.cos_lt_0	40
Coq.Reals.Rtrigo1.tan_gt_0	40
Coq.Reals.Rtrigo1.tan_lt_0	40
Coq.Reals.Rtrigo1.cos_ge_0_3PI2	40
Coq.Reals.Rtrigo1.form1	40
Coq.Reals.Rtrigo1.form2	40	1.0.0.0.0.0.0.0	search with cache (only 1: intros p q; only 1: pattern p at 1; only 1: replace p with (p - q) / 2 + (p + q) / 2 by field; only 1: rewrite <- (cos_neg q); only 1: replace (- q) with (p - q) / 2 - (p + q) / 2 by field; only 1: rewrite cos_plus; only 1: rewrite cos_minus; only 1: ring).	0.187198877335	9
Coq.Reals.Rtrigo1.form3	40
Coq.Reals.Rtrigo1.form4	40	0.0.0.0.0.0.0.0.0.1.0.0	search with cache (only 1: intros p q; only 1: pattern p at 1; only 1: replace p with (p - q) / 2 + (p + q) / 2 by field; only 1: pattern q at 3; only 1: replace q with (p + q) / 2 - (p - q) / 2; only 1: rewrite sin_plus; only 1: rewrite sin_minus; only 1: ring; only 1: pattern q at 3; only 1: rewrite double_var; only 1: unfold Rdiv; only 1: ring).	6.13474297523	1398
Coq.Reals.Rtrigo1.sin_increasing_0	40
Coq.Reals.Rtrigo1.sin_increasing_1	40
Coq.Reals.Rtrigo1.sin_decreasing_0	40
Coq.Reals.Rtrigo1.sin_decreasing_1	40
Coq.Reals.Rtrigo1.cos_increasing_0	40
Coq.Reals.Rtrigo1.cos_increasing_1	40
Coq.Reals.Rtrigo1.cos_decreasing_0	40
Coq.Reals.Rtrigo1.cos_decreasing_1	40
Coq.Reals.Rtrigo1.tan_diff	40
Coq.Reals.Rtrigo1.tan_increasing_0	40
Coq.Reals.Rtrigo1.tan_increasing_1	40
Coq.Reals.Rtrigo1.sin_incr_0	40
Coq.Reals.Rtrigo1.sin_incr_1	40
Coq.Reals.Rtrigo1.sin_decr_0	40
Coq.Reals.Rtrigo1.sin_decr_1	40
Coq.Reals.Rtrigo1.cos_incr_0	40
Coq.Reals.Rtrigo1.cos_incr_1	40
Coq.Reals.Rtrigo1.cos_decr_0	40
Coq.Reals.Rtrigo1.cos_decr_1	40
Coq.Reals.Rtrigo1.tan_incr_0	40
Coq.Reals.Rtrigo1.tan_incr_1	40
Coq.Reals.Rtrigo1.sin_eq_0_1	40
Coq.Reals.Rtrigo1.sin_eq_0_0	40
Coq.Reals.Rtrigo1.cos_eq_0_0	40
Coq.Reals.Rtrigo1.cos_eq_0_1	40
Coq.Reals.Rtrigo1.sin_eq_O_2PI_0	40
Coq.Reals.Rtrigo1.sin_eq_O_2PI_1	40
Coq.Reals.Rtrigo1.cos_eq_0_2PI_0	40
Coq.Reals.Rtrigo1.cos_eq_0_2PI_1	40
Coq.Reals.PartSum.tech1	40
Coq.Reals.PartSum.tech2	40
Coq.Reals.PartSum.tech3	40
Coq.Reals.PartSum.tech4	40	0.4.2	search with cache (only 1: intros P H0 HS; only 1: fix ind_0_1_SS 1; only 1: auto with arith real).	0.149083852768	37
Coq.Reals.PartSum.tech5	40	0.0	search with cache (only 1: intros; only 1: auto with real).	0.0781149864197	2
Coq.Reals.PartSum.tech6	40	10.5.5	search with cache (only 1: intros P H0 HS; only 1: fix ind_0_1_SS 1; only 1: auto with arith real).	13.0807168484	11462
Coq.Reals.PartSum.tech7	40
Coq.Reals.PartSum.tech11	40
Coq.Reals.PartSum.tech12	40	3.0	search with cache (only 1: intros; only 1: assumption).	0.175195932388	44
Coq.Reals.PartSum.scal_sum	40
Coq.Reals.PartSum.decomp_sum	40
Coq.Reals.PartSum.plus_sum	40	12.0.0.0.0.0.0	search with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: trivial; only 1: do 3 rewrite tech5; only 1: rewrite HrecN; only 1: ring).	4.38569998741	3562
Coq.Reals.PartSum.sum_eq	40	2.0.4.12.1.0.0.0.0.1.0	search with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: apply H; only 1: auto; only 1: simpl; only 1: rewrite HrecN; only 1: rewrite (H (S N)); only 1: ring; only 1: apply le_n; only 1: auto).	15.4926569462	19411
Coq.Reals.PartSum.uniqueness_sum	40
Coq.Reals.PartSum.minus_sum	40	1.2.0.0.0.0.0	search with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: ring; only 1: do 3 rewrite tech5; only 1: rewrite HrecN; only 1: ring).	0.144590854645	10
Coq.Reals.PartSum.sum_decomposition	40
Coq.Reals.PartSum.sum_Rle	40
Coq.Reals.PartSum.Rsum_abs	40
Coq.Reals.PartSum.sum_cte	40
Coq.Reals.PartSum.sum_growing	40
Coq.Reals.PartSum.Rabs_triang_gen	40	1.1.0.1.0.0.0.0.0.0.0	search with cache (only 1: intro; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: right; only 1: reflexivity; only 1: do 2 rewrite tech5; only 1: apply Rle_trans with (Rabs (sum_f_R0 An N) + Rabs (An (S N))); only 1: apply Rabs_triang; only 1: do 2 rewrite <- (Rplus_comm (Rabs (An (S N)))); only 1: apply Rplus_le_compat_l; only 1: apply HrecN).	5.73927307129	2022
Coq.Reals.PartSum.cond_pos_sum	40
Coq.Reals.PartSum.cauchy_abs	40
Coq.Reals.PartSum.cv_cauchy_1	40
Coq.Reals.PartSum.cv_cauchy_2	40
Coq.Reals.PartSum.sum_eq_R0	40	1.0.0.0.1.6.1.0.1.0.0.0.0.0	search with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: apply H; only 1: apply le_n; only 1: simpl; only 1: rewrite HrecN; only 1: rewrite (H (S N)); only 1: ring; only 1: apply le_n; only 1: intros; only 1: apply H; only 1: apply le_S; only 1: assumption).	2.8698849678	3719
Coq.Reals.PartSum.sum_incr	40
Coq.Reals.PartSum.sum_cv_maj	40
Coq.Reals.ConstructiveCauchyReals.QSeqEquiv_sym	40
Coq.Reals.ConstructiveCauchyReals.factorDenom	40	0.0.0.0.0.0.1.0	search with cache (only 1: intros n; only 1: case_eq n; only 1: intros; only 1: apply Qeq_refl; only 1: intros; only 1: apply Qeq_refl; only 1: intros; only 1: apply Qeq_refl).	0.0368459224701	9
Coq.Reals.ConstructiveCauchyReals.QSeqEquiv_trans	40
Coq.Reals.ConstructiveCauchyReals.QSeqEquivEx_sym	40
Coq.Reals.ConstructiveCauchyReals.QSeqEquivEx_trans	40
Coq.Reals.ConstructiveCauchyReals.QSeqEquiv_cau_r	40
Coq.Reals.ConstructiveCauchyReals.increasing_modulus_inc	40
Coq.Reals.ConstructiveCauchyReals.increasing_modulus_max	40
Coq.Reals.ConstructiveCauchyReals.standard_modulus	40
Coq.Reals.ConstructiveCauchyReals.CRealLtEpsilon	40
Coq.Reals.ConstructiveCauchyReals.CRealLtForget	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_lpo_dec	40
Coq.Reals.ConstructiveCauchyReals.CRealLe_not_lt	40
Coq.Reals.ConstructiveCauchyReals.CRealEq_diff	40
Coq.Reals.ConstructiveCauchyReals.CRealEq_modindep	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_aboveSig	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_above	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_above_same	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_asym	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_irrefl	40
Coq.Reals.ConstructiveCauchyReals.CRealLe_refl	40	0.10	search with cache (only 1: intros x abs; only 1: exact (CRealLt_asym x x abs abs)).	0.090185880661	87
Coq.Reals.ConstructiveCauchyReals.CRealEq_refl	40
Coq.Reals.ConstructiveCauchyReals.CRealEq_sym	40	2.2.3.6	search with cache (only 1: intros (x, y); only 1: split; only 1: apply H; only 1: apply H).	1.11306095123	1656
Coq.Reals.ConstructiveCauchyReals.CRealLt_dec	40
Coq.Reals.ConstructiveCauchyReals.CReal_le_lt_trans	40
Coq.Reals.ConstructiveCauchyReals.CReal_lt_le_trans	40
Coq.Reals.ConstructiveCauchyReals.CReal_le_trans	40
Coq.Reals.ConstructiveCauchyReals.CReal_lt_trans	40
Coq.Reals.ConstructiveCauchyReals.CRealEq_trans	40
Coq.Reals.ConstructiveCauchyReals.CRealEq_relT	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_morph	40
Coq.Reals.ConstructiveCauchyReals.CRealGt_morph	40
Coq.Reals.ConstructiveCauchyReals.CReal_appart_morph	40
Coq.Reals.ConstructiveCauchyReals.CRealLtProp_morph_Proper	40
Coq.Reals.ConstructiveCauchyReals.CRealLe_morph_Proper	40
Coq.Reals.ConstructiveCauchyReals.CRealGe_morph_Proper	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_proper_l	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_proper_r	40
Coq.Reals.ConstructiveCauchyReals.CRealLe_proper_l	40	4.4.2.1.0.0	search with cache (only 1: intros; only 1: intro abs; only 1: apply H0; only 1: apply (CRealLt_morph z z (CRealEq_refl z) x y); only 1: assumption; only 1: assumption).	1.66598892212	1136
Coq.Reals.ConstructiveCauchyReals.CRealLe_proper_r	40	5.1.1.1.1.0	search with cache (only 1: intros; only 1: intro abs; only 1: apply H0; only 1: apply (CRealLt_morph x y H z z); only 1: apply CRealEq_refl; only 1: assumption).	0.964369773865	350
Coq.Reals.ConstructiveCauchyReals.ConstCauchy	40
Coq.Reals.ConstructiveCauchyReals.inject_Q	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_0_1	40
Coq.Reals.ConstructiveCauchyReals.CReal_injectQPos	40
Coq.Reals.ConstructiveCauchyReals.CRealLtQ	40
Coq.Reals.ConstructiveCauchyReals.CRealLtQopp	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_compare	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_morph_Proper	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_morph_T	40	0.0.0.0.0.0.0.0.0.0.0.0.0.1.1	search with cache (only 1: red; only 1: red; only 1: split; only 1: intros [n abs]; only 1: simpl in abs; only 1: rewrite H in abs; only 1: unfold Qminus in abs; only 1: rewrite Qplus_opp_r in abs; only 1: discriminate abs; only 1: intros [n abs]; only 1: simpl in abs; only 1: rewrite H in abs; only 1: unfold Qminus in abs; only 1: rewrite Qplus_opp_r in abs; only 1: discriminate abs).	4.03959178925	3054
Coq.Reals.ConstructiveCauchyReals.CReal_plus_cauchy	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus	40	12	search with cache (only 1: trivial).	0.0272479057312	46
Coq.Reals.ConstructiveCauchyReals.CReal_plus_nth	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_unfold	40
Coq.Reals.ConstructiveCauchyReals.CReal_opp	40	11	search with cache (only 1: trivial).	0.0282950401306	33
Coq.Reals.ConstructiveCauchyReals.belowMultiple	40	0.0.0.9	search with cache (only 1: induction 1; only 1: now rewrite Nat.mul_1_l; only 1: simpl; only 1: trivial using Nat.le_add_r).	0.0972590446472	98
Coq.Reals.ConstructiveCauchyReals.CReal_plus_assoc	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_comm	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_0_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_0_r	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_lt_compat_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_lt_compat_r	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_lt_reg_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_lt_reg_r	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_reg_l	40	10.0.16.0.0	search with cache (only 1: intros; only 1: intro abs; only 1: apply H; only 1: apply CReal_plus_lt_compat_l; only 1: assumption).	16.3244409561	8696
Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_reg_r	40	0.2.5.0.0.0.0	search with cache (only 1: intros; only 1: intro abs; only 1: apply H; only 1: clear H; only 1: do 2 rewrite <- (CReal_plus_comm x); only 1: apply CReal_plus_lt_compat_l; only 1: assumption).	0.878295183182	238
Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_compat_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_lt_compat	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_compat	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_opp_r	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_opp_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_proper_r	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_proper_l	40	0.1.0.1.0.1.0.1.0.0	search with cache (only 1: intros; only 1: split; only 1: intro abs; only 1: apply CReal_plus_lt_reg_l in abs; only 1: destruct H; only 1: contradiction; only 1: intro abs; only 1: apply CReal_plus_lt_reg_l in abs; only 1: destruct H; only 1: contradiction).	1.28533506393	627
Coq.Reals.ConstructiveCauchyReals.CReal_plus_morph_Proper	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_morph_T	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_eq_reg_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_opp_0	40	2	search with cache (only 1: apply CReal_plus_0_l).	0.259073972702	75
Coq.Reals.ConstructiveCauchyReals.CReal_opp_plus_distr	40
Coq.Reals.ConstructiveCauchyReals.CReal_opp_involutive	40
Coq.Reals.ConstructiveCauchyReals.CReal_opp_gt_lt_contravar	40
Coq.Reals.ConstructiveCauchyReals.CReal_opp_ge_le_contravar	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_plus	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_one	40	2	search with cache (only 1: reflexivity).	0.0202009677887	3
Coq.Reals.ConstructiveCauchyReals.inject_Q_lt	40
Coq.Reals.ConstructiveCauchyReals.opp_inject_Q	40	0.0.0.1.0.0.0.1.2	search with cache (only 1: split; only 1: intros [n nmaj]; only 1: simpl in nmaj; only 1: ring_simplify in nmaj; only 1: discriminate; only 1: intros [n nmaj]; only 1: simpl in nmaj; only 1: ring_simplify in nmaj; only 1: discriminate).	0.475713014603	207
Coq.Reals.ConstructiveCauchyReals.lt_inject_Q	40
Coq.Reals.ConstructiveCauchyReals.le_inject_Q	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_le	40
Coq.Reals.ConstructiveCauchyReals.inject_Z_plus	40
Coq.Reals.ConstructiveCauchyReals.opp_inject_Z	40
Coq.Reals.Rtrigo_reg.continuity_sin	40
Coq.Reals.Rtrigo_reg.CVN_R_sin	40
Coq.Reals.Rtrigo_reg.derivable_pt_lim_sin_0	40
Coq.Reals.Rtrigo_reg.derivable_pt_lim_cos_0	40
Coq.Reals.Rtrigo_reg.derivable_pt_lim_sin	40
Coq.Reals.Rtrigo_reg.derivable_pt_lim_cos	40
Coq.Reals.Rtrigo_reg.derivable_pt_sin	40
Coq.Reals.Rtrigo_reg.derivable_pt_cos	40
Coq.Reals.Rtrigo_reg.derivable_sin	40	0.0.0.0.0	search with cache (only 1: unfold derivable; only 1: unfold derivable_pt; only 1: intro; only 1: exists (cos x); only 1: apply derivable_pt_lim_sin).	0.0255768299103	5
Coq.Reals.Rtrigo_reg.derivable_cos	40	0.0.0.0.0	search with cache (only 1: unfold derivable; only 1: unfold derivable_pt; only 1: intro; only 1: exists (- sin x); only 1: apply derivable_pt_lim_cos).	0.0262289047241	5
Coq.Reals.Rtrigo_reg.derive_pt_sin	40	2.16.1	search with cache (only 1: intros; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_sin).	1.226790905	538
Coq.Reals.Rtrigo_reg.derive_pt_cos	40	1.6.0	search with cache (only 1: intros; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_cos).	0.230351924896	48
Coq.Reals.Cos_plus.Majxy_cv_R0	40
Coq.Reals.Cos_plus.reste1_maj	40
Coq.Reals.Cos_plus.reste2_maj	40
Coq.Reals.Cos_plus.reste1_cv_R0	40
Coq.Reals.Cos_plus.reste2_cv_R0	40
Coq.Reals.Cos_plus.reste_cv_R0	40
Coq.Reals.Cos_plus.cos_plus	40
Coq.Reals.Rgeom.distance_refl	40
Coq.Reals.Rgeom.distance_symm	40
Coq.Reals.Rgeom.law_cosines	40
Coq.Reals.Rgeom.triangle	40
Coq.Reals.Rgeom.translation_0	40	2.0.0.0	search with cache (only 1: intros a b; only 1: split; only 1: auto with real; only 1: eauto with real).	0.109559059143	6
Coq.Reals.Rgeom.isometric_translation	40
Coq.Reals.Rgeom.rotation_0	40
Coq.Reals.Rgeom.rotation_PI2	40	1.0.2.0.0.2.0	search with cache (only 1: intros; only 1: unfold xr, yr; only 1: rewrite sin_PI2; only 1: rewrite cos_PI2; only 1: split; only 1: ring; only 1: ring).	1.14114308357	408
Coq.Reals.Rgeom.isometric_rotation_0	40
Coq.Reals.Rgeom.isometric_rotation	40
Coq.Reals.Rgeom.isometric_rot_trans	40
Coq.Reals.Rgeom.isometric_trans_rot	40
Coq.Reals.Rsqrt_def.dicho_comp	40
Coq.Reals.Rsqrt_def.dicho_lb_growing	40
Coq.Reals.Rsqrt_def.dicho_up_decreasing	40
Coq.Reals.Rsqrt_def.dicho_lb_maj_y	40
Coq.Reals.Rsqrt_def.dicho_lb_maj	40
Coq.Reals.Rsqrt_def.dicho_up_min_x	40
Coq.Reals.Rsqrt_def.dicho_up_min	40
Coq.Reals.Rsqrt_def.dicho_lb_cv	40
Coq.Reals.Rsqrt_def.dicho_up_cv	40
Coq.Reals.Rsqrt_def.dicho_lb_dicho_up	40
Coq.Reals.Rsqrt_def.pow_2_n_neq_R0	40	0.11.0	search with cache (only 1: intro; only 1: apply pow_nonzero; only 1: now apply not_0_IZR).	1.09049320221	419
Coq.Reals.Rsqrt_def.pow_2_n_growing	40	2.14.2	search with cache (only 1: unfold Un_growing; only 1: fix even_equiv 1; only 1: auto with arith real).	1.2143599987	912
Coq.Reals.Rsqrt_def.pow_2_n_infty	40
Coq.Reals.Rsqrt_def.cv_dicho	40
Coq.Reals.Rsqrt_def.continuity_seq	40
Coq.Reals.Rsqrt_def.dicho_lb_car	40
Coq.Reals.Rsqrt_def.dicho_up_car	40
Coq.Reals.Rsqrt_def.cv_pow_half	40
Coq.Reals.Rsqrt_def.IVT	40
Coq.Reals.Rsqrt_def.IVT_cor	40
Coq.Reals.Rsqrt_def.Rsqrt_exists	40
Coq.Reals.Rsqrt_def.Rsqrt_positivity	40
Coq.Reals.Rsqrt_def.Rsqrt_Rsqrt	40
Coq.FSets.FMapFullAVL.AvlProofs.height_non_negative	40
Coq.FSets.FMapFullAVL.AvlProofs.avl_node	40	0	search with cache (only 1: auto).	0.0105640888214	1
Coq.FSets.FMapFullAVL.AvlProofs.height_0	40
Coq.FSets.FMapFullAVL.AvlProofs.empty_avl	40	2.0	search with cache (only 1: unfold empty; only 1: auto).	0.012421131134	4
Coq.FSets.FMapFullAVL.AvlProofs.create_avl	40	1.3.0	search with cache (only 1: intros; only 1: compute; only 1: auto).	0.0175409317017	7
Coq.FSets.FMapFullAVL.AvlProofs.create_height	40	0	search with cache (only 1: auto).	0.0118999481201	1
Coq.FSets.FMapFullAVL.AvlProofs.bal_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.bal_height_1	40
Coq.FSets.FMapFullAVL.AvlProofs.bal_height_2	40
Coq.FSets.FMapFullAVL.AvlProofs.add_avl_1	40
Coq.FSets.FMapFullAVL.AvlProofs.add_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.remove_min_avl_1	40
Coq.FSets.FMapFullAVL.AvlProofs.remove_min_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.merge_avl_1	40
Coq.FSets.FMapFullAVL.AvlProofs.merge_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.remove_avl_1	40
Coq.FSets.FMapFullAVL.AvlProofs.remove_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.join_avl_1	40
Coq.FSets.FMapFullAVL.AvlProofs.join_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.concat_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.split_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.map_height	40	0.0.0.0.5	search with cache (only 1: induction m; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: auto).	0.0517158508301	24
Coq.FSets.FMapFullAVL.AvlProofs.map_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.mapi_height	40	0.0.0.0.0	search with cache (only 1: destruct m; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0260570049286	5
Coq.FSets.FMapFullAVL.AvlProofs.mapi_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.map_option_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.map2_opt_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.map2_avl	40
Coq.FSets.FMapFullAVL.IntMake.MapsTo_1	40
Coq.FSets.FMapFullAVL.IntMake.mem_1	40
Coq.FSets.FMapFullAVL.IntMake.mem_2	40
Coq.FSets.FMapFullAVL.IntMake.empty_1	40	0.0.1.1.15	search with cache (only 1: red; only 1: unfold Raw.empty, Proofs.Empty; only 1: intros; only 1: intro abs; only 1: inversion abs).	0.371430873871	237
Coq.FSets.FMapFullAVL.IntMake.is_empty_1	40
Coq.FSets.FMapFullAVL.IntMake.is_empty_2	40
Coq.FSets.FMapFullAVL.IntMake.add_1	40
Coq.FSets.FMapFullAVL.IntMake.add_2	40
Coq.FSets.FMapFullAVL.IntMake.add_3	40
Coq.FSets.FMapFullAVL.IntMake.remove_1	40
Coq.FSets.FMapFullAVL.IntMake.remove_2	40
Coq.FSets.FMapFullAVL.IntMake.remove_3	40
Coq.FSets.FMapFullAVL.IntMake.find_1	40	0.0.17.2.16	search with cache (only 1: destruct m; only 1: intros; only 1: apply find_1; only 1: auto; only 1: auto).	9.54600596428	11827
Coq.FSets.FMapFullAVL.IntMake.find_2	40	0.31.4.14	search with cache (only 1: destruct m; only 1: intros; only 1: compute; only 1: auto using Proofs.find_1, find_2).	26.3736569881	47113
Coq.FSets.FMapFullAVL.IntMake.fold_1	40
Coq.FSets.FMapFullAVL.IntMake.elements_1	40
Coq.FSets.FMapFullAVL.IntMake.elements_2	40	0.0.0.12	search with cache (only 1: intros m x e; only 1: unfold elements, MapsTo, eq_key_elt; only 1: rewrite elements_mapsto; only 1: auto).	0.908190965652	905
Coq.FSets.FMapFullAVL.IntMake.elements_3	40
Coq.FSets.FMapFullAVL.IntMake.elements_3w	40	1.12.0	search with cache (only 1: intros m; only 1: apply PX.Sort_NoDupA; only 1: exact (elements_sort (is_bst m))).	0.199488162994	282
Coq.FSets.FMapFullAVL.IntMake.cardinal_1	40	0	search with cache (only 1: exact (fun m : Raw.t elt => elements_aux_cardinal nil)).	0.0118689537048	1
Coq.FSets.FMapFullAVL.IntMake.Equivb_Equivb	40
Coq.FSets.FMapFullAVL.IntMake.equal_1	40
Coq.FSets.FMapFullAVL.IntMake.equal_2	40	0.0.0.0.0.0.1.0	search with cache (only 1: unfold equal; only 1: intros (m, b, a) (m', b', a') cmp; only 1: rewrite Equivb_Equivb; only 1: simpl in *; only 1: rewrite equal_Equivb; only 1: auto; only 1: auto; only 1: auto).	0.0368130207062	9
Coq.FSets.FMapFullAVL.IntMake.map_1	40
Coq.FSets.FMapFullAVL.IntMake.map_2	40
Coq.FSets.FMapFullAVL.IntMake.mapi_1	40
Coq.FSets.FMapFullAVL.IntMake.mapi_2	40
Coq.FSets.FMapFullAVL.IntMake.map2_1	40
Coq.FSets.FMapFullAVL.IntMake.map2_2	40
Coq.FSets.FMapFullAVL.IntMake_ord.cons_cardinal_e	40
Coq.FSets.FMapFullAVL.IntMake_ord.compare_aux_tcc	40
Coq.FSets.FMapFullAVL.IntMake_ord.cons_Cmp	40
Coq.FSets.FMapFullAVL.IntMake_ord.compare_aux_Cmp	40
Coq.FSets.FMapFullAVL.IntMake_ord.compare_Cmp	40
Coq.FSets.FMapFullAVL.IntMake_ord.compare	40
Coq.FSets.FMapFullAVL.IntMake_ord.eq_seq	40	0.0	search with cache (only 1: intros; only 1: intuition).	0.0143299102783	2
Coq.FSets.FMapFullAVL.IntMake_ord.lt_slt	40	1	search with cache (only 1: intuition).	0.0123560428619	2
Coq.FSets.FMapFullAVL.IntMake_ord.eq_1	40
Coq.FSets.FMapFullAVL.IntMake_ord.eq_2	40
Coq.FSets.FMapFullAVL.IntMake_ord.eq_refl	40
Coq.FSets.FMapFullAVL.IntMake_ord.eq_sym	40
Coq.FSets.FMapFullAVL.IntMake_ord.eq_trans	40
Coq.FSets.FMapFullAVL.IntMake_ord.lt_trans	40
Coq.FSets.FMapFullAVL.IntMake_ord.lt_not_eq	40
Coq.FSets.FMapAVL.Raw.Proofs.MapsTo_In	40
Coq.FSets.FMapAVL.Raw.Proofs.In_MapsTo	40
Coq.FSets.FMapAVL.Raw.Proofs.In_alt	40
Coq.FSets.FMapAVL.Raw.Proofs.MapsTo_1	40
Coq.FSets.FMapAVL.Raw.Proofs.In_1	40	0.0.0.1.1.0	search with cache (only 1: induction m; only 1: intuition_in; only 1: intuition_in; only 1: eauto with ordered_type; only 1: eauto with ordered_type; only 1: eauto with ordered_type).	0.427040815353	8
Coq.FSets.FMapAVL.Raw.Proofs.In_node_iff	40	4.4	search with cache (only 1: firstorder; only 1: intuition_in).	0.326277971268	57
Coq.FSets.FMapAVL.Raw.Proofs.lt_leaf	40	0.2.1.2	search with cache (only 1: intros m x f; only 1: absurd (X.eq x x); only 1: easy'; only 1: reflexivity).	0.0381741523743	18
Coq.FSets.FMapAVL.Raw.Proofs.gt_leaf	40	0.2.1.4	search with cache (only 1: intros m x f; only 1: absurd (X.eq x x); only 1: easy'; only 1: reflexivity).	0.0853538513184	61
Coq.FSets.FMapAVL.Raw.Proofs.lt_tree_node	40	2.8.0.1	search with cache (only 1: unfold lt_tree; only 1: intros; only 1: intuition_in; only 1: eauto with ordered_type).	0.838396072388	263
Coq.FSets.FMapAVL.Raw.Proofs.gt_tree_node	40	0.0.2	search with cache (only 1: unfold gt_tree; only 1: intuition_in; only 1: order).	0.125070810318	13
Coq.FSets.FMapAVL.Raw.Proofs.lt_left	40	0.0	search with cache (only 1: unfold lt_tree; only 1: intuition_in).	0.016065120697	2
Coq.FSets.FMapAVL.Raw.Proofs.lt_right	40	0	search with cache (only 1: intuition_in).	0.0117101669312	1
Coq.FSets.FMapAVL.Raw.Proofs.gt_left	40	0.0	search with cache (only 1: unfold gt_tree; only 1: intuition_in).	0.0144097805023	2
Coq.FSets.FMapAVL.Raw.Proofs.gt_right	40	0	search with cache (only 1: intuition_in).	0.0121638774872	1
Coq.FSets.FMapAVL.Raw.Proofs.lt_tree_not_in	40
Coq.FSets.FMapAVL.Raw.Proofs.lt_tree_trans	40	4.0.0	search with cache (only 1: unfold lt_tree in *; only 1: intuition_in; only 1: eauto with ordered_type).	0.0439460277557	11
Coq.FSets.FMapAVL.Raw.Proofs.gt_tree_not_in	40	1.0.0.0	search with cache (only 1: intros; only 1: intro; only 1: generalize (H _ H0); only 1: order).	0.067183971405	20
Coq.FSets.FMapAVL.Raw.Proofs.gt_tree_trans	40	4.0.0	search with cache (only 1: unfold gt_tree in *; only 1: intuition_in; only 1: eauto with ordered_type).	0.0430281162262	11
Coq.FSets.FMapAVL.Raw.Proofs.empty_bst	40	1	search with cache (only 1: eauto with ordered_type).	0.0108261108398	2
Coq.FSets.FMapAVL.Raw.Proofs.empty_1	40	19.0	search with cache (only 1: unfold empty; only 1: easy).	0.154756069183	340
Coq.FSets.FMapAVL.Raw.Proofs.is_empty_1	40
Coq.FSets.FMapAVL.Raw.Proofs.is_empty_2	40	25.1	search with cache (only 1: intros m; only 1: now destruct m).	13.7081952095	10726
Coq.FSets.FMapAVL.Raw.Proofs.mem_1	40
Coq.FSets.FMapAVL.Raw.Proofs.mem_2	40	0.0.1.5.0.0.0	search with cache (only 1: intros m x; only 1: functional induction mem x m; only 1: intuition_in; only 1: now destruct Zeq_bool; only 1: auto; only 1: auto; only 1: auto).	0.855342149734	658
Coq.FSets.FMapAVL.Raw.Proofs.find_1	40
Coq.FSets.FMapAVL.Raw.Proofs.find_2	40	0.0.4.0.1.1.12.0	search with cache (only 1: intros m x; only 1: intros e' eqfind; only 1: functional induction find x m; only 1: inversion eqfind; only 1: auto; only 1: inversion eqfind; only 1: auto; only 1: auto).	11.7172298431	8475
Coq.FSets.FMapAVL.Raw.Proofs.find_iff	40
Coq.FSets.FMapAVL.Raw.Proofs.find_in	40	0.1.0.4.6.1	search with cache (only 1: intuition; only 1: functional induction find x m; only 1: easy; only 1: auto; only 1: auto; only 1: auto).	0.722280025482	644
Coq.FSets.FMapAVL.Raw.Proofs.in_find	40
Coq.FSets.FMapAVL.Raw.Proofs.find_in_iff	40
Coq.FSets.FMapAVL.Raw.Proofs.not_find_iff	40
Coq.FSets.FMapAVL.Raw.Proofs.find_find	40
Coq.FSets.FMapAVL.Raw.Proofs.find_mapsto_equiv	40
Coq.FSets.FMapAVL.Raw.Proofs.find_in_equiv	40
Coq.FSets.FMapAVL.Raw.Proofs.create_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.create_in	40	9.6.2	search with cache (only 1: intros; only 1: compute; only 1: intuition_in).	14.9191300869	2736
Coq.FSets.FMapAVL.Raw.Proofs.bal_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.bal_in	40
Coq.FSets.FMapAVL.Raw.Proofs.bal_mapsto	40
Coq.FSets.FMapAVL.Raw.Proofs.bal_find	40
Coq.FSets.FMapAVL.Raw.Proofs.add_in	40
Coq.FSets.FMapAVL.Raw.Proofs.add_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.add_1	40
Coq.FSets.FMapAVL.Raw.Proofs.add_2	40
Coq.FSets.FMapAVL.Raw.Proofs.add_3	40
Coq.FSets.FMapAVL.Raw.Proofs.add_find	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_min_in	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_min_mapsto	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_min_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_min_gt_tree	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_min_find	40
Coq.FSets.FMapAVL.Raw.Proofs.merge_in	40
Coq.FSets.FMapAVL.Raw.Proofs.merge_mapsto	40
Coq.FSets.FMapAVL.Raw.Proofs.merge_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_in	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_1	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_2	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_3	40
Coq.FSets.FMapAVL.Raw.Proofs.join_in	40
Coq.FSets.FMapAVL.Raw.Proofs.join_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.join_find	40
Coq.FSets.FMapAVL.Raw.Proofs.split_in_1	40
Coq.FSets.FMapAVL.Raw.Proofs.split_in_2	40
Coq.FSets.FMapAVL.Raw.Proofs.split_in_3	40
Coq.FSets.FMapAVL.Raw.Proofs.split_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.split_lt_tree	40
Coq.FSets.FMapAVL.Raw.Proofs.split_gt_tree	40
Coq.FSets.FMapAVL.Raw.Proofs.split_find	40
Coq.FSets.FMapAVL.Raw.Proofs.concat_in	40
Coq.FSets.FMapAVL.Raw.Proofs.concat_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.concat_find	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_aux_mapsto	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_mapsto	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_in	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_aux_sort	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_sort	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_nodup	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_aux_cardinal	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_cardinal	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_app	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_node	40
Coq.FSets.FMapAVL.Raw.Proofs.fold_equiv_aux	40
Coq.FSets.FMapAVL.Raw.Proofs.fold_equiv	40
Coq.FSets.FMapAVL.Raw.Proofs.fold_1	40
Coq.FSets.FMapAVL.Raw.Proofs.flatten_e_elements	40	0.0.0.0.1	search with cache (only 1: unfold elements; only 1: simpl; only 1: intros; only 1: rewrite !elements_app, !app_nil_r, !app_assoc_reverse; only 1: auto).	0.0386099815369	6
Coq.FSets.FMapAVL.Raw.Proofs.cons_1	40
Coq.FSets.FMapAVL.Raw.Proofs.cons_IfEq	40
Coq.FSets.FMapAVL.Raw.Proofs.equal_end_IfEq	40	1.3.3.9.21	search with cache (only 1: intros a; only 1: destruct a; only 1: constructor; only 1: simpl; only 1: reflexivity).	2.7402150631	3531
Coq.FSets.FMapAVL.Raw.Proofs.equal_more_IfEq	40	0.3.8	search with cache (only 1: simpl; only 1: inversion 1; only 1: reflexivity).	0.892022132874	493
Coq.FSets.FMapAVL.Raw.Proofs.equal_cont_IfEq	40
Coq.FSets.FMapAVL.Raw.Proofs.equal_IfEq	40
Coq.FSets.FMapAVL.Raw.Proofs.Equivb_elements	40
Coq.FSets.FMapAVL.Raw.Proofs.equal_Equivb	40
Coq.FSets.FMapAVL.Raw.Proofs.map_1	40	2.1.2.0.1	search with cache (only 1: intros m x y e; only 1: induction m; only 1: intuition_in; only 1: simpl; only 1: intuition_in).	0.612451791763	156
Coq.FSets.FMapAVL.Raw.Proofs.map_2	40	3.1.3.1	search with cache (only 1: induction m; only 1: inversion_clear 1; only 1: simpl; only 1: intuition_in).	1.64715695381	332
Coq.FSets.FMapAVL.Raw.Proofs.map_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.mapi_1	40
Coq.FSets.FMapAVL.Raw.Proofs.mapi_2	40	0.0.0.0.0.0.0.0	search with cache (only 1: induction m; only 1: simpl; only 1: inversion_clear 1; only 1: simpl; only 1: inversion_clear 1; only 1: auto; only 1: auto; only 1: auto).	0.0499889850616	8
Coq.FSets.FMapAVL.Raw.Proofs.mapi_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.map_option_2	40
Coq.FSets.FMapAVL.Raw.Proofs.map_option_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.map_option_find	40
Coq.FSets.FMapAVL.Raw.Proofs.map2_opt_2	40
Coq.FSets.FMapAVL.Raw.Proofs.map2_opt_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.map2_opt_1	40
Coq.FSets.FMapAVL.Raw.Proofs.map2_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.map2_1	40
Coq.FSets.FMapAVL.Raw.Proofs.map2_2	40
Coq.FSets.FMapAVL.IntMake.MapsTo_1	40
Coq.FSets.FMapAVL.IntMake.mem_1	40
Coq.FSets.FMapAVL.IntMake.mem_2	40
Coq.FSets.FMapAVL.IntMake.empty_1	40	0.0.1.0.11	search with cache (only 1: red; only 1: unfold Raw.empty, Raw.Proofs.Empty; only 1: intros; only 1: intro abs; only 1: inversion abs).	0.63854598999	131
Coq.FSets.FMapAVL.IntMake.is_empty_1	40
Coq.FSets.FMapAVL.IntMake.is_empty_2	40	17.3.2.1.0	search with cache (only 1: intros m; only 1: case m; only 1: intros s s' B B'; only 1: intros; only 1: easy').	18.8024959564	11610
Coq.FSets.FMapAVL.IntMake.add_1	40
Coq.FSets.FMapAVL.IntMake.add_2	40	3.1.10.3.10	search with cache (only 1: intros m Hm x y e; only 1: induction m; only 1: red; only 1: simpl; only 1: eauto using add_2, add_3).	14.1003201008	18181
Coq.FSets.FMapAVL.IntMake.add_3	40
Coq.FSets.FMapAVL.IntMake.remove_1	40
Coq.FSets.FMapAVL.IntMake.remove_2	40
Coq.FSets.FMapAVL.IntMake.remove_3	40
Coq.FSets.FMapAVL.IntMake.find_1	40	0.0.9.5.16	search with cache (only 1: induction m; only 1: intros; only 1: apply find_1; only 1: auto; only 1: auto).	5.39470100403	6892
Coq.FSets.FMapAVL.IntMake.find_2	40	13.11.9.1.13	search with cache (only 1: intros a b; only 1: case a; only 1: intros; only 1: red; only 1: auto using Raw.Proofs.find_1, find_2).	27.0107340813	49381
Coq.FSets.FMapAVL.IntMake.fold_1	40
Coq.FSets.FMapAVL.IntMake.elements_1	40
Coq.FSets.FMapAVL.IntMake.elements_2	40	2.8.4.19	search with cache (only 1: intros x y z; only 1: unfold elements, MapsTo, eq_key_elt; only 1: rewrite elements_mapsto; only 1: intuition auto; L.MX.OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	23.5739068985	35846
Coq.FSets.FMapAVL.IntMake.elements_3	40	12.7.0.1.1.3.2.0	search with cache (only 1: intros; only 1: unfold elements, MapsTo, eq_key_elt; only 1: unfold Raw.elements; only 1: apply elements_aux_sort; only 1: apply (is_bst m); only 1: auto; only 1: unfold PX.eqke; only 1: inversion 1).	22.4870018959	12637
Coq.FSets.FMapAVL.IntMake.elements_3w	40	1.4.0	search with cache (only 1: intros m; only 1: apply PX.Sort_NoDupA; only 1: exact (elements_sort (is_bst m))).	0.0156230926514	8
Coq.FSets.FMapAVL.IntMake.cardinal_1	40	0	search with cache (only 1: exact (fun m : Raw.tree elt => elements_aux_cardinal nil)).	0.0106480121613	1
Coq.FSets.FMapAVL.IntMake.Equivb_Equivb	40
Coq.FSets.FMapAVL.IntMake.equal_1	40
Coq.FSets.FMapAVL.IntMake.equal_2	40	0.0.0.0.0.0.1.0	search with cache (only 1: unfold equal; only 1: intros (m, b) (m', b') cmp; only 1: rewrite Equivb_Equivb; only 1: simpl in *; only 1: rewrite equal_Equivb; only 1: auto; only 1: auto; only 1: auto).	0.0318250656128	9
Coq.FSets.FMapAVL.IntMake.map_1	40
Coq.FSets.FMapAVL.IntMake.map_2	40
Coq.FSets.FMapAVL.IntMake.mapi_1	40
Coq.FSets.FMapAVL.IntMake.mapi_2	40
Coq.FSets.FMapAVL.IntMake.map2_1	40
Coq.FSets.FMapAVL.IntMake.map2_2	40
Coq.FSets.FMapAVL.IntMake_ord.cons_Cmp	40
Coq.FSets.FMapAVL.IntMake_ord.compare_end_Cmp	40	0.0.1.0.0.1.0	search with cache (only 1: destruct e2; only 1: red; only 1: simpl; only 1: auto; only 1: red; only 1: simpl; only 1: auto).	0.0279340744019	9
Coq.FSets.FMapAVL.IntMake_ord.compare_more_Cmp	40
Coq.FSets.FMapAVL.IntMake_ord.compare_cont_Cmp	40
Coq.FSets.FMapAVL.IntMake_ord.compare_Cmp	40
Coq.FSets.FMapAVL.IntMake_ord.compare	40
Coq.FSets.FMapAVL.IntMake_ord.eq_seq	40	6.0	search with cache (only 1: intros; only 1: P.intuition_in).	0.0303130149841	22
Coq.FSets.FMapAVL.IntMake_ord.lt_slt	40	1	search with cache (only 1: intuition).	0.0108780860901	2
Coq.FSets.FMapAVL.IntMake_ord.eq_1	40
Coq.FSets.FMapAVL.IntMake_ord.eq_2	40
Coq.FSets.FMapAVL.IntMake_ord.eq_refl	40
Coq.FSets.FMapAVL.IntMake_ord.eq_sym	40
Coq.FSets.FMapAVL.IntMake_ord.eq_trans	40
Coq.FSets.FMapAVL.IntMake_ord.lt_trans	40
Coq.FSets.FMapAVL.IntMake_ord.lt_not_eq	40
Coq.FSets.FSetFacts.WFacts_fun.In_eq_iff	40
Coq.FSets.FSetFacts.WFacts_fun.mem_iff	40	2	search with cache (only 1: intuition).	0.178014993668	35
Coq.FSets.FSetFacts.WFacts_fun.not_mem_iff	40
Coq.FSets.FSetFacts.WFacts_fun.equal_iff	40	1	search with cache (only 1: intuition).	0.0624151229858	13
Coq.FSets.FSetFacts.WFacts_fun.subset_iff	40	2	search with cache (only 1: intuition).	0.0450878143311	12
Coq.FSets.FSetFacts.WFacts_fun.empty_iff	40
Coq.FSets.FSetFacts.WFacts_fun.is_empty_iff	40	1	search with cache (only 1: intuition).	0.0410101413727	11
Coq.FSets.FSetFacts.WFacts_fun.singleton_iff	40	1	search with cache (only 1: intuition).	0.0459308624268	20
Coq.FSets.FSetFacts.WFacts_fun.add_iff	40
Coq.FSets.FSetFacts.WFacts_fun.add_neq_iff	40
Coq.FSets.FSetFacts.WFacts_fun.remove_iff	40
Coq.FSets.FSetFacts.WFacts_fun.remove_neq_iff	40	0.0.1.3.2.0	search with cache (only 1: split; only 1: intro; only 1: apply remove_3 with x; only 1: auto; only 1: apply remove_2; only 1: auto).	0.105436086655	104
Coq.FSets.FSetFacts.WFacts_fun.union_iff	40	1	search with cache (only 1: intuition).	0.079204082489	17
Coq.FSets.FSetFacts.WFacts_fun.inter_iff	40
Coq.FSets.FSetFacts.WFacts_fun.diff_iff	40
Coq.FSets.FSetFacts.WFacts_fun.filter_iff	40
Coq.FSets.FSetFacts.WFacts_fun.for_all_iff	40	0	search with cache (only 1: intuition).	0.0381619930267	1
Coq.FSets.FSetFacts.WFacts_fun.exists_iff	40	1	search with cache (only 1: intuition).	0.0624940395355	16
Coq.FSets.FSetFacts.WFacts_fun.elements_iff	40	3	search with cache (only 1: intuition).	0.0322248935699	13
Coq.FSets.FSetFacts.WFacts_fun.mem_b	40
Coq.FSets.FSetFacts.WFacts_fun.empty_b	40
Coq.FSets.FSetFacts.WFacts_fun.add_b	40
Coq.FSets.FSetFacts.WFacts_fun.add_neq_b	40	1.1.0.1.0.0.0.2	search with cache (only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_iff s x y); only 1: destruct (mem y s); only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition).	7.85264515877	1752
Coq.FSets.FSetFacts.WFacts_fun.remove_b	40
Coq.FSets.FSetFacts.WFacts_fun.remove_neq_b	40	1.1.0.2.0.5	search with cache (only 1: generalize (mem_iff (remove x s) y), (mem_iff s y), (remove_iff s x y); only 1: destruct (mem y s); only 1: intuition; only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition).	25.8363268375	6345
Coq.FSets.FSetFacts.WFacts_fun.singleton_b	40
Coq.FSets.FSetFacts.WFacts_fun.union_b	40
Coq.FSets.FSetFacts.WFacts_fun.inter_b	40
Coq.FSets.FSetFacts.WFacts_fun.diff_b	40
Coq.FSets.FSetFacts.WFacts_fun.elements_b	40
Coq.FSets.FSetFacts.WFacts_fun.filter_b	40
Coq.FSets.FSetFacts.WFacts_fun.for_all_b	40
Coq.FSets.FSetFacts.WFacts_fun.exists_b	40
Coq.FSets.FSetFacts.WFacts_fun.E_ST	40	16.0.0.1	search with cache (only 1: split; only 1: auto; only 1: auto; only 1: eauto).	0.903612136841	1454
Coq.FSets.FSetFacts.WFacts_fun.Equal_ST	40	33	search with cache (only 1: firstorder).	14.5779850483	30320
Coq.FSets.FSetFacts.WFacts_fun.In_m	40
Coq.FSets.FSetFacts.WFacts_fun.is_empty_m	40
Coq.FSets.FSetFacts.WFacts_fun.Empty_m	40
Coq.FSets.FSetFacts.WFacts_fun.mem_m	40
Coq.FSets.FSetFacts.WFacts_fun.singleton_m	40
Coq.FSets.FSetFacts.WFacts_fun.add_m	40
Coq.FSets.FSetFacts.WFacts_fun.remove_m	40
Coq.FSets.FSetFacts.WFacts_fun.union_m	40
Coq.FSets.FSetFacts.WFacts_fun.inter_m	40
Coq.FSets.FSetFacts.WFacts_fun.diff_m	40
Coq.FSets.FSetFacts.WFacts_fun.Subset_m	40	8.2.0.1	search with cache (only 1: repeat red; only 1: intros; only 1: generalize dependent y; only 1: firstorder).	0.992129087448	839
Coq.FSets.FSetFacts.WFacts_fun.subset_m	40
Coq.FSets.FSetFacts.WFacts_fun.equal_m	40
Coq.FSets.FSetFacts.WFacts_fun.Subset_refl	40	13	search with cache (only 1: firstorder).	0.0525798797607	60
Coq.FSets.FSetFacts.WFacts_fun.Subset_trans	40	1.0	search with cache (only 1: red; only 1: auto).	0.0308039188385	3
Coq.FSets.FSetFacts.WFacts_fun.In_s_m	40	9.11.4	search with cache (only 1: intros x y H s s' H0; only 1: rewrite (In_eq_iff s H); only 1: firstorder).	7.53781485558	5512
Coq.FSets.FSetFacts.WFacts_fun.Empty_s_m_Proper	40	7.1	search with cache (only 1: intros; only 1: firstorder).	0.275846004486	100
Coq.FSets.FSetFacts.WFacts_fun.add_s_m_Proper	40	0.3.0.4.4	search with cache (only 1: unfold Subset; only 1: intros x y H s s' H0 a; only 1: do 2 rewrite add_iff; only 1: rewrite H; only 1: intuition).	0.931421041489	444
Coq.FSets.FSetFacts.WFacts_fun.remove_s_m_Proper	40	1.0.0.0.0	search with cache (only 1: unfold Subset; only 1: intros x y H s s' H0 a; only 1: do 2 rewrite remove_iff; only 1: intuition; only 1: eauto).	0.0700719356537	6
Coq.FSets.FSetFacts.WFacts_fun.union_s_m_Proper	40	1.0.2.2.0	search with cache (only 1: red; only 1: unfold Subset; only 1: intros s s' H s'' s''' H0 a; only 1: do 2 rewrite union_iff; only 1: intuition).	0.117658138275	10
Coq.FSets.FSetFacts.WFacts_fun.inter_s_m_Proper	40	3.0.2.0	search with cache (only 1: unfold Subset; only 1: intros s s' H s'' s''' H0 a; only 1: do 2 rewrite inter_iff; only 1: intuition).	0.0584878921509	12
Coq.FSets.FSetFacts.WFacts_fun.diff_s_m_Proper	40	0.0.2.2.0	search with cache (only 1: red; only 1: unfold Subset; only 1: intros s s' H s'' s''' H0 a; only 1: do 2 rewrite diff_iff; only 1: firstorder).	0.0599520206451	9
Coq.FSets.FSetFacts.WFacts_fun.filter_equal	40
Coq.FSets.FSetFacts.WFacts_fun.filter_ext	40
Coq.FSets.FSetFacts.WFacts_fun.filter_subset	40
Coq.FSets.FSetPositive.PositiveSet.In_1	40	1.1.0.3	search with cache (only 1: intros y z H1 H2; only 1: destruct y as [| b y']; only 1: auto; only 1: congruence).	0.147547006607	63
Coq.FSets.FSetPositive.PositiveSet.eq_refl	40	18	search with cache (only 1: easy).	0.213896036148	265
Coq.FSets.FSetPositive.PositiveSet.eq_sym	40	12	search with cache (only 1: easy).	0.214540958405	201
Coq.FSets.FSetPositive.PositiveSet.eq_trans	40
Coq.FSets.FSetPositive.PositiveSet.mem_1	40	0.1	search with cache (only 1: intros; only 1: <Coq.Strings.String.t_eqb>).	0.0397138595581	3
Coq.FSets.FSetPositive.PositiveSet.mem_2	40	1.0	search with cache (only 1: unfold In; only 1: trivial).	0.0356540679932	3
Coq.FSets.FSetPositive.PositiveSet.mem_Leaf	40	1.0	search with cache (only 1: intro; only 1: reflexivity).	0.0375609397888	3
Coq.FSets.FSetPositive.PositiveSet.empty_1	40	2.12	search with cache (only 1: vm_compute; only 1: intuition).	0.112267017365	143
Coq.FSets.FSetPositive.PositiveSet.mem_node	40
Coq.FSets.FSetPositive.PositiveSet.is_empty_spec	40	0.33	search with cache (only 1: fix even_spec 1; only 1: trivial).	5.89885306358	6935
Coq.FSets.FSetPositive.PositiveSet.is_empty_1	40
Coq.FSets.FSetPositive.PositiveSet.is_empty_2	40	1.0.0	search with cache (only 1: intro; only 1: rewrite is_empty_spec; only 1: trivial).	0.0475549697876	4
Coq.FSets.FSetPositive.PositiveSet.subset_Leaf_s	40	1.7.5	search with cache (only 1: intros; only 1: vm_compute; only 1: intuition discriminate).	0.214616060257	141
Coq.FSets.FSetPositive.PositiveSet.subset_spec	40
Coq.FSets.FSetPositive.PositiveSet.subset_1	40
Coq.FSets.FSetPositive.PositiveSet.subset_2	40
Coq.FSets.FSetPositive.PositiveSet.equal_subset	40
Coq.FSets.FSetPositive.PositiveSet.equal_spec	40
Coq.FSets.FSetPositive.PositiveSet.equal_1	40	0.0.1.4.4.0	search with cache (only 1: intros s s'; only 1: rewrite equal_subset; only 1: rewrite andb_true_iff; only 1: rewrite <- 2!subset_spec; only 1: unfold Equal, Subset; only 1: firstorder).	0.777279138565	376
Coq.FSets.FSetPositive.PositiveSet.equal_2	40	0.0.0.4.4.0	search with cache (only 1: intros s s'; only 1: rewrite equal_subset; only 1: rewrite andb_true_iff; only 1: rewrite <- 2!subset_spec; only 1: unfold Equal, Subset; only 1: firstorder).	0.540591001511	209
Coq.FSets.FSetPositive.PositiveSet.eq_dec	40
Coq.FSets.FSetPositive.PositiveSet.lex_Opp	40
Coq.FSets.FSetPositive.PositiveSet.compare_bool_inv	40
Coq.FSets.FSetPositive.PositiveSet.compare_inv	40
Coq.FSets.FSetPositive.PositiveSet.lex_Eq	40	1.1.3.1.3.1.7.7	search with cache (only 1: intros s1; only 1: elim s1; only 1: intros; only 1: now split; only 1: intros; only 1: now split; only 1: intros; only 1: now split).	38.4164261818	40249
Coq.FSets.FSetPositive.PositiveSet.compare_bool_Eq	40	0.0.0.0.3	search with cache (only 1: destr_bool; only 1: now split; only 1: now split; only 1: now split; only 1: now split).	0.157979011536	20
Coq.FSets.FSetPositive.PositiveSet.compare_equal	40
Coq.FSets.FSetPositive.PositiveSet.compare_gt	40
Coq.FSets.FSetPositive.PositiveSet.compare_eq	40
Coq.FSets.FSetPositive.PositiveSet.compare	40
Coq.FSets.FSetPositive.PositiveSet.ct_cxe	40	3.3.3.1	search with cache (only 1: induction x; only 1: constructor; only 1: constructor; only 1: constructor).	0.124861955643	162
Coq.FSets.FSetPositive.PositiveSet.ct_xce	40	0.0.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0431771278381	4
Coq.FSets.FSetPositive.PositiveSet.ct_lxl	40	0.0.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0434799194336	4
Coq.FSets.FSetPositive.PositiveSet.ct_gxg	40	0.0.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0419139862061	4
Coq.FSets.FSetPositive.PositiveSet.ct_xll	40	0.0.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0409350395203	4
Coq.FSets.FSetPositive.PositiveSet.ct_xgg	40	0.0.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0435431003571	4
Coq.FSets.FSetPositive.PositiveSet.ct_lex	40
Coq.FSets.FSetPositive.PositiveSet.ct_compare_bool	40
Coq.FSets.FSetPositive.PositiveSet.compare_x_Leaf	40	1.1.16	search with cache (only 1: intros [| l' o' r']; only 1: reflexivity; only 1: trivial).	0.593351840973	740
Coq.FSets.FSetPositive.PositiveSet.compare_empty_x	40
Coq.FSets.FSetPositive.PositiveSet.compare_x_empty	40
Coq.FSets.FSetPositive.PositiveSet.ct_compare_fun	40
Coq.FSets.FSetPositive.PositiveSet.lt_trans	40
Coq.FSets.FSetPositive.PositiveSet.lt_not_eq	40
Coq.FSets.FSetPositive.PositiveSet.add_spec	40
Coq.FSets.FSetPositive.PositiveSet.add_1	40
Coq.FSets.FSetPositive.PositiveSet.add_2	40	1.7.5	search with cache (only 1: intros; only 1: apply <- add_spec; only 1: intuition).	0.279947042465	277
Coq.FSets.FSetPositive.PositiveSet.add_3	40
Coq.FSets.FSetPositive.PositiveSet.remove_spec	40
Coq.FSets.FSetPositive.PositiveSet.remove_1	40
Coq.FSets.FSetPositive.PositiveSet.remove_2	40	0.1.0	search with cache (only 1: intros s x y H; only 1: rewrite remove_spec; only 1: tauto).	0.0541739463806	4
Coq.FSets.FSetPositive.PositiveSet.remove_3	40
Coq.FSets.FSetPositive.PositiveSet.singleton_1	40
Coq.FSets.FSetPositive.PositiveSet.singleton_2	40	0.0.0.0.0.0	search with cache (only 1: unfold singleton; only 1: intros; only 1: rewrite add_spec; only 1: unfold In; only 1: rewrite mem_Leaf; only 1: intuition discriminate).	0.0500960350037	6
Coq.FSets.FSetPositive.PositiveSet.union_spec	40
Coq.FSets.FSetPositive.PositiveSet.union_1	40
Coq.FSets.FSetPositive.PositiveSet.union_2	40
Coq.FSets.FSetPositive.PositiveSet.union_3	40	10.2.0	search with cache (only 1: intros; only 1: apply <- union_spec; only 1: now constructor).	0.771890163422	534
Coq.FSets.FSetPositive.PositiveSet.inter_spec	40
Coq.FSets.FSetPositive.PositiveSet.inter_1	40
Coq.FSets.FSetPositive.PositiveSet.inter_2	40	0.2.0	search with cache (only 1: intros s s' x; only 1: rewrite inter_spec; only 1: tauto).	0.05446600914	5
Coq.FSets.FSetPositive.PositiveSet.inter_3	40	0.0.0	search with cache (only 1: intros s s' x; only 1: rewrite inter_spec; only 1: tauto).	0.0549850463867	3
Coq.FSets.FSetPositive.PositiveSet.diff_spec	40
Coq.FSets.FSetPositive.PositiveSet.diff_1	40
Coq.FSets.FSetPositive.PositiveSet.diff_2	40
Coq.FSets.FSetPositive.PositiveSet.diff_3	40	0.0.0	search with cache (only 1: intros s s' x; only 1: rewrite diff_spec; only 1: tauto).	0.0547578334808	3
Coq.FSets.FSetPositive.PositiveSet.fold_1	40
Coq.FSets.FSetPositive.PositiveSet.cardinal_1	40
Coq.FSets.FSetPositive.PositiveSet.xfilter_spec	40
Coq.FSets.FSetPositive.PositiveSet.filter_1	40
Coq.FSets.FSetPositive.PositiveSet.filter_2	40
Coq.FSets.FSetPositive.PositiveSet.filter_3	40	0.0.0.0	search with cache (only 1: unfold filter; only 1: intros s x f _; only 1: rewrite xfilter_spec; only 1: tauto).	0.0582599639893	4
Coq.FSets.FSetPositive.PositiveSet.xforall_spec	40
Coq.FSets.FSetPositive.PositiveSet.for_all_1	40
Coq.FSets.FSetPositive.PositiveSet.for_all_2	40	0.0.0.0	search with cache (only 1: intros s f _; only 1: unfold for_all; only 1: rewrite xforall_spec; only 1: trivial).	0.0902907848358	4
Coq.FSets.FSetPositive.PositiveSet.xexists_spec	40
Coq.FSets.FSetPositive.PositiveSet.exists_1	40
Coq.FSets.FSetPositive.PositiveSet.exists_2	40	0.0.0.0	search with cache (only 1: intros s f _; only 1: unfold exists_; only 1: rewrite xexists_spec; only 1: trivial).	0.0496051311493	4
Coq.FSets.FSetPositive.PositiveSet.partition_filter	40
Coq.FSets.FSetPositive.PositiveSet.partition_1	40
Coq.FSets.FSetPositive.PositiveSet.partition_2	40	0.3.2	search with cache (only 1: intros; only 1: rewrite partition_filter; only 1: apply eq_refl).	0.0828120708466	34
Coq.FSets.FSetPositive.PositiveSet.xelements_spec	40
Coq.FSets.FSetPositive.PositiveSet.elements_1	40
Coq.FSets.FSetPositive.PositiveSet.elements_2	40
Coq.FSets.FSetPositive.PositiveSet.lt_rev_append	40
Coq.FSets.FSetPositive.PositiveSet.elements_3	40
Coq.FSets.FSetPositive.PositiveSet.elements_3w	40
Coq.FSets.FSetPositive.PositiveSet.choose_1	40
Coq.FSets.FSetPositive.PositiveSet.choose_2	40
Coq.FSets.FSetPositive.PositiveSet.choose_empty	40
Coq.FSets.FSetPositive.PositiveSet.choose_3'	40
Coq.FSets.FSetPositive.PositiveSet.choose_3	40
Coq.FSets.FSetPositive.PositiveSet.min_elt_1	40
Coq.FSets.FSetPositive.PositiveSet.min_elt_3	40
Coq.FSets.FSetPositive.PositiveSet.min_elt_2	40
Coq.FSets.FSetPositive.PositiveSet.max_elt_1	40
Coq.FSets.FSetPositive.PositiveSet.max_elt_3	40
Coq.FSets.FSetPositive.PositiveSet.max_elt_2	40
Coq.FSets.FMapPositive.append_assoc_0	40
Coq.FSets.FMapPositive.append_assoc_1	40
Coq.FSets.FMapPositive.append_neutral_r	40	0.2.4.1.14.1.10	search with cache (only 1: induction i; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: f_equal; only 1: auto; only 1: trivial).	1.55254101753	3357
Coq.FSets.FMapPositive.append_neutral_l	40	1.0.1.0.1.0.0	search with cache (only 1: induction i; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: simpl; only 1: trivial).	0.0181188583374	10
Coq.FSets.FMapPositive.PositiveMap.gempty	40
Coq.FSets.FMapPositive.PositiveMap.gss	40
Coq.FSets.FMapPositive.PositiveMap.gleaf	40	0.0.0.0.0.0.0	search with cache (only 1: destruct i; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: reflexivity).	0.0200419425964	7
Coq.FSets.FMapPositive.PositiveMap.gso	40
Coq.FSets.FMapPositive.PositiveMap.rleaf	40	0.0.0.0.0.0	search with cache (only 1: induction i; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: reflexivity).	0.0227229595184	6
Coq.FSets.FMapPositive.PositiveMap.grs	40
Coq.FSets.FMapPositive.PositiveMap.gro	40
Coq.FSets.FMapPositive.PositiveMap.xelements_correct	40
Coq.FSets.FMapPositive.PositiveMap.elements_correct	40
Coq.FSets.FMapPositive.PositiveMap.xfind_left	40
Coq.FSets.FMapPositive.PositiveMap.xelements_ii	40
Coq.FSets.FMapPositive.PositiveMap.xelements_io	40
Coq.FSets.FMapPositive.PositiveMap.xelements_oo	40
Coq.FSets.FMapPositive.PositiveMap.xelements_oi	40
Coq.FSets.FMapPositive.PositiveMap.xelements_ih	40
Coq.FSets.FMapPositive.PositiveMap.xelements_oh	40
Coq.FSets.FMapPositive.PositiveMap.xelements_hi	40
Coq.FSets.FMapPositive.PositiveMap.xelements_ho	40
Coq.FSets.FMapPositive.PositiveMap.find_xfind_h	40	0.0.1.1.0.2	search with cache (only 1: induction i; only 1: simpl in *; only 1: auto; only 1: reflexivity; only 1: simpl in *; only 1: auto).	0.301273107529	139
Coq.FSets.FMapPositive.PositiveMap.xelements_complete	40
Coq.FSets.FMapPositive.PositiveMap.elements_complete	40
Coq.FSets.FMapPositive.PositiveMap.cardinal_1	40
Coq.FSets.FMapPositive.PositiveMap.mem_find	40
Coq.FSets.FMapPositive.PositiveMap.Empty_alt	40
Coq.FSets.FMapPositive.PositiveMap.Empty_Node	40
Coq.FSets.FMapPositive.PositiveMap.mem_1	40
Coq.FSets.FMapPositive.PositiveMap.mem_2	40
Coq.FSets.FMapPositive.PositiveMap.MapsTo_1	40	0.11.9	search with cache (only 1: compute; only 1: repeat match goal with | |- context [ match ?x with | _ => _ end ] => is_var x; destruct x | _ => intro | _ => reflexivity | _ => progress subst | H:Some ?a = Some ?b |- _ => assert (a = b) by refine match H with | eq_refl => eq_refl end; clear H | H:None = Some _ |- _ => solve [ inversion H ] end; only 1: auto).	1.24105501175	1183
Coq.FSets.FMapPositive.PositiveMap.find_1	40	0	search with cache (only 1: auto).	0.00915813446045	1
Coq.FSets.FMapPositive.PositiveMap.find_2	40	1.0	search with cache (only 1: unfold MapsTo; only 1: auto).	0.00973105430603	3
Coq.FSets.FMapPositive.PositiveMap.empty_1	40	3.1	search with cache (only 1: rewrite Empty_alt; only 1: exact gempty).	0.0138590335846	6
Coq.FSets.FMapPositive.PositiveMap.is_empty_1	40
Coq.FSets.FMapPositive.PositiveMap.is_empty_2	40
Coq.FSets.FMapPositive.PositiveMap.add_1	40
Coq.FSets.FMapPositive.PositiveMap.add_2	40
Coq.FSets.FMapPositive.PositiveMap.add_3	40	0.0.1.0.1.0.0.1.0.1.5	search with cache (only 1: destruct m; only 1: intro; only 1: unfold MapsTo; only 1: rewrite gso; only 1: auto; only 1: ME.MO.order; only 1: intro; only 1: unfold MapsTo; only 1: rewrite gso; only 1: auto; only 1: ME.MO.order).	2.57864809036	2990
Coq.FSets.FMapPositive.PositiveMap.remove_1	40
Coq.FSets.FMapPositive.PositiveMap.remove_2	40
Coq.FSets.FMapPositive.PositiveMap.remove_3	40
Coq.FSets.FMapPositive.PositiveMap.elements_1	40
Coq.FSets.FMapPositive.PositiveMap.elements_2	40
Coq.FSets.FMapPositive.PositiveMap.xelements_bits_lt_1	40
Coq.FSets.FMapPositive.PositiveMap.xelements_bits_lt_2	40
Coq.FSets.FMapPositive.PositiveMap.xelements_sort	40
Coq.FSets.FMapPositive.PositiveMap.elements_3	40
Coq.FSets.FMapPositive.PositiveMap.elements_3w	40
Coq.FSets.FMapPositive.PositiveMap.xgmapi	40
Coq.FSets.FMapPositive.PositiveMap.gmapi	40
Coq.FSets.FMapPositive.PositiveMap.mapi_1	40
Coq.FSets.FMapPositive.PositiveMap.mapi_2	40
Coq.FSets.FMapPositive.PositiveMap.map_1	40
Coq.FSets.FMapPositive.PositiveMap.map_2	40
Coq.FSets.FMapPositive.PositiveMap.xgmap2_l	40	1.0.0.0.0.2.0.0.0.0.2.0.0.0.0	search with cache (only 1: induction i; only 1: destruct m; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: destruct m; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: destruct m; only 1: simpl; only 1: auto; only 1: reflexivity).	25.113451004	17504
Coq.FSets.FMapPositive.PositiveMap.xgmap2_r	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: induction i; only 1: intros; only 1: destruct m; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: intros; only 1: destruct m; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: intros; only 1: destruct m; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	27.2160921097	19006
Coq.FSets.FMapPositive.PositiveMap.gmap2	40
Coq.FSets.FMapPositive.PositiveMap.map2_1	40
Coq.FSets.FMapPositive.PositiveMap.map2_2	40
Coq.FSets.FMapPositive.PositiveMap.xfoldi_1	40
Coq.FSets.FMapPositive.PositiveMap.fold_1	40
Coq.FSets.FMapPositive.PositiveMap.equal_1	40
Coq.FSets.FMapPositive.PositiveMap.equal_2	40
Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.gsspec	40
Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.gsident	40
Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.xmap2_lr	40
Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.map2_commut	40
Coq.FSets.FMapFacts.WFacts_fun.eq_bool_alt	40	0.0.0.0.0.0.0.0.0	search with cache (only 1: destr_bool; only 1: split; only 1: split; only 1: trivial; only 1: trivial; only 1: split; only 1: intuition; only 1: intuition; only 1: intuition).	0.0359079837799	9
Coq.FSets.FMapFacts.WFacts_fun.eq_option_alt	40
Coq.FSets.FMapFacts.WFacts_fun.MapsTo_fun	40
Coq.FSets.FMapFacts.WFacts_fun.In_iff	40
Coq.FSets.FMapFacts.WFacts_fun.MapsTo_iff	40	2.0.1.2	search with cache (only 1: intros; only 1: intuition; only 1: apply (MapsTo_1 H H0); only 1: apply (MapsTo_1 (E.eq_sym H) H0)).	0.0298280715942	21
Coq.FSets.FMapFacts.WFacts_fun.mem_in_iff	40	0	search with cache (only 1: intuition).	0.0182259082794	1
Coq.FSets.FMapFacts.WFacts_fun.not_mem_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.In_dec	40
Coq.FSets.FMapFacts.WFacts_fun.find_mapsto_iff	40	4.2	search with cache (only 1: intros; only 1: intuition).	0.0209438800812	13
Coq.FSets.FMapFacts.WFacts_fun.not_find_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.in_find_iff	40
Coq.FSets.FMapFacts.WFacts_fun.equal_iff	40
Coq.FSets.FMapFacts.WFacts_fun.empty_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.empty_in_iff	40	0.10.0.0	search with cache (only 1: unfold In; only 1: intuition; only 1: destruct H as (b, H); only 1: apply (empty_1 H)).	0.373527050018	287
Coq.FSets.FMapFacts.WFacts_fun.is_empty_iff	40	1	search with cache (only 1: intuition).	0.0253291130066	11
Coq.FSets.FMapFacts.WFacts_fun.add_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.add_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.add_neq_mapsto_iff	40	0.0.10.0.4	search with cache (only 1: intros; only 1: intuition; only 1: apply add_3 with x e; only 1: auto; only 1: auto).	2.37470197678	2276
Coq.FSets.FMapFacts.WFacts_fun.add_neq_in_iff	40	0.0.3.0.3.0.0.5.0.3.0.0	search with cache (only 1: unfold In; only 1: split; only 1: intros (e0, H0); only 1: exists e0; only 1: apply add_3 with x e; only 1: auto; only 1: auto; only 1: intros (e0, H0); only 1: exists e0; only 1: apply add_2; only 1: auto; only 1: auto).	22.1208591461	29831
Coq.FSets.FMapFacts.WFacts_fun.remove_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.remove_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.remove_neq_mapsto_iff	40	1.1.2.1	search with cache (only 1: intros; only 1: intuition; only 1: apply remove_3 with x; only 1: auto).	0.0272390842438	15
Coq.FSets.FMapFacts.WFacts_fun.remove_neq_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.elements_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.elements_in_iff	40	0.1.3.0.0.6.0.0.0.0.0	search with cache (only 1: unfold In; only 1: split; only 1: intros (e0, H0); only 1: exists e0; only 1: apply elements_1; only 1: auto; only 1: intros (e0, H0); only 1: exists e0; only 1: apply elements_2; only 1: generalize (mem_in_iff m x); only 1: intuition).	6.81863880157	7979
Coq.FSets.FMapFacts.WFacts_fun.map_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.map_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.mapi_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.mapi_inv	40
Coq.FSets.FMapFacts.WFacts_fun.mapi_1bis	40
Coq.FSets.FMapFacts.WFacts_fun.mapi_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.mem_find_b	40
Coq.FSets.FMapFacts.WFacts_fun.mem_b	40
Coq.FSets.FMapFacts.WFacts_fun.find_o	40
Coq.FSets.FMapFacts.WFacts_fun.empty_o	40
Coq.FSets.FMapFacts.WFacts_fun.empty_a	40
Coq.FSets.FMapFacts.WFacts_fun.add_eq_o	40	0.0	search with cache (only 1: intros; only 1: auto with map).	0.0136249065399	2
Coq.FSets.FMapFacts.WFacts_fun.add_neq_o	40	3.0.3.7.1.1.0	search with cache (only 1: intros; only 1: rewrite eq_option_alt; only 1: split; only 1: rewrite <- 2!find_mapsto_iff; only 1: apply add_3; only 1: auto; only 1: auto with map).	2.33553600311	2066
Coq.FSets.FMapFacts.WFacts_fun.add_o	40
Coq.FSets.FMapFacts.WFacts_fun.add_eq_b	40	0.7.0.3	search with cache (only 1: intros; only 1: apply mem_1; only 1: exists e; only 1: auto with map).	0.742151021957	275
Coq.FSets.FMapFacts.WFacts_fun.add_neq_b	40
Coq.FSets.FMapFacts.WFacts_fun.add_b	40
Coq.FSets.FMapFacts.WFacts_fun.remove_eq_o	40
Coq.FSets.FMapFacts.WFacts_fun.remove_neq_o	40	1.1.0.0.0	search with cache (only 1: intros; only 1: rewrite eq_option_alt; only 1: intro e'; only 1: rewrite <- find_mapsto_iff, remove_mapsto_iff; only 1: now intuition).	0.0539231300354	18
Coq.FSets.FMapFacts.WFacts_fun.remove_o	40	0.0.0.0.0.1.0.0	search with cache (only 1: intros; only 1: destruct (eq_dec x y); only 1: auto with map; only 1: rewrite eq_option_alt; only 1: intro e; only 1: rewrite <- find_mapsto_iff, remove_neq_mapsto_iff; only 1: now intuition; only 1: auto).	0.123687982559	22
Coq.FSets.FMapFacts.WFacts_fun.remove_eq_b	40
Coq.FSets.FMapFacts.WFacts_fun.remove_neq_b	40
Coq.FSets.FMapFacts.WFacts_fun.remove_b	40
Coq.FSets.FMapFacts.WFacts_fun.map_o	40
Coq.FSets.FMapFacts.WFacts_fun.map_b	40
Coq.FSets.FMapFacts.WFacts_fun.mapi_b	40
Coq.FSets.FMapFacts.WFacts_fun.mapi_o	40
Coq.FSets.FMapFacts.WFacts_fun.map2_1bis	40
Coq.FSets.FMapFacts.WFacts_fun.elements_o	40
Coq.FSets.FMapFacts.WFacts_fun.elements_b	40
Coq.FSets.FMapFacts.WFacts_fun.Equal_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.Equal_Equiv	40
Coq.FSets.FMapFacts.WFacts_fun.Equiv_Equivb	40
Coq.FSets.FMapFacts.WFacts_fun.Equal_Equivb	40
Coq.FSets.FMapFacts.WFacts_fun.Equal_Equivb_eqdec	40
Coq.FSets.FMapFacts.WFacts_fun.Equal_refl	40	0.0.0.5.0	search with cache (only 1: dintuition; only 1: rewrite Equal_mapsto_iff; only 1: split; only 1: auto; only 1: auto).	0.0436050891876	10
Coq.FSets.FMapFacts.WFacts_fun.Equal_sym	40	2.1.0	search with cache (only 1: red; only 1: intros; only 1: auto with map).	0.114716053009	40
Coq.FSets.FMapFacts.WFacts_fun.Equal_trans	40	12.2.0.4	search with cache (only 1: intros m1 m2; only 1: red; only 1: intros; only 1: <Coq.Strings.String.t_eqb>).	6.73578619957	5259
Coq.FSets.FMapFacts.WFacts_fun.Equal_ST	40	0.0	search with cache (only 1: unfold Equal; only 1: auto).	0.0143980979919	2
Coq.FSets.FMapFacts.WFacts_fun.In_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.MapsTo_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.Empty_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.is_empty_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.mem_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.find_m_Proper	40	0.1.7.4.0.1.1	search with cache (only 1: intros k k' Hk m m' Hm; only 1: rewrite eq_option_alt; only 1: intro e; only 1: rewrite <- 2!find_mapsto_iff; only 1: rewrite (MapsTo_iff m e Hk), find_mapsto_iff, find_mapsto_iff, Hm; only 1: rewrite <- find_mapsto_iff, elements_mapsto_iff; only 1: intuition).	7.76322388649	5637
Coq.FSets.FMapFacts.WFacts_fun.add_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.remove_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.map_m_Proper	40
Coq.FSets.FMapFacts.WProperties_fun.eqk_equiv	40
Coq.FSets.FMapFacts.WProperties_fun.eqke_equiv	40
Coq.FSets.FMapFacts.WProperties_fun.InA_eqke_eqk	40
Coq.FSets.FMapFacts.WProperties_fun.NoDupA_eqk_eqke	40
Coq.FSets.FMapFacts.WProperties_fun.findA_rev	40
Coq.FSets.FMapFacts.WProperties_fun.elements_Empty	40
Coq.FSets.FMapFacts.WProperties_fun.elements_empty	40
Coq.FSets.FMapFacts.WProperties_fun.of_list_1	40
Coq.FSets.FMapFacts.WProperties_fun.of_list_1b	40
Coq.FSets.FMapFacts.WProperties_fun.of_list_2	40
Coq.FSets.FMapFacts.WProperties_fun.of_list_3	40
Coq.FSets.FMapFacts.WProperties_fun.fold_spec_right	40
Coq.FSets.FMapFacts.WProperties_fun.fold_rec	40
Coq.FSets.FMapFacts.WProperties_fun.fold_rec_bis	40
Coq.FSets.FMapFacts.WProperties_fun.fold_rec_nodep	40	1.0.0.0.1.1	search with cache (only 1: intros A P f i m Hempty Hstep; only 1: apply fold_rec; only 1: intros; only 1: auto; only 1: intros; only 1: auto).	0.0638558864594	36
Coq.FSets.FMapFacts.WProperties_fun.fold_rec_weak	40
Coq.FSets.FMapFacts.WProperties_fun.fold_rel	40
Coq.FSets.FMapFacts.WProperties_fun.map_induction	40
Coq.FSets.FMapFacts.WProperties_fun.map_induction_bis	40
Coq.FSets.FMapFacts.WProperties_fun.fold_identity	40
Coq.FSets.FMapFacts.WProperties_fun.fold_init	40
Coq.FSets.FMapFacts.WProperties_fun.fold_Empty	40
Coq.FSets.FMapFacts.WProperties_fun.fold_commutes	40
Coq.FSets.FMapFacts.WProperties_fun.fold_Equal	40
Coq.FSets.FMapFacts.WProperties_fun.fold_Equal2	40
Coq.FSets.FMapFacts.WProperties_fun.fold_Add	40
Coq.FSets.FMapFacts.WProperties_fun.fold_add	40
Coq.FSets.FMapFacts.WProperties_fun.cardinal_fold	40
Coq.FSets.FMapFacts.WProperties_fun.cardinal_Empty	40
Coq.FSets.FMapFacts.WProperties_fun.Equal_cardinal	40
Coq.FSets.FMapFacts.WProperties_fun.cardinal_1	40
Coq.FSets.FMapFacts.WProperties_fun.cardinal_2	40
Coq.FSets.FMapFacts.WProperties_fun.cardinal_inv_1	40
Coq.FSets.FMapFacts.WProperties_fun.cardinal_inv_2	40
Coq.FSets.FMapFacts.WProperties_fun.cardinal_inv_2b	40	4.0.0.1.0.4.0.6.3.0	search with cache (only 1: intros; only 1: rewrite M.cardinal_1 in *; only 1: generalize (elements_mapsto_iff m); only 1: destruct (elements m); only 1: intuition; only 1: exists p; only 1: rewrite H0; only 1: destruct p; only 1: simpl; only 1: intuition).	2.3576939106	2813
Coq.FSets.FMapFacts.WProperties_fun.filter_iff	40
Coq.FSets.FMapFacts.WProperties_fun.for_all_iff	40
Coq.FSets.FMapFacts.WProperties_fun.exists_iff	40
Coq.FSets.FMapFacts.WProperties_fun.Disjoint_alt	40	20.20	search with cache (only 1: repeat red; only 1: firstorder).	21.3839149475	19514
Coq.FSets.FMapFacts.WProperties_fun.partition_iff_1	40
Coq.FSets.FMapFacts.WProperties_fun.partition_iff_2	40
Coq.FSets.FMapFacts.WProperties_fun.partition_Partition	40
Coq.FSets.FMapFacts.WProperties_fun.Partition_In	40
Coq.FSets.FMapFacts.WProperties_fun.Disjoint_sym	40	5.0.8.3.5	search with cache (only 1: red; only 1: unfold In; only 1: red; only 1: unfold Disjoint; only 1: intuition eauto).	1.78870797157	1916
Coq.FSets.FMapFacts.WProperties_fun.Partition_sym	40	25	search with cache (only 1: firstorder).	5.65895199776	3200
Coq.FSets.FMapFacts.WProperties_fun.Partition_Empty	40
Coq.FSets.FMapFacts.WProperties_fun.Partition_Add	40
Coq.FSets.FMapFacts.WProperties_fun.Partition_fold	40
Coq.FSets.FMapFacts.WProperties_fun.Partition_cardinal	40
Coq.FSets.FMapFacts.WProperties_fun.Partition_partition	40
Coq.FSets.FMapFacts.WProperties_fun.update_mapsto_iff	40
Coq.FSets.FMapFacts.WProperties_fun.update_dec	40
Coq.FSets.FMapFacts.WProperties_fun.update_in_iff	40
Coq.FSets.FMapFacts.WProperties_fun.diff_mapsto_iff	40
Coq.FSets.FMapFacts.WProperties_fun.diff_in_iff	40
Coq.FSets.FMapFacts.WProperties_fun.restrict_mapsto_iff	40
Coq.FSets.FMapFacts.WProperties_fun.restrict_in_iff	40
Coq.FSets.FMapFacts.WProperties_fun.cardinal_m_Proper	40	0.0.0.0.0.0.0.5.0	search with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: apply fold_Equal with (eqA := eq); only 1: auto; only 1: compute; only 1: auto; only 1: compute; only 1: auto; only 1: auto).	0.200477838516	158
Coq.FSets.FMapFacts.WProperties_fun.Disjoint_m_Proper	40
Coq.FSets.FMapFacts.WProperties_fun.Partition_m_Proper	40
Coq.FSets.FMapFacts.WProperties_fun.update_m_Proper	40
Coq.FSets.FMapFacts.WProperties_fun.restrict_m_Proper	40
Coq.FSets.FMapFacts.WProperties_fun.diff_m_Proper	40
Coq.FSets.FMapFacts.OrdProperties.sort_equivlistA_eqlistA	40
Coq.FSets.FMapFacts.OrdProperties.gtb_1	40
Coq.FSets.FMapFacts.OrdProperties.leb_1	40	0.0.0.0.0.7.14.1	search with cache (only 1: intros (x, e) (y, e'); only 1: compute; only 1: split; only 1: elim_comp; only 1: discriminate; only 1: elim_comp; only 1: auto; only 1: auto).	34.5239670277	19718
Coq.FSets.FMapFacts.OrdProperties.gtb_compat	40
Coq.FSets.FMapFacts.OrdProperties.leb_compat	40
Coq.FSets.FMapFacts.OrdProperties.elements_split	40
Coq.FSets.FMapFacts.OrdProperties.elements_Add	40
Coq.FSets.FMapFacts.OrdProperties.elements_Add_Above	40
Coq.FSets.FMapFacts.OrdProperties.elements_Add_Below	40
Coq.FSets.FMapFacts.OrdProperties.elements_Equal_eqlistA	40
Coq.FSets.FMapFacts.OrdProperties.max_elt_Above	40
Coq.FSets.FMapFacts.OrdProperties.max_elt_MapsTo	40
Coq.FSets.FMapFacts.OrdProperties.max_elt_Empty	40
Coq.FSets.FMapFacts.OrdProperties.min_elt_Below	40
Coq.FSets.FMapFacts.OrdProperties.min_elt_MapsTo	40	0.6.3.2.4.3.2.3.0.1	search with cache (only 1: unfold min_elt, Below; only 1: intros; only 1: rewrite elements_mapsto_iff; only 1: generalize (elements_3 m); only 1: destruct (elements m); only 1: discriminate; only 1: destruct p; only 1: injection H; only 1: injection H as [=-> ->]; only 1: intuition).	37.6485161781	32534
Coq.FSets.FMapFacts.OrdProperties.min_elt_Empty	40	1.3.0.0.4.0.2	search with cache (only 1: unfold min_elt, Below; only 1: intros; only 1: rewrite elements_Empty; only 1: induction (elements m); only 1: auto; only 1: destruct a; only 1: discriminate).	13.9757180214	5323
Coq.FSets.FMapFacts.OrdProperties.map_induction_max	40
Coq.FSets.FMapFacts.OrdProperties.map_induction_min	40
Coq.FSets.FMapFacts.OrdProperties.fold_Equal	40
Coq.FSets.FMapFacts.OrdProperties.fold_Add_Above	40
Coq.FSets.FMapFacts.OrdProperties.fold_Add_Below	40
Coq.FSets.FMapWeakList.Raw.empty_1	40	0.7	search with cache (only 1: red; only 1: inversion_clear 1).	0.0215630531311	12
Coq.FSets.FMapWeakList.Raw.empty_NoDup	40	0.3	search with cache (only 1: unfold Empty, empty; only 1: constructor).	0.0140089988708	5
Coq.FSets.FMapWeakList.Raw.is_empty_1	40
Coq.FSets.FMapWeakList.Raw.is_empty_2	40	4.3.5.0.0.0	search with cache (only 1: unfold Empty, PX.MapsTo; only 1: intros m; only 1: case m; only 1: intuition; only 1: easy; only 1: inversion_clear 1).	7.05002808571	5552
Coq.FSets.FMapWeakList.Raw.mem_1	40
Coq.FSets.FMapWeakList.Raw.mem_2	40
Coq.FSets.FMapWeakList.Raw.find_2	40
Coq.FSets.FMapWeakList.Raw.find_1	40
Coq.FSets.FMapWeakList.Raw.find_eq	40
Coq.FSets.FMapWeakList.Raw.add_1	40
Coq.FSets.FMapWeakList.Raw.add_2	40
Coq.FSets.FMapWeakList.Raw.add_3	40
Coq.FSets.FMapWeakList.Raw.add_3'	40
Coq.FSets.FMapWeakList.Raw.add_NoDup	40
Coq.FSets.FMapWeakList.Raw.add_eq	40
Coq.FSets.FMapWeakList.Raw.add_not_eq	40
Coq.FSets.FMapWeakList.Raw.remove_1	40
Coq.FSets.FMapWeakList.Raw.remove_2	40
Coq.FSets.FMapWeakList.Raw.remove_3	40
Coq.FSets.FMapWeakList.Raw.remove_3'	40
Coq.FSets.FMapWeakList.Raw.remove_NoDup	40
Coq.FSets.FMapWeakList.Raw.elements_1	40	0.0	search with cache (only 1: unfold PX.eqke; only 1: intuition).	0.0179431438446	2
Coq.FSets.FMapWeakList.Raw.elements_2	40	0	search with cache (only 1: auto).	0.0139088630676	1
Coq.FSets.FMapWeakList.Raw.elements_3w	40	0.0.0	search with cache (only 1: induction m; only 1: auto; only 1: auto).	0.0181980133057	3
Coq.FSets.FMapWeakList.Raw.fold_1	40
Coq.FSets.FMapWeakList.Raw.submap_1	40
Coq.FSets.FMapWeakList.Raw.submap_2	40
Coq.FSets.FMapWeakList.Raw.equal_1	40
Coq.FSets.FMapWeakList.Raw.equal_2	40
Coq.FSets.FMapWeakList.Raw.map_1	40
Coq.FSets.FMapWeakList.Raw.map_2	40
Coq.FSets.FMapWeakList.Raw.map_NoDup	40
Coq.FSets.FMapWeakList.Raw.mapi_1	40	0.13.6	search with cache (only 1: intros P Q H l; only 1: fix gcd_divide 1; only 1: firstorder).	16.6592381001	19456
Coq.FSets.FMapWeakList.Raw.mapi_2	40
Coq.FSets.FMapWeakList.Raw.mapi_NoDup	40
Coq.FSets.FMapWeakList.Raw.fold_right_pair_NoDup	40	0.2.7.0.0.2.6	search with cache (only 1: intros m x y e; only 1: induction m; only 1: auto; only 1: simpl; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: apply add_NoDup; only 1: auto).	13.5169210434	13107
Coq.FSets.FMapWeakList.Raw.combine_NoDup	40
Coq.FSets.FMapWeakList.Raw.combine_l_1	40
Coq.FSets.FMapWeakList.Raw.combine_r_1	40
Coq.FSets.FMapWeakList.Raw.combine_1	40
Coq.FSets.FMapWeakList.Raw.map2_NoDup	40
Coq.FSets.FMapWeakList.Raw.map2_0	40
Coq.FSets.FMapWeakList.Raw.map2_1	40
Coq.FSets.FMapWeakList.Raw.map2_2	40
Coq.FSets.FMapWeakList.Make.MapsTo_1	40	0.0.0.0.0.0.9.6	search with cache (only 1: intros; only 1: apply InA_eqA with (x, e); only 1: split; only 1: eauto; only 1: eauto; only 1: eauto; only 1: auto; only 1: auto).	2.59162116051	3424
Coq.FSets.FMapWeakList.Make.mem_1	40
Coq.FSets.FMapWeakList.Make.mem_2	40
Coq.FSets.FMapWeakList.Make.empty_1	40	7.2.4	search with cache (only 1: intros m; only 1: unfold Raw.PX.MapsTo; only 1: inversion_clear 1).	0.423279047012	295
Coq.FSets.FMapWeakList.Make.is_empty_1	40
Coq.FSets.FMapWeakList.Make.is_empty_2	40
Coq.FSets.FMapWeakList.Make.add_1	40
Coq.FSets.FMapWeakList.Make.add_2	40
Coq.FSets.FMapWeakList.Make.add_3	40
Coq.FSets.FMapWeakList.Make.remove_1	40
Coq.FSets.FMapWeakList.Make.remove_2	40
Coq.FSets.FMapWeakList.Make.remove_3	40
Coq.FSets.FMapWeakList.Make.find_1	40
Coq.FSets.FMapWeakList.Make.find_2	40
Coq.FSets.FMapWeakList.Make.elements_1	40	0	search with cache (only 1: auto).	0.0171830654144	1
Coq.FSets.FMapWeakList.Make.elements_2	40	0.0	search with cache (only 1: intros m; only 1: exact (Raw.elements_1 (m:=m))).	0.0184888839722	2
Coq.FSets.FMapWeakList.Make.elements_3w	40	0.6.0	search with cache (only 1: intros m; only 1: induction m; only 1: auto).	0.0226910114288	9
Coq.FSets.FMapWeakList.Make.cardinal_1	40	0	search with cache (only 1: auto).	0.0170240402222	1
Coq.FSets.FMapWeakList.Make.fold_1	40
Coq.FSets.FMapWeakList.Make.equal_1	40
Coq.FSets.FMapWeakList.Make.equal_2	40
Coq.FSets.FMapWeakList.Make.map_1	40
Coq.FSets.FMapWeakList.Make.map_2	40
Coq.FSets.FMapWeakList.Make.mapi_1	40
Coq.FSets.FMapWeakList.Make.mapi_2	40
Coq.FSets.FMapWeakList.Make.map2_1	40
Coq.FSets.FMapWeakList.Make.map2_2	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.In_In	40	0.0.0.0	search with cache (only 1: intros; only 1: split; only 1: auto; only 1: auto).	0.0359098911285	4
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Subset_Included	40	0.1	search with cache (only 1: compute; only 1: auto with extcore).	0.0321991443634	3
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Equal_Same_set	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.empty_Empty_Set	40	0.17.4.2	search with cache (only 1: red; only 1: intuition; only 1: vm_compute; only 1: Dec.fsetdec).	2.91399693489	2307
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Empty_Empty_set	40	0.0	search with cache (only 1: unfold Subset, Empty, impl; only 1: firstorder).	0.0352108478546	2
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.singleton_Singleton	40	0.5.4	search with cache (only 1: unfold Same_set, Included, mkEns, In; only 1: intuition; only 1: Dec.fsetdec).	0.692638874054	200
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.union_Union	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.inter_Intersection	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.add_Add	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Add_Add	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.remove_Subtract	40	1.2.1.2.0.4.3.3.0.0.0.0	search with cache (only 1: unfold Same_set, Included, mkEns, In; only 1: split; only 1: intro; only 1: set_iff; only 1: constructor; only 1: intuition; only 1: intuition; only 1: intro; only 1: intro; only 1: red in H; only 1: red in H; only 1: firstorder).	36.8709139824	20376
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.mkEns_Finite	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.mkEns_cardinal	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Ens_to_FSet	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.mem_eq	40	0.0.0.0.0.0.0.1.0	search with cache (only 1: intros; only 1: generalize (FM.mem_iff s x), (FM.mem_iff s y), (FM.In_eq_iff s H); only 1: destruct (mem x s); only 1: destruct (mem y s); only 1: intuition; only 1: intuition; only 1: destruct (mem y s); only 1: intuition; only 1: intuition).	0.0921239852905	10
Coq.FSets.FSetEqProperties.WEqProperties_fun.equal_mem_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.equal_mem_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.subset_mem_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.subset_mem_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.empty_mem	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.is_empty_equal_empty	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.choose_mem_1	40	6	search with cache (only 1: intuition).	0.0583209991455	16
Coq.FSets.FSetEqProperties.WEqProperties_fun.choose_mem_2	40	3.1	search with cache (only 1: intros; only 1: auto with set).	0.0540978908539	13
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_mem_1	40	0	search with cache (only 1: auto with set).	0.0323269367218	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_mem_2	40	0.0.0.0.0.0.0.1.0	search with cache (only 1: intros; only 1: generalize (FM.mem_iff (add x s) y), (FM.mem_iff s y), (FM.add_neq_iff s H); only 1: destruct (mem y s); only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition).	0.0877361297607	10
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_mem_1	40	0.0	search with cache (only 1: rewrite <- not_mem_iff; only 1: Dec.fsetdec).	0.0790929794312	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_mem_2	40	0.0.0.0.0.0.0.1.0	search with cache (only 1: intros; only 1: generalize (mem_iff (remove x s) y), (mem_iff s y), (remove_neq_iff s H); only 1: destruct (mem y s); only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition).	0.158691883087	10
Coq.FSets.FSetEqProperties.WEqProperties_fun.singleton_equal_add	40	0	search with cache (only 1: auto with set).	0.0320918560028	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_mem	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_mem	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.diff_mem	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.mem_3	40	0.0	search with cache (only 1: rewrite <- not_mem_iff; only 1: auto with fset).	0.106604099274	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.mem_4	40	0.1	search with cache (only 1: rewrite <- not_mem_iff; only 1: auto with fset).	0.0785720348358	20
Coq.FSets.FSetEqProperties.WEqProperties_fun.equal_refl	40	0	search with cache (only 1: auto with set).	0.0297501087189	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.equal_sym	40	0.3.0.3.1.0	search with cache (only 1: apply eq_true_iff_eq; only 1: intuition; only 1: rewrite (equal_2 H); only 1: auto with set; only 1: rewrite (equal_2 H); only 1: auto with set).	1.04500484467	355
Coq.FSets.FSetEqProperties.WEqProperties_fun.equal_trans	40	0.3.6	search with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto with set).	0.206166028976	50
Coq.FSets.FSetEqProperties.WEqProperties_fun.equal_equal	40	0.2.1	search with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto).	0.0383660793304	6
Coq.FSets.FSetEqProperties.WEqProperties_fun.equal_cardinal	40	1.5.7	search with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: reflexivity).	0.094053030014	119
Coq.FSets.FSetEqProperties.WEqProperties_fun.subset_refl	40	1	search with cache (only 1: auto with set).	0.029883146286	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.subset_antisym	40	1	search with cache (only 1: auto with set).	0.0352349281311	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.subset_trans	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.subset_equal	40	0	search with cache (only 1: auto with set).	0.0317180156708	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.choose_mem_3	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.choose_mem_4	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_mem_3	40	0	search with cache (only 1: auto with set).	0.0323190689087	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_equal	40	0	search with cache (only 1: auto with set).	0.0314860343933	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_mem_3	40	1.7	search with cache (only 1: generalize (mem_iff (remove x s) y), (mem_iff s y), (remove_iff s x y); only 1: intuition).	0.182666063309	26
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_equal	40	4.0	search with cache (only 1: rewrite <- not_mem_iff; only 1: intuition).	0.0577619075775	6
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_remove	40	4.10	search with cache (only 1: generalize (FM.mem_iff (inter s s') x), (FM.mem_iff s x), (FM.mem_iff s' x), (FM.inter_iff s s' x); only 1: intuition).	0.694673776627	303
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_add	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.is_empty_cardinal	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.singleton_mem_1	40	1	search with cache (only 1: auto with set).	0.0305891036987	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.singleton_mem_2	40	4.4	search with cache (only 1: rewrite <- not_mem_iff; only 1: auto with set).	1.81062078476	554
Coq.FSets.FSetEqProperties.WEqProperties_fun.singleton_mem_3	40	1.9	search with cache (only 1: generalize (mem_iff (singleton x) y), (singleton_iff x y); only 1: intuition).	0.113620996475	83
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_sym	40	0	search with cache (only 1: auto with set).	0.0311291217804	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_subset_equal	40	0	search with cache (only 1: auto with set).	0.0355019569397	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_equal_1	40	0	search with cache (only 1: auto with set).	0.0316939353943	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_equal_2	40	0	search with cache (only 1: auto with set).	0.0312860012054	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_assoc	40	0	search with cache (only 1: auto with set).	0.0304069519043	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_union_singleton	40	1	search with cache (only 1: auto with set).	0.0301179885864	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_add	40	0	search with cache (only 1: auto with set).	0.0300850868225	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_subset_1	40	0	search with cache (only 1: auto with set).	0.0309629440308	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_subset_2	40	1	search with cache (only 1: auto with set).	0.0304181575775	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_subset_3	40	0.0	search with cache (only 1: do 3 rewrite <- subset_iff; only 1: Dec.fsetdec).	0.0834581851959	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_sym	40	0	search with cache (only 1: auto with set).	0.0305490493774	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_subset_equal	40	0	search with cache (only 1: auto with set).	0.0327870845795	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_equal_1	40	0	search with cache (only 1: auto with set).	0.0316588878632	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_equal_2	40	0	search with cache (only 1: auto with set).	0.0315690040588	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_assoc	40	0	search with cache (only 1: auto with set).	0.030720949173	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_inter_1	40	0	search with cache (only 1: auto with set).	0.0306711196899	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_inter_2	40	0	search with cache (only 1: auto with set).	0.0301270484924	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_add_1	40	0	search with cache (only 1: auto with set).	0.0314259529114	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_add_2	40	0.8	search with cache (only 1: rewrite <- not_mem_iff; only 1: auto with set).	0.457305908203	43
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_subset_1	40	0	search with cache (only 1: auto with set).	0.0303499698639	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_subset_2	40	1	search with cache (only 1: auto with set).	0.0306701660156	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_subset_3	40	0.0	search with cache (only 1: do 3 rewrite <- subset_iff; only 1: Dec.fsetdec).	0.0825760364532	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.diff_subset	40	0	search with cache (only 1: auto with set).	0.0306069850922	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.diff_subset_equal	40	1	search with cache (only 1: auto with set).	0.0332770347595	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_inter_singleton	40	0	search with cache (only 1: auto with set).	0.0305027961731	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.diff_inter_empty	40	0	search with cache (only 1: auto with set).	0.0309178829193	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.diff_inter_all	40	0	search with cache (only 1: auto with set).	0.030709028244	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.set_rec	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.exclusive_set	40	0.0.0.2.3.0.0.5	search with cache (only 1: intros; only 1: rewrite mem_iff; only 1: destruct (mem x s); only 1: rewrite mem_iff; only 1: destruct (mem x s'); only 1: intuition; only 1: intuition; only 1: intuition).	8.78299307823	2474
Coq.FSets.FSetEqProperties.WEqProperties_fun.fold_empty	40	0.0	search with cache (only 1: apply fold_1b; only 1: auto with set).	0.0358412265778	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.fold_equal	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.fold_add	40	1.0.2.0.0.0.3.5	search with cache (only 1: intros; only 1: apply fold_2 with (eqA := eqA); only 1: auto; only 1: auto; only 1: auto; only 1: rewrite not_mem_iff; only 1: auto; only 1: auto with set).	0.796402215958	526
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_fold	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_fold_1	40	0.0.0.0.0.7.6	search with cache (only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set).	0.367316007614	511
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_fold_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.fold_union	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_cardinal_1	40	0	search with cache (only 1: auto with set fset).	0.120882987976	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_cardinal_2	40	0.2.2.2.2.2.2.0	search with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: change_no_check S with ((fun _ => S) x); only 1: apply MP.fold_add with (eqA := Logic.eq); only 1: auto with fset; only 1: auto with fset; only 1: auto with fset; only 1: auto).	1.17455101013	1335
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_cardinal_1	40	0.1.1.1.1.0.1.1	search with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: change_no_check S with ((fun _ => S) x); only 1: apply MP.remove_fold_1 with (eqA := Logic.eq); only 1: auto with set fset; only 1: auto with fset; only 1: auto with fset; only 1: auto with set).	0.346173048019	237
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_cardinal_2	40	6.3.16.22	search with cache (only 1: intros H; only 1: intro; only 1: rewrite <- not_mem_iff; only 1: auto with set fset).	21.7023460865	27425
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_cardinal	40	0.0.0.6.2.0.2.1	search with cache (only 1: intros; only 1: do 3 rewrite cardinal_fold; only 1: rewrite <- fold_plus; only 1: apply MP.fold_union; only 1: auto with fset; only 1: auto with fset; only 1: auto with fset; only 1: auto).	0.355694055557	459
Coq.FSets.FSetEqProperties.WEqProperties_fun.subset_cardinal	40	0	search with cache (only 1: auto with set fset).	0.0348379611969	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.Comp'	40	10	search with cache (only 1: solve_proper).	0.0605800151825	39
Coq.FSets.FSetEqProperties.WEqProperties_fun.filter_mem	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.for_all_filter	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.exists_filter	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.partition_filter_1	40	6.0	search with cache (only 1: intros; only 1: auto with set).	0.0717301368713	21
Coq.FSets.FSetEqProperties.WEqProperties_fun.partition_filter_2	40	0	search with cache (only 1: auto with set).	0.0348680019379	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.filter_add_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.filter_add_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_filter_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_filter_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_filter	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.filter_union	40	0.0.0.0.1.1.1.0.3	search with cache (only 1: red; only 1: intros; only 1: set_iff; only 1: repeat rewrite filter_iff; only 1: set_iff; only 1: intuition; only 1: auto; only 1: auto; only 1: auto).	6.63111400604	1311
Coq.FSets.FSetEqProperties.WEqProperties_fun.for_all_mem_1	40	5.0.1.0.10.3	search with cache (only 1: intros; only 1: apply for_all_1; only 1: auto; only 1: red; only 1: intros; only 1: auto with set).	0.543280124664	741
Coq.FSets.FSetEqProperties.WEqProperties_fun.for_all_mem_2	40	0.1.7.0	search with cache (only 1: intros; only 1: rewrite <- (for_all_iff s (f:=f)) in H; only 1: auto with set; only 1: auto).	0.0841460227966	55
Coq.FSets.FSetEqProperties.WEqProperties_fun.for_all_mem_3	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.for_all_mem_4	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.for_all_exists	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Comp'	40	0.2.0.1	search with cache (only 1: unfold compat_bool, Proper, respectful; only 1: intros; only 1: f_equal; only 1: auto).	0.043377161026	7
Coq.FSets.FSetEqProperties.WEqProperties_fun.exists_mem_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.exists_mem_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.exists_mem_3	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.exists_mem_4	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.sum_plus	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.sum_filter	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.fold_compat	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.sum_compat	40
Coq.FSets.FSetBridge.DepOfNodep.empty	40
Coq.FSets.FSetBridge.DepOfNodep.is_empty	40
Coq.FSets.FSetBridge.DepOfNodep.mem	40
Coq.FSets.FSetBridge.DepOfNodep.add	40
Coq.FSets.FSetBridge.DepOfNodep.singleton	40
Coq.FSets.FSetBridge.DepOfNodep.remove	40
Coq.FSets.FSetBridge.DepOfNodep.union	40
Coq.FSets.FSetBridge.DepOfNodep.inter	40
Coq.FSets.FSetBridge.DepOfNodep.diff	40
Coq.FSets.FSetBridge.DepOfNodep.equal	40
Coq.FSets.FSetBridge.DepOfNodep.subset	40
Coq.FSets.FSetBridge.DepOfNodep.elements	40
Coq.FSets.FSetBridge.DepOfNodep.fold	40	22.15	search with cache (only 1: simpl_relation; only 1: eauto).	1.86537408829	5950
Coq.FSets.FSetBridge.DepOfNodep.cardinal	40
Coq.FSets.FSetBridge.DepOfNodep.compat_P_aux	40
Coq.FSets.FSetBridge.DepOfNodep.filter	40
Coq.FSets.FSetBridge.DepOfNodep.for_all	40
Coq.FSets.FSetBridge.DepOfNodep.exists_	40
Coq.FSets.FSetBridge.DepOfNodep.partition	40
Coq.FSets.FSetBridge.DepOfNodep.choose_aux	40
Coq.FSets.FSetBridge.DepOfNodep.choose	40
Coq.FSets.FSetBridge.DepOfNodep.choose_ok1	40
Coq.FSets.FSetBridge.DepOfNodep.choose_ok2	40
Coq.FSets.FSetBridge.DepOfNodep.choose_equal	40
Coq.FSets.FSetBridge.DepOfNodep.min_elt	40
Coq.FSets.FSetBridge.DepOfNodep.max_elt	40
Coq.FSets.FSetBridge.NodepOfDep.empty_1	40
Coq.FSets.FSetBridge.NodepOfDep.is_empty_1	40
Coq.FSets.FSetBridge.NodepOfDep.is_empty_2	40
Coq.FSets.FSetBridge.NodepOfDep.mem_1	40
Coq.FSets.FSetBridge.NodepOfDep.mem_2	40
Coq.FSets.FSetBridge.NodepOfDep.equal_1	40
Coq.FSets.FSetBridge.NodepOfDep.equal_2	40	4.0.0.0.2.2	search with cache (only 1: unfold equal; only 1: intros s x; only 1: case M.equal; only 1: auto; only 1: intuition; only 1: discriminate H).	0.310451030731	312
Coq.FSets.FSetBridge.NodepOfDep.subset_1	40
Coq.FSets.FSetBridge.NodepOfDep.subset_2	40	0.0.1.0.0.6	search with cache (only 1: intros s s'; only 1: unfold subset; only 1: case M.subset; only 1: intuition; only 1: intuition; only 1: inversion H).	0.06014585495	106
Coq.FSets.FSetBridge.NodepOfDep.choose_1	40
Coq.FSets.FSetBridge.NodepOfDep.choose_2	40	2.4.2.3.0.4.7	search with cache (only 1: intro s; only 1: unfold choose; only 1: case (M.choose s); only 1: simple destruct s0; only 1: intros; only 1: discriminate H; only 1: auto).	9.77262806892	15155
Coq.FSets.FSetBridge.NodepOfDep.choose_3	40
Coq.FSets.FSetBridge.NodepOfDep.elements_1	40
Coq.FSets.FSetBridge.NodepOfDep.elements_2	40	1.0.0.12	search with cache (only 1: intros s x; only 1: unfold elements; only 1: case (M.elements s); only 1: firstorder).	0.196027040482	394
Coq.FSets.FSetBridge.NodepOfDep.elements_3	40	0.0.1.3.4	search with cache (only 1: case M.empty; only 1: intros; only 1: unfold elements; only 1: case (M.elements s); only 1: firstorder).	0.0668811798096	121
Coq.FSets.FSetBridge.NodepOfDep.elements_3w	40	3.0	search with cache (only 1: intros; only 1: auto with *).	0.0417740345001	41
Coq.FSets.FSetBridge.NodepOfDep.min_elt_1	40
Coq.FSets.FSetBridge.NodepOfDep.min_elt_2	40
Coq.FSets.FSetBridge.NodepOfDep.min_elt_3	40	0.0.0.1.0.6.11	search with cache (only 1: unfold min_elt; only 1: intro s; only 1: case (M.min_elt s); only 1: simple destruct s0; only 1: intros; only 1: discriminate H; only 1: auto).	1.84163594246	2306
Coq.FSets.FSetBridge.NodepOfDep.max_elt_1	40
Coq.FSets.FSetBridge.NodepOfDep.max_elt_2	40
Coq.FSets.FSetBridge.NodepOfDep.max_elt_3	40
Coq.FSets.FSetBridge.NodepOfDep.add_1	40
Coq.FSets.FSetBridge.NodepOfDep.add_2	40	0.0.0.0.0	search with cache (only 1: intros; only 1: unfold add; only 1: case (M.add x s); only 1: unfold Add; only 1: firstorder).	0.0106630325317	5
Coq.FSets.FSetBridge.NodepOfDep.add_3	40	0.1.1.1.3	search with cache (only 1: intros s x y; only 1: unfold add; only 1: case (M.add x s); only 1: unfold Add; only 1: firstorder).	0.0558009147644	98
Coq.FSets.FSetBridge.NodepOfDep.remove_1	40
Coq.FSets.FSetBridge.NodepOfDep.remove_2	40	0.0.2.0	search with cache (only 1: intros s x y; only 1: unfold remove; only 1: case (M.remove x s); only 1: firstorder).	0.0108051300049	6
Coq.FSets.FSetBridge.NodepOfDep.remove_3	40
Coq.FSets.FSetBridge.NodepOfDep.singleton_1	40
Coq.FSets.FSetBridge.NodepOfDep.singleton_2	40	0.0.0.0	search with cache (only 1: intros x y; only 1: unfold singleton; only 1: case (M.singleton x); only 1: firstorder).	0.0094051361084	4
Coq.FSets.FSetBridge.NodepOfDep.union_1	40
Coq.FSets.FSetBridge.NodepOfDep.union_2	40	0.0.0.0	search with cache (only 1: intros s s' x; only 1: unfold union; only 1: case (M.union s s'); only 1: firstorder).	0.00987720489502	4
Coq.FSets.FSetBridge.NodepOfDep.union_3	40	0.0.0.0	search with cache (only 1: intros s s' x; only 1: unfold union; only 1: case (M.union s s'); only 1: firstorder).	0.00992488861084	4
Coq.FSets.FSetBridge.NodepOfDep.inter_1	40
Coq.FSets.FSetBridge.NodepOfDep.inter_2	40	0.0.0.0	search with cache (only 1: intros s s' x; only 1: unfold inter; only 1: case (M.inter s s'); only 1: firstorder).	0.010055065155	4
Coq.FSets.FSetBridge.NodepOfDep.inter_3	40	0.0.0.0	search with cache (only 1: intros s s' x; only 1: unfold inter; only 1: case (M.inter s s'); only 1: firstorder).	0.0105381011963	4
Coq.FSets.FSetBridge.NodepOfDep.diff_1	40
Coq.FSets.FSetBridge.NodepOfDep.diff_2	40	0.0.7.1	search with cache (only 1: intros s s' x; only 1: unfold diff; only 1: case (M.diff s s'); only 1: firstorder).	1.82586598396	204
Coq.FSets.FSetBridge.NodepOfDep.diff_3	40	0.0.0.0	search with cache (only 1: intros s s' x; only 1: unfold diff; only 1: case (M.diff s s'); only 1: firstorder).	0.010665178299	4
Coq.FSets.FSetBridge.NodepOfDep.cardinal_1	40
Coq.FSets.FSetBridge.NodepOfDep.fold_1	40
Coq.FSets.FSetBridge.NodepOfDep.f_dec	40	0	search with cache (only 1: decide equality).	0.0103278160095	1
Coq.FSets.FSetBridge.NodepOfDep.compat_P_aux	40	2.20.1.1	search with cache (only 1: intros f g H l; only 1: intuition; only 1: induction 1; only 1: intuition).	13.9467709064	19875
Coq.FSets.FSetBridge.NodepOfDep.filter_1	40
Coq.FSets.FSetBridge.NodepOfDep.filter_2	40	0.2.0.0.1.2	search with cache (only 1: intros s x f; only 1: unfold filter; only 1: destruct M.filter as (x0, Hiff); only 1: firstorder; only 1: generalize (Hiff (compat_P_aux H)); only 1: firstorder).	0.693536043167	234
Coq.FSets.FSetBridge.NodepOfDep.filter_3	40	2.0.1.0.0.0.0	search with cache (only 1: intros s x f; only 1: unfold filter; only 1: destruct M.filter as (x0, Hiff); only 1: intuition; only 1: generalize (Hiff (compat_P_aux H)); only 1: intuition; only 1: firstorder).	0.220191955566	11
Coq.FSets.FSetBridge.NodepOfDep.for_all_1	40
Coq.FSets.FSetBridge.NodepOfDep.for_all_2	40	1.0.1.0.0.0	search with cache (only 1: intros s f; only 1: unfold for_all; only 1: case M.for_all; only 1: intuition; only 1: intuition; only 1: easy).	0.0190329551697	8
Coq.FSets.FSetBridge.NodepOfDep.exists_1	40
Coq.FSets.FSetBridge.NodepOfDep.exists_2	40	0.0.0.0.0.0	search with cache (only 1: intros s f; only 1: unfold exists_; only 1: case M.exists_; only 1: intuition; only 1: intuition; only 1: inversion H0).	0.0141189098358	6
Coq.FSets.FSetBridge.NodepOfDep.partition_1	40
Coq.FSets.FSetBridge.NodepOfDep.partition_2	40
Coq.FSets.FSetCompat.Backport_Sets.lt_not_eq	40
Coq.FSets.FSetCompat.Backport_Sets.compare	40
Coq.FSets.FSetCompat.Update_WSets.In_compat	40	8	search with cache (only 1: solve_proper).	0.0848219394684	17
Coq.FSets.FSetCompat.Update_WSets.mem_spec	40
Coq.FSets.FSetCompat.Update_WSets.equal_spec	40
Coq.FSets.FSetCompat.Update_WSets.subset_spec	40
Coq.FSets.FSetCompat.Update_WSets.is_empty_spec	40
Coq.FSets.FSetCompat.Update_WSets.add_spec	40
Coq.FSets.FSetCompat.Update_WSets.remove_spec	40
Coq.FSets.FSetCompat.Update_WSets.singleton_spec	40
Coq.FSets.FSetCompat.Update_WSets.elements_spec1	40	14.1.4	search with cache (only 1: intuition; only 1: red; only 1: eauto with set).	0.519487142563	948
Coq.FSets.FSetCompat.Update_WSets.for_all_spec	40
Coq.FSets.FSetCompat.Update_WSets.exists_spec	40
Coq.FSets.FSetCompat.Update_Sets.lt_strorder	40
Coq.FSets.FSetCompat.Update_Sets.lt_compat	40
Coq.FSets.FSetCompat.Update_Sets.compare_spec	40
Coq.FSets.FSetProperties.WProperties_fun.In_dec	40	0.0.1.2.0	search with cache (only 1: firstorder; only 1: generalize (F.mem_iff s x); only 1: case (mem x s); only 1: intuition; only 1: intuition).	0.150385141373	8
Coq.FSets.FSetProperties.WProperties_fun.Add_Equal	40
Coq.FSets.FSetProperties.WProperties_fun.equal_refl	40	0.4.0	search with cache (only 1: red; only 1: intros; only 1: intuition).	0.0517210960388	7
Coq.FSets.FSetProperties.WProperties_fun.equal_sym	40	6.0	search with cache (only 1: red; only 1: apply eq_sym).	0.0485022068024	8
Coq.FSets.FSetProperties.WProperties_fun.equal_trans	40	6.1.0	search with cache (only 1: red; only 1: intros; only 1: fsetdec).	0.193170070648	25
Coq.FSets.FSetProperties.WProperties_fun.subset_refl	40	0.1	search with cache (only 1: red; only 1: eauto).	0.0444009304047	3
Coq.FSets.FSetProperties.WProperties_fun.subset_trans	40	0	search with cache (only 1: fsetdec).	0.0758740901947	1
Coq.FSets.FSetProperties.WProperties_fun.subset_antisym	40	0	search with cache (only 1: fsetdec).	0.0767760276794	1
Coq.FSets.FSetProperties.WProperties_fun.subset_equal	40	0	search with cache (only 1: fsetdec).	0.109014034271	1
Coq.FSets.FSetProperties.WProperties_fun.subset_empty	40	0	search with cache (only 1: fsetdec).	0.0560660362244	1
Coq.FSets.FSetProperties.WProperties_fun.subset_remove_3	40	1	search with cache (only 1: fsetdec).	0.0847270488739	2
Coq.FSets.FSetProperties.WProperties_fun.subset_diff	40	0	search with cache (only 1: fsetdec).	0.108734846115	1
Coq.FSets.FSetProperties.WProperties_fun.subset_add_3	40	1	search with cache (only 1: fsetdec).	0.108862876892	2
Coq.FSets.FSetProperties.WProperties_fun.subset_add_2	40	1	search with cache (only 1: fsetdec).	0.0749788284302	2
Coq.FSets.FSetProperties.WProperties_fun.in_subset	40	0	search with cache (only 1: auto).	0.0415978431702	1
Coq.FSets.FSetProperties.WProperties_fun.double_inclusion	40	0.0.0.2.0	search with cache (only 1: split; only 1: intuition; only 1: fsetdec; only 1: fsetdec; only 1: fsetdec).	0.16734290123	7
Coq.FSets.FSetProperties.WProperties_fun.empty_is_empty_1	40	0	search with cache (only 1: fsetdec).	0.0915238857269	1
Coq.FSets.FSetProperties.WProperties_fun.empty_is_empty_2	40	0	search with cache (only 1: fsetdec).	0.077789068222	1
Coq.FSets.FSetProperties.WProperties_fun.add_equal	40	6	search with cache (only 1: fsetdec).	0.11393404007	7
Coq.FSets.FSetProperties.WProperties_fun.add_add	40	1	search with cache (only 1: fsetdec).	0.195780038834	2
Coq.FSets.FSetProperties.WProperties_fun.remove_equal	40	5	search with cache (only 1: fsetdec).	0.545180082321	127
Coq.FSets.FSetProperties.WProperties_fun.Equal_remove	40	1	search with cache (only 1: fsetdec).	0.168877124786	2
Coq.FSets.FSetProperties.WProperties_fun.add_remove	40	1	search with cache (only 1: fsetdec).	0.186948060989	2
Coq.FSets.FSetProperties.WProperties_fun.remove_add	40	0	search with cache (only 1: fsetdec).	0.170970916748	1
Coq.FSets.FSetProperties.WProperties_fun.singleton_equal_add	40	1	search with cache (only 1: fsetdec).	0.159552097321	2
Coq.FSets.FSetProperties.WProperties_fun.remove_singleton_empty	40	1	search with cache (only 1: fsetdec).	0.330141067505	2
Coq.FSets.FSetProperties.WProperties_fun.union_sym	40	0	search with cache (only 1: fsetdec).	0.123775005341	1
Coq.FSets.FSetProperties.WProperties_fun.union_subset_equal	40	0	search with cache (only 1: fsetdec).	0.122766971588	1
Coq.FSets.FSetProperties.WProperties_fun.union_equal_1	40	0	search with cache (only 1: fsetdec).	0.141541957855	1
Coq.FSets.FSetProperties.WProperties_fun.union_equal_2	40	0	search with cache (only 1: fsetdec).	0.140141010284	1
Coq.FSets.FSetProperties.WProperties_fun.union_assoc	40	0	search with cache (only 1: fsetdec).	0.220108985901	1
Coq.FSets.FSetProperties.WProperties_fun.add_union_singleton	40	0	search with cache (only 1: fsetdec).	0.143242120743	1
Coq.FSets.FSetProperties.WProperties_fun.union_add	40	1	search with cache (only 1: fsetdec).	0.225394010544	2
Coq.FSets.FSetProperties.WProperties_fun.union_remove_add_1	40	0	search with cache (only 1: fsetdec).	0.355822086334	1
Coq.FSets.FSetProperties.WProperties_fun.union_remove_add_2	40	1	search with cache (only 1: fsetdec).	0.305166959763	2
Coq.FSets.FSetProperties.WProperties_fun.union_subset_1	40	0	search with cache (only 1: fsetdec).	0.0639040470123	1
Coq.FSets.FSetProperties.WProperties_fun.union_subset_2	40	0	search with cache (only 1: fsetdec).	0.0629208087921	1
Coq.FSets.FSetProperties.WProperties_fun.union_subset_3	40	0	search with cache (only 1: fsetdec).	0.0879168510437	1
Coq.FSets.FSetProperties.WProperties_fun.union_subset_4	40	0	search with cache (only 1: fsetdec).	0.0914511680603	1
Coq.FSets.FSetProperties.WProperties_fun.union_subset_5	40	0	search with cache (only 1: fsetdec).	0.0903420448303	1
Coq.FSets.FSetProperties.WProperties_fun.empty_union_1	40	0	search with cache (only 1: fsetdec).	0.108237981796	1
Coq.FSets.FSetProperties.WProperties_fun.empty_union_2	40	0	search with cache (only 1: fsetdec).	0.106410980225	1
Coq.FSets.FSetProperties.WProperties_fun.not_in_union	40	4	search with cache (only 1: fsetdec).	0.0907471179962	5
Coq.FSets.FSetProperties.WProperties_fun.inter_sym	40	0	search with cache (only 1: fsetdec).	0.115608930588	1
Coq.FSets.FSetProperties.WProperties_fun.inter_subset_equal	40	0	search with cache (only 1: fsetdec).	0.144617080688	1
Coq.FSets.FSetProperties.WProperties_fun.inter_equal_1	40	0	search with cache (only 1: fsetdec).	0.130815982819	1
Coq.FSets.FSetProperties.WProperties_fun.inter_equal_2	40	0	search with cache (only 1: fsetdec).	0.13197517395	1
Coq.FSets.FSetProperties.WProperties_fun.inter_assoc	40	0	search with cache (only 1: fsetdec).	0.197355985641	1
Coq.FSets.FSetProperties.WProperties_fun.union_inter_1	40	0	search with cache (only 1: fsetdec).	0.229845046997	1
Coq.FSets.FSetProperties.WProperties_fun.union_inter_2	40	0	search with cache (only 1: fsetdec).	0.237585783005	1
Coq.FSets.FSetProperties.WProperties_fun.inter_add_1	40	6	search with cache (only 1: fsetdec).	0.211057186127	7
Coq.FSets.FSetProperties.WProperties_fun.inter_add_2	40	3	search with cache (only 1: fsetdec).	0.180006027222	4
Coq.FSets.FSetProperties.WProperties_fun.empty_inter_1	40	0	search with cache (only 1: fsetdec).	0.0814678668976	1
Coq.FSets.FSetProperties.WProperties_fun.empty_inter_2	40	0	search with cache (only 1: fsetdec).	0.079332113266	1
Coq.FSets.FSetProperties.WProperties_fun.inter_subset_1	40	0	search with cache (only 1: fsetdec).	0.0638949871063	1
Coq.FSets.FSetProperties.WProperties_fun.inter_subset_2	40	0	search with cache (only 1: fsetdec).	0.0644850730896	1
Coq.FSets.FSetProperties.WProperties_fun.inter_subset_3	40	0	search with cache (only 1: fsetdec).	0.084615945816	1
Coq.FSets.FSetProperties.WProperties_fun.empty_diff_1	40	0	search with cache (only 1: fsetdec).	0.0946049690247	1
Coq.FSets.FSetProperties.WProperties_fun.empty_diff_2	40	0	search with cache (only 1: fsetdec).	0.109209060669	1
Coq.FSets.FSetProperties.WProperties_fun.diff_subset	40	0	search with cache (only 1: fsetdec).	0.0700018405914	1
Coq.FSets.FSetProperties.WProperties_fun.diff_subset_equal	40	0	search with cache (only 1: fsetdec).	0.14154791832	1
Coq.FSets.FSetProperties.WProperties_fun.remove_diff_singleton	40	1	search with cache (only 1: fsetdec).	0.137981891632	2
Coq.FSets.FSetProperties.WProperties_fun.diff_inter_empty	40	0	search with cache (only 1: fsetdec).	0.24977183342	1
Coq.FSets.FSetProperties.WProperties_fun.diff_inter_all	40	0	search with cache (only 1: fsetdec).	0.187167882919	1
Coq.FSets.FSetProperties.WProperties_fun.Add_add	40
Coq.FSets.FSetProperties.WProperties_fun.Add_remove	40	0.7	search with cache (only 1: expAdd; only 1: fsetdec).	0.210963010788	9
Coq.FSets.FSetProperties.WProperties_fun.union_Add	40	0.3	search with cache (only 1: expAdd; only 1: fsetdec).	0.293600082397	5
Coq.FSets.FSetProperties.WProperties_fun.inter_Add	40	2.5	search with cache (only 1: expAdd; only 1: fsetdec).	0.448350906372	9
Coq.FSets.FSetProperties.WProperties_fun.union_Equal	40	1.1	search with cache (only 1: expAdd; only 1: fsetdec).	0.39857006073	4
Coq.FSets.FSetProperties.WProperties_fun.inter_Add_2	40	2.2	search with cache (only 1: expAdd; only 1: fsetdec).	0.355454921722	6
Coq.FSets.FSetProperties.WProperties_fun.elements_Empty	40
Coq.FSets.FSetProperties.WProperties_fun.elements_empty	40
Coq.FSets.FSetProperties.WProperties_fun.of_list_1	40
Coq.FSets.FSetProperties.WProperties_fun.of_list_2	40
Coq.FSets.FSetProperties.WProperties_fun.of_list_3	40
Coq.FSets.FSetProperties.WProperties_fun.fold_spec_right	40
Coq.FSets.FSetProperties.WProperties_fun.fold_rec	40
Coq.FSets.FSetProperties.WProperties_fun.fold_rec_bis	40
Coq.FSets.FSetProperties.WProperties_fun.fold_rec_nodep	40	0.0.0.0.0.3.0	search with cache (only 1: intros A P f i s Pempty Pstep; only 1: apply fold_rec; only 1: intros; only 1: auto with set; only 1: intros; only 1: rewrite Add_Equal in H1; only 1: auto with set).	0.102952957153	27
Coq.FSets.FSetProperties.WProperties_fun.fold_rec_weak	40	4.0.0.3.0.0.0	search with cache (only 1: intros A P f i s Pmorphism Pempty Pstep; only 1: apply fold_rec; only 1: intros; only 1: firstorder; only 1: intros; only 1: rewrite Add_Equal in H1; only 1: firstorder).	15.9681420326	706
Coq.FSets.FSetProperties.WProperties_fun.fold_rel	40
Coq.FSets.FSetProperties.WProperties_fun.set_induction	40
Coq.FSets.FSetProperties.WProperties_fun.set_induction_bis	40
Coq.FSets.FSetProperties.WProperties_fun.fold_identity	40
Coq.FSets.FSetProperties.WProperties_fun.fold_0	40
Coq.FSets.FSetProperties.WProperties_fun.fold_1	40	0.0.3.1.4	search with cache (only 1: unfold Subset, Empty, impl; only 1: firstorder; only 1: apply fold_rec; only 1: firstorder; only 1: firstorder).	26.679954052	255
Coq.FSets.FSetProperties.WProperties_fun.fold_2	40
Coq.FSets.FSetProperties.WProperties_fun.fold_1b	40	0.5.0.3.3	search with cache (only 1: intros; only 1: rewrite M.fold_1; only 1: reflexivity; only 1: auto with *; only 1: fsetdec).	0.417557001114	203
Coq.FSets.FSetProperties.WProperties_fun.fold_commutes	40
Coq.FSets.FSetProperties.WProperties_fun.fold_init	40
Coq.FSets.FSetProperties.WProperties_fun.fold_equal	40
Coq.FSets.FSetProperties.WProperties_fun.fold_empty	40	3.5.1.6.1	search with cache (only 1: intros; only 1: rewrite M.fold_1; only 1: reflexivity; only 1: exact eq_equivalence; only 1: auto with *).	1.30122494698	1072
Coq.FSets.FSetProperties.WProperties_fun.fold_add	40
Coq.FSets.FSetProperties.WProperties_fun.add_fold	40
Coq.FSets.FSetProperties.WProperties_fun.remove_fold_1	40	0.0.0.0.0.2.14.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set).	23.3000950813	3819
Coq.FSets.FSetProperties.WProperties_fun.remove_fold_2	40	0.4.0	search with cache (only 1: intros; only 1: apply fold_equal; only 1: fsetdec).	0.224877119064	13
Coq.FSets.FSetProperties.WProperties_fun.fold_union_inter	40
Coq.FSets.FSetProperties.WProperties_fun.fold_diff_inter	40
Coq.FSets.FSetProperties.WProperties_fun.fold_union	40
Coq.FSets.FSetProperties.WProperties_fun.fold_plus	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_fold	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_0	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_1	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_2	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_Empty	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_inv_1	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_inv_2	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_inv_2b	40
Coq.FSets.FSetProperties.WProperties_fun.Equal_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_m_Proper	40
Coq.FSets.FSetProperties.WProperties_fun.empty_cardinal	40	0.9	search with cache (only 1: apply cardinal_1; only 1: auto with set).	0.0557599067688	21
Coq.FSets.FSetProperties.WProperties_fun.singleton_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.diff_inter_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.union_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.subset_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.subset_cardinal_lt	40
Coq.FSets.FSetProperties.WProperties_fun.union_inter_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.union_cardinal_inter	40
Coq.FSets.FSetProperties.WProperties_fun.union_cardinal_le	40	4.8.0	search with cache (only 1: intros; only 1: rewrite <- union_inter_cardinal; only 1: auto with arith).	0.613613843918	265
Coq.FSets.FSetProperties.WProperties_fun.add_cardinal_1	40	4	search with cache (only 1: intuition).	0.17227101326	45
Coq.FSets.FSetProperties.WProperties_fun.add_cardinal_2	40	1.0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: change_no_check S with ((fun _ => S) x); only 1: apply fold_2; only 1: auto with fset; only 1: auto with fset; only 1: auto with fset; only 1: auto; only 1: auto with set).	0.128484010696	10
Coq.FSets.FSetProperties.WProperties_fun.remove_cardinal_1	40	0.0.0.2.8	search with cache (only 1: symmetry; only 1: apply cardinal_2 with x; only 1: fsetdec; only 1: expAdd; only 1: fsetdec).	1.22377586365	765
Coq.FSets.FSetProperties.WProperties_fun.remove_cardinal_2	40	0	search with cache (only 1: auto with set fset).	0.0427479743958	1
Coq.FSets.FSetProperties.OrdProperties.sort_equivlistA_eqlistA	40
Coq.FSets.FSetProperties.OrdProperties.gtb_1	40
Coq.FSets.FSetProperties.OrdProperties.leb_1	40
Coq.FSets.FSetProperties.OrdProperties.gtb_compat	40
Coq.FSets.FSetProperties.OrdProperties.leb_compat	40
Coq.FSets.FSetProperties.OrdProperties.elements_split	40
Coq.FSets.FSetProperties.OrdProperties.elements_Add	40
Coq.FSets.FSetProperties.OrdProperties.elements_Add_Above	40
Coq.FSets.FSetProperties.OrdProperties.elements_Add_Below	40
Coq.FSets.FSetProperties.OrdProperties.set_induction_max	40
Coq.FSets.FSetProperties.OrdProperties.set_induction_min	40
Coq.FSets.FSetProperties.OrdProperties.fold_3	40
Coq.FSets.FSetProperties.OrdProperties.fold_4	40
Coq.FSets.FSetProperties.OrdProperties.fold_equal	40
Coq.FSets.FSetProperties.OrdProperties.add_fold	40	0.0.0	search with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).	0.0495882034302	3
Coq.FSets.FSetProperties.OrdProperties.remove_fold_2	40	0.0.0	search with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).	0.0492579936981	3
Coq.FSets.FSetProperties.OrdProperties.choose_equal	40
Coq.FSets.FSetDecide.WDecide_fun.FSetLogicalFacts.test_push	40	0	search with cache (only 1: firstorder).	0.0436189174652	1
Coq.FSets.FSetDecide.WDecide_fun.FSetLogicalFacts.test_pull	40	0.0.0	search with cache (only 1: intros; only 1: push not in *; only 1: tauto).	0.175715923309	3
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideAuxiliary.eq_refl_iff	40	0.0.0	search with cache (only 1: split; only 1: auto; only 1: auto).	0.0378651618958	3
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideAuxiliary.dec_In	40
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideAuxiliary.dec_eq	40
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_trans_1	40
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_trans_2	40	1	search with cache (only 1: fsetdec).	0.188235044479	14
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_neq_trans_1	40	0	search with cache (only 1: fsetdec).	0.0836689472198	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_neq_trans_2	40	0	search with cache (only 1: fsetdec).	0.214442014694	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_In_singleton	40	16	search with cache (only 1: fsetdec).	0.0820960998535	111
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_add_In	40	0	search with cache (only 1: fsetdec).	0.075471162796	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_Subset_add_remove	40	3.0	search with cache (only 1: unfold Subset; only 1: fsetdec).	0.0807421207428	5
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_disjunction	40	1	search with cache (only 1: fsetdec).	0.0955159664154	2
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_not_In_disj	40	2	search with cache (only 1: fsetdec).	0.455062150955	33
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_not_In_conj	40	0	search with cache (only 1: fsetdec).	0.157695055008	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_iff_conj	40	3	search with cache (only 1: fsetdec).	0.128401041031	14
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_set_ops_1	40	1	search with cache (only 1: fsetdec).	0.523860931396	35
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.eq_chain_test	40	0	search with cache (only 1: fsetdec).	0.222414970398	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_too_complex	40	5.0.0	search with cache (only 1: unfold Subset; only 1: intros x y H s s' H0 a; only 1: intuition).	0.0460758209229	8
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.function_test_1	40	13	search with cache (only 1: fsetdec).	0.210892915726	140
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.function_test_2	40	4	search with cache (only 1: fsetdec).	0.111742973328	20
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_baydemir	40	0	search with cache (only 1: fsetdec).	0.0700399875641	1
Coq.FSets.FMapList.Raw.empty_1	40	4.0.10	search with cache (only 1: compute; only 1: intuition; only 1: invlist InA).	0.26251912117	214
Coq.FSets.FMapList.Raw.empty_sorted	40	1	search with cache (only 1: constructor).	0.0126671791077	2
Coq.FSets.FMapList.Raw.is_empty_1	40
Coq.FSets.FMapList.Raw.is_empty_2	40	3.0.0.4.4	search with cache (only 1: intros m; only 1: case m; only 1: auto; only 1: unfold Empty, PX.MapsTo; only 1: inversion_clear 1).	2.23613619804	1682
Coq.FSets.FMapList.Raw.mem_1	40
Coq.FSets.FMapList.Raw.mem_2	40
Coq.FSets.FMapList.Raw.find_2	40
Coq.FSets.FMapList.Raw.find_1	40
Coq.FSets.FMapList.Raw.add_1	40
Coq.FSets.FMapList.Raw.add_2	40
Coq.FSets.FMapList.Raw.add_3	40
Coq.FSets.FMapList.Raw.add_Inf	40	1.9.1.1.0.1.8	search with cache (only 1: intros m x y e; only 1: functional induction add x e m; only 1: auto; only 1: auto with ordered_type; only 1: auto with ordered_type; only 1: inversion 1; only 1: auto).	28.7797849178	15834
Coq.FSets.FMapList.Raw.add_sorted	40
Coq.FSets.FMapList.Raw.remove_1	40
Coq.FSets.FMapList.Raw.remove_2	40
Coq.FSets.FMapList.Raw.remove_3	40
Coq.FSets.FMapList.Raw.remove_Inf	40
Coq.FSets.FMapList.Raw.remove_sorted	40	0.1.0.1.0.0.0.0.0.0.0.0	search with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: intros; only 1: destruct a as (x', e'); only 1: simpl; only 1: case (X.compare x x'); only 1: intuition; only 1: inversion_clear Hm; only 1: auto; only 1: inversion_clear Hm; only 1: auto).	3.71103191376	2348
Coq.FSets.FMapList.Raw.elements_1	40	0.0	search with cache (only 1: unfold PX.eqke; only 1: intuition).	0.0175271034241	2
Coq.FSets.FMapList.Raw.elements_2	40	0	search with cache (only 1: auto).	0.0134768486023	1
Coq.FSets.FMapList.Raw.elements_3	40	3.0.0.0	search with cache (only 1: induction m; only 1: auto; only 1: intros; only 1: auto with ordered_type).	0.019198179245	7
Coq.FSets.FMapList.Raw.elements_3w	40
Coq.FSets.FMapList.Raw.fold_1	40
Coq.FSets.FMapList.Raw.equal_1	40
Coq.FSets.FMapList.Raw.equal_2	40
Coq.FSets.FMapList.Raw.equal_cons	40
Coq.FSets.FMapList.Raw.map_1	40
Coq.FSets.FMapList.Raw.map_2	40
Coq.FSets.FMapList.Raw.map_lelistA	40	1.0.1.0.0.0.1.0.0	search with cache (only 1: induction m; only 1: simpl; only 1: intuition; only 1: intros; only 1: destruct a as (x'', e''); only 1: inversion_clear H; only 1: compute in H0; only 1: simpl; only 1: intuition).	0.624141931534	289
Coq.FSets.FMapList.Raw.map_sorted	40	1.6.1.2.0.0.1	search with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: destruct a as (x', e'); only 1: simpl; only 1: inversion 1; only 1: eauto).	4.72657299042	3689
Coq.FSets.FMapList.Raw.mapi_1	40
Coq.FSets.FMapList.Raw.mapi_2	40
Coq.FSets.FMapList.Raw.mapi_lelistA	40	0.0.0.1.2.0.1.0	search with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: destruct a as (x0, e0); only 1: inversion_clear H; only 1: auto).	0.628744125366	328
Coq.FSets.FMapList.Raw.mapi_sorted	40	1.0.0.1.0.0.0.0	search with cache (only 1: induction m; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intros; only 1: destruct a as (x', e'); only 1: inversion_clear Hm; only 1: auto).	0.0453140735626	11
Coq.FSets.FMapList.Raw.map2_alt_equiv	40
Coq.FSets.FMapList.Raw.combine_lelistA	40
Coq.FSets.FMapList.Raw.combine_sorted	40
Coq.FSets.FMapList.Raw.map2_sorted	40
Coq.FSets.FMapList.Raw.combine_1	40
Coq.FSets.FMapList.Raw.map2_0	40
Coq.FSets.FMapList.Raw.map2_1	40
Coq.FSets.FMapList.Raw.map2_2	40
Coq.FSets.FMapList.Make.MapsTo_1	40	0.0.4.4.0.9.0	search with cache (only 1: intros m x y e; only 1: compute; only 1: intuition; only 1: apply InA_eqA with (x, e); only 1: eauto with *; only 1: intuition; only 1: intuition).	19.0198330879	6082
Coq.FSets.FMapList.Make.mem_1	40
Coq.FSets.FMapList.Make.mem_2	40
Coq.FSets.FMapList.Make.empty_1	40	2.2.3.6	search with cache (only 1: intros m; only 1: intros; only 1: intro abs; only 1: inversion abs).	0.411972045898	304
Coq.FSets.FMapList.Make.is_empty_1	40
Coq.FSets.FMapList.Make.is_empty_2	40
Coq.FSets.FMapList.Make.add_1	40
Coq.FSets.FMapList.Make.add_2	40
Coq.FSets.FMapList.Make.add_3	40
Coq.FSets.FMapList.Make.remove_1	40
Coq.FSets.FMapList.Make.remove_2	40
Coq.FSets.FMapList.Make.remove_3	40
Coq.FSets.FMapList.Make.find_1	40
Coq.FSets.FMapList.Make.find_2	40
Coq.FSets.FMapList.Make.elements_1	40	0	search with cache (only 1: auto).	0.016832113266	1
Coq.FSets.FMapList.Make.elements_2	40	0.0	search with cache (only 1: intros m; only 1: exact (Raw.elements_1 (m:=m))).	0.0183138847351	2
Coq.FSets.FMapList.Make.elements_3	40	0.7.0	search with cache (only 1: intros m; only 1: induction m; only 1: auto).	0.0226080417633	10
Coq.FSets.FMapList.Make.elements_3w	40
Coq.FSets.FMapList.Make.cardinal_1	40	0	search with cache (only 1: auto).	0.0171310901642	1
Coq.FSets.FMapList.Make.fold_1	40
Coq.FSets.FMapList.Make.equal_1	40
Coq.FSets.FMapList.Make.equal_2	40
Coq.FSets.FMapList.Make.map_1	40
Coq.FSets.FMapList.Make.map_2	40
Coq.FSets.FMapList.Make.mapi_1	40
Coq.FSets.FMapList.Make.mapi_2	40
Coq.FSets.FMapList.Make.map2_1	40
Coq.FSets.FMapList.Make.map2_2	40
Coq.FSets.FMapList.Make_ord.eq_equal	40
Coq.FSets.FMapList.Make_ord.eq_1	40
Coq.FSets.FMapList.Make_ord.eq_2	40
Coq.FSets.FMapList.Make_ord.eq_refl	40
Coq.FSets.FMapList.Make_ord.eq_sym	40
Coq.FSets.FMapList.Make_ord.eq_trans	40
Coq.FSets.FMapList.Make_ord.lt_trans	40
Coq.FSets.FMapList.Make_ord.lt_not_eq	40
Coq.FSets.FMapList.Make_ord.compare	40
Coq.Wellfounded.Inclusion.Acc_incl	40
Coq.Wellfounded.Inclusion.wf_incl	40
Coq.Wellfounded.Well_Ordering.wf_WO	40
Coq.Wellfounded.Well_Ordering.wof	40
Coq.Wellfounded.Lexicographic_Exponentiation.left_prefix	40
Coq.Wellfounded.Lexicographic_Exponentiation.right_prefix	40
Coq.Wellfounded.Lexicographic_Exponentiation.desc_prefix	40
Coq.Wellfounded.Lexicographic_Exponentiation.desc_tail	40
Coq.Wellfounded.Lexicographic_Exponentiation.dist_aux	40	2.0.3.18	search with cache (only 1: fix gcd_divide 1; only 1: intros x y; only 1: intros l l1 l2; only 1: eauto).	3.5849609375	8308
Coq.Wellfounded.Lexicographic_Exponentiation.dist_Desc_concat	40
Coq.Wellfounded.Lexicographic_Exponentiation.desc_end	40
Coq.Wellfounded.Lexicographic_Exponentiation.ltl_unit	40
Coq.Wellfounded.Lexicographic_Exponentiation.acc_app	40	3.6.1	search with cache (only 1: intros; only 1: inversion H; only 1: auto).	0.114456892014	249
Coq.Wellfounded.Lexicographic_Exponentiation.wf_lex_exp	40
Coq.Wellfounded.Inverse_Image.Acc_lemma	40
Coq.Wellfounded.Inverse_Image.Acc_inverse_image	40
Coq.Wellfounded.Inverse_Image.wf_inverse_image	40
Coq.Wellfounded.Inverse_Image.Acc_inverse_rel	40
Coq.Wellfounded.Inverse_Image.wf_inverse_rel	40
Coq.Wellfounded.Disjoint_Union.acc_A_sum	40
Coq.Wellfounded.Disjoint_Union.acc_B_sum	40
Coq.Wellfounded.Disjoint_Union.wf_disjoint_sum	40
Coq.Wellfounded.Union.strip_commut	40
Coq.Wellfounded.Union.Acc_union	40
Coq.Wellfounded.Union.wf_union	40
Coq.Wellfounded.Lexicographic_Product.acc_A_B_lexprod	40
Coq.Wellfounded.Lexicographic_Product.wf_lexprod	40
Coq.Wellfounded.Lexicographic_Product.Acc_symprod	40
Coq.Wellfounded.Lexicographic_Product.wf_symprod	40
Coq.Wellfounded.Lexicographic_Product.swap_Acc	40
Coq.Wellfounded.Lexicographic_Product.Acc_swapprod	40
Coq.Wellfounded.Lexicographic_Product.wf_swapprod	40
Coq.Wellfounded.Transitive_Closure.incl_clos_trans	40
Coq.Wellfounded.Transitive_Closure.Acc_clos_trans	40
Coq.Wellfounded.Transitive_Closure.Acc_inv_trans	40
Coq.Wellfounded.Transitive_Closure.wf_clos_trans	40	3.3.0	search with cache (only 1: red; only 1: intros; only 1: auto).	0.00505304336548	9
Coq.Numbers.DecimalFacts.uint_dec	40
Coq.Numbers.DecimalFacts.rev_revapp	40
Coq.Numbers.DecimalFacts.rev_rev	40
Coq.Numbers.DecimalFacts.nzhead_revapp_0	40
Coq.Numbers.DecimalFacts.nzhead_revapp	40
Coq.Numbers.DecimalFacts.nzhead_rev	40
Coq.Numbers.DecimalFacts.rev_nztail_rev	40
Coq.Numbers.DecimalFacts.revapp_nil_inv	40
Coq.Numbers.DecimalFacts.rev_nil_inv	40	1.0.6.1.4	search with cache (only 1: intros; only 1: rewrite <- (rev_rev d); only 1: rewrite H; only 1: unfold rev; only 1: now rewrite ?IHd).	0.819267034531	1764
Coq.Numbers.DecimalFacts.rev_lnorm_rev	40
Coq.Numbers.DecimalFacts.nzhead_nonzero	40
Coq.Numbers.DecimalFacts.unorm_0	40
Coq.Numbers.DecimalFacts.unorm_nonnil	40
Coq.Numbers.DecimalFacts.nzhead_invol	40
Coq.Numbers.DecimalFacts.unorm_invol	40	9	search with cache (only 1: now induction d).	0.118968963623	79
Coq.Numbers.DecimalFacts.norm_invol	40	11.11.5	search with cache (only 1: induction d; only 1: now induction d; only 1: now induction d).	3.22382593155	13671
Coq.Numbers.DecimalPos.Unsigned.of_lu_eqn	40	25	search with cache (only 1: now induction d).	0.907735824585	482
Coq.Numbers.DecimalPos.Unsigned.of_lu_revapp	40
Coq.Numbers.DecimalPos.Unsigned.Nadd_simpl	40	0.0.18	search with cache (only 1: destruct n; only 1: reflexivity; only 1: auto).	0.902987957001	822
Coq.Numbers.DecimalPos.Unsigned.of_uint_acc_eqn	40	0.0.0.0.0.0.0.0.0.0.1.2.6	search with cache (only 1: induction d; only 1: simpl; only 1: easy || now destruct 1; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial).	1.57905197144	1048
Coq.Numbers.DecimalPos.Unsigned.of_uint_acc_rev	40
Coq.Numbers.DecimalPos.Unsigned.of_uint_alt	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_rev	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_double_gen	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_double	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_succ_double	40	3	search with cache (only 1: apply of_lu_double_gen).	0.00928711891174	4
Coq.Numbers.DecimalPos.Unsigned.of_to	40
Coq.Numbers.DecimalPos.Unsigned.succ_double_alt	40	21	search with cache (only 1: now induction d).	1.76762008667	686
Coq.Numbers.DecimalPos.Unsigned.double_succ	40
Coq.Numbers.DecimalPos.Unsigned.to_lu_succ	40
Coq.Numbers.DecimalPos.Unsigned.nat_iter_S	40	0	search with cache (only 1: auto).	0.00946497917175	1
Coq.Numbers.DecimalPos.Unsigned.nat_iter_0	40	0	search with cache (only 1: auto).	0.00829601287842	1
Coq.Numbers.DecimalPos.Unsigned.to_ldec_tenfold	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_0	40
Coq.Numbers.DecimalPos.Unsigned.to_of_lu_tenfold	40
Coq.Numbers.DecimalPos.Unsigned.Nadd_alt	40
Coq.Numbers.DecimalPos.Unsigned.to_of_lu	40
Coq.Numbers.DecimalPos.Unsigned.to_of	40
Coq.Numbers.DecimalPos.Unsigned.to_uint_nonzero	40
Coq.Numbers.DecimalPos.Unsigned.to_uint_nonnil	40	1.3.0.0.0	search with cache (only 1: intro E; only 1: generalize (of_to p); only 1: unfold Pos.to_uint; only 1: generalize (of_to p); only 1: now rewrite E).	0.110428094864	25
Coq.Numbers.DecimalPos.Unsigned.to_uint_inj	40
Coq.Numbers.DecimalPos.Unsigned.to_uint_pos_surj	40
Coq.Numbers.DecimalPos.Unsigned.of_uint_norm	40	15	search with cache (only 1: now induction d).	2.00987005234	1537
Coq.Numbers.DecimalPos.Unsigned.of_inj	40
Coq.Numbers.DecimalPos.Unsigned.of_iff	40
Coq.Numbers.DecimalPos.Signed.of_to	40
Coq.Numbers.DecimalPos.Signed.to_of	40
Coq.Numbers.DecimalPos.Signed.to_int_inj	40
Coq.Numbers.DecimalPos.Signed.to_int_pos_surj	40
Coq.Numbers.DecimalPos.Signed.of_int_norm	40
Coq.Numbers.DecimalPos.Signed.of_inj_pos	40
Coq.Numbers.DecimalNat.Unsigned.to_lu_succ	40	2.0.0.0.1.0	search with cache (only 1: simpl; only 1: induction n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	0.0258240699768	12
Coq.Numbers.DecimalNat.Unsigned.to_little_uint_succ	40
Coq.Numbers.DecimalNat.Unsigned.to_lu_equiv	40
Coq.Numbers.DecimalNat.Unsigned.to_uint_alt	40
Coq.Numbers.DecimalNat.Unsigned.of_lu_eqn	40	0.0.0.0.0.0.0.0.0.0.0.6.8.11	search with cache (only 1: revert d; only 1: intros a; only 1: destruct a; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	15.3801531792	6241
Coq.Numbers.DecimalNat.Unsigned.of_lu_succ	40
Coq.Numbers.DecimalNat.Unsigned.of_to_lu	40
Coq.Numbers.DecimalNat.Unsigned.of_lu_revapp	40
Coq.Numbers.DecimalNat.Unsigned.of_uint_acc_spec	40
Coq.Numbers.DecimalNat.Unsigned.of_uint_alt	40
Coq.Numbers.DecimalNat.Unsigned.of_to	40
Coq.Numbers.DecimalNat.Unsigned.to_lu_tenfold	40
Coq.Numbers.DecimalNat.Unsigned.of_lu_0	40
Coq.Numbers.DecimalNat.Unsigned.to_of_lu_tenfold	40
Coq.Numbers.DecimalNat.Unsigned.to_of_lu	40
Coq.Numbers.DecimalNat.Unsigned.to_of	40
Coq.Numbers.DecimalNat.Unsigned.to_uint_inj	40
Coq.Numbers.DecimalNat.Unsigned.to_uint_surj	40
Coq.Numbers.DecimalNat.Unsigned.of_uint_norm	40
Coq.Numbers.DecimalNat.Unsigned.of_inj	40
Coq.Numbers.DecimalNat.Unsigned.of_iff	40
Coq.Numbers.DecimalNat.Signed.of_to	40
Coq.Numbers.DecimalNat.Signed.to_of	40
Coq.Numbers.DecimalNat.Signed.to_int_inj	40
Coq.Numbers.DecimalNat.Signed.to_int_pos_surj	40	6.0.0.0	search with cache (only 1: exists (Nat.of_uint d); only 1: unfold Nat.to_int; only 1: rewrite Unsigned.to_of; only 1: now induction d).	0.0182840824127	10
Coq.Numbers.DecimalNat.Signed.of_int_norm	40
Coq.Numbers.DecimalNat.Signed.of_inj_pos	40
Coq.Numbers.DecimalN.Unsigned.of_to	40	5.6.0.0.7.0	search with cache (only 1: apply Nbit_faithful; only 1: unfold eqf; only 1: induction n; only 1: trivial; only 1: simpl; only 1: now rewrite Unsigned.of_to).	33.2759518623	32137
Coq.Numbers.DecimalN.Unsigned.to_of	40
Coq.Numbers.DecimalN.Unsigned.to_uint_inj	40
Coq.Numbers.DecimalN.Unsigned.to_uint_surj	40
Coq.Numbers.DecimalN.Unsigned.of_uint_norm	40	1	search with cache (only 1: now induction d).	0.0321691036224	2
Coq.Numbers.DecimalN.Unsigned.of_inj	40	1.10.9	search with cache (only 1: intros; only 1: rewrite <- !DecimalPos.Unsigned.to_of; only 1: now f_equal).	0.671962976456	423
Coq.Numbers.DecimalN.Unsigned.of_iff	40
Coq.Numbers.DecimalN.Signed.of_to	40
Coq.Numbers.DecimalN.Signed.to_of	40
Coq.Numbers.DecimalN.Signed.to_int_inj	40
Coq.Numbers.DecimalN.Signed.to_int_pos_surj	40	4.0.0.0	search with cache (only 1: exists (N.of_uint d); only 1: unfold N.to_int; only 1: rewrite Unsigned.to_of; only 1: reflexivity).	0.0389339923859	8
Coq.Numbers.DecimalN.Signed.of_int_norm	40
Coq.Numbers.DecimalN.Signed.of_inj_pos	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_add_opp	40	5	search with cache (only 1: now subst).	0.0371339321136	15
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.eq_equiv	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.pair_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.succ_wd	40	0.1.6.4.6	search with cache (only 1: repeat red; only 1: simpl in *; only 1: intros n IH; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	1.71185398102	1031
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.pred_wd	40	0.20.0.0.0	search with cache (only 1: unfold Z.succ, Z.eq; only 1: intros n m H; only 1: simpl; only 1: nzsimpl; only 1: now rewrite H).	4.23639202118	3605
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.add_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.opp_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_comm	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.bi_induction	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.pred_succ	40	3.6.5.1	search with cache (only 1: unfold Z.mul, Z.eq; only 1: simpl; only 1: intro n; only 1: now nzsimpl').	1.21183896065	326
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.succ_pred	40	0.0.0.1	search with cache (only 1: unfold Z.pred, Z.succ, Z.eq; only 1: intro n; only 1: simpl; only 1: now nzsimpl).	0.651444911957	5
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.one_succ	40	0.1.0	search with cache (only 1: unfold Symmetric, Z.eq; only 1: simpl in *; only 1: now nzsimpl).	0.12674498558	4
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.two_succ	40	1.0.0	search with cache (only 1: unfold Z.eq; only 1: simpl; only 1: now nzsimpl').	0.307914972305	4
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.opp_0	40	0.0.0	search with cache (only 1: unfold Z.eq; only 1: simpl; only 1: now nzsimpl).	0.227983951569	3
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.opp_succ	40	0.0.0.0	search with cache (only 1: unfold Z.pred, Z.succ, Z.eq; only 1: intro n; only 1: simpl; only 1: now nzsimpl).	0.419295072556	4
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.add_0_l	40	1.1.0.0	search with cache (only 1: intro n; only 1: unfold Z.succ, Z.pred, Z.eq; only 1: simpl; only 1: now nzsimpl).	0.473881959915	6
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.add_succ_l	40	5.0.3.0.0	search with cache (only 1: intro n; only 1: unfold Z.succ, Z.pred, Z.eq; only 1: intro m; only 1: simpl; only 1: now nzsimpl).	1.80434012413	479
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_0_r	40	0.0.0.0	search with cache (only 1: intro n; only 1: unfold Z.succ, Z.pred, Z.eq; only 1: simpl; only 1: now nzsimpl).	0.193460941315	4
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_succ_r	40	0.4.1.0.0	search with cache (only 1: unfold Z.pred, Z.succ, Z.eq; only 1: intro n; only 1: simpl; only 1: intro m; only 1: now nzsimpl).	0.474713087082	10
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_0_l	40	0.0.5.1	search with cache (only 1: unfold Z.mul, Z.eq; only 1: intro n; only 1: simpl; only 1: now nzsimpl).	0.224788188934	10
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_succ_l	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_eq_cases	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_irrefl	40	0.0.2	search with cache (only 1: intros; only 1: apply le_ngt; only 1: now apply eq_le_incl).	0.0456559658051	20
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_succ_r	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.min_l	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.min_r	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.max_l	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.max_r	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_nge	40	0.3.0	search with cache (only 1: intros n m; only 1: unfold Z.lt, Z.le, Z.eq; only 1: intuition order).	0.0633668899536	21
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_wd	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_neg_neg	40	0.1.0.0.0.0.0.0.0	search with cache (only 1: intros n m H1 H2; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite <- (add_0_l 0); only 1: now apply add_lt_mono).	0.085606098175	13
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_neg_nonpos	40	0.0.0	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_lt_le_mono).	0.020947933197	3
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_nonpos_neg	40	0.0.0	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_le_lt_mono).	0.02073097229	3
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_nonpos_nonpos	40	0.0.0	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_le_mono).	0.0210568904877	3
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_0_sub	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_0_sub	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_0	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_0	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_lt_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_le_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_pos_neg	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_neg_pos	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_nonneg_nonpos	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_nonpos_nonneg	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_m1_0	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_mono_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_mono_r	40	0.7.0.7.2.0	search with cache (only 1: intros; only 1: split; only 1: do 2 rewrite <- add_opp_r; only 1: now apply add_lt_mono_r; only 1: do 2 rewrite <- add_opp_r; only 1: now apply add_lt_mono_r).	8.89342093468	2943
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_mono_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_mono_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_le_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_lt_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_lt_sub_lt	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_le_sub_lt	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_le_sub_lt	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_add_lt_sub_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_add_le_sub_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_add_lt_sub_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_add_le_sub_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_lt_add_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_le_add_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_lt_add_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_le_add_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_lt_add	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_le_add	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_pos	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_nonneg	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_neg_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_pos_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_nonpos_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_nonneg_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.zero_pos_neg	40
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.odd_pred	40	0.11.0	search with cache (only 1: intros; only 1: rewrite <- (succ_pred n)  at 2; only 1: now rewrite <- negb_odd, odd_succ, negb_even).	1.48330211639	914
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_pred	40	0.0.2.0.0.0.0.0	search with cache (only 1: intros; only 1: rewrite <- (succ_pred n)  at 2; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: apply eq_iff_eq_true; only 1: rewrite even_spec, odd_spec; only 1: apply Odd_succ).	0.030611038208	21
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_opp	40
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.odd_opp	40
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_sub	40
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.odd_sub	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_pred_r	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_pred_l	40	5.11.3.0	search with cache (only 1: intros n m; only 1: rewrite <- (succ_pred n)  at 2; only 1: nzsimpl; only 1: now rewrite <- add_sub_assoc, sub_diag, add_0_r).	35.0943918228	7109
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_l	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_r	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_opp	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_comm	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_sub_distr_l	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_sub_distr_r	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_lt_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_le_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_nonpos_nonpos	40	0.0.3.4.2	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (mul_0_l m); only 1: apply mul_le_mono_nonpos_r; only 1: order; only 1: order).	0.811743974686	488
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_nonneg_nonpos	40	1.0.1	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (mul_0_l m); only 1: now apply mul_le_mono_nonpos_r).	0.054888010025	22
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_nonpos_nonneg	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_0	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_0_mul	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_mul_0	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.nlt_square_0	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_lt_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_le_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_lt_simpl_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_le_simpl_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_1_mul_neg	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_m1_neg	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_m1_pos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_1_mul_l	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_m1_mul_r	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.eq_mul_1	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_diag_l	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_diag_r	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_mul_diag_l	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_mul_diag_r	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow_sub_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow_div_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.exists_div2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_0_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_succ_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_spec'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_spec	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_true	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_false	40	2.1.0.1.0.1.0.0	search with cache (only 1: intros a n Hn; only 1: rewrite <- testbit_spec' by trivial; only 1: destruct a.[n]; only 1: split; only 1: now try order'; only 1: simpl; only 1: now try order'; only 1: now try order').	1.19361209869	622
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.b2z_inj	40	0.0.1	search with cache (only 1: destr_bool; only 1: now try order'; only 1: now try order').	0.0119938850403	4
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_b2z_double_div2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_b2z_double_bit0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.b2z_div2	40	1.0.1.2.0.0.0.0.2.31	search with cache (only 1: destr_bool; only 1: apply Private_NZDiv.div_small; only 1: split; only 1: apply lt_le_incl, lt_0_1; only 1: rewrite two_succ; only 1: apply lt_succ_diag_r; only 1: apply Private_NZDiv.div_small; only 1: split; only 1: apply le_refl; only 1: order').	9.82264995575	16609
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.b2z_bit0	40	0.1.2.1.7	search with cache (only 1: intros; only 1: apply b2z_inj; only 1: rewrite testbit_spec' by order; only 1: nzsimpl; only 1: now rewrite mod_small by (destruct a0; split; simpl; order')).	0.69549202919	229
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_unique	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_opp	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_m1	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit0_odd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit0_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit0_mod	40	1.1.0	search with cache (only 1: intros; only 1: rewrite testbit_spec' by order; only 1: now nzsimpl).	0.0639390945435	11
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_odd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit_log2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_above_log2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit_log2_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_above_log2_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_nonneg'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_nonneg_ex	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_neg'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_neg_ex	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div_pow2_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.double_bits_succ	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.double_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mul_pow2_bits_add	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mul_pow2_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mul_pow2_bits_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mod_pow2_bits_high	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mod_pow2_bits_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.eqf_equiv	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_eqf	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj_0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj_iff'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.are_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_spec	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_opp_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_opp_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_div_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_mul_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_mul_pow2	40	0.1.1.2.0.1.7.0.1	search with cache (only 1: intros; only 1: bitwise; only 1: rewrite mul_pow2_bits by trivial; only 1: destruct (le_gt_cases n m); only 1: now apply shiftl_spec_high; only 1: rewrite shiftl_spec_low, testbit_neg_r; only 1: trivial; only 1: now apply lt_sub_0; only 1: order).	7.99974989891	4735
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_div_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_spec_alt	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_shiftl	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_shiftl_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_shiftl_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_shiftr	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_1_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_0_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_0_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_0_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_0_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_eq_0	40	0.0.1.0.2.4.0.0.0.7.0	search with cache (only 1: intros; only 1: assert (Hn : 0 <= n); only 1: transitivity (log2 a); only 1: apply log2_nonneg; only 1: order'; only 1: rewrite shiftr_div_pow2, div_small_iff by order_nz; only 1: left; only 1: split; only 1: order; only 1: apply log2_lt_cancel; only 1: now rewrite log2_pow2).	3.09723901749	2571
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_div	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_odd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_wd	40	0.0.0	search with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.0336508750916	3
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_wd	40	0.0.0	search with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.033821105957	3
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_wd	40	0.0.0	search with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.0397028923035	3
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_eq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_nilpotent	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_0_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_0_r	40	0.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_l).	0.0108020305634	3
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_comm	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_assoc	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_0_l	40	0.1.0	search with cache (only 1: intros; only 1: bitwise; only 1: reflexivity).	0.0112280845642	4
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_0_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_comm	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_assoc	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_eq_0_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_0_l	40	3.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: trivial).	0.0109081268311	6
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_0_r	40	4.5.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply andb_false_iff; only 1: intuition).	0.313626050949	100
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_comm	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_assoc	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_0_l	40	0.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: trivial).	0.0110719203949	3
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_0_r	40	5.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply orb_false_r).	0.0120739936829	8
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_land_distr_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_land_distr_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_lor_distr_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_lor_distr_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ldiff_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_ldiff_and	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_spec'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_spec'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_wd	40	1.2.1	search with cache (only 1: intros a a' Ha n n' Hn; only 1: unfold setbit; only 1: now rewrite <- 2!shiftr_opp_r, Ha, Hn).	0.154312133789	47
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_wd	40	1.2.2	search with cache (only 1: intros a a' Ha n n' Hn; only 1: unfold clearbit; only 1: now rewrite <- 2!shiftr_opp_r, Ha, Hn).	0.149749040604	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow2_bits_true	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow2_bits_false	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow2_bits_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_eq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_neq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_eq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_neq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_spec	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_involutive	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_0	40	0.18.37	search with cache (only 1: unfold lnot; only 1: apply succ_inj; only 1: now rewrite one_succ, opp_succ, opp_0, succ_pred).	20.7594211102	11666
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_m1	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_m1_r	40	10.10.10.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply eq_true_iff_eq; only 1: intuition; only 1: now rewrite bits_opp, one_succ, pred_succ, bits_0).	15.1307621002	7118
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_m1_l	40	6.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: now rewrite bits_opp, one_succ, pred_succ, bits_0).	0.132373809814	9
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_m1_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_m1_l	40	3.4.5	search with cache (only 1: intro n; only 1: bitwise; only 1: now rewrite bits_opp, one_succ, pred_succ, bits_0).	0.633614063263	484
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_m1_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_m1_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_lnot_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_lnot_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_lnot_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_lnot_lnot	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lxor_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lxor_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_m1_r	40	0.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: now rewrite lnot_spec, bits_m1).	0.0116589069366	3
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_m1_l	40	0.1.0	search with cache (only 1: intros; only 1: bitwise; only 1: now rewrite lnot_spec, bits_m1).	0.0208251476288	4
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_shiftr	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_wd	40	12.11.4.6.7	search with cache (only 1: intros x y EQ; only 1: bitwise; only 1: apply eq_true_iff_eq; only 1: compute; only 1: now rewrite EQ).	34.5624670982	58987
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_equiv	40	1.0.13	search with cache (only 1: unfold ones; only 1: intros n; only 1: now rewrite shiftl_1_l).	1.45662403107	796
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_add	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_div_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_mod_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_spec_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_spec_high	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_spec_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_ones_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ones	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ones_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_r_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_l_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_neg	40	0.7.2	search with cache (only 1: intros; only 1: rewrite div2_spec; only 1: now rewrite 2!lt_nge, shiftr_nonneg).	0.259858846664	116
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_nonneg	40	7.19.2	search with cache (only 1: intros a; only 1: unfold lnot; only 1: now rewrite <- opp_succ, opp_nonneg_nonpos, le_succ_l).	2.05651211739	2468
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_bits_unique	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_shiftr	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_shiftl	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_shiftl'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_bit0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add3_bit0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add3_bits_div2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_carry_div2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_carry_bits_aux	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_carry_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_bit1	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.nocarry_equiv	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_le	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.sub_nocarry_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_lt_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_mod_lt_pow2	40
Coq.Numbers.Integer.Abstract.ZBase.ZBaseProp.pred_inj	40
Coq.Numbers.Integer.Abstract.ZBase.ZBaseProp.pred_inj_wd	40	1.3.4.4.9.0.0.0.15.0.1	search with cache (only 1: intro n; only 1: intros; only 1: intuition; only 1: apply succ_wd in H; only 1: now rewrite 2!succ_pred in H; only 1: apply succ_wd in H; only 1: apply succ_inj; only 1: apply pred_wd in H; only 1: apply pred_wd in H; only 1: apply succ_wd in H; only 1: now do 2 rewrite pred_succ in H).	30.2353599072	28853
Coq.Numbers.Integer.Abstract.ZBase.ZBaseProp.succ_m1	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_twice_r	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.even_pow	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.odd_pow	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_opp_even	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_opp_odd	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_even_abs	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_even_nonneg	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_odd_abs_sgn	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_odd_sgn	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.abs_pow	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_opp_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_opp_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_abs_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_abs_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_1_r_abs	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_1_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_antisym_abs	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_antisym	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_sub_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_add_cancel_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_opp_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_opp_r	40	0.2.0.0.0.0	search with cache (only 1: intros; only 1: apply gcd_unique_alt; only 1: apply gcd_nonneg; only 1: intros; only 1: rewrite divide_opp_r; only 1: apply gcd_divide_iff).	0.025514125824	18
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_abs_l	40	3.0.0.2.0.2.0.0.0.0	search with cache (only 1: intros; only 1: apply gcd_unique_alt; only 1: apply gcd_nonneg; only 1: intros; only 1: destruct (abs_eq_or_opp n) as [H| H]; only 1: rewrite H; only 1: apply gcd_divide_iff; only 1: rewrite H; only 1: rewrite divide_opp_r; only 1: apply gcd_divide_iff).	4.12630605698	2641
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_abs_r	40	0.2.3.0.0.0.0.7.0	search with cache (only 1: intros; only 1: destruct (abs_eq_or_opp m) as [H| H]; only 1: apply gcd_unique_alt; only 1: apply gcd_nonneg; only 1: intros; only 1: rewrite H; only 1: apply gcd_divide_iff; only 1: rewrite H; only 1: now rewrite gcd_comm, gcd_opp_l, gcd_comm).	8.71984791756	6307
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_0_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_0_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_diag	40	4.2.0.1.1.5.0.0	search with cache (only 1: intros; only 1: rewrite <- gcd_abs_r; only 1: apply gcd_unique; only 1: apply abs_nonneg; only 1: now apply divide_abs_l; only 1: exists 1; only 1: now nzsimpl; only 1: trivial using divide_1_l, le_0_1).	8.57466697693	8034
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_add_mult_diag_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_add_diag_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_sub_diag_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.Bezout_wd	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.bezout_1_gcd	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_bezout	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_l_nonneg	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_r_nonneg	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gauss	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_mul_split	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.quot_div_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_mod_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.quot_div	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_mod	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.mod_divide	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_divide	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_mod_eq_0	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.quot_div_exact	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_div_mul_exact	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_quot_mul_exact	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_div_factor	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_quot_factor	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_div_gcd	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_quot_gcd	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_mod	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_rem	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_wd	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_equiv1	40	0.0.5.2.2	search with cache (only 1: intros; only 1: symmetry; only 1: apply divide_div_mul_exact; only 1: trivial; only 1: apply gcd_divide_r).	0.882114171982	674
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_equiv2	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_div_swap	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_l	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_r	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_div	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_least	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_nonneg	40	5.3	search with cache (only 1: intros n Hn; only 1: apply abs_nonneg).	0.0202350616455	19
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_comm	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_divide_iff	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_unique	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_unique_alt	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_assoc	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_0_l	40	0.0.1.1.22	search with cache (only 1: unfold lcm; only 1: intros; only 1: nzsimpl; only 1: apply abs_eq; only 1: order || apply lt_0_1).	6.93384194374	5869
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_0_r	40	1.1.0.1.0.0.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: order || apply lt_0_1; only 1: exists 0; only 1: now nzsimpl; only 1: apply divide_refl; only 1: trivial).	0.0286819934845	10
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_l_nonneg	40	0.0.4.0.17.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: auto; only 1: trivial using divide_1_l, le_0_1; only 1: trivial using divide_refl; only 1: trivial using divide_refl).	1.72602796555	2330
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_r_nonneg	40	0.0.0.0.0.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: trivial; only 1: trivial using divide_refl; only 1: trivial using divide_1_l, le_0_1, divide_refl; only 1: trivial using divide_1_l, le_0_1, divide_refl).	0.0161051750183	6
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_diag_nonneg	40	0.0.0.0.0.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: trivial; only 1: trivial using divide_refl; only 1: trivial using divide_refl; only 1: trivial using divide_refl).	0.0159361362457	6
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_eq_0	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_eq_r	40	0.7.3.1.13.2	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: order; only 1: trivial; only 1: trivial using divide_1_l, le_0_1, divide_refl; only 1: trivial).	3.41298508644	5617
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_iff	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_opp_l	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_opp_r	40	0.5.0.0.1.0	search with cache (only 1: intros; only 1: apply lcm_unique_alt; only 1: apply lcm_nonneg; only 1: intros; only 1: rewrite divide_opp_l; only 1: apply lcm_divide_iff).	0.72897195816	459
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_abs_l	40	1.2.0.0.1.0.1.0.1.1	search with cache (only 1: intros; only 1: destruct (abs_eq_or_opp n) as [H| H]; only 1: rewrite H; only 1: easy; only 1: rewrite H; only 1: apply lcm_unique_alt; only 1: apply abs_nonneg; only 1: intros; only 1: rewrite divide_opp_l; only 1: apply lcm_divide_iff).	7.96783089638	6433
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_abs_r	40	0.1.0.1.16.0	search with cache (only 1: intros; only 1: destruct (abs_eq_or_opp m) as [H| H]; only 1: rewrite H; only 1: easy; only 1: rewrite H; only 1: now rewrite lcm_comm, lcm_opp_l, lcm_comm).	29.99563694	25379
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_l	40	0.5.1.1.0.14.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: apply abs_nonneg; only 1: trivial using divide_1_l, le_0_1; only 1: now apply divide_abs_l; only 1: intros q H H'; only 1: now apply divide_abs_l).	7.67036604881	6388
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_r	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_diag	40	2.3.1.1.0.16.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: apply abs_nonneg; only 1: now apply divide_abs_l; only 1: now apply divide_abs_l; only 1: intros; only 1: now apply divide_abs_l).	27.5584619045	35247
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_l	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_l_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_r	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_r_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_1_lcm_mul	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.succ_max_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.succ_min_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.pred_max_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.pred_min_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_max_distr_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_max_distr_r	40	1.0.0.1.1.0.0.0.0.1	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?succ_le_mono; only 1: now apply add_le_mono_r; only 1: rewrite 2!max_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?succ_le_mono; only 1: now apply add_le_mono_r).	2.1335439682	1074
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_min_distr_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_min_distr_r	40	1.0.0.1.1.0.0.0.0.1	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?add_le_mono_r; only 1: now rewrite <- ?succ_le_mono; only 1: now rewrite <- ?add_le_mono_r; only 1: rewrite 2!min_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?succ_le_mono; only 1: now rewrite <- ?add_le_mono_r).	2.66313505173	1102
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.opp_max_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.opp_min_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_max_distr_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_max_distr_r	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_min_distr_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_min_distr_r	40	0.0.0.7.0.0.0.12.0.11.2	search with cache (only 1: intro n; only 1: intros m H; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: now rewrite <- ?add_le_mono_r; only 1: now apply sub_le_mono_r; only 1: rewrite 2!min_r; only 1: order; only 1: now rewrite <- ?add_le_mono_r; only 1: now apply sub_le_mono_r).	17.2928740978	10435
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonneg_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonneg_r	40	0.1.0.0.1.0.1.0.0.0.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: order; only 1: order; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonneg_l; only 1: rewrite 2!max_l; only 1: order; only 1: order; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonneg_l).	3.3039522171	1793
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonneg_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonneg_r	40	0.0.0.1.0.0.0.0.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: order; only 1: now apply mul_le_mono_nonneg_r; only 1: rewrite 2!min_r; only 1: order; only 1: order; only 1: now apply mul_le_mono_nonneg_r).	0.486829042435	150
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonpos_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonpos_r	40	2.3.0.1.1.2.3.0.0.0.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite min_l by trivial; only 1: rewrite max_l; only 1: order; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonpos_l; only 1: rewrite min_r by trivial; only 1: rewrite max_r; only 1: order; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonpos_l).	13.3942849636	11510
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonpos_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonpos_r	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neg_pos_cases	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.nonpos_pos_cases	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neg_nonneg_cases	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.nonpos_nonneg_cases	40	0.5.2	search with cache (only 1: intro; only 1: apply add_le_cases; only 1: now nzsimpl).	0.0216600894928	10
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_l	40	0.0.0.2.2	search with cache (only 1: intro n; only 1: rewrite <- (succ_pred n)  at 2; only 1: rewrite lt_succ_r; only 1: apply lt_eq_cases; only 1: now right).	0.0167851448059	9
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_pred_l	40	0.0.2.0	search with cache (only 1: intros; only 1: rewrite <- (succ_pred n)  at 2; only 1: apply lt_le_incl; only 1: apply lt_succ_diag_r).	0.0592179298401	18
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_le_pred	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.nle_pred_r	40	0.0.10.1	search with cache (only 1: intro; only 1: rewrite nle_gt; only 1: rewrite <- (succ_pred n)  at 2; only 1: apply lt_succ_diag_r).	0.112649917603	405
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_le	40	6.5.7.0	search with cache (only 1: intros n m; only 1: rewrite <- (succ_pred n)  at 2; only 1: rewrite <- (succ_pred m); only 1: now rewrite le_succ_l).	2.30160284042	3300
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_lt_pred	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_le_pred	40	0.4.1.7.0	search with cache (only 1: intro; only 1: intros; only 1: apply lt_le_incl; only 1: apply lt_pred_le; only 1: order).	0.551412820816	578
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_lt	40	0.2.4.1	search with cache (only 1: intros; only 1: rewrite <- (succ_pred m); only 1: rewrite lt_succ_r; only 1: order).	0.0507390499115	71
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_pred_lt	40	1.0.0.0.1.0	search with cache (only 1: intro; only 1: intros; only 1: apply lt_le_incl; only 1: rewrite <- (succ_pred m); only 1: apply lt_succ_r; only 1: order).	0.0358910560608	27
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.pred_lt_mono	40	1.0.1.0.2.6.0.1	search with cache (only 1: intros n m; only 1: rewrite <- (succ_pred m); only 1: rewrite lt_succ_r; only 1: symmetry; only 1: rewrite pred_succ; only 1: rewrite <- (succ_pred n)  at 2; only 1: symmetry; only 1: apply le_succ_l).	10.5974049568	9344
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.pred_le_mono	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_succ_lt_pred	40	0.5.3.0	search with cache (only 1: intros n m; only 1: rewrite lt_le_pred; only 1: rewrite <- le_succ_l; only 1: reflexivity).	0.3670129776	448
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_succ_le_pred	40	0.0.0.0.1.0	search with cache (only 1: intros n m; only 1: rewrite <- lt_pred_le; only 1: rewrite <- (succ_pred m); only 1: rewrite pred_succ; only 1: rewrite pred_succ; only 1: apply lt_succ_r).	0.0245032310486	7
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_lt_succ	40	1.0.0.0.0.1.0	search with cache (only 1: intros n m; only 1: rewrite lt_succ_r; only 1: rewrite <- (succ_pred n)  at 2; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: apply le_succ_l).	0.148180007935	55
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_pred_lt_succ	40	1.6.0	search with cache (only 1: intros n m; only 1: rewrite <- (succ_pred n)  at 2; only 1: now rewrite 2!lt_eq_cases, <- succ_lt_mono, succ_inj_wd).	0.0493750572205	36
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neq_pred_l	40	0.10.4	search with cache (only 1: intros; only 1: rewrite <- (succ_pred n)  at 2; only 1: apply neq_sym, neq_succ_diag_l).	0.35426402092	514
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_m1_r	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericAbs.abs_eq	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericAbs.abs_neq	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_null	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_pos	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_neg	40	0.0.0.0.0.0	search with cache (only 1: unfold sgn; only 1: intros; only 1: destruct (compare_spec 0 n); only 1: order; only 1: order; only 1: order).	0.00977611541748	6
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_wd	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_max	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_neq'	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_nonneg	40	0.0.0.6.0	search with cache (only 1: intros; only 1: destruct_max n; only 1: auto; only 1: rewrite opp_nonneg_nonpos; only 1: auto).	0.0524461269379	48
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_eq_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_neq_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_opp	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_0	40	3.0.6	search with cache (only 1: rewrite abs_eq; only 1: now nzsimpl; only 1: order).	0.0330150127411	45
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_0_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_pos	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_eq_or_opp	40	2.2.1.5	search with cache (only 1: intros n; only 1: destruct_max n; only 1: auto with relations; only 1: auto with relations).	1.20877599716	450
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_or_opp_abs	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_involutive	40	6.0.0.0.2.0.0	search with cache (only 1: intros n; only 1: destruct_max n; only 1: apply abs_eq; only 1: auto; only 1: rewrite (abs_eq (- n)); only 1: auto with relations; only 1: now rewrite opp_nonneg_nonpos).	0.381505012512	457
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_spec	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_case_strong	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_case	40	1.1.0.0	search with cache (only 1: intros; only 1: destruct_max n; only 1: auto; only 1: auto).	0.0146191120148	6
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_eq_cases	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_lt	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_le	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_triangle	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_sub_triangle	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_mul	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_square	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_wd	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_spec	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_0	40	1.1.3	search with cache (only 1: rewrite sgn_null; only 1: now nzsimpl; only 1: now nzsimpl).	0.018098115921	8
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_pos_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_null_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_neg_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_opp	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_nonneg	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_nonpos	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_mul	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_abs	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_sgn	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_sgn	40	1.0.0.0.1.1.1.4	search with cache (only 1: intro n; only 1: destruct_sgn n; only 1: apply sgn_pos; only 1: auto using lt_0_1; only 1: apply sgn_0; only 1: apply sgn_neg; only 1: rewrite opp_neg_pos; only 1: auto using lt_0_1).	0.459390878677	643
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_eq	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_opp_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_opp_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_rem_unique	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_unique	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_unique	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_same	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_same	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_small	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_small	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_0_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_0_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_1_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_1_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_1_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_1_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_mul	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_unique_exact	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_nonneg	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_nonpos	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_sign_mul	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_sign_nz	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_sign	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_abs_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_abs_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_abs	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_abs_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_abs_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_abs	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_bound_abs	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_le	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_pos	40	3	search with cache (only 1: apply NZQuot.div_pos).	0.100198984146	54
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_str_pos	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_lt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_mono	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_quot_le	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_quot_ge	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_succ_quot_gt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_pred_quot_lt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_pred_quot_gt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_succ_quot_lt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_exact	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_lt_upper_bound	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_upper_bound	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_lower_bound	40	2.0.1.0.0	search with cache (only 1: intros; only 1: rewrite <- (quot_mul q b) by order; only 1: apply quot_le_mono; only 1: trivial; only 1: now rewrite mul_comm).	0.282496929169	87
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_compat_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_add	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_add	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_add_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul_cancel_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul_cancel_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_distr_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_distr_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_rem	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_idemp_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.add_rem_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.add_rem_idemp_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.add_rem	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_quot	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mod_mul_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_quot	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul_le	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_eq	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_bound_abs	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mod_unique	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique_pos	40	0.2.0.0.3.2.0.1.2	search with cache (only 1: intros a b q r Hr EQ; only 1: assert (Hb : b ~= 0) by (destruct Hr; intuition; order); only 1: destruct (div_mod_unique b q (a / b) r (a mod b)); only 1: intuition order; only 1: left; only 1: apply mod_pos_bound; only 1: intuition order; only 1: now rewrite <- div_mod; only 1: trivial).	7.98517799377	6495
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique_neg	40	0.1.0.0	search with cache (only 1: intros; only 1: apply div_unique with r; only 1: auto; only 1: auto).	0.0122010707855	5
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique	40	0.0.1.0.1.3.1.1.1.5.4.0.1.2	search with cache (only 1: intros a b q r Hr EQ; only 1: destruct (Private_NZDiv.div_mod_unique b q (a / b) r (a mod b)); only 1: auto; only 1: destruct Hr; only 1: left; only 1: apply mod_pos_bound; only 1: intuition order; only 1: right; only 1: apply mod_neg_bound; only 1: intuition order; only 1: assert (Hb : b ~= 0) by (destruct Hr; intuition; order); only 1: now rewrite <- div_mod; only 1: assert (Hb : b ~= 0) by (destruct Hr; intuition; order); only 1: trivial).	6.90185904503	10184
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique_pos	40	0.1.2.0.0.2.0.0.2.3	search with cache (only 1: intros a b q r Hr EQ; only 1: destruct (Private_NZDiv.div_mod_unique b q (a / b) r (a mod b)); only 1: auto; only 1: assert (Hb : b ~= 0) by (destruct Hr; intuition; order); only 1: left; only 1: apply mod_pos_bound; only 1: intuition order; only 1: assert (Hb : b ~= 0) by (destruct Hr; intuition; order); only 1: now rewrite <- div_mod; only 1: auto).	10.5489990711	6649
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique_neg	40	0.0.0.1	search with cache (only 1: intros; only 1: apply mod_unique with q; only 1: auto; only 1: auto).	0.0123920440674	5
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_bound_or	40	0.6.2.1.0.6.7.2	search with cache (only 1: intros; only 1: destruct (abs_spec b) as [(LE, EQ)| (LE, EQ)]; only 1: destruct (mod_pos_bound a b); only 1: order; only 1: intuition; only 1: right; only 1: apply mod_neg_bound; only 1: order).	24.3512718678	32031
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.opp_mod_bound_or	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_r_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_r_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_r_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_r_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign_mul	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_same	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_same	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_small	40	0.0.0.1.0.0.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: apply Private_NZDiv.div_unique with a; only 1: intuition; only 1: intuition; only 1: now nzsimpl).	0.0506119728088	27
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_small	40	0.0.0.1.0.0.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 0; only 1: intuition; only 1: intuition; only 1: now nzsimpl).	0.0510408878326	27
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_0_l	40	2.2.9.0.0.1.6.0.0	search with cache (only 1: intros; only 1: pos_or_neg a; only 1: apply Private_NZDiv.div_small; only 1: intuition; only 1: order; only 1: rewrite <- div_opp_opp by trivial; only 1: nzsimpl; only 1: apply Private_NZDiv.div_small; only 1: intuition).	6.72929191589	11105
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_0_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_1_r	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_1_r	40	0.0.0.0.0.2.0.1	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: left; only 1: split; only 1: order || apply lt_0_1; only 1: order || apply lt_0_1; only 1: now nzsimpl).	0.155193805695	122
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_1_l	40	0.1.0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.0137100219727	6
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_1_l	40	0.1.0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.0137388706207	6
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_mul	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique_exact	40	1.2.0.1.2.0.2.0.0	search with cache (only 1: symmetry; only 1: symmetry; only 1: apply div_unique with 0; only 1: destruct (lt_ge_cases 0 b); only 1: left; only 1: intuition order; only 1: right; only 1: intuition order; only 1: now nzsimpl).	4.00620317459	3321
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_le	40	0.0.0.0	search with cache (only 1: intros; only 1: apply mod_le; only 1: auto; only 1: auto).	0.0130999088287	4
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_pos	40	0.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: rewrite (mul_le_mono_pos_l _ _ b); only 1: nzsimpl; only 1: rewrite (add_le_mono_r _ _ (a mod b)); only 1: rewrite <- div_mod by order; only 1: nzsimpl; only 1: apply Private_NZDiv.mod_le; only 1: auto; only 1: auto; only 1: auto).	0.071072101593	10
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_str_pos	40	1.0.0.1.0.1.0.0.0.0.0.0	search with cache (only 1: intros a b (Hb, Hab); only 1: assert (LE : 0 <= a / b) by (apply Private_NZDiv.div_pos; order); only 1: assert (MOD : a mod b < b) by (destruct (mod_bound_pos a b); order); only 1: rewrite lt_eq_cases in LE; only 1: destruct LE as [LT| EQ]; only 1: auto; only 1: exfalso; only 1: revert Hab; only 1: rewrite (div_mod a b), <- EQ; only 1: nzsimpl; only 1: order; only 1: order).	0.947314023972	861
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_lt	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_mono	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_div_le	40	0.0.3.0.0.1.0	search with cache (only 1: intros; only 1: rewrite (add_le_mono_r _ _ (a mod b)), <- div_mod by order; only 1: rewrite <- (add_0_r a)  at 1; only 1: rewrite <- add_le_mono_l; only 1: destruct (mod_pos_bound a b); only 1: auto; only 1: auto).	0.61577796936	180
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_div_ge	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_succ_div_gt	40	9.0.0.0.0	search with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite mul_succ_r; only 1: rewrite <- add_lt_mono_l; only 1: now destruct (mod_pos_bound a b)).	2.35240888596	793
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_succ_div_lt	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_exact	40	1.2.3.2	search with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite <- (add_0_r (b * (a / b)))  at 2; only 1: apply add_cancel_l).	0.614372014999	220
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_lt_upper_bound	40	1.1.1.0.0.0	search with cache (only 1: intros; only 1: rewrite (mul_lt_mono_pos_l b) by order; only 1: apply le_lt_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: auto; only 1: auto).	0.018895149231	9
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_upper_bound	40	0.0.0.1.2.0	search with cache (only 1: intros; only 1: rewrite (mul_le_mono_pos_l _ _ b) by order; only 1: apply le_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: auto; only 1: auto).	0.018972158432	9
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_lower_bound	40	2.0.1.0.0	search with cache (only 1: intros; only 1: rewrite <- (div_mul q b) by order; only 1: apply div_le_mono; only 1: trivial; only 1: now rewrite mul_comm).	0.493596076965	68
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_compat_l	40	0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0	search with cache (only 1: intros p q r Hp (Hq, Hqr); only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite (div_mod p r)  at 2 by order; only 1: apply le_trans with (r * (p / r)); only 1: apply mul_le_mono_nonneg_r; only 1: apply Private_NZDiv.div_pos; only 1: auto; only 1: order; only 1: auto; only 1: rewrite <- (add_0_r (r * (p / r)))  at 1; only 1: rewrite <- add_le_mono_l; only 1: destruct (mod_bound_pos p r); only 1: auto; only 1: order; only 1: order).	9.43283605576	6602
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_add	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_add	40	0.1.1.5.0.3.0	search with cache (only 1: intros; only 1: apply (mul_cancel_l _ _ c); only 1: now nzsimpl; only 1: apply (add_cancel_r _ _ ((a + b * c) mod c)); only 1: rewrite <- div_mod, Private_NZDiv.mod_add by order; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	3.03290104866	1041
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_add_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul_cancel_r	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul_cancel_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_distr_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_distr_r	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_mod	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_idemp_r	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod_idemp_r	40	2.3.5.0	search with cache (only 1: intros a b n Hn; only 1: rewrite !(add_comm a); only 1: apply Private_NZDiv.add_mod_idemp_l; only 1: order).	4.84447002411	2026
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_div	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.rem_mul_r	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_div	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul_le	40	0.1.0.2.0.0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite mul_assoc, (mul_comm b c), <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: auto; only 1: apply Private_NZDiv.mul_div_le; only 1: auto).	0.501821994781	120
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_pred_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_pred_r	40	2.0.1.8	search with cache (only 1: intro p; only 1: intro n; only 1: rewrite <- (succ_pred n)  at 2; only 1: now nzsimpl').	4.35156178474	1299
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_0_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_succ_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_pred_l	40	0.0.4.2	search with cache (only 1: intros n m; only 1: rewrite <- 2!add_opp_r; only 1: rewrite <- (succ_pred n)  at 2; only 1: now rewrite add_succ_l, pred_succ).	0.0793168544769	26
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_pred_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_pred	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_diag	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_diag_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_diag_r	40	1.1.4.6.0.3	search with cache (only 1: nzinduct n; only 1: now nzsimpl; only 1: intro p; only 1: split; only 1: now rewrite add_comm, add_opp_r, sub_diag; only 1: now rewrite add_comm, add_opp_r, sub_diag).	8.47040486336	2706
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_l	40	2.6.2.2	search with cache (only 1: intro m; only 1: intro n; only 1: rewrite <- add_opp_r; only 1: apply add_comm).	10.5713920593	3683
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_sub_assoc	40	0.0.0.0.0.4.1.8.0	search with cache (only 1: intros n m; only 1: intro p; only 1: rewrite <- add_opp_r; only 1: rewrite <- add_opp_r; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	39.796913147	16755
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_involutive	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_add_distr	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_sub_distr	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_inj	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_inj_wd	40	1.2.0.0.1.0.3.0	search with cache (only 1: intros; only 1: intuition; only 1: apply opp_wd in H; only 1: now rewrite 2!opp_involutive in H; only 1: apply opp_wd in H; only 1: apply opp_wd in H; only 1: apply opp_wd in H; only 1: now rewrite 2!opp_involutive in H).	1.42850399017	1150
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.eq_opp_l	40	2.3.1.3.1.0	search with cache (only 1: intros n m; only 1: intuition; only 1: apply opp_inj; only 1: now rewrite opp_involutive; only 1: apply opp_inj; only 1: now rewrite opp_involutive).	0.935414791107	1107
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.eq_opp_r	40	1.0	search with cache (only 1: intros n m; only 1: now rewrite <- (opp_inj_wd (- n) m), opp_involutive).	0.016389131546	16
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add_distr	40	0.11.1.0	search with cache (only 1: intros n m p; only 1: rewrite <- 2!add_opp_r; only 1: rewrite <- add_opp_r, opp_add_distr; only 1: now rewrite add_assoc).	1.77590918541	833
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_sub_distr	40	1.1.6.0.3.0	search with cache (only 1: intros n m p; only 1: rewrite <- add_opp_r; only 1: rewrite <- add_opp_r; only 1: rewrite <- add_opp_r, opp_add_distr, add_assoc; only 1: rewrite <- 2!add_assoc, add_cancel_l; only 1: now rewrite opp_involutive).	1.88181996346	705
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_opp_l	40	0.0.0.1	search with cache (only 1: intros n m; only 1: rewrite <- add_opp_r; only 1: rewrite <- add_opp_r; only 1: now rewrite add_comm).	0.0260469913483	18
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_opp_r	40	0.0.0.0.1.0.1.0	search with cache (only 1: intros n m; only 1: rewrite <- add_opp_r; only 1: nzinduct n; only 1: now rewrite opp_involutive; only 1: intro; only 1: rewrite add_succ_l; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.106539964676	21
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_sub_swap	40	0.0.0.0.9.3.0.0	search with cache (only 1: intros n m p; only 1: rewrite <- 2!add_opp_r; only 1: nzinduct n; only 1: nzsimpl; only 1: apply add_comm; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	2.85813593864	1117
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_cancel_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_cancel_r	40	1.0.0.0.6.0	search with cache (only 1: intros; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite pred_inj_wd).	0.625598907471	472
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_0_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_0_r	40	1.5.0	search with cache (only 1: intros n m; only 1: rewrite add_comm; only 1: now rewrite add_move_l, sub_0_l).	0.0369729995728	9
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_0_l	40	0.1.1.0	search with cache (only 1: intro n; only 1: intros; only 1: rewrite <- (add_opp_r n m); only 1: now rewrite add_move_l, sub_0_l).	0.0126810073853	6
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_0_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_simpl_l	40	5.8	search with cache (only 1: intros n m; only 1: now rewrite add_comm, <- add_sub_assoc, sub_diag, add_0_r).	0.395483970642	226
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_simpl_r	40	10.3.0	search with cache (only 1: intros; only 1: rewrite <- add_opp_r; only 1: now rewrite add_move_r, sub_opp_r).	1.44799089432	609
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_simpl_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_simpl_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add	40	2.2.0.4.0	search with cache (only 1: intros; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro p; only 1: now do 2 rewrite <- sub_sub_distr, sub_diag, sub_0_r).	1.34932899475	505
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_l_l	40	1.0.0.0.5.10.0	search with cache (only 1: intros n m p; only 1: nzinduct p; only 1: nzsimpl; only 1: now rewrite add_sub_swap, sub_diag, add_0_l; only 1: intro p; only 1: nzsimpl; only 1: now rewrite pred_inj_wd).	30.7131149769	9262
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_l_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_r_l	40	0.0.0.4.8.4.5.2.5.3.0	search with cache (only 1: intros n m p; only 1: rewrite <- add_opp_r, opp_add_distr, add_assoc; only 1: rewrite add_comm; only 1: rewrite <- add_opp_r; only 1: nzinduct n; only 1: rewrite !add_assoc; only 1: nzsimpl; only 1: now rewrite add_move_r, sub_opp_r; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	28.2704000473	12217
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_r_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add_simpl_r_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add_simpl_r_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_eq	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mod_unique	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_unique	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_unique	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_opp_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_opp_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_opp_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_opp_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_same	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_same	40	0.1.5.2.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 1; only 1: now rewrite abs_pos; only 1: now nzsimpl).	0.230055809021	119
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_small	40	0.0.0.0.1.0.5.0.1.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique with a; only 1: intuition; only 1: assert (Hb : b ~= 0); only 1: order; only 1: rewrite abs_eq; only 1: order; only 1: order; only 1: intuition; only 1: now nzsimpl).	1.40114808083	1845
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_small	40	5.0.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: symmetry; only 1: auto using mod_small).	0.0381150245667	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_0_l	40	0.0.0.0.1.0.0.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: apply div_unique with 0; only 1: split; only 1: order; only 1: now rewrite abs_pos; only 1: now nzsimpl).	0.0556218624115	28
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_0_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_1_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_1_r	40	0.0.0.1.0.1.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: pose proof lt_0_1 as H; only 1: rewrite abs_pos; only 1: intuition; only 1: order; only 1: now nzsimpl).	0.184698820114	60
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_1_l	40	0.1.0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.0127320289612	6
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_1_l	40	0.1.0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.0126121044159	6
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mul	40	0.0.0.0.0.8.6.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: split; only 1: order; only 1: now rewrite abs_pos; only 1: nzsimpl; only 1: apply mul_comm).	0.652247905731	353
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_unique_exact	40	1.0.0.0.2.0.0	search with cache (only 1: symmetry; only 1: symmetry; only 1: apply div_unique with 0; only 1: split; only 1: order; only 1: now rewrite abs_pos; only 1: now nzsimpl).	0.0974118709564	53
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_le	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_pos	40	0.1.0.0.2.0	search with cache (only 1: intros; only 1: apply div_le_lower_bound; only 1: auto; only 1: auto; only 1: nzsimpl; only 1: auto).	0.352866888046	57
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_str_pos	40	1.0.0.1.0.1.0.0.0.0.0.0	search with cache (only 1: intros a b (Hb, Hab); only 1: assert (LE : 0 <= a / b) by (apply Private_NZDiv.div_pos; order); only 1: assert (MOD : a mod b < b) by (destruct (mod_bound_pos a b); order); only 1: rewrite lt_eq_cases in LE; only 1: destruct LE as [LT| EQ]; only 1: auto; only 1: exfalso; only 1: revert Hab; only 1: rewrite (div_mod a b), <- EQ; only 1: nzsimpl; only 1: order; only 1: order).	1.48707914352	1427
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_lt	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_mono	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_div_le	40	4.4.5.1.0	search with cache (only 1: intros; only 1: rewrite (add_le_mono_r _ _ (a mod b)), <- div_mod by order; only 1: rewrite <- (add_0_r a)  at 1; only 1: rewrite <- add_le_mono_l; only 1: now apply mod_always_pos).	1.74643206596	1258
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_succ_div_gt	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_pred_div_gt	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_exact	40	0.0.2.2.2	search with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite <- (add_0_r (b * (a / b)))  at 2; only 1: rewrite add_cancel_l; only 1: intuition order).	0.374708890915	107
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_lt_upper_bound	40	1.0.1.0.0.1	search with cache (only 1: intros; only 1: rewrite (mul_lt_mono_pos_l b) by order; only 1: apply le_lt_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: order; only 1: auto).	0.0965850353241	23
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_upper_bound	40	0.1.1.0.3.0	search with cache (only 1: intros; only 1: rewrite (mul_le_mono_pos_l _ _ b) by order; only 1: apply le_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: order; only 1: auto).	0.254986047745	117
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_lower_bound	40	2.0.1.0.0	search with cache (only 1: intros; only 1: rewrite <- (div_mul q b) by order; only 1: apply div_le_mono; only 1: trivial; only 1: now rewrite mul_comm).	0.510687112808	108
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_compat_l	40	0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0	search with cache (only 1: intros p q r Hp (Hq, Hqr); only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite (div_mod p r)  at 2 by order; only 1: apply le_trans with (r * (p / r)); only 1: apply mul_le_mono_nonneg_r; only 1: apply Private_NZDiv.div_pos; only 1: auto; only 1: order; only 1: auto; only 1: rewrite <- (add_0_r (r * (p / r)))  at 1; only 1: rewrite <- add_le_mono_l; only 1: destruct (mod_bound_pos p r); only 1: auto; only 1: order; only 1: order).	7.18752598763	5312
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_add	40	1.6.9.0.15.4.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with (a / c + b); only 1: now apply mod_always_pos; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: rewrite mul_comm; only 1: order).	29.5146591663	21684
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_add	40	0.1.2.5.0.7.0	search with cache (only 1: intros; only 1: apply (mul_cancel_l _ _ c); only 1: trivial; only 1: apply (add_cancel_r _ _ ((a + b * c) mod c)); only 1: rewrite <- div_mod, Private_NZDiv.mod_add by order; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	5.24264001846	2470
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_add_l	40	0.17.6.0	search with cache (only 1: intros; only 1: rewrite (add_comm _ c), (add_comm a); only 1: apply Private_NZDiv.div_add; only 1: trivial).	17.4296779633	11031
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_cancel_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_cancel_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_distr_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_distr_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mod	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_idemp_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.add_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.add_mod_idemp_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.add_mod	40	0.0.8.5.0	search with cache (only 1: intros a b n Hn; only 1: rewrite Private_NZDiv.add_mod_idemp_l, Private_NZDiv.add_mod_idemp_r; only 1: order; only 1: auto with relations; only 1: auto with relations).	16.5401639938	7299
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_div	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mul_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_div	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_le	40	1.1.0.1.0.0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite mul_assoc, (mul_comm b c), <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: auto; only 1: apply Private_NZDiv.mul_div_le; only 1: order).	0.298846960068	86
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_divides	40
Coq.Numbers.Integer.Binary.ZBinary.test	40	6.0	search with cache (only 1: intros x y z; only 1: Z.order').	0.0370528697968	8
Coq.Numbers.Cyclic.Int31.Ring31.Int31_canonic	40
Coq.Numbers.Cyclic.Int31.Ring31.ring_theory_switch_eq	40	21.1	search with cache (only 1: intros; only 1: firstorder).	1.88982510567	1687
Coq.Numbers.Cyclic.Int31.Ring31.Int31Ring	40
Coq.Numbers.Cyclic.Int31.Ring31.eqb31_eq	40
Coq.Numbers.Cyclic.Int31.Ring31.eqb31_correct	40
Coq.Numbers.Cyclic.Int31.Ring31.test	40
Coq.Numbers.Cyclic.Int31.Cyclic31.iszero_eq0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.iszero_not_eq0	40	2.3.0	search with cache (only 1: intros x y; only 1: <Coq.Strings.Ascii.t_eqb>; only 1: discriminate || simpl).	0.018728017807	8
Coq.Numbers.Cyclic.Int31.Cyclic31.sneakl_shiftr	40	0.7.6	search with cache (only 1: intros; only 1: destruct x; only 1: reflexivity).	0.0607380867004	124
Coq.Numbers.Cyclic.Int31.Cyclic31.sneakr_shiftl	40	0.0	search with cache (only 1: destruct x; only 1: reflexivity).	0.0143320560455	2
Coq.Numbers.Cyclic.Int31.Cyclic31.twice_zero	40
Coq.Numbers.Cyclic.Int31.Cyclic31.twice_or_twice_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_S	40	0.0	search with cache (only 1: intros; only 1: reflexivity).	0.0121288299561	2
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_S_tail	40	5.4.0.0.0.6.1	search with cache (only 1: intros; only 1: induction n; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: f_equal; only 1: trivial).	23.3642561436	15855
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_n_0	40	2.1.0.0.0.0.2.1	search with cache (only 1: intros; only 1: destruct n; only 1: auto; only 1: elim n; only 1: reflexivity; only 1: simpl; only 1: intros; only 1: now try rewrite H).	0.928381919861	542
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_size	40	0.4	search with cache (only 1: destruct x; only 1: reflexivity).	0.0183169841766	6
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_above_size	40
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftl_S	40	0	search with cache (only 1: reflexivity).	0.00896191596985	1
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftl_S_tail	40	1.4.0.0.0.0.1	search with cache (only 1: intros n; only 1: elim n; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: now f_equal).	2.44797182083	880
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftl_n_0	40	0.1.0.0.0.0	search with cache (only 1: induction n; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: rewrite IHn; only 1: auto).	0.025160074234	7
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftl_size	40	0.0	search with cache (only 1: destruct x; only 1: reflexivity).	0.0170080661774	2
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftl_above_size	40
Coq.Numbers.Cyclic.Int31.Cyclic31.firstr_firstl	40	0.0	search with cache (only 1: destruct x; only 1: reflexivity).	0.0164840221405	2
Coq.Numbers.Cyclic.Int31.Cyclic31.firstl_firstr	40	0.0	search with cache (only 1: destruct x; only 1: reflexivity).	0.0163240432739	2
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_predsize_0_firstl	40	14.1.0	search with cache (only 1: destruct x; only 1: simpl; only 1: <Coq.Strings.Ascii.t_eqb>).	19.7679109573	982
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_0_propagates	40
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_0_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.int31_ind_sneakl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.int31_ind_twice	40
Coq.Numbers.Cyclic.Int31.Cyclic31.recr_aux_eqn	40
Coq.Numbers.Cyclic.Int31.Cyclic31.recr_aux_converges	40
Coq.Numbers.Cyclic.Int31.Cyclic31.recr_eqn	40	14.17.3.19	search with cache (only 1: destruct x; only 1: simpl; only 1: vm_compute; only 1: now intros ->).	17.3628368378	9932
Coq.Numbers.Cyclic.Int31.Cyclic31.recrbis_aux_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.recrbis_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.incrbis_aux_equiv	40	4.13.1	search with cache (only 1: intros; only 1: apply recrbis_aux_equiv; only 1: auto).	1.05919599533	771
Coq.Numbers.Cyclic.Int31.Cyclic31.incr_eqn1	40
Coq.Numbers.Cyclic.Int31.Cyclic31.incr_eqn2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.incr_twice	40
Coq.Numbers.Cyclic.Int31.Cyclic31.incr_twice_plus_one_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phibis_aux_equiv	40	4.5.5	search with cache (only 1: intros; only 1: apply recrbis_aux_equiv; only 1: reflexivity).	0.218362092972	260
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_eqn1	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_eqn2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_twice_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_twice_plus_one_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phibis_aux_pos	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phibis_aux_bounded	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_nonneg	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_bounded	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phibis_aux_lowerbound	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_lowerbound	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_zero	40	3.1.0.0	search with cache (only 1: intros s1; only 1: elim s1; only 1: intros; only 1: reflexivity).	0.0267388820648	13
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_size	40	1.0.1.0.2.1.0.0.10.1	search with cache (only 1: intros; only 1: red; only 1: replace k with (k - size + size)%nat by lia; only 1: induction (k - size)%nat; only 1: rewrite nshiftl_size; only 1: rewrite nshiftl_size; only 1: auto; only 1: simpl; only 1: rewrite IHn; only 1: auto).	8.66069793701	3400
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_le	40	5.7.1.8.0.0	search with cache (only 1: red; only 1: intros; only 1: induction H; only 1: assumption; only 1: simpl; only 1: now f_equal).	25.7241039276	22592
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_firstr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_twice	40
Coq.Numbers.Cyclic.Int31.Cyclic31.i2l_length	40	0	search with cache (only 1: auto).	0.0100569725037	1
Coq.Numbers.Cyclic.Int31.Cyclic31.l2i_i2l	40	0.0	search with cache (only 1: destruct x; only 1: auto).	0.0158550739288	2
Coq.Numbers.Cyclic.Int31.Cyclic31.i2l_sneakr	40	0.0.9	search with cache (only 1: destruct x; only 1: simpl; only 1: auto).	6.08170819283	52
Coq.Numbers.Cyclic.Int31.Cyclic31.i2l_sneakl	40	0.1	search with cache (only 1: destruct x; only 1: auto).	0.621108055115	3
Coq.Numbers.Cyclic.Int31.Cyclic31.i2l_l2i	40
Coq.Numbers.Cyclic.Int31.Cyclic31.i2l_nshiftl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_i2l	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_twice_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_shiftr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_incrbis	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_incr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.incr_twice_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.incr_firstr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.incr_inv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_inv_double_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_inv_double	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_inv_incr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_inv_phi_aux	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_inv_phi	40
Coq.Numbers.Cyclic.Int31.Cyclic31.p2ibis_bounded	40
Coq.Numbers.Cyclic.Int31.Cyclic31.p2ibis_spec	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_inv_positive_p2ibis	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_phi_inv_positive	40
Coq.Numbers.Cyclic.Int31.Cyclic31.double_twice_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.double_twice_plus_one_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.p2i_p2ibis	40
Coq.Numbers.Cyclic.Int31.Cyclic31.positive_to_int31_phi_inv_positive	40
Coq.Numbers.Cyclic.Int31.Cyclic31.positive_to_int31_spec	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_twice	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_twice_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_incr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_phi_inv_negative	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_phi_inv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.wB_pos	40	0	search with cache (only 1: auto with zarith).	0.010311126709	1
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_zdigits	40	0	search with cache (only 1: reflexivity).	0.00996899604797	1
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_more_than_1_digit	40	0	search with cache (only 1: auto with zarith).	0.0240700244904	1
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_0	40	1	search with cache (only 1: reflexivity).	0.00934100151062	2
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_1	40	1	search with cache (only 1: auto).	0.00886297225952	2
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_m1	40	0.0	search with cache (only 1: simpl; only 1: reflexivity).	0.0175819396973	2
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_compare	40	1.1	search with cache (only 1: intros x y; only 1: auto).	0.0123488903046	4
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_add_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_succ_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_add_carry_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_add	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_add_carry	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_succ	40	6.0.0.0	search with cache (only 1: unfold add31; only 1: intros; only 1: repeat rewrite phi_phi_inv; only 1: reflexivity).	0.0332078933716	13
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_sub_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_sub_carry_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_sub	40	0.0	search with cache (only 1: intros; only 1: apply phi_phi_inv).	0.0124759674072	2
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_sub_carry	40	1.0.0.2	search with cache (only 1: unfold sub31carryc, sub31, interp_carry; only 1: intros; only 1: repeat rewrite phi_phi_inv; only 1: apply Zplus_mod_idemp_l).	0.100425004959	23
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_opp_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_opp	40	1.0	search with cache (only 1: intros; only 1: apply phi_phi_inv).	0.0261089801788	3
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_opp_carry	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_pred_c	40	1.3	search with cache (only 1: intros; only 1: apply spec_sub_c).	0.217062950134	84
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_pred	40	5.0.0.0.0	search with cache (only 1: unfold sub31; only 1: intros; only 1: repeat rewrite phi_phi_inv; only 1: change_no_check [|1|] with 1; only 1: reflexivity).	0.0294301509857	10
Coq.Numbers.Cyclic.Int31.Cyclic31.phi2_phi_inv2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_mul_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_mul	40	1.1	search with cache (only 1: intros; only 1: apply phi_phi_inv).	0.0134160518646	4
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_square_c	40	2.3.0.0.0.0	search with cache (only 1: unfold mul31c; only 1: intros; only 1: rewrite phi2_phi_inv2; only 1: apply Zmod_small; only 1: generalize (phi_bounded x); only 1: nia).	0.485930919647	168
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_div21	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_div	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_mod	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_gcd	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_gcd	40
Coq.Numbers.Cyclic.Int31.Cyclic31.iter_int31_iter_nat	40
Coq.Numbers.Cyclic.Int31.Cyclic31.addmuldiv31_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_add_mul_div	40
Coq.Numbers.Cyclic.Int31.Cyclic31.shift_unshift_mod_2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_pos_mod	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_head00	40
Coq.Numbers.Cyclic.Int31.Cyclic31.head031_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_nz	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_head0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_tail00	40	2.0.0.4.0.0	search with cache (only 1: intros; only 1: generalize (phi_inv_phi x); only 1: rewrite <- (phi_inv_phi x); only 1: generalize (phi_inv_phi x); only 1: rewrite H; only 1: auto).	0.534832954407	249
Coq.Numbers.Cyclic.Int31.Cyclic31.tail031_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_tail0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.quotient_by_2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt_main_trick	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt_main	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt_init	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt_test_true	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt_test_false	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt31_step_def	40
Coq.Numbers.Cyclic.Int31.Cyclic31.div31_phi	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt31_step_correct	40
Coq.Numbers.Cyclic.Int31.Cyclic31.iter31_sqrt_correct	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_sqrt	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt312_step_def	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt312_lower_bound	40
Coq.Numbers.Cyclic.Int31.Cyclic31.div312_phi	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt312_step_correct	40
Coq.Numbers.Cyclic.Int31.Cyclic31.iter312_sqrt_correct	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_sqrt2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_eq0	40	6.5.4.11.6	search with cache (only 1: intros; only 1: generalize (phi_inv_phi x); only 1: intros; only 1: apply Zeq_is_eq_bool; only 1: auto).	5.15643811226	6428
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_is_even	40
Coq.Numbers.Cyclic.Int31.Cyclic31.log2_phi_bounded	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_lor	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_land	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_lxor	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_more_than_1_digit	40	23	search with cache (only 1: lia).	0.354194879532	255
Coq.Numbers.Cyclic.ZModulo.ZModulo.wB_pos	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_to_Z_1	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_to_Z_2	40	1.0.0.0.0.0.0.0.0	search with cache (only 1: unfold to_Z; only 1: intros; only 1: destruct (Z_mod_lt x wB wB_pos); only 1: destruct (Z_mod_lt x wB wB_pos); only 1: destruct (Z_mod_lt x wB wB_pos); only 1: destruct (Z_mod_lt x wB wB_pos); only 1: destruct (Z_mod_lt x wB wB_pos); only 1: destruct (Z_mod_lt x wB wB_pos); only 1: auto).	0.0855422019958	11
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_to_Z	40	0.0.0.0.1.0.0	search with cache (only 1: unfold to_Z; only 1: intros; only 1: repeat split; only 1: destruct (Z_mod_lt x wB wB_pos); only 1: auto; only 1: destruct (Z_mod_lt x wB wB_pos); only 1: auto).	0.0685410499573	8
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_of_pos	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_zdigits	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_0	40	0.0.0.0.0.0	search with cache (only 1: unfold to_Z, zdigits; only 1: apply Zmod_small; only 1: unfold wB, base; only 1: split; only 1: auto with zarith; only 1: auto with zarith).	0.0638890266418	6
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_1	40	0.0.11.1.0.0.2.0.0	search with cache (only 1: unfold to_Z, zdigits; only 1: apply Zmod_small; only 1: generalize wB_pos; only 1: unfold wB, base; only 1: split; only 1: auto with zarith; only 1: apply Z.pow_gt_1; only 1: auto with zarith; only 1: auto with zarith).	14.2732989788	11438
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_Bm1	40	1.1.0.0	search with cache (only 1: unfold to_Z, zdigits; only 1: apply Zmod_small; only 1: generalize wB_pos; only 1: lia).	0.122977018356	26
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_compare	40	0.0.0.0	search with cache (only 1: unfold to_Z; only 1: intros; only 1: destruct (Z_mod_lt x wB wB_pos); only 1: auto).	0.0593819618225	4
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_eq0	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_opp_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_opp	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_opp_carry	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.Zmod_equal	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_succ_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_add_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_add_carry_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_succ	40	0.1.0.0	search with cache (only 1: intros; only 1: unfold opp, to_Z; only 1: rewrite Zplus_mod_idemp_l; only 1: auto).	0.0626540184021	5
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_add	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_add_carry	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_pred_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_sub_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_sub_carry_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_pred	40	6.3.1.0	search with cache (only 1: intros; only 1: unfold opp, to_Z; only 1: symmetry; only 1: apply Zplus_mod_idemp_l).	1.46074986458	468
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_sub	40	16.12.4.0.0	search with cache (only 1: intros; only 1: unfold add, to_Z; only 1: symmetry; only 1: rewrite Zminus_mod_idemp_r; only 1: apply Zplus_mod_idemp_l).	20.8584599495	28041
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_sub_carry	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_mul_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_mul	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_square_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_div	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_div_gt	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_modulo	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_modulo_gt	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.Zgcd_bound	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_gcd	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_gcd_gt	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_div21	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_add_mul_div	40	2.1.0.1	search with cache (only 1: unfold to_Z; only 1: intros; only 1: destruct (Z_mod_lt x wB wB_pos); only 1: auto).	0.102875947952	15
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_pos_mod	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_is_even	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_sqrt	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_sqrt2	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.two_p_power2	40	0.7.0.3.0	search with cache (only 1: intros; only 1: destruct x; only 1: auto with zarith; only 1: apply two_power_pos_equiv; only 1: auto using Z.lt_gt with zarith).	0.900348186493	459
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_head00	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_head0	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.Ptail_pos	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.Ptail_bounded	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_tail00	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_tail0	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_lor	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_land	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_lxor	40
Coq.Numbers.Cyclic.Int63.Cyclic63.is_zero_spec_aux	40	3.2.11.3.24.0.1.10	search with cache (only 1: intros; only 1: case (to_Z_bounded x); only 1: intros H1x H2x; only 1: replace x with 0%int63; only 1: auto; only 1: apply eq_sym; only 1: apply eqb_spec; only 1: auto).	26.6000099182	49512
Coq.Numbers.Cyclic.Int63.Cyclic63.positive_to_int_spec	40
Coq.Numbers.Cyclic.Int63.Cyclic63.mulc_WW_spec	40
Coq.Numbers.Cyclic.Int63.Cyclic63.diveucl_spec_aux	40
Coq.Numbers.Cyclic.Int63.Cyclic63.shift_unshift_mod_2	40
Coq.Numbers.Cyclic.Int63.Cyclic63.div_le_0	40
Coq.Numbers.Cyclic.Int63.Cyclic63.div_lt	40
Coq.Numbers.Cyclic.Int63.Cyclic63.P	40	0	search with cache (only 1: auto).	0.051421880722	1
Coq.Numbers.Cyclic.Int63.Cyclic63.shift_unshift_mod_3	40	0.1.0.0.1.0.0.0.0.0.0.0	search with cache (only 1: intros n p a H; only 1: rewrite Zmod_eq by auto with zarith; only 1: unfold Z.sub at 1; only 1: rewrite Z_div_plus_full_l by auto with zarith; only 1: replace (2 ^ n) with 2 ^ (n - p) * 2 ^ p by (rewrite <- Zpower_exp; [ f_equal |  |  ]; lia); only 1: rewrite <- Zdiv_Zdiv, Z_div_mult by auto with zarith; only 1: rewrite (Z.mul_comm (2 ^ (n - p))), Z.mul_assoc; only 1: rewrite Zopp_mult_distr_l; only 1: rewrite Z_div_mult by auto with zarith; only 1: symmetry; only 1: apply Zmod_eq; only 1: auto with zarith).	12.8341431618	3013
Coq.Numbers.Cyclic.Int63.Cyclic63.pos_mod_spec	40
Coq.Numbers.Cyclic.Int63.Int63.to_Z_rec_bounded	40
Coq.Numbers.Cyclic.Int63.Int63.to_Z_bounded	40
Coq.Numbers.Cyclic.Int63.Int63.Z_lt_div2	40
Coq.Numbers.Cyclic.Int63.Int63.Zmod_le_first	40	0.0.0.4.1	search with cache (only 1: split; only 1: now apply Z.mod_pos_bound; only 1: apply Z.mod_le; only 1: auto; only 1: auto).	0.0619711875916	10
Coq.Numbers.Cyclic.Int63.Int63.Zmod_distr	40
Coq.Numbers.Cyclic.Int63.Int63.pow2_pos	40	0.13	search with cache (only 1: Z.swap_greater; only 1: Z.order_pos).	0.561095952988	144
Coq.Numbers.Cyclic.Int63.Int63.pow2_nz	40	0	search with cache (only 1: Z.order_nz).	0.0497510433197	1
Coq.Numbers.Cyclic.Int63.Int63.wB_diff_0	40	4.10	search with cache (only 1: intuition; only 1: discriminate).	0.37451505661	102
Coq.Numbers.Cyclic.Int63.Int63.wB_pos	40	0.9	search with cache (only 1: red; only 1: reflexivity).	0.0604889392853	21
Coq.Numbers.Cyclic.Int63.Int63.to_Z_0	40	0	search with cache (only 1: auto).	0.0471270084381	1
Coq.Numbers.Cyclic.Int63.Int63.to_Z_1	40	0	search with cache (only 1: reflexivity).	0.0469160079956	1
Coq.Numbers.Cyclic.Int63.Int63.can_inj	40	33	search with cache (only 1: intuition congruence).	0.35702085495	550
Coq.Numbers.Cyclic.Int63.Int63.to_Z_inj	40
Coq.Numbers.Cyclic.Int63.Int63.eqb_complete	40
Coq.Numbers.Cyclic.Int63.Int63.eqb_spec	40
Coq.Numbers.Cyclic.Int63.Int63.eqb_false_spec	40
Coq.Numbers.Cyclic.Int63.Int63.eqb_false_complete	40	0.1.0	search with cache (only 1: intros; only 1: rewrite <- not_true_iff_false, eqb_spec; only 1: trivial).	0.0552968978882	4
Coq.Numbers.Cyclic.Int63.Int63.eqb_false_correct	40	0.0.0	search with cache (only 1: intros x y; only 1: rewrite eqb_false_spec; only 1: trivial).	0.0553870201111	3
Coq.Numbers.Cyclic.Int63.Int63.eq_dec	40
Coq.Numbers.Cyclic.Int63.Int63.cast_refl	40
Coq.Numbers.Cyclic.Int63.Int63.cast_diff	40
Coq.Numbers.Cyclic.Int63.Int63.eqo_refl	40
Coq.Numbers.Cyclic.Int63.Int63.eqo_diff	40	0.1.3.0.19	search with cache (only 1: unfold eqo; only 1: intros; only 1: generalize (eqb_correct i j); only 1: rewrite H; only 1: congruence).	1.3780310154	2298
Coq.Numbers.Cyclic.Int63.Int63.eqbP	40
Coq.Numbers.Cyclic.Int63.Int63.ltbP	40
Coq.Numbers.Cyclic.Int63.Int63.lebP	40
Coq.Numbers.Cyclic.Int63.Int63.compare_spec	40
Coq.Numbers.Cyclic.Int63.Int63.is_zero_spec	40	2.23	search with cache (only 1: compute; only 1: auto using eqb_correct, eqb_complete).	12.0723490715	16492
Coq.Numbers.Cyclic.Int63.Int63.diveucl_spec	40
Coq.Numbers.Cyclic.Int63.Int63.addc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.succ_spec	40
Coq.Numbers.Cyclic.Int63.Int63.succc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.addcarry_spec	40
Coq.Numbers.Cyclic.Int63.Int63.addcarryc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.subc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.pred_spec	40
Coq.Numbers.Cyclic.Int63.Int63.predc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.oppc_spec	40	2	search with cache (only 1: apply subc_spec).	0.0491948127747	3
Coq.Numbers.Cyclic.Int63.Int63.opp_spec	40	4	search with cache (only 1: apply sub_spec).	0.0566439628601	5
Coq.Numbers.Cyclic.Int63.Int63.oppcarry_spec	40
Coq.Numbers.Cyclic.Int63.Int63.subcarry_spec	40
Coq.Numbers.Cyclic.Int63.Int63.subcarryc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.to_Z_gcd	40
Coq.Numbers.Cyclic.Int63.Int63.gcd_spec	40
Coq.Numbers.Cyclic.Int63.Int63.head00_spec	40
Coq.Numbers.Cyclic.Int63.Int63.tail00_spec	40	0	search with cache (only 1: now intros h; rewrite (to_Z_inj _ 0 h)).	0.0504009723663	1
Coq.Numbers.Cyclic.Int63.Int63.eqm_mod	40
Coq.Numbers.Cyclic.Int63.Int63.eqm_sub	40
Coq.Numbers.Cyclic.Int63.Int63.eqmE	40
Coq.Numbers.Cyclic.Int63.Int63.eqm_subE	40
Coq.Numbers.Cyclic.Int63.Int63.int_eqm	40	0.1.1	search with cache (only 1: destruct 1; only 1: unfold eqm; only 1: reflexivity).	0.0564880371094	5
Coq.Numbers.Cyclic.Int63.Int63.eqmI	40
Coq.Numbers.Cyclic.Int63.Int63.add_assoc	40
Coq.Numbers.Cyclic.Int63.Int63.add_comm	40
Coq.Numbers.Cyclic.Int63.Int63.add_le_r	40
Coq.Numbers.Cyclic.Int63.Int63.add_cancel_l	40
Coq.Numbers.Cyclic.Int63.Int63.add_cancel_r	40	0.0.0.0.0.1.0	search with cache (only 1: intros h; only 1: apply int_eqm in h; only 1: rewrite !add_spec in h; only 1: apply eqm_mod, eqm_sub in h; only 1: replace (_ + _ - _) with φ (y) - φ (z) in h by lia; only 1: rewrite <- eqm_subE in h; only 1: apply eqmI, h).	0.0735669136047	8
Coq.Numbers.Cyclic.Int63.Int63.lsr0	40
Coq.Numbers.Cyclic.Int63.Int63.lsr_0_r	40	2.0.1	search with cache (only 1: apply to_Z_inj; only 1: rewrite lsr_spec; only 1: now Z.nzsimpl).	0.120079040527	6
Coq.Numbers.Cyclic.Int63.Int63.lsr_1	40
Coq.Numbers.Cyclic.Int63.Int63.lsr_add	40
Coq.Numbers.Cyclic.Int63.Int63.lsl0	40
Coq.Numbers.Cyclic.Int63.Int63.lsl0_r	40
Coq.Numbers.Cyclic.Int63.Int63.lsl_add_distr	40
Coq.Numbers.Cyclic.Int63.Int63.lsr_M_r	40
Coq.Numbers.Cyclic.Int63.Int63.bit_0_spec	40
Coq.Numbers.Cyclic.Int63.Int63.bit_split	40
Coq.Numbers.Cyclic.Int63.Int63.bit_lsr	40
Coq.Numbers.Cyclic.Int63.Int63.bit_b2i	40
Coq.Numbers.Cyclic.Int63.Int63.bit_1	40	2.0.4.4.9	search with cache (only 1: unfold bit; only 1: rewrite lsr_1; only 1: case eqbP; only 1: reflexivity; only 1: intuition).	10.2437040806	1433
Coq.Numbers.Cyclic.Int63.Int63.to_Z_split	40
Coq.Numbers.Cyclic.Int63.Int63.bit_M	40
Coq.Numbers.Cyclic.Int63.Int63.bit_half	40
Coq.Numbers.Cyclic.Int63.Int63.bit_ext	40
Coq.Numbers.Cyclic.Int63.Int63.bit_lsl	40
Coq.Numbers.Cyclic.Int63.Int63.lor_lsr	40
Coq.Numbers.Cyclic.Int63.Int63.lor_le	40
Coq.Numbers.Cyclic.Int63.Int63.bit_0	40
Coq.Numbers.Cyclic.Int63.Int63.bit_add_or	40
Coq.Numbers.Cyclic.Int63.Int63.addmuldiv_spec	40
Coq.Numbers.Cyclic.Int63.Int63.is_even_bit	40
Coq.Numbers.Cyclic.Int63.Int63.is_even_spec	40
Coq.Numbers.Cyclic.Int63.Int63.is_even_0	40	0	search with cache (only 1: trivial).	0.0502140522003	1
Coq.Numbers.Cyclic.Int63.Int63.is_even_lsl_1	40
Coq.Numbers.Cyclic.Int63.Int63.quotient_by_2	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_main_trick	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_main	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_test_false	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_test_true	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_step_correct	40
Coq.Numbers.Cyclic.Int63.Int63.iter_sqrt_correct	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_init	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_spec	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt2_step_def	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt2_lower_bound	40
Coq.Numbers.Cyclic.Int63.Int63.diveucl_21_spec_aux	40
Coq.Numbers.Cyclic.Int63.Int63.div2_phi	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt2_step_correct	40
Coq.Numbers.Cyclic.Int63.Int63.iter2_sqrt_correct	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt2_spec	40
Coq.Numbers.Cyclic.Int63.Int63.of_pos_rec_spec	40
Coq.Numbers.Cyclic.Int63.Int63.is_int	40
Coq.Numbers.Cyclic.Int63.Int63.of_Z_spec	40
Coq.Numbers.Cyclic.Int63.Int63.negbE	40	0.0.0.0.0.2.0	search with cache (only 1: destruct a, b; only 1: auto; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: auto).	0.0693981647491	9
Coq.Numbers.Cyclic.Int63.Int63.Z_oddE	40	0.0	search with cache (only 1: rewrite Zmod_odd; only 1: now destruct Z.odd).	0.0550608634949	2
Coq.Numbers.Cyclic.Int63.Int63.Z_evenE	40	0.0	search with cache (only 1: rewrite Zmod_even; only 1: now destruct Z.even).	0.0541069507599	2
Coq.Numbers.Cyclic.Int63.Int63.is_zeroE	40
Coq.Numbers.Cyclic.Int63.Int63.bitE	40
Coq.Numbers.Cyclic.Int63.Int63.lt_pow_lt_log	40
Coq.Numbers.Cyclic.Int63.Int63.land_spec'	40
Coq.Numbers.Cyclic.Int63.Int63.lor_spec'	40
Coq.Numbers.Cyclic.Int63.Int63.lxor_spec'	40
Coq.Numbers.Cyclic.Int63.Int63.landC	40
Coq.Numbers.Cyclic.Int63.Int63.landA	40
Coq.Numbers.Cyclic.Int63.Int63.land0	40	0.4.3.0.0.2	search with cache (only 1: apply bit_ext; only 1: intros n; only 1: rewrite !land_spec, andb_comm; only 1: unfold bit; only 1: rewrite lsr0, lsl0, andb_false_r; only 1: auto).	1.70424294472	665
Coq.Numbers.Cyclic.Int63.Int63.land0_r	40	0.1.4.0.0.1	search with cache (only 1: apply bit_ext; only 1: intros n; only 1: rewrite land_spec, bit_0; only 1: generalize (eqb_spec n 0); only 1: rewrite andb_false_r; only 1: auto).	0.460431814194	179
Coq.Numbers.Cyclic.Int63.Int63.lorC	40
Coq.Numbers.Cyclic.Int63.Int63.lorA	40
Coq.Numbers.Cyclic.Int63.Int63.lor0	40
Coq.Numbers.Cyclic.Int63.Int63.lor0_r	40	1.3.4.1.0.0	search with cache (only 1: apply bit_ext; only 1: intros n; only 1: rewrite !lor_spec, orb_comm; only 1: unfold bit; only 1: rewrite lsr0; only 1: auto).	0.64133310318	486
Coq.Numbers.Cyclic.Int63.Int63.lxorC	40
Coq.Numbers.Cyclic.Int63.Int63.lxorA	40
Coq.Numbers.Cyclic.Int63.Int63.lxor0	40
Coq.Numbers.Cyclic.Int63.Int63.lxor0_r	40
Coq.Numbers.Cyclic.Int63.Ring63.ring_theory_switch_eq	40	3.6	search with cache (only 1: intros P Q H xs H0; only 1: firstorder).	0.0610890388489	46
Coq.Numbers.Cyclic.Int63.Ring63.Int63Ring	40
Coq.Numbers.Cyclic.Int63.Ring63.eq31_correct	40	1.0	search with cache (only 1: intros x y H; only 1: auto using eqb_correct, eqb_complete).	0.0135200023651	3
Coq.Numbers.Cyclic.Int63.Ring63.test	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.spec_WO	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.spec_OW	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.spec_WW	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.of_pos_correct	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.of_Z_correct	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_0_l	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_comm	40	8.21.6.0	search with cache (only 1: intros; only 1: zify; only 1: f_equal; only 1: ring).	3.4740819931	5716
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_assoc	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_1_l	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_comm	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_assoc	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_add_distr_r	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_opp_r	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_opp_diag_r	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.CyclicRing	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.eqb_eq	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.eqb_correct	40	19.7.2	search with cache (only 1: intros; only 1: unfold eqb, eq; only 1: now apply Z.eqb_eq).	1.66265797615	1913
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.eq_equiv	40	2.0.0.0.2.0	search with cache (only 1: split; only 1: congruence; only 1: red; only 1: intros; only 1: auto with *; only 1: congruence).	0.232460021973	38
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.gt_wB_1	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.gt_wB_0	40	1.42	search with cache (only 1: unfold base; only 1: auto with zarith).	1.69364309311	4569
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.one_mod_wB	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.succ_mod_wB	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.pred_mod_wB	40	0.12.1.1.0	search with cache (only 1: intro n; only 1: rewrite <- one_mod_wB  at 2; only 1: rewrite <- one_mod_wB  at 2; only 1: rewrite Zminus_mod, Zmod_mod, <- Zminus_mod; only 1: now Z.nzsimpl').	19.6464800835	1622
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.NZ_to_Z_mod	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.pred_succ	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.one_succ	40	1.0.0.0.0.0.6	search with cache (only 1: zify; only 1: rewrite Zmod_small; only 1: simpl; only 1: reflexivity; only 1: split; only 1: auto with zarith; only 1: apply gt_wB_1).	0.388273000717	171
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.two_succ	40	1.3.0	search with cache (only 1: zify; only 1: simpl Z.add; only 1: trivial).	0.40434885025	64
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.B0	40	5	search with cache (only 1: tauto).	0.0512700080872	6
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.BS	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.Zbounded_induction	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.B_holds	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.bi_induction	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.add_0_l	40	0.0.0.0.0	search with cache (only 1: intro n; only 1: zify; only 1: rewrite Zmod_small; only 1: reflexivity; only 1: apply ZnZ.spec_to_Z).	0.0806610584259	5
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.add_succ_l	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.sub_0_r	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.sub_succ_r	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.mul_0_l	40	2.0.0	search with cache (only 1: intro n; only 1: zify; only 1: reflexivity).	0.218149900436	5
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.mul_succ_l	40
Coq.Numbers.DecimalString.uint_of_char_spec	40
Coq.Numbers.DecimalString.NilEmpty.usu	40
Coq.Numbers.DecimalString.NilEmpty.sus	40
Coq.Numbers.DecimalString.NilEmpty.isi	40
Coq.Numbers.DecimalString.NilEmpty.sis	40
Coq.Numbers.DecimalString.NilZero.uint_of_string_nonnil	40
Coq.Numbers.DecimalString.NilZero.sus	40
Coq.Numbers.DecimalString.NilZero.usu	40
Coq.Numbers.DecimalString.NilZero.usu_nil	40	0	search with cache (only 1: reflexivity).	0.00795102119446	1
Coq.Numbers.DecimalString.NilZero.usu_gen	40
Coq.Numbers.DecimalString.NilZero.isi	40
Coq.Numbers.DecimalString.NilZero.isi_posnil	40	0	search with cache (only 1: reflexivity).	0.00808095932007	1
Coq.Numbers.DecimalString.NilZero.isi_negnil	40	0	search with cache (only 1: reflexivity).	0.00794410705566	1
Coq.Numbers.DecimalString.NilZero.sis	40
Coq.Numbers.Natural.Peano.NPeano.Even_equiv	40	8	search with cache (only 1: parity_binop).	0.0711770057678	34
Coq.Numbers.Natural.Peano.NPeano.Odd_equiv	40	7.7.3	search with cache (only 1: split; only 1: parity_binop; only 1: parity_binop).	5.70242595673	7027
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_wf_0	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.nlt_0_r	40	3.8.2	search with cache (only 1: intro H; only 1: rewrite nlt_ge; only 1: apply le_0_l).	0.234181880951	463
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.nle_succ_0	40	1.0.6.1	search with cache (only 1: intro n; only 1: rewrite nle_gt; only 1: rewrite lt_succ_r; only 1: apply le_0_l).	0.235170841217	472
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_0_r	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_0_succ	40	1.0.1	search with cache (only 1: intros; only 1: rewrite lt_succ_r; only 1: apply le_0_l).	0.0062530040741	5
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.neq_0_lt_0	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.eq_0_gt_0_cases	40	1.3.13.0.0.5.6	search with cache (only 1: cases ltac:(n); only 1: left; only 1: now nzsimpl; only 1: intro n; only 1: right; only 1: rewrite lt_succ_r; only 1: apply le_0_l).	3.25451302528	6421
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.zero_one	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_1_r	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_1_r	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_lt_0	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_1_l'	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_ind_rel	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_ind_rel	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.succ_pred_pos	40	0.0.0.3.4	search with cache (only 1: intro n; only 1: intro H; only 1: destruct (lt_exists_pred _ _ H) as (n', (EQ, LE)); only 1: rewrite EQ; only 1: now rewrite pred_succ).	0.0737299919128	121
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_pred_l	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_l	40	0.0.2.3.1.0.2	search with cache (only 1: cases ltac:(n); only 1: intro H; only 1: now elim H; only 1: intros n _; only 1: rewrite pred_succ; only 1: rewrite lt_succ_r; only 1: apply le_refl).	0.696563005447	790
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_le_pred	40	5.0.0.0.1.1.4.0	search with cache (only 1: cases ltac:(n); only 1: intros; only 1: rewrite pred_0; only 1: order; only 1: intros; only 1: rewrite pred_succ; only 1: apply lt_le_incl; only 1: now apply le_succ_l).	5.87590193748	5569
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_lt_pred	40	0.1.0.0.1.6.0.2	search with cache (only 1: cases ltac:(n); only 1: intros n m; only 1: rewrite pred_0; only 1: assumption; only 1: intros; only 1: apply le_succ_l; only 1: rewrite pred_succ; only 1: order).	1.16352796555	1785
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_le_pred	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_le	40	4.1.5.1.3.0.1.9	search with cache (only 1: cases ltac:(n); only 1: intro n; only 1: intro H; only 1: apply le_0_l; only 1: intro; only 1: intro; only 1: rewrite pred_succ; only 1: apply le_succ_l).	27.0724408627	54703
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_lt	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_pred_le	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.pred_le_mono	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.pred_lt_mono	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_succ_lt_pred	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_succ_le_pred	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_lt_succ	40	0.0.0.1.0.0.0.3	search with cache (only 1: intros n m; only 1: rewrite lt_succ_r; only 1: cases n; only 1: rewrite pred_0; only 1: now apply lt_le_incl; only 1: intros n IH; only 1: rewrite pred_succ in IH; only 1: now apply le_succ_l).	0.282263040543	558
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_pred_le_succ	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_upper_bound	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_eq	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mod_unique	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_unique	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_unique	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_unique_exact	40	1.0.10.1	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_unique with 0; only 1: auto'; only 1: now nzsimpl).	0.493177890778	1017
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_same	40	7.2.0.0.3.2	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique_exact; only 1: auto'; only 1: nzsimpl; only 1: order).	0.5230448246	1088
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_same	40	0.1.12.5.2	search with cache (only 1: intro H; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 1; only 1: auto'; only 1: now nzsimpl).	0.6396920681	2376
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_small	40	6.0.0.0	search with cache (only 1: intros; only 1: apply div_small; only 1: intuition; only 1: auto').	0.0145299434662	10
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_small	40	1.2.2	search with cache (only 1: intros; only 1: apply mod_small; only 1: auto').	0.132040023804	62
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_0_l	40	0.7.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: auto').	0.0105969905853	10
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_0_l	40	0.5.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: auto').	0.00877499580383	8
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_1_r	40	0.0.0.1.2.5.0.5	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique_exact; only 1: intro H; only 1: apply (neq_succ_0 0); only 1: now rewrite <- one_succ; only 1: nzsimpl; only 1: order).	0.642262935638	1342
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_1_r	40	0.0.5.2.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: apply lt_0_1; only 1: now nzsimpl).	0.307307004929	157
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_1_l	40	0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: auto).	0.00529885292053	3
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_1_l	40	0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: auto).	0.00517606735229	3
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul	40	8.0.0.5.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique_exact; only 1: auto'; only 1: apply mul_comm).	0.309437990189	566
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_mul	40	0.0.7.0	search with cache (only 1: intros; only 1: apply mod_mul; only 1: auto'; only 1: auto').	0.04044008255	51
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_le	40	0.0.11.0	search with cache (only 1: intros; only 1: apply mod_le; only 1: auto'; only 1: auto').	0.0765581130981	288
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_str_pos	40	0.7.0	search with cache (only 1: intros a b (Hb, Hab); only 1: apply div_str_pos; only 1: auto).	0.0754251480103	92
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_small_iff	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_small_iff	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_str_pos_iff	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_lt	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_mono	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_div_le	40	2.6.1.9.0	search with cache (only 1: intros; only 1: rewrite (add_le_mono_r _ _ (a mod b)), <- div_mod by order; only 1: rewrite <- (add_0_r a)  at 1; only 1: rewrite <- add_le_mono_l; only 1: auto').	0.476286888123	677
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_succ_div_gt	40	0.0.0.1.1.2.0	search with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite mul_succ_r; only 1: rewrite <- add_lt_mono_l; only 1: apply mod_bound_pos; only 1: auto'; only 1: auto').	0.173883914948	68
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_exact	40	2.2.1.2	search with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite <- (add_0_r (b * (a / b)))  at 2; only 1: apply add_cancel_l).	0.223468065262	160
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_lt_upper_bound	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_upper_bound	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_lower_bound	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_compat_l	40	0.0.2.0.0.0.0.4.0.0.1.1.0.0.2.4	search with cache (only 1: intros; only 1: intuition; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: intro H; only 1: order; only 1: rewrite (div_mod p r)  at 2 by order; only 1: apply le_trans with (r * (p / r)); only 1: apply mul_le_mono_nonneg_r; only 1: apply le_0_l; only 1: auto; only 1: rewrite <- (add_0_r (r * (p / r)))  at 1; only 1: rewrite <- add_le_mono_l; only 1: destruct (mod_bound_pos p r); only 1: auto'; only 1: order; only 1: order).	10.7928128242	10859
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_add	40	5.3.2.0.0.9.1.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with (a / c + b); only 1: apply mod_bound_pos; only 1: auto'; only 1: auto'; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	9.2818031311	10203
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_add	40	6.4.3.3.0.3.0	search with cache (only 1: intros; only 1: apply (mul_cancel_l _ _ c); only 1: auto'; only 1: apply (add_cancel_r _ _ ((a + b * c) mod c)); only 1: rewrite <- div_mod, Private_NZDiv.mod_add by order; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	27.8805029392	31286
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_add_l	40	0.0.11.0	search with cache (only 1: intros; only 1: rewrite (add_comm _ c), (add_comm a); only 1: apply Private_NZDiv.div_add; only 1: auto').	0.181845188141	293
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_cancel_r	40	0.0.0.19.0	search with cache (only 1: intros; only 1: apply div_mul_cancel_r; only 1: auto'; only 1: auto'; only 1: auto').	0.764806985855	2147
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_cancel_l	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_distr_r	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_distr_l	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_mod	40	1.5.0.22.0	search with cache (only 1: intros; only 1: destruct (mod_bound_pos a n); only 1: auto'; only 1: auto'; only 1: now rewrite Private_NZDiv.mod_small_iff).	1.09311199188	4368
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_idemp_l	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_idemp_r	40	0.1.4.0	search with cache (only 1: intros; only 1: rewrite !(mul_comm a); only 1: apply Private_NZDiv.mul_mod_idemp_l; only 1: auto').	0.0137770175934	9
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod	40	0.0.5.3.0	search with cache (only 1: intros; only 1: rewrite Private_NZDiv.mul_mod_idemp_l, Private_NZDiv.mul_mod_idemp_r; only 1: reflexivity; only 1: auto'; only 1: auto').	0.028745174408	59
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.add_mod_idemp_l	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.add_mod_idemp_r	40	0.2.6.0	search with cache (only 1: intros; only 1: rewrite !(add_comm a); only 1: apply Private_NZDiv.add_mod_idemp_l; only 1: auto').	0.0324189662933	59
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.add_mod	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_div	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_mul_r	40	1.2.5.2.4.4.0	search with cache (only 1: intros; only 1: apply add_cancel_l with (b * c * (a / (b * c))); only 1: rewrite <- div_mod by (apply neq_mul_0; split; order); only 1: rewrite <- Private_NZDiv.div_div by trivial; only 1: rewrite add_assoc, add_shuffle0, <- mul_assoc, <- mul_add_distr_l; only 1: rewrite <- div_mod by order; only 1: now apply div_mod).	32.4158680439	30666
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_le	40	0.0.0.5.3.0.4.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto'; only 1: rewrite mul_assoc, (mul_comm b c), <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: auto'; only 1: apply Private_NZDiv.mul_div_le; only 1: auto').	0.384737014771	831
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_divides	40	0.0.5.2.8.8.0.5.3	search with cache (only 1: split; only 1: exists (a / b); only 1: apply Private_NZDiv.div_exact; only 1: auto'; only 1: auto'; only 1: intros (c, Hc); only 1: rewrite Hc, mul_comm; only 1: apply Private_NZDiv.mod_mul; only 1: auto').	5.18288397789	16471
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_succ_0	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_0_succ	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.le_0_l	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.induction	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.case_analysis	40	0.0.0.0.0.0.0	search with cache (only 1: intros A A_wd A0 AS n; only 1: apply right_induction with 0; only 1: assumption; only 1: assumption; only 1: intros; only 1: auto; only 1: apply le_0_l).	0.0123560428619	7
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_0	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_0_r	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.zero_or_succ	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.eq_pred_0	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.succ_pred	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.pred_inj	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.pair_induction	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.two_dim_induction	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.double_induction	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.if_zero_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.if_zero_0	40	0.1.9.3	search with cache (only 1: intros; only 1: unfold if_zero; only 1: rewrite recursion_0; only 1: auto).	0.192231893539	209
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.if_zero_succ	40	1.0.0.2.0.0	search with cache (only 1: unfold if_zero; only 1: intros; only 1: rewrite recursion_succ; only 1: auto; only 1: auto; only 1: f_equiv').	0.0276958942413	9
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_0_l	40	41.0.5	search with cache (only 1: intro H; only 1: unfold def_add; only 1: now rewrite recursion_0).	17.8234419823	28311
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_succ_l	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_add	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_0_r	40	4.3.17	search with cache (only 1: unfold def_mul; only 1: intro y; only 1: now rewrite recursion_0).	0.868825912476	1478
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_succ_r	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_mul	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_base	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_step	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_0	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_0_succ	40	8.3.22.0	search with cache (only 1: intro n; only 1: rewrite ltb_base; only 1: unfold if_zero; only 1: now rewrite recursion_succ).	3.07753491402	6191
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.succ_ltb_mono	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_lt	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_ge	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.even_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.even_0	40	1.31	search with cache (only 1: unfold even; only 1: now rewrite recursion_0).	0.220129966736	551
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.even_succ	40	0.1.1.5.4.1	search with cache (only 1: intros; only 1: unfold even; only 1: rewrite recursion_succ; only 1: f_equiv'; only 1: f_equiv'; only 1: f_equiv').	0.680850982666	506
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_0	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_succ	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_spec	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_spec2	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_0	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_1	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_double	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_upper_bound	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_lower_bound	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_nz	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_decrease	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow_0	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow_succ	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_prewd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_good_step	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_init	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_step	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow2_log	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.square_lt_mono	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.square_le_mono	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_le_mono_l	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_le_mono_r	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_lt_mono	40	0.1.2.0.0.0.1.0.1.3	search with cache (only 1: intros; only 1: apply le_lt_trans with (m * p); only 1: apply mul_le_mono_nonneg_r; only 1: apply le_0_l; only 1: now apply lt_le_incl; only 1: apply -> mul_lt_mono_pos_l; only 1: auto; only 1: apply le_lt_trans with n; only 1: now apply le_0_l; only 1: auto).	4.63051509857	3384
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_le_mono	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.lt_0_mul'	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.eq_mul_1	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow_sub_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow_div_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_proper	40	11.0	search with cache (only 1: intros x x' EQ; only 1: now f_equiv).	0.290580034256	320
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.exists_div2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_0_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_succ_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_spec'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_spec	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_true	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_false	40	1.0.1.0.0.1.0.0	search with cache (only 1: intros a n; only 1: rewrite <- testbit_spec'; only 1: destruct a.[n]; only 1: split; only 1: now try order'; only 1: simpl; only 1: now try order'; only 1: now try order').	0.305105209351	193
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_inj	40	0.0.2	search with cache (only 1: destr_bool; only 1: now try order'; only 1: now try order').	0.0363750457764	30
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_b2n_double_div2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_b2n_double_bit0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_div2	40	0.3.3.0.4.4.6.8	search with cache (only 1: intro H; only 1: apply Private_NZDiv.div_small; only 1: rewrite two_succ; only 1: destruct H; only 1: apply lt_succ_diag_r; only 1: simpl; only 1: apply lt_succ_r; only 1: order').	10.5650529861	9579
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_bit0	40	0.0.2.0.6	search with cache (only 1: intros; only 1: apply b2n_inj; only 1: rewrite testbit_spec'; only 1: nzsimpl; only 1: now rewrite mod_small by (destruct a0; order')).	0.607394933701	139
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_unique	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_0	40	0.0.0.0.0.11.15.1	search with cache (only 1: intros a0; only 1: apply b2n_inj; only 1: rewrite testbit_spec'; only 1: nzsimpl; only 1: simpl; only 1: now try order'; only 1: order'; only 1: order_nz).	3.34659004211	4535
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit0_odd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit0_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit0_mod	40	0.0.0.1.0.0.0.0.0	search with cache (only 1: intros a; only 1: destruct (exists_div2 a) as (a', (b, H)); only 1: rewrite H  at 1; only 1: rewrite testbit_0_r; only 1: apply mod_unique with a'; only 1: destruct b; only 1: order'; only 1: order'; only 1: trivial).	0.0173211097717	10
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_odd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit_log2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_above_log2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_bits	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div_pow2_bits	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.double_bits_succ	40	0.0	search with cache (only 1: intros; only 1: apply testbit_even_succ, le_0_l).	0.00549411773682	2
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mul_pow2_bits_add	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mul_pow2_bits_high	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mul_pow2_bits_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mod_pow2_bits_high	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mod_pow2_bits_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.eqf_equiv	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_eqf	40	1.17.0.4	search with cache (only 1: repeat red; only 1: intros; only 1: do 2 f_equiv; only 1: auto).	35.3909831047	39488
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_inj_0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_inj	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_inj_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.are_bits	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_spec'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_spec_high'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_div_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_mul_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_spec_alt	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_shiftl	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_shiftr	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_shiftl_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_shiftl_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_1_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_0_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_0_r	40	0.0.3.15	search with cache (only 1: intros n; only 1: bitwise; only 1: rewrite shiftr_spec'; only 1: now nzsimpl).	0.84331703186	1171
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_0_l	40	0.5.3	search with cache (only 1: intros a0; only 1: rewrite shiftl_mul_pow2; only 1: now nzsimpl).	0.120745182037	61
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_0_l	40	0.0.0.7.0	search with cache (only 1: intros; only 1: rewrite shiftr_div_pow2; only 1: nzsimpl; only 1: order_nz; only 1: order_nz).	0.14727807045	100
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_eq_0	40	0.0.0.0.5.0	search with cache (only 1: intros; only 1: rewrite shiftr_div_pow2, div_small_iff by order_nz; only 1: apply log2_lt_cancel; only 1: rewrite log2_pow2; only 1: trivial using le_0_l; only 1: trivial using le_0_l).	0.218991041183	103
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_div	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_odd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_wd	40	0.0.0	search with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.0328030586243	3
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_wd	40	0.0.0	search with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.0334792137146	3
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_wd	40	0.0.0	search with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.0388720035553	3
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_eq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_nilpotent	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_0_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_0_r	40	0.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_l).	0.0109531879425	3
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_comm	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_assoc	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_0_l	40	3.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: reflexivity).	0.0623459815979	6
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_0_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_comm	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_assoc	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_diag	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_eq_0_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_0_l	40	0.1.3.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply andb_false_iff; only 1: left; only 1: congruence).	0.0124690532684	9
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_0_r	40	5.5.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply andb_false_iff; only 1: intuition).	0.238842010498	104
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_comm	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_assoc	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_diag	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_0_l	40	0.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: trivial).	0.0107259750366	3
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_0_r	40	5.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_l).	0.0112731456757	8
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_diag	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_land_distr_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_land_distr_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lor_distr_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lor_distr_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ldiff_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_ldiff_and	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_ldiff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_spec'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_spec'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_true	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_false	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_eq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_neq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_eq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_neq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_lxor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_lxor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_land	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_land	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_lor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_lor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_ldiff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_ldiff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_equiv	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_add	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_div_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_mod_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_spec_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_spec_high	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_spec_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_spec_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_spec_high	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_involutive	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_0_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_ones	40	0.4.1.0	search with cache (only 1: intros; only 1: unfold lnot; only 1: bitwise; only 1: apply xorb_nilpotent).	0.012629032135	9
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_ones_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_ones	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_ones_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ones_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ones_r_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ones_l_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_lnot_diag	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_lnot_diag_low	40	0.0.2.1.0.0.1.0.1.0.0.0	search with cache (only 1: intros a n H; only 1: bitwise; only 1: destruct (le_gt_cases n m); only 1: rewrite ones_spec_high, lnot_spec_high, bits_above_log2; only 1: trivial; only 1: now apply lt_le_trans with n; only 1: trivial; only 1: trivial; only 1: rewrite lnot_spec_low, ones_spec_low; only 1: now destruct a.[m]; only 1: trivial; only 1: trivial).	2.02566409111	2475
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lnot_diag	40	0.0.3.2.0.0.6.0.0.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: destruct (le_gt_cases n m); only 1: rewrite lnot_spec_high, ones_spec_high; only 1: now destruct a.[m]; only 1: trivial; only 1: trivial; only 1: rewrite lnot_spec_low, ones_spec_low; only 1: now destruct a.[m]; only 1: trivial; only 1: trivial).	8.76561999321	5518
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lnot_diag_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_lor_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_land_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_land_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_ldiff_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_lnot_lnot	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_lxor_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_lxor_r	40	1.0.2.0	search with cache (only 1: intros a b n; only 1: unfold lnot; only 1: bitwise; only 1: apply xorb_assoc_reverse).	0.0444099903107	46
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_lor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_bits_unique	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_shiftr	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_shiftl	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_lor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_land	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_lxor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_bit0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add3_bit0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add3_bits_div2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_carry_div2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_carry_bits	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_bit1	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.nocarry_equiv	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_nocarry_lxor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_le	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.sub_nocarry_ldiff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_lnot_diag_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_sub_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_nocarry_lt_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_nocarry_mod_lt_pow2	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.divide_add_cancel_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.divide_sub_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_add_mult_diag_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_add_diag_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_sub_diag_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.Bezout_wd	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.bezout_1_gcd	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout_pos_pos	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout_pos	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_mul_mono_l	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_mul_mono_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gauss	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.divide_mul_split	40
Coq.Numbers.Natural.Abstract.NIso.Homomorphism.natural_isomorphism_wd	40
Coq.Numbers.Natural.Abstract.NIso.Homomorphism.natural_isomorphism_0	40
Coq.Numbers.Natural.Abstract.NIso.Homomorphism.natural_isomorphism_succ	40
Coq.Numbers.Natural.Abstract.NIso.Homomorphism.hom_nat_iso	40	0.0.1.0.0.0.0.0.0.2	search with cache (only 1: firstorder; only 1: unfold natural_isomorphism; only 1: now rewrite N1.recursion_0; only 1: unfold natural_isomorphism; only 1: rewrite N1.recursion_succ; only 1: auto with *; only 1: auto with *; only 1: repeat red; only 1: intros; only 1: now f_equiv).	0.203248023987	293
Coq.Numbers.Natural.Abstract.NIso.Inverse.inverse_nat_iso	40
Coq.Numbers.Natural.Abstract.NIso.Isomorphism.iso_nat_iso	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_spec'	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_square	40	1.8.0	search with cache (only 1: intro n; only 1: apply sqrt_square; only 1: apply le_0_l).	0.992451906204	288
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_le_square	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_lt_square	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_le_lin	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_mul_above	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_succ_le	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_succ_or	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.add_sqrt_le	40
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.eq_add_0	40
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.eq_add_succ	40
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.eq_add_1	40
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.succ_add_discr	40	0.3.0.3.4.2.2.7	search with cache (only 1: intro H; only 1: intro n; only 1: nzinduct n; only 1: apply neq_sym; only 1: apply neq_succ_0; only 1: intros; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	20.4992380142	24260
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.add_pred_l	40	3.2.0.2.0.1.0	search with cache (only 1: intros n m; only 1: cases n; only 1: intros H; only 1: exfalso; only 1: now apply H; only 1: intros; only 1: now nzsimpl).	3.56341290474	1404
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.add_pred_r	40	3.8.2.1.0.3.0	search with cache (only 1: intros n m; only 1: cases m; only 1: intro H; only 1: now elim H; only 1: intros; only 1: nzsimpl; only 1: now nzsimpl).	22.7406070232	17946
Coq.Numbers.Natural.Abstract.NParity.NParityProp.odd_pred	40	2.3.0.0.0.1.1	search with cache (only 1: cases ltac:(n); only 1: intro H; only 1: apply eq_iff_eq_true; only 1: intuition; only 1: intros; only 1: rewrite pred_succ; only 1: now rewrite <- negb_odd, odd_succ, negb_even).	1.56248402596	1153
Coq.Numbers.Natural.Abstract.NParity.NParityProp.even_pred	40	4.0.2.0.0.0	search with cache (only 1: intros; only 1: rewrite <- (succ_pred n)  at 2 by trivial; only 1: symmetry; only 1: apply eq_iff_eq_true; only 1: rewrite even_spec, odd_spec; only 1: apply Odd_succ).	0.875836133957	811
Coq.Numbers.Natural.Abstract.NParity.NParityProp.even_sub	40
Coq.Numbers.Natural.Abstract.NParity.NParityProp.odd_sub	40
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.le_add_r	40
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.lt_lt_add_r	40
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.lt_lt_add_l	40
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.add_pos_l	40
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.add_pos_r	40	12.0.6.3.0	search with cache (only 1: intros; only 1: rewrite add_comm; only 1: apply add_pos_nonneg; only 1: trivial; only 1: now apply le_0_l).	27.4545450211	11834
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_succ_r'	40	6.0.0.1	search with cache (only 1: intros; only 1: nzsimpl; only 1: order'; only 1: apply le_0_l).	0.438318014145	110
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_0_l	40	1.1.0.0.0	search with cache (only 1: intros a Ha; only 1: destruct (lt_trichotomy a 0) as [LT| [EQ| GT]]; only 1: now rewrite pow_neg_r; only 1: order; only 1: now apply pow_0_l).	0.0170950889587	7
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_1_l	40	1.0.3.1	search with cache (only 1: intro n; only 1: nzsimpl; only 1: now nzsimpl'; only 1: apply le_0_l).	0.0900230407715	30
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_mul_l	40	0.0.0.2.1.0.0.0.0.0.1.0.0.0.0	search with cache (only 1: intros a b c; only 1: destruct (lt_ge_cases c 0) as [Hc| Hc]; only 1: rewrite !(pow_neg_r _ _ Hc); only 1: now nzsimpl; only 1: apply le_ind with (4 := Hc); only 1: solve_proper; only 1: now nzsimpl; only 1: clear c Hc; only 1: intros c Hc IH; only 1: nzsimpl; only 1: rewrite IH; only 1: apply mul_shuffle1; only 1: trivial; only 1: trivial; only 1: trivial).	4.56336688995	1971
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_mul_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_eq_0	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_nonzero	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_l	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_l	40	0.1.1.5.9	search with cache (only 1: intros n m LE LT; only 1: apply pow_le_mono_l; only 1: split; only 1: apply le_0_l; only 1: assumption).	6.78204298019	7467
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_gt_1	40	2.0.2.11.1.5	search with cache (only 1: intros n m H; only 1: intro H1; only 1: apply pow_gt_1; only 1: order'; only 1: apply neq_0_lt_0; only 1: order').	4.01980304718	6450
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono	40	1.10.1.1.6.3.3	search with cache (only 1: intros; only 1: transitivity (a ^ d); only 1: apply Private_NZPow.pow_le_mono_r; only 1: trivial; only 1: trivial; only 1: apply Private_NZPow.pow_le_mono_l; only 1: trivial).	6.11224079132	9495
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_inj_l	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_inj_r	40	0.22.0.0.2.2.3	search with cache (only 1: intros; only 1: destruct (lt_trichotomy b c) as [LT| [EQ'| GT]]; only 1: assert (a ^ b < a ^ c) by (apply Private_NZPow.pow_lt_mono_r; try split; trivial); only 1: order; only 1: trivial; only 1: assert (a ^ c < a ^ b) by (apply Private_NZPow.pow_lt_mono_r; try split; trivial); only 1: order).	22.7133889198	42281
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_l_iff	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_l_iff	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_r_iff	40	2.0.0.17.3.1	search with cache (only 1: split; only 1: now apply Private_NZPow.pow_lt_mono_r; only 1: destruct (le_gt_cases c b) as [LE| GT]; only 1: assert (a ^ c <= a ^ b) by (apply Private_NZPow.pow_le_mono_r; order'); only 1: order; only 1: eauto).	19.2625370026	19751
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_r_iff	40	0.1.1.6.0.2.3.0.6	search with cache (only 1: split; only 1: intro LE; only 1: apply Private_NZPow.pow_le_mono_r; only 1: order'; only 1: order'; only 1: destruct (le_gt_cases b c) as [LE'| GT]; only 1: trivial; only 1: assert (a ^ c < a ^ b) by (apply Private_NZPow.pow_lt_mono_r; order'); only 1: order).	26.7496700287	18542
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_gt_lin_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_lower	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_upper	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.even_pow	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.odd_pow	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.max_0_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.max_0_r	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.min_0_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.min_0_r	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.succ_max_distr	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.succ_min_distr	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_max_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_max_distr_r	40	5.0.0.0.5.0.0.1.0.1	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?succ_le_mono; only 1: now apply add_le_mono_r; only 1: rewrite 2!max_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?succ_le_mono; only 1: now apply add_le_mono_r).	26.1996560097	7409
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_min_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_min_distr_r	40	1.0.0.1.1.0.0.0.0.1	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_r; only 1: rewrite 2!min_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_r).	6.89926815033	821
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_max_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_max_distr_r	40	0.0.2.0.0.1.0.0.2.0.0.0.0.1	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: order; only 1: now rewrite <- ?succ_le_mono; only 1: apply mul_le_mono_nonneg_r; only 1: apply le_0_l; only 1: now rewrite <- ?succ_le_mono; only 1: rewrite 2!max_l; only 1: order; only 1: now rewrite <- ?succ_le_mono; only 1: apply mul_le_mono_nonneg_r; only 1: apply le_0_l; only 1: now rewrite <- ?succ_le_mono).	19.2059619427	6435
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_min_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_min_distr_r	40	1.0.0.1.1.0.0.0.0.1	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: order; only 1: now apply mul_le_mono_r; only 1: rewrite 2!min_r; only 1: order; only 1: order; only 1: now apply mul_le_mono_r).	6.33399701118	644
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_max_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_max_distr_r	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_min_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_min_distr_r	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec_alt	40	0.0	search with cache (only 1: intros; only 1: reflexivity).	0.00477981567383	2
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec0_wd	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec_wd	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec0_0	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec0_succ	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec_0	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec0_more_steps	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec0_fixpoint	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec_fixpoint	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec_0_any	40	0.1.3.2.0	search with cache (only 1: intros; only 1: rewrite strong_rec_alt, strong_rec0_succ; only 1: apply step_good; only 1: intros m Hm; only 1: destruct (nlt_0_r _ Hm)).	2.01903510094	49
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec_any_fst_arg	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.mod_divide	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_div_mul_exact	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_div_factor	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_div_gcd	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_mod	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_wd	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_equiv1	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_equiv2	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_div_swap	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_l	40	8.3	search with cache (only 1: intros n m; only 1: apply divide_mul_l, divide_refl).	0.544533014297	308
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_r	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_div	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_least	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_comm	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_divide_iff	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_unique	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_unique_alt	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_assoc	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_0_l	40	0.0.1.1.4.2	search with cache (only 1: induct ltac:(n); only 1: unfold lcm; only 1: now nzsimpl; only 1: intros a b; only 1: unfold lcm; only 1: now nzsimpl).	0.27365398407	226
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_0_r	40	1.1.0.1.0.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: order; only 1: apply divide_0_r; only 1: apply divide_refl; only 1: trivial).	0.00727391242981	9
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_1_l	40	0.0.0.0.0.1.7.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: apply le_0_l; only 1: exists n; only 1: now nzsimpl; only 1: exists 1; only 1: now nzsimpl; only 1: trivial using divide_1_l, le_0_1).	0.299665927887	266
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_1_r	40	0.0.0.0.1.0.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: trivial using divide_1_l, le_0_l, divide_refl; only 1: exists 1; only 1: now nzsimpl; only 1: trivial using divide_1_l, le_0_l, divide_refl; only 1: trivial using divide_1_l, le_0_1).	0.0155138969421	8
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_diag	40	3.0.0.0.0.1.0.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: trivial using divide_1_l, le_0_l, divide_refl; only 1: exists 1; only 1: now nzsimpl; only 1: exists 1; only 1: now nzsimpl; only 1: trivial using divide_1_l, le_0_l, divide_refl).	0.322634935379	217
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_eq_0	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_eq_r	40	0.1.0.2.9.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: apply le_0_l; only 1: trivial; only 1: trivial using divide_refl, le_0_l; only 1: trivial using divide_refl, le_0_l).	1.75435400009	1430
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_iff	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_mul_mono_l	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_mul_mono_r	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_1_lcm_mul	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_0_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_succ	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_diag	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_gt	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_assoc	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_succ_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_add	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_eq_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_eq_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_eq_nz	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_add_distr	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_swap	40	3.1.4.1.2	search with cache (only 1: intros n m H; only 1: rewrite add_comm; only 1: symmetry; only 1: rewrite add_comm; only 1: now apply add_sub_assoc).	13.373541832	4004
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_sub_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_0_le	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_add_le	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_sub_le_add_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_sub_le_add_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_sub_lt_add_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_sub_lt_add_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_add_le_sub_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_add_le_sub_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_add_lt_sub_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_add_lt_sub_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_lt	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_le_mono_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_le_mono_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.mul_pred_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.mul_sub_distr_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.mul_sub_distr_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_equiv	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_equiv	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_alt_wd	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_alt_wd	40	0.1.0.5.1	search with cache (only 1: intros x x' Hx y y' Hy; only 1: compute; only 1: setoid_rewrite Hx; only 1: setoid_rewrite Hy; only 1: auto with *).	0.813709974289	203
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_alt_dichotomy	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_dichotomy	40
Coq.Numbers.DecimalZ.of_to	40
Coq.Numbers.DecimalZ.to_of	40
Coq.Numbers.DecimalZ.to_int_inj	40	0.0.4.3	search with cache (only 1: intro E; only 1: assert (E' : Some n = Some n'); only 1: now rewrite <- (Signed.of_to n), <- (Signed.of_to n'), E; only 1: now injection E').	0.0444538593292	35
Coq.Numbers.DecimalZ.to_int_surj	40
Coq.Numbers.DecimalZ.of_int_norm	40	22.0.1.1.1	search with cache (only 1: destruct d; only 1: simpl; only 1: unfold Z.to_int, Z.of_uint; only 1: now induction d; only 1: now induction d).	14.9950881004	14168
Coq.Numbers.DecimalZ.of_inj	40
Coq.Numbers.DecimalZ.of_iff	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_spec_nonneg	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_nonneg	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_unique	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_wd	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_spec_alt	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_unique'	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_pred_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_le_mono	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_lt_cancel	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_le_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_lt_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_0	40	0.10.13	search with cache (only 1: apply sqrt_unique' with 0; only 1: now nzsimpl; only 1: now nzsimpl).	0.457870960236	896
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_1	40	0.3.9.3.9.9.3.2.2.28	search with cache (only 1: apply sqrt_unique; only 1: split; only 1: now nzsimpl'; only 1: rewrite one_succ; only 1: nzsimpl; only 1: apply lt_succ_r; only 1: apply lt_le_incl; only 1: apply lt_succ_r; only 1: apply lt_le_incl; only 1: apply lt_succ_diag_r).	37.0942080021	17208
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_2	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_pos	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_lt_lin	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_le_lin	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_mul_below	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_mul_above	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_succ_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_succ_or	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_eq_succ_iff_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_add_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.add_sqrt_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_eqn0	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_eqn	40	0.2.1.4.14.0	search with cache (only 1: intros a Ha; only 1: unfold sqrt_up; only 1: case compare_spec; only 1: order; only 1: order; only 1: order).	1.29626488686	1595
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_spec	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_nonneg	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_wd	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_unique	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_succ_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_0	40	2.1.0.1	search with cache (only 1: rewrite sqrt_up_eqn0; only 1: rewrite <- (mul_0_l 0)  at 1; only 1: now nzsimpl; only 1: order').	0.0615770816803	39
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_1	40	4.2.0.13.2.0	search with cache (only 1: rewrite <- (mul_1_l 1)  at 1; only 1: rewrite <- (mul_1_l 1)  at 1; only 1: nzsimpl'; only 1: rewrite <- (mul_0_l 0)  at 1; only 1: rewrite sqrt_up_eqn by now apply lt_succ_r, mul_nonneg_nonneg; only 1: now rewrite pred_succ, sqrt_square).	14.6315062046	8762
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_2	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.le_sqrt_sqrt_up	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.le_sqrt_up_succ_sqrt	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_sqrt_up_spec	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_sqrt_up_exact	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_mono	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_lt_cancel	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_lt_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_pos	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_lt_lin	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_lin	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_mul_above	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_mul_below	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_succ_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_succ_or	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_eq_succ_iff_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_add_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.add_sqrt_up_le	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mod_unique	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_unique	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_unique	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_unique_exact	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_same	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_same	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_small	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_small	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_0_l	40	0.1.1.2.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique_exact; only 1: intuition; only 1: order; only 1: now nzsimpl).	0.0365879535675	43
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_0_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_1_r	40	0.0.0.0.0.11.2.3	search with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique_exact; only 1: order; only 1: rewrite one_succ; only 1: apply lt_succ_diag_r; only 1: nzsimpl; only 1: order).	1.52468514442	2003
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_1_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_1_l	40	1.0.0.1	search with cache (only 1: intros; only 1: apply div_small; only 1: intuition; only 1: apply lt_le_incl, lt_0_1).	0.00736904144287	6
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_1_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_mul	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_le	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_pos	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_str_pos	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_small_iff	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_small_iff	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_str_pos_iff	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_lt	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_mono	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_div_le	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_succ_div_gt	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_exact	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_lt_upper_bound	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_upper_bound	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_lower_bound	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_compat_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_add	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_add	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_add_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul_cancel_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul_cancel_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_distr_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_distr_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_mod	40	0.0.0.12.0.0.1.1	search with cache (only 1: intros a b Ha Hb; only 1: destruct (mod_bound_pos a b); only 1: order; only 1: order; only 1: apply mod_small; only 1: split; only 1: auto; only 1: auto).	7.45750498772	9583
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_idemp_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_idemp_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.add_mod_idemp_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.add_mod_idemp_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.add_mod	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_div	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_mul_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul_le	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_divides	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_0_r	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_succ_r	40	1.0.0.0.14.3	search with cache (only 1: intros; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	3.3877799511	4018
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_succ_comm	40	1.0.0.0.0.1	search with cache (only 1: intros n m; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.0985538959503	8
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_comm	40	1.0.0.0.0.2	search with cache (only 1: intros n m; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.108993053436	21
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_1_l	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_1_r	40	0.0	search with cache (only 1: intro n; only 1: now nzsimpl').	0.0155401229858	2
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_assoc	40	0.0.0.0.0.3.0	search with cache (only 1: intros n m; only 1: intro; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.0639820098877	18
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_cancel_l	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_cancel_r	40	0.0.0.0.0.0	search with cache (only 1: intros; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.0472159385681	6
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle0	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle1	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle2	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle3	40	0.0.0.0.1.1	search with cache (only 1: intros n m p; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.0788040161133	8
Coq.Numbers.NatInt.NZAdd.NZAddProp.sub_1_r	40	3.8	search with cache (only 1: intros; only 1: now nzsimpl').	0.111479997635	77
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_wd	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_le_incl	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_refl	40	11.0.0	search with cache (only 1: intros; only 1: apply lt_eq_cases; only 1: intuition).	0.287047147751	277
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_succ_diag_r	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_diag_r	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.neq_succ_diag_l	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.neq_succ_diag_r	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nlt_succ_diag_l	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nle_succ_diag_l	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_l	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_gt_cases	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_trichotomy	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_asymm	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_trans	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_trans	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_strorder	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_preorder	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_partialorder	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_neq	40	1.0.0.5	search with cache (only 1: intros n m; only 1: intros LT EQ; only 1: rewrite EQ in LT; only 1: false_hyp LT lt_irrefl).	0.219377994537	22
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_neq	40	8.4.0.0.4.1	search with cache (only 1: intros; only 1: intuition; only 1: apply lt_eq_cases; only 1: now left; only 1: order; only 1: order).	4.02868294716	4237
Coq.Numbers.NatInt.NZOrder.NZOrderProp.eq_le_incl	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_stepl	40	1.0	search with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0204110145569	3
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_stepr	40	1.0	search with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0224659442902	3
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_stepl	40	1.0	search with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.019984960556	3
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_stepr	40	2.0	search with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0216748714447	4
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_lt_trans	40	9.0	search with cache (only 1: intros; only 1: order).	0.0302441120148	44
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_le_trans	40	1	search with cache (only 1: order).	0.0215458869934	19
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_antisymm	40	1	search with cache (only 1: order).	0.0113768577576	7
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_r	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_succ_l	40	0.7.3.1	search with cache (only 1: intros n H; only 1: intros; only 1: apply le_succ_l; only 1: now apply lt_le_incl).	0.4434030056	689
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_le_succ_r	40	6.4.0.5.1	search with cache (only 1: intros n H; only 1: intros; only 1: apply lt_le_incl; only 1: rewrite lt_succ_r; only 1: order).	1.32060885429	1745
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_lt_succ_r	40	3.0.3.0.2.0	search with cache (only 1: intro n; only 1: intro p; only 1: rewrite lt_succ_r; only 1: intro H; only 1: apply lt_eq_cases; only 1: auto with relations).	0.377527952194	419
Coq.Numbers.NatInt.NZOrder.NZOrderProp.succ_lt_mono	40	8.0.8.0.1.0.0	search with cache (only 1: intro n; only 1: intro p; only 1: split; only 1: rewrite lt_succ_r; only 1: apply le_succ_l; only 1: rewrite lt_succ_r; only 1: apply le_succ_l).	11.630243063	14835
Coq.Numbers.NatInt.NZOrder.NZOrderProp.succ_le_mono	40	5.2.6.0.2.0	search with cache (only 1: intro n; only 1: intro m; only 1: symmetry; only 1: rewrite lt_eq_cases; only 1: rewrite lt_succ_r, le_succ_l, !lt_eq_cases; only 1: now rewrite succ_inj_wd).	6.01467108727	9505
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_0_1	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_0_1	40	0.0.3	search with cache (only 1: rewrite one_succ; only 1: apply lt_le_incl; only 1: apply lt_succ_diag_r).	0.0188128948212	6
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_1_2	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_0_2	40	0.7.1	search with cache (only 1: rewrite two_succ; only 1: rewrite lt_succ_r; only 1: apply lt_le_incl, lt_0_1).	0.0512452125549	42
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_0_2	40	0.1.3.0.4	search with cache (only 1: transitivity 1; only 1: apply lt_le_incl, lt_0_1; only 1: rewrite two_succ; only 1: apply lt_le_incl; only 1: apply lt_succ_diag_r).	0.0673251152039	83
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_1_l	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_ge_cases	40	0.0.1.0.3.1	search with cache (only 1: intro n; only 1: nzinduct m n; only 1: now right; only 1: intro m; only 1: rewrite lt_succ_r, le_succ_l, !lt_eq_cases; only 1: intuition).	0.36069393158	134
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_ge_cases	40	0.5.3.1	search with cache (only 1: intros n m; only 1: destruct (le_gt_cases m n); only 1: intuition order; only 1: intuition order).	0.477967023849	242
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_gt_cases	40	3.2.9.12.0	search with cache (only 1: intros; only 1: split; only 1: generalize (le_gt_cases n m); only 1: intuition order; only 1: intuition order).	6.30591416359	6030
Coq.Numbers.NatInt.NZOrder.NZOrderProp.eq_decidable	40	3.0.12.4.2	search with cache (only 1: unfold decidable; only 1: intros n m; only 1: generalize (le_gt_cases n m); only 1: rewrite lt_eq_cases; only 1: intuition order).	0.877878904343	1080
Coq.Numbers.NatInt.NZOrder.NZOrderProp.eq_dne	40	0.3.1.1	search with cache (only 1: intros; only 1: destruct (lt_trichotomy n m); only 1: intuition order; only 1: intuition order).	0.0306429862976	12
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_ngt	40	2.4.1	search with cache (only 1: intro n; only 1: intros; only 1: intuition order).	0.0521841049194	26
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nlt_ge	40	0	search with cache (only 1: intuition order).	0.0137431621552	1
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_decidable	40	2.0.2.3.3	search with cache (only 1: intros n m; only 1: destruct (lt_trichotomy n m) as [| [| ]]; only 1: (right; order) || (left; order); only 1: (right; order) || (left; order); only 1: (right; order) || (left; order)).	0.547055006027	579
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_dne	40	0.2.13.1	search with cache (only 1: intros n m; only 1: destruct (lt_trichotomy n m); only 1: intuition order; only 1: intuition order).	3.95200300217	6018
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nle_gt	40	1	search with cache (only 1: intuition order).	0.0144400596619	2
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_nge	40	0	search with cache (only 1: intuition order).	0.0817530155182	1
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_decidable	40	0.1.0.0.3	search with cache (only 1: unfold decidable; only 1: intros n m; only 1: destruct (le_gt_cases n m); only 1: intuition order; only 1: intuition order).	0.116055965424	89
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_dne	40	0.0.2.6.0	search with cache (only 1: intros n m; only 1: rewrite lt_eq_cases; only 1: destruct (lt_trichotomy n m); only 1: intuition order; only 1: intuition order).	0.542566776276	292
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nlt_succ_r	40	0.2.0.2.0.0	search with cache (only 1: intros; only 1: split; only 1: rewrite lt_succ_r; only 1: order; only 1: rewrite lt_succ_r; only 1: order).	0.0275411605835	10
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_exists_pred_strong	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_exists_pred	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_succ_pred	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.rs_rs'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.rs'_rs''	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.rbase	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.A'A_right	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.strong_right_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.right_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.right_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.strong_right_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.ls_ls'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.ls'_ls''	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lbase	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.A'A_left	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.strong_left_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.left_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.left_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.strong_left_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.order_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.order_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_ind	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_ind	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Rlt_wd	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Rgt_wd	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_wf	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.gt_wf	40
Coq.Numbers.NatInt.NZDomain.nat_rect_wd	40	1.3.0.1.9.4	search with cache (only 1: intros x y z H1 H2; only 1: induction n; only 1: intros n; only 1: assumption; only 1: simpl; only 1: auto).	8.92776107788	1290
Coq.Numbers.NatInt.NZDomain.NZDomainProp.itersucc_or_itersucc	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.succ_swap_pred	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.itersucc_or_iterpred	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.itersucc0_or_iterpred0	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.initial_alt	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.initial_alt2	40	34.1.34.1.1	search with cache (only 1: split; only 1: intros Bn EQ; only 1: firstorder; only 1: intros Bn EQ; only 1: firstorder).	20.1107330322	121102
Coq.Numbers.NatInt.NZDomain.NZDomainProp.initial_unique	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.initial_ancestor	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.succ_pred_approx	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.succ_onto_gives_succ_pred	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.succ_onto_pred_injective	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.bi_induction_pred	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.central_induction_pred	40
Coq.Numbers.NatInt.NZDomain.NZOfNat.ofnat_zero	40	25	search with cache (only 1: now PeanoNat.Nat.nzsimpl).	0.0399160385132	306
Coq.Numbers.NatInt.NZDomain.NZOfNat.ofnat_succ	40	3.1	search with cache (only 1: intros a; only 1: reflexivity).	0.00742387771606	6
Coq.Numbers.NatInt.NZDomain.NZOfNat.ofnat_pred	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_S_gt_0	40	0.19	search with cache (only 1: fix le_div2 1; only 1: now unfold ofnat).	2.22559905052	2866
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_S_neq_0	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_injective	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_eq	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_lt	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_le	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_add_l	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_add	40	3.0.0.0.0.7.4.1.2	search with cache (only 1: induction n as [| n IHn]; only 1: simpl; only 1: intros; only 1: symmetry; only 1: apply add_0_l; only 1: intros; only 1: rewrite ofnat_succ, add_succ_l; only 1: simpl; only 1: now f_equiv).	3.54204511642	3799
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_mul	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_sub_r	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_sub	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_0_l	40	1.10.21.6	search with cache (only 1: intros; only 1: destruct (lt_exists_pred _ _ H) as (n', (EQ, LE)); only 1: rewrite EQ; only 1: now nzsimpl).	39.2601680756	19926
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_0_l'	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_1_r	40	3.3	search with cache (only 1: intro n; only 1: now nzsimpl').	0.0511500835419	8
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_1_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_2_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_eq_0	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_nonzero	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_eq_0_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_add_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_mul_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_mul_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_nonneg	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_pos_nonneg	40	0.0.1.0.0.1.1.0.8.5	search with cache (only 1: intros a b c Hb; only 1: apply le_ind with (4 := Hb); only 1: solve_proper; only 1: rewrite pow_0_r; only 1: apply lt_0_1; only 1: clear b Hb; only 1: intros b Hb IH; only 1: nzsimpl; only 1: now apply mul_pos_pos; only 1: order).	30.2539231777	7402
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_gt_1	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_inj_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_inj_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_l_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_l_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_r_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_r_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_gt_lin_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_add_lower	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_add_upper	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_wd	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_1_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_0_r	40	0.18.10	search with cache (only 1: unfold divide; only 1: exists 0; only 1: now nzsimpl).	14.7112548351	7760
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_0_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.eq_mul_1_nonneg	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.eq_mul_1_nonneg'	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_1_r_nonneg	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_refl	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_trans	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_antisym_nonneg	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_mono_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_mono_r	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_cancel_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_cancel_r	40	2.0.10.0.0.0.4.2.7.1	search with cache (only 1: intros n m; only 1: intro; only 1: rewrite <- (mul_0_r n)  at 1; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: split; only 1: intros (q, Hq); only 1: exists q; only 1: rewrite mul_0_r in H; only 1: now rewrite mul_shuffle3, mul_cancel_l in Hq; only 1: apply mul_divide_mono_l).	29.4016900063	22462
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_add_r	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_mul_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_mul_r	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_factor_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_factor_r	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_pos_le	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_unique	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_wd	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_divide_iff	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_unique_alt	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_comm	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_assoc	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_0_l_nonneg	40	2.3.2.7.1.9.4	search with cache (only 1: intros x y; only 1: apply gcd_unique; only 1: order; only 1: exists 0; only 1: now nzsimpl; only 1: reflexivity; only 1: trivial).	0.758805036545	1892
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_0_r_nonneg	40	0.1.1.0.0.0	search with cache (only 1: intros; only 1: apply gcd_unique; only 1: trivial; only 1: apply divide_refl; only 1: apply divide_0_r; only 1: trivial).	0.00686621665955	8
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_1_l	40	8.0.0.0.10.0.4.0	search with cache (only 1: intros; only 1: apply gcd_unique; only 1: apply lt_le_incl, lt_0_1; only 1: exists 1; only 1: now nzsimpl; only 1: exists n; only 1: now nzsimpl; only 1: trivial).	14.6877019405	17865
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_1_r	40	1.0.0.0.0.0.0	search with cache (only 1: intros; only 1: apply gcd_unique; only 1: apply lt_le_incl, lt_0_1; only 1: exists n; only 1: now nzsimpl; only 1: trivial using divide_1_l, le_0_1; only 1: trivial using divide_1_l, le_0_1).	0.0145359039307	8
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_diag_nonneg	40	0.1.1.0.0.0	search with cache (only 1: intros; only 1: apply gcd_unique; only 1: trivial; only 1: apply divide_refl; only 1: apply divide_refl; only 1: trivial).	0.00641798973083	8
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_eq_0_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_eq_0_r	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_eq_0	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_mul_diag_l	40	0.2.0.0.1.0	search with cache (only 1: intros; only 1: apply gcd_unique; only 1: trivial; only 1: trivial using divide_refl; only 1: apply divide_mul_l, divide_refl; only 1: trivial using divide_refl).	0.00942611694336	9
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_gcd_iff	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_wd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Odd_wd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_wd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_wd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_or_Odd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.double_below	40
Coq.Numbers.NatInt.NZParity.NZParityProp.double_above	40	0.0.1.0.0.0	search with cache (only 1: intros n m; only 1: rewrite <- le_succ_l, (mul_le_mono_pos_l (S n) m 2); only 1: rewrite two_succ; only 1: nzsimpl; only 1: now rewrite le_succ_l; only 1: order').	0.11740899086	7
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_Odd_False	40
Coq.Numbers.NatInt.NZParity.NZParityProp.orb_even_odd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.negb_odd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.negb_even	40	0.0.0.0.0.0.0.0.0.0.1.0	search with cache (only 1: intros; only 1: generalize (Even_or_Odd n), (Even_Odd_False n); only 1: rewrite <- even_spec, <- odd_spec; only 1: destruct (odd n), (even n); only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).	1.11837911606	606
Coq.Numbers.NatInt.NZParity.NZParityProp.even_0	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_0	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_1	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_1	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_2	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_2	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Odd_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_succ_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Odd_succ_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_succ_succ	40	0.4.0	search with cache (only 1: intros; only 1: rewrite eq_iff_eq_true, 2!even_spec; only 1: now rewrite Even_succ, Odd_succ).	0.170094013214	67
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_succ_succ	40	0.5.0	search with cache (only 1: intros; only 1: rewrite eq_iff_eq_true, 2!odd_spec; only 1: now rewrite Odd_succ, Even_succ).	0.0278899669647	27
Coq.Numbers.NatInt.NZParity.NZParityProp.even_add	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_mul	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_mul	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_even	40	2.2.4.0	search with cache (only 1: intros; only 1: rewrite even_add; only 1: rewrite <- even_spec in H; only 1: now destruct (even n), (even m)).	2.49914503098	719
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add_even	40	2.1.0.0.0	search with cache (only 1: intros; only 1: rewrite <- !negb_even; only 1: rewrite even_add; only 1: rewrite <- even_spec in H; only 1: now destruct (even n), (even m)).	0.0476529598236	22
Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_mul_even	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add_mul_even	40	2.1.2.1.2.1	search with cache (only 1: intros; only 1: rewrite <- !negb_even; only 1: rewrite even_add; only 1: rewrite even_mul; only 1: rewrite <- even_spec in H; only 1: now destruct (even n), (even m)).	4.85741710663	2137
Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_mul_2	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add_mul_2	40	0.1.0.0.3.1	search with cache (only 1: intros; only 1: nzsimpl'; only 1: rewrite <- !negb_even; only 1: rewrite even_add; only 1: rewrite even_add; only 1: now destruct (even n), (even m)).	0.513761997223	113
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_mono_l	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_mono_r	40	0.0.0.0.0.0	search with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite <- succ_lt_mono).	0.06072306633	6
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_mono	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_mono_l	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_mono_r	40	0.0.0.0.0.0	search with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite <- succ_le_mono).	0.096626996994	6
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_mono	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_le_mono	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_lt_mono	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_pos_pos	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_pos_nonneg	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonneg_pos	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonneg_nonneg	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_add_pos_l	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_add_pos_r	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_lt_add_lt	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_le_add_lt	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_le_add_le	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_cases	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_cases	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_neg_cases	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_pos_cases	40	0.0.0	search with cache (only 1: intros n m H; only 1: apply add_lt_cases; only 1: now nzsimpl).	0.0152771472931	3
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonpos_cases	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonneg_cases	40	0.0.0	search with cache (only 1: intros n m H; only 1: apply add_le_cases; only 1: now nzsimpl).	0.0151259899139	3
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_exists_sub	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_0_r	40	0.0.1.0.0.3	search with cache (only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: split; only 1: now nzsimpl; only 1: now nzsimpl).	0.299769163132	42
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_succ_r	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_comm	40	0.1.0.0.0.3	search with cache (only 1: intros n m; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro n; only 1: nzsimpl; only 1: now rewrite add_cancel_r).	0.317574977875	79
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_add_distr_r	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_add_distr_l	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_assoc	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_1_l	40	2.4	search with cache (only 1: intro n; only 1: now nzsimpl').	0.378598928452	48
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_1_r	40	0.0	search with cache (only 1: intro n; only 1: now nzsimpl').	0.0217230319977	2
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle0	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle1	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle2	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle3	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_nonneg	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_unique	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_wd	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_spec_alt	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_unique'	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pred_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_1	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_2	40	0.2.7.1.0.4.5.0	search with cache (only 1: rewrite <- (pow_0_r 2); only 1: apply log2_unique' with 0; only 1: nzsimpl; only 1: apply lt_le_incl, lt_0_1; only 1: split; only 1: order; only 1: order_pos; only 1: now nzsimpl).	8.76578092575	6274
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pos	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_null	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_le_mono	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_lt_cancel	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_le_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_lt_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_lt_lin	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_le_lin	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_mul_below	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_mul_above	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_mul_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_double	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_same	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_succ_le	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_succ_or	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_eq_succ_is_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_eq_succ_iff_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_succ_double	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_add_le	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.add_log2_lt	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eqn0	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eqn	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_spec	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_nonpos	40	1.1.0.0.0.0	search with cache (only 1: intros a Ha; only 1: unfold log2_up; only 1: case compare_spec; only 1: order'; only 1: order'; only 1: order).	0.0202610492706	8
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_wd	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_nonneg	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_unique	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_1	40	3.0.1.1.1	search with cache (only 1: unfold log2_up; only 1: case compare_spec; only 1: order; only 1: order; only 1: order).	0.512517929077	131
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.le_log2_log2_up	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.le_log2_up_succ_log2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_log2_up_spec	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_log2_up_exact	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_pos	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_null	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_le_mono	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_lt_cancel	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_lt_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_le_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_lt_lin	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_le_lin	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_mul_above	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_mul_below	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_mul_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_double	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_same	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_le	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_or	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eq_succ_is_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eq_succ_iff_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_double	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_add_le	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.add_log2_up_lt	40
Coq.Numbers.NatInt.NZBase.NZBaseProp.eq_sym_iff	40	1.1.0.0.0.0.0.0	search with cache (only 1: split; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: firstorder; only 1: firstorder).	0.0234768390656	18
Coq.Numbers.NatInt.NZBase.NZBaseProp.neq_sym	40	3.0	search with cache (only 1: intros; only 1: firstorder).	0.0117979049683	5
Coq.Numbers.NatInt.NZBase.NZBaseProp.eq_stepl	40
Coq.Numbers.NatInt.NZBase.NZBaseProp.succ_inj	40
Coq.Numbers.NatInt.NZBase.NZBaseProp.succ_inj_wd	40
Coq.Numbers.NatInt.NZBase.NZBaseProp.succ_inj_wd_neg	40	9.8.4.1.22.2.10	search with cache (only 1: intro A; only 1: intros; only 1: apply imp_iff_compat_r; only 1: split; only 1: apply succ_inj; only 1: simpl_relation; only 1: now f_equiv).	15.9875280857	29964
Coq.Numbers.NatInt.NZBase.NZBaseProp.central_induction	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_pred	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_pos_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_pos_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_neg_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_neg_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonneg_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonpos_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonneg_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonpos_r	40	0.1.0.0.0.1.0.0.1.0.0	search with cache (only 1: intros n m p H1 H2; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: le_elim H1; only 1: le_elim H2; only 1: apply lt_le_incl; only 1: now apply mul_lt_mono_neg_l; only 1: apply eq_le_incl; only 1: now rewrite H2; only 1: apply eq_le_incl; only 1: rewrite H1; only 1: now do 2 rewrite mul_0_l).	0.166177034378	88
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_cancel_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_cancel_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_id_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_id_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_pos_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_pos_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_neg_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_neg_r	40	0.0.1.1.0.1.1	search with cache (only 1: intros n m p H; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: do 2 rewrite lt_eq_cases; only 1: rewrite (mul_lt_mono_neg_l p n m); only 1: rewrite (mul_cancel_l m n p) by (intro H1; rewrite H1 in H; false_hyp H lt_irrefl); only 1: now setoid_replace n == m with m == n by split; now intro; only 1: assumption).	0.406088829041	81
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_pos	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_neg_neg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_neg	40	1.0.0	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (mul_0_l m); only 1: now apply mul_lt_mono_neg_r).	0.0145230293274	4
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_neg_pos	40	1.0.0	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (mul_0_l m); only 1: now apply mul_lt_mono_pos_r).	0.0157630443573	4
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_cancel_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_cancel_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_cancel_l	40	0.4.0.0.1	search with cache (only 1: intros n m p; only 1: rewrite <- (mul_0_r n)  at 1; only 1: symmetry; only 1: apply mul_le_mono_pos_l; only 1: assumption).	0.118960857391	28
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_cancel_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.lt_1_mul_pos	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_mul_0	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.neq_mul_0	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_square_0	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_mul_0_l	40	2.5.4.7	search with cache (only 1: intro n; only 1: intro H1; only 1: rewrite eq_mul_0; only 1: tauto).	1.56032395363	2440
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_mul_0_r	40	0.1.0.0.0	search with cache (only 1: intros n m H1 H2; only 1: apply eq_mul_0 in H1; only 1: destruct H1 as [H1| H1]; only 1: false_hyp H1 H2; only 1: assumption).	0.00734496116638	6
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.lt_0_mul	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_lt_mono_nonneg	40	5.2	search with cache (only 1: intros n m H1 H2; only 1: now apply mul_lt_mono_nonneg).	0.0304758548737	20
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_le_mono_nonneg	40	0.0.0.0.1.2	search with cache (only 1: intros; only 1: apply mul_le_mono_nonneg; only 1: order; only 1: order; only 1: order; only 1: order).	0.00863695144653	9
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_lt_simpl_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_le_simpl_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_2_mono_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.add_le_mul	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.crossmul_le_addsquare	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.add_square_le	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_add_le	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.quadmul_le_squareadd	40
Coq.Structures.OrdersTac.OrderFacts.eq_refl	40	3.0	search with cache (only 1: Bool.destr_bool; only 1: firstorder).	0.00640797615051	5
Coq.Structures.OrdersTac.OrderFacts.le_refl	40
Coq.Structures.OrdersTac.OrderFacts.lt_irrefl	40
Coq.Structures.OrdersTac.OrderFacts.eq_sym	40	4.2.1	search with cache (only 1: intros; only 1: symmetry; only 1: firstorder).	0.00833702087402	12
Coq.Structures.OrdersTac.OrderFacts.le_antisym	40
Coq.Structures.OrdersTac.OrderFacts.neq_sym	40	0	search with cache (only 1: auto with *).	0.00638318061829	1
Coq.Structures.OrdersTac.OrderFacts.trans	40
Coq.Structures.OrdersTac.OrderFacts.eq_neq	40
Coq.Structures.OrdersTac.OrderFacts.neq_eq	40	1	search with cache (only 1: eauto using eq_trans, eq_sym).	0.0105860233307	2
Coq.Structures.OrdersTac.OrderFacts.not_neq_eq	40
Coq.Structures.OrdersTac.OrderFacts.not_ge_lt	40
Coq.Structures.OrdersTac.OrderFacts.not_gt_le	40	0.1.0.1.0.0	search with cache (only 1: intros; only 1: destruct (P.lt_total x y); only 1: rewrite ?P.le_lteq; only 1: intuition; only 1: rewrite P.le_lteq; only 1: intuition).	0.0579218864441	76
Coq.Structures.OrdersTac.OrderFacts.le_neq_lt	40	2.0.0.3.0	search with cache (only 1: intros x y; only 1: rewrite ?P.le_lteq; only 1: generalize (P.lt_total x y); only 1: generalize (P.lt_total x y); only 1: intuition).	0.0370998382568	27
Coq.Structures.OrdersEx.PairOrderedType.lt_strorder	40
Coq.Structures.OrdersEx.PairOrderedType.lt_compat	40	1.16.0	search with cache (only 1: repeat red; only 1: fix gcd_divide 1; only 1: firstorder).	14.7606041431	4808
Coq.Structures.OrdersEx.PairOrderedType.compare_spec	40
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.bits_lt_antirefl	40	2.0.13	search with cache (only 1: fix sqrtrem_spec 1; only 1: intros; only 1: auto).	0.480721950531	540
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.bits_lt_trans	40
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.lt_compat	40	7	search with cache (only 1: intuition).	0.169900894165	62
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.lt_strorder	40
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.compare_spec	40	2.7	search with cache (only 1: fix sqrtrem_spec 1; only 1: eauto).	0.207715034485	108
Coq.Structures.OrderedTypeEx.Nat_as_OT.lt_trans	40	0.0.3.17	search with cache (only 1: intros x y H; only 1: transitivity y; only 1: auto; only 1: auto).	0.51825094223	515
Coq.Structures.OrderedTypeEx.Nat_as_OT.lt_not_eq	40	24.0.14.0	search with cache (only 1: unfold lt; only 1: intro a; only 1: intros; only 1: Nat.order).	34.9492537975	62537
Coq.Structures.OrderedTypeEx.Nat_as_OT.compare	40
Coq.Structures.OrderedTypeEx.Z_as_OT.lt_trans	40	2.0	search with cache (only 1: intros x y z; only 1: intuition auto; Z.Private_Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0471661090851	4
Coq.Structures.OrderedTypeEx.Z_as_OT.lt_not_eq	40	0	search with cache (only 1: Z.order).	0.0424249172211	1
Coq.Structures.OrderedTypeEx.Z_as_OT.compare	40
Coq.Structures.OrderedTypeEx.Positive_as_OT.lt_not_eq	40
Coq.Structures.OrderedTypeEx.Positive_as_OT.compare	40
Coq.Structures.OrderedTypeEx.N_as_OT.compare	40
Coq.Structures.OrderedTypeEx.PairOrderedType.eq_refl	40	0.0.12.1	search with cache (only 1: intros; only 1: split; only 1: auto with ordered_type; only 1: auto with ordered_type).	0.39458990097	303
Coq.Structures.OrderedTypeEx.PairOrderedType.eq_sym	40	1.22.14	search with cache (only 1: red; only 1: intros a b (Hb, Hab); only 1: auto with ordered_type).	6.94896578789	15298
Coq.Structures.OrderedTypeEx.PairOrderedType.eq_trans	40
Coq.Structures.OrderedTypeEx.PairOrderedType.lt_trans	40	1.7.2	search with cache (only 1: intros (x1, x2) (y1, y2) (z1, z2); only 1: vm_compute; only 1: intuition eauto with ordered_type).	0.605543851852	383
Coq.Structures.OrderedTypeEx.PairOrderedType.lt_not_eq	40
Coq.Structures.OrderedTypeEx.PairOrderedType.compare	40
Coq.Structures.OrderedTypeEx.PairOrderedType.eq_dec	40
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.bits_lt_trans	40
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.lt_trans	40
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.bits_lt_antirefl	40	0.0.0.0.3.0.7.0	search with cache (only 1: induction x; only 1: intros H; only 1: eauto; only 1: intros H; only 1: eauto; only 1: simpl; only 1: intro; only 1: eauto).	0.376157045364	596
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.lt_not_eq	40
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.compare	40
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.eq_dec	40	0	search with cache (only 1: decide equality).	0.0545468330383	1
Coq.Structures.OrderedTypeEx.String_as_OT.nat_of_ascii_inverse	40
Coq.Structures.OrderedTypeEx.String_as_OT.lts_tail_unique	40	13.3.26.21	search with cache (only 1: intros; only 1: inversion H; only 1: trivial; only 1: Nat.order).	13.7674190998	13181
Coq.Structures.OrderedTypeEx.String_as_OT.lt_trans	40
Coq.Structures.OrderedTypeEx.String_as_OT.lt_not_eq	40
Coq.Structures.OrderedTypeEx.String_as_OT.compare	40
Coq.Structures.Orders.Compare2EqBool.eqb_eq	40
Coq.Structures.Orders.OT_to_Full.le_lteq	40	2.0	search with cache (only 1: intros; only 1: firstorder).	0.00716280937195	4
Coq.Structures.Orders.OTF_LtIsTotal.lt_total	40
Coq.Structures.Orders.OTF_to_TTLB.leb_le	40
Coq.Structures.Orders.OTF_to_TTLB.leb_total	40
Coq.Structures.Orders.OTF_to_TTLB.leb_trans	40
Coq.Structures.Orders.TTLB_to_OTF.compare_spec	40
Coq.Structures.Orders.TTLB_to_OTF.eqb_eq	40
Coq.Structures.Orders.TTLB_to_OTF.eq_equiv	40
Coq.Structures.Orders.TTLB_to_OTF.lt_strorder	40
Coq.Structures.Orders.TTLB_to_OTF.lt_compat	40
Coq.Structures.Orders.TTLB_to_OTF.le_lteq	40	0.1.3.2.1.3.0	search with cache (only 1: intros; only 1: unfold eq, lt, le in *; only 1: case leb; only 1: case leb; only 1: intuition; only 1: intuition; only 1: intuition).	6.96686291695	3853
Coq.Structures.DecidableTypeEx.PairDecidableType.eq_refl	40	2.3.1.1	search with cache (only 1: induction x; only 1: constructor; only 1: auto; only 1: auto).	0.0558009147644	38
Coq.Structures.DecidableTypeEx.PairDecidableType.eq_sym	40	3.8.0.12.0.3	search with cache (only 1: induction x; only 1: intros (x1, x2); only 1: intro H; only 1: red; only 1: inversion H; only 1: auto).	10.1740391254	11547
Coq.Structures.DecidableTypeEx.PairDecidableType.eq_trans	40
Coq.Structures.DecidableTypeEx.PairDecidableType.eq_dec	40
Coq.Structures.DecidableTypeEx.PairUsualDecidableType.eq_dec	40
Coq.Structures.Equalities.UpdateEq.eq_equiv	40
Coq.Structures.Equalities.HasEqDec2Bool.eqb_eq	40
Coq.Structures.Equalities.HasEqBool2Dec.eq_dec	40
Coq.Structures.Equalities.BoolEqualityFacts.eqb_compat	40
Coq.Structures.Equalities.BoolEqualityFacts.eqb_spec	40
Coq.Structures.Equalities.BoolEqualityFacts.eqb_neq	40
Coq.Structures.Equalities.BoolEqualityFacts.eqb_refl	40	1.3	search with cache (only 1: apply eqb_eq; only 1: firstorder).	0.0742790699005	30
Coq.Structures.Equalities.BoolEqualityFacts.eqb_sym	40	0.3.7.0.3.7.3.0	search with cache (only 1: apply eq_true_iff_eq; only 1: intuition; only 1: apply eqb_eq; only 1: symmetry; only 1: now apply eqb_eq; only 1: apply eqb_eq; only 1: symmetry; only 1: now apply eqb_eq).	37.8332231045	38680
Coq.Structures.OrderedType.MOT_to_OT.eq_dec	40
Coq.Structures.OrderedType.OrderedTypeFacts.eq_equiv	40
Coq.Structures.OrderedType.OrderedTypeFacts.lt_antirefl	40
Coq.Structures.OrderedType.OrderedTypeFacts.lt_strorder	40	13.0.0.0.1.5.2	search with cache (only 1: split; only 1: intro; only 1: intro; only 1: absurd (eq x x); only 1: auto with ordered_type; only 1: auto with ordered_type; only 1: exact PeanoNat.Nat.lt_trans).	2.79388904572	6012
Coq.Structures.OrderedType.OrderedTypeFacts.lt_eq	40
Coq.Structures.OrderedType.OrderedTypeFacts.eq_lt	40
Coq.Structures.OrderedType.OrderedTypeFacts.lt_compat	40
Coq.Structures.OrderedType.OrderedTypeFacts.lt_total	40
Coq.Structures.OrderedType.OrderedTypeFacts.IsTO.le_lteq	40	1.1.3	search with cache (only 1: split; only 1: auto; only 1: auto).	0.401215791702	160
Coq.Structures.OrderedType.OrderedTypeFacts.le_eq	40
Coq.Structures.OrderedType.OrderedTypeFacts.eq_le	40	2.1.1	search with cache (only 1: intro; only 1: intro; only 1: order).	0.0307910442352	15
Coq.Structures.OrderedType.OrderedTypeFacts.neq_eq	40	3	search with cache (only 1: order).	0.0205080509186	4
Coq.Structures.OrderedType.OrderedTypeFacts.eq_neq	40	1	search with cache (only 1: order).	0.0154349803925	2
Coq.Structures.OrderedType.OrderedTypeFacts.le_lt_trans	40	0	search with cache (only 1: order).	0.0141038894653	1
Coq.Structures.OrderedType.OrderedTypeFacts.lt_le_trans	40	0	search with cache (only 1: order).	0.197605133057	1
Coq.Structures.OrderedType.OrderedTypeFacts.le_neq	40	0	search with cache (only 1: order).	0.0145559310913	1
Coq.Structures.OrderedType.OrderedTypeFacts.le_trans	40	0	search with cache (only 1: order).	0.0146629810333	1
Coq.Structures.OrderedType.OrderedTypeFacts.le_antisym	40	0	search with cache (only 1: order).	0.0143718719482	1
Coq.Structures.OrderedType.OrderedTypeFacts.neq_sym	40	0	search with cache (only 1: order).	0.0140228271484	1
Coq.Structures.OrderedType.OrderedTypeFacts.lt_le	40	0.1.0.0.0	search with cache (only 1: intro; only 1: intro; only 1: absurd (eq x x); only 1: order; only 1: auto with ordered_type).	0.0194320678711	6
Coq.Structures.OrderedType.OrderedTypeFacts.gt_not_eq	40	0	search with cache (only 1: order).	0.0139009952545	1
Coq.Structures.OrderedType.OrderedTypeFacts.eq_not_lt	40	0	search with cache (only 1: order).	0.0140309333801	1
Coq.Structures.OrderedType.OrderedTypeFacts.eq_not_gt	40	0	search with cache (only 1: order).	0.0137050151825	1
Coq.Structures.OrderedType.OrderedTypeFacts.lt_not_gt	40	0	search with cache (only 1: order).	0.0133349895477	1
Coq.Structures.OrderedType.OrderedTypeFacts.elim_compare_eq	40
Coq.Structures.OrderedType.OrderedTypeFacts.elim_compare_lt	40	1.1.0.0.1.0.0.5.0.0.0	search with cache (only 1: intros; only 1: case (compare x y); only 1: intros H'; only 1: exists H'; only 1: auto; only 1: intros H'; only 1: exfalso; only 1: order; only 1: intros H'; only 1: exfalso; only 1: order).	1.38606190681	2149
Coq.Structures.OrderedType.OrderedTypeFacts.elim_compare_gt	40	0.2.0.0.1.0.1.1.0.0.0	search with cache (only 1: intros; only 1: case (compare x y); only 1: intros H'; only 1: exfalso; only 1: order; only 1: intros H'; only 1: exfalso; only 1: order; only 1: intros H'; only 1: exists H'; only 1: auto).	1.28430104256	1412
Coq.Structures.OrderedType.OrderedTypeFacts.lt_dec	40
Coq.Structures.OrderedType.OrderedTypeFacts.eqb_alt	40
Coq.Structures.OrderedType.OrderedTypeFacts.In_eq	40	0.1.0	search with cache (only 1: intros; only 1: rewrite <- H; only 1: auto).	0.0415551662445	4
Coq.Structures.OrderedType.OrderedTypeFacts.ListIn_In	40	3.0.0.0.0.0.1	search with cache (only 1: simple induction l; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: subst; only 1: firstorder).	0.10688495636	88
Coq.Structures.OrderedType.OrderedTypeFacts.Inf_lt	40
Coq.Structures.OrderedType.OrderedTypeFacts.Inf_eq	40	3.4.3.0.15.2	search with cache (only 1: intros; only 1: induction l; only 1: auto with ordered_type; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: constructor; only 1: order).	1.59510111809	3082
Coq.Structures.OrderedType.OrderedTypeFacts.Sort_Inf_In	40
Coq.Structures.OrderedType.OrderedTypeFacts.ListIn_Inf	40	0.0.2.1.2	search with cache (only 1: simple induction l; only 1: simpl; only 1: intuition; only 1: simpl; only 1: auto).	0.0233058929443	10
Coq.Structures.OrderedType.OrderedTypeFacts.In_Inf	40	8.0.48.6	search with cache (only 1: intros; only 1: induction l; only 1: constructor; only 1: auto with ordered_type).	27.6521260738	52929
Coq.Structures.OrderedType.OrderedTypeFacts.Inf_alt	40
Coq.Structures.OrderedType.OrderedTypeFacts.Sort_NoDup	40
Coq.Structures.OrderedType.KeyOrderedType.eqke_eqk	40	0.2.14	search with cache (only 1: intros l l'; only 1: induction 1; only 1: auto).	0.579246044159	365
Coq.Structures.OrderedType.KeyOrderedType.ltk_right_r	40	2.2	search with cache (only 1: intros x y z; only 1: auto).	0.0135807991028	6
Coq.Structures.OrderedType.KeyOrderedType.ltk_right_l	40	0	search with cache (only 1: auto).	0.0114848613739	1
Coq.Structures.OrderedType.KeyOrderedType.eqk_refl	40	0.0	search with cache (only 1: unfold eqk, eqke; only 1: intuition).	0.0159018039703	2
Coq.Structures.OrderedType.KeyOrderedType.eqke_refl	40	0.0	search with cache (only 1: unfold eqk, eqke; only 1: intuition).	0.0173790454865	2
Coq.Structures.OrderedType.KeyOrderedType.eqk_sym	40	0	search with cache (only 1: auto with ordered_type).	0.011950969696	1
Coq.Structures.OrderedType.KeyOrderedType.eqke_sym	40	0.1	search with cache (only 1: unfold eqk, eqke; only 1: intuition).	0.0277960300446	3
Coq.Structures.OrderedType.KeyOrderedType.eqk_trans	40	13.5.2	search with cache (only 1: unfold eqk, eqke; only 1: intros; only 1: order).	0.837479829788	628
Coq.Structures.OrderedType.KeyOrderedType.eqke_trans	40	0.4.4.20.4.4.0.1	search with cache (only 1: unfold eqke; only 1: intuition; only 1: simpl in *; only 1: subst; only 1: order; only 1: simpl in *; only 1: subst; only 1: auto).	2.30980420113	4311
Coq.Structures.OrderedType.KeyOrderedType.ltk_trans	40	3	search with cache (only 1: eauto with ordered_type).	0.0247299671173	4
Coq.Structures.OrderedType.KeyOrderedType.ltk_not_eqk	40	6.0	search with cache (only 1: intros; only 1: eauto with ordered_type).	0.0277149677277	16
Coq.Structures.OrderedType.KeyOrderedType.ltk_not_eqke	40	16.0.3.0	search with cache (only 1: unfold eqk, ltk; only 1: unfold eqke; only 1: intuition; only 1: order).	3.94608283043	5133
Coq.Structures.OrderedType.KeyOrderedType.eqk_equiv	40	1.4.2.10.0	search with cache (only 1: split; only 1: eauto with ordered_type; only 1: auto with *; only 1: red; only 1: eauto with ordered_type).	0.376306056976	653
Coq.Structures.OrderedType.KeyOrderedType.eqke_equiv	40	0.0.0.0	search with cache (only 1: constructor; only 1: eauto with ordered_type; only 1: eauto with ordered_type; only 1: eauto with ordered_type).	0.0374140739441	4
Coq.Structures.OrderedType.KeyOrderedType.ltk_strorder	40
Coq.Structures.OrderedType.KeyOrderedType.ltk_compat	40	0.3.6	search with cache (only 1: repeat red; only 1: fix gcd_divide 1; only 1: eauto with ordered_type).	0.519975185394	157
Coq.Structures.OrderedType.KeyOrderedType.ltk_compat'	40	0.4.8	search with cache (only 1: repeat red; only 1: fix gcd_divide 1; only 1: eauto with ordered_type).	6.71167993546	1858
Coq.Structures.OrderedType.KeyOrderedType.eqk_not_ltk	40	0.0	search with cache (only 1: unfold eqk, ltk; only 1: auto with ordered_type).	0.014631986618	2
Coq.Structures.OrderedType.KeyOrderedType.ltk_eqk	40	1	search with cache (only 1: eauto with ordered_type).	0.0202770233154	2
Coq.Structures.OrderedType.KeyOrderedType.eqk_ltk	40	0	search with cache (only 1: eauto with ordered_type).	0.0155348777771	1
Coq.Structures.OrderedType.KeyOrderedType.InA_eqke_eqk	40	0.1.9.15.0	search with cache (only 1: unfold eqk, eqke; only 1: intros A l; only 1: induction 1; only 1: intuition; only 1: auto).	2.1321439743	2965
Coq.Structures.OrderedType.KeyOrderedType.In_alt	40
Coq.Structures.OrderedType.KeyOrderedType.MapsTo_eq	40	0.4.7.0.0.7.3.31.4	search with cache (only 1: intros; only 1: generalize dependent l; only 1: intros H'; only 1: compute; only 1: induction 1; only 1: intuition; only 1: left; only 1: eauto with ordered_type; only 1: intuition).	17.9272229671	44124
Coq.Structures.OrderedType.KeyOrderedType.In_eq	40
Coq.Structures.OrderedType.KeyOrderedType.Inf_eq	40	0.0.8.11.15	search with cache (only 1: intros a l H; only 1: intro; only 1: induction 1; only 1: eauto with ordered_type; only 1: eauto with ordered_type).	2.0586810112	4359
Coq.Structures.OrderedType.KeyOrderedType.Inf_lt	40	8.7.4.2.35.5	search with cache (only 1: intros; only 1: induction l; only 1: constructor; only 1: constructor; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: eauto with *).	6.01250195503	11780
Coq.Structures.OrderedType.KeyOrderedType.Sort_Inf_In	40
Coq.Structures.OrderedType.KeyOrderedType.Sort_Inf_NotIn	40
Coq.Structures.OrderedType.KeyOrderedType.Sort_NoDupA	40
Coq.Structures.OrderedType.KeyOrderedType.Sort_In_cons_1	40	0.0.11.5.10	search with cache (only 1: intros P x0 xs H; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: eapply Sort_Inf_In; only 1: eauto with ordered_type; only 1: eauto with ordered_type).	38.293817997	15454
Coq.Structures.OrderedType.KeyOrderedType.Sort_In_cons_2	40
Coq.Structures.OrderedType.KeyOrderedType.Sort_In_cons_3	40
Coq.Structures.OrderedType.KeyOrderedType.In_inv	40
Coq.Structures.OrderedType.KeyOrderedType.In_inv_2	40	0.8.2	search with cache (only 1: inversion 1; only 1: intuition; only 1: auto).	0.321928024292	219
Coq.Structures.OrderedType.KeyOrderedType.In_inv_3	40	0.1.0.3.0	search with cache (only 1: inversion_clear 1; only 1: compute in H0; only 1: induction 1; only 1: intuition; only 1: auto).	0.0489869117737	21
Coq.Structures.OrdersFacts.CompareFacts.compare_eq_iff	40
Coq.Structures.OrdersFacts.CompareFacts.compare_eq	40	0.1.0.0	search with cache (only 1: case compare_spec; only 1: easy; only 1: easy; only 1: easy).	0.0255539417267	5
Coq.Structures.OrdersFacts.CompareFacts.compare_lt_iff	40
Coq.Structures.OrdersFacts.CompareFacts.compare_gt_iff	40
Coq.Structures.OrdersFacts.CompareFacts.compare_nlt_iff	40
Coq.Structures.OrdersFacts.CompareFacts.compare_ngt_iff	40
Coq.Structures.OrdersFacts.CompareFacts.compare_compat	40
Coq.Structures.OrdersFacts.CompareFacts.compare_refl	40	1.0	search with cache (only 1: apply compare_eq_iff; only 1: firstorder).	0.0102980136871	3
Coq.Structures.OrdersFacts.CompareFacts.compare_antisym	40
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_compat	40
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_preorder	40
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_order	40	0.11.0.0.0	search with cache (only 1: red; only 1: red; only 1: red; only 1: compute; only 1: iorder).	0.723202943802	1122
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_antisym	40	2.0	search with cache (only 1: red; only 1: order).	0.0150129795074	19
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_not_gt_iff	40	3.3.1	search with cache (only 1: intros; only 1: repeat red; only 1: iorder).	0.0281791687012	16
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.lt_not_ge_iff	40	1	search with cache (only 1: iorder).	0.0145649909973	2
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_or_gt	40
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.lt_or_ge	40
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.eq_is_le_ge	40	3.3.0	search with cache (only 1: intros; only 1: repeat red; only 1: iorder).	0.0184319019318	9
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.compare_le_iff	40	2.0	search with cache (only 1: rewrite compare_gt_iff; only 1: iorder).	0.0932221412659	15
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.compare_ge_iff	40	0.0.0	search with cache (only 1: rewrite le_not_gt_iff; only 1: rewrite compare_lt_iff; only 1: intuition).	0.0712702274323	3
Coq.Structures.OrdersFacts.OrderedTypeFacts.lt_dec	40
Coq.Structures.OrdersFacts.OrderedTypeFacts.if_eq_dec	40
Coq.Structures.OrdersFacts.OrderedTypeFacts.eqb_alt	40
Coq.Structures.OrdersFacts.OrderedTypeFacts.eqb_compat	40
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_not_eq	40	2.0	search with cache (only 1: intro H; only 1: order).	0.0108771324158	4
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_eq	40	1	search with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0199069976807	2
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_lt	40	1	search with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0172801017761	2
Coq.Structures.OrdersFacts.OrderedTypeTest.le_eq	40	2	search with cache (only 1: order).	1.01131987572	3
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_le	40	1	search with cache (only 1: order).	0.0114591121674	2
Coq.Structures.OrdersFacts.OrderedTypeTest.neq_eq	40	3.1.3	search with cache (only 1: intro H; only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: order).	2.82012701035	10
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_neq	40	0	search with cache (only 1: order).	0.011255979538	1
Coq.Structures.OrdersFacts.OrderedTypeTest.le_lt_trans	40	3.1	search with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: order).	0.0190150737762	6
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_le_trans	40	0	search with cache (only 1: order).	0.0104250907898	1
Coq.Structures.OrdersFacts.OrderedTypeTest.le_trans	40	0	search with cache (only 1: order).	0.0110690593719	1
Coq.Structures.OrdersFacts.OrderedTypeTest.le_antisym	40	2	search with cache (only 1: order).	0.010959148407	3
Coq.Structures.OrdersFacts.OrderedTypeTest.le_neq	40	1.0	search with cache (only 1: intro H; only 1: order).	0.0110981464386	3
Coq.Structures.OrdersFacts.OrderedTypeTest.neq_sym	40	2	search with cache (only 1: order).	0.0114929676056	3
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_le	40	1	search with cache (only 1: order).	0.0096390247345	2
Coq.Structures.OrdersFacts.OrderedTypeTest.gt_not_eq	40	1.0	search with cache (only 1: intro H; only 1: order).	0.0107169151306	3
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_not_lt	40	1	search with cache (only 1: order).	0.0103480815887	2
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_not_gt	40	1	search with cache (only 1: order).	0.0104031562805	2
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_not_gt	40	1	search with cache (only 1: order).	0.00983500480652	2
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_is_nlt_ngt	40	3.3.3.1	search with cache (only 1: intuition; only 1: order; only 1: order; only 1: order).	0.41854095459	354
Coq.Structures.OrdersFacts.OrderedTypeRev.lt_strorder	40
Coq.Structures.OrdersFacts.OrderedTypeRev.lt_compat	40	1.0	search with cache (only 1: unfold lt; only 1: auto with *).	0.0122649669647	3
Coq.Structures.OrdersFacts.OrderedTypeRev.le_lteq	40
Coq.Structures.OrdersFacts.OrderedTypeRev.compare_spec	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_spec	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_eq	40	0	search with cache (only 1: now apply compare_eq_iff).	0.0094940662384	1
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_refl	40	0	search with cache (only 1: now apply compare_eq_iff).	0.0101611614227	1
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_gt_iff	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_ge_iff	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_ngt_iff	40	1	search with cache (only 1: now rewrite <- compare_lt_iff, compare_antisym, CompOpp_iff).	0.0145299434662	2
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_nlt_iff	40	6	search with cache (only 1: now rewrite <- compare_lt_iff, compare_antisym, CompOpp_iff).	0.0494840145111	16
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_nle_iff	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_nge_iff	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.lt_irrefl	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.lt_eq_cases	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_spec0	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_spec	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_spec0	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_spec	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_nle	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_gt	40	4.8.6	search with cache (only 1: case leb_spec0; only 1: now rewrite <- compare_lt_iff, compare_nge_iff; only 1: now rewrite <- compare_lt_iff, compare_nge_iff).	7.9033138752	8163
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_nlt	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_ge	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_refl	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_antisym	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_irrefl	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_antisym	40	4.6.3.0.9.2.2	search with cache (only 1: case leb_spec0; only 1: now rewrite ltb_nlt, <- compare_le_iff, compare_ngt_iff; only 1: intuition; only 1: apply eq_true_iff_eq; only 1: intuition; only 1: apply ltb_lt; only 1: now rewrite <- compare_lt_iff, compare_nge_iff).	22.7938849926	33170
Coq.Structures.OrdersFacts.BoolOrderFacts.eqb_compare	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_compare	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_compare	40
Coq.Structures.OrdersLists.OrderedTypeLists.In_eq	40	0.1.5	search with cache (only 1: intros l n x d H; only 1: subst; only 1: auto).	0.0929229259491	20
Coq.Structures.OrdersLists.OrderedTypeLists.ListIn_In	40	1.0.2.0.0.0.0	search with cache (only 1: simple induction l; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: subst; only 1: firstorder).	0.09699177742	16
Coq.Structures.OrdersLists.OrderedTypeLists.Inf_lt	40	22.5.0.0.8	search with cache (only 1: induction l; only 1: constructor; only 1: constructor; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: now rewrite H).	14.5037789345	17186
Coq.Structures.OrdersLists.OrderedTypeLists.Inf_eq	40	13.2	search with cache (only 1: firstorder; only 1: now rewrite H).	0.274087905884	437
Coq.Structures.OrdersLists.OrderedTypeLists.Sort_Inf_In	40	0.0.9.10.11.8.5	search with cache (only 1: intros l x y H H'; only 1: eapply SortA_InfA_InA; only 1: intuition; only 1: intuition; only 1: intuition; only 1: auto; only 1: auto).	38.4879150391	66795
Coq.Structures.OrdersLists.OrderedTypeLists.ListIn_Inf	40	0.0.1.1.4	search with cache (only 1: simple induction l; only 1: simpl; only 1: intuition; only 1: simpl; only 1: auto).	0.0279319286346	44
Coq.Structures.OrdersLists.OrderedTypeLists.In_Inf	40	10.4.8	search with cache (only 1: simple induction l; only 1: intuition; only 1: firstorder using Sorted_inv).	0.364748954773	929
Coq.Structures.OrdersLists.OrderedTypeLists.Inf_alt	40
Coq.Structures.OrdersLists.OrderedTypeLists.Sort_NoDup	40
Coq.Structures.OrdersLists.KeyOrderedType.ltk_compat	40	11	search with cache (only 1: eauto with *).	0.22456407547	143
Coq.Structures.OrdersLists.KeyOrderedType.ltk_compat'	40
Coq.Structures.OrdersLists.KeyOrderedType.pair_compat	40	3	search with cache (only 1: eauto with *).	0.0115509033203	4
Coq.Structures.OrdersLists.KeyOrderedType.ltk_not_eqk	40
Coq.Structures.OrdersLists.KeyOrderedType.ltk_not_eqke	40	1.0.0	search with cache (only 1: intros LT EQ; only 1: rewrite EQ in LT; only 1: elim (StrictOrder_Irreflexive _ LT)).	0.0197370052338	4
Coq.Structures.OrdersLists.KeyOrderedType.Inf_eq	40	4	search with cache (only 1: now intros <-).	0.0217139720917	5
Coq.Structures.OrdersLists.KeyOrderedType.Inf_lt	40
Coq.Structures.OrdersLists.KeyOrderedType.Sort_Inf_In	40
Coq.Structures.OrdersLists.KeyOrderedType.Sort_Inf_NotIn	40
Coq.Structures.OrdersLists.KeyOrderedType.Sort_NoDupA	40
Coq.Structures.OrdersLists.KeyOrderedType.Sort_In_cons_1	40	0.0.0.1.2.0.5.25	search with cache (only 1: inversion 1; only 1: subst; only 1: apply SortA_InfA_InA; only 1: auto with *; only 1: auto with *; only 1: auto with *; only 1: firstorder; only 1: firstorder).	7.52658605576	7752
Coq.Structures.OrdersLists.KeyOrderedType.Sort_In_cons_2	40
Coq.Structures.OrdersLists.KeyOrderedType.Sort_In_cons_3	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_eqk	40	0	search with cache (only 1: firstorder).	0.0155110359192	1
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_def	40	0	search with cache (only 1: auto).	0.0131590366364	1
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_def'	40	0	search with cache (only 1: auto).	0.0128149986267	1
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_1	40	0	search with cache (only 1: firstorder).	0.0145628452301	1
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_2	40	1	search with cache (only 1: now destruct 1).	0.014790058136	2
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqk_def	40	1	search with cache (only 1: reflexivity).	0.0128560066223	2
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqk_def'	40	0	search with cache (only 1: reflexivity).	0.0124390125275	1
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqk_1	40	1	search with cache (only 1: firstorder).	0.013090133667	2
Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqke_eqk	40	1.0.0.0.1	search with cache (only 1: do 2 rewrite InA_alt; only 1: intros (y, H); only 1: exists y; only 1: intuition; only 1: firstorder).	0.0523409843445	16
Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqk_eqke	40	0.0.0	search with cache (only 1: induction 1; only 1: firstorder; only 1: firstorder).	0.0286221504211	3
Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqk	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_alt	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_alt'	40	0.1.0.0.1.4.0.0.14.5	search with cache (only 1: firstorder; only 1: induction H; only 1: firstorder; only 1: firstorder; only 1: unfold In, MapsTo; only 1: apply InA_eqk_eqke in H; only 1: destruct H as ((k', e'), (E, H)); only 1: compute in E; only 1: exists e'; only 1: now rewrite E).	17.7486598492	22951
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_alt2	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_nil	40	0.3.4	search with cache (only 1: rewrite In_alt; only 1: firstorder; only 1: invlist InA).	0.222046136856	62
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_cons	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.MapsTo_compat	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_compat	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.MapsTo_eq	40	13	search with cache (only 1: now intros <-).	0.401571989059	159
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_eq	40	0	search with cache (only 1: now intros <-).	0.028450012207	1
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_inv	40	0.0	search with cache (only 1: rewrite !In_alt2, Exists_cons; only 1: intuition).	0.0540289878845	2
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_inv_2	40	0.4.10	search with cache (only 1: inversion 1; only 1: firstorder; only 1: auto).	0.327712059021	234
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_inv_3	40	0.4.1.9	search with cache (only 1: intuition; only 1: invlist InA; only 1: firstorder; only 1: auto).	1.12848305702	435
Coq.Structures.EqualitiesFacts.PairDecidableType.eq_dec	40
Coq.Structures.EqualitiesFacts.PairUsualDecidableType.eq_dec	40
Coq.Structures.DecidableType.KeyDecidableType.eqke_eqk	40	10	search with cache (only 1: firstorder).	0.011668920517	21
Coq.Structures.DecidableType.KeyDecidableType.eqk_refl	40	1.0	search with cache (only 1: unfold eqk, eqke; only 1: intuition).	0.00769305229187	3
Coq.Structures.DecidableType.KeyDecidableType.eqke_refl	40	0.0	search with cache (only 1: unfold eqk, eqke; only 1: intuition).	0.00787401199341	2
Coq.Structures.DecidableType.KeyDecidableType.eqk_sym	40	0	search with cache (only 1: auto).	0.00534296035767	1
Coq.Structures.DecidableType.KeyDecidableType.eqke_sym	40	0.0	search with cache (only 1: unfold eqk, eqke; only 1: intuition).	0.0115790367126	2
Coq.Structures.DecidableType.KeyDecidableType.eqk_trans	40
Coq.Structures.DecidableType.KeyDecidableType.eqke_trans	40	0.7.2.19.7.2.0.1	search with cache (only 1: unfold eqke; only 1: intuition; only 1: simpl in *; only 1: subst; only 1: eauto; only 1: simpl in *; only 1: subst; only 1: auto).	2.02131795883	4347
Coq.Structures.DecidableType.KeyDecidableType.eqk_equiv	40	1.4.3.3.2	search with cache (only 1: constructor; only 1: auto; only 1: auto; only 1: red; only 1: eauto).	0.668721914291	726
Coq.Structures.DecidableType.KeyDecidableType.eqke_equiv	40	0.0.0.0	search with cache (only 1: split; only 1: eauto; only 1: eauto; only 1: eauto).	0.0192859172821	4
Coq.Structures.DecidableType.KeyDecidableType.InA_eqke_eqk	40	0.1.12.7.0	search with cache (only 1: unfold eqk, eqke; only 1: intros l'; only 1: induction 1; only 1: intuition; only 1: auto).	1.79940199852	1886
Coq.Structures.DecidableType.KeyDecidableType.InA_eqk	40	0.2.4	search with cache (only 1: intros l x y H H'; only 1: rewrite <- H; only 1: auto).	0.0326120853424	9
Coq.Structures.DecidableType.KeyDecidableType.In_alt	40
Coq.Structures.DecidableType.KeyDecidableType.MapsTo_eq	40	0.2.29.4.1.3.14	search with cache (only 1: intros A B f l; only 1: intro; only 1: induction 1; only 1: destruct y; only 1: firstorder; only 1: eauto; only 1: auto).	36.7146039009	34828
Coq.Structures.DecidableType.KeyDecidableType.In_eq	40
Coq.Structures.DecidableType.KeyDecidableType.In_inv	40
Coq.Structures.DecidableType.KeyDecidableType.In_inv_2	40	0.11.1	search with cache (only 1: inversion 1; only 1: intuition; only 1: auto).	1.05879998207	430
Coq.Structures.DecidableType.KeyDecidableType.In_inv_3	40	0.1.0.1.0	search with cache (only 1: inversion_clear 1; only 1: compute in H0; only 1: induction 1; only 1: intuition; only 1: auto).	0.0178470611572	7
Coq.Structures.OrdersAlt.Update_OT.lt_strorder	40
Coq.Structures.OrdersAlt.Update_OT.lt_compat	40
Coq.Structures.OrdersAlt.Update_OT.compare_spec	40
Coq.Structures.OrdersAlt.Backport_OT.lt_not_eq	40
Coq.Structures.OrdersAlt.Backport_OT.lt_trans	40	12	search with cache (only 1: intuition).	0.0370209217072	53
Coq.Structures.OrdersAlt.Backport_OT.compare	40
Coq.Structures.OrdersAlt.OT_from_Alt.eq_equiv	40
Coq.Structures.OrdersAlt.OT_from_Alt.lt_strorder	40	0.0.1.0.1.0.2.0.0.0.0.16.1	search with cache (only 1: split; only 1: compute; only 1: intros x; only 1: pose proof (compare_sym x x) as H; only 1: destruct (x ?= x); only 1: simpl in *; only 1: discriminate; only 1: simpl in *; only 1: discriminate; only 1: simpl in *; only 1: discriminate; only 1: red; only 1: apply compare_trans).	20.6591820717	42581
Coq.Structures.OrdersAlt.OT_from_Alt.lt_eq	40
Coq.Structures.OrdersAlt.OT_from_Alt.eq_lt	40
Coq.Structures.OrdersAlt.OT_from_Alt.lt_compat	40	1.7.5.0.2	search with cache (only 1: repeat red; only 1: unfold lt, eq; only 1: intros a H; only 1: fix gcd_divide 1; only 1: auto).	11.7964320183	10434
Coq.Structures.OrdersAlt.OT_from_Alt.compare_spec	40
Coq.Structures.OrdersAlt.OT_from_Alt.eq_dec	40	10.0	search with cache (only 1: unfold eq; only 1: decide equality).	0.389904975891	144
Coq.Structures.OrdersAlt.OT_to_Alt.compare_sym	40
Coq.Structures.OrdersAlt.OT_to_Alt.compare_Eq	40
Coq.Structures.OrdersAlt.OT_to_Alt.compare_Lt	40
Coq.Structures.OrdersAlt.OT_to_Alt.compare_Gt	40
Coq.Structures.OrdersAlt.OT_to_Alt.compare_trans	40
Coq.Structures.GenericMinMax.GenericMinMax.ge_not_lt	40
Coq.Structures.GenericMinMax.GenericMinMax.max_l	40
Coq.Structures.GenericMinMax.GenericMinMax.max_r	40
Coq.Structures.GenericMinMax.GenericMinMax.min_l	40
Coq.Structures.GenericMinMax.GenericMinMax.min_r	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_spec	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_spec_le	40	1.0.1.0.0.0.0.1.0.0.0.0.1	search with cache (only 1: destruct (lt_total n m); only 1: left; only 1: split; only 1: rewrite le_lteq; only 1: auto; only 1: apply max_r; only 1: rewrite le_lteq; only 1: auto; only 1: right; only 1: assert (m <= n) by (rewrite le_lteq; intuition); only 1: split; only 1: auto; only 1: now apply max_l).	2.59436893463	4110
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.Proper_instance_0	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_compat	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_unicity	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_unicity_ext	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_mono	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_id	40	4.0.3	search with cache (only 1: apply max_r; only 1: rewrite le_lteq; only 1: intuition).	0.0111119747162	13
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_assoc	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_comm	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_max_l	40	2.5.8.1	search with cache (only 1: rewrite le_lteq; only 1: destruct (max_spec n m); only 1: intuition order; only 1: intuition).	0.358206987381	733
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_max_r	40	1	search with cache (only 1: solve_max).	0.0142350196838	23
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_l_iff	40	10.1	search with cache (only 1: repeat red; only 1: solve_max).	0.212947130203	222
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_r_iff	40	0	search with cache (only 1: solve_max).	0.0140631198883	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_iff	40	0.0.0.0.0.0.0.0.0.1	search with cache (only 1: intuition; only 1: destruct (max_spec n m); only 1: right; only 1: intuition; only 1: order; only 1: left; only 1: intuition; only 1: order; only 1: solve_max; only 1: solve_max).	0.290993928909	135
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lt_iff	40	1.2.0.0.3.0.1.1.3.0	search with cache (only 1: intuition; only 1: destruct (max_spec n m); only 1: right; only 1: intuition; only 1: order; only 1: left; only 1: intuition; only 1: order; only 1: solve_max; only 1: solve_max).	2.83146810532	2891
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_l	40	0	search with cache (only 1: solve_max).	0.00922203063965	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_r	40	0	search with cache (only 1: solve_max).	0.00910019874573	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub	40	0	search with cache (only 1: solve_max).	0.00943183898926	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_iff	40	0.0.1.1	search with cache (only 1: split; only 1: solve_max; only 1: intuition; only 1: solve_max).	0.0474469661713	27
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_lt	40	0.0.0.1.2	search with cache (only 1: destruct (max_spec n m); only 1: intuition; only 1: order || (right; order) || (left; order); only 1: intuition; only 1: order || (right; order) || (left; order)).	0.0126430988312	8
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_lt_iff	40	1.1.0	search with cache (only 1: split; only 1: solve_max; only 1: solve_max).	0.0276041030884	19
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_compat_l	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_compat_r	40	0.1.0	search with cache (only 1: intros; only 1: apply max_lub_iff; only 1: solve_max).	0.0554170608521	4
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_compat	40	0.1.2	search with cache (only 1: intros; only 1: apply max_lub_iff; only 1: solve_max).	0.0459899902344	6
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_spec	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_spec_le	40	1.0.1.0.0.0.0.1.0.0.0.1.8	search with cache (only 1: destruct (lt_total n m); only 1: left; only 1: intuition; only 1: rewrite le_lteq; only 1: auto; only 1: apply min_l; only 1: rewrite le_lteq; only 1: auto; only 1: right; only 1: assert (m <= n) by (rewrite le_lteq; intuition); only 1: split; only 1: auto; only 1: now apply min_r).	34.363006115	36628
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_compat	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_unicity	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_unicity_ext	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_mono	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_id	40	0.3	search with cache (only 1: apply min_l; only 1: order).	0.00469994544983	5
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_assoc	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_comm	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_min_r	40	3.6.7.1	search with cache (only 1: rewrite le_lteq; only 1: destruct (min_spec n m); only 1: intuition order; only 1: intuition).	0.776777029037	1146
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_min_l	40	0	search with cache (only 1: solve_min).	0.00872802734375	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_l_iff	40	0.0.0.0.0.5.5	search with cache (only 1: repeat red; only 1: destruct (min_spec n m); only 1: intuition; only 1: order; only 1: intuition; only 1: order; only 1: order).	0.125097990036	195
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_r_iff	40	1	search with cache (only 1: solve_min).	0.0109729766846	2
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le	40	0.0.3.5.1.5	search with cache (only 1: destruct (min_spec n m); only 1: intuition; only 1: order || (right; order) || (left; order); only 1: right; only 1: intuition; only 1: order).	3.00056195259	3775
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_iff	40	1.0.0.0.0.0.0.0.0	search with cache (only 1: split; only 1: destruct (min_spec n m); only 1: left; only 1: intuition; only 1: order; only 1: right; only 1: intuition; only 1: order; only 1: solve_min).	0.0524959564209	11
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_lt_iff	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_l	40	0	search with cache (only 1: solve_min).	0.0091700553894	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_r	40	0	search with cache (only 1: solve_min).	0.00921106338501	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb	40	0	search with cache (only 1: solve_min).	0.00955891609192	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_iff	40	1	search with cache (only 1: solve_min).	0.0183899402618	2
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_lt	40	0.0.0.1.3	search with cache (only 1: destruct (min_spec n m); only 1: intuition; only 1: order || (right; order) || (left; order); only 1: intuition; only 1: order || (right; order) || (left; order)).	0.0121347904205	9
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_lt_iff	40	1.1.1	search with cache (only 1: split; only 1: solve_min; only 1: solve_min).	0.0219421386719	14
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_compat_l	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_compat_r	40	0.1.0	search with cache (only 1: intros; only 1: apply min_glb_iff; only 1: solve_min).	0.0145039558411	4
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_compat	40	0.2.1	search with cache (only 1: intros; only 1: apply min_glb_iff; only 1: solve_min).	0.0447630882263	6
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_absorption	40	0.0	search with cache (only 1: apply max_l; only 1: solve_min).	0.00922012329102	2
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_absorption	40	0.1	search with cache (only 1: apply min_l; only 1: solve_max).	0.0108168125153	6
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_distr	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_distr	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_modular	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_modular	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_disassoc	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_antimono	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_antimono	40	1.3.0.3.0.1.1.2.2.0.0.0	search with cache (only 1: intros Eqf Lef x y; only 1: destruct (max_spec x y) as [(H, E)| (H, E)]; only 1: rewrite E; only 1: destruct (min_spec (f x) (f y)) as [(H', E')| (H', E')]; only 1: assert (f y <= f x) by (apply Lef; order); only 1: order; only 1: order; only 1: rewrite E; only 1: destruct (min_spec (f x) (f y)) as [(H', E')| (H', E')]; only 1: auto; only 1: assert (f x <= f y) by (apply Lef; order); only 1: order).	4.96268177032	6615
Coq.Structures.GenericMinMax.MinMaxDecProperties.max_case_strong	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.max_case	40	0.1.0.0.3.0.0.2.1.2.0.0.1.1.0.1.0	search with cache (only 1: intros Compat Hl Hr; only 1: destruct (CompSpec2Type (compare_spec n m)) as [EQ| LT| GT]; only 1: assert (n <= m) by (rewrite le_lteq; auto); only 1: apply (Compat m), Hr; only 1: symmetry; only 1: apply max_r; only 1: auto; only 1: assert (n <= m) by (rewrite le_lteq; auto); only 1: apply (Compat m), Hr; only 1: symmetry; only 1: apply max_r; only 1: auto; only 1: assert (m <= n) by (rewrite le_lteq; auto); only 1: apply (Compat n), Hl; only 1: symmetry; only 1: apply max_l; only 1: auto).	9.592897892	39807
Coq.Structures.GenericMinMax.MinMaxDecProperties.max_dec	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.min_case_strong	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.min_case	40	0.2.0.0.0.0.0.2.3.2.0.2.0.1.0.2.1	search with cache (only 1: intros Compat Hl Hr; only 1: destruct (CompSpec2Type (compare_spec n m)) as [EQ| LT| GT]; only 1: assert (n <= m) by (rewrite le_lteq; auto); only 1: apply (Compat n), Hl; only 1: symmetry; only 1: apply min_l; only 1: auto; only 1: assert (n <= m) by (rewrite le_lteq; auto); only 1: apply (Compat n), Hl; only 1: symmetry; only 1: apply min_l; only 1: auto; only 1: assert (m <= n) by (rewrite le_lteq; auto); only 1: apply (Compat m), Hr; only 1: symmetry; only 1: apply min_r; only 1: auto).	11.6735179424	36666
Coq.Structures.GenericMinMax.MinMaxDecProperties.min_dec	40
Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.max_monotone	40
Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.min_monotone	40
Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.min_max_antimonotone	40
Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.max_min_antimonotone	40
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.max_case_strong	40
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.max_case	40	0.0.0.0	search with cache (only 1: intros; only 1: apply Private_Dec.max_case_strong; only 1: auto; only 1: auto).	0.00534915924072	4
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.max_dec	40	0.0.0.4	search with cache (only 1: Bool.destr_bool; only 1: apply Private_Dec.max_case; only 1: auto with relations; only 1: auto with relations).	0.00760698318481	8
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_case_strong	40
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_case	40	0.0.0.0	search with cache (only 1: intros; only 1: apply Private_Dec.min_case_strong; only 1: auto; only 1: auto).	0.0051748752594	4
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_dec	40	0.0.1.8	search with cache (only 1: Bool.destr_bool; only 1: apply Private_Dec.min_case; only 1: auto with relations; only 1: auto with relations).	0.0358059406281	99
Coq.Structures.GenericMinMax.TOMaxEqDec_to_Compare.compare_spec	40
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.eq_refl	40
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.eq_sym	40
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.lt_not_eq	40	11.5	search with cache (only 1: intros; only 1: congruence).	8.5971801281	5503
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.compare	40
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.eq_dec	40	1.0	search with cache (only 1: unfold eq, lt; only 1: decide equality).	0.0210471153259	18
Coq.Structures.OrderedTypeAlt.OrderedType_to_Alt.compare_sym	40
Coq.Structures.OrderedTypeAlt.OrderedType_to_Alt.compare_trans	40
Coq.ZArith.Znat.nat_N_Z	40	3.0.3	search with cache (only 1: destruct n; only 1: trivial; only 1: trivial).	0.0441598892212	15
Coq.ZArith.Znat.N_nat_Z	40	1.0.0.0.1.0.3.9.0.0.3	search with cache (only 1: destruct n; only 1: simpl; only 1: auto; only 1: unfold N.div2, N.to_nat; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: apply Pos2Nat.inj; only 1: rewrite H; only 1: apply SuccNat2Pos.id_succ).	3.51300692558	5655
Coq.ZArith.Znat.positive_nat_Z	40	0.0.0.0.0	search with cache (only 1: destruct (Pos2Nat.is_succ p) as (m, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv).	0.0340158939362	5
Coq.ZArith.Znat.positive_N_Z	40	0	search with cache (only 1: trivial).	0.0245440006256	1
Coq.ZArith.Znat.positive_N_nat	40	0	search with cache (only 1: trivial).	0.0243961811066	1
Coq.ZArith.Znat.positive_nat_N	40	1.0.0.0.0.0.1	search with cache (only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: apply Pos2Nat.inj; only 1: rewrite H; only 1: apply SuccNat2Pos.id_succ).	0.0377440452576	9
Coq.ZArith.Znat.Z_N_nat	40	0.0.0.1	search with cache (only 1: induction n; only 1: trivial; only 1: trivial; only 1: trivial).	0.0367269515991	5
Coq.ZArith.Znat.Z_nat_N	40	0.0.0.0.0.0.2.0.0	search with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv; only 1: trivial).	0.284419059753	119
Coq.ZArith.Znat.Zabs_N_nat	40	0	search with cache (only 1: now destruct n).	0.0263290405273	1
Coq.ZArith.Znat.Zabs_nat_N	40	2.0.2.0.0.0.0	search with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply positive_nat_N; only 1: simpl; only 1: apply positive_nat_N).	0.438863039017	166
Coq.ZArith.Znat.N2Z.id	40	0.0.1	search with cache (only 1: destruct n; only 1: trivial; only 1: auto).	0.030385017395	4
Coq.ZArith.Znat.N2Z.inj	40	2.4.3.8.3.0.15.7	search with cache (only 1: destruct n; only 1: destruct m; only 1: trivial; only 1: discriminate; only 1: destruct m; only 1: discriminate; only 1: simpl; only 1: congruence).	15.9465968609	21100
Coq.ZArith.Znat.N2Z.inj_iff	40	1.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.1	search with cache (only 1: split; only 1: destruct n, m; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: destruct n, m; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: congruence).	20.7528469563	31232
Coq.ZArith.Znat.N2Z.is_nonneg	40	17	search with cache (only 1: now destruct n).	0.104060173035	157
Coq.ZArith.Znat.N2Z.inj_0	40	0	search with cache (only 1: trivial).	0.0258009433746	1
Coq.ZArith.Znat.N2Z.inj_pos	40	0	search with cache (only 1: reflexivity).	0.0249950885773	1
Coq.ZArith.Znat.N2Z.inj_compare	40	0.0.0.0.0.0.0.0.0	search with cache (only 1: destruct n, m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	0.0442790985107	9
Coq.ZArith.Znat.N2Z.inj_le	40	6.0	search with cache (only 1: unfold N.le, N.ge; only 1: now destruct n, m).	0.033294916153	8
Coq.ZArith.Znat.N2Z.inj_lt	40	3.0	search with cache (only 1: unfold N.lt, N.gt; only 1: now destruct n, m).	0.0328831672668	5
Coq.ZArith.Znat.N2Z.inj_ge	40	3.1	search with cache (only 1: unfold N.le, N.ge; only 1: now destruct n, m).	0.064239025116	19
Coq.ZArith.Znat.N2Z.inj_gt	40	2.1	search with cache (only 1: unfold N.lt, N.gt; only 1: now destruct n, m).	0.0332908630371	5
Coq.ZArith.Znat.N2Z.inj_abs_N	40	1.1.1.34.77.11	search with cache (only 1: Z.bitwise; only 1: unfold Z.testbit; only 1: destruct z; only 1: trivial; only 1: trivial; only 1: trivial).	22.8491020203	40360
Coq.ZArith.Znat.N2Z.inj_add	40	0.0.0.0.0.12	search with cache (only 1: destruct n, m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: simpl; only 1: trivial).	8.95117402077	1948
Coq.ZArith.Znat.N2Z.inj_mul	40	9	search with cache (only 1: now destruct n, m).	4.19490098953	303
Coq.ZArith.Znat.N2Z.inj_sub_max	40
Coq.ZArith.Znat.N2Z.inj_sub	40
Coq.ZArith.Znat.N2Z.inj_succ	40	0.1.0.1	search with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: now rewrite Pos.add_1_r).	0.0367050170898	6
Coq.ZArith.Znat.N2Z.inj_pred_max	40	1.0.0.0	search with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: now destruct p).	0.0411620140076	11
Coq.ZArith.Znat.N2Z.inj_pred	40	2.7.2	search with cache (only 1: destruct n; only 1: N.order; only 1: now destruct p).	0.460468053818	223
Coq.ZArith.Znat.N2Z.inj_min	40
Coq.ZArith.Znat.N2Z.inj_max	40
Coq.ZArith.Znat.N2Z.inj_div	40
Coq.ZArith.Znat.N2Z.inj_mod	40
Coq.ZArith.Znat.N2Z.inj_quot	40
Coq.ZArith.Znat.N2Z.inj_rem	40
Coq.ZArith.Znat.N2Z.inj_div2	40	0.0.0.6.0.0	search with cache (only 1: destruct n; only 1: trivial; only 1: destruct p as [p| p| ]; only 1: trivial; only 1: trivial; only 1: trivial).	0.279669046402	190
Coq.ZArith.Znat.N2Z.inj_quot2	40	1.0.0	search with cache (only 1: destruct n as [| p]; only 1: trivial; only 1: now destruct p).	0.0326778888702	4
Coq.ZArith.Znat.N2Z.inj_pow	40
Coq.ZArith.Znat.N2Z.inj_testbit	40	0.0.1.0.0.0.0.0.0	search with cache (only 1: destruct a as [| a], n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now destruct a; only 1: simpl; only 1: trivial).	0.0476250648499	10
Coq.ZArith.Znat.Z2N.id	40	2.0.0.0	search with cache (only 1: destruct n; only 1: trivial; only 1: trivial; only 1: now destruct 1).	0.0374581813812	6
Coq.ZArith.Znat.Z2N.inj	40	0.0.0.0.0.0.0.0.0.1.0.1.0.0.0.1.0.8	search with cache (only 1: destruct n, m; only 1: trivial; only 1: simpl; only 1: congruence; only 1: simpl; only 1: now N.nzsimpl; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: simpl; only 1: now N.nzsimpl; only 1: simpl; only 1: congruence; only 1: simpl; only 1: now N.nzsimpl).	12.1767230034	8133
Coq.ZArith.Znat.Z2N.inj_iff	40	3.0.0.1.0.0	search with cache (only 1: split; only 1: intros; only 1: rewrite <- (id n), <- (id m) by trivial; only 1: now f_equal; only 1: intros; only 1: now f_equal).	0.0481870174408	12
Coq.ZArith.Znat.Z2N.inj_0	40	0	search with cache (only 1: trivial).	0.0263290405273	1
Coq.ZArith.Znat.Z2N.inj_pos	40	0.0.0.1	search with cache (only 1: destruct n; only 1: trivial; only 1: trivial; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l).	0.0368931293488	5
Coq.ZArith.Znat.Z2N.inj_neg	40	0	search with cache (only 1: trivial).	0.0258300304413	1
Coq.ZArith.Znat.Z2N.inj_add	40
Coq.ZArith.Znat.Z2N.inj_mul	40	5	search with cache (only 1: now destruct n, m).	0.0475690364838	6
Coq.ZArith.Znat.Z2N.inj_succ	40	0.1.3.1.0.2	search with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: now rewrite Pos.add_1_r; only 1: simpl; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l).	0.576182842255	237
Coq.ZArith.Znat.Z2N.inj_sub	40
Coq.ZArith.Znat.Z2N.inj_pred	40	0.0.2.0.0.1	search with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: now destruct p; only 1: simpl; only 1: trivial).	0.06831407547	14
Coq.ZArith.Znat.Z2N.inj_compare	40	2	search with cache (only 1: now destruct n, m).	0.628543138504	339
Coq.ZArith.Znat.Z2N.inj_le	40	5.4.6	search with cache (only 1: unfold N.le, N.ge; only 1: intros Hn Hm; only 1: now rewrite N2Z.inj_compare).	0.635533094406	345
Coq.ZArith.Znat.Z2N.inj_lt	40	5.3.9	search with cache (only 1: intros Hn Hm; only 1: unfold N.lt, N.gt; only 1: now rewrite N2Z.inj_compare).	1.00978517532	881
Coq.ZArith.Znat.Z2N.inj_min	40
Coq.ZArith.Znat.Z2N.inj_max	40
Coq.ZArith.Znat.Z2N.inj_div	40
Coq.ZArith.Znat.Z2N.inj_mod	40
Coq.ZArith.Znat.Z2N.inj_quot	40
Coq.ZArith.Znat.Z2N.inj_rem	40
Coq.ZArith.Znat.Z2N.inj_div2	40	0.0.0.0.0.2.0.0.0	search with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: destruct p as [p| p| ]; only 1: trivial; only 1: trivial; only 1: trivial; only 1: simpl; only 1: trivial).	0.346018791199	166
Coq.ZArith.Znat.Z2N.inj_quot2	40	2.1.0.0	search with cache (only 1: destruct n as [| p| p]; only 1: trivial; only 1: now destruct p; only 1: now destruct p).	0.0762939453125	11
Coq.ZArith.Znat.Z2N.inj_pow	40
Coq.ZArith.Znat.Z2N.inj_testbit	40
Coq.ZArith.Znat.Zabs2N.abs_N_spec	40	0.0.0.0.0.0.0	search with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	0.0437481403351	7
Coq.ZArith.Znat.Zabs2N.abs_N_nonneg	40	1	search with cache (only 1: now destruct n).	0.0322270393372	2
Coq.ZArith.Znat.Zabs2N.id_abs	40	6	search with cache (only 1: now destruct n).	0.0307238101959	7
Coq.ZArith.Znat.Zabs2N.id	40	0	search with cache (only 1: now destruct n).	0.0295000076294	1
Coq.ZArith.Znat.Zabs2N.inj_0	40	0	search with cache (only 1: reflexivity).	0.0278418064117	1
Coq.ZArith.Znat.Zabs2N.inj_pos	40	0	search with cache (only 1: trivial).	0.028048992157	1
Coq.ZArith.Znat.Zabs2N.inj_neg	40	0	search with cache (only 1: reflexivity).	0.0272779464722	1
Coq.ZArith.Znat.Zabs2N.inj_opp	40	0.0.0.0.0.0.0	search with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	0.0426468849182	7
Coq.ZArith.Znat.Zabs2N.inj_succ	40	1.3.1.0.1	search with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: now rewrite Pos.add_1_r; only 1: now destruct 1).	0.702306032181	169
Coq.ZArith.Znat.Zabs2N.inj_add	40	0.1.0.1.0.0.0.0.0.0	search with cache (only 1: destruct n, m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: now destruct 1 || now destruct 2; only 1: trivial; only 1: now destruct 1 || now destruct 2; only 1: trivial).	2.84146094322	1107
Coq.ZArith.Znat.Zabs2N.inj_mul	40	0.0.0.0.0.0.0.0.0.0	search with cache (only 1: destruct n, m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial).	0.0578269958496	10
Coq.ZArith.Znat.Zabs2N.inj_sub	40
Coq.ZArith.Znat.Zabs2N.inj_pred	40	0.0.3.2.0.3	search with cache (only 1: destruct n; only 1: simpl; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l; only 1: now destruct p; only 1: simpl; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l).	1.1338570118	298
Coq.ZArith.Znat.Zabs2N.inj_compare	40	3.0	search with cache (only 1: intros Hn Hm; only 1: now destruct n, m).	0.304904222488	5
Coq.ZArith.Znat.Zabs2N.inj_le	40	0.1.0	search with cache (only 1: intros Hn Hm; only 1: unfold Z.le, N.le; only 1: now rewrite Z2N.inj_compare).	0.0356450080872	4
Coq.ZArith.Znat.Zabs2N.inj_lt	40	0.1.0	search with cache (only 1: intros Hn Hm; only 1: unfold Z.lt, N.lt; only 1: now rewrite Z2N.inj_compare).	0.0349149703979	4
Coq.ZArith.Znat.Zabs2N.inj_min	40
Coq.ZArith.Znat.Zabs2N.inj_max	40
Coq.ZArith.Znat.Zabs2N.inj_quot	40
Coq.ZArith.Znat.Zabs2N.inj_rem	40
Coq.ZArith.Znat.Zabs2N.inj_pow	40
Coq.ZArith.Znat.Zabs2N.inj_succ_abs	40	2.0.2.0.0.0.3	search with cache (only 1: destruct n; only 1: simpl; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l; only 1: simpl; only 1: now rewrite Pos.add_1_r; only 1: simpl; only 1: now rewrite Pos.add_1_r).	1.26601290703	633
Coq.ZArith.Znat.Zabs2N.inj_add_abs	40	7	search with cache (only 1: now destruct n, m).	0.533657073975	114
Coq.ZArith.Znat.Zabs2N.inj_mul_abs	40	0	search with cache (only 1: now destruct n, m).	0.147505998611	1
Coq.ZArith.Znat.Nat2Z.inj_0	40	0	search with cache (only 1: auto).	0.0278239250183	1
Coq.ZArith.Znat.Nat2Z.inj_succ	40	0.0.0.2	search with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: now rewrite Pos.add_1_r).	0.0421679019928	6
Coq.ZArith.Znat.Nat2Z.is_nonneg	40	0	search with cache (only 1: now destruct n).	0.0360538959503	1
Coq.ZArith.Znat.Nat2Z.id	40	0.1.0.0.0	search with cache (only 1: induction n; only 1: trivial; only 1: simpl; only 1: rewrite Pos.of_nat_succ; only 1: now apply Nat2Pos.id).	0.0467910766602	6
Coq.ZArith.Znat.Nat2Z.inj	40
Coq.ZArith.Znat.Nat2Z.inj_iff	40	1.0.1.0.0	search with cache (only 1: split; only 1: intros H; only 1: now rewrite <- (id n), <- (id m), H; only 1: intros H; only 1: now rewrite <- (id n), <- (id m), H).	0.0391979217529	7
Coq.ZArith.Znat.Nat2Z.inj_compare	40
Coq.ZArith.Znat.Nat2Z.inj_le	40	17.1	search with cache (only 1: unfold Z.le; only 1: now rewrite Pos2Nat.inj_compare, Nat.compare_le_iff).	9.29570603371	4353
Coq.ZArith.Znat.Nat2Z.inj_lt	40	8.2	search with cache (only 1: unfold Z.lt, Z.gt; only 1: now rewrite Pos2Nat.inj_compare, Nat.compare_lt_iff).	0.491226911545	160
Coq.ZArith.Znat.Nat2Z.inj_ge	40	13.0	search with cache (only 1: unfold Z.ge; only 1: now rewrite Pos2Nat.inj_compare, Nat.compare_ge_iff).	1.26702690125	370
Coq.ZArith.Znat.Nat2Z.inj_gt	40	9.2	search with cache (only 1: unfold Z.gt; only 1: now rewrite Pos2Nat.inj_compare, Nat.compare_gt_iff).	0.795886039734	253
Coq.ZArith.Znat.Nat2Z.inj_abs_nat	40
Coq.ZArith.Znat.Nat2Z.inj_add	40
Coq.ZArith.Znat.Nat2Z.inj_mul	40
Coq.ZArith.Znat.Nat2Z.inj_sub_max	40
Coq.ZArith.Znat.Nat2Z.inj_sub	40
Coq.ZArith.Znat.Nat2Z.inj_pred_max	40
Coq.ZArith.Znat.Nat2Z.inj_pred	40
Coq.ZArith.Znat.Nat2Z.inj_min	40
Coq.ZArith.Znat.Nat2Z.inj_max	40
Coq.ZArith.Znat.Z2Nat.id	40	0.0.0.0.4.0.0.3.0.2	search with cache (only 1: destruct n; only 1: now destruct 1 || trivial; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: simpl; only 1: rewrite H; only 1: intros; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv; only 1: now destruct 1 || trivial).	1.46973395348	1037
Coq.ZArith.Znat.Z2Nat.inj	40
Coq.ZArith.Znat.Z2Nat.inj_iff	40	1.4.0.1.3.13.1.0.1.0.0	search with cache (only 1: split; only 1: intros; only 1: rewrite <- (id n), <- (id m) by trivial; only 1: now f_equal; only 1: rewrite <- (id n), <- (id m) by trivial; only 1: destruct m; only 1: intros; only 1: now f_equal; only 1: intros; only 1: now f_equal; only 1: now destruct 1 || trivial).	26.3143839836	17320
Coq.ZArith.Znat.Z2Nat.inj_0	40	0	search with cache (only 1: trivial).	0.0276010036469	1
Coq.ZArith.Znat.Z2Nat.inj_pos	40	0	search with cache (only 1: now destruct n).	0.0308518409729	1
Coq.ZArith.Znat.Z2Nat.inj_neg	40	0	search with cache (only 1: trivial).	0.0279941558838	1
Coq.ZArith.Znat.Z2Nat.inj_add	40
Coq.ZArith.Znat.Z2Nat.inj_mul	40
Coq.ZArith.Znat.Z2Nat.inj_succ	40
Coq.ZArith.Znat.Z2Nat.inj_sub	40
Coq.ZArith.Znat.Z2Nat.inj_pred	40
Coq.ZArith.Znat.Z2Nat.inj_compare	40
Coq.ZArith.Znat.Z2Nat.inj_le	40
Coq.ZArith.Znat.Z2Nat.inj_lt	40
Coq.ZArith.Znat.Z2Nat.inj_min	40
Coq.ZArith.Znat.Z2Nat.inj_max	40
Coq.ZArith.Znat.Zabs2Nat.abs_nat_spec	40	0	search with cache (only 1: now destruct n).	0.0301170349121	1
Coq.ZArith.Znat.Zabs2Nat.abs_nat_nonneg	40	0	search with cache (only 1: now destruct n).	0.0311589241028	1
Coq.ZArith.Znat.Zabs2Nat.id_abs	40	0.0.0.0.1.0.0.0.0.0.1.0.0.0.6	search with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv).	2.41961598396	2553
Coq.ZArith.Znat.Zabs2Nat.id	40	0.1.0.0.1	search with cache (only 1: induction n; only 1: trivial; only 1: simpl; only 1: rewrite Pos.of_nat_succ; only 1: now apply Nat2Pos.id).	0.0471940040588	7
Coq.ZArith.Znat.Zabs2Nat.inj_0	40	0	search with cache (only 1: reflexivity).	0.0270349979401	1
Coq.ZArith.Znat.Zabs2Nat.inj_pos	40	0	search with cache (only 1: trivial).	0.027302980423	1
Coq.ZArith.Znat.Zabs2Nat.inj_neg	40	0	search with cache (only 1: trivial).	0.0272889137268	1
Coq.ZArith.Znat.Zabs2Nat.inj_succ	40
Coq.ZArith.Znat.Zabs2Nat.inj_add	40
Coq.ZArith.Znat.Zabs2Nat.inj_mul	40
Coq.ZArith.Znat.Zabs2Nat.inj_sub	40
Coq.ZArith.Znat.Zabs2Nat.inj_pred	40
Coq.ZArith.Znat.Zabs2Nat.inj_compare	40
Coq.ZArith.Znat.Zabs2Nat.inj_le	40	0.1.0	search with cache (only 1: intros Hn Hm; only 1: unfold Z.le; only 1: now rewrite nat_compare_le, Z2Nat.inj_compare).	0.0347790718079	4
Coq.ZArith.Znat.Zabs2Nat.inj_lt	40	0.1.0	search with cache (only 1: intros Hn Hm; only 1: unfold Z.lt; only 1: now rewrite nat_compare_lt, Z2Nat.inj_compare).	0.0347261428833	4
Coq.ZArith.Znat.Zabs2Nat.inj_min	40
Coq.ZArith.Znat.Zabs2Nat.inj_max	40
Coq.ZArith.Znat.Zabs2Nat.inj_succ_abs	40	8.11.0.0.2	search with cache (only 1: destruct n; only 1: simpl; only 1: reflexivity; only 1: now rewrite <- !Zabs_N_nat, Zabs2N.inj_succ, N2Nat.inj_succ; only 1: now rewrite <- !Zabs_N_nat, Zabs2N.inj_succ, N2Nat.inj_succ).	3.18070888519	3882
Coq.ZArith.Znat.Zabs2Nat.inj_add_abs	40
Coq.ZArith.Znat.Zabs2Nat.inj_mul_abs	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: destruct n, m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul).	23.0001211166	26888
Coq.ZArith.Znat.inj_neq	40
Coq.ZArith.Znat.inj_minus2	40
Coq.ZArith.Wf_Z.Z_of_nat_complete	40
Coq.ZArith.Wf_Z.Z_of_nat_complete_inf	40	1.0.0.0.0.0.1.0	search with cache (only 1: intros H; only 1: exists (Z.to_nat x); only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: now apply Z2Nat.id).	0.0178208351135	11
Coq.ZArith.Wf_Z.Z_of_nat_prop	40
Coq.ZArith.Wf_Z.Z_of_nat_set	40
Coq.ZArith.Wf_Z.natlike_ind	40
Coq.ZArith.Wf_Z.natlike_rec	40
Coq.ZArith.Wf_Z.R_wf	40
Coq.ZArith.Wf_Z.natlike_rec2	40
Coq.ZArith.Wf_Z.natlike_rec3	40
Coq.ZArith.Wf_Z.Zlt_0_rec	40
Coq.ZArith.Wf_Z.Zlt_0_ind	40	1.0.0.1.0.1.1.1.0.1.1.0.0.0	search with cache (only 1: intros P Hrec; only 1: induction x as [x IH] using (well_founded_induction_type R_wf); only 1: destruct x; only 1: apply Hrec; only 1: intros y (Hy, Hy'); only 1: assert (0 < 0) by now apply Z.le_lt_trans with y; only 1: discriminate; only 1: apply Hrec; only 1: intros y (Hy, Hy'); only 1: apply IH; only 1: now split; only 1: trivial; only 1: intros Hx; only 1: now destruct Hx).	2.66574501991	3928
Coq.ZArith.Wf_Z.Z_lt_rec	40	1.0.0.1.0.1.1.0.1.0.1.1.0.0.0.0	search with cache (only 1: intros P Hrec; only 1: induction x as [x IH] using (well_founded_induction_type R_wf); only 1: destruct x; only 1: intros Hx; only 1: apply Hrec; only 1: intros y (Hy, Hy'); only 1: assert (0 < 0) by now apply Z.le_lt_trans with y; only 1: discriminate; only 1: intros Hx; only 1: apply Hrec; only 1: intros y (Hy, Hy'); only 1: apply IH; only 1: now split; only 1: trivial; only 1: intros Hx; only 1: now destruct Hx).	2.02517104149	2384
Coq.ZArith.Wf_Z.Z_lt_induction	40	2.0.1.0	search with cache (only 1: intros P Hrec; only 1: apply Zlt_0_rec; only 1: induction x as [x IH] using (well_founded_induction_type R_wf); only 1: auto with sets).	0.0482490062714	36
Coq.ZArith.Wf_Z.Zlt_lower_bound_rec	40
Coq.ZArith.Wf_Z.Zlt_lower_bound_ind	40	0.0.1.0.0.0.0.0.0.0.2.1.0.0.0.2	search with cache (only 1: intros P z Hrec x Hx; only 1: rewrite <- (Z.sub_simpl_r x z); only 1: apply Z.le_0_sub in Hx; only 1: pattern (x - z); only 1: apply Zlt_0_rec; only 1: clear x Hx; only 1: intros x IH Hx; only 1: apply Hrec; only 1: intros y (Hy, Hy'); only 1: rewrite <- (Z.sub_simpl_r y z); only 1: apply IH; only 1: split; only 1: now rewrite Z.le_0_sub; only 1: now apply Z.lt_sub_lt_add_r; only 1: now rewrite <- (Z.add_le_mono_r 0 x z); only 1: trivial).	13.040941	15205
Coq.ZArith.Zpow_facts.Zpower_pos_1_l	40
Coq.ZArith.Zpow_facts.Zpower_pos_0_l	40	0.0.6.0.7.0.0.8	search with cache (only 1: unfold Z.pow_pos; only 1: generalize 1; only 1: induction p; only 1: easy; only 1: simpl; only 1: trivial; only 1: simpl; only 1: auto).	4.42517495155	4226
Coq.ZArith.Zpow_facts.Zpower_pos_pos	40
Coq.ZArith.Zpow_facts.Zpower_le_monotone	40
Coq.ZArith.Zpow_facts.Zpower_lt_monotone	40
Coq.ZArith.Zpow_facts.Zpower_gt_1	40
Coq.ZArith.Zpow_facts.Zmult_power	40
Coq.ZArith.Zpow_facts.Zpower_le_monotone3	40
Coq.ZArith.Zpow_facts.Zpower_le_monotone_inv	40
Coq.ZArith.Zpow_facts.Zpower2_lt_lin	40
Coq.ZArith.Zpow_facts.Zpower2_le_lin	40
Coq.ZArith.Zpow_facts.Zpower2_Psize	40
Coq.ZArith.Zpow_facts.Zpower_mod	40
Coq.ZArith.Zpow_facts.Zpow_mod_pos_correct	40
Coq.ZArith.Zpow_facts.Zpow_mod_correct	40
Coq.ZArith.Zpow_facts.Zpower_divide	40
Coq.ZArith.Zpow_facts.rel_prime_Zpower_r	40
Coq.ZArith.Zpow_facts.rel_prime_Zpower	40
Coq.ZArith.Zpow_facts.prime_power_prime	40
Coq.ZArith.Zpow_facts.Zdivide_power_2	40
Coq.ZArith.Zpow_def.Zpower_theory	40
Coq.ZArith.Zcompare.Zcompare_Gt_trans	40
Coq.ZArith.Zcompare.Zcompare_opp	40
Coq.ZArith.Zcompare.Zcompare_Gt_spec	40
Coq.ZArith.Zcompare.Zcompare_plus_compat	40
Coq.ZArith.Zcompare.Zplus_compare_compat	40
Coq.ZArith.Zcompare.Zcompare_succ_Gt	40
Coq.ZArith.Zcompare.Zcompare_Gt_not_Lt	40
Coq.ZArith.Zcompare.Zcompare_succ_compat	40
Coq.ZArith.Zcompare.Zcompare_mult_compat	40
Coq.ZArith.Zcompare.Zmult_compare_compat_l	40
Coq.ZArith.Zcompare.Zmult_compare_compat_r	40
Coq.ZArith.Zcompare.Zcompare_elim	40
Coq.ZArith.Zcompare.Zcompare_eq_case	40
Coq.ZArith.Zcompare.Zle_compare	40	0.0.1.0.0.10.7.1	search with cache (only 1: intros; only 1: Z.le_elim H; only 1: case Z.compare_spec; only 1: trivial; only 1: auto; only 1: Z.order; only 1: subst; only 1: now rewrite Z.compare_refl).	1.33396100998	2363
Coq.ZArith.Zcompare.Zlt_compare	40	11.0.2.6.0	search with cache (only 1: intros x y z; only 1: case Z.compare_spec; only 1: Z.order; only 1: auto; only 1: Z.order).	1.56366086006	2727
Coq.ZArith.Zcompare.Zge_compare	40	0.0.1.0.0	search with cache (only 1: intros; only 1: case Z.compare_spec; only 1: trivial; only 1: auto; only 1: auto).	0.0137100219727	6
Coq.ZArith.Zcompare.Zgt_compare	40	7.0	search with cache (only 1: intros; only 1: now rewrite H).	0.029354095459	25
Coq.ZArith.Zquot.Zquot_0_r	40
Coq.ZArith.Zquot.Zrem_0_r	40	21	search with cache (only 1: now destruct a).	0.243505001068	403
Coq.ZArith.Zquot.Zrem_0_l	40	0	search with cache (only 1: reflexivity).	0.00878095626831	1
Coq.ZArith.Zquot.Zquot_0_l	40	0	search with cache (only 1: now destruct a).	0.0100560188293	1
Coq.ZArith.Zquot.Z_rem_same	40
Coq.ZArith.Zquot.Z_rem_mult	40
Coq.ZArith.Zquot.Zquot_opp_l	40
Coq.ZArith.Zquot.Zquot_opp_r	40
Coq.ZArith.Zquot.Zrem_opp_l	40
Coq.ZArith.Zquot.Zrem_opp_r	40
Coq.ZArith.Zquot.Zquot_opp_opp	40
Coq.ZArith.Zquot.Zrem_opp_opp	40
Coq.ZArith.Zquot.Zrem_sgn	40
Coq.ZArith.Zquot.Zrem_sgn2	40
Coq.ZArith.Zquot.Zrem_lt_pos	40
Coq.ZArith.Zquot.Zrem_lt_neg	40
Coq.ZArith.Zquot.Zrem_lt_pos_pos	40	13	search with cache (only 1: apply Z.rem_bound_pos).	0.674546003342	371
Coq.ZArith.Zquot.Zrem_lt_pos_neg	40	0.1.0	search with cache (only 1: intros; only 1: generalize (Zrem_lt_pos a b); only 1: lia).	0.0190398693085	4
Coq.ZArith.Zquot.Zrem_lt_neg_pos	40
Coq.ZArith.Zquot.Zrem_lt_neg_neg	40
Coq.ZArith.Zquot.Remainder_equiv	40
Coq.ZArith.Zquot.Zquot_mod_unique_full	40
Coq.ZArith.Zquot.Zquot_unique_full	40
Coq.ZArith.Zquot.Zrem_unique_full	40
Coq.ZArith.Zquot.Z_quot_pos	40
Coq.ZArith.Zquot.Z_quot_lt	40
Coq.ZArith.Zquot.Z_quot_monotone	40
Coq.ZArith.Zquot.Z_mult_quot_le	40
Coq.ZArith.Zquot.Z_mult_quot_ge	40
Coq.ZArith.Zquot.Z_quot_exact_full	40
Coq.ZArith.Zquot.Zrem_le	40
Coq.ZArith.Zquot.Zquot_le_upper_bound	40
Coq.ZArith.Zquot.Zquot_lt_upper_bound	40
Coq.ZArith.Zquot.Zquot_le_lower_bound	40
Coq.ZArith.Zquot.Zquot_sgn	40
Coq.ZArith.Zquot.Z_rem_plus	40
Coq.ZArith.Zquot.Z_quot_plus	40
Coq.ZArith.Zquot.Z_quot_plus_l	40
Coq.ZArith.Zquot.Zquot_mult_cancel_r	40
Coq.ZArith.Zquot.Zquot_mult_cancel_l	40
Coq.ZArith.Zquot.Zmult_rem_distr_l	40
Coq.ZArith.Zquot.Zmult_rem_distr_r	40
Coq.ZArith.Zquot.Zrem_rem	40
Coq.ZArith.Zquot.Zmult_rem	40
Coq.ZArith.Zquot.Zplus_rem	40
Coq.ZArith.Zquot.Zplus_rem_idemp_l	40
Coq.ZArith.Zquot.Zplus_rem_idemp_r	40
Coq.ZArith.Zquot.Zmult_rem_idemp_l	40
Coq.ZArith.Zquot.Zmult_rem_idemp_r	40
Coq.ZArith.Zquot.Zquot_Zquot	40
Coq.ZArith.Zquot.Zquot_mult_le	40
Coq.ZArith.Zquot.Zrem_divides	40
Coq.ZArith.Zquot.Zquot2_odd_remainder	40
Coq.ZArith.Zquot.Zrem_odd	40
Coq.ZArith.Zquot.Zrem_even	40
Coq.ZArith.Zquot.Zeven_rem	40
Coq.ZArith.Zquot.Zodd_rem	40	1.1.0.0.1.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: rewrite Zrem_even; only 1: destruct a as [| p| p]; only 1: trivial; only 1: now destruct p; only 1: now destruct p).	0.11755490303	71
Coq.ZArith.Zquot.Zquotrem_Zdiv_eucl_pos	40
Coq.ZArith.Zquot.Zquot_Zdiv_pos	40	3.0.0.0.1.6.0.0.5	search with cache (only 1: destruct a; only 1: intros; only 1: auto; only 1: generalize (Pos.sqrtrem_spec p); only 1: fix sqrtrem_spec 1; only 1: destruct (Pos.sqrtrem p) as (s, r); only 1: now destruct r; only 1: intros; only 1: easy).	17.5330059528	5936
Coq.ZArith.Zquot.Zrem_Zmod_pos	40
Coq.ZArith.Zquot.Zrem_Zmod_zero	40	0.0.0.0.15.4.0.0.1.1.3.3	search with cache (only 1: intro; only 1: Zdiv.zero_or_not a; only 1: intros; only 1: split; only 1: trivial; only 1: trivial; only 1: intros; only 1: rewrite Z.rem_divide; only 1: split; only 1: now apply Z.mod_divide; only 1: now apply Z.mod_divide; only 1: trivial).	38.5438499451	42318
Coq.ZArith.Zdigits.binary_value	40	0.2.10	search with cache (only 1: induction 1; only 1: constructor; only 1: auto).	0.0796239376068	147
Coq.ZArith.Zdigits.two_compl_value	40	0.0.0.1.0.1	search with cache (only 1: refine (nat_rect _ _ _); only 1: intros; only 1: exact 0%Z; only 1: intros; only 1: inversion H0; only 1: exact (bit_value h + 2 * H H2)%Z).	0.0226218700409	17
Coq.ZArith.Zdigits.Zmod2_twice	40
Coq.ZArith.Zdigits.Z_to_binary	40
Coq.ZArith.Zdigits.Z_to_two_compl	40
Coq.ZArith.Zdigits.binary_value_Sn	40	0.0	search with cache (only 1: intros; only 1: reflexivity).	0.0111541748047	2
Coq.ZArith.Zdigits.Z_to_binary_Sn	40
Coq.ZArith.Zdigits.binary_value_pos	40
Coq.ZArith.Zdigits.two_compl_value_Sn	40	0.0	search with cache (only 1: intros; only 1: auto).	0.0116288661957	2
Coq.ZArith.Zdigits.Z_to_two_compl_Sn	40
Coq.ZArith.Zdigits.Z_to_binary_Sn_z	40	0.2	search with cache (only 1: intros; only 1: auto).	0.0347940921783	27
Coq.ZArith.Zdigits.Z_div2_value	40	3.1.0.0.0.0.0.0.0.0.1	search with cache (only 1: destruct z; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: trivial; only 1: now destruct 1).	6.30832600594	3577
Coq.ZArith.Zdigits.Pdiv2	40	1.8.0.0.1.0.0.2.18	search with cache (only 1: destruct z as [| p| p]; only 1: cbn; only 1: lia; only 1: destruct p; only 1: trivial; only 1: simpl; only 1: trivial; only 1: discriminate; only 1: easy).	10.919946909	12649
Coq.ZArith.Zdigits.Zdiv2_two_power_nat	40
Coq.ZArith.Zdigits.Z_to_two_compl_Sn_z	40	0.0	search with cache (only 1: intros; only 1: auto).	0.0110621452332	2
Coq.ZArith.Zdigits.Zeven_bit_value	40
Coq.ZArith.Zdigits.Zodd_bit_value	40	1.0.7.13.0	search with cache (only 1: intros n Hn; only 1: destruct n; only 1: easy; only 1: now destruct p; only 1: now destruct p).	0.739005088806	1229
Coq.ZArith.Zdigits.Zge_minus_two_power_nat_S	40
Coq.ZArith.Zdigits.Zlt_two_power_nat_S	40	1.0.1.0.0.0.0.1	search with cache (only 1: intros n z; only 1: rewrite (two_power_nat_S n); only 1: generalize (Zmod2_twice z); only 1: destruct (Zeven_odd_dec z) as [H| H]; only 1: rewrite (Zeven_bit_value z H); only 1: lia; only 1: rewrite (Zodd_bit_value z H); only 1: lia).	0.309291124344	150
Coq.ZArith.Zdigits.binary_to_Z_to_binary	40
Coq.ZArith.Zdigits.two_compl_to_Z_to_two_compl	40
Coq.ZArith.Zdigits.Z_to_binary_to_Z	40
Coq.ZArith.Zdigits.Z_to_two_compl_to_Z	40
Coq.ZArith.BinInt.Z.eq_dec	40	0.0.8	search with cache (only 1: decide equality; only 1: apply Pos.eq_dec; only 1: apply Pos.eq_dec).	0.412540912628	22
Coq.ZArith.BinInt.Z.pos_sub_spec	40
Coq.ZArith.BinInt.Z.pos_sub_discr	40
Coq.ZArith.BinInt.Z.pos_sub_diag	40
Coq.ZArith.BinInt.Z.pos_sub_lt	40
Coq.ZArith.BinInt.Z.pos_sub_gt	40
Coq.ZArith.BinInt.Z.pos_sub_opp	40
Coq.ZArith.BinInt.Z.Private_BootStrap.add_0_r	40	1	search with cache (only 1: now destruct n).	0.0194449424744	2
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_0_r	40	1	search with cache (only 1: now destruct n).	0.0197870731354	2
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_1_l	40	0	search with cache (only 1: now destruct n).	0.0198369026184	1
Coq.ZArith.BinInt.Z.Private_BootStrap.add_comm	40
Coq.ZArith.BinInt.Z.Private_BootStrap.opp_add_distr	40
Coq.ZArith.BinInt.Z.Private_BootStrap.opp_inj	40
Coq.ZArith.BinInt.Z.Private_BootStrap.pos_sub_add	40
Coq.ZArith.BinInt.Z.Private_BootStrap.add_assoc_pos	40
Coq.ZArith.BinInt.Z.Private_BootStrap.add_assoc	40
Coq.ZArith.BinInt.Z.Private_BootStrap.add_opp_diag_r	40	0.0.0.0.0.0.9	search with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite pos_sub_spec, Pos.compare_refl; only 1: simpl; only 1: now rewrite pos_sub_spec, Pos.compare_refl).	0.156994104385	138
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_opp_r	40
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_add_distr_pos	40
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_add_distr_r	40
Coq.ZArith.BinInt.Z.one_succ	40	2.0	search with cache (only 1: simpl; only 1: trivial).	0.0192840099335	4
Coq.ZArith.BinInt.Z.two_succ	40	1.0	search with cache (only 1: simpl; only 1: reflexivity).	0.0199098587036	3
Coq.ZArith.BinInt.Z.add_0_l	40	0	search with cache (only 1: now destruct n).	0.0196979045868	1
Coq.ZArith.BinInt.Z.add_succ_l	40
Coq.ZArith.BinInt.Z.opp_0	40	2.0	search with cache (only 1: simpl; only 1: trivial using pos_sub_opp).	0.0203530788422	4
Coq.ZArith.BinInt.Z.opp_succ	40	7.0.1.1.1	search with cache (only 1: destruct n; only 1: reflexivity; only 1: trivial using pos_sub_opp; only 1: simpl; only 1: now destruct p).	1.0382578373	1327
Coq.ZArith.BinInt.Z.succ_pred	40
Coq.ZArith.BinInt.Z.pred_succ	40	0.0	search with cache (only 1: unfold succ, pred; only 1: now rewrite <- add_assoc, add_opp_diag_r, add_0_r).	0.0218269824982	2
Coq.ZArith.BinInt.Z.sub_0_r	40	1	search with cache (only 1: now destruct n).	0.0201389789581	2
Coq.ZArith.BinInt.Z.sub_succ_r	40
Coq.ZArith.BinInt.Z.mul_0_l	40	0	search with cache (only 1: now destruct n).	0.0198938846588	1
Coq.ZArith.BinInt.Z.mul_succ_l	40
Coq.ZArith.BinInt.Z.eqb_eq	40
Coq.ZArith.BinInt.Z.ltb_lt	40
Coq.ZArith.BinInt.Z.leb_le	40
Coq.ZArith.BinInt.Z.compare_eq_iff	40
Coq.ZArith.BinInt.Z.compare_sub	40
Coq.ZArith.BinInt.Z.compare_antisym	40
Coq.ZArith.BinInt.Z.compare_lt_iff	40	0	search with cache (only 1: reflexivity).	0.0186898708344	1
Coq.ZArith.BinInt.Z.compare_le_iff	40	0	search with cache (only 1: reflexivity).	0.0188510417938	1
Coq.ZArith.BinInt.Z.lt_succ_r	40
Coq.ZArith.BinInt.Z.max_l	40
Coq.ZArith.BinInt.Z.max_r	40	0.0.0.4.2	search with cache (only 1: unfold le, max; only 1: case N.compare_spec; only 1: trivial; only 1: trivial; only 1: intuition).	0.134644031525	77
Coq.ZArith.BinInt.Z.min_l	40
Coq.ZArith.BinInt.Z.min_r	40
Coq.ZArith.BinInt.Z.peano_ind	40
Coq.ZArith.BinInt.Z.bi_induction	40
Coq.ZArith.BinInt.Z.abs_eq	40	4	search with cache (only 1: now destruct n).	0.0254650115967	5
Coq.ZArith.BinInt.Z.abs_neq	40	0.0.4.0.0.3	search with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: now destruct 1; only 1: simpl; only 1: trivial).	3.17704796791	518
Coq.ZArith.BinInt.Z.sgn_null	40	4.4.0.0	search with cache (only 1: destruct n; only 1: trivial; only 1: congruence; only 1: congruence).	0.401346921921	241
Coq.ZArith.BinInt.Z.sgn_pos	40	5.0.8.7	search with cache (only 1: destruct n; only 1: now nzsimpl'; only 1: trivial; only 1: now destruct p).	1.7680850029	704
Coq.ZArith.BinInt.Z.sgn_neg	40	0	search with cache (only 1: now destruct n).	0.0308151245117	1
Coq.ZArith.BinInt.Z.pow_0_r	40	0	search with cache (only 1: now destruct n).	0.0224449634552	1
Coq.ZArith.BinInt.Z.pow_succ_r	40
Coq.ZArith.BinInt.Z.pow_neg_r	40	0.10.2.16	search with cache (only 1: destruct m as [| m| m]; only 1: now destruct n; only 1: now rewrite <- ?pred_le_mono; only 1: now destruct 1 || intros _).	8.2034599781	3666
Coq.ZArith.BinInt.Z.pow_pos_fold	40	0	search with cache (only 1: trivial).	0.0204651355743	1
Coq.ZArith.BinInt.Z.square_spec	40
Coq.ZArith.BinInt.Z.sqrtrem_spec	40	5.0.0.1.0.2.0.0.0.9.4	search with cache (only 1: destruct n; only 1: now split; only 1: generalize (Pos.sqrtrem_spec p); only 1: simpl; only 1: destruct 1; only 1: subst; only 1: now split; only 1: subst; only 1: now split; only 1: generalize (Pos.sqrtrem_spec p); only 1: easy).	32.5983929634	23616
Coq.ZArith.BinInt.Z.sqrt_spec	40
Coq.ZArith.BinInt.Z.sqrt_neg	40	0	search with cache (only 1: now destruct n).	0.0275700092316	1
Coq.ZArith.BinInt.Z.sqrtrem_sqrt	40	0.0.2.4.8.0.2.0.0	search with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: destruct (Pos.sqrtrem p) as (s, r); only 1: generalize (Pos.sqrtrem_spec p); only 1: revert p; only 1: fix sqrtrem_spec 1; only 1: now destruct r; only 1: trivial).	12.531992197	9723
Coq.ZArith.BinInt.Z.log2_spec	40
Coq.ZArith.BinInt.Z.log2_nonpos	40	0	search with cache (only 1: now destruct n).	0.0235118865967	1
Coq.ZArith.BinInt.Z.even_spec	40
Coq.ZArith.BinInt.Z.odd_spec	40
Coq.ZArith.BinInt.Z.double_spec	40	0	search with cache (only 1: trivial).	0.0199129581451	1
Coq.ZArith.BinInt.Z.succ_double_spec	40	0.0.0.0.0.0.0.0.0.0.0.3	search with cache (only 1: destruct n as [| [| | ]| [| | ]]; only 1: reflexivity; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy; only 1: reflexivity; only 1: simpl; only 1: easy; only 1: simpl; only 1: trivial; only 1: reflexivity).	2.86164093018	1298
Coq.ZArith.BinInt.Z.pred_double_spec	40	1	search with cache (only 1: now destruct n).	0.0222029685974	2
Coq.ZArith.BinInt.Z.pos_div_eucl_eq	40
Coq.ZArith.BinInt.Z.div_eucl_eq	40
Coq.ZArith.BinInt.Z.div_mod	40
Coq.ZArith.BinInt.Z.pos_div_eucl_bound	40
Coq.ZArith.BinInt.Z.mod_pos_bound	40
Coq.ZArith.BinInt.Z.mod_neg_bound	40
Coq.ZArith.BinInt.Z.quotrem_eq	40
Coq.ZArith.BinInt.Z.quot_rem'	40
Coq.ZArith.BinInt.Z.quot_rem	40	0.0.1.0.6	search with cache (only 1: now destruct 1 || intros _; only 1: rewrite mul_comm; only 1: generalize (quotrem_eq a b); only 1: unfold quot, rem; only 1: now destruct quotrem).	2.85530281067	1320
Coq.ZArith.BinInt.Z.rem_bound_pos	40
Coq.ZArith.BinInt.Z.rem_opp_l'	40
Coq.ZArith.BinInt.Z.rem_opp_r'	40
Coq.ZArith.BinInt.Z.rem_opp_l	40
Coq.ZArith.BinInt.Z.rem_opp_r	40
Coq.ZArith.BinInt.Z.divide_Zpos	40
Coq.ZArith.BinInt.Z.divide_Zpos_Zneg_r	40
Coq.ZArith.BinInt.Z.divide_Zpos_Zneg_l	40
Coq.ZArith.BinInt.Z.ggcd_gcd	40
Coq.ZArith.BinInt.Z.ggcd_correct_divisors	40
Coq.ZArith.BinInt.Z.gcd_divide_l	40	0.4.0.0.2.1.21	search with cache (only 1: rewrite <- N.ggcd_gcd; only 1: generalize (N.ggcd_correct_divisors a b); only 1: destruct ggcd as (g, (aa, bb)); only 1: simpl; only 1: intros (H, _); only 1: exists aa; only 1: now rewrite N.mul_comm).	11.8078150749	9630
Coq.ZArith.BinInt.Z.gcd_divide_r	40	0.2.3.0.0.0.0	search with cache (only 1: rewrite <- ggcd_gcd; only 1: generalize (ggcd_correct_divisors a b); only 1: destruct ggcd as (g, (aa, bb)); only 1: simpl; only 1: intros (_, H); only 1: exists bb; only 1: now rewrite mul_comm).	1.00752711296	477
Coq.ZArith.BinInt.Z.gcd_greatest	40
Coq.ZArith.BinInt.Z.gcd_nonneg	40
Coq.ZArith.BinInt.Z.ggcd_opp	40
Coq.ZArith.BinInt.Z.testbit_of_N	40
Coq.ZArith.BinInt.Z.testbit_of_N'	40	1.0.0.0.1.0.0.0.0.0.0.0.0	search with cache (only 1: destruct a as [| a], n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now destruct a; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now destruct a).	2.19215011597	2304
Coq.ZArith.BinInt.Z.testbit_Zpos	40	2.0.0.0.0.2.1	search with cache (only 1: intro Hn; only 1: rewrite <- testbit_of_N; only 1: f_equal; only 1: destruct n; only 1: trivial; only 1: trivial; only 1: now destruct Hn).	0.359003067017	259
Coq.ZArith.BinInt.Z.testbit_Zneg	40
Coq.ZArith.BinInt.Z.div2_spec	40	0	search with cache (only 1: trivial).	0.0218458175659	1
Coq.ZArith.BinInt.Z.testbit_0_l	40	0.0.0.5	search with cache (only 1: destruct n; only 1: trivial; only 1: trivial; only 1: trivial).	0.0293481349945	9
Coq.ZArith.BinInt.Z.testbit_neg_r	40	0	search with cache (only 1: now destruct n).	0.0330629348755	1
Coq.ZArith.BinInt.Z.testbit_odd_0	40
Coq.ZArith.BinInt.Z.testbit_even_0	40	5	search with cache (only 1: now destruct a as [| a| [a| a| ]]).	0.0322561264038	12
Coq.ZArith.BinInt.Z.testbit_odd_succ	40
Coq.ZArith.BinInt.Z.testbit_even_succ	40
Coq.ZArith.BinInt.Z.shiftr_spec_aux	40
Coq.ZArith.BinInt.Z.shiftl_spec_low	40
Coq.ZArith.BinInt.Z.shiftl_spec_high	40
Coq.ZArith.BinInt.Z.shiftr_spec	40
Coq.ZArith.BinInt.Z.lor_spec	40
Coq.ZArith.BinInt.Z.land_spec	40
Coq.ZArith.BinInt.Z.ldiff_spec	40
Coq.ZArith.BinInt.Z.lxor_spec	40
Coq.ZArith.BinInt.Z.gt_lt_iff	40
Coq.ZArith.BinInt.Z.gt_lt	40	0.3	search with cache (only 1: unfold lt, gt; only 1: now rewrite compare_antisym, CompOpp_iff).	0.0396280288696	5
Coq.ZArith.BinInt.Z.lt_gt	40	0	search with cache (only 1: apply gt_lt_iff).	0.0283799171448	1
Coq.ZArith.BinInt.Z.ge_le_iff	40
Coq.ZArith.BinInt.Z.ge_le	40	0.0	search with cache (only 1: unfold le, ge; only 1: now rewrite compare_antisym, CompOpp_iff).	0.0397789478302	2
Coq.ZArith.BinInt.Z.le_ge	40	0	search with cache (only 1: apply ge_le_iff).	0.0283288955688	1
Coq.ZArith.BinInt.Z.gtb_ltb	40
Coq.ZArith.BinInt.Z.geb_leb	40
Coq.ZArith.BinInt.Z.gtb_lt	40	1.2.6.0	search with cache (only 1: unfold ltb, lt; only 1: unfold gtb, ltb; only 1: rewrite compare_antisym; only 1: now case compare).	1.0792298317	553
Coq.ZArith.BinInt.Z.geb_le	40
Coq.ZArith.BinInt.Z.gtb_spec	40
Coq.ZArith.BinInt.Z.geb_spec	40
Coq.ZArith.BinInt.Z.add_reg_l	40	0.0.2.0.9	search with cache (only 1: nzinduct n; only 1: trivial; only 1: intro n; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.813759088516	208
Coq.ZArith.BinInt.Z.mul_reg_l	40
Coq.ZArith.BinInt.Z.mul_reg_r	40
Coq.ZArith.BinInt.Z.opp_eq_mul_m1	40	0.1.1.0.1.0.0.2.12	search with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite ?Pos.mul_1_r; only 1: trivial using pos_sub_opp; only 1: simpl; only 1: rewrite ?Pos.mul_1_r; only 1: auto).	1.65339279175	1089
Coq.ZArith.BinInt.Z.add_diag	40	4	search with cache (only 1: now nzsimpl').	0.162292957306	5
Coq.ZArith.BinInt.Z.compare_opp	40
Coq.ZArith.BinInt.Z.add_compare_mono_l	40
Coq.ZArith.BinInt.Z.testbit_mod_pow2	40
Coq.ZArith.BinInt.Z.testbit_ones	40
Coq.ZArith.BinInt.Z.testbit_ones_nonneg	40	0.0.0.0.9	search with cache (only 1: destruct (ltb_spec i n); only 1: rewrite ?testbit_neg_r, ?ones_spec_low, ?ones_spec_high by auto; only 1: trivial; only 1: rewrite ?testbit_neg_r, ?ones_spec_low, ?ones_spec_high by auto; only 1: trivial).	2.34173989296	1305
Coq.ZArith.BinInt.Pos2Z.id	40	0	search with cache (only 1: now injection 1 || (intros; now f_equal)).	0.0369348526001	1
Coq.ZArith.BinInt.Pos2Z.inj	40	8	search with cache (only 1: congruence).	0.110399007797	43
Coq.ZArith.BinInt.Pos2Z.inj_iff	40	7.1.1	search with cache (only 1: split; only 1: now injection 1; only 1: congruence).	0.402409076691	204
Coq.ZArith.BinInt.Pos2Z.is_pos	40	2	search with cache (only 1: easy).	0.0383329391479	3
Coq.ZArith.BinInt.Pos2Z.is_nonneg	40	1.2.3	search with cache (only 1: red; only 1: simpl; only 1: easy || now destruct 1).	0.0534110069275	18
Coq.ZArith.BinInt.Pos2Z.inj_1	40	4	search with cache (only 1: trivial).	0.037367105484	5
Coq.ZArith.BinInt.Pos2Z.inj_xO	40	2.1	search with cache (only 1: simpl; only 1: easy).	0.273524045944	5
Coq.ZArith.BinInt.Pos2Z.inj_xI	40	0.1	search with cache (only 1: simpl; only 1: easy).	0.301682949066	3
Coq.ZArith.BinInt.Pos2Z.inj_succ	40	0.10	search with cache (only 1: rewrite <- Pos.add_1_r; only 1: trivial).	0.0686359405518	33
Coq.ZArith.BinInt.Pos2Z.inj_add	40	0.0	search with cache (only 1: simpl; only 1: trivial).	0.0387980937958	2
Coq.ZArith.BinInt.Pos2Z.inj_sub	40
Coq.ZArith.BinInt.Pos2Z.inj_sub_max	40	1.7.7.6.3	search with cache (only 1: revert q; only 1: generalize (Pos.sqrtrem_spec p); only 1: revert p; only 1: fix sqrtrem_spec 1; only 1: easy).	25.9603860378	32403
Coq.ZArith.BinInt.Pos2Z.inj_pred	40	1.4.0.0.0	search with cache (only 1: destruct p; only 1: trivial; only 1: trivial; only 1: simpl; only 1: easy').	0.0551431179047	16
Coq.ZArith.BinInt.Pos2Z.inj_mul	40	3.1	search with cache (only 1: simpl in *; only 1: trivial).	0.0472640991211	12
Coq.ZArith.BinInt.Pos2Z.inj_pow_pos	40	0	search with cache (only 1: now apply Pos.iter_swap_gen).	0.0375170707703	1
Coq.ZArith.BinInt.Pos2Z.inj_pow	40	0	search with cache (only 1: now apply Pos.iter_swap_gen).	0.0372109413147	1
Coq.ZArith.BinInt.Pos2Z.inj_square	40	0	search with cache (only 1: auto).	0.0364091396332	1
Coq.ZArith.BinInt.Pos2Z.inj_compare	40	1.0	search with cache (only 1: revert q; only 1: trivial).	0.0388009548187	3
Coq.ZArith.BinInt.Pos2Z.inj_leb	40	0.0	search with cache (only 1: unfold Pos.leb, Pos.le; only 1: reflexivity).	0.0389719009399	2
Coq.ZArith.BinInt.Pos2Z.inj_ltb	40	0	search with cache (only 1: reflexivity).	0.03635597229	1
Coq.ZArith.BinInt.Pos2Z.inj_eqb	40	0	search with cache (only 1: reflexivity).	0.035975933075	1
Coq.ZArith.BinInt.Pos2Z.inj_max	40
Coq.ZArith.BinInt.Pos2Z.inj_min	40
Coq.ZArith.BinInt.Pos2Z.inj_sqrt	40	0	search with cache (only 1: auto).	0.0362510681152	1
Coq.ZArith.BinInt.Pos2Z.inj_gcd	40	0.4	search with cache (only 1: simpl; only 1: congruence).	0.0398499965668	6
Coq.ZArith.BinInt.Pos2Z.inj_divide	40
Coq.ZArith.BinInt.Pos2Z.inj_testbit	40	1.0.0.0.1.0.6.0.3.14.0	search with cache (only 1: intro Hn; only 1: Z.le_elim Hn; only 1: simpl; only 1: now destruct n; only 1: destruct n; only 1: simpl; only 1: now destruct a; only 1: simpl; only 1: trivial; only 1: simpl; only 1: easy).	2.50505399704	3719
Coq.ZArith.BinInt.Pos2Z.inj_neg	40	5	search with cache (only 1: now injection 1).	0.0656349658966	21
Coq.ZArith.BinInt.Pos2Z.inj_neg_iff	40	1.7.0.0	search with cache (only 1: split; only 1: now injection 1; only 1: destruct 1; only 1: trivial).	0.379757881165	178
Coq.ZArith.BinInt.Pos2Z.inj_pos	40	1	search with cache (only 1: now injection 1).	0.043713092804	2
Coq.ZArith.BinInt.Pos2Z.inj_pos_iff	40	2.1.0.0	search with cache (only 1: split; only 1: now injection 1; only 1: intros; only 1: now f_equal).	0.0430510044098	7
Coq.ZArith.BinInt.Pos2Z.neg_is_neg	40	0	search with cache (only 1: reflexivity).	0.037575006485	1
Coq.ZArith.BinInt.Pos2Z.neg_is_nonpos	40	2	search with cache (only 1: easy).	0.044340133667	3
Coq.ZArith.BinInt.Pos2Z.pos_is_pos	40	0	search with cache (only 1: reflexivity).	0.0372798442841	1
Coq.ZArith.BinInt.Pos2Z.pos_is_nonneg	40	0	search with cache (only 1: easy).	0.0429320335388	1
Coq.ZArith.BinInt.Pos2Z.neg_le_pos	40	0	search with cache (only 1: easy).	0.0447731018066	1
Coq.ZArith.BinInt.Pos2Z.neg_lt_pos	40	0	search with cache (only 1: easy).	0.0385320186615	1
Coq.ZArith.BinInt.Pos2Z.neg_le_neg	40
Coq.ZArith.BinInt.Pos2Z.neg_lt_neg	40	6.4.2.0.4	search with cache (only 1: assert (le0 : forall n, (0 <= n)%nat) by (induction n; auto); only 1: assert (leS : forall n m, (n <= m)%nat -> (S n <= S m)%nat) by (induction 1; auto); only 1: red; only 1: simpl; only 1: now rewrite <- Pos.compare_antisym).	3.12434697151	3513
Coq.ZArith.BinInt.Pos2Z.pos_le_pos	40	1.0	search with cache (only 1: intros; only 1: easy).	0.0387349128723	3
Coq.ZArith.BinInt.Pos2Z.pos_lt_pos	40	0.0.1	search with cache (only 1: unfold Z.lt; only 1: simpl; only 1: trivial).	0.0424280166626	4
Coq.ZArith.BinInt.Pos2Z.neg_xO	40	0	search with cache (only 1: reflexivity).	0.0374760627747	1
Coq.ZArith.BinInt.Pos2Z.neg_xI	40	0	search with cache (only 1: reflexivity).	0.0376710891724	1
Coq.ZArith.BinInt.Pos2Z.pos_xO	40	0	search with cache (only 1: reflexivity).	0.0376069545746	1
Coq.ZArith.BinInt.Pos2Z.pos_xI	40	0	search with cache (only 1: reflexivity).	0.036817073822	1
Coq.ZArith.BinInt.Pos2Z.opp_neg	40	0.0	search with cache (only 1: simpl; only 1: trivial).	0.0395638942719	2
Coq.ZArith.BinInt.Pos2Z.opp_pos	40	1.0	search with cache (only 1: simpl; only 1: trivial).	0.0392401218414	3
Coq.ZArith.BinInt.Pos2Z.add_neg_neg	40	0	search with cache (only 1: reflexivity).	0.0369441509247	1
Coq.ZArith.BinInt.Pos2Z.add_pos_neg	40	1.0	search with cache (only 1: revert q; only 1: trivial).	0.892906904221	193
Coq.ZArith.BinInt.Pos2Z.add_neg_pos	40	0	search with cache (only 1: reflexivity).	0.0367181301117	1
Coq.ZArith.BinInt.Pos2Z.add_pos_pos	40	0	search with cache (only 1: reflexivity).	0.0364611148834	1
Coq.ZArith.BinInt.Pos2Z.divide_pos_neg_r	40
Coq.ZArith.BinInt.Pos2Z.divide_pos_neg_l	40
Coq.ZArith.BinInt.Pos2Z.testbit_neg	40	2.1.1.0.0.0.6.12.14.0	search with cache (only 1: intro Hn; only 1: Z.le_elim Hn; only 1: now destruct n; only 1: destruct n; only 1: unfold Z.testbit; only 1: now destruct a as [| [| | ]| ]; only 1: unfold Z.testbit; only 1: trivial; only 1: unfold Z.testbit; only 1: easy).	1.96342611313	2645
Coq.ZArith.BinInt.Pos2Z.testbit_pos	40	0	search with cache (only 1: apply Z.testbit_Zpos).	0.0365738868713	1
Coq.ZArith.BinInt.Z2Pos.id	40
Coq.ZArith.BinInt.Z2Pos.inj	40
Coq.ZArith.BinInt.Z2Pos.inj_iff	40
Coq.ZArith.BinInt.Z2Pos.to_pos_nonpos	40
Coq.ZArith.BinInt.Z2Pos.inj_1	40	0	search with cache (only 1: trivial).	0.0370500087738	1
Coq.ZArith.BinInt.Z2Pos.inj_double	40	4.4.0.1.2	search with cache (only 1: destruct x; only 1: now rewrite ?Pos.square_xO; only 1: trivial; only 1: simpl; only 1: easy).	0.325985908508	350
Coq.ZArith.BinInt.Z2Pos.inj_succ_double	40	0	search with cache (only 1: now destruct x).	0.0485289096832	1
Coq.ZArith.BinInt.Z2Pos.inj_succ	40	1.2.0.2.5.2.4	search with cache (only 1: destruct x; only 1: simpl; only 1: easy; only 1: simpl; only 1: now destruct p; only 1: simpl; only 1: now rewrite ?Pos.add_carry_spec, ?IHp).	0.649224996567	693
Coq.ZArith.BinInt.Z2Pos.inj_add	40
Coq.ZArith.BinInt.Z2Pos.inj_sub	40
Coq.ZArith.BinInt.Z2Pos.inj_pred	40	0.4.0.0.1	search with cache (only 1: destruct x; only 1: simpl; only 1: easy; only 1: now destruct p; only 1: trivial).	0.109590053558	35
Coq.ZArith.BinInt.Z2Pos.inj_mul	40	0.0.0.0.0	search with cache (only 1: destruct x; only 1: easy; only 1: easy || now destruct y; only 1: simpl; only 1: easy || now destruct y).	0.0936439037323	5
Coq.ZArith.BinInt.Z2Pos.inj_pow	40
Coq.ZArith.BinInt.Z2Pos.inj_pow_pos	40
Coq.ZArith.BinInt.Z2Pos.inj_compare	40	1.2.1.0.9	search with cache (only 1: destruct x; only 1: simpl; only 1: easy; only 1: easy || now destruct y; only 1: easy).	0.571709871292	306
Coq.ZArith.BinInt.Z2Pos.inj_leb	40	2.1.4.4	search with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy).	0.522819042206	253
Coq.ZArith.BinInt.Z2Pos.inj_ltb	40	0.0.0.0	search with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.089937210083	4
Coq.ZArith.BinInt.Z2Pos.inj_eqb	40	0.0.0.1	search with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.089038848877	5
Coq.ZArith.BinInt.Z2Pos.inj_max	40
Coq.ZArith.BinInt.Z2Pos.inj_min	40
Coq.ZArith.BinInt.Z2Pos.inj_sqrt	40	0.0.1.0.0.1.0	search with cache (only 1: destruct x; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite ?Pos.max_1_r, <- ?Pos2Z.inj_max; only 1: simpl; only 1: trivial).	0.0529668331146	9
Coq.ZArith.BinInt.Z2Pos.inj_gcd	40	0.0.0.2.1	search with cache (only 1: intros; only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.0978028774261	17
Coq.ZArith.BinInt.Zplus_minus_eq	40
Coq.ZArith.BinInt.Zpos_eq	40	6.2	search with cache (only 1: intros x y z; only 1: now f_equal).	0.107918024063	38
Coq.ZArith.BinInt.ZL0	40	1	search with cache (only 1: trivial).	0.0385711193085	2
Coq.ZArith.BinInt.Zplus_diag_eq_mult_2	40	5	search with cache (only 1: now Z.nzsimpl').	0.329214096069	15
Coq.ZArith.BinInt.Z_eq_mult	40
Coq.ZArith.Zcomplements.floor_gt0	40	0	search with cache (only 1: easy).	0.0302910804749	1
Coq.ZArith.Zcomplements.floor_ok	40
Coq.ZArith.Zcomplements.Z_lt_abs_rec	40
Coq.ZArith.Zcomplements.Z_lt_abs_induction	40
Coq.ZArith.Zcomplements.Zcase_sign	40
Coq.ZArith.Zcomplements.sqr_pos	40	2.6	search with cache (only 1: Z.swap_greater; only 1: now destruct n).	0.0493519306183	10
Coq.ZArith.Zcomplements.Zlength_correct	40
Coq.ZArith.Zcomplements.Zlength_nil	40	1	search with cache (only 1: auto).	0.0292789936066	2
Coq.ZArith.Zcomplements.Zlength_cons	40
Coq.ZArith.Zcomplements.Zlength_nil_inv	40
Coq.ZArith.Zeven.Zeven_equiv	40
Coq.ZArith.Zeven.Zodd_equiv	40
Coq.ZArith.Zeven.Zeven_bool_iff	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.14	search with cache (only 1: destruct n; only 1: simpl; only 1: intuition; only 1: destruct p; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: destruct p; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).	4.80719399452	4845
Coq.ZArith.Zeven.Zodd_bool_iff	40
Coq.ZArith.Zeven.Zodd_even_bool	40
Coq.ZArith.Zeven.Zeven_odd_bool	40
Coq.ZArith.Zeven.Zeven_odd_dec	40
Coq.ZArith.Zeven.Zeven_dec	40	0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0	search with cache (only 1: destruct n as [| p| p]; only 1: simpl; only 1: now left || now right; only 1: destruct p; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right; only 1: destruct p; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right).	19.9826891422	15355
Coq.ZArith.Zeven.Zodd_dec	40	0.0.0.0.1.0.0.0.0.1.0.0.0	search with cache (only 1: destruct n as [| p| p]; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: destruct p; only 1: now left || now right; only 1: now left || now right; only 1: now left || now right; only 1: simpl; only 1: destruct p; only 1: now left || now right; only 1: now left || now right; only 1: now left || now right).	4.52926588058	3546
Coq.ZArith.Zeven.Zeven_not_Zodd	40	3.2.1.0.0	search with cache (only 1: destruct n as [| p| p]; only 1: simpl; only 1: tauto; only 1: now destruct p; only 1: now destruct p).	0.200182914734	138
Coq.ZArith.Zeven.Zodd_not_Zeven	40	0.0.0.0.0	search with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd; only 1: destruct Z.odd; only 1: intuition; only 1: intuition).	0.0525081157684	5
Coq.ZArith.Zeven.Zeven_Sn	40
Coq.ZArith.Zeven.Zodd_Sn	40
Coq.ZArith.Zeven.Zeven_pred	40
Coq.ZArith.Zeven.Zodd_pred	40
Coq.ZArith.Zeven.Zeven_div2	40	0	search with cache (only 1: now destruct n as [| [| | ]| [| | ]]).	0.0351209640503	1
Coq.ZArith.Zeven.Zodd_div2	40	0.0.1.1.1.0.0.1.0.1.0	search with cache (only 1: destruct n as [| [| | ]| [| | ]]; only 1: now Z.nzsimpl'; only 1: reflexivity; only 1: simpl; only 1: easy; only 1: now Z.nzsimpl'; only 1: simpl; only 1: now rewrite Pos.pred_double_succ; only 1: simpl; only 1: easy; only 1: now Z.nzsimpl').	21.8526608944	4057
Coq.ZArith.Zeven.Zquot2_odd_eqn	40	0.0.0.0.0.0.0.1.15	search with cache (only 1: destruct n as [| [| | ]| [| | ]]; only 1: now Z.nzsimpl; only 1: reflexivity; only 1: simpl; only 1: reflexivity; only 1: now Z.nzsimpl'; only 1: reflexivity; only 1: reflexivity; only 1: now Z.nzsimpl).	13.4859972	2844
Coq.ZArith.Zeven.Zeven_quot2	40	0.0	search with cache (only 1: boolify_even_odd; only 1: now destruct n as [| [| | ]| [| | ]]).	0.0586881637573	2
Coq.ZArith.Zeven.Zodd_quot2	40	4.1.1.0	search with cache (only 1: boolify_even_odd; only 1: rewrite (Zdiv2_odd_eqn n)  at 1; only 1: rewrite (Zdiv2_odd_eqn n)  at 1; only 1: now destruct n as [| [p| p| ]| [p| p| ]]).	0.484435081482	17
Coq.ZArith.Zeven.Zodd_quot2_neg	40	3.2.0	search with cache (only 1: intros Hn Hn'; only 1: apply Zodd_bool_iff in Hn'; only 1: now destruct n as [| [p| p| ]| [p| p| ]]).	0.224513053894	25
Coq.ZArith.Zeven.Zquot2_opp	40	0.0.0.0.0.4.2.0.0.9.0.16	search with cache (only 1: destruct n; only 1: trivial; only 1: induction p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: simpl; only 1: auto; only 1: reflexivity; only 1: simpl; only 1: trivial).	14.8357419968	18804
Coq.ZArith.Zeven.Zquot2_quot	40
Coq.ZArith.Zeven.Z_modulo_2	40
Coq.ZArith.Zeven.Zsplit2	40
Coq.ZArith.Zeven.Zeven_ex	40	1.0.3	search with cache (only 1: intros Hn; only 1: exists (Z.div2 n); only 1: exact (Zeven_div2 n Hn)).	0.0454139709473	18
Coq.ZArith.Zeven.Zodd_ex	40	0.0.6.2.5	search with cache (only 1: boolify_even_odd; only 1: intros Hn; only 1: exists (Z.div2 n); only 1: rewrite (Zdiv2_odd_eqn n)  at 1; only 1: now rewrite Hn).	32.8202309608	1756
Coq.ZArith.Zeven.Zeven_2p	40	1.2.6.13	search with cache (only 1: induction p; only 1: now Z.nzsimpl; only 1: reflexivity; only 1: reflexivity).	1.3008480072	1059
Coq.ZArith.Zeven.Zodd_2p_plus_1	40	0.0.6.22	search with cache (only 1: induction p; only 1: now Z.nzsimpl'; only 1: now destruct p; only 1: now destruct p).	4.63924503326	1768
Coq.ZArith.Zeven.Zeven_plus_Zodd	40
Coq.ZArith.Zeven.Zeven_plus_Zeven	40	1.2.0.2.0.0	search with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: intros Ha Hb; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: now rewrite Z.odd_add, Ha, Hb).	0.348428010941	77
Coq.ZArith.Zeven.Zodd_plus_Zeven	40	1.0.0.0	search with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: intros Ha Hb; only 1: now rewrite Z.odd_add, Ha, Hb).	0.0714089870453	5
Coq.ZArith.Zeven.Zodd_plus_Zodd	40	1.0.0.0	search with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: intros Ha Hb; only 1: now rewrite Z.odd_add, Ha, Hb).	0.0743191242218	5
Coq.ZArith.Zeven.Zeven_mult_Zeven_l	40
Coq.ZArith.Zeven.Zeven_mult_Zeven_r	40
Coq.ZArith.Zeven.Zodd_mult_Zodd	40
Coq.ZArith.Zmisc.iter_nat_of_Z	40
Coq.ZArith.Znumtheory.Zdivide_opp_r	40
Coq.ZArith.Znumtheory.Zdivide_opp_r_rev	40	0	search with cache (only 1: apply Z.divide_opp_r).	0.00978016853333	1
Coq.ZArith.Znumtheory.Zdivide_opp_l	40
Coq.ZArith.Znumtheory.Zdivide_opp_l_rev	40	0	search with cache (only 1: apply Z.divide_opp_l).	0.00836706161499	1
Coq.ZArith.Znumtheory.Zdivide_Zabs_l	40	5.1.2.0.19	search with cache (only 1: case a; only 1: trivial; only 1: easy; only 1: intros n; only 1: apply Z.divide_opp_l).	1.74602103233	1492
Coq.ZArith.Znumtheory.Zdivide_Zabs_inv_l	40	0	search with cache (only 1: apply Z.divide_abs_l).	0.00751495361328	1
Coq.ZArith.Znumtheory.Zmult_one	40
Coq.ZArith.Znumtheory.Zdivide_bounds	40
Coq.ZArith.Znumtheory.Zmod_divide	40
Coq.ZArith.Znumtheory.Zdivide_mod	40	0.0.4.0.1.1.1	search with cache (only 1: intros a b; only 1: zero_or_not b; only 1: intros (c, Hc); only 1: rewrite Hc; only 1: apply Z.mod_mul; only 1: subst; only 1: trivial).	0.733783960342	688
Coq.ZArith.Znumtheory.Zdivide_dec	40
Coq.ZArith.Znumtheory.Z_lt_neq	40
Coq.ZArith.Znumtheory.Zdivide_Zdiv_eq	40
Coq.ZArith.Znumtheory.Zdivide_Zdiv_eq_2	40
Coq.ZArith.Znumtheory.Zdivide_le	40	18.2	search with cache (only 1: intros n Hn IHn; only 1: now apply Z.divide_pos_le).	0.97282910347	953
Coq.ZArith.Znumtheory.Zdivide_Zdiv_lt_pos	40
Coq.ZArith.Znumtheory.Zmod_div_mod	40
Coq.ZArith.Znumtheory.Zmod_divide_minus	40
Coq.ZArith.Znumtheory.Zdivide_mod_minus	40
Coq.ZArith.Znumtheory.Zis_gcd_sym	40
Coq.ZArith.Znumtheory.Zis_gcd_0	40	1.6.0.0.2.1.7	search with cache (only 1: constructor; only 1: destruct (Z.eq_dec a 0) as [Ha| Ha]; only 1: subst; only 1: apply Z.divide_0_r; only 1: now Z.nzsimpl; only 1: apply Z.divide_0_r; only 1: trivial).	2.45034480095	1999
Coq.ZArith.Znumtheory.Zis_gcd_1	40	1.4.1.14	search with cache (only 1: constructor; only 1: auto with zarith; only 1: auto with zarith; only 1: auto with zarith).	4.3267428875	2477
Coq.ZArith.Znumtheory.Zis_gcd_refl	40	1.0.0.0.1	search with cache (only 1: constructor; only 1: auto with zarith; only 1: auto with zarith; only 1: intros n; only 1: auto with zarith).	0.0467510223389	13
Coq.ZArith.Znumtheory.Zis_gcd_minus	40	0.0.0.0.0	search with cache (only 1: induction 1; only 1: constructor; only 1: intuition; only 1: intuition; only 1: intuition).	0.0303711891174	5
Coq.ZArith.Znumtheory.Zis_gcd_opp	40	0.0.0.0.0	search with cache (only 1: induction 1; only 1: constructor; only 1: intuition; only 1: intuition; only 1: intuition).	0.0476620197296	5
Coq.ZArith.Znumtheory.Zis_gcd_0_abs	40
Coq.ZArith.Znumtheory.Zis_gcd_unique	40
Coq.ZArith.Znumtheory.Zis_gcd_for_euclid	40
Coq.ZArith.Znumtheory.Zis_gcd_for_euclid2	40
Coq.ZArith.Znumtheory.euclid_rec	40
Coq.ZArith.Znumtheory.euclid	40
Coq.ZArith.Znumtheory.Zis_gcd_uniqueness_apart_sign	40	0.0.1.0.0.0.0.0.0	search with cache (only 1: intros a b c d [Hc1 Hc2 Hc3] [Hd1 Hd2 Hd3]; only 1: assert (d | c) by auto; only 1: assert (d | c) by auto; only 1: assert (d | c) by auto; only 1: assert (d | c) by auto; only 1: assert (d | c) by auto; only 1: apply Z.divide_antisym; only 1: auto; only 1: auto).	0.0482850074768	17
Coq.ZArith.Znumtheory.Zis_gcd_bezout	40
Coq.ZArith.Znumtheory.Zis_gcd_mult	40
Coq.ZArith.Znumtheory.rel_prime_bezout	40
Coq.ZArith.Znumtheory.bezout_rel_prime	40
Coq.ZArith.Znumtheory.Gauss	40
Coq.ZArith.Znumtheory.rel_prime_mult	40
Coq.ZArith.Znumtheory.rel_prime_cross_prod	40
Coq.ZArith.Znumtheory.Zis_gcd_rel_prime	40
Coq.ZArith.Znumtheory.rel_prime_sym	40	0.0.0.6.0	search with cache (only 1: induction 1; only 1: constructor; only 1: auto with zarith; only 1: auto with zarith; only 1: auto with zarith).	0.561830043793	88
Coq.ZArith.Znumtheory.rel_prime_div	40
Coq.ZArith.Znumtheory.rel_prime_1	40	2.0.1.1.2	search with cache (only 1: constructor; only 1: auto with zarith; only 1: exists n; only 1: now Z.nzsimpl; only 1: auto with zarith).	0.625569820404	60
Coq.ZArith.Znumtheory.not_rel_prime_0	40
Coq.ZArith.Znumtheory.rel_prime_mod	40
Coq.ZArith.Znumtheory.rel_prime_mod_rev	40
Coq.ZArith.Znumtheory.Zrel_prime_neq_mod_0	40
Coq.ZArith.Znumtheory.prime_divisors	40
Coq.ZArith.Znumtheory.prime_rel_prime	40
Coq.ZArith.Znumtheory.rel_prime_le_prime	40	3.3	search with cache (only 1: intros a b (Hb, Hab); only 1: intuition).	0.0465049743652	42
Coq.ZArith.Znumtheory.prime_mult	40
Coq.ZArith.Znumtheory.not_prime_0	40	9.19	search with cache (only 1: inversion 1; only 1: discriminate).	0.768625020981	1309
Coq.ZArith.Znumtheory.not_prime_1	40	23	search with cache (only 1: easy || now destruct 1).	1.77834510803	1006
Coq.ZArith.Znumtheory.prime_2	40
Coq.ZArith.Znumtheory.prime_3	40
Coq.ZArith.Znumtheory.prime_ge_2	40
Coq.ZArith.Znumtheory.Z_0_1_more	40
Coq.ZArith.Znumtheory.prime_alt	40
Coq.ZArith.Znumtheory.square_not_prime	40
Coq.ZArith.Znumtheory.prime_div_prime	40
Coq.ZArith.Znumtheory.Zgcd_is_gcd	40
Coq.ZArith.Znumtheory.Zgcd_spec	40
Coq.ZArith.Znumtheory.Zdivide_Zgcd	40	4.10	search with cache (only 1: intros a b H; only 1: apply Z.gcd_greatest).	4.21602106094	1413
Coq.ZArith.Znumtheory.Zis_gcd_gcd	40
Coq.ZArith.Znumtheory.Zgcd_div_swap0	40
Coq.ZArith.Znumtheory.Zgcd_div_swap	40
Coq.ZArith.Znumtheory.Zgcd_ass	40
Coq.ZArith.Znumtheory.Zgcd_1_rel_prime	40
Coq.ZArith.Znumtheory.rel_prime_dec	40
Coq.ZArith.Znumtheory.prime_dec_aux	40
Coq.ZArith.Znumtheory.prime_dec	40
Coq.ZArith.Znumtheory.not_prime_divide	40
Coq.ZArith.Zdiv.Z_div_mod_POS	40
Coq.ZArith.Zdiv.Z_div_mod	40
Coq.ZArith.Zdiv.Remainder_equiv	40
Coq.ZArith.Zdiv.Z_div_mod_full	40
Coq.ZArith.Zdiv.Z_mod_remainder	40
Coq.ZArith.Zdiv.Z_div_mod_eq	40	0.0.0.6.0.1.0.0.6	search with cache (only 1: unfold Z.modulo; only 1: Z.swap_greater; only 1: intros Hb; only 1: assert (Hb' : b <> 0) by now destruct b; only 1: unfold Z.div, Z.modulo; only 1: generalize (Z.div_eucl_eq a b Hb'), (Z.mod_pos_bound a b Hb); only 1: unfold Z.modulo; only 1: destruct Z.div_eucl as (q, r); only 1: intuition Z.order).	14.543284893	4963
Coq.ZArith.Zdiv.Zmod_eq_full	40
Coq.ZArith.Zdiv.Zmod_eq	40
Coq.ZArith.Zdiv.Zdiv_eucl_exist	40
Coq.ZArith.Zdiv.Zdiv_mod_unique	40
Coq.ZArith.Zdiv.Zdiv_unique	40
Coq.ZArith.Zdiv.Zmod_unique	40
Coq.ZArith.Zdiv.Zmod_0_l	40	0.1.0	search with cache (only 1: intros; only 1: Z.bitwise; only 1: trivial).	0.0490880012512	4
Coq.ZArith.Zdiv.Zmod_0_r	40	1.1.1.0	search with cache (only 1: destruct a; only 1: auto; only 1: auto; only 1: auto).	0.0340721607208	7
Coq.ZArith.Zdiv.Zdiv_0_l	40	0.1.0	search with cache (only 1: intros; only 1: Z.bitwise; only 1: trivial).	0.0481350421906	4
Coq.ZArith.Zdiv.Zdiv_0_r	40	1.1.1.0	search with cache (only 1: destruct a; only 1: auto; only 1: auto; only 1: auto).	0.0341989994049	7
Coq.ZArith.Zdiv.Zmod_1_r	40	9.0	search with cache (only 1: intros; only 1: now Z.nzsimpl).	0.195988893509	62
Coq.ZArith.Zdiv.Zdiv_1_r	40	0.6.2.0	search with cache (only 1: intros; only 1: zero_or_not a; only 1: Z.nzsimpl; only 1: now Z.nzsimpl).	1.11459684372	399
Coq.ZArith.Zdiv.Z_mod_same_full	40
Coq.ZArith.Zdiv.Z_mod_mult	40
Coq.ZArith.Zdiv.Z_div_pos	40
Coq.ZArith.Zdiv.Z_div_ge0	40	0.0.1.5.7	search with cache (only 1: intros; only 1: Z.swap_greater; only 1: apply Z.div_pos; only 1: auto; only 1: auto).	2.96554708481	1241
Coq.ZArith.Zdiv.Z_div_lt	40
Coq.ZArith.Zdiv.Z_div_ge	40
Coq.ZArith.Zdiv.Z_div_le	40	0.1.1.0	search with cache (only 1: intros; only 1: apply Z.div_le_mono; only 1: auto using Z.gt_lt, Z.ge_le; only 1: auto using Z.gt_lt, Z.ge_le).	0.038104057312	6
Coq.ZArith.Zdiv.Z_mult_div_ge	40
Coq.ZArith.Zdiv.Z_mult_div_ge_neg	40
Coq.ZArith.Zdiv.Z_div_exact_full_1	40
Coq.ZArith.Zdiv.Z_div_exact_full_2	40	0.0.1.1	search with cache (only 1: intros; only 1: rewrite Z.div_exact; only 1: auto; only 1: auto).	0.0364580154419	6
Coq.ZArith.Zdiv.Zmod_le	40
Coq.ZArith.Zdiv.Zdiv_lt_upper_bound	40
Coq.ZArith.Zdiv.Zdiv_le_upper_bound	40
Coq.ZArith.Zdiv.Zdiv_le_lower_bound	40
Coq.ZArith.Zdiv.Zdiv_le_compat_l	40
Coq.ZArith.Zdiv.Zdiv_sgn	40
Coq.ZArith.Zdiv.Z_mod_plus_full	40
Coq.ZArith.Zdiv.Zdiv_opp_opp	40
Coq.ZArith.Zdiv.Zmod_opp_opp	40
Coq.ZArith.Zdiv.Z_mod_zero_opp_full	40
Coq.ZArith.Zdiv.Z_mod_nz_opp_full	40
Coq.ZArith.Zdiv.Z_mod_zero_opp_r	40
Coq.ZArith.Zdiv.Z_mod_nz_opp_r	40
Coq.ZArith.Zdiv.Z_div_zero_opp_full	40
Coq.ZArith.Zdiv.Z_div_nz_opp_full	40
Coq.ZArith.Zdiv.Z_div_zero_opp_r	40
Coq.ZArith.Zdiv.Z_div_nz_opp_r	40
Coq.ZArith.Zdiv.Zdiv_mult_cancel_r	40
Coq.ZArith.Zdiv.Zdiv_mult_cancel_l	40
Coq.ZArith.Zdiv.Zmult_mod_distr_l	40
Coq.ZArith.Zdiv.Zmult_mod_distr_r	40
Coq.ZArith.Zdiv.Zmod_mod	40
Coq.ZArith.Zdiv.Zmult_mod	40
Coq.ZArith.Zdiv.Zplus_mod	40
Coq.ZArith.Zdiv.Zminus_mod	40
Coq.ZArith.Zdiv.Zplus_mod_idemp_l	40
Coq.ZArith.Zdiv.Zplus_mod_idemp_r	40	0.0.0	search with cache (only 1: intros; only 1: rewrite Zplus_mod, Zmod_mod, <- Zplus_mod; only 1: auto).	0.0344378948212	3
Coq.ZArith.Zdiv.Zminus_mod_idemp_l	40
Coq.ZArith.Zdiv.Zminus_mod_idemp_r	40	0.2.0	search with cache (only 1: intros; only 1: rewrite Zminus_mod, Zmod_mod, <- Zminus_mod; only 1: auto).	0.118925094604	33
Coq.ZArith.Zdiv.Zmult_mod_idemp_l	40
Coq.ZArith.Zdiv.Zmult_mod_idemp_r	40	0.0.0	search with cache (only 1: intros; only 1: rewrite Zmult_mod, Zmod_mod, <- Zmult_mod; only 1: auto).	0.0348851680756	3
Coq.ZArith.Zdiv.eqm_refl	40	0	search with cache (only 1: constructor).	0.0287418365479	1
Coq.ZArith.Zdiv.eqm_sym	40	0.0	search with cache (only 1: unfold eqm; only 1: auto).	0.0304021835327	2
Coq.ZArith.Zdiv.eqm_trans	40	3.0.4.0.0.4.0.1	search with cache (only 1: intros a b; only 1: unfold eqm; only 1: zero_or_not b; only 1: intros; only 1: zero_or_not a; only 1: Z.order; only 1: intros; only 1: Z.order).	5.25344395638	3062
Coq.ZArith.Zdiv.eqm_setoid	40	2.0.1.0	search with cache (only 1: split; only 1: congruence; only 1: congruence; only 1: congruence).	0.038468837738	7
Coq.ZArith.Zdiv.Zplus_eqm	40
Coq.ZArith.Zdiv.Zminus_eqm	40
Coq.ZArith.Zdiv.Zmult_eqm	40
Coq.ZArith.Zdiv.Zopp_eqm	40
Coq.ZArith.Zdiv.Zmod_eqm	40
Coq.ZArith.Zdiv.Zdiv_Zdiv	40
Coq.ZArith.Zdiv.Zmod_div	40
Coq.ZArith.Zdiv.Zdiv_mult_le	40
Coq.ZArith.Zdiv.Zmod_divides	40
Coq.ZArith.Zdiv.Zmod_odd	40
Coq.ZArith.Zdiv.Zmod_even	40
Coq.ZArith.Zdiv.Zodd_mod	40	0.5.0	search with cache (only 1: intros a; only 1: rewrite Zmod_odd, Zodd_even_bool; only 1: now destruct Z.even).	0.0719971656799	8
Coq.ZArith.Zdiv.Zeven_mod	40	0.0.0	search with cache (only 1: intros; only 1: rewrite Zmod_odd, Zodd_even_bool; only 1: now destruct Z.even).	0.036199092865	3
Coq.ZArith.Zdiv.Z_mod_same	40	0.1.0.0	search with cache (only 1: intros; only 1: zero_or_not a; only 1: apply Z.mod_same; only 1: now Z.nzsimpl).	0.0600049495697	5
Coq.ZArith.Zdiv.Z_div_same	40
Coq.ZArith.Zdiv.Z_div_plus	40
Coq.ZArith.Zdiv.Z_div_mult	40
Coq.ZArith.Zdiv.Z_mod_plus	40	0.0.0.0	search with cache (only 1: intros; only 1: zero_or_not c; only 1: apply Z.mod_add; only 1: Z.order).	0.0469191074371	4
Coq.ZArith.Zdiv.Z_div_exact_1	40	0.0.0.0.0	search with cache (only 1: intros a b; only 1: zero_or_not b; only 1: rewrite Z.div_exact; only 1: auto; only 1: trivial).	0.0555019378662	5
Coq.ZArith.Zdiv.Z_div_exact_2	40	0.0.0.1.0.0	search with cache (only 1: intros a b; only 1: zero_or_not b; only 1: now Z.nzsimpl; only 1: rewrite Z.div_exact; only 1: auto; only 1: trivial).	0.255789995193	7
Coq.ZArith.Zdiv.Z_mod_zero_opp	40	0.0.0.0.0	search with cache (only 1: intros; only 1: zero_or_not b; only 1: apply Z.mod_opp_l_z; only 1: auto; only 1: auto).	0.193498134613	5
Coq.ZArith.Zdiv.Zmod_POS_correct	40
Coq.ZArith.Zdiv.Zmod'_correct	40
Coq.ZArith.Zdiv.Zdiv_eucl_extended	40
Coq.ZArith.Zdiv.div_Zdiv	40
Coq.ZArith.Zdiv.mod_Zmod	40
Coq.ZArith.Zeuclid.ZEuclid.mod_wd	40	0.0.2	search with cache (only 1: intros a a' Ha b b' Hb; only 1: Z.bitwise; only 1: now rewrite Ha, Hb).	0.0380189418793	5
Coq.ZArith.Zeuclid.ZEuclid.div_wd	40	0	search with cache (only 1: congruence).	0.0235991477966	1
Coq.ZArith.Zeuclid.ZEuclid.div_mod	40
Coq.ZArith.Zeuclid.ZEuclid.mod_always_pos	40
Coq.ZArith.Zeuclid.ZEuclid.mod_bound_pos	40
Coq.ZArith.Zabs.Zabs_ind	40
Coq.ZArith.Zabs.Zabs_intro	40	6.1	search with cache (only 1: intros; only 1: now destruct n).	0.014662027359	9
Coq.ZArith.Zabs.Zabs_dec	40
Coq.ZArith.Zabs.Zabs_spec	40	6.10.7.5.6.23	search with cache (only 1: destruct x; only 1: left; only 1: now split; only 1: now left; only 1: right; only 1: easy).	27.7057881355	41561
Coq.ZArith.Zabs.Zsgn_spec	40
Coq.ZArith.Zabs.Zabs_nat_le	40
Coq.ZArith.Zabs.Zabs_nat_lt	40
Coq.ZArith.Int.MoreInt.eqb_eq	40
Coq.ZArith.Int.MoreInt.eqb_neq	40
Coq.ZArith.Int.MoreInt.ltb_lt	40
Coq.ZArith.Int.MoreInt.ltb_nlt	40
Coq.ZArith.Int.MoreInt.leb_le	40
Coq.ZArith.Int.MoreInt.leb_nle	40
Coq.ZArith.Int.MoreInt.norm_ei_correct	40
Coq.ZArith.Int.MoreInt.norm_ez_correct	40
Coq.ZArith.Int.MoreInt.norm_ep_correct	40
Coq.ZArith.Int.MoreInt.norm_ep_correct2	40
Coq.ZArith.Int.Z_as_Int.gt_le_dec	40
Coq.ZArith.Int.Z_as_Int.ge_lt_dec	40
Coq.ZArith.Int.Z_as_Int.i2z_eq	40	6	search with cache (only 1: auto).	0.0104420185089	7
Coq.ZArith.Int.Z_as_Int.i2z_0	40	0	search with cache (only 1: auto).	0.00731611251831	1
Coq.ZArith.Int.Z_as_Int.i2z_1	40	0	search with cache (only 1: reflexivity).	0.00722813606262	1
Coq.ZArith.Int.Z_as_Int.i2z_2	40	13	search with cache (only 1: easy || now destruct 1).	0.0212728977203	60
Coq.ZArith.Int.Z_as_Int.i2z_3	40	0	search with cache (only 1: reflexivity).	0.00697708129883	1
Coq.ZArith.Int.Z_as_Int.i2z_add	40	0.1	search with cache (only 1: Z.bitwise; only 1: trivial).	0.0159509181976	3
Coq.ZArith.Int.Z_as_Int.i2z_opp	40	1.1	search with cache (only 1: Z.bitwise; only 1: trivial).	0.0167381763458	4
Coq.ZArith.Int.Z_as_Int.i2z_sub	40	0	search with cache (only 1: reflexivity).	0.00749087333679	1
Coq.ZArith.Int.Z_as_Int.i2z_mul	40	0	search with cache (only 1: reflexivity).	0.00742292404175	1
Coq.ZArith.Int.Z_as_Int.i2z_max	40	0	search with cache (only 1: reflexivity).	0.00739002227783	1
Coq.ZArith.Int.Z_as_Int.i2z_eqb	40	0	search with cache (only 1: reflexivity).	0.00741481781006	1
Coq.ZArith.Int.Z_as_Int.i2z_leb	40	0	search with cache (only 1: reflexivity).	0.00719380378723	1
Coq.ZArith.Int.Z_as_Int.i2z_ltb	40	0	search with cache (only 1: reflexivity).	0.00704503059387	1
Coq.ZArith.Zpower.Zpower_nat_0_r	40	0	search with cache (only 1: reflexivity).	0.00665593147278	1
Coq.ZArith.Zpower.Zpower_nat_succ_r	40	2.0.0.0.0	search with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: rewrite ?IHp, ?Z.mul_assoc; only 1: now destruct n).	0.0198400020599	7
Coq.ZArith.Zpower.Zpower_nat_is_exp	40
Coq.ZArith.Zpower.Zpower_pos_nat	40	4.1	search with cache (only 1: unfold Z.pow_pos; only 1: apply Pos2Nat.inj_iter).	0.0279488563538	21
Coq.ZArith.Zpower.Zpower_nat_Z	40
Coq.ZArith.Zpower.Zpower_nat_Zpower	40	2.0.0.0.3.0.2.4	search with cache (only 1: case n; only 1: simpl; only 1: trivial; only 1: intros p _; only 1: simpl; only 1: apply Pos2Nat.inj_iter; only 1: intros; only 1: easy).	11.1423480511	7719
Coq.ZArith.Zpower.Zpower_pos_is_exp	40
Coq.ZArith.Zpower.Zpower_exp	40
Coq.ZArith.Zpower.shift_nat_equiv	40	0	search with cache (only 1: reflexivity).	0.00847506523132	1
Coq.ZArith.Zpower.shift_pos_equiv	40	0	search with cache (only 1: reflexivity).	0.00854992866516	1
Coq.ZArith.Zpower.shift_equiv	40
Coq.ZArith.Zpower.two_power_nat_equiv	40
Coq.ZArith.Zpower.two_power_pos_equiv	40	2	search with cache (only 1: now apply Pos.iter_swap_gen).	0.00901913642883	3
Coq.ZArith.Zpower.two_p_equiv	40	1.0.1.8	search with cache (only 1: destruct x; only 1: now Z.nzsimpl; only 1: now apply Pos.iter_swap_gen; only 1: reflexivity).	0.431858778	75
Coq.ZArith.Zpower.two_power_nat_S	40	1	search with cache (only 1: reflexivity).	0.00808811187744	2
Coq.ZArith.Zpower.shift_nat_plus	40
Coq.ZArith.Zpower.shift_nat_correct	40
Coq.ZArith.Zpower.two_power_nat_correct	40
Coq.ZArith.Zpower.shift_pos_nat	40	2	search with cache (only 1: apply Pos2Nat.inj_iter).	0.204398870468	3
Coq.ZArith.Zpower.two_power_pos_nat	40
Coq.ZArith.Zpower.shift_pos_correct	40
Coq.ZArith.Zpower.two_power_pos_correct	40	1.1.1.0	search with cache (only 1: destruct x; only 1: now apply Pos.iter_swap_gen; only 1: now apply Pos.iter_swap_gen; only 1: trivial).	0.388541936874	182
Coq.ZArith.Zpower.two_power_pos_is_exp	40
Coq.ZArith.Zpower.two_p_is_exp	40
Coq.ZArith.Zpower.two_p_gt_ZERO	40	0.0.3.6	search with cache (only 1: destruct x; only 1: reflexivity; only 1: easy; only 1: easy).	0.0785119533539	83
Coq.ZArith.Zpower.two_p_S	40
Coq.ZArith.Zpower.two_p_pred	40
Coq.ZArith.Zpower.Zdiv_rest_correct1	40
Coq.ZArith.Zpower.Zdiv_rest_correct2	40
Coq.ZArith.Zpower.Zdiv_rest_correct	40
Coq.ZArith.Zpower.Zdiv_rest_ok	40
Coq.ZArith.Zpower.Zdiv_rest_shiftr	40
Coq.ZArith.Zwf.Zwf_well_founded	40
Coq.ZArith.Zwf.Zwf_up_well_founded	40
Coq.ZArith.auxiliary.Zne_left	40
Coq.ZArith.auxiliary.Zegal_left	40	1	search with cache (only 1: now rewrite <- Z.sub_move_0_r).	0.0117371082306	2
Coq.ZArith.auxiliary.Zle_left	40	10	search with cache (only 1: apply Z.le_0_sub).	0.0697329044342	21
Coq.ZArith.auxiliary.Zle_left_rev	40	0	search with cache (only 1: apply Z.le_0_sub).	0.00755500793457	1
Coq.ZArith.auxiliary.Zlt_left_rev	40	4	search with cache (only 1: apply Z.lt_0_sub).	0.00757193565369	5
Coq.ZArith.auxiliary.Zlt_left_lt	40	0	search with cache (only 1: apply Z.lt_0_sub).	0.00802302360535	1
Coq.ZArith.auxiliary.Zlt_left	40
Coq.ZArith.auxiliary.Zge_left	40	4.20	search with cache (only 1: Z.swap_greater; only 1: apply Z.le_0_sub).	0.510703086853	344
Coq.ZArith.auxiliary.Zgt_left	40	0.0.2.1.0	search with cache (only 1: Z.swap_greater; only 1: rewrite Z.add_shuffle0; only 1: intros; only 1: change_no_check (-1) with (- Z.succ 0); only 1: now apply Z.le_0_sub, Z.le_succ_l, Z.lt_0_sub).	0.0576169490814	40
Coq.ZArith.auxiliary.Zgt_left_gt	40	0.2	search with cache (only 1: Z.swap_greater; only 1: apply Z.lt_0_sub).	0.0185670852661	4
Coq.ZArith.auxiliary.Zgt_left_rev	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.lt_0_sub).	0.0169219970703	2
Coq.ZArith.auxiliary.Zle_mult_approx	40	63.6.1	search with cache (only 1: Z.swap_greater; only 1: intros; only 1: Z.order_pos).	7.44604706764	7520
Coq.ZArith.auxiliary.Zmult_le_approx	40
Coq.ZArith.Zmax.Zmax_spec	40
Coq.ZArith.Zmax.Zmax_left	40	3.5	search with cache (only 1: unfold Z.le, Z.max; only 1: now case Z.compare_spec).	0.0440721511841	22
Coq.ZArith.Zmax.Zpos_max_1	40	20	search with cache (only 1: now destruct p).	0.48303103447	412
Coq.ZArith.Zmin.Zmin_spec	40
Coq.ZArith.Zmin.Zmin_irreducible	40	0.0.0.4.16	search with cache (only 1: unfold Z.le, Z.min; only 1: case Z.compare_spec; only 1: auto with relations; only 1: auto; only 1: auto).	1.01826095581	1168
Coq.ZArith.Zmin.Zmin_le_prime_inf	40
Coq.ZArith.Zmin.Zpos_min_1	40	18	search with cache (only 1: now destruct p).	0.145721912384	161
Coq.ZArith.Zgcd_alt.Zgcdn_pos	40
Coq.ZArith.Zgcd_alt.Zgcd_alt_pos	40
Coq.ZArith.Zgcd_alt.Zgcdn_linear_bound	40
Coq.ZArith.Zgcd_alt.fibonacci_pos	40
Coq.ZArith.Zgcd_alt.fibonacci_incr	40
Coq.ZArith.Zgcd_alt.Zgcdn_worst_is_fibonacci	40
Coq.ZArith.Zgcd_alt.Zgcdn_ok_before_fibonacci	40	3.0.15.1	search with cache (only 1: simpl; only 1: fix gcd_divide 1; only 1: intros n m H1 H2; only 1: intuition).	30.2227139473	15472
Coq.ZArith.Zgcd_alt.Zgcd_bound_fibonacci	40
Coq.ZArith.Zgcd_alt.Zgcd_bound_opp	40	0.0.0.2	search with cache (only 1: destruct a; only 1: reflexivity; only 1: trivial; only 1: trivial).	0.0670778751373	6
Coq.ZArith.Zgcd_alt.Zgcdn_opp	40
Coq.ZArith.Zgcd_alt.Zgcdn_is_gcd_pos	40
Coq.ZArith.Zgcd_alt.Zgcdn_is_gcd	40
Coq.ZArith.Zgcd_alt.Zgcd_is_gcd	40
Coq.ZArith.Zorder.Ztrichotomy_inf	40
Coq.ZArith.Zorder.Ztrichotomy	40	0.0.0.1.0.3	search with cache (only 1: unfold Z.gt, Z.lt; only 1: generalize (Z.compare_eq n m); only 1: destruct (n ?= m); only 1: auto; only 1: auto; only 1: auto).	0.0456650257111	10
Coq.ZArith.Zorder.dec_Zne	40
Coq.ZArith.Zorder.dec_Zgt	40
Coq.ZArith.Zorder.dec_Zge	40
Coq.ZArith.Zorder.not_Zeq	40	0.0.0.4.23	search with cache (only 1: generalize (Z.compare_eq n m); only 1: case Z.compare_spec; only 1: intuition; only 1: intuition; only 1: intuition).	1.62623500824	1274
Coq.ZArith.Zorder.Zle_not_lt	40	0	search with cache (only 1: Z.order).	0.025367975235	1
Coq.ZArith.Zorder.Zlt_not_le	40	0	search with cache (only 1: Z.order).	0.0248980522156	1
Coq.ZArith.Zorder.Zle_not_gt	40	0	search with cache (only 1: auto).	0.0225050449371	1
Coq.ZArith.Zorder.Zgt_not_le	40	0	search with cache (only 1: auto).	0.0228350162506	1
Coq.ZArith.Zorder.Znot_ge_lt	40	0.5	search with cache (only 1: Z.swap_greater; only 1: apply Z.lt_nge).	0.199060916901	28
Coq.ZArith.Zorder.Znot_lt_ge	40	0	search with cache (only 1: auto).	0.0223422050476	1
Coq.ZArith.Zorder.Znot_gt_le	40	0	search with cache (only 1: trivial).	0.0223240852356	1
Coq.ZArith.Zorder.Znot_le_gt	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.lt_nge).	0.0336849689484	2
Coq.ZArith.Zorder.not_Zne	40
Coq.ZArith.Zorder.Zgt_asym	40	0.0.0.7	search with cache (only 1: destruct (Z.le_decidable m n); only 1: trivial; only 1: Z.swap_greater; only 1: Z.order).	0.456415891647	85
Coq.ZArith.Zorder.Zgt_irrefl	40	7.1	search with cache (only 1: Z.swap_greater; only 1: Z.order).	0.0352489948273	14
Coq.ZArith.Zorder.Zle_lt_or_eq	40
Coq.ZArith.Zorder.Zgt_trans	40	1.0.0	search with cache (only 1: Z.swap_greater; only 1: intros; only 1: now transitivity m).	0.141327142715	4
Coq.ZArith.Zorder.Zle_gt_trans	40	13.1	search with cache (only 1: Z.swap_greater; only 1: Z.Private_Tac.order || (right; Z.Private_Tac.order) || (left; Z.Private_Tac.order)).	0.540858983994	271
Coq.ZArith.Zorder.Zgt_le_trans	40	3.5	search with cache (only 1: Z.swap_greater; only 1: Z.order).	0.0462300777435	10
Coq.ZArith.Zorder.Zge_trans	40	5.0	search with cache (only 1: Z.swap_greater; only 1: Z.order).	0.0571658611298	7
Coq.ZArith.Zorder.Zsucc_le_compat	40
Coq.ZArith.Zorder.Zsucc_lt_compat	40
Coq.ZArith.Zorder.Zsucc_gt_compat	40	1.1	search with cache (only 1: Z.swap_greater; only 1: apply Z.succ_lt_mono).	0.0850741863251	32
Coq.ZArith.Zorder.Zsucc_gt_reg	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.succ_lt_mono).	0.0399830341339	2
Coq.ZArith.Zorder.Zsucc_le_reg	40	1	search with cache (only 1: apply Z.succ_le_mono).	0.0357949733734	2
Coq.ZArith.Zorder.Zsucc_lt_reg	40	0	search with cache (only 1: apply Z.succ_lt_mono).	0.0234360694885	1
Coq.ZArith.Zorder.Zgt_succ	40	0.1	search with cache (only 1: Z.swap_greater; only 1: apply Z.lt_succ_diag_r).	0.0268678665161	3
Coq.ZArith.Zorder.Znot_le_succ	40
Coq.ZArith.Zorder.Zgt_le_succ	40
Coq.ZArith.Zorder.Zle_gt_succ	40
Coq.ZArith.Zorder.Zle_lt_succ	40	0	search with cache (only 1: apply Z.lt_succ_r).	0.023442029953	1
Coq.ZArith.Zorder.Zlt_le_succ	40	1	search with cache (only 1: apply Z.le_succ_l).	0.0237038135529	2
Coq.ZArith.Zorder.Zgt_succ_le	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.lt_succ_r).	0.0333528518677	2
Coq.ZArith.Zorder.Zlt_succ_le	40	0	search with cache (only 1: apply Z.lt_succ_r).	0.0245401859283	1
Coq.ZArith.Zorder.Zle_succ_gt	40	1.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.le_succ_l).	0.0353119373322	3
Coq.ZArith.Zorder.Zle_succ_le	40
Coq.ZArith.Zorder.Zgt_succ_pred	40
Coq.ZArith.Zorder.Zlt_succ_pred	40	1	search with cache (only 1: apply Z.lt_succ_lt_pred).	0.0245978832245	2
Coq.ZArith.Zorder.Zlt_0_le_0_pred	40
Coq.ZArith.Zorder.Zgt_0_le_0_pred	40	0.18	search with cache (only 1: Z.swap_greater; only 1: apply Z.lt_le_pred).	0.269147157669	165
Coq.ZArith.Zorder.Zle_neg_pos	40	1	search with cache (only 1: easy).	0.0369770526886	2
Coq.ZArith.Zorder.Zgt_pos_0	40	8	search with cache (only 1: easy).	0.0346121788025	16
Coq.ZArith.Zorder.Zle_0_pos	40	1	search with cache (only 1: easy).	0.202990055084	2
Coq.ZArith.Zorder.Zlt_neg_0	40	0	search with cache (only 1: easy).	0.0248358249664	1
Coq.ZArith.Zorder.Zle_0_nat	40	14.0.2.1.5.2	search with cache (only 1: intros; only 1: induction n; only 1: simpl; only 1: Z.order; only 1: simpl; only 1: easy).	2.51847600937	4428
Coq.ZArith.Zorder.Zgt_succ_gt_or_eq	40	1.5.3.13.3	search with cache (only 1: intro; only 1: Z.swap_greater; only 1: apply Z.lt_eq_cases; only 1: apply Z.lt_succ_r; only 1: Z.order).	2.03181576729	2177
Coq.ZArith.Zorder.Zplus_gt_compat_l	40
Coq.ZArith.Zorder.Zplus_gt_compat_r	40
Coq.ZArith.Zorder.Zplus_le_compat_l	40
Coq.ZArith.Zorder.Zplus_le_compat_r	40
Coq.ZArith.Zorder.Zplus_lt_compat_l	40	0	search with cache (only 1: apply Z.add_lt_mono_l).	0.0250651836395	1
Coq.ZArith.Zorder.Zplus_lt_compat_r	40	1	search with cache (only 1: apply Z.add_lt_mono_r).	0.0269949436188	2
Coq.ZArith.Zorder.Zplus_le_reg_l	40	2	search with cache (only 1: apply Z.add_le_mono_l).	0.0496909618378	3
Coq.ZArith.Zorder.Zplus_le_reg_r	40	2	search with cache (only 1: apply Z.add_le_mono_r).	0.0496602058411	3
Coq.ZArith.Zorder.Zplus_lt_reg_l	40	1	search with cache (only 1: apply Z.add_lt_mono_l).	0.0266540050507	2
Coq.ZArith.Zorder.Zplus_lt_reg_r	40	0	search with cache (only 1: apply Z.add_lt_mono_r).	0.0250542163849	1
Coq.ZArith.Zorder.Zplus_gt_reg_l	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.add_lt_mono_l).	0.0419130325317	2
Coq.ZArith.Zorder.Zplus_gt_reg_r	40	1.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.add_lt_mono_r).	0.0429990291595	3
Coq.ZArith.Zorder.Zmult_le_compat_r	40
Coq.ZArith.Zorder.Zmult_le_compat_l	40
Coq.ZArith.Zorder.Zmult_lt_compat_r	40
Coq.ZArith.Zorder.Zmult_gt_compat_r	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).	0.0550849437714	2
Coq.ZArith.Zorder.Zmult_gt_0_lt_compat_r	40	0.1	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).	0.0377440452576	3
Coq.ZArith.Zorder.Zmult_gt_0_le_compat_r	40
Coq.ZArith.Zorder.Zmult_lt_0_le_compat_r	40	0	search with cache (only 1: apply Z.mul_le_mono_pos_r).	0.0250849723816	1
Coq.ZArith.Zorder.Zmult_gt_0_lt_compat_l	40
Coq.ZArith.Zorder.Zmult_lt_compat_l	40	1	search with cache (only 1: apply Z.mul_lt_mono_pos_l).	0.0267989635468	2
Coq.ZArith.Zorder.Zmult_gt_compat_l	40	1.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_l).	0.150046110153	3
Coq.ZArith.Zorder.Zmult_ge_compat_r	40	3.4.0	search with cache (only 1: Z.swap_greater; only 1: intros; only 1: now apply Z.mul_le_mono_nonneg_r).	0.0601720809937	10
Coq.ZArith.Zorder.Zmult_ge_compat_l	40	6.4.0	search with cache (only 1: Z.swap_greater; only 1: intros; only 1: now apply Z.mul_le_mono_nonneg_l).	0.296667814255	97
Coq.ZArith.Zorder.Zmult_ge_compat	40
Coq.ZArith.Zorder.Zmult_le_compat	40	3.0	search with cache (only 1: intros; only 1: now apply Z.mul_le_mono_nonneg).	0.0478270053864	11
Coq.ZArith.Zorder.Zmult_gt_0_lt_reg_r	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).	0.0366499423981	2
Coq.ZArith.Zorder.Zmult_lt_reg_r	40	1	search with cache (only 1: apply Z.mul_lt_mono_pos_r).	0.0271248817444	2
Coq.ZArith.Zorder.Zmult_le_reg_r	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_le_mono_pos_r).	0.0363049507141	2
Coq.ZArith.Zorder.Zmult_lt_0_le_reg_r	40	0	search with cache (only 1: apply Z.mul_le_mono_pos_r).	0.0250430107117	1
Coq.ZArith.Zorder.Zmult_ge_reg_r	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_le_mono_pos_r).	0.0559139251709	2
Coq.ZArith.Zorder.Zmult_gt_reg_r	40	1.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).	0.057156085968	3
Coq.ZArith.Zorder.Zmult_lt_compat	40
Coq.ZArith.Zorder.Zmult_lt_compat2	40
Coq.ZArith.Zorder.Zmult_gt_0_compat	40	1.1.1.1.1.1.1.1.0.0.3.37	search with cache (only 1: red; only 1: destruct n as [| n| n], m as [| m| m]; only 1: simpl; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial).	35.700740099	27534
Coq.ZArith.Zorder.Zmult_gt_0_le_0_compat	40	15.2	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_le_mono_pos_r).	0.42182302475	247
Coq.ZArith.Zorder.Zmult_le_0_reg_r	40
Coq.ZArith.Zorder.Zmult_lt_0_reg_r	40
Coq.ZArith.Zorder.Zmult_gt_0_lt_0_reg_r	40	2.1	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_pos_cancel_r).	0.0375349521637	5
Coq.ZArith.Zorder.Zmult_gt_0_reg_l	40
Coq.ZArith.Zorder.Zlt_square_simpl	40
Coq.ZArith.Zorder.Zgt_square_simpl	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.square_lt_simpl_nonneg).	0.136427879333	2
Coq.ZArith.Zorder.Zeq_plus_swap	40
Coq.ZArith.Zorder.Zlt_0_minus_lt	40
Coq.ZArith.Zorder.Zle_0_minus_le	40
Coq.ZArith.Zorder.Zle_minus_le_0	40	2	search with cache (only 1: apply Z.le_0_sub).	0.0257360935211	3
Coq.ZArith.Zbool.Zle_cases	40	0.1.0.1.0.7	search with cache (only 1: unfold Z.geb, Z.leb; only 1: case Z.compare_spec; only 1: Z.order; only 1: Z.order; only 1: Z.swap_greater; only 1: auto).	0.231834888458	119
Coq.ZArith.Zbool.Zlt_cases	40	0.1.0.1.7.14.5	search with cache (only 1: unfold Z.gtb, Z.ltb; only 1: case Z.compare_spec; only 1: Z.swap_greater; only 1: Z.order; only 1: auto; only 1: Z.swap_greater; only 1: Z.order).	1.75833296776	2176
Coq.ZArith.Zbool.Zge_cases	40	0.1.0.1.7.15.4	search with cache (only 1: unfold Z.geb, Z.leb; only 1: case Z.compare_spec; only 1: Z.swap_greater; only 1: Z.order; only 1: auto; only 1: Z.swap_greater; only 1: Z.order).	1.11574196815	1194
Coq.ZArith.Zbool.Zgt_cases	40	0.1.0.1.0.4	search with cache (only 1: unfold Z.gtb, Z.ltb; only 1: case Z.compare_spec; only 1: Z.order; only 1: Z.order; only 1: Z.swap_greater; only 1: auto).	0.132640123367	61
Coq.ZArith.Zbool.Zle_bool_imp_le	40	1.0.5	search with cache (only 1: case Z.leb_spec; only 1: trivial; only 1: discriminate).	0.0647418498993	27
Coq.ZArith.Zbool.Zle_imp_le_bool	40	0	search with cache (only 1: apply Z.leb_le).	0.0256679058075	1
Coq.ZArith.Zbool.Zle_bool_antisym	40
Coq.ZArith.Zbool.Zle_bool_trans	40	1.1	search with cache (only 1: rewrite !Z.leb_le; only 1: Z.order).	0.0598320960999	4
Coq.ZArith.Zbool.Zle_bool_total	40
Coq.ZArith.Zbool.Zle_bool_plus_mono	40
Coq.ZArith.Zbool.Zone_pos	40	2	search with cache (only 1: trivial).	0.0283920764923	3
Coq.ZArith.Zbool.Zone_min_pos	40	13.15	search with cache (only 1: rewrite (Zquot2_odd_eqn n)  at 1; only 1: now destruct n as [| [p| p| ]| [p| p| ]]).	1.25130796432	1193
Coq.ZArith.Zbool.Zle_is_le_bool	40	0.0.8	search with cache (only 1: split; only 1: apply Z.leb_le; only 1: apply Z.leb_le).	0.230209112167	45
Coq.ZArith.Zbool.Zge_is_le_bool	40	4.6	search with cache (only 1: rewrite !Z.leb_le; only 1: now Z.swap_greater).	0.131180047989	153
Coq.ZArith.Zbool.Zlt_is_lt_bool	40	0.16.0.1.2.7	search with cache (only 1: case Z.ltb_spec; only 1: unfold Z.ltb, Z.lt; only 1: easy'; only 1: split; only 1: Z.order; only 1: discriminate).	8.22823786736	7304
Coq.ZArith.Zbool.Zgt_is_gt_bool	40	1.0.21.1	search with cache (only 1: Z.swap_greater; only 1: rewrite Z.gtb_ltb; only 1: symmetry; only 1: apply Z.ltb_lt).	8.00034618378	6258
Coq.ZArith.Zbool.Zlt_is_le_bool	40
Coq.ZArith.Zbool.Zgt_is_le_bool	40	0.0.0	search with cache (only 1: Z.swap_greater; only 1: rewrite Z.leb_le; only 1: apply Z.lt_le_pred).	0.0358550548553	3
Coq.ZArith.Zbool.Zeq_is_eq_bool	40
Coq.ZArith.Zbool.Zeq_bool_eq	40	4.0.0.1.0.1	search with cache (only 1: unfold Zeq_bool; only 1: rewrite <- Z.compare_eq_iff; only 1: destruct Z.compare; only 1: trivial; only 1: easy'; only 1: easy').	0.160663127899	121
Coq.ZArith.Zbool.Zeq_bool_neq	40
Coq.ZArith.Zbool.Zeq_bool_if	40
Coq.ZArith.ZArith_dec.Dcompare_inf	40	1.1.1.0	search with cache (only 1: destruct r; only 1: auto; only 1: auto; only 1: auto).	0.0142030715942	7
Coq.ZArith.ZArith_dec.Zcompare_rect	40	0.0.0.0	search with cache (only 1: destruct (n ?= m); only 1: auto; only 1: auto; only 1: auto).	0.0149481296539	4
Coq.ZArith.ZArith_dec.Zcompare_rec	40	0.0.0.1.0	search with cache (only 1: intros H1 H2 H3; only 1: destruct (n ?= m); only 1: auto; only 1: auto; only 1: auto).	0.0142450332642	6
Coq.ZArith.ZArith_dec.Z_lt_dec	40
Coq.ZArith.ZArith_dec.Z_le_dec	40
Coq.ZArith.ZArith_dec.Z_gt_dec	40
Coq.ZArith.ZArith_dec.Z_ge_dec	40
Coq.ZArith.ZArith_dec.Z_lt_ge_dec	40	0.0.0.0.7.2	search with cache (only 1: unfold Z.lt; only 1: unfold Z.ge; only 1: case Z.compare; only 1: now left || now right; only 1: now left || now right; only 1: now left || now right).	0.550921916962	362
Coq.ZArith.ZArith_dec.Z_lt_le_dec	40
Coq.ZArith.ZArith_dec.Z_le_gt_dec	40	0.0.0.0.2.6	search with cache (only 1: unfold Z.gt; only 1: unfold Z.le; only 1: case Z.compare; only 1: now left || now right; only 1: now left || now right; only 1: now left || now right).	3.35777807236	1475
Coq.ZArith.ZArith_dec.Z_gt_le_dec	40
Coq.ZArith.ZArith_dec.Z_ge_lt_dec	40	0.0.0.0.3.2	search with cache (only 1: unfold Z.ge; only 1: unfold Z.lt; only 1: case Z.compare; only 1: now left || now right; only 1: now left || now right; only 1: now left || now right).	0.373940944672	157
Coq.ZArith.ZArith_dec.Z_le_lt_eq_dec	40
Coq.ZArith.ZArith_dec.Zlt_cotrans	40
Coq.ZArith.ZArith_dec.Zlt_cotrans_pos	40
Coq.ZArith.ZArith_dec.Zlt_cotrans_neg	40
Coq.ZArith.ZArith_dec.not_Zeq_inf	40
Coq.ZArith.ZArith_dec.Z_dec	40	0.0.0.1.0.0.1.0.0.0.1	search with cache (only 1: intros; only 1: unfold Z.gt, Z.lt; only 1: generalize (Z.compare_eq n m); only 1: destruct (n ?= m); only 1: right; only 1: auto; only 1: left; only 1: auto; only 1: left; only 1: right; only 1: auto).	0.830358982086	637
Coq.ZArith.ZArith_dec.Z_dec'	40
Coq.ZArith.ZArith_dec.Z_zerop	40	0.0.0	search with cache (only 1: decide equality; only 1: apply Pos.eq_dec; only 1: apply Pos.eq_dec).	0.0200109481812	3
Coq.ZArith.Zpow_alt.Piter_mul_acc	40
Coq.ZArith.Zpow_alt.Piter_op_square	40
Coq.ZArith.Zpow_alt.Zpower_equiv	40
Coq.ZArith.Zpow_alt.Zpower_alt_0_r	40	0	search with cache (only 1: auto).	0.00753808021545	1
Coq.ZArith.Zpow_alt.Zpower_alt_succ_r	40
Coq.ZArith.Zpow_alt.Zpower_alt_neg_r	40
Coq.ZArith.Zpow_alt.Zpower_alt_Ppow	40
Coq.Program.Wf.Fix_F_eq	40
Coq.Program.Wf.Fix_F_inv	40
Coq.Program.Wf.Fix_eq	40
Coq.Program.Wf.fix_sub_eq	40	0.0.0.0.0.0	search with cache (only 1: intro x; only 1: unfold Fix_sub; only 1: rewrite <- Fix_F_eq; only 1: apply F_ext; only 1: intros; only 1: apply Fix_F_inv).	0.00638794898987	6
Coq.Program.Wf.measure_wf	40
Coq.Program.Wf.F_unfold	40	0.2	search with cache (only 1: destruct r using Acc_inv_dep; only 1: auto).	0.00830101966858	4
Coq.Program.Wf.Fix_F_sub_rect	40	0.12.7.2.8.2	search with cache (only 1: intro x; only 1: intro H; only 1: induction (Rwf x); only 1: destruct H; only 1: rewrite <- Fix_F_eq; only 1: auto).	0.98063492775	7037
Coq.Program.Wf.eq_Fix_F_sub	40	0.1.4.0	search with cache (only 1: induction (Rwf x); only 1: rewrite F_unfold; only 1: rewrite F_unfold; only 1: auto).	0.102547168732	19
Coq.Program.Wf.Fix_sub_rect	40
Coq.Program.Wf.WfExtensionality.fix_sub_eq_ext	40
Coq.Program.Subset.subset_eq	40
Coq.Program.Subset.match_eq_rewrite	40
Coq.Program.Equality.JMeq_eq_refl	40	8	search with cache (only 1: apply UIP).	0.0163550376892	40
Coq.Program.Equality.UIP_refl_refl	40	0	search with cache (only 1: apply UIP).	0.00590705871582	1
Coq.Program.Equality.inj_pairT2_refl	40	0	search with cache (only 1: apply UIP).	0.00595903396606	1
Coq.Program.Equality.solution_left	40	0.7.14	search with cache (only 1: intro p; only 1: destruct 1; only 1: trivial).	0.0455229282379	378
Coq.Program.Equality.solution_right	40	0.1.0	search with cache (only 1: intros; only 1: subst; only 1: trivial).	0.00719690322876	4
Coq.Program.Equality.deletion	40	1	search with cache (only 1: trivial).	0.00599503517151	2
Coq.Program.Equality.simplification_heq	40
Coq.Program.Equality.simplification_existT2	40
Coq.Program.Equality.simplification_existT1	40
Coq.Program.Equality.simplification_K	40	0.12.3	search with cache (only 1: intros; only 1: rewrite UIP_refl; only 1: trivial).	0.0259821414948	209
Coq.Program.Combinators.compose_id_left	40	0.2	search with cache (only 1: intros; only 1: apply (eta_expansion_dep f)).	0.00461196899414	4
Coq.Program.Combinators.compose_id_right	40	0.0	search with cache (only 1: intros; only 1: reflexivity).	0.00374984741211	2
Coq.Program.Combinators.compose_assoc	40	0.0	search with cache (only 1: intros; only 1: reflexivity).	0.00405788421631	2
Coq.Program.Combinators.flip_flip	40	0.0	search with cache (only 1: intros; only 1: reflexivity).	0.00451803207397	2
Coq.Program.Combinators.prod_uncurry_curry	40	0.0	search with cache (only 1: intros; only 1: reflexivity).	0.00394701957703	2
Coq.Program.Combinators.prod_curry_uncurry	40
Coq.Sorting.PermutEq.multiplicity_In	40	2.4.1.4.3.0.2.0	search with cache (only 1: induction l; only 1: now constructor; only 1: simpl; only 1: intros a'; only 1: destruct eq_dec as [->| Hneq]; only 1: auto with *; only 1: rewrite IHl; only 1: tauto).	12.4339489937	14583
Coq.Sorting.PermutEq.multiplicity_In_O	40	0.3.8.3.0.13.0	search with cache (only 1: intros; only 1: induction l as [| x l]; only 1: reflexivity; only 1: simpl in *; only 1: destruct eq_dec as [->| Hneq]; only 1: tauto; only 1: tauto).	27.7929859161	33089
Coq.Sorting.PermutEq.multiplicity_In_S	40	0.0.0.2.0	search with cache (only 1: intros; only 1: eapply In_InA, multiplicity_InA in H; only 1: eauto with typeclass_instances; only 1: eauto with typeclass_instances; only 1: eauto with typeclass_instances).	0.0262911319733	7
Coq.Sorting.PermutEq.multiplicity_NoDup	40
Coq.Sorting.PermutEq.NoDup_permut	40
Coq.Sorting.PermutEq.permut_In_In	40
Coq.Sorting.PermutEq.permut_cons_In	40	0.0.1.4.2.0.5.1.1.4.0	search with cache (only 1: unfold PermutSetoid.permutation, meq; only 1: intro x; only 1: simpl; only 1: intros l a; only 1: intros; only 1: rewrite multiplicity_In; only 1: generalize (H a); only 1: destruct (eq_dec a a) as [H0| H0]; only 1: omega; only 1: destruct H0; only 1: auto).	9.94562292099	15247
Coq.Sorting.PermutEq.permut_nil	40
Coq.Sorting.PermutEq.permutation_Permutation	40
Coq.Sorting.PermutEq.permut_length_1	40
Coq.Sorting.PermutEq.permut_length_2	40
Coq.Sorting.PermutEq.permut_length	40
Coq.Sorting.PermutEq.permutation_map	40
Coq.Sorting.Mergesort.Sort.Sorted_merge	40
Coq.Sorting.Mergesort.Sort.Permuted_merge	40
Coq.Sorting.Mergesort.Sort.Sorted_merge_list_to_stack	40
Coq.Sorting.Mergesort.Sort.Permuted_merge_list_to_stack	40
Coq.Sorting.Mergesort.Sort.Sorted_merge_stack	40	1.1.1.1.0.2.1.3.0.2.1.0	search with cache (only 1: induction stack as [| [| ]]; only 1: simpl; only 1: constructor; only 1: intros; only 1: simpl; only 1: apply Sorted_merge; only 1: destruct H; only 1: auto; only 1: destruct H as (_, H1); only 1: auto; only 1: simpl; only 1: auto).	2.69926691055	6719
Coq.Sorting.Mergesort.Sort.Permuted_merge_stack	40
Coq.Sorting.Mergesort.Sort.Sorted_iter_merge	40
Coq.Sorting.Mergesort.Sort.Permuted_iter_merge	40
Coq.Sorting.Mergesort.Sort.Sorted_sort	40
Coq.Sorting.Mergesort.Sort.LocallySorted_sort	40
Coq.Sorting.Mergesort.Sort.Permuted_sort	40
Coq.Sorting.Mergesort.Sort.StronglySorted_sort	40
Coq.Sorting.Mergesort.NatOrder.leb_total	40
Coq.Sorting.Permutation.Permutation_nil	40
Coq.Sorting.Permutation.Permutation_nil_cons	40
Coq.Sorting.Permutation.Permutation_refl	40	9.0.3.9	search with cache (only 1: intros; only 1: induction l as [| a l IH]; only 1: auto; only 1: discriminate || auto).	0.453457117081	1216
Coq.Sorting.Permutation.Permutation_sym	40
Coq.Sorting.Permutation.Permutation_trans	40
Coq.Sorting.Permutation.Permutation_cons	40	0.2.6	search with cache (only 1: reduce; only 1: subst; only 1: auto).	0.041424036026	36
Coq.Sorting.Permutation.Permutation_in	40	2.2.1.1.1.0.1.6	search with cache (only 1: induction 1; only 1: simpl; only 1: auto; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: auto).	32.2762708664	11366
Coq.Sorting.Permutation.Permutation_in'	40
Coq.Sorting.Permutation.Permutation_app_tail	40
Coq.Sorting.Permutation.Permutation_app_head	40	0.0.0.0.3.1.6	search with cache (only 1: intros l1; only 1: intros; only 1: induction l1; only 1: simpl; only 1: auto; only 1: simpl; only 1: now constructor).	1.40240001678	1580
Coq.Sorting.Permutation.Permutation_app	40
Coq.Sorting.Permutation.Permutation_app'	40
Coq.Sorting.Permutation.Permutation_add_inside	40
Coq.Sorting.Permutation.Permutation_cons_append	40
Coq.Sorting.Permutation.Permutation_app_comm	40
Coq.Sorting.Permutation.Permutation_cons_app	40
Coq.Sorting.Permutation.Permutation_Add	40
Coq.Sorting.Permutation.Permutation_middle	40	0.0.0	search with cache (only 1: intros; only 1: rewrite app_comm_cons, Permutation_cons_append; only 1: now rewrite <- app_assoc).	0.0529758930206	3
Coq.Sorting.Permutation.Permutation_rev	40
Coq.Sorting.Permutation.Permutation_rev'	40
Coq.Sorting.Permutation.Permutation_length	40
Coq.Sorting.Permutation.Permutation_length'	40	2.0.0.0.0.0.0.0.0.16	search with cache (only 1: repeat red; only 1: intros l l' Hperm; only 1: induction Hperm; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: now transitivity (length l')).	1.70695209503	2046
Coq.Sorting.Permutation.Permutation_ind_bis	40
Coq.Sorting.Permutation.Permutation_nil_app_cons	40
Coq.Sorting.Permutation.Permutation_Add_inv	40
Coq.Sorting.Permutation.Permutation_app_inv	40
Coq.Sorting.Permutation.Permutation_cons_inv	40
Coq.Sorting.Permutation.Permutation_cons_app_inv	40
Coq.Sorting.Permutation.Permutation_app_inv_l	40
Coq.Sorting.Permutation.Permutation_app_inv_r	40
Coq.Sorting.Permutation.Permutation_length_1_inv	40
Coq.Sorting.Permutation.Permutation_length_1	40
Coq.Sorting.Permutation.Permutation_length_2_inv	40
Coq.Sorting.Permutation.Permutation_length_2	40
Coq.Sorting.Permutation.NoDup_Permutation	40
Coq.Sorting.Permutation.NoDup_Permutation_bis	40
Coq.Sorting.Permutation.Permutation_NoDup	40
Coq.Sorting.Permutation.Permutation_NoDup'	40	0.10.1	search with cache (only 1: repeat red; only 1: fix gcd_divide 1; only 1: auto).	0.433234930038	463
Coq.Sorting.Permutation.Permutation_map	40
Coq.Sorting.Permutation.Permutation_map'	40	1.0.0.0.0.0.0.0	search with cache (only 1: induction 1; only 1: simpl; only 1: eauto; only 1: simpl; only 1: eauto; only 1: simpl; only 1: eauto; only 1: eauto).	0.056421995163	9
Coq.Sorting.Permutation.nat_bijection_Permutation	40
Coq.Sorting.Permutation.adapt_injective	40
Coq.Sorting.Permutation.adapt_ok	40
Coq.Sorting.Permutation.Permutation_nth_error	40
Coq.Sorting.Permutation.Permutation_nth_error_bis	40
Coq.Sorting.Permutation.Permutation_nth	40
Coq.Sorting.PermutSetoid.list_contents_app	40
Coq.Sorting.PermutSetoid.permut_refl	40	0.11	search with cache (only 1: red; only 1: auto with datatypes).	0.106974124908	134
Coq.Sorting.PermutSetoid.permut_sym	40	0.0	search with cache (only 1: unfold permutation; only 1: auto with datatypes).	0.0120320320129	2
Coq.Sorting.PermutSetoid.permut_trans	40	1.8.0.1	search with cache (only 1: unfold permutation, meq; only 1: intros; only 1: rewrite H; only 1: auto).	0.982466936111	780
Coq.Sorting.PermutSetoid.permut_cons_eq	40
Coq.Sorting.PermutSetoid.permut_cons	40	2.0.0.0	search with cache (only 1: unfold permutation; only 1: simpl; only 1: intros; only 1: auto with datatypes).	0.0185759067535	6
Coq.Sorting.PermutSetoid.permut_app	40
Coq.Sorting.PermutSetoid.permut_add_inside_eq	40
Coq.Sorting.PermutSetoid.permut_add_inside	40
Coq.Sorting.PermutSetoid.permut_add_cons_inside_eq	40
Coq.Sorting.PermutSetoid.permut_add_cons_inside	40	0.0.11.1.0.0	search with cache (only 1: intros; only 1: replace (a :: l) with [ ] ++ a :: l; only 1: apply permut_add_inside_eq; only 1: intuition; only 1: trivial; only 1: trivial).	22.9545331001	6005
Coq.Sorting.PermutSetoid.permut_middle	40	0.0.0.0.0.1.4.2.0.1	search with cache (only 1: unfold permutation, meq in *; only 1: intros; only 1: simpl; only 1: repeat rewrite list_contents_app in *; only 1: simpl in *; only 1: destruct (eqA_dec a a0) as [Ha| Ha]; only 1: simpl; only 1: auto with arith; only 1: simpl; only 1: auto with arith).	22.9524431229	11910
Coq.Sorting.PermutSetoid.permut_sym_app	40	0.2.3.0.4	search with cache (only 1: unfold permutation, meq in *; only 1: intros; only 1: repeat rewrite list_contents_app in *; only 1: simpl in *; only 1: auto with arith).	1.7991631031	524
Coq.Sorting.PermutSetoid.permut_rev	40
Coq.Sorting.PermutSetoid.permut_conv_inv	40
Coq.Sorting.PermutSetoid.permut_app_inv1	40
Coq.Sorting.PermutSetoid.if_eqA_then	40
Coq.Sorting.PermutSetoid.permut_app_inv2	40	0.1.0.0.0.1.0.1.0.1	search with cache (only 1: intros l l1 l2; only 1: unfold permutation, meq; only 1: intros H a; only 1: generalize (H a); only 1: clear H; only 1: do 2 rewrite list_contents_app; only 1: simpl; only 1: intros; only 1: apply plus_reg_l with (multiplicity (list_contents l) a); only 1: trivial).	2.80766010284	1295
Coq.Sorting.PermutSetoid.permut_remove_hd_eq	40
Coq.Sorting.PermutSetoid.permut_remove_hd	40	0.0.0.0.0.1.0.0.0.0.0.4.0.0	search with cache (only 1: unfold permutation, meq; only 1: simpl; only 1: intros; only 1: specialize H with a0; only 1: rewrite list_contents_app in *; only 1: simpl in *; only 1: apply plus_reg_l with (if eqA_dec a a0 then 1 else 0); only 1: rewrite H; only 1: clear H; only 1: destruct (eqA_dec a a0); only 1: simpl; only 1: auto with arith; only 1: simpl; only 1: auto with arith).	21.0763261318	5655
Coq.Sorting.PermutSetoid.if_eqA_else	40	0.4.27.0	search with cache (only 1: intros; only 1: destruct (eqA_dec a a'); only 1: congruence; only 1: auto).	2.3483710289	4150
Coq.Sorting.PermutSetoid.if_eqA_refl	40	29.1.0.0.0	search with cache (only 1: intros; only 1: destruct eqA_dec as [_| NEQ]; only 1: auto; only 1: contradict NEQ; only 1: firstorder).	1.85054898262	4487
Coq.Sorting.PermutSetoid.if_eqA	40
Coq.Sorting.PermutSetoid.if_eqA_rewrite_l	40
Coq.Sorting.PermutSetoid.if_eqA_rewrite_r	40
Coq.Sorting.PermutSetoid.multiplicity_eqA	40
Coq.Sorting.PermutSetoid.multiplicity_InA	40
Coq.Sorting.PermutSetoid.multiplicity_InA_O	40
Coq.Sorting.PermutSetoid.multiplicity_InA_S	40	0.1.5	search with cache (only 1: intros l a; only 1: rewrite multiplicity_InA; only 1: auto with *).	0.220541000366	78
Coq.Sorting.PermutSetoid.multiplicity_NoDupA	40
Coq.Sorting.PermutSetoid.permut_InA_InA	40
Coq.Sorting.PermutSetoid.permut_cons_InA	40
Coq.Sorting.PermutSetoid.permut_nil	40
Coq.Sorting.PermutSetoid.permut_length_1	40
Coq.Sorting.PermutSetoid.permut_length_2	40
Coq.Sorting.PermutSetoid.permut_length	40
Coq.Sorting.PermutSetoid.NoDupA_equivlistA_permut	40
Coq.Sorting.PermutSetoid.permut_map	40
Coq.Sorting.PermutSetoid.Permutation_impl_permutation	40
Coq.Sorting.PermutSetoid.permut_eqA	40	0.0.0.3.0.0	search with cache (only 1: induction 1; only 1: apply permut_refl; only 1: apply permut_cons_eq; only 1: auto using Equivalence_Reflexive, permut_refl; only 1: auto using Equivalence_Reflexive, permut_refl; only 1: auto using Equivalence_Reflexive, permut_refl).	0.0310618877411	9
Coq.Sorting.PermutSetoid.permutation_Permutation	40
Coq.Sorting.Sorted.HdRel_inv	40	1.10.1	search with cache (only 1: intros; only 1: inversion H; only 1: auto).	0.119016885757	267
Coq.Sorting.Sorted.Sorted_inv	40	0.0	search with cache (only 1: inversion 1; only 1: auto).	0.0105481147766	2
Coq.Sorting.Sorted.Sorted_rect	40
Coq.Sorting.Sorted.Sorted_LocallySorted_iff	40
Coq.Sorting.Sorted.StronglySorted_inv	40	1.0.1	search with cache (only 1: inversion 1; only 1: subst; only 1: firstorder).	0.0141191482544	5
Coq.Sorting.Sorted.StronglySorted_rect	40
Coq.Sorting.Sorted.StronglySorted_rec	40	0.0.0	search with cache (only 1: induction l; only 1: firstorder using StronglySorted_inv; only 1: firstorder using StronglySorted_inv).	0.00859594345093	3
Coq.Sorting.Sorted.StronglySorted_Sorted	40
Coq.Sorting.Sorted.Sorted_extends	40
Coq.Sorting.Sorted.Sorted_StronglySorted	40
Coq.Sorting.Heap.leA_Tree_Leaf	40	0.12	search with cache (only 1: red; only 1: eauto with *).	0.0666840076447	60
Coq.Sorting.Heap.leA_Tree_Node	40	1.0	search with cache (only 1: simpl; only 1: auto with datatypes).	0.0289959907532	3
Coq.Sorting.Heap.invert_heap	40	0.13.17	search with cache (only 1: intros; only 1: inversion H; only 1: auto).	1.28678011894	1882
Coq.Sorting.Heap.is_heap_rect	40
Coq.Sorting.Heap.is_heap_rec	40	1.0.3.5.1.4.0.1.0.0	search with cache (only 1: simple induction T; only 1: auto with datatypes; only 1: intros a G PG D PD PN; only 1: elim (invert_heap a G D); only 1: intros H3 H4; only 1: elim H4; only 1: intros H1 H2; only 1: elim H2; only 1: auto with datatypes; only 1: auto with datatypes).	22.6357598305	3956
Coq.Sorting.Heap.low_trans	40
Coq.Sorting.Heap.Equivalence_instance_0	40	16.0.0.24	search with cache (only 1: split; only 1: auto with datatypes; only 1: auto with datatypes; only 1: congruence).	5.33125209808	5257
Coq.Sorting.Heap.Proper_instance_0	40	1.0.0.2.2.1.1	search with cache (only 1: red; only 1: red; only 1: red; only 1: unfold meq; only 1: simpl; only 1: destruct x; only 1: auto with arith).	0.766415119171	228
Coq.Sorting.Heap.merge	40
Coq.Sorting.Heap.insert	40
Coq.Sorting.Heap.list_to_heap	40	2.1.0	search with cache (only 1: fix merge 1; only 1: intros; only 1: trivial).	0.0347919464111	6
Coq.Sorting.Heap.heap_to_list	40
Coq.Sorting.Heap.treesort	40	3.0.2.0	search with cache (only 1: unfold permutation, meq; only 1: fix merge 1; only 1: intros; only 1: auto).	0.0445950031281	18
Coq.Init.Wf.Acc_inv	40	0.1	search with cache (only 1: destruct 1; only 1: assumption).	0.00445294380188	3
Coq.Init.Wf.well_founded_induction_type	40
Coq.Init.Wf.well_founded_induction	40	0.0.0.0	search with cache (only 1: intros; only 1: apply Acc_rect; only 1: auto; only 1: auto).	0.00530505180359	4
Coq.Init.Wf.well_founded_ind	40	0.0.0.0	search with cache (only 1: intros; only 1: apply Acc_rect; only 1: auto; only 1: auto).	0.00536799430847	4
Coq.Init.Wf.Fix_F_eq	40
Coq.Init.Wf.Fix_F_inv	40
Coq.Init.Wf.Fix_eq	40
Coq.Init.Wf.well_founded_induction_type_2	40
Coq.Init.Tactics.decide_left	40	1.7.8.3.0.5.2.4	search with cache (only 1: intro z; only 1: intro H; only 1: reflexivity || destruct H; only 1: unfold not; only 1: auto; only 1: intro H; only 1: induction n; only 1: auto).	1.1008310318	19950
Coq.Init.Tactics.decide_right	40	2.1.0.0	search with cache (only 1: intros; only 1: destruct decide; only 1: contradiction; only 1: apply H0).	0.00653409957886	7
Coq.Init.Peano.pred_Sn	40	5	search with cache (only 1: split).	0.0048999786377	6
Coq.Init.Peano.not_eq_S	40	1.0.3	search with cache (only 1: unfold not; only 1: intros A C h1 h2; only 1: auto).	0.00663995742798	7
Coq.Init.Peano.O_S	40	0.3	search with cache (only 1: intro H; only 1: discriminate).	0.00698184967041	13
Coq.Init.Peano.n_Sn	40
Coq.Init.Peano.plus_n_O	40
Coq.Init.Peano.plus_O_n	40	1.0.1.0.0	search with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.00621485710144	7
Coq.Init.Peano.plus_n_Sm	40	6.0.1.0.1	search with cache (only 1: induction n; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: auto).	0.0379569530487	230
Coq.Init.Peano.plus_Sn_m	40	0.0.0.0.0.0	search with cache (only 1: intros n m; only 1: simpl; only 1: induction n; only 1: auto; only 1: simpl; only 1: auto).	0.00694108009338	6
Coq.Init.Peano.mult_n_O	40	1.1.0.4	search with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: auto).	0.00716495513916	11
Coq.Init.Peano.mult_n_Sm	40
Coq.Init.Peano.le_pred	40
Coq.Init.Peano.le_S_n	40
Coq.Init.Peano.le_0_n	40	2.0.5	search with cache (only 1: induction n; only 1: auto; only 1: auto).	0.00610303878784	10
Coq.Init.Peano.le_n_S	40	2.0.1	search with cache (only 1: induction 1; only 1: auto; only 1: auto).	0.00704503059387	14
Coq.Init.Peano.nat_case	40	5.5.0.3	search with cache (only 1: intros n m; only 1: induction n; only 1: trivial; only 1: trivial).	0.0996260643005	892
Coq.Init.Peano.nat_double_ind	40
Coq.Init.Peano.max_l	40
Coq.Init.Peano.max_r	40
Coq.Init.Peano.min_l	40	0.3.2.1.2.1.0.1.0.0	search with cache (only 1: revert m; only 1: induction n; only 1: trivial; only 1: destruct m; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	1.44121289253	6388
Coq.Init.Peano.min_r	40	0.5.3.1.0.0.0.1.1.0.0.1.0.0	search with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: inversion 1; only 1: destruct m; only 1: inversion 1; only 1: trivial; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	1.30467605591	5485
Coq.Init.Peano.nat_rect_succ_r	40
Coq.Init.Peano.nat_rect_plus	40	2.0.3.3.2.0	search with cache (only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: intros; only 1: rewrite <- ?IHn; only 1: trivial).	0.289509057999	1033
Coq.Init.Datatypes.andb_prop	40
Coq.Init.Datatypes.andb_true_intro	40
Coq.Init.Datatypes.eq_true_ind_r	40
Coq.Init.Datatypes.eq_true_rec_r	40	0.0.0	search with cache (only 1: intros P b H H0; only 1: destruct H0 in H; only 1: assumption).	0.00770401954651	3
Coq.Init.Datatypes.eq_true_rect_r	40	0.0.0	search with cache (only 1: intros P b H H0; only 1: destruct H0 in H; only 1: assumption).	0.00869989395142	3
Coq.Init.Datatypes.surjective_pairing	40
Coq.Init.Datatypes.injective_projections	40
Coq.Init.Datatypes.pair_equal_spec	40
Coq.Init.Datatypes.rew_pair	40	0.0	search with cache (only 1: destruct H; only 1: auto).	0.0107729434967	2
Coq.Init.Datatypes.comparison_eq_stable	40
Coq.Init.Datatypes.CompOpp_involutive	40	2.2.2.3.3	search with cache (only 1: intro H; only 1: reflexivity || destruct H; only 1: reflexivity || destruct H; only 1: reflexivity || destruct H; only 1: reflexivity || destruct H).	0.0310580730438	200
Coq.Init.Datatypes.CompOpp_inj	40	0.0.0.0.1.0.0.0.1.2	search with cache (only 1: destruct c, c'; only 1: reflexivity; only 1: discriminate; only 1: discriminate; only 1: discriminate; only 1: reflexivity; only 1: discriminate; only 1: discriminate; only 1: discriminate; only 1: reflexivity).	0.042552947998	167
Coq.Init.Datatypes.CompOpp_iff	40	0.0.3.0.0.4.1.1.3.0.0.0.4.0.0.3.1.1.3.0.1.1.3.1.1.3.0.0.4.0.0	search with cache (only 1: destruct c; only 1: destruct c'; only 1: split; only 1: auto; only 1: auto; only 1: split; only 1: discriminate; only 1: discriminate; only 1: split; only 1: discriminate; only 1: discriminate; only 1: destruct c'; only 1: split; only 1: discriminate; only 1: discriminate; only 1: split; only 1: auto; only 1: auto; only 1: split; only 1: auto; only 1: auto; only 1: destruct c'; only 1: split; only 1: discriminate; only 1: discriminate; only 1: split; only 1: auto; only 1: auto; only 1: split; only 1: auto; only 1: auto).	6.66387701035	72730
Coq.Init.Datatypes.CompareSpec2Type	40
Coq.Init.Datatypes.CompSpec2Type	40
Coq.Init.Logic.proj1	40
Coq.Init.Logic.proj2	40	0.1	search with cache (only 1: destruct 1; only 1: trivial).	0.00491285324097	3
Coq.Init.Logic.iff_refl	40
Coq.Init.Logic.iff_trans	40
Coq.Init.Logic.iff_sym	40
Coq.Init.Logic.and_iff_compat_l	40	0.0.2.0.0.0.2.0.2.1	search with cache (only 1: destruct 1; only 1: split; only 1: destruct 1; only 1: split; only 1: auto; only 1: auto; only 1: destruct 1; only 1: split; only 1: auto; only 1: auto).	0.0285880565643	170
Coq.Init.Logic.and_iff_compat_r	40	0.1.1.0.0.1.0.0.0.0	search with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: intros [? ?]; only 1: split; only 1: auto; only 1: assumption; only 1: intros [? ?]; only 1: split; only 1: auto; only 1: assumption).	0.0166988372803	112
Coq.Init.Logic.or_iff_compat_l	40
Coq.Init.Logic.or_iff_compat_r	40
Coq.Init.Logic.imp_iff_compat_l	40
Coq.Init.Logic.imp_iff_compat_r	40
Coq.Init.Logic.not_iff_compat	40	1.1.0.1	search with cache (only 1: intros A B [H1 H2]; only 1: split; only 1: auto; only 1: auto).	0.00879693031311	7
Coq.Init.Logic.neg_false	40
Coq.Init.Logic.and_cancel_l	40
Coq.Init.Logic.and_cancel_r	40
Coq.Init.Logic.and_comm	40	0.0.0.1.0.0.0.1.3	search with cache (only 1: split; only 1: destruct 1; only 1: split; only 1: auto; only 1: auto; only 1: destruct 1; only 1: split; only 1: auto; only 1: auto).	0.0183510780334	181
Coq.Init.Logic.and_assoc	40
Coq.Init.Logic.or_cancel_l	40
Coq.Init.Logic.or_cancel_r	40
Coq.Init.Logic.or_comm	40
Coq.Init.Logic.or_assoc	40
Coq.Init.Logic.iff_and	40	0.2	search with cache (only 1: intros; only 1: assumption).	0.00541806221008	4
Coq.Init.Logic.iff_to_and	40
Coq.Init.Logic.inst	40	3	search with cache (only 1: auto).	0.00664806365967	4
Coq.Init.Logic.gen	40	1.0	search with cache (only 1: unfold all; only 1: auto).	0.00500202178955	3
Coq.Init.Logic.absurd	40
Coq.Init.Logic.eq_sym	40
Coq.Init.Logic.eq_trans	40	1.0.0	search with cache (only 1: destruct 1; only 1: destruct 1; only 1: trivial).	0.00641918182373	4
Coq.Init.Logic.eq_trans_r	40	0.0	search with cache (only 1: destruct 2; only 1: trivial).	0.00599813461304	2
Coq.Init.Logic.f_equal	40	0.1	search with cache (only 1: destruct 1; only 1: trivial).	0.00708198547363	3
Coq.Init.Logic.not_eq_sym	40
Coq.Init.Logic.eq_sind_r	40
Coq.Init.Logic.eq_ind_r	40	1.0.0	search with cache (only 1: intros A x P H y H0; only 1: elim eq_sym with (1 := H0); only 1: assumption).	0.00612688064575	4
Coq.Init.Logic.eq_rec_r	40	0.0.0	search with cache (only 1: intros A x P H y H0; only 1: elim eq_sym with (1 := H0); only 1: assumption).	0.0053858757019	3
Coq.Init.Logic.eq_rect_r	40	0.0.0	search with cache (only 1: intros A x P H y H0; only 1: elim eq_sym with (1 := H0); only 1: assumption).	0.00644302368164	3
Coq.Init.Logic.f_equal_dep	40
Coq.Init.Logic.f_equal_dep2	40
Coq.Init.Logic.rew_opp_r	40
Coq.Init.Logic.rew_opp_l	40
Coq.Init.Logic.f_equal2	40
Coq.Init.Logic.f_equal3	40	1.0.0.1	search with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	0.00862097740173	12
Coq.Init.Logic.f_equal4	40	0.1.0.0.0	search with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	0.00829315185547	6
Coq.Init.Logic.f_equal5	40	0.1.0.0.0.0	search with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	0.00871706008911	7
Coq.Init.Logic.f_equal_compose	40
Coq.Init.Logic.eq_trans_refl_l	40	1.2	search with cache (only 1: destruct e; only 1: reflexivity).	0.00637292861938	5
Coq.Init.Logic.eq_trans_refl_r	40	0.0	search with cache (only 1: destruct e; only 1: reflexivity).	0.0061948299408	2
Coq.Init.Logic.eq_sym_involutive	40	0.0	search with cache (only 1: destruct e; only 1: reflexivity).	0.00614595413208	2
Coq.Init.Logic.eq_trans_sym_inv_l	40	0.0	search with cache (only 1: destruct e; only 1: reflexivity).	0.006098985672	2
Coq.Init.Logic.eq_trans_sym_inv_r	40	0.0	search with cache (only 1: destruct e; only 1: reflexivity).	0.00608706474304	2
Coq.Init.Logic.eq_trans_assoc	40
Coq.Init.Logic.rew_map	40
Coq.Init.Logic.eq_trans_map	40
Coq.Init.Logic.map_subst	40	0.4.0	search with cache (only 1: intros; only 1: destruct H; only 1: auto).	0.00895214080811	7
Coq.Init.Logic.map_subst_map	40	0.0	search with cache (only 1: destruct H; only 1: trivial).	0.00818681716919	2
Coq.Init.Logic.rew_swap	40	1.2.0	search with cache (only 1: intros; only 1: destruct H; only 1: assumption).	0.00731897354126	6
Coq.Init.Logic.rew_compose	40	0.4.0	search with cache (only 1: intros; only 1: destruct H2; only 1: reflexivity).	0.00706195831299	7
Coq.Init.Logic.eq_id_comm_l	40
Coq.Init.Logic.eq_id_comm_r	40
Coq.Init.Logic.eq_refl_map_distr	40	0.0	search with cache (only 1: intros; only 1: trivial).	0.00440907478333	2
Coq.Init.Logic.eq_trans_map_distr	40
Coq.Init.Logic.eq_sym_map_distr	40	0.2	search with cache (only 1: destruct e; only 1: trivial).	0.00675702095032	13
Coq.Init.Logic.eq_trans_sym_distr	40
Coq.Init.Logic.eq_trans_rew_distr	40
Coq.Init.Logic.rew_const	40	0.4	search with cache (only 1: destruct e; only 1: trivial).	0.0049159526825	13
Coq.Init.Logic.unique_existence	40
Coq.Init.Logic.forall_exists_unique_domain_coincide	40
Coq.Init.Logic.forall_exists_coincide_unique_domain	40
Coq.Init.Logic.exists_inhabited	40
Coq.Init.Logic.inhabited_covariant	40
Coq.Init.Logic.eq_stepl	40	7.7	search with cache (only 1: destruct 1; only 1: auto).	0.0174329280853	143
Coq.Init.Logic.iff_stepl	40
Coq.Init.Logic.eq_ex_uncurried	40
Coq.Init.Logic.rew_ex	40
Coq.Init.Logic.eq_ex2_uncurried	40	0.2.0.4.0	search with cache (only 1: destruct pq as [p q]; only 1: destruct H; only 1: destruct q; only 1: destruct p; only 1: reflexivity).	0.0165610313416	56
Coq.Init.Logic.rew_ex2	40	0.0	search with cache (only 1: destruct H, u; only 1: reflexivity).	0.00664901733398	2
Coq.Init.Logic_Type.identity_sym	40	1.1	search with cache (only 1: destruct 1; only 1: trivial).	0.00836801528931	15
Coq.Init.Logic_Type.identity_trans	40	1.0.0	search with cache (only 1: destruct 1; only 1: destruct 1; only 1: trivial).	0.00636601448059	4
Coq.Init.Logic_Type.identity_congr	40	0.0	search with cache (only 1: destruct 1; only 1: trivial).	0.00550413131714	2
Coq.Init.Logic_Type.not_identity_sym	40
Coq.Init.Logic_Type.identity_ind_r	40
Coq.Init.Logic_Type.identity_rec_r	40	1.0.0	search with cache (only 1: intros A x P H y H0; only 1: case identity_sym with (1 := H0); only 1: trivial).	0.00634503364563	4
Coq.Init.Logic_Type.identity_rect_r	40	0.0.0	search with cache (only 1: intros A x P H y H0; only 1: case identity_sym with (1 := H0); only 1: trivial).	0.00616717338562	3
Coq.Init.Specif.sigT_eta	40
Coq.Init.Specif.sig_eta	40	0.1	search with cache (only 1: destruct p; only 1: reflexivity).	0.00667405128479	3
Coq.Init.Specif.sigT2_eta	40	0.0	search with cache (only 1: destruct p; only 1: reflexivity).	0.00675988197327	2
Coq.Init.Specif.sig2_eta	40	0.0	search with cache (only 1: destruct p; only 1: reflexivity).	0.00646305084229	2
Coq.Init.Specif.exists_to_inhabited_sig	40
Coq.Init.Specif.inhabited_sig_to_exists	40
Coq.Init.Specif.eq_existT_uncurried	40	0.2.0.0	search with cache (only 1: destruct pq as [p q r]; only 1: destruct q; only 1: destruct p; only 1: reflexivity).	0.0113871097565	6
Coq.Init.Specif.eq_sigT_uncurried	40
Coq.Init.Specif.eq_existT_curried	40	0.1.0	search with cache (only 1: destruct q; only 1: destruct p; only 1: reflexivity).	0.00720310211182	4
Coq.Init.Specif.eq_existT_curried_map	40	0.5.1	search with cache (only 1: simpl in *; only 1: destruct p, q; only 1: reflexivity).	0.0172131061554	12
Coq.Init.Specif.eq_existT_curried_trans	40
Coq.Init.Specif.eq_existT_curried_congr	40
Coq.Init.Specif.eq_sigT_uncurried_iff	40
Coq.Init.Specif.eq_sigT_rect	40
Coq.Init.Specif.rew_sigT	40	0.0	search with cache (only 1: destruct H, u; only 1: reflexivity).	0.010085105896	2
Coq.Init.Specif.eq_exist_uncurried	40	0.1.1.0	search with cache (only 1: destruct pq as [p q]; only 1: destruct q; only 1: destruct p; only 1: reflexivity).	0.0107731819153	6
Coq.Init.Specif.eq_sig_uncurried	40
Coq.Init.Specif.eq_sig_rect	40
Coq.Init.Specif.eq_sig_uncurried_iff	40	0.0.0.1.3.0.4.0.1.1	search with cache (only 1: split; only 1: intro p; only 1: destruct u as [u1 u2], v as [v1 v2]; only 1: destruct p; only 1: simpl in *; only 1: exists eq_refl; only 1: reflexivity; only 1: destruct u as [u1 u2], v as [v1 v2]; only 1: simpl in *; only 1: apply eq_exist_uncurried).	0.238823890686	940
Coq.Init.Specif.rew_sig	40	0.0	search with cache (only 1: destruct H, u; only 1: reflexivity).	0.0117678642273	2
Coq.Init.Specif.eq_existT2_uncurried	40
Coq.Init.Specif.eq_sigT2_uncurried	40
Coq.Init.Specif.eq_sigT2_uncurried_iff	40	0.0.0.0.0.3.1.2.0	search with cache (only 1: split; only 1: intro p; only 1: destruct p; only 1: exists eq_refl; only 1: reflexivity; only 1: reflexivity; only 1: destruct u as [u1 u2 u3], v as [v1 v2 v3]; only 1: simpl in *; only 1: apply eq_existT2_uncurried).	0.556814193726	732
Coq.Init.Specif.eq_sigT2_rect	40
Coq.Init.Specif.rew_sigT2	40	0.0	search with cache (only 1: destruct H, u; only 1: reflexivity).	0.0138940811157	2
Coq.Init.Specif.eq_exist2_uncurried	40	0.0.0	search with cache (only 1: destruct pqr as [p q r]; only 1: destruct r, q, p; only 1: reflexivity).	0.0121691226959	3
Coq.Init.Specif.eq_sig2_uncurried	40
Coq.Init.Specif.eq_sig2_uncurried_iff	40	0.0.0.0.0.4.1.0.1.0	search with cache (only 1: split; only 1: intro p; only 1: destruct u as [u1 u2 u3], v as [v1 v2 v3]; only 1: destruct p; only 1: exists eq_refl; only 1: reflexivity; only 1: reflexivity; only 1: destruct u as [u1 u2 u3], v as [v1 v2 v3]; only 1: simpl in *; only 1: apply eq_exist2_uncurried).	0.804344892502	1252
Coq.Init.Specif.eq_sig2_rect	40
Coq.Init.Specif.rew_sig2	40	0.0	search with cache (only 1: destruct H, u; only 1: reflexivity).	0.0113699436188	2
Coq.Init.Specif.Choice	40
Coq.Init.Specif.Choice2	40
Coq.Init.Specif.bool_choice	40
Coq.Init.Specif.dependent_choice	40
Coq.Init.Specif.absurd_set	40	0.0.0	search with cache (only 1: unfold not; only 1: intros A C h1 h2; only 1: destruct (h2 h1)).	0.00560593605042	3
Coq.QArith.QOrderedType.Q_as_OT.lt_strorder	40	1.1.1.0.0.0.1.0.0.0.0	search with cache (only 1: split; only 1: red; only 1: red; only 1: intros; only 1: apply Z.lt_irrefl; only 1: red; only 1: intros; only 1: apply Qle_lt_trans with y; only 1: apply Qlt_le_weak; only 1: auto; only 1: auto).	0.451760053635	478
Coq.QArith.QOrderedType.Q_as_OT.lt_compat	40	0.0.0	search with cache (only 1: intros p q H r s H'; only 1: rewrite 2!Qlt_alt, H, H'; only 1: auto with *).	0.0206470489502	3
Coq.QArith.Qreduction.Qred_correct	40
Coq.QArith.Qreduction.Qred_complete	40
Coq.QArith.Qreduction.Qred_eq_iff	40
Coq.QArith.Qreduction.Qred_comp_Proper	40
Coq.QArith.Qreduction.Qplus'_correct	40
Coq.QArith.Qreduction.Qmult'_correct	40	1.0	search with cache (only 1: intros; only 1: apply Qred_correct).	0.0230560302734	3
Coq.QArith.Qreduction.Qminus'_correct	40	2.0	search with cache (only 1: intros; only 1: apply Qred_correct).	0.0233969688416	4
Coq.QArith.Qreduction.Qplus'_comp_Proper	40
Coq.QArith.Qreduction.Qmult'_comp_Proper	40	0.2.7.1	search with cache (only 1: intros; only 1: unfold Qmult'; only 1: rewrite H, H0; only 1: auto with qarith).	11.2757329941	581
Coq.QArith.Qreduction.Qminus'_comp_Proper	40	0.0.1.7.1	search with cache (only 1: intros; only 1: unfold Qminus'; only 1: unfold Qminus; only 1: rewrite H, H0; only 1: auto with qarith).	11.7725741863	575
Coq.QArith.Qreduction.Qred_opp	40
Coq.QArith.Qreduction.Qred_compare	40
Coq.QArith.Qreduction.Qred_le	40
Coq.QArith.Qreduction.Qred_lt	40
Coq.QArith.Qcabs.Qred_abs	40
Coq.QArith.Qcabs.Qcabs_canon	40
Coq.QArith.Qcabs.Qcabs_case	40
Coq.QArith.Qcabs.Qcabs_pos	40
Coq.QArith.Qcabs.Qcabs_neg	40
Coq.QArith.Qcabs.Qcabs_nonneg	40	9.0.0.0.3	search with cache (only 1: Qc_unfolds; only 1: fold (this x); only 1: apply Qabs_case; only 1: auto; only 1: apply (Qopp_le_compat x 0)).	1.14130806923	787
Coq.QArith.Qcabs.Qcabs_opp	40
Coq.QArith.Qcabs.Qcabs_triangle	40
Coq.QArith.Qcabs.Qcabs_Qcmult	40
Coq.QArith.Qcabs.Qcabs_Qcminus	40
Coq.QArith.Qcabs.Qcle_Qcabs	40	8.2.7	search with cache (only 1: Qc_unfolds; only 1: fold (this x); only 1: auto using Qle_Qabs).	0.19550204277	283
Coq.QArith.Qcabs.Qcabs_triangle_reverse	40
Coq.QArith.Qcabs.Qcabs_Qcle_condition	40
Coq.QArith.Qcabs.Qcabs_diff_Qcle_condition	40
Coq.QArith.Qcabs.Qcabs_null	40
Coq.QArith.Qpower.Qpower_positive_1	40
Coq.QArith.Qpower.Qpower_1	40
Coq.QArith.Qpower.Qpower_positive_0	40	1.1.2.0.0.2.0.0.0	search with cache (only 1: induction n; only 1: simpl; only 1: rewrite IHn; only 1: reflexivity; only 1: simpl; only 1: rewrite IHn; only 1: reflexivity; only 1: compute; only 1: auto).	3.67390418053	1886
Coq.QArith.Qpower.Qpower_0	40
Coq.QArith.Qpower.Qpower_not_0_positive	40
Coq.QArith.Qpower.Qpower_pos_positive	40
Coq.QArith.Qpower.Qpower_pos	40
Coq.QArith.Qpower.Qmult_power_positive	40
Coq.QArith.Qpower.Qmult_power	40
Coq.QArith.Qpower.Qinv_power_positive	40
Coq.QArith.Qpower.Qinv_power	40
Coq.QArith.Qpower.Qdiv_power	40
Coq.QArith.Qpower.Qinv_power_n	40
Coq.QArith.Qpower.Qpower_plus_positive	40
Coq.QArith.Qpower.Qpower_opp	40
Coq.QArith.Qpower.Qpower_minus_positive	40
Coq.QArith.Qpower.Qpower_plus	40
Coq.QArith.Qpower.Qpower_plus'	40
Coq.QArith.Qpower.Qpower_mult_positive	40
Coq.QArith.Qpower.Qpower_mult	40
Coq.QArith.Qpower.Zpower_Qpower	40
Coq.QArith.Qpower.Qsqr_nonneg	40	1.0.3.0	search with cache (only 1: intros [[| n| n] d] Ha; only 1: discriminate; only 1: now f_equal; only 1: now f_equal).	0.0385370254517	8
Coq.QArith.Qpower.Qpower_decomp	40
Coq.QArith.Qfield.Qsrt	40
Coq.QArith.Qfield.Qsft	40
Coq.QArith.Qfield.Qpower_theory	40	2.1.1.2	search with cache (only 1: constructor; only 1: intro; only 1: intro; only 1: now destruct n).	0.0271060466766	14
Coq.QArith.Qfield.ex1	40	0	search with cache (only 1: exact Qmult_plus_distr_l).	0.00788307189941	1
Coq.QArith.Qfield.ex2	40	6.1	search with cache (only 1: intros; only 1: ring).	0.0452661514282	20
Coq.QArith.Qfield.ex3	40	2.1.0.0.0	search with cache (only 1: intros (x1, x2) (y1, y2) (z1, z2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: simpl_mult; only 1: ring).	0.0621240139008	12
Coq.QArith.Qfield.ex4	40	9	search with cache (only 1: easy).	0.0142629146576	10
Coq.QArith.Qfield.ex5	40	0	search with cache (only 1: ring).	0.0129890441895	1
Coq.QArith.Qfield.ex6	40	0	search with cache (only 1: ring).	0.0134420394897	1
Coq.QArith.Qfield.ex7	40	0.1	search with cache (only 1: intros (x1, x2); only 1: ring).	0.0158009529114	3
Coq.QArith.Qfield.ex8	40	1.0	search with cache (only 1: intro; only 1: ring).	0.0143709182739	3
Coq.QArith.Qfield.ex9	40	1.0	search with cache (only 1: intro; only 1: ring).	0.0147268772125	3
Coq.QArith.Qfield.ex10	40
Coq.QArith.Qfield.Qopp_plus	40	1.0.0.0.0.0.0.1	search with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: intros; only 1: rewrite Pos.mul_comm; only 1: rewrite Pos.mul_comm; only 1: rewrite Pos.mul_comm; only 1: ring).	0.0496499538422	11
Coq.QArith.Qfield.Qopp_opp	40	0.0.0.0	search with cache (only 1: red; only 1: simpl; only 1: intros; only 1: ring).	0.0234870910645	4
Coq.QArith.Qcanon.Qred_identity	40
Coq.QArith.Qcanon.Qred_identity2	40
Coq.QArith.Qcanon.Qred_iff	40
Coq.QArith.Qcanon.Qc_is_canon	40
Coq.QArith.Qcanon.Qc_decomp	40	0.0.1.1.3.0.0	search with cache (only 1: intros (q, hq) (q', hq') H; only 1: simpl in *; only 1: subst q'; only 1: f_equal; only 1: apply eq_proofs_unicity; only 1: intros; only 1: repeat decide equality).	0.135806083679	89
Coq.QArith.Qcanon.Qred_involutive	40	1.3.4	search with cache (only 1: intros; only 1: apply Qred_complete; only 1: apply Qred_correct).	0.160597085953	96
Coq.QArith.Qcanon.Q2Qc_eq_iff	40
Coq.QArith.Qcanon.Qceq_alt	40
Coq.QArith.Qcanon.Qclt_alt	40	0.0	search with cache (only 1: unfold Qccompare; only 1: reflexivity).	0.0241119861603	2
Coq.QArith.Qcanon.Qcgt_alt	40	1.0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: apply Z.gt_lt_iff).	0.0451190471649	11
Coq.QArith.Qcanon.Qcle_alt	40	0.0	search with cache (only 1: intros; only 1: reflexivity).	0.0239958763123	2
Coq.QArith.Qcanon.Qcge_alt	40	1.0.0.0.0.1.0	search with cache (only 1: intros; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: apply Z.ge_le_iff).	0.218122005463	12
Coq.QArith.Qcanon.Qc_eq_dec	40
Coq.QArith.Qcanon.Q_apart_0_1	40	0	search with cache (only 1: auto with qarith).	0.0237238407135	1
Coq.QArith.Qcanon.Qcplus_assoc	40
Coq.QArith.Qcanon.Qcplus_0_l	40	3.0.7.11.1	search with cache (only 1: intros; only 1: qc; only 1: red; only 1: simpl; only 1: ring).	4.35453510284	2261
Coq.QArith.Qcanon.Qcplus_0_r	40	29.0.0	search with cache (only 1: intros; only 1: qc; only 1: ring).	3.87898397446	3824
Coq.QArith.Qcanon.Qcplus_comm	40	0.1.2.5.0.0	search with cache (only 1: intros; only 1: qc; only 1: red; only 1: simpl; only 1: rewrite Pos.mul_comm; only 1: ring).	0.891678094864	406
Coq.QArith.Qcanon.Qcopp_involutive	40	2.8.1	search with cache (only 1: intros; only 1: qc; only 1: ring).	0.498241901398	197
Coq.QArith.Qcanon.Qcplus_opp_r	40	0.0.2.1.0	search with cache (only 1: intros; only 1: qc; only 1: red; only 1: simpl; only 1: ring).	0.225862026215	8
Coq.QArith.Qcanon.Qcmult_assoc	40	0.3.1.4.0.0.3	search with cache (only 1: intros x y; only 1: intros; only 1: qc; only 1: red; only 1: simpl; only 1: rewrite Pos.mul_assoc; only 1: ring).	2.60246801376	1923
Coq.QArith.Qcanon.Qcmult_0_l	40	0.3.0.0	search with cache (only 1: intros; only 1: qc; only 1: compute; only 1: reflexivity).	0.0479440689087	7
Coq.QArith.Qcanon.Qcmult_0_r	40	0.0.4.0.0	search with cache (only 1: intros; only 1: qc; only 1: unfold Qeq, Qmult; only 1: simpl; only 1: ring).	0.0525279045105	9
Coq.QArith.Qcanon.Qcmult_1_l	40	23.2.0	search with cache (only 1: intros; only 1: qc; only 1: ring).	9.74595880508	7259
Coq.QArith.Qcanon.Qcmult_1_r	40	31.0.0	search with cache (only 1: intros; only 1: qc; only 1: ring).	22.6075088978	17799
Coq.QArith.Qcanon.Qcmult_comm	40	0.1.1.3.0.0	search with cache (only 1: intros; only 1: qc; only 1: red; only 1: simpl; only 1: rewrite Pos.mul_comm; only 1: ring).	0.471585988998	88
Coq.QArith.Qcanon.Qcmult_plus_distr_r	40	6.0.15.0	search with cache (only 1: intros; only 1: destruct x; only 1: qc; only 1: ring).	1.79884791374	727
Coq.QArith.Qcanon.Qcmult_plus_distr_l	40	7.0.0	search with cache (only 1: intros; only 1: qc; only 1: ring).	0.0725989341736	10
Coq.QArith.Qcanon.Qcmult_integral	40
Coq.QArith.Qcanon.Qcmult_integral_l	40
Coq.QArith.Qcanon.Qcmult_inv_r	40	3.6.1.0	search with cache (only 1: intros; only 1: qc; only 1: apply Qmult_inv_r; only 1: auto).	0.83846116066	538
Coq.QArith.Qcanon.Qcmult_inv_l	40	0.1.5.0.0.4	search with cache (only 1: unfold Q2Qc; only 1: intros; only 1: qc; only 1: rewrite Qmult_comm; only 1: apply Qmult_inv_r; only 1: auto).	3.62397003174	694
Coq.QArith.Qcanon.Qcinv_mult_distr	40
Coq.QArith.Qcanon.Qcdiv_mult_l	40
Coq.QArith.Qcanon.Qcmult_div_r	40
Coq.QArith.Qcanon.Qcle_refl	40	0.0.17.2	search with cache (only 1: intros; only 1: red; only 1: unfold Qle; only 1: auto with zarith).	2.08880114555	2083
Coq.QArith.Qcanon.Qcle_antisym	40	10.0.0.5	search with cache (only 1: unfold Qcle; only 1: intros (q, hq) (q', hq') H; only 1: simpl in *; only 1: auto with qarith).	6.29684090614	2611
Coq.QArith.Qcanon.Qcle_trans	40
Coq.QArith.Qcanon.Qclt_not_eq	40	5.2.0.0	search with cache (only 1: intros; only 1: contradict H; only 1: subst; only 1: apply Z.lt_irrefl).	0.116209030151	103
Coq.QArith.Qcanon.Qclt_le_weak	40	2.0.0	search with cache (only 1: unfold Qcle; only 1: intros; only 1: auto with *).	0.0270080566406	5
Coq.QArith.Qcanon.Qcle_lt_trans	40	1.1.4.1	search with cache (only 1: intros; only 1: apply Qle_lt_trans with y; only 1: eauto; only 1: auto with *).	0.245262861252	54
Coq.QArith.Qcanon.Qclt_le_trans	40
Coq.QArith.Qcanon.Qclt_trans	40	2.3.3.0	search with cache (only 1: intros; only 1: apply Qle_lt_trans with y; only 1: auto with *; only 1: auto with *).	0.493546009064	230
Coq.QArith.Qcanon.Qcnot_lt_le	40	4.0.0.0.0.0	search with cache (only 1: unfold Qcle, Qclt; only 1: intros; only 1: apply Z.nlt_ge; only 1: apply Z.nlt_ge; only 1: apply Z.nlt_ge; only 1: auto with qarith).	0.0692360401154	27
Coq.QArith.Qcanon.Qcnot_le_lt	40	1.3.1.0.0	search with cache (only 1: unfold Qcle, Qclt; only 1: intros; only 1: apply Z.nle_gt; only 1: unfold Z.le; only 1: easy || now destruct 1).	0.0599761009216	19
Coq.QArith.Qcanon.Qclt_not_le	40	1.0.3.0	search with cache (only 1: unfold Qcle, Qclt; only 1: intros H0; only 1: intros; only 1: auto with qarith).	0.170430898666	27
Coq.QArith.Qcanon.Qcle_not_lt	40	1.0.3.0	search with cache (only 1: unfold Qcle, Qclt; only 1: intros H1; only 1: intros; only 1: auto with qarith).	0.0433578491211	19
Coq.QArith.Qcanon.Qcle_lt_or_eq	40
Coq.QArith.Qcanon.Qc_dec	40
Coq.QArith.Qcanon.Qclt_le_dec	40	0.0.0.0	search with cache (only 1: unfold Qcle, Qclt; only 1: unfold Qlt, Qle; only 1: intros; only 1: exact (Z_lt_le_dec (Qnum x * QDen y) (Qnum y * QDen x))).	0.0329999923706	4
Coq.QArith.Qcanon.Qcopp_le_compat	40
Coq.QArith.Qcanon.Qcle_minus_iff	40	0.0.0.0.0.0.2.0.1.5	search with cache (only 1: unfold Qcle, Qcopp; only 1: intros; only 1: simpl in *; only 1: repeat rewrite Qred_correct; only 1: unfold Qle; only 1: simpl; only 1: rewrite Z.mul_1_r, Z.mul_opp_l, <- Z.le_sub_le_add_r, Z.opp_involutive; only 1: split; only 1: auto; only 1: auto).	1.72949004173	1158
Coq.QArith.Qcanon.Qclt_minus_iff	40	0.0.0.1.2.3.3.4	search with cache (only 1: unfold Qclt; only 1: intros (x1, x2) (y1, y2); only 1: simpl in *; only 1: repeat rewrite Qred_correct; only 1: unfold Qlt; only 1: simpl; only 1: rewrite Z.mul_1_r, Z.mul_opp_l, <- Z.lt_sub_lt_add_r, Z.opp_involutive; only 1: reflexivity).	7.49480009079	2142
Coq.QArith.Qcanon.Qcplus_le_compat	40
Coq.QArith.Qcanon.Qcmult_le_compat_r	40	0.0.6.3.3.0.0	search with cache (only 1: unfold Qcle, Qcminus; only 1: intros; only 1: simpl in *; only 1: repeat rewrite Qred_correct; only 1: apply Qmult_le_compat_r; only 1: auto with qarith; only 1: auto with qarith).	7.29771995544	3950
Coq.QArith.Qcanon.Qcmult_lt_0_le_reg_r	40
Coq.QArith.Qcanon.Qcmult_lt_compat_r	40
Coq.QArith.Qcanon.Qcpower_1	40
Coq.QArith.Qcanon.Qcpower_0	40	2.0.3.6.6.0	search with cache (only 1: intros; only 1: destruct n; only 1: easy; only 1: destruct n; only 1: trivial; only 1: trivial).	10.9165680408	1221
Coq.QArith.Qcanon.Qcpower_pos	40
Coq.QArith.Qcanon.Qc_eq_bool_correct	40
Coq.QArith.Qcanon.Qcrt	40
Coq.QArith.Qcanon.Qcft	40
Coq.QArith.Qcanon.test_field	40	0.0.1.2.0.0	search with cache (only 1: unfold Qcdiv; only 1: intros; only 1: rewrite <- Qcmult_assoc; only 1: rewrite Qcmult_inv_l; only 1: apply Qcmult_1_r; only 1: auto).	0.0449209213257	14
Coq.QArith.Qreals.IZR_nz	40	0	search with cache (only 1: auto with real).	0.0459439754486	1
Coq.QArith.Qreals.eqR_Qeq	40
Coq.QArith.Qreals.Qeq_eqR	40
Coq.QArith.Qreals.Rle_Qle	40
Coq.QArith.Qreals.Qle_Rle	40
Coq.QArith.Qreals.Rlt_Qlt	40
Coq.QArith.Qreals.Qlt_Rlt	40
Coq.QArith.Qreals.Q2R_plus	40
Coq.QArith.Qreals.Q2R_mult	40	0.1.0.1.4.1.2	search with cache (only 1: unfold Qplus, Qeq, Q2R; only 1: intros (x1, x2) (y1, y2); only 1: simpl in *; only 1: simpl_mult; only 1: do 2 rewrite mult_IZR; only 1: field; only 1: auto).	3.88755702972	1429
Coq.QArith.Qreals.Q2R_opp	40
Coq.QArith.Qreals.Q2R_minus	40	0.0.2.0.1.1.0.2.0.1	search with cache (only 1: unfold Qplus, Qeq, Q2R; only 1: intros (x1, x2); only 1: simpl; only 1: intros; only 1: simpl_mult; only 1: rewrite plus_IZR; only 1: do 3 rewrite mult_IZR; only 1: rewrite Ropp_Ropp_IZR; only 1: field; only 1: auto).	10.3441798687	4322
Coq.QArith.Qreals.Q2R_inv	40
Coq.QArith.Qreals.Q2R_div	40
Coq.QArith.QArith_base.inject_Z_injective	40
Coq.QArith.QArith_base.Qeq_alt	40	8.24.14	search with cache (only 1: unfold Qeq; only 1: rewrite <- Z.compare_eq_iff; only 1: now split).	7.96281790733	14543
Coq.QArith.QArith_base.Qlt_alt	40	6.0.0.0	search with cache (only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: now split).	0.206680059433	32
Coq.QArith.QArith_base.Qgt_alt	40
Coq.QArith.QArith_base.Qle_alt	40	6.0.0.0	search with cache (only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: easy').	0.0642490386963	31
Coq.QArith.QArith_base.Qge_alt	40
Coq.QArith.QArith_base.Qcompare_antisym	40
Coq.QArith.QArith_base.Qcompare_spec	40
Coq.QArith.QArith_base.Qeq_refl	40	2.1	search with cache (only 1: unfold Qeq, Qlt, Qcompare; only 1: now constructor).	0.0316679477692	5
Coq.QArith.QArith_base.Qeq_sym	40	3.0	search with cache (only 1: unfold Qeq, Qlt, Qcompare; only 1: auto).	0.0398390293121	11
Coq.QArith.QArith_base.Qeq_trans	40
Coq.QArith.QArith_base.Q_Setoid	40
Coq.QArith.QArith_base.Qeq_dec	40	0.0.0.6	search with cache (only 1: unfold Qeq, Qlt, Qcompare; only 1: decide equality; only 1: apply Pos.eq_dec; only 1: apply Pos.eq_dec).	0.0536949634552	10
Coq.QArith.QArith_base.Qeq_bool_iff	40	4.6.0.6.2	search with cache (only 1: intuition; only 1: apply Zeq_is_eq_bool; only 1: trivial; only 1: apply Zeq_is_eq_bool; only 1: auto with qarith).	1.24079990387	726
Coq.QArith.QArith_base.Qeq_bool_eq	40	0.3.0.0.0.0	search with cache (only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: apply Zeq_is_eq_bool; only 1: trivial).	0.0704691410065	25
Coq.QArith.QArith_base.Qeq_eq_bool	40	0	search with cache (only 1: apply Qeq_bool_iff).	0.0276551246643	1
Coq.QArith.QArith_base.Qeq_bool_neq	40
Coq.QArith.QArith_base.Qle_bool_iff	40
Coq.QArith.QArith_base.Qle_bool_imp_le	40	5	search with cache (only 1: apply Zle_is_le_bool).	0.0337171554565	6
Coq.QArith.QArith_base.Qnot_eq_sym	40	1	search with cache (only 1: auto with qarith).	0.0287621021271	2
Coq.QArith.QArith_base.Qeq_bool_comm	40
Coq.QArith.QArith_base.Qeq_bool_refl	40	0.0	search with cache (only 1: apply Qeq_bool_iff; only 1: auto with qarith).	0.0307159423828	2
Coq.QArith.QArith_base.Qeq_bool_sym	40	0.5	search with cache (only 1: rewrite !Qeq_bool_iff; only 1: auto with qarith).	0.107792139053	9
Coq.QArith.QArith_base.Qeq_bool_trans	40	0.0.0.1.0.0	search with cache (only 1: rewrite !Qeq_bool_iff; only 1: unfold Qeq; only 1: intros XY YZ; only 1: apply Z.mul_reg_r with (QDen y); only 1: auto with qarith; only 1: now rewrite Z.mul_shuffle0, XY, Z.mul_shuffle0, YZ, Z.mul_shuffle0).	0.073753118515	7
Coq.QArith.QArith_base.Qmake_Qdiv	40	0.0.1.19	search with cache (only 1: red; only 1: simpl; only 1: rewrite !Z.mul_1_r; only 1: trivial).	1.22537994385	1734
Coq.QArith.QArith_base.Qplus_comp	40
Coq.QArith.QArith_base.Qopp_comp	40
Coq.QArith.QArith_base.Qminus_comp	40
Coq.QArith.QArith_base.Qmult_comp	40
Coq.QArith.QArith_base.Qinv_comp	40
Coq.QArith.QArith_base.Qdiv_comp	40
Coq.QArith.QArith_base.Qcompare_comp	40
Coq.QArith.QArith_base.Qle_comp	40
Coq.QArith.QArith_base.Qlt_compat	40
Coq.QArith.QArith_base.Qeqb_comp	40	6.2.0.0	search with cache (only 1: intros x x' Exx' y y' Eyy'; only 1: apply eq_true_iff_eq; only 1: rewrite !Qeq_bool_iff; only 1: now f_equiv).	0.784955024719	222
Coq.QArith.QArith_base.Qleb_comp	40
Coq.QArith.QArith_base.Q_apart_0_1	40	1	search with cache (only 1: now try destruct p).	0.0347681045532	2
Coq.QArith.QArith_base.Qplus_assoc	40	2.0.0.0.6.3.0.6	search with cache (only 1: intros; only 1: unfold Qeq; only 1: simpl; only 1: destruct x; only 1: simpl in *; only 1: simpl_mult; only 1: ring_simplify; only 1: trivial).	12.0628068447	3578
Coq.QArith.QArith_base.Qplus_0_l	40	0.0.4.1.3	search with cache (only 1: intros n; only 1: unfold Qeq; only 1: destruct n; only 1: simpl in *; only 1: ring).	1.2071480751	105
Coq.QArith.QArith_base.Qplus_0_r	40	0.2.0.0.0	search with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: rewrite ?Pos.mul_1_r; only 1: ring).	0.0664241313934	7
Coq.QArith.QArith_base.Qplus_comm	40	1.0.0.3.3.3	search with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: intros; only 1: simpl; only 1: simpl_mult; only 1: ring).	3.63096213341	311
Coq.QArith.QArith_base.Qopp_involutive	40	0.0.0.1	search with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: simpl in *; only 1: ring).	0.528903961182	5
Coq.QArith.QArith_base.Qplus_opp_r	40	0.0.0.0	search with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: ring).	0.146384954453	4
Coq.QArith.QArith_base.Qplus_inj_r	40
Coq.QArith.QArith_base.Qplus_inj_l	40
Coq.QArith.QArith_base.Qmult_assoc	40	0.0.0.0.2	search with cache (only 1: intros (x1, x2) (y1, y2) (z1, z2); only 1: unfold Qeq, Qplus; only 1: simpl in *; only 1: simpl_mult; only 1: ring).	0.924288988113	52
Coq.QArith.QArith_base.Qmult_0_l	40	0.0.0	search with cache (only 1: red; only 1: simpl; only 1: trivial).	0.0332148075104	3
Coq.QArith.QArith_base.Qmult_0_r	40	0.2.3.0	search with cache (only 1: intros; only 1: unfold Qeq; only 1: simpl; only 1: ring).	0.185820102692	20
Coq.QArith.QArith_base.Qmult_1_l	40
Coq.QArith.QArith_base.Qmult_1_r	40	0.2.1.4.0.0.0	search with cache (only 1: intro; only 1: red; only 1: simpl; only 1: destruct n; only 1: rewrite Pos.mul_comm; only 1: simpl; only 1: ring).	2.63004899025	781
Coq.QArith.QArith_base.Qmult_comm	40	1.0.0.0.0.0.2	search with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: intros; only 1: rewrite Pos.mul_comm; only 1: rewrite Pos.mul_comm; only 1: ring).	0.600235939026	24
Coq.QArith.QArith_base.Qmult_plus_distr_r	40	0.0.0.0.1	search with cache (only 1: intros (x1, x2) (y1, y2) (z1, z2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: simpl_mult; only 1: ring).	0.918861865997	151
Coq.QArith.QArith_base.Qmult_plus_distr_l	40	0.0.0.0.0	search with cache (only 1: intros (x1, x2) (y1, y2) (z1, z2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: simpl_mult; only 1: ring).	0.0991289615631	5
Coq.QArith.QArith_base.Qmult_integral	40
Coq.QArith.QArith_base.Qmult_integral_l	40
Coq.QArith.QArith_base.inject_Z_plus	40
Coq.QArith.QArith_base.inject_Z_mult	40	6.0	search with cache (only 1: unfold Qplus, inject_Z; only 1: auto).	0.0320420265198	8
Coq.QArith.QArith_base.inject_Z_opp	40	0.3.0	search with cache (only 1: unfold Qplus, inject_Z; only 1: compute; only 1: now subst).	0.0350229740143	6
Coq.QArith.QArith_base.Qinv_involutive	40
Coq.QArith.QArith_base.Qmult_inv_r	40
Coq.QArith.QArith_base.Qinv_mult_distr	40
Coq.QArith.QArith_base.Qdiv_mult_l	40
Coq.QArith.QArith_base.Qmult_div_r	40
Coq.QArith.QArith_base.Qinv_plus_distr	40	0.2.0.0.0	search with cache (only 1: unfold Qeq, Qplus; only 1: simpl; only 1: intros; only 1: simpl_mult; only 1: ring).	0.0847959518433	7
Coq.QArith.QArith_base.Qinv_minus_distr	40	0.0.0.0.0	search with cache (only 1: unfold Qeq, Qplus; only 1: simpl; only 1: intros; only 1: rewrite Pos2Z.inj_mul; only 1: ring).	0.0653882026672	5
Coq.QArith.QArith_base.Qmult_inj_r	40
Coq.QArith.QArith_base.Qmult_inj_l	40
Coq.QArith.QArith_base.Qle_refl	40	2.4	search with cache (only 1: red; only 1: now reflexivity).	0.626460075378	23
Coq.QArith.QArith_base.Qle_antisym	40	14.2	search with cache (only 1: unfold Qle; only 1: Z.order').	1.0440659523	152
Coq.QArith.QArith_base.Qle_trans	40
Coq.QArith.QArith_base.Qlt_irrefl	40	1.15	search with cache (only 1: unfold Qeq, Qlt, Qcompare; only 1: apply StrictOrder_Irreflexive).	0.6832010746	148
Coq.QArith.QArith_base.Qlt_not_eq	40	16.1	search with cache (only 1: unfold Qeq, Qlt, Qcompare; only 1: Z.order).	1.32694196701	775
Coq.QArith.QArith_base.Zle_Qle	40
Coq.QArith.QArith_base.Zlt_Qlt	40
Coq.QArith.QArith_base.Qle_lteq	40
Coq.QArith.QArith_base.Qlt_le_weak	40	8.1	search with cache (only 1: red; only 1: now apply Z.lt_le_incl).	0.647555112839	194
Coq.QArith.QArith_base.Qle_lt_trans	40
Coq.QArith.QArith_base.Qlt_le_trans	40
Coq.QArith.QArith_base.Qlt_trans	40
Coq.QArith.QArith_base.Qnot_lt_le	40	2.1.1.10.5.4	search with cache (only 1: red; only 1: unfold Z.le; only 1: case Z.compare_spec; only 1: easy'; only 1: easy || now destruct 1; only 1: easy || now destruct 1).	12.6253759861	7828
Coq.QArith.QArith_base.Qnot_le_lt	40	17.1.8	search with cache (only 1: intuition; only 1: red; only 1: Z.order).	1.94248485565	1992
Coq.QArith.QArith_base.Qlt_not_le	40	0	search with cache (only 1: apply Z.nle_gt).	0.0288310050964	1
Coq.QArith.QArith_base.Qle_not_lt	40	0	search with cache (only 1: apply Z.nlt_ge).	0.0289030075073	1
Coq.QArith.QArith_base.Qle_lt_or_eq	40
Coq.QArith.QArith_base.Q_dec	40
Coq.QArith.QArith_base.Qlt_le_dec	40
Coq.QArith.QArith_base.Qarchimedean	40
Coq.QArith.QArith_base.Qopp_le_compat	40
Coq.QArith.QArith_base.Qle_minus_iff	40
Coq.QArith.QArith_base.Qlt_minus_iff	40
Coq.QArith.QArith_base.Qplus_le_compat	40
Coq.QArith.QArith_base.Qplus_lt_le_compat	40
Coq.QArith.QArith_base.Qplus_le_l	40
Coq.QArith.QArith_base.Qplus_le_r	40
Coq.QArith.QArith_base.Qplus_lt_l	40
Coq.QArith.QArith_base.Qplus_lt_r	40
Coq.QArith.QArith_base.Qmult_le_compat_r	40
Coq.QArith.QArith_base.Qmult_lt_0_le_reg_r	40
Coq.QArith.QArith_base.Qmult_le_r	40
Coq.QArith.QArith_base.Qmult_le_l	40
Coq.QArith.QArith_base.Qmult_lt_compat_r	40
Coq.QArith.QArith_base.Qmult_lt_r	40
Coq.QArith.QArith_base.Qmult_lt_l	40
Coq.QArith.QArith_base.Qmult_le_0_compat	40
Coq.QArith.QArith_base.Qinv_le_0_compat	40	0.0.0.1.0.0.0.1.0.9	search with cache (only 1: intros [[| n| n] d]; only 1: unfold Qle, Qlt; only 1: red; only 1: easy'; only 1: red; only 1: red; only 1: easy'; only 1: red; only 1: red; only 1: easy').	9.32263612747	8346
Coq.QArith.QArith_base.Qle_shift_div_l	40
Coq.QArith.QArith_base.Qle_shift_inv_l	40
Coq.QArith.QArith_base.Qle_shift_div_r	40
Coq.QArith.QArith_base.Qle_shift_inv_r	40
Coq.QArith.QArith_base.Qinv_lt_0_compat	40	0.0.0.1	search with cache (only 1: intros [[| n| n] d] Ha; only 1: assumption; only 1: assumption; only 1: assumption).	0.0388829708099	5
Coq.QArith.QArith_base.Qlt_shift_div_l	40
Coq.QArith.QArith_base.Qlt_shift_inv_l	40
Coq.QArith.QArith_base.Qlt_shift_div_r	40
Coq.QArith.QArith_base.Qlt_shift_inv_r	40
Coq.QArith.QArith_base.Qinv_lt_contravar	40
Coq.QArith.QArith_base.Qpower_positive_comp	40
Coq.QArith.QArith_base.Qpower_comp	40
Coq.QArith.Qminmax.Q.plus_max_distr_l	40
Coq.QArith.Qminmax.Q.plus_max_distr_r	40
Coq.QArith.Qminmax.Q.plus_min_distr_l	40
Coq.QArith.Qminmax.Q.plus_min_distr_r	40
Coq.QArith.Qround.Qopp_lt_compat	40
Coq.QArith.Qround.Qfloor_Z	40	10.7.11	search with cache (only 1: intros; only 1: simpl; only 1: now Z.nzsimpl).	1.35153508186	2214
Coq.QArith.Qround.Qceiling_Z	40
Coq.QArith.Qround.Qfloor_le	40
Coq.QArith.Qround.Qle_ceiling	40
Coq.QArith.Qround.Qle_floor_ceiling	40	0.0.2.1.0.1	search with cache (only 1: intros x; only 1: apply Qle_trans with (- - x); only 1: rewrite Qopp_involutive; only 1: auto with *; only 1: change_no_check (Qceiling x : Q) with (- Qfloor (- x)); only 1: auto with *).	0.512867927551	122
Coq.QArith.Qround.Qlt_floor	40
Coq.QArith.Qround.Qceiling_lt	40
Coq.QArith.Qround.Qfloor_resp_le	40
Coq.QArith.Qround.Qceiling_resp_le	40
Coq.QArith.Qround.Qfloor_comp_Proper	40
Coq.QArith.Qround.Qceiling_comp_Proper	40	0.1.0.2.3.0.0	search with cache (only 1: intros x y H; only 1: apply Z.le_antisymm; only 1: auto with *; only 1: unfold Qceiling; only 1: rewrite <- Z.opp_le_mono; only 1: symmetry in H; only 1: auto with *).	1.1678609848	585
Coq.QArith.Qround.Zdiv_Qdiv	40
Coq.QArith.Qabs.Qabs_case	40
Coq.QArith.Qabs.Qabs_wd_Proper	40
Coq.QArith.Qabs.Qabs_pos	40	3.0.1.0.0.1.1.0.2.0	search with cache (only 1: intros [[| n| n] d] Ha; only 1: red; only 1: simpl; only 1: auto; only 1: red; only 1: simpl; only 1: reflexivity; only 1: red; only 1: simpl; only 1: now destruct n).	6.72533512115	3272
Coq.QArith.Qabs.Qabs_neg	40	1.0.0.1.0.1.0.0.0	search with cache (only 1: intros x H; only 1: apply Qabs_case; only 1: intros H0; only 1: setoid_replace x with 0; only 1: reflexivity; only 1: apply Qle_antisym; only 1: assumption; only 1: assumption; only 1: reflexivity).	0.537062168121	279
Coq.QArith.Qabs.Qabs_nonneg	40	4.3.0.0	search with cache (only 1: intros [[| n| n] d] Ha; only 1: discriminate; only 1: discriminate; only 1: discriminate).	0.123653888702	55
Coq.QArith.Qabs.Zabs_Qabs	40	3.0.0.0	search with cache (only 1: intros; only 1: red; only 1: simpl; only 1: auto).	0.0140950679779	7
Coq.QArith.Qabs.Qabs_opp	40	7.0.2.2	search with cache (only 1: red; only 1: intros (n, d); only 1: simpl; only 1: now destruct n as [| [p| p| ]| [p| p| ]]).	1.18479895592	768
Coq.QArith.Qabs.Qabs_triangle	40
Coq.QArith.Qabs.Qabs_Qmult	40
Coq.QArith.Qabs.Qabs_Qinv	40	0.0.0.0.0.0.0.0.0.3	search with cache (only 1: intros [[| n| n] d]; only 1: red; only 1: simpl; only 1: trivial; only 1: red; only 1: simpl; only 1: reflexivity; only 1: red; only 1: simpl; only 1: reflexivity).	1.01678490639	459
Coq.QArith.Qabs.Qabs_Qminus	40
Coq.QArith.Qabs.Qle_Qabs	40	1.0.1.0.0.1.0.0.0.5.6	search with cache (only 1: intros x; only 1: destruct x as [[| xn| xn] xd]; only 1: red; only 1: simpl; only 1: auto with zarith; only 1: unfold Qle; only 1: simpl; only 1: auto with *; only 1: red; only 1: simpl; only 1: easy).	5.56546211243	6463
Coq.QArith.Qabs.Qabs_triangle_reverse	40
Coq.QArith.Qabs.Qabs_Qle_condition	40
Coq.QArith.Qabs.Qabs_diff_Qle_condition	40
Coq.Classes.CMorphisms.eq_proper_proxy	40	2	search with cache (only 1: firstorder).	0.0058479309082	3
Coq.Classes.CMorphisms.reflexive_proper_proxy	40	0	search with cache (only 1: firstorder).	0.00546908378601	1
Coq.Classes.CMorphisms.proper_proper_proxy	40	0	search with cache (only 1: firstorder).	0.00826811790466	1
Coq.Classes.CMorphisms.pointwise_pointwise	40
Coq.Classes.CMorphisms.subrelation_id_proper	40	0	search with cache (only 1: firstorder).	0.00598502159119	1
Coq.Classes.CMorphisms.subrelation_respectful	40	5	search with cache (only 1: simpl_crelation).	0.0224349498749	6
Coq.Classes.CMorphisms.subrelation_refl	40	0	search with cache (only 1: firstorder).	0.00633597373962	1
Coq.Classes.CMorphisms.subrelation_proper	40	0	search with cache (only 1: firstorder).	0.00687193870544	1
Coq.Classes.CMorphisms.proper_subrelation_proper_arrow	40	2	search with cache (only 1: simpl_crelation).	0.0361640453339	3
Coq.Classes.CMorphisms.pointwise_subrelation	40	0	search with cache (only 1: simpl_crelation).	0.0157499313354	1
Coq.Classes.CMorphisms.forall_subrelation	40	1.1	search with cache (only 1: simpl_crelation; only 1: firstorder).	0.0181820392609	4
Coq.Classes.CMorphisms.iff_impl_subrelation	40	0	search with cache (only 1: firstorder).	0.00793194770813	1
Coq.Classes.CMorphisms.iff_flip_impl_subrelation	40	0	search with cache (only 1: firstorder).	0.00788497924805	1
Coq.Classes.CMorphisms.iffT_arrow_subrelation	40	0	search with cache (only 1: firstorder).	0.00807189941406	1
Coq.Classes.CMorphisms.iffT_flip_arrow_subrelation	40	0	search with cache (only 1: firstorder).	0.00835490226746	1
Coq.Classes.CMorphisms.respectful_per_obligation_2	40
Coq.Classes.CMorphisms.flip_proper_obligation_1	40	5	search with cache (only 1: firstorder).	0.0138008594513	6
Coq.Classes.CMorphisms.trans_contra_co_type_morphism_obligation_1	40	2	search with cache (only 1: firstorder).	0.138027906418	3
Coq.Classes.CMorphisms.trans_contra_inv_impl_type_morphism_obligation_1	40
Coq.Classes.CMorphisms.trans_co_impl_type_morphism_obligation_1	40	1.1.5	search with cache (only 1: transitivity x0; only 1: assumption; only 1: assumption).	0.104676008224	74
Coq.Classes.CMorphisms.trans_sym_co_inv_impl_type_morphism_obligation_1	40	7	search with cache (only 1: firstorder).	0.651482820511	606
Coq.Classes.CMorphisms.trans_sym_contra_arrow_morphism_obligation_1	40
Coq.Classes.CMorphisms.per_partial_app_type_morphism_obligation_1	40	5	search with cache (only 1: firstorder).	0.0944941043854	6
Coq.Classes.CMorphisms.trans_co_eq_inv_arrow_morphism_obligation_1	40	3	search with cache (only 1: firstorder).	0.639367818832	20
Coq.Classes.CMorphisms.PER_type_morphism_obligation_1	40	5	search with cache (only 1: firstorder).	2.38852000237	378
Coq.Classes.CMorphisms.symmetric_equiv_flip	40	1.0	search with cache (only 1: unfold relation_equivalence, iffT; only 1: firstorder).	0.0112850666046	3
Coq.Classes.CMorphisms.compose_proper_obligation_1	40	12	search with cache (only 1: firstorder).	0.129130125046	46
Coq.Classes.CMorphisms.reflexive_eq_dom_reflexive	40	4	search with cache (only 1: simpl_crelation).	0.0163400173187	5
Coq.Classes.CMorphisms.respectful_morphism	40
Coq.Classes.CMorphisms.Reflexive_partial_app_morphism	40	0	search with cache (only 1: firstorder).	0.00877594947815	1
Coq.Classes.CMorphisms.flip_respectful	40	0	search with cache (only 1: firstorder).	0.0131509304047	1
Coq.Classes.CMorphisms.flip1	40	0	search with cache (only 1: simpl_crelation).	0.0158278942108	1
Coq.Classes.CMorphisms.flip2	40	0	search with cache (only 1: firstorder).	0.00802087783813	1
Coq.Classes.CMorphisms.eq_subrelation	40	0	search with cache (only 1: simpl_crelation).	0.0128381252289	1
Coq.Classes.CMorphisms.reflexive_proper	40	0	search with cache (only 1: firstorder).	0.00822401046753	1
Coq.Classes.CMorphisms.proper_eq	40	0	search with cache (only 1: firstorder).	0.0081901550293	1
Coq.Classes.CMorphisms.proper_proper	40	0.0.0.0.1.0	search with cache (only 1: intros A x y z H1 H2; only 1: firstorder; only 1: subst; only 1: firstorder; only 1: subst; only 1: firstorder).	0.0406401157379	7
Coq.Classes.CMorphisms.proper_normalizes_proper	40	0	search with cache (only 1: firstorder).	0.0101051330566	1
Coq.Classes.CMorphisms.flip_atom	40	0	search with cache (only 1: firstorder).	0.00939393043518	1
Coq.Classes.CMorphisms.flip_arrow	40
Coq.Classes.CMorphisms.proper_sym_flip	40	0.1	search with cache (only 1: intros A B R R' HRR' S S' HSS' f g; only 1: simpl_crelation).	0.054995059967	3
Coq.Classes.CMorphisms.proper_sym_flip_2	40	2.0.3.0	search with cache (only 1: intros A R1 Sym B R2 f Hf; only 1: unfold flip, respectful; only 1: intros x y H'; only 1: firstorder).	0.425966024399	40
Coq.Classes.CMorphisms.proper_sym_impl_iff	40	14.10	search with cache (only 1: simpl_crelation; only 1: firstorder).	12.6963338852	12120
Coq.Classes.CMorphisms.proper_sym_arrow_iffT	40	0.0.1.0.1	search with cache (only 1: intros A R Sym f Hf x x' Hxx'; only 1: repeat red in Hf; only 1: split; only 1: eauto; only 1: eauto).	0.0979549884796	28
Coq.Classes.CMorphisms.proper_sym_impl_iff_2	40
Coq.Classes.CMorphisms.proper_sym_arrow_iffT_2	40	0.0.0.0.3	search with cache (only 1: intros A R Sym B R' Sym' f Hf x x' Hxx' y y' Hyy'; only 1: repeat red in Hf; only 1: split; only 1: eauto; only 1: eauto).	0.476104974747	91
Coq.Classes.CMorphisms.PartialOrder_proper_type	40
Coq.Classes.CMorphisms.PartialOrder_StrictOrder	40
Coq.Classes.CMorphisms.StrictOrder_PreOrder	40
Coq.Classes.CMorphisms.StrictOrder_PartialOrder	40
Coq.Classes.Morphisms_Prop.Acc_pt_morphism	40
Coq.Classes.Morphisms_Prop.Acc_rel_morphism	40
Coq.Classes.Morphisms_Prop.well_founded_morphism	40
Coq.Classes.CEquivalence.equiv_transitive_obligation_1	40	3.1.4	search with cache (only 1: compute; only 1: destruct 1; only 1: auto).	0.0391988754272	105
Coq.Classes.CEquivalence.respecting_equiv_obligation_3	40
Coq.Classes.CEquivalence.pointwise_reflexive	40	0.2	search with cache (only 1: reduce; only 1: trivial).	0.00702881813049	4
Coq.Classes.CEquivalence.pointwise_symmetric	40	0	search with cache (only 1: firstorder).	0.00432705879211	1
Coq.Classes.CEquivalence.pointwise_transitive	40	0	search with cache (only 1: firstorder).	0.0082950592041	1
Coq.Classes.CEquivalence.pointwise_equivalence	40	0	search with cache (only 1: firstorder).	0.257076978683	1
Coq.Classes.CRelationClasses.complement_inverse	40	0	search with cache (only 1: auto).	0.00360083580017	1
Coq.Classes.CRelationClasses.StrictOrder_Asymmetric	40
Coq.Classes.CRelationClasses.subrelation_symmetric	40	0	search with cache (only 1: firstorder).	0.00402116775513	1
Coq.Classes.CRelationClasses.flip_Reflexive	40	2.0	search with cache (only 1: hnf; only 1: firstorder).	0.00366306304932	4
Coq.Classes.CRelationClasses.flip_Antisymmetric	40	3.1	search with cache (only 1: hnf; only 1: firstorder).	0.00858211517334	6
Coq.Classes.CRelationClasses.flip_PreOrder	40	0	search with cache (only 1: firstorder).	0.0108969211578	1
Coq.Classes.CRelationClasses.flip_StrictOrder	40	0	search with cache (only 1: firstorder).	0.0132029056549	1
Coq.Classes.CRelationClasses.flip_PER	40	0	search with cache (only 1: firstorder).	0.0206809043884	1
Coq.Classes.CRelationClasses.flip_Equivalence	40	0	search with cache (only 1: firstorder).	0.0225758552551	1
Coq.Classes.CRelationClasses.complement_Irreflexive	40	5	search with cache (only 1: firstorder).	0.00616002082825	6
Coq.Classes.CRelationClasses.complement_Symmetric	40	1.0	search with cache (only 1: hnf; only 1: firstorder).	0.00400185585022	3
Coq.Classes.CRelationClasses.iffT_Reflexive	40
Coq.Classes.CRelationClasses.iffT_Symmetric	40	0	search with cache (only 1: firstorder).	0.00356101989746	1
Coq.Classes.CRelationClasses.iffT_Transitive	40	0	search with cache (only 1: firstorder).	0.00516390800476	1
Coq.Classes.CRelationClasses.relation_equivalence_equivalence	40
Coq.Classes.CRelationClasses.relation_implication_preorder	40	0.0.0.0.1	search with cache (only 1: split; only 1: red; only 1: firstorder; only 1: red; only 1: firstorder).	0.00622200965881	6
Coq.Classes.CRelationClasses.partial_order_antisym	40	0	search with cache (only 1: firstorder).	0.00790190696716	1
Coq.Classes.CRelationClasses.PartialOrder_inverse	40	0	search with cache (only 1: firstorder).	0.0232150554657	1
Coq.Classes.Equivalence.equiv_transitive_obligation_1	40	0.0.1.1	search with cache (only 1: firstorder; only 1: transitivity y; only 1: firstorder; only 1: firstorder).	0.0072329044342	21
Coq.Classes.Equivalence.respecting_equiv_obligation_3	40	3.1.9.6.2.0	search with cache (only 1: intros A R sa x y z Hxy Hyz; only 1: firstorder; only 1: unfold respectful; only 1: setoid_rewrite H; only 1: eauto; only 1: firstorder).	36.3911759853	31639
Coq.Classes.Equivalence.pointwise_reflexive	40	4	search with cache (only 1: simpl_relation).	0.00916600227356	5
Coq.Classes.Equivalence.pointwise_symmetric	40	0	search with cache (only 1: firstorder).	0.00475883483887	1
Coq.Classes.Equivalence.pointwise_transitive	40	0	search with cache (only 1: firstorder).	0.0079197883606	1
Coq.Classes.Equivalence.pointwise_equivalence	40	0	search with cache (only 1: firstorder).	0.240903139114	1
Coq.Classes.EquivDec.unit_eqdec_obligation_1	40
Coq.Classes.EquivDec.bool_function_eqdec_obligation_1	40
Coq.Classes.EquivDec.list_eqdec_obligation_5	40
Coq.Classes.RelationClasses.complement_inverse	40	0	search with cache (only 1: auto).	0.00532293319702	1
Coq.Classes.RelationClasses.StrictOrder_Asymmetric	40
Coq.Classes.RelationClasses.subrelation_symmetric	40	0	search with cache (only 1: firstorder).	0.0062460899353	1
Coq.Classes.RelationClasses.flip_Reflexive	40	2.2.0.1	search with cache (only 1: hnf; only 1: intros; only 1: hnf; only 1: trivial).	0.00701880455017	9
Coq.Classes.RelationClasses.flip_Antisymmetric	40	1.0.3.2	search with cache (only 1: hnf; only 1: intros; only 1: red in H0; only 1: firstorder).	0.0119440555573	10
Coq.Classes.RelationClasses.flip_PreOrder	40	1	search with cache (only 1: firstorder).	0.0214459896088	2
Coq.Classes.RelationClasses.flip_StrictOrder	40	0	search with cache (only 1: firstorder).	0.0212380886078	1
Coq.Classes.RelationClasses.flip_PER	40	0	search with cache (only 1: firstorder).	0.0314400196075	1
Coq.Classes.RelationClasses.flip_Equivalence	40	0	search with cache (only 1: firstorder).	0.0328450202942	1
Coq.Classes.RelationClasses.complement_Irreflexive	40	3	search with cache (only 1: firstorder).	0.00837302207947	4
Coq.Classes.RelationClasses.complement_Symmetric	40	0	search with cache (only 1: firstorder).	0.00820994377136	1
Coq.Classes.RelationClasses.predicate_equivalence_equivalence_obligation_1	40
Coq.Classes.RelationClasses.predicate_equivalence_equivalence_obligation_2	40	1.0.0	search with cache (only 1: induction l; only 1: firstorder; only 1: firstorder).	0.0241498947144	17
Coq.Classes.RelationClasses.predicate_equivalence_equivalence_obligation_3	40
Coq.Classes.RelationClasses.predicate_implication_preorder_obligation_1	40	0.0.0	search with cache (only 1: induction l; only 1: firstorder; only 1: firstorder).	0.0118401050568	3
Coq.Classes.RelationClasses.predicate_implication_preorder_obligation_2	40	0.1.0.0.1.0.0.0	search with cache (only 1: induction l; only 1: firstorder; only 1: firstorder; only 1: simpl in *; only 1: pose (IHl (x x0) (y x0) (z x0)); only 1: induction l; only 1: firstorder; only 1: firstorder).	1.62477993965	31
Coq.Classes.RelationClasses.relation_equivalence_equivalence	40
Coq.Classes.RelationClasses.relation_implication_preorder	40	3	search with cache (only 1: firstorder).	0.0112159252167	4
Coq.Classes.RelationClasses.partial_order_antisym	40	0	search with cache (only 1: firstorder).	0.0163090229034	1
Coq.Classes.RelationClasses.PartialOrder_inverse	40	0	search with cache (only 1: firstorder).	0.0661790370941	1
Coq.Classes.RelationClasses.subrelation_partial_order_obligation_1	40	0	search with cache (only 1: firstorder).	0.0170559883118	1
Coq.Classes.Morphisms.eq_proper_proxy	40	2	search with cache (only 1: firstorder).	0.00529098510742	3
Coq.Classes.Morphisms.reflexive_proper_proxy	40	0	search with cache (only 1: firstorder).	0.0059700012207	1
Coq.Classes.Morphisms.proper_proper_proxy	40	0	search with cache (only 1: firstorder).	0.00472283363342	1
Coq.Classes.Morphisms.pointwise_pointwise	40	1.0.8.3.8.8	search with cache (only 1: hnf; only 1: split; only 1: intros; only 1: destruct 1; only 1: firstorder; only 1: firstorder).	0.501096010208	1461
Coq.Classes.Morphisms.subrelation_id_proper	40	2	search with cache (only 1: firstorder).	0.00546193122864	3
Coq.Classes.Morphisms.subrelation_respectful	40	0.0.7	search with cache (only 1: compute; only 1: intros; only 1: firstorder).	0.0103259086609	10
Coq.Classes.Morphisms.subrelation_refl	40	0	search with cache (only 1: firstorder).	0.00556707382202	1
Coq.Classes.Morphisms.subrelation_proper	40	1	search with cache (only 1: firstorder).	0.00616598129272	2
Coq.Classes.Morphisms.proper_subrelation_proper	40	0.3.6	search with cache (only 1: reduce_goal; only 1: subst; only 1: firstorder).	0.267675876617	42
Coq.Classes.Morphisms.pointwise_subrelation	40	0.1.0	search with cache (only 1: unfold subrelation; only 1: intros; only 1: firstorder).	0.00717210769653	4
Coq.Classes.Morphisms.forall_subrelation	40	1	search with cache (only 1: firstorder).	0.00885105133057	2
Coq.Classes.Morphisms.iff_impl_subrelation	40	0	search with cache (only 1: firstorder).	0.00759291648865	1
Coq.Classes.Morphisms.iff_flip_impl_subrelation	40	0	search with cache (only 1: firstorder).	0.00670194625854	1
Coq.Classes.Morphisms.respectful_per_obligation_2	40
Coq.Classes.Morphisms.complement_proper_obligation_1	40
Coq.Classes.Morphisms.flip_proper_obligation_1	40	4	search with cache (only 1: firstorder).	0.0111479759216	5
Coq.Classes.Morphisms.trans_contra_co_morphism_obligation_1	40	0	search with cache (only 1: firstorder).	0.104179859161	1
Coq.Classes.Morphisms.trans_contra_inv_impl_morphism_obligation_1	40
Coq.Classes.Morphisms.trans_co_impl_morphism_obligation_1	40
Coq.Classes.Morphisms.trans_sym_co_inv_impl_morphism_obligation_1	40	2.2.1.0	search with cache (only 1: transitivity y; only 1: apply H; only 1: intuition; only 1: intuition).	1.49042105675	277
Coq.Classes.Morphisms.trans_sym_contra_impl_morphism_obligation_1	40
Coq.Classes.Morphisms.per_partial_app_morphism_obligation_1	40
Coq.Classes.Morphisms.trans_co_eq_inv_impl_morphism_obligation_1	40	2	search with cache (only 1: firstorder).	0.487549066544	23
Coq.Classes.Morphisms.PER_morphism_obligation_1	40
Coq.Classes.Morphisms.symmetric_equiv_flip	40	0	search with cache (only 1: firstorder).	0.0101139545441	1
Coq.Classes.Morphisms.compose_proper_obligation_1	40	1.8	search with cache (only 1: apply H; only 1: auto).	0.0155601501465	22
Coq.Classes.Morphisms.reflexive_eq_dom_reflexive	40	0.0.2	search with cache (only 1: reduce; only 1: subst; only 1: trivial).	0.0103628635406	5
Coq.Classes.Morphisms.respectful_morphism	40
Coq.Classes.Morphisms.Reflexive_partial_app_morphism	40	0	search with cache (only 1: firstorder).	0.00790691375732	1
Coq.Classes.Morphisms.flip_respectful	40	0	search with cache (only 1: firstorder).	0.0113131999969	1
Coq.Classes.Morphisms.flip1	40	2.0.0.0	search with cache (only 1: hnf; only 1: intros; only 1: red in H0; only 1: firstorder).	0.010843038559	12
Coq.Classes.Morphisms.flip2	40	0	search with cache (only 1: firstorder).	0.00720715522766	1
Coq.Classes.Morphisms.eq_subrelation	40	0.2.0.1	search with cache (only 1: unfold subrelation; only 1: firstorder; only 1: subst; only 1: firstorder).	0.0121500492096	7
Coq.Classes.Morphisms.reflexive_proper	40	0	search with cache (only 1: firstorder).	0.00723505020142	1
Coq.Classes.Morphisms.proper_eq	40	0	search with cache (only 1: firstorder).	0.00738406181335	1
Coq.Classes.Morphisms.proper_proper	40	0.0.0.0.1.0	search with cache (only 1: intros A x y z H1 H2; only 1: firstorder; only 1: subst; only 1: firstorder; only 1: subst; only 1: firstorder).	0.0519170761108	7
Coq.Classes.Morphisms.proper_normalizes_proper	40	0	search with cache (only 1: firstorder).	0.00890517234802	1
Coq.Classes.Morphisms.flip_atom	40	0	search with cache (only 1: firstorder).	0.00862789154053	1
Coq.Classes.Morphisms.flip_arrow	40
Coq.Classes.Morphisms.proper_sym_flip	40	1	search with cache (only 1: simpl_relation).	0.0545868873596	2
Coq.Classes.Morphisms.proper_sym_flip_2	40	0.2.3.0	search with cache (only 1: intros A R1 Sym B R2 f Hf; only 1: reduce; only 1: unfold respectful, relation_equivalence, predicate_equivalence in *; only 1: firstorder).	0.152817964554	23
Coq.Classes.Morphisms.proper_sym_impl_iff	40	5.1.0	search with cache (only 1: simpl_relation; only 1: apply (symmetry (x:=_)); only 1: firstorder).	0.0347011089325	18
Coq.Classes.Morphisms.proper_sym_impl_iff_2	40	4.4.0.5.1	search with cache (only 1: simpl_relation; only 1: unfold respectful, relation_equivalence, predicate_equivalence in *; only 1: split; only 1: eauto; only 1: eauto).	13.2260820866	2362
Coq.Classes.Morphisms.PartialOrder_proper	40
Coq.Classes.Morphisms.PartialOrder_StrictOrder	40
Coq.Classes.Morphisms.StrictOrder_PreOrder	40
Coq.Classes.Morphisms.StrictOrder_PartialOrder	40
Coq.Classes.RelationPairs.RelCompFun_Reflexive	40	5	search with cache (only 1: firstorder).	0.0105950832367	6
Coq.Classes.RelationPairs.RelCompFun_Symmetric	40	0	search with cache (only 1: firstorder).	0.00918912887573	1
Coq.Classes.RelationPairs.RelCompFun_Transitive	40	0	search with cache (only 1: firstorder).	0.0320360660553	1
Coq.Classes.RelationPairs.RelCompFun_Irreflexive	40	0	search with cache (only 1: firstorder).	0.010103225708	1
Coq.Classes.RelationPairs.RelProd_Reflexive	40	2	search with cache (only 1: firstorder).	0.0134630203247	3
Coq.Classes.RelationPairs.RelProd_Symmetric	40	0	search with cache (only 1: firstorder).	0.0207800865173	1
Coq.Classes.RelationPairs.RelProd_Transitive	40	0	search with cache (only 1: firstorder).	0.368325948715	1
Coq.Classes.RelationPairs.FstRel_ProdRel	40	0	search with cache (only 1: firstorder).	0.0141000747681	1
Coq.Classes.RelationPairs.SndRel_ProdRel	40	0	search with cache (only 1: firstorder).	0.0132939815521	1
Coq.Classes.RelationPairs.FstRel_sub	40	0	search with cache (only 1: firstorder).	0.0106089115143	1
Coq.Classes.RelationPairs.SndRel_sub	40	0	search with cache (only 1: firstorder).	0.0107960700989	1
Coq.Classes.RelationPairs.pair_compat	40	0	search with cache (only 1: firstorder).	0.0109648704529	1
Coq.Classes.RelationPairs.fst_compat	40	0	search with cache (only 1: firstorder).	0.0107181072235	1
Coq.Classes.RelationPairs.snd_compat	40	0	search with cache (only 1: firstorder).	0.0106480121613	1
Coq.Classes.RelationPairs.RelCompFun_compat	40	0.1.0.5	search with cache (only 1: repeat red; only 1: firstorder; only 1: compute in *; only 1: auto).	0.150279045105	10
Coq.Classes.DecidableClass.Decidable_sound	40
Coq.Classes.DecidableClass.Decidable_complete	40
Coq.Classes.DecidableClass.Decidable_sound_alt	40
Coq.Classes.DecidableClass.Decidable_complete_alt	40
Coq.Classes.DecidableClass.Decidable_eq_bool_obligation_1	40	0.0.0.0.24	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	5.07667207718	5311
Coq.Classes.DecidableClass.Decidable_eq_nat_obligation_1	40
Coq.Classes.DecidableClass.Decidable_le_nat_obligation_1	40	15	search with cache (only 1: apply Nat.leb_le).	0.384489059448	363
Coq.Classes.DecidableClass.Decidable_eq_Z_obligation_1	40
Coq.Classes.SetoidDec.unit_eqdec_obligation_1	40	24.20	search with cache (only 1: destruct x; only 1: easy || now destruct y).	8.7351500988	24629
Coq.Classes.SetoidDec.bool_function_eqdec_obligation_1	40
Coq.Classes.SetoidClass.setoid_refl	40	9	search with cache (only 1: auto with *).	0.0134119987488	10
Coq.Classes.SetoidClass.setoid_sym	40	0	search with cache (only 1: typeclasses eauto).	0.0105431079865	1
Coq.Classes.SetoidClass.setoid_trans	40	0	search with cache (only 1: typeclasses eauto).	0.0106241703033	1
Coq.Classes.SetoidClass.nequiv_equiv_trans	40
Coq.Classes.SetoidClass.equiv_nequiv_trans	40
Coq.Classes.Morphisms_Relations.relation_conjunction_morphism	40	11.0	search with cache (only 1: intros; only 1: firstorder).	0.487082958221	159
Coq.Classes.Morphisms_Relations.relation_disjunction_morphism	40	0	search with cache (only 1: firstorder).	0.43722486496	1
Coq.Classes.Morphisms_Relations.predicate_equivalence_pointwise	40	5	search with cache (only 1: firstorder).	0.109580993652	6
Coq.Classes.Morphisms_Relations.predicate_implication_pointwise	40	1.0	search with cache (only 1: do 2 red; only 1: auto).	0.0128180980682	3
Coq.Classes.Morphisms_Relations.relation_equivalence_pointwise	40	0	search with cache (only 1: firstorder).	0.0119869709015	1
Coq.Classes.Morphisms_Relations.subrelation_pointwise	40	0.0.0.1.0	search with cache (only 1: intro; only 1: do 2 red; only 1: unfold subrelation; only 1: intros x y H; only 1: auto).	0.0231189727783	6
Coq.Classes.Morphisms_Relations.flip_pointwise_relation	40	0	search with cache (only 1: firstorder).	0.0129189491272	1
Coq.PArith.Pnat.Pos2Nat.inj_succ	40
Coq.PArith.Pnat.Pos2Nat.inj_add	40
Coq.PArith.Pnat.Pos2Nat.inj_mul	40
Coq.PArith.Pnat.Pos2Nat.inj_1	40	0	search with cache (only 1: reflexivity).	0.00533986091614	1
Coq.PArith.Pnat.Pos2Nat.inj_xO	40
Coq.PArith.Pnat.Pos2Nat.inj_xI	40
Coq.PArith.Pnat.Pos2Nat.is_succ	40
Coq.PArith.Pnat.Pos2Nat.is_pos	40	1.10.5	search with cache (only 1: revert p; only 1: fix sqrtrem_spec 1; only 1: trivial).	0.0782070159912	252
Coq.PArith.Pnat.Pos2Nat.id	40
Coq.PArith.Pnat.Pos2Nat.inj	40
Coq.PArith.Pnat.Pos2Nat.inj_iff	40	1.0.1.0.1	search with cache (only 1: split; only 1: intros H; only 1: now rewrite <- (id p), <- (id q), H; only 1: intros H; only 1: now rewrite <- (id p), <- (id q), H).	0.0104057788849	8
Coq.PArith.Pnat.Pos2Nat.inj_compare	40
Coq.PArith.Pnat.Pos2Nat.inj_lt	40
Coq.PArith.Pnat.Pos2Nat.inj_le	40
Coq.PArith.Pnat.Pos2Nat.inj_gt	40
Coq.PArith.Pnat.Pos2Nat.inj_ge	40
Coq.PArith.Pnat.Pos2Nat.inj_sub	40
Coq.PArith.Pnat.Pos2Nat.inj_sub_max	40
Coq.PArith.Pnat.Pos2Nat.inj_pred	40
Coq.PArith.Pnat.Pos2Nat.inj_pred_max	40
Coq.PArith.Pnat.Pos2Nat.inj_min	40
Coq.PArith.Pnat.Pos2Nat.inj_max	40
Coq.PArith.Pnat.Pos2Nat.inj_iter	40
Coq.PArith.Pnat.Nat2Pos.id	40
Coq.PArith.Pnat.Nat2Pos.id_max	40	23.4.3.2.13.4.5	search with cache (only 1: induction n as [| n H]; only 1: trivial; only 1: destruct n; only 1: trivial; only 1: simpl; only 1: rewrite Pos2Nat.inj_succ; only 1: auto).	6.00355815887	22307
Coq.PArith.Pnat.Nat2Pos.inj	40
Coq.PArith.Pnat.Nat2Pos.inj_iff	40	5.8.13	search with cache (only 1: intros a b; only 1: intuition; only 1: now rewrite <- (id n), <- (id m), H).	1.42469906807	1082
Coq.PArith.Pnat.Nat2Pos.inj_succ	40	0.1.0	search with cache (only 1: destruct n; only 1: now destruct 1; only 1: trivial).	0.00861287117004	4
Coq.PArith.Pnat.Nat2Pos.inj_pred	40
Coq.PArith.Pnat.Nat2Pos.inj_add	40
Coq.PArith.Pnat.Nat2Pos.inj_mul	40
Coq.PArith.Pnat.Nat2Pos.inj_compare	40
Coq.PArith.Pnat.Nat2Pos.inj_sub	40
Coq.PArith.Pnat.Nat2Pos.inj_min	40
Coq.PArith.Pnat.Nat2Pos.inj_max	40
Coq.PArith.Pnat.Pos2SuccNat.id_succ	40
Coq.PArith.Pnat.Pos2SuccNat.pred_id	40
Coq.PArith.Pnat.SuccNat2Pos.id_succ	40	5.2.1.0.17	search with cache (only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: rewrite Pos2Nat.inj_succ; only 1: auto).	0.882930040359	1195
Coq.PArith.Pnat.SuccNat2Pos.pred_id	40	3.7.0.4.1.5	search with cache (only 1: induction n as [| n H]; only 1: reflexivity; only 1: simpl; only 1: rewrite Pos.of_nat_succ; only 1: rewrite Pos2Nat.inj_succ; only 1: now apply Nat2Pos.id).	4.78033304214	6234
Coq.PArith.Pnat.SuccNat2Pos.inj	40
Coq.PArith.Pnat.SuccNat2Pos.inj_iff	40	2.0.0.1.0.2	search with cache (only 1: split; only 1: intro H; only 1: apply (f_equal Pos.to_nat) in H; only 1: rewrite !id_succ in H; only 1: now injection H; only 1: auto with relations).	0.0318830013275	50
Coq.PArith.Pnat.SuccNat2Pos.inv	40
Coq.PArith.Pnat.SuccNat2Pos.inj_succ	40	0.0.0.1	search with cache (only 1: simpl; only 1: destruct n; only 1: trivial; only 1: f_equal).	0.00988101959229	5
Coq.PArith.Pnat.SuccNat2Pos.inj_compare	40
Coq.PArith.Pnat.Pmult_nat_mult	40
Coq.PArith.Pnat.Pmult_nat_succ_morphism	40
Coq.PArith.Pnat.Pmult_nat_l_plus_morphism	40
Coq.PArith.Pnat.Pmult_nat_plus_carry_morphism	40
Coq.PArith.Pnat.Pmult_nat_r_plus_morphism	40
Coq.PArith.Pnat.ZL6	40
Coq.PArith.Pnat.le_Pmult_nat	40	4.0.0.9.10	search with cache (only 1: assert (leS : forall n m, n <= m -> S n <= S m) by (induction 1; auto); only 1: fix le_div2 1; only 1: intro; only 1: intro; only 1: trivial).	6.72235798836	8419
Coq.PArith.BinPos.Pos.eq_dec	40	1	search with cache (only 1: decide equality).	0.0152862071991	2
Coq.PArith.BinPos.Pos.xI_succ_xO	40	0	search with cache (only 1: trivial).	0.0058741569519	1
Coq.PArith.BinPos.Pos.succ_discr	40
Coq.PArith.BinPos.Pos.pred_double_spec	40	0	search with cache (only 1: reflexivity).	0.00562977790833	1
Coq.PArith.BinPos.Pos.succ_pred_double	40
Coq.PArith.BinPos.Pos.pred_double_succ	40	0.0.0.3.1.4	search with cache (only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: reflexivity; only 1: simpl; only 1: reflexivity).	0.381047010422	116
Coq.PArith.BinPos.Pos.double_succ	40	0	search with cache (only 1: reflexivity).	0.00501394271851	1
Coq.PArith.BinPos.Pos.pred_double_xO_discr	40	0	search with cache (only 1: now destruct p).	0.0148987770081	1
Coq.PArith.BinPos.Pos.succ_not_1	40	0	search with cache (only 1: now destruct p).	0.0148808956146	1
Coq.PArith.BinPos.Pos.pred_succ	40	0.0.1.1.2.0.0.0.3	search with cache (only 1: induction p; only 1: simpl; only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	0.899949073792	451
Coq.PArith.BinPos.Pos.succ_pred_or	40
Coq.PArith.BinPos.Pos.succ_pred	40
Coq.PArith.BinPos.Pos.succ_inj	40
Coq.PArith.BinPos.Pos.pred_N_succ	40	0.1.0.0.0.0.0.8.0.2.0.1	search with cache (only 1: destruct p; only 1: simpl; only 1: induction p; only 1: simpl; only 1: congruence; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: trivial; only 1: simpl; only 1: trivial).	6.42092204094	5724
Coq.PArith.BinPos.Pos.add_1_r	40	0	search with cache (only 1: now destruct p).	0.00648212432861	1
Coq.PArith.BinPos.Pos.add_1_l	40	0	search with cache (only 1: now destruct p).	0.00652480125427	1
Coq.PArith.BinPos.Pos.add_carry_spec	40
Coq.PArith.BinPos.Pos.add_comm	40
Coq.PArith.BinPos.Pos.add_succ_r	40
Coq.PArith.BinPos.Pos.add_succ_l	40
Coq.PArith.BinPos.Pos.add_no_neutral	40
Coq.PArith.BinPos.Pos.add_carry_add	40
Coq.PArith.BinPos.Pos.add_reg_r	40
Coq.PArith.BinPos.Pos.add_reg_l	40
Coq.PArith.BinPos.Pos.add_cancel_r	40
Coq.PArith.BinPos.Pos.add_cancel_l	40
Coq.PArith.BinPos.Pos.add_carry_reg_r	40
Coq.PArith.BinPos.Pos.add_carry_reg_l	40
Coq.PArith.BinPos.Pos.add_assoc	40
Coq.PArith.BinPos.Pos.add_xO	40	0	search with cache (only 1: trivial).	0.00508713722229	1
Coq.PArith.BinPos.Pos.add_xI_pred_double	40
Coq.PArith.BinPos.Pos.add_xO_pred_double	40
Coq.PArith.BinPos.Pos.add_diag	40
Coq.PArith.BinPos.Pos.peano_rect_succ	40
Coq.PArith.BinPos.Pos.peano_rect_base	40	0.0	search with cache (only 1: revert P a f; only 1: trivial).	0.00657391548157	2
Coq.PArith.BinPos.Pos.peano_case	40
Coq.PArith.BinPos.Pos.eq_dep_eq_positive	40
Coq.PArith.BinPos.Pos.PeanoViewUnique	40
Coq.PArith.BinPos.Pos.peano_equiv	40
Coq.PArith.BinPos.Pos.mul_1_l	40	0	search with cache (only 1: trivial).	0.00574684143066	1
Coq.PArith.BinPos.Pos.mul_1_r	40	0.2.6.5.4.9	search with cache (only 1: induction p as [p IHp| p IHp| ]; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now rewrite ?add_carry_spec, ?IHp; only 1: trivial).	12.039757967	18019
Coq.PArith.BinPos.Pos.mul_xO_r	40	0.0.0.1.1.0.2.2.1.0.8	search with cache (only 1: induction p; only 1: change_no_check p~1 with (p~0 + 1); only 1: simpl; only 1: f_equal; only 1: f_equal; only 1: trivial; only 1: simpl; only 1: f_equal; only 1: trivial; only 1: simpl; only 1: f_equal).	7.89208388329	6068
Coq.PArith.BinPos.Pos.mul_xI_r	40
Coq.PArith.BinPos.Pos.mul_comm	40
Coq.PArith.BinPos.Pos.mul_add_distr_l	40
Coq.PArith.BinPos.Pos.mul_add_distr_r	40
Coq.PArith.BinPos.Pos.mul_assoc	40
Coq.PArith.BinPos.Pos.mul_succ_l	40
Coq.PArith.BinPos.Pos.mul_succ_r	40
Coq.PArith.BinPos.Pos.mul_xI_mul_xO_discr	40
Coq.PArith.BinPos.Pos.mul_xO_discr	40
Coq.PArith.BinPos.Pos.mul_reg_r	40
Coq.PArith.BinPos.Pos.mul_reg_l	40
Coq.PArith.BinPos.Pos.mul_cancel_r	40
Coq.PArith.BinPos.Pos.mul_cancel_l	40	2.0.1.0.0	search with cache (only 1: split; only 1: rewrite 2!(mul_comm r); only 1: apply mul_reg_r; only 1: rewrite 2!(mul_comm r); only 1: congruence).	0.0107650756836	8
Coq.PArith.BinPos.Pos.mul_eq_1_l	40	0.0.2.0.8.8.0.5	search with cache (only 1: destruct p; only 1: simpl; only 1: change_no_check p~1 with (p~0 + 1); only 1: now destruct p, q; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal).	15.2285199165	26109
Coq.PArith.BinPos.Pos.mul_eq_1_r	40	0	search with cache (only 1: now destruct p, q).	0.0167558193207	1
Coq.PArith.BinPos.Pos.square_xO	40
Coq.PArith.BinPos.Pos.square_xI	40
Coq.PArith.BinPos.Pos.iter_swap_gen	40
Coq.PArith.BinPos.Pos.iter_swap	40
Coq.PArith.BinPos.Pos.iter_succ	40
Coq.PArith.BinPos.Pos.iter_add	40
Coq.PArith.BinPos.Pos.iter_invariant	40
Coq.PArith.BinPos.Pos.pow_1_r	40	0.1.2.3.0.11.3.3.2.0	search with cache (only 1: induction p; only 1: apply succ_inj; only 1: simpl; only 1: f_equal; only 1: f_equal; only 1: auto using mul_xI_r, mul_xO_r, mul_1_r; only 1: apply succ_inj; only 1: simpl; only 1: now f_equal; only 1: now f_equal).	25.7648332119	31000
Coq.PArith.BinPos.Pos.pow_succ_r	40
Coq.PArith.BinPos.Pos.square_spec	40
Coq.PArith.BinPos.Pos.sub_mask_succ_r	40
Coq.PArith.BinPos.Pos.sub_mask_carry_spec	40
Coq.PArith.BinPos.Pos.sub_mask_spec	40
Coq.PArith.BinPos.Pos.sub_mask_nul_iff	40
Coq.PArith.BinPos.Pos.sub_mask_diag	40	0.0.0.0.0.0.0	search with cache (only 1: induction p; only 1: simpl; only 1: now rewrite ?IHp; only 1: simpl; only 1: now rewrite ?IHp; only 1: simpl; only 1: now rewrite ?IHp).	0.0110020637512	7
Coq.PArith.BinPos.Pos.sub_mask_add	40
Coq.PArith.BinPos.Pos.sub_mask_add_diag_l	40
Coq.PArith.BinPos.Pos.sub_mask_pos_iff	40
Coq.PArith.BinPos.Pos.sub_mask_add_diag_r	40
Coq.PArith.BinPos.Pos.sub_mask_neg_iff	40
Coq.PArith.BinPos.Pos.eqb_eq	40
Coq.PArith.BinPos.Pos.ltb_lt	40	6.11.0	search with cache (only 1: revert q; only 1: fix even_spec 1; only 1: intuition).	5.16487884521	8290
Coq.PArith.BinPos.Pos.leb_le	40
Coq.PArith.BinPos.Pos.compare_cont_spec	40
Coq.PArith.BinPos.Pos.compare_cont_Eq	40
Coq.PArith.BinPos.Pos.compare_cont_Lt_Gt	40
Coq.PArith.BinPos.Pos.compare_cont_Lt_Lt	40	0.0.0.0.1.2	search with cache (only 1: unfold leb, le; only 1: rewrite compare_cont_spec; only 1: destruct (p ?= q); only 1: easy'; only 1: easy'; only 1: easy').	0.40119600296	96
Coq.PArith.BinPos.Pos.compare_cont_Gt_Lt	40	0.0.0.0.0.2	search with cache (only 1: unfold ltb, lt; only 1: rewrite compare_cont_spec; only 1: destruct (p ?= q); only 1: now split; only 1: now split; only 1: now split).	0.152895927429	41
Coq.PArith.BinPos.Pos.compare_cont_Gt_Gt	40
Coq.PArith.BinPos.Pos.compare_cont_Lt_not_Lt	40	0.0.0.0.1.0	search with cache (only 1: rewrite compare_cont_spec; only 1: unfold gt; only 1: destruct (p ?= q); only 1: easy'; only 1: easy'; only 1: easy').	0.185719013214	31
Coq.PArith.BinPos.Pos.compare_cont_Lt_not_Gt	40	0.0.0.0.1.1	search with cache (only 1: rewrite compare_cont_spec; only 1: unfold le; only 1: destruct (p ?= q); only 1: easy'; only 1: easy'; only 1: easy').	0.162603855133	25
Coq.PArith.BinPos.Pos.compare_cont_Gt_not_Lt	40	0.0.0.0.12.2	search with cache (only 1: rewrite compare_cont_spec; only 1: unfold ge; only 1: destruct (p ?= q); only 1: easy'; only 1: easy'; only 1: easy').	2.53198885918	892
Coq.PArith.BinPos.Pos.compare_cont_Gt_not_Gt	40	0.0.0.0.5.3	search with cache (only 1: rewrite compare_cont_spec; only 1: unfold lt; only 1: destruct (p ?= q); only 1: easy'; only 1: easy'; only 1: easy').	0.695469141006	343
Coq.PArith.BinPos.Pos.compare_xO_xO	40	1.3.1.0	search with cache (only 1: unfold compare; only 1: rewrite compare_cont_spec; only 1: rewrite compare_cont_spec; only 1: trivial).	0.0157809257507	21
Coq.PArith.BinPos.Pos.compare_xI_xI	40	0	search with cache (only 1: reflexivity).	0.00503420829773	1
Coq.PArith.BinPos.Pos.compare_xI_xO	40	1.0.2.1.3	search with cache (only 1: unfold compare; only 1: simpl; only 1: rewrite compare_cont_spec; only 1: unfold compare; only 1: trivial).	0.0506708621979	94
Coq.PArith.BinPos.Pos.compare_xO_xI	40	1.0.3.2.4	search with cache (only 1: unfold compare; only 1: simpl; only 1: rewrite compare_cont_spec; only 1: unfold compare; only 1: trivial).	0.202956914902	207
Coq.PArith.BinPos.Pos.compare_sub_mask	40
Coq.PArith.BinPos.Pos.lt_iff_add	40
Coq.PArith.BinPos.Pos.gt_iff_add	40
Coq.PArith.BinPos.Pos.compare_cont_refl	40	0.0.3.0.3.1.4	search with cache (only 1: induction p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite ?IHp).	0.51824593544	1286
Coq.PArith.BinPos.Pos.compare_cont_antisym	40
Coq.PArith.BinPos.Pos.compare_eq_iff	40
Coq.PArith.BinPos.Pos.compare_antisym	40
Coq.PArith.BinPos.Pos.compare_lt_iff	40	0.1.0.0.0	search with cache (only 1: unfold lt; only 1: destruct (p ?= q); only 1: now split; only 1: now split; only 1: now split).	0.0105199813843	6
Coq.PArith.BinPos.Pos.compare_le_iff	40	0.4	search with cache (only 1: unfold gt, le, compare; only 1: now destruct compare_cont; split; try apply comparison_eq_stable).	0.0957388877869	34
Coq.PArith.BinPos.Pos.gt_lt_iff	40	3.0	search with cache (only 1: unfold gt, le, compare; only 1: now rewrite <- compare_lt_iff, compare_antisym, CompOpp_iff).	0.098151922226	45
Coq.PArith.BinPos.Pos.gt_lt	40	1.0	search with cache (only 1: unfold lt, gt; only 1: now rewrite compare_antisym, CompOpp_iff).	0.00981497764587	3
Coq.PArith.BinPos.Pos.lt_gt	40	0	search with cache (only 1: apply gt_lt_iff).	0.00526595115662	1
Coq.PArith.BinPos.Pos.ge_le_iff	40	6.2	search with cache (only 1: unfold ge, lt, compare; only 1: now rewrite <- compare_le_iff, compare_antisym, CompOpp_iff).	0.0743601322174	34
Coq.PArith.BinPos.Pos.ge_le	40	0.2	search with cache (only 1: unfold le, ge; only 1: now rewrite compare_antisym, CompOpp_iff).	0.0350840091705	15
Coq.PArith.BinPos.Pos.le_ge	40	0	search with cache (only 1: apply ge_le_iff).	0.00522899627686	1
Coq.PArith.BinPos.Pos.compare_succ_r	40
Coq.PArith.BinPos.Pos.compare_succ_l	40
Coq.PArith.BinPos.Pos.lt_succ_r	40
Coq.PArith.BinPos.Pos.lt_succ_diag_r	40
Coq.PArith.BinPos.Pos.compare_succ_succ	40
Coq.PArith.BinPos.Pos.le_1_l	40	9	search with cache (only 1: now induction p).	0.0453999042511	40
Coq.PArith.BinPos.Pos.nlt_1_r	40	1	search with cache (only 1: now destruct p).	0.0163810253143	2
Coq.PArith.BinPos.Pos.lt_1_succ	40	1	search with cache (only 1: now destruct p).	0.0230481624603	21
Coq.PArith.BinPos.Pos.le_nlt	40	6.1	search with cache (only 1: unfold ge, lt, compare; only 1: now rewrite <- compare_le_iff, compare_antisym, CompOpp_iff).	0.0884668827057	34
Coq.PArith.BinPos.Pos.lt_nle	40	5.5	search with cache (only 1: unfold lt, gt; only 1: now rewrite <- compare_nle_iff, compare_antisym, CompOpp_iff).	1.99367594719	551
Coq.PArith.BinPos.Pos.lt_le_incl	40	1.1.1.3.4.5	search with cache (only 1: unfold lt, le; only 1: rewrite compare_antisym; only 1: destruct compare; only 1: discriminate; only 1: discriminate; only 1: discriminate).	3.44868588448	2105
Coq.PArith.BinPos.Pos.lt_lt_succ	40
Coq.PArith.BinPos.Pos.succ_lt_mono	40
Coq.PArith.BinPos.Pos.succ_le_mono	40	2.6	search with cache (only 1: unfold le, ge; only 1: now rewrite compare_succ_succ).	0.0199210643768	25
Coq.PArith.BinPos.Pos.lt_trans	40
Coq.PArith.BinPos.Pos.lt_ind	40
Coq.PArith.BinPos.Pos.lt_strorder	40	2.1.1	search with cache (only 1: split; only 1: exact PeanoNat.Nat.lt_irrefl; only 1: exact PeanoNat.Nat.lt_trans).	0.0079140663147	7
Coq.PArith.BinPos.Pos.lt_compat	40	7	search with cache (only 1: intuition).	0.0147650241852	24
Coq.PArith.BinPos.Pos.lt_total	40
Coq.PArith.BinPos.Pos.le_refl	40	4.6	search with cache (only 1: apply le_lteq; only 1: auto).	0.235101938248	117
Coq.PArith.BinPos.Pos.le_lt_trans	40
Coq.PArith.BinPos.Pos.lt_le_trans	40
Coq.PArith.BinPos.Pos.le_trans	40
Coq.PArith.BinPos.Pos.le_succ_l	40	1.0.9.3.1	search with cache (only 1: unfold le; only 1: rewrite compare_gt_iff; only 1: rewrite PeanoNat.Nat.lt_succ_r; only 1: unfold lt; only 1: now rewrite <- compare_nle_iff, compare_antisym, CompOpp_iff).	14.0795650482	11142
Coq.PArith.BinPos.Pos.le_antisym	40
Coq.PArith.BinPos.Pos.le_preorder	40	7.4.4	search with cache (only 1: split; only 1: exact PeanoNat.Nat.le_refl; only 1: exact PeanoNat.Nat.le_trans).	0.324974060059	282
Coq.PArith.BinPos.Pos.le_partorder	40
Coq.PArith.BinPos.Pos.add_compare_mono_l	40
Coq.PArith.BinPos.Pos.add_compare_mono_r	40
Coq.PArith.BinPos.Pos.lt_add_diag_r	40
Coq.PArith.BinPos.Pos.add_lt_mono_l	40	1.1.1.2.0.0.3.0	search with cache (only 1: unfold lt, gt; only 1: revert p q r; only 1: induction p using peano_ind; only 1: intros q r; only 1: rewrite 2!add_1_l; only 1: now rewrite compare_succ_succ; only 1: intros q r; only 1: now rewrite 2!add_succ_l, compare_succ_succ).	1.87788295746	1537
Coq.PArith.BinPos.Pos.add_lt_mono_r	40	0.0.1.0.0.1.3.0	search with cache (only 1: unfold lt; only 1: split; only 1: rewrite 2!(add_comm _ p); only 1: rewrite add_compare_mono_l; only 1: apply iff_refl; only 1: rewrite 2!(add_comm _ p); only 1: rewrite add_compare_mono_l; only 1: apply iff_refl).	0.421494960785	417
Coq.PArith.BinPos.Pos.add_lt_mono	40
Coq.PArith.BinPos.Pos.add_le_mono_l	40	0.5.0	search with cache (only 1: unfold le, ge; only 1: rewrite add_compare_mono_l; only 1: reflexivity).	0.0276408195496	18
Coq.PArith.BinPos.Pos.add_le_mono_r	40	0.0.4.0.0.0.4.0.5.4	search with cache (only 1: revert q r; only 1: split; only 1: unfold le; only 1: rewrite 2!(add_comm _ p); only 1: rewrite add_compare_mono_l; only 1: easy || now destruct 1; only 1: unfold le; only 1: rewrite 2!(add_comm _ p); only 1: rewrite add_compare_mono_l; only 1: easy || now destruct 1).	16.8808329105	23143
Coq.PArith.BinPos.Pos.add_le_mono	40
Coq.PArith.BinPos.Pos.mul_compare_mono_l	40
Coq.PArith.BinPos.Pos.mul_compare_mono_r	40
Coq.PArith.BinPos.Pos.mul_lt_mono_l	40	3.2.6.4	search with cache (only 1: revert q r; only 1: repeat red; only 1: fix gcd_divide 1; only 1: auto).	6.97415399551	11028
Coq.PArith.BinPos.Pos.mul_lt_mono_r	40
Coq.PArith.BinPos.Pos.mul_lt_mono	40
Coq.PArith.BinPos.Pos.mul_le_mono_l	40	0.3.0	search with cache (only 1: unfold le; only 1: rewrite mul_compare_mono_l; only 1: apply iff_refl).	0.00818705558777	6
Coq.PArith.BinPos.Pos.mul_le_mono_r	40
Coq.PArith.BinPos.Pos.mul_le_mono	40
Coq.PArith.BinPos.Pos.lt_add_r	40	1.0	search with cache (only 1: rewrite lt_iff_add; only 1: now exists q).	0.0072500705719	3
Coq.PArith.BinPos.Pos.lt_not_add_l	40
Coq.PArith.BinPos.Pos.pow_gt_1	40
Coq.PArith.BinPos.Pos.sub_1_r	40	0.0.0.0.0.2	search with cache (only 1: destruct p; only 1: simpl; only 1: trivial; only 1: reflexivity; only 1: simpl; only 1: now f_equal).	0.0106408596039	8
Coq.PArith.BinPos.Pos.pred_sub	40	0	search with cache (only 1: now destruct p).	0.00620198249817	1
Coq.PArith.BinPos.Pos.sub_succ_r	40
Coq.PArith.BinPos.Pos.sub_mask_pos'	40	5.7	search with cache (only 1: fix gcd_divide 1; only 1: trivial).	0.0454320907593	102
Coq.PArith.BinPos.Pos.sub_mask_pos	40	0.1.0.13	search with cache (only 1: rewrite lt_iff_add; only 1: intros (r, Hr); only 1: exists r; only 1: now apply sub_mask_pos_iff).	1.18127703667	1775
Coq.PArith.BinPos.Pos.sub_add	40
Coq.PArith.BinPos.Pos.add_sub	40
Coq.PArith.BinPos.Pos.mul_sub_distr_l	40
Coq.PArith.BinPos.Pos.mul_sub_distr_r	40
Coq.PArith.BinPos.Pos.sub_lt_mono_l	40
Coq.PArith.BinPos.Pos.sub_compare_mono_l	40
Coq.PArith.BinPos.Pos.sub_compare_mono_r	40
Coq.PArith.BinPos.Pos.sub_lt_mono_r	40
Coq.PArith.BinPos.Pos.sub_decr	40
Coq.PArith.BinPos.Pos.add_sub_assoc	40
Coq.PArith.BinPos.Pos.sub_add_distr	40
Coq.PArith.BinPos.Pos.sub_sub_distr	40
Coq.PArith.BinPos.Pos.sub_xO_xO	40
Coq.PArith.BinPos.Pos.sub_xI_xI	40	1.0.1.0	search with cache (only 1: intros H; only 1: unfold sub; only 1: simpl; only 1: now destruct (sub_mask_pos n m H) as (p, ->)).	0.00922894477844	6
Coq.PArith.BinPos.Pos.sub_xI_xO	40	1.0.1.0	search with cache (only 1: intros H; only 1: unfold sub; only 1: simpl; only 1: now destruct (sub_mask_pos n m H) as (p, ->)).	0.00921106338501	6
Coq.PArith.BinPos.Pos.sub_xO_xI	40
Coq.PArith.BinPos.Pos.sub_mask_neg_iff'	40
Coq.PArith.BinPos.Pos.sub_mask_neg	40	0.1.0	search with cache (only 1: rewrite lt_iff_add; only 1: intros (r, <-); only 1: apply sub_mask_add_diag_r).	0.0201361179352	19
Coq.PArith.BinPos.Pos.sub_le	40
Coq.PArith.BinPos.Pos.sub_lt	40
Coq.PArith.BinPos.Pos.sub_diag	40
Coq.PArith.BinPos.Pos.size_nat_monotone	40
Coq.PArith.BinPos.Pos.size_gt	40
Coq.PArith.BinPos.Pos.size_le	40
Coq.PArith.BinPos.Pos.max_l	40
Coq.PArith.BinPos.Pos.max_r	40	0.0.1.2.1.0.2.0	search with cache (only 1: intros x y H; only 1: unfold max; only 1: case compare_spec; only 1: auto; only 1: auto; only 1: intros H'; only 1: apply le_nlt in H; only 1: now elim H).	0.45871090889	374
Coq.PArith.BinPos.Pos.min_l	40
Coq.PArith.BinPos.Pos.min_r	40
Coq.PArith.BinPos.Pos.max_1_l	40	0.2.2.15.20	search with cache (only 1: unfold max; only 1: induction n; only 1: auto with relations; only 1: auto with relations; only 1: trivial).	1.18027305603	1910
Coq.PArith.BinPos.Pos.max_1_r	40	1.1	search with cache (only 1: apply max_l; only 1: apply le_1_l).	0.0207669734955	35
Coq.PArith.BinPos.Pos.min_1_l	40	1.2	search with cache (only 1: apply min_l; only 1: apply le_1_l).	0.00804114341736	5
Coq.PArith.BinPos.Pos.min_1_r	40	0.0.0.2.0.0.0.0	search with cache (only 1: unfold min; only 1: case compare_spec; only 1: auto; only 1: intros H; only 1: apply lt_nle in H; only 1: elim H; only 1: apply le_1_l; only 1: auto).	0.0126161575317	10
Coq.PArith.BinPos.Pos.succ_max_distr	40
Coq.PArith.BinPos.Pos.succ_min_distr	40	0.0.7.0.0.0.7.0.9	search with cache (only 1: apply min_case_strong; only 1: symmetry; only 1: apply min_r || apply min_l; only 1: unfold le; only 1: now rewrite compare_succ_succ; only 1: symmetry; only 1: apply min_r || apply min_l; only 1: unfold le; only 1: now rewrite compare_succ_succ).	28.103014946	56898
Coq.PArith.BinPos.Pos.add_max_distr_l	40
Coq.PArith.BinPos.Pos.add_max_distr_r	40
Coq.PArith.BinPos.Pos.add_min_distr_l	40
Coq.PArith.BinPos.Pos.add_min_distr_r	40
Coq.PArith.BinPos.Pos.mul_max_distr_l	40	10.0.4	search with cache (only 1: apply max_monotone; only 1: intros x x'; only 1: apply mul_le_mono_l).	1.43063998222	1233
Coq.PArith.BinPos.Pos.mul_max_distr_r	40
Coq.PArith.BinPos.Pos.mul_min_distr_l	40	0.0.10	search with cache (only 1: apply min_monotone; only 1: intros x x'; only 1: apply mul_le_mono_l).	0.269993066788	293
Coq.PArith.BinPos.Pos.mul_min_distr_r	40
Coq.PArith.BinPos.Pos.iter_op_succ	40	0.2.7.1.0	search with cache (only 1: induction p as [p IHp| p IHp| ]; only 1: simpl; only 1: congruence; only 1: now symmetry; only 1: now symmetry).	1.73944306374	1500
Coq.PArith.BinPos.Pos.of_nat_succ	40	2.12.11	search with cache (only 1: revert n; only 1: fix le_div2 1; only 1: trivial).	0.321676969528	918
Coq.PArith.BinPos.Pos.pred_of_succ_nat	40
Coq.PArith.BinPos.Pos.succ_of_nat	40
Coq.PArith.BinPos.Pos.sqrtrem_step_spec	40
Coq.PArith.BinPos.Pos.sqrtrem_spec	40
Coq.PArith.BinPos.Pos.sqrt_spec	40
Coq.PArith.BinPos.Pos.divide_add_cancel_l	40	8.1.1	search with cache (only 1: revert p; only 1: fix sqrtrem_spec 1; only 1: trivial).	0.143763065338	261
Coq.PArith.BinPos.Pos.divide_xO_xI	40	8.3.1	search with cache (only 1: revert p; only 1: fix sqrtrem_spec 1; only 1: auto).	0.1834628582	360
Coq.PArith.BinPos.Pos.divide_xO_xO	40	14.1.6	search with cache (only 1: revert p; only 1: fix sqrtrem_spec 1; only 1: trivial).	0.707424163818	1200
Coq.PArith.BinPos.Pos.divide_mul_l	40	6.0.2	search with cache (only 1: revert p; only 1: fix sqrtrem_spec 1; only 1: trivial).	0.038330078125	62
Coq.PArith.BinPos.Pos.divide_mul_r	40	6.1.2	search with cache (only 1: revert p; only 1: fix sqrtrem_spec 1; only 1: trivial).	0.469999074936	307
Coq.PArith.BinPos.Pos.ggcdn_gcdn	40	0.2	search with cache (only 1: fix sqrtrem_spec 1; only 1: trivial).	0.0134429931641	4
Coq.PArith.BinPos.Pos.ggcd_gcd	40	2.3	search with cache (only 1: fix sqrtrem_spec 1; only 1: auto).	0.00937485694885	7
Coq.PArith.BinPos.Pos.ggcdn_correct_divisors	40
Coq.PArith.BinPos.Pos.ggcd_correct_divisors	40
Coq.PArith.BinPos.Pos.gcd_divide_l	40	7.5.1	search with cache (only 1: fix sqrtrem_spec 1; only 1: intros; only 1: trivial).	0.176656007767	445
Coq.PArith.BinPos.Pos.gcd_divide_r	40	7.0.5.3	search with cache (only 1: unfold ggcd, gcd; only 1: fix sqrtrem_spec 1; only 1: intros a b; only 1: trivial).	3.47738409042	6385
Coq.PArith.BinPos.Pos.gcdn_greatest	40	1.2.1.27	search with cache (only 1: fix sqrtrem_spec 1; only 1: intro n; only 1: intros x y z; only 1: auto).	8.71835303307	31348
Coq.PArith.BinPos.Pos.gcd_greatest	40	7.10.1.0	search with cache (only 1: intros a b; only 1: rewrite <- ggcd_gcd; only 1: fix sqrtrem_spec 1; only 1: trivial).	24.9745600224	28771
Coq.PArith.BinPos.Pos.ggcd_greatest	40
Coq.PArith.BinPos.Peqb_true_eq	40
Coq.PArith.BinPos.Pcompare_eq_Gt	40	1.0.0.1.0	search with cache (only 1: unfold Pos.gt; only 1: destruct (p ?= q); only 1: now split; only 1: now split; only 1: now split).	0.0116589069366	7
Coq.PArith.BinPos.Pminus_mask_Gt	40	0.5.17.18.14.7	search with cache (only 1: intros; only 1: contradict H; only 1: revert q; only 1: fix sqrtrem_spec 1; only 1: unfold Pos.gt, Pos.le, Pos.compare; only 1: trivial).	38.2806451321	87325
Coq.PArith.BinPos.Pplus_minus	40
Coq.PArith.BinPos.Dcompare	40
Coq.Arith.Le.le_n_0_eq	40	3.0.24.2.0	search with cache (only 1: intro H; only 1: Nat.le_elim H; only 1: Nat.bitwise; only 1: inversion H; only 1: Nat.order_nz).	0.578628063202	1815
Coq.Arith.Le.le_elim_rel	40	4.0.3	search with cache (only 1: intros b Hb IH; only 1: fix le_div2 1; only 1: trivial).	0.0619630813599	80
Coq.Arith.Even.even_equiv	40	7.1.6	search with cache (only 1: fix even_spec 1; only 1: intros; only 1: trivial).	1.35619306564	979
Coq.Arith.Even.odd_equiv	40	8.2.0	search with cache (only 1: fix even_equiv 1; only 1: intros; only 1: trivial).	0.280979156494	298
Coq.Arith.Even.even_or_odd	40
Coq.Arith.Even.even_odd_dec	40	1.1.1.0.0.0.0	search with cache (only 1: induction n; only 1: auto with arith; only 1: elim IHn; only 1: elim IHn; only 1: auto with arith; only 1: auto with arith; only 1: auto with arith).	0.0540919303894	44
Coq.Arith.Even.not_even_and_odd	40
Coq.Arith.Even.even_plus_split	40
Coq.Arith.Even.odd_plus_split	40	0	search with cache (only 1: parity_binop).	0.126004934311	1
Coq.Arith.Even.even_even_plus	40	1	search with cache (only 1: parity_binop).	0.0996580123901	2
Coq.Arith.Even.odd_plus_l	40	0	search with cache (only 1: parity_binop).	0.0672099590302	1
Coq.Arith.Even.odd_plus_r	40	0	search with cache (only 1: parity_binop).	0.0670609474182	1
Coq.Arith.Even.odd_even_plus	40	0	search with cache (only 1: parity_binop).	0.369438886642	1
Coq.Arith.Even.even_plus_aux	40	0	search with cache (only 1: parity_binop).	0.229563951492	1
Coq.Arith.Even.even_plus_even_inv_r	40	0	search with cache (only 1: parity_binop).	0.0673611164093	1
Coq.Arith.Even.even_plus_even_inv_l	40	0	search with cache (only 1: parity_binop).	0.0729758739471	1
Coq.Arith.Even.even_plus_odd_inv_r	40	0	search with cache (only 1: parity_binop).	0.0674788951874	1
Coq.Arith.Even.even_plus_odd_inv_l	40	0	search with cache (only 1: parity_binop).	0.067440032959	1
Coq.Arith.Even.odd_plus_even_inv_l	40	0	search with cache (only 1: parity_binop).	0.0765798091888	1
Coq.Arith.Even.odd_plus_even_inv_r	40	0	search with cache (only 1: parity_binop).	0.0670199394226	1
Coq.Arith.Even.odd_plus_odd_inv_l	40	0	search with cache (only 1: parity_binop).	0.0675070285797	1
Coq.Arith.Even.odd_plus_odd_inv_r	40	0	search with cache (only 1: parity_binop).	0.0683560371399	1
Coq.Arith.Even.even_mult_aux	40	0	search with cache (only 1: parity_binop).	0.159300088882	1
Coq.Arith.Even.even_mult_l	40	1	search with cache (only 1: parity_binop).	0.046294927597	2
Coq.Arith.Even.even_mult_r	40	0	search with cache (only 1: parity_binop).	0.0468349456787	1
Coq.Arith.Even.even_mult_inv_r	40	0	search with cache (only 1: parity_binop).	0.0671110153198	1
Coq.Arith.Even.even_mult_inv_l	40	0	search with cache (only 1: parity_binop).	0.0675988197327	1
Coq.Arith.Even.odd_mult	40	0	search with cache (only 1: parity_binop).	0.0672287940979	1
Coq.Arith.Even.odd_mult_inv_l	40	0	search with cache (only 1: parity_binop).	0.0458538532257	1
Coq.Arith.Even.odd_mult_inv_r	40	0	search with cache (only 1: parity_binop).	0.0566439628601	1
Coq.Arith.Minus.minus_n_O	40	0	search with cache (only 1: now destruct n).	0.0131230354309	1
Coq.Arith.Minus.minus_Sn_m	40
Coq.Arith.Minus.pred_of_minus	40	0	search with cache (only 1: now Nat.nzsimpl').	0.0316619873047	1
Coq.Arith.Minus.minus_diag_reverse	40
Coq.Arith.Minus.minus_plus_simpl_l_reverse	40	9.1.6.2.2	search with cache (only 1: revert m; only 1: Nat.induct ltac:(p); only 1: symmetry; only 1: reflexivity; only 1: trivial).	21.2358260155	24848
Coq.Arith.Minus.plus_minus	40
Coq.Arith.Minus.minus_plus	40	2.1.2.3.1.10	search with cache (only 1: revert m; only 1: induction n as [| n IH]; only 1: intros; only 1: now Nat.nzsimpl; only 1: simpl; only 1: trivial).	0.756894111633	604
Coq.Arith.Minus.le_plus_minus_r	40
Coq.Arith.Minus.le_plus_minus	40
Coq.Arith.Minus.lt_O_minus_lt	40
Coq.Arith.Minus.not_le_minus_0	40
Coq.Arith.Between.bet_eq	40
Coq.Arith.Between.between_le	40	3.0.0.2.8.1.4.1.16.2	search with cache (only 1: intro; only 1: PeanoNat.Nat.induct k; only 1: intros a Ha; only 1: PeanoNat.Nat.auto'; only 1: intro; only 1: intro; only 1: intros m Le; only 1: elim Le; only 1: trivial; only 1: auto with arith).	4.31534409523	11141
Coq.Arith.Between.between_Sk_l	40	2.10.1.13.7.6.14	search with cache (only 1: intro n; only 1: intros m Le; only 1: elim Le; only 1: auto with arith; only 1: induction 1; only 1: auto with arith; only 1: auto with arith).	27.834102869	95008
Coq.Arith.Between.between_restr	40	0.1.0	search with cache (only 1: induction 1; only 1: auto with arith; only 1: auto with arith).	0.0100209712982	4
Coq.Arith.Between.exists_le_S	40	0.0.0.2.1	search with cache (only 1: intro; only 1: induction 1 as [| * [| ]]; only 1: auto with arith; only 1: auto with arith; only 1: auto with arith).	0.0234811306	27
Coq.Arith.Between.exists_S_le	40	2.6.3	search with cache (only 1: fix le_div2 1; only 1: intros x y z; only 1: auto).	0.179718017578	440
Coq.Arith.Between.in_int_intro	40	24.0.14	search with cache (only 1: intros n m; only 1: intros x y z; only 1: easy).	2.60636210442	9274
Coq.Arith.Between.in_int_lt	40
Coq.Arith.Between.in_int_p_Sq	40
Coq.Arith.Between.in_int_S	40	1.4	search with cache (only 1: intros * []; only 1: auto with arith).	0.024062871933	60
Coq.Arith.Between.in_int_Sp_q	40	0.0	search with cache (only 1: intros * []; only 1: auto with arith).	0.00661492347717	2
Coq.Arith.Between.between_in_int	40
Coq.Arith.Between.in_int_between	40	1.0.2.0.0	search with cache (only 1: induction 1; only 1: intros; only 1: auto with arith; only 1: intros; only 1: auto with arith).	0.0121421813965	8
Coq.Arith.Between.exists_in_int	40
Coq.Arith.Between.in_int_exists	40
Coq.Arith.Between.between_or_exists	40
Coq.Arith.Between.between_not_exists	40
Coq.Arith.Between.nth_le	40
Coq.Arith.Between.event_O	40
Coq.Arith.Peano_dec.O_or_S	40
Coq.Arith.Peano_dec.dec_eq_nat	40
Coq.Arith.Peano_dec.le_unique	40
Coq.Arith.Mult.mult_assoc_reverse	40
Coq.Arith.Mult.mult_is_O	40	0.0.1.0.4.8.1.3.16	search with cache (only 1: destruct n; only 1: simpl; only 1: now left; only 1: destruct m; only 1: right; only 1: now Nat.nzsimpl; only 1: intro; only 1: simpl in H; only 1: now Nat.nzsimpl').	4.5848698616	5605
Coq.Arith.Mult.mult_is_one	40
Coq.Arith.Mult.mult_O_le	40
Coq.Arith.Mult.mult_le_compat_l	40
Coq.Arith.Mult.mult_le_compat_r	40
Coq.Arith.Mult.mult_le_compat	40
Coq.Arith.Mult.mult_S_lt_compat_l	40
Coq.Arith.Mult.mult_lt_compat_l	40
Coq.Arith.Mult.mult_lt_compat_r	40
Coq.Arith.Mult.mult_S_le_reg_l	40
Coq.Arith.Mult.odd_even_lem	40
Coq.Arith.Mult.mult_acc_aux	40
Coq.Arith.Mult.mult_tail_mult	40
Coq.Arith.Div2.ind_0_1_SS	40
Coq.Arith.Div2.lt_div2	40
Coq.Arith.Div2.even_div2	40	3.4.12.4	search with cache (only 1: revert n; only 1: fix odd_equiv 1; only 1: intro m; only 1: auto).	2.04453396797	6369
Coq.Arith.Div2.odd_div2	40	2.3.43	search with cache (only 1: revert n; only 1: fix odd_equiv 1; only 1: trivial).	5.83691000938	14227
Coq.Arith.Div2.div2_even	40
Coq.Arith.Div2.div2_odd	40
Coq.Arith.Div2.even_odd_div2	40	14	search with cache (only 1: intuition).	0.326689004898	295
Coq.Arith.Div2.double_S	40	3.5.6.3.0.18.45.18	search with cache (only 1: Nat.bitwise; only 1: revert m; only 1: Nat.induct n; only 1: intros; only 1: now Nat.nzsimpl; only 1: fix odd_equiv 1; only 1: intros m H; only 1: auto).	19.9805750847	61074
Coq.Arith.Div2.double_plus	40	2.9.3.0.0	search with cache (only 1: nzinduct n; only 1: now Nat.nzsimpl; only 1: simpl; only 1: fix odd_equiv 1; only 1: trivial).	32.6936230659	16743
Coq.Arith.Div2.even_odd_double	40
Coq.Arith.Div2.even_2n	40	0.9	search with cache (only 1: fix even_odd_double 1; only 1: trivial).	0.020791053772	40
Coq.Arith.Div2.odd_S2n	40	0.0.0	search with cache (only 1: intros n H; only 1: exists (Nat.div2 n); only 1: auto with arith).	0.00775408744812	3
Coq.Arith.Div2.div2_double	40	6.0.0	search with cache (only 1: induction n; only 1: trivial; only 1: apply Nat.div2_double).	0.0513038635254	27
Coq.Arith.Div2.div2_double_plus_one	40	0.3	search with cache (only 1: rewrite Nat.div2_succ_double; only 1: auto with arith).	0.16743516922	82
Coq.Arith.Plus.plus_assoc_reverse	40	6.0.0.0.0.2	search with cache (only 1: revert m; only 1: induction n as [| n IH]; only 1: intros; only 1: now Nat.nzsimpl; only 1: simpl; only 1: auto).	0.976943969727	542
Coq.Arith.Plus.plus_reg_l	40	11.1.4.0.5	search with cache (only 1: nzinduct p; only 1: now Nat.nzsimpl; only 1: intros; only 1: Nat.nzsimpl; only 1: intuition).	23.3859000206	17069
Coq.Arith.Plus.plus_le_reg_l	40
Coq.Arith.Plus.plus_lt_reg_l	40
Coq.Arith.Plus.plus_le_compat_l	40	1	search with cache (only 1: apply Nat.add_le_mono_l).	0.0122640132904	2
Coq.Arith.Plus.plus_le_compat_r	40
Coq.Arith.Plus.plus_lt_compat_l	40	0	search with cache (only 1: apply Nat.add_lt_mono_l).	0.00569820404053	1
Coq.Arith.Plus.plus_lt_compat_r	40
Coq.Arith.Plus.plus_le_compat	40
Coq.Arith.Plus.plus_le_lt_compat	40
Coq.Arith.Plus.plus_lt_le_compat	40	5	search with cache (only 1: apply Nat.add_le_mono).	0.00790309906006	6
Coq.Arith.Plus.plus_lt_compat	40
Coq.Arith.Plus.le_plus_l	40	30.1.0.0.6.0.28	search with cache (only 1: revert m; only 1: Nat.induct ltac:(m); only 1: Nat.nzsimpl; only 1: Nat.Private_Tac.order; only 1: intros m IH; only 1: Nat.nzsimpl; only 1: auto).	14.4388070107	25891
Coq.Arith.Plus.le_plus_r	40
Coq.Arith.Plus.le_plus_trans	40
Coq.Arith.Plus.lt_plus_trans	40
Coq.Arith.Plus.plus_is_O	40	4.2.2.0.1	search with cache (only 1: Nat.induct n; only 1: Nat.nzsimpl; only 1: intuition; only 1: intros a b; only 1: now split).	1.51566696167	726
Coq.Arith.Plus.plus_is_one	40
Coq.Arith.Plus.plus_tail_plus	40
Coq.Arith.Plus.succ_plus_discr	40	7.7.6.7.0.8.7	search with cache (only 1: nzinduct n; only 1: trivial; only 1: intros; only 1: Nat.nzsimpl; only 1: split; only 1: auto; only 1: auto).	9.80794095993	13900
Coq.Arith.Lt.lt_le_S	40	2	search with cache (only 1: trivial).	0.00460910797119	3
Coq.Arith.Lt.lt_n_Sm_le	40	3	search with cache (only 1: apply le_S_n).	0.0141990184784	11
Coq.Arith.Lt.le_lt_n_Sm	40	0	search with cache (only 1: apply Nat.lt_succ_r).	0.00523018836975	1
Coq.Arith.Lt.le_not_lt	40	0	search with cache (only 1: Nat.order).	0.00732898712158	1
Coq.Arith.Lt.lt_not_le	40	0	search with cache (only 1: Nat.order).	0.00718092918396	1
Coq.Arith.Lt.neq_0_lt	40	0	search with cache (only 1: Nat.auto').	0.0807869434357	1
Coq.Arith.Lt.lt_0_neq	40	2.0.3.0	search with cache (only 1: intros; only 1: intro H1; only 1: rewrite H1 in H; only 1: false_hyp H Nat.lt_irrefl).	0.0103018283844	9
Coq.Arith.Lt.lt_n_S	40	5	search with cache (only 1: apply Nat.lt_succ_r).	0.00568699836731	6
Coq.Arith.Lt.lt_S_n	40	0	search with cache (only 1: apply Nat.succ_lt_mono).	0.00545692443848	1
Coq.Arith.Lt.S_pred	40	1.6.3.0.41.15	search with cache (only 1: revert m; only 1: induction n as [| n IH]; only 1: intros a Ha; only 1: exfalso; only 1: now Nat.nzsimpl'; only 1: reflexivity).	4.15644788742	9450
Coq.Arith.Lt.S_pred_pos	40	1.2.8.26	search with cache (only 1: Nat.auto'; only 1: Nat.cases n; only 1: Nat.order'; only 1: trivial).	1.16907095909	7805
Coq.Arith.Lt.lt_pred	40
Coq.Arith.Lt.lt_pred_n_n	40	10.1.0.2	search with cache (only 1: destruct n; only 1: inversion 1; only 1: intros _; only 1: auto).	0.605464935303	497
Coq.Arith.Lt.le_lt_or_eq	40
Coq.Arith.Lt.nat_total_order	40
Coq.Arith.Wf_nat.well_founded_ltof	40
Coq.Arith.Wf_nat.well_founded_gtof	40	0.0.0.0.1.0.0.0.0.0.0.1.0.0.0.0.0	search with cache (only 1: assert (H : forall (n : nat) (a : A), f a < n -> Acc ltof a); only 1: induction n; only 1: intros; only 1: absurd (f a < 0); only 1: auto with arith; only 1: auto with arith; only 1: intros a Ha; only 1: apply Acc_intro; only 1: unfold ltof at 1; only 1: intros b Hb; only 1: apply IHn; only 1: apply Nat.lt_le_trans with (f a); only 1: auto with arith; only 1: auto with arith; only 1: intros a; only 1: apply (H (S (f a))); only 1: auto with arith).	13.7924180031	24188
Coq.Arith.Wf_nat.induction_ltof1	40
Coq.Arith.Wf_nat.induction_gtof1	40	0.0.1.0.0.1.0.0.0.0.1.0.0.0.0.0.0	search with cache (only 1: intros P F; only 1: assert (H : forall (n : nat) (a : A), f a < n -> P a); only 1: induction n; only 1: intros; only 1: absurd (f a < 0); only 1: auto with arith; only 1: auto with arith; only 1: intros a Ha; only 1: apply F; only 1: intros b Hb; only 1: apply IHn; only 1: apply Nat.lt_le_trans with (f a); only 1: auto with arith; only 1: auto with arith; only 1: intros a; only 1: apply (H (S (f a))); only 1: auto with arith).	16.5358200073	27435
Coq.Arith.Wf_nat.induction_ltof2	40	1	search with cache (only 1: exact induction_ltof1).	0.0679740905762	89
Coq.Arith.Wf_nat.induction_gtof2	40	0	search with cache (only 1: exact induction_ltof1).	0.00568890571594	1
Coq.Arith.Wf_nat.well_founded_lt_compat	40
Coq.Arith.Wf_nat.lt_wf	40
Coq.Arith.Wf_nat.lt_wf_rec1	40
Coq.Arith.Wf_nat.lt_wf_rec	40	0	search with cache (only 1: exact (fun (p : nat) P F => induction_ltof1 nat (fun m : nat => m) P F p)).	0.00654697418213	1
Coq.Arith.Wf_nat.lt_wf_ind	40	0	search with cache (only 1: exact (fun (p : nat) P F => induction_ltof1 nat (fun m : nat => m) P F p)).	0.00714898109436	1
Coq.Arith.Wf_nat.gt_wf_rec	40	0.1.0.3	search with cache (only 1: intro p; only 1: intros; only 1: elim (lt_wf p); only 1: auto with arith).	0.0168220996857	16
Coq.Arith.Wf_nat.lt_wf_double_rec	40
Coq.Arith.Wf_nat.lt_wf_double_ind	40	0.0.0.0.0.1.0	search with cache (only 1: intros P Hrec p; only 1: pattern p; only 1: apply lt_wf_rec; only 1: intros n H q; only 1: pattern q; only 1: apply lt_wf_rec; only 1: auto with arith).	0.0678849220276	30
Coq.Arith.Wf_nat.acc_lt_rel	40
Coq.Arith.Wf_nat.well_founded_inv_lt_rel_compat	40
Coq.Arith.Wf_nat.well_founded_inv_rel_inv_lt_rel	40
Coq.Arith.Wf_nat.dec_inh_nat_subset_has_unique_least_element	40	3.45.3.6	search with cache (only 1: intros n m; only 1: repeat red; only 1: fix gcd_divide 1; only 1: tauto).	21.3845701218	67129
Coq.Arith.Factorial.lt_O_fact	40
Coq.Arith.Factorial.fact_neq_0	40
Coq.Arith.Factorial.fact_le	40
Coq.Arith.Compare_dec.zerop	40	4.1.0.5	search with cache (only 1: destruct n; only 1: now left; only 1: right; only 1: apply Nat.lt_0_succ).	0.404822826385	110
Coq.Arith.Compare_dec.lt_eq_lt_dec	40
Coq.Arith.Compare_dec.gt_eq_gt_dec	40
Coq.Arith.Compare_dec.le_lt_dec	40
Coq.Arith.Compare_dec.le_le_S_dec	40
Coq.Arith.Compare_dec.le_ge_dec	40	1.0.0.0.0.2.1.5	search with cache (only 1: induction n in m |- *; only 1: auto with arith; only 1: destruct m; only 1: right; only 1: auto with arith; only 1: elim (IHn m); only 1: auto with arith; only 1: auto with arith).	0.294034004211	263
Coq.Arith.Compare_dec.le_gt_dec	40	16	search with cache (only 1: exact (le_lt_dec n m)).	0.315832853317	357
Coq.Arith.Compare_dec.le_lt_eq_dec	40	1.0.0.2.9.0.0.2.0.0.4	search with cache (only 1: induction n in m |- *; only 1: destruct m; only 1: auto with arith; only 1: auto with arith; only 1: destruct m; only 1: auto with arith; only 1: intros; only 1: elim (IHn m); only 1: auto with arith; only 1: auto with arith; only 1: auto with arith).	20.9480569363	24203
Coq.Arith.Compare_dec.le_dec	40	6.4.6	search with cache (only 1: elim (le_lt_dec n m); only 1: auto; only 1: auto with arith).	0.227945804596	324
Coq.Arith.Compare_dec.lt_dec	40	6.6.0.1.7.1.6.6.17	search with cache (only 1: induction n in m |- *; only 1: destruct m; only 1: auto with arith; only 1: auto with arith; only 1: destruct m; only 1: auto with arith; only 1: elim (IHn m); only 1: auto with arith; only 1: auto with arith).	30.9970469475	69357
Coq.Arith.Compare_dec.gt_dec	40	3	search with cache (only 1: apply le_dec).	0.0880188941956	22
Coq.Arith.Compare_dec.ge_dec	40	1	search with cache (only 1: apply le_dec).	0.0052170753479	2
Coq.Arith.Compare_dec.dec_le	40	0.0.0.0.2.7	search with cache (only 1: elim (le_lt_dec n m); only 1: left; only 1: trivial; only 1: right; only 1: apply Nat.lt_nge; only 1: trivial).	0.153182029724	167
Coq.Arith.Compare_dec.dec_lt	40
Coq.Arith.Compare_dec.dec_gt	40	7	search with cache (only 1: apply Nat.le_decidable).	0.0115010738373	11
Coq.Arith.Compare_dec.dec_ge	40
Coq.Arith.Compare_dec.not_eq	40	0	search with cache (only 1: apply Nat.lt_gt_cases).	0.00552916526794	1
Coq.Arith.Compare_dec.not_le	40	0	search with cache (only 1: apply Nat.lt_nge).	0.00518608093262	1
Coq.Arith.Compare_dec.not_gt	40	0	search with cache (only 1: apply Nat.le_ngt).	0.00527000427246	1
Coq.Arith.Compare_dec.not_ge	40	5	search with cache (only 1: Nat.order).	0.0276479721069	19
Coq.Arith.Compare_dec.not_lt	40	9	search with cache (only 1: apply Nat.le_ngt).	0.0291709899902	27
Coq.Arith.Compare_dec.nat_compare_lt	40
Coq.Arith.Compare_dec.nat_compare_gt	40
Coq.Arith.Compare_dec.nat_compare_le	40
Coq.Arith.Compare_dec.nat_compare_ge	40
Coq.Arith.Compare_dec.nat_compare_eq	40	1.1.0.0.1.0.0.2.1.0	search with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: Nat.order_nz; only 1: simpl; only 1: easy; only 1: destruct m; only 1: simpl; only 1: easy; only 1: auto with arith).	0.525284051895	955
Coq.Arith.Compare_dec.nat_compare_Lt_lt	40	2	search with cache (only 1: apply Nat.compare_lt_iff).	0.00708293914795	3
Coq.Arith.Compare_dec.nat_compare_Gt_gt	40	1	search with cache (only 1: apply Nat.compare_gt_iff).	0.00638484954834	2
Coq.Arith.Compare_dec.nat_compare_equiv	40
Coq.Arith.Compare_dec.leb_iff_conv	40
Coq.Arith.Compare_dec.leb_correct	40	4.0.2.0.0.1.1.0.0.0.3	search with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: trivial; only 1: simpl; only 1: easy; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: auto with arith).	1.34976911545	3078
Coq.Arith.Compare_dec.leb_complete	40	0	search with cache (only 1: apply Nat.leb_le).	0.00572299957275	1
Coq.Arith.Compare_dec.leb_correct_conv	40	0.1	search with cache (only 1: rewrite Nat.leb_nle; only 1: apply Nat.lt_nge).	0.0130457878113	3
Coq.Arith.Compare_dec.leb_complete_conv	40	0	search with cache (only 1: apply leb_iff_conv).	0.00584387779236	1
Coq.Arith.Compare_dec.leb_compare	40
Coq.Arith.EqNat.eq_nat_refl	40	5.0.20.9	search with cache (only 1: repeat red; only 1: induction n as [| n IH]; only 1: split; only 1: trivial).	0.148006916046	1124
Coq.Arith.EqNat.eq_nat_is_eq	40
Coq.Arith.EqNat.eq_eq_nat	40	1.0.0.0.0.1	search with cache (only 1: intros <-; only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: apply eq_nat_refl).	0.0651071071625	71
Coq.Arith.EqNat.eq_nat_eq	40	2	search with cache (only 1: apply eq_nat_is_eq).	0.285669803619	111
Coq.Arith.EqNat.eq_nat_elim	40
Coq.Arith.EqNat.eq_nat_decide	40
Coq.Arith.EqNat.beq_nat_refl	40	4.5.2.8	search with cache (only 1: induction n; only 1: simpl; only 1: trivial; only 1: now try Nat.order').	0.207358837128	422
Coq.Arith.EqNat.beq_nat_true	40	1.0.0.0.0.0.0.0.0.0	search with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: easy; only 1: simpl; only 1: easy; only 1: destruct m; only 1: simpl; only 1: easy; only 1: contradiction || auto).	0.287636041641	172
Coq.Arith.EqNat.beq_nat_false	40	1.3.0.2.0.5.1.4	search with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: now try Nat.order'; only 1: now try Nat.order'; only 1: destruct m; only 1: contradiction || auto; only 1: contradiction || auto).	1.39573693275	1458
Coq.Arith.EqNat.beq_nat_eq	40	1.0.0.0.0.0.0.0.3	search with cache (only 1: induction n; only 1: destruct m; only 1: easy; only 1: simpl; only 1: easy; only 1: destruct m; only 1: simpl; only 1: easy; only 1: contradiction || auto).	3.66706895828	2081
Coq.Arith.Euclid.eucl_dev	40
Coq.Arith.Euclid.quotient	40
Coq.Arith.Euclid.modulo	40
Coq.Arith.PeanoNat.Nat.bi_induction	40	9.2.12.6	search with cache (only 1: intros z Hz; only 1: induction n; only 1: auto; only 1: firstorder).	17.0559580326	6385
Coq.Arith.PeanoNat.Nat.recursion_wd	40
Coq.Arith.PeanoNat.Nat.recursion_0	40	1	search with cache (only 1: constructor).	0.00469613075256	2
Coq.Arith.PeanoNat.Nat.recursion_succ	40	10.11.1.0.1.15	search with cache (only 1: intros x0 y0 z D H0 H1; only 1: intros; only 1: simpl; only 1: induction n; only 1: firstorder; only 1: firstorder).	26.9180629253	107039
Coq.Arith.PeanoNat.Nat.pred_succ	40	1.1	search with cache (only 1: simpl; only 1: trivial).	0.00510597229004	4
Coq.Arith.PeanoNat.Nat.pred_0	40	0	search with cache (only 1: reflexivity).	0.0039598941803	1
Coq.Arith.PeanoNat.Nat.one_succ	40	0	search with cache (only 1: reflexivity).	0.00455689430237	1
Coq.Arith.PeanoNat.Nat.two_succ	40	0	search with cache (only 1: reflexivity).	0.00375914573669	1
Coq.Arith.PeanoNat.Nat.add_0_l	40	0	search with cache (only 1: reflexivity).	0.00422716140747	1
Coq.Arith.PeanoNat.Nat.add_succ_l	40	0	search with cache (only 1: reflexivity).	0.00445699691772	1
Coq.Arith.PeanoNat.Nat.sub_0_r	40	0.0.2	search with cache (only 1: induction n; only 1: reflexivity; only 1: reflexivity).	0.00584602355957	5
Coq.Arith.PeanoNat.Nat.sub_succ_r	40
Coq.Arith.PeanoNat.Nat.mul_0_l	40	0	search with cache (only 1: auto).	0.00469493865967	1
Coq.Arith.PeanoNat.Nat.mul_succ_l	40
Coq.Arith.PeanoNat.Nat.lt_succ_r	40
Coq.Arith.PeanoNat.Nat.eqb_eq	40
Coq.Arith.PeanoNat.Nat.leb_le	40
Coq.Arith.PeanoNat.Nat.ltb_lt	40
Coq.Arith.PeanoNat.Nat.eq_dec	40	1	search with cache (only 1: decide equality).	0.0109491348267	2
Coq.Arith.PeanoNat.Nat.compare_eq_iff	40	0.0.3.0.1.0.0.0.0.3.0	search with cache (only 1: revert m; only 1: simpl_relation; only 1: revert m; only 1: induction n; only 1: destruct m; only 1: auto; only 1: easy; only 1: destruct m; only 1: easy; only 1: destruct (IHn m); only 1: auto).	1.84865117073	3807
Coq.Arith.PeanoNat.Nat.compare_lt_iff	40
Coq.Arith.PeanoNat.Nat.compare_le_iff	40
Coq.Arith.PeanoNat.Nat.compare_antisym	40	4.0.3.0.0.0.0.0.0.0.0	search with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy; only 1: destruct m; only 1: easy; only 1: simpl; only 1: auto).	3.69897413254	10930
Coq.Arith.PeanoNat.Nat.compare_succ	40	0.0.0.0	search with cache (only 1: revert m; only 1: destruct m; only 1: reflexivity; only 1: reflexivity).	0.00562596321106	4
Coq.Arith.PeanoNat.Nat.max_l	40	0.2.3.0.1.1.0.1.1.0.1.0	search with cache (only 1: induction n; only 1: destruct m; only 1: auto; only 1: simpl; only 1: easy; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	8.42842888832	23615
Coq.Arith.PeanoNat.Nat.max_r	40	0.2.4.0.0.0.0.2.1	search with cache (only 1: induction n; only 1: auto; only 1: destruct m; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	2.58429980278	8072
Coq.Arith.PeanoNat.Nat.min_l	40	0.3.7.0.4.0.0.0.3	search with cache (only 1: induction n; only 1: auto; only 1: destruct m; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	39.8862490654	129241
Coq.Arith.PeanoNat.Nat.min_r	40	2.3.7.1.2.1.1.0.1.2	search with cache (only 1: induction n; only 1: destruct m; only 1: auto; only 1: easy; only 1: destruct m; only 1: auto; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	25.4877009392	90319
Coq.Arith.PeanoNat.Nat.pow_neg_r	40	9.5	search with cache (only 1: intro H; only 1: now elim H).	0.0362310409546	140
Coq.Arith.PeanoNat.Nat.pow_0_r	40	0	search with cache (only 1: reflexivity).	0.00396704673767	1
Coq.Arith.PeanoNat.Nat.pow_succ_r	40	0	search with cache (only 1: now nzsimpl).	0.00851607322693	1
Coq.Arith.PeanoNat.Nat.square_spec	40	1	search with cache (only 1: eauto with *).	0.45282292366	86
Coq.Arith.PeanoNat.Nat.Private_Parity.Even_1	40
Coq.Arith.PeanoNat.Nat.Private_Parity.Even_2	40
Coq.Arith.PeanoNat.Nat.Private_Parity.Odd_0	40	1.4.0.0.0	search with cache (only 1: intros ([| ], H); only 1: discriminate; only 1: pose proof (pred_succ n) as EQ'; only 1: simpl in H; only 1: now rewrite <- plus_n_Sm in H).	0.0100159645081	10
Coq.Arith.PeanoNat.Nat.Private_Parity.Odd_2	40	2.0.0.0.0.1.0.0.6.0.0.1.0.0	search with cache (only 1: split; only 1: intros (m, H); only 1: exists (S m); only 1: simpl in H; only 1: rewrite H; only 1: now nzsimpl; only 1: intros (m, H); only 1: rewrite <- plus_n_Sm in H; only 1: destruct m; only 1: discriminate; only 1: exists m; only 1: simpl in H; only 1: rewrite <- plus_n_Sm in H; only 1: now inversion H).	6.26138401031	6287
Coq.Arith.PeanoNat.Nat.even_spec	40
Coq.Arith.PeanoNat.Nat.odd_spec	40	4.0	search with cache (only 1: fix even_spec 1; only 1: intuition).	0.0197880268097	39
Coq.Arith.PeanoNat.Nat.divmod_spec	40
Coq.Arith.PeanoNat.Nat.div_mod	40
Coq.Arith.PeanoNat.Nat.mod_bound_pos	40
Coq.Arith.PeanoNat.Nat.sqrt_iter_spec	40
Coq.Arith.PeanoNat.Nat.sqrt_specif	40
Coq.Arith.PeanoNat.Nat.sqrt_neg	40	0	search with cache (only 1: inversion 1).	0.00559496879578	1
Coq.Arith.PeanoNat.Nat.log2_iter_spec	40
Coq.Arith.PeanoNat.Nat.log2_spec	40
Coq.Arith.PeanoNat.Nat.log2_nonpos	40	6.6	search with cache (only 1: inversion 1; only 1: auto).	0.149729967117	224
Coq.Arith.PeanoNat.Nat.gcd_divide	40	4.11	search with cache (only 1: fix even_spec 1; only 1: firstorder).	0.213433980942	317
Coq.Arith.PeanoNat.Nat.gcd_divide_l	40	2.1.0.2.0	search with cache (only 1: fix gcd_divide 1; only 1: intros [| a] b; only 1: simpl; only 1: now exists 0; only 1: auto).	0.106049060822	14
Coq.Arith.PeanoNat.Nat.gcd_divide_r	40	0.0	search with cache (only 1: intros; only 1: apply gcd_divide).	0.00508713722229	2
Coq.Arith.PeanoNat.Nat.gcd_greatest	40	6.5	search with cache (only 1: fix gcd_divide 1; only 1: apply gcd_divide).	0.164304971695	296
Coq.Arith.PeanoNat.Nat.gcd_nonneg	40	7	search with cache (only 1: apply le_0_l).	0.0304388999939	28
Coq.Arith.PeanoNat.Nat.div2_double	40	0.13.0.0.0.4.9.5	search with cache (only 1: simpl; only 1: rewrite add_0_r; only 1: nzinduct n; only 1: now nzsimpl; only 1: intros; only 1: nzsimpl; only 1: simpl; only 1: now rewrite succ_inj_wd).	6.60957598686	5002
Coq.Arith.PeanoNat.Nat.div2_succ_double	40	0.0.0.0.0.0	search with cache (only 1: induction n; only 1: trivial; only 1: simpl mul; only 1: rewrite add_succ_r; only 1: simpl; only 1: now f_equal).	0.00993299484253	6
Coq.Arith.PeanoNat.Nat.le_div2	40
Coq.Arith.PeanoNat.Nat.lt_div2	40
Coq.Arith.PeanoNat.Nat.div2_decr	40	1.3.2	search with cache (only 1: revert n; only 1: fix le_div2 1; only 1: trivial).	0.00882887840271	14
Coq.Arith.PeanoNat.Nat.double_twice	40	1.0	search with cache (only 1: intro n; only 1: now nzsimpl').	0.0309851169586	33
Coq.Arith.PeanoNat.Nat.testbit_0_l	40	0.0.1.15	search with cache (only 1: nzinduct n; only 1: easy; only 1: intro n; only 1: now split).	0.28976893425	562
Coq.Arith.PeanoNat.Nat.testbit_odd_0	40
Coq.Arith.PeanoNat.Nat.testbit_even_0	40
Coq.Arith.PeanoNat.Nat.testbit_odd_succ'	40	0.0.6.2.11	search with cache (only 1: nzsimpl; only 1: revert n; only 1: fix le_div2 1; only 1: intro n; only 1: trivial).	1.47848796844	2096
Coq.Arith.PeanoNat.Nat.testbit_even_succ'	40
Coq.Arith.PeanoNat.Nat.shiftr_specif	40	1.7	search with cache (only 1: fix even_spec 1; only 1: destr_bool).	0.462464094162	179
Coq.Arith.PeanoNat.Nat.shiftl_specif_high	40	5.1.16	search with cache (only 1: fix even_spec 1; only 1: intros; only 1: auto).	31.8008840084	49862
Coq.Arith.PeanoNat.Nat.shiftl_spec_low	40
Coq.Arith.PeanoNat.Nat.div2_bitwise	40	1.1.6.0	search with cache (only 1: intro n; only 1: fix le_div2 1; only 1: intro m; only 1: auto).	0.281005144119	374
Coq.Arith.PeanoNat.Nat.odd_bitwise	40	2.1.2.3	search with cache (only 1: intros n1 n2 H; only 1: unfold odd; only 1: fix odd_spec 1; only 1: trivial).	0.241513967514	306
Coq.Arith.PeanoNat.Nat.testbit_bitwise_1	40
Coq.Arith.PeanoNat.Nat.testbit_bitwise_2	40
Coq.Arith.PeanoNat.Nat.land_spec	40
Coq.Arith.PeanoNat.Nat.ldiff_spec	40	0.0.1	search with cache (only 1: apply testbit_bitwise_1; only 1: trivial; only 1: trivial).	0.00724506378174	4
Coq.Arith.PeanoNat.Nat.lor_spec	40
Coq.Arith.PeanoNat.Nat.lxor_spec	40
Coq.Arith.PeanoNat.Nat.div2_spec	40	0	search with cache (only 1: reflexivity).	0.00596404075623	1
Coq.Arith.PeanoNat.Nat.testbit_neg_r	40	1	search with cache (only 1: inversion H).	0.00898313522339	2
Coq.Arith.PeanoNat.Nat.tail_add_spec	40
Coq.Arith.PeanoNat.Nat.tail_addmul_spec	40
Coq.Arith.PeanoNat.Nat.tail_mul_spec	40
Coq.Arith.PeanoNat.test	40	2	search with cache (only 1: Nat.order).	0.0139801502228	20
Coq.Arith.Compare.discrete_nat	40
Coq.Arith.Gt.gt_n_S	40	1	search with cache (only 1: apply Nat.succ_lt_mono).	0.00594806671143	2
Coq.Arith.Gt.gt_S_n	40	0	search with cache (only 1: apply Nat.succ_lt_mono).	0.00538206100464	1
Coq.Arith.Gt.gt_S	40	4.4.10.3	search with cache (only 1: intros EQ; only 1: apply Nat.lt_eq_cases; only 1: apply Nat.lt_succ_r; only 1: trivial).	0.622277975082	1410
Coq.Arith.Gt.gt_pred	40	3	search with cache (only 1: apply Nat.lt_succ_lt_pred).	0.00704789161682	4
Coq.Arith.Gt.le_not_gt	40	0.0.13.2	search with cache (only 1: intro H'; only 1: apply Nat.lt_nge; only 1: apply Nat.lt_succ_r; only 1: trivial).	0.395834922791	575
Coq.Arith.Gt.gt_not_le	40	7	search with cache (only 1: apply Nat.lt_nge).	0.0130431652069	18
Coq.Arith.Gt.le_S_gt	40	0	search with cache (only 1: trivial).	0.0052969455719	1
Coq.Arith.Gt.gt_S_le	40	4	search with cache (only 1: apply Nat.lt_succ_r).	0.0129671096802	5
Coq.Arith.Gt.gt_le_S	40	0	search with cache (only 1: apply Nat.le_succ_l).	0.00537705421448	1
Coq.Arith.Gt.le_gt_S	40	0	search with cache (only 1: apply Nat.succ_le_mono).	0.00555610656738	1
Coq.Arith.Gt.le_gt_trans	40
Coq.Arith.Gt.gt_le_trans	40
Coq.Arith.Gt.gt_trans	40
Coq.Arith.Gt.gt_trans_S	40	2.1.3.16.3.0	search with cache (only 1: intros; only 1: apply Nat.le_succ_l; only 1: apply Nat.lt_le_trans with m; only 1: auto; only 1: apply Nat.succ_le_mono; only 1: now rewrite <- ?Nat.succ_le_mono).	4.53280901909	11086
Coq.Arith.Gt.gt_0_eq	40	5.5.1.20.32.1.17	search with cache (only 1: destruct n; only 1: auto; only 1: left; only 1: revert n; only 1: Nat.induct ltac:(n); only 1: Nat.order'; only 1: auto).	11.4631597996	51077
Coq.Arith.Gt.plus_gt_reg_l	40	2	search with cache (only 1: apply Nat.add_lt_mono_l).	0.0164179801941	12
Coq.Arith.Gt.plus_gt_compat_l	40	0	search with cache (only 1: apply Nat.add_lt_mono_l).	0.00546717643738	1
Coq.Logic.SetoidChoice.setoid_choice	40
Coq.Logic.SetoidChoice.representative_choice	40
Coq.Logic.PropFacts.injection_is_involution_in_Prop	40
Coq.Logic.JMeq.JMeq_sym	40
Coq.Logic.JMeq.JMeq_trans	40	0.0.0	search with cache (only 1: intros; only 1: destruct H; only 1: trivial).	0.00601291656494	3
Coq.Logic.JMeq.JMeq_ind	40
Coq.Logic.JMeq.JMeq_rec	40	0.0.0	search with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := H'); only 1: trivial).	0.00462794303894	3
Coq.Logic.JMeq.JMeq_rect	40	0.0.0	search with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := H'); only 1: trivial).	0.00533509254456	3
Coq.Logic.JMeq.JMeq_ind_r	40
Coq.Logic.JMeq.JMeq_rec_r	40	0.1.0	search with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := JMeq_sym H'); only 1: trivial).	0.00489807128906	4
Coq.Logic.JMeq.JMeq_rect_r	40	0.1.0	search with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := JMeq_sym H'); only 1: trivial).	0.00551199913025	4
Coq.Logic.JMeq.JMeq_congr	40
Coq.Logic.JMeq.JMeq_eq_dep_id	40	0.0.0	search with cache (only 1: intros; only 1: destruct H; only 1: auto).	0.00980687141418	3
Coq.Logic.JMeq.eq_dep_id_JMeq	40	0.0	search with cache (only 1: destruct 1; only 1: trivial).	0.00575709342957	2
Coq.Logic.JMeq.eq_dep_JMeq	40	1.1	search with cache (only 1: intros * []; only 1: trivial).	0.00726389884949	13
Coq.Logic.JMeq.eq_dep_strictly_stronger_JMeq	40
Coq.Logic.JMeq.JMeq_eq_dep	40
Coq.Logic.ExtensionalityFacts.diagonal_projs_same_behavior	40
Coq.Logic.ExtensionalityFacts.diagonal_inverse1	40
Coq.Logic.ExtensionalityFacts.diagonal_inverse2	40	0.0.0.0	search with cache (only 1: split; only 1: trivial; only 1: destruct b as (a1, a2, []); only 1: reflexivity).	0.00499606132507	4
Coq.Logic.ExtensionalityFacts.FunctExt_iff_EqDeltaProjs	40
Coq.Logic.ExtensionalityFacts.FunctExt_UniqInverse	40
Coq.Logic.ExtensionalityFacts.UniqInverse_EqDeltaProjs	40
Coq.Logic.ExtensionalityFacts.FunctExt_iff_UniqInverse	40
Coq.Logic.ExtensionalityFacts.FunctExt_BijComp	40
Coq.Logic.ExtensionalityFacts.BijComp_FunctExt	40
Coq.Logic.Classical_Prop.NNPP	40
Coq.Logic.Classical_Prop.Peirce	40	8.0	search with cache (only 1: intros; only 1: tauto).	0.00914096832275	10
Coq.Logic.Classical_Prop.not_imply_elim	40	0.2	search with cache (only 1: intros Ext A a; only 1: tauto).	0.0735580921173	126
Coq.Logic.Classical_Prop.not_imply_elim2	40	6.0.0.0	search with cache (only 1: intros; only 1: apply NNPP; only 1: red; only 1: auto).	0.0168330669403	32
Coq.Logic.Classical_Prop.imply_to_or	40	3.0.3	search with cache (only 1: unfold not; only 1: intros; only 1: tauto).	0.31618309021	90
Coq.Logic.Classical_Prop.imply_to_and	40	1.1.0.0.0.1	search with cache (only 1: intros; only 1: apply NNPP; only 1: red; only 1: intro; only 1: apply H; only 1: tauto).	0.0171051025391	12
Coq.Logic.Classical_Prop.or_to_imply	40	1	search with cache (only 1: tauto).	0.0168161392212	19
Coq.Logic.Classical_Prop.not_and_or	40	1.1.1.0.0.0	search with cache (only 1: intros; only 1: elim (classic P); only 1: elim (classic P); only 1: auto; only 1: auto; only 1: auto).	0.0598740577698	73
Coq.Logic.Classical_Prop.or_not_and	40	1	search with cache (only 1: tauto).	0.0295820236206	19
Coq.Logic.Classical_Prop.not_or_and	40	0	search with cache (only 1: tauto).	0.00804805755615	1
Coq.Logic.Classical_Prop.and_not_or	40	0	search with cache (only 1: tauto).	0.00796508789062	1
Coq.Logic.Classical_Prop.imply_and_or	40	2	search with cache (only 1: tauto).	0.465921878815	395
Coq.Logic.Classical_Prop.imply_and_or2	40	0	search with cache (only 1: tauto).	0.00815105438232	1
Coq.Logic.Classical_Prop.Eq_rect_eq.eq_rect_eq	40
Coq.Logic.Hurkens.Generic.Omega	40
Coq.Logic.Hurkens.Generic.lemma1	40
Coq.Logic.Hurkens.Generic.lemma2	40
Coq.Logic.Hurkens.Generic.paradox	40
Coq.Logic.Hurkens.NoRetractToImpredicativeUniverse.paradox	40
Coq.Logic.Hurkens.NoRetractToModalProposition.strength	40
Coq.Logic.Hurkens.NoRetractToModalProposition.modal	40
Coq.Logic.Hurkens.NoRetractToModalProposition.Forall	40
Coq.Logic.Hurkens.NoRetractToModalProposition.paradox	40
Coq.Logic.Hurkens.NoRetractToNegativeProp.paradox	40
Coq.Logic.Hurkens.NoRetractFromSmallPropositionToProp.mparadox	40
Coq.Logic.Hurkens.NoRetractFromSmallPropositionToProp.paradox	40
Coq.Logic.Hurkens.NoRetractFromTypeToProp.paradox	40
Coq.Logic.Hurkens.TypeNeqSmallType.up_down	40
Coq.Logic.Hurkens.TypeNeqSmallType.paradox	40
Coq.Logic.Hurkens.PropNeqType.paradox	40
Coq.Logic.ClassicalChoice.singleton_choice	40
Coq.Logic.ClassicalChoice.choice	40
Coq.Logic.Eqdep_dec.trans_sym_eq	40
Coq.Logic.Eqdep_dec.nu_constant	40
Coq.Logic.Eqdep_dec.nu_left_inv_on	40
Coq.Logic.Eqdep_dec.eq_proofs_unicity_on	40
Coq.Logic.Eqdep_dec.K_dec_on	40
Coq.Logic.Eqdep_dec.inj_right_pair_on	40
Coq.Logic.Eqdep_dec.K_dec_type	40
Coq.Logic.Eqdep_dec.eq_rect_eq_dec	40	1.0.3.0.2.0.0.0.3	search with cache (only 1: intros A eq_dec x P H p; only 1: elim p using K_dec; only 1: intros; only 1: case (eq_dec x0 y); only 1: left; only 1: assumption; only 1: right; only 1: assumption; only 1: trivial).	0.32407784462	1422
Coq.Logic.Eqdep_dec.DecidableEqDep.inj_pairP2	40
Coq.Logic.Eqdep_dec.inj_pair2_eq_dec	40
Coq.Logic.Eqdep_dec.UIP_refl_unit	40
Coq.Logic.Eqdep_dec.UIP_refl_bool	40
Coq.Logic.Eqdep_dec.UIP_refl_nat	40
Coq.Logic.ConstructiveEpsilon.linear_search_smallest	40	7.3	search with cache (only 1: intros x y H; only 1: firstorder).	0.0487570762634	53
Coq.Logic.ConstructiveEpsilon.epsilon_smallest	40
Coq.Logic.ConstructiveEpsilon.P_implies_acc	40
Coq.Logic.ConstructiveEpsilon.P_eventually_implies_acc	40
Coq.Logic.ConstructiveEpsilon.P_eventually_implies_acc_ex	40
Coq.Logic.ConstructiveEpsilon.acc_implies_P_eventually	40
Coq.Logic.ConstructiveEpsilon.constructive_indefinite_ground_description_nat_Acc	40
Coq.Logic.ConstructiveEpsilon.P'_decidable	40	22	search with cache (only 1: eauto using BinInt.Z.Private_Tac.eq_trans, BinInt.Z.Private_Tac.eq_sym).	0.469613075256	465
Coq.Logic.ConstructiveEpsilon.constructive_indefinite_ground_description	40
Coq.Logic.ConstructiveEpsilon.constructive_definite_ground_description	40
Coq.Logic.ChoiceFacts.functional_rel_reification_and_rel_choice_imp_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_imp_rel_choice	40
Coq.Logic.ChoiceFacts.fun_choice_imp_functional_rel_reification	40
Coq.Logic.ChoiceFacts.fun_choice_iff_rel_choice_and_functional_rel_reification	40
Coq.Logic.ChoiceFacts.rel_choice_and_proof_irrel_imp_guarded_rel_choice	40
Coq.Logic.ChoiceFacts.rel_choice_indep_of_general_premises_imp_guarded_rel_choice	40
Coq.Logic.ChoiceFacts.guarded_rel_choice_imp_rel_choice	40
Coq.Logic.ChoiceFacts.subset_types_imp_guarded_rel_choice_iff_rel_choice	40
Coq.Logic.ChoiceFacts.guarded_iff_omniscient_rel_choice	40
Coq.Logic.ChoiceFacts.guarded_fun_choice_imp_indep_of_general_premises	40
Coq.Logic.ChoiceFacts.guarded_fun_choice_imp_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_indep_general_prem_imp_guarded_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_indep_general_prem_iff_guarded_fun_choice	40
Coq.Logic.ChoiceFacts.omniscient_fun_choice_imp_small_drinker	40
Coq.Logic.ChoiceFacts.omniscient_fun_choice_imp_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_small_drinker_imp_omniscient_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_small_drinker_iff_omniscient_fun_choice	40
Coq.Logic.ChoiceFacts.guarded_iff_omniscient_fun_choice	40
Coq.Logic.ChoiceFacts.iota_imp_constructive_definite_description	40
Coq.Logic.ChoiceFacts.epsilon_imp_constructive_indefinite_description	40	2.1.0.0.2.0.1	search with cache (only 1: intros D_iota A P H; only 1: destruct D_iota with (P := P) as (x, H1); only 1: destruct H; only 1: auto; only 1: exists x; only 1: apply H1; only 1: assumption).	0.0615739822388	191
Coq.Logic.ChoiceFacts.constructive_indefinite_description_and_small_drinker_imp_epsilon	40
Coq.Logic.ChoiceFacts.epsilon_imp_small_drinker	40
Coq.Logic.ChoiceFacts.constructive_indefinite_description_and_small_drinker_iff_epsilon	40
Coq.Logic.ChoiceFacts.classical_denumerable_description_imp_fun_choice	40
Coq.Logic.ChoiceFacts.dep_non_dep_functional_choice	40
Coq.Logic.ChoiceFacts.non_dep_dep_functional_choice	40
Coq.Logic.ChoiceFacts.functional_choice_to_inhabited_forall_commute	40
Coq.Logic.ChoiceFacts.inhabited_forall_commute_to_functional_choice	40
Coq.Logic.ChoiceFacts.dep_non_dep_functional_rel_reification	40	1.0.2.12	search with cache (only 1: intros AC_depfun A B R H; only 1: destruct (AC_depfun A (fun _ => B) R H) as (f, Hf); only 1: exists f; only 1: trivial).	0.668115139008	1470
Coq.Logic.ChoiceFacts.non_dep_dep_functional_rel_reification	40
Coq.Logic.ChoiceFacts.dep_iff_non_dep_functional_rel_reification	40	1.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.1.0.0.0.1.0.0.0.0.1.3	search with cache (only 1: Record.split; only 1: intros AC_fun A B R H; only 1: pose (B' := {x : A & B x}); only 1: pose (R' := fun (x : A) (y : B') => projT1 y = x /\ R (projT1 y) (projT2 y)); only 1: destruct (AC_fun A B' R') as (f, Hf); only 1: intros x; only 1: destruct (H x) as (y, (Hy, Huni)); only 1: exists (existT (fun x => B x) x y); only 1: repeat split; only 1: trivial; only 1: intros (x', y') (Heqx', Hy'); only 1: simpl in *; only 1: destruct Heqx'; only 1: rewrite (Huni y'); only 1: trivial; only 1: trivial; only 1: exists (fun x => eq_rect _ _ (projT2 (f x)) _ (proj1_inf (Hf x))); only 1: intro x; only 1: destruct (Hf x) as (Heq, HR) using and_indd; only 1: destruct (f x); only 1: simpl in *; only 1: destruct Heq using eq_indd; only 1: trivial; only 1: intros DepFunReify A B R H; only 1: destruct (DepFunReify A (fun _ => B) R H) as (f, Hf); only 1: exists f; only 1: trivial).	35.6681349277	70440
Coq.Logic.ChoiceFacts.relative_non_contradiction_of_indefinite_descr	40
Coq.Logic.ChoiceFacts.constructive_indefinite_descr_fun_choice	40
Coq.Logic.ChoiceFacts.relative_non_contradiction_of_definite_descr	40
Coq.Logic.ChoiceFacts.constructive_definite_descr_fun_reification	40
Coq.Logic.ChoiceFacts.constructive_definite_descr_excluded_middle	40
Coq.Logic.ChoiceFacts.fun_reification_descr_computational_excluded_middle_in_prop_context	40
Coq.Logic.ChoiceFacts.functional_choice_imp_functional_dependent_choice	40
Coq.Logic.ChoiceFacts.functional_dependent_choice_imp_functional_countable_choice	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_prop_repr	40	0	search with cache (only 1: firstorder using PredExt_imp_PropExt, PredExt_imp_PropFunExt, PropExt_and_PropFunExt_imp_PredExt).	0.770424127579	1
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_pred_repr	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_function_repr	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_excluded_middle	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_relational_choice	40
Coq.Logic.ChoiceFacts.gen_setoid_fun_choice_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_gen_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_iff_gen_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_simple_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.simple_setoid_fun_choice_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_iff_simple_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_functional_rel_reification	40	0.0.4.1.3.0.0.0.1	search with cache (only 1: intros A B SetoidFunChoice T Hexists; only 1: destruct SetoidFunChoice with (R := eq) (T := T) as (f, Hf); only 1: apply eq_equivalence; only 1: now intros * ->; only 1: pose (D := A * B); only 1: pose (R := fun z z' : D => let x := fst z in let x' := fst z' in let y := snd z in let y' := snd z' in x = x' /\ (T x y -> y = y' \/ T x y') /\ (T x y' -> y = y' \/ T x y)); only 1: firstorder; only 1: exists f; only 1: firstorder).	6.50620794296	3681
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_repr_fun_choice	40
Coq.Logic.ChoiceFacts.functional_rel_reification_and_repr_fun_choice_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.functional_rel_reification_and_repr_fun_choice_iff_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_ext_functions_repr_and_excluded_middle_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_functional_choice_first_characterization	40
Coq.Logic.ChoiceFacts.fun_choice_and_ext_pred_ext_and_proof_irrel_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_functional_choice_second_characterization	40
Coq.Logic.PropExtensionality.proof_irrelevance	40
Coq.Logic.StrictProp.Spr1_inj	40
Coq.Logic.ClassicalFacts.prop_degen_ext	40
Coq.Logic.ClassicalFacts.prop_degen_em	40
Coq.Logic.ClassicalFacts.prop_ext_em_degen	40
Coq.Logic.ClassicalFacts.provable_prop_ext	40
Coq.Logic.ClassicalFacts.prop_ext_A_eq_A_imp_A	40	1.1.0.6.4	search with cache (only 1: intros Ext A Ha; only 1: apply Ext; only 1: split; only 1: auto; only 1: auto).	0.0317831039429	171
Coq.Logic.ClassicalFacts.prop_ext_retract_A_A_imp_A	40
Coq.Logic.ClassicalFacts.ext_prop_fixpoint	40
Coq.Logic.ClassicalFacts.aux	40
Coq.Logic.ClassicalFacts.ext_prop_dep_proof_irrel_gen	40
Coq.Logic.ClassicalFacts.ext_prop_dep_proof_irrel_cc	40
Coq.Logic.ClassicalFacts.ext_prop_dep_proof_irrel_cic	40
Coq.Logic.ClassicalFacts.p2p1	40
Coq.Logic.ClassicalFacts.p2p2	40
Coq.Logic.ClassicalFacts.proof_irrelevance_cc	40
Coq.Logic.ClassicalFacts.wp2p1	40
Coq.Logic.ClassicalFacts.wp2p2	40
Coq.Logic.ClassicalFacts.wproof_irrelevance_cc	40
Coq.Logic.ClassicalFacts.proof_irrelevance_cci	40
Coq.Logic.ClassicalFacts.wem_proof_irrelevance_cci	40
Coq.Logic.ClassicalFacts.excluded_middle_Godel_Dummett	40
Coq.Logic.ClassicalFacts.Godel_Dummett_iff_right_distr_implication_over_disjunction	40
Coq.Logic.ClassicalFacts.Godel_Dummett_weak_excluded_middle	40
Coq.Logic.ClassicalFacts.weak_excluded_middle_iff_classical_de_morgan_law	40
Coq.Logic.ClassicalFacts.independence_general_premises_right_distr_implication_over_disjunction	40
Coq.Logic.ClassicalFacts.independence_general_premises_Godel_Dummett	40
Coq.Logic.ClassicalFacts.independence_general_premises_drinker	40
Coq.Logic.ClassicalFacts.excluded_middle_independence_general_premises	40
Coq.Logic.ClassicalFacts.unrestricted_minimization_entails_excluded_middle	40
Coq.Logic.ClassicalFacts.excluded_middle_entails_unrestricted_minimization	40
Coq.Logic.ClassicalFacts.undecidable_predicate_with_the_minimization_property	40	0.33.23	search with cache (only 1: intros q; only 1: fix odd_spec 1; only 1: auto).	3.8985478878	12020
Coq.Logic.ClassicalFacts.representative_boolean_partition_imp_excluded_middle	40
Coq.Logic.ClassicalFacts.excluded_middle_imp_representative_boolean_partition	40
Coq.Logic.ClassicalFacts.excluded_middle_iff_representative_boolean_partition	40
Coq.Logic.Classical_Pred_Type.not_all_not_ex	40
Coq.Logic.Classical_Pred_Type.not_all_ex_not	40
Coq.Logic.Classical_Pred_Type.not_ex_all_not	40	1.0.1.0.0	search with cache (only 1: intros P notall; only 1: intros n H; only 1: apply notall; only 1: exists n; only 1: exact H).	0.00829100608826	7
Coq.Logic.Classical_Pred_Type.not_ex_not_all	40
Coq.Logic.Classical_Pred_Type.ex_not_not_all	40
Coq.Logic.Classical_Pred_Type.all_not_not_ex	40
Coq.Logic.ProofIrrelevanceFacts.ProofIrrelevanceTheory.Eq_rect_eq.eq_rect_eq	40
Coq.Logic.ProofIrrelevanceFacts.ProofIrrelevanceTheory.subset_eq_compat	40
Coq.Logic.ProofIrrelevanceFacts.ProofIrrelevanceTheory.subsetT_eq_compat	40	0.0.0.0	search with cache (only 1: intros; only 1: rewrite M.proof_irrelevance with (p1 := q) (p2 := (eq_rect x P p y H)); only 1: elim H using eq_indd; only 1: reflexivity).	0.00537109375	4
Coq.Logic.FinFun.Finite_alt	40
Coq.Logic.FinFun.Injective_map_NoDup	40
Coq.Logic.FinFun.Injective_list_carac	40
Coq.Logic.FinFun.Injective_carac	40
Coq.Logic.FinFun.Surjective_list_carac	40
Coq.Logic.FinFun.Surjective_carac	40
Coq.Logic.FinFun.Endo_Injective_Surjective	40
Coq.Logic.FinFun.Finite_Empty_or_not	40	3.1.12.21.6.4	search with cache (only 1: intro H1; only 1: elim H1; only 1: intros n m; only 1: induction n; only 1: auto; only 1: now constructor).	16.9826238155	34478
Coq.Logic.FinFun.Surjective_inverse	40
Coq.Logic.FinFun.Injective_Surjective_Bijective	40
Coq.Logic.FinFun.Fin_Finite	40
Coq.Logic.FinFun.Fin2Restrict.extend_ok	40
Coq.Logic.FinFun.Fin2Restrict.extend_f2n	40
Coq.Logic.FinFun.Fin2Restrict.extend_n2f	40
Coq.Logic.FinFun.Fin2Restrict.restrict_f2n	40
Coq.Logic.FinFun.Fin2Restrict.restrict_n2f	40
Coq.Logic.FinFun.Fin2Restrict.extend_surjective	40
Coq.Logic.FinFun.Fin2Restrict.extend_injective	40
Coq.Logic.FinFun.Fin2Restrict.restrict_surjective	40
Coq.Logic.FinFun.Fin2Restrict.restrict_injective	40
Coq.Logic.FinFun.bInjective_bSurjective	40
Coq.Logic.FinFun.bSurjective_bBijective	40
Coq.Logic.Diaconescu.prop_ext	40
Coq.Logic.Diaconescu.proof_irrel	40
Coq.Logic.Diaconescu.guarded_rel_choice	40
Coq.Logic.Diaconescu.AC_bool_subset_to_bool	40
Coq.Logic.Diaconescu.pred_ext_and_rel_choice_imp_EM	40
Coq.Logic.Diaconescu.a1'	40
Coq.Logic.Diaconescu.a2'	40	0.0	search with cache (only 1: exists a1; only 1: auto).	0.00986504554749	2
Coq.Logic.Diaconescu.projT1_injective	40
Coq.Logic.Diaconescu.decide	40
Coq.Logic.Diaconescu.proof_irrel_rel_choice_imp_eq_dec	40
Coq.Logic.Diaconescu.proof_irrel_rel_choice_imp_eq_dec'	40	0.0.2.0.1.0.0.0.0.0.1.0.1.0.1.0.1.0	search with cache (only 1: destruct (rel_choice A' bool (fun x y => projT1 x = a1 /\ y = true \/ projT1 x = a2 /\ y = false)) as (R, (HRsub, HR)); only 1: apply decide; only 1: destruct (HR a1') as (b1, (Ha1'b1, _Huni1)); only 1: destruct (HRsub a1' b1 Ha1'b1) as [(_, Hb1true)| (Ha1a2, _Hb1false)]; only 1: destruct (HR a2') as (b2, (Ha2'b2, Huni2)); only 1: destruct (HRsub a2' b2 Ha2'b2) as [(Ha2a1, _Hb2true)| (_, Hb2false)]; only 1: left; only 1: symmetry; only 1: assumption; only 1: right; only 1: intro H; only 1: subst b1; only 1: subst b2; only 1: rewrite (projT1_injective H) in Ha1'b1; only 1: assert (false = true) by auto using Huni2; only 1: discriminate; only 1: left; only 1: assumption).	18.9180040359	10156
Coq.Logic.Diaconescu.extensional_epsilon_imp_EM	40
Coq.Logic.FunctionalExtensionality.equal_f	40	0.1	search with cache (only 1: destruct 1; only 1: trivial).	0.0083110332489	12
Coq.Logic.FunctionalExtensionality.equal_f_dep	40	0.1	search with cache (only 1: destruct 1; only 1: trivial).	0.00839710235596	12
Coq.Logic.FunctionalExtensionality.functional_extensionality	40
Coq.Logic.FunctionalExtensionality.forall_extensionality	40
Coq.Logic.FunctionalExtensionality.forall_extensionalityP	40	0.1.0	search with cache (only 1: apply functional_extensionality in H; only 1: destruct H; only 1: reflexivity).	0.00735306739807	4
Coq.Logic.FunctionalExtensionality.forall_extensionalityS	40	0.0.1	search with cache (only 1: apply functional_extensionality in H; only 1: destruct H; only 1: reflexivity).	0.00720810890198	4
Coq.Logic.FunctionalExtensionality.functional_extensionality_dep_good_refl	40
Coq.Logic.FunctionalExtensionality.forall_sig_eq_rect	40
Coq.Logic.FunctionalExtensionality.forall_eq_rect_comp	40
Coq.Logic.FunctionalExtensionality.f_equal__functional_extensionality_dep_good	40
Coq.Logic.FunctionalExtensionality.f_equal__functional_extensionality_dep_good__fun	40	0.10.0.0	search with cache (only 1: apply forall_eq_rect with (H := H); only 1: clear H g; only 1: rewrite functional_extensionality_dep_good_refl; only 1: reflexivity).	0.0567739009857	159
Coq.Logic.FunctionalExtensionality.eta_expansion_dep	40	1	search with cache (only 1: reflexivity).	0.00646114349365	2
Coq.Logic.FunctionalExtensionality.eta_expansion	40	1	search with cache (only 1: reflexivity).	0.00638699531555	2
Coq.Logic.HLevels.forall_hprop	40
Coq.Logic.HLevels.and_hprop	40
Coq.Logic.HLevels.impl_hprop	40	0.0.0.0	search with cache (only 1: intros A P H p q; only 1: apply functional_extensionality_dep; only 1: intro x; only 1: apply H).	0.00427007675171	4
Coq.Logic.HLevels.false_hprop	40	2.1	search with cache (only 1: intros p q; only 1: destruct p, q).	0.0037670135498	5
Coq.Logic.HLevels.true_hprop	40
Coq.Logic.HLevels.not_hprop	40	0.0.1.0.4	search with cache (only 1: intros; only 1: intros p q; only 1: apply functional_extensionality; only 1: intros; only 1: contradiction).	0.00607991218567	19
Coq.Logic.HLevels.hset_hprop	40
Coq.Logic.HLevels.eq_trans_cancel	40
Coq.Logic.HLevels.hset_hOneType	40
Coq.Logic.HLevels.hprop_hprop	40
Coq.Logic.HLevels.hprop_hset	40
Coq.Logic.ClassicalUniqueChoice.unique_choice	40
Coq.Logic.ClassicalUniqueChoice.classic_set_in_prop_context	40
Coq.Logic.ClassicalUniqueChoice.not_not_classic_set	40
Coq.Logic.WKL.is_path_from_characterization	40
Coq.Logic.WKL.is_path_from_restrict	40
Coq.Logic.WKL.inductively_barred_at_monotone	40
Coq.Logic.WKL.inductively_barred_at_imp_is_path_from	40
Coq.Logic.WKL.is_path_from_imp_inductively_barred_at	40
Coq.Logic.WKL.find_left_path	40
Coq.Logic.WKL.Y_unique	40
Coq.Logic.WKL.Y_approx	40
Coq.Logic.WKL.PreWeakKonigsLemma	40
Coq.Logic.WKL.inductively_barred_at_decidable	40
Coq.Logic.WKL.inductively_barred_at_is_path_from_decidable	40
Coq.Logic.WKL.WeakKonigsLemma	40
Coq.Logic.Epsilon.constructive_indefinite_description	40
Coq.Logic.Epsilon.small_drinkers'_paradox	40
Coq.Logic.Epsilon.iota_statement	40
Coq.Logic.Epsilon.constructive_definite_description	40	1.0.0.0.1.1	search with cache (only 1: intros; only 1: destruct epsilon_statement with (P := P); only 1: destruct H; only 1: red in H; only 1: auto; only 1: firstorder).	0.0412888526917	11
Coq.Logic.ClassicalDescription.excluded_middle_informative	40
Coq.Logic.ClassicalDescription.classical_definite_description	40
Coq.Logic.ClassicalDescription.dependent_unique_choice	40
Coq.Logic.ClassicalDescription.unique_choice	40	0.0.4.0.2.3.0	search with cache (only 1: intros A B R H; only 1: assert (Hexuni : forall x, exists ! y, R x y); only 1: intro x; only 1: apply H; only 1: exists (fun x => proj1_sig (constructive_definite_description (R x) (Hexuni x))); only 1: intro x; only 1: apply (proj2_sig (constructive_definite_description (R x) (Hexuni x)))).	0.574815034866	507
Coq.Logic.EqdepFacts.eq_dep_sym	40	0.8	search with cache (only 1: destruct 1; only 1: auto).	0.00703597068787	29
Coq.Logic.EqdepFacts.eq_dep_trans	40	0.0	search with cache (only 1: destruct 1; only 1: auto).	0.00400400161743	2
Coq.Logic.EqdepFacts.eq_dep1_dep	40
Coq.Logic.EqdepFacts.eq_dep_dep1	40
Coq.Logic.EqdepFacts.eq_sigT_eq_dep	40
Coq.Logic.EqdepFacts.eq_dep_eq_sigT	40	1.1	search with cache (only 1: destruct 1; only 1: trivial).	0.00571990013123	8
Coq.Logic.EqdepFacts.eq_sigT_iff_eq_dep	40
Coq.Logic.EqdepFacts.eq_sig_eq_dep	40	0.1.0	search with cache (only 1: intros; only 1: dependent rewrite H; only 1: apply eq_dep_intro).	0.00574398040771	4
Coq.Logic.EqdepFacts.eq_dep_eq_sig	40	2.3.0	search with cache (only 1: intros; only 1: rewrite H; only 1: auto).	0.00997304916382	8
Coq.Logic.EqdepFacts.eq_sig_iff_eq_dep	40
Coq.Logic.EqdepFacts.eq_sigT_sig_eq	40
Coq.Logic.EqdepFacts.eq_sigT_fst	40	0.0.4.7.2	search with cache (only 1: intros; only 1: change_no_check x2 with (projT1 (existT P x2 H2)); only 1: destruct H; only 1: simpl; only 1: reflexivity).	0.0597441196442	396
Coq.Logic.EqdepFacts.eq_sigT_snd	40
Coq.Logic.EqdepFacts.eq_sig_fst	40
Coq.Logic.EqdepFacts.eq_sig_snd	40
Coq.Logic.EqdepFacts.eq_rect_eq_on__eq_dep1_eq_on	40
Coq.Logic.EqdepFacts.eq_rect_eq_on__eq_dep_eq_on	40
Coq.Logic.EqdepFacts.eq_dep_eq_on__UIP_on	40
Coq.Logic.EqdepFacts.UIP_on__UIP_refl_on	40	3.0.8	search with cache (only 1: red; only 1: intros; only 1: auto).	0.0237350463867	161
Coq.Logic.EqdepFacts.UIP_refl_on__Streicher_K_on	40	1.11.13.3.1	search with cache (only 1: intros; only 1: intro UIP; only 1: intro eq_dep_eq; only 1: rewrite H; only 1: trivial).	0.494340896606	5546
Coq.Logic.EqdepFacts.Streicher_K_on__eq_rect_eq_on	40
Coq.Logic.EqdepFacts.UIP_shift_on	40
Coq.Logic.EqdepFacts.eq_dep_eq_on__inj_pair2_on	40
Coq.Logic.EqdepFacts.f_eq_dep	40	2.1	search with cache (only 1: destruct 1; only 1: auto).	0.00750279426575	14
Coq.Logic.EqdepFacts.eq_dep_non_dep	40	0.6.0	search with cache (only 1: intros A x y z H1 H2; only 1: intros * []; only 1: trivial).	0.00788021087646	16
Coq.Logic.EqdepFacts.f_eq_dep_non_dep	40	1.0	search with cache (only 1: intros * []; only 1: reflexivity).	0.00454807281494	3
Coq.Logic.PropExtensionalityFacts.PredExt_imp_PropExt	40
Coq.Logic.PropExtensionalityFacts.PredExt_imp_PropFunExt	40
Coq.Logic.PropExtensionalityFacts.PropExt_and_PropFunExt_imp_PredExt	40
Coq.Logic.PropExtensionalityFacts.PropExt_and_PropFunExt_iff_PredExt	40
Coq.Logic.PropExtensionalityFacts.PropExt_imp_ProvPropExt	40
Coq.Logic.PropExtensionalityFacts.PropExt_imp_RefutPropExt	40	9.10.1.2.0.2	search with cache (only 1: intros Ext A Ha; only 1: apply Ext; only 1: split; only 1: trivial; only 1: intro H; only 1: destruct H).	0.310503959656	3644
Coq.Logic.IndefiniteDescription.constructive_definite_description	40
Coq.Logic.IndefiniteDescription.functional_choice	40
Coq.Logic.Berardi.AC_IF	40
Coq.Logic.Berardi.AC	40	5.9.10.5	search with cache (only 1: intro H; only 1: intros; only 1: destruct H; only 1: auto).	1.65519976616	11903
Coq.Logic.Berardi.L1	40
Coq.Logic.Berardi.retract_pow_U_U	40
Coq.Logic.Berardi.not_has_fixpoint	40
Coq.Logic.Berardi.classical_proof_irrelevance	40
Coq.Logic.ClassicalEpsilon.constructive_definite_description	40
Coq.Logic.ClassicalEpsilon.excluded_middle_informative	40
Coq.Logic.ClassicalEpsilon.classical_indefinite_description	40
Coq.Logic.ClassicalEpsilon.epsilon_inh_irrelevance	40
Coq.Logic.ClassicalEpsilon.choice	40
Coq.Logic.Decidable.dec_not_not	40	0.3.6.2.4.0	search with cache (only 1: unfold not; only 1: destruct 1; only 1: auto; only 1: intro H1; only 1: elim H1; only 1: auto).	0.0803718566895	909
Coq.Logic.Decidable.dec_True	40	3.0.4	search with cache (only 1: unfold decidable; only 1: unfold not; only 1: tauto).	0.00423502922058	10
Coq.Logic.Decidable.dec_False	40	0.0	search with cache (only 1: unfold decidable; only 1: auto).	0.00298500061035	2
Coq.Logic.Decidable.dec_or	40	0.2	search with cache (only 1: unfold decidable; only 1: tauto).	0.018383026123	67
Coq.Logic.Decidable.dec_and	40	0.3	search with cache (only 1: unfold decidable; only 1: tauto).	0.0192451477051	41
Coq.Logic.Decidable.dec_not	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.00575613975525	2
Coq.Logic.Decidable.dec_imp	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.00999093055725	2
Coq.Logic.Decidable.dec_iff	40	3.4	search with cache (only 1: unfold decidable; only 1: tauto).	0.0175378322601	17
Coq.Logic.Decidable.not_not	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.00539207458496	2
Coq.Logic.Decidable.not_or	40	0	search with cache (only 1: tauto).	0.00549507141113	1
Coq.Logic.Decidable.not_and	40	0.1	search with cache (only 1: unfold decidable; only 1: tauto).	0.0113790035248	3
Coq.Logic.Decidable.not_imp	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0102591514587	2
Coq.Logic.Decidable.imp_simp	40	0.1	search with cache (only 1: unfold decidable; only 1: tauto).	0.0665678977966	3
Coq.Logic.Decidable.not_iff	40	0.3	search with cache (only 1: unfold decidable; only 1: tauto).	0.0673818588257	30
Coq.Logic.Decidable.not_true_iff	40	8	search with cache (only 1: tauto).	0.00604891777039	12
Coq.Logic.Decidable.not_false_iff	40	0	search with cache (only 1: tauto).	0.00388503074646	1
Coq.Logic.Decidable.not_not_iff	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.00634098052979	2
Coq.Logic.Decidable.contrapositive	40	0.1	search with cache (only 1: unfold decidable; only 1: tauto).	0.00847816467285	3
Coq.Logic.Decidable.or_not_l_iff_1	40	0.1	search with cache (only 1: unfold decidable; only 1: tauto).	0.0163481235504	27
Coq.Logic.Decidable.or_not_l_iff_2	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0105230808258	2
Coq.Logic.Decidable.or_not_r_iff_1	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0102570056915	2
Coq.Logic.Decidable.or_not_r_iff_2	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0109088420868	2
Coq.Logic.Decidable.imp_not_l	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0117969512939	2
Coq.Logic.Decidable.not_or_iff	40	4.0	search with cache (only 1: intros; only 1: tauto).	0.0361230373383	36
Coq.Logic.Decidable.not_and_iff	40	4.1	search with cache (only 1: intros; only 1: tauto).	0.0109288692474	23
Coq.Logic.Decidable.not_imp_iff	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0144228935242	2
Coq.Logic.Decidable.not_imp_rev_iff	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0142798423767	2
Coq.Logic.Decidable.dec_functional_relation	40
Coq.Logic.WeakFan.Y_unique	40
Coq.Logic.WeakFan.Y_approx	40	0.16.2.0.6	search with cache (only 1: induction l as [| v l IHl]; only 1: auto; only 1: simpl; only 1: fix gcd_divide 1; only 1: firstorder).	12.4542350769	17206
Coq.Logic.WeakFan.WeakFanTheorem	40
Coq.MSets.MSetRBT.MakeRaw.singleton_spec	40
Coq.MSets.MSetRBT.MakeRaw.singleton_ok	40	0.18	search with cache (only 1: unfold singleton; only 1: auto).	0.0591778755188	165
Coq.MSets.MSetRBT.MakeRaw.makeBlack_spec	40
Coq.MSets.MSetRBT.MakeRaw.makeRed_spec	40	1.0.0.0	search with cache (only 1: destruct s; only 1: intuition_in; only 1: simpl; only 1: intuition_in).	0.0670351982117	5
Coq.MSets.MSetRBT.MakeRaw.makeBlack_ok	40	9.1.0.9	search with cache (only 1: induction s; only 1: auto; only 1: simpl; only 1: intuition_in).	7.39759206772	794
Coq.MSets.MSetRBT.MakeRaw.makeRed_ok	40	1.0.0.1	search with cache (only 1: destruct s; only 1: ok; only 1: simpl; only 1: ok).	0.03178191185	6
Coq.MSets.MSetRBT.MakeRaw.rmatch	40
Coq.MSets.MSetRBT.MakeRaw.rrmatch	40
Coq.MSets.MSetRBT.MakeRaw.rrmatch'	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: destruct t as [| [| ] l x r]; only 1: simpl; only 1: now constructor; only 1: simpl; only 1: destruct l as [| [| ] ll lx lr], r as [| [| ] rl rx rr]; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: simpl; only 1: now constructor).	0.570750951767	606
Coq.MSets.MSetRBT.MakeRaw.lbal_match	40
Coq.MSets.MSetRBT.MakeRaw.rbal_match	40	0	search with cache (only 1: exact (rrmatch _ _ _)).	0.0157361030579	1
Coq.MSets.MSetRBT.MakeRaw.rbal'_match	40
Coq.MSets.MSetRBT.MakeRaw.lbalS_match	40
Coq.MSets.MSetRBT.MakeRaw.rbalS_match	40	0	search with cache (only 1: exact (rmatch _ _ _)).	0.0161809921265	1
Coq.MSets.MSetRBT.MakeRaw.lbal_spec	40
Coq.MSets.MSetRBT.MakeRaw.lbal_ok	40
Coq.MSets.MSetRBT.MakeRaw.rbal_spec	40
Coq.MSets.MSetRBT.MakeRaw.rbal_ok	40
Coq.MSets.MSetRBT.MakeRaw.rbal'_spec	40
Coq.MSets.MSetRBT.MakeRaw.rbal'_ok	40
Coq.MSets.MSetRBT.MakeRaw.ins_spec	40
Coq.MSets.MSetRBT.MakeRaw.ins_ok	40
Coq.MSets.MSetRBT.MakeRaw.add_spec'	40
Coq.MSets.MSetRBT.MakeRaw.add_spec	40	0.0	search with cache (only 1: unfold add; only 1: now autorew).	0.044490814209	2
Coq.MSets.MSetRBT.MakeRaw.add_ok	40	3	search with cache (only 1: eauto with *).	0.134471178055	23
Coq.MSets.MSetRBT.MakeRaw.lbalS_spec	40
Coq.MSets.MSetRBT.MakeRaw.lbalS_ok	40
Coq.MSets.MSetRBT.MakeRaw.rbalS_spec	40
Coq.MSets.MSetRBT.MakeRaw.rbalS_ok	40
Coq.MSets.MSetRBT.MakeRaw.append_rr_match	40	0	search with cache (only 1: exact (rmatch _ _ _)).	0.0172770023346	1
Coq.MSets.MSetRBT.MakeRaw.append_bb_match	40	0	search with cache (only 1: exact (rmatch _ _ _)).	0.0170249938965	1
Coq.MSets.MSetRBT.MakeRaw.append_spec	40
Coq.MSets.MSetRBT.MakeRaw.append_ok	40
Coq.MSets.MSetRBT.MakeRaw.del_spec	40
Coq.MSets.MSetRBT.MakeRaw.del_ok	40
Coq.MSets.MSetRBT.MakeRaw.remove_spec	40
Coq.MSets.MSetRBT.MakeRaw.remove_ok	40	4	search with cache (only 1: ok).	0.439707040787	39
Coq.MSets.MSetRBT.MakeRaw.delmin_spec	40
Coq.MSets.MSetRBT.MakeRaw.remove_min_spec1	40
Coq.MSets.MSetRBT.MakeRaw.remove_min_spec2	40
Coq.MSets.MSetRBT.MakeRaw.remove_min_ok	40
Coq.MSets.MSetRBT.MakeRaw.treeify_zero_spec	40	9	search with cache (only 1: now simpl).	0.0275011062622	10
Coq.MSets.MSetRBT.MakeRaw.treeify_one_spec	40	1.0.1.0.22.35.29	search with cache (only 1: intros n; only 1: pattern n; only 1: induction n as [| k iHk]; only 1: simpl; only 1: Nat.order'; only 1: simpl; only 1: auto).	8.04070878029	27130
Coq.MSets.MSetRBT.MakeRaw.treeify_cont_spec	40
Coq.MSets.MSetRBT.MakeRaw.treeify_aux_spec	40
Coq.MSets.MSetRBT.MakeRaw.plength_aux_spec	40
Coq.MSets.MSetRBT.MakeRaw.plength_spec	40
Coq.MSets.MSetRBT.MakeRaw.treeify_elements	40
Coq.MSets.MSetRBT.MakeRaw.treeify_spec	40
Coq.MSets.MSetRBT.MakeRaw.treeify_ok	40
Coq.MSets.MSetRBT.MakeRaw.filter_aux_elements	40
Coq.MSets.MSetRBT.MakeRaw.filter_elements	40
Coq.MSets.MSetRBT.MakeRaw.filter_spec	40
Coq.MSets.MSetRBT.MakeRaw.filter_ok	40
Coq.MSets.MSetRBT.MakeRaw.partition_aux_spec	40
Coq.MSets.MSetRBT.MakeRaw.partition_spec	40
Coq.MSets.MSetRBT.MakeRaw.partition_spec1	40	1.11	search with cache (only 1: unfold partition, filter; only 1: now rewrite partition_aux_spec).	0.534656047821	86
Coq.MSets.MSetRBT.MakeRaw.partition_spec2	40	0.1	search with cache (only 1: unfold partition, filter; only 1: now rewrite partition_aux_spec).	0.0514841079712	3
Coq.MSets.MSetRBT.MakeRaw.partition_ok1	40
Coq.MSets.MSetRBT.MakeRaw.partition_ok2	40	0.0	search with cache (only 1: rewrite partition_spec; only 1: now apply filter_ok).	0.0218639373779	2
Coq.MSets.MSetRBT.MakeRaw.INV_init	40
Coq.MSets.MSetRBT.MakeRaw.INV_sym	40
Coq.MSets.MSetRBT.MakeRaw.INV_drop	40
Coq.MSets.MSetRBT.MakeRaw.INV_eq	40
Coq.MSets.MSetRBT.MakeRaw.INV_lt	40
Coq.MSets.MSetRBT.MakeRaw.INV_rev	40
Coq.MSets.MSetRBT.MakeRaw.union_list_ok	40
Coq.MSets.MSetRBT.MakeRaw.linear_union_ok	40
Coq.MSets.MSetRBT.MakeRaw.fold_add_ok	40
Coq.MSets.MSetRBT.MakeRaw.union_ok	40
Coq.MSets.MSetRBT.MakeRaw.union_list_spec	40
Coq.MSets.MSetRBT.MakeRaw.linear_union_spec	40
Coq.MSets.MSetRBT.MakeRaw.fold_add_spec	40
Coq.MSets.MSetRBT.MakeRaw.union_spec'	40
Coq.MSets.MSetRBT.MakeRaw.union_spec	40
Coq.MSets.MSetRBT.MakeRaw.inter_list_ok	40
Coq.MSets.MSetRBT.MakeRaw.linear_inter_ok	40
Coq.MSets.MSetRBT.MakeRaw.inter_ok	40
Coq.MSets.MSetRBT.MakeRaw.inter_list_spec	40
Coq.MSets.MSetRBT.MakeRaw.linear_inter_spec	40
Coq.MSets.MSetRBT.MakeRaw.mem_proper	40
Coq.MSets.MSetRBT.MakeRaw.inter_spec	40
Coq.MSets.MSetRBT.MakeRaw.diff_list_ok	40
Coq.MSets.MSetRBT.MakeRaw.diff_inter_ok	40
Coq.MSets.MSetRBT.MakeRaw.fold_remove_ok	40	0.0.0.1.0.0.0.0	search with cache (only 1: rewrite fold_spec, <- fold_left_rev_right; only 1: unfold elt in *; only 1: induction (rev (elements s1)); only 1: simpl; only 1: auto_tc; only 1: simpl; only 1: unfold flip in *; only 1: auto_tc).	0.0392560958862	9
Coq.MSets.MSetRBT.MakeRaw.diff_ok	40
Coq.MSets.MSetRBT.MakeRaw.diff_list_spec	40
Coq.MSets.MSetRBT.MakeRaw.linear_diff_spec	40
Coq.MSets.MSetRBT.MakeRaw.fold_remove_spec	40
Coq.MSets.MSetRBT.MakeRaw.diff_spec	40
Coq.MSets.MSetRBT.BalanceProps.rr_nrr_rb	40
Coq.MSets.MSetRBT.BalanceProps.arb_nrr_rb	40	3.5.25	search with cache (only 1: destruct 1; only 1: tauto; only 1: auto).	14.4242091179	19737
Coq.MSets.MSetRBT.BalanceProps.arb_nr_rb	40
Coq.MSets.MSetRBT.BalanceProps.rb_maxdepth	40
Coq.MSets.MSetRBT.BalanceProps.rb_mindepth	40
Coq.MSets.MSetRBT.BalanceProps.maxdepth_upperbound	40
Coq.MSets.MSetRBT.BalanceProps.maxdepth_lowerbound	40	0.0.0.0.0.0.1.0	search with cache (only 1: intros H; only 1: apply Nat.log2_lt_pow2; only 1: destruct s; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: apply maxdepth_cardinal).	0.0378057956696	9
Coq.MSets.MSetRBT.BalanceProps.singleton_rb	40	18.8.0	search with cache (only 1: unfold singleton; only 1: red; only 1: ok).	0.355179071426	928
Coq.MSets.MSetRBT.BalanceProps.makeBlack_rb	40
Coq.MSets.MSetRBT.BalanceProps.makeRed_rr	40	3.3.0.3.1	search with cache (only 1: destruct t; only 1: invrb; only 1: simpl; only 1: invrb; only 1: auto).	0.871794939041	516
Coq.MSets.MSetRBT.BalanceProps.lbal_rb	40	4.28.8	search with cache (only 1: revert n; only 1: fix le_div2 1; only 1: trivial).	11.0424590111	12780
Coq.MSets.MSetRBT.BalanceProps.rbal_rb	40
Coq.MSets.MSetRBT.BalanceProps.rbal'_rb	40	4.1.0.0.0.0.1.0.0.0.0.10	search with cache (only 1: case rbal'_match; only 1: intros; only 1: desarb; only 1: invrb; only 1: invrb; only 1: auto; only 1: intros; only 1: desarb; only 1: invrb; only 1: invrb; only 1: auto; only 1: intuition_in).	6.15764498711	2447
Coq.MSets.MSetRBT.BalanceProps.lbalS_rb	40
Coq.MSets.MSetRBT.BalanceProps.lbalS_arb	40
Coq.MSets.MSetRBT.BalanceProps.rbalS_rb	40
Coq.MSets.MSetRBT.BalanceProps.rbalS_arb	40
Coq.MSets.MSetRBT.BalanceProps.ifred_notred	40	3.1.12.0.3.8	search with cache (only 1: destruct s; only 1: now constructor; only 1: simpl; only 1: descolor; only 1: intuition; only 1: firstorder).	39.7472879887	69737
Coq.MSets.MSetRBT.BalanceProps.ifred_or	40	0.0.0.0.1.0.1.0	search with cache (only 1: destruct s; only 1: simpl; only 1: auto; only 1: descolor; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).	0.0480380058289	18
Coq.MSets.MSetRBT.BalanceProps.ins_rr_rb	40
Coq.MSets.MSetRBT.BalanceProps.ins_arb	40
Coq.MSets.MSetRBT.BalanceProps.add_rb	40
Coq.MSets.MSetRBT.BalanceProps.append_arb_rb	40
Coq.MSets.MSetRBT.BalanceProps.del_arb	40	11	search with cache (only 1: auto_tc).	0.672059059143	272
Coq.MSets.MSetRBT.BalanceProps.remove_rb	40
Coq.MSets.MSetRBT.BalanceProps.treeify_zero_rb	40	0.0	search with cache (only 1: intro; only 1: auto).	0.025200843811	2
Coq.MSets.MSetRBT.BalanceProps.treeify_one_rb	40	0.1.1.1.0	search with cache (only 1: intros [| x acc]; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: auto).	0.0424098968506	8
Coq.MSets.MSetRBT.BalanceProps.treeify_cont_rb	40
Coq.MSets.MSetRBT.BalanceProps.treeify_aux_rb	40
Coq.MSets.MSetRBT.BalanceProps.treeify_rb	40
Coq.MSets.MSetRBT.BalanceProps.filter_rb	40	1.4	search with cache (only 1: unfold filter; only 1: auto_tc).	0.0280430316925	7
Coq.MSets.MSetRBT.BalanceProps.partition_rb1	40	0.1.1.0	search with cache (only 1: rewrite partition_spec; only 1: unfold partition, filter; only 1: simpl; only 1: auto_tc).	0.0322489738464	6
Coq.MSets.MSetRBT.BalanceProps.partition_rb2	40	0.0.0.0	search with cache (only 1: unfold partition; only 1: destruct partition_aux; only 1: simpl; only 1: auto_tc).	0.0318830013275	4
Coq.MSets.MSetRBT.BalanceProps.fold_add_rb	40	0.0.0.0.0.0.0.0	search with cache (only 1: rewrite fold_spec, <- fold_left_rev_right; only 1: unfold elt in *; only 1: induction (rev (elements s1)); only 1: simpl; only 1: auto_tc; only 1: simpl; only 1: unfold flip in *; only 1: auto_tc).	0.0452239513397	8
Coq.MSets.MSetRBT.BalanceProps.fold_remove_rb	40	0.0.0.1.0.0.0.1	search with cache (only 1: rewrite fold_spec, <- fold_left_rev_right; only 1: unfold elt in *; only 1: induction (rev (elements s1)); only 1: simpl; only 1: auto_tc; only 1: simpl; only 1: unfold flip in *; only 1: auto_tc).	0.109397888184	65
Coq.MSets.MSetRBT.BalanceProps.union_rb	40
Coq.MSets.MSetRBT.BalanceProps.inter_rb	40	0.0.0.0.0.0	search with cache (only 1: unfold inter; only 1: destruct compare_height; only 1: unfold linear_inter; only 1: auto_tc; only 1: auto_tc; only 1: auto_tc).	0.0377459526062	6
Coq.MSets.MSetRBT.BalanceProps.diff_rb	40
Coq.MSets.MSetRBT.Make.remove_min_spec1	40
Coq.MSets.MSetRBT.Make.remove_min_spec2	40
Coq.MSets.MSetPositive.PositiveSet.In_compat	40	1.12	search with cache (only 1: intros x x' Hxx' l l' Hll'; only 1: now f_equiv).	1.48174309731	858
Coq.MSets.MSetPositive.PositiveSet.eq_equiv	40	4	search with cache (only 1: firstorder).	0.0440790653229	25
Coq.MSets.MSetPositive.PositiveSet.mem_spec	40	5.1.0	search with cache (only 1: intros; only 1: symmetry; only 1: easy').	0.023138999939	18
Coq.MSets.MSetPositive.PositiveSet.mem_Leaf	40	0	search with cache (only 1: trivial).	0.00935506820679	1
Coq.MSets.MSetPositive.PositiveSet.empty_spec	40	0	search with cache (only 1: firstorder).	0.00915503501892	1
Coq.MSets.MSetPositive.PositiveSet.mem_node	40
Coq.MSets.MSetPositive.PositiveSet.is_empty_spec	40	1.11	search with cache (only 1: fix odd_spec 1; only 1: intuition).	0.774500131607	236
Coq.MSets.MSetPositive.PositiveSet.subset_Leaf_s	40	1.1.0.3.2.4	search with cache (only 1: intros n; only 1: repeat red; only 1: unfold In; only 1: intro; only 1: rewrite mem_Leaf; only 1: easy).	0.734033107758	294
Coq.MSets.MSetPositive.PositiveSet.subset_spec	40	1.9	search with cache (only 1: fix even_spec 1; only 1: intuition).	0.788975954056	171
Coq.MSets.MSetPositive.PositiveSet.equal_subset	40
Coq.MSets.MSetPositive.PositiveSet.equal_spec	40
Coq.MSets.MSetPositive.PositiveSet.eq_dec	40	1.5.11.21	search with cache (only 1: left; only 1: repeat red; only 1: fix gcd_divide 1; only 1: firstorder).	4.45638895035	7128
Coq.MSets.MSetPositive.PositiveSet.lex_Opp	40
Coq.MSets.MSetPositive.PositiveSet.compare_bool_inv	40	0.0.0.0.0.0.0.0.1.43	search with cache (only 1: intros n m; only 1: destruct n, m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	1.78549408913	5764
Coq.MSets.MSetPositive.PositiveSet.compare_inv	40
Coq.MSets.MSetPositive.PositiveSet.lex_Eq	40	1.0.0.1.0.0.0.1.0.2.8	search with cache (only 1: intros n m; only 1: revert m; only 1: induction n; only 1: intros; only 1: intuition; only 1: intros; only 1: intuition; only 1: easy; only 1: intros; only 1: intuition; only 1: congruence).	4.25293493271	4008
Coq.MSets.MSetPositive.PositiveSet.compare_bool_Eq	40	1.0.0.1.5	search with cache (only 1: destr_bool; only 1: easy'; only 1: easy'; only 1: easy'; only 1: easy').	0.334290027618	119
Coq.MSets.MSetPositive.PositiveSet.compare_equal	40
Coq.MSets.MSetPositive.PositiveSet.compare_gt	40
Coq.MSets.MSetPositive.PositiveSet.compare_eq	40
Coq.MSets.MSetPositive.PositiveSet.compare_spec	40
Coq.MSets.MSetPositive.PositiveSet.ct_cxe	40	12.7.6.6	search with cache (only 1: induction x; only 1: constructor; only 1: constructor; only 1: constructor).	0.847702026367	2888
Coq.MSets.MSetPositive.PositiveSet.ct_xce	40	0.0.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0155110359192	4
Coq.MSets.MSetPositive.PositiveSet.ct_lxl	40	0.0.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0149569511414	4
Coq.MSets.MSetPositive.PositiveSet.ct_gxg	40	0.0.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0158009529114	4
Coq.MSets.MSetPositive.PositiveSet.ct_xll	40	0.0.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0142278671265	4
Coq.MSets.MSetPositive.PositiveSet.ct_xgg	40	0.0.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0144588947296	4
Coq.MSets.MSetPositive.PositiveSet.ct_lex	40
Coq.MSets.MSetPositive.PositiveSet.ct_compare_bool	40
Coq.MSets.MSetPositive.PositiveSet.compare_x_Leaf	40	1.0.20	search with cache (only 1: intros [| l' o' r']; only 1: trivial; only 1: trivial).	0.857069015503	1730
Coq.MSets.MSetPositive.PositiveSet.compare_empty_x	40
Coq.MSets.MSetPositive.PositiveSet.compare_x_empty	40
Coq.MSets.MSetPositive.PositiveSet.ct_compare	40
Coq.MSets.MSetPositive.PositiveSet.lt_strorder	40
Coq.MSets.MSetPositive.PositiveSet.compare_compat_1	40
Coq.MSets.MSetPositive.PositiveSet.compare_compat	40
Coq.MSets.MSetPositive.PositiveSet.lt_compat	40	0.0.7.2	search with cache (only 1: repeat red; only 1: fix gcd_divide 1; only 1: intros; only 1: auto).	1.45791506767	527
Coq.MSets.MSetPositive.PositiveSet.add_spec	40
Coq.MSets.MSetPositive.PositiveSet.remove_spec	40
Coq.MSets.MSetPositive.PositiveSet.singleton_spec	40
Coq.MSets.MSetPositive.PositiveSet.union_spec	40
Coq.MSets.MSetPositive.PositiveSet.inter_spec	40
Coq.MSets.MSetPositive.PositiveSet.diff_spec	40
Coq.MSets.MSetPositive.PositiveSet.fold_spec	40
Coq.MSets.MSetPositive.PositiveSet.cardinal_spec	40
Coq.MSets.MSetPositive.PositiveSet.xfilter_spec	40
Coq.MSets.MSetPositive.PositiveSet.filter_spec	40
Coq.MSets.MSetPositive.PositiveSet.xforall_spec	40
Coq.MSets.MSetPositive.PositiveSet.for_all_spec	40
Coq.MSets.MSetPositive.PositiveSet.xexists_spec	40
Coq.MSets.MSetPositive.PositiveSet.exists_spec	40
Coq.MSets.MSetPositive.PositiveSet.partition_filter	40
Coq.MSets.MSetPositive.PositiveSet.partition_spec1	40
Coq.MSets.MSetPositive.PositiveSet.partition_spec2	40	0.3.2	search with cache (only 1: intros; only 1: rewrite partition_filter; only 1: reflexivity).	0.112624168396	66
Coq.MSets.MSetPositive.PositiveSet.xelements_spec	40
Coq.MSets.MSetPositive.PositiveSet.elements_spec1	40
Coq.MSets.MSetPositive.PositiveSet.lt_rev_append	40
Coq.MSets.MSetPositive.PositiveSet.elements_spec2	40
Coq.MSets.MSetPositive.PositiveSet.elements_spec2w	40
Coq.MSets.MSetPositive.PositiveSet.choose_spec1	40
Coq.MSets.MSetPositive.PositiveSet.choose_spec2	40
Coq.MSets.MSetPositive.PositiveSet.choose_empty	40
Coq.MSets.MSetPositive.PositiveSet.choose_spec3'	40
Coq.MSets.MSetPositive.PositiveSet.choose_spec3	40
Coq.MSets.MSetPositive.PositiveSet.min_elt_spec1	40
Coq.MSets.MSetPositive.PositiveSet.min_elt_spec3	40
Coq.MSets.MSetPositive.PositiveSet.min_elt_spec2	40
Coq.MSets.MSetPositive.PositiveSet.max_elt_spec1	40
Coq.MSets.MSetPositive.PositiveSet.max_elt_spec3	40
Coq.MSets.MSetPositive.PositiveSet.max_elt_spec2	40
Coq.MSets.MSetFacts.WFactsOn.In_1	40
Coq.MSets.MSetFacts.WFactsOn.mem_1	40
Coq.MSets.MSetFacts.WFactsOn.mem_2	40
Coq.MSets.MSetFacts.WFactsOn.equal_1	40
Coq.MSets.MSetFacts.WFactsOn.equal_2	40
Coq.MSets.MSetFacts.WFactsOn.subset_1	40
Coq.MSets.MSetFacts.WFactsOn.subset_2	40
Coq.MSets.MSetFacts.WFactsOn.is_empty_1	40
Coq.MSets.MSetFacts.WFactsOn.is_empty_2	40
Coq.MSets.MSetFacts.WFactsOn.add_1	40
Coq.MSets.MSetFacts.WFactsOn.add_2	40	0.2.1	search with cache (only 1: intros; only 1: apply <- add_spec; only 1: auto).	0.014317035675	6
Coq.MSets.MSetFacts.WFactsOn.add_3	40
Coq.MSets.MSetFacts.WFactsOn.remove_1	40
Coq.MSets.MSetFacts.WFactsOn.remove_2	40
Coq.MSets.MSetFacts.WFactsOn.remove_3	40	0.6	search with cache (only 1: rewrite remove_spec; only 1: intuition).	0.0314059257507	27
Coq.MSets.MSetFacts.WFactsOn.singleton_1	40
Coq.MSets.MSetFacts.WFactsOn.singleton_2	40	0.0	search with cache (only 1: rewrite singleton_spec; only 1: auto with relations).	0.0150759220123	2
Coq.MSets.MSetFacts.WFactsOn.union_1	40
Coq.MSets.MSetFacts.WFactsOn.union_2	40	1.1	search with cache (only 1: rewrite union_spec; only 1: auto).	0.0158128738403	4
Coq.MSets.MSetFacts.WFactsOn.union_3	40	0.0	search with cache (only 1: rewrite union_spec; only 1: auto).	0.0829341411591	2
Coq.MSets.MSetFacts.WFactsOn.inter_1	40
Coq.MSets.MSetFacts.WFactsOn.inter_2	40	0.0	search with cache (only 1: rewrite inter_spec; only 1: intuition).	0.0146608352661	2
Coq.MSets.MSetFacts.WFactsOn.inter_3	40	0.0	search with cache (only 1: rewrite inter_spec; only 1: intuition).	0.0175828933716	2
Coq.MSets.MSetFacts.WFactsOn.diff_1	40
Coq.MSets.MSetFacts.WFactsOn.diff_2	40	0.4	search with cache (only 1: rewrite diff_spec; only 1: intuition).	0.0715680122375	15
Coq.MSets.MSetFacts.WFactsOn.diff_3	40	0.0	search with cache (only 1: rewrite diff_spec; only 1: intuition).	0.0182189941406	2
Coq.MSets.MSetFacts.WFactsOn.filter_1	40
Coq.MSets.MSetFacts.WFactsOn.filter_2	40	0.0.3.1	search with cache (only 1: intros P; only 1: rewrite filter_spec; only 1: intuition; only 1: intuition).	0.123363018036	24
Coq.MSets.MSetFacts.WFactsOn.filter_3	40	0.0.1.0	search with cache (only 1: intros P; only 1: rewrite filter_spec; only 1: intuition; only 1: intuition).	0.023068189621	5
Coq.MSets.MSetFacts.WFactsOn.for_all_1	40
Coq.MSets.MSetFacts.WFactsOn.for_all_2	40
Coq.MSets.MSetFacts.WFactsOn.exists_1	40
Coq.MSets.MSetFacts.WFactsOn.exists_2	40
Coq.MSets.MSetFacts.WFactsOn.elements_1	40
Coq.MSets.MSetFacts.WFactsOn.elements_2	40
Coq.MSets.MSetFacts.WFactsOn.In_eq_iff	40	1.0.1	search with cache (only 1: intros E; only 1: rewrite E; only 1: intuition).	0.0160667896271	5
Coq.MSets.MSetFacts.WFactsOn.mem_iff	40	0.2.1.0.0	search with cache (only 1: split; only 1: apply <- mem_spec; only 1: intros; only 1: apply -> mem_spec; only 1: auto).	0.0234389305115	8
Coq.MSets.MSetFacts.WFactsOn.not_mem_iff	40
Coq.MSets.MSetFacts.WFactsOn.equal_iff	40	0.1.0.0.2.0.0	search with cache (only 1: split; only 1: intros; only 1: apply <- equal_spec; only 1: auto; only 1: intros; only 1: apply -> equal_spec; only 1: auto).	0.0277919769287	10
Coq.MSets.MSetFacts.WFactsOn.subset_iff	40	0.2.1.0.2	search with cache (only 1: split; only 1: apply <- subset_spec; only 1: intros; only 1: apply -> subset_spec; only 1: auto).	0.0266931056976	10
Coq.MSets.MSetFacts.WFactsOn.empty_iff	40
Coq.MSets.MSetFacts.WFactsOn.is_empty_iff	40	3	search with cache (only 1: intuition).	0.0211448669434	4
Coq.MSets.MSetFacts.WFactsOn.singleton_iff	40	0	search with cache (only 1: intuition).	0.01154088974	1
Coq.MSets.MSetFacts.WFactsOn.add_iff	40	0.8	search with cache (only 1: rewrite add_spec; only 1: intuition).	0.102409124374	33
Coq.MSets.MSetFacts.WFactsOn.add_neq_iff	40	0.18.1.0	search with cache (only 1: rewrite add_spec; only 1: intuition; only 1: elim H; only 1: auto with relations).	2.35919618607	2653
Coq.MSets.MSetFacts.WFactsOn.remove_iff	40
Coq.MSets.MSetFacts.WFactsOn.remove_neq_iff	40	0.1.0	search with cache (only 1: intros; only 1: rewrite remove_spec; only 1: intuition).	0.0170910358429	4
Coq.MSets.MSetFacts.WFactsOn.for_all_iff	40	2.0	search with cache (only 1: intros; only 1: intuition).	0.0252940654755	4
Coq.MSets.MSetFacts.WFactsOn.exists_iff	40	4.0	search with cache (only 1: intros; only 1: intuition).	0.0279159545898	6
Coq.MSets.MSetFacts.WFactsOn.elements_iff	40	5	search with cache (only 1: intuition).	0.0163779258728	6
Coq.MSets.MSetFacts.WFactsOn.mem_b	40
Coq.MSets.MSetFacts.WFactsOn.empty_b	40
Coq.MSets.MSetFacts.WFactsOn.add_b	40
Coq.MSets.MSetFacts.WFactsOn.add_neq_b	40	1.1.0.1.0.0.0.2	search with cache (only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_iff s x y); only 1: destruct (mem y s); only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition).	8.07178711891	1789
Coq.MSets.MSetFacts.WFactsOn.remove_b	40
Coq.MSets.MSetFacts.WFactsOn.remove_neq_b	40	1.1.0.2.0.4	search with cache (only 1: generalize (mem_iff (remove x s) y), (mem_iff s y), (remove_iff s x y); only 1: destruct (mem y s); only 1: intuition; only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition).	14.4538989067	3552
Coq.MSets.MSetFacts.WFactsOn.singleton_b	40
Coq.MSets.MSetFacts.WFactsOn.union_b	40
Coq.MSets.MSetFacts.WFactsOn.inter_b	40
Coq.MSets.MSetFacts.WFactsOn.diff_b	40
Coq.MSets.MSetFacts.WFactsOn.elements_b	40
Coq.MSets.MSetFacts.WFactsOn.filter_b	40
Coq.MSets.MSetFacts.WFactsOn.for_all_b	40
Coq.MSets.MSetFacts.WFactsOn.exists_b	40
Coq.MSets.MSetFacts.WFactsOn.In_m	40
Coq.MSets.MSetFacts.WFactsOn.Empty_m	40	2.0	search with cache (only 1: unfold Equal; only 1: firstorder).	0.012955904007	4
Coq.MSets.MSetFacts.WFactsOn.is_empty_m	40
Coq.MSets.MSetFacts.WFactsOn.mem_m	40
Coq.MSets.MSetFacts.WFactsOn.singleton_m	40
Coq.MSets.MSetFacts.WFactsOn.add_m	40
Coq.MSets.MSetFacts.WFactsOn.remove_m	40
Coq.MSets.MSetFacts.WFactsOn.union_m	40
Coq.MSets.MSetFacts.WFactsOn.inter_m	40	13.3.3.1	search with cache (only 1: intros x x' Hx s s' Hs a; only 1: rewrite inter_spec; only 1: rewrite inter_spec; only 1: now f_equiv).	12.1969928741	4425
Coq.MSets.MSetFacts.WFactsOn.diff_m	40
Coq.MSets.MSetFacts.WFactsOn.Subset_m	40	3.0	search with cache (only 1: unfold Equal; only 1: firstorder).	0.0876488685608	19
Coq.MSets.MSetFacts.WFactsOn.subset_m	40
Coq.MSets.MSetFacts.WFactsOn.equal_m	40
Coq.MSets.MSetFacts.WFactsOn.SubsetSetoid	40	4.2.0	search with cache (only 1: split; only 1: congruence; only 1: firstorder).	0.0173699855804	9
Coq.MSets.MSetFacts.WFactsOn.In_s_m	40
Coq.MSets.MSetFacts.WFactsOn.Empty_s_m	40	0.0.1.1.1	search with cache (only 1: repeat red; only 1: unfold Empty; only 1: intros s s' E; only 1: setoid_rewrite E; only 1: auto).	0.0582330226898	8
Coq.MSets.MSetFacts.WFactsOn.add_s_m	40	0.0.0	search with cache (only 1: intros x x' Hx s s' Hs a; only 1: rewrite !add_iff, Hx, Hs; only 1: auto).	0.041720867157	3
Coq.MSets.MSetFacts.WFactsOn.remove_s_m	40	0.1.0	search with cache (only 1: intros x x' Hx s s' Hs a; only 1: rewrite !remove_iff, Hx, Hs; only 1: intuition).	0.0430109500885	4
Coq.MSets.MSetFacts.WFactsOn.union_s_m	40	0.0.0	search with cache (only 1: intros s1 s1' Hs1 s2 s2' Hs2 a; only 1: rewrite !union_spec, Hs1, Hs2; only 1: intuition).	0.0763719081879	3
Coq.MSets.MSetFacts.WFactsOn.inter_s_m	40	1.1.0	search with cache (only 1: intros s1 s1' Hs1 s2 s2' Hs2 a; only 1: rewrite !inter_spec, Hs1, Hs2; only 1: intuition).	0.0423059463501	5
Coq.MSets.MSetFacts.WFactsOn.diff_s_m	40	0.0.0	search with cache (only 1: intros s1 s1' Hs1 s2 s2' Hs2 a; only 1: rewrite !diff_spec, Hs1, Hs2; only 1: intuition).	0.125595092773	3
Coq.MSets.MSetFacts.WFactsOn.filter_equal	40	0.0.7.6.0.2	search with cache (only 1: intros x x' Hx s s' Hs; only 1: rewrite filter_spec; only 1: rewrite filter_spec; only 1: now f_equiv; only 1: intuition; only 1: intuition).	5.43671989441	2418
Coq.MSets.MSetFacts.WFactsOn.filter_subset	40	0.0.0	search with cache (only 1: intros f Hf s s' Hs a; only 1: rewrite !filter_spec, Hs by auto; only 1: intuition).	0.073940038681	3
Coq.MSets.MSetFacts.WFactsOn.filter_ext	40
Coq.MSets.MSetProperties.WPropertiesOn.In_dec	40	0.0.1.1.2	search with cache (only 1: intros; only 1: generalize (F.mem_iff s x); only 1: case (mem x s); only 1: intuition; only 1: intuition).	0.202983856201	9
Coq.MSets.MSetProperties.WPropertiesOn.Add_Equal	40
Coq.MSets.MSetProperties.WPropertiesOn.equal_refl	40	1	search with cache (only 1: reflexivity).	0.0464990139008	2
Coq.MSets.MSetProperties.WPropertiesOn.equal_sym	40	5	search with cache (only 1: firstorder).	0.180063009262	23
Coq.MSets.MSetProperties.WPropertiesOn.equal_trans	40	1	search with cache (only 1: fsetdec).	0.147680997849	2
Coq.MSets.MSetProperties.WPropertiesOn.subset_refl	40	1	search with cache (only 1: firstorder).	0.0449478626251	2
Coq.MSets.MSetProperties.WPropertiesOn.subset_trans	40	0	search with cache (only 1: fsetdec).	0.0809180736542	1
Coq.MSets.MSetProperties.WPropertiesOn.subset_antisym	40	1	search with cache (only 1: fsetdec).	0.0817360877991	2
Coq.MSets.MSetProperties.WPropertiesOn.subset_equal	40	0	search with cache (only 1: fsetdec).	0.0720911026001	1
Coq.MSets.MSetProperties.WPropertiesOn.subset_empty	40	0	search with cache (only 1: fsetdec).	0.0603611469269	1
Coq.MSets.MSetProperties.WPropertiesOn.subset_remove_3	40	1	search with cache (only 1: fsetdec).	0.0901291370392	2
Coq.MSets.MSetProperties.WPropertiesOn.subset_diff	40	0	search with cache (only 1: fsetdec).	0.0893988609314	1
Coq.MSets.MSetProperties.WPropertiesOn.subset_add_3	40	1	search with cache (only 1: fsetdec).	0.117429971695	2
Coq.MSets.MSetProperties.WPropertiesOn.subset_add_2	40	0	search with cache (only 1: fsetdec).	0.0793600082397	1
Coq.MSets.MSetProperties.WPropertiesOn.in_subset	40	0	search with cache (only 1: fsetdec).	0.0742270946503	1
Coq.MSets.MSetProperties.WPropertiesOn.double_inclusion	40	0.0.0.0	search with cache (only 1: intuition; only 1: fsetdec; only 1: fsetdec; only 1: fsetdec).	0.18598985672	4
Coq.MSets.MSetProperties.WPropertiesOn.empty_is_empty_1	40	1	search with cache (only 1: fsetdec).	0.0948588848114	2
Coq.MSets.MSetProperties.WPropertiesOn.empty_is_empty_2	40	1	search with cache (only 1: fsetdec).	0.0819931030273	2
Coq.MSets.MSetProperties.WPropertiesOn.add_equal	40	1	search with cache (only 1: fsetdec).	0.156548023224	2
Coq.MSets.MSetProperties.WPropertiesOn.add_add	40	1	search with cache (only 1: fsetdec).	0.218214988708	2
Coq.MSets.MSetProperties.WPropertiesOn.remove_equal	40	6	search with cache (only 1: fsetdec).	0.458357095718	78
Coq.MSets.MSetProperties.WPropertiesOn.Equal_remove	40	1	search with cache (only 1: fsetdec).	0.188601016998	2
Coq.MSets.MSetProperties.WPropertiesOn.add_remove	40	1	search with cache (only 1: fsetdec).	0.185038805008	2
Coq.MSets.MSetProperties.WPropertiesOn.remove_add	40	0	search with cache (only 1: fsetdec).	0.193678855896	1
Coq.MSets.MSetProperties.WPropertiesOn.singleton_equal_add	40	0	search with cache (only 1: fsetdec).	0.12944316864	1
Coq.MSets.MSetProperties.WPropertiesOn.remove_singleton_empty	40	1	search with cache (only 1: fsetdec).	0.348393917084	2
Coq.MSets.MSetProperties.WPropertiesOn.union_sym	40	1	search with cache (only 1: fsetdec).	0.131144046783	2
Coq.MSets.MSetProperties.WPropertiesOn.union_subset_equal	40	0	search with cache (only 1: fsetdec).	0.125715970993	1
Coq.MSets.MSetProperties.WPropertiesOn.union_equal_1	40	1	search with cache (only 1: fsetdec).	0.149261951447	2
Coq.MSets.MSetProperties.WPropertiesOn.union_equal_2	40	0	search with cache (only 1: fsetdec).	0.159040212631	1
Coq.MSets.MSetProperties.WPropertiesOn.union_assoc	40	0	search with cache (only 1: fsetdec).	0.20860004425	1
Coq.MSets.MSetProperties.WPropertiesOn.add_union_singleton	40	0	search with cache (only 1: fsetdec).	0.135170936584	1
Coq.MSets.MSetProperties.WPropertiesOn.union_add	40	1	search with cache (only 1: fsetdec).	0.2142329216	2
Coq.MSets.MSetProperties.WPropertiesOn.union_remove_add_1	40	0	search with cache (only 1: fsetdec).	0.368407011032	1
Coq.MSets.MSetProperties.WPropertiesOn.union_remove_add_2	40	1	search with cache (only 1: fsetdec).	0.357185125351	2
Coq.MSets.MSetProperties.WPropertiesOn.union_subset_1	40	1	search with cache (only 1: fsetdec).	0.0683879852295	2
Coq.MSets.MSetProperties.WPropertiesOn.union_subset_2	40	1	search with cache (only 1: fsetdec).	0.0686161518097	2
Coq.MSets.MSetProperties.WPropertiesOn.union_subset_3	40	1	search with cache (only 1: fsetdec).	0.14394402504	2
Coq.MSets.MSetProperties.WPropertiesOn.union_subset_4	40	0	search with cache (only 1: fsetdec).	0.0979509353638	1
Coq.MSets.MSetProperties.WPropertiesOn.union_subset_5	40	0	search with cache (only 1: fsetdec).	0.0964720249176	1
Coq.MSets.MSetProperties.WPropertiesOn.empty_union_1	40	1	search with cache (only 1: fsetdec).	0.116358041763	2
Coq.MSets.MSetProperties.WPropertiesOn.empty_union_2	40	0	search with cache (only 1: fsetdec).	0.112148046494	1
Coq.MSets.MSetProperties.WPropertiesOn.not_in_union	40	0.0.0.1.1	search with cache (only 1: rewrite union_spec; only 1: generalize (F.mem_iff s x); only 1: case (mem x s); only 1: intuition; only 1: intuition).	0.163092136383	7
Coq.MSets.MSetProperties.WPropertiesOn.inter_sym	40	0	search with cache (only 1: fsetdec).	0.125545978546	1
Coq.MSets.MSetProperties.WPropertiesOn.inter_subset_equal	40	0	search with cache (only 1: fsetdec).	0.110487937927	1
Coq.MSets.MSetProperties.WPropertiesOn.inter_equal_1	40	1	search with cache (only 1: fsetdec).	0.138854980469	2
Coq.MSets.MSetProperties.WPropertiesOn.inter_equal_2	40	0	search with cache (only 1: fsetdec).	0.156049966812	1
Coq.MSets.MSetProperties.WPropertiesOn.inter_assoc	40	0	search with cache (only 1: fsetdec).	0.180847883224	1
Coq.MSets.MSetProperties.WPropertiesOn.union_inter_1	40	0	search with cache (only 1: fsetdec).	0.238373994827	1
Coq.MSets.MSetProperties.WPropertiesOn.union_inter_2	40	0	search with cache (only 1: fsetdec).	0.250235080719	1
Coq.MSets.MSetProperties.WPropertiesOn.inter_add_1	40	3.2	search with cache (only 1: intuition; only 1: fsetdec).	0.241328954697	7
Coq.MSets.MSetProperties.WPropertiesOn.inter_add_2	40	2	search with cache (only 1: fsetdec).	0.188210964203	3
Coq.MSets.MSetProperties.WPropertiesOn.empty_inter_1	40	1	search with cache (only 1: fsetdec).	0.0860438346863	2
Coq.MSets.MSetProperties.WPropertiesOn.empty_inter_2	40	1	search with cache (only 1: fsetdec).	0.0842020511627	2
Coq.MSets.MSetProperties.WPropertiesOn.inter_subset_1	40	1	search with cache (only 1: fsetdec).	0.0969831943512	2
Coq.MSets.MSetProperties.WPropertiesOn.inter_subset_2	40	1	search with cache (only 1: fsetdec).	0.0683999061584	2
Coq.MSets.MSetProperties.WPropertiesOn.inter_subset_3	40	1	search with cache (only 1: fsetdec).	0.0891768932343	2
Coq.MSets.MSetProperties.WPropertiesOn.empty_diff_1	40	1	search with cache (only 1: fsetdec).	0.0973520278931	2
Coq.MSets.MSetProperties.WPropertiesOn.empty_diff_2	40	1	search with cache (only 1: fsetdec).	0.113759040833	2
Coq.MSets.MSetProperties.WPropertiesOn.diff_subset	40	1	search with cache (only 1: fsetdec).	0.0743260383606	2
Coq.MSets.MSetProperties.WPropertiesOn.diff_subset_equal	40	1	search with cache (only 1: fsetdec).	0.17533993721	2
Coq.MSets.MSetProperties.WPropertiesOn.remove_diff_singleton	40	0	search with cache (only 1: fsetdec).	0.14325094223	1
Coq.MSets.MSetProperties.WPropertiesOn.diff_inter_empty	40	0	search with cache (only 1: fsetdec).	0.229963064194	1
Coq.MSets.MSetProperties.WPropertiesOn.diff_inter_all	40	0	search with cache (only 1: fsetdec).	0.190886974335	1
Coq.MSets.MSetProperties.WPropertiesOn.Add_add	40
Coq.MSets.MSetProperties.WPropertiesOn.Add_remove	40	0.3	search with cache (only 1: expAdd; only 1: fsetdec).	0.224550008774	5
Coq.MSets.MSetProperties.WPropertiesOn.union_Add	40	0.2	search with cache (only 1: expAdd; only 1: fsetdec).	0.283254861832	4
Coq.MSets.MSetProperties.WPropertiesOn.inter_Add	40	1.2	search with cache (only 1: expAdd; only 1: fsetdec).	0.451924085617	5
Coq.MSets.MSetProperties.WPropertiesOn.union_Equal	40	0.0	search with cache (only 1: expAdd; only 1: fsetdec).	0.389805793762	2
Coq.MSets.MSetProperties.WPropertiesOn.inter_Add_2	40	0.2	search with cache (only 1: expAdd; only 1: fsetdec).	0.413639068604	4
Coq.MSets.MSetProperties.WPropertiesOn.elements_Empty	40
Coq.MSets.MSetProperties.WPropertiesOn.elements_empty	40
Coq.MSets.MSetProperties.WPropertiesOn.of_list_1	40
Coq.MSets.MSetProperties.WPropertiesOn.of_list_2	40
Coq.MSets.MSetProperties.WPropertiesOn.of_list_3	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_spec_right	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_rec	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_rec_bis	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_rec_nodep	40	0.0.0.0.0.1.2	search with cache (only 1: intros A P f i s Pempty Pstep; only 1: apply fold_rec; only 1: intros; only 1: auto with set; only 1: intros; only 1: rewrite Add_Equal in H1; only 1: auto with set).	0.162670850754	23
Coq.MSets.MSetProperties.WPropertiesOn.fold_rec_weak	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_rel	40
Coq.MSets.MSetProperties.WPropertiesOn.set_induction	40
Coq.MSets.MSetProperties.WPropertiesOn.set_induction_bis	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_identity	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_0	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_1	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_2	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_1b	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_commutes	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_init	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_equal	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_empty	40	3.17.8.4	search with cache (only 1: intros; only 1: apply fold_1; only 1: intuition; only 1: auto with *).	5.58233308792	6122
Coq.MSets.MSetProperties.WPropertiesOn.fold_add	40	7.1.1.1.1.11.0	search with cache (only 1: intros; only 1: apply fold_2 with (eqA := eqA); only 1: auto with relations; only 1: auto with relations; only 1: auto with relations; only 1: auto with relations; only 1: auto with set).	22.7008850574	12085
Coq.MSets.MSetProperties.WPropertiesOn.add_fold	40
Coq.MSets.MSetProperties.WPropertiesOn.remove_fold_1	40	0.1.0.0.0.3.10	search with cache (only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: fsetdec; only 1: auto with set).	4.71352815628	2339
Coq.MSets.MSetProperties.WPropertiesOn.remove_fold_2	40	0.5.0	search with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set).	0.227343797684	18
Coq.MSets.MSetProperties.WPropertiesOn.fold_union_inter	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_diff_inter	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_union	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_plus	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_fold	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_0	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_1	40	0.28.16.7.2	search with cache (only 1: intros; only 1: rewrite cardinal_spec; only 1: rewrite elements_Empty in H; only 1: rewrite H; only 1: auto).	11.1301910877	23620
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_2	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_Empty	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_inv_1	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_inv_2	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_inv_2b	40
Coq.MSets.MSetProperties.WPropertiesOn.Equal_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_m	40
Coq.MSets.MSetProperties.WPropertiesOn.empty_cardinal	40	0.6	search with cache (only 1: apply cardinal_1; only 1: auto with set).	0.0531709194183	8
Coq.MSets.MSetProperties.WPropertiesOn.singleton_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.diff_inter_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.union_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.subset_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.subset_cardinal_lt	40
Coq.MSets.MSetProperties.WPropertiesOn.union_inter_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.union_cardinal_inter	40
Coq.MSets.MSetProperties.WPropertiesOn.union_cardinal_le	40	4.17.0	search with cache (only 1: intros; only 1: rewrite <- union_inter_cardinal; only 1: auto with arith).	1.27806401253	926
Coq.MSets.MSetProperties.WPropertiesOn.add_cardinal_1	40	5.0	search with cache (only 1: symmetry; only 1: auto with set).	0.125138998032	39
Coq.MSets.MSetProperties.WPropertiesOn.add_cardinal_2	40	0.0.2.0	search with cache (only 1: intros; only 1: apply cardinal_2 with x; only 1: fsetdec; only 1: fsetdec).	0.28559088707	105
Coq.MSets.MSetProperties.WPropertiesOn.remove_cardinal_1	40	0.0.0.2.3	search with cache (only 1: symmetry; only 1: apply cardinal_2 with x; only 1: fsetdec; only 1: expAdd; only 1: fsetdec).	0.465955972672	78
Coq.MSets.MSetProperties.WPropertiesOn.remove_cardinal_2	40	0	search with cache (only 1: auto with set).	0.0473661422729	1
Coq.MSets.MSetProperties.OrdProperties.sort_equivlistA_eqlistA	40
Coq.MSets.MSetProperties.OrdProperties.gtb_1	40
Coq.MSets.MSetProperties.OrdProperties.leb_1	40
Coq.MSets.MSetProperties.OrdProperties.gtb_compat	40
Coq.MSets.MSetProperties.OrdProperties.leb_compat	40	0.0.13.8.0	search with cache (only 1: intros a b H; only 1: apply eq_true_iff_eq; only 1: unfold leb, gtb; only 1: rewrite H; only 1: intuition).	4.52600502968	1798
Coq.MSets.MSetProperties.OrdProperties.elements_split	40
Coq.MSets.MSetProperties.OrdProperties.elements_Add	40
Coq.MSets.MSetProperties.OrdProperties.elements_Add_Above	40
Coq.MSets.MSetProperties.OrdProperties.elements_Add_Below	40
Coq.MSets.MSetProperties.OrdProperties.set_induction_max	40
Coq.MSets.MSetProperties.OrdProperties.set_induction_min	40
Coq.MSets.MSetProperties.OrdProperties.fold_3	40
Coq.MSets.MSetProperties.OrdProperties.fold_4	40
Coq.MSets.MSetProperties.OrdProperties.fold_equal	40
Coq.MSets.MSetProperties.OrdProperties.add_fold	40	0.0.0	search with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).	0.051285982132	3
Coq.MSets.MSetProperties.OrdProperties.remove_fold_2	40	0.0.0	search with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).	0.0505437850952	3
Coq.MSets.MSetProperties.OrdProperties.choose_equal	40
Coq.MSets.MSetAVL.MakeRaw.singleton_spec	40	24.10.3	search with cache (only 1: intros; only 1: compute; only 1: intuition_in).	20.5292057991	4256
Coq.MSets.MSetAVL.MakeRaw.singleton_ok	40	11	search with cache (only 1: intuition).	0.0165998935699	33
Coq.MSets.MSetAVL.MakeRaw.create_spec	40
Coq.MSets.MSetAVL.MakeRaw.create_ok	40
Coq.MSets.MSetAVL.MakeRaw.bal_spec	40
Coq.MSets.MSetAVL.MakeRaw.bal_ok	40
Coq.MSets.MSetAVL.MakeRaw.add_spec'	40
Coq.MSets.MSetAVL.MakeRaw.add_spec	40
Coq.MSets.MSetAVL.MakeRaw.add_ok	40
Coq.MSets.MSetAVL.MakeRaw.join_spec	40
Coq.MSets.MSetAVL.MakeRaw.join_ok	40
Coq.MSets.MSetAVL.MakeRaw.remove_min_spec	40
Coq.MSets.MSetAVL.MakeRaw.remove_min_ok	40
Coq.MSets.MSetAVL.MakeRaw.remove_min_gt_tree	40
Coq.MSets.MSetAVL.MakeRaw.merge_spec	40
Coq.MSets.MSetAVL.MakeRaw.merge_ok	40
Coq.MSets.MSetAVL.MakeRaw.remove_spec	40
Coq.MSets.MSetAVL.MakeRaw.remove_ok	40
Coq.MSets.MSetAVL.MakeRaw.concat_spec	40
Coq.MSets.MSetAVL.MakeRaw.concat_ok	40
Coq.MSets.MSetAVL.MakeRaw.split_spec1	40
Coq.MSets.MSetAVL.MakeRaw.split_spec2	40
Coq.MSets.MSetAVL.MakeRaw.split_spec3	40
Coq.MSets.MSetAVL.MakeRaw.split_ok	40
Coq.MSets.MSetAVL.MakeRaw.split_ok1	40
Coq.MSets.MSetAVL.MakeRaw.split_ok2	40
Coq.MSets.MSetAVL.MakeRaw.inter_spec_ok	40
Coq.MSets.MSetAVL.MakeRaw.inter_spec	40
Coq.MSets.MSetAVL.MakeRaw.inter_ok	40	1.0.0.3	search with cache (only 1: destruct (@inter_spec_ok s1 s2); only 1: auto; only 1: auto; only 1: auto).	0.038712978363	20
Coq.MSets.MSetAVL.MakeRaw.diff_spec_ok	40
Coq.MSets.MSetAVL.MakeRaw.diff_spec	40
Coq.MSets.MSetAVL.MakeRaw.diff_ok	40
Coq.MSets.MSetAVL.MakeRaw.union_spec	40
Coq.MSets.MSetAVL.MakeRaw.union_ok	40
Coq.MSets.MSetAVL.MakeRaw.filter_spec	40
Coq.MSets.MSetAVL.MakeRaw.filter_weak_spec	40
Coq.MSets.MSetAVL.MakeRaw.filter_ok	40
Coq.MSets.MSetAVL.MakeRaw.partition_spec1'	40
Coq.MSets.MSetAVL.MakeRaw.partition_spec2'	40	1.0.0.0.0.2	search with cache (only 1: induction s as [| h l Hl x r Hr]; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite <- Hl, <- Hr; only 1: now destruct (partition f l), (partition f r), (f x)).	0.0279841423035	9
Coq.MSets.MSetAVL.MakeRaw.partition_spec1	40
Coq.MSets.MSetAVL.MakeRaw.partition_spec2	40
Coq.MSets.MSetAVL.MakeRaw.partition_ok1	40
Coq.MSets.MSetAVL.MakeRaw.partition_ok2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.mem_eq	40	0.0.0.0.0.0.0.1.0	search with cache (only 1: intros; only 1: generalize (mem_iff s x), (mem_iff s y), (In_eq_iff s H); only 1: destruct (mem x s); only 1: destruct (mem y s); only 1: intuition; only 1: intuition; only 1: destruct (mem y s); only 1: intuition; only 1: intuition).	0.115671157837	10
Coq.MSets.MSetEqProperties.WEqPropertiesOn.equal_mem_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.equal_mem_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.subset_mem_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.subset_mem_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.empty_mem	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.is_empty_equal_empty	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.choose_mem_1	40	21	search with cache (only 1: intuition).	1.69872999191	701
Coq.MSets.MSetEqProperties.WEqPropertiesOn.choose_mem_2	40	9	search with cache (only 1: intuition).	0.174546957016	11
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_mem_1	40	4	search with cache (only 1: intuition).	0.108767032623	5
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_mem_2	40	0.0.0.0.0.0.0.1.0	search with cache (only 1: intros; only 1: generalize (FM.mem_iff (add x s) y), (FM.mem_iff s y), (FM.add_neq_iff s H); only 1: destruct (mem y s); only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition).	0.124126911163	10
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_mem_1	40	0.0	search with cache (only 1: rewrite <- not_mem_iff; only 1: Dec.fsetdec).	0.107206821442	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_mem_2	40	0.0.0.0.0.0.0.1.0	search with cache (only 1: intros; only 1: generalize (mem_iff (remove x s) y), (mem_iff s y), (remove_neq_iff s H); only 1: destruct (mem y s); only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition).	0.124400854111	10
Coq.MSets.MSetEqProperties.WEqPropertiesOn.singleton_equal_add	40	1	search with cache (only 1: auto with set relations).	0.041757106781	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_mem	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_mem	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.diff_mem	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.mem_3	40	0.0	search with cache (only 1: rewrite <- not_mem_iff; only 1: auto with *).	0.0538768768311	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.mem_4	40	0.0.1.3.0	search with cache (only 1: intros; only 1: rewrite <- mem_spec; only 1: destruct (mem x s); only 1: intuition; only 1: intuition).	0.489336967468	15
Coq.MSets.MSetEqProperties.WEqPropertiesOn.equal_refl	40	1	search with cache (only 1: auto with set).	0.0420742034912	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.equal_sym	40	1.4.1.4.1.0	search with cache (only 1: apply eq_true_iff_eq; only 1: intuition; only 1: rewrite (equal_2 H); only 1: auto with set; only 1: rewrite (equal_2 H); only 1: auto with set).	2.99754285812	608
Coq.MSets.MSetEqProperties.WEqPropertiesOn.equal_trans	40	1.2.0.4	search with cache (only 1: do 2 rewrite <- equal_iff; only 1: intros; only 1: apply <- equal_spec; only 1: Dec.fsetdec).	0.271342992783	33
Coq.MSets.MSetEqProperties.WEqPropertiesOn.equal_equal	40	0.2.1	search with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto).	0.0503709316254	6
Coq.MSets.MSetEqProperties.WEqPropertiesOn.equal_cardinal	40	9	search with cache (only 1: auto with set).	0.0594120025635	15
Coq.MSets.MSetEqProperties.WEqPropertiesOn.subset_refl	40	1	search with cache (only 1: auto with set).	0.0407779216766	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.subset_antisym	40	1	search with cache (only 1: auto with set).	0.0496499538422	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.subset_trans	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.subset_equal	40	1	search with cache (only 1: auto with set).	0.0432999134064	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.choose_mem_3	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.choose_mem_4	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_mem_3	40	1	search with cache (only 1: auto with set relations).	0.0445370674133	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_equal	40	1	search with cache (only 1: auto with set relations).	0.0438499450684	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_mem_3	40	1.1.0.4	search with cache (only 1: generalize (mem_iff (remove x s) y), (mem_iff s y), (remove_iff s x y); only 1: destruct (mem y s); only 1: intuition; only 1: intuition).	0.184565067291	17
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_equal	40	0.1	search with cache (only 1: rewrite <- not_mem_iff; only 1: intuition).	0.0943620204926	3
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_remove	40	3.8	search with cache (only 1: generalize (FM.mem_iff s x), (FM.elements_iff s x), (existsb_exists (FM.eqb x) (elements s)); only 1: intuition).	0.696788072586	101
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_add	40	0.14	search with cache (only 1: rewrite <- not_mem_iff; only 1: intuition).	21.0442972183	1447
Coq.MSets.MSetEqProperties.WEqPropertiesOn.is_empty_cardinal	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.singleton_mem_1	40	1	search with cache (only 1: auto with set relations).	0.0449600219727	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.singleton_mem_2	40	0.3.6	search with cache (only 1: rewrite <- not_mem_iff; only 1: rewrite singleton_spec; only 1: auto with relations).	13.1016011238	4061
Coq.MSets.MSetEqProperties.WEqPropertiesOn.singleton_mem_3	40	1.10	search with cache (only 1: generalize (mem_iff (singleton x) y), (singleton_iff x y); only 1: intuition).	0.209937095642	182
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_sym	40	1	search with cache (only 1: auto with set).	0.0449390411377	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_subset_equal	40	0	search with cache (only 1: auto with set).	0.0594069957733	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_equal_1	40	3.2.1	search with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto with set).	0.0614519119263	9
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_equal_2	40	0	search with cache (only 1: auto with set).	0.0453598499298	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_assoc	40	0	search with cache (only 1: auto with set).	0.042998790741	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_union_singleton	40	1	search with cache (only 1: auto with set).	0.0437459945679	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_add	40	0	search with cache (only 1: auto with set).	0.0433027744293	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_subset_1	40	0	search with cache (only 1: auto with set).	0.0429651737213	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_subset_2	40	1	search with cache (only 1: auto with set).	0.0431871414185	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_subset_3	40	0.0	search with cache (only 1: do 3 rewrite <- subset_iff; only 1: Dec.fsetdec).	0.175833940506	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_sym	40	0	search with cache (only 1: auto with set).	0.0433518886566	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_subset_equal	40	0	search with cache (only 1: auto with set).	0.0468361377716	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_equal_1	40	1	search with cache (only 1: auto with set).	0.0457320213318	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_equal_2	40	0	search with cache (only 1: auto with set).	0.0440640449524	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_assoc	40	0	search with cache (only 1: auto with set).	0.0429611206055	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_inter_1	40	0	search with cache (only 1: auto with set).	0.0434849262238	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_inter_2	40	0	search with cache (only 1: auto with set).	0.0416369438171	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_add_1	40	0	search with cache (only 1: auto with set relations).	0.0433189868927	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_add_2	40	0.7	search with cache (only 1: rewrite <- not_mem_iff; only 1: intuition).	0.747569084167	32
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_subset_1	40	0	search with cache (only 1: auto with set).	0.0423321723938	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_subset_2	40	0	search with cache (only 1: auto with set).	0.0422909259796	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_subset_3	40	0.0	search with cache (only 1: do 3 rewrite <- subset_iff; only 1: Dec.fsetdec).	0.205814838409	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.diff_subset	40	0	search with cache (only 1: auto with set).	0.0420258045197	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.diff_subset_equal	40	0	search with cache (only 1: auto with set).	0.0467340946198	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_inter_singleton	40	0	search with cache (only 1: auto with set).	0.0410990715027	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.diff_inter_empty	40	0	search with cache (only 1: auto with set).	0.0419020652771	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.diff_inter_all	40	0	search with cache (only 1: auto with set).	0.0418100357056	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.set_rec	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.exclusive_set	40	0.0.0.2.3.0.0.7	search with cache (only 1: intros; only 1: rewrite <- mem_spec; only 1: destruct (mem x s); only 1: rewrite <- mem_spec; only 1: destruct (mem x s'); only 1: intuition; only 1: intuition; only 1: intuition).	11.8884267807	3211
Coq.MSets.MSetEqProperties.WEqPropertiesOn.fold_empty	40	0.0	search with cache (only 1: apply fold_1b; only 1: auto with set).	0.0479600429535	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.fold_equal	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.fold_add	40	0.0.3.0.0.0.2.1	search with cache (only 1: intros; only 1: apply fold_2 with (eqA := eqA); only 1: auto; only 1: auto; only 1: auto; only 1: rewrite not_mem_iff; only 1: auto; only 1: auto).	0.821170091629	415
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_fold	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_fold_1	40	0.2.0.0.0.5.4	search with cache (only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set relations; only 1: auto with set).	0.933677196503	698
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_fold_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.fold_union	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_cardinal_1	40	0	search with cache (only 1: auto with set).	0.0431950092316	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_cardinal_2	40	0.0.1.7.0	search with cache (only 1: intros; only 1: apply cardinal_2 with x; only 1: rewrite not_mem_iff; only 1: auto; only 1: auto).	0.306552886963	161
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_cardinal_1	40	0.0.0.2.3.2.1.1	search with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: change_no_check S with ((fun _ => S) x); only 1: apply MP.remove_fold_1 with (eqA := Logic.eq); only 1: auto with *; only 1: auto with *; only 1: auto; only 1: auto).	0.797991037369	538
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_cardinal_2	40	0.5.16.14	search with cache (only 1: intro; only 1: intro; only 1: rewrite <- not_mem_iff; only 1: auto with *).	7.5414659977	5491
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_cardinal	40	0.0.1.0.0.0.9.0.0.2.0	search with cache (only 1: intros; only 1: do 3 rewrite cardinal_fold; only 1: rewrite <- fold_plus; only 1: apply MP.fold_union; only 1: split; only 1: congruence; only 1: congruence; only 1: congruence; only 1: congruence; only 1: auto; only 1: auto).	1.63301301003	1179
Coq.MSets.MSetEqProperties.WEqPropertiesOn.subset_cardinal	40	1.1	search with cache (only 1: intros H a; only 1: auto with set).	0.0536479949951	4
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Comp'	40	11	search with cache (only 1: solve_proper).	3.36862492561	93
Coq.MSets.MSetEqProperties.WEqPropertiesOn.filter_mem	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.for_all_filter	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.exists_filter	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.partition_filter_1	40	4.1	search with cache (only 1: intros; only 1: auto with set).	0.0549819469452	7
Coq.MSets.MSetEqProperties.WEqPropertiesOn.partition_filter_2	40	0	search with cache (only 1: auto with set).	0.0481028556824	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.filter_add_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.filter_add_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_filter_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_filter_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_filter	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.filter_union	40	0.0.0.0.3.0.0.0.4	search with cache (only 1: unfold Add, MP.Add, Equal; only 1: intros; only 1: set_iff; only 1: repeat rewrite filter_spec; only 1: set_iff; only 1: intuition; only 1: auto; only 1: auto; only 1: auto).	16.4536378384	1037
Coq.MSets.MSetEqProperties.WEqPropertiesOn.for_all_mem_1	40	0.5.2.1.3.1	search with cache (only 1: intros; only 1: apply <- for_all_spec; only 1: red; only 1: intros a; only 1: auto with set; only 1: auto).	0.706611871719	431
Coq.MSets.MSetEqProperties.WEqPropertiesOn.for_all_mem_2	40	0.1.0.1.0.1.0.2.0.3.0.11.0	search with cache (only 1: intros; only 1: revert H; only 1: rewrite for_all_filter; only 1: rewrite <- is_empty_iff; only 1: unfold Empty; only 1: intro H; only 1: generalize (H x); only 1: clear H; only 1: rewrite filter_spec; only 1: destruct (f x); only 1: auto; only 1: intuition; only 1: auto).	5.5077111721	3080
Coq.MSets.MSetEqProperties.WEqPropertiesOn.for_all_mem_3	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.for_all_mem_4	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.for_all_exists	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Comp'	40	0.0.0.0	search with cache (only 1: repeat red; only 1: intros; only 1: f_equal; only 1: auto).	0.0474238395691	4
Coq.MSets.MSetEqProperties.WEqPropertiesOn.exists_mem_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.exists_mem_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.exists_mem_3	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.exists_mem_4	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.sum_plus	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.sum_filter	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.fold_compat	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.sum_compat	40
Coq.MSets.MSetDecide.WDecideOn.MSetLogicalFacts.test_push	40	0.1.0	search with cache (only 1: unfold decidable; only 1: intros s s' E; only 1: auto).	1.03174996376	4
Coq.MSets.MSetDecide.WDecideOn.MSetLogicalFacts.test_pull	40	0.0.0	search with cache (only 1: intros; only 1: push not in *; only 1: tauto).	0.119536876678	3
Coq.MSets.MSetDecide.WDecideOn.MSetDecideAuxiliary.eq_refl_iff	40	0	search with cache (only 1: intuition).	0.0302488803864	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideAuxiliary.dec_In	40	0.0.1.5.6.1	search with cache (only 1: firstorder; only 1: unfold decidable; only 1: rewrite <- mem_spec; only 1: destruct (mem x s); only 1: auto; only 1: intuition).	1.18953800201	513
Coq.MSets.MSetDecide.WDecideOn.MSetDecideAuxiliary.dec_eq	40
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_trans_1	40
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_trans_2	40	0	search with cache (only 1: fsetdec).	0.332712173462	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_neq_trans_1	40	0	search with cache (only 1: fsetdec).	0.0813789367676	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_neq_trans_2	40	0	search with cache (only 1: fsetdec).	0.49239897728	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_In_singleton	40	2	search with cache (only 1: firstorder).	0.0279290676117	3
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_add_In	40	0	search with cache (only 1: fsetdec).	0.0568289756775	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_Subset_add_remove	40	0	search with cache (only 1: fsetdec).	0.0566120147705	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_disjunction	40	0	search with cache (only 1: fsetdec).	0.0902421474457	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_not_In_disj	40	4.1	search with cache (only 1: intros x y; only 1: fsetdec).	0.746609926224	57
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_not_In_conj	40	0	search with cache (only 1: fsetdec).	0.0969460010529	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_iff_conj	40	4.0	search with cache (only 1: intros x; only 1: fsetdec).	0.11362195015	12
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_set_ops_1	40	0	search with cache (only 1: fsetdec).	0.293001174927	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.eq_chain_test	40	0	search with cache (only 1: fsetdec).	0.314851999283	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_too_complex	40	2.7.3	search with cache (only 1: intros x y H s s' H0; only 1: rewrite singleton_spec; only 1: intuition).	0.578351020813	308
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.function_test_1	40	1.5	search with cache (only 1: intros s s' E; only 1: fsetdec).	0.0875129699707	8
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.function_test_2	40	4	search with cache (only 1: fsetdec).	0.0757210254669	12
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_baydemir	40	0	search with cache (only 1: fsetdec).	0.069953918457	1
Coq.MSets.MSetGenTree.Props.ltb_tree_iff	40	0.16.12	search with cache (only 1: intro H; only 1: fix odd_spec 1; only 1: intuition).	3.79893803596	3678
Coq.MSets.MSetGenTree.Props.gtb_tree_iff	40
Coq.MSets.MSetGenTree.Props.isok_iff	40
Coq.MSets.MSetGenTree.Props.isok_Ok	40
Coq.MSets.MSetGenTree.Props.In_1	40
Coq.MSets.MSetGenTree.Props.In_compat	40	2.5.14.0.2.12	search with cache (only 1: apply proper_sym_impl_iff_2; only 1: auto; only 1: auto; only 1: intros ? ? E1 ? ? E2 ?; only 1: subst; only 1: eauto).	33.5730209351	54480
Coq.MSets.MSetGenTree.Props.In_node_iff	40	10	search with cache (only 1: intuition_in).	0.290579080582	102
Coq.MSets.MSetGenTree.Props.In_leaf_iff	40	8	search with cache (only 1: intuition_in).	0.0671510696411	35
Coq.MSets.MSetGenTree.Props.lt_leaf	40	6.8.4	search with cache (only 1: intros; only 1: unfold lt_tree; only 1: intuition_in).	0.543310880661	849
Coq.MSets.MSetGenTree.Props.gt_leaf	40	0.0	search with cache (only 1: red; only 1: inversion 1).	0.0166869163513	2
Coq.MSets.MSetGenTree.Props.lt_tree_node	40	3.8.1	search with cache (only 1: red; only 1: intuition_in; only 1: order).	0.965342998505	394
Coq.MSets.MSetGenTree.Props.gt_tree_node	40	2.0.1	search with cache (only 1: red; only 1: intuition_in; only 1: order).	0.0810980796814	12
Coq.MSets.MSetGenTree.Props.lt_tree_not_in	40	2.2.0.0	search with cache (only 1: red; only 1: intuition_in; only 1: eapply OrderTac.lt_irrefl; only 1: auto).	0.0471320152283	8
Coq.MSets.MSetGenTree.Props.lt_tree_trans	40	6.0	search with cache (only 1: intros x y z; only 1: eauto).	0.0321519374847	13
Coq.MSets.MSetGenTree.Props.gt_tree_not_in	40	0.0.0	search with cache (only 1: intros; only 1: intro; only 1: order).	0.0167648792267	3
Coq.MSets.MSetGenTree.Props.gt_tree_trans	40	5.0	search with cache (only 1: intros x y z; only 1: eauto).	0.0207681655884	7
Coq.MSets.MSetGenTree.Props.lt_tree_compat	40	10.0.0.1.0.0.0	search with cache (only 1: apply proper_sym_impl_iff_2; only 1: auto with *; only 1: auto with *; only 1: repeat red; only 1: intros; only 1: subst; only 1: order).	6.91721510887	5851
Coq.MSets.MSetGenTree.Props.gt_tree_compat	40	0.0.0.3.0.0.0	search with cache (only 1: apply proper_sym_impl_iff_2; only 1: auto with *; only 1: auto with *; only 1: intros x x' Hx s s' Hs H y Hy; only 1: subst; only 1: setoid_rewrite  <- Hx; only 1: auto).	0.0530200004578	22
Coq.MSets.MSetGenTree.Props.empty_spec	40	0.6	search with cache (only 1: intro; only 1: auto).	0.0151951313019	8
Coq.MSets.MSetGenTree.Props.empty_ok	40	1	search with cache (only 1: auto).	0.0127239227295	2
Coq.MSets.MSetGenTree.Props.is_empty_spec	40
Coq.MSets.MSetGenTree.Props.mem_spec	40
Coq.MSets.MSetGenTree.Props.min_elt_spec1	40
Coq.MSets.MSetGenTree.Props.min_elt_spec2	40
Coq.MSets.MSetGenTree.Props.min_elt_spec3	40
Coq.MSets.MSetGenTree.Props.max_elt_spec1	40
Coq.MSets.MSetGenTree.Props.max_elt_spec2	40
Coq.MSets.MSetGenTree.Props.max_elt_spec3	40	0.1.0.0.0.0.0.5	search with cache (only 1: functional induction max_elt s; only 1: red; only 1: red; only 1: inversion 2; only 1: inversion 1; only 1: intro H0; only 1: destruct (IHo H0 _x3); only 1: auto).	9.21362805367	4463
Coq.MSets.MSetGenTree.Props.choose_spec1	40
Coq.MSets.MSetGenTree.Props.choose_spec2	40
Coq.MSets.MSetGenTree.Props.choose_spec3	40
Coq.MSets.MSetGenTree.Props.elements_spec1'	40
Coq.MSets.MSetGenTree.Props.elements_spec1	40	3.6.12	search with cache (only 1: red; only 1: fix gcd_divide 1; only 1: firstorder).	3.64040708542	6886
Coq.MSets.MSetGenTree.Props.elements_spec2'	40
Coq.MSets.MSetGenTree.Props.elements_spec2	40
Coq.MSets.MSetGenTree.Props.elements_spec2w	40
Coq.MSets.MSetGenTree.Props.elements_aux_cardinal	40
Coq.MSets.MSetGenTree.Props.elements_cardinal	40
Coq.MSets.MSetGenTree.Props.elements_app	40
Coq.MSets.MSetGenTree.Props.elements_node	40
Coq.MSets.MSetGenTree.Props.rev_elements_app	40
Coq.MSets.MSetGenTree.Props.rev_elements_node	40
Coq.MSets.MSetGenTree.Props.rev_elements_rev	40
Coq.MSets.MSetGenTree.Props.sorted_app_inv	40	0.6	search with cache (only 1: fix gcd_divide 1; only 1: intuition).	0.0468471050262	29
Coq.MSets.MSetGenTree.Props.elements_sort_ok	40
Coq.MSets.MSetGenTree.Props.for_all_spec	40
Coq.MSets.MSetGenTree.Props.exists_spec	40
Coq.MSets.MSetGenTree.Props.fold_spec'	40
Coq.MSets.MSetGenTree.Props.fold_spec	40
Coq.MSets.MSetGenTree.Props.subsetl_spec	40
Coq.MSets.MSetGenTree.Props.subsetr_spec	40
Coq.MSets.MSetGenTree.Props.subset_spec	40
Coq.MSets.MSetGenTree.Props.eq_equiv	40	15	search with cache (only 1: firstorder).	0.436326026917	554
Coq.MSets.MSetGenTree.Props.eq_Leq	40
Coq.MSets.MSetGenTree.Props.lt_strorder	40
Coq.MSets.MSetGenTree.Props.lt_compat	40
Coq.MSets.MSetGenTree.Props.flatten_e_elements	40	2.4.0.2	search with cache (only 1: intros; only 1: unfold elements; only 1: rewrite elements_node; only 1: now rewrite !app_assoc_reverse).	0.554123163223	209
Coq.MSets.MSetGenTree.Props.cons_1	40
Coq.MSets.MSetGenTree.Props.compare_end_Cmp	40
Coq.MSets.MSetGenTree.Props.compare_more_Cmp	40
Coq.MSets.MSetGenTree.Props.compare_cont_Cmp	40
Coq.MSets.MSetGenTree.Props.compare_Cmp	40
Coq.MSets.MSetGenTree.Props.compare_spec	40
Coq.MSets.MSetGenTree.Props.equal_spec	40
Coq.MSets.MSetGenTree.Props.mindepth_maxdepth	40
Coq.MSets.MSetGenTree.Props.maxdepth_cardinal	40
Coq.MSets.MSetGenTree.Props.mindepth_cardinal	40
Coq.MSets.MSetGenTree.Props.maxdepth_log_cardinal	40
Coq.MSets.MSetGenTree.Props.mindepth_log_cardinal	40
Coq.MSets.MSetInterface.WRaw2SetsOn.In_compat	40
Coq.MSets.MSetInterface.WRaw2SetsOn.eq_equiv	40	4	search with cache (only 1: firstorder).	0.0760259628296	77
Coq.MSets.MSetInterface.WRaw2SetsOn.eq_dec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.mem_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.equal_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.subset_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.empty_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.is_empty_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.add_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.remove_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.singleton_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.union_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.inter_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.diff_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.fold_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.cardinal_spec	40	4.8.12.14.7	search with cache (only 1: PeanoNat.Nat.bitwise; only 1: apply eq_true_iff_eq; only 1: revert m; only 1: fix even_spec 1; only 1: intuition).	2.6307220459	6236
Coq.MSets.MSetInterface.WRaw2SetsOn.filter_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.for_all_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.exists_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.partition_spec1	40
Coq.MSets.MSetInterface.WRaw2SetsOn.partition_spec2	40
Coq.MSets.MSetInterface.WRaw2SetsOn.elements_spec1	40
Coq.MSets.MSetInterface.WRaw2SetsOn.elements_spec2w	40
Coq.MSets.MSetInterface.WRaw2SetsOn.choose_spec1	40
Coq.MSets.MSetInterface.WRaw2SetsOn.choose_spec2	40
Coq.MSets.MSetInterface.Raw2SetsOn.lt_strorder	40
Coq.MSets.MSetInterface.Raw2SetsOn.lt_compat	40	2.4.0	search with cache (only 1: repeat red; only 1: fix gcd_divide 1; only 1: firstorder).	0.122400999069	43
Coq.MSets.MSetInterface.Raw2SetsOn.compare_spec	40
Coq.MSets.MSetInterface.Raw2SetsOn.elements_spec2	40
Coq.MSets.MSetInterface.Raw2SetsOn.min_elt_spec1	40
Coq.MSets.MSetInterface.Raw2SetsOn.min_elt_spec2	40
Coq.MSets.MSetInterface.Raw2SetsOn.min_elt_spec3	40
Coq.MSets.MSetInterface.Raw2SetsOn.max_elt_spec1	40
Coq.MSets.MSetInterface.Raw2SetsOn.max_elt_spec2	40
Coq.MSets.MSetInterface.Raw2SetsOn.max_elt_spec3	40
Coq.MSets.MSetInterface.Raw2SetsOn.choose_spec3	40
Coq.MSets.MSetInterface.MakeSetOrdering.eq_equiv	40	11	search with cache (only 1: firstorder).	0.0399160385132	110
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_0	40	10.12.5	search with cache (only 1: intros x x' Hxx' l l' Hll'; only 1: rewrite (Hll' x); only 1: now f_equiv).	4.7232029438	3756
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_1	40
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_2	40
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_3	40
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_4	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_compat	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_strorder	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_empty_r	40	6.0	search with cache (only 1: intros; only 1: firstorder).	0.0159471035004	8
Coq.MSets.MSetInterface.MakeSetOrdering.lt_empty_l	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_add_lt	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_add_eq	40
Coq.MSets.MSetInterface.MakeListOrdering.lt_strorder	40
Coq.MSets.MSetInterface.MakeListOrdering.lt_compat'	40	1.2.6.0	search with cache (only 1: repeat red; only 1: fix gcd_divide 1; only 1: intros x y z; only 1: auto).	1.014316082	461
Coq.MSets.MSetInterface.MakeListOrdering.eq_cons	40
Coq.MSets.MSetInterface.MakeListOrdering.cons_CompSpec	40	0.1.1.0.3	search with cache (only 1: intros x x' l l' E s'' H'; only 1: inversion_clear H'; only 1: auto with *; only 1: auto with *; only 1: auto with *).	0.0463221073151	55
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.In_In	40	1.0	search with cache (only 1: intros; only 1: intuition).	0.0134899616241	3
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Subset_Included	40	0.0	search with cache (only 1: compute; only 1: auto with extcore).	0.0135998725891	2
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Equal_Same_set	40	14.1	search with cache (only 1: unfold Subset, Included, In, mkEns; only 1: firstorder).	2.77003216743	908
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.empty_Empty_Set	40	3.0.7.8.7	search with cache (only 1: constructor; only 1: red; only 1: unfold Subset, Included, In, mkEns; only 1: Dec.fsetdec; only 1: auto with *).	1.87168693542	1349
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Empty_Empty_set	40	1.2.0.0.4.3	search with cache (only 1: intro; only 1: unfold Same_set, Included, mkEns, In; only 1: split; only 1: intro; only 1: Dec.fsetdec; only 1: intuition).	1.9731400013	1172
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.singleton_Singleton	40	0.5.1	search with cache (only 1: unfold Same_set, Included, mkEns, In; only 1: intuition; only 1: Dec.fsetdec).	0.17292714119	24
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.union_Union	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.inter_Intersection	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.add_Add	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Add_Add	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.remove_Subtract	40	1.2.2.1.0.0.0.2.0.0.0.1	search with cache (only 1: unfold Same_set, Included, mkEns, In; only 1: split; only 1: intro; only 1: set_iff; only 1: constructor; only 1: intuition; only 1: intuition; only 1: intro; only 1: intro; only 1: red in H; only 1: red in H; only 1: intuition).	15.6453578472	5471
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.mkEns_Finite	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.mkEns_cardinal	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Ens_to_MSet	40
Coq.MSets.MSetWeakList.MakeRaw.In_compat	40	0.1.3.2.5	search with cache (only 1: repeat red; only 1: intros; only 1: subst; only 1: rewrite <- H; only 1: auto).	1.87602496147	363
Coq.MSets.MSetWeakList.MakeRaw.mem_spec	40	0.7	search with cache (only 1: fix odd_spec 1; only 1: intuition).	0.0755558013916	36
Coq.MSets.MSetWeakList.MakeRaw.isok_iff	40	3.8	search with cache (only 1: fix odd_spec 1; only 1: intuition).	5.30786013603	366
Coq.MSets.MSetWeakList.MakeRaw.isok_Ok	40	0.0.1.2.0.0.0.0.0.2.28	search with cache (only 1: induction l as [| ? ? H]; only 1: intuition; only 1: simpl; only 1: rewrite andb_true_iff; only 1: rewrite negb_true_iff; only 1: intros [? ?]; only 1: constructors; only 1: rewrite <- mem_spec; only 1: congruence; only 1: auto; only 1: auto).	31.917347908	11866
Coq.MSets.MSetWeakList.MakeRaw.add_spec	40
Coq.MSets.MSetWeakList.MakeRaw.add_ok	40
Coq.MSets.MSetWeakList.MakeRaw.remove_spec	40
Coq.MSets.MSetWeakList.MakeRaw.remove_ok	40
Coq.MSets.MSetWeakList.MakeRaw.singleton_ok	40	0	search with cache (only 1: firstorder).	0.0128800868988	1
Coq.MSets.MSetWeakList.MakeRaw.singleton_spec	40	0.0.0.0.1	search with cache (only 1: unfold singleton; only 1: intros; only 1: intuition; only 1: inv; only 1: auto).	0.0243020057678	6
Coq.MSets.MSetWeakList.MakeRaw.empty_ok	40	4.5	search with cache (only 1: repeat red; only 1: constructor).	0.0160419940948	25
Coq.MSets.MSetWeakList.MakeRaw.empty_spec	40	0.1.6.0	search with cache (only 1: unfold empty; only 1: intro; only 1: intro; only 1: inv).	0.0371479988098	40
Coq.MSets.MSetWeakList.MakeRaw.is_empty_spec	40
Coq.MSets.MSetWeakList.MakeRaw.elements_spec1	40	2.0.0.4	search with cache (only 1: intros; only 1: induction s; only 1: intuition; only 1: intuition).	0.0741600990295	73
Coq.MSets.MSetWeakList.MakeRaw.elements_spec2w	40	5.2	search with cache (only 1: unfold elements; only 1: firstorder).	0.0136301517487	12
Coq.MSets.MSetWeakList.MakeRaw.fold_spec	40	0.0	search with cache (only 1: intros; only 1: auto).	0.0111730098724	2
Coq.MSets.MSetWeakList.MakeRaw.union_ok	40
Coq.MSets.MSetWeakList.MakeRaw.union_spec	40
Coq.MSets.MSetWeakList.MakeRaw.inter_ok	40
Coq.MSets.MSetWeakList.MakeRaw.inter_spec	40
Coq.MSets.MSetWeakList.MakeRaw.diff_ok	40
Coq.MSets.MSetWeakList.MakeRaw.diff_spec	40
Coq.MSets.MSetWeakList.MakeRaw.subset_spec	40
Coq.MSets.MSetWeakList.MakeRaw.equal_spec	40
Coq.MSets.MSetWeakList.MakeRaw.choose_spec1	40
Coq.MSets.MSetWeakList.MakeRaw.choose_spec2	40	3.0.0.0.0.1.1	search with cache (only 1: intros; only 1: unfold Empty, empty; only 1: destruct s; only 1: red; only 1: intros; only 1: inv; only 1: now discriminate).	0.474676132202	340
Coq.MSets.MSetWeakList.MakeRaw.cardinal_spec	40	0	search with cache (only 1: auto).	0.0100979804993	1
Coq.MSets.MSetWeakList.MakeRaw.filter_spec'	40
Coq.MSets.MSetWeakList.MakeRaw.filter_spec	40
Coq.MSets.MSetWeakList.MakeRaw.filter_ok	40
Coq.MSets.MSetWeakList.MakeRaw.for_all_spec	40
Coq.MSets.MSetWeakList.MakeRaw.exists_spec	40
Coq.MSets.MSetWeakList.MakeRaw.partition_spec1	40
Coq.MSets.MSetWeakList.MakeRaw.partition_spec2	40
Coq.MSets.MSetWeakList.MakeRaw.partition_ok1'	40
Coq.MSets.MSetWeakList.MakeRaw.partition_ok2'	40
Coq.MSets.MSetWeakList.MakeRaw.partition_ok1	40
Coq.MSets.MSetWeakList.MakeRaw.partition_ok2	40
Coq.MSets.MSetList.MakeRaw.inf_iff	40
Coq.MSets.MSetList.MakeRaw.isok_iff	40
Coq.MSets.MSetList.MakeRaw.isok_Ok	40	3	search with cache (only 1: tauto).	0.0138051509857	4
Coq.MSets.MSetList.MakeRaw.mem_spec	40	1.17	search with cache (only 1: fix even_spec 1; only 1: intuition).	2.23125195503	1641
Coq.MSets.MSetList.MakeRaw.add_inf	40
Coq.MSets.MSetList.MakeRaw.add_ok	40	1.0.2.3.1.1.1.0.0.8.14.15	search with cache (only 1: firstorder; only 1: inv; only 1: elim H; only 1: constructor; only 1: constructor; only 1: constructor; only 1: simpl; only 1: intros; only 1: elim_compare x a; only 1: auto; only 1: auto; only 1: auto).	10.3352508545	9258
Coq.MSets.MSetList.MakeRaw.add_spec	40
Coq.MSets.MSetList.MakeRaw.remove_inf	40	0.0.1.10.0.0.0.0.1.0	search with cache (only 1: simple induction s; only 1: intuition; only 1: simpl; only 1: intros; only 1: elim_compare x a; only 1: inv; only 1: eauto; only 1: intuition; only 1: inv; only 1: intuition).	27.6435399055	20379
Coq.MSets.MSetList.MakeRaw.remove_ok	40	0.0.0.0.0.0.0.1.0.0.0.0.0.0	search with cache (only 1: repeat rewrite <- isok_iff; only 1: revert s x; only 1: simple induction s; only 1: simpl; only 1: constructor; only 1: simpl; only 1: intros; only 1: elim_compare x a; only 1: inv; only 1: auto; only 1: inv; only 1: auto; only 1: inv; only 1: auto).	2.86612510681	1827
Coq.MSets.MSetList.MakeRaw.remove_spec	40
Coq.MSets.MSetList.MakeRaw.singleton_ok	40	1	search with cache (only 1: reflexivity).	0.0279779434204	14
Coq.MSets.MSetList.MakeRaw.singleton_spec	40	0.4.13.16	search with cache (only 1: intros x Hs; only 1: unfold singleton; only 1: rewrite InA_cons, InA_nil; only 1: tauto).	15.1168541908	17989
Coq.MSets.MSetList.MakeRaw.union_inf	40
Coq.MSets.MSetList.MakeRaw.union_ok	40
Coq.MSets.MSetList.MakeRaw.union_spec	40
Coq.MSets.MSetList.MakeRaw.inter_inf	40
Coq.MSets.MSetList.MakeRaw.inter_ok	40
Coq.MSets.MSetList.MakeRaw.inter_spec	40
Coq.MSets.MSetList.MakeRaw.diff_inf	40
Coq.MSets.MSetList.MakeRaw.diff_ok	40	0.0.0	search with cache (only 1: repeat rewrite <- isok_iff; only 1: revert s s'; only 1: induction2).	0.089457988739	3
Coq.MSets.MSetList.MakeRaw.diff_spec	40
Coq.MSets.MSetList.MakeRaw.equal_spec	40
Coq.MSets.MSetList.MakeRaw.subset_spec	40
Coq.MSets.MSetList.MakeRaw.empty_ok	40	2.0	search with cache (only 1: repeat rewrite <- isok_iff; only 1: constructor).	0.0209279060364	4
Coq.MSets.MSetList.MakeRaw.empty_spec	40	3.4.8.15	search with cache (only 1: intros s s'; only 1: revert s s'; only 1: intros a H; only 1: inversion_clear H).	0.867255926132	1006
Coq.MSets.MSetList.MakeRaw.is_empty_spec	40
Coq.MSets.MSetList.MakeRaw.elements_spec1	40	0.9	search with cache (only 1: intros; only 1: intuition).	0.0513069629669	42
Coq.MSets.MSetList.MakeRaw.elements_spec2	40	0.0.0.0.0.0.0.2.0.6	search with cache (only 1: intro l; only 1: intro H; only 1: induction l as [| x xs]; only 1: constructor; only 1: change_no_check (inf x xs && isok xs = true) in H; only 1: rewrite andb_true_iff, <- inf_iff in H; only 1: destruct H; only 1: constructor; only 1: tauto; only 1: tauto).	1.84225487709	1887
Coq.MSets.MSetList.MakeRaw.elements_spec2w	40	0.1.6	search with cache (only 1: intro s; only 1: repeat rewrite <- isok_iff; only 1: auto).	0.0396449565887	14
Coq.MSets.MSetList.MakeRaw.min_elt_spec1	40	2.7.3.10	search with cache (only 1: intros [| ] ? Heq; only 1: easy; only 1: inversion Heq; only 1: auto).	6.23469614983	6233
Coq.MSets.MSetList.MakeRaw.min_elt_spec2	40
Coq.MSets.MSetList.MakeRaw.min_elt_spec3	40	4.3.0.0.5.0	search with cache (only 1: destruct s; only 1: unfold Empty, empty; only 1: intuition; only 1: inv; only 1: simpl; only 1: inversion 1).	3.72582507133	2332
Coq.MSets.MSetList.MakeRaw.max_elt_spec1	40	3.2.0.5.0.0.3	search with cache (only 1: induction s as [| x s IH]; only 1: simpl; only 1: inversion 1; only 1: destruct s; only 1: inversion 1; only 1: auto; only 1: auto).	19.5869040489	11853
Coq.MSets.MSetList.MakeRaw.max_elt_spec2	40
Coq.MSets.MSetList.MakeRaw.max_elt_spec3	40
Coq.MSets.MSetList.MakeRaw.choose_spec3	40
Coq.MSets.MSetList.MakeRaw.fold_spec	40	0.0	search with cache (only 1: intros; only 1: auto).	0.0164039134979	2
Coq.MSets.MSetList.MakeRaw.cardinal_spec	40	0	search with cache (only 1: auto).	0.0151550769806	1
Coq.MSets.MSetList.MakeRaw.filter_inf	40
Coq.MSets.MSetList.MakeRaw.filter_ok	40
Coq.MSets.MSetList.MakeRaw.filter_spec	40
Coq.MSets.MSetList.MakeRaw.for_all_spec	40
Coq.MSets.MSetList.MakeRaw.exists_spec	40
Coq.MSets.MSetList.MakeRaw.partition_inf1	40
Coq.MSets.MSetList.MakeRaw.partition_inf2	40
Coq.MSets.MSetList.MakeRaw.partition_ok1	40
Coq.MSets.MSetList.MakeRaw.partition_ok2	40
Coq.MSets.MSetList.MakeRaw.partition_spec1	40
Coq.MSets.MSetList.MakeRaw.partition_spec2	40
Coq.MSets.MSetList.MakeRaw.In_compat	40	5.3	search with cache (only 1: intros x x' Hxx' y y' Hyy'; only 1: now rewrite Hxx', Hyy').	0.044774055481	16
Coq.MSets.MSetList.MakeRaw.lt_strorder	40
Coq.MSets.MSetList.MakeRaw.lt_compat	40
Coq.MSets.MSetList.MakeRaw.compare_spec_aux	40
Coq.MSets.MSetList.MakeRaw.compare_spec	40
Coq.MSets.MSetList.MakeWithLeibniz.eq_leibniz_list	40
Coq.MSets.MSetList.MakeWithLeibniz.eq_leibniz	40
Coq.Floats.FloatAxioms.Prim2SF_inj	40
Coq.Floats.FloatAxioms.SF2Prim_inj	40
Coq.Floats.FloatLemmas.shift_value	40	2	search with cache (only 1: auto with zarith).	0.0676839351654	3
Coq.Floats.FloatLemmas.frexp_spec	40
Coq.Floats.FloatLemmas.ldexp_spec	40
Coq.Relations.Operators_Properties.clos_rt_is_preorder	40
Coq.Relations.Operators_Properties.clos_rt_idempotent	40
Coq.Relations.Operators_Properties.clos_rt_clos_rst	40
Coq.Relations.Operators_Properties.clos_r_clos_rt	40	0.0.0.0	search with cache (only 1: red; only 1: induction 1; only 1: auto with sets; only 1: auto with sets).	0.00719618797302	4
Coq.Relations.Operators_Properties.clos_rt_t	40
Coq.Relations.Operators_Properties.clos_rst_is_equiv	40
Coq.Relations.Operators_Properties.clos_rst_idempotent	40	0.0.1.0.0.0.2.0	search with cache (only 1: red; only 1: induction 1; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets; only 1: apply rst_trans with y; only 1: auto with sets; only 1: auto with sets).	0.0498239994049	86
Coq.Relations.Operators_Properties.clos_t1n_trans	40
Coq.Relations.Operators_Properties.clos_trans_t1n	40
Coq.Relations.Operators_Properties.clos_trans_t1n_iff	40	0.0.2.1.0.0.5.0.0.0.2.1.0.0.0.0.0.0.0.0.5.5	search with cache (only 1: split; only 1: induction 1; only 1: left; only 1: assumption; only 1: induction IHclos_trans1; only 1: right with y; only 1: auto; only 1: auto; only 1: right with y; only 1: auto; only 1: eapply IHIHclos_trans1; only 1: apply clos_t1n_trans; only 1: auto; only 1: auto; only 1: auto; only 1: induction 1; only 1: left; only 1: assumption; only 1: right with y; only 1: left; only 1: auto; only 1: auto).	5.01749181747	25262
Coq.Relations.Operators_Properties.clos_tn1_trans	40	4.0.4.5.0.0.0	search with cache (only 1: induction 1; only 1: left; only 1: assumption; only 1: right with y; only 1: auto; only 1: left; only 1: auto).	0.187432050705	665
Coq.Relations.Operators_Properties.clos_trans_tn1	40
Coq.Relations.Operators_Properties.clos_trans_tn1_iff	40	0.0.0.1.0.0.5.0.0.0.0.0.0.0.0.0.0.0.5.0	search with cache (only 1: split; only 1: induction 1; only 1: left; only 1: auto; only 1: elim IHclos_trans2; only 1: intro y0; only 1: right with y; only 1: auto; only 1: auto; only 1: intros; only 1: right with y0; only 1: auto; only 1: auto; only 1: induction 1; only 1: left; only 1: auto; only 1: right with y; only 1: auto; only 1: left; only 1: auto).	2.14443492889	11580
Coq.Relations.Operators_Properties.clos_rt1n_step	40
Coq.Relations.Operators_Properties.clos_rtn1_step	40
Coq.Relations.Operators_Properties.clos_rt1n_rt	40	0.0.5.0.1	search with cache (only 1: induction 1; only 1: auto with sets; only 1: apply rt_trans with y; only 1: auto with sets; only 1: auto with sets).	0.0265369415283	93
Coq.Relations.Operators_Properties.clos_rt_rt1n	40
Coq.Relations.Operators_Properties.clos_rt_rt1n_iff	40
Coq.Relations.Operators_Properties.clos_rtn1_rt	40	0.0.2.0.0	search with cache (only 1: induction 1; only 1: auto with sets; only 1: constructor 3 with y; only 1: auto with sets; only 1: auto with sets).	0.0113680362701	13
Coq.Relations.Operators_Properties.clos_rt_rtn1	40
Coq.Relations.Operators_Properties.clos_rt_rtn1_iff	40
Coq.Relations.Operators_Properties.clos_refl_trans_ind_left	40
Coq.Relations.Operators_Properties.rt1n_ind_right	40
Coq.Relations.Operators_Properties.clos_refl_trans_ind_right	40
Coq.Relations.Operators_Properties.clos_rst1n_rst	40
Coq.Relations.Operators_Properties.clos_rst1n_trans	40
Coq.Relations.Operators_Properties.clos_rst1n_sym	40
Coq.Relations.Operators_Properties.clos_rst_rst1n	40
Coq.Relations.Operators_Properties.clos_rst_rst1n_iff	40
Coq.Relations.Operators_Properties.clos_rstn1_rst	40	0.7.0.3.0.2.0.0	search with cache (only 1: induction 1; only 1: auto with sets; only 1: constructor 4 with y; only 1: auto with sets; only 1: case H; only 1: auto with sets; only 1: constructor 3; only 1: auto with sets).	3.61785984039	13653
Coq.Relations.Operators_Properties.clos_rstn1_trans	40
Coq.Relations.Operators_Properties.clos_rstn1_sym	40
Coq.Relations.Operators_Properties.clos_rst_rstn1	40
Coq.Relations.Operators_Properties.clos_rst_rstn1_iff	40
Coq.Relations.Operators_Properties.clos_trans_transp_permute	40
Coq.Relations.Relations.inverse_image_of_equivalence	40	3.2.7.2.3.2.0.4.1	search with cache (only 1: intros x y H; only 1: induction 1; only 1: constructor 1; only 1: intro z; only 1: auto; only 1: intro z; only 1: eauto; only 1: intro z; only 1: auto).	2.1644320488	15704
Coq.Relations.Relations.inverse_image_of_eq	40	0.7.0.11.4.1.0	search with cache (only 1: intros; only 1: split; only 1: split; only 1: destruct 1; only 1: trivial; only 1: induction 1; only 1: trivial).	0.267983913422	1820
Coq.Sets.Uniset.leb_refl	40	5	search with cache (only 1: destr_bool).	0.00797986984253	6
Coq.Sets.Uniset.incl_left	40
Coq.Sets.Uniset.incl_right	40	0.0.0.0	search with cache (only 1: unfold incl; only 1: intros s1 s2 E a; only 1: elim (E a); only 1: auto).	0.0078980922699	4
Coq.Sets.Uniset.seq_refl	40	2	search with cache (only 1: auto).	0.00688791275024	3
Coq.Sets.Uniset.seq_trans	40
Coq.Sets.Uniset.seq_sym	40	0.0.1.0	search with cache (only 1: destruct x; only 1: unfold seq; only 1: destruct y; only 1: auto).	0.00960421562195	5
Coq.Sets.Uniset.union_empty_left	40	0.0.0	search with cache (only 1: unfold seq; only 1: destruct x; only 1: auto).	0.00819897651672	3
Coq.Sets.Uniset.union_empty_right	40	3.0.0.0.0	search with cache (only 1: unfold seq; only 1: unfold union; only 1: simpl; only 1: destruct x; only 1: intuition).	0.0163669586182	16
Coq.Sets.Uniset.union_comm	40
Coq.Sets.Uniset.union_ass	40	1.0.0.0.0.1.0	search with cache (only 1: unfold seq; only 1: unfold union; only 1: simpl; only 1: destruct x; only 1: destruct y; only 1: destruct z; only 1: auto with bool).	0.0525949001312	81
Coq.Sets.Uniset.seq_left	40	0.0.1.0.0.0.0.1	search with cache (only 1: destruct x; only 1: unfold seq; only 1: destruct y; only 1: destruct z; only 1: simpl; only 1: intros; only 1: rewrite H; only 1: auto).	0.172832965851	135
Coq.Sets.Uniset.seq_right	40	2.0.0.0.0.0.0.0.0.0	search with cache (only 1: unfold seq; only 1: unfold charac; only 1: unfold union; only 1: destruct x; only 1: destruct y; only 1: destruct z; only 1: simpl; only 1: intros; only 1: elim H; only 1: auto).	0.249459028244	271
Coq.Sets.Uniset.union_rotate	40
Coq.Sets.Uniset.seq_congr	40
Coq.Sets.Uniset.union_perm_left	40
Coq.Sets.Uniset.uniset_twist1	40
Coq.Sets.Uniset.uniset_twist2	40
Coq.Sets.Uniset.treesort_twist1	40
Coq.Sets.Uniset.treesort_twist2	40
Coq.Sets.Multiset.meq_refl	40	0	search with cache (only 1: split).	0.0114388465881	1
Coq.Sets.Multiset.meq_trans	40	14	search with cache (only 1: congruence).	0.394587993622	821
Coq.Sets.Multiset.meq_sym	40	1.0.0.0.0.0	search with cache (only 1: destruct x; only 1: unfold meq; only 1: destruct y; only 1: intros; only 1: rewrite H; only 1: auto).	0.0184421539307	7
Coq.Sets.Multiset.munion_empty_left	40	0.0.0	search with cache (only 1: unfold meq; only 1: destruct x; only 1: reflexivity).	0.0134389400482	3
Coq.Sets.Multiset.munion_empty_right	40	1.0.0.0	search with cache (only 1: unfold meq; only 1: unfold munion; only 1: simpl; only 1: auto).	0.0143690109253	5
Coq.Sets.Multiset.munion_comm	40	10.1.0.0.0	search with cache (only 1: unfold meq; only 1: unfold munion; only 1: simpl; only 1: destruct x; only 1: intuition).	1.90041399002	3548
Coq.Sets.Multiset.munion_ass	40	1.0.0.0.1.0.0.0	search with cache (only 1: unfold meq; only 1: unfold multiplicity; only 1: unfold munion; only 1: simpl; only 1: destruct x; only 1: destruct y; only 1: destruct z; only 1: auto with arith).	0.0455601215363	27
Coq.Sets.Multiset.meq_left	40	0.0.0.0.0.0.0	search with cache (only 1: unfold meq; only 1: unfold multiplicity; only 1: unfold munion; only 1: destruct x; only 1: destruct y; only 1: destruct z; only 1: auto with arith).	0.0225081443787	7
Coq.Sets.Multiset.meq_right	40	1.0.0.0.0.0.0.0.0	search with cache (only 1: unfold meq; only 1: unfold munion; only 1: unfold multiplicity; only 1: destruct x; only 1: destruct y; only 1: destruct z; only 1: intros; only 1: elim H; only 1: auto with arith).	0.0229279994965	10
Coq.Sets.Multiset.munion_rotate	40
Coq.Sets.Multiset.meq_congr	40	1.2.1.0.0.0.0.0.0	search with cache (only 1: unfold meq; only 1: unfold munion; only 1: unfold multiplicity; only 1: destruct x; only 1: destruct y; only 1: destruct z; only 1: intros; only 1: elim H; only 1: auto with arith).	0.322974205017	251
Coq.Sets.Multiset.munion_perm_left	40
Coq.Sets.Multiset.multiset_twist1	40
Coq.Sets.Multiset.multiset_twist2	40
Coq.Sets.Multiset.treesort_twist1	40
Coq.Sets.Multiset.treesort_twist2	40
Coq.Sets.Multiset.meq_singleton	40
Coq.Sets.Integers.le_reflexive	40	0	search with cache (only 1: auto with sets).	0.00552582740784	1
Coq.Sets.Integers.le_antisym	40	0.0	search with cache (only 1: red; only 1: PeanoNat.Nat.order).	0.00879383087158	2
Coq.Sets.Integers.le_trans	40	1.8.0	search with cache (only 1: red; only 1: intros A x n n' H'; only 1: PeanoNat.Nat.Private_Tac.order).	0.060408115387	195
Coq.Sets.Integers.le_Order	40
Coq.Sets.Integers.triv_nat	40	4.2.1	search with cache (only 1: intro x; only 1: red; only 1: split).	0.00853610038757	10
Coq.Sets.Integers.nat_po	40
Coq.Sets.Integers.le_total_order	40	2.0.13.0.11.6.9	search with cache (only 1: split; only 1: intro x; only 1: simpl; only 1: intros n m; only 1: destruct (le_gt_dec n m); only 1: intuition PeanoNat.Nat.order; only 1: auto with sets arith).	13.9923100471	22705
Coq.Sets.Integers.Finite_subset_has_lub	40
Coq.Sets.Integers.Integers_has_no_ub	40
Coq.Sets.Integers.Integers_infinite	40
Coq.Sets.Relations_1_facts.Rsym_imp_notRsym	40	2.0.1	search with cache (only 1: intros; only 1: intros A C h1 h2; only 1: auto).	0.00597596168518	21
Coq.Sets.Relations_1_facts.Equiv_from_preorder	40
Coq.Sets.Relations_1_facts.Equiv_from_order	40	6.0.0	search with cache (only 1: intros U R H'; only 1: elim H'; only 1: auto with sets).	0.0200259685516	50
Coq.Sets.Relations_1_facts.contains_is_preorder	40	5	search with cache (only 1: auto  10 with sets).	0.0130059719086	14
Coq.Sets.Relations_1_facts.same_relation_is_equivalence	40
Coq.Sets.Relations_1_facts.cong_reflexive_same_relation	40	0.8.4.0	search with cache (only 1: unfold same_relation at 1; only 1: intros U R H'; only 1: intros [? ?]; only 1: auto  10 with sets).	0.175507068634	715
Coq.Sets.Relations_1_facts.cong_symmetric_same_relation	40	4.2.0	search with cache (only 1: unfold Symmetric, Complement; only 1: unfold same_relation at 1; only 1: intuition).	0.020721912384	37
Coq.Sets.Relations_1_facts.cong_antisymmetric_same_relation	40	1.0	search with cache (only 1: unfold same_relation; only 1: intuition).	0.0158100128174	3
Coq.Sets.Relations_1_facts.cong_transitive_same_relation	40
Coq.Sets.Relations_2_facts.Rstar_reflexive	40	1	search with cache (only 1: intuition).	0.00390100479126	2
Coq.Sets.Relations_2_facts.Rplus_contains_R	40	0	search with cache (only 1: auto  10 with sets).	0.0029399394989	1
Coq.Sets.Relations_2_facts.Rstar_contains_R	40
Coq.Sets.Relations_2_facts.Rstar_contains_Rplus	40
Coq.Sets.Relations_2_facts.Rstar_transitive	40
Coq.Sets.Relations_2_facts.Rstar_cases	40
Coq.Sets.Relations_2_facts.Rstar_equiv_Rstar1	40
Coq.Sets.Relations_2_facts.Rsym_imp_Rstarsym	40
Coq.Sets.Relations_2_facts.Sstar_contains_Rstar	40	0.4.3.5.0.1.9.2.1.9.3	search with cache (only 1: intuition; only 1: intros x y H'0; only 1: elim H'0; only 1: auto with sets; only 1: intros x0 y0 z H'1 H'2 H'3; only 1: generalize Rstar_transitive; only 1: intro T1; only 1: red in T1; only 1: apply T1 with y0; only 1: auto with sets; only 1: auto with sets).	36.8928201199	250014
Coq.Sets.Relations_2_facts.star_monotone	40
Coq.Sets.Relations_2_facts.RstarRplus_RRstar	40
Coq.Sets.Relations_2_facts.Lemma1	40
Coq.Sets.Permut.cong_congr	40
Coq.Sets.Permut.comm_right	40
Coq.Sets.Permut.comm_left	40	3.0.0	search with cache (only 1: intros; only 1: apply cong_left; only 1: trivial).	0.00749897956848	6
Coq.Sets.Permut.perm_right	40
Coq.Sets.Permut.perm_left	40
Coq.Sets.Permut.op_rotate	40
Coq.Sets.Permut.twist	40
Coq.Sets.Image.Im_def	40	1.0.13.8.14	search with cache (only 1: intros A B; only 1: intros x0 H'0; only 1: exists x0; only 1: auto with sets; only 1: auto with sets).	6.02790904045	17854
Coq.Sets.Image.Im_add	40
Coq.Sets.Image.image_empty	40	0.7.1.0.1.2.4.0	search with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: destruct 1; only 1: auto with sets).	1.21253108978	1444
Coq.Sets.Image.finite_image	40
Coq.Sets.Image.Im_inv	40	11.4.0.5	search with cache (only 1: intros A x y H'; only 1: elim H'; only 1: intros; only 1: firstorder).	1.16191411018	2529
Coq.Sets.Image.not_injective_elim	40
Coq.Sets.Image.cardinal_Im_intro	40
Coq.Sets.Image.In_Image_elim	40
Coq.Sets.Image.injective_preserves_cardinal	40
Coq.Sets.Image.cardinal_decreases	40
Coq.Sets.Image.Pigeonhole	40
Coq.Sets.Image.Pigeonhole_principle	40
Coq.Sets.Infinite_sets.make_new_approximant	40
Coq.Sets.Infinite_sets.approximants_grow	40	1.47.8	search with cache (only 1: intros X Y I NI; only 1: fix gcd_divide 1; only 1: auto with sets).	28.3611190319	105768
Coq.Sets.Infinite_sets.approximants_grow'	40
Coq.Sets.Infinite_sets.approximant_can_be_any_size	40	1.3.19.8.11	search with cache (only 1: unfold not; only 1: intros P exnot allP; only 1: fix gcd_divide 1; only 1: intros; only 1: trivial).	9.53548192978	35209
Coq.Sets.Infinite_sets.Image_set_continuous	40
Coq.Sets.Infinite_sets.Image_set_continuous'	40
Coq.Sets.Infinite_sets.Pigeonhole_bis	40
Coq.Sets.Infinite_sets.Pigeonhole_ter	40
Coq.Sets.Powerset.Empty_set_minimal	40	1.0.2	search with cache (only 1: compute; only 1: intros; only 1: intuition).	0.00496602058411	6
Coq.Sets.Powerset.Power_set_Inhabited	40
Coq.Sets.Powerset.Inclusion_is_an_order	40
Coq.Sets.Powerset.Inclusion_is_transitive	40	3.1.0.0	search with cache (only 1: red; only 1: intro X; only 1: intros x H'; only 1: auto  6 with sets).	0.00803112983704	13
Coq.Sets.Powerset.Power_set_PO	40
Coq.Sets.Powerset.Strict_Rel_is_Strict_Included	40	0.0.0.0.0.1	search with cache (only 1: red; only 1: split; only 1: intro A; only 1: auto; only 1: intro A; only 1: auto).	0.00564694404602	7
Coq.Sets.Powerset.Strict_inclusion_is_transitive_with_inclusion	40
Coq.Sets.Powerset.Strict_inclusion_is_transitive_with_inclusion_left	40
Coq.Sets.Powerset.Strict_inclusion_is_transitive	40	0.2.2.0.1.0.0.0.1.2	search with cache (only 1: red; only 1: intros x y z H' H'0; only 1: elim Strict_Rel_is_Strict_Included; only 1: unfold contains; only 1: intros H'1 H'2; only 1: apply H'1; only 1: apply Strict_Rel_Transitive_with_Rel_left with (y := y); only 1: apply H'1; only 1: auto with sets; only 1: auto with sets).	27.1437160969	3553
Coq.Sets.Powerset.Empty_set_is_Bottom	40
Coq.Sets.Powerset.Union_minimal	40
Coq.Sets.Powerset.Intersection_maximal	40	3.0.0.0	search with cache (only 1: intros a b X H' H'0; only 1: red; only 1: intros x H'1; only 1: auto with sets).	0.00672388076782	11
Coq.Sets.Powerset.Union_increases_l	40	1	search with cache (only 1: auto with sets).	0.00394892692566	2
Coq.Sets.Powerset.Union_increases_r	40	1	search with cache (only 1: auto with sets).	0.00377011299133	2
Coq.Sets.Powerset.Intersection_decreases_l	40	0.1.0.6.3.1	search with cache (only 1: intro X; only 1: intro A; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: auto with sets).	6.62303185463	1338
Coq.Sets.Powerset.Intersection_decreases_r	40	0.0.0.0.1	search with cache (only 1: intros a b; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: auto with sets).	0.00720500946045	6
Coq.Sets.Powerset.Union_is_Lub	40
Coq.Sets.Powerset.Intersection_is_Glb	40
Coq.Sets.Classical_sets.not_included_empty_Inhabited	40
Coq.Sets.Classical_sets.not_empty_Inhabited	40
Coq.Sets.Classical_sets.Inhabited_Setminus	40
Coq.Sets.Classical_sets.Strict_super_set_contains_new_element	40
Coq.Sets.Classical_sets.Subtract_intro	40	1.8	search with cache (only 1: red; only 1: auto  7 using Inhabited_Setminus with sets).	0.650634050369	124
Coq.Sets.Classical_sets.Subtract_inv	40	3.0.10	search with cache (only 1: intros B C x H'; only 1: elim H'; only 1: auto with sets).	0.722053050995	747
Coq.Sets.Classical_sets.Included_Strict_Included	40
Coq.Sets.Classical_sets.Strict_Included_inv	40	4.0.6.10	search with cache (only 1: destruct 1; only 1: split; only 1: auto with sets; only 1: auto  7 using Inhabited_Setminus with sets).	13.970705986	8160
Coq.Sets.Classical_sets.not_SIncl_empty	40	0.2.1.0.0	search with cache (only 1: intros; only 1: red; only 1: intro H'; only 1: elim H'; only 1: auto with sets).	0.104249000549	8
Coq.Sets.Classical_sets.Complement_Complement	40
Coq.Sets.Relations_3_facts.Rstar_imp_coherent	40
Coq.Sets.Relations_3_facts.coherent_symmetric	40	0.8.7.16.1.3.1	search with cache (only 1: unfold Symmetric, Complement; only 1: intros U R; only 1: red; only 1: intros A P; only 1: intros (x, (Hx, Huni)); only 1: exists x; only 1: auto).	18.2678229809	109107
Coq.Sets.Relations_3_facts.Strong_confluence	40
Coq.Sets.Relations_3_facts.Strong_confluence_direct	40
Coq.Sets.Relations_3_facts.Noetherian_contains_Noetherian	40
Coq.Sets.Relations_3_facts.Newman	40
Coq.Sets.Powerset_Classical_facts.sincl_add_x	40
Coq.Sets.Powerset_Classical_facts.incl_soustr_in	40	0.7.0.0.0	search with cache (only 1: intros X Y H'; only 1: red in H'; only 1: red; only 1: destruct 1; only 1: auto with sets).	0.310847997665	373
Coq.Sets.Powerset_Classical_facts.incl_soustr	40	0.1.0.0.4.0	search with cache (only 1: intros X x H'; only 1: intro UIP; only 1: red; only 1: intros x0 H'0; only 1: elim H'0; only 1: auto with sets).	0.525072097778	234
Coq.Sets.Powerset_Classical_facts.incl_soustr_add_l	40
Coq.Sets.Powerset_Classical_facts.incl_soustr_add_r	40
Coq.Sets.Powerset_Classical_facts.add_soustr_2	40
Coq.Sets.Powerset_Classical_facts.add_soustr_1	40	3.1.2.0.2.4.0.0.0.4.0	search with cache (only 1: intros X x H'; only 1: unfold Add; only 1: red; only 1: intros x0 H'0; only 1: elim H'0; only 1: intros t H'1; only 1: elim H'1; only 1: auto with sets; only 1: intros t H'1; only 1: elim H'1; only 1: auto with sets).	28.4258599281	49981
Coq.Sets.Powerset_Classical_facts.add_soustr_xy	40
Coq.Sets.Powerset_Classical_facts.incl_st_add_soustr	40
Coq.Sets.Powerset_Classical_facts.Sub_Add_new	40
Coq.Sets.Powerset_Classical_facts.Simplify_add	40
Coq.Sets.Powerset_Classical_facts.Included_Add	40
Coq.Sets.Powerset_Classical_facts.setcover_inv	40
Coq.Sets.Powerset_Classical_facts.Add_covers	40
Coq.Sets.Powerset_Classical_facts.covers_Add	40
Coq.Sets.Powerset_Classical_facts.covers_is_Add	40
Coq.Sets.Powerset_Classical_facts.Singleton_atomic	40
Coq.Sets.Powerset_Classical_facts.less_than_singleton	40
Coq.Sets.Partial_Order.Strict_Rel_Transitive_with_Rel	40
Coq.Sets.Partial_Order.Strict_Rel_Transitive_with_Rel_left	40
Coq.Sets.Partial_Order.Strict_Rel_Transitive	40
Coq.Sets.Powerset_facts.Empty_set_zero	40
Coq.Sets.Powerset_facts.Empty_set_zero_right	40	0	search with cache (only 1: auto  6 with sets).	0.0113248825073	1
Coq.Sets.Powerset_facts.Empty_set_zero'	40
Coq.Sets.Powerset_facts.less_than_empty	40	0	search with cache (only 1: auto  6 with sets).	0.0102689266205	1
Coq.Sets.Powerset_facts.Union_commutative	40	1	search with cache (only 1: auto  6 with sets).	0.012787103653	2
Coq.Sets.Powerset_facts.Union_associative	40
Coq.Sets.Powerset_facts.Union_idempotent	40	0	search with cache (only 1: auto  6 with sets).	0.0125567913055	1
Coq.Sets.Powerset_facts.Union_absorbs	40	0	search with cache (only 1: auto  7 with sets).	0.0151290893555	1
Coq.Sets.Powerset_facts.Couple_as_union	40
Coq.Sets.Powerset_facts.Triple_as_union	40
Coq.Sets.Powerset_facts.Triple_as_Couple	40	0.0.0.0.1.0.0.0.0.1.0.0.0.0	search with cache (only 1: intros x y; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: auto with sets; only 1: auto with sets; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets).	0.551415920258	838
Coq.Sets.Powerset_facts.Triple_as_Couple_Singleton	40	1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1	search with cache (only 1: intros x y z; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: intros x1 H'0; only 1: elim H'0; only 1: auto with sets; only 1: auto with sets; only 1: intros x1 H'0; only 1: elim H'0; only 1: auto with sets).	3.09688401222	4739
Coq.Sets.Powerset_facts.Intersection_commutative	40	0.1.3.0.0.1.3.0.1.2.0	search with cache (only 1: intros x y; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: auto with sets; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: auto with sets).	0.817951917648	1741
Coq.Sets.Powerset_facts.Distributivity	40
Coq.Sets.Powerset_facts.Distributivity_l	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros A B C; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: intros x0 H'0; only 1: elim H'0; only 1: auto with sets; only 1: auto with sets; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: intros x0 H'0; only 1: elim H'0; only 1: auto with sets; only 1: intros x0 H'0; only 1: elim H'0; only 1: auto with sets).	0.93195605278	1778
Coq.Sets.Powerset_facts.Distributivity'	40
Coq.Sets.Powerset_facts.Union_add	40	0.1.1	search with cache (only 1: unfold Add at 1; only 1: unfold Add at 1; only 1: auto  9 with sets).	0.100352048874	5
Coq.Sets.Powerset_facts.Non_disjoint_union	40	0.0.0.2.1.1.4.3.0.3.5.1.1	search with cache (only 1: unfold Add; only 1: intros x y H'; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x0 H'0; only 1: elim H'0; only 1: auto with sets; only 1: intros x2 H'1; only 1: elim H'1; only 1: assumption; only 1: red; only 1: auto with sets).	4.62961983681	13792
Coq.Sets.Powerset_facts.Non_disjoint_union'	40
Coq.Sets.Powerset_facts.singlx	40	4.1.1.4.1.0.4	search with cache (only 1: unfold Add at 1; only 1: intros x y H'; only 1: elim H'; only 1: intros x0 H'0; only 1: apply Singleton_inv; only 1: elim H'0; only 1: auto with sets).	1.06578803062	2947
Coq.Sets.Powerset_facts.incl_add	40	0.3.2.1	search with cache (only 1: unfold Add at 1; only 1: intros A x; only 1: unfold Add; only 1: auto with sets).	0.142960071564	29
Coq.Sets.Powerset_facts.incl_add_x	40
Coq.Sets.Powerset_facts.Add_commutative	40	1.0.0	search with cache (only 1: unfold Add at 1; only 1: unfold Add; only 1: auto  9 with sets).	0.0558152198792	4
Coq.Sets.Powerset_facts.Add_commutative'	40	16.3.0.0.2	search with cache (only 1: intros A B x H'; only 1: apply Extensionality_Ensembles; only 1: red; only 1: unfold Add; only 1: auto  10 with sets).	27.4308340549	33146
Coq.Sets.Powerset_facts.Add_distributes	40	4.0.6.4.0	search with cache (only 1: unfold Add; only 1: intros a b X H' H'0; only 1: apply Extensionality_Ensembles; only 1: red; only 1: auto  10 with sets).	3.22985601425	2298
Coq.Sets.Powerset_facts.setcover_intro	40	1.2.0	search with cache (only 1: intro X; only 1: intros; only 1: auto with sets).	0.00983810424805	6
Coq.Sets.Powerset_facts.Disjoint_Intersection	40
Coq.Sets.Powerset_facts.Intersection_Empty_set_l	40	1.1.0.0.0	search with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intuition; only 1: intuition).	0.0122611522675	7
Coq.Sets.Powerset_facts.Intersection_Empty_set_r	40	1.1.0.0.0	search with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intuition; only 1: intuition).	0.0122539997101	7
Coq.Sets.Powerset_facts.Seminus_Empty_set_l	40	0.1.6.0.1.0.1.0	search with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x H; only 1: destruct H; only 1: auto with sets; only 1: intuition).	0.560453891754	1035
Coq.Sets.Powerset_facts.Seminus_Empty_set_r	40	1.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x H1; only 1: destruct H1; only 1: unfold In in *; only 1: assumption; only 1: intuition).	0.0167469978333	11
Coq.Sets.Powerset_facts.Setminus_Union_l	40
Coq.Sets.Powerset_facts.Setminus_Union_r	40
Coq.Sets.Powerset_facts.Setminus_Disjoint_noop	40
Coq.Sets.Powerset_facts.Setminus_Included_empty	40	0.0.2.3.0.0.0.1.0	search with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x H1; only 1: destruct H1; only 1: destruct H1; only 1: intuition; only 1: intros x H1; only 1: destruct H1).	0.497438907623	693
Coq.Sets.Constructive_sets.Extension	40
Coq.Sets.Constructive_sets.Noone_in_empty	40	4.3.3.0	search with cache (only 1: unfold not; only 1: intro H; only 1: intro H1; only 1: elim H1).	0.0298800468445	213
Coq.Sets.Constructive_sets.Included_Empty	40	1.0.0	search with cache (only 1: red; only 1: red; only 1: destruct 1).	0.00631093978882	4
Coq.Sets.Constructive_sets.Add_intro1	40
Coq.Sets.Constructive_sets.Add_intro2	40	0.0	search with cache (only 1: unfold Add at 1; only 1: auto with sets).	0.00638294219971	2
Coq.Sets.Constructive_sets.Inhabited_add	40
Coq.Sets.Constructive_sets.Inhabited_not_empty	40
Coq.Sets.Constructive_sets.Add_not_Empty	40
Coq.Sets.Constructive_sets.not_Empty_Add	40
Coq.Sets.Constructive_sets.Singleton_inv	40	3.0.1	search with cache (only 1: intros B C H'; only 1: rewrite H'; only 1: auto with sets).	0.00840306282043	7
Coq.Sets.Constructive_sets.Singleton_intro	40	1.0.0	search with cache (only 1: intros x y H'; only 1: elim H'; only 1: trivial with sets).	0.00732898712158	4
Coq.Sets.Constructive_sets.Union_inv	40	0.0.0.4.6	search with cache (only 1: destruct 1; only 1: left; only 1: assumption; only 1: right; only 1: assumption).	0.185791015625	439
Coq.Sets.Constructive_sets.Add_inv	40
Coq.Sets.Constructive_sets.Intersection_inv	40	1.0.0.0.0.0.0.0.0	search with cache (only 1: intros B C x H'; only 1: elim H'; only 1: elim H'; only 1: elim H'; only 1: elim H'; only 1: elim H'; only 1: elim H'; only 1: elim H'; only 1: auto with sets).	0.0180189609528	11
Coq.Sets.Constructive_sets.Couple_inv	40	4.0.1.0.0	search with cache (only 1: intros A x y H'; only 1: induction H'; only 1: left; only 1: trivial; only 1: auto).	0.00989317893982	13
Coq.Sets.Constructive_sets.Setminus_intro	40	1.1.0.0	search with cache (only 1: red; only 1: red; only 1: intros B C x H'; only 1: auto with sets).	0.00777506828308	6
Coq.Sets.Constructive_sets.Strict_Included_intro	40	2.1.1.1.0	search with cache (only 1: intros B C H'; only 1: elim H'; only 1: elim H'; only 1: elim H'; only 1: auto with sets).	0.0112059116364	11
Coq.Sets.Constructive_sets.Strict_Included_strict	40	2.1.1	search with cache (only 1: red; only 1: destruct 1; only 1: auto with sets).	0.00910115242004	13
Coq.Sets.Finite_sets_facts.finite_cardinal	40
Coq.Sets.Finite_sets_facts.cardinal_finite	40	0.1.1.4.1	search with cache (only 1: intro X; only 1: intros x H'; only 1: elim H'; only 1: auto with sets; only 1: auto with sets).	0.0693788528442	93
Coq.Sets.Finite_sets_facts.Add_preserves_Finite	40
Coq.Sets.Finite_sets_facts.Singleton_is_finite	40	0.5.8	search with cache (only 1: intros; only 1: rewrite <- (Empty_set_zero' U x); only 1: auto with sets).	0.0483059883118	175
Coq.Sets.Finite_sets_facts.Union_preserves_Finite	40
Coq.Sets.Finite_sets_facts.Finite_downward_closed	40
Coq.Sets.Finite_sets_facts.Intersection_preserves_finite	40
Coq.Sets.Finite_sets_facts.cardinalO_empty	40	0.24.5	search with cache (only 1: intros a0; only 1: inversion 1; only 1: auto with sets).	4.94776391983	5178
Coq.Sets.Finite_sets_facts.inh_card_gt_O	40
Coq.Sets.Finite_sets_facts.card_soustr_1	40
Coq.Sets.Finite_sets_facts.cardinal_is_functional	40
Coq.Sets.Finite_sets_facts.cardinal_Empty	40
Coq.Sets.Finite_sets_facts.cardinal_unicity	40
Coq.Sets.Finite_sets_facts.card_Add_gen	40
Coq.Sets.Finite_sets_facts.incl_st_card_lt	40
Coq.Sets.Finite_sets_facts.incl_card_le	40
Coq.Sets.Finite_sets_facts.G_aux	40
Coq.Sets.Finite_sets_facts.Generalized_induction_on_finite_sets	40
Coq.Sets.Finite_sets.cardinal_invert	40
Coq.Sets.Finite_sets.cardinal_elim	40	3.0.4.2	search with cache (only 1: intros B C H'; only 1: elim H'; only 1: auto with sets; only 1: auto with sets).	0.0584630966187	225