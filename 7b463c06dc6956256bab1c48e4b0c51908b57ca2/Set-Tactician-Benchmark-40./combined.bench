
Coq.micromega.OrderedRing.rplus_morph_Proper	40
Coq.micromega.OrderedRing.rtimes_morph_Proper	40
Coq.micromega.OrderedRing.ropp_morph_Proper	40
Coq.micromega.OrderedRing.rle_morph_Proper	40
Coq.micromega.OrderedRing.rlt_morph_Proper	40
Coq.micromega.OrderedRing.rminus_morph_Proper	40
Coq.micromega.OrderedRing.Rneq_symm	40
Coq.micromega.OrderedRing.Rplus_0_l	40
Coq.micromega.OrderedRing.Rplus_0_r	40	0.0	search with cache (only 1: intro; only 1: ring).	0.017410993576	2
Coq.micromega.OrderedRing.Rtimes_0_r	40	2.12	search with cache (only 1: intro; only 1: ring).	0.0602440834045	94
Coq.micromega.OrderedRing.Rplus_comm	40	0.2.1	search with cache (only 1: intro; only 1: intro; only 1: ring).	0.0246868133545	6
Coq.micromega.OrderedRing.Rtimes_0_l	40	0.0	search with cache (only 1: intro; only 1: ring).	0.0178198814392	2
Coq.micromega.OrderedRing.Rtimes_comm	40	0.2.1	search with cache (only 1: intro; only 1: intro; only 1: ring).	0.0242011547089	6
Coq.micromega.OrderedRing.Rminus_eq_0	40
Coq.micromega.OrderedRing.Rplus_cancel_l	40
Coq.micromega.OrderedRing.Req_em	40
Coq.micromega.OrderedRing.Req_dne	40
Coq.micromega.OrderedRing.Rle_lt_eq	40
Coq.micromega.OrderedRing.Rlt_trans	40
Coq.micromega.OrderedRing.Rle_lt_trans	40
Coq.micromega.OrderedRing.Rlt_le_trans	40
Coq.micromega.OrderedRing.Rle_gt_cases	40
Coq.micromega.OrderedRing.Rlt_neq	40	0.1.3.1	search with cache (only 1: intros n m; only 1: rewrite Rlt_le_neq; only 1: intro H; only 1: now destruct H).	0.0405900478363	20
Coq.micromega.OrderedRing.Rle_ngt	40
Coq.micromega.OrderedRing.Rlt_nge	40
Coq.micromega.OrderedRing.Rplus_le_mono_l	40
Coq.micromega.OrderedRing.Rplus_le_mono_r	40
Coq.micromega.OrderedRing.Rplus_lt_mono_l	40
Coq.micromega.OrderedRing.Rplus_lt_mono_r	40	1.0.0.3.1.0	search with cache (only 1: intros n m p; only 1: rewrite (Rplus_comm m p); only 1: rewrite (Rplus_comm n p); only 1: do 2 rewrite Rlt_le_neq; only 1: rewrite Rplus_cancel_l; only 1: now rewrite <- Rplus_le_mono_l).	0.496511936188	159
Coq.micromega.OrderedRing.Rplus_lt_mono	40
Coq.micromega.OrderedRing.Rplus_le_mono	40
Coq.micromega.OrderedRing.Rplus_lt_le_mono	40
Coq.micromega.OrderedRing.Rplus_le_lt_mono	40
Coq.micromega.OrderedRing.Rplus_pos_pos	40
Coq.micromega.OrderedRing.Rplus_pos_nonneg	40
Coq.micromega.OrderedRing.Rplus_nonneg_pos	40
Coq.micromega.OrderedRing.Rplus_nonneg_nonneg	40
Coq.micromega.OrderedRing.Rle_le_minus	40
Coq.micromega.OrderedRing.Rlt_lt_minus	40
Coq.micromega.OrderedRing.Ropp_lt_mono	40
Coq.micromega.OrderedRing.Ropp_pos_neg	40
Coq.micromega.OrderedRing.Rtimes_nonneg_nonneg	40
Coq.micromega.OrderedRing.Rtimes_pos_neg	40
Coq.micromega.OrderedRing.Rtimes_neg_neg	40
Coq.micromega.OrderedRing.Rtimes_square_nonneg	40
Coq.micromega.OrderedRing.Rtimes_neq_0	40
Coq.micromega.OrderedRing.Ropp_neg_pos	40
Coq.micromega.OrderedRing.Rlt_0_1	40
Coq.micromega.OrderedRing.Rlt_succ_r	40
Coq.micromega.OrderedRing.Rlt_lt_succ	40
Coq.micromega.ZCoeff.req_refl	40
Coq.micromega.ZCoeff.req_sym	40
Coq.micromega.ZCoeff.req_trans	40
Coq.micromega.ZCoeff.rplus_morph_Proper	40	0	search with cache (only 1: exact (SORplus_wd sor)).	0.0282330513	1
Coq.micromega.ZCoeff.rtimes_morph_Proper	40	0	search with cache (only 1: exact (SORtimes_wd sor)).	0.0284459590912	1
Coq.micromega.ZCoeff.ropp_morph_Proper	40	0	search with cache (only 1: exact (SORopp_wd sor)).	0.02587890625	1
Coq.micromega.ZCoeff.rle_morph_Proper	40	1	search with cache (only 1: exact (SORle_wd sor)).	0.107460975647	40
Coq.micromega.ZCoeff.rlt_morph_Proper	40	0	search with cache (only 1: exact (SORlt_wd sor)).	0.0246231555939	1
Coq.micromega.ZCoeff.rminus_morph_Proper	40	1.0.0.0.1	search with cache (only 1: intros x1 x2 H1 y1 y2 H2; only 1: rewrite (Rsub_def (SORrt sor) x1 y1); only 1: rewrite (Rsub_def (SORrt sor) x2 y2); only 1: rewrite H1; only 1: now rewrite H2).	0.76496386528	24
Coq.micromega.ZCoeff.ring_ops_wd	40
Coq.micromega.ZCoeff.Zring_morph	40
Coq.micromega.ZCoeff.phi_pos1_pos	40
Coq.micromega.ZCoeff.phi_pos1_succ	40
Coq.micromega.ZCoeff.clt_pos_morph	40
Coq.micromega.ZCoeff.clt_morph	40
Coq.micromega.ZCoeff.Zcleb_morph	40
Coq.micromega.ZCoeff.Zcneqb_morph	40
Coq.micromega.ZifyClasses.mkapp2	40
Coq.micromega.ZifyClasses.mkapp	40
Coq.micromega.ZifyClasses.mkapp0	40
Coq.micromega.ZifyClasses.mkrel	40
Coq.micromega.ZMicromega.eq_le_iff	40	6	search with cache (only 1: intuition Z.order).	0.048595905304	21
Coq.micromega.ZMicromega.lt_le_iff	40	0	search with cache (only 1: apply Z.lt_le_pred).	0.01398396492	1
Coq.micromega.ZMicromega.le_0_iff	40	0.0.19.0	search with cache (only 1: intros n m; only 1: split; only 1: apply Z.le_0_sub; only 1: apply Z.le_0_sub).	5.75341701508	3504
Coq.micromega.ZMicromega.le_neg	40
Coq.micromega.ZMicromega.eq_cnf	40
Coq.micromega.ZMicromega.Zsor	40
Coq.micromega.ZMicromega.ZSORaddon	40
Coq.micromega.ZMicromega.ZNpower	40
Coq.micromega.ZMicromega.Zeval_expr_compat	40
Coq.micromega.ZMicromega.Zeval_formula_compat'	40
Coq.micromega.ZMicromega.Zeval_nformula_dec	40
Coq.micromega.ZMicromega.ZWeakChecker_sound	40
Coq.micromega.ZMicromega.eval_pol_sub	40
Coq.micromega.ZMicromega.eval_pol_add	40
Coq.micromega.ZMicromega.eval_pol_mul	40
Coq.micromega.ZMicromega.eval_pol_norm	40
Coq.micromega.ZMicromega.Zunsat_sound	40
Coq.micromega.ZMicromega.xnnormalise_correct	40
Coq.micromega.ZMicromega.eval_pol_Pc	40	6.0	search with cache (only 1: intros; only 1: eauto).	0.0253551006317	8
Coq.micromega.ZMicromega.xnormalise_correct	40
Coq.micromega.ZMicromega.cnf_of_list_correct	40
Coq.micromega.ZMicromega.normalise_correct	40
Coq.micromega.ZMicromega.xnegate_correct	40
Coq.micromega.ZMicromega.negate_correct	40
Coq.micromega.ZMicromega.Zdivide_ceiling	40
Coq.micromega.ZMicromega.narrow_interval_lower_bound	40
Coq.micromega.ZMicromega.isZ0_0	40
Coq.micromega.ZMicromega.isZ0_n0	40	0.0.0.0.0.0.0	search with cache (only 1: destruct x; only 1: simpl; only 1: easy'; only 1: simpl; only 1: intuition congruence; only 1: simpl; only 1: intuition congruence).	0.115261077881	7
Coq.micromega.ZMicromega.Zdiv_pol_correct	40
Coq.micromega.ZMicromega.Zgcd_pol_ge	40
Coq.micromega.ZMicromega.Zdivide_pol_Zdivide	40
Coq.micromega.ZMicromega.Zdivide_pol_one	40
Coq.micromega.ZMicromega.Zgcd_minus	40
Coq.micromega.ZMicromega.Zdivide_pol_sub	40
Coq.micromega.ZMicromega.Zdivide_pol_sub_0	40
Coq.micromega.ZMicromega.Zgcd_pol_div	40
Coq.micromega.ZMicromega.Zgcd_pol_correct_lt	40
Coq.micromega.ZMicromega.is_pol_Z0_eval_pol	40
Coq.micromega.ZMicromega.pos_le_add	40
Coq.micromega.ZMicromega.max_var_le	40
Coq.micromega.ZMicromega.max_var_correct	40
Coq.micromega.ZMicromega.max_var_nformulae_mono_aux	40
Coq.micromega.ZMicromega.max_var_nformulae_mono_aux'	40
Coq.micromega.ZMicromega.max_var_nformulae_correct_aux	40
Coq.micromega.ZMicromega.max_var_nformalae_correct	40
Coq.micromega.ZMicromega.in_bdepth	40
Coq.micromega.ZMicromega.eval_Psatz_sound	40
Coq.micromega.ZMicromega.makeCuttingPlane_ns_sound	40
Coq.micromega.ZMicromega.cutting_plane_sound	40
Coq.micromega.ZMicromega.genCuttingPlaneNone	40
Coq.micromega.ZMicromega.eval_nformula_mk_eq_pos	40
Coq.micromega.ZMicromega.eval_nformula_bound_var	40	2.1.22.14	search with cache (only 1: intros Hx; only 1: intros Hn; only 1: rewrite xnnormalise_correct; only 1: trivial).	37.9875128269	18599
Coq.micromega.ZMicromega.agree_env_subset	40
Coq.micromega.ZMicromega.agree_env_jump	40
Coq.micromega.ZMicromega.agree_env_tail	40
Coq.micromega.ZMicromega.max_var_acc	40
Coq.micromega.ZMicromega.agree_env_eval_nformula	40
Coq.micromega.ZMicromega.agree_env_eval_nformulae	40
Coq.micromega.ZMicromega.eq_true_iff_eq	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.065397977829	5
Coq.micromega.ZMicromega.ZChecker_sound	40
Coq.micromega.ZMicromega.ZTautoChecker_sound	40
Coq.micromega.Env.jump_add	40
Coq.micromega.Env.jump_simpl	40
Coq.micromega.Env.jump_tl	40	5.0.15.0.0	search with cache (only 1: unfold tail; only 1: unfold jump; only 1: rewrite ?Pos.add_1_r, ?Pos.pred_N_succ; only 1: f_equal; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l).	3.14754486084	4719
Coq.micromega.Env.jump_succ	40	7.0	search with cache (only 1: rewrite <- !jump_add; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l).	0.0558478832245	34
Coq.micromega.Env.jump_pred_double	40
Coq.micromega.Env.nth_spec	40
Coq.micromega.Env.nth_jump	40	4.0.0	search with cache (only 1: unfold hd, nth, tail, jump; only 1: f_equal; only 1: apply Pos.add_comm).	0.0410418510437	11
Coq.micromega.Env.nth_pred_double	40	2.0.0	search with cache (only 1: unfold hd, nth, tail, jump; only 1: f_equal; only 1: now rewrite Pos.add_1_r, Pos.succ_pred_double, Pos.add_diag).	0.0272150039673	5
Coq.micromega.Tauto.eval_f_morph	40
Coq.micromega.Tauto.map_simpl	40	2.1.1.2	search with cache (only 1: induction l; only 1: simpl; only 1: reflexivity; only 1: auto).	0.0293979644775	19
Coq.micromega.Tauto.is_X_inv	40
Coq.micromega.Tauto.if_same	40	16	search with cache (only 1: destr_bool).	0.258543968201	200
Coq.micromega.Tauto.is_cnf_tt_cnf_ff	40	1	search with cache (only 1: reflexivity).	0.00991702079773	2
Coq.micromega.Tauto.is_cnf_ff_cnf_ff	40	0	search with cache (only 1: reflexivity).	0.00940299034119	1
Coq.micromega.Tauto.is_cnf_tt_inv	40	8.0.33.49	search with cache (only 1: intros m Hm; only 1: destruct m; only 1: reflexivity; only 1: discriminate).	18.5186560154	49632
Coq.micromega.Tauto.is_cnf_ff_inv	40	10.1.19.0.2.2	search with cache (only 1: destruct f1; only 1: simpl; only 1: congruence; only 1: fix even_spec 1; only 1: simpl; only 1: assumption).	9.02366709709	13914
Coq.micromega.Tauto.if_cnf_tt	40	0.0.3.6.9	search with cache (only 1: intros; only 1: destruct f; only 1: reflexivity; only 1: simpl; only 1: congruence).	0.514069080353	602
Coq.micromega.Tauto.or_cnf_opt_cnf_ff	40
Coq.micromega.Tauto.abs_and_pol	40
Coq.micromega.Tauto.abs_or_pol	40
Coq.micromega.Tauto.xcnf_true_mk_arrow_l	40
Coq.micromega.Tauto.or_cnf_opt_cnf_ff_r	40	3.3.0.7.0.0.3.0	search with cache (only 1: intros; only 1: unfold or_cnf_opt; only 1: rewrite is_cnf_tt_cnf_ff; only 1: simpl; only 1: destruct (is_cnf_tt f) eqn:EQ; only 1: apply is_cnf_tt_inv in EQ; only 1: auto; only 1: reflexivity).	5.92534017563	5062
Coq.micromega.Tauto.xcnf_true_mk_arrow_r	40
Coq.micromega.Tauto.abst_form_correct	40
Coq.micromega.Tauto.radd_term_term	40
Coq.micromega.Tauto.radd_term_term'	40
Coq.micromega.Tauto.xror_clause_clause	40
Coq.micromega.Tauto.ror_clause_clause	40
Coq.micromega.Tauto.ror_cnf_cnf	40
Coq.micromega.Tauto.ror_opt_cnf_cnf	40
Coq.micromega.Tauto.ratom_cnf	40
Coq.micromega.Tauto.rxcnf_xcnf	40
Coq.micromega.Tauto.eval_cnf_app	40
Coq.micromega.Tauto.eval_cnf_ff	40	43.2	search with cache (only 1: intros; only 1: firstorder).	4.4816160202	8979
Coq.micromega.Tauto.eval_cnf_tt	40	2.0.0	search with cache (only 1: unfold eval_cnf; only 1: intros; only 1: tauto).	0.0248048305511	5
Coq.micromega.Tauto.eval_cnf_and_opt	40
Coq.micromega.Tauto.add_term_correct	40
Coq.micromega.Tauto.no_middle_eval_tt	40	46	search with cache (only 1: firstorder).	2.80323195457	2775
Coq.micromega.Tauto.or_clause_correct	40
Coq.micromega.Tauto.or_clause_cnf_correct	40
Coq.micromega.Tauto.eval_cnf_cons	40	0.2.2.4.6	search with cache (only 1: unfold eval_cnf; only 1: intros; only 1: rewrite make_conj_cons; only 1: unfold eval_clause; only 1: tauto).	1.25682902336	360
Coq.micromega.Tauto.eval_cnf_cons_iff	40	0.0.0.0.0	search with cache (only 1: intros; only 1: unfold eval_cnf in *; only 1: rewrite make_conj_cons; only 1: unfold eval_clause at 2; only 1: tauto).	0.0816462039948	5
Coq.micromega.Tauto.or_cnf_correct	40
Coq.micromega.Tauto.or_cnf_opt_correct	40
Coq.micromega.Tauto.xcnf_correct	40
Coq.micromega.Tauto.cnf_checker_sound	40
Coq.micromega.Tauto.tauto_checker_sound	40
Coq.micromega.Tauto.eval_bf_map	40
Coq.micromega.EnvRing.radd_ext_Proper	40
Coq.micromega.EnvRing.rmul_ext_Proper	40	18.8.3	search with cache (only 1: intros; only 1: elim ARth; only 1: firstorder).	1.43743801117	1229
Coq.micromega.EnvRing.ropp_ext_Proper	40
Coq.micromega.EnvRing.rsub_ext_Proper	40
Coq.micromega.EnvRing.Peq_ok	40
Coq.micromega.EnvRing.Peq_spec	40
Coq.micromega.EnvRing.Pphi0	40
Coq.micromega.EnvRing.Pphi1	40
Coq.micromega.EnvRing.env_morph	40
Coq.micromega.EnvRing.Pjump_add	40
Coq.micromega.EnvRing.Pjump_xO_tail	40
Coq.micromega.EnvRing.Pjump_pred_double	40
Coq.micromega.EnvRing.mkPinj_ok	40
Coq.micromega.EnvRing.pow_pos_add	40
Coq.micromega.EnvRing.ceqb_spec	40
Coq.micromega.EnvRing.mkPX_ok	40
Coq.micromega.EnvRing.PaddC_ok	40
Coq.micromega.EnvRing.PsubC_ok	40
Coq.micromega.EnvRing.PmulC_aux_ok	40
Coq.micromega.EnvRing.PmulC_ok	40
Coq.micromega.EnvRing.Popp_ok	40
Coq.micromega.EnvRing.PaddX_ok	40
Coq.micromega.EnvRing.Padd_ok	40
Coq.micromega.EnvRing.PsubX_ok	40
Coq.micromega.EnvRing.Psub_ok	40
Coq.micromega.EnvRing.PmulI_ok	40
Coq.micromega.EnvRing.Pmul_ok	40
Coq.micromega.EnvRing.Psquare_ok	40
Coq.micromega.EnvRing.Mphi_morph	40
Coq.micromega.EnvRing.Mjump_xO_tail	40
Coq.micromega.EnvRing.Mjump_pred_double	40	0.0.0.0	search with cache (only 1: apply Mphi_morph; only 1: intros; only 1: rewrite jump_pred_double; only 1: now jump_simpl).	0.112083911896	4
Coq.micromega.EnvRing.Mjump_add	40	0.1.0.1.3	search with cache (only 1: apply Mphi_morph; only 1: intros; only 1: rewrite <- jump_add; only 1: f_equal; only 1: apply Pos.add_comm).	0.0980069637299	10
Coq.micromega.EnvRing.mkZmon_ok	40	0.0.5.0.3.4	search with cache (only 1: induction M; only 1: rsimpl; only 1: simpl; only 1: rsimpl; only 1: simpl; only 1: rsimpl).	1.31949090958	513
Coq.micromega.EnvRing.zmon_pred_ok	40
Coq.micromega.EnvRing.mkVmon_ok	40
Coq.micromega.EnvRing.Mphi_ok	40
Coq.micromega.EnvRing.POneSubst_ok	40
Coq.micromega.EnvRing.PNSubst1_ok	40
Coq.micromega.EnvRing.PNSubst_ok	40
Coq.micromega.EnvRing.PSubstL1_ok	40
Coq.micromega.EnvRing.PSubstL_ok	40
Coq.micromega.EnvRing.PNSubstL_ok	40
Coq.micromega.EnvRing.mkX_ok	40
Coq.micromega.EnvRing.Ppow_pos_ok	40
Coq.micromega.EnvRing.Ppow_N_ok	40
Coq.micromega.EnvRing.norm_aux_PEadd	40
Coq.micromega.EnvRing.norm_aux_PEopp	40
Coq.micromega.EnvRing.norm_aux_spec	40
Coq.micromega.RingMicromega.rplus_morph_Proper	40	0	search with cache (only 1: exact (SORplus_wd sor)).	0.0198769569397	1
Coq.micromega.RingMicromega.rtimes_morph_Proper	40	1	search with cache (only 1: exact (SORtimes_wd sor)).	0.0226929187775	2
Coq.micromega.RingMicromega.ropp_morph_Proper	40	2	search with cache (only 1: exact (SORopp_wd sor)).	0.0223519802094	3
Coq.micromega.RingMicromega.rle_morph_Proper	40	4	search with cache (only 1: exact (SORle_wd sor)).	0.0665559768677	24
Coq.micromega.RingMicromega.rlt_morph_Proper	40	4	search with cache (only 1: exact (SORlt_wd sor)).	0.0258049964905	5
Coq.micromega.RingMicromega.rminus_morph_Proper	40	1.0.0.0.6	search with cache (only 1: intros x1 x2 H1 y1 y2 H2; only 1: rewrite (Rsub_def (SORrt sor) x1 y1); only 1: rewrite (Rsub_def (SORrt sor) x2 y2); only 1: rewrite H1; only 1: now rewrite H2).	1.50560307503	85
Coq.micromega.RingMicromega.cleb_sound	40
Coq.micromega.RingMicromega.cneqb_sound	40
Coq.micromega.RingMicromega.cltb_sound	40
Coq.micromega.RingMicromega.OpMult_sound	40
Coq.micromega.RingMicromega.OpAdd_sound	40
Coq.micromega.RingMicromega.pexpr_times_nformula_correct	40
Coq.micromega.RingMicromega.nformula_times_nformula_correct	40
Coq.micromega.RingMicromega.nformula_plus_nformula_correct	40
Coq.micromega.RingMicromega.eval_Psatz_Sound	40
Coq.micromega.RingMicromega.ge_bool_cases	40
Coq.micromega.RingMicromega.extract_hyps_app	40
Coq.micromega.RingMicromega.nhyps_of_psatz_correct	40
Coq.micromega.RingMicromega.check_inconsistent_sound	40
Coq.micromega.RingMicromega.checker_nf_sound	40
Coq.micromega.RingMicromega.eval_pol_sub	40
Coq.micromega.RingMicromega.eval_pol_add	40
Coq.micromega.RingMicromega.eval_pol_mul	40
Coq.micromega.RingMicromega.eval_pol_opp	40
Coq.micromega.RingMicromega.eval_pol_norm	40
Coq.micromega.RingMicromega.normalise_sound	40
Coq.micromega.RingMicromega.negate_correct	40
Coq.micromega.RingMicromega.cnf_of_list_correct	40
Coq.micromega.RingMicromega.eq0_cnf	40
Coq.micromega.RingMicromega.xnormalise_correct	40
Coq.micromega.RingMicromega.xnegate_correct	40
Coq.micromega.RingMicromega.cnf_normalise_correct	40
Coq.micromega.RingMicromega.cnf_negate_correct	40
Coq.micromega.RingMicromega.eval_nformula_dec	40
Coq.micromega.RingMicromega.xdenorm_correct	40
Coq.micromega.RingMicromega.denorm_correct	40
Coq.micromega.RingMicromega.eval_pexprSC	40
Coq.micromega.RingMicromega.eval_formulaSC	40
Coq.btauto.Algebra.Decidable_sound	40
Coq.btauto.Algebra.Decidable_complete	40
Coq.btauto.Algebra.Decidable_sound_alt	40	0.0.0.0.1	search with cache (only 1: intros P [wit spec] Hd; only 1: simpl; only 1: destruct wit; only 1: tauto; only 1: tauto).	0.0579280853271	6
Coq.btauto.Algebra.Decidable_complete_alt	40	1.1.0.2.0	search with cache (only 1: intros P [wit spec] Hd; only 1: simpl in *; only 1: destruct wit; only 1: intuition; only 1: intuition).	0.155140161514	29
Coq.btauto.Algebra.Decidable_PosEq_obligation_1	40
Coq.btauto.Algebra.Decidable_PosLt_obligation_1	40
Coq.btauto.Algebra.Decidable_PosLe_obligation_1	40
Coq.btauto.Algebra.Decidable_eq_poly_obligation_1	40
Coq.btauto.Algebra.Decidable_null_obligation_3	40
Coq.btauto.Algebra.Decidable_valid_obligation_1	40
Coq.btauto.Algebra.valid_le_compat	40
Coq.btauto.Algebra.linear_le_compat	40
Coq.btauto.Algebra.linear_valid_incl	40
Coq.btauto.Algebra.eval_null_zero	40	0.1.20	search with cache (only 1: intros; only 1: inversion H; only 1: trivial).	0.737128973007	549
Coq.btauto.Algebra.eval_extensional_eq_compat	40
Coq.btauto.Algebra.eval_suffix_compat	40
Coq.btauto.Algebra.poly_add_compat	40
Coq.btauto.Algebra.poly_mul_cst_compat	40
Coq.btauto.Algebra.poly_mul_mon_compat	40
Coq.btauto.Algebra.poly_mul_compat	40
Coq.btauto.Algebra.poly_add_valid_compat	40
Coq.btauto.Algebra.poly_mul_cst_valid_compat	40
Coq.btauto.Algebra.poly_mul_mon_null_compat	40
Coq.btauto.Algebra.poly_mul_mon_valid_compat	40
Coq.btauto.Algebra.poly_mul_valid_compat	40
Coq.btauto.Algebra.poly_add_linear_compat	40
Coq.btauto.Algebra.reduce_aux_eval_compat	40
Coq.btauto.Algebra.reduce_eval_compat	40
Coq.btauto.Algebra.reduce_aux_le_compat	40
Coq.btauto.Algebra.linear_reduce_aux	40
Coq.btauto.Algebra.linear_reduce	40
Coq.setoid_ring.Field_theory.radd_ext_Proper	40
Coq.setoid_ring.Field_theory.rmul_ext_Proper	40
Coq.setoid_ring.Field_theory.ropp_ext_Proper	40
Coq.setoid_ring.Field_theory.rsub_ext_Proper	40
Coq.setoid_ring.Field_theory.rinv_ext_Proper	40
Coq.setoid_ring.Field_theory.ceqb_spec	40
Coq.setoid_ring.Field_theory.NPEequiv_eq	40
Coq.setoid_ring.Field_theory.NPEeval_ext	40
Coq.setoid_ring.Field_theory.rsub_0_l	40	6	search with cache (only 1: eauto).	0.119693040848	11
Coq.setoid_ring.Field_theory.rsub_0_r	40
Coq.setoid_ring.Field_theory.rdiv_simpl	40
Coq.setoid_ring.Field_theory.rdiv_ext	40
Coq.setoid_ring.Field_theory.rmul_reg_l	40
Coq.setoid_ring.Field_theory.field_is_integral_domain	40
Coq.setoid_ring.Field_theory.ropp_neq_0	40
Coq.setoid_ring.Field_theory.rdiv_r_r	40	25	search with cache (only 1: eauto).	4.25548481941	598
Coq.setoid_ring.Field_theory.rdiv1	40
Coq.setoid_ring.Field_theory.rdiv2	40
Coq.setoid_ring.Field_theory.rdiv2b	40
Coq.setoid_ring.Field_theory.rdiv5	40
Coq.setoid_ring.Field_theory.rdiv3b	40
Coq.setoid_ring.Field_theory.rdiv6	40
Coq.setoid_ring.Field_theory.rdiv4	40
Coq.setoid_ring.Field_theory.rdiv4b	40
Coq.setoid_ring.Field_theory.rdiv7	40
Coq.setoid_ring.Field_theory.rdiv7b	40
Coq.setoid_ring.Field_theory.rinv_nz	40
Coq.setoid_ring.Field_theory.rdiv8	40
Coq.setoid_ring.Field_theory.cross_product_eq	40
Coq.setoid_ring.Field_theory.pow_ext	40
Coq.setoid_ring.Field_theory.pow_N_ext	40
Coq.setoid_ring.Field_theory.pow_pos_0	40	1.1.0.0.0.1	search with cache (only 1: induction p as [p IH| p IH| ]; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite !IH, ?H; only 1: trivial).	1.44732999802	11
Coq.setoid_ring.Field_theory.pow_pos_1	40
Coq.setoid_ring.Field_theory.pow_pos_cst	40
Coq.setoid_ring.Field_theory.pow_pos_mul_l	40
Coq.setoid_ring.Field_theory.pow_pos_add_r	40
Coq.setoid_ring.Field_theory.pow_pos_mul_r	40
Coq.setoid_ring.Field_theory.pow_pos_nz	40
Coq.setoid_ring.Field_theory.pow_pos_div	40
Coq.setoid_ring.Field_theory.PEadd_ext	40
Coq.setoid_ring.Field_theory.PEsub_ext	40	0.0.1	search with cache (only 1: intros ? ? E ? ? E' l; only 1: simpl; only 1: now rewrite E, E').	1.34280705452	4
Coq.setoid_ring.Field_theory.PEmul_ext	40	0.0.1	search with cache (only 1: intros ? ? E ? ? E' l; only 1: simpl; only 1: now rewrite E, E').	1.378510952	4
Coq.setoid_ring.Field_theory.PEopp_ext	40
Coq.setoid_ring.Field_theory.PEpow_ext	40
Coq.setoid_ring.Field_theory.PE_1_l	40
Coq.setoid_ring.Field_theory.PE_1_r	40	5.0.0.0	search with cache (only 1: intros l; only 1: simpl; only 1: rewrite phi_1; only 1: trivial).	1.71813607216	9
Coq.setoid_ring.Field_theory.PEpow_0_r	40	8.0	search with cache (only 1: intros l; only 1: eauto).	3.09249186516	32
Coq.setoid_ring.Field_theory.PEpow_1_r	40	0.0.0	search with cache (only 1: intros l; only 1: simpl; only 1: now rewrite !rpow_pow).	1.51937198639	3
Coq.setoid_ring.Field_theory.PEpow_1_l	40
Coq.setoid_ring.Field_theory.PEpow_add_r	40
Coq.setoid_ring.Field_theory.PEpow_mul_l	40
Coq.setoid_ring.Field_theory.PEpow_mul_r	40
Coq.setoid_ring.Field_theory.PEpow_nz	40
Coq.setoid_ring.Field_theory.if_true	40
Coq.setoid_ring.Field_theory.PExpr_eq_semi_ok	40
Coq.setoid_ring.Field_theory.PExpr_eq_spec	40
Coq.setoid_ring.Field_theory.NPEadd_ok	40
Coq.setoid_ring.Field_theory.NPEsub_ok	40
Coq.setoid_ring.Field_theory.NPEopp_ok	40
Coq.setoid_ring.Field_theory.NPEpow_ok	40
Coq.setoid_ring.Field_theory.NPEmul_ok	40
Coq.setoid_ring.Field_theory.PEsimp_ok	40
Coq.setoid_ring.Field_theory.PCond_cons	40
Coq.setoid_ring.Field_theory.PCond_cons_inv_l	40
Coq.setoid_ring.Field_theory.PCond_cons_inv_r	40	1.3.0.0.0	search with cache (only 1: destruct l1; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now destruct 1).	24.970815897	30
Coq.setoid_ring.Field_theory.PCond_app	40
Coq.setoid_ring.Field_theory.absurd_PCond_bottom	40	3.6	search with cache (only 1: destruct 1; only 1: trivial).	8.92816901207	25
Coq.setoid_ring.Field_theory.Z_pos_sub_gt	40
Coq.setoid_ring.Field_theory.default_isIn_ok	40
Coq.setoid_ring.Field_theory.isIn_ok	40
Coq.setoid_ring.Field_theory.split_aux_ok1	40
Coq.setoid_ring.Field_theory.split_aux_ok	40
Coq.setoid_ring.Field_theory.split_ok_l	40
Coq.setoid_ring.Field_theory.split_ok_r	40
Coq.setoid_ring.Field_theory.split_nz_l	40
Coq.setoid_ring.Field_theory.split_nz_r	40
Coq.setoid_ring.Field_theory.Pcond_Fnorm	40
Coq.setoid_ring.Field_theory.Fnorm_FEeval_PEeval	40
Coq.setoid_ring.Field_theory.Fnorm_crossproduct	40
Coq.setoid_ring.Field_theory.Fnorm_ok	40
Coq.setoid_ring.Field_theory.Field_rw_correct	40
Coq.setoid_ring.Field_theory.Field_rw_pow_correct	40
Coq.setoid_ring.Field_theory.Field_correct	40
Coq.setoid_ring.Field_theory.Field_simplify_eq_correct	40
Coq.setoid_ring.Field_theory.Field_simplify_eq_pow_correct	40
Coq.setoid_ring.Field_theory.Field_simplify_aux_ok	40
Coq.setoid_ring.Field_theory.Field_simplify_eq_pow_in_correct	40
Coq.setoid_ring.Field_theory.Field_simplify_eq_in_correct	40
Coq.setoid_ring.Field_theory.fcons_ok	40
Coq.setoid_ring.Field_theory.PFcons_fcons_inv	40
Coq.setoid_ring.Field_theory.PFcons0_fcons_inv	40
Coq.setoid_ring.Field_theory.PFcons00_fcons_inv	40
Coq.setoid_ring.Field_theory.ceqb_spec'	40
Coq.setoid_ring.Field_theory.PFcons1_fcons_inv	40
Coq.setoid_ring.Field_theory.PFcons2_fcons_inv	40
Coq.setoid_ring.Field_theory.radd_ext3_Proper	40	0	search with cache (only 1: exact (Radd_ext Reqe)).	0.0183460712433	1
Coq.setoid_ring.Field_theory.rmul_ext3_Proper	40	0	search with cache (only 1: exact (Rmul_ext Reqe)).	0.0182828903198	1
Coq.setoid_ring.Field_theory.ropp_ext3_Proper	40	0	search with cache (only 1: exact (Ropp_ext Reqe)).	0.0219619274139	1
Coq.setoid_ring.Field_theory.add_inj_r	40
Coq.setoid_ring.Field_theory.gen_phiPOS_inj	40
Coq.setoid_ring.Field_theory.gen_phiN_inj	40
Coq.setoid_ring.Field_theory.gen_phiN_complete	40
Coq.setoid_ring.Field_theory.ring_S_inj	40
Coq.setoid_ring.Field_theory.gen_phiPOS_discr_sgn	40
Coq.setoid_ring.Field_theory.gen_phiZ_inj	40
Coq.setoid_ring.Field_theory.gen_phiZ_complete	40
Coq.setoid_ring.Ring_theory.pow_pos_swap	40
Coq.setoid_ring.Ring_theory.pow_pos_succ	40
Coq.setoid_ring.Ring_theory.pow_pos_add	40
Coq.setoid_ring.Ring_theory.pow_N_pow_N	40	3	search with cache (only 1: reflexivity).	0.0109419822693	4
Coq.setoid_ring.Ring_theory.get_sign_None_th	40	42	search with cache (only 1: easy).	1.57275891304	901
Coq.setoid_ring.Ring_theory.IDmorph	40	3	search with cache (only 1: easy).	0.0171670913696	4
Coq.setoid_ring.Ring_theory.Eqsth	40	1.3.2.1.0.1.0.8.43	search with cache (only 1: constructor; only 1: simpl_relation; only 1: intros n m H1; only 1: auto; only 1: intros a b; only 1: intros EQ; only 1: symmetry; only 1: subst; only 1: now f_equal).	2.2275121212	4485
Coq.setoid_ring.Ring_theory.Eq_s_ext	40	2.2.34	search with cache (only 1: constructor; only 1: solve_proper; only 1: solve_proper).	0.454357862473	866
Coq.setoid_ring.Ring_theory.Eq_ext	40	0.0.0.1	search with cache (only 1: constructor; only 1: solve_proper; only 1: solve_proper; only 1: solve_proper).	0.0887551307678	5
Coq.setoid_ring.Ring_theory.radd_ext1_Proper	40	1	search with cache (only 1: firstorder).	0.0148630142212	2
Coq.setoid_ring.Ring_theory.rmul_ext1_Proper	40	2	search with cache (only 1: firstorder).	0.0164408683777	3
Coq.setoid_ring.Ring_theory.SRopp_ext	40	2.4	search with cache (only 1: intros a b; only 1: Tactics.program_simpl).	0.0188231468201	8
Coq.setoid_ring.Ring_theory.SReqe_Reqe	40	0.1.7.8.4	search with cache (only 1: constructor; only 1: solve_proper; only 1: solve_proper; only 1: intros x y H; only 1: exact H).	0.836485147476	926
Coq.setoid_ring.Ring_theory.SRopp_mul_l	40	10	search with cache (only 1: solve_proper).	0.0418210029602	27
Coq.setoid_ring.Ring_theory.SRopp_add	40	1	search with cache (only 1: reflexivity).	0.00913906097412	2
Coq.setoid_ring.Ring_theory.SRsub_def	40	0	search with cache (only 1: reflexivity).	0.00790095329285	1
Coq.setoid_ring.Ring_theory.SRIDmorph	40	21	search with cache (only 1: now try PeanoNat.Nat.order').	0.190650224686	242
Coq.setoid_ring.Ring_theory.SRmorph_Rmorph	40
Coq.setoid_ring.Ring_theory.radd_ext2_Proper	40	15.3	search with cache (only 1: intuition; only 1: firstorder).	0.931061029434	426
Coq.setoid_ring.Ring_theory.rmul_ext2_Proper	40	5.18	search with cache (only 1: intros m IH; only 1: firstorder).	0.918052911758	588
Coq.setoid_ring.Ring_theory.ropp_ext2_Proper	40	5.5	search with cache (only 1: intros a b; only 1: firstorder).	0.0549111366272	48
Coq.setoid_ring.Ring_theory.Rmul_0_l	40
Coq.setoid_ring.Ring_theory.Ropp_mul_l	40
Coq.setoid_ring.Ring_theory.Ropp_add	40
Coq.setoid_ring.Ring_theory.Ropp_opp	40
Coq.setoid_ring.Ring_theory.cadd_ext_Proper	40	25	search with cache (only 1: firstorder).	0.183200836182	306
Coq.setoid_ring.Ring_theory.cmul_ext_Proper	40	21	search with cache (only 1: firstorder).	0.149839878082	208
Coq.setoid_ring.Ring_theory.copp_ext_Proper	40	22.32	search with cache (only 1: intros a b Hb; only 1: firstorder).	1.36843395233	2685
Coq.setoid_ring.Ring_theory.phi_ext1_Proper	40	21	search with cache (only 1: trivial).	0.293257951736	374
Coq.setoid_ring.Ring_theory.Smorph_opp	40
Coq.setoid_ring.Ring_theory.Smorph_sub	40
Coq.setoid_ring.Ring_theory.ARth_SRth	40	45	search with cache (only 1: firstorder).	0.767105102539	2423
Coq.setoid_ring.Ring_theory.ARsub_ext	40
Coq.setoid_ring.Ring_theory.ARadd_0_r	40
Coq.setoid_ring.Ring_theory.ARmul_1_r	40	3	search with cache (only 1: mrewrite).	0.0153620243073	4
Coq.setoid_ring.Ring_theory.ARmul_0_r	40	1	search with cache (only 1: mrewrite).	0.0160009860992	2
Coq.setoid_ring.Ring_theory.ARdistr_r	40
Coq.setoid_ring.Ring_theory.ARadd_assoc1	40
Coq.setoid_ring.Ring_theory.ARadd_assoc2	40
Coq.setoid_ring.Ring_theory.ARmul_assoc1	40
Coq.setoid_ring.Ring_theory.ARmul_assoc2	40
Coq.setoid_ring.Ring_theory.ARopp_mul_r	40
Coq.setoid_ring.Ring_theory.ARopp_zero	40
Coq.setoid_ring.InitialRing.Zth	40
Coq.setoid_ring.InitialRing.radd_ext3_Proper	40	0	search with cache (only 1: exact (Radd_ext Reqe)).	0.00852608680725	1
Coq.setoid_ring.InitialRing.rmul_ext3_Proper	40	1	search with cache (only 1: exact (Rmul_ext Reqe)).	0.00925612449646	2
Coq.setoid_ring.InitialRing.ropp_ext3_Proper	40	2	search with cache (only 1: exact (Ropp_ext Reqe)).	0.00961899757385	3
Coq.setoid_ring.InitialRing.get_signZ_th	40
Coq.setoid_ring.InitialRing.rsub_ext3_Proper	40	0.18	search with cache (only 1: intros x1 x2 Ex y1 y2 Ey; only 1: now rewrite !(ARsub_def ARth), Ex, Ey).	0.328355073929	308
Coq.setoid_ring.InitialRing.same_gen	40
Coq.setoid_ring.InitialRing.ARgen_phiPOS_Psucc	40
Coq.setoid_ring.InitialRing.ARgen_phiPOS_add	40
Coq.setoid_ring.InitialRing.ARgen_phiPOS_mult	40
Coq.setoid_ring.InitialRing.rsub_ext4_Proper	40
Coq.setoid_ring.InitialRing.same_genZ	40
Coq.setoid_ring.InitialRing.gen_Zeqb_ok	40
Coq.setoid_ring.InitialRing.gen_phiZ1_pos_sub	40
Coq.setoid_ring.InitialRing.gen_phiZ_add	40
Coq.setoid_ring.InitialRing.gen_phiZ_mul	40
Coq.setoid_ring.InitialRing.gen_phiZ_ext	40	1.11.0	search with cache (only 1: intros x y H; only 1: rewrite H; only 1: rrefl).	2.24148011208	691
Coq.setoid_ring.InitialRing.gen_phiZ_morph	40
Coq.setoid_ring.InitialRing.Nth	40
Coq.setoid_ring.InitialRing.Neqb_ok	40
Coq.setoid_ring.InitialRing.radd_ext4_Proper	40	13	search with cache (only 1: exact (Radd_ext Reqe)).	0.118624925613	60
Coq.setoid_ring.InitialRing.rmul_ext4_Proper	40	11	search with cache (only 1: exact (Rmul_ext Reqe)).	0.10059094429	33
Coq.setoid_ring.InitialRing.same_genN	40
Coq.setoid_ring.InitialRing.gen_phiN_add	40
Coq.setoid_ring.InitialRing.gen_phiN_mult	40
Coq.setoid_ring.InitialRing.gen_phiN_sub	40
Coq.setoid_ring.InitialRing.gen_phiN_morph	40
Coq.setoid_ring.InitialRing.radd_ext5_Proper	40	0	search with cache (only 1: exact (Radd_ext Reqe)).	0.00834798812866	1
Coq.setoid_ring.InitialRing.rmul_ext5_Proper	40	0	search with cache (only 1: exact (Rmul_ext Reqe)).	0.00880193710327	1
Coq.setoid_ring.InitialRing.ropp_ext5_Proper	40	0	search with cache (only 1: exact (Ropp_ext Reqe)).	0.00891900062561	1
Coq.setoid_ring.InitialRing.rsub_ext7_Proper	40	0	search with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).	0.00963115692139	1
Coq.setoid_ring.InitialRing.gen_phiNword0_ok	40
Coq.setoid_ring.InitialRing.gen_phiNword_cons	40
Coq.setoid_ring.InitialRing.gen_phiNword_Nwcons	40	0.0.0.1.0.0.0.0.0.0	search with cache (only 1: induction w; only 1: destruct n; only 1: simpl; only 1: norm; only 1: simpl; only 1: norm; only 1: intros; only 1: destruct n; only 1: norm; only 1: norm).	1.26281285286	209
Coq.setoid_ring.InitialRing.gen_phiNword_ok	40
Coq.setoid_ring.InitialRing.Nwadd_ok	40
Coq.setoid_ring.InitialRing.Nwopp_ok	40	0.0.19	search with cache (only 1: induction x; only 1: norm; only 1: norm).	0.522233963013	339
Coq.setoid_ring.InitialRing.Nwscal_ok	40
Coq.setoid_ring.InitialRing.Nwmul_ok	40
Coq.setoid_ring.InitialRing.gen_phiNword_morph	40
Coq.setoid_ring.InitialRing.radd_ext_Proper	40	0	search with cache (only 1: exact (Radd_ext Reqe)).	0.0295009613037	1
Coq.setoid_ring.InitialRing.rmul_ext_Proper	40	1	search with cache (only 1: exact (Rmul_ext Reqe)).	0.028067111969	2
Coq.setoid_ring.InitialRing.ropp_ext_Proper	40	2	search with cache (only 1: exact (Ropp_ext Reqe)).	0.0292630195618	3
Coq.setoid_ring.InitialRing.rsub_ext_Proper	40	0	search with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).	0.02427983284	1
Coq.setoid_ring.InitialRing.triv_div_th	40
Coq.setoid_ring.InitialRing.Ztriv_div_th	40
Coq.setoid_ring.InitialRing.Ntriv_div_th	40
Coq.setoid_ring.Ring_polynom.radd_ext_Proper	40	36.5.20	search with cache (only 1: intuition; only 1: elim ARth; only 1: firstorder).	14.9534080029	7727
Coq.setoid_ring.Ring_polynom.rmul_ext_Proper	40	9	search with cache (only 1: exact (Rmul_ext Reqe)).	0.0219790935516	10
Coq.setoid_ring.Ring_polynom.ropp_ext_Proper	40	58.22	search with cache (only 1: intuition; only 1: firstorder).	6.37666702271	11980
Coq.setoid_ring.Ring_polynom.rsub_ext_Proper	40
Coq.setoid_ring.Ring_polynom.Pequiv_eq	40
Coq.setoid_ring.Ring_polynom.Pphi_ext	40	13.6	search with cache (only 1: unfold Pequiv; only 1: solve_proper).	7.5357029438	2368
Coq.setoid_ring.Ring_polynom.Pinj_ext	40	19.1	search with cache (only 1: unfold Pequiv; only 1: solve_proper).	9.39645409584	2645
Coq.setoid_ring.Ring_polynom.PX_ext	40
Coq.setoid_ring.Ring_polynom.jump_add'	40
Coq.setoid_ring.Ring_polynom.Peq_ok	40
Coq.setoid_ring.Ring_polynom.Peq_spec	40
Coq.setoid_ring.Ring_polynom.Pphi0	40
Coq.setoid_ring.Ring_polynom.Pphi1	40
Coq.setoid_ring.Ring_polynom.mkPinj_ok	40
Coq.setoid_ring.Ring_polynom.mkPinj_ext	40
Coq.setoid_ring.Ring_polynom.pow_pos_add	40
Coq.setoid_ring.Ring_polynom.ceqb_spec	40
Coq.setoid_ring.Ring_polynom.mkPX_ok	40
Coq.setoid_ring.Ring_polynom.mkPX_ext	40
Coq.setoid_ring.Ring_polynom.PaddC_ok	40
Coq.setoid_ring.Ring_polynom.PsubC_ok	40
Coq.setoid_ring.Ring_polynom.PmulC_aux_ok	40
Coq.setoid_ring.Ring_polynom.PmulC_ok	40
Coq.setoid_ring.Ring_polynom.Popp_ok	40
Coq.setoid_ring.Ring_polynom.PaddX_ok	40
Coq.setoid_ring.Ring_polynom.Padd_ok	40
Coq.setoid_ring.Ring_polynom.Psub_opp	40
Coq.setoid_ring.Ring_polynom.Psub_ok	40
Coq.setoid_ring.Ring_polynom.PmulI_ok	40
Coq.setoid_ring.Ring_polynom.Pmul_ok	40
Coq.setoid_ring.Ring_polynom.mkZmon_ok	40
Coq.setoid_ring.Ring_polynom.zmon_pred_ok	40
Coq.setoid_ring.Ring_polynom.mkVmon_ok	40
Coq.setoid_ring.Ring_polynom.Mcphi_ok	40
Coq.setoid_ring.Ring_polynom.Mphi_ok	40
Coq.setoid_ring.Ring_polynom.POneSubst_ok	40
Coq.setoid_ring.Ring_polynom.PNSubst1_ok	40
Coq.setoid_ring.Ring_polynom.PNSubst_ok	40
Coq.setoid_ring.Ring_polynom.PSubstL1_ok	40
Coq.setoid_ring.Ring_polynom.PSubstL_ok	40
Coq.setoid_ring.Ring_polynom.PNSubstL_ok	40
Coq.setoid_ring.Ring_polynom.mkX_ok	40
Coq.setoid_ring.Ring_polynom.Ppow_pos_ok	40
Coq.setoid_ring.Ring_polynom.Ppow_N_ok	40
Coq.setoid_ring.Ring_polynom.norm_aux_PEadd	40
Coq.setoid_ring.Ring_polynom.norm_aux_PEopp	40
Coq.setoid_ring.Ring_polynom.norm_aux_spec	40
Coq.setoid_ring.Ring_polynom.norm_subst_spec	40
Coq.setoid_ring.Ring_polynom.mon_of_pol_ok	40
Coq.setoid_ring.Ring_polynom.interp_PElist_ok	40
Coq.setoid_ring.Ring_polynom.norm_subst_ok	40
Coq.setoid_ring.Ring_polynom.ring_correct	40
Coq.setoid_ring.Ring_polynom.mkmult_rec_ok	40
Coq.setoid_ring.Ring_polynom.mkmult1_ok	40
Coq.setoid_ring.Ring_polynom.mkmultm1_ok	40
Coq.setoid_ring.Ring_polynom.r_list_pow_rev	40
Coq.setoid_ring.Ring_polynom.mkmult_c_pos_ok	40
Coq.setoid_ring.Ring_polynom.mkmult_c_ok	40
Coq.setoid_ring.Ring_polynom.mkadd_mult_ok	40
Coq.setoid_ring.Ring_polynom.add_pow_list_ok	40
Coq.setoid_ring.Ring_polynom.add_mult_dev_ok	40
Coq.setoid_ring.Ring_polynom.mult_dev_ok	40
Coq.setoid_ring.Ring_polynom.Pphi_avoid_ok	40
Coq.setoid_ring.Ring_polynom.local_mkpow_ok	40
Coq.setoid_ring.Ring_polynom.Pphi_pow_ok	40
Coq.setoid_ring.Ring_polynom.ring_rw_pow_correct	40
Coq.setoid_ring.Ring_polynom.mkmult_pow_ok	40
Coq.setoid_ring.Ring_polynom.mkpow_ok	40
Coq.setoid_ring.Ring_polynom.mkopp_pow_ok	40
Coq.setoid_ring.Ring_polynom.Pphi_dev_ok	40
Coq.setoid_ring.Ring_polynom.ring_rw_correct	40
Coq.setoid_ring.BinList.jump_tl	40
Coq.setoid_ring.BinList.jump_succ	40
Coq.setoid_ring.BinList.jump_add	40
Coq.setoid_ring.BinList.jump_pred_double	40
Coq.setoid_ring.BinList.nth_jump	40
Coq.setoid_ring.BinList.nth_pred_double	40
Coq.ssr.ssreflect.master_key	40	2	search with cache (only 1: tauto).	0.00712490081787	3
Coq.ssr.ssreflect.lock	40
Coq.ssr.ssreflect.not_locked_false_eq_true	40	0.3	search with cache (only 1: unlock; only 1: discriminate).	0.0266439914703	13
Coq.ssr.ssreflect.unlock	40
Coq.ssr.ssreflect.locked_withE	40
Coq.ssr.ssreflect.unlock_with	40	1	search with cache (only 1: by case : {}k {}).	0.00957083702087	2
Coq.ssr.ssreflect.nary_congruence	40
Coq.ssr.ssreflect.ssr_congr_arrow	40	1.3.6	search with cache (only 1: intro H; only 1: destruct H; only 1: tauto).	0.0405831336975	59
Coq.ssr.ssreflect.iffLR	40	0	search with cache (only 1: intuition).	0.0110261440277	1
Coq.ssr.ssreflect.iffRL	40	0	search with cache (only 1: by case : {}eqPQ {}).	0.0102500915527	1
Coq.ssr.ssreflect.iffLRn	40	2	search with cache (only 1: intuition).	0.0187871456146	3
Coq.ssr.ssreflect.iffRLn	40	0	search with cache (only 1: by move  {}=>nP tQ; case : {}nP {}; case : {}eqPQ {}tQ {}).	0.0114710330963	1
Coq.ssr.ssreflect.abstract_context	40	7.116.65	search with cache (only 1: intro H; only 1: apply H; only 1: auto).	6.58962988853	73135
Coq.ssr.ssrbool.prop_congr	40	0.5	search with cache (only 1: destruct 1; only 1: trivial).	0.0238909721375	34
Coq.ssr.ssrbool.is_true_true	40	5	search with cache (only 1: repeat split).	0.00583696365356	6
Coq.ssr.ssrbool.not_false_is_true	40	1	search with cache (only 1: discriminate).	0.00558996200562	2
Coq.ssr.ssrbool.is_true_locked_true	40	0.0	search with cache (only 1: unlock; only 1: by [  ]).	0.00827813148499	2
Coq.ssr.ssrbool.negbT	40	2	search with cache (only 1: Bool.destr_bool).	0.0086989402771	3
Coq.ssr.ssrbool.negbTE	40	0	search with cache (only 1: by case : {}b {}).	0.00893115997314	1
Coq.ssr.ssrbool.negbF	40	0	search with cache (only 1: by case : {}b {}).	0.0075740814209	1
Coq.ssr.ssrbool.negbFE	40	0	search with cache (only 1: by case : {}b {}).	0.00743699073792	1
Coq.ssr.ssrbool.negbK	40	0.44	search with cache (only 1: intro H; only 1: Bool.destr_bool).	0.264091014862	1036
Coq.ssr.ssrbool.negbNE	40	0	search with cache (only 1: by case : {}b {}).	0.0063009262085	1
Coq.ssr.ssrbool.negb_inj	40	0.19	search with cache (only 1: intro H; only 1: Bool.destr_bool).	0.0901870727539	186
Coq.ssr.ssrbool.negbLR	40	9	search with cache (only 1: Bool.destr_bool).	0.0190138816833	10
Coq.ssr.ssrbool.negbRL	40	10	search with cache (only 1: Bool.destr_bool).	0.0330209732056	21
Coq.ssr.ssrbool.contra	40	8.12	search with cache (only 1: Bool.destr_bool; only 1: tauto).	0.377847909927	247
Coq.ssr.ssrbool.contraL	40	0	search with cache (only 1: by case : {}b {} =>//; case : {}c {}).	0.0120670795441	1
Coq.ssr.ssrbool.contraR	40	0	search with cache (only 1: by case : {}b {} =>//; case : {}c {}).	0.0121510028839	1
Coq.ssr.ssrbool.contraLR	40	0	search with cache (only 1: by case : {}b {} =>//; case : {}c {}).	0.0110688209534	1
Coq.ssr.ssrbool.contraT	40	19.13	search with cache (only 1: Bool.destr_bool; only 1: intuition).	0.739184856415	755
Coq.ssr.ssrbool.wlog_neg	40	1	search with cache (only 1: by case : {}b {} =>// {+}->).	0.0121529102325	2
Coq.ssr.ssrbool.contraFT	40	12.15	search with cache (only 1: Bool.destr_bool; only 1: intuition).	0.984447002411	538
Coq.ssr.ssrbool.contraFN	40	13.16	search with cache (only 1: Bool.destr_bool; only 1: intuition).	1.08076000214	630
Coq.ssr.ssrbool.contraTF	40	14.15	search with cache (only 1: Bool.destr_bool; only 1: intuition).	1.00183701515	659
Coq.ssr.ssrbool.contraNF	40	8.16	search with cache (only 1: Bool.destr_bool; only 1: intuition).	0.844746112823	357
Coq.ssr.ssrbool.contraFF	40	0.0.53.34	search with cache (only 1: Bool.destr_bool; only 1: destruct H; only 1: by [  ]; only 1: tauto).	10.4993069172	31564
Coq.ssr.ssrbool.ifP	40
Coq.ssr.ssrbool.ifPn	40	0	search with cache (only 1: by case  def_b: {}b {}; constructor).	0.011650800705	1
Coq.ssr.ssrbool.ifT	40	4	search with cache (only 1: by case : {}b {}).	0.0176298618317	5
Coq.ssr.ssrbool.ifF	40	1	search with cache (only 1: by move {+}->).	0.0116989612579	2
Coq.ssr.ssrbool.ifN	40	3	search with cache (only 1: by case : {}b {}).	0.0148141384125	4
Coq.ssr.ssrbool.if_same	40	2	search with cache (only 1: by case  def_b: {}b {}; constructor).	0.0109329223633	3
Coq.ssr.ssrbool.if_neg	40	1	search with cache (only 1: by case  def_b: {}b {}; constructor; rewrite ?def_b).	0.0115928649902	2
Coq.ssr.ssrbool.fun_if	40	0	search with cache (only 1: by case b).	0.0103731155396	1
Coq.ssr.ssrbool.if_arg	40	0	search with cache (only 1: by case b).	0.0100119113922	1
Coq.ssr.ssrbool.ifE	40	6	search with cache (only 1: reflexivity).	0.0144739151001	7
Coq.ssr.ssrbool.introNTF	40
Coq.ssr.ssrbool.introTF	40	0	search with cache (only 1: by case c; case Hb).	0.0143971443176	1
Coq.ssr.ssrbool.elimNTF	40	0	search with cache (only 1: by case c; case Hb).	0.014317035675	1
Coq.ssr.ssrbool.elimTF	40	0	search with cache (only 1: by case c; case Hb).	0.014429807663	1
Coq.ssr.ssrbool.equivPif	40
Coq.ssr.ssrbool.xorPif	40	0.0.15	search with cache (only 1: destruct 1; only 1: by case Hb; auto; only 1: by case Hb; auto).	0.316833972931	200
Coq.ssr.ssrbool.introTFn	40
Coq.ssr.ssrbool.elimTFn	40
Coq.ssr.ssrbool.equivPifn	40
Coq.ssr.ssrbool.xorPifn	40
Coq.ssr.ssrbool.introT	40
Coq.ssr.ssrbool.introF	40
Coq.ssr.ssrbool.introN	40
Coq.ssr.ssrbool.introNf	40
Coq.ssr.ssrbool.introTn	40
Coq.ssr.ssrbool.introFn	40
Coq.ssr.ssrbool.elimT	40
Coq.ssr.ssrbool.elimF	40
Coq.ssr.ssrbool.elimN	40
Coq.ssr.ssrbool.elimNf	40
Coq.ssr.ssrbool.elimTn	40
Coq.ssr.ssrbool.elimFn	40
Coq.ssr.ssrbool.introP	40
Coq.ssr.ssrbool.iffP	40
Coq.ssr.ssrbool.equivP	40	1.20	search with cache (only 1: intuition; only 1: by case : {}Pb {}; constructor; auto).	0.271156072617	232
Coq.ssr.ssrbool.sumboolP	40
Coq.ssr.ssrbool.appP	40
Coq.ssr.ssrbool.sameP	40
Coq.ssr.ssrbool.decPcases	40
Coq.ssr.ssrbool.decP	40
Coq.ssr.ssrbool.rwP	40	17	search with cache (only 1: by case Pb).	0.195013046265	126
Coq.ssr.ssrbool.rwP2	40
Coq.ssr.ssrbool.altP	40
Coq.ssr.ssrbool.impliesP	40	26.13.35	search with cache (only 1: intro p; only 1: destruct p; only 1: auto).	1.09788799286	6894
Coq.ssr.ssrbool.impliesPn	40	32.2.12	search with cache (only 1: intuition; only 1: destruct H; only 1: auto).	0.782027006149	2341
Coq.ssr.ssrbool.unlessL	40	39.8.23	search with cache (only 1: split; only 1: intros; only 1: by move  {}=>fK injf' x; apply : {}injf' {}).	1.00382399559	6251
Coq.ssr.ssrbool.unlessR	40	35.36.12	search with cache (only 1: repeat split; only 1: intros H ?; only 1: auto).	2.47235488892	18063
Coq.ssr.ssrbool.unless_sym	40	2.7.25.12.37.27	search with cache (only 1: split; only 1: intros H ?; only 1: intros; only 1: apply H; only 1: by [  ]; only 1: apply H0).	5.85007596016	44121
Coq.ssr.ssrbool.unlessP	40
Coq.ssr.ssrbool.bind_unless	40
Coq.ssr.ssrbool.unless_contra	40	11.11.55.67.75	search with cache (only 1: repeat split; only 1: intros Hfst Hsnd; only 1: Bool.destr_bool; only 1: intuition; only 1: intuition).	38.3197288513	125830
Coq.ssr.ssrbool.classicP	40
Coq.ssr.ssrbool.classicW	40	0.25	search with cache (only 1: red; only 1: by move  {}=>b b' {+}->).	0.132095098495	333
Coq.ssr.ssrbool.classic_bind	40
Coq.ssr.ssrbool.classic_EM	40
Coq.ssr.ssrbool.classic_pick	40
Coq.ssr.ssrbool.classic_imply	40
Coq.ssr.ssrbool.all_and2	40	0.1.20.0.1.20.52	search with cache (only 1: repeat split; only 1: intro z; only 1: destruct (H z); only 1: auto; only 1: intro z; only 1: destruct (H z); only 1: auto).	4.20392608643	17516
Coq.ssr.ssrbool.all_and3	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtclintros@0> split =>haveP; <ssreflect_plugin::ssrtclintros@0> split =>x; case : {}(haveP x) {}).	0.0149121284485	1
Coq.ssr.ssrbool.all_and4	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtclintros@0> split =>haveP; <ssreflect_plugin::ssrtclintros@0> split =>x; case : {}(haveP x) {}).	0.0183608531952	1
Coq.ssr.ssrbool.all_and5	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtclintros@0> split =>haveP; <ssreflect_plugin::ssrtclintros@0> split =>x; case : {}(haveP x) {}).	0.021134853363	1
Coq.ssr.ssrbool.pair_andP	40	13	search with cache (only 1: intuition).	0.0459749698639	80
Coq.ssr.ssrbool.idP	40
Coq.ssr.ssrbool.boolP	40	0	search with cache (only 1: by case b1; constructor).	0.00999188423157	1
Coq.ssr.ssrbool.idPn	40	3	search with cache (only 1: by case b1; constructor).	0.012640953064	4
Coq.ssr.ssrbool.negP	40	0	search with cache (only 1: by case b1; constructor).	0.0123429298401	1
Coq.ssr.ssrbool.negPn	40	0	search with cache (only 1: by case b1; constructor).	0.0094678401947	1
Coq.ssr.ssrbool.negPf	40
Coq.ssr.ssrbool.andP	40
Coq.ssr.ssrbool.and3P	40
Coq.ssr.ssrbool.and4P	40
Coq.ssr.ssrbool.and5P	40
Coq.ssr.ssrbool.orP	40
Coq.ssr.ssrbool.or3P	40
Coq.ssr.ssrbool.or4P	40
Coq.ssr.ssrbool.nandP	40	0	search with cache (only 1: by case b1; case b2; constructor; auto; case).	0.0172560214996	1
Coq.ssr.ssrbool.norP	40	0	search with cache (only 1: by case b1; case b2; constructor; auto; case; auto).	0.0174510478973	1
Coq.ssr.ssrbool.implyP	40	3	search with cache (only 1: by case b1; case b2; constructor; auto; case).	0.0421090126038	4
Coq.ssr.ssrbool.andTb	40	0	search with cache (only 1: repeat split).	0.0101058483124	1
Coq.ssr.ssrbool.andFb	40	1	search with cache (only 1: repeat split).	0.00963401794434	2
Coq.ssr.ssrbool.andbT	40	3.17	search with cache (only 1: intro H; only 1: Bool.destr_bool).	0.0838170051575	214
Coq.ssr.ssrbool.andbF	40	11	search with cache (only 1: by case).	0.0210020542145	33
Coq.ssr.ssrbool.andbb	40	3	search with cache (only 1: by case).	0.0127098560333	4
Coq.ssr.ssrbool.andbC	40	4.21	search with cache (only 1: intro H; only 1: Bool.destr_bool).	0.228458166122	353
Coq.ssr.ssrbool.andbA	40	1	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 2!case).	0.0140600204468	2
Coq.ssr.ssrbool.andbCA	40	1	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 2!case).	0.0144121646881	2
Coq.ssr.ssrbool.andbAC	40	10	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0356872081757	21
Coq.ssr.ssrbool.andbACA	40	11	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.053778886795	33
Coq.ssr.ssrbool.orTb	40	0	search with cache (only 1: reflexivity).	0.0104858875275	1
Coq.ssr.ssrbool.orFb	40	0	search with cache (only 1: by [  ]).	0.010162115097	1
Coq.ssr.ssrbool.orbT	40	2	search with cache (only 1: Bool.destr_bool).	0.013729095459	3
Coq.ssr.ssrbool.orbF	40	0	search with cache (only 1: by case).	0.0118911266327	1
Coq.ssr.ssrbool.orbb	40	0	search with cache (only 1: by case).	0.0114929676056	1
Coq.ssr.ssrbool.orbC	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 2!case).	0.0134420394897	1
Coq.ssr.ssrbool.orbA	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0184638500214	1
Coq.ssr.ssrbool.orbCA	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0175750255585	1
Coq.ssr.ssrbool.orbAC	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0174429416656	1
Coq.ssr.ssrbool.orbACA	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 4!case).	0.023430109024	1
Coq.ssr.ssrbool.andbN	40	0	search with cache (only 1: Bool.destr_bool).	0.0122680664062	1
Coq.ssr.ssrbool.andNb	40	0	search with cache (only 1: by case : {}b {}).	0.0124390125275	1
Coq.ssr.ssrbool.orbN	40	2	search with cache (only 1: Bool.destr_bool).	0.0116579532623	3
Coq.ssr.ssrbool.orNb	40	0	search with cache (only 1: by case : {}b {}).	0.0114879608154	1
Coq.ssr.ssrbool.andb_orl	40	17	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.136122941971	126
Coq.ssr.ssrbool.andb_orr	40	1	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0189919471741	2
Coq.ssr.ssrbool.orb_andl	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0187659263611	1
Coq.ssr.ssrbool.orb_andr	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0182900428772	1
Coq.ssr.ssrbool.andb_idl	40	6.34	search with cache (only 1: Bool.destr_bool; only 1: intuition).	1.19351100922	1239
Coq.ssr.ssrbool.andb_idr	40	0	search with cache (only 1: by case : {}a {}; case : {}b {} =>// {+}->).	0.017322063446	1
Coq.ssr.ssrbool.andb_id2l	40	0	search with cache (only 1: by case : {}a {}; case : {}b {} =>// {+}->).	0.0196130275726	1
Coq.ssr.ssrbool.andb_id2r	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}; case : {}c {} =>// {+}->).	0.0244750976562	1
Coq.ssr.ssrbool.orb_idl	40	2	search with cache (only 1: by case : {}a {}; case : {}b {} =>// {+}->).	0.017560005188	3
Coq.ssr.ssrbool.orb_idr	40	0	search with cache (only 1: by case : {}a {}; case : {}b {} =>// {+}->).	0.0174610614777	1
Coq.ssr.ssrbool.orb_id2l	40	0	search with cache (only 1: by case : {}a {}; case : {}b {} =>// {+}->).	0.0198922157288	1
Coq.ssr.ssrbool.orb_id2r	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}; case : {}c {} =>// {+}->).	0.0352010726929	1
Coq.ssr.ssrbool.negb_and	40	0	search with cache (only 1: Bool.destr_bool).	0.0136849880219	1
Coq.ssr.ssrbool.negb_or	40	1	search with cache (only 1: by case : {}a {}; case : {}b {}).	0.0173318386078	2
Coq.ssr.ssrbool.andbK	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}).	0.0138850212097	1
Coq.ssr.ssrbool.andKb	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}).	0.0145189762115	1
Coq.ssr.ssrbool.orbK	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}).	0.0136659145355	1
Coq.ssr.ssrbool.orKb	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}).	0.0137920379639	1
Coq.ssr.ssrbool.implybT	40	1	search with cache (only 1: Bool.destr_bool).	0.0115790367126	2
Coq.ssr.ssrbool.implybF	40	0	search with cache (only 1: by case : {}b {}).	0.0110058784485	1
Coq.ssr.ssrbool.implyFb	40	0	search with cache (only 1: by case : {}b {}).	0.0113570690155	1
Coq.ssr.ssrbool.implyTb	40	0	search with cache (only 1: by case : {}b {}).	0.0107719898224	1
Coq.ssr.ssrbool.implybb	40	1	search with cache (only 1: by case : {}b {}).	0.013748884201	2
Coq.ssr.ssrbool.negb_imply	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}).	0.0140359401703	1
Coq.ssr.ssrbool.implybE	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}).	0.0137610435486	1
Coq.ssr.ssrbool.implyNb	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}).	0.0163390636444	1
Coq.ssr.ssrbool.implybN	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}).	0.0136408805847	1
Coq.ssr.ssrbool.implybNN	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}).	0.0137648582458	1
Coq.ssr.ssrbool.implyb_idl	40	10	search with cache (only 1: by case : {}a {}; case : {}b {} =>// {+}->).	0.0879049301147	21
Coq.ssr.ssrbool.implyb_idr	40	0	search with cache (only 1: by case : {}a {}; case : {}b {} =>// {+}->).	0.0174670219421	1
Coq.ssr.ssrbool.implyb_id2l	40	0	search with cache (only 1: by case : {}a {}; case : {}b {} =>// {+}->).	0.0208320617676	1
Coq.ssr.ssrbool.addFb	40	0	search with cache (only 1: by [  ]).	0.0110840797424	1
Coq.ssr.ssrbool.addbF	40	0	search with cache (only 1: by case).	0.0102391242981	1
Coq.ssr.ssrbool.addbb	40	1	search with cache (only 1: by case).	0.0130789279938	2
Coq.ssr.ssrbool.addbC	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 2!case).	0.0134398937225	1
Coq.ssr.ssrbool.addbA	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0174341201782	1
Coq.ssr.ssrbool.addbCA	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0177040100098	1
Coq.ssr.ssrbool.addbAC	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0172019004822	1
Coq.ssr.ssrbool.addbACA	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 4!case).	0.0240299701691	1
Coq.ssr.ssrbool.andb_addl	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0179481506348	1
Coq.ssr.ssrbool.andb_addr	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0170860290527	1
Coq.ssr.ssrbool.addKb	40	0.3.12.4	search with cache (only 1: intro H; only 1: destruct H; only 1: by case; only 1: by [  ]).	0.357578992844	476
Coq.ssr.ssrbool.addbK	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 2!case).	0.0127160549164	1
Coq.ssr.ssrbool.addIb	40	4	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.028244972229	5
Coq.ssr.ssrbool.addbI	40	4	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.028018951416	5
Coq.ssr.ssrbool.addTb	40	0	search with cache (only 1: by case : {}b {}).	0.0125489234924	1
Coq.ssr.ssrbool.addbT	40	1	search with cache (only 1: by case : {}b {}).	0.0144670009613	2
Coq.ssr.ssrbool.addbN	40	2	search with cache (only 1: by case : {}a {}; case : {}b {}).	0.0190470218658	3
Coq.ssr.ssrbool.addNb	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}).	0.014671087265	1
Coq.ssr.ssrbool.addbP	40	0.0.0.0.42	search with cache (only 1: Bool.destr_bool; only 1: intuition; only 1: intuition; only 1: now constructor; only 1: intuition).	1.344176054	1094
Coq.ssr.ssrbool.subrelUl	40	32.9.25.76	search with cache (only 1: intro x; only 1: red; only 1: Bool.destr_bool; only 1: intuition).	21.755641222	94351
Coq.ssr.ssrbool.subrelUr	40	32.10.26.80	search with cache (only 1: intro x; only 1: red; only 1: Bool.destr_bool; only 1: intuition).	22.8292551041	101331
Coq.ssr.ssrbool.sub_refl	40	55	search with cache (only 1: by [  ]).	0.585363864899	1712
Coq.ssr.ssrbool.mem_topred	40
Coq.ssr.ssrbool.topredE	40	0	search with cache (only 1: by case : {}pT {}pp {}).	0.0135650634766	1
Coq.ssr.ssrbool.app_predE	40
Coq.ssr.ssrbool.in_applicative	40
Coq.ssr.ssrbool.in_collective	40
Coq.ssr.ssrbool.in_simpl	40	0	search with cache (only 1: by case : {}msp {} =>_ /= {+}->).	0.0135910511017	1
Coq.ssr.ssrbool.unfold_in	40	4	search with cache (only 1: by rewrite -mem_topred).	0.0157270431519	5
Coq.ssr.ssrbool.simpl_predE	40	2	search with cache (only 1: by [  ]).	0.0116839408875	3
Coq.ssr.ssrbool.mem_simpl	40	0	search with cache (only 1: by [  ]).	0.0106971263885	1
Coq.ssr.ssrbool.mem_mem	40
Coq.ssr.ssrbool.qualifE	40	1	search with cache (only 1: by [  ]).	0.0128471851349	2
Coq.ssr.ssrbool.keyed_predE	40
Coq.ssr.ssrbool.keyed_qualifier_suproof	40
Coq.ssr.ssrbool.all_tag_cond_dep	40
Coq.ssr.ssrbool.all_tag_cond	40
Coq.ssr.ssrbool.all_sig_cond_dep	40
Coq.ssr.ssrbool.all_sig_cond	40
Coq.ssr.ssrbool.symmetric_from_pre	40
Coq.ssr.ssrbool.sym_left_transitive	40
Coq.ssr.ssrbool.sym_right_transitive	40
Coq.ssr.ssrbool.equivalence_relP	40
Coq.ssr.ssrbool.rev_trans	40
Coq.ssr.ssrbool.forE	40	10	search with cache (only 1: reflexivity).	0.0182478427887	21
Coq.ssr.ssrbool.in1W	40	0.20	search with cache (only 1: intro H; only 1: by [  ]).	0.324277162552	208
Coq.ssr.ssrbool.in2W	40	0	search with cache (only 1: by move  {}=>? ?).	0.0148630142212	1
Coq.ssr.ssrbool.in3W	40	0	search with cache (only 1: by move  {}=>? ?).	0.0151391029358	1
Coq.ssr.ssrbool.in1T	40	17.41	search with cache (only 1: intros n m; only 1: auto).	1.73975920677	3232
Coq.ssr.ssrbool.in2T	40	1	search with cache (only 1: by move  {}=>? ?; auto).	0.0211639404297	2
Coq.ssr.ssrbool.in3T	40	1	search with cache (only 1: by move  {}=>? ?; auto).	0.0218088626862	2
Coq.ssr.ssrbool.sub_in1	40	1	search with cache (only 1: by move  {}=>? ?; auto).	0.0203158855438	2
Coq.ssr.ssrbool.sub_in11	40	1	search with cache (only 1: by move  {}=>? ?; auto).	0.0219709873199	2
Coq.ssr.ssrbool.sub_in111	40	1	search with cache (only 1: by move  {}=>? ?; auto).	0.022852897644	2
Coq.ssr.ssrbool.on1W	40	0	search with cache (only 1: by move  {}=>? ?).	0.0127899646759	1
Coq.ssr.ssrbool.on1lW	40	0	search with cache (only 1: by move  {}=>? ?).	0.0159060955048	1
Coq.ssr.ssrbool.on2W	40	0	search with cache (only 1: by move  {}=>? ?).	0.0149970054626	1
Coq.ssr.ssrbool.on1T	40	1	search with cache (only 1: by move  {}=>? ?; auto).	0.0181200504303	2
Coq.ssr.ssrbool.on1lT	40	1	search with cache (only 1: by move  {}=>? ?; auto).	0.0180349349976	2
Coq.ssr.ssrbool.on2T	40	1	search with cache (only 1: by move  {}=>? ?; auto).	0.0202639102936	2
Coq.ssr.ssrbool.subon1	40	1	search with cache (only 1: by move  {}=>? ?; auto).	0.0940678119659	2
Coq.ssr.ssrbool.subon1l	40	1	search with cache (only 1: by move  {}=>? ?; auto).	0.0194730758667	2
Coq.ssr.ssrbool.subon2	40	1	search with cache (only 1: by move  {}=>? ?; auto).	0.0207319259644	2
Coq.ssr.ssrbool.can_in_inj	40
Coq.ssr.ssrbool.canLR_in	40
Coq.ssr.ssrbool.canRL_in	40
Coq.ssr.ssrbool.on_can_inj	40	0	search with cache (only 1: by move  {}=>fK x y /fK {+2}<- /fK {+2}<- {+}->).	0.0221781730652	1
Coq.ssr.ssrbool.canLR_on	40	1	search with cache (only 1: by move  {}=>fK D1y {+}->; rewrite fK).	0.019788980484	2
Coq.ssr.ssrbool.canRL_on	40	2	search with cache (only 1: by move  {}=>fK D1x {+}<-; rewrite fK).	0.0173940658569	3
Coq.ssr.ssrbool.inW_bij	40
Coq.ssr.ssrbool.onW_bij	40	0	search with cache (only 1: by case  {}=>g' fK g'K; <ssreflect_plugin::ssrtclintros@0> exists g' =>* ? *; auto).	0.0197501182556	1
Coq.ssr.ssrbool.inT_bij	40	0	search with cache (only 1: by case  {}=>g' fK g'K; <ssreflect_plugin::ssrtclintros@0> exists g' =>* ? *; auto).	0.0246589183807	1
Coq.ssr.ssrbool.onT_bij	40	0	search with cache (only 1: by case  {}=>g' fK g'K; <ssreflect_plugin::ssrtclintros@0> exists g' =>* ? *; auto).	0.0242519378662	1
Coq.ssr.ssrbool.sub_in_bij	40	0.76	search with cache (only 1: intro H; only 1: by case  {}=>g' fK g'K; <ssreflect_plugin::ssrtclintros@0> exists g' =>* ? *; auto).	2.72293186188	4901
Coq.ssr.ssrbool.subon_bij	40	5	search with cache (only 1: by move  {}=>subD [g' fK g'K]; <ssreflect_plugin::ssrtclintros@0> exists g' =>x; move /subD {}; [ apply : {}fK {} | apply : {}g'K {} ]).	0.0333788394928	6
Coq.ssr.ssrbool.sub_in2	40	17.39	search with cache (only 1: intros; only 1: by move  {}=>? ?; auto).	1.1779999733	2235
Coq.ssr.ssrbool.sub_in3	40	17.39	search with cache (only 1: intros; only 1: by move  {}=>? ?; auto).	1.23360300064	2009
Coq.ssr.ssrbool.sub_in12	40	1.44	search with cache (only 1: intro x; only 1: by move  {}=>/= sub_dd'; apply : {}sub_in111 {}).	1.08165407181	1090
Coq.ssr.ssrbool.sub_in21	40	1	search with cache (only 1: by move  {}=>/= sub_dd'; apply : {}sub_in111 {}).	0.0233039855957	2
Coq.ssr.ssrbool.equivalence_relP_in	40
Coq.ssr.ssrbool.monoW	40	112	search with cache (only 1: by move  {}=>eq_fg eq_gh x; rewrite eq_fg).	3.9831058979	11898
Coq.ssr.ssrbool.mono2W	40	0	search with cache (only 1: by move  {}=>hf x ax; rewrite hf).	0.0124719142914	1
Coq.ssr.ssrbool.homoRL	40
Coq.ssr.ssrbool.homoLR	40	0	search with cache (only 1: by move  {}=>Hf x y /Hf; rewrite fgK).	0.0148019790649	1
Coq.ssr.ssrbool.homo_mono	40
Coq.ssr.ssrbool.monoLR	40
Coq.ssr.ssrbool.monoRL	40
Coq.ssr.ssrbool.can_mono	40
Coq.ssr.ssrbool.monoW_in	40
Coq.ssr.ssrbool.mono2W_in	40	0	search with cache (only 1: by move  {}=>hf x ax; rewrite hf).	0.0145499706268	1
Coq.ssr.ssrbool.homoRL_in	40
Coq.ssr.ssrbool.homoLR_in	40	0	search with cache (only 1: by move  {}=>Hf x y hx hy /Hf; rewrite fgK_on //; apply).	0.0241420269012	1
Coq.ssr.ssrbool.homo_mono_in	40
Coq.ssr.ssrbool.monoLR_in	40
Coq.ssr.ssrbool.monoRL_in	40
Coq.ssr.ssrbool.can_mono_in	40
Coq.ssr.ssrsetoid.compat_Reflexive	40	0	search with cache (only 1: tauto).	0.00692701339722	1
Coq.ssr.ssrfun.unitE	40	7.10.12	search with cache (only 1: intro H; only 1: destruct H; only 1: trivial).	0.157464981079	796
Coq.ssr.ssrfun.frefl	40	13	search with cache (only 1: split).	0.0132489204407	60
Coq.ssr.ssrfun.fsym	40	0.9	search with cache (only 1: intros; only 1: by [  ]).	0.0191700458527	21
Coq.ssr.ssrfun.ftrans	40	2.73.25.33	search with cache (only 1: red; only 1: intros; only 1: rewrite H; only 1: by [  ]).	9.12308216095	76033
Coq.ssr.ssrfun.rrefl	40	6	search with cache (only 1: repeat split).	0.00723314285278	7
Coq.ssr.ssrfun.eq_comp	40
Coq.ssr.ssrfun.all_tag	40
Coq.ssr.ssrfun.all_tag2	40	0	search with cache (only 1: by move  {}=>fP; <ssreflect_plugin::ssrtclintros@0> exists (fun x => tag (fP x)) =>x; case : {}(fP x) {}).	0.0148417949677	1
Coq.ssr.ssrfun.svalP	40	24	search with cache (only 1: apply proj2_sig).	0.0859339237213	280
Coq.ssr.ssrfun.s2valP	40	13	search with cache (only 1: by case : {}u {}).	0.0290899276733	60
Coq.ssr.ssrfun.s2valP'	40	0	search with cache (only 1: by case : {}u {}).	0.00969004631042	1
Coq.ssr.ssrfun.all_sig	40	0	search with cache (only 1: by move  {}=>fP; <ssreflect_plugin::ssrtclintros@0> exists (fun x => tag (fP x)) =>x; case : {}(fP x) {}).	0.0136029720306	1
Coq.ssr.ssrfun.all_sig2	40	1	search with cache (only 1: by move  {}=>fP; <ssreflect_plugin::ssrtclintros@0> exists (fun x => tag (fP x)) =>x; case : {}(fP x) {}).	0.023185968399	2
Coq.ssr.ssrfun.can_pcan	40
Coq.ssr.ssrfun.pcan_inj	40
Coq.ssr.ssrfun.can_inj	40	1	search with cache (only 1: by move  {}=>fK x y /(congr1 g); <ssreflect_plugin::ssrtclintros@0> rewrite !fK =>[[]]).	0.0155351161957	2
Coq.ssr.ssrfun.canLR	40	8.38.10	search with cache (only 1: intros h1 h2; only 1: subst; only 1: trivial).	0.895228147507	4716
Coq.ssr.ssrfun.canRL	40	31.17	search with cache (only 1: destruct 2; only 1: auto).	0.719167947769	3386
Coq.ssr.ssrfun.Some_inj	40	1.4.0.52	search with cache (only 1: intros n m; only 1: revert m; only 1: inversion 1; only 1: trivial).	1.51079797745	5249
Coq.ssr.ssrfun.of_voidK	40	31	search with cache (only 1: by [  ]).	0.264793157578	534
Coq.ssr.ssrfun.esymK	40	0.0.68	search with cache (only 1: intro H; only 1: destruct H; only 1: reflexivity).	1.30710291862	6478
Coq.ssr.ssrfun.etrans_id	40	4.23	search with cache (only 1: rewrite eq_trans_refl_l; only 1: reflexivity).	0.226241827011	400
Coq.ssr.ssrfun.inj_id	40	0	search with cache (only 1: by move  {}=>x y []).	0.0114800930023	1
Coq.ssr.ssrfun.inj_can_sym	40	39.63	search with cache (only 1: red; only 1: auto).	3.03057599068	14368
Coq.ssr.ssrfun.inj_comp	40	35.59	search with cache (only 1: red; only 1: auto).	5.05623102188	18628
Coq.ssr.ssrfun.inj_compr	40
Coq.ssr.ssrfun.can_comp	40	5.22.62	search with cache (only 1: red; only 1: simpl; only 1: by move  {}=>eq_fg eq_gh x; rewrite eq_fg).	2.69364094734	10082
Coq.ssr.ssrfun.pcan_pcomp	40
Coq.ssr.ssrfun.eq_inj	40
Coq.ssr.ssrfun.eq_can	40
Coq.ssr.ssrfun.inj_can_eq	40
Coq.ssr.ssrfun.bij_inj	40
Coq.ssr.ssrfun.bij_can_sym	40
Coq.ssr.ssrfun.bij_can_eq	40
Coq.ssr.ssrfun.eq_bij	40
Coq.ssr.ssrfun.bij_comp	40
Coq.ssr.ssrfun.bij_can_bij	40
Coq.ssr.ssrfun.inv_inj	40
Coq.ssr.ssrfun.inv_bij	40	21.21.83.32	search with cache (only 1: set (Hfsymf := fun a => eq_sym (Hf a)); only 1: exists f; only 1: trivial; only 1: trivial).	2.57163405418	27678
Coq.ssr.ssrunder.Under_rel.Under_rel_from_rel	40	1.2.3	search with cache (only 1: intro H; only 1: intro z; only 1: auto).	0.00925707817078	9
Coq.ssr.ssrunder.Under_rel.Under_relE	40	0	search with cache (only 1: now trivial).	0.00525999069214	1
Coq.ssr.ssrunder.Under_rel.over_rel	40	0	search with cache (only 1: now trivial).	0.00464081764221	1
Coq.ssr.ssrunder.Under_rel.over_rel_done	40	0	search with cache (only 1: now trivial).	0.00485682487488	1
Coq.ssr.ssrunder.Under_rel.under_rel_done	40	0	search with cache (only 1: now unfold Over_rel).	0.00472283363342	1
Coq.Vectors.VectorDef.trunc	40
Coq.Setoids.Setoid.Seq_refl	40	50.5	search with cache (only 1: simpl_relation; only 1: firstorder).	1.06953191757	4375
Coq.Setoids.Setoid.Seq_sym	40	6.0.0	search with cache (only 1: unfold Setoid_Theory in s; only 1: intros; only 1: intuition).	0.0150299072266	11
Coq.Setoids.Setoid.Seq_trans	40	8.0.0	search with cache (only 1: unfold Setoid_Theory in s; only 1: intros; only 1: now transitivity y).	0.10955786705	161
Coq.Setoids.Setoid.gen_st	40	5.11	search with cache (only 1: intros; only 1: simpl_relation).	0.102632045746	302
Coq.Bool.IfProp.Iftrue_inv	40	4.0.3	search with cache (only 1: destruct 1; only 1: tauto; only 1: discriminate).	0.0408408641815	46
Coq.Bool.IfProp.Iffalse_inv	40	2.2.1.0.0	search with cache (only 1: destruct 1; only 1: intros; only 1: case diff_true_false; only 1: auto with bool; only 1: auto with bool).	0.0216281414032	13
Coq.Bool.IfProp.IfProp_true	40	2.6.8.45	search with cache (only 1: intros n m; only 1: revert m; only 1: inversion 1; only 1: trivial).	10.1047899723	79204
Coq.Bool.IfProp.IfProp_false	40	1.0.0.0.0.0.0.1	search with cache (only 1: intros; only 1: inversion H; only 1: inversion H; only 1: inversion H; only 1: inversion H; only 1: inversion H; only 1: inversion H; only 1: assumption).	0.0283908843994	20
Coq.Bool.IfProp.IfProp_or	40	1.1.0.8	search with cache (only 1: intro z; only 1: destruct 1; only 1: auto; only 1: auto).	0.550921916962	655
Coq.Bool.IfProp.IfProp_sum	40
Coq.Bool.DecBool.ifdec_left	40	10.0.0.0	search with cache (only 1: intros; only 1: destruct H; only 1: reflexivity; only 1: contradiction).	0.536915063858	767
Coq.Bool.DecBool.ifdec_right	40	0.5.0.0	search with cache (only 1: intros; only 1: case H; only 1: contradiction; only 1: auto).	0.071151971817	44
Coq.Bool.Sumbool.sumbool_of_bool	40	4.4.14.0	search with cache (only 1: intro H; only 1: destruct H; only 1: auto; only 1: auto).	0.172308921814	896
Coq.Bool.Sumbool.bool_eq_rec	40	1.2.1.2.3	search with cache (only 1: destruct b; only 1: intro z; only 1: auto; only 1: intro z; only 1: auto).	0.125977039337	341
Coq.Bool.Sumbool.bool_eq_ind	40	0.0.0	search with cache (only 1: destruct b; only 1: auto; only 1: auto).	0.00953602790833	3
Coq.Bool.Sumbool.sumbool_and	40
Coq.Bool.Sumbool.sumbool_or	40	2.2.1.2.0	search with cache (only 1: case H1; only 1: auto; only 1: case H2; only 1: auto; only 1: auto).	5.44717216492	3335
Coq.Bool.Sumbool.sumbool_not	40	2.2.0	search with cache (only 1: case H1; only 1: auto; only 1: auto).	0.508537054062	373
Coq.Bool.Sumbool.bool_of_sumbool	40
Coq.Bool.Bool.bool_dec	40
Coq.Bool.Bool.diff_true_false	40	18	search with cache (only 1: discriminate).	0.0741422176361	386
Coq.Bool.Bool.diff_false_true	40	0	search with cache (only 1: discriminate).	0.00826406478882	1
Coq.Bool.Bool.eq_true_false_abs	40	3.3.18.0	search with cache (only 1: intro H; only 1: destruct H; only 1: discriminate; only 1: discriminate).	0.469656944275	1836
Coq.Bool.Bool.not_true_is_false	40	2.22.4	search with cache (only 1: destr_bool; only 1: reflexivity || destruct H; only 1: repeat split).	0.533859014511	2559
Coq.Bool.Bool.not_false_is_true	40	1.0	search with cache (only 1: destr_bool; only 1: intuition).	0.0106999874115	3
Coq.Bool.Bool.not_true_iff_false	40	1.1.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0144851207733	5
Coq.Bool.Bool.not_false_iff_true	40	0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0143370628357	3
Coq.Bool.Bool.leb_implb	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0203340053558	5
Coq.Bool.Bool.eqb_subst	40	7.0.0	search with cache (only 1: intro H; only 1: intro z; only 1: destr_bool).	0.0161271095276	11
Coq.Bool.Bool.eqb_reflx	40	0	search with cache (only 1: destr_bool).	0.00802993774414	1
Coq.Bool.Bool.eqb_prop	40	0	search with cache (only 1: destr_bool).	0.00885891914368	1
Coq.Bool.Bool.eqb_true_iff	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0181748867035	5
Coq.Bool.Bool.eqb_false_iff	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0218658447266	5
Coq.Bool.Bool.negb_orb	40	0.0.0.0.0.1.2	search with cache (only 1: destruct b1; only 1: destruct b2; only 1: repeat split; only 1: repeat split; only 1: destruct b2; only 1: repeat split; only 1: repeat split).	0.0359101295471	30
Coq.Bool.Bool.negb_andb	40	0	search with cache (only 1: destr_bool).	0.0104260444641	1
Coq.Bool.Bool.negb_involutive	40	0	search with cache (only 1: destr_bool).	0.00972414016724	1
Coq.Bool.Bool.negb_involutive_reverse	40	0	search with cache (only 1: destr_bool).	0.00927495956421	1
Coq.Bool.Bool.negb_sym	40	0	search with cache (only 1: destr_bool).	0.00996804237366	1
Coq.Bool.Bool.no_fixpoint_negb	40	0	search with cache (only 1: destr_bool).	0.00927996635437	1
Coq.Bool.Bool.eqb_negb1	40	0	search with cache (only 1: destr_bool).	0.00936794281006	1
Coq.Bool.Bool.eqb_negb2	40	0	search with cache (only 1: destr_bool).	0.00950694084167	1
Coq.Bool.Bool.if_negb	40	0	search with cache (only 1: destr_bool).	0.00812196731567	1
Coq.Bool.Bool.negb_true_iff	40	0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0142750740051	3
Coq.Bool.Bool.negb_false_iff	40	0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0148379802704	3
Coq.Bool.Bool.orb_true_iff	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0232470035553	5
Coq.Bool.Bool.orb_false_iff	40	0.1.0.1.0.0.2.4	search with cache (only 1: split; only 1: split; only 1: destr_bool; only 1: destr_bool; only 1: intros; only 1: destruct H; only 1: subst; only 1: destr_bool).	1.27818584442	1745
Coq.Bool.Bool.orb_true_elim	40	4.4.5.0	search with cache (only 1: destr_bool; only 1: auto; only 1: auto; only 1: auto).	0.515419960022	744
Coq.Bool.Bool.orb_prop	40	0.0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition).	0.0178549289703	4
Coq.Bool.Bool.orb_true_intro	40	0.1.0	search with cache (only 1: intros; only 1: destr_bool; only 1: intuition).	0.0153388977051	4
Coq.Bool.Bool.orb_false_intro	40	0	search with cache (only 1: destr_bool).	0.00998282432556	1
Coq.Bool.Bool.orb_false_elim	40	2.0	search with cache (only 1: destr_bool; only 1: repeat split).	0.012754201889	4
Coq.Bool.Bool.orb_diag	40	6.0	search with cache (only 1: intros; only 1: destr_bool).	0.0129849910736	8
Coq.Bool.Bool.orb_true_r	40	4.0.1.1	search with cache (only 1: intros; only 1: apply orb_true_iff; only 1: apply orb_true_iff; only 1: destr_bool).	0.0257787704468	15
Coq.Bool.Bool.orb_true_l	40	0	search with cache (only 1: destr_bool).	0.00893998146057	1
Coq.Bool.Bool.orb_false_r	40	7.1	search with cache (only 1: intros; only 1: destr_bool).	0.0129580497742	10
Coq.Bool.Bool.orb_false_l	40	0	search with cache (only 1: destr_bool).	0.00859689712524	1
Coq.Bool.Bool.orb_negb_r	40	0	search with cache (only 1: destr_bool).	0.00917387008667	1
Coq.Bool.Bool.orb_comm	40	6.0	search with cache (only 1: intros; only 1: destr_bool).	0.0142688751221	8
Coq.Bool.Bool.orb_assoc	40	6.0	search with cache (only 1: intros; only 1: destr_bool).	0.0162580013275	8
Coq.Bool.Bool.andb_true_iff	40	0.0.0.0.6	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.363618135452	227
Coq.Bool.Bool.andb_false_iff	40	0.0.0.0.2	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.174181938171	46
Coq.Bool.Bool.andb_true_eq	40	2.2	search with cache (only 1: destr_bool; only 1: repeat split).	0.187110900879	92
Coq.Bool.Bool.andb_false_intro1	40	1	search with cache (only 1: destr_bool).	0.126597166061	14
Coq.Bool.Bool.andb_false_intro2	40	0.0.0	search with cache (only 1: intros; only 1: apply andb_false_iff; only 1: auto).	0.123961925507	3
Coq.Bool.Bool.andb_false_r	40	1.4.1	search with cache (only 1: intros; only 1: apply andb_false_iff; only 1: intuition).	0.0118229389191	9
Coq.Bool.Bool.andb_false_l	40	1	search with cache (only 1: destr_bool).	0.00636601448059	2
Coq.Bool.Bool.andb_diag	40	7.0	search with cache (only 1: intros; only 1: destr_bool).	0.0110609531403	9
Coq.Bool.Bool.andb_true_r	40	2	search with cache (only 1: destr_bool).	0.00647592544556	3
Coq.Bool.Bool.andb_true_l	40	1	search with cache (only 1: destr_bool).	0.00647115707397	2
Coq.Bool.Bool.andb_false_elim	40	0.0.0.2	search with cache (only 1: destr_bool; only 1: auto; only 1: auto; only 1: auto).	0.0299091339111	23
Coq.Bool.Bool.andb_negb_r	40	0	search with cache (only 1: destr_bool).	0.00835800170898	1
Coq.Bool.Bool.andb_comm	40	4	search with cache (only 1: destr_bool).	0.0248990058899	21
Coq.Bool.Bool.andb_assoc	40	4	search with cache (only 1: destr_bool).	0.0287578105927	25
Coq.Bool.Bool.andb_orb_distrib_r	40	0	search with cache (only 1: destr_bool).	0.0101079940796	1
Coq.Bool.Bool.andb_orb_distrib_l	40	0	search with cache (only 1: destr_bool).	0.0109820365906	1
Coq.Bool.Bool.orb_andb_distrib_r	40	0	search with cache (only 1: destr_bool).	0.0112161636353	1
Coq.Bool.Bool.orb_andb_distrib_l	40	0	search with cache (only 1: destr_bool).	0.0113341808319	1
Coq.Bool.Bool.absorption_andb	40	0	search with cache (only 1: destr_bool).	0.00934505462646	1
Coq.Bool.Bool.absorption_orb	40	0	search with cache (only 1: destr_bool).	0.00818490982056	1
Coq.Bool.Bool.xorb_false_r	40	4	search with cache (only 1: destr_bool).	0.0160028934479	22
Coq.Bool.Bool.xorb_false_l	40	0	search with cache (only 1: destr_bool).	0.00705480575562	1
Coq.Bool.Bool.xorb_true_r	40	0	search with cache (only 1: destr_bool).	0.00759792327881	1
Coq.Bool.Bool.xorb_true_l	40	0	search with cache (only 1: reflexivity).	0.0058159828186	1
Coq.Bool.Bool.xorb_nilpotent	40	0	search with cache (only 1: destr_bool).	0.00792789459229	1
Coq.Bool.Bool.xorb_comm	40	1	search with cache (only 1: destr_bool).	0.00911402702332	2
Coq.Bool.Bool.xorb_assoc_reverse	40	1	search with cache (only 1: destr_bool).	0.0126039981842	2
Coq.Bool.Bool.xorb_eq	40	0	search with cache (only 1: destr_bool).	0.0092442035675	1
Coq.Bool.Bool.xorb_move_l_r_1	40	0	search with cache (only 1: destr_bool).	0.0117378234863	1
Coq.Bool.Bool.xorb_move_l_r_2	40	0	search with cache (only 1: destr_bool).	0.01194190979	1
Coq.Bool.Bool.xorb_move_r_l_1	40	0	search with cache (only 1: destr_bool).	0.0118999481201	1
Coq.Bool.Bool.xorb_move_r_l_2	40	0	search with cache (only 1: destr_bool).	0.0119588375092	1
Coq.Bool.Bool.negb_xorb_l	40	1	search with cache (only 1: destr_bool).	0.00831294059753	2
Coq.Bool.Bool.negb_xorb_r	40	0.0.0.0.0	search with cache (only 1: destruct b, b'; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial).	0.0160570144653	5
Coq.Bool.Bool.xorb_negb_negb	40	0.0.0.0.0	search with cache (only 1: destruct b, b'; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial).	0.015233039856	5
Coq.Bool.Bool.eq_iff_eq_true	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0812928676605	5
Coq.Bool.Bool.eq_true_iff_eq	40	0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0178489685059	3
Coq.Bool.Bool.eq_true_negb_classical	40	1.0	search with cache (only 1: destr_bool; only 1: intuition).	0.0112838745117	3
Coq.Bool.Bool.eq_true_not_negb	40	1.0	search with cache (only 1: destr_bool; only 1: intuition).	0.0112369060516	3
Coq.Bool.Bool.absurd_eq_bool	40	6.6.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.237571954727	327
Coq.Bool.Bool.absurd_eq_true	40	6.0	search with cache (only 1: destr_bool; only 1: intuition).	0.0100359916687	8
Coq.Bool.Bool.trans_eq_bool	40	0.5.1	search with cache (only 1: intros; only 1: destruct H; only 1: trivial).	0.0206241607666	29
Coq.Bool.Bool.Is_true_eq_true	40	6.6	search with cache (only 1: destr_bool; only 1: intuition).	0.208811044693	263
Coq.Bool.Bool.Is_true_eq_left	40	0	search with cache (only 1: destr_bool).	0.00570178031921	1
Coq.Bool.Bool.Is_true_eq_right	40	0.0.0	search with cache (only 1: intros; only 1: subst; only 1: auto with bool).	0.00939893722534	3
Coq.Bool.Bool.eqb_refl	40	0	search with cache (only 1: destr_bool).	0.00667095184326	1
Coq.Bool.Bool.eqb_eq	40	0.0.0	search with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.0149340629578	3
Coq.Bool.Bool.orb_prop_elim	40	1.1.1.0.1	search with cache (only 1: destr_bool; only 1: intuition; only 1: tauto; only 1: tauto; only 1: tauto).	0.0224609375	18
Coq.Bool.Bool.orb_prop_intro	40	0.0	search with cache (only 1: destr_bool; only 1: tauto).	0.0112431049347	2
Coq.Bool.Bool.andb_prop_intro	40	1.0.0.1	search with cache (only 1: destr_bool; only 1: tauto; only 1: tauto; only 1: tauto).	0.0228061676025	21
Coq.Bool.Bool.andb_prop_elim	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: tauto; only 1: tauto; only 1: tauto; only 1: tauto).	0.0165059566498	5
Coq.Bool.Bool.eq_bool_prop_intro	40	0.0.1	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0238881111145	16
Coq.Bool.Bool.eq_bool_prop_elim	40	0.0.0	search with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.0142841339111	3
Coq.Bool.Bool.negb_prop_elim	40	0.0.0	search with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.0116369724274	3
Coq.Bool.Bool.negb_prop_intro	40	0.0	search with cache (only 1: destr_bool; only 1: tauto).	0.00913500785828	2
Coq.Bool.Bool.negb_prop_classical	40	0.0	search with cache (only 1: destr_bool; only 1: tauto).	0.00915598869324	2
Coq.Bool.Bool.negb_prop_involutive	40	0.0.0	search with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.0112419128418	3
Coq.Bool.Bool.andb_if	40	4	search with cache (only 1: destr_bool).	0.0131080150604	14
Coq.Bool.Bool.negb_if	40	0	search with cache (only 1: destr_bool).	0.00771594047546	1
Coq.Bool.Bool.andb_lazy_alt	40	1.0	search with cache (only 1: intros; only 1: repeat split).	0.00988507270813	3
Coq.Bool.Bool.orb_lazy_alt	40	0.0	search with cache (only 1: intros; only 1: trivial).	0.00723600387573	2
Coq.Bool.Bool.reflect_iff	40	1.0.0.40.4	search with cache (only 1: intros; only 1: destruct H; only 1: intuition; only 1: intuition; only 1: destr_bool).	22.6078891754	59609
Coq.Bool.Bool.iff_reflect	40	0.0.1	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0192580223083	13
Coq.Bool.Bool.reflect_dec	40	3.3.1	search with cache (only 1: destruct 1; only 1: intuition; only 1: intuition).	0.0806469917297	31
Coq.Bool.Bool.eqb_spec	40	0.0.0.0.2	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0175080299377	7
Coq.Bool.BoolEq.beq_eq_true	40	7.1.1	search with cache (only 1: intros; only 1: destruct H; only 1: destr_bool).	0.0858788490295	167
Coq.Bool.BoolEq.beq_eq_not_false	40
Coq.Bool.BoolEq.beq_false_not_eq	40
Coq.Bool.BoolEq.exists_beq_eq	40
Coq.Bool.BoolEq.not_eq_false_beq	40	12.52.1	search with cache (only 1: intros x y e; only 1: apply eq_iff_eq_true; only 1: intuition).	29.8087739944	103493
Coq.Bool.BoolEq.eq_dec	40
Coq.Lists.ListSet.set_In_dec	40
Coq.Lists.ListSet.set_mem_ind	40	0.0.7.5.5.0.0.0.0	search with cache (only 1: unfold set_In; only 1: simple induction x; only 1: auto; only 1: intros a0 x0 Ha0; only 1: simpl; only 1: intuition; only 1: case (Aeq_dec a a0); only 1: auto with datatypes; only 1: auto with datatypes).	24.2957949638	26478
Coq.Lists.ListSet.set_mem_ind2	40
Coq.Lists.ListSet.set_mem_correct1	40	3.3.0.0.4.8.0.1	search with cache (only 1: simple induction x; only 1: simpl; only 1: Bool.destr_bool; only 1: intros a0 x0 Ha0; only 1: simpl; only 1: elim (Aeq_dec a a0); only 1: auto with datatypes; only 1: auto with datatypes).	36.3884739876	16032
Coq.Lists.ListSet.set_mem_correct2	40	11.0.0.0.0.2.0	search with cache (only 1: simple induction x; only 1: auto with datatypes; only 1: simpl; only 1: intros a0 l; only 1: elim (Aeq_dec a a0); only 1: auto with datatypes; only 1: intuition).	24.9757459164	11571
Coq.Lists.ListSet.set_mem_complete1	40
Coq.Lists.ListSet.set_mem_complete2	40
Coq.Lists.ListSet.set_add_intro1	40
Coq.Lists.ListSet.set_add_intro2	40
Coq.Lists.ListSet.set_add_intro	40	11	search with cache (only 1: intuition).	0.94103717804	551
Coq.Lists.ListSet.set_add_elim	40
Coq.Lists.ListSet.set_add_elim2	40	0.0.0.0.0.0.0.0.0.1.0.0.1	search with cache (only 1: unfold set_In; only 1: simple induction x; only 1: simpl; only 1: intros [H1| H2]; only 1: auto with datatypes; only 1: auto with datatypes; only 1: simpl; only 1: do 3 intro; only 1: elim (Aeq_dec b a0); only 1: simpl; only 1: tauto; only 1: simpl; only 1: tauto).	1.14881396294	695
Coq.Lists.ListSet.set_add_not_empty	40
Coq.Lists.ListSet.set_add_iff	40
Coq.Lists.ListSet.set_add_nodup	40
Coq.Lists.ListSet.set_remove_1	40	0.0.0.0.2.1.44	search with cache (only 1: induction l as [| a0 l IHl]; only 1: tauto; only 1: simpl; only 1: elim (Aeq_dec b a0); only 1: tauto; only 1: simpl; only 1: tauto).	7.22994399071	8648
Coq.Lists.ListSet.set_remove_2	40
Coq.Lists.ListSet.set_remove_3	40
Coq.Lists.ListSet.set_remove_iff	40
Coq.Lists.ListSet.set_remove_nodup	40
Coq.Lists.ListSet.set_union_intro1	40
Coq.Lists.ListSet.set_union_intro2	40
Coq.Lists.ListSet.set_union_intro	40	0.0.1.1.0.0.0	search with cache (only 1: simple induction y; only 1: simpl; only 1: tauto; only 1: intros; only 1: elim H0; only 1: auto with datatypes; only 1: auto with datatypes).	0.152540206909	26
Coq.Lists.ListSet.set_union_elim	40
Coq.Lists.ListSet.set_union_iff	40
Coq.Lists.ListSet.set_union_nodup	40
Coq.Lists.ListSet.set_union_emptyL	40	0.1.4.2.0.0.0.0.11	search with cache (only 1: simple induction x; only 1: simpl; only 1: tauto; only 1: simpl; only 1: intros; only 1: generalize (set_add_elim _ _ _ H0); only 1: intros [H1| H1]; only 1: auto with datatypes; only 1: tauto).	5.45786118507	3478
Coq.Lists.ListSet.set_union_emptyR	40	0.0.0.1.0.0.0.0	search with cache (only 1: intros a x H; only 1: case (set_union_elim _ _ _ H); only 1: case (set_union_elim _ _ _ H); only 1: case (set_union_elim _ _ _ H); only 1: auto || contradiction; only 1: auto || contradiction; only 1: auto || contradiction; only 1: auto || contradiction).	0.226300954819	40
Coq.Lists.ListSet.set_inter_intro	40
Coq.Lists.ListSet.set_inter_elim1	40
Coq.Lists.ListSet.set_inter_elim2	40
Coq.Lists.ListSet.set_inter_elim	40	3.6	search with cache (only 1: intros; only 1: eauto with datatypes).	0.440185070038	157
Coq.Lists.ListSet.set_inter_iff	40
Coq.Lists.ListSet.set_inter_nodup	40
Coq.Lists.ListSet.set_diff_intro	40
Coq.Lists.ListSet.set_diff_elim1	40
Coq.Lists.ListSet.set_diff_elim2	40
Coq.Lists.ListSet.set_diff_iff	40
Coq.Lists.ListSet.set_diff_nodup	40	1.4.0.3.5.1.0.4	search with cache (only 1: induction 1 as [| x l H H' IH]; only 1: constructor; only 1: simpl; only 1: intuition; only 1: apply set_mem_ind2; only 1: tauto; only 1: intuition; only 1: now apply set_add_nodup).	10.7125890255	9840
Coq.Lists.ListSet.set_diff_trivial	40
Coq.Lists.Streams.unfold_Stream	40	1.0.6.41	search with cache (only 1: intro H; only 1: destruct H; only 1: destruct H; only 1: reflexivity).	21.339769125	73924
Coq.Lists.Streams.tl_nth_tl	40	0.0.1.0.6	search with cache (only 1: induction n; only 1: trivial; only 1: intro x; only 1: case x; only 1: trivial).	0.337599992752	239
Coq.Lists.Streams.Str_nth_tl_plus	40
Coq.Lists.Streams.Str_nth_plus	40
Coq.Lists.Streams.EqSt_reflex	40
Coq.Lists.Streams.sym_EqSt	40	2.4.10.0.3	search with cache (only 1: intro x; only 1: coinduction ltac:(EqSt_reflex); only 1: destruct H; only 1: auto with datatypes; only 1: trivial).	2.16978907585	3471
Coq.Lists.Streams.trans_EqSt	40
Coq.Lists.Streams.eqst_ntheq	40
Coq.Lists.Streams.ntheq_eqst	40
Coq.Lists.Streams.ForAll_Str_nth_tl	40
Coq.Lists.Streams.ForAll_coind	40	3.22.6	search with cache (only 1: intros; only 1: coinduction ltac:(EqSt_reflex); only 1: auto).	0.694967985153	1598
Coq.Lists.Streams.Str_nth_tl_map	40	2.0.3.1	search with cache (only 1: simple induction n; only 1: auto; only 1: simpl; only 1: auto).	0.0630099773407	44
Coq.Lists.Streams.Str_nth_map	40	0.0.0.0.0.5	search with cache (only 1: unfold Str_nth; only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: intros s; only 1: apply IHn).	0.144404172897	136
Coq.Lists.Streams.ForAll_map	40
Coq.Lists.Streams.Exists_map	40
Coq.Lists.Streams.Str_nth_tl_zipWith	40	0.5.0.0.0	search with cache (only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: intros; only 1: apply IHn).	0.0387978553772	21
Coq.Lists.Streams.Str_nth_zipWith	40	0.0.2.0.2.1	search with cache (only 1: unfold Str_nth; only 1: induction n; only 1: reflexivity; only 1: intros [x xs] [y ys]; only 1: simpl in *; only 1: apply IHn).	0.300308942795	162
Coq.Lists.List.nil_cons	40	9.1	search with cache (only 1: red; only 1: discriminate).	0.138607025146	129
Coq.Lists.List.destruct_list	40
Coq.Lists.List.hd_error_tl_repr	40
Coq.Lists.List.hd_error_some_nil	40	0.0.1.0.0.0.1	search with cache (only 1: destruct l as [| x xs]; only 1: unfold hd_error, tl; only 1: intros a r; only 1: firstorder  discriminate; only 1: simpl; only 1: intros; only 1: inversion 1).	0.0757870674133	38
Coq.Lists.List.length_zero_iff_nil	40
Coq.Lists.List.hd_error_nil	40	4.0	search with cache (only 1: unfold hd_error, tl; only 1: RelationClasses.simpl_relation).	0.0195569992065	6
Coq.Lists.List.hd_error_cons	40	5.1.0	search with cache (only 1: intros; only 1: simpl; only 1: reflexivity).	0.0318291187286	18
Coq.Lists.List.in_eq	40	3.0	search with cache (only 1: intros; only 1: firstorder  discriminate).	0.0309021472931	12
Coq.Lists.List.in_cons	40	0.0	search with cache (only 1: simpl; only 1: auto).	0.0161881446838	2
Coq.Lists.List.not_in_cons	40	2.4.0.1.1	search with cache (only 1: simpl; only 1: split; only 1: auto; only 1: intros (Hb, Ha); only 1: intuition).	0.356357097626	153
Coq.Lists.List.in_nil	40	0.0	search with cache (only 1: intros; only 1: intuition).	0.0181889533997	2
Coq.Lists.List.in_split	40
Coq.Lists.List.in_inv	40	0.0.0	search with cache (only 1: destruct 1; only 1: auto; only 1: auto).	0.0212769508362	3
Coq.Lists.List.in_dec	40
Coq.Lists.List.app_cons_not_nil	40
Coq.Lists.List.app_nil_l	40	0	search with cache (only 1: auto).	0.01393699646	1
Coq.Lists.List.app_nil_r	40	0.2.8.1.6	search with cache (only 1: induction l; only 1: reflexivity; only 1: simpl; only 1: apply f_equal; only 1: auto).	0.720445871353	759
Coq.Lists.List.app_nil_end	40	1.0.0.1.1	search with cache (only 1: induction l; only 1: reflexivity; only 1: simpl; only 1: f_equal; only 1: auto).	0.0444428920746	18
Coq.Lists.List.app_assoc	40	1.0.1.4.0.5	search with cache (only 1: induction l; only 1: reflexivity; only 1: simpl; only 1: intros; only 1: apply f_equal; only 1: auto).	0.800947904587	553
Coq.Lists.List.app_assoc_reverse	40	1.0.0.0.0.2.0	search with cache (only 1: intros l m n; only 1: induction l; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: f_equal; only 1: auto).	0.0644631385803	29
Coq.Lists.List.app_comm_cons	40	5	search with cache (only 1: auto).	0.0134308338165	6
Coq.Lists.List.app_eq_nil	40	3.3.0.3.5	search with cache (only 1: induction l; only 1: auto; only 1: simpl; only 1: intros; only 1: discriminate H).	0.615625858307	544
Coq.Lists.List.app_eq_unit	40
Coq.Lists.List.app_inj_tail	40
Coq.Lists.List.app_length	40	3.4.0.20	search with cache (only 1: induction l; only 1: reflexivity; only 1: simpl; only 1: auto).	8.20656204224	10021
Coq.Lists.List.in_app_or	40	0.2.1.0.6.10	search with cache (only 1: intros l m n; only 1: induction l; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).	3.42084407806	3375
Coq.Lists.List.in_or_app	40
Coq.Lists.List.in_app_iff	40
Coq.Lists.List.app_inv_head	40
Coq.Lists.List.app_inv_tail	40
Coq.Lists.List.nth_in_or_default	40
Coq.Lists.List.nth_S_cons	40	1.0	search with cache (only 1: simpl; only 1: auto).	0.0328960418701	15
Coq.Lists.List.nth_default_eq	40
Coq.Lists.List.nth_In	40
Coq.Lists.List.In_nth	40
Coq.Lists.List.nth_overflow	40
Coq.Lists.List.nth_indep	40	0.0.2.0.6.0.1	search with cache (only 1: induction l; only 1: easy; only 1: destruct n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto with arith).	4.48316311836	3684
Coq.Lists.List.app_nth1	40	0.0.0.0.2.0.0	search with cache (only 1: induction l; only 1: inversion 1; only 1: destruct n; only 1: simpl; only 1: auto with arith; only 1: simpl; only 1: auto with arith).	0.115347146988	36
Coq.Lists.List.app_nth2	40
Coq.Lists.List.nth_split	40
Coq.Lists.List.nth_error_In	40
Coq.Lists.List.In_nth_error	40
Coq.Lists.List.nth_error_None	40
Coq.Lists.List.nth_error_Some	40
Coq.Lists.List.nth_error_split	40
Coq.Lists.List.nth_error_app1	40	1.0.0.0.0.3.5.0	search with cache (only 1: revert n; only 1: induction l; only 1: now auto with arith; only 1: destruct n; only 1: simpl; only 1: now auto with arith; only 1: simpl; only 1: auto with arith).	1.80187106133	891
Coq.Lists.List.nth_error_app2	40	0.0.0.1.3.0.1.1.0.0.1	search with cache (only 1: revert l; only 1: induction n; only 1: intros [| a l] H; only 1: auto; only 1: simpl in *; only 1: now auto with arith; only 1: intros [| a l] H; only 1: auto; only 1: simpl in *; only 1: apply IHn; only 1: auto with arith).	3.1327059269	1659
Coq.Lists.List.nth_error_nth	40
Coq.Lists.List.nth_error_nth'	40	0.0.0.0.0.0.1.9	search with cache (only 1: induction l; only 1: simpl in *; only 1: easy; only 1: destruct n; only 1: simpl; only 1: now auto with arith; only 1: simpl; only 1: now auto with arith).	4.01274299622	2131
Coq.Lists.List.remove_In	40
Coq.Lists.List.app_removelast_last	40
Coq.Lists.List.exists_last	40
Coq.Lists.List.removelast_app	40
Coq.Lists.List.count_occ_In	40
Coq.Lists.List.count_occ_not_In	40
Coq.Lists.List.count_occ_nil	40	1.0	search with cache (only 1: simpl; only 1: intuition).	0.0170359611511	3
Coq.Lists.List.count_occ_inv_nil	40
Coq.Lists.List.count_occ_cons_eq	40	2.0.0.6	search with cache (only 1: simpl; only 1: destruct eq_dec as [->| Hneq]; only 1: intuition; only 1: intuition).	0.17995095253	72
Coq.Lists.List.count_occ_cons_neq	40	0.1.0	search with cache (only 1: intros H; only 1: simpl; only 1: now destruct (eq_dec x y)).	0.0244150161743	4
Coq.Lists.List.rev_app_distr	40
Coq.Lists.List.rev_unit	40	0.1.3.3.1.26	search with cache (only 1: induction l; only 1: trivial; only 1: intro y; only 1: simpl; only 1: rewrite (IHl y); only 1: trivial).	13.6829590797	20908
Coq.Lists.List.rev_involutive	40
Coq.Lists.List.in_rev	40
Coq.Lists.List.rev_length	40
Coq.Lists.List.rev_nth	40
Coq.Lists.List.rev_append_rev	40
Coq.Lists.List.rev_alt	40
Coq.Lists.List.rev_list_ind	40	8.14.0.15	search with cache (only 1: induction l as [| a tail]; only 1: simpl; only 1: auto; only 1: auto).	4.25954890251	11620
Coq.Lists.List.rev_ind	40
Coq.Lists.List.concat_nil	40	2	search with cache (only 1: trivial).	0.012090921402	3
Coq.Lists.List.concat_cons	40	0	search with cache (only 1: now f_equal).	0.0165591239929	1
Coq.Lists.List.concat_app	40
Coq.Lists.List.list_eq_dec	40	41.3	search with cache (only 1: intros; only 1: decide equality).	7.53868103027	17184
Coq.Lists.List.map_cons	40	2.6	search with cache (only 1: simpl in *; only 1: trivial).	0.0170619487762	10
Coq.Lists.List.in_map	40	0.0.4.1.2.0.0.16	search with cache (only 1: induction l; only 1: intros a H; only 1: inversion_clear H; only 1: simpl; only 1: firstorder; only 1: subst; only 1: left; only 1: auto).	36.2199220657	43678
Coq.Lists.List.in_map_iff	40	0.0.0	search with cache (only 1: induction l; only 1: firstorder  (subst; auto); only 1: firstorder  (subst; auto)).	0.0745520591736	3
Coq.Lists.List.map_length	40	2.0.3.0.0	search with cache (only 1: induction l; only 1: simpl; only 1: RelationClasses.simpl_relation; only 1: simpl; only 1: auto with arith).	0.0423619747162	13
Coq.Lists.List.map_nth	40
Coq.Lists.List.map_nth_error	40
Coq.Lists.List.map_app	40
Coq.Lists.List.map_rev	40
Coq.Lists.List.map_eq_nil	40	8.0.0.5	search with cache (only 1: induction l as [| x l]; only 1: simpl; only 1: auto; only 1: discriminate).	1.41108393669	1280
Coq.Lists.List.count_occ_map	40
Coq.Lists.List.in_flat_map	40
Coq.Lists.List.flat_map_concat_map	40	3.0.0.1.0.2	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite IHl; only 1: auto).	0.448038101196	181
Coq.Lists.List.concat_map	40
Coq.Lists.List.map_id	40	3.1.3.0.4	search with cache (only 1: induction l as [| x l IH]; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now f_equal).	0.651048898697	751
Coq.Lists.List.map_map	40	2.0.0.1.0.0	search with cache (only 1: induction l; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: rewrite IHl; only 1: auto).	0.0323829650879	9
Coq.Lists.List.map_ext_in	40
Coq.Lists.List.ext_in_map	40
Coq.Lists.List.map_ext_in_iff	40
Coq.Lists.List.map_ext	40	3.0.1.1.0.1.1	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite H by intuition; only 1: rewrite IHl; only 1: auto).	0.517824172974	341
Coq.Lists.List.fold_left_app	40	1.0.3.4	search with cache (only 1: induction l; only 1: auto; only 1: simpl; only 1: auto).	0.341517925262	189
Coq.Lists.List.fold_left_length	40
Coq.Lists.List.fold_right_app	40	0.1.0.2.0.0.8	search with cache (only 1: induction l; only 1: simpl; only 1: firstorder  (subst; auto); only 1: simpl; only 1: intros; only 1: rewrite IHl; only 1: auto).	0.610897064209	383
Coq.Lists.List.fold_left_rev_right	40
Coq.Lists.List.fold_symmetric	40
Coq.Lists.List.existsb_exists	40
Coq.Lists.List.existsb_nth	40
Coq.Lists.List.existsb_app	40
Coq.Lists.List.forallb_forall	40
Coq.Lists.List.forallb_app	40	0.0.0.0.0.0.0.1.9	search with cache (only 1: induction l1; only 1: intuition; only 1: intros l2; only 1: simpl; only 1: case (f a); only 1: simpl; only 1: solve [ auto ]; only 1: simpl; only 1: congruence).	0.758691072464	455
Coq.Lists.List.filter_In	40
Coq.Lists.List.filter_app	40
Coq.Lists.List.concat_filter_map	40
Coq.Lists.List.find_some	40	1.2.0.0.0.0.6	search with cache (only 1: induction l as [| a l IH]; only 1: simpl; only 1: easy; only 1: simpl; only 1: case_eq (f a); only 1: intuition congruence; only 1: intuition congruence).	1.46718215942	605
Coq.Lists.List.find_none	40
Coq.Lists.List.partition_cons1	40
Coq.Lists.List.partition_cons2	40	0.0	search with cache (only 1: simpl; only 1: now intros -> ->).	0.0211820602417	2
Coq.Lists.List.partition_length	40
Coq.Lists.List.partition_inv_nil	40
Coq.Lists.List.elements_in_partition	40
Coq.Lists.List.filter_map	40
Coq.Lists.List.filter_ext_in	40
Coq.Lists.List.ext_in_filter	40
Coq.Lists.List.filter_ext_in_iff	40	0.1.1.1.10	search with cache (only 1: split; only 1: rewrite filter_map; only 1: apply ext_in_map; only 1: rewrite filter_map; only 1: apply map_ext_in).	1.09562706947	955
Coq.Lists.List.filter_ext	40	6.2.0	search with cache (only 1: intros f g l H; only 1: apply filter_ext_in; only 1: auto).	0.167598009109	92
Coq.Lists.List.in_split_l	40
Coq.Lists.List.in_split_r	40	0.0.1.1.0.0.3.0.0.1.0.9	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: destruct a; only 1: destruct (split l); only 1: simpl in *; only 1: destruct H; only 1: destruct H; only 1: auto; only 1: auto).	22.5133938789	11090
Coq.Lists.List.split_nth	40
Coq.Lists.List.split_length_l	40	1.0.0.1.0.7.0	search with cache (only 1: induction l; only 1: auto; only 1: simpl; only 1: destruct a; only 1: destruct (split l); only 1: simpl in *; only 1: auto).	0.612146854401	534
Coq.Lists.List.split_length_r	40	0.0.0.1.0.4.0	search with cache (only 1: induction l; only 1: auto; only 1: simpl; only 1: destruct a; only 1: destruct (split l); only 1: simpl; only 1: auto).	0.29065990448	133
Coq.Lists.List.split_combine	40	12.0.0.1.0.8.1.0	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: destruct a; only 1: destruct (split l); only 1: simpl in *; only 1: now f_equal).	39.6195509434	32956
Coq.Lists.List.combine_split	40
Coq.Lists.List.in_combine_l	40
Coq.Lists.List.in_combine_r	40
Coq.Lists.List.combine_length	40	0.0.1.3.0.0.0	search with cache (only 1: induction l; only 1: simpl; only 1: trivial; only 1: destruct l'; only 1: trivial; only 1: simpl; only 1: auto).	0.186463117599	104
Coq.Lists.List.combine_nth	40
Coq.Lists.List.in_prod_aux	40	2.2.1.1.4.5.3.3	search with cache (only 1: induction l; only 1: auto; only 1: simpl in *; only 1: intros; only 1: destruct H; only 1: destruct H; only 1: auto; only 1: auto).	3.51982688904	3973
Coq.Lists.List.in_prod	40
Coq.Lists.List.in_prod_iff	40
Coq.Lists.List.prod_length	40
Coq.Lists.List.lel_refl	40
Coq.Lists.List.lel_trans	40	0.15.5.0	search with cache (only 1: unfold lel; only 1: intros; only 1: rewrite H; only 1: auto with arith).	30.8911321163	21943
Coq.Lists.List.lel_cons_cons	40	0.0.0	search with cache (only 1: unfold lel; only 1: simpl; only 1: auto with arith).	0.0320711135864	3
Coq.Lists.List.lel_cons	40	0.0.0	search with cache (only 1: unfold lel; only 1: simpl; only 1: auto with arith).	0.0215530395508	3
Coq.Lists.List.lel_tail	40	0.0.0	search with cache (only 1: unfold lel; only 1: simpl; only 1: auto with arith).	0.0228259563446	3
Coq.Lists.List.lel_nil	40
Coq.Lists.List.incl_refl	40	0.0.0	search with cache (only 1: intro y; only 1: intro H1; only 1: intuition).	0.0185890197754	3
Coq.Lists.List.incl_tl	40	11.12	search with cache (only 1: intros a b l H; only 1: firstorder  (subst; auto)).	1.24501991272	880
Coq.Lists.List.incl_tran	40	0	search with cache (only 1: auto with datatypes).	0.0119369029999	1
Coq.Lists.List.incl_appl	40	0	search with cache (only 1: auto with datatypes).	0.0131161212921	1
Coq.Lists.List.incl_appr	40	0	search with cache (only 1: auto with datatypes).	0.0129959583282	1
Coq.Lists.List.incl_cons	40	5.1	search with cache (only 1: intros; only 1: firstorder  (subst; auto)).	0.0278701782227	8
Coq.Lists.List.incl_app	40	5.4.0.2.1	search with cache (only 1: unfold incl; only 1: intros l m a; only 1: elim l; only 1: auto; only 1: firstorder).	3.20511698723	2587
Coq.Lists.List.firstn_nil	40	0.1.73	search with cache (only 1: destruct n; only 1: trivial; only 1: easy).	0.901987075806	2962
Coq.Lists.List.firstn_cons	40	0	search with cache (only 1: now simpl).	0.0130660533905	1
Coq.Lists.List.firstn_all	40	1.3.0.1.11	search with cache (only 1: induction l as [| a l' Hrec]; only 1: now simpl; only 1: simpl; only 1: f_equal; only 1: auto with arith).	0.387403011322	272
Coq.Lists.List.firstn_all2	40
Coq.Lists.List.firstn_O	40	1	search with cache (only 1: now simpl).	0.0127499103546	2
Coq.Lists.List.firstn_le_length	40	8.0.11.0.0.4.0.0	search with cache (only 1: induction n as [| k iHk]; only 1: intro; only 1: now simpl; only 1: destruct l as [| x xs]; only 1: simpl; only 1: auto with arith; only 1: simpl; only 1: now auto with arith).	22.1415121555	33058
Coq.Lists.List.firstn_length_le	40
Coq.Lists.List.firstn_app	40	2.0.0.0.4.1.11	search with cache (only 1: induction n as [| n IH]; only 1: now reflexivity; only 1: intros [| a l] H; only 1: simpl; only 1: easy; only 1: simpl in *; only 1: now f_equal).	20.6011111736	20643
Coq.Lists.List.firstn_app_2	40
Coq.Lists.List.firstn_firstn	40
Coq.Lists.List.firstn_skipn_comm	40	2.0.0.2.6.0.4	search with cache (only 1: induction n as [| k iHk]; only 1: now reflexivity; only 1: destruct l as [| x xs]; only 1: apply firstn_all2; only 1: auto with arith; only 1: simpl; only 1: auto with arith).	8.74025797844	7634
Coq.Lists.List.skipn_firstn_comm	40
Coq.Lists.List.skipn_O	40	0.3.0	search with cache (only 1: induction l as [| x l]; only 1: trivial; only 1: trivial).	0.0227448940277	6
Coq.Lists.List.skipn_nil	40	2.0.3.19	search with cache (only 1: intros; only 1: induction n; only 1: reflexivity; only 1: now simpl).	0.409103870392	513
Coq.Lists.List.skipn_cons	40	0	search with cache (only 1: now simpl).	0.0129640102386	1
Coq.Lists.List.skipn_none	40	3.1.49	search with cache (only 1: induction l as [| a tail]; only 1: now simpl; only 1: easy).	3.35042905807	5808
Coq.Lists.List.skipn_all2	40
Coq.Lists.List.firstn_skipn	40	3.2.1.3.5.2.3	search with cache (only 1: induction n as [| k iHk]; only 1: auto with arith; only 1: destruct l as [| x xs]; only 1: auto with arith; only 1: simpl; only 1: f_equal; only 1: auto with arith).	9.05911302567	10572
Coq.Lists.List.firstn_length	40	0.0.0.0.7.0.12	search with cache (only 1: induction n as [| k iHk]; only 1: now simpl; only 1: induction l; only 1: simpl; only 1: auto with arith; only 1: simpl; only 1: auto).	25.5994639397	23595
Coq.Lists.List.skipn_length	40	2.0.0.11.4.2	search with cache (only 1: induction n; only 1: now induction l; only 1: induction l; only 1: auto; only 1: simpl; only 1: auto).	3.79085707664	2567
Coq.Lists.List.skipn_all	40	0	search with cache (only 1: now induction l).	0.0134918689728	1
Coq.Lists.List.skipn_app	40	0.0.1.5.1.0.0	search with cache (only 1: induction n; only 1: intros l; only 1: auto; only 1: intros [| a l] H; only 1: auto; only 1: simpl; only 1: auto).	1.87945890427	848
Coq.Lists.List.firstn_skipn_rev	40
Coq.Lists.List.firstn_rev	40
Coq.Lists.List.skipn_rev	40
Coq.Lists.List.removelast_firstn	40
Coq.Lists.List.firstn_removelast	40
Coq.Lists.List.combine_nil	40	2.1.0.0.4	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.134784936905	103
Coq.Lists.List.combine_firstn_l	40	1.0.0.4.1.1.0.0.4	search with cache (only 1: induction l; only 1: intros l; only 1: apply length_zero_iff_nil; only 1: auto; only 1: destruct l'; only 1: trivial; only 1: simpl; only 1: f_equal; only 1: auto).	6.46196389198	4423
Coq.Lists.List.combine_firstn_r	40	0.1.0.0.0.0.1.0.1.7.0	search with cache (only 1: induction l as [| x l IHl]; only 1: destruct l'; only 1: reflexivity; only 1: reflexivity; only 1: intros l'; only 1: destruct l' as [| x' l']; only 1: reflexivity; only 1: simpl; only 1: specialize IHl with (l' := l'); only 1: rewrite <- IHl; only 1: reflexivity).	5.01424813271	4073
Coq.Lists.List.combine_firstn	40
Coq.Lists.List.Add_app	40
Coq.Lists.List.Add_split	40
Coq.Lists.List.Add_in	40	3.5.0.6	search with cache (only 1: induction 1; only 1: firstorder  (subst; auto); only 1: simpl; only 1: firstorder).	4.19327807426	1891
Coq.Lists.List.Add_length	40	0.1.2.3	search with cache (only 1: induction 1; only 1: trivial; only 1: simpl in *; only 1: auto).	0.0483100414276	15
Coq.Lists.List.Add_inv	40
Coq.Lists.List.incl_Add_inv	40
Coq.Lists.List.NoDup_Add	40
Coq.Lists.List.NoDup_remove	40
Coq.Lists.List.NoDup_remove_1	40
Coq.Lists.List.NoDup_remove_2	40	0.0	search with cache (only 1: apply NoDup_Add; only 1: apply Add_app).	0.02108502388	2
Coq.Lists.List.NoDup_cons_iff	40	1.2.2.1	search with cache (only 1: split; only 1: inversion_clear 1; only 1: intuition; only 1: now constructor).	0.0647571086884	10
Coq.Lists.List.nodup_fixed_point	40
Coq.Lists.List.nodup_In	40
Coq.Lists.List.NoDup_nodup	40
Coq.Lists.List.nodup_inv	40
Coq.Lists.List.NoDup_count_occ	40
Coq.Lists.List.NoDup_count_occ'	40
Coq.Lists.List.NoDup_nth_error	40
Coq.Lists.List.NoDup_nth	40
Coq.Lists.List.NoDup_incl_length	40
Coq.Lists.List.NoDup_length_incl	40
Coq.Lists.List.NoDup_map_inv	40
Coq.Lists.List.seq_length	40	0.6.2.2.6	search with cache (only 1: intro n; only 1: induction n as [| n IH]; only 1: auto; only 1: simpl; only 1: auto with arith).	0.644034862518	593
Coq.Lists.List.seq_nth	40
Coq.Lists.List.seq_shift	40
Coq.Lists.List.in_seq	40
Coq.Lists.List.seq_NoDup	40
Coq.Lists.List.seq_app	40
Coq.Lists.List.Exists_exists	40
Coq.Lists.List.Exists_nil	40	9.0	search with cache (only 1: intuition; only 1: easy).	0.0940599441528	50
Coq.Lists.List.Exists_cons	40	0.0.0.0.65.41	search with cache (only 1: firstorder  (subst; auto); only 1: inversion H; only 1: subst; only 1: auto; only 1: subst; only 1: auto).	12.0243360996	36822
Coq.Lists.List.Exists_dec	40
Coq.Lists.List.Forall_forall	40
Coq.Lists.List.Forall_inv	40	0.0.3.17	search with cache (only 1: intros a r; only 1: inversion 1; only 1: subst; only 1: firstorder).	0.885756015778	1323
Coq.Lists.List.Forall_rect	40
Coq.Lists.List.Forall_dec	40
Coq.Lists.List.Forall_inv_tail	40	5.4.4.4	search with cache (only 1: intro; only 1: intro; only 1: intro; only 1: abstract now inversion 1).	1.22070503235	1631
Coq.Lists.List.Exists_impl	40
Coq.Lists.List.Forall_Exists_neg	40
Coq.Lists.List.Exists_Forall_neg	40
Coq.Lists.List.neg_Forall_Exists_neg	40	1.2.1.0.1.0.0.3.7.4	search with cache (only 1: intro Dec; only 1: intros NF; only 1: induction l as [| a l IH]; only 1: destruct NF; only 1: left; only 1: destruct (Dec a) as [Ha| Ha]; only 1: apply Exists_cons_tl, IH; only 1: contradict NF; only 1: now constructor; only 1: now apply Exists_cons_hd).	33.2117698193	6972
Coq.Lists.List.Forall_Exists_dec	40
Coq.Lists.List.Forall_impl	40	1.1.1.0.1.1.4.9	search with cache (only 1: intro Dec; only 1: intros x H2; only 1: intro Pdec; only 1: induction 1; only 1: left; only 1: right; only 1: auto; only 1: auto).	17.1359829903	25205
Coq.Lists.List.Forall2_refl	40	0	search with cache (only 1: trivial).	0.0150969028473	1
Coq.Lists.List.Forall2_app_inv_l	40
Coq.Lists.List.Forall2_app_inv_r	40
Coq.Lists.List.Forall2_app	40	2.1.0.19	search with cache (only 1: induction 1; only 1: auto; only 1: simpl; only 1: auto).	0.829930067062	595
Coq.Lists.List.ForallOrdPairs_In	40
Coq.Lists.List.ForallPairs_ForallOrdPairs	40
Coq.Lists.List.ForallOrdPairs_ForallPairs	40
Coq.Lists.List.repeat_length	40	1.1.0.27	search with cache (only 1: induction n; only 1: trivial; only 1: simpl in *; only 1: now f_equal).	2.51652097702	3004
Coq.Lists.List.repeat_spec	40	3.0.6.1.0	search with cache (only 1: induction n as [| k Hrec]; only 1: intuition; only 1: destruct H; only 1: simpl; only 1: intuition).	0.498771190643	333
Coq.Lists.StreamMemo.memo_get_correct	40
Coq.Lists.StreamMemo.imemo_get_correct	40
Coq.Lists.StreamMemo.dmemo_get_correct	40
Coq.Lists.StreamMemo.dimemo_get_correct	40
Coq.Lists.SetoidList.InA_altdef	40	0.0.4.2.2.0.0.4.2.2.1	search with cache (only 1: split; only 1: induction l as [| a l IH]; only 1: easy; only 1: inversion 1; only 1: auto; only 1: auto; only 1: induction l as [| a l IH]; only 1: easy; only 1: inversion 1; only 1: auto; only 1: auto).	19.7205209732	20910
Coq.Lists.SetoidList.InA_cons	40	1.1.15.0	search with cache (only 1: intuition; only 1: inversion_clear H; only 1: auto; only 1: auto).	2.51243686676	2182
Coq.Lists.SetoidList.InA_nil	40	17.9	search with cache (only 1: intros; only 1: easy).	1.51704692841	2558
Coq.Lists.SetoidList.InA_alt	40	3.0.0.0.1.0.2.0.3	search with cache (only 1: induction l; only 1: firstorder  (subst; auto); only 1: simpl; only 1: invlist InA; only 1: firstorder; only 1: invlist InA; only 1: firstorder  (subst; auto); only 1: firstorder  (subst; auto); only 1: firstorder  (subst; auto)).	9.46961212158	3491
Coq.Lists.SetoidList.NoDupA_altdef	40
Coq.Lists.SetoidList.incl_nil	40	8	search with cache (only 1: now simpl).	0.0813219547272	53
Coq.Lists.SetoidList.eqlistA_altdef	40
Coq.Lists.SetoidList.equivlist_equiv	40	9	search with cache (only 1: firstorder).	0.0356800556183	11
Coq.Lists.SetoidList.eqlistA_equiv	40
Coq.Lists.SetoidList.eqlistA_equivlistA	40
Coq.Lists.SetoidList.InA_compat	40
Coq.Lists.SetoidList.InA_eqA	40	0.4.4	search with cache (only 1: intros x y z H; only 1: rewrite 2!InA_alt; only 1: firstorder).	0.373762845993	77
Coq.Lists.SetoidList.In_InA	40	0.4.0	search with cache (only 1: intros; only 1: rewrite InA_alt; only 1: firstorder).	0.0267570018768	7
Coq.Lists.SetoidList.InA_split	40
Coq.Lists.SetoidList.InA_app	40
Coq.Lists.SetoidList.InA_app_iff	40
Coq.Lists.SetoidList.InA_rev	40
Coq.Lists.SetoidList.InA_singleton	40	6.7.17	search with cache (only 1: intuition; only 1: inv; only 1: intuition).	2.50260400772	1098
Coq.Lists.SetoidList.InA_double_head	40	0.9	search with cache (only 1: rewrite 2!InA_alt; only 1: firstorder).	0.188197851181	28
Coq.Lists.SetoidList.InA_permute_heads	40	0.0	search with cache (only 1: rewrite !InA_cons; only 1: tauto).	0.0793039798737	2
Coq.Lists.SetoidList.InA_app_idem	40
Coq.Lists.SetoidList.NoDupA_app	40
Coq.Lists.SetoidList.NoDupA_rev	40
Coq.Lists.SetoidList.NoDupA_split	40
Coq.Lists.SetoidList.NoDupA_swap	40
Coq.Lists.SetoidList.NoDupA_singleton	40	0.1.2.8	search with cache (only 1: constructor; only 1: intro; only 1: inv; only 1: auto).	0.314692974091	126
Coq.Lists.SetoidList.equivlistA_cons_proper	40
Coq.Lists.SetoidList.equivlistA_app_proper	40
Coq.Lists.SetoidList.equivlistA_cons_nil	40
Coq.Lists.SetoidList.equivlistA_nil_eq	40
Coq.Lists.SetoidList.equivlistA_double_head	40	1.0.0.0	search with cache (only 1: red; only 1: intros; only 1: rewrite !InA_cons; only 1: intuition).	0.0737400054932	5
Coq.Lists.SetoidList.equivlistA_permute_heads	40	1.1.0	search with cache (only 1: intro; only 1: rewrite !InA_cons; only 1: intuition).	0.121932983398	5
Coq.Lists.SetoidList.equivlistA_app_idem	40	0.0.0.0.8	search with cache (only 1: constructor; only 1: rewrite InA_app_iff; only 1: tauto; only 1: rewrite InA_app_iff; only 1: tauto).	0.733289003372	292
Coq.Lists.SetoidList.equivlistA_NoDupA_split	40
Coq.Lists.SetoidList.fold_right_eqlistA	40	9.5.2.0.12.3	search with cache (only 1: intros x; only 1: induction 1; only 1: simpl; only 1: reflexivity; only 1: compute; only 1: firstorder).	5.64445209503	7640
Coq.Lists.SetoidList.ForallOrdPairs_inclA	40
Coq.Lists.SetoidList.fold_right_commutes_restr	40
Coq.Lists.SetoidList.fold_right_equivlistA_restr	40
Coq.Lists.SetoidList.fold_right_add_restr	40
Coq.Lists.SetoidList.fold_right_commutes	40	4.1.0.2.1.1.0.0.3.0.6	search with cache (only 1: induction s1; only 1: simpl; only 1: intros; only 1: reflexivity; only 1: simpl; only 1: intros; only 1: transitivity (f a (f x (fold_right f i (s1 ++ s2)))); only 1: apply Comp; only 1: auto; only 1: apply IHs1; only 1: auto).	4.4023039341	3322
Coq.Lists.SetoidList.fold_right_equivlistA	40
Coq.Lists.SetoidList.fold_right_add	40
Coq.Lists.SetoidList.fold_right_eqlistA2	40
Coq.Lists.SetoidList.fold_right_commutes_restr2	40
Coq.Lists.SetoidList.fold_right_equivlistA_restr2	40
Coq.Lists.SetoidList.fold_right_add_restr2	40
Coq.Lists.SetoidList.fold_right_commutes2	40
Coq.Lists.SetoidList.fold_right_equivlistA2	40
Coq.Lists.SetoidList.fold_right_add2	40
Coq.Lists.SetoidList.InA_dec	40
Coq.Lists.SetoidList.removeA_filter	40	3.4.6.5.19.4.6	search with cache (only 1: induction l; only 1: auto; only 1: simpl; only 1: destruct IHl; only 1: destruct (eqA_dec x a); only 1: auto; only 1: auto).	39.4435391426	38346
Coq.Lists.SetoidList.removeA_InA	40
Coq.Lists.SetoidList.removeA_NoDupA	40
Coq.Lists.SetoidList.removeA_equivlistA	40
Coq.Lists.SetoidList.InfA_ltA	40
Coq.Lists.SetoidList.InfA_compat	40
Coq.Lists.SetoidList.InfA_eqA	40
Coq.Lists.SetoidList.SortA_InfA_InA	40
Coq.Lists.SetoidList.In_InfA	40	11.0.0.0	search with cache (only 1: simple induction l; only 1: intros; only 1: intuition; only 1: intuition).	11.0412199497	2351
Coq.Lists.SetoidList.InA_InfA	40	2.1.0.0.0.0	search with cache (only 1: simple induction l; only 1: intros; only 1: constructor; only 1: intros; only 1: constructor; only 1: eauto).	0.062304019928	11
Coq.Lists.SetoidList.InfA_alt	40
Coq.Lists.SetoidList.InfA_app	40	2.4.2.46	search with cache (only 1: induction 1; only 1: auto; only 1: constructor; only 1: auto).	7.36201190948	13850
Coq.Lists.SetoidList.SortA_app	40
Coq.Lists.SetoidList.SortA_NoDupA	40
Coq.Lists.SetoidList.eqlistA_length	40
Coq.Lists.SetoidList.app_eqlistA_compat	40	0.0.3.3.1.10	search with cache (only 1: induction 1; only 1: simpl in *; only 1: congruence; only 1: constructor; only 1: auto; only 1: auto).	7.04983186722	1056
Coq.Lists.SetoidList.eqlistA_app	40	0.0.3.0.0	search with cache (only 1: induction 1; only 1: simpl; only 1: congruence; only 1: simpl; only 1: auto).	0.086697101593	16
Coq.Lists.SetoidList.eqlistA_rev_app	40
Coq.Lists.SetoidList.rev_eqlistA_compat	40
Coq.Lists.SetoidList.eqlistA_rev	40	3.1.4.1.0.1	search with cache (only 1: induction 1; only 1: auto; only 1: simpl; only 1: apply eqlistA_rev_app; only 1: auto; only 1: auto).	0.790452957153	448
Coq.Lists.SetoidList.SortA_equivlistA_eqlistA	40
Coq.Lists.SetoidList.filter_sort	40
Coq.Lists.SetoidList.filter_InA	40
Coq.Lists.SetoidList.filter_split	40
Coq.Lists.SetoidList.findA_NoDupA	40
Coq.NArith.BinNat.N.eq_dec	40	1.6.4	search with cache (only 1: intros; only 1: decide equality; only 1: decide equality).	0.273741960526	184
Coq.NArith.BinNat.N.discr	40
Coq.NArith.BinNat.N.peano_rect_base	40	1	search with cache (only 1: auto).	0.0123229026794	2
Coq.NArith.BinNat.N.peano_rect_succ	40
Coq.NArith.BinNat.N.peano_rec_base	40	0	search with cache (only 1: reflexivity).	0.013927936554	1
Coq.NArith.BinNat.N.peano_rec_succ	40	0.1.0.1.7	search with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite Pos.peano_rect_succ).	0.198170900345	86
Coq.NArith.BinNat.N.bi_induction	40
Coq.NArith.BinNat.N.recursion_wd	40
Coq.NArith.BinNat.N.recursion_0	40	0	search with cache (only 1: trivial).	0.0139348506927	1
Coq.NArith.BinNat.N.recursion_succ	40
Coq.NArith.BinNat.N.one_succ	40	0	search with cache (only 1: trivial).	0.0128078460693	1
Coq.NArith.BinNat.N.two_succ	40	0	search with cache (only 1: reflexivity).	0.0129888057709	1
Coq.NArith.BinNat.N.pred_0	40	1	search with cache (only 1: reflexivity).	0.0135860443115	2
Coq.NArith.BinNat.N.pos_pred_spec	40	1.0.0.0.0.0.0	search with cache (only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: auto).	0.0354061126709	8
Coq.NArith.BinNat.N.succ_pos_spec	40	0.0.2	search with cache (only 1: destruct n; only 1: reflexivity; only 1: reflexivity).	0.0197229385376	5
Coq.NArith.BinNat.N.pos_pred_succ	40	0.0.0.0.0.0.0.0.0.0.3.1.0.0.1.1	search with cache (only 1: destruct n; only 1: reflexivity; only 1: destruct p; only 1: simpl; only 1: f_equal; only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	6.67137384415	4847
Coq.NArith.BinNat.N.succ_pos_pred	40	0.1.0.0.0.0.0.2.1.0.0.0.1	search with cache (only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: f_equal; only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: reflexivity).	8.49310398102	5194
Coq.NArith.BinNat.N.pred_succ	40	4.0.11	search with cache (only 1: destruct n; only 1: reflexivity; only 1: apply Pos.pred_N_succ).	0.768880844116	656
Coq.NArith.BinNat.N.pred_sub	40	0.1.0.5.0.7	search with cache (only 1: induction n using peano_ind; only 1: reflexivity; only 1: destruct n; only 1: trivial; only 1: simpl; only 1: now destruct p).	0.477548122406	309
Coq.NArith.BinNat.N.succ_0_discr	40	0	search with cache (only 1: now destruct n).	0.025897026062	1
Coq.NArith.BinNat.N.add_0_l	40	0	search with cache (only 1: reflexivity).	0.0123219490051	1
Coq.NArith.BinNat.N.add_succ_l	40
Coq.NArith.BinNat.N.sub_0_r	40	1.1.0	search with cache (only 1: destruct n; only 1: trivial; only 1: auto).	0.0230247974396	5
Coq.NArith.BinNat.N.sub_succ_r	40
Coq.NArith.BinNat.N.mul_0_l	40	0	search with cache (only 1: now destruct n).	0.0152759552002	1
Coq.NArith.BinNat.N.mul_succ_l	40
Coq.NArith.BinNat.N.eqb_eq	40	1.19.2	search with cache (only 1: revert m; only 1: fix odd_spec 1; only 1: easy).	4.07944512367	4486
Coq.NArith.BinNat.N.ltb_lt	40
Coq.NArith.BinNat.N.leb_le	40
Coq.NArith.BinNat.N.compare_eq_iff	40
Coq.NArith.BinNat.N.compare_lt_iff	40	0.1.1.0.2	search with cache (only 1: unfold ltb, lt; only 1: destruct compare; only 1: easy'; only 1: easy'; only 1: easy').	0.54395198822	190
Coq.NArith.BinNat.N.compare_le_iff	40	0.0.0.0.2	search with cache (only 1: unfold leb, le; only 1: destruct compare; only 1: easy'; only 1: easy'; only 1: easy').	0.178168058395	50
Coq.NArith.BinNat.N.compare_antisym	40
Coq.NArith.BinNat.N.min_l	40
Coq.NArith.BinNat.N.min_r	40
Coq.NArith.BinNat.N.max_l	40
Coq.NArith.BinNat.N.max_r	40	0.1.0.0.0.0	search with cache (only 1: unfold max, le; only 1: rewrite compare_antisym; only 1: case compare_spec; only 1: trivial; only 1: now destruct 2; only 1: trivial).	0.0373141765594	7
Coq.NArith.BinNat.N.lt_succ_r	40
Coq.NArith.BinNat.N.double_spec	40	4	search with cache (only 1: reflexivity).	0.207352876663	14
Coq.NArith.BinNat.N.succ_double_spec	40	12.7.4	search with cache (only 1: simpl; only 1: nzsimpl'; only 1: now destruct n).	7.76019096375	2453
Coq.NArith.BinNat.N.double_add	40	0.0.0.0.0.0.0.0.9	search with cache (only 1: destruct n, m; only 1: nzsimpl; only 1: tauto; only 1: unfold succ, add; only 1: reflexivity; only 1: unfold succ, add; only 1: reflexivity; only 1: unfold succ, add; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l).	9.56941199303	2087
Coq.NArith.BinNat.N.succ_double_add	40	0	search with cache (only 1: now destruct n, m).	0.0184988975525	1
Coq.NArith.BinNat.N.double_mul	40	1	search with cache (only 1: now destruct n, m).	0.0195639133453	2
Coq.NArith.BinNat.N.succ_double_mul	40
Coq.NArith.BinNat.N.div2_double	40	0.0.0.54	search with cache (only 1: destruct n; only 1: simpl; only 1: tauto; only 1: trivial).	0.556442975998	1670
Coq.NArith.BinNat.N.div2_succ_double	40	0	search with cache (only 1: now destruct n).	0.0148878097534	1
Coq.NArith.BinNat.N.double_inj	40
Coq.NArith.BinNat.N.succ_double_inj	40	0.3.3.0.3.0.3.20	search with cache (only 1: destruct n, m; only 1: tauto; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence).	4.50541090965	5598
Coq.NArith.BinNat.N.succ_double_lt	40
Coq.NArith.BinNat.N.double_lt_mono	40	2.0.0.0.0.0.0	search with cache (only 1: destruct n as [| n], m as [| m]; only 1: easy; only 1: easy; only 1: easy; only 1: unfold lt in *; only 1: simpl in *; only 1: trivial).	0.0398390293121	9
Coq.NArith.BinNat.N.double_le_mono	40	2.0	search with cache (only 1: intro H; only 1: now destruct n, m).	0.0312578678131	4
Coq.NArith.BinNat.N.succ_double_lt_mono	40	3.0.0.0.0.0.0	search with cache (only 1: destruct n as [| n], m as [| m]; only 1: easy; only 1: easy; only 1: easy; only 1: unfold lt in *; only 1: simpl in *; only 1: trivial).	0.0384330749512	10
Coq.NArith.BinNat.N.succ_double_le_mono	40	0.0.0.0.0	search with cache (only 1: destruct n as [| n], m as [| m]; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.0342080593109	5
Coq.NArith.BinNat.N.compare_0_r	40	2.0.1.0.0.19	search with cache (only 1: induction n; only 1: rewrite compare_lt_iff; only 1: intro n; only 1: now apply lt_irrefl with 0; only 1: simpl; only 1: easy').	27.2730078697	27284
Coq.NArith.BinNat.N.pow_0_r	40	5.0	search with cache (only 1: rewrite one_succ; only 1: now rewrite <- one_succ).	0.0220401287079	7
Coq.NArith.BinNat.N.pow_succ_r	40
Coq.NArith.BinNat.N.pow_neg_r	40	11.10	search with cache (only 1: intro H; only 1: false_hyp H nlt_0_r).	0.203983068466	342
Coq.NArith.BinNat.N.square_spec	40
Coq.NArith.BinNat.N.size_log2	40	3.0.4.5.3.11.5.0.4.1.10	search with cache (only 1: cases ltac:(n); only 1: intro H; only 1: exfalso; only 1: now apply H; only 1: cases ltac:(n); only 1: split; only 1: intros n _; only 1: pose proof (pred_succ n) as EQ'; only 1: destruct n; only 1: trivial; only 1: now destruct p).	32.1821408272	46057
Coq.NArith.BinNat.N.size_gt	40
Coq.NArith.BinNat.N.size_le	40
Coq.NArith.BinNat.N.log2_spec	40
Coq.NArith.BinNat.N.log2_nonpos	40	0.2.2.8.0.0.2.3.1	search with cache (only 1: intro H; only 1: le_elim H; only 1: false_hyp H nlt_0_r; only 1: destruct n as [| [n| n| ]]; only 1: trivial; only 1: apply succ_inj_wd; only 1: now rewrite <- one_succ; only 1: easy'; only 1: trivial).	7.59543514252	12459
Coq.NArith.BinNat.N.even_spec	40
Coq.NArith.BinNat.N.odd_spec	40
Coq.NArith.BinNat.N.pos_div_eucl_spec	40
Coq.NArith.BinNat.N.div_eucl_spec	40
Coq.NArith.BinNat.N.div_mod'	40
Coq.NArith.BinNat.N.div_mod	40	0.0.0	search with cache (only 1: generalize (div_eucl_spec a b); only 1: unfold div, modulo; only 1: now destruct div_eucl).	0.0251979827881	3
Coq.NArith.BinNat.N.pos_div_eucl_remainder	40
Coq.NArith.BinNat.N.mod_lt	40
Coq.NArith.BinNat.N.mod_bound_pos	40
Coq.NArith.BinNat.N.sqrtrem_sqrt	40
Coq.NArith.BinNat.N.sqrtrem_spec	40
Coq.NArith.BinNat.N.sqrt_spec	40
Coq.NArith.BinNat.N.sqrt_neg	40	1.0	search with cache (only 1: intro H; only 1: false_hyp H nlt_0_r).	0.0153260231018	3
Coq.NArith.BinNat.N.ggcd_gcd	40
Coq.NArith.BinNat.N.ggcd_correct_divisors	40
Coq.NArith.BinNat.N.gcd_divide_l	40
Coq.NArith.BinNat.N.gcd_divide_r	40
Coq.NArith.BinNat.N.gcd_greatest	40
Coq.NArith.BinNat.N.gcd_nonneg	40	3	search with cache (only 1: apply le_0_l).	0.395313978195	163
Coq.NArith.BinNat.N.testbit_even_0	40	0.1.1.3.23.0.2.20.2	search with cache (only 1: nzsimpl'; only 1: destruct (PeanoNat.Nat.eq_decidable a 0) as [EQ| NEQ]; only 1: subst; only 1: tauto; only 1: induction a; only 1: trivial; only 1: simpl; only 1: rewrite Pos.add_diag; only 1: easy || now destruct Hb).	13.490238905	21396
Coq.NArith.BinNat.N.testbit_odd_0	40	0	search with cache (only 1: now destruct a).	0.0135080814362	1
Coq.NArith.BinNat.N.testbit_succ_r_div2	40
Coq.NArith.BinNat.N.testbit_odd_succ	40
Coq.NArith.BinNat.N.testbit_even_succ	40	0.0.0.1	search with cache (only 1: intros H; only 1: rewrite testbit_succ_r_div2 by trivial; only 1: f_equal; only 1: now destruct a).	0.0292298793793	5
Coq.NArith.BinNat.N.testbit_neg_r	40	7.1	search with cache (only 1: intros H; only 1: false_hyp H nlt_0_r).	0.0283291339874	10
Coq.NArith.BinNat.N.shiftr_succ_r	40
Coq.NArith.BinNat.N.shiftl_succ_r	40	2.4.1.0.0.25.12.15.1	search with cache (only 1: destruct n; only 1: unfold succ, add; only 1: now destruct a; only 1: induction a; only 1: unfold succ, add; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l; only 1: simpl; only 1: f_equal; only 1: apply Pos.iter_succ).	25.387280941	43180
Coq.NArith.BinNat.N.shiftr_spec	40
Coq.NArith.BinNat.N.shiftl_spec_high	40
Coq.NArith.BinNat.N.shiftl_spec_low	40
Coq.NArith.BinNat.N.div2_spec	40	0.0	search with cache (only 1: simpl; only 1: trivial).	0.0158619880676	2
Coq.NArith.BinNat.N.pos_lxor_spec	40
Coq.NArith.BinNat.N.lxor_spec	40
Coq.NArith.BinNat.N.pos_lor_spec	40
Coq.NArith.BinNat.N.lor_spec	40
Coq.NArith.BinNat.N.pos_land_spec	40
Coq.NArith.BinNat.N.land_spec	40
Coq.NArith.BinNat.N.pos_ldiff_spec	40
Coq.NArith.BinNat.N.ldiff_spec	40
Coq.NArith.BinNat.N.gt_lt_iff	40
Coq.NArith.BinNat.N.gt_lt	40	1.0	search with cache (only 1: unfold lt, gt; only 1: now rewrite compare_antisym, CompOpp_iff).	0.825209140778	170
Coq.NArith.BinNat.N.lt_gt	40	0	search with cache (only 1: apply gt_lt_iff).	0.0116331577301	1
Coq.NArith.BinNat.N.ge_le_iff	40
Coq.NArith.BinNat.N.ge_le	40	1.0	search with cache (only 1: unfold le, ge; only 1: now rewrite compare_antisym, CompOpp_iff).	0.650691986084	99
Coq.NArith.BinNat.N.le_ge	40	0	search with cache (only 1: apply ge_le_iff).	0.0100650787354	1
Coq.NArith.BinNat.N.pos_pred_shiftl_low	40
Coq.NArith.BinNat.N.pos_pred_shiftl_high	40
Coq.NArith.BinNat.N.pred_div2_up	40	3.4.2.1.2.24	search with cache (only 1: induction p as [p IH| p IH| ]; only 1: simpl; only 1: apply Pos.pred_N_succ; only 1: simpl; only 1: now destruct p; only 1: trivial).	17.3657820225	8310
Coq.NArith.Ndec.Peqb_complete	40
Coq.NArith.Ndec.Peqb_Pcompare	40	0.1	search with cache (only 1: rewrite ?Pos.compare_eq_iff; only 1: now apply Pos.eqb_eq).	0.0406398773193	3
Coq.NArith.Ndec.Pcompare_Peqb	40	0	search with cache (only 1: now rewrite Pos.compare_eq_iff, <- Pos.eqb_eq).	0.0329220294952	1
Coq.NArith.Ndec.Neqb_Ncompare	40
Coq.NArith.Ndec.Ncompare_Neqb	40	0	search with cache (only 1: now rewrite N.compare_eq_iff, <- N.eqb_eq).	0.0351121425629	1
Coq.NArith.Ndec.Neqb_complete	40
Coq.NArith.Ndec.Nxor_eq_true	40
Coq.NArith.Ndec.Nxor_eq_false	40
Coq.NArith.Ndec.Nodd_not_double	40
Coq.NArith.Ndec.Nnot_div2_not_double	40
Coq.NArith.Ndec.Neven_not_double_plus_one	40
Coq.NArith.Ndec.Nnot_div2_not_double_plus_one	40
Coq.NArith.Ndec.Nbit0_neq	40
Coq.NArith.Ndec.Ndiv2_eq	40	4.4.1.0	search with cache (only 1: intros H; only 1: eqb2eq; only 1: subst; only 1: trivial).	0.786915063858	346
Coq.NArith.Ndec.Ndiv2_neq	40	0.3.1.0	search with cache (only 1: intros; only 1: eqb2eq; only 1: contradict H; only 1: now subst).	0.0532639026642	8
Coq.NArith.Ndec.Ndiv2_bit_eq	40
Coq.NArith.Ndec.Ndiv2_bit_neq	40	0.3.1.1	search with cache (only 1: eqb2eq; only 1: intros H H'; only 1: contradict H; only 1: now rewrite (N.div2_odd a), (N.div2_odd a'), H, H').	0.329619884491	39
Coq.NArith.Ndec.Nneq_elim	40
Coq.NArith.Ndec.Ndouble_or_double_plus_un	40
Coq.NArith.Ndec.Nleb_alt	40
Coq.NArith.Ndec.Nleb_Nle	40
Coq.NArith.Ndec.Nleb_refl	40	0	search with cache (only 1: now rewrite Nleb_alt, N.leb_le).	0.0242319107056	1
Coq.NArith.Ndec.Nleb_antisym	40	3.1.1	search with cache (only 1: rewrite Nleb_Nle; only 1: rewrite Nleb_Nle; only 1: N.order).	0.0895829200745	8
Coq.NArith.Ndec.Nleb_trans	40	0.0	search with cache (only 1: rewrite !Nleb_Nle; only 1: N.order).	0.054221868515	2
Coq.NArith.Ndec.Nleb_ltb_trans	40	1.0.17	search with cache (only 1: eqb2eq; only 1: rewrite !Nleb_Nle; only 1: N.order).	2.0409719944	979
Coq.NArith.Ndec.Nltb_leb_trans	40	1.0.21	search with cache (only 1: eqb2eq; only 1: rewrite !Nleb_Nle; only 1: N.order).	13.812253952	10154
Coq.NArith.Ndec.Nltb_trans	40
Coq.NArith.Ndec.Nltb_leb_weak	40
Coq.NArith.Ndec.Nleb_double_mono	40
Coq.NArith.Ndec.Nleb_double_plus_one_mono	40
Coq.NArith.Ndec.Nleb_double_mono_conv	40
Coq.NArith.Ndec.Nleb_double_plus_one_mono_conv	40	3.1.0.3.1.0	search with cache (only 1: unfold Nleb; only 1: rewrite !N2Nat.inj_succ_double; only 1: intro; only 1: apply leb_correct; only 1: apply (mult_S_le_reg_l 1); only 1: now apply leb_complete).	1.03951501846	474
Coq.NArith.Ndec.Nltb_double_mono	40
Coq.NArith.Ndec.Nltb_double_plus_one_mono	40
Coq.NArith.Ndec.Nltb_double_mono_conv	40
Coq.NArith.Ndec.Nltb_double_plus_one_mono_conv	40
Coq.NArith.Ndec.Nltb_Ncompare	40
Coq.NArith.Ndec.Ncompare_Gt_Nltb	40	0	search with cache (only 1: now rewrite N.compare_nle_iff, <- Nleb_Nle, not_true_iff_false).	0.0368959903717	1
Coq.NArith.Ndec.Ncompare_Lt_Nltb	40
Coq.NArith.Ndec.Nmin_le_1	40
Coq.NArith.Ndec.Nmin_le_2	40
Coq.NArith.Ndec.Nmin_le_3	40
Coq.NArith.Ndec.Nmin_le_4	40
Coq.NArith.Ndec.Nmin_le_5	40
Coq.NArith.Ndec.Nmin_lt_3	40
Coq.NArith.Ndec.Nmin_lt_4	40	0.0.1	search with cache (only 1: rewrite <- !not_true_iff_false, !Nleb_Nle; only 1: rewrite N.min_le_iff; only 1: auto).	0.0649440288544	4
Coq.NArith.Ndigits.Ptestbit_Pbit	40
Coq.NArith.Ndigits.Ntestbit_Nbit	40
Coq.NArith.Ndigits.Pbit_Ptestbit	40
Coq.NArith.Ndigits.Nbit_Ntestbit	40	0.0.3.3.0	search with cache (only 1: destruct a; only 1: trivial; only 1: simpl; only 1: intros; only 1: now rewrite <- Ptestbit_Pbit, N2Nat.id).	0.12535405159	42
Coq.NArith.Ndigits.Nshiftr_nat_S	40	0	search with cache (only 1: trivial).	0.0094039440155	1
Coq.NArith.Ndigits.Nshiftl_nat_S	40	1	search with cache (only 1: reflexivity).	0.00940799713135	2
Coq.NArith.Ndigits.Nshiftr_nat_equiv	40
Coq.NArith.Ndigits.Nshiftr_equiv_nat	40
Coq.NArith.Ndigits.Nshiftl_nat_equiv	40
Coq.NArith.Ndigits.Nshiftl_equiv_nat	40
Coq.NArith.Ndigits.Nshiftr_nat_spec	40
Coq.NArith.Ndigits.Nshiftl_nat_spec_high	40
Coq.NArith.Ndigits.Nshiftl_nat_spec_low	40
Coq.NArith.Ndigits.Pshiftl_nat_0	40	2	search with cache (only 1: auto with *).	0.00974607467651	3
Coq.NArith.Ndigits.Pshiftl_nat_S	40	0	search with cache (only 1: reflexivity).	0.00902318954468	1
Coq.NArith.Ndigits.Pshiftl_nat_N	40
Coq.NArith.Ndigits.Pshiftl_nat_plus	40
Coq.NArith.Ndigits.Pxor_semantics	40
Coq.NArith.Ndigits.Nxor_semantics	40	0.0.0.0.0.7.0.0.7.4.0	search with cache (only 1: destruct a, a'; only 1: trivial; only 1: rewrite ?BinInt.Z.testbit_0_l, ?xorb_false_l, ?xorb_false_r; only 1: simpl; only 1: trivial; only 1: rewrite ?BinInt.Z.testbit_0_l, ?xorb_false_l, ?xorb_false_r; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite <- Ntestbit_Nbit, <- !Ptestbit_Pbit; only 1: apply N.pos_lxor_spec).	15.40396595	14394
Coq.NArith.Ndigits.Por_semantics	40
Coq.NArith.Ndigits.Nor_semantics	40	0.0.0.2.0.2.1.0.0	search with cache (only 1: destruct a, a'; only 1: trivial; only 1: trivial; only 1: simpl; only 1: rewrite <- !Ptestbit_Pbit; only 1: now rewrite orb_false_r; only 1: simpl; only 1: rewrite <- !Ptestbit_Pbit; only 1: apply N.pos_lor_spec).	1.00772809982	656
Coq.NArith.Ndigits.Pand_semantics	40
Coq.NArith.Ndigits.Nand_semantics	40	0.0.2.0.0.0.5.0.0.0	search with cache (only 1: rewrite <- !Ntestbit_Nbit; only 1: destruct a, a'; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: (specialize (IH p'); destruct Pos.land; trivial; now rewrite <- IH) || now rewrite andb_false_r; only 1: simpl; only 1: apply N.pos_land_spec).	2.46631097794	1296
Coq.NArith.Ndigits.Pdiff_semantics	40
Coq.NArith.Ndigits.Ndiff_semantics	40	6.0	search with cache (only 1: rewrite <- !Ntestbit_Nbit; only 1: now rewrite N.ldiff_spec).	0.0705518722534	39
Coq.NArith.Ndigits.Pbit_faithful_0	40
Coq.NArith.Ndigits.Pbit_faithful	40
Coq.NArith.Ndigits.Nbit_faithful	40
Coq.NArith.Ndigits.Nbit_faithful_iff	40
Coq.NArith.Ndigits.Nbit0_correct	40	0.0.0.1.0.1.5.5.1.2	search with cache (only 1: induction n; only 1: trivial; only 1: simpl; only 1: rewrite <- !Ptestbit_Pbit; only 1: destruct p; only 1: simpl; only 1: easy; only 1: easy; only 1: simpl; only 1: easy).	1.77843117714	2127
Coq.NArith.Ndigits.Ndouble_bit0	40	19.3	search with cache (only 1: intros; only 1: now destruct n).	0.216917991638	430
Coq.NArith.Ndigits.Ndouble_plus_one_bit0	40	0.0.1.0.1.2	search with cache (only 1: destruct n; only 1: split; only 1: destruct p; only 1: easy; only 1: easy; only 1: easy).	0.0263729095459	10
Coq.NArith.Ndigits.Ndiv2_double	40	3.0.3.2.0.1.3.8	search with cache (only 1: intros; only 1: destruct n as [| n]; only 1: trivial; only 1: simpl; only 1: induction n; only 1: easy; only 1: auto; only 1: now try rewrite H).	7.3069229126	5591
Coq.NArith.Ndigits.Ndiv2_double_plus_one	40
Coq.NArith.Ndigits.Ndiv2_correct	40	0.0.0.15.0.1.15	search with cache (only 1: destruct a; only 1: trivial; only 1: simpl; only 1: induction p as [p IH| p IH| ]; only 1: trivial; only 1: trivial; only 1: trivial).	9.12289404869	8959
Coq.NArith.Ndigits.Nxor_bit0	40
Coq.NArith.Ndigits.Nxor_div2	40
Coq.NArith.Ndigits.Nneg_bit0	40
Coq.NArith.Ndigits.Nneg_bit0_1	40
Coq.NArith.Ndigits.Nneg_bit0_2	40	0.0.0.0	search with cache (only 1: intros; only 1: apply Nneg_bit0; only 1: rewrite H; only 1: reflexivity).	0.0992739200592	4
Coq.NArith.Ndigits.Nsame_bit0	40
Coq.NArith.Ndigits.Nbit0_less	40
Coq.NArith.Ndigits.Nbit0_gt	40	0.0.1.0.0.0.0.0.2.0.0.0.0.0.0.3.0	search with cache (only 1: intros; only 1: destruct (N.discr (N.lxor a a')) as [(p, H2)| H1]; only 1: unfold Nless; only 1: rewrite H2; only 1: destruct p; only 1: simpl; only 1: rewrite H, H0; only 1: reflexivity; only 1: assert (H1 : N.odd (N.lxor a a') = false) by (rewrite H2; reflexivity); only 1: rewrite (Nxor_bit0 a a'), H, H0 in H1; only 1: discriminate H1; only 1: simpl; only 1: rewrite H, H0; only 1: reflexivity; only 1: assert (H2 : N.odd (N.lxor a a') = false) by (rewrite H1; reflexivity); only 1: rewrite (Nxor_bit0 a a'), H, H0 in H2; only 1: discriminate H2).	6.81107091904	4405
Coq.NArith.Ndigits.Nless_not_refl	40
Coq.NArith.Ndigits.Nless_def_1	40
Coq.NArith.Ndigits.Nless_def_2	40	1.1.0.0.0.0.0.0.0.0.1	search with cache (only 1: destruct a; only 1: destruct a'; only 1: reflexivity; only 1: trivial; only 1: destruct a'; only 1: trivial; only 1: unfold Nless; only 1: simpl; only 1: destruct (Pos.lxor p p0); only 1: trivial; only 1: trivial).	3.29052400589	1671
Coq.NArith.Ndigits.Nless_def_3	40	0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: destruct a; only 1: destruct a'; only 1: reflexivity; only 1: trivial; only 1: destruct a'; only 1: trivial; only 1: unfold Nless; only 1: simpl; only 1: destruct (Pos.lxor p p0); only 1: reflexivity; only 1: trivial).	0.646531105042	264
Coq.NArith.Ndigits.Nless_def_4	40	0.0.0.0.0.0.0.0.0.2.2.2	search with cache (only 1: destruct a; only 1: destruct a'; only 1: trivial; only 1: trivial; only 1: intros; only 1: destruct a'; only 1: trivial; only 1: unfold Nless; only 1: simpl; only 1: destruct (Pos.lxor p p0); only 1: reflexivity; only 1: trivial).	3.65070509911	2393
Coq.NArith.Ndigits.Nless_z	40
Coq.NArith.Ndigits.N0_less_1	40	0.4.4.0.29.8.2	search with cache (only 1: unfold Nless; only 1: simpl; only 1: intros n IH; only 1: destruct n; only 1: easy'; only 1: exists p; only 1: trivial).	4.211977005	7549
Coq.NArith.Ndigits.N0_less_2	40
Coq.NArith.Ndigits.Nless_trans	40
Coq.NArith.Ndigits.Nless_total	40
Coq.NArith.Ndigits.Bv2N_N2Bv	40
Coq.NArith.Ndigits.Bv2N_Nsize	40
Coq.NArith.Ndigits.Bv2N_Nsize_1	40
Coq.NArith.Ndigits.Bv2N_upper_bound	40
Coq.NArith.Ndigits.ByteV2N_upper_bound	40
Coq.NArith.Ndigits.N2Bv_N2Bv_gen	40
Coq.NArith.Ndigits.N2Bv_N2Bv_gen_above	40
Coq.NArith.Ndigits.N2Bv_Bv2N	40
Coq.NArith.Ndigits.Nbit0_Blow	40
Coq.NArith.Ndigits.Bnth_Nbit	40
Coq.NArith.Ndigits.Nbit_Nsize	40
Coq.NArith.Ndigits.Nbit_Bth	40
Coq.NArith.Ndigits.Nxor_BVxor	40
Coq.NArith.Ndigits.Nand_BVand	40
Coq.NArith.Ndigits.N2Bv_sized_Nsize	40
Coq.NArith.Ndigits.N2Bv_sized_Bv2N	40
Coq.NArith.Ndigits.N2Bv_N2Bv_sized_above	40	1.0.2.1.0.2.1.0.4.4.172	search with cache (only 1: destruct a; only 1: trivial; only 1: induction p; only 1: simpl; only 1: f_equal; only 1: auto; only 1: simpl; only 1: f_equal; only 1: auto; only 1: simpl; only 1: f_equal).	23.3323140144	39924
Coq.Strings.Ascii.ascii_dec	40	7.0.0.1.2.3.3.2.0.6.4	search with cache (only 1: intros; only 1: decide equality; only 1: decide equality; only 1: decide equality; only 1: decide equality; only 1: decide equality; only 1: decide equality; only 1: subst; only 1: decide equality; only 1: decide equality; only 1: decide equality).	36.6808071136	6995
Coq.Strings.Ascii.eqb_spec	40
Coq.Strings.Ascii.eqb_refl	40	4.0.9.87.2	search with cache (only 1: apply Pos.eqb_eq; only 1: red; only 1: destruct x; only 1: simpl; only 1: destr_bool).	17.6953039169	62374
Coq.Strings.Ascii.eqb_sym	40	0	search with cache (only 1: t_eqb).	0.0220429897308	1
Coq.Strings.Ascii.eqb_eq	40	0	search with cache (only 1: t_eqb).	0.0235240459442	1
Coq.Strings.Ascii.eqb_neq	40	0	search with cache (only 1: t_eqb).	0.0213620662689	1
Coq.Strings.Ascii.eqb_compat	40	0	search with cache (only 1: t_eqb).	0.0151600837708	1
Coq.Strings.Ascii.ascii_N_embedding	40
Coq.Strings.Ascii.N_ascii_embedding	40
Coq.Strings.Ascii.N_ascii_bounded	40
Coq.Strings.Ascii.ascii_nat_embedding	40
Coq.Strings.Ascii.nat_ascii_embedding	40
Coq.Strings.Ascii.nat_ascii_bounded	40
Coq.Strings.Ascii.ascii_of_byte_of_ascii	40	12.5.5	search with cache (only 1: apply Pos.eqb_eq; only 1: destruct x; only 1: destr_bool).	25.4287259579	1324
Coq.Strings.Ascii.byte_of_ascii_of_byte	40
Coq.Strings.Ascii.ascii_of_byte_via_N	40
Coq.Strings.Ascii.ascii_of_byte_via_nat	40
Coq.Strings.Ascii.byte_of_ascii_via_N	40
Coq.Strings.Ascii.byte_of_ascii_via_nat	40	0.3.5	search with cache (only 1: destruct x; only 1: simpl; only 1: repeat match goal with | |- context [ match ?x with | _ => _ end ] => is_var x; destruct x | _ => intro | _ => reflexivity | _ => progress subst | H:Some ?a = Some ?b |- _ => assert (a = b) by refine match H with | eq_refl => eq_refl end; clear H | H:None = Some _ |- _ => solve [ inversion H ] end).	1.73296904564	352
Coq.Strings.String.string_dec	40	0.0.0.0.0.0.0.0.2.15.8	search with cache (only 1: intros; only 1: decide equality; only 1: decide equality; only 1: apply bool_dec; only 1: apply bool_dec; only 1: apply bool_dec; only 1: apply bool_dec; only 1: apply bool_dec; only 1: apply bool_dec; only 1: apply bool_dec; only 1: decide equality).	3.13097786903	2201
Coq.Strings.String.eqb_spec	40
Coq.Strings.String.eqb_refl	40
Coq.Strings.String.eqb_sym	40	0	search with cache (only 1: t_eqb).	0.0194139480591	1
Coq.Strings.String.eqb_eq	40
Coq.Strings.String.eqb_neq	40	0	search with cache (only 1: t_eqb).	0.0175950527191	1
Coq.Strings.String.eqb_compat	40	0.0	search with cache (only 1: intros x x' Exx' y y' Eyy'; only 1: t_eqb).	0.0151510238647	2
Coq.Strings.String.get_correct	40
Coq.Strings.String.append_correct1	40
Coq.Strings.String.append_correct2	40
Coq.Strings.String.substring_correct1	40
Coq.Strings.String.substring_correct2	40
Coq.Strings.String.prefix_correct	40
Coq.Strings.String.index_correct1	40
Coq.Strings.String.index_correct2	40
Coq.Strings.String.index_correct3	40
Coq.Strings.String.index_correct4	40
Coq.Strings.String.string_of_list_ascii_of_string	40	2.0.5.3.1.1.1	search with cache (only 1: elim s; only 1: constructor; only 1: intros b s2'; only 1: simpl; only 1: intros e; only 1: rewrite e; only 1: auto).	1.54574298859	1400
Coq.Strings.String.list_ascii_of_string_of_list_ascii	40
Coq.Strings.String.string_of_list_byte_of_string	40
Coq.Strings.String.list_byte_of_string_of_list_byte	40
Coq.Strings.Byte.byte_dec_lb	40
Coq.Strings.Byte.byte_dec_bl	40
Coq.Strings.Byte.eqb_false	40
Coq.Strings.Byte.of_to_nat	40
Coq.Strings.Byte.to_of_nat	40
Coq.Strings.Byte.to_of_nat_iff	40
Coq.Strings.Byte.to_of_nat_option_map	40
Coq.Strings.Byte.to_nat_bounded	40
Coq.Strings.Byte.of_nat_None_iff	40
Coq.Strings.Byte.of_to_N	40
Coq.Strings.Byte.to_of_N	40
Coq.Strings.Byte.to_of_N_iff	40
Coq.Strings.Byte.to_of_N_option_map	40	0.1.0.30	search with cache (only 1: destruct x; only 1: reflexivity; only 1: cbv[of_N]; only 1: repeat match goal with | |- context [ match ?x with | _ => _ end ] => is_var x; destruct x | _ => intro | _ => reflexivity | _ => progress subst | H:Some ?a = Some ?b |- _ => assert (a = b) by refine match H with | eq_refl => eq_refl end; clear H | H:None = Some _ |- _ => solve [ inversion H ] end).	0.882685184479	685
Coq.Strings.Byte.to_N_bounded	40
Coq.Strings.Byte.of_N_None_iff	40
Coq.Strings.Byte.to_N_via_nat	40
Coq.Strings.Byte.to_nat_via_N	40
Coq.Strings.Byte.of_N_via_nat	40
Coq.Strings.Byte.of_nat_via_N	40
Coq.Strings.OctalString.Raw.to_N_of_pos	40	8	search with cache (only 1: trivial).	0.383512020111	99
Coq.Strings.OctalString.to_N_of_N	40
Coq.Strings.OctalString.to_Z_of_Z	40
Coq.Strings.OctalString.to_nat_of_nat	40
Coq.Strings.OctalString.to_pos_of_pos	40
Coq.Reals.Ratan.Ropp_div	40	0.0.0	search with cache (only 1: intros x y; only 1: unfold Rdiv; only 1: ring).	0.097216129303	3
Coq.Reals.Ratan.pos_half_prf	40	1	search with cache (only 1: now apply Rinv_0_lt_compat, Rlt_0_2).	0.0407500267029	2
Coq.Reals.Ratan.Boule_half_to_interval	40
Coq.Reals.Ratan.Boule_lt	40
Coq.Reals.Ratan.Un_cv_ext	40
Coq.Reals.Ratan.Alt_first_term_bound	40
Coq.Reals.Ratan.Alt_CVU	40
Coq.Reals.Ratan.pow2_ge_0	40
Coq.Reals.Ratan.pow2_abs	40
Coq.Reals.Ratan.derivable_pt_tan	40
Coq.Reals.Ratan.derive_pt_tan	40
Coq.Reals.Ratan.derive_increasing_interv	40
Coq.Reals.Ratan.plus_Rsqr_gt_0	40
Coq.Reals.Ratan.PI2_lower_bound	40
Coq.Reals.Ratan.PI2_3_2	40
Coq.Reals.Ratan.PI2_1	40
Coq.Reals.Ratan.tan_increasing	40
Coq.Reals.Ratan.tan_is_inj	40
Coq.Reals.Ratan.exists_atan_in_frame	40
Coq.Reals.Ratan.tan_1_gt_1	40
Coq.Reals.Ratan.frame_tan	40
Coq.Reals.Ratan.ub_opp	40	8.7	search with cache (only 1: intros x xint; only 1: lra).	1.97524094582	529
Coq.Reals.Ratan.pos_opp_lt	40
Coq.Reals.Ratan.tech_opp_tan	40
Coq.Reals.Ratan.pre_atan	40
Coq.Reals.Ratan.atan_bound	40
Coq.Reals.Ratan.atan_right_inv	40
Coq.Reals.Ratan.atan_opp	40
Coq.Reals.Ratan.derivable_pt_atan	40
Coq.Reals.Ratan.atan_increasing	40
Coq.Reals.Ratan.atan_0	40
Coq.Reals.Ratan.atan_1	40
Coq.Reals.Ratan.derive_pt_atan	40
Coq.Reals.Ratan.derivable_pt_lim_atan	40
Coq.Reals.Ratan.Ratan_seq_decreasing	40
Coq.Reals.Ratan.Ratan_seq_converging	40
Coq.Reals.Ratan.ps_atan_exists_01	40
Coq.Reals.Ratan.Ratan_seq_opp	40
Coq.Reals.Ratan.sum_Ratan_seq_opp	40
Coq.Reals.Ratan.ps_atan_exists_1	40
Coq.Reals.Ratan.in_int	40
Coq.Reals.Ratan.ps_atan0_0	40
Coq.Reals.Ratan.ps_atan_exists_1_opp	40
Coq.Reals.Ratan.ps_atan_opp	40
Coq.Reals.Ratan.ps_atanSeq_continuity_pt_1	40
Coq.Reals.Ratan.pow_lt_1_compat	40
Coq.Reals.Ratan.Datan_seq_Rabs	40
Coq.Reals.Ratan.Datan_seq_pos	40
Coq.Reals.Ratan.Datan_sum_eq	40
Coq.Reals.Ratan.Datan_seq_increasing	40
Coq.Reals.Ratan.Datan_seq_decreasing	40
Coq.Reals.Ratan.Datan_seq_CV_0	40
Coq.Reals.Ratan.Datan_lim	40
Coq.Reals.Ratan.Datan_CVU_prelim	40
Coq.Reals.Ratan.Datan_is_datan	40
Coq.Reals.Ratan.Ratan_CVU'	40
Coq.Reals.Ratan.Ratan_CVU	40
Coq.Reals.Ratan.Alt_PI_tg	40
Coq.Reals.Ratan.Ratan_is_ps_atan	40
Coq.Reals.Ratan.Datan_continuity	40
Coq.Reals.Ratan.derivable_pt_lim_ps_atan	40
Coq.Reals.Ratan.derivable_pt_ps_atan	40
Coq.Reals.Ratan.ps_atan_continuity_pt_1	40
Coq.Reals.Ratan.Datan_eq_DatanSeq_interv	40
Coq.Reals.Ratan.atan_eq_ps_atan	40
Coq.Reals.Ratan.Alt_PI_eq	40
Coq.Reals.Ratan.PI_ineq	40
Coq.Reals.Sqrt_reg.sqrt_var_maj	40
Coq.Reals.Sqrt_reg.sqrt_continuity_pt_R1	40
Coq.Reals.Sqrt_reg.sqrt_continuity_pt	40
Coq.Reals.Sqrt_reg.derivable_pt_lim_sqrt	40
Coq.Reals.Sqrt_reg.derivable_pt_sqrt	40
Coq.Reals.Sqrt_reg.derive_pt_sqrt	40
Coq.Reals.Sqrt_reg.continuity_pt_sqrt	40
Coq.Reals.Runcountable.in_holed_interval_dec	40
Coq.Reals.Runcountable.middle_in_interval	40
Coq.Reals.Runcountable.point_in_holed_interval_works	40
Coq.Reals.Runcountable.first_in_holed_interval	40
Coq.Reals.Runcountable.first_in_holed_interval_works	40
Coq.Reals.Runcountable.split_couple_eq	40	0.3.2	search with cache (only 1: intros; only 1: injection H; only 1: auto).	0.565947055817	102
Coq.Reals.Runcountable.first_two_in_interval_works	40
Coq.Reals.Runcountable.tearing_sequences	40	5.159	search with cache (only 1: fix le_div2 1; only 1: assumption).	35.1840860844	169993
Coq.Reals.Runcountable.tearing_sequences_projsig	40
Coq.Reals.Runcountable.tearing_sequences_inc_dec	40
Coq.Reals.Runcountable.split_lt_succ	40	3.0.5.6.6	search with cache (only 1: intros n m; only 1: intuition; only 1: apply Nat.lt_eq_cases; only 1: apply Peano.le_S_n; only 1: Nat.order).	25.8276998997	14243
Coq.Reals.Runcountable.increase_seq_transit	40	3.42.1	search with cache (only 1: intro n; only 1: fix le_div2 1; only 1: trivial).	25.9472439289	46178
Coq.Reals.Runcountable.decrease_seq_transit	40
Coq.Reals.Runcountable.tearing_sequences_ordered_forall	40
Coq.Reals.Runcountable.torn_number	40
Coq.Reals.Runcountable.torn_number_above_first_sequence	40
Coq.Reals.Runcountable.torn_number_below_second_sequence	40
Coq.Reals.Runcountable.limit_index_above_all_indices	40
Coq.Reals.Runcountable.first_indices_increasing	40
Coq.Reals.Runcountable.R_uncountable	40
Coq.Reals.Exp_prop.E1_cvg	40
Coq.Reals.Exp_prop.exp_form	40
Coq.Reals.Exp_prop.div2_double	40	4	search with cache (only 1: apply Nat.div2_double).	0.040568113327	5
Coq.Reals.Exp_prop.div2_S_double	40	3	search with cache (only 1: apply Nat.div2_succ_double).	0.0372560024261	4
Coq.Reals.Exp_prop.div2_not_R0	40	2.0.1.1.6.0.0.40	search with cache (only 1: intro n; only 1: destruct n; only 1: inversion 1; only 1: induction n; only 1: inversion 1; only 1: Nat.order; only 1: intros _; only 1: apply Nat.lt_0_succ).	5.69395589828	6860
Coq.Reals.Exp_prop.Reste_E_maj	40
Coq.Reals.Exp_prop.maj_Reste_cv_R0	40
Coq.Reals.Exp_prop.Reste_E_cv	40
Coq.Reals.Exp_prop.exp_plus	40
Coq.Reals.Exp_prop.exp_pos_pos	40
Coq.Reals.Exp_prop.exp_pos	40
Coq.Reals.Exp_prop.derivable_pt_lim_exp_0	40
Coq.Reals.Exp_prop.derivable_pt_lim_exp	40
Coq.Reals.Rpower.P_Rmin	40	1.1.1.1.2	search with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: auto with sets; only 1: auto with sets).	1.11324620247	178
Coq.Reals.Rpower.exp_le_3	40
Coq.Reals.Rpower.exp_increasing	40
Coq.Reals.Rpower.exp_lt_inv	40
Coq.Reals.Rpower.exp_ineq1	40
Coq.Reals.Rpower.ln_exists1	40
Coq.Reals.Rpower.ln_exists	40
Coq.Reals.Rpower.exp_ln	40
Coq.Reals.Rpower.exp_inv	40
Coq.Reals.Rpower.exp_Ropp	40
Coq.Reals.Rpower.ln_increasing	40
Coq.Reals.Rpower.ln_exp	40
Coq.Reals.Rpower.ln_1	40
Coq.Reals.Rpower.ln_lt_inv	40
Coq.Reals.Rpower.ln_inv	40
Coq.Reals.Rpower.ln_mult	40
Coq.Reals.Rpower.ln_Rinv	40
Coq.Reals.Rpower.ln_continue	40
Coq.Reals.Rpower.Rpower_plus	40
Coq.Reals.Rpower.Rpower_mult	40
Coq.Reals.Rpower.Rpower_O	40
Coq.Reals.Rpower.Rpower_1	40	1.0.0.0.0.5.7.0.2	search with cache (only 1: intros; only 1: unfold Rpower; only 1: unfold ln; only 1: rewrite Rmult_1_l; only 1: decide Rlt_dec 0 x with H; only 1: unfold Rln; only 1: destruct (ln_exists {| pos := x; cond_pos := H |} (cond_pos {| pos := x; cond_pos := H |})) as (?, Hex); only 1: symmetry; only 1: apply Hex).	30.7709319592	5182
Coq.Reals.Rpower.Rpower_pow	40
Coq.Reals.Rpower.Rpower_lt	40
Coq.Reals.Rpower.Rpower_sqrt	40
Coq.Reals.Rpower.Rpower_Ropp	40
Coq.Reals.Rpower.powerRZ_Rpower	40
Coq.Reals.Rpower.Rle_Rpower	40
Coq.Reals.Rpower.ln_lt_2	40
Coq.Reals.Rpower.limit1_ext	40
Coq.Reals.Rpower.limit1_imp	40
Coq.Reals.Rpower.Rinv_Rdiv	40
Coq.Reals.Rpower.Dln	40
Coq.Reals.Rpower.derivable_pt_lim_ln	40
Coq.Reals.Rpower.D_in_imp	40
Coq.Reals.Rpower.D_in_ext	40	3.4.0.5.0	search with cache (only 1: intros; only 1: intro b; only 1: simpl; only 1: elim H; only 1: auto).	37.3055779934	5218
Coq.Reals.Rpower.Dpower	40
Coq.Reals.Rpower.derivable_pt_lim_power	40
Coq.Reals.Rpower.Rpower_mult_distr	40
Coq.Reals.Rpower.Rlt_Rpower_l	40
Coq.Reals.Rpower.Rle_Rpower_l	40
Coq.Reals.Rpower.arcsinh_sinh	40
Coq.Reals.Rpower.sinh_arcsinh	40
Coq.Reals.Rpower.derivable_pt_lim_arcsinh	40
Coq.Reals.Rpower.arcsinh_lt	40
Coq.Reals.Rpower.arcsinh_le	40
Coq.Reals.Rpower.arcsinh_0	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_increasing_inv	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_unique	40
Coq.Reals.ConstructiveRealsMorphisms.Endomorph_id	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_proper	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_compose	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_le	40	2.10.20.0	search with cache (only 1: intros; only 1: intro abs; only 1: apply CRmorph_increasing_inv in abs; only 1: contradiction).	1.19579410553	3369
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_le_inv	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_zero	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_one	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_opp	40
Coq.Reals.ConstructiveRealsMorphisms.CRplus_pos_rat_lt	40
Coq.Reals.ConstructiveRealsMorphisms.CRplus_neg_rat_lt	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_plus_rat	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_plus	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_pos	40
Coq.Reals.ConstructiveRealsMorphisms.NatOfZ	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_int	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_inv	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_rat	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_pos_pos_le	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_pos_pos	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_appart	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_appart_zero	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_inv	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_rat	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_increasing_Ql	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_increasing_Qr	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_increasing	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorphism	40
Coq.Reals.ConstructiveRealsMorphisms.RightBound	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inv	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inv_rat	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inv_increasing_Qr	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inv_increasing	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorphismInv	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_surject	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inject	40
Coq.Reals.Ranalysis2.formule	40
Coq.Reals.Ranalysis2.maj_term1	40
Coq.Reals.Ranalysis2.maj_term2	40
Coq.Reals.Ranalysis2.maj_term3	40
Coq.Reals.Ranalysis2.maj_term4	40
Coq.Reals.Ranalysis2.D_x_no_cond	40
Coq.Reals.Ranalysis2.Rabs_4	40
Coq.Reals.Ranalysis2.Rlt_4	40
Coq.Reals.Ranalysis2.quadruple	40	0.0	search with cache (only 1: intros; only 1: ring_Rsqr).	0.0461819171906	2
Coq.Reals.Ranalysis2.quadruple_var	40	1.0	search with cache (only 1: intros; only 1: field).	0.0541532039642	3
Coq.Reals.Ranalysis2.continuous_neq_0	40
Coq.Reals.Rtopology.interior_P1	40
Coq.Reals.Rtopology.interior_P2	40	2.0.0	search with cache (only 1: intros; only 1: unfold included; only 1: trivial).	0.0254020690918	18
Coq.Reals.Rtopology.adherence_P1	40
Coq.Reals.Rtopology.included_trans	40	0.0.2.2.0.1	search with cache (only 1: intro; only 1: unfold included; only 1: intros r1 r2 P H1 H2; only 1: edestruct Rlt_le_dec; only 1: eauto with rorders; only 1: eauto with rorders).	0.108000993729	85
Coq.Reals.Rtopology.interior_P3	40
Coq.Reals.Rtopology.complementary_P1	40	2.19	search with cache (only 1: intro n; only 1: firstorder).	0.263290166855	527
Coq.Reals.Rtopology.adherence_P2	40
Coq.Reals.Rtopology.adherence_P3	40
Coq.Reals.Rtopology.open_set_P1	40
Coq.Reals.Rtopology.closed_set_P1	40
Coq.Reals.Rtopology.neighbourhood_P1	40	6.17.0.1	search with cache (only 1: intro; only 1: unfold included; only 1: intros f Hf H0; only 1: firstorder  (subst; auto)).	9.58981204033	12601
Coq.Reals.Rtopology.open_set_P2	40
Coq.Reals.Rtopology.open_set_P3	40
Coq.Reals.Rtopology.open_set_P4	40	15	search with cache (only 1: easy).	0.096216917038	161
Coq.Reals.Rtopology.open_set_P5	40
Coq.Reals.Rtopology.disc_P1	40
Coq.Reals.Rtopology.continuity_P1	40
Coq.Reals.Rtopology.continuity_P2	40
Coq.Reals.Rtopology.continuity_P3	40
Coq.Reals.Rtopology.Rsepare	40
Coq.Reals.Rtopology.restriction_family	40
Coq.Reals.Rtopology.family_P1	40
Coq.Reals.Rtopology.open_set_P6	40
Coq.Reals.Rtopology.compact_P1	40
Coq.Reals.Rtopology.compact_P2	40
Coq.Reals.Rtopology.compact_EMP	40
Coq.Reals.Rtopology.compact_eqDom	40
Coq.Reals.Rtopology.compact_P3	40
Coq.Reals.Rtopology.compact_P4	40
Coq.Reals.Rtopology.compact_P5	40
Coq.Reals.Rtopology.compact_carac	40
Coq.Reals.Rtopology.continuity_compact	40
Coq.Reals.Rtopology.prolongement_C0	40
Coq.Reals.Rtopology.continuity_ab_maj	40
Coq.Reals.Rtopology.continuity_ab_min	40
Coq.Reals.Rtopology.ValAdh_un_exists	40
Coq.Reals.Rtopology.ValAdh_un_prop	40
Coq.Reals.Rtopology.adherence_P4	40
Coq.Reals.Rtopology.compact_P6	40
Coq.Reals.Rtopology.Bolzano_Weierstrass	40
Coq.Reals.Rtopology.is_lub_u	40
Coq.Reals.Rtopology.domain_P1	40
Coq.Reals.Rtopology.Heine	40
Coq.Reals.Raxioms.Rrepr_0	40
Coq.Reals.Raxioms.Rrepr_1	40
Coq.Reals.Raxioms.Rrepr_plus	40
Coq.Reals.Raxioms.Rrepr_opp	40
Coq.Reals.Raxioms.Rrepr_minus	40
Coq.Reals.Raxioms.Rrepr_mult	40
Coq.Reals.Raxioms.Rrepr_inv	40
Coq.Reals.Raxioms.Rrepr_le	40
Coq.Reals.Raxioms.Rrepr_appart	40
Coq.Reals.Raxioms.Rappart_repr	40
Coq.Reals.Raxioms.Rplus_comm	40
Coq.Reals.Raxioms.Rplus_assoc	40	17.1.2.0.0.0	search with cache (only 1: intros; only 1: apply Rquot1; only 1: do 2 rewrite Rrepr_plus; only 1: rewrite Rplus_def, Rquot2; only 1: rewrite Rplus_def, Rquot2; only 1: ring).	25.6029129028	4524
Coq.Reals.Raxioms.Rplus_opp_r	40
Coq.Reals.Raxioms.Rplus_0_l	40
Coq.Reals.Raxioms.Rmult_comm	40
Coq.Reals.Raxioms.Rmult_assoc	40
Coq.Reals.Raxioms.Rinv_l	40
Coq.Reals.Raxioms.Rmult_1_l	40
Coq.Reals.Raxioms.R1_neq_R0	40
Coq.Reals.Raxioms.Rmult_plus_distr_l	40
Coq.Reals.Raxioms.Rlt_asym	40
Coq.Reals.Raxioms.Rlt_trans	40
Coq.Reals.Raxioms.Rplus_lt_compat_l	40
Coq.Reals.Raxioms.Rmult_lt_compat_l	40
Coq.Reals.Raxioms.Rrepr_INR	40
Coq.Reals.Raxioms.Rrepr_IPR2	40
Coq.Reals.Raxioms.Rrepr_IPR	40
Coq.Reals.Raxioms.Rrepr_IZR	40
Coq.Reals.Raxioms.archimed	40
Coq.Reals.Raxioms.completeness	40
Coq.Reals.Binomial.pascal_step1	40
Coq.Reals.Binomial.pascal_step2	40
Coq.Reals.Binomial.pascal_step3	40
Coq.Reals.Binomial.pascal	40
Coq.Reals.Binomial.binomial	40
Coq.Reals.Ranalysis_reg.AppVar	40	0.5.29	search with cache (only 1: assert (int78 : -2 <= 7 / 8 <= 2) by (split; Lra.lra); only 1: case PI_2_aux; only 1: tauto).	1.37023711205	716
Coq.Reals.Ranalysis1.continuity_pt_locally_ext	40
Coq.Reals.Ranalysis1.continuity_pt_plus	40
Coq.Reals.Ranalysis1.continuity_pt_opp	40
Coq.Reals.Ranalysis1.continuity_pt_minus	40	0.2.0.0.4.0.0.0	search with cache (only 1: unfold continuity_pt, plus_fct; only 1: unfold continue_in; only 1: intros; only 1: unfold limit1_in in H0; only 1: apply limit_plus; only 1: assumption; only 1: apply limit_Ropp; only 1: assumption).	2.84929299355	1125
Coq.Reals.Ranalysis1.continuity_pt_mult	40
Coq.Reals.Ranalysis1.continuity_pt_const	40
Coq.Reals.Ranalysis1.continuity_pt_scal	40
Coq.Reals.Ranalysis1.continuity_pt_inv	40
Coq.Reals.Ranalysis1.div_eq_inv	40	0	search with cache (only 1: tauto).	0.0625779628754	1
Coq.Reals.Ranalysis1.continuity_pt_div	40
Coq.Reals.Ranalysis1.continuity_pt_comp	40
Coq.Reals.Ranalysis1.continuity_plus	40
Coq.Reals.Ranalysis1.continuity_opp	40
Coq.Reals.Ranalysis1.continuity_minus	40	7.4.0.0.0.0.0	search with cache (only 1: unfold continuity; only 1: unfold continuity_pt, minus_fct; only 1: unfold continue_in; only 1: intros; only 1: apply limit_minus; only 1: apply H; only 1: apply H0).	23.7087490559	9880
Coq.Reals.Ranalysis1.continuity_mult	40
Coq.Reals.Ranalysis1.continuity_const	40
Coq.Reals.Ranalysis1.continuity_scal	40
Coq.Reals.Ranalysis1.continuity_inv	40
Coq.Reals.Ranalysis1.continuity_div	40
Coq.Reals.Ranalysis1.continuity_comp	40
Coq.Reals.Ranalysis1.uniqueness_step1	40
Coq.Reals.Ranalysis1.uniqueness_step2	40
Coq.Reals.Ranalysis1.uniqueness_step3	40
Coq.Reals.Ranalysis1.uniqueness_limite	40
Coq.Reals.Ranalysis1.derive_pt_eq	40
Coq.Reals.Ranalysis1.derive_pt_eq_0	40	3.1.0.0.1.0.3.0	search with cache (only 1: intros; only 1: pose proof (proj2_sig pr) as H1; only 1: unfold derivable_pt_abs in H1; only 1: pose proof (uniqueness_limite _ _ _ _ H H1) as H2; only 1: unfold derive_pt; only 1: unfold derivable_pt_abs; only 1: symmetry; only 1: assumption).	5.18881988525	814
Coq.Reals.Ranalysis1.derive_pt_eq_1	40	0.0.1.5.0	search with cache (only 1: intros; only 1: pose proof (proj2_sig pr) as H1; only 1: unfold derive_pt in H; only 1: rewrite H in H1; only 1: assumption).	0.224229812622	56
Coq.Reals.Ranalysis1.derive_pt_D_in	40
Coq.Reals.Ranalysis1.derivable_pt_lim_D_in	40
Coq.Reals.Ranalysis1.derivable_pt_lim_ext	40
Coq.Reals.Ranalysis1.derivable_pt_lim_locally_ext	40
Coq.Reals.Ranalysis1.derivable_derive	40	37.3	search with cache (only 1: intro; only 1: intuition eauto  3).	11.1473948956	18556
Coq.Reals.Ranalysis1.derivable_continuous_pt	40
Coq.Reals.Ranalysis1.derivable_continuous	40
Coq.Reals.Ranalysis1.derivable_pt_lim_plus	40
Coq.Reals.Ranalysis1.derivable_pt_lim_opp	40
Coq.Reals.Ranalysis1.derivable_pt_lim_minus	40
Coq.Reals.Ranalysis1.derivable_pt_lim_mult	40
Coq.Reals.Ranalysis1.derivable_pt_lim_const	40
Coq.Reals.Ranalysis1.derivable_pt_lim_scal	40
Coq.Reals.Ranalysis1.derivable_pt_lim_div_scal	40
Coq.Reals.Ranalysis1.derivable_pt_lim_scal_right	40
Coq.Reals.Ranalysis1.derivable_pt_lim_id	40
Coq.Reals.Ranalysis1.derivable_pt_lim_Rsqr	40
Coq.Reals.Ranalysis1.derivable_pt_lim_comp	40
Coq.Reals.Ranalysis1.derivable_pt_plus	40
Coq.Reals.Ranalysis1.derivable_pt_opp	40
Coq.Reals.Ranalysis1.derivable_pt_minus	40
Coq.Reals.Ranalysis1.derivable_pt_mult	40
Coq.Reals.Ranalysis1.derivable_pt_const	40
Coq.Reals.Ranalysis1.derivable_pt_scal	40
Coq.Reals.Ranalysis1.derivable_pt_id	40
Coq.Reals.Ranalysis1.derivable_pt_Rsqr	40
Coq.Reals.Ranalysis1.derivable_pt_comp	40
Coq.Reals.Ranalysis1.derivable_plus	40
Coq.Reals.Ranalysis1.derivable_opp	40
Coq.Reals.Ranalysis1.derivable_minus	40
Coq.Reals.Ranalysis1.derivable_mult	40
Coq.Reals.Ranalysis1.derivable_const	40	0.0.0.10.1	search with cache (only 1: intuition eauto  2; only 1: intros z; only 1: unfold derivable_pt; only 1: exists 0; only 1: apply derivable_pt_lim_const).	0.134756088257	192
Coq.Reals.Ranalysis1.derivable_scal	40
Coq.Reals.Ranalysis1.derivable_id	40	0.0.0.4	search with cache (only 1: intros EQ; only 1: unfold derivable_pt; only 1: exists 1; only 1: apply derivable_pt_lim_id).	0.0311150550842	8
Coq.Reals.Ranalysis1.derivable_Rsqr	40
Coq.Reals.Ranalysis1.derivable_comp	40
Coq.Reals.Ranalysis1.derive_pt_plus	40
Coq.Reals.Ranalysis1.derive_pt_opp	40
Coq.Reals.Ranalysis1.derive_pt_minus	40
Coq.Reals.Ranalysis1.derive_pt_mult	40	1.0.7.2.0.1.1.0.0	search with cache (only 1: intros; only 1: apply derive_pt_eq_0; only 1: pose proof (derivable_derive f1 x pr1) as H; only 1: pose proof (proj2_sig pr1) as H3; only 1: unfold derive_pt in H; only 1: pose proof (proj2_sig pr2) as H4; only 1: apply derivable_pt_lim_mult; only 1: assumption; only 1: assumption).	13.3144390583	7556
Coq.Reals.Ranalysis1.derive_pt_const	40	5.0.0.0.0.0.0.0.3.0.3.12	search with cache (only 1: intros l2 H0; only 1: apply derive_pt_eq_0; only 1: unfold fct_cte, derivable_pt_lim; only 1: exists {| pos := 1; cond_pos := Rlt_0_1 |}; only 1: intros; only 1: unfold Rminus; only 1: rewrite Rplus_opp_r; only 1: unfold Rdiv; only 1: rewrite Rmult_0_l; only 1: rewrite Rplus_opp_r; only 1: rewrite Rabs_R0; only 1: assumption).	9.25511598587	4401
Coq.Reals.Ranalysis1.derive_pt_scal	40	4.7.0.7.2.0	search with cache (only 1: intros; only 1: apply derive_pt_eq_0; only 1: pose proof (proj2_sig pr) as H1; only 1: unfold derivable_pt_abs in H1; only 1: apply derivable_pt_lim_scal; only 1: assumption).	7.89452600479	6001
Coq.Reals.Ranalysis1.derive_pt_id	40	1.2.5.13.2.3.31	search with cache (only 1: rewrite <- (Rinv_involutive 1); only 1: rewrite Rinv_1; only 1: intros; only 1: apply derive_pt_eq_0; only 1: rewrite Rinv_1; only 1: apply derivable_pt_lim_id; only 1: exact R1_neq_R0).	9.64418983459	9859
Coq.Reals.Ranalysis1.derive_pt_Rsqr	40
Coq.Reals.Ranalysis1.derive_pt_comp	40
Coq.Reals.Ranalysis1.derivable_pt_lim_pow_pos	40
Coq.Reals.Ranalysis1.derivable_pt_lim_pow	40
Coq.Reals.Ranalysis1.derivable_pt_pow	40
Coq.Reals.Ranalysis1.derivable_pow	40	0.0.0.0.5	search with cache (only 1: unfold derivable, continuity; only 1: intros; only 1: unfold derivable_pt; only 1: exists (INR n * x ^ Init.Nat.pred n); only 1: apply derivable_pt_lim_pow).	0.0435280799866	17
Coq.Reals.Ranalysis1.derive_pt_pow	40
Coq.Reals.Ranalysis1.pr_nu	40	4.10.1.15.0	search with cache (only 1: intros; only 1: apply derive_pt_eq_0; only 1: unfold derive_pt; only 1: pose proof (proj2_sig pr2) as H4; only 1: assumption).	3.26147007942	4201
Coq.Reals.Ranalysis1.deriv_maximum	40
Coq.Reals.Ranalysis1.deriv_minimum	40
Coq.Reals.Ranalysis1.deriv_constant2	40
Coq.Reals.Ranalysis1.nonneg_derivative_0	40
Coq.Reals.Ranalysis4.derivable_pt_inv	40
Coq.Reals.Ranalysis4.pr_nu_var	40
Coq.Reals.Ranalysis4.pr_nu_var2	40
Coq.Reals.Ranalysis4.derivable_inv	40
Coq.Reals.Ranalysis4.derive_pt_inv	40
Coq.Reals.Ranalysis4.Rabs_derive_1	40
Coq.Reals.Ranalysis4.Rabs_derive_2	40
Coq.Reals.Ranalysis4.Rderivable_pt_abs	40
Coq.Reals.Ranalysis4.Rcontinuity_abs	40
Coq.Reals.Ranalysis4.continuity_finite_sum	40
Coq.Reals.Ranalysis4.derivable_pt_lim_fs	40
Coq.Reals.Ranalysis4.derivable_pt_lim_finite_sum	40
Coq.Reals.Ranalysis4.derivable_pt_finite_sum	40
Coq.Reals.Ranalysis4.derivable_finite_sum	40	0.0.0.0.0.1.1.10.0	search with cache (only 1: intros; only 1: intro; only 1: unfold derivable_pt; only 1: pose proof (derivable_pt_lim_finite_sum An x N) as H; only 1: induction N as [| N HrecN]; only 1: exists 0; only 1: apply H; only 1: exists (sum_f_R0 (fun k : nat => INR (S k) * An (S k) * x ^ k) (Init.Nat.pred (S N))); only 1: apply H).	3.72866296768	1658
Coq.Reals.Ranalysis4.derivable_pt_lim_cosh	40
Coq.Reals.Ranalysis4.derivable_pt_lim_sinh	40
Coq.Reals.Ranalysis4.derivable_pt_exp	40
Coq.Reals.Ranalysis4.derivable_pt_cosh	40
Coq.Reals.Ranalysis4.derivable_pt_sinh	40
Coq.Reals.Ranalysis4.derivable_exp	40	0.0.0.2	search with cache (only 1: intro; only 1: unfold derivable_pt; only 1: exists (exp x); only 1: apply derivable_pt_lim_exp).	0.0459320545197	6
Coq.Reals.Ranalysis4.derivable_cosh	40	0.0.0.0.6	search with cache (only 1: unfold derivable; only 1: intro; only 1: unfold derivable_pt; only 1: exists (sinh x); only 1: apply derivable_pt_lim_cosh).	0.441933870316	133
Coq.Reals.Ranalysis4.derivable_sinh	40	0.0.0.0	search with cache (only 1: intro; only 1: unfold derivable_pt; only 1: exists (cosh x); only 1: apply derivable_pt_lim_sinh).	0.0388660430908	4
Coq.Reals.Ranalysis4.derive_pt_exp	40	2.5.3	search with cache (only 1: intros; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_exp).	0.506068944931	132
Coq.Reals.Ranalysis4.derive_pt_cosh	40
Coq.Reals.Ranalysis4.derive_pt_sinh	40	2.4.0	search with cache (only 1: intro; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_sinh).	0.208140850067	16
Coq.Reals.Ranalysis4.sinh_lt	40
Coq.Reals.ConstructiveReals.CRlt_asym	40
Coq.Reals.ConstructiveReals.CRlt_proper	40
Coq.Reals.ConstructiveReals.CRle_refl	40
Coq.Reals.ConstructiveReals.CRle_lt_trans	40
Coq.Reals.ConstructiveReals.CRlt_le_trans	40
Coq.Reals.ConstructiveReals.CRle_trans	40
Coq.Reals.ConstructiveReals.CRlt_trans	40
Coq.Reals.ConstructiveReals.CRlt_trans_flip	40
Coq.Reals.ConstructiveReals.CReq_refl	40
Coq.Reals.ConstructiveReals.CReq_sym	40
Coq.Reals.ConstructiveReals.CReq_trans	40
Coq.Reals.ConstructiveReals.CR_setoid	40
Coq.Reals.ConstructiveReals.CRplus_0_r	40
Coq.Reals.ConstructiveReals.CRmult_1_r	40
Coq.Reals.ConstructiveReals.CRplus_opp_l	40
Coq.Reals.ConstructiveReals.CRplus_lt_compat_r	40
Coq.Reals.ConstructiveReals.CRplus_lt_reg_r	40
Coq.Reals.ConstructiveReals.CRplus_le_compat_l	40
Coq.Reals.ConstructiveReals.CRplus_le_compat_r	40
Coq.Reals.ConstructiveReals.CRplus_le_reg_l	40	17.2.3.4.0.0	search with cache (only 1: intros; only 1: intros abs; only 1: apply H; only 1: destruct (CRisRing R); only 1: apply CRplus_lt_compat_l; only 1: trivial).	11.1883590221	8452
Coq.Reals.ConstructiveReals.CRplus_le_reg_r	40
Coq.Reals.ConstructiveReals.CRplus_lt_le_compat	40
Coq.Reals.ConstructiveReals.CRplus_eq_reg_l	40
Coq.Reals.ConstructiveReals.CRplus_eq_reg_r	40
Coq.Reals.ConstructiveReals.CRopp_involutive	40
Coq.Reals.ConstructiveReals.CRopp_gt_lt_contravar	40
Coq.Reals.ConstructiveReals.CRopp_lt_cancel	40
Coq.Reals.ConstructiveReals.CRopp_plus_distr	40
Coq.Reals.ConstructiveReals.CRmult_plus_distr_l	40
Coq.Reals.ConstructiveReals.CRzero_double	40
Coq.Reals.ConstructiveReals.CRmult_0_r	40
Coq.Reals.ConstructiveReals.CRopp_mult_distr_r	40
Coq.Reals.ConstructiveReals.CRopp_mult_distr_l	40
Coq.Reals.ConstructiveReals.CRmult_lt_compat_r	40
Coq.Reals.ConstructiveReals.CRinv_r	40
Coq.Reals.ConstructiveReals.CRmult_lt_reg_r	40
Coq.Reals.ConstructiveReals.CRmult_lt_reg_l	40
Coq.Reals.ConstructiveReals.CRmult_le_compat_l	40
Coq.Reals.ConstructiveReals.CRmult_le_compat_r	40
Coq.Reals.ConstructiveReals.CRmult_eq_reg_r	40
Coq.Reals.ConstructiveReals.CR_of_Q_proper	40
Coq.Reals.ConstructiveReals.CR_of_Q_zero	40
Coq.Reals.ConstructiveReals.CR_of_Q_opp	40
Coq.Reals.ConstructiveReals.CR_of_Q_le	40
Coq.Reals.ConstructiveReals.CR_of_Q_pos	40
Coq.Reals.ConstructiveReals.CR_cv_above_rat	40
Coq.Reals.ConstructiveReals.CR_cv_below_rat	40
Coq.Reals.ConstructiveReals.CR_cv_const	40
Coq.Reals.ConstructiveCauchyRealsMult.BoundFromZero	40
Coq.Reals.ConstructiveCauchyRealsMult.QCauchySeq_bounded	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_cauchy	40
Coq.Reals.ConstructiveCauchyRealsMult.linear_max	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult	40	4	search with cache (only 1: auto).	0.023157119751	14
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_unfold	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_assoc_bounded_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_assoc	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_comm	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_proper_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_0_compat	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_plus_distr_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_plus_distr_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_1_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_isRingExt	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_isRing	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_morph_Proper	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_morph_T	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_opp_morph_Proper	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_opp_morph_T	40	1	search with cache (only 1: apply CReal_isRingExt).	0.68488407135	2
Coq.Reals.ConstructiveCauchyRealsMult.CReal_minus_morph_Proper	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_minus_morph_T	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_0_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_0_r	40	0.0	search with cache (only 1: intro; only 1: ring).	0.0294849872589	2
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_1_r	40	0.2	search with cache (only 1: intro; only 1: ring).	0.697867870331	118
Coq.Reals.ConstructiveCauchyRealsMult.CReal_opp_mult_distr_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_opp_mult_distr_r	40	0.0	search with cache (only 1: intros; only 1: ring).	0.033618927002	2
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_compat_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_compat_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_reg_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_abs_appart_zero	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealArchimedean	40
Coq.Reals.ConstructiveCauchyRealsMult.Rup_pos	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealLtDisjunctEpsilon	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealShiftReal	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealShiftEqual	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealNegShift	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealPosShift	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_neg	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_pos	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv	40	12	search with cache (only 1: assumption).	0.0735890865326	46
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_0_lt_compat	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_linear_shift	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_linear_shift_eq	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_1	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_mult_distr	40
Coq.Reals.ConstructiveCauchyRealsMult.Rinv_eq_compat	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_reg_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_reg_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_reg_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_compat_l	40	3.3	search with cache (only 1: intros x y z; only 1: apply CReal_mult_proper_l).	0.082288980484	38
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_compat_r	40	1.2.1	search with cache (only 1: intros; only 1: rewrite H; only 1: reflexivity).	0.0518980026245	24
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_pos_appart_zero	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_le_compat_l_half	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_invQ	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealQ_dense	40
Coq.Reals.ConstructiveCauchyRealsMult.inject_Q_mult	40
Coq.Reals.Cos_rel.cos_plus_form	40
Coq.Reals.Cos_rel.pow_sqr	40
Coq.Reals.Cos_rel.A1_cvg	40
Coq.Reals.Cos_rel.C1_cvg	40
Coq.Reals.Cos_rel.B1_cvg	40
Coq.Reals.Rlimit.eps2_Rgt_R0	40	5.0.0.7	search with cache (only 1: intros; only 1: apply Rmult_lt_0_compat; only 1: trivial; only 1: auto with real).	0.309118032455	220
Coq.Reals.Rlimit.eps2	40	0.1	search with cache (only 1: intros; only 1: lra).	0.0309700965881	3
Coq.Reals.Rlimit.eps4	40	2.3	search with cache (only 1: intros; only 1: lra).	0.0666749477386	19
Coq.Reals.Rlimit.Rlt_eps2_eps	40	0.0	search with cache (only 1: intros; only 1: lra).	0.0274820327759	2
Coq.Reals.Rlimit.Rlt_eps4_eps	40	0.0	search with cache (only 1: intros; only 1: lra).	0.0266399383545	2
Coq.Reals.Rlimit.prop_eps	40
Coq.Reals.Rlimit.mul_factor_wd	40
Coq.Reals.Rlimit.mul_factor_gt	40
Coq.Reals.Rlimit.mul_factor_gt_f	40
Coq.Reals.Rlimit.tech_limit	40
Coq.Reals.Rlimit.tech_limit_contr	40
Coq.Reals.Rlimit.lim_x	40	14.3.8	search with cache (only 1: intros H1; only 1: intros; only 1: firstorder).	5.17302298546	4758
Coq.Reals.Rlimit.limit_plus	40
Coq.Reals.Rlimit.limit_Ropp	40
Coq.Reals.Rlimit.limit_minus	40
Coq.Reals.Rlimit.limit_free	40
Coq.Reals.Rlimit.limit_mul	40
Coq.Reals.Rlimit.single_limit	40
Coq.Reals.Rlimit.limit_comp	40
Coq.Reals.Rlimit.limit_inv	40
Coq.Reals.PartSum.tech1	40
Coq.Reals.PartSum.tech2	40
Coq.Reals.PartSum.tech3	40
Coq.Reals.PartSum.tech4	40
Coq.Reals.PartSum.tech5	40	0.0	search with cache (only 1: intros; only 1: reflexivity).	0.0331890583038	2
Coq.Reals.PartSum.tech6	40
Coq.Reals.PartSum.tech7	40
Coq.Reals.PartSum.tech11	40
Coq.Reals.PartSum.tech12	40	8.0	search with cache (only 1: intros; only 1: assumption).	0.0340211391449	10
Coq.Reals.PartSum.scal_sum	40
Coq.Reals.PartSum.decomp_sum	40
Coq.Reals.PartSum.plus_sum	40	2.0.3.6.0.3	search with cache (only 1: induction N as [| N HrecN]; only 1: simpl; only 1: reflexivity; only 1: do 3 rewrite tech5; only 1: rewrite HrecN; only 1: ring).	1.38667106628	944
Coq.Reals.PartSum.sum_eq	40
Coq.Reals.PartSum.uniqueness_sum	40
Coq.Reals.PartSum.minus_sum	40	2.1.0.0.0.1.0	search with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: ring; only 1: do 3 rewrite tech5; only 1: rewrite HrecN; only 1: ring).	0.341094017029	68
Coq.Reals.PartSum.sum_decomposition	40
Coq.Reals.PartSum.sum_Rle	40
Coq.Reals.PartSum.Rsum_abs	40
Coq.Reals.PartSum.sum_cte	40
Coq.Reals.PartSum.sum_growing	40
Coq.Reals.PartSum.Rabs_triang_gen	40	5.3.1.0.1.0.0.0.0.0.0	search with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: right; only 1: reflexivity; only 1: do 2 rewrite tech5; only 1: apply Rle_trans with (Rabs (sum_f_R0 An N) + Rabs (An (S N))); only 1: apply Rabs_triang; only 1: do 2 rewrite <- (Rplus_comm (Rabs (An (S N)))); only 1: apply Rplus_le_compat_l; only 1: apply HrecN).	6.76636695862	5052
Coq.Reals.PartSum.cond_pos_sum	40
Coq.Reals.PartSum.cauchy_abs	40
Coq.Reals.PartSum.cv_cauchy_1	40
Coq.Reals.PartSum.cv_cauchy_2	40
Coq.Reals.PartSum.sum_eq_R0	40
Coq.Reals.PartSum.sum_incr	40
Coq.Reals.PartSum.sum_cv_maj	40
Coq.Reals.ConstructiveCauchyReals.QSeqEquiv_sym	40
Coq.Reals.ConstructiveCauchyReals.factorDenom	40	7.1.0.0.1.5	search with cache (only 1: intros; only 1: rewrite Qmult_comm; only 1: unfold Qred, Qeq in *; only 1: simpl in *; only 1: rewrite Pos.mul_comm; only 1: ring).	2.57829999924	1491
Coq.Reals.ConstructiveCauchyReals.QSeqEquiv_trans	40
Coq.Reals.ConstructiveCauchyReals.QSeqEquivEx_sym	40
Coq.Reals.ConstructiveCauchyReals.QSeqEquivEx_trans	40
Coq.Reals.ConstructiveCauchyReals.QSeqEquiv_cau_r	40
Coq.Reals.ConstructiveCauchyReals.increasing_modulus_inc	40	0.3.1.10.1.0.1.14	search with cache (only 1: intros n m; only 1: Nat.induct ltac:(p); only 1: trivial; only 1: intro; only 1: simpl; only 1: destruct n; only 1: Nat.solve_max; only 1: Nat.solve_max).	12.4372968674	9219
Coq.Reals.ConstructiveCauchyReals.increasing_modulus_max	40
Coq.Reals.ConstructiveCauchyReals.standard_modulus	40
Coq.Reals.ConstructiveCauchyReals.CRealLtEpsilon	40
Coq.Reals.ConstructiveCauchyReals.CRealLtForget	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_lpo_dec	40
Coq.Reals.ConstructiveCauchyReals.CRealLe_not_lt	40
Coq.Reals.ConstructiveCauchyReals.CRealEq_diff	40
Coq.Reals.ConstructiveCauchyReals.CRealEq_modindep	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_aboveSig	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_above	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_above_same	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_asym	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_irrefl	40
Coq.Reals.ConstructiveCauchyReals.CRealLe_refl	40
Coq.Reals.ConstructiveCauchyReals.CRealEq_refl	40
Coq.Reals.ConstructiveCauchyReals.CRealEq_sym	40	1.7.2.0.0	search with cache (only 1: intros; only 1: destruct H; only 1: split; only 1: contradiction; only 1: apply H).	0.898822069168	821
Coq.Reals.ConstructiveCauchyReals.CRealLt_dec	40
Coq.Reals.ConstructiveCauchyReals.CReal_le_lt_trans	40
Coq.Reals.ConstructiveCauchyReals.CReal_lt_le_trans	40
Coq.Reals.ConstructiveCauchyReals.CReal_le_trans	40
Coq.Reals.ConstructiveCauchyReals.CReal_lt_trans	40
Coq.Reals.ConstructiveCauchyReals.CRealEq_trans	40
Coq.Reals.ConstructiveCauchyReals.CRealEq_relT	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_morph	40
Coq.Reals.ConstructiveCauchyReals.CRealGt_morph	40
Coq.Reals.ConstructiveCauchyReals.CReal_appart_morph	40
Coq.Reals.ConstructiveCauchyReals.CRealLtProp_morph_Proper	40
Coq.Reals.ConstructiveCauchyReals.CRealLe_morph_Proper	40
Coq.Reals.ConstructiveCauchyReals.CRealGe_morph_Proper	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_proper_l	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_proper_r	40
Coq.Reals.ConstructiveCauchyReals.CRealLe_proper_l	40
Coq.Reals.ConstructiveCauchyReals.CRealLe_proper_r	40	17.0.15	search with cache (only 1: intros x y lpo; only 1: apply CRealLe_morph; only 1: now Z.nzsimpl).	11.6474030018	14340
Coq.Reals.ConstructiveCauchyReals.ConstCauchy	40
Coq.Reals.ConstructiveCauchyReals.inject_Q	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_0_1	40
Coq.Reals.ConstructiveCauchyReals.CReal_injectQPos	40
Coq.Reals.ConstructiveCauchyReals.CRealLtQ	40
Coq.Reals.ConstructiveCauchyReals.CRealLtQopp	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_compare	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_morph_Proper	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_morph_T	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_cauchy	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus	40	0	search with cache (only 1: auto).	0.00606989860535	1
Coq.Reals.ConstructiveCauchyReals.CReal_plus_nth	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_unfold	40
Coq.Reals.ConstructiveCauchyReals.CReal_opp	40	0	search with cache (only 1: auto).	0.00652980804443	1
Coq.Reals.ConstructiveCauchyReals.belowMultiple	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_assoc	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_comm	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_0_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_0_r	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_lt_compat_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_lt_compat_r	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_lt_reg_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_lt_reg_r	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_reg_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_reg_r	40	1.2.1.0.0.0.0	search with cache (only 1: intros; only 1: intro abs; only 1: apply H; only 1: clear H; only 1: do 2 rewrite <- (CReal_plus_comm x); only 1: apply CReal_plus_lt_compat_l; only 1: exact abs).	0.733680963516	159
Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_compat_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_lt_compat	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_compat	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_opp_r	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_opp_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_proper_r	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_proper_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_morph_Proper	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_morph_T	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_eq_reg_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_opp_0	40	6	search with cache (only 1: apply CReal_plus_0_l).	1.16105794907	47
Coq.Reals.ConstructiveCauchyReals.CReal_opp_plus_distr	40
Coq.Reals.ConstructiveCauchyReals.CReal_opp_involutive	40
Coq.Reals.ConstructiveCauchyReals.CReal_opp_gt_lt_contravar	40
Coq.Reals.ConstructiveCauchyReals.CReal_opp_ge_le_contravar	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_plus	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_one	40	2.4.0	search with cache (only 1: apply (CReal_plus_eq_reg_l 0); only 1: rewrite CReal_plus_comm; only 1: apply CReal_plus_0_l).	0.0508110523224	23
Coq.Reals.ConstructiveCauchyReals.inject_Q_lt	40
Coq.Reals.ConstructiveCauchyReals.opp_inject_Q	40
Coq.Reals.ConstructiveCauchyReals.lt_inject_Q	40
Coq.Reals.ConstructiveCauchyReals.le_inject_Q	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_le	40
Coq.Reals.ConstructiveCauchyReals.inject_Z_plus	40
Coq.Reals.ConstructiveCauchyReals.opp_inject_Z	40
Coq.Reals.Rtrigo_reg.continuity_sin	40
Coq.Reals.Rtrigo_reg.CVN_R_sin	40
Coq.Reals.Rtrigo_reg.derivable_pt_lim_sin_0	40
Coq.Reals.Rtrigo_reg.derivable_pt_lim_cos_0	40
Coq.Reals.Rtrigo_reg.derivable_pt_lim_sin	40
Coq.Reals.Rtrigo_reg.derivable_pt_lim_cos	40
Coq.Reals.Rtrigo_reg.derivable_pt_sin	40
Coq.Reals.Rtrigo_reg.derivable_pt_cos	40
Coq.Reals.Rtrigo_reg.derivable_sin	40	0.0.1.0.0	search with cache (only 1: unfold derivable; only 1: unfold derivable_pt; only 1: intro; only 1: exists (cos x); only 1: apply derivable_pt_lim_sin).	0.0522317886353	6
Coq.Reals.Rtrigo_reg.derivable_cos	40	0.0.2.11	search with cache (only 1: intro x; only 1: unfold derivable_pt; only 1: exists (- sin x); only 1: apply derivable_pt_lim_cos).	0.230104207993	122
Coq.Reals.Rtrigo_reg.derive_pt_sin	40
Coq.Reals.Rtrigo_reg.derive_pt_cos	40	3.6.0	search with cache (only 1: intro x; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_cos).	0.731920003891	100
Coq.Reals.Rgeom.distance_refl	40
Coq.Reals.Rgeom.distance_symm	40	0.0.0.0.0.0.2.0.1.1.0.0.0.0.0.0.0.0.0.0.0.1	search with cache (only 1: intros a b; only 1: intros x0 y0; only 1: unfold dist_euc; only 1: apply Rsqr_inj; only 1: apply sqrt_positivity; only 1: apply Rplus_le_le_0_compat; only 1: apply Rle_0_sqr; only 1: apply Rle_0_sqr; only 1: apply sqrt_positivity; only 1: apply Rplus_le_le_0_compat; only 1: apply Rle_0_sqr; only 1: apply Rle_0_sqr; only 1: rewrite Rsqr_sqrt; only 1: rewrite Rsqr_sqrt; only 1: unfold Rsqr; only 1: ring; only 1: apply Rplus_le_le_0_compat; only 1: apply Rle_0_sqr; only 1: apply Rle_0_sqr; only 1: apply Rplus_le_le_0_compat; only 1: apply Rle_0_sqr; only 1: apply Rle_0_sqr).	14.1700470448	7632
Coq.Reals.Rgeom.law_cosines	40
Coq.Reals.Rgeom.triangle	40
Coq.Reals.Rgeom.translation_0	40
Coq.Reals.Rgeom.isometric_translation	40
Coq.Reals.Rgeom.rotation_0	40
Coq.Reals.Rgeom.rotation_PI2	40
Coq.Reals.Rgeom.isometric_rotation_0	40
Coq.Reals.Rgeom.isometric_rotation	40
Coq.Reals.Rgeom.isometric_rot_trans	40
Coq.Reals.Rgeom.isometric_trans_rot	40
Coq.FSets.FMapAVL.Raw.Proofs.MapsTo_In	40
Coq.FSets.FMapAVL.Raw.Proofs.In_MapsTo	40	0.1.9.0.2.39.3.0	search with cache (only 1: induction 1; only 1: eauto with ordered_type; only 1: firstorder; only 1: exists x; only 1: auto; only 1: firstorder; only 1: exists x; only 1: auto).	11.1415331364	30023
Coq.FSets.FMapAVL.Raw.Proofs.In_alt	40	1.0.1.1.0.1.0.0.0.8.0.36	search with cache (only 1: constructor; only 1: induction 1; only 1: eauto with ordered_type; only 1: induction 1; only 1: exists e; only 1: auto; only 1: destruct IHIn as (e, He); only 1: exists e; only 1: auto; only 1: destruct IHIn as (e, He); only 1: exists e; only 1: auto).	4.32912778854	11886
Coq.FSets.FMapAVL.Raw.Proofs.MapsTo_1	40	0.0.14.2.7	search with cache (only 1: intros m x y e e'; only 1: induction 1; only 1: eauto with ordered_type; only 1: auto; only 1: auto).	1.38555502892	1596
Coq.FSets.FMapAVL.Raw.Proofs.In_1	40	0.0.0.0.0.3.4	search with cache (only 1: induction m; only 1: intros; only 1: intuition_in; only 1: intuition_in; only 1: eauto with ordered_type; only 1: eauto with ordered_type; only 1: eauto with ordered_type).	1.09703207016	185
Coq.FSets.FMapAVL.Raw.Proofs.In_node_iff	40	1.4	search with cache (only 1: intuition; only 1: intuition_in).	0.171639919281	31
Coq.FSets.FMapAVL.Raw.Proofs.lt_leaf	40	0.8.0	search with cache (only 1: intuition_in; only 1: compute; only 1: intuition_in).	0.0806040763855	39
Coq.FSets.FMapAVL.Raw.Proofs.gt_leaf	40	0.13	search with cache (only 1: intros m x y; only 1: intuition_in).	0.341667890549	217
Coq.FSets.FMapAVL.Raw.Proofs.lt_tree_node	40	6.7.0.6.3.1	search with cache (only 1: intros m x y; only 1: intros; only 1: inversion_clear 1; only 1: eauto with ordered_type; only 1: auto; only 1: auto).	1.96692585945	1553
Coq.FSets.FMapAVL.Raw.Proofs.gt_tree_node	40	0.0.1	search with cache (only 1: unfold gt_tree; only 1: intuition_in; only 1: order).	0.650192022324	13
Coq.FSets.FMapAVL.Raw.Proofs.lt_left	40	0.0	search with cache (only 1: unfold lt_tree in *; only 1: intuition_in).	0.0286037921906	2
Coq.FSets.FMapAVL.Raw.Proofs.lt_right	40	0	search with cache (only 1: intuition_in).	0.0236458778381	1
Coq.FSets.FMapAVL.Raw.Proofs.gt_left	40	0.0	search with cache (only 1: unfold gt_tree in *; only 1: intuition_in).	0.0266180038452	2
Coq.FSets.FMapAVL.Raw.Proofs.gt_right	40	0	search with cache (only 1: intuition_in).	0.0212678909302	1
Coq.FSets.FMapAVL.Raw.Proofs.lt_tree_not_in	40
Coq.FSets.FMapAVL.Raw.Proofs.lt_tree_trans	40	9	search with cache (only 1: eauto with ordered_type).	0.186058998108	57
Coq.FSets.FMapAVL.Raw.Proofs.gt_tree_not_in	40	0.0.0	search with cache (only 1: intros; only 1: intro; only 1: order).	0.0309360027313	3
Coq.FSets.FMapAVL.Raw.Proofs.gt_tree_trans	40	0.2.2.1	search with cache (only 1: intros; only 1: intro; only 1: intro; only 1: order).	0.0938169956207	33
Coq.FSets.FMapAVL.Raw.Proofs.empty_bst	40	3.5	search with cache (only 1: compute; only 1: intuition).	0.0205810070038	10
Coq.FSets.FMapAVL.Raw.Proofs.empty_1	40	0.1.15	search with cache (only 1: intros a b; only 1: unfold empty; only 1: intuition_in).	0.360891103745	275
Coq.FSets.FMapAVL.Raw.Proofs.is_empty_1	40
Coq.FSets.FMapAVL.Raw.Proofs.is_empty_2	40	5.0.8.0	search with cache (only 1: destruct m as [| r x e l h]; only 1: intros sorted belong1; only 1: intuition_in; only 1: easy).	1.35416102409	990
Coq.FSets.FMapAVL.Raw.Proofs.mem_1	40
Coq.FSets.FMapAVL.Raw.Proofs.mem_2	40
Coq.FSets.FMapAVL.Raw.Proofs.find_1	40
Coq.FSets.FMapAVL.Raw.Proofs.find_2	40
Coq.FSets.FMapAVL.Raw.Proofs.find_iff	40
Coq.FSets.FMapAVL.Raw.Proofs.find_in	40
Coq.FSets.FMapAVL.Raw.Proofs.in_find	40
Coq.FSets.FMapAVL.Raw.Proofs.find_in_iff	40	0.0.0.3.2.0.0.0.5.3	search with cache (only 1: split; only 1: case_eq (find x m); only 1: intros; only 1: apply MapsTo_In with e; only 1: auto using find_1, find_2; only 1: congruence; only 1: intros; only 1: destruct (In_MapsTo H0) as (d, Hd); only 1: rewrite (find_1 H Hd); only 1: discriminate).	3.40979790688	2564
Coq.FSets.FMapAVL.Raw.Proofs.not_find_iff	40
Coq.FSets.FMapAVL.Raw.Proofs.find_find	40
Coq.FSets.FMapAVL.Raw.Proofs.find_mapsto_equiv	40
Coq.FSets.FMapAVL.Raw.Proofs.find_in_equiv	40
Coq.FSets.FMapAVL.Raw.Proofs.create_bst	40	1.1.1.1.9.3	search with cache (only 1: intros; only 1: constructor 2; only 1: intuition_in; only 1: intuition_in; only 1: intuition_in; only 1: intuition_in).	1.65253901482	1374
Coq.FSets.FMapAVL.Raw.Proofs.create_in	40	0.6.2.0.17	search with cache (only 1: intros l1 l2 Eq x; only 1: intros; only 1: revert l1 l2; only 1: compute; only 1: intuition_in).	13.8131439686	6801
Coq.FSets.FMapAVL.Raw.Proofs.bal_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.bal_in	40
Coq.FSets.FMapAVL.Raw.Proofs.bal_mapsto	40
Coq.FSets.FMapAVL.Raw.Proofs.bal_find	40
Coq.FSets.FMapAVL.Raw.Proofs.add_in	40
Coq.FSets.FMapAVL.Raw.Proofs.add_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.add_1	40
Coq.FSets.FMapAVL.Raw.Proofs.add_2	40
Coq.FSets.FMapAVL.Raw.Proofs.add_3	40
Coq.FSets.FMapAVL.Raw.Proofs.add_find	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_min_in	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_min_mapsto	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_min_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_min_gt_tree	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_min_find	40
Coq.FSets.FMapAVL.Raw.Proofs.merge_in	40
Coq.FSets.FMapAVL.Raw.Proofs.merge_mapsto	40
Coq.FSets.FMapAVL.Raw.Proofs.merge_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_in	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_1	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_2	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_3	40
Coq.FSets.FMapAVL.Raw.Proofs.join_in	40
Coq.FSets.FMapAVL.Raw.Proofs.join_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.join_find	40
Coq.FSets.FMapAVL.Raw.Proofs.split_in_1	40
Coq.FSets.FMapAVL.Raw.Proofs.split_in_2	40
Coq.FSets.FMapAVL.Raw.Proofs.split_in_3	40
Coq.FSets.FMapAVL.Raw.Proofs.split_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.split_lt_tree	40
Coq.FSets.FMapAVL.Raw.Proofs.split_gt_tree	40
Coq.FSets.FMapAVL.Raw.Proofs.split_find	40
Coq.FSets.FMapAVL.Raw.Proofs.concat_in	40
Coq.FSets.FMapAVL.Raw.Proofs.concat_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.concat_find	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_aux_mapsto	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_mapsto	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_in	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_aux_sort	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_sort	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_nodup	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_aux_cardinal	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_cardinal	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_app	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_node	40
Coq.FSets.FMapAVL.Raw.Proofs.fold_equiv_aux	40
Coq.FSets.FMapAVL.Raw.Proofs.fold_equiv	40
Coq.FSets.FMapAVL.Raw.Proofs.fold_1	40
Coq.FSets.FMapAVL.Raw.Proofs.flatten_e_elements	40	0.0.0.0.28.0.1	search with cache (only 1: simpl; only 1: unfold elements; only 1: intros sorted belong1; only 1: simpl; only 1: intros; only 1: rewrite !elements_app, !app_nil_r, !app_assoc_reverse; only 1: auto).	31.8212201595	40102
Coq.FSets.FMapAVL.Raw.Proofs.cons_1	40
Coq.FSets.FMapAVL.Raw.Proofs.cons_IfEq	40
Coq.FSets.FMapAVL.Raw.Proofs.equal_end_IfEq	40
Coq.FSets.FMapAVL.Raw.Proofs.equal_more_IfEq	40	1.6.6.0.2	search with cache (only 1: intros; only 1: unfold IfEq; only 1: simpl; only 1: destruct H; only 1: auto).	2.53504705429	2004
Coq.FSets.FMapAVL.Raw.Proofs.equal_cont_IfEq	40
Coq.FSets.FMapAVL.Raw.Proofs.equal_IfEq	40
Coq.FSets.FMapAVL.Raw.Proofs.Equivb_elements	40
Coq.FSets.FMapAVL.Raw.Proofs.equal_Equivb	40
Coq.FSets.FMapAVL.Raw.Proofs.map_1	40	0.1.0.10	search with cache (only 1: induction m; only 1: intuition_in; only 1: simpl; only 1: intuition_in).	0.448861837387	166
Coq.FSets.FMapAVL.Raw.Proofs.map_2	40	0.1.1.3.2	search with cache (only 1: intros m x; only 1: induction m; only 1: inversion_clear 1; only 1: simpl; only 1: intuition_in).	0.560286998749	230
Coq.FSets.FMapAVL.Raw.Proofs.map_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.mapi_1	40
Coq.FSets.FMapAVL.Raw.Proofs.mapi_2	40	0.0.0.0.0.0.0	search with cache (only 1: induction m; only 1: simpl; only 1: inversion_clear 1; only 1: inversion_clear 1; only 1: auto; only 1: auto; only 1: auto).	0.0780408382416	7
Coq.FSets.FMapAVL.Raw.Proofs.mapi_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.map_option_2	40
Coq.FSets.FMapAVL.Raw.Proofs.map_option_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.map_option_find	40
Coq.FSets.FMapAVL.Raw.Proofs.map2_opt_2	40
Coq.FSets.FMapAVL.Raw.Proofs.map2_opt_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.map2_opt_1	40
Coq.FSets.FMapAVL.Raw.Proofs.map2_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.map2_1	40
Coq.FSets.FMapAVL.Raw.Proofs.map2_2	40
Coq.FSets.FMapAVL.IntMake.MapsTo_1	40
Coq.FSets.FMapAVL.IntMake.mem_1	40
Coq.FSets.FMapAVL.IntMake.mem_2	40
Coq.FSets.FMapAVL.IntMake.empty_1	40	7	search with cache (only 1: now f_equal).	0.0226080417633	8
Coq.FSets.FMapAVL.IntMake.is_empty_1	40
Coq.FSets.FMapAVL.IntMake.is_empty_2	40
Coq.FSets.FMapAVL.IntMake.add_1	40
Coq.FSets.FMapAVL.IntMake.add_2	40
Coq.FSets.FMapAVL.IntMake.add_3	40
Coq.FSets.FMapAVL.IntMake.remove_1	40
Coq.FSets.FMapAVL.IntMake.remove_2	40
Coq.FSets.FMapAVL.IntMake.remove_3	40
Coq.FSets.FMapAVL.IntMake.find_1	40
Coq.FSets.FMapAVL.IntMake.find_2	40
Coq.FSets.FMapAVL.IntMake.fold_1	40
Coq.FSets.FMapAVL.IntMake.elements_1	40
Coq.FSets.FMapAVL.IntMake.elements_2	40
Coq.FSets.FMapAVL.IntMake.elements_3	40	4.0.108	search with cache (only 1: fix even_spec 1; only 1: intros m; only 1: intuition).	18.0116569996	64808
Coq.FSets.FMapAVL.IntMake.elements_3w	40
Coq.FSets.FMapAVL.IntMake.cardinal_1	40	6	search with cache (only 1: exact (fun m : Raw.tree elt => elements_aux_cardinal nil)).	0.0675909519196	20
Coq.FSets.FMapAVL.IntMake.Equivb_Equivb	40
Coq.FSets.FMapAVL.IntMake.equal_1	40
Coq.FSets.FMapAVL.IntMake.equal_2	40	3.3.1.0.1.0.0.0	search with cache (only 1: unfold equal; only 1: intros (m, b) (m', b') cmp; only 1: rewrite Equivb_Equivb; only 1: simpl in *; only 1: rewrite equal_Equivb; only 1: auto; only 1: auto; only 1: auto).	7.98482704163	2541
Coq.FSets.FMapAVL.IntMake.map_1	40
Coq.FSets.FMapAVL.IntMake.map_2	40
Coq.FSets.FMapAVL.IntMake.mapi_1	40
Coq.FSets.FMapAVL.IntMake.mapi_2	40
Coq.FSets.FMapAVL.IntMake.map2_1	40
Coq.FSets.FMapAVL.IntMake.map2_2	40
Coq.FSets.FMapAVL.IntMake_ord.cons_Cmp	40
Coq.FSets.FMapAVL.IntMake_ord.compare_end_Cmp	40	86.69	search with cache (only 1: intro z; only 1: now destruct z).	16.5475039482	111492
Coq.FSets.FMapAVL.IntMake_ord.compare_more_Cmp	40
Coq.FSets.FMapAVL.IntMake_ord.compare_cont_Cmp	40
Coq.FSets.FMapAVL.IntMake_ord.compare_Cmp	40
Coq.FSets.FMapAVL.IntMake_ord.compare	40
Coq.FSets.FMapAVL.IntMake_ord.eq_seq	40	1.1	search with cache (only 1: intros a b; only 1: solve_proper).	0.0217750072479	4
Coq.FSets.FMapAVL.IntMake_ord.lt_slt	40	2.1	search with cache (only 1: intros a b; only 1: now auto with arith).	0.0226650238037	12
Coq.FSets.FMapAVL.IntMake_ord.eq_1	40
Coq.FSets.FMapAVL.IntMake_ord.eq_2	40
Coq.FSets.FMapAVL.IntMake_ord.eq_refl	40
Coq.FSets.FMapAVL.IntMake_ord.eq_sym	40
Coq.FSets.FMapAVL.IntMake_ord.eq_trans	40
Coq.FSets.FMapAVL.IntMake_ord.lt_trans	40
Coq.FSets.FMapAVL.IntMake_ord.lt_not_eq	40
Coq.FSets.FSetFacts.WFacts_fun.In_eq_iff	40
Coq.FSets.FSetFacts.WFacts_fun.mem_iff	40	46	search with cache (only 1: intuition).	9.05762410164	12125
Coq.FSets.FSetFacts.WFacts_fun.not_mem_iff	40
Coq.FSets.FSetFacts.WFacts_fun.equal_iff	40	7	search with cache (only 1: intuition).	0.0470559597015	20
Coq.FSets.FSetFacts.WFacts_fun.subset_iff	40	8	search with cache (only 1: intuition).	0.0502231121063	22
Coq.FSets.FSetFacts.WFacts_fun.empty_iff	40
Coq.FSets.FSetFacts.WFacts_fun.is_empty_iff	40	2.2.1	search with cache (only 1: destruct (mem x s); only 1: intuition; only 1: intuition).	0.449584007263	78
Coq.FSets.FSetFacts.WFacts_fun.singleton_iff	40	2.1	search with cache (only 1: compute; only 1: intuition).	0.0254762172699	5
Coq.FSets.FSetFacts.WFacts_fun.add_iff	40
Coq.FSets.FSetFacts.WFacts_fun.add_neq_iff	40
Coq.FSets.FSetFacts.WFacts_fun.remove_iff	40
Coq.FSets.FSetFacts.WFacts_fun.remove_neq_iff	40	7.0.2.6.4.0	search with cache (only 1: split; only 1: intro; only 1: apply remove_3 with x; only 1: auto; only 1: apply remove_2; only 1: auto).	2.34983587265	2854
Coq.FSets.FSetFacts.WFacts_fun.union_iff	40	15	search with cache (only 1: intuition).	0.50697517395	262
Coq.FSets.FSetFacts.WFacts_fun.inter_iff	40
Coq.FSets.FSetFacts.WFacts_fun.diff_iff	40
Coq.FSets.FSetFacts.WFacts_fun.filter_iff	40
Coq.FSets.FSetFacts.WFacts_fun.for_all_iff	40	17	search with cache (only 1: intuition).	4.06112599373	3255
Coq.FSets.FSetFacts.WFacts_fun.exists_iff	40
Coq.FSets.FSetFacts.WFacts_fun.elements_iff	40	37	search with cache (only 1: intuition).	2.8969039917	5336
Coq.FSets.FSetFacts.WFacts_fun.mem_b	40
Coq.FSets.FSetFacts.WFacts_fun.empty_b	40
Coq.FSets.FSetFacts.WFacts_fun.add_b	40
Coq.FSets.FSetFacts.WFacts_fun.add_neq_b	40
Coq.FSets.FSetFacts.WFacts_fun.remove_b	40
Coq.FSets.FSetFacts.WFacts_fun.remove_neq_b	40	0.0.0.4.1.4	search with cache (only 1: generalize (mem_iff (remove x s) y), (mem_iff s y), (remove_iff s x y); only 1: destruct (mem y s); only 1: intuition; only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition).	26.938423872	6476
Coq.FSets.FSetFacts.WFacts_fun.singleton_b	40
Coq.FSets.FSetFacts.WFacts_fun.union_b	40
Coq.FSets.FSetFacts.WFacts_fun.inter_b	40
Coq.FSets.FSetFacts.WFacts_fun.diff_b	40
Coq.FSets.FSetFacts.WFacts_fun.elements_b	40
Coq.FSets.FSetFacts.WFacts_fun.filter_b	40
Coq.FSets.FSetFacts.WFacts_fun.for_all_b	40
Coq.FSets.FSetFacts.WFacts_fun.exists_b	40
Coq.FSets.FSetFacts.WFacts_fun.E_ST	40
Coq.FSets.FSetFacts.WFacts_fun.Equal_ST	40
Coq.FSets.FSetFacts.WFacts_fun.In_m	40
Coq.FSets.FSetFacts.WFacts_fun.is_empty_m	40
Coq.FSets.FSetFacts.WFacts_fun.Empty_m	40
Coq.FSets.FSetFacts.WFacts_fun.mem_m	40
Coq.FSets.FSetFacts.WFacts_fun.singleton_m	40
Coq.FSets.FSetFacts.WFacts_fun.add_m	40
Coq.FSets.FSetFacts.WFacts_fun.remove_m	40
Coq.FSets.FSetFacts.WFacts_fun.union_m	40
Coq.FSets.FSetFacts.WFacts_fun.inter_m	40
Coq.FSets.FSetFacts.WFacts_fun.diff_m	40
Coq.FSets.FSetFacts.WFacts_fun.Subset_m	40	5.0.0	search with cache (only 1: repeat red; only 1: intros; only 1: firstorder).	0.26592206955	8
Coq.FSets.FSetFacts.WFacts_fun.subset_m	40
Coq.FSets.FSetFacts.WFacts_fun.equal_m	40
Coq.FSets.FSetFacts.WFacts_fun.Subset_refl	40	3.1	search with cache (only 1: intuition; only 1: now f_equal).	0.0333111286163	6
Coq.FSets.FSetFacts.WFacts_fun.Subset_trans	40	4.1.0	search with cache (only 1: red; only 1: intros s s' H s'' s''' H0 a; only 1: auto).	0.577664852142	111
Coq.FSets.FSetFacts.WFacts_fun.In_s_m	40	0.16.2.1	search with cache (only 1: intros x y H s s' H0; only 1: rewrite (In_eq_iff s H); only 1: red; only 1: intuition).	15.5795350075	5631
Coq.FSets.FSetFacts.WFacts_fun.Empty_s_m_Proper	40	4.2.0	search with cache (only 1: unfold Subset; only 1: unfold Empty; only 1: firstorder).	0.0222699642181	9
Coq.FSets.FSetFacts.WFacts_fun.add_s_m_Proper	40	0.2.0.11.4.14	search with cache (only 1: intros Hb; only 1: intros; only 1: intro; only 1: do 2 rewrite add_iff; only 1: rewrite H; only 1: intuition).	6.50289297104	7446
Coq.FSets.FSetFacts.WFacts_fun.remove_s_m_Proper	40	0.2.0.0.0	search with cache (only 1: unfold Subset; only 1: intros x y H s s' H0 a; only 1: do 2 rewrite remove_iff; only 1: rewrite H; only 1: intuition).	0.117630004883	13
Coq.FSets.FSetFacts.WFacts_fun.union_s_m_Proper	40	0.0.3	search with cache (only 1: intros x y H s s' H0 a; only 1: do 2 rewrite union_iff; only 1: intuition).	0.06547498703	6
Coq.FSets.FSetFacts.WFacts_fun.inter_s_m_Proper	40	0.0.7.0	search with cache (only 1: unfold Subset; only 1: intros s s' H s'' s''' H0 a; only 1: do 2 rewrite inter_iff; only 1: intuition).	0.150705099106	59
Coq.FSets.FSetFacts.WFacts_fun.diff_s_m_Proper	40	0.0.0.0	search with cache (only 1: unfold Subset; only 1: intros s s' H s'' s''' H0 a; only 1: do 2 rewrite diff_iff; only 1: intuition).	0.0459380149841	4
Coq.FSets.FSetFacts.WFacts_fun.filter_equal	40
Coq.FSets.FSetFacts.WFacts_fun.filter_ext	40
Coq.FSets.FSetFacts.WFacts_fun.filter_subset	40
Coq.FSets.FSetPositive.PositiveSet.In_1	40	14.11	search with cache (only 1: intros p q H; only 1: congruence).	3.59237289429	3994
Coq.FSets.FSetPositive.PositiveSet.eq_refl	40	0.0	search with cache (only 1: intros a b; only 1: solve_proper).	0.0201170444489	2
Coq.FSets.FSetPositive.PositiveSet.eq_sym	40	2.2.0	search with cache (only 1: unfold eq, Equal; only 1: intros n m Hn Hm; only 1: now BinInt.Z.nzsimpl).	0.118819952011	7
Coq.FSets.FSetPositive.PositiveSet.eq_trans	40	11.0.4.0	search with cache (only 1: unfold eq, Equal; only 1: intro n; only 1: intros; only 1: now rewrite H).	2.95258593559	2621
Coq.FSets.FSetPositive.PositiveSet.mem_1	40	3.0	search with cache (only 1: intro H; only 1: easy).	0.0289278030396	5
Coq.FSets.FSetPositive.PositiveSet.mem_2	40	0.0	search with cache (only 1: unfold In; only 1: trivial).	0.105792999268	2
Coq.FSets.FSetPositive.PositiveSet.mem_Leaf	40	0	search with cache (only 1: trivial).	0.0190980434418	1
Coq.FSets.FSetPositive.PositiveSet.empty_1	40	5.2	search with cache (only 1: intro y; only 1: intuition).	0.105211019516	17
Coq.FSets.FSetPositive.PositiveSet.mem_node	40	0.10	search with cache (only 1: fix even_spec 1; only 1: trivial).	2.11460995674	118
Coq.FSets.FSetPositive.PositiveSet.is_empty_spec	40
Coq.FSets.FSetPositive.PositiveSet.is_empty_1	40
Coq.FSets.FSetPositive.PositiveSet.is_empty_2	40	0.0.1	search with cache (only 1: intro; only 1: rewrite is_empty_spec; only 1: trivial).	1.05732893944	97
Coq.FSets.FSetPositive.PositiveSet.subset_Leaf_s	40
Coq.FSets.FSetPositive.PositiveSet.subset_spec	40	1.3.2	search with cache (only 1: intros Heq; only 1: fix even_spec 1; only 1: trivial).	0.0586678981781	20
Coq.FSets.FSetPositive.PositiveSet.subset_1	40
Coq.FSets.FSetPositive.PositiveSet.subset_2	40
Coq.FSets.FSetPositive.PositiveSet.equal_subset	40
Coq.FSets.FSetPositive.PositiveSet.equal_spec	40
Coq.FSets.FSetPositive.PositiveSet.equal_1	40	0.0.0.0.0.0	search with cache (only 1: intros; only 1: rewrite equal_subset; only 1: rewrite andb_true_iff; only 1: rewrite <- 2!subset_spec; only 1: unfold Equal, Subset; only 1: firstorder).	0.0556740760803	6
Coq.FSets.FSetPositive.PositiveSet.equal_2	40	0.0.0.0.0.1	search with cache (only 1: intros s s'; only 1: rewrite equal_subset; only 1: rewrite andb_true_iff; only 1: rewrite <- 2!subset_spec; only 1: unfold Equal, Subset; only 1: firstorder).	0.070405960083	16
Coq.FSets.FSetPositive.PositiveSet.eq_dec	40
Coq.FSets.FSetPositive.PositiveSet.lex_Opp	40
Coq.FSets.FSetPositive.PositiveSet.compare_bool_inv	40	0.0.0.0.53	search with cache (only 1: intros [| ] [| ]; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial).	2.2710609436	4725
Coq.FSets.FSetPositive.PositiveSet.compare_inv	40
Coq.FSets.FSetPositive.PositiveSet.lex_Eq	40	0.0.2.0.1.11	search with cache (only 1: intros n m; only 1: revert m; only 1: induction n; only 1: now split; only 1: now split; only 1: now split).	1.6472260952	597
Coq.FSets.FSetPositive.PositiveSet.compare_bool_Eq	40	1.0.0.1.1	search with cache (only 1: destr_bool; only 1: easy'; only 1: easy'; only 1: now split; only 1: easy').	0.153284072876	35
Coq.FSets.FSetPositive.PositiveSet.compare_equal	40
Coq.FSets.FSetPositive.PositiveSet.compare_gt	40
Coq.FSets.FSetPositive.PositiveSet.compare_eq	40
Coq.FSets.FSetPositive.PositiveSet.compare	40
Coq.FSets.FSetPositive.PositiveSet.ct_cxe	40
Coq.FSets.FSetPositive.PositiveSet.ct_xce	40	0.0.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0280711650848	4
Coq.FSets.FSetPositive.PositiveSet.ct_lxl	40
Coq.FSets.FSetPositive.PositiveSet.ct_gxg	40	0.0.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0294020175934	4
Coq.FSets.FSetPositive.PositiveSet.ct_xll	40	0.1.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.031788110733	5
Coq.FSets.FSetPositive.PositiveSet.ct_xgg	40	1.0.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0296249389648	5
Coq.FSets.FSetPositive.PositiveSet.ct_lex	40
Coq.FSets.FSetPositive.PositiveSet.ct_compare_bool	40
Coq.FSets.FSetPositive.PositiveSet.compare_x_Leaf	40
Coq.FSets.FSetPositive.PositiveSet.compare_empty_x	40
Coq.FSets.FSetPositive.PositiveSet.compare_x_empty	40
Coq.FSets.FSetPositive.PositiveSet.ct_compare_fun	40
Coq.FSets.FSetPositive.PositiveSet.lt_trans	40
Coq.FSets.FSetPositive.PositiveSet.lt_not_eq	40
Coq.FSets.FSetPositive.PositiveSet.add_spec	40
Coq.FSets.FSetPositive.PositiveSet.add_1	40
Coq.FSets.FSetPositive.PositiveSet.add_2	40	5.0.0	search with cache (only 1: intros; only 1: apply <- add_spec; only 1: intuition congruence).	0.0573630332947	18
Coq.FSets.FSetPositive.PositiveSet.add_3	40
Coq.FSets.FSetPositive.PositiveSet.remove_spec	40
Coq.FSets.FSetPositive.PositiveSet.remove_1	40
Coq.FSets.FSetPositive.PositiveSet.remove_2	40	0.0.1	search with cache (only 1: intros; only 1: rewrite remove_spec; only 1: tauto).	0.0573420524597	15
Coq.FSets.FSetPositive.PositiveSet.remove_3	40	3.33	search with cache (only 1: fix le_div2 1; only 1: firstorder).	3.09937310219	4338
Coq.FSets.FSetPositive.PositiveSet.singleton_1	40
Coq.FSets.FSetPositive.PositiveSet.singleton_2	40	1.0.0.0.0.0	search with cache (only 1: unfold singleton; only 1: intros x y; only 1: rewrite add_spec; only 1: unfold In; only 1: rewrite mem_Leaf; only 1: intuition discriminate).	0.460196971893	7
Coq.FSets.FSetPositive.PositiveSet.union_spec	40
Coq.FSets.FSetPositive.PositiveSet.union_1	40
Coq.FSets.FSetPositive.PositiveSet.union_2	40
Coq.FSets.FSetPositive.PositiveSet.union_3	40	5.1.0	search with cache (only 1: intros; only 1: apply <- union_spec; only 1: firstorder).	0.115128040314	27
Coq.FSets.FSetPositive.PositiveSet.inter_spec	40
Coq.FSets.FSetPositive.PositiveSet.inter_1	40
Coq.FSets.FSetPositive.PositiveSet.inter_2	40	0.0.0	search with cache (only 1: intros s s' x; only 1: rewrite inter_spec; only 1: tauto).	0.0332360267639	3
Coq.FSets.FSetPositive.PositiveSet.inter_3	40	0.0.0	search with cache (only 1: intros s s' x; only 1: rewrite inter_spec; only 1: tauto).	0.0399160385132	3
Coq.FSets.FSetPositive.PositiveSet.diff_spec	40
Coq.FSets.FSetPositive.PositiveSet.diff_1	40
Coq.FSets.FSetPositive.PositiveSet.diff_2	40	0.0.1	search with cache (only 1: intros s s' x; only 1: rewrite diff_spec; only 1: tauto).	0.170287132263	42
Coq.FSets.FSetPositive.PositiveSet.diff_3	40	0.0.0	search with cache (only 1: intros s s' x; only 1: rewrite diff_spec; only 1: tauto).	0.0532338619232	3
Coq.FSets.FSetPositive.PositiveSet.fold_1	40
Coq.FSets.FSetPositive.PositiveSet.cardinal_1	40
Coq.FSets.FSetPositive.PositiveSet.xfilter_spec	40
Coq.FSets.FSetPositive.PositiveSet.filter_1	40
Coq.FSets.FSetPositive.PositiveSet.filter_2	40	0.0.0.0	search with cache (only 1: unfold filter; only 1: intros s x f _; only 1: rewrite xfilter_spec; only 1: tauto).	0.0433351993561	4
Coq.FSets.FSetPositive.PositiveSet.filter_3	40	0.0.0.0	search with cache (only 1: unfold filter; only 1: intros s x f _; only 1: rewrite xfilter_spec; only 1: tauto).	0.0479989051819	4
Coq.FSets.FSetPositive.PositiveSet.xforall_spec	40	1.12.5.12	search with cache (only 1: destruct s; only 1: intuition discriminate; only 1: fix even_spec 1; only 1: intuition congruence).	6.24273300171	6098
Coq.FSets.FSetPositive.PositiveSet.for_all_1	40
Coq.FSets.FSetPositive.PositiveSet.for_all_2	40	0.0.0.0	search with cache (only 1: intros s f _; only 1: unfold for_all; only 1: rewrite xforall_spec; only 1: trivial).	0.039745092392	4
Coq.FSets.FSetPositive.PositiveSet.xexists_spec	40	5.28.0	search with cache (only 1: intro f; only 1: fix even_spec 1; only 1: trivial).	6.40228295326	5618
Coq.FSets.FSetPositive.PositiveSet.exists_1	40
Coq.FSets.FSetPositive.PositiveSet.exists_2	40	0.0.0.0	search with cache (only 1: intros s f _; only 1: unfold exists_; only 1: rewrite xexists_spec; only 1: trivial).	0.0429310798645	4
Coq.FSets.FSetPositive.PositiveSet.partition_filter	40
Coq.FSets.FSetPositive.PositiveSet.partition_1	40
Coq.FSets.FSetPositive.PositiveSet.partition_2	40	0.0.0	search with cache (only 1: intros; only 1: rewrite partition_filter; only 1: apply eq_refl).	0.0317559242249	3
Coq.FSets.FSetPositive.PositiveSet.xelements_spec	40
Coq.FSets.FSetPositive.PositiveSet.elements_1	40
Coq.FSets.FSetPositive.PositiveSet.elements_2	40
Coq.FSets.FSetPositive.PositiveSet.lt_rev_append	40
Coq.FSets.FSetPositive.PositiveSet.elements_3	40
Coq.FSets.FSetPositive.PositiveSet.elements_3w	40
Coq.FSets.FSetPositive.PositiveSet.choose_1	40
Coq.FSets.FSetPositive.PositiveSet.choose_2	40
Coq.FSets.FSetPositive.PositiveSet.choose_empty	40
Coq.FSets.FSetPositive.PositiveSet.choose_3'	40
Coq.FSets.FSetPositive.PositiveSet.choose_3	40
Coq.FSets.FSetPositive.PositiveSet.min_elt_1	40
Coq.FSets.FSetPositive.PositiveSet.min_elt_3	40
Coq.FSets.FSetPositive.PositiveSet.min_elt_2	40
Coq.FSets.FSetPositive.PositiveSet.max_elt_1	40
Coq.FSets.FSetPositive.PositiveSet.max_elt_3	40
Coq.FSets.FSetPositive.PositiveSet.max_elt_2	40
Coq.FSets.FMapPositive.append_assoc_0	40
Coq.FSets.FMapPositive.append_assoc_1	40
Coq.FSets.FMapPositive.append_neutral_r	40	1.3.5.8.0.5.7.0.6	search with cache (only 1: induction i; only 1: simpl; only 1: reflexivity || apply f_equal || exfalso; only 1: auto; only 1: simpl; only 1: reflexivity || apply f_equal || exfalso; only 1: auto; only 1: simpl; only 1: now f_equal).	33.1479170322	39072
Coq.FSets.FMapPositive.append_neutral_l	40	1.0.0.0.0.0.0	search with cache (only 1: induction i; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: simpl; only 1: now f_equal).	0.0251860618591	8
Coq.FSets.FMapPositive.PositiveMap.gempty	40	1.0.0.8.14	search with cache (only 1: intros n; only 1: destruct n; only 1: auto with arith; only 1: auto with arith; only 1: easy).	0.96070098877	788
Coq.FSets.FMapPositive.PositiveMap.gss	40
Coq.FSets.FMapPositive.PositiveMap.gleaf	40	0.0.0.0.0.0.0	search with cache (only 1: induction i; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: easy).	0.0295269489288	7
Coq.FSets.FMapPositive.PositiveMap.gso	40
Coq.FSets.FMapPositive.PositiveMap.rleaf	40	2.2.2.27.148	search with cache (only 1: intro n; only 1: destruct n; only 1: auto; only 1: auto; only 1: auto).	20.9857239723	76791
Coq.FSets.FMapPositive.PositiveMap.grs	40
Coq.FSets.FMapPositive.PositiveMap.gro	40
Coq.FSets.FMapPositive.PositiveMap.xelements_correct	40
Coq.FSets.FMapPositive.PositiveMap.elements_correct	40
Coq.FSets.FMapPositive.PositiveMap.xfind_left	40
Coq.FSets.FMapPositive.PositiveMap.xelements_ii	40
Coq.FSets.FMapPositive.PositiveMap.xelements_io	40
Coq.FSets.FMapPositive.PositiveMap.xelements_oo	40
Coq.FSets.FMapPositive.PositiveMap.xelements_oi	40
Coq.FSets.FMapPositive.PositiveMap.xelements_ih	40
Coq.FSets.FMapPositive.PositiveMap.xelements_oh	40
Coq.FSets.FMapPositive.PositiveMap.xelements_hi	40
Coq.FSets.FMapPositive.PositiveMap.xelements_ho	40
Coq.FSets.FMapPositive.PositiveMap.find_xfind_h	40	4.0.1.1.9	search with cache (only 1: induction i; only 1: auto; only 1: auto; only 1: simpl in *; only 1: auto).	4.20161890984	2408
Coq.FSets.FMapPositive.PositiveMap.xelements_complete	40
Coq.FSets.FMapPositive.PositiveMap.elements_complete	40
Coq.FSets.FMapPositive.PositiveMap.cardinal_1	40
Coq.FSets.FMapPositive.PositiveMap.mem_find	40
Coq.FSets.FMapPositive.PositiveMap.Empty_alt	40
Coq.FSets.FMapPositive.PositiveMap.Empty_Node	40
Coq.FSets.FMapPositive.PositiveMap.mem_1	40
Coq.FSets.FMapPositive.PositiveMap.mem_2	40
Coq.FSets.FMapPositive.PositiveMap.MapsTo_1	40	26	search with cache (only 1: congruence).	0.379156827927	951
Coq.FSets.FMapPositive.PositiveMap.find_1	40	2.3.2	search with cache (only 1: intros; only 1: rewrite <- H; only 1: auto).	0.016499042511	10
Coq.FSets.FMapPositive.PositiveMap.find_2	40	0.0	search with cache (only 1: unfold MapsTo; only 1: auto).	0.0118420124054	2
Coq.FSets.FMapPositive.PositiveMap.empty_1	40
Coq.FSets.FMapPositive.PositiveMap.is_empty_1	40
Coq.FSets.FMapPositive.PositiveMap.is_empty_2	40
Coq.FSets.FMapPositive.PositiveMap.add_1	40
Coq.FSets.FMapPositive.PositiveMap.add_2	40
Coq.FSets.FMapPositive.PositiveMap.add_3	40	0.2.1.2.0	search with cache (only 1: unfold MapsTo; only 1: intro H; only 1: rewrite gso; only 1: auto; only 1: auto).	0.106182098389	58
Coq.FSets.FMapPositive.PositiveMap.remove_1	40
Coq.FSets.FMapPositive.PositiveMap.remove_2	40
Coq.FSets.FMapPositive.PositiveMap.remove_3	40
Coq.FSets.FMapPositive.PositiveMap.elements_1	40
Coq.FSets.FMapPositive.PositiveMap.elements_2	40
Coq.FSets.FMapPositive.PositiveMap.xelements_bits_lt_1	40
Coq.FSets.FMapPositive.PositiveMap.xelements_bits_lt_2	40
Coq.FSets.FMapPositive.PositiveMap.xelements_sort	40
Coq.FSets.FMapPositive.PositiveMap.elements_3	40
Coq.FSets.FMapPositive.PositiveMap.elements_3w	40
Coq.FSets.FMapPositive.PositiveMap.xgmapi	40
Coq.FSets.FMapPositive.PositiveMap.gmapi	40
Coq.FSets.FMapPositive.PositiveMap.mapi_1	40
Coq.FSets.FMapPositive.PositiveMap.mapi_2	40
Coq.FSets.FMapPositive.PositiveMap.map_1	40
Coq.FSets.FMapPositive.PositiveMap.map_2	40
Coq.FSets.FMapPositive.PositiveMap.xgmap2_l	40
Coq.FSets.FMapPositive.PositiveMap.xgmap2_r	40
Coq.FSets.FMapPositive.PositiveMap.gmap2	40
Coq.FSets.FMapPositive.PositiveMap.map2_1	40
Coq.FSets.FMapPositive.PositiveMap.map2_2	40
Coq.FSets.FMapPositive.PositiveMap.xfoldi_1	40
Coq.FSets.FMapPositive.PositiveMap.fold_1	40
Coq.FSets.FMapPositive.PositiveMap.equal_1	40
Coq.FSets.FMapPositive.PositiveMap.equal_2	40
Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.gsspec	40
Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.gsident	40
Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.xmap2_lr	40
Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.map2_commut	40
Coq.FSets.FMapFacts.WFacts_fun.eq_bool_alt	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0692579746246	5
Coq.FSets.FMapFacts.WFacts_fun.eq_option_alt	40
Coq.FSets.FMapFacts.WFacts_fun.MapsTo_fun	40
Coq.FSets.FMapFacts.WFacts_fun.In_iff	40
Coq.FSets.FMapFacts.WFacts_fun.MapsTo_iff	40	2.6.0.6.0	search with cache (only 1: split; only 1: intros; only 1: apply (MapsTo_1 H H0); only 1: intros; only 1: apply (MapsTo_1 (E.eq_sym H) H0)).	0.842820167542	542
Coq.FSets.FMapFacts.WFacts_fun.mem_in_iff	40	5	search with cache (only 1: intuition).	0.0947830677032	17
Coq.FSets.FMapFacts.WFacts_fun.not_mem_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.In_dec	40
Coq.FSets.FMapFacts.WFacts_fun.find_mapsto_iff	40	2	search with cache (only 1: intuition).	0.031653881073	17
Coq.FSets.FMapFacts.WFacts_fun.not_find_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.in_find_iff	40
Coq.FSets.FMapFacts.WFacts_fun.equal_iff	40
Coq.FSets.FMapFacts.WFacts_fun.empty_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.empty_in_iff	40	0.4.0.0	search with cache (only 1: unfold In; only 1: intuition; only 1: destruct H as (b, H); only 1: apply (empty_1 H)).	0.0490610599518	8
Coq.FSets.FMapFacts.WFacts_fun.is_empty_iff	40	1	search with cache (only 1: intuition).	0.0400068759918	12
Coq.FSets.FMapFacts.WFacts_fun.add_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.add_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.add_neq_mapsto_iff	40	3.1.4.0.0	search with cache (only 1: intros; only 1: intuition; only 1: apply add_3 with x e; only 1: auto; only 1: auto).	0.616873025894	328
Coq.FSets.FMapFacts.WFacts_fun.add_neq_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.remove_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.remove_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.remove_neq_mapsto_iff	40	7.1.8.9	search with cache (only 1: intuition; only 1: apply remove_3 with x; only 1: assert (In y (remove x m)) by (exists e; auto); only 1: auto).	10.0799610615	12801
Coq.FSets.FMapFacts.WFacts_fun.remove_neq_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.elements_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.elements_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.map_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.map_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.mapi_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.mapi_inv	40
Coq.FSets.FMapFacts.WFacts_fun.mapi_1bis	40
Coq.FSets.FMapFacts.WFacts_fun.mapi_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.mem_find_b	40
Coq.FSets.FMapFacts.WFacts_fun.mem_b	40
Coq.FSets.FMapFacts.WFacts_fun.find_o	40
Coq.FSets.FMapFacts.WFacts_fun.empty_o	40
Coq.FSets.FMapFacts.WFacts_fun.empty_a	40
Coq.FSets.FMapFacts.WFacts_fun.add_eq_o	40	1.2	search with cache (only 1: intros; only 1: auto with map).	0.0389819145203	16
Coq.FSets.FMapFacts.WFacts_fun.add_neq_o	40	2.0.3.4.0.4.4.1	search with cache (only 1: intros; only 1: rewrite eq_option_alt; only 1: repeat split; only 1: rewrite <- 2!find_mapsto_iff; only 1: apply add_3; only 1: intro H1; only 1: auto; only 1: auto with map).	1.73397183418	1151
Coq.FSets.FMapFacts.WFacts_fun.add_o	40
Coq.FSets.FMapFacts.WFacts_fun.add_eq_b	40
Coq.FSets.FMapFacts.WFacts_fun.add_neq_b	40
Coq.FSets.FMapFacts.WFacts_fun.add_b	40
Coq.FSets.FMapFacts.WFacts_fun.remove_eq_o	40
Coq.FSets.FMapFacts.WFacts_fun.remove_neq_o	40	0.0.0.2.0	search with cache (only 1: intros; only 1: rewrite eq_option_alt; only 1: intro e; only 1: rewrite <- find_mapsto_iff, remove_mapsto_iff; only 1: now intuition).	0.0537388324738	7
Coq.FSets.FMapFacts.WFacts_fun.remove_o	40	0.0.0.2.0.3.0	search with cache (only 1: intros; only 1: rewrite eq_option_alt; only 1: intro e; only 1: rewrite <- find_mapsto_iff, remove_mapsto_iff; only 1: destruct (eq_dec x y); only 1: now intuition; only 1: now intuition).	1.11804795265	186
Coq.FSets.FMapFacts.WFacts_fun.remove_eq_b	40
Coq.FSets.FMapFacts.WFacts_fun.remove_neq_b	40
Coq.FSets.FMapFacts.WFacts_fun.remove_b	40
Coq.FSets.FMapFacts.WFacts_fun.map_o	40
Coq.FSets.FMapFacts.WFacts_fun.map_b	40
Coq.FSets.FMapFacts.WFacts_fun.mapi_b	40
Coq.FSets.FMapFacts.WFacts_fun.mapi_o	40
Coq.FSets.FMapFacts.WFacts_fun.map2_1bis	40
Coq.FSets.FMapFacts.WFacts_fun.elements_o	40
Coq.FSets.FMapFacts.WFacts_fun.elements_b	40
Coq.FSets.FMapFacts.WFacts_fun.Equal_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.Equal_Equiv	40
Coq.FSets.FMapFacts.WFacts_fun.Equiv_Equivb	40
Coq.FSets.FMapFacts.WFacts_fun.Equal_Equivb	40
Coq.FSets.FMapFacts.WFacts_fun.Equal_Equivb_eqdec	40
Coq.FSets.FMapFacts.WFacts_fun.Equal_refl	40	8	search with cache (only 1: split).	0.0205290317535	18
Coq.FSets.FMapFacts.WFacts_fun.Equal_sym	40	0.1.0	search with cache (only 1: red; only 1: intros; only 1: auto with map).	0.0221149921417	4
Coq.FSets.FMapFacts.WFacts_fun.Equal_trans	40	1.5.2.0	search with cache (only 1: unfold Equal; only 1: intros; only 1: rewrite <- H0; only 1: auto with map).	0.704735994339	202
Coq.FSets.FMapFacts.WFacts_fun.Equal_ST	40	2.0	search with cache (only 1: unfold Equal; only 1: auto).	0.0228400230408	4
Coq.FSets.FMapFacts.WFacts_fun.In_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.MapsTo_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.Empty_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.is_empty_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.mem_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.find_m_Proper	40	0.0.0.0.26.1.2	search with cache (only 1: intros; only 1: rewrite eq_option_alt; only 1: rewrite <- H0; only 1: intro e; only 1: rewrite <- 2!find_mapsto_iff; only 1: apply MapsTo_iff; only 1: auto with map).	31.1925799847	21322
Coq.FSets.FMapFacts.WFacts_fun.add_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.remove_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.map_m_Proper	40
Coq.FSets.FMapFacts.WProperties_fun.eqk_equiv	40
Coq.FSets.FMapFacts.WProperties_fun.eqke_equiv	40
Coq.FSets.FMapFacts.WProperties_fun.InA_eqke_eqk	40
Coq.FSets.FMapFacts.WProperties_fun.NoDupA_eqk_eqke	40
Coq.FSets.FMapFacts.WProperties_fun.findA_rev	40
Coq.FSets.FMapFacts.WProperties_fun.elements_Empty	40
Coq.FSets.FMapFacts.WProperties_fun.elements_empty	40
Coq.FSets.FMapFacts.WProperties_fun.of_list_1	40
Coq.FSets.FMapFacts.WProperties_fun.of_list_1b	40
Coq.FSets.FMapFacts.WProperties_fun.of_list_2	40
Coq.FSets.FMapFacts.WProperties_fun.of_list_3	40
Coq.FSets.FMapFacts.WProperties_fun.fold_spec_right	40
Coq.FSets.FMapFacts.WProperties_fun.fold_rec	40
Coq.FSets.FMapFacts.WProperties_fun.fold_rec_bis	40
Coq.FSets.FMapFacts.WProperties_fun.fold_rec_nodep	40	0.1.2.1.1.0	search with cache (only 1: intros A P f i m Hempty Hstep; only 1: apply fold_rec; only 1: intros; only 1: auto; only 1: intros; only 1: auto).	0.620812892914	257
Coq.FSets.FMapFacts.WProperties_fun.fold_rec_weak	40
Coq.FSets.FMapFacts.WProperties_fun.fold_rel	40
Coq.FSets.FMapFacts.WProperties_fun.map_induction	40
Coq.FSets.FMapFacts.WProperties_fun.map_induction_bis	40
Coq.FSets.FMapFacts.WProperties_fun.fold_identity	40
Coq.FSets.FMapFacts.WProperties_fun.fold_init	40
Coq.FSets.FMapFacts.WProperties_fun.fold_Empty	40
Coq.FSets.FMapFacts.WProperties_fun.fold_commutes	40
Coq.FSets.FMapFacts.WProperties_fun.fold_Equal	40
Coq.FSets.FMapFacts.WProperties_fun.fold_Equal2	40
Coq.FSets.FMapFacts.WProperties_fun.fold_Add	40
Coq.FSets.FMapFacts.WProperties_fun.fold_add	40
Coq.FSets.FMapFacts.WProperties_fun.cardinal_fold	40
Coq.FSets.FMapFacts.WProperties_fun.cardinal_Empty	40
Coq.FSets.FMapFacts.WProperties_fun.Equal_cardinal	40
Coq.FSets.FMapFacts.WProperties_fun.cardinal_1	40	17.1.3	search with cache (only 1: intros k; only 1: rewrite cardinal_1, elements_Empty; only 1: now intros ->).	1.47322392464	1381
Coq.FSets.FMapFacts.WProperties_fun.cardinal_2	40
Coq.FSets.FMapFacts.WProperties_fun.cardinal_inv_1	40	0.1.3	search with cache (only 1: intros k; only 1: rewrite <- cardinal_Empty; only 1: auto with map).	0.0637409687042	23
Coq.FSets.FMapFacts.WProperties_fun.cardinal_inv_2	40
Coq.FSets.FMapFacts.WProperties_fun.cardinal_inv_2b	40
Coq.FSets.FMapFacts.WProperties_fun.filter_iff	40
Coq.FSets.FMapFacts.WProperties_fun.for_all_iff	40
Coq.FSets.FMapFacts.WProperties_fun.exists_iff	40
Coq.FSets.FMapFacts.WProperties_fun.Disjoint_alt	40	10.16	search with cache (only 1: intros m1 m2; only 1: firstorder).	25.7828099728	6237
Coq.FSets.FMapFacts.WProperties_fun.partition_iff_1	40
Coq.FSets.FMapFacts.WProperties_fun.partition_iff_2	40
Coq.FSets.FMapFacts.WProperties_fun.partition_Partition	40
Coq.FSets.FMapFacts.WProperties_fun.Partition_In	40
Coq.FSets.FMapFacts.WProperties_fun.Disjoint_sym	40
Coq.FSets.FMapFacts.WProperties_fun.Partition_sym	40
Coq.FSets.FMapFacts.WProperties_fun.Partition_Empty	40
Coq.FSets.FMapFacts.WProperties_fun.Partition_Add	40
Coq.FSets.FMapFacts.WProperties_fun.Partition_fold	40
Coq.FSets.FMapFacts.WProperties_fun.Partition_cardinal	40
Coq.FSets.FMapFacts.WProperties_fun.Partition_partition	40
Coq.FSets.FMapFacts.WProperties_fun.update_mapsto_iff	40
Coq.FSets.FMapFacts.WProperties_fun.update_dec	40
Coq.FSets.FMapFacts.WProperties_fun.update_in_iff	40
Coq.FSets.FMapFacts.WProperties_fun.diff_mapsto_iff	40
Coq.FSets.FMapFacts.WProperties_fun.diff_in_iff	40
Coq.FSets.FMapFacts.WProperties_fun.restrict_mapsto_iff	40
Coq.FSets.FMapFacts.WProperties_fun.restrict_in_iff	40
Coq.FSets.FMapFacts.WProperties_fun.cardinal_m_Proper	40	2.0.0.0.0.0.1.0.0.0.6	search with cache (only 1: set (f := fun (_ : key) (_ : elt) => S); only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: apply fold_Equal with (eqA := eq); only 1: auto; only 1: compute; only 1: auto; only 1: compute; only 1: auto; only 1: compute; only 1: auto).	1.3997900486	959
Coq.FSets.FMapFacts.WProperties_fun.Disjoint_m_Proper	40
Coq.FSets.FMapFacts.WProperties_fun.Partition_m_Proper	40
Coq.FSets.FMapFacts.WProperties_fun.update_m_Proper	40
Coq.FSets.FMapFacts.WProperties_fun.restrict_m_Proper	40
Coq.FSets.FMapFacts.WProperties_fun.diff_m_Proper	40
Coq.FSets.FMapFacts.OrdProperties.sort_equivlistA_eqlistA	40
Coq.FSets.FMapFacts.OrdProperties.gtb_1	40
Coq.FSets.FMapFacts.OrdProperties.leb_1	40	1.2.1.2.1.0.5.0.0	search with cache (only 1: intros (x, e) (y, e'); only 1: unfold gtb, O.ltk; only 1: compute; only 1: destruct (E.compare x y); only 1: intuition; only 1: order; only 1: intuition; only 1: order; only 1: intuition).	10.9004318714	3216
Coq.FSets.FMapFacts.OrdProperties.gtb_compat	40
Coq.FSets.FMapFacts.OrdProperties.leb_compat	40
Coq.FSets.FMapFacts.OrdProperties.elements_split	40
Coq.FSets.FMapFacts.OrdProperties.elements_Add	40
Coq.FSets.FMapFacts.OrdProperties.elements_Add_Above	40
Coq.FSets.FMapFacts.OrdProperties.elements_Add_Below	40
Coq.FSets.FMapFacts.OrdProperties.elements_Equal_eqlistA	40
Coq.FSets.FMapFacts.OrdProperties.max_elt_Above	40
Coq.FSets.FMapFacts.OrdProperties.max_elt_MapsTo	40
Coq.FSets.FMapFacts.OrdProperties.max_elt_Empty	40
Coq.FSets.FMapFacts.OrdProperties.min_elt_Below	40
Coq.FSets.FMapFacts.OrdProperties.min_elt_MapsTo	40
Coq.FSets.FMapFacts.OrdProperties.min_elt_Empty	40
Coq.FSets.FMapFacts.OrdProperties.map_induction_max	40
Coq.FSets.FMapFacts.OrdProperties.map_induction_min	40
Coq.FSets.FMapFacts.OrdProperties.fold_Equal	40
Coq.FSets.FMapFacts.OrdProperties.fold_Add_Above	40
Coq.FSets.FMapFacts.OrdProperties.fold_Add_Below	40
Coq.FSets.FMapWeakList.Raw.empty_1	40	6.1	search with cache (only 1: intros a b; only 1: easy).	0.0327150821686	16
Coq.FSets.FMapWeakList.Raw.empty_NoDup	40	10	search with cache (only 1: left).	0.0154631137848	21
Coq.FSets.FMapWeakList.Raw.is_empty_1	40	1.31	search with cache (only 1: fix odd_spec 1; only 1: eauto).	7.19032001495	1483
Coq.FSets.FMapWeakList.Raw.is_empty_2	40	6.0.0.1	search with cache (only 1: intros m; only 1: case m; only 1: auto; only 1: inversion 1).	0.693912982941	258
Coq.FSets.FMapWeakList.Raw.mem_1	40
Coq.FSets.FMapWeakList.Raw.mem_2	40
Coq.FSets.FMapWeakList.Raw.find_2	40
Coq.FSets.FMapWeakList.Raw.find_1	40
Coq.FSets.FMapWeakList.Raw.find_eq	40
Coq.FSets.FMapWeakList.Raw.add_1	40
Coq.FSets.FMapWeakList.Raw.add_2	40
Coq.FSets.FMapWeakList.Raw.add_3	40
Coq.FSets.FMapWeakList.Raw.add_3'	40
Coq.FSets.FMapWeakList.Raw.add_NoDup	40
Coq.FSets.FMapWeakList.Raw.add_eq	40
Coq.FSets.FMapWeakList.Raw.add_not_eq	40
Coq.FSets.FMapWeakList.Raw.remove_1	40
Coq.FSets.FMapWeakList.Raw.remove_2	40
Coq.FSets.FMapWeakList.Raw.remove_3	40	2.0.1.1.1.0.2.0.0	search with cache (only 1: intros m Hm x y e; only 1: clear Hm; only 1: unfold PX.MapsTo; only 1: functional induction remove x m; only 1: auto; only 1: auto; only 1: inversion_clear 1; only 1: auto; only 1: auto).	11.5564148426	5207
Coq.FSets.FMapWeakList.Raw.remove_3'	40
Coq.FSets.FMapWeakList.Raw.remove_NoDup	40
Coq.FSets.FMapWeakList.Raw.elements_1	40	2.2	search with cache (only 1: intros e' eqfind; only 1: auto).	0.0146310329437	6
Coq.FSets.FMapWeakList.Raw.elements_2	40	0	search with cache (only 1: auto).	0.0106310844421	1
Coq.FSets.FMapWeakList.Raw.elements_3w	40	4.0.2.0	search with cache (only 1: induction m; only 1: intuition; only 1: intros; only 1: auto).	0.157112121582	39
Coq.FSets.FMapWeakList.Raw.fold_1	40
Coq.FSets.FMapWeakList.Raw.submap_1	40
Coq.FSets.FMapWeakList.Raw.submap_2	40
Coq.FSets.FMapWeakList.Raw.equal_1	40
Coq.FSets.FMapWeakList.Raw.equal_2	40
Coq.FSets.FMapWeakList.Raw.map_1	40
Coq.FSets.FMapWeakList.Raw.map_2	40
Coq.FSets.FMapWeakList.Raw.map_NoDup	40
Coq.FSets.FMapWeakList.Raw.mapi_1	40
Coq.FSets.FMapWeakList.Raw.mapi_2	40
Coq.FSets.FMapWeakList.Raw.mapi_NoDup	40
Coq.FSets.FMapWeakList.Raw.fold_right_pair_NoDup	40
Coq.FSets.FMapWeakList.Raw.combine_NoDup	40
Coq.FSets.FMapWeakList.Raw.combine_l_1	40
Coq.FSets.FMapWeakList.Raw.combine_r_1	40
Coq.FSets.FMapWeakList.Raw.combine_1	40
Coq.FSets.FMapWeakList.Raw.map2_NoDup	40
Coq.FSets.FMapWeakList.Raw.map2_0	40
Coq.FSets.FMapWeakList.Raw.map2_1	40
Coq.FSets.FMapWeakList.Raw.map2_2	40
Coq.FSets.FMapWeakList.Make.MapsTo_1	40
Coq.FSets.FMapWeakList.Make.mem_1	40
Coq.FSets.FMapWeakList.Make.mem_2	40
Coq.FSets.FMapWeakList.Make.empty_1	40	1.0.1.0	search with cache (only 1: intros a b; only 1: generalize b; only 1: intro abs; only 1: inversion 1).	0.021418094635	6
Coq.FSets.FMapWeakList.Make.is_empty_1	40
Coq.FSets.FMapWeakList.Make.is_empty_2	40
Coq.FSets.FMapWeakList.Make.add_1	40
Coq.FSets.FMapWeakList.Make.add_2	40
Coq.FSets.FMapWeakList.Make.add_3	40
Coq.FSets.FMapWeakList.Make.remove_1	40
Coq.FSets.FMapWeakList.Make.remove_2	40
Coq.FSets.FMapWeakList.Make.remove_3	40
Coq.FSets.FMapWeakList.Make.find_1	40
Coq.FSets.FMapWeakList.Make.find_2	40
Coq.FSets.FMapWeakList.Make.elements_1	40	0	search with cache (only 1: intuition).	0.0136291980743	1
Coq.FSets.FMapWeakList.Make.elements_2	40	0.0	search with cache (only 1: intros m; only 1: exact (Raw.elements_1 (m:=m))).	0.014622926712	2
Coq.FSets.FMapWeakList.Make.elements_3w	40	9.16	search with cache (only 1: induction m; only 1: trivial).	0.307738780975	841
Coq.FSets.FMapWeakList.Make.cardinal_1	40	5	search with cache (only 1: auto).	0.0198910236359	20
Coq.FSets.FMapWeakList.Make.fold_1	40
Coq.FSets.FMapWeakList.Make.equal_1	40
Coq.FSets.FMapWeakList.Make.equal_2	40
Coq.FSets.FMapWeakList.Make.map_1	40
Coq.FSets.FMapWeakList.Make.map_2	40
Coq.FSets.FMapWeakList.Make.mapi_1	40
Coq.FSets.FMapWeakList.Make.mapi_2	40
Coq.FSets.FMapWeakList.Make.map2_1	40
Coq.FSets.FMapWeakList.Make.map2_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.mem_eq	40	0.0.0.0.0.1.0.2.0	search with cache (only 1: intros; only 1: generalize (mem_iff s x), (mem_iff s y), (In_eq_iff s H); only 1: destruct (mem x s); only 1: destruct (mem y s); only 1: intuition; only 1: intuition; only 1: destruct (mem y s); only 1: intuition; only 1: intuition).	7.14988088608	1268
Coq.FSets.FSetEqProperties.WEqProperties_fun.equal_mem_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.equal_mem_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.subset_mem_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.subset_mem_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.empty_mem	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.is_empty_equal_empty	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.choose_mem_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.choose_mem_2	40	3.1.3	search with cache (only 1: intros; only 1: apply is_empty_1; only 1: auto with set).	0.0381669998169	17
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_mem_1	40	10	search with cache (only 1: intuition).	1.16918587685	451
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_mem_2	40	1.1.0.1.1.0.0.1.0	search with cache (only 1: intros; only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_neq_iff s H); only 1: destruct (mem y s); only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition).	21.8451230526	3481
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_mem_1	40	0.9	search with cache (only 1: rewrite <- not_mem_iff; only 1: auto with set).	1.29867196083	166
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_mem_2	40	0.0.0.5.1.1.0	search with cache (only 1: intros; only 1: generalize (mem_iff (remove x s) y), (mem_iff s y), (remove_neq_iff s H); only 1: destruct (mem y s); only 1: intuition; only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition).	6.24062490463	1329
Coq.FSets.FSetEqProperties.WEqProperties_fun.singleton_equal_add	40	0	search with cache (only 1: auto with set).	0.0107200145721	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_mem	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_mem	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.diff_mem	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.mem_3	40	0.0.0.0	search with cache (only 1: rewrite mem_iff; only 1: destruct (mem x s); only 1: intuition; only 1: intuition).	0.0376877784729	4
Coq.FSets.FSetEqProperties.WEqProperties_fun.mem_4	40	0.0.0.2.0	search with cache (only 1: intros; only 1: rewrite mem_iff; only 1: destruct (mem x s); only 1: intuition; only 1: intuition).	0.0440268516541	7
Coq.FSets.FSetEqProperties.WEqProperties_fun.equal_refl	40	0.2	search with cache (only 1: apply equal_1; only 1: Dec.fsetdec).	0.0213940143585	4
Coq.FSets.FSetEqProperties.WEqProperties_fun.equal_sym	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.equal_trans	40	6.8.3	search with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto).	1.43974304199	645
Coq.FSets.FSetEqProperties.WEqProperties_fun.equal_equal	40	1.2.0	search with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto).	0.021283864975	6
Coq.FSets.FSetEqProperties.WEqProperties_fun.equal_cardinal	40	4.6.1	search with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto).	0.18115901947	108
Coq.FSets.FSetEqProperties.WEqProperties_fun.subset_refl	40	1.1	search with cache (only 1: apply subset_1; only 1: Dec.fsetdec).	0.0194640159607	4
Coq.FSets.FSetEqProperties.WEqProperties_fun.subset_antisym	40	9	search with cache (only 1: auto with set fset).	0.0279521942139	26
Coq.FSets.FSetEqProperties.WEqProperties_fun.subset_trans	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.subset_equal	40	0	search with cache (only 1: auto with set).	0.0102829933167	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.choose_mem_3	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.choose_mem_4	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_mem_3	40	11	search with cache (only 1: auto with set).	3.1080160141	539
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_equal	40	0.1.0	search with cache (only 1: intros; only 1: apply equal_1; only 1: auto with set).	0.0196440219879	4
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_mem_3	40	5.5	search with cache (only 1: generalize (FM.mem_iff (remove x s) y), (FM.mem_iff s y), (FM.remove_iff s x y); only 1: intuition).	3.85756897926	974
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_equal	40	0.5	search with cache (only 1: rewrite <- not_mem_iff; only 1: auto with set).	0.211498975754	65
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_remove	40	3.16	search with cache (only 1: generalize (FM.mem_iff (inter s s') x), (FM.mem_iff s x), (FM.mem_iff s' x), (FM.inter_iff s s' x); only 1: intuition).	9.51870512962	1418
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_add	40	3.9	search with cache (only 1: rewrite <- not_mem_iff; only 1: auto with set).	0.881505012512	321
Coq.FSets.FSetEqProperties.WEqProperties_fun.is_empty_cardinal	40	0.0.0.1.2.0.0.0.1.2.1.3	search with cache (only 1: apply eq_true_iff_eq; only 1: split; only 1: rewrite <- is_empty_iff; only 1: rewrite elements_Empty, cardinal_1; only 1: destruct (elements s); only 1: intuition; only 1: discriminate; only 1: rewrite <- is_empty_iff; only 1: rewrite elements_Empty, cardinal_1; only 1: destruct (elements s); only 1: intuition; only 1: discriminate).	16.9588828087	8160
Coq.FSets.FSetEqProperties.WEqProperties_fun.singleton_mem_1	40	4.3	search with cache (only 1: generalize (FM.mem_iff (singleton x) y), (FM.singleton_iff x y); only 1: intuition).	0.0694789886475	28
Coq.FSets.FSetEqProperties.WEqProperties_fun.singleton_mem_2	40	0.0.0.6	search with cache (only 1: generalize (FM.mem_iff (singleton x) y), (FM.singleton_iff x y); only 1: destruct (mem y (singleton x)); only 1: intuition; only 1: intuition).	2.95285892487	484
Coq.FSets.FSetEqProperties.WEqProperties_fun.singleton_mem_3	40	4.5	search with cache (only 1: generalize (FM.mem_iff (singleton x) y), (FM.singleton_iff x y); only 1: intuition).	2.01153898239	402
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_sym	40	0	search with cache (only 1: intuition).	0.0186660289764	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_subset_equal	40	0	search with cache (only 1: auto with set).	0.0144689083099	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_equal_1	40	0	search with cache (only 1: auto with set).	0.0126957893372	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_equal_2	40	0	search with cache (only 1: auto with set).	0.0123150348663	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_assoc	40	0	search with cache (only 1: auto with set).	0.00957679748535	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_union_singleton	40	2	search with cache (only 1: auto with set).	0.0205070972443	3
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_add	40	0	search with cache (only 1: auto with set).	0.0120677947998	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_subset_1	40	0	search with cache (only 1: auto with set).	0.0106549263	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_subset_2	40	0	search with cache (only 1: auto with set).	0.010665178299	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_subset_3	40	0	search with cache (only 1: auto with set).	0.0172321796417	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_sym	40	0.2	search with cache (only 1: apply equal_1; only 1: Dec.fsetdec).	0.0499670505524	4
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_subset_equal	40	0	search with cache (only 1: auto with set).	0.011293888092	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_equal_1	40	0	search with cache (only 1: auto with set).	0.0110158920288	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_equal_2	40	0	search with cache (only 1: auto with set).	0.0105700492859	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_assoc	40	0	search with cache (only 1: auto with set).	0.0104930400848	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_inter_1	40	1	search with cache (only 1: auto with set).	0.0217921733856	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_inter_2	40	0	search with cache (only 1: auto with set).	0.0101389884949	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_add_1	40	0	search with cache (only 1: auto with set).	0.0119709968567	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_add_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_subset_1	40	0	search with cache (only 1: auto with set).	0.0102679729462	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_subset_2	40	0	search with cache (only 1: auto with set).	0.0094301700592	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_subset_3	40	0	search with cache (only 1: auto with set).	0.0173518657684	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.diff_subset	40	0.0	search with cache (only 1: apply subset_1; only 1: Dec.fsetdec).	0.0273180007935	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.diff_subset_equal	40	0	search with cache (only 1: auto with set).	0.0119860172272	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_inter_singleton	40	0.2	search with cache (only 1: apply equal_1; only 1: Dec.fsetdec).	0.0710589885712	4
Coq.FSets.FSetEqProperties.WEqProperties_fun.diff_inter_empty	40	1	search with cache (only 1: auto with set).	0.0201511383057	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.diff_inter_all	40	0	search with cache (only 1: auto with set).	0.00962901115417	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.set_rec	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.exclusive_set	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.fold_empty	40	0.0	search with cache (only 1: apply fold_1b; only 1: auto with set).	0.0163600444794	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.fold_equal	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.fold_add	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_fold	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_fold_1	40	0.2.2.2.2.0.1	search with cache (only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set).	2.19792485237	1022
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_fold_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.fold_union	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_cardinal_1	40	1	search with cache (only 1: auto with set fset).	0.0539219379425	31
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_cardinal_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_cardinal_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_cardinal_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_cardinal	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.subset_cardinal	40	2.2	search with cache (only 1: intros H a; only 1: auto with set fset).	0.0234091281891	15
Coq.FSets.FSetEqProperties.WEqProperties_fun.Comp'	40	4	search with cache (only 1: solve_proper).	0.0165820121765	5
Coq.FSets.FSetEqProperties.WEqProperties_fun.filter_mem	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.for_all_filter	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.exists_filter	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.partition_filter_1	40	8	search with cache (only 1: auto with *).	0.0310111045837	18
Coq.FSets.FSetEqProperties.WEqProperties_fun.partition_filter_2	40	0	search with cache (only 1: auto with set).	0.0131649971008	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.filter_add_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.filter_add_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_filter_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_filter_2	40	2.1.0.4.0.0.0.1.0.1.1	search with cache (only 1: red; only 1: unfold Add, MP.Add; only 1: intros; only 1: do 2 (rewrite filter_iff; auto); only 1: rewrite H0; only 1: clear H0; only 1: intuition; only 1: assert (f x = f a) by (apply Comp; auto); only 1: rewrite H in H1; only 1: rewrite H2 in H1; only 1: discriminate).	33.7594819069	7841
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_filter	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.filter_union	40	0.0.0.1.4.0.1.0.1	search with cache (only 1: red; only 1: intros; only 1: set_iff; only 1: repeat rewrite filter_iff; only 1: set_iff; only 1: intuition; only 1: auto; only 1: auto; only 1: auto).	5.37778282166	1110
Coq.FSets.FSetEqProperties.WEqProperties_fun.for_all_mem_1	40	14.1.0.0.0.0	search with cache (only 1: intros; only 1: apply for_all_1; only 1: auto; only 1: red; only 1: intros; only 1: intuition).	5.58390283585	3036
Coq.FSets.FSetEqProperties.WEqProperties_fun.for_all_mem_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.for_all_mem_3	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.for_all_mem_4	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.for_all_exists	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Comp'	40	2.1.1.13	search with cache (only 1: repeat red; only 1: intros; only 1: f_equal; only 1: auto).	0.356621980667	436
Coq.FSets.FSetEqProperties.WEqProperties_fun.exists_mem_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.exists_mem_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.exists_mem_3	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.exists_mem_4	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.sum_plus	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.sum_filter	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.fold_compat	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.sum_compat	40
Coq.FSets.FSetBridge.DepOfNodep.empty	40
Coq.FSets.FSetBridge.DepOfNodep.is_empty	40
Coq.FSets.FSetBridge.DepOfNodep.mem	40
Coq.FSets.FSetBridge.DepOfNodep.add	40
Coq.FSets.FSetBridge.DepOfNodep.singleton	40	205.0	search with cache (only 1: intuition; only 1: eauto with *).	20.1462059021	151393
Coq.FSets.FSetBridge.DepOfNodep.remove	40
Coq.FSets.FSetBridge.DepOfNodep.union	40
Coq.FSets.FSetBridge.DepOfNodep.inter	40
Coq.FSets.FSetBridge.DepOfNodep.diff	40
Coq.FSets.FSetBridge.DepOfNodep.equal	40
Coq.FSets.FSetBridge.DepOfNodep.subset	40
Coq.FSets.FSetBridge.DepOfNodep.elements	40	7.3.23	search with cache (only 1: compute; only 1: intros; only 1: eauto with set).	2.82569909096	2507
Coq.FSets.FSetBridge.DepOfNodep.fold	40	7.18.11	search with cache (only 1: simpl; only 1: intro x; only 1: eauto with set).	2.12828397751	5432
Coq.FSets.FSetBridge.DepOfNodep.cardinal	40	10.10.51	search with cache (only 1: intro x; only 1: simpl in *; only 1: eauto with set).	4.54298996925	23243
Coq.FSets.FSetBridge.DepOfNodep.compat_P_aux	40
Coq.FSets.FSetBridge.DepOfNodep.filter	40
Coq.FSets.FSetBridge.DepOfNodep.for_all	40
Coq.FSets.FSetBridge.DepOfNodep.exists_	40
Coq.FSets.FSetBridge.DepOfNodep.partition	40
Coq.FSets.FSetBridge.DepOfNodep.choose_aux	40
Coq.FSets.FSetBridge.DepOfNodep.choose	40
Coq.FSets.FSetBridge.DepOfNodep.choose_ok1	40
Coq.FSets.FSetBridge.DepOfNodep.choose_ok2	40
Coq.FSets.FSetBridge.DepOfNodep.choose_equal	40
Coq.FSets.FSetBridge.DepOfNodep.min_elt	40
Coq.FSets.FSetBridge.DepOfNodep.max_elt	40
Coq.FSets.FSetBridge.NodepOfDep.empty_1	40
Coq.FSets.FSetBridge.NodepOfDep.is_empty_1	40
Coq.FSets.FSetBridge.NodepOfDep.is_empty_2	40
Coq.FSets.FSetBridge.NodepOfDep.mem_1	40
Coq.FSets.FSetBridge.NodepOfDep.mem_2	40
Coq.FSets.FSetBridge.NodepOfDep.equal_1	40
Coq.FSets.FSetBridge.NodepOfDep.equal_2	40	3.0.1.0.0.2.13	search with cache (only 1: intro z; only 1: intro s; only 1: unfold equal; only 1: case M.equal; only 1: intuition; only 1: intuition; only 1: discriminate H).	12.5767538548	13446
Coq.FSets.FSetBridge.NodepOfDep.subset_1	40
Coq.FSets.FSetBridge.NodepOfDep.subset_2	40	2.0.0.0.0.2	search with cache (only 1: intros s s'; only 1: unfold subset; only 1: case M.subset; only 1: intuition; only 1: intuition; only 1: inversion H).	0.0706820487976	29
Coq.FSets.FSetBridge.NodepOfDep.choose_1	40
Coq.FSets.FSetBridge.NodepOfDep.choose_2	40
Coq.FSets.FSetBridge.NodepOfDep.choose_3	40
Coq.FSets.FSetBridge.NodepOfDep.elements_1	40
Coq.FSets.FSetBridge.NodepOfDep.elements_2	40	1.0.0.0.0.3	search with cache (only 1: intros s x; only 1: unfold elements; only 1: case (M.elements s); only 1: case (M.elements s); only 1: case (M.elements s); only 1: firstorder).	1.72364282608	144
Coq.FSets.FSetBridge.NodepOfDep.elements_3	40
Coq.FSets.FSetBridge.NodepOfDep.elements_3w	40	9.0	search with cache (only 1: intros; only 1: intuition).	0.0280361175537	30
Coq.FSets.FSetBridge.NodepOfDep.min_elt_1	40
Coq.FSets.FSetBridge.NodepOfDep.min_elt_2	40
Coq.FSets.FSetBridge.NodepOfDep.min_elt_3	40
Coq.FSets.FSetBridge.NodepOfDep.max_elt_1	40
Coq.FSets.FSetBridge.NodepOfDep.max_elt_2	40
Coq.FSets.FSetBridge.NodepOfDep.max_elt_3	40
Coq.FSets.FSetBridge.NodepOfDep.add_1	40
Coq.FSets.FSetBridge.NodepOfDep.add_2	40	0.0.0.0.0	search with cache (only 1: intros; only 1: unfold add; only 1: case (M.add x s); only 1: unfold Add; only 1: firstorder).	0.0253050327301	5
Coq.FSets.FSetBridge.NodepOfDep.add_3	40	0.0.0.0.2	search with cache (only 1: intros s x; only 1: unfold add; only 1: case (M.add x s); only 1: unfold Add; only 1: firstorder).	0.145128965378	57
Coq.FSets.FSetBridge.NodepOfDep.remove_1	40
Coq.FSets.FSetBridge.NodepOfDep.remove_2	40	1.0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: unfold remove; only 1: case (M.remove x s); only 1: case (M.remove x s); only 1: case (M.remove x s); only 1: case (M.remove x s); only 1: case (M.remove x s); only 1: case (M.remove x s); only 1: firstorder).	0.0617289543152	11
Coq.FSets.FSetBridge.NodepOfDep.remove_3	40	1.0.0.0.0.0.2	search with cache (only 1: intros s x y; only 1: unfold remove; only 1: case (M.remove x s); only 1: case (M.remove x s); only 1: case (M.remove x s); only 1: case (M.remove x s); only 1: firstorder).	0.0856671333313	33
Coq.FSets.FSetBridge.NodepOfDep.singleton_1	40
Coq.FSets.FSetBridge.NodepOfDep.singleton_2	40	1.0.0.0.0.0.0.0.0	search with cache (only 1: intros x y; only 1: unfold singleton; only 1: case (M.singleton x); only 1: case (M.singleton x); only 1: case (M.singleton x); only 1: case (M.singleton x); only 1: case (M.singleton x); only 1: case (M.singleton x); only 1: firstorder).	0.0525059700012	11
Coq.FSets.FSetBridge.NodepOfDep.union_1	40
Coq.FSets.FSetBridge.NodepOfDep.union_2	40	1.0.0.0.0.0.0.0.0	search with cache (only 1: intros s s' x; only 1: unfold union; only 1: case (M.union s s'); only 1: case (M.union s s'); only 1: case (M.union s s'); only 1: case (M.union s s'); only 1: case (M.union s s'); only 1: case (M.union s s'); only 1: firstorder).	0.0553288459778	11
Coq.FSets.FSetBridge.NodepOfDep.union_3	40	1.0.0.0.0.0.0.0.0	search with cache (only 1: intros s s' x; only 1: unfold union; only 1: case (M.union s s'); only 1: case (M.union s s'); only 1: case (M.union s s'); only 1: case (M.union s s'); only 1: case (M.union s s'); only 1: case (M.union s s'); only 1: firstorder).	0.0559620857239	11
Coq.FSets.FSetBridge.NodepOfDep.inter_1	40
Coq.FSets.FSetBridge.NodepOfDep.inter_2	40	1.0.0.0.0.0.0.0.0	search with cache (only 1: intros s s' x; only 1: unfold inter; only 1: case (M.inter s s'); only 1: case (M.inter s s'); only 1: case (M.inter s s'); only 1: case (M.inter s s'); only 1: case (M.inter s s'); only 1: case (M.inter s s'); only 1: firstorder).	0.057520866394	11
Coq.FSets.FSetBridge.NodepOfDep.inter_3	40	1.0.0.0.0.0.0.0.0	search with cache (only 1: intros s s' x; only 1: unfold inter; only 1: case (M.inter s s'); only 1: case (M.inter s s'); only 1: case (M.inter s s'); only 1: case (M.inter s s'); only 1: case (M.inter s s'); only 1: case (M.inter s s'); only 1: firstorder).	0.0586898326874	11
Coq.FSets.FSetBridge.NodepOfDep.diff_1	40
Coq.FSets.FSetBridge.NodepOfDep.diff_2	40	1.0.0.0.0.0.0.0.0	search with cache (only 1: intros s s' x; only 1: unfold diff; only 1: case (M.diff s s'); only 1: case (M.diff s s'); only 1: case (M.diff s s'); only 1: case (M.diff s s'); only 1: case (M.diff s s'); only 1: case (M.diff s s'); only 1: firstorder).	0.214051961899	11
Coq.FSets.FSetBridge.NodepOfDep.diff_3	40	1.0.0.0.0.0.0.0.0	search with cache (only 1: intros s s' x; only 1: unfold diff; only 1: case (M.diff s s'); only 1: case (M.diff s s'); only 1: case (M.diff s s'); only 1: case (M.diff s s'); only 1: case (M.diff s s'); only 1: case (M.diff s s'); only 1: firstorder).	0.214522838593	11
Coq.FSets.FSetBridge.NodepOfDep.cardinal_1	40
Coq.FSets.FSetBridge.NodepOfDep.fold_1	40
Coq.FSets.FSetBridge.NodepOfDep.f_dec	40	0	search with cache (only 1: decide equality).	0.0159327983856	1
Coq.FSets.FSetBridge.NodepOfDep.compat_P_aux	40	23.0.22.0	search with cache (only 1: intros; only 1: intro s; only 1: intros; only 1: now rewrite H).	24.3248329163	32920
Coq.FSets.FSetBridge.NodepOfDep.filter_1	40
Coq.FSets.FSetBridge.NodepOfDep.filter_2	40	2.0.0.1.0.0.0	search with cache (only 1: intros s x f; only 1: unfold filter; only 1: destruct M.filter as (x0, Hiff); only 1: intuition; only 1: generalize (Hiff (compat_P_aux H)); only 1: generalize (Hiff (compat_P_aux H)); only 1: firstorder).	0.478963136673	14
Coq.FSets.FSetBridge.NodepOfDep.filter_3	40	2.0.0.1.0.0.0	search with cache (only 1: intros s x f; only 1: unfold filter; only 1: destruct M.filter as (x0, Hiff); only 1: intuition; only 1: generalize (Hiff (compat_P_aux H)); only 1: generalize (Hiff (compat_P_aux H)); only 1: firstorder).	0.472771883011	14
Coq.FSets.FSetBridge.NodepOfDep.for_all_1	40
Coq.FSets.FSetBridge.NodepOfDep.for_all_2	40	7.0.0.0.0	search with cache (only 1: intros s f; only 1: unfold for_all; only 1: case M.for_all; only 1: intuition; only 1: firstorder).	1.1074078083	533
Coq.FSets.FSetBridge.NodepOfDep.exists_1	40
Coq.FSets.FSetBridge.NodepOfDep.exists_2	40	2.0.1.0.0.0	search with cache (only 1: intros s f; only 1: unfold exists_; only 1: case M.exists_; only 1: intuition; only 1: intuition; only 1: inversion H0).	0.0469179153442	9
Coq.FSets.FSetBridge.NodepOfDep.partition_1	40
Coq.FSets.FSetBridge.NodepOfDep.partition_2	40
Coq.FSets.FSetProperties.WProperties_fun.In_dec	40	0.0.0.6.0	search with cache (only 1: intros; only 1: generalize (F.mem_iff s x); only 1: destruct (mem x s); only 1: intuition; only 1: intuition).	0.595400094986	57
Coq.FSets.FSetProperties.WProperties_fun.Add_Equal	40
Coq.FSets.FSetProperties.WProperties_fun.equal_refl	40	0.0.0	search with cache (only 1: split; only 1: intuition; only 1: intuition).	0.0265769958496	3
Coq.FSets.FSetProperties.WProperties_fun.equal_sym	40	3.2	search with cache (only 1: intros; only 1: intuition).	0.0220341682434	7
Coq.FSets.FSetProperties.WProperties_fun.equal_trans	40
Coq.FSets.FSetProperties.WProperties_fun.subset_refl	40	3.1.0.1	search with cache (only 1: apply subset_2; only 1: apply subset_1; only 1: apply subset_2; only 1: intuition).	0.07923412323	16
Coq.FSets.FSetProperties.WProperties_fun.subset_trans	40	0	search with cache (only 1: fsetdec).	0.0469920635223	1
Coq.FSets.FSetProperties.WProperties_fun.subset_antisym	40	0.0.2	search with cache (only 1: split; only 1: intuition; only 1: intuition).	0.0292861461639	5
Coq.FSets.FSetProperties.WProperties_fun.subset_equal	40	0	search with cache (only 1: fsetdec).	0.0409729480743	1
Coq.FSets.FSetProperties.WProperties_fun.subset_empty	40	1	search with cache (only 1: fsetdec).	0.0293650627136	2
Coq.FSets.FSetProperties.WProperties_fun.subset_remove_3	40	0	search with cache (only 1: fsetdec).	0.0537459850311	1
Coq.FSets.FSetProperties.WProperties_fun.subset_diff	40	0	search with cache (only 1: fsetdec).	0.0534198284149	1
Coq.FSets.FSetProperties.WProperties_fun.subset_add_3	40	0	search with cache (only 1: fsetdec).	0.0746178627014	1
Coq.FSets.FSetProperties.WProperties_fun.subset_add_2	40	0	search with cache (only 1: fsetdec).	0.0475370883942	1
Coq.FSets.FSetProperties.WProperties_fun.in_subset	40	0	search with cache (only 1: fsetdec).	0.0422308444977	1
Coq.FSets.FSetProperties.WProperties_fun.double_inclusion	40	0.0.0.2.2.8	search with cache (only 1: red; only 1: constructor; only 1: constructor; only 1: fsetdec; only 1: fsetdec; only 1: fsetdec).	1.14719986916	181
Coq.FSets.FSetProperties.WProperties_fun.empty_is_empty_1	40	0	search with cache (only 1: fsetdec).	0.0568149089813	1
Coq.FSets.FSetProperties.WProperties_fun.empty_is_empty_2	40	0	search with cache (only 1: fsetdec).	0.0465931892395	1
Coq.FSets.FSetProperties.WProperties_fun.add_equal	40	1.0.0	search with cache (only 1: red; only 1: intros; only 1: fsetdec).	0.0872130393982	4
Coq.FSets.FSetProperties.WProperties_fun.add_add	40	0	search with cache (only 1: fsetdec).	0.277758836746	1
Coq.FSets.FSetProperties.WProperties_fun.remove_equal	40	1	search with cache (only 1: fsetdec).	0.108448982239	2
Coq.FSets.FSetProperties.WProperties_fun.Equal_remove	40	0	search with cache (only 1: fsetdec).	0.124649047852	1
Coq.FSets.FSetProperties.WProperties_fun.add_remove	40	0	search with cache (only 1: fsetdec).	0.266630172729	1
Coq.FSets.FSetProperties.WProperties_fun.remove_add	40	0	search with cache (only 1: fsetdec).	0.477262020111	1
Coq.FSets.FSetProperties.WProperties_fun.singleton_equal_add	40	1	search with cache (only 1: fsetdec).	0.0870070457458	2
Coq.FSets.FSetProperties.WProperties_fun.remove_singleton_empty	40	0	search with cache (only 1: fsetdec).	0.42233300209	1
Coq.FSets.FSetProperties.WProperties_fun.union_sym	40	4	search with cache (only 1: fsetdec).	0.0889549255371	5
Coq.FSets.FSetProperties.WProperties_fun.union_subset_equal	40	0	search with cache (only 1: fsetdec).	0.0777649879456	1
Coq.FSets.FSetProperties.WProperties_fun.union_equal_1	40	0	search with cache (only 1: fsetdec).	0.108038902283	1
Coq.FSets.FSetProperties.WProperties_fun.union_equal_2	40	0	search with cache (only 1: fsetdec).	0.108310937881	1
Coq.FSets.FSetProperties.WProperties_fun.union_assoc	40	0	search with cache (only 1: fsetdec).	0.161321163177	1
Coq.FSets.FSetProperties.WProperties_fun.add_union_singleton	40	0	search with cache (only 1: fsetdec).	0.0923368930817	1
Coq.FSets.FSetProperties.WProperties_fun.union_add	40	0	search with cache (only 1: fsetdec).	0.174420118332	1
Coq.FSets.FSetProperties.WProperties_fun.union_remove_add_1	40	0	search with cache (only 1: fsetdec).	0.306322097778	1
Coq.FSets.FSetProperties.WProperties_fun.union_remove_add_2	40	0	search with cache (only 1: fsetdec).	0.269716024399	1
Coq.FSets.FSetProperties.WProperties_fun.union_subset_1	40	0	search with cache (only 1: fsetdec).	0.0372681617737	1
Coq.FSets.FSetProperties.WProperties_fun.union_subset_2	40	0	search with cache (only 1: fsetdec).	0.0391170978546	1
Coq.FSets.FSetProperties.WProperties_fun.union_subset_3	40	2	search with cache (only 1: fsetdec).	0.0577368736267	3
Coq.FSets.FSetProperties.WProperties_fun.union_subset_4	40	0	search with cache (only 1: fsetdec).	0.059308052063	1
Coq.FSets.FSetProperties.WProperties_fun.union_subset_5	40	0	search with cache (only 1: fsetdec).	0.0592510700226	1
Coq.FSets.FSetProperties.WProperties_fun.empty_union_1	40	0	search with cache (only 1: fsetdec).	0.078027009964	1
Coq.FSets.FSetProperties.WProperties_fun.empty_union_2	40	0	search with cache (only 1: fsetdec).	0.0718450546265	1
Coq.FSets.FSetProperties.WProperties_fun.not_in_union	40	8	search with cache (only 1: fsetdec).	0.869123935699	156
Coq.FSets.FSetProperties.WProperties_fun.inter_sym	40	0.0.0.0.2	search with cache (only 1: split; only 1: do 2 rewrite inter_iff; only 1: tauto; only 1: do 2 rewrite inter_iff; only 1: tauto).	0.0733330249786	7
Coq.FSets.FSetProperties.WProperties_fun.inter_subset_equal	40	2	search with cache (only 1: fsetdec).	0.072566986084	3
Coq.FSets.FSetProperties.WProperties_fun.inter_equal_1	40	0	search with cache (only 1: fsetdec).	0.0980350971222	1
Coq.FSets.FSetProperties.WProperties_fun.inter_equal_2	40	0	search with cache (only 1: fsetdec).	0.102425813675	1
Coq.FSets.FSetProperties.WProperties_fun.inter_assoc	40	0	search with cache (only 1: fsetdec).	0.14109992981	1
Coq.FSets.FSetProperties.WProperties_fun.union_inter_1	40	0	search with cache (only 1: fsetdec).	0.188857078552	1
Coq.FSets.FSetProperties.WProperties_fun.union_inter_2	40	0	search with cache (only 1: fsetdec).	0.202594995499	1
Coq.FSets.FSetProperties.WProperties_fun.inter_add_1	40	6.1	search with cache (only 1: intuition; only 1: fsetdec).	0.219038009644	14
Coq.FSets.FSetProperties.WProperties_fun.inter_add_2	40	0	search with cache (only 1: fsetdec).	0.140866994858	1
Coq.FSets.FSetProperties.WProperties_fun.empty_inter_1	40	3	search with cache (only 1: fsetdec).	0.0524981021881	4
Coq.FSets.FSetProperties.WProperties_fun.empty_inter_2	40	0	search with cache (only 1: fsetdec).	0.0505559444427	1
Coq.FSets.FSetProperties.WProperties_fun.inter_subset_1	40	0	search with cache (only 1: fsetdec).	0.0378639698029	1
Coq.FSets.FSetProperties.WProperties_fun.inter_subset_2	40	0	search with cache (only 1: fsetdec).	0.037367105484	1
Coq.FSets.FSetProperties.WProperties_fun.inter_subset_3	40	0	search with cache (only 1: fsetdec).	0.0533931255341	1
Coq.FSets.FSetProperties.WProperties_fun.empty_diff_1	40	4	search with cache (only 1: fsetdec).	0.0648329257965	5
Coq.FSets.FSetProperties.WProperties_fun.empty_diff_2	40	0	search with cache (only 1: fsetdec).	0.0741651058197	1
Coq.FSets.FSetProperties.WProperties_fun.diff_subset	40	1	search with cache (only 1: fsetdec).	0.0417230129242	2
Coq.FSets.FSetProperties.WProperties_fun.diff_subset_equal	40	0	search with cache (only 1: fsetdec).	0.110542058945	1
Coq.FSets.FSetProperties.WProperties_fun.remove_diff_singleton	40	0	search with cache (only 1: fsetdec).	0.101957082748	1
Coq.FSets.FSetProperties.WProperties_fun.diff_inter_empty	40	0	search with cache (only 1: fsetdec).	0.170621871948	1
Coq.FSets.FSetProperties.WProperties_fun.diff_inter_all	40	0	search with cache (only 1: fsetdec).	0.142235994339	1
Coq.FSets.FSetProperties.WProperties_fun.Add_add	40	1.10.8	search with cache (only 1: split; only 1: fsetdec; only 1: intuition).	1.64053893089	671
Coq.FSets.FSetProperties.WProperties_fun.Add_remove	40	8.1.22	search with cache (only 1: red; only 1: intros; only 1: fsetdec).	3.84535813332	1172
Coq.FSets.FSetProperties.WProperties_fun.union_Add	40
Coq.FSets.FSetProperties.WProperties_fun.inter_Add	40	0.2	search with cache (only 1: expAdd; only 1: fsetdec).	0.371365070343	4
Coq.FSets.FSetProperties.WProperties_fun.union_Equal	40	0.0	search with cache (only 1: expAdd; only 1: fsetdec).	0.321925878525	2
Coq.FSets.FSetProperties.WProperties_fun.inter_Add_2	40	0.0	search with cache (only 1: expAdd; only 1: fsetdec).	0.269273996353	2
Coq.FSets.FSetProperties.WProperties_fun.elements_Empty	40
Coq.FSets.FSetProperties.WProperties_fun.elements_empty	40
Coq.FSets.FSetProperties.WProperties_fun.of_list_1	40
Coq.FSets.FSetProperties.WProperties_fun.of_list_2	40
Coq.FSets.FSetProperties.WProperties_fun.of_list_3	40
Coq.FSets.FSetProperties.WProperties_fun.fold_spec_right	40
Coq.FSets.FSetProperties.WProperties_fun.fold_rec	40
Coq.FSets.FSetProperties.WProperties_fun.fold_rec_bis	40
Coq.FSets.FSetProperties.WProperties_fun.fold_rec_nodep	40	1.0.0.0.1.0	search with cache (only 1: intros A P f i s Pempty Pstep; only 1: apply fold_rec; only 1: auto with *; only 1: intros; only 1: rewrite Add_Equal in H1; only 1: auto with set).	0.207182168961	66
Coq.FSets.FSetProperties.WProperties_fun.fold_rec_weak	40
Coq.FSets.FSetProperties.WProperties_fun.fold_rel	40
Coq.FSets.FSetProperties.WProperties_fun.set_induction	40
Coq.FSets.FSetProperties.WProperties_fun.set_induction_bis	40
Coq.FSets.FSetProperties.WProperties_fun.fold_identity	40	0.2.2.2.0.6.13	search with cache (only 1: intros a b; only 1: red; only 1: apply fold_rec_bis; only 1: intros; only 1: fsetdec; only 1: intuition; only 1: fsetdec).	7.38507509232	5889
Coq.FSets.FSetProperties.WProperties_fun.fold_0	40
Coq.FSets.FSetProperties.WProperties_fun.fold_1	40	1.0.0.0.3.2.3.2	search with cache (only 1: intro x; only 1: intros s Hsame; only 1: destruct 1; only 1: intros; only 1: apply fold_rec_bis; only 1: eauto; only 1: eauto; only 1: fsetdec).	3.94546294212	2727
Coq.FSets.FSetProperties.WProperties_fun.fold_2	40
Coq.FSets.FSetProperties.WProperties_fun.fold_1b	40	6.1.5.2	search with cache (only 1: intros; only 1: apply fold_rec; only 1: eauto; only 1: fsetdec).	3.61000990868	2363
Coq.FSets.FSetProperties.WProperties_fun.fold_commutes	40
Coq.FSets.FSetProperties.WProperties_fun.fold_init	40
Coq.FSets.FSetProperties.WProperties_fun.fold_equal	40
Coq.FSets.FSetProperties.WProperties_fun.fold_empty	40	3.3.5.6	search with cache (only 1: intros; only 1: apply fold_1; only 1: auto with *; only 1: auto with *).	4.05656599998	2240
Coq.FSets.FSetProperties.WProperties_fun.fold_add	40	1.2.2.2.2.0.2.1	search with cache (only 1: symmetry; only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto with *; only 1: auto with *; only 1: auto with *; only 1: auto with *; only 1: auto with *).	2.99302196503	2150
Coq.FSets.FSetProperties.WProperties_fun.add_fold	40
Coq.FSets.FSetProperties.WProperties_fun.remove_fold_1	40	2.3.2.2.2.0.2	search with cache (only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto with *; only 1: auto with *; only 1: auto with *; only 1: auto with *; only 1: auto with *).	5.53316402435	4283
Coq.FSets.FSetProperties.WProperties_fun.remove_fold_2	40	0.8.0	search with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set).	0.470985889435	140
Coq.FSets.FSetProperties.WProperties_fun.fold_union_inter	40
Coq.FSets.FSetProperties.WProperties_fun.fold_diff_inter	40
Coq.FSets.FSetProperties.WProperties_fun.fold_union	40
Coq.FSets.FSetProperties.WProperties_fun.fold_plus	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_fold	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_0	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_1	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_2	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_Empty	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_inv_1	40	29.1.10	search with cache (only 1: intro n; only 1: rewrite elements_Empty, M.cardinal_1; only 1: apply length_zero_iff_nil).	21.5108129978	18120
Coq.FSets.FSetProperties.WProperties_fun.cardinal_inv_2	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_inv_2b	40	0.0.2.0.0.0.0	search with cache (only 1: intros; only 1: rewrite M.cardinal_1 in H; only 1: generalize (elements_2 (s:=s)); only 1: destruct (elements s); only 1: intuition; only 1: exists e; only 1: auto).	0.135462999344	16
Coq.FSets.FSetProperties.WProperties_fun.Equal_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_m_Proper	40
Coq.FSets.FSetProperties.WProperties_fun.empty_cardinal	40	0.0.0.2	search with cache (only 1: rewrite cardinal_fold; only 1: apply fold_1; only 1: auto with fset; only 1: auto with set).	0.0368421077728	6
Coq.FSets.FSetProperties.WProperties_fun.singleton_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.diff_inter_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.union_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.subset_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.subset_cardinal_lt	40
Coq.FSets.FSetProperties.WProperties_fun.union_inter_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.union_cardinal_inter	40
Coq.FSets.FSetProperties.WProperties_fun.union_cardinal_le	40	2.1.9.0	search with cache (only 1: intros; only 1: generalize (cardinal_inv_2 (s:=s)); only 1: rewrite <- union_inter_cardinal; only 1: auto with arith).	1.36971306801	710
Coq.FSets.FSetProperties.WProperties_fun.add_cardinal_1	40	4.0.1	search with cache (only 1: intro; only 1: generalize (cardinal_inv_2 (s:=s)); only 1: intuition).	0.524511814117	87
Coq.FSets.FSetProperties.WProperties_fun.add_cardinal_2	40	1.0.3.0.0.0.0.0.0.1	search with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: change_no_check S with ((fun _ => S) x); only 1: apply fold_2; only 1: auto with fset; only 1: auto with fset; only 1: auto with fset; only 1: intuition; only 1: expAdd; only 1: auto with set).	3.42601394653	1142
Coq.FSets.FSetProperties.WProperties_fun.remove_cardinal_1	40	0.0.0.0.5.3	search with cache (only 1: intros; only 1: rewrite (cardinal_2 (s:=remove x s) (s':=s) (x:=x)); only 1: eauto with set; only 1: auto with set; only 1: expAdd; only 1: fsetdec).	0.535202026367	158
Coq.FSets.FSetProperties.WProperties_fun.remove_cardinal_2	40	4	search with cache (only 1: auto with set fset).	0.179067850113	46
Coq.FSets.FSetProperties.OrdProperties.sort_equivlistA_eqlistA	40
Coq.FSets.FSetProperties.OrdProperties.gtb_1	40
Coq.FSets.FSetProperties.OrdProperties.leb_1	40
Coq.FSets.FSetProperties.OrdProperties.gtb_compat	40	3.1.2.1.2.0.1.0.21.12	search with cache (only 1: intros m Hm; only 1: intros; only 1: unfold gtb; only 1: ME.elim_comp; only 1: ME.elim_comp; only 1: intuition; only 1: ME.elim_comp; only 1: intuition; only 1: ME.elim_comp; only 1: intuition).	32.3061380386	6072
Coq.FSets.FSetProperties.OrdProperties.leb_compat	40
Coq.FSets.FSetProperties.OrdProperties.elements_split	40
Coq.FSets.FSetProperties.OrdProperties.elements_Add	40
Coq.FSets.FSetProperties.OrdProperties.elements_Add_Above	40
Coq.FSets.FSetProperties.OrdProperties.elements_Add_Below	40
Coq.FSets.FSetProperties.OrdProperties.set_induction_max	40
Coq.FSets.FSetProperties.OrdProperties.set_induction_min	40
Coq.FSets.FSetProperties.OrdProperties.fold_3	40
Coq.FSets.FSetProperties.OrdProperties.fold_4	40
Coq.FSets.FSetProperties.OrdProperties.fold_equal	40
Coq.FSets.FSetProperties.OrdProperties.add_fold	40	0.1.0	search with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).	0.0347940921783	4
Coq.FSets.FSetProperties.OrdProperties.remove_fold_2	40	0.0.0	search with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).	0.0316390991211	3
Coq.FSets.FSetProperties.OrdProperties.choose_equal	40
Coq.FSets.FSetDecide.WDecide_fun.FSetLogicalFacts.test_push	40	2.0	search with cache (only 1: unfold decidable; only 1: intuition).	1.99576187134	4
Coq.FSets.FSetDecide.WDecide_fun.FSetLogicalFacts.test_pull	40	0.0.0	search with cache (only 1: intros; only 1: push not in *; only 1: tauto).	0.237185955048	3
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideAuxiliary.eq_refl_iff	40	2.2.0	search with cache (only 1: split; only 1: intuition; only 1: intuition).	0.0259490013123	7
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideAuxiliary.dec_In	40
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideAuxiliary.dec_eq	40
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_trans_1	40
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_trans_2	40
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_neq_trans_1	40	1	search with cache (only 1: fsetdec).	0.13557600975	17
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_neq_trans_2	40	0	search with cache (only 1: fsetdec).	0.231602907181	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_In_singleton	40	0	search with cache (only 1: fsetdec).	0.0301370620728	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_add_In	40	2	search with cache (only 1: fsetdec).	0.0585539340973	3
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_Subset_add_remove	40	0.0	search with cache (only 1: unfold Subset; only 1: fsetdec).	0.0660350322723	2
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_disjunction	40	1	search with cache (only 1: fsetdec).	0.0901749134064	2
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_not_In_disj	40	0	search with cache (only 1: fsetdec).	0.240377187729	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_not_In_conj	40	0	search with cache (only 1: fsetdec).	0.141276836395	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_iff_conj	40	0	search with cache (only 1: fsetdec).	0.0735678672791	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_set_ops_1	40	0	search with cache (only 1: fsetdec).	0.338771104813	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.eq_chain_test	40	0	search with cache (only 1: fsetdec).	0.275284051895	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_too_complex	40	2.1.1	search with cache (only 1: unfold Subset; only 1: intros x y H s s' H0 a; only 1: intuition).	0.244711875916	15
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.function_test_1	40	1	search with cache (only 1: fsetdec).	0.112399816513	17
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.function_test_2	40	0	search with cache (only 1: fsetdec).	0.0872452259064	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_baydemir	40	0	search with cache (only 1: fsetdec).	0.0704200267792	1
Coq.FSets.FMapList.Raw.empty_1	40	11	search with cache (only 1: now f_equal).	0.768067836761	155
Coq.FSets.FMapList.Raw.empty_sorted	40	13	search with cache (only 1: constructor).	0.0245378017426	66
Coq.FSets.FMapList.Raw.is_empty_1	40	3.43	search with cache (only 1: fix odd_spec 1; only 1: auto with ordered_type).	27.9433071613	4288
Coq.FSets.FMapList.Raw.is_empty_2	40	3.18	search with cache (only 1: fix odd_spec 1; only 1: auto).	35.4950339794	5134
Coq.FSets.FMapList.Raw.mem_1	40
Coq.FSets.FMapList.Raw.mem_2	40
Coq.FSets.FMapList.Raw.find_2	40
Coq.FSets.FMapList.Raw.find_1	40
Coq.FSets.FMapList.Raw.add_1	40
Coq.FSets.FMapList.Raw.add_2	40
Coq.FSets.FMapList.Raw.add_3	40
Coq.FSets.FMapList.Raw.add_Inf	40
Coq.FSets.FMapList.Raw.add_sorted	40
Coq.FSets.FMapList.Raw.remove_1	40
Coq.FSets.FMapList.Raw.remove_2	40
Coq.FSets.FMapList.Raw.remove_3	40
Coq.FSets.FMapList.Raw.remove_Inf	40
Coq.FSets.FMapList.Raw.remove_sorted	40	0.0.0.0.2.2.0.0.1.2	search with cache (only 1: induction m; only 1: intuition; only 1: intros; only 1: destruct a as (x'', e''); only 1: simpl; only 1: inversion_clear Hm; only 1: case (X.compare x x''); only 1: intuition; only 1: intuition; only 1: intuition).	6.50200390816	2940
Coq.FSets.FMapList.Raw.elements_1	40	0	search with cache (only 1: auto).	0.0081729888916	1
Coq.FSets.FMapList.Raw.elements_2	40	0	search with cache (only 1: auto).	0.00757598876953	1
Coq.FSets.FMapList.Raw.elements_3	40	1.3.2.0	search with cache (only 1: induction m; only 1: intros; only 1: intuition; only 1: intuition).	0.0213940143585	11
Coq.FSets.FMapList.Raw.elements_3w	40
Coq.FSets.FMapList.Raw.fold_1	40	1.0.0.0.1	search with cache (only 1: induction m; only 1: intuition; only 1: intuition; only 1: simpl in *; only 1: intuition).	0.035660982132	7
Coq.FSets.FMapList.Raw.equal_1	40
Coq.FSets.FMapList.Raw.equal_2	40
Coq.FSets.FMapList.Raw.equal_cons	40
Coq.FSets.FMapList.Raw.map_1	40
Coq.FSets.FMapList.Raw.map_2	40
Coq.FSets.FMapList.Raw.map_lelistA	40	0.4.1.5.0.0.0.0	search with cache (only 1: induction m; only 1: intuition; only 1: constructor 1; only 1: intros; only 1: destruct a as (x'', e''); only 1: inversion_clear H; only 1: simpl; only 1: intuition).	3.42740511894	2296
Coq.FSets.FMapList.Raw.map_sorted	40
Coq.FSets.FMapList.Raw.mapi_1	40
Coq.FSets.FMapList.Raw.mapi_2	40
Coq.FSets.FMapList.Raw.mapi_lelistA	40	0.0.0.0.0.2.0.1.0	search with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: destruct a as (x0, e0); only 1: inversion H; only 1: subst; only 1: auto).	0.604094982147	221
Coq.FSets.FMapList.Raw.mapi_sorted	40	1.4.1.0.0.0.5	search with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: simpl; only 1: destruct a as (x', e'); only 1: inversion_clear 1; only 1: auto).	2.20580911636	1301
Coq.FSets.FMapList.Raw.map2_alt_equiv	40
Coq.FSets.FMapList.Raw.combine_lelistA	40
Coq.FSets.FMapList.Raw.combine_sorted	40
Coq.FSets.FMapList.Raw.map2_sorted	40
Coq.FSets.FMapList.Raw.combine_1	40
Coq.FSets.FMapList.Raw.map2_0	40
Coq.FSets.FMapList.Raw.map2_1	40
Coq.FSets.FMapList.Raw.map2_2	40
Coq.FSets.FMapList.Make.MapsTo_1	40	0.1.17.6.0	search with cache (only 1: intros; only 1: apply InA_eqA with (x, e); only 1: intuition; only 1: eauto with *; only 1: intuition).	0.83367395401	1288
Coq.FSets.FMapList.Make.mem_1	40	6.0.12	search with cache (only 1: fix even_spec 1; only 1: intros; only 1: auto).	0.269812107086	411
Coq.FSets.FMapList.Make.mem_2	40	9.14	search with cache (only 1: fix even_spec 1; only 1: auto).	0.682284116745	1516
Coq.FSets.FMapList.Make.empty_1	40	6.0	search with cache (only 1: intros a b; only 1: inversion_clear 1).	0.0162169933319	8
Coq.FSets.FMapList.Make.is_empty_1	40
Coq.FSets.FMapList.Make.is_empty_2	40
Coq.FSets.FMapList.Make.add_1	40
Coq.FSets.FMapList.Make.add_2	40
Coq.FSets.FMapList.Make.add_3	40
Coq.FSets.FMapList.Make.remove_1	40
Coq.FSets.FMapList.Make.remove_2	40
Coq.FSets.FMapList.Make.remove_3	40
Coq.FSets.FMapList.Make.find_1	40
Coq.FSets.FMapList.Make.find_2	40
Coq.FSets.FMapList.Make.elements_1	40	8	search with cache (only 1: auto).	0.0178461074829	18
Coq.FSets.FMapList.Make.elements_2	40	0.0	search with cache (only 1: intros m; only 1: exact (Raw.elements_1 (m:=m))).	0.00839281082153	2
Coq.FSets.FMapList.Make.elements_3	40	1.22	search with cache (only 1: induction m; only 1: intuition).	0.209157943726	567
Coq.FSets.FMapList.Make.elements_3w	40	17.4.167	search with cache (only 1: fix gcd_divide 1; only 1: intros m; only 1: auto).	28.7110140324	263684
Coq.FSets.FMapList.Make.cardinal_1	40	5.2	search with cache (only 1: intros m; only 1: auto).	0.0128231048584	9
Coq.FSets.FMapList.Make.fold_1	40
Coq.FSets.FMapList.Make.equal_1	40	7.21	search with cache (only 1: fix odd_spec 1; only 1: auto).	1.59841609001	2095
Coq.FSets.FMapList.Make.equal_2	40	5.1.23	search with cache (only 1: fix odd_spec 1; only 1: intros m m'; only 1: auto).	3.43409109116	3923
Coq.FSets.FMapList.Make.map_1	40
Coq.FSets.FMapList.Make.map_2	40
Coq.FSets.FMapList.Make.mapi_1	40
Coq.FSets.FMapList.Make.mapi_2	40
Coq.FSets.FMapList.Make.map2_1	40
Coq.FSets.FMapList.Make.map2_2	40
Coq.FSets.FMapList.Make_ord.eq_equal	40	6.8	search with cache (only 1: fix even_spec 1; only 1: trivial).	0.265411138535	304
Coq.FSets.FMapList.Make_ord.eq_1	40
Coq.FSets.FMapList.Make_ord.eq_2	40
Coq.FSets.FMapList.Make_ord.eq_refl	40
Coq.FSets.FMapList.Make_ord.eq_sym	40
Coq.FSets.FMapList.Make_ord.eq_trans	40
Coq.FSets.FMapList.Make_ord.lt_trans	40
Coq.FSets.FMapList.Make_ord.lt_not_eq	40
Coq.FSets.FMapList.Make_ord.compare	40
Coq.Wellfounded.Inclusion.Acc_incl	40	7.18.0.20.2	search with cache (only 1: intro z; only 1: apply Acc_rect; only 1: intro H; only 1: split; only 1: auto).	36.3538930416	43531
Coq.Wellfounded.Inclusion.wf_incl	40	0.0.10.11	search with cache (only 1: intros; only 1: intro x; only 1: apply Acc_intro; only 1: auto with sets).	0.348592042923	838
Coq.Wellfounded.Well_Ordering.wf_WO	40
Coq.Wellfounded.Well_Ordering.wof	40
Coq.Wellfounded.Inverse_Image.Acc_lemma	40
Coq.Wellfounded.Inverse_Image.Acc_inverse_image	40
Coq.Wellfounded.Inverse_Image.wf_inverse_image	40	0.1.5.4.5.2	search with cache (only 1: intros y0 H1; only 1: apply Acc_intro; only 1: intros x H; only 1: apply (Acc_lemma (f x)); only 1: trivial; only 1: trivial).	0.798973083496	1399
Coq.Wellfounded.Inverse_Image.Acc_inverse_rel	40
Coq.Wellfounded.Inverse_Image.wf_inverse_rel	40
Coq.Wellfounded.Disjoint_Union.acc_A_sum	40
Coq.Wellfounded.Disjoint_Union.acc_B_sum	40
Coq.Wellfounded.Disjoint_Union.wf_disjoint_sum	40
Coq.Wellfounded.Union.strip_commut	40
Coq.Wellfounded.Union.Acc_union	40
Coq.Wellfounded.Union.wf_union	40
Coq.Wellfounded.Lexicographic_Product.acc_A_B_lexprod	40
Coq.Wellfounded.Lexicographic_Product.wf_lexprod	40
Coq.Wellfounded.Lexicographic_Product.Acc_symprod	40
Coq.Wellfounded.Lexicographic_Product.wf_symprod	40
Coq.Wellfounded.Lexicographic_Product.swap_Acc	40
Coq.Wellfounded.Lexicographic_Product.Acc_swapprod	40
Coq.Wellfounded.Lexicographic_Product.wf_swapprod	40
Coq.Wellfounded.Transitive_Closure.incl_clos_trans	40	2.124	search with cache (only 1: left; only 1: trivial).	19.313657999	199951
Coq.Wellfounded.Transitive_Closure.Acc_clos_trans	40
Coq.Wellfounded.Transitive_Closure.Acc_inv_trans	40	0.0.0.1.8.2.5.10	search with cache (only 1: intro x; only 1: intros y H2; only 1: induction H2; only 1: intros; only 1: apply Acc_inv with y; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets).	3.8377559185	7002
Coq.Wellfounded.Transitive_Closure.wf_clos_trans	40	0.0	search with cache (only 1: red; only 1: auto with sets).	0.0103011131287	2
Coq.Numbers.DecimalFacts.uint_dec	40
Coq.Numbers.DecimalFacts.rev_revapp	40
Coq.Numbers.DecimalFacts.rev_rev	40
Coq.Numbers.DecimalFacts.nzhead_revapp_0	40
Coq.Numbers.DecimalFacts.nzhead_revapp	40
Coq.Numbers.DecimalFacts.nzhead_rev	40
Coq.Numbers.DecimalFacts.rev_nztail_rev	40
Coq.Numbers.DecimalFacts.revapp_nil_inv	40
Coq.Numbers.DecimalFacts.rev_nil_inv	40	6.0.5.7.6	search with cache (only 1: symmetry; only 1: rewrite <- (rev_rev d); only 1: rewrite H; only 1: unfold rev; only 1: now rewrite ?IHd).	14.4968109131	17283
Coq.Numbers.DecimalFacts.rev_lnorm_rev	40
Coq.Numbers.DecimalFacts.nzhead_nonzero	40	0.0.0.0.0.0.0.0.0.0.0.18	search with cache (only 1: induction d; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd).	15.0994870663	10450
Coq.Numbers.DecimalFacts.unorm_0	40	0.0.0.0.0.0.0.0.0.0.0.2	search with cache (only 1: induction d; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	6.94476318359	3295
Coq.Numbers.DecimalFacts.unorm_nonnil	40
Coq.Numbers.DecimalFacts.nzhead_invol	40	0.0.0.0.0.0.0.0.0.0.0.9	search with cache (only 1: induction d; only 1: trivial; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	13.661370039	11313
Coq.Numbers.DecimalFacts.unorm_invol	40
Coq.Numbers.DecimalFacts.norm_invol	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_eqn	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_revapp	40
Coq.Numbers.DecimalPos.Unsigned.Nadd_simpl	40
Coq.Numbers.DecimalPos.Unsigned.of_uint_acc_eqn	40
Coq.Numbers.DecimalPos.Unsigned.of_uint_acc_rev	40
Coq.Numbers.DecimalPos.Unsigned.of_uint_alt	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_rev	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_double_gen	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_double	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_succ_double	40	6	search with cache (only 1: apply of_lu_double_gen).	1.02530503273	7
Coq.Numbers.DecimalPos.Unsigned.of_to	40
Coq.Numbers.DecimalPos.Unsigned.succ_double_alt	40
Coq.Numbers.DecimalPos.Unsigned.double_succ	40
Coq.Numbers.DecimalPos.Unsigned.to_lu_succ	40
Coq.Numbers.DecimalPos.Unsigned.nat_iter_S	40	2	search with cache (only 1: firstorder).	0.0194249153137	3
Coq.Numbers.DecimalPos.Unsigned.nat_iter_0	40	1	search with cache (only 1: auto).	0.0158817768097	2
Coq.Numbers.DecimalPos.Unsigned.to_ldec_tenfold	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_0	40
Coq.Numbers.DecimalPos.Unsigned.to_of_lu_tenfold	40
Coq.Numbers.DecimalPos.Unsigned.Nadd_alt	40
Coq.Numbers.DecimalPos.Unsigned.to_of_lu	40
Coq.Numbers.DecimalPos.Unsigned.to_of	40
Coq.Numbers.DecimalPos.Unsigned.to_uint_nonzero	40
Coq.Numbers.DecimalPos.Unsigned.to_uint_nonnil	40	0.0.0	search with cache (only 1: intro E; only 1: generalize (of_to p); only 1: now rewrite E).	0.0293781757355	3
Coq.Numbers.DecimalPos.Unsigned.to_uint_inj	40
Coq.Numbers.DecimalPos.Unsigned.to_uint_pos_surj	40
Coq.Numbers.DecimalPos.Unsigned.of_uint_norm	40
Coq.Numbers.DecimalPos.Unsigned.of_inj	40
Coq.Numbers.DecimalPos.Unsigned.of_iff	40
Coq.Numbers.DecimalPos.Signed.of_to	40
Coq.Numbers.DecimalPos.Signed.to_of	40
Coq.Numbers.DecimalPos.Signed.to_int_inj	40
Coq.Numbers.DecimalPos.Signed.to_int_pos_surj	40	4.1.6.0.0.4	search with cache (only 1: unfold norm; only 1: rewrite <- Unsigned.to_of; only 1: destruct (Pos.of_uint d); only 1: easy; only 1: exists p; only 1: auto).	14.6987040043	11222
Coq.Numbers.DecimalPos.Signed.of_int_norm	40
Coq.Numbers.DecimalPos.Signed.of_inj_pos	40
Coq.Numbers.DecimalN.Unsigned.of_to	40
Coq.Numbers.DecimalN.Unsigned.to_of	40	12.6.0	search with cache (only 1: unfold N.to_uint, Pos.to_uint; only 1: rewrite <- Unsigned.to_of; only 1: now f_equal).	6.30903506279	3744
Coq.Numbers.DecimalN.Unsigned.to_uint_inj	40
Coq.Numbers.DecimalN.Unsigned.to_uint_surj	40
Coq.Numbers.DecimalN.Unsigned.of_uint_norm	40	1	search with cache (only 1: now induction d).	0.0202538967133	2
Coq.Numbers.DecimalN.Unsigned.of_inj	40	0.1.1.0.8	search with cache (only 1: destruct (Pos.of_uint d) eqn:Hd, (Pos.of_uint d') eqn:Hd'; only 1: apply Unsigned.of_inj; only 1: apply Unsigned.of_inj; only 1: apply Unsigned.of_inj; only 1: apply Unsigned.of_inj).	1.50637102127	407
Coq.Numbers.DecimalN.Unsigned.of_iff	40
Coq.Numbers.DecimalN.Signed.of_to	40
Coq.Numbers.DecimalN.Signed.to_of	40
Coq.Numbers.DecimalN.Signed.to_int_inj	40
Coq.Numbers.DecimalN.Signed.to_int_pos_surj	40	1.0.6.0	search with cache (only 1: simpl norm; only 1: exists (N.of_uint d); only 1: rewrite <- DecimalPos.Unsigned.to_of; only 1: now f_equal).	2.34637188911	424
Coq.Numbers.DecimalN.Signed.of_int_norm	40
Coq.Numbers.DecimalN.Signed.of_inj_pos	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_neg_neg	40	0.1.1	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_lt_mono).	0.146761894226	23
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_neg_nonpos	40	0.0.0	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_lt_le_mono).	0.0697739124298	3
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_nonpos_neg	40	0.0.0	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_le_lt_mono).	0.0270719528198	3
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_nonpos_nonpos	40	0.0.2	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_le_mono).	0.242870092392	37
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_0_sub	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_0_sub	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_0	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_0	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_lt_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_le_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_pos_neg	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_neg_pos	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_nonneg_nonpos	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_nonpos_nonneg	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_m1_0	40	0.28.9	search with cache (only 1: rewrite succ_lt_mono, <- one_succ; only 1: apply le_succ_l; only 1: now rewrite one_succ, opp_succ, opp_0, succ_pred).	5.85211801529	3162
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_mono_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_mono_r	40	11.11.3.3	search with cache (only 1: intro m; only 1: intros; only 1: rewrite <- 2!add_opp_r; only 1: now apply add_lt_mono_r).	6.68487095833	5882
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_mono_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_mono_r	40	16.32.0	search with cache (only 1: intros; only 1: do 2 rewrite <- add_opp_r; only 1: now apply add_le_mono_r).	35.7359440327	23143
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_le_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_lt_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_lt_sub_lt	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_le_sub_lt	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_le_sub_lt	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_add_lt_sub_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_add_le_sub_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_add_lt_sub_l	40	0.17.4.5	search with cache (only 1: intro p; only 1: intros n m; only 1: rewrite (add_comm p m); only 1: now rewrite (sub_lt_mono_r _ _ p), add_simpl_r).	9.6916000843	4886
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_add_le_sub_l	40	0.18.3.5	search with cache (only 1: intro p; only 1: intros n m; only 1: rewrite (add_comm p m); only 1: now rewrite (sub_le_mono_r _ _ p), add_simpl_r).	8.7291059494	4764
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_lt_add_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_le_add_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_lt_add_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_le_add_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_lt_add	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_le_add	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_pos	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_nonneg	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_neg_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_pos_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_nonpos_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_nonneg_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.zero_pos_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow_sub_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow_div_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.exists_div2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_0_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_succ_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_spec'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_spec	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_true	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_false	40	0.0.1.0.0.0.0.2.0.0.0	search with cache (only 1: intros a n Hn; only 1: rewrite <- testbit_spec' by trivial; only 1: destruct a.[n]; only 1: simpl; only 1: split; only 1: now try order'; only 1: now try order'; only 1: split; only 1: simpl; only 1: now try order'; only 1: split).	3.57295393944	1256
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.b2z_inj	40	0.0.14	search with cache (only 1: destr_bool; only 1: now try order'; only 1: now try order').	0.157243967056	153
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_b2z_double_div2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_b2z_double_bit0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.b2z_div2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.b2z_bit0	40	0.0.0.0.14	search with cache (only 1: intros a0; only 1: apply b2z_inj; only 1: rewrite testbit_spec' by order; only 1: nzsimpl; only 1: now rewrite mod_small by (destruct a0; split; simpl; order')).	0.208406209946	155
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_unique	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_opp	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_m1	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit0_odd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit0_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit0_mod	40	1.0.1.0.1.0.0.1.0.1.0.2.1.0.0.0.1.0	search with cache (only 1: intros a; only 1: destruct (exists_div2 a) as (a', (b, H)); only 1: rewrite H  at 1; only 1: rewrite testbit_0_r; only 1: apply mod_unique with a'; only 1: left; only 1: destruct b; only 1: split; only 1: simpl; only 1: order'; only 1: simpl; only 1: order'; only 1: split; only 1: simpl; only 1: order'; only 1: simpl; only 1: order'; only 1: trivial).	18.0208780766	14644
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_odd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit_log2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_above_log2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit_log2_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_above_log2_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_nonneg'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_nonneg_ex	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_neg'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_neg_ex	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div_pow2_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.double_bits_succ	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.double_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mul_pow2_bits_add	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mul_pow2_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mul_pow2_bits_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mod_pow2_bits_high	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mod_pow2_bits_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.eqf_equiv	40	1.8.1.64	search with cache (only 1: split; only 1: simpl_relation; only 1: firstorder; only 1: congruence).	2.06894111633	3251
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_eqf	40	6.6.1	search with cache (only 1: intros x x' EQ; only 1: intro H; only 1: now f_equiv).	4.38151812553	358
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj_0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj_iff'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.are_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_spec	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_opp_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_opp_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_div_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_mul_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_mul_pow2	40	1.1.0.0.0.1.5.9.12	search with cache (only 1: intros; only 1: bitwise; only 1: rewrite mul_pow2_bits by trivial; only 1: destruct (le_gt_cases n m); only 1: now apply shiftl_spec_high; only 1: rewrite shiftl_spec_low, testbit_neg_r; only 1: trivial; only 1: now apply lt_sub_0; only 1: trivial).	7.16855406761	3364
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_div_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_spec_alt	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_shiftl	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_shiftl_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_shiftl_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_shiftr	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_1_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_0_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_0_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_0_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_0_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_eq_0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_div	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_odd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_wd	40	0.0.1	search with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.0594811439514	13
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_wd	40	0.0.1	search with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.0945570468903	13
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_wd	40	0.0.0	search with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.0702118873596	3
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_eq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_nilpotent	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_0_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_0_r	40	0.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_l).	0.0224840641022	3
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_comm	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_assoc	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_0_l	40	4.0.0.3	search with cache (only 1: intro n; only 1: bitwise; only 1: simpl; only 1: trivial).	0.375977993011	47
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_0_r	40	17.2.3.5	search with cache (only 1: intro n; only 1: pose proof (lt_trichotomy n 0); only 1: bitwise; only 1: apply xorb_false_r).	6.03915905952	4598
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_comm	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_assoc	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_eq_0_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_0_l	40	1.4.41	search with cache (only 1: intro Hb; only 1: bitwise; only 1: repeat split).	1.15339493752	3128
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_0_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_comm	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_assoc	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_0_l	40	1.0.10	search with cache (only 1: intros; only 1: bitwise; only 1: trivial).	1.2947371006	200
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_0_r	40	5.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply andb_comm).	0.0232119560242	8
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_land_distr_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_land_distr_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_lor_distr_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_lor_distr_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ldiff_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_ldiff_and	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_spec'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_spec'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_wd	40	0.4.1.3.0.4.1.3.5.3	search with cache (only 1: intros a a' Ha n n' Hn; only 1: destruct (le_ge_cases n 0) as [H| H]; only 1: pose proof H as H'; only 1: rewrite Hn in H'; only 1: unfold setbit; only 1: now rewrite <- 2!shiftr_opp_r, Ha, Hn; only 1: pose proof H as H'; only 1: rewrite Hn in H'; only 1: unfold setbit; only 1: now rewrite <- 2!shiftr_opp_r, Ha, Hn).	27.9202170372	12407
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_wd	40	0.0.2.2	search with cache (only 1: intros a a' Ha b b' Hb; only 1: unfold clearbit; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.277933835983	27
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow2_bits_true	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow2_bits_false	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow2_bits_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_eq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_neq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_eq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_neq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_wd	40	0.18.5.29	search with cache (only 1: intros x y Hxy; only 1: compute; only 1: f_equiv; only 1: now rewrite opp_inj_wd).	3.99404406548	4948
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_spec	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_involutive	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_m1	40	4.11.0	search with cache (only 1: unfold lnot; only 1: rewrite opp_involutive; only 1: now nzsimpl').	0.261373996735	236
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_m1_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_m1_l	40	11.0.26	search with cache (only 1: intro n; only 1: bitwise; only 1: now rewrite bits_opp, one_succ, pred_succ, bits_0).	3.60979390144	7574
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_m1_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_m1_l	40	20.0.3	search with cache (only 1: intros n; only 1: bitwise; only 1: now rewrite bits_opp, one_succ, pred_succ, bits_0).	1.66671299934	2438
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_m1_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_m1_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_lnot_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_lnot_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_lnot_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_lnot_lnot	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lxor_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lxor_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_m1_r	40	2.0.4.14	search with cache (only 1: pose proof lt_m1_0 as F; only 1: intros; only 1: bitwise; only 1: now rewrite lnot_spec, bits_m1).	6.13682818413	5010
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_m1_l	40	2.2.0.15	search with cache (only 1: pose proof lt_m1_0 as F; only 1: intros; only 1: bitwise; only 1: now rewrite lnot_spec, bits_m1).	4.24796199799	2896
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_shiftr	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_equiv	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_add	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_div_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_mod_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_spec_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_spec_high	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_spec_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_ones_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ones	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ones_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_r_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_l_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_neg	40	0.5.32	search with cache (only 1: intros a b; only 1: rewrite <- shiftl_opp_r; only 1: now rewrite 2!lt_nge, shiftl_nonneg).	9.83644318581	8560
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_neg	40	0.0.0	search with cache (only 1: intros; only 1: rewrite div2_spec; only 1: now rewrite 2!lt_nge, shiftr_nonneg).	0.0207369327545	3
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_nonneg	40	1.1.12	search with cache (only 1: intros; only 1: unfold lnot; only 1: now rewrite <- opp_succ, opp_nonneg_nonpos, le_succ_l).	1.27509593964	759
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_bits_unique	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_shiftr	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_shiftl	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_shiftl'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_bit0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add3_bit0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add3_bits_div2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_carry_div2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_carry_bits_aux	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_carry_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_bit1	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.nocarry_equiv	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_le	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.sub_nocarry_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_lt_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_mod_lt_pow2	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.quot_div_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_mod_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.quot_div	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_mod	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.mod_divide	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_divide	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_mod_eq_0	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.quot_div_exact	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_div_mul_exact	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_quot_mul_exact	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_div_factor	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_quot_factor	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_div_gcd	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_quot_gcd	40	0.0.0.0.0.0.0.0.0.0.0.0.0.5.1	search with cache (only 1: intros a b g NZ EQ; only 1: rewrite EQ; only 1: rewrite !quot_div_exact; only 1: rewrite gcd_div_factor; only 1: now rewrite <- EQ, div_same; only 1: generalize (gcd_nonneg a b); only 1: order; only 1: apply gcd_divide_l; only 1: apply gcd_divide_r; only 1: generalize (gcd_nonneg a b); only 1: order; only 1: apply gcd_divide_r; only 1: generalize (gcd_nonneg a b); only 1: order; only 1: apply gcd_divide_l).	10.7814631462	3459
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_mod	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_rem	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_wd	40	3.2.31.0	search with cache (only 1: intros x1 x2 H1 x3 x4 H2; only 1: compute; only 1: rewrite H1; only 1: now rewrite H2).	38.2178502083	5750
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_equiv1	40	0.0.0.15.6.5	search with cache (only 1: intros; only 1: symmetry; only 1: apply divide_div_mul_exact; only 1: generalize (gcd_nonneg a b); only 1: order; only 1: apply gcd_divide_r).	2.1574280262	1994
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_equiv2	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_div_swap	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_l	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_r	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_div	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_least	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_comm	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_divide_iff	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_unique	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_unique_alt	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_assoc	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_0_l	40	0.0.15.5.4	search with cache (only 1: intros; only 1: unfold lcm; only 1: rewrite abs_eq; only 1: now nzsimpl; only 1: now nzsimpl).	1.95087599754	2285
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_0_r	40	0.3.2.2.16.0.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: rewrite <- (add_0_l 0); only 1: now apply add_le_mono; only 1: apply divide_0_r; only 1: apply divide_0_r; only 1: trivial).	4.01565599442	5035
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_l_nonneg	40	1.4.3.1.7.1.4	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: rewrite <- (add_0_l 0); only 1: now nzsimpl; only 1: trivial using divide_1_l, le_0_1; only 1: apply divide_refl; only 1: trivial using divide_1_l, le_0_1).	9.395414114	4283
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_r_nonneg	40	0.0.4.1.7.0.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: rewrite <- (add_0_l 0); only 1: now nzsimpl; only 1: apply divide_refl; only 1: trivial using divide_1_l, le_0_1, divide_refl; only 1: trivial using divide_1_l, le_0_1, divide_refl).	2.23356890678	1071
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_diag_nonneg	40	0.4.4.1.7.0.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: rewrite <- (add_0_l 0); only 1: now nzsimpl; only 1: apply divide_refl; only 1: apply divide_refl; only 1: trivial).	7.34036278725	3768
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_eq_0	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_eq_r	40	1.4.2.1.0.2	search with cache (only 1: intros; only 1: apply divide_antisym_nonneg; only 1: apply lcm_nonneg; only 1: trivial; only 1: now apply lcm_least; only 1: apply divide_lcm_r).	0.562707901001	461
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_iff	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_opp_l	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_opp_r	40	0.0.0.1.0.0	search with cache (only 1: intros; only 1: apply lcm_unique_alt; only 1: apply lcm_nonneg; only 1: intros; only 1: rewrite divide_opp_l; only 1: apply lcm_divide_iff).	0.0364780426025	7
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_abs_l	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_abs_r	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_l	40	0.14.0.8.1.3.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: apply abs_nonneg; only 1: trivial using divide_1_l, le_0_1; only 1: now apply divide_abs_l; only 1: intros; only 1: now apply divide_abs_l).	35.6326348782	18990
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_r	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_diag	40	10.1.0.1.11.3.0	search with cache (only 1: intros; only 1: rewrite <- lcm_abs_r; only 1: apply lcm_unique; only 1: apply abs_nonneg; only 1: now apply divide_abs_l; only 1: now apply divide_abs_l, divide_abs_r; only 1: trivial).	34.0843839645	23442
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_l	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_l_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_r	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_r_nonneg	40	3.9.1.0	search with cache (only 1: intros; only 1: rewrite <- (abs_eq p)  at 3; only 1: now rewrite !(mul_comm _ p), lcm_mul_mono_l, mul_comm; only 1: trivial).	23.0492680073	1532
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_1_lcm_mul	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.succ_max_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.succ_min_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.pred_max_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.pred_min_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_max_distr_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_max_distr_r	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_min_distr_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_min_distr_r	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.opp_max_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.opp_min_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_max_distr_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_max_distr_r	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_min_distr_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_min_distr_r	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonneg_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonneg_r	40	1.3.2.1.0.1.3.2.1.1.1.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: order; only 1: now f_equiv; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonneg_l; only 1: rewrite 2!max_l; only 1: order; only 1: now f_equiv; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonneg_l).	36.5473620892	31147
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonneg_l	40	1.2.1.2.1.2.1.3.1.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: now f_equiv; only 1: now apply mul_le_mono_nonneg_l; only 1: rewrite 2!min_r; only 1: order; only 1: now f_equiv; only 1: now apply mul_le_mono_nonneg_l).	11.655769825	11081
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonneg_r	40	1.3.2.1.0.1.3.2.1.1.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: now f_equiv; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonneg_l; only 1: rewrite 2!min_r; only 1: order; only 1: now f_equiv; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonneg_l).	32.6330320835	28463
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonpos_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonpos_r	40	0.3.2.2.0.0.3.2.0.1.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite min_l by trivial; only 1: rewrite max_l; only 1: reflexivity; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonpos_l; only 1: rewrite min_r by trivial; only 1: rewrite max_r; only 1: reflexivity; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonpos_l).	15.4984760284	10621
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonpos_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonpos_r	40	0.3.3.4.0.0.3.3.0.1.1.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite max_r by trivial; only 1: rewrite min_r; only 1: reflexivity; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonpos_l; only 1: rewrite max_l by trivial; only 1: rewrite min_l; only 1: reflexivity; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonpos_l).	31.4674749374	23890
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericAbs.abs_eq	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericAbs.abs_neq	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_null	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_pos	40	3.0.0.0.0.0	search with cache (only 1: unfold sgn; only 1: intros; only 1: destruct (compare_spec 0 n); only 1: order; only 1: order; only 1: order').	0.0325131416321	9
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_neg	40	0.0.0.0.0.0	search with cache (only 1: unfold sgn; only 1: intros; only 1: destruct (compare_spec 0 n); only 1: order; only 1: order; only 1: order).	0.0304520130157	6
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_wd	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_max	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_neq'	40	1.6.1.3	search with cache (only 1: intros n m; only 1: rewrite abs_neq; only 1: auto with relations; only 1: now rewrite (opp_le_mono n 0), opp_0).	1.39663314819	948
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_nonneg	40	4.3.4.1.0	search with cache (only 1: intros; only 1: destruct_max n; only 1: trivial; only 1: rewrite opp_nonneg_nonpos; only 1: trivial).	0.819164037704	642
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_eq_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_neq_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_opp	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_0	40	4.7	search with cache (only 1: apply abs_eq; only 1: solve_proper).	0.0323119163513	55
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_0_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_pos	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_eq_or_opp	40	4.6.14.4.0	search with cache (only 1: intros; only 1: destruct_max n; only 1: auto with relations; only 1: right; only 1: reflexivity).	22.4866328239	19046
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_or_opp_abs	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_involutive	40	1.12.0	search with cache (only 1: intros; only 1: apply abs_eq; only 1: apply abs_nonneg).	0.584774017334	562
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_spec	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_case_strong	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_case	40	1.1.0.0	search with cache (only 1: intros; only 1: destruct_max n; only 1: auto; only 1: auto).	0.0299918651581	6
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_eq_cases	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_lt	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_le	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_triangle	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_sub_triangle	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_mul	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_square	40	9.1.0.1	search with cache (only 1: intros; only 1: destruct_max n; only 1: apply eq_refl; only 1: now rewrite mul_opp_l, mul_opp_r, opp_involutive).	0.677555084229	344
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_wd	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_spec	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_0	40	4.1.1.4.1.1.1	search with cache (only 1: rewrite sgn_null; only 1: rewrite <- abs_0_iff; only 1: apply abs_eq; only 1: solve_proper; only 1: rewrite <- abs_0_iff; only 1: apply abs_eq; only 1: solve_proper).	0.776764154434	1425
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_pos_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_null_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_neg_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_opp	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_nonneg	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_nonpos	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_mul	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_abs	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_sgn	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_sgn	40	0.9.1.0.0.1.0.1	search with cache (only 1: intros n; only 1: destruct_sgn n; only 1: apply sgn_pos; only 1: apply lt_0_1; only 1: apply sgn_0; only 1: apply sgn_neg; only 1: rewrite opp_neg_pos; only 1: apply lt_0_1).	3.18851995468	3566
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_eq	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_opp_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_opp_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_rem_unique	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_unique	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_unique	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_same	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_same	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_small	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_small	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_0_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_0_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_1_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_1_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_1_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_1_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_mul	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_unique_exact	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_nonneg	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_nonpos	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_sign_mul	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_sign_nz	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_sign	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_abs_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_abs_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_abs	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_abs_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_abs_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_abs	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_bound_abs	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_le	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_pos	40	13	search with cache (only 1: apply NZQuot.div_pos).	1.34061193466	739
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_str_pos	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_lt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_mono	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_quot_le	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_quot_ge	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_succ_quot_gt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_pred_quot_lt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_pred_quot_gt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_succ_quot_lt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_exact	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_lt_upper_bound	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_upper_bound	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_lower_bound	40	4.1.1.6.0	search with cache (only 1: intros; only 1: rewrite <- (quot_mul q b) by order; only 1: apply quot_le_mono; only 1: trivial; only 1: now rewrite mul_comm).	12.4121351242	6894
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_compat_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_add	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_add	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_add_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul_cancel_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul_cancel_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_distr_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_distr_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_rem	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_idemp_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.add_rem_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.add_rem_idemp_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.add_rem	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_quot	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mod_mul_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_quot	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul_le	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_eq	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_bound_abs	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mod_unique	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique_pos	40	0.1.0.5.1.0.1.1.1.1	search with cache (only 1: intros a b q r Hr EQ; only 1: assert (Hb : b ~= 0) by (destruct Hr; intuition; order); only 1: destruct (div_mod_unique b q (a / b) r (a mod b)); only 1: left; only 1: trivial; only 1: left; only 1: apply mod_pos_bound; only 1: intuition order; only 1: now rewrite <- div_mod; only 1: trivial).	10.8552911282	6221
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique_neg	40	0.0.4.3.0	search with cache (only 1: intros; only 1: apply div_unique with r; only 1: right; only 1: trivial; only 1: trivial).	0.659592151642	231
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique_pos	40	0.1.0.5.1.0.1.1.1.1	search with cache (only 1: intros a b q r Hr EQ; only 1: assert (Hb : b ~= 0) by (destruct Hr; intuition; order); only 1: destruct (div_mod_unique b q (a / b) r (a mod b)); only 1: left; only 1: trivial; only 1: left; only 1: apply mod_pos_bound; only 1: intuition order; only 1: now rewrite <- div_mod; only 1: trivial).	12.6511170864	6365
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique_neg	40	0.0.4.2.0	search with cache (only 1: intros; only 1: apply mod_unique with q; only 1: right; only 1: trivial; only 1: trivial).	0.321421861649	97
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_bound_or	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.opp_mod_bound_or	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_r_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_r_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_r_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_r_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign_mul	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_same	40	2.2.2.2.5.0.3.10.7.3	search with cache (only 1: intros n m; only 1: symmetry; only 1: apply div_unique with 0; only 1: destruct (le_gt_cases 0 n); only 1: left; only 1: intuition; only 1: order; only 1: right; only 1: intuition; only 1: now nzsimpl).	22.0468637943	26161
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_same	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_small	40	1.1.0.1.0.0.1.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique with a; only 1: destruct (lt_ge_cases 0 b); only 1: left; only 1: auto; only 1: auto; only 1: now nzsimpl).	0.871705055237	294
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_small	40	1.1.0.1.0.1.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 0; only 1: destruct (lt_ge_cases 0 b); only 1: left; only 1: auto; only 1: auto; only 1: now nzsimpl).	1.12856197357	460
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_0_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_0_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_1_r	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_1_r	40	1.3.9.0.1.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: left; only 1: intuition; only 1: apply lt_0_1; only 1: now nzsimpl).	3.4136660099	5839
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_1_l	40	5.0.0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: split; only 1: apply le_0_1; only 1: order).	0.0285220146179	10
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_1_l	40	5.0.0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: split; only 1: apply le_0_1; only 1: order).	0.027617931366	10
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_mul	40	1.0.0.0.0.2.1.0.1.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: destruct (lt_ge_cases 0 b); only 1: left; only 1: intuition; only 1: right; only 1: intuition; only 1: order; only 1: nzsimpl; only 1: apply mul_comm).	10.1865539551	4040
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique_exact	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_le	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_pos	40	4.1	search with cache (only 1: intros; only 1: auto using div_pos).	0.184675931931	46
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_str_pos	40	0.6.0	search with cache (only 1: intros a b (Hb, Hab); only 1: apply div_str_pos; only 1: auto).	0.196943044662	58
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_lt	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_mono	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_div_le	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_div_ge	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_succ_div_gt	40	6.11.0.0.0.0	search with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite mul_succ_r; only 1: rewrite <- add_lt_mono_l; only 1: apply mod_pos_bound; only 1: trivial).	9.88627409935	6314
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_succ_div_lt	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_exact	40	0.0.0.0	search with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite <- (add_0_r (b * (a / b)))  at 2; only 1: apply add_cancel_l).	0.0351741313934	4
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_lt_upper_bound	40	3.3.0.1.0.0	search with cache (only 1: intros; only 1: rewrite (mul_lt_mono_pos_l b) by order; only 1: apply le_lt_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: auto; only 1: auto).	1.07603001595	477
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_upper_bound	40	0.0.1.4.0.0	search with cache (only 1: intros; only 1: rewrite (mul_le_mono_pos_l _ _ b) by order; only 1: apply le_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: trivial; only 1: trivial).	0.49051117897	145
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_lower_bound	40	3.0.0.1.0	search with cache (only 1: intros; only 1: rewrite <- (div_mul q b) by order; only 1: apply Private_NZDiv.div_le_mono; only 1: trivial; only 1: now rewrite mul_comm).	0.105241060257	25
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_compat_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_add	40	1.0.3.1.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with (a / c + b); only 1: now apply mod_bound_or; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	0.704544067383	259
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_add	40	1.1.0.2.0.2.0	search with cache (only 1: intros; only 1: apply (mul_cancel_l _ _ c); only 1: trivial; only 1: apply (add_cancel_r _ _ ((a + b * c) mod c)); only 1: rewrite <- div_mod, Private_NZDiv.mod_add by order; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	0.493618965149	198
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_add_l	40	1.2.1	search with cache (only 1: intros a b c; only 1: rewrite (add_comm _ c), (add_comm a); only 1: apply Private_NZDiv.div_add).	0.186691045761	64
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul_cancel_r	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul_cancel_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_distr_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_distr_r	40	6.7.0	search with cache (only 1: intros; only 1: rewrite !(mul_comm _ c); only 1: now rewrite Private_NZDiv.mul_mod_distr_l).	8.50394487381	1632
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_mod	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_idemp_r	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod_idemp_r	40	0.6.5.0	search with cache (only 1: intros a b n Hn; only 1: rewrite !(add_comm a); only 1: apply Private_NZDiv.add_mod_idemp_l; only 1: tauto).	4.47979998589	1830
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod	40	0.0.0.2.5.2.1.7.0	search with cache (only 1: intros; only 1: rewrite Private_NZDiv.add_mod_idemp_l, Private_NZDiv.add_mod_idemp_r; only 1: rewrite (div_mod a n)  at 1 by order; only 1: rewrite <- add_assoc, add_comm, mul_comm; only 1: rewrite Private_NZDiv.mod_add; only 1: now apply add_mod_idemp_l; only 1: tauto; only 1: tauto; only 1: tauto).	34.5297970772	19735
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_div	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.rem_mul_r	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_div	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul_le	40	3.0.3.1.0.3.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: order; only 1: rewrite mul_assoc, (mul_comm b c), <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: order; only 1: apply Private_NZDiv.mul_div_le; only 1: order).	29.0699210167	8802
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_pred_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_pred_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_0_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_succ_l	40	3.4.3.3.0	search with cache (only 1: intro m; only 1: intro n; only 1: rewrite <- add_opp_r; only 1: rewrite <- add_opp_r; only 1: now nzsimpl).	3.61505103111	1428
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_pred_l	40	0.1.2.3.0	search with cache (only 1: intro n; only 1: intro m; only 1: rewrite <- 2!add_opp_r; only 1: rewrite <- (succ_pred n)  at 2; only 1: now rewrite add_succ_l, pred_succ).	0.199979066849	65
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_pred_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_pred	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_diag	40	0.0.4.0.1.12.1	search with cache (only 1: intro m; only 1: nzinduct m; only 1: now nzsimpl; only 1: intro m; only 1: rewrite sub_succ_r; only 1: rewrite sub_succ_l; only 1: now rewrite pred_succ).	7.80298304558	3563
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_diag_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_diag_r	40	0.0.10.1.0.9	search with cache (only 1: nzinduct n; only 1: now nzsimpl; only 1: intro n; only 1: split; only 1: now rewrite add_comm, add_opp_r, sub_diag; only 1: now rewrite add_comm, add_opp_r, sub_diag).	4.49881911278	2138
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_l	40	8.1.4.4.1	search with cache (only 1: intro m; only 1: intro n; only 1: rewrite <- add_opp_r; only 1: rewrite add_comm; only 1: now nzsimpl).	23.6460669041	8883
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_sub_assoc	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_involutive	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_add_distr	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_sub_distr	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_inj	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_inj_wd	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.eq_opp_l	40	6.4.1.1.4.1.2.4	search with cache (only 1: intro m; only 1: split; only 1: intros; only 1: apply opp_inj; only 1: now rewrite opp_involutive; only 1: intros; only 1: apply opp_inj; only 1: now rewrite opp_involutive).	28.0669231415	20737
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.eq_opp_r	40	0.1	search with cache (only 1: intros n m; only 1: now rewrite <- (opp_inj_wd (- n) m), opp_involutive).	0.025356054306	16
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add_distr	40	0.0.0.0	search with cache (only 1: intros n m p; only 1: rewrite <- 2!add_opp_r; only 1: rewrite <- add_opp_r, opp_add_distr; only 1: now rewrite add_assoc).	0.0251610279083	4
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_sub_distr	40	2.6.2.0	search with cache (only 1: intros n m p; only 1: rewrite <- 2!add_opp_r; only 1: rewrite <- add_opp_r, opp_add_distr, add_assoc; only 1: now rewrite opp_involutive).	1.29050898552	481
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_opp_l	40	9.0.0.0.0	search with cache (only 1: intro n; only 1: intro m; only 1: rewrite <- add_opp_r; only 1: rewrite <- add_opp_r; only 1: now rewrite add_comm).	1.51410603523	637
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_opp_r	40	0.0.0	search with cache (only 1: intros n m; only 1: rewrite <- add_opp_r; only 1: now rewrite opp_involutive).	0.0185868740082	3
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_sub_swap	40	15.0.0	search with cache (only 1: intros n m p; only 1: rewrite <- 2!add_opp_r; only 1: apply add_shuffle0).	1.76693487167	927
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_cancel_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_cancel_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_l	40	8.11.5	search with cache (only 1: intros n m p; only 1: rewrite <- add_opp_r; only 1: now apply add_move_l).	16.0162479877	10294
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_0_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_0_r	40	0.16.0	search with cache (only 1: intros n m; only 1: rewrite add_comm; only 1: now rewrite add_move_l, sub_0_l).	4.50648784637	1624
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_0_l	40	4.0.0.1	search with cache (only 1: intro n; only 1: intro m; only 1: rewrite <- (add_opp_r n m); only 1: now rewrite add_move_l, sub_0_l).	0.0219211578369	9
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_0_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_simpl_l	40	0.1	search with cache (only 1: intros n m; only 1: now rewrite add_comm, <- add_sub_assoc, sub_diag, add_0_r).	0.0182189941406	3
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_simpl_r	40	5.2.0	search with cache (only 1: intros; only 1: rewrite add_comm; only 1: now rewrite add_comm, <- add_sub_assoc, sub_diag, add_0_r).	0.0790350437164	13
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_simpl_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_simpl_r	40	1.0.1.3	search with cache (only 1: nzinduct m; only 1: now nzsimpl; only 1: intro m; only 1: now do 2 rewrite <- sub_sub_distr, sub_diag, sub_0_r).	0.135504961014	37
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add	40	4.0	search with cache (only 1: intros; only 1: now rewrite <- sub_sub_distr, sub_diag, sub_0_r).	0.0663340091705	6
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_l_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_l_r	40	0.24.0	search with cache (only 1: intros; only 1: rewrite (add_comm p); only 1: now rewrite (add_comm n m), <- add_sub_assoc, sub_add_distr, sub_diag, sub_0_l, add_opp_r).	20.653591156	9074
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_r_l	40	5.14.0	search with cache (only 1: intros; only 1: rewrite add_comm; only 1: apply add_add_simpl_l_l).	7.53914308548	3692
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_r_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add_simpl_r_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add_simpl_r_r	40	0.16.0	search with cache (only 1: intros n m p; only 1: rewrite (add_comm p m); only 1: now rewrite <- sub_sub_distr, sub_add_distr, sub_diag, sub_0_l, sub_opp_r).	0.914275884628	630
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_eq	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mod_unique	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_unique	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_unique	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_opp_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_opp_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_opp_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_opp_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_same	40	1.7.4.3.21.6.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique with 0; only 1: split; only 1: intuition; only 1: now rewrite abs_pos; only 1: now nzsimpl).	7.26279377937	14506
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_same	40	0.4.44.5.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 1; only 1: now rewrite abs_pos; only 1: now nzsimpl).	4.04393792152	10434
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_small	40	1.5.0	search with cache (only 1: intros; only 1: apply div_small; only 1: intuition).	0.284098148346	66
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_small	40	10.0	search with cache (only 1: intros; only 1: auto using mod_small).	0.747107982635	235
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_0_l	40	0.4.0.1.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique with 0; only 1: now rewrite abs_pos; only 1: now nzsimpl).	0.0728569030762	15
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_0_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_1_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_1_r	40	1.0.0.0.0.0.1.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: pose proof lt_0_1 as H; only 1: rewrite abs_pos; only 1: intuition; only 1: order; only 1: now nzsimpl).	0.0759959220886	10
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_1_l	40	0.5.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: intuition; only 1: apply le_0_1).	0.0393109321594	22
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_1_l	40	0.5.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: intuition; only 1: apply le_0_1).	0.036406993866	22
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mul	40	1.0.1.4.2.0.1.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: split; only 1: intuition order; only 1: now rewrite abs_pos; only 1: nzsimpl; only 1: apply mul_comm).	1.85050106049	903
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_unique_exact	40	3.5.2.8.2.7.7	search with cache (only 1: symmetry; only 1: symmetry; only 1: apply Private_NZDiv.div_unique with 0; only 1: intuition; only 1: now rewrite abs_pos; only 1: nzsimpl; only 1: now try split).	17.0735878944	14305
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_le	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_pos	40	1.1	search with cache (only 1: intros; only 1: auto using div_pos).	0.0198390483856	4
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_str_pos	40	0.8.0	search with cache (only 1: intros a b (Hb, Hab); only 1: apply div_str_pos; only 1: auto).	0.504575014114	154
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_lt	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_mono	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_div_le	40	3.2.7.20.0	search with cache (only 1: intros; only 1: rewrite (add_le_mono_r _ _ (a mod b)), <- div_mod by order; only 1: rewrite <- (add_0_r a)  at 1; only 1: rewrite <- add_le_mono_l; only 1: now apply mod_always_pos).	13.1424481869	8372
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_succ_div_gt	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_pred_div_gt	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_exact	40	0.0.0.0	search with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite <- (add_0_r (b * (a / b)))  at 2; only 1: apply add_cancel_l).	0.041375875473	4
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_lt_upper_bound	40	1.11.1.2.0.0	search with cache (only 1: intros; only 1: rewrite (mul_lt_mono_pos_l b) by order; only 1: apply le_lt_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: order; only 1: auto).	13.1333260536	4784
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_upper_bound	40	1.0.3.1.0.0	search with cache (only 1: intros; only 1: rewrite (mul_le_mono_pos_l _ _ b) by order; only 1: apply le_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: order; only 1: trivial).	0.286585092545	109
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_lower_bound	40	2.1.0.1.0	search with cache (only 1: intros; only 1: rewrite <- (div_mul q b) by order; only 1: apply Private_NZDiv.div_le_mono; only 1: trivial; only 1: now rewrite mul_comm).	0.0986149311066	32
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_compat_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_add	40	1.0.2.1.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with (a / c + b); only 1: now apply mod_always_pos; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	0.170940876007	55
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_add	40	1.1.0.2.0.2.0	search with cache (only 1: intros; only 1: apply (mul_cancel_l _ _ c); only 1: trivial; only 1: apply (add_cancel_r _ _ ((a + b * c) mod c)); only 1: rewrite <- div_mod, Private_NZDiv.mod_add by order; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	0.591799020767	220
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_add_l	40	1.0.0.2.0	search with cache (only 1: intros; only 1: rewrite (add_comm _ c), (add_comm a); only 1: apply Private_NZDiv.div_add; only 1: intros EQ; only 1: tauto).	0.0366539955139	8
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_cancel_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_cancel_l	40	4.5.1	search with cache (only 1: intros a b c; only 1: rewrite !(mul_comm c); only 1: apply Private_NZDiv.div_mul_cancel_r).	5.1122841835	1080
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_distr_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_distr_r	40	5.6.0	search with cache (only 1: intros; only 1: rewrite !(mul_comm _ c); only 1: now rewrite Private_NZDiv.mul_mod_distr_l).	2.68961811066	531
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mod	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_idemp_r	40	0.6.7.0	search with cache (only 1: intros; only 1: rewrite !(mul_comm a); only 1: apply Private_NZDiv.mul_mod_idemp_l; only 1: tauto).	14.0668129921	4431
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod	40	0.0.4.11.0	search with cache (only 1: intros; only 1: rewrite Private_NZDiv.mul_mod_idemp_l, Private_NZDiv.mul_mod_idemp_r; only 1: now rewrite mul_comm; only 1: tauto; only 1: tauto).	11.0640599728	4687
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.add_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.add_mod_idemp_r	40	0.5.6.0	search with cache (only 1: intros a b n Hn; only 1: rewrite !(add_comm a); only 1: apply Private_NZDiv.add_mod_idemp_l; only 1: tauto).	13.1371979713	3821
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.add_mod	40	0.0.9.6.0	search with cache (only 1: intros; only 1: rewrite Private_NZDiv.add_mod_idemp_l, Private_NZDiv.add_mod_idemp_r; only 1: reflexivity; only 1: tauto; only 1: tauto).	15.1795558929	6477
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_div	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mul_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_div	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_le	40	0.0.3.2.2.0.2.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: order; only 1: rewrite mul_assoc, (mul_comm b c), <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: order; only 1: apply Private_NZDiv.mul_div_le; only 1: intuition; only 1: order).	8.75259399414	3396
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_divides	40
Coq.Numbers.Integer.Binary.ZBinary.test	40	2.1	search with cache (only 1: intros a n Hn; only 1: BinInt.Z.order).	0.0445430278778	5
Coq.Numbers.Cyclic.Int31.Ring31.Int31_canonic	40
Coq.Numbers.Cyclic.Int31.Ring31.ring_theory_switch_eq	40	4.8	search with cache (only 1: intros; only 1: firstorder).	0.811547994614	224
Coq.Numbers.Cyclic.Int31.Ring31.Int31Ring	40
Coq.Numbers.Cyclic.Int31.Ring31.eqb31_eq	40
Coq.Numbers.Cyclic.Int31.Ring31.eqb31_correct	40	0.0.0.1.0.1.0.0.0	search with cache (only 1: unfold eqb31; only 1: intros x y; only 1: rewrite spec_compare; only 1: case Z.compare_spec; only 1: intuition; only 1: apply Int31_canonic; only 1: intuition; only 1: easy; only 1: easy).	0.770667076111	121
Coq.Numbers.Cyclic.Int31.Ring31.test	40
Coq.Numbers.Cyclic.Int31.Cyclic31.iszero_eq0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.iszero_not_eq0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sneakl_shiftr	40	4.15.11	search with cache (only 1: intros; only 1: destruct x; only 1: reflexivity).	1.15201306343	1132
Coq.Numbers.Cyclic.Int31.Cyclic31.sneakr_shiftl	40	2.0	search with cache (only 1: destruct x; only 1: auto).	0.0320780277252	4
Coq.Numbers.Cyclic.Int31.Cyclic31.twice_zero	40	3.5.0.3.5.0.13	search with cache (only 1: intuition; only 1: destruct x; only 1: inversion H; only 1: auto; only 1: destruct x; only 1: inversion H; only 1: auto).	27.2273459435	8967
Coq.Numbers.Cyclic.Int31.Cyclic31.twice_or_twice_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_S	40	0.2	search with cache (only 1: intro n; only 1: now f_equal).	0.0295231342316	4
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_S_tail	40
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_n_0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_size	40	0.2.4.5	search with cache (only 1: intros; only 1: destruct x; only 1: simpl in *; only 1: auto).	22.15751791	136
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_above_size	40
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftl_S	40	4.0.1	search with cache (only 1: destruct x; only 1: simpl; only 1: auto).	0.0404560565948	8
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftl_S_tail	40	4.0.2.0.2.0.3.1.10	search with cache (only 1: intro m; only 1: simpl; only 1: elim m; only 1: reflexivity; only 1: destruct x; only 1: simpl; only 1: rewrite H; only 1: simpl; only 1: split).	23.8726549149	12196
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftl_n_0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftl_size	40	0.0.8	search with cache (only 1: destruct x; only 1: simpl; only 1: auto).	4.06202721596	37
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftl_above_size	40
Coq.Numbers.Cyclic.Int31.Cyclic31.firstr_firstl	40	3.5	search with cache (only 1: destruct x; only 1: auto).	2.06506896019	21
Coq.Numbers.Cyclic.Int31.Cyclic31.firstl_firstr	40	1.0.0	search with cache (only 1: destruct x; only 1: simpl; only 1: auto).	0.0359530448914	4
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_predsize_0_firstl	40	3.8.5.0	search with cache (only 1: destruct x; only 1: intros; only 1: injection H; only 1: auto).	37.2180628777	1461
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_0_propagates	40
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_0_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.int31_ind_sneakl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.int31_ind_twice	40
Coq.Numbers.Cyclic.Int31.Cyclic31.recr_aux_eqn	40	3.4.0.8.5.2	search with cache (only 1: inversion 1; only 1: simpl; only 1: destruct x; only 1: simpl in *; only 1: rewrite H; only 1: auto).	2.43842601776	1666
Coq.Numbers.Cyclic.Int31.Cyclic31.recr_aux_converges	40
Coq.Numbers.Cyclic.Int31.Cyclic31.recr_eqn	40	5.6.3.1.0.10	search with cache (only 1: destruct x; only 1: simpl in *; only 1: intros; only 1: compute; only 1: rewrite H; only 1: auto).	7.94752788544	2648
Coq.Numbers.Cyclic.Int31.Cyclic31.recrbis_aux_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.recrbis_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.incrbis_aux_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.incr_eqn1	40
Coq.Numbers.Cyclic.Int31.Cyclic31.incr_eqn2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.incr_twice	40
Coq.Numbers.Cyclic.Int31.Cyclic31.incr_twice_plus_one_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phibis_aux_equiv	40	2.0	search with cache (only 1: apply recrbis_aux_equiv; only 1: auto).	0.0329029560089	4
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_eqn1	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_eqn2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_twice_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_twice_plus_one_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phibis_aux_pos	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phibis_aux_bounded	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_nonneg	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_bounded	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phibis_aux_lowerbound	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_lowerbound	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_zero	40	5.2.0	search with cache (only 1: destruct x; only 1: compute; only 1: auto).	0.0604979991913	11
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_size	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_le	40	1.0.9	search with cache (only 1: fix le_div2 1; only 1: red; only 1: now f_equal).	1.01639199257	431
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_firstr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_twice	40
Coq.Numbers.Cyclic.Int31.Cyclic31.i2l_length	40	9	search with cache (only 1: easy).	0.0499339103699	16
Coq.Numbers.Cyclic.Int31.Cyclic31.l2i_i2l	40	4.0.2	search with cache (only 1: destruct x; only 1: compute; only 1: auto).	0.0765821933746	25
Coq.Numbers.Cyclic.Int31.Cyclic31.i2l_sneakr	40	2.1.21	search with cache (only 1: intros l H; only 1: destruct l; only 1: auto).	19.2206330299	386
Coq.Numbers.Cyclic.Int31.Cyclic31.i2l_sneakl	40	0.0.0	search with cache (only 1: destruct x; only 1: compute; only 1: auto).	0.036896944046	3
Coq.Numbers.Cyclic.Int31.Cyclic31.i2l_l2i	40
Coq.Numbers.Cyclic.Int31.Cyclic31.i2l_nshiftl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_i2l	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_twice_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_shiftr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_incrbis	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_incr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.incr_twice_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.incr_firstr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.incr_inv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_inv_double_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_inv_double	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_inv_incr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_inv_phi_aux	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_inv_phi	40
Coq.Numbers.Cyclic.Int31.Cyclic31.p2ibis_bounded	40
Coq.Numbers.Cyclic.Int31.Cyclic31.p2ibis_spec	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_inv_positive_p2ibis	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_phi_inv_positive	40
Coq.Numbers.Cyclic.Int31.Cyclic31.double_twice_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.double_twice_plus_one_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.p2i_p2ibis	40
Coq.Numbers.Cyclic.Int31.Cyclic31.positive_to_int31_phi_inv_positive	40
Coq.Numbers.Cyclic.Int31.Cyclic31.positive_to_int31_spec	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_twice	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_twice_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_incr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_phi_inv_negative	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_phi_inv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.wB_pos	40	0	search with cache (only 1: auto with zarith).	0.0183899402618	1
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_zdigits	40	0	search with cache (only 1: auto).	0.0161101818085	1
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_more_than_1_digit	40	0.0	search with cache (only 1: red; only 1: auto).	0.024759054184	2
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_0	40	0	search with cache (only 1: reflexivity).	0.0195019245148	1
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_1	40	0	search with cache (only 1: reflexivity).	0.0173170566559	1
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_m1	40	0.17	search with cache (only 1: simpl; only 1: reflexivity).	1.28385901451	166
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_compare	40	4.0	search with cache (only 1: intros; only 1: auto with arith).	0.0249390602112	6
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_add_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_succ_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_add_carry_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_add	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_add_carry	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_succ	40	3.1	search with cache (only 1: intros; only 1: apply phi_phi_inv).	0.101604938507	43
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_sub_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_sub_carry_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_sub	40	1.0	search with cache (only 1: intros; only 1: apply phi_phi_inv).	0.375721931458	82
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_sub_carry	40	0.0.0.7	search with cache (only 1: unfold sub31carryc, sub31, interp_carry; only 1: intros; only 1: repeat rewrite phi_phi_inv; only 1: apply Zplus_mod_idemp_l).	0.435015916824	74
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_opp_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_opp	40	1.1	search with cache (only 1: intros; only 1: apply phi_phi_inv).	0.400558948517	42
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_opp_carry	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_pred_c	40	0.0	search with cache (only 1: intros; only 1: apply spec_sub_c).	0.0233161449432	2
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_pred	40	2.1	search with cache (only 1: intros; only 1: apply phi_phi_inv).	0.476625919342	74
Coq.Numbers.Cyclic.Int31.Cyclic31.phi2_phi_inv2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_mul_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_mul	40	1.2	search with cache (only 1: intros; only 1: apply phi_phi_inv).	0.0296721458435	5
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_square_c	40	1.5.0.0.0.0	search with cache (only 1: unfold mul31c; only 1: intros; only 1: rewrite phi2_phi_inv2; only 1: apply Zmod_small; only 1: generalize (phi_bounded x); only 1: nia).	18.2568631172	427
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_div21	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_div	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_mod	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_gcd	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_gcd	40
Coq.Numbers.Cyclic.Int31.Cyclic31.iter_int31_iter_nat	40
Coq.Numbers.Cyclic.Int31.Cyclic31.addmuldiv31_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_add_mul_div	40
Coq.Numbers.Cyclic.Int31.Cyclic31.shift_unshift_mod_2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_pos_mod	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_head00	40
Coq.Numbers.Cyclic.Int31.Cyclic31.head031_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_nz	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_head0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_tail00	40	1.0.2.0.0.1.0	search with cache (only 1: intros; only 1: generalize (phi_inv_phi x); only 1: rewrite H; only 1: simpl phi_inv; only 1: intros H'; only 1: rewrite <- H'; only 1: auto).	0.266167879105	75
Coq.Numbers.Cyclic.Int31.Cyclic31.tail031_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_tail0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.quotient_by_2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt_main_trick	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt_main	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt_init	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt_test_true	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt_test_false	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt31_step_def	40
Coq.Numbers.Cyclic.Int31.Cyclic31.div31_phi	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt31_step_correct	40
Coq.Numbers.Cyclic.Int31.Cyclic31.iter31_sqrt_correct	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_sqrt	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt312_step_def	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt312_lower_bound	40
Coq.Numbers.Cyclic.Int31.Cyclic31.div312_phi	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt312_step_correct	40
Coq.Numbers.Cyclic.Int31.Cyclic31.iter312_sqrt_correct	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_sqrt2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_eq0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_is_even	40
Coq.Numbers.Cyclic.Int31.Cyclic31.log2_phi_bounded	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_lor	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_land	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_lxor	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_more_than_1_digit	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.wB_pos	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_to_Z_1	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_to_Z_2	40	0.1.1.0	search with cache (only 1: unfold to_Z; only 1: intros; only 1: destruct (Z_mod_lt x wB wB_pos); only 1: auto).	0.0436251163483	6
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_to_Z	40	0.1.1.0	search with cache (only 1: unfold to_Z; only 1: intros; only 1: destruct (Z_mod_lt x wB wB_pos); only 1: auto).	0.0436971187592	6
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_of_pos	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_zdigits	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_0	40	0.3.0.1.0.0	search with cache (only 1: unfold to_Z, zdigits; only 1: apply Zmod_small; only 1: unfold wB, base; only 1: split; only 1: auto with zarith; only 1: auto with zarith).	0.0539200305939	10
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_1	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_Bm1	40	0.6.0.0	search with cache (only 1: unfold to_Z, zdigits; only 1: apply Zmod_small; only 1: generalize wB_pos; only 1: auto with zarith).	0.0805630683899	21
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_compare	40	0.0.0.0	search with cache (only 1: unfold to_Z; only 1: intros; only 1: destruct (Z_mod_lt x wB wB_pos); only 1: auto).	0.0397019386292	4
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_eq0	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_opp_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_opp	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_opp_carry	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.Zmod_equal	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_succ_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_add_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_add_carry_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_succ	40	14.8.0.0	search with cache (only 1: intros; only 1: unfold opp, to_Z; only 1: rewrite Zplus_mod_idemp_l; only 1: auto).	18.6708400249	8333
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_add	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_add_carry	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_pred_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_sub_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_sub_carry_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_pred	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_sub	40	9.3.3.0.0	search with cache (only 1: intros; only 1: unfold pred, to_Z, Z.pred; only 1: rewrite <- Zminus_mod_idemp_r; only 1: rewrite <- Zminus_mod_idemp_l; only 1: auto).	28.8166158199	10352
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_sub_carry	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_mul_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_mul	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_square_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_div	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_div_gt	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_modulo	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_modulo_gt	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.Zgcd_bound	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_gcd	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_gcd_gt	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_div21	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_add_mul_div	40	2.3	search with cache (only 1: generalize wB_pos; only 1: auto with zarith).	0.0478329658508	7
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_pos_mod	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_is_even	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_sqrt	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_sqrt2	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.two_p_power2	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_head00	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_head0	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.Ptail_pos	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.Ptail_bounded	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_tail00	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_tail0	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_lor	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_land	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_lxor	40
Coq.Numbers.Cyclic.Int63.Cyclic63.is_zero_spec_aux	40
Coq.Numbers.Cyclic.Int63.Cyclic63.positive_to_int_spec	40
Coq.Numbers.Cyclic.Int63.Cyclic63.mulc_WW_spec	40
Coq.Numbers.Cyclic.Int63.Cyclic63.diveucl_spec_aux	40
Coq.Numbers.Cyclic.Int63.Cyclic63.shift_unshift_mod_2	40
Coq.Numbers.Cyclic.Int63.Cyclic63.div_le_0	40
Coq.Numbers.Cyclic.Int63.Cyclic63.div_lt	40
Coq.Numbers.Cyclic.Int63.Cyclic63.P	40	20	search with cache (only 1: auto).	0.101140022278	300
Coq.Numbers.Cyclic.Int63.Cyclic63.shift_unshift_mod_3	40	0.0.1.0.1.0.0.0.0.0.0.0	search with cache (only 1: intros n p a H; only 1: rewrite Zmod_eq by auto with zarith; only 1: unfold Z.sub at 1; only 1: rewrite Z_div_plus_full_l by auto with zarith; only 1: replace (2 ^ n) with 2 ^ (n - p) * 2 ^ p by (rewrite <- Zpower_exp; [ f_equal |  |  ]; lia); only 1: rewrite <- Zdiv_Zdiv, Z_div_mult by auto with zarith; only 1: rewrite (Z.mul_comm (2 ^ (n - p))), Z.mul_assoc; only 1: rewrite Zopp_mult_distr_l; only 1: rewrite Z_div_mult by auto with zarith; only 1: symmetry; only 1: apply Zmod_eq; only 1: auto with zarith).	12.1575911045	1937
Coq.Numbers.Cyclic.Int63.Cyclic63.pos_mod_spec	40
Coq.Numbers.Cyclic.Int63.Int63.to_Z_rec_bounded	40
Coq.Numbers.Cyclic.Int63.Int63.to_Z_bounded	40
Coq.Numbers.Cyclic.Int63.Int63.Z_lt_div2	40
Coq.Numbers.Cyclic.Int63.Int63.Zmod_le_first	40
Coq.Numbers.Cyclic.Int63.Int63.Zmod_distr	40
Coq.Numbers.Cyclic.Int63.Int63.pow2_pos	40	9.1.12	search with cache (only 1: intros; only 1: apply Z.lt_gt; only 1: Z.order_pos).	0.939203977585	391
Coq.Numbers.Cyclic.Int63.Int63.pow2_nz	40	0	search with cache (only 1: Z.order_nz).	0.0230791568756	1
Coq.Numbers.Cyclic.Int63.Int63.wB_diff_0	40	3	search with cache (only 1: now Z.nzsimpl).	0.123355865479	4
Coq.Numbers.Cyclic.Int63.Int63.wB_pos	40	4	search with cache (only 1: now Z.nzsimpl).	0.124701976776	5
Coq.Numbers.Cyclic.Int63.Int63.to_Z_0	40	0	search with cache (only 1: tauto).	0.0159690380096	1
Coq.Numbers.Cyclic.Int63.Int63.to_Z_1	40	0	search with cache (only 1: now Z.nzsimpl).	0.0293061733246	1
Coq.Numbers.Cyclic.Int63.Int63.can_inj	40	6	search with cache (only 1: congruence).	0.015368938446	7
Coq.Numbers.Cyclic.Int63.Int63.to_Z_inj	40
Coq.Numbers.Cyclic.Int63.Int63.eqb_complete	40
Coq.Numbers.Cyclic.Int63.Int63.eqb_spec	40
Coq.Numbers.Cyclic.Int63.Int63.eqb_false_spec	40
Coq.Numbers.Cyclic.Int63.Int63.eqb_false_complete	40	0.0.0	search with cache (only 1: intros; only 1: rewrite <- not_true_iff_false, eqb_spec; only 1: trivial).	0.0237140655518	3
Coq.Numbers.Cyclic.Int63.Int63.eqb_false_correct	40	0.0.1	search with cache (only 1: intros x y; only 1: rewrite eqb_false_spec; only 1: trivial).	0.0337040424347	14
Coq.Numbers.Cyclic.Int63.Int63.eq_dec	40
Coq.Numbers.Cyclic.Int63.Int63.cast_refl	40
Coq.Numbers.Cyclic.Int63.Int63.cast_diff	40
Coq.Numbers.Cyclic.Int63.Int63.eqo_refl	40
Coq.Numbers.Cyclic.Int63.Int63.eqo_diff	40
Coq.Numbers.Cyclic.Int63.Int63.eqbP	40
Coq.Numbers.Cyclic.Int63.Int63.ltbP	40
Coq.Numbers.Cyclic.Int63.Int63.lebP	40
Coq.Numbers.Cyclic.Int63.Int63.compare_spec	40
Coq.Numbers.Cyclic.Int63.Int63.is_zero_spec	40	14.2.38	search with cache (only 1: split; only 1: auto using eqb_correct, eqb_complete; only 1: now intros ->).	4.16882705688	7774
Coq.Numbers.Cyclic.Int63.Int63.diveucl_spec	40
Coq.Numbers.Cyclic.Int63.Int63.addc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.succ_spec	40
Coq.Numbers.Cyclic.Int63.Int63.succc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.addcarry_spec	40
Coq.Numbers.Cyclic.Int63.Int63.addcarryc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.subc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.pred_spec	40
Coq.Numbers.Cyclic.Int63.Int63.predc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.oppc_spec	40	0	search with cache (only 1: apply subc_spec).	0.0130870342255	1
Coq.Numbers.Cyclic.Int63.Int63.opp_spec	40
Coq.Numbers.Cyclic.Int63.Int63.oppcarry_spec	40
Coq.Numbers.Cyclic.Int63.Int63.subcarry_spec	40
Coq.Numbers.Cyclic.Int63.Int63.subcarryc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.to_Z_gcd	40
Coq.Numbers.Cyclic.Int63.Int63.gcd_spec	40
Coq.Numbers.Cyclic.Int63.Int63.head00_spec	40
Coq.Numbers.Cyclic.Int63.Int63.tail00_spec	40	0	search with cache (only 1: now intros h; rewrite (to_Z_inj _ 0 h)).	0.0131361484528	1
Coq.Numbers.Cyclic.Int63.Int63.eqm_mod	40	3.17.2	search with cache (only 1: unfold eqm; only 1: repeat rewrite Zmod_mod; only 1: trivial).	3.51276803017	3209
Coq.Numbers.Cyclic.Int63.Int63.eqm_sub	40
Coq.Numbers.Cyclic.Int63.Int63.eqmE	40
Coq.Numbers.Cyclic.Int63.Int63.eqm_subE	40
Coq.Numbers.Cyclic.Int63.Int63.int_eqm	40
Coq.Numbers.Cyclic.Int63.Int63.eqmI	40
Coq.Numbers.Cyclic.Int63.Int63.add_assoc	40
Coq.Numbers.Cyclic.Int63.Int63.add_comm	40
Coq.Numbers.Cyclic.Int63.Int63.add_le_r	40
Coq.Numbers.Cyclic.Int63.Int63.add_cancel_l	40
Coq.Numbers.Cyclic.Int63.Int63.add_cancel_r	40	0.0.0.0.0.1.0	search with cache (only 1: intros h; only 1: apply int_eqm in h; only 1: rewrite !add_spec in h; only 1: apply eqm_mod, eqm_sub in h; only 1: replace (_ + _ - _) with φ (y) - φ (z) in h by lia; only 1: rewrite <- eqm_subE in h; only 1: apply eqmI, h).	0.0395109653473	8
Coq.Numbers.Cyclic.Int63.Int63.lsr0	40
Coq.Numbers.Cyclic.Int63.Int63.lsr_0_r	40	2.0.0	search with cache (only 1: apply to_Z_inj; only 1: rewrite lsr_spec; only 1: now Z.nzsimpl).	0.0762929916382	5
Coq.Numbers.Cyclic.Int63.Int63.lsr_1	40
Coq.Numbers.Cyclic.Int63.Int63.lsr_add	40
Coq.Numbers.Cyclic.Int63.Int63.lsl0	40
Coq.Numbers.Cyclic.Int63.Int63.lsl0_r	40
Coq.Numbers.Cyclic.Int63.Int63.lsl_add_distr	40
Coq.Numbers.Cyclic.Int63.Int63.lsr_M_r	40
Coq.Numbers.Cyclic.Int63.Int63.bit_0_spec	40
Coq.Numbers.Cyclic.Int63.Int63.bit_split	40
Coq.Numbers.Cyclic.Int63.Int63.bit_lsr	40
Coq.Numbers.Cyclic.Int63.Int63.bit_b2i	40
Coq.Numbers.Cyclic.Int63.Int63.bit_1	40
Coq.Numbers.Cyclic.Int63.Int63.to_Z_split	40
Coq.Numbers.Cyclic.Int63.Int63.bit_M	40
Coq.Numbers.Cyclic.Int63.Int63.bit_half	40
Coq.Numbers.Cyclic.Int63.Int63.bit_ext	40
Coq.Numbers.Cyclic.Int63.Int63.bit_lsl	40
Coq.Numbers.Cyclic.Int63.Int63.lor_lsr	40
Coq.Numbers.Cyclic.Int63.Int63.lor_le	40
Coq.Numbers.Cyclic.Int63.Int63.bit_0	40
Coq.Numbers.Cyclic.Int63.Int63.bit_add_or	40
Coq.Numbers.Cyclic.Int63.Int63.addmuldiv_spec	40
Coq.Numbers.Cyclic.Int63.Int63.is_even_bit	40
Coq.Numbers.Cyclic.Int63.Int63.is_even_spec	40
Coq.Numbers.Cyclic.Int63.Int63.is_even_0	40	0.0.0.2.0.0.1	search with cache (only 1: apply eqb_spec; only 1: apply bit_ext; only 1: intros n; only 1: unfold bit; only 1: rewrite lsr0; only 1: rewrite lsr0; only 1: auto).	0.0319008827209	10
Coq.Numbers.Cyclic.Int63.Int63.is_even_lsl_1	40
Coq.Numbers.Cyclic.Int63.Int63.quotient_by_2	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_main_trick	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_main	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_test_false	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_test_true	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_step_correct	40
Coq.Numbers.Cyclic.Int63.Int63.iter_sqrt_correct	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_init	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_spec	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt2_step_def	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt2_lower_bound	40
Coq.Numbers.Cyclic.Int63.Int63.diveucl_21_spec_aux	40
Coq.Numbers.Cyclic.Int63.Int63.div2_phi	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt2_step_correct	40
Coq.Numbers.Cyclic.Int63.Int63.iter2_sqrt_correct	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt2_spec	40
Coq.Numbers.Cyclic.Int63.Int63.of_pos_rec_spec	40
Coq.Numbers.Cyclic.Int63.Int63.is_int	40
Coq.Numbers.Cyclic.Int63.Int63.of_Z_spec	40
Coq.Numbers.Cyclic.Int63.Int63.negbE	40	2.7	search with cache (only 1: fix odd_spec 1; only 1: trivial).	0.0543398857117	30
Coq.Numbers.Cyclic.Int63.Int63.Z_oddE	40	1.12	search with cache (only 1: rewrite Zmod_odd; only 1: now destruct Z.odd).	0.354103088379	112
Coq.Numbers.Cyclic.Int63.Int63.Z_evenE	40	0.1	search with cache (only 1: rewrite Zmod_even; only 1: now destruct Z.even).	0.0343420505524	3
Coq.Numbers.Cyclic.Int63.Int63.is_zeroE	40
Coq.Numbers.Cyclic.Int63.Int63.bitE	40
Coq.Numbers.Cyclic.Int63.Int63.lt_pow_lt_log	40
Coq.Numbers.Cyclic.Int63.Int63.land_spec'	40
Coq.Numbers.Cyclic.Int63.Int63.lor_spec'	40
Coq.Numbers.Cyclic.Int63.Int63.lxor_spec'	40
Coq.Numbers.Cyclic.Int63.Int63.landC	40
Coq.Numbers.Cyclic.Int63.Int63.landA	40
Coq.Numbers.Cyclic.Int63.Int63.land0	40	0.0.6.3.0.0	search with cache (only 1: apply bit_ext; only 1: intros n; only 1: rewrite !land_spec, andb_comm; only 1: unfold bit; only 1: rewrite lsr0, lsl0, andb_false_r; only 1: auto).	0.890700101852	628
Coq.Numbers.Cyclic.Int63.Int63.land0_r	40	1.0.0.0.0	search with cache (only 1: apply bit_ext; only 1: intros n; only 1: rewrite land_spec, bit_0; only 1: rewrite andb_false_r; only 1: trivial).	0.0533459186554	6
Coq.Numbers.Cyclic.Int63.Int63.lorC	40
Coq.Numbers.Cyclic.Int63.Int63.lorA	40
Coq.Numbers.Cyclic.Int63.Int63.lor0	40
Coq.Numbers.Cyclic.Int63.Int63.lor0_r	40	10.0.0.0	search with cache (only 1: apply bit_ext; only 1: intros n; only 1: rewrite lor_spec, bit_0; only 1: now rewrite orb_false_r).	0.804098844528	524
Coq.Numbers.Cyclic.Int63.Int63.lxorC	40
Coq.Numbers.Cyclic.Int63.Int63.lxorA	40
Coq.Numbers.Cyclic.Int63.Int63.lxor0	40
Coq.Numbers.Cyclic.Int63.Int63.lxor0_r	40
Coq.Numbers.Cyclic.Int63.Ring63.ring_theory_switch_eq	40	4.6	search with cache (only 1: intros; only 1: firstorder).	0.109963178635	41
Coq.Numbers.Cyclic.Int63.Ring63.Int63Ring	40
Coq.Numbers.Cyclic.Int63.Ring63.eq31_correct	40	1.0	search with cache (only 1: intros x y H; only 1: auto using eqb_correct, eqb_complete).	0.0299019813538	3
Coq.Numbers.Cyclic.Int63.Ring63.test	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.eq_equiv	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.gt_wB_1	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.gt_wB_0	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.one_mod_wB	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.succ_mod_wB	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.pred_mod_wB	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.NZ_to_Z_mod	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.pred_succ	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.one_succ	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.two_succ	40	19	search with cache (only 1: now subst).	0.0532329082489	165
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.B0	40	7	search with cache (only 1: auto with *).	0.0271010398865	8
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.BS	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.Zbounded_induction	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.B_holds	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.bi_induction	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.add_0_l	40	3.1.2	search with cache (only 1: firstorder; only 1: zify; only 1: apply NZ_to_Z_mod).	0.172692060471	38
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.add_succ_l	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.sub_0_r	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.sub_succ_r	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.mul_0_l	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.mul_succ_l	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_wf_0	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.nlt_0_r	40	19.0.25	search with cache (only 1: intros H; only 1: rewrite nlt_ge; only 1: apply le_0_l).	3.86045980453	11451
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.nle_succ_0	40	11.15.22.1	search with cache (only 1: intro n; only 1: rewrite nle_gt; only 1: apply lt_succ_r; only 1: apply le_0_l).	9.02292490005	23573
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_0_r	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_0_succ	40	12.15.21	search with cache (only 1: intro n; only 1: apply lt_succ_r; only 1: apply le_0_l).	1.78137016296	3772
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.neq_0_lt_0	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.eq_0_gt_0_cases	40	2.5.0.8.2	search with cache (only 1: cases ltac:(n); only 1: now left; only 1: intro n; only 1: right; only 1: apply lt_0_succ).	0.718923091888	713
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.zero_one	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_1_r	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_1_r	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_lt_0	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_1_l'	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_ind_rel	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_ind_rel	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.succ_pred_pos	40	0.1.2.0.1	search with cache (only 1: cases ltac:(n); only 1: intro H; only 1: order; only 1: intros; only 1: now rewrite pred_succ).	0.0468609333038	15
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_pred_l	40	1.22.1.4.0.0.10	search with cache (only 1: intro n; only 1: cases n; only 1: rewrite pred_0; only 1: solve_proper; only 1: intro n; only 1: apply le_le_succ_r; only 1: now rewrite pred_succ).	4.65693306923	8008
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_l	40	9.5.1.3.0.2	search with cache (only 1: cases ltac:(n); only 1: intro H; only 1: now elim H; only 1: intros n _; only 1: rewrite pred_succ; only 1: apply lt_succ_diag_r).	6.55058884621	7747
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_le_pred	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_lt_pred	40	8.0.0.4.6.0.0	search with cache (only 1: cases ltac:(n); only 1: intro H; only 1: rewrite pred_0; only 1: order'; only 1: intros; only 1: rewrite pred_succ; only 1: now apply lt_succ_l).	4.87752604485	7028
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_le_pred	40	0.0.2.12.0.0.5.0.1	search with cache (only 1: cases ltac:(n); only 1: intros n H; only 1: destruct (lt_exists_pred _ _ H) as (n', (EQ, LE)); only 1: rewrite EQ; only 1: now rewrite pred_succ; only 1: intros z n H; only 1: destruct (lt_exists_pred _ _ H) as (n', (EQ, LE)); only 1: rewrite EQ; only 1: now rewrite pred_succ).	14.8495800495	14429
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_le	40	5.0.1.4.1.11.1	search with cache (only 1: cases ltac:(n); only 1: intros x y; only 1: apply le_0_l; only 1: intro n; only 1: intro m; only 1: rewrite pred_succ; only 1: now apply le_succ_l).	15.1639361382	15230
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_lt	40	2.2.2.2.6.3.4.1	search with cache (only 1: intros n m; only 1: cases m; only 1: rewrite pred_0; only 1: order; only 1: intros m IH; only 1: rewrite pred_succ in IH; only 1: rewrite lt_succ_r; only 1: order).	16.6108708382	25864
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_pred_le	40	13.3.0.1.2.0.0	search with cache (only 1: intro n; only 1: cases ltac:(m); only 1: rewrite pred_0; only 1: order; only 1: intros m IH; only 1: rewrite pred_succ in IH; only 1: now apply le_le_succ_r).	17.1665809155	23014
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.pred_le_mono	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.pred_lt_mono	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_succ_lt_pred	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_succ_le_pred	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_lt_succ	40	1.0.2.2.0.1.2.0.8.0	search with cache (only 1: intros n m; only 1: cases n; only 1: rewrite pred_0; only 1: rewrite lt_succ_r; only 1: now apply lt_le_incl; only 1: intros n IH; only 1: rewrite pred_lt_mono by apply neq_succ_0; only 1: rewrite pred_succ; only 1: rewrite pred_succ in IH; only 1: now rewrite pred_succ).	34.583178997	23873
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_pred_le_succ	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_upper_bound	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_eq	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mod_unique	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_unique	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_unique	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_unique_exact	40	0.1.6.1.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_unique with 0; only 1: auto'; only 1: nzsimpl; only 1: order).	0.732768058777	381
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_same	40	2.1.0.1.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique_exact; only 1: auto'; only 1: now nzsimpl).	0.0658268928528	15
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_same	40	1.0.26.1.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 1; only 1: auto'; only 1: now nzsimpl).	2.84247493744	4905
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_small	40	10.7.1	search with cache (only 1: intros; only 1: apply div_small; only 1: auto').	2.17487192154	2362
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_small	40	0.1.1	search with cache (only 1: intros; only 1: apply mod_small; only 1: auto').	0.0210771560669	5
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_0_l	40	0.2.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: auto').	0.0223422050476	5
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_0_l	40	0.1.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: auto').	0.0224211215973	4
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_1_r	40	2.0.0.5.0.1.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique_exact; only 1: rewrite one_succ; only 1: intro n; only 1: now apply (neq_succ_diag_l 0); only 1: now nzsimpl).	0.675920963287	572
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_1_r	40	1.9.1.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: apply lt_0_1; only 1: now nzsimpl).	0.737971067429	853
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_1_l	40	6.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: order).	0.0210270881653	9
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_1_l	40	6.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: order).	0.0209419727325	9
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul	40	11.2.0.1.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique_exact; only 1: auto'; only 1: apply mul_comm).	2.05288505554	2214
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_mul	40	1.0.3.0.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: symmetry; only 1: apply mod_mul; only 1: auto'; only 1: auto').	0.0863969326019	37
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_le	40	1.0.9.0	search with cache (only 1: intros; only 1: apply mod_le; only 1: auto'; only 1: auto').	0.355854988098	196
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_str_pos	40	0.8.0	search with cache (only 1: intros a b (Hb, Hab); only 1: apply div_str_pos; only 1: auto).	0.492864131927	99
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_small_iff	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_small_iff	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_str_pos_iff	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_lt	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_mono	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_div_le	40	1.0.9.0	search with cache (only 1: intros; only 1: apply mul_div_le; only 1: auto'; only 1: auto').	0.575554132462	244
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_succ_div_gt	40	1.0.2.2.0.0.0	search with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite mul_succ_r; only 1: rewrite <- add_lt_mono_l; only 1: apply mod_bound_pos; only 1: auto'; only 1: auto').	0.406589984894	135
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_exact	40	0.0.0.0	search with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite <- (add_0_r (b * (a / b)))  at 2; only 1: apply add_cancel_l).	0.0390641689301	4
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_lt_upper_bound	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_upper_bound	40	0.0.7.0.0.1.0	search with cache (only 1: intros; only 1: rewrite <- (Private_NZDiv.div_mul q b); only 1: apply Private_NZDiv.div_le_mono; only 1: auto'; only 1: rewrite mul_comm; only 1: auto'; only 1: auto').	3.01754212379	1703
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_lower_bound	40	0.0.8.0.1.2.0	search with cache (only 1: intros; only 1: rewrite <- (Private_NZDiv.div_mul q b); only 1: apply Private_NZDiv.div_le_mono; only 1: auto'; only 1: rewrite mul_comm; only 1: auto'; only 1: auto').	3.94526314735	2560
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_compat_l	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_add	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_add	40	0.0.0.7.0	search with cache (only 1: intros; only 1: apply div_add; only 1: auto'; only 1: auto'; only 1: auto').	1.09385704994	396
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_add_l	40	3.2.1.0	search with cache (only 1: intros; only 1: rewrite (add_comm _ c), (add_comm a); only 1: apply Private_NZDiv.div_add; only 1: auto').	0.0394520759583	10
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_cancel_r	40	1.2.1.4.0	search with cache (only 1: intros; only 1: apply div_mul_cancel_r; only 1: auto'; only 1: auto'; only 1: auto').	0.949491024017	508
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_cancel_l	40	0.0.0.5.0	search with cache (only 1: intros; only 1: rewrite !(mul_comm c); only 1: apply Private_NZDiv.div_mul_cancel_r; only 1: auto'; only 1: auto').	0.115743875504	33
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_distr_r	40	1.1.0.2.0.1.1.2.0	search with cache (only 1: intros; only 1: rewrite !(mul_comm _ c); only 1: rewrite <- (add_cancel_l _ _ (c * b * (c * a / (c * b)))); only 1: rewrite <- div_mod by (apply neq_mul_0; split; order); only 1: rewrite Private_NZDiv.div_mul_cancel_l; only 1: rewrite <- mul_assoc, <- mul_add_distr_l, mul_cancel_l by order; only 1: now apply div_mod; only 1: auto'; only 1: auto').	4.14715886116	1185
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_distr_l	40	1.1.0.2.0.1.2.0	search with cache (only 1: intros; only 1: rewrite <- (add_cancel_l _ _ (c * b * (c * a / (c * b)))); only 1: rewrite <- div_mod by (apply neq_mul_0; split; order); only 1: rewrite Private_NZDiv.div_mul_cancel_l; only 1: rewrite <- mul_assoc, <- mul_add_distr_l, mul_cancel_l by order; only 1: now apply div_mod; only 1: auto'; only 1: auto').	2.06320595741	608
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_mod	40	1.0.1.5.0.0.0	search with cache (only 1: intros; only 1: destruct (mod_bound_pos a n); only 1: auto'; only 1: apply neq_0_lt_0; only 1: intro H1; only 1: tauto; only 1: now rewrite Private_NZDiv.mod_small_iff).	0.482764005661	289
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_idemp_l	40	1.1.0.7.0	search with cache (only 1: intros; only 1: apply mul_mod_idemp_l; only 1: auto'; only 1: auto'; only 1: auto').	1.1986310482	295
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_idemp_r	40	0.1.0.3.0	search with cache (only 1: intros; only 1: rewrite !(mul_comm a); only 1: apply Private_NZDiv.mul_mod_idemp_l; only 1: intro H1; only 1: tauto).	0.0357179641724	9
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod	40	0.1.0.1.6.4.0	search with cache (only 1: intros; only 1: rewrite Private_NZDiv.mul_mod_idemp_l, Private_NZDiv.mul_mod_idemp_r; only 1: reflexivity; only 1: intro H1; only 1: tauto; only 1: intro H1; only 1: tauto).	1.69404911995	696
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.add_mod_idemp_l	40	1.0.0.4.0	search with cache (only 1: intros; only 1: apply add_mod_idemp_l; only 1: auto'; only 1: auto'; only 1: auto').	0.277984142303	35
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.add_mod_idemp_r	40	0.1.0.2.0	search with cache (only 1: intros; only 1: rewrite !(add_comm a); only 1: apply Private_NZDiv.add_mod_idemp_l; only 1: intro H1; only 1: tauto).	0.0392179489136	8
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.add_mod	40	0.1.0.1.5.2.0	search with cache (only 1: intros; only 1: rewrite Private_NZDiv.add_mod_idemp_l, Private_NZDiv.add_mod_idemp_r; only 1: reflexivity; only 1: intro H1; only 1: tauto; only 1: intro H1; only 1: tauto).	2.6903860569	727
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_div	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_mul_r	40	0.0.2.0.0.0.2	search with cache (only 1: intros; only 1: apply add_cancel_l with (b * c * (a / (b * c))); only 1: rewrite <- div_mod by (apply neq_mul_0; split; order); only 1: rewrite <- Private_NZDiv.div_div by trivial; only 1: rewrite add_assoc, add_shuffle0, <- mul_assoc, <- mul_add_distr_l; only 1: rewrite <- div_mod by order; only 1: now apply div_mod).	0.489690065384	61
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_le	40	4.0.0.1.0.4.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto'; only 1: rewrite mul_assoc, (mul_comm b c), <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: auto'; only 1: apply Private_NZDiv.mul_div_le; only 1: auto').	0.847110033035	445
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_divides	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.if_zero_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.if_zero_0	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.if_zero_succ	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_0_l	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_succ_l	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_add	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_0_r	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_succ_r	40	0.0.1.1.1.0	search with cache (only 1: intros x y; only 1: unfold def_mul; only 1: rewrite recursion_succ; only 1: f_equiv'; only 1: now nzsimpl; only 1: f_equiv').	2.17307496071	23
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_mul	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_base	40	2.0.0.0	search with cache (only 1: unfold if_zero; only 1: intros; only 1: unfold ltb; only 1: now rewrite recursion_0).	1.02514004707	6
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_step	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_0	40	1.0.6.2.0.9.30.9.0	search with cache (only 1: intro n; only 1: rewrite <- ?negb_true_iff, ?PeanoNat.Nat.negb_even, ?PeanoNat.Nat.odd_spec, ?PeanoNat.Nat.even_spec; only 1: apply eq_true_iff_eq; only 1: split; only 1: unfold ltb at 1; only 1: f_equiv'; only 1: fix odd_spec 1; only 1: unfold ltb at 1; only 1: f_equiv').	33.9573090076	78746
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_0_succ	40	1.5.4.0	search with cache (only 1: intro n; only 1: rewrite ltb_base; only 1: unfold if_zero; only 1: now rewrite recursion_succ).	0.644612073898	401
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.succ_ltb_mono	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_lt	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_ge	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.even_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.even_0	40	1.4	search with cache (only 1: unfold even; only 1: now rewrite recursion_0).	0.0218300819397	7
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.even_succ	40	1.7.0	search with cache (only 1: unfold even; only 1: intro H; only 1: now rewrite recursion_succ).	0.089595079422	69
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_0	40	2.9	search with cache (only 1: compute; only 1: now rewrite recursion_0).	0.053661108017	49
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_succ	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_spec	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_spec2	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_0	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_1	40	0.0.0.0.1.0.9	search with cache (only 1: setoid_rewrite one_succ; only 1: unfold half; only 1: rewrite half_aux_succ; only 1: simpl; only 1: rewrite half_aux_0; only 1: simpl; only 1: now nzsimpl).	9.83287096024	529
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_double	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_upper_bound	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_lower_bound	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_nz	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_decrease	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow_0	40	1.6.4	search with cache (only 1: unfold pow; only 1: intro n; only 1: now rewrite recursion_0).	0.922226905823	124
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow_succ	40	0.1.1.1.0.0	search with cache (only 1: intros; only 1: unfold pow; only 1: rewrite recursion_succ; only 1: f_equiv'; only 1: auto with *; only 1: f_equiv').	0.224179029465	9
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_prewd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_good_step	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_init	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_step	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow2_log	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow_sub_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow_div_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_proper	40	2	search with cache (only 1: solve_proper).	0.328294992447	86
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.exists_div2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_0_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_succ_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_spec'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_spec	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_true	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_false	40	0.0.1.0.0.1.0.1.0.0.0.0	search with cache (only 1: intros a n; only 1: rewrite <- testbit_spec'; only 1: destruct a.[n]; only 1: split; only 1: simpl; only 1: now try order'; only 1: simpl; only 1: now try order'; only 1: split; only 1: simpl; only 1: now try order'; only 1: split).	2.88157582283	1348
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_inj	40	0.0.16	search with cache (only 1: destr_bool; only 1: now try order'; only 1: now try order').	0.146868944168	182
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_b2n_double_div2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_b2n_double_bit0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_div2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_bit0	40	0.0.0.0.21	search with cache (only 1: intros; only 1: apply b2n_inj; only 1: rewrite testbit_spec'; only 1: nzsimpl; only 1: now rewrite mod_small by (destruct a0; order')).	1.37814807892	686
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_unique	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_0	40	0.0.6.1.0.0.3.7	search with cache (only 1: intros a0; only 1: apply b2n_inj; only 1: rewrite testbit_spec'; only 1: nzsimpl; only 1: simpl; only 1: solve_proper; only 1: order'; only 1: order_nz).	1.43928003311	909
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit0_odd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit0_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit0_mod	40	0.0.0.1.1.0.0.1.0	search with cache (only 1: intros a; only 1: destruct (exists_div2 a) as (a', (b, H)); only 1: rewrite H  at 1; only 1: rewrite testbit_0_r; only 1: apply mod_unique with a'; only 1: destruct b; only 1: order'; only 1: order'; only 1: trivial).	0.483640193939	161
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_odd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit_log2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_above_log2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_bits	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div_pow2_bits	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.double_bits_succ	40	0.2	search with cache (only 1: intros; only 1: apply testbit_even_succ, le_0_l).	0.0198540687561	4
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mul_pow2_bits_add	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mul_pow2_bits_high	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mul_pow2_bits_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mod_pow2_bits_high	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mod_pow2_bits_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.eqf_equiv	40	19.0.9.27.2.1.46	search with cache (only 1: split; only 1: firstorder; only 1: firstorder; only 1: intros x x' EQ; only 1: compute; only 1: symmetry; only 1: now rewrite H).	17.0625641346	32467
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_eqf	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_inj_0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_inj	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_inj_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.are_bits	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_spec'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_spec_high'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_div_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_mul_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_spec_alt	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_wd	40	6.0.0.0.2.7.5	search with cache (only 1: repeat red; only 1: intros z n H; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: bitwise; only 1: rewrite shiftr_spec'; only 1: rewrite shiftr_spec'; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	24.9683480263	9247
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_shiftl	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_shiftr	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_shiftl_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_shiftl_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_1_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_0_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_0_r	40	0.0.1.16.37	search with cache (only 1: generalize (lt_succ_diag_r 0); only 1: intros n H; only 1: bitwise; only 1: rewrite shiftr_spec'; only 1: now nzsimpl).	28.2229208946	27825
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_0_l	40	0.0.7	search with cache (only 1: intro H; only 1: rewrite shiftl_mul_pow2; only 1: now nzsimpl).	0.1674721241	54
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_0_l	40	0.6.0.1.0	search with cache (only 1: intros; only 1: rewrite shiftr_div_pow2; only 1: nzsimpl; only 1: solve_proper; only 1: order_nz).	0.280725955963	95
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_eq_0	40	0.1.0.3.0.1	search with cache (only 1: intros; only 1: rewrite shiftr_div_pow2, div_small_iff by order_nz; only 1: apply log2_lt_cancel; only 1: rewrite log2_pow2; only 1: trivial; only 1: trivial using le_0_l).	1.04011392593	416
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_div	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_wd	40	6.5.2.1.0.8	search with cache (only 1: repeat red; only 1: intros; only 1: rewrite div2_spec, shiftr_div_pow2; only 1: rewrite div2_spec, shiftr_div_pow2; only 1: f_equiv; only 1: auto with *).	39.7128338814	20450
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_odd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_wd	40	0.2.4	search with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.360992908478	54
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_wd	40	0.2.3	search with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.362875938416	39
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_wd	40	0.1.2	search with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.266079902649	15
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_eq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_nilpotent	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_0_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_0_r	40	0.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_l).	0.0309231281281	3
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_comm	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_assoc	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_0_l	40	4.0.4	search with cache (only 1: intro n; only 1: bitwise; only 1: destr_bool).	0.156813144684	44
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_0_r	40	2.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_r).	0.0286870002747	5
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_comm	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_assoc	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_diag	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_eq_0_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_0_l	40	1.0.5	search with cache (only 1: intro H; only 1: bitwise; only 1: repeat split).	0.0376961231232	16
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_0_r	40	14.15.1.6	search with cache (only 1: intro H; only 1: bitwise; only 1: apply andb_false_iff; only 1: intuition).	3.81349802017	7086
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_comm	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_assoc	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_diag	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_0_l	40	1.0.1	search with cache (only 1: intro n; only 1: bitwise; only 1: trivial).	0.0275349617004	5
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_0_r	40	5.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply andb_comm).	0.0276048183441	8
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_diag	40	48.1.7	search with cache (only 1: intro H; only 1: bitwise; only 1: intuition).	24.1250698566	43550
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_land_distr_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_land_distr_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lor_distr_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lor_distr_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ldiff_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_ldiff_and	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_ldiff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_spec'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_spec'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_wd	40	0.0.4.4	search with cache (only 1: intros a a' Ha b b' Hb; only 1: unfold setbit; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.846279859543	182
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_wd	40	0.0.3.3	search with cache (only 1: intros a a' Ha b b' Hb; only 1: unfold clearbit; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.367419958115	29
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_true	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_false	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_eq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_neq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_eq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_neq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_lxor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_lxor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_land	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_land	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_lor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_lor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_ldiff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_ldiff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_equiv	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_add	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_div_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_mod_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_spec_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_spec_high	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_spec_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_spec_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_spec_high	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_involutive	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_0_l	40	0.2.4.2	search with cache (only 1: intros; only 1: unfold lnot; only 1: bitwise; only 1: apply xorb_false_r).	0.654299974442	225
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_ones	40	6.0.0	search with cache (only 1: intros; only 1: unfold lnot; only 1: apply lxor_nilpotent).	0.0270960330963	17
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_ones_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_ones	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_ones_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ones_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ones_r_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ones_l_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_lnot_diag	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_lnot_diag_low	40	0.0.1.0.0.0.1.0.0.2.0.0	search with cache (only 1: intros a n H; only 1: bitwise; only 1: destruct (le_gt_cases n m); only 1: rewrite ones_spec_high, lnot_spec_high, bits_above_log2; only 1: trivial; only 1: now apply lt_le_trans with n; only 1: trivial; only 1: trivial; only 1: rewrite lnot_spec_low, ones_spec_low; only 1: now destruct a.[m]; only 1: trivial; only 1: trivial).	3.68028903008	2503
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lnot_diag	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lnot_diag_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_lor_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_land_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_land_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_ldiff_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_lnot_lnot	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_lxor_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_lxor_r	40	0.0.1.6	search with cache (only 1: unfold lnot; only 1: intros; only 1: bitwise; only 1: apply xorb_assoc_reverse).	0.681674003601	318
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_lor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_bits_unique	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_shiftr	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_shiftl	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_lor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_land	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_lxor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_bit0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add3_bit0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add3_bits_div2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_carry_div2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_carry_bits	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_bit1	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.nocarry_equiv	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_nocarry_lxor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_le	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.sub_nocarry_ldiff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_lnot_diag_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_sub_low	40	0.0.12.14.3.0	search with cache (only 1: intros a n H; only 1: pose proof (land_lnot_diag_low a n H) as H'; only 1: symmetry; only 1: apply add_sub_eq_l; only 1: rewrite add_nocarry_lxor, lxor_lor by trivial; only 1: now apply lor_lnot_diag_low).	39.7988920212	38302
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_nocarry_lt_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_nocarry_mod_lt_pow2	40
Coq.Numbers.Natural.Abstract.NIso.Homomorphism.natural_isomorphism_wd	40
Coq.Numbers.Natural.Abstract.NIso.Homomorphism.natural_isomorphism_0	40
Coq.Numbers.Natural.Abstract.NIso.Homomorphism.natural_isomorphism_succ	40
Coq.Numbers.Natural.Abstract.NIso.Homomorphism.hom_nat_iso	40	0.0.1.1.0.0.0.18.3.0	search with cache (only 1: unfold natural_isomorphism; only 1: repeat red; only 1: intuition; only 1: now rewrite N1.recursion_0; only 1: rewrite N1.recursion_succ; only 1: auto with *; only 1: auto with *; only 1: repeat red; only 1: intros; only 1: now f_equiv).	0.935338020325	1764
Coq.Numbers.Natural.Abstract.NIso.Inverse.inverse_nat_iso	40
Coq.Numbers.Natural.Abstract.NIso.Isomorphism.iso_nat_iso	40
Coq.Numbers.Natural.Abstract.NParity.NParityProp.odd_pred	40
Coq.Numbers.Natural.Abstract.NParity.NParityProp.even_pred	40	0.3.4.1.0.0	search with cache (only 1: intros; only 1: rewrite <- (succ_pred n)  at 2 by trivial; only 1: symmetry; only 1: apply eq_iff_eq_true; only 1: rewrite even_spec, odd_spec; only 1: apply Odd_succ).	2.0337998867	876
Coq.Numbers.Natural.Abstract.NParity.NParityProp.even_sub	40
Coq.Numbers.Natural.Abstract.NParity.NParityProp.odd_sub	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_0_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_succ	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_diag	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_gt	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_assoc	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_succ_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_add	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_eq_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_eq_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_eq_nz	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_add_distr	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_swap	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_sub_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_0_le	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_add_le	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_sub_le_add_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_sub_le_add_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_sub_lt_add_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_sub_lt_add_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_add_le_sub_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_add_le_sub_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_add_lt_sub_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_add_lt_sub_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_lt	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_le_mono_r	40	0.3.1.0.0.4.1	search with cache (only 1: intros n m p LE; only 1: destruct (le_ge_cases n p) as [LE'| GE]; only 1: rewrite <- sub_0_le in LE'; only 1: rewrite LE'; only 1: apply le_0_l; only 1: apply le_add_le_sub_r; only 1: now rewrite sub_add).	5.92271995544	3213
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_le_mono_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.mul_pred_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.mul_sub_distr_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.mul_sub_distr_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_equiv	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_equiv	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_alt_wd	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_alt_wd	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_alt_dichotomy	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_dichotomy	40
Coq.Numbers.DecimalZ.of_to	40
Coq.Numbers.DecimalZ.to_of	40
Coq.Numbers.DecimalZ.to_int_inj	40
Coq.Numbers.DecimalZ.to_int_surj	40
Coq.Numbers.DecimalZ.of_int_norm	40
Coq.Numbers.DecimalZ.of_inj	40	4.3.14	search with cache (only 1: rewrite <- !DecimalPos.Unsigned.to_of; only 1: intros [=<-]; only 1: trivial).	13.7035059929	6591
Coq.Numbers.DecimalZ.of_iff	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_spec_nonneg	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_nonneg	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_unique	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_wd	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_spec_alt	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_unique'	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_pred_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_le_mono	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_lt_cancel	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_le_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_lt_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_0	40	0.18.1	search with cache (only 1: apply sqrt_unique' with 0; only 1: now nzsimpl'; only 1: now nzsimpl).	0.687721967697	635
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_1	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_2	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_pos	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_lt_lin	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_le_lin	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_mul_below	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_mul_above	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_succ_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_succ_or	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_eq_succ_iff_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_add_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.add_sqrt_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_eqn0	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_eqn	40	0.0.0.0.3.1	search with cache (only 1: intros a Ha; only 1: unfold sqrt_up; only 1: case compare_spec; only 1: order; only 1: order; only 1: order).	0.0384910106659	10
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_spec	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_nonneg	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_wd	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_unique	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_succ_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_0	40	2.0.0.0.2	search with cache (only 1: unfold sqrt_up; only 1: case compare_spec; only 1: tauto; only 1: order; only 1: reflexivity).	0.0287580490112	18
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_1	40	0.0.5.24	search with cache (only 1: rewrite one_succ; only 1: rewrite <- (mul_0_l 0)  at 1; only 1: rewrite sqrt_up_eqn by now apply lt_succ_r, mul_nonneg_nonneg; only 1: now rewrite pred_succ, sqrt_square).	4.69471001625	5509
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_2	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.le_sqrt_sqrt_up	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.le_sqrt_up_succ_sqrt	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_sqrt_up_spec	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_sqrt_up_exact	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_mono	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_lt_cancel	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_lt_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_pos	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_lt_lin	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_lin	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_mul_above	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_mul_below	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_succ_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_succ_or	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_eq_succ_iff_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_add_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.add_sqrt_up_le	40
Coq.Numbers.NatInt.NZDomain.nat_rect_wd	40	1.0.1.16.0	search with cache (only 1: simpl_relation; only 1: induction n; only 1: apply H; only 1: apply H0; only 1: Tactics.program_simpl).	5.9619178772	1222
Coq.Numbers.NatInt.NZDomain.NZDomainProp.itersucc_or_itersucc	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.succ_swap_pred	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.itersucc_or_iterpred	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.itersucc0_or_iterpred0	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.initial_alt	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.initial_alt2	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.initial_unique	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.initial_ancestor	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.succ_pred_approx	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.succ_onto_gives_succ_pred	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.succ_onto_pred_injective	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.bi_induction_pred	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.central_induction_pred	40
Coq.Numbers.NatInt.NZDomain.NZOfNat.ofnat_zero	40	12	search with cache (only 1: now subst).	0.0216989517212	46
Coq.Numbers.NatInt.NZDomain.NZOfNat.ofnat_succ	40	1.4	search with cache (only 1: intro n; only 1: now f_equal).	0.0175189971924	7
Coq.Numbers.NatInt.NZDomain.NZOfNat.ofnat_pred	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_S_gt_0	40	21.3.5	search with cache (only 1: induction n; only 1: apply PeanoNat.Nat.lt_succ_diag_r; only 1: now apply PeanoNat.Nat.lt_lt_succ_r).	13.7494499683	20675
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_S_neq_0	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_injective	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_eq	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_lt	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_le	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_add_l	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_add	40	0.0.0.2.0.5.7.4	search with cache (only 1: intro n; only 1: symmetry; only 1: induction n; only 1: apply add_0_l; only 1: PeanoNat.Nat.nzsimpl; only 1: rewrite ofnat_succ, add_succ_l; only 1: simpl; only 1: now f_equiv).	10.2623260021	7114
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_mul	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_sub_r	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_sub	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_mono_l	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_mono_r	40	0.0.0.0.2.0	search with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite <- succ_lt_mono).	0.0957219600677	8
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_mono	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_mono_l	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_mono_r	40	0.0.0.0.2.0	search with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite <- succ_le_mono).	0.099454164505	8
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_mono	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_le_mono	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_lt_mono	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_pos_pos	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_pos_nonneg	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonneg_pos	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonneg_nonneg	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_add_pos_l	40	0.0.0.0.3.12.5.9	search with cache (only 1: intro; only 1: intro p; only 1: nzinduct p; only 1: rewrite <- (add_0_l 0); only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite <- succ_lt_mono).	9.77376008034	5609
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_add_pos_r	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_lt_add_lt	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_le_add_lt	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_le_add_le	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_cases	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_cases	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_neg_cases	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_pos_cases	40	1.0.0	search with cache (only 1: intros n m H; only 1: apply add_lt_cases; only 1: now nzsimpl).	0.0247581005096	4
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonpos_cases	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonneg_cases	40	1.0.0	search with cache (only 1: intros n m H; only 1: apply add_le_cases; only 1: now nzsimpl).	0.0257380008698	4
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_exists_sub	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_nonneg	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_unique	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_wd	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_spec_alt	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_unique'	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pred_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_1	40	2.14.0.4.3.4.2	search with cache (only 1: apply log2_unique' with 0; only 1: order_pos; only 1: split; only 1: order_pos; only 1: order_pos; only 1: rewrite <- add_0_r  at 1; only 1: now nzsimpl).	4.05490994453	4717
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_2	40	2.1.4.3.0.16.2.10	search with cache (only 1: rewrite <- (pow_0_r 2); only 1: apply log2_unique' with 0; only 1: nzsimpl; only 1: apply lt_le_incl, lt_0_1; only 1: split; only 1: order_pos; only 1: order_pos; only 1: now nzsimpl).	28.161906004	18618
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pos	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_null	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_le_mono	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_lt_cancel	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_le_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_lt_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_lt_lin	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_le_lin	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_mul_below	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_mul_above	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_mul_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_double	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_same	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_succ_le	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_succ_or	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_eq_succ_is_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_eq_succ_iff_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_succ_double	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_add_le	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.add_log2_lt	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eqn0	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eqn	40	0.0.0.0.3.1	search with cache (only 1: intros a Ha; only 1: unfold log2_up; only 1: case compare_spec; only 1: order; only 1: order; only 1: order).	0.0289349555969	10
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_spec	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_nonpos	40	0.7.0.0.0.0	search with cache (only 1: intros a Ha; only 1: unfold log2_up; only 1: case compare_spec; only 1: order; only 1: order'; only 1: order).	0.360785007477	216
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_wd	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_nonneg	40	1.9.1.2.2.0	search with cache (only 1: intros; only 1: unfold log2_up; only 1: case compare; only 1: order; only 1: order_pos; only 1: order).	0.781715869904	1094
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_unique	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_1	40	0.0.0.0.1	search with cache (only 1: unfold log2_up; only 1: case compare_spec; only 1: order; only 1: order; only 1: order).	0.0162410736084	6
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.le_log2_log2_up	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.le_log2_up_succ_log2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_log2_up_spec	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_log2_up_exact	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_pos	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_null	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_le_mono	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_lt_cancel	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_lt_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_le_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_lt_lin	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_le_lin	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_mul_above	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_mul_below	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_mul_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_double	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_same	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_le	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_or	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eq_succ_is_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eq_succ_iff_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_double	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_add_le	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.add_log2_up_lt	40
Coq.Structures.OrdersTac.OrderFacts.eq_refl	40	21	search with cache (only 1: simpl_relation).	0.0408759117126	208
Coq.Structures.OrdersTac.OrderFacts.le_refl	40
Coq.Structures.OrdersTac.OrderFacts.lt_irrefl	40	14.41.9.0	search with cache (only 1: intros; only 1: intro H; only 1: elim (CRelationClasses.StrictOrder_Irreflexive x); only 1: simpl_relation).	10.6323518753	68489
Coq.Structures.OrdersTac.OrderFacts.eq_sym	40	15	search with cache (only 1: apply (@CRelationClasses.symmetry _ _ _ _)).	0.0603020191193	178
Coq.Structures.OrdersTac.OrderFacts.le_antisym	40
Coq.Structures.OrdersTac.OrderFacts.neq_sym	40	0	search with cache (only 1: auto with *).	0.0109300613403	1
Coq.Structures.OrdersTac.OrderFacts.trans	40
Coq.Structures.OrdersTac.OrderFacts.eq_neq	40
Coq.Structures.OrdersTac.OrderFacts.neq_eq	40	0	search with cache (only 1: eauto using eq_trans, eq_sym).	0.00912308692932	1
Coq.Structures.OrdersTac.OrderFacts.not_neq_eq	40
Coq.Structures.OrdersTac.OrderFacts.not_ge_lt	40	0.1.3.0.11.4.0.2	search with cache (only 1: intros x y; only 1: rewrite ?P.le_lteq; only 1: intro H; only 1: destruct (P.lt_total x y) as [H'| [H'| H']]; only 1: intuition auto; subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: destruct H; only 1: intuition; only 1: intuition auto; subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	12.6329131126	18078
Coq.Structures.OrdersTac.OrderFacts.not_gt_le	40	2.2.1.3.2.0	search with cache (only 1: intros x y H; only 1: destruct (P.lt_total x y); only 1: rewrite P.le_lteq; only 1: auto; only 1: rewrite P.le_lteq; only 1: intuition auto; subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	2.74398803711	1981
Coq.Structures.OrdersTac.OrderFacts.le_neq_lt	40	0.1.2.2	search with cache (only 1: intros x y; only 1: rewrite P.le_lteq; only 1: generalize (P.lt_total x y); only 1: intuition).	0.0525560379028	44
Coq.Structures.OrdersEx.PairOrderedType.lt_strorder	40
Coq.Structures.OrdersEx.PairOrderedType.lt_compat	40
Coq.Structures.OrdersEx.PairOrderedType.compare_spec	40	2.70	search with cache (only 1: fix gcd_divide 1; only 1: eauto).	17.6095080376	28846
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.bits_lt_antirefl	40
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.bits_lt_trans	40
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.lt_compat	40	4	search with cache (only 1: eauto with *).	0.245898962021	52
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.lt_strorder	40
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.compare_spec	40
Coq.Structures.OrderedTypeEx.Nat_as_OT.lt_trans	40
Coq.Structures.OrderedTypeEx.Nat_as_OT.lt_not_eq	40	4.5	search with cache (only 1: intros n m H; only 1: intuition Nat.order).	0.145691156387	96
Coq.Structures.OrderedTypeEx.Nat_as_OT.compare	40
Coq.Structures.OrderedTypeEx.Z_as_OT.lt_trans	40	9.5	search with cache (only 1: intros a n Hn; only 1: Z.order).	1.22862005234	305
Coq.Structures.OrderedTypeEx.Z_as_OT.lt_not_eq	40	2.2	search with cache (only 1: intros n m; only 1: Z.order).	0.281332015991	100
Coq.Structures.OrderedTypeEx.Z_as_OT.compare	40
Coq.Structures.OrderedTypeEx.Positive_as_OT.lt_not_eq	40
Coq.Structures.OrderedTypeEx.Positive_as_OT.compare	40
Coq.Structures.OrderedTypeEx.N_as_OT.compare	40
Coq.Structures.OrderedTypeEx.PairOrderedType.eq_refl	40	5.7	search with cache (only 1: intro n; only 1: now Z.nzsimpl).	0.124822854996	104
Coq.Structures.OrderedTypeEx.PairOrderedType.eq_sym	40	1.2.4.0.0	search with cache (only 1: intros (x1, x2); only 1: red; only 1: intros; only 1: destruct H; only 1: auto with ordered_type).	0.318162202835	170
Coq.Structures.OrderedTypeEx.PairOrderedType.eq_trans	40
Coq.Structures.OrderedTypeEx.PairOrderedType.lt_trans	40
Coq.Structures.OrderedTypeEx.PairOrderedType.lt_not_eq	40
Coq.Structures.OrderedTypeEx.PairOrderedType.compare	40
Coq.Structures.OrderedTypeEx.PairOrderedType.eq_dec	40
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.bits_lt_trans	40
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.lt_trans	40
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.bits_lt_antirefl	40	0.0.1.0.2.2	search with cache (only 1: induction x; only 1: simpl; only 1: eauto; only 1: intuition; only 1: simpl; only 1: tauto).	0.0671949386597	37
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.lt_not_eq	40
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.compare	40
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.eq_dec	40	9	search with cache (only 1: decide equality).	0.505156993866	47
Coq.Structures.OrderedTypeEx.String_as_OT.nat_of_ascii_inverse	40
Coq.Structures.OrderedTypeEx.String_as_OT.lts_tail_unique	40
Coq.Structures.OrderedTypeEx.String_as_OT.lt_trans	40
Coq.Structures.OrderedTypeEx.String_as_OT.lt_not_eq	40
Coq.Structures.OrderedTypeEx.String_as_OT.compare	40
Coq.Structures.Orders.Compare2EqBool.eqb_eq	40
Coq.Structures.Orders.OT_to_Full.le_lteq	40	0.3.1.0	search with cache (only 1: intros; only 1: apply or_iff_compat_r; only 1: compute; only 1: intuition).	0.0146789550781	8
Coq.Structures.Orders.OTF_LtIsTotal.lt_total	40
Coq.Structures.Orders.OTF_to_TTLB.leb_le	40
Coq.Structures.Orders.OTF_to_TTLB.leb_total	40
Coq.Structures.Orders.OTF_to_TTLB.leb_trans	40
Coq.Structures.Orders.TTLB_to_OTF.compare_spec	40
Coq.Structures.Orders.TTLB_to_OTF.eqb_eq	40
Coq.Structures.Orders.TTLB_to_OTF.eq_equiv	40
Coq.Structures.Orders.TTLB_to_OTF.lt_strorder	40
Coq.Structures.Orders.TTLB_to_OTF.lt_compat	40
Coq.Structures.Orders.TTLB_to_OTF.le_lteq	40	0.0.0.2.1.0.0	search with cache (only 1: intros; only 1: unfold eq, lt, le in *; only 1: case leb; only 1: case leb; only 1: intuition; only 1: intuition; only 1: intuition).	0.211332082748	36
Coq.Structures.Equalities.UpdateEq.eq_equiv	40
Coq.Structures.Equalities.HasEqDec2Bool.eqb_eq	40
Coq.Structures.Equalities.HasEqBool2Dec.eq_dec	40
Coq.Structures.Equalities.BoolEqualityFacts.eqb_compat	40
Coq.Structures.Equalities.BoolEqualityFacts.eqb_spec	40
Coq.Structures.Equalities.BoolEqualityFacts.eqb_neq	40
Coq.Structures.Equalities.BoolEqualityFacts.eqb_refl	40	13.1	search with cache (only 1: apply eqb_eq; only 1: simpl_relation).	0.751019954681	688
Coq.Structures.Equalities.BoolEqualityFacts.eqb_sym	40
Coq.Structures.OrderedType.MOT_to_OT.eq_dec	40
Coq.Structures.OrderedType.OrderedTypeFacts.eq_equiv	40
Coq.Structures.OrderedType.OrderedTypeFacts.lt_antirefl	40
Coq.Structures.OrderedType.OrderedTypeFacts.lt_strorder	40
Coq.Structures.OrderedType.OrderedTypeFacts.lt_eq	40
Coq.Structures.OrderedType.OrderedTypeFacts.eq_lt	40
Coq.Structures.OrderedType.OrderedTypeFacts.lt_compat	40
Coq.Structures.OrderedType.OrderedTypeFacts.lt_total	40
Coq.Structures.OrderedType.OrderedTypeFacts.IsTO.le_lteq	40	0.0.11	search with cache (only 1: split; only 1: auto; only 1: auto).	0.154854059219	86
Coq.Structures.OrderedType.OrderedTypeFacts.le_eq	40
Coq.Structures.OrderedType.OrderedTypeFacts.eq_le	40	0	search with cache (only 1: order).	0.00929307937622	1
Coq.Structures.OrderedType.OrderedTypeFacts.neq_eq	40	5	search with cache (only 1: order).	0.0113890171051	6
Coq.Structures.OrderedType.OrderedTypeFacts.eq_neq	40	0	search with cache (only 1: order).	0.00854110717773	1
Coq.Structures.OrderedType.OrderedTypeFacts.le_lt_trans	40	0	search with cache (only 1: order).	0.0100359916687	1
Coq.Structures.OrderedType.OrderedTypeFacts.lt_le_trans	40	0	search with cache (only 1: order).	0.0083692073822	1
Coq.Structures.OrderedType.OrderedTypeFacts.le_neq	40	0	search with cache (only 1: order).	0.00816893577576	1
Coq.Structures.OrderedType.OrderedTypeFacts.le_trans	40	0	search with cache (only 1: order).	0.0094530582428	1
Coq.Structures.OrderedType.OrderedTypeFacts.le_antisym	40	0	search with cache (only 1: order).	0.00749111175537	1
Coq.Structures.OrderedType.OrderedTypeFacts.neq_sym	40	0	search with cache (only 1: order).	0.00734090805054	1
Coq.Structures.OrderedType.OrderedTypeFacts.lt_le	40	0	search with cache (only 1: order).	0.00829887390137	1
Coq.Structures.OrderedType.OrderedTypeFacts.gt_not_eq	40	0	search with cache (only 1: order).	0.00845694541931	1
Coq.Structures.OrderedType.OrderedTypeFacts.eq_not_lt	40	0	search with cache (only 1: order).	0.00758504867554	1
Coq.Structures.OrderedType.OrderedTypeFacts.eq_not_gt	40	0	search with cache (only 1: order).	0.00701999664307	1
Coq.Structures.OrderedType.OrderedTypeFacts.lt_not_gt	40	0	search with cache (only 1: order).	0.00759720802307	1
Coq.Structures.OrderedType.OrderedTypeFacts.elim_compare_eq	40
Coq.Structures.OrderedType.OrderedTypeFacts.elim_compare_lt	40	0.1.0.1.18.5.2	search with cache (only 1: intros; only 1: destruct (compare x y); only 1: eauto; only 1: exfalso; only 1: order; only 1: exfalso; only 1: order).	5.3323161602	12987
Coq.Structures.OrderedType.OrderedTypeFacts.elim_compare_gt	40	3.2.0.0.1.0.0.1.0.2.1	search with cache (only 1: intros; only 1: case (compare x y); only 1: intros H'; only 1: exfalso; only 1: order; only 1: intros H'; only 1: exfalso; only 1: order; only 1: intros H'; only 1: exists H'; only 1: auto).	4.7410068512	4742
Coq.Structures.OrderedType.OrderedTypeFacts.lt_dec	40
Coq.Structures.OrderedType.OrderedTypeFacts.eqb_alt	40
Coq.Structures.OrderedType.OrderedTypeFacts.In_eq	40
Coq.Structures.OrderedType.OrderedTypeFacts.ListIn_In	40	6.0.1.1.1.1.1	search with cache (only 1: simple induction l; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: subst; only 1: intuition).	1.83496713638	1321
Coq.Structures.OrderedType.OrderedTypeFacts.Inf_lt	40
Coq.Structures.OrderedType.OrderedTypeFacts.Inf_eq	40
Coq.Structures.OrderedType.OrderedTypeFacts.Sort_Inf_In	40
Coq.Structures.OrderedType.OrderedTypeFacts.ListIn_Inf	40	2.3.1.6.5	search with cache (only 1: induction l; only 1: constructor; only 1: intros; only 1: simpl in *; only 1: auto).	0.884506940842	943
Coq.Structures.OrderedType.OrderedTypeFacts.In_Inf	40	1.27	search with cache (only 1: apply InA_InfA; only 1: auto with *).	0.458470106125	1033
Coq.Structures.OrderedType.OrderedTypeFacts.Inf_alt	40
Coq.Structures.OrderedType.OrderedTypeFacts.Sort_NoDup	40
Coq.Structures.OrderedType.KeyOrderedType.eqke_eqk	40	6.20.0	search with cache (only 1: intros; only 1: induction H; only 1: auto).	0.826671123505	2052
Coq.Structures.OrderedType.KeyOrderedType.ltk_right_r	40	0	search with cache (only 1: intuition).	0.00886201858521	1
Coq.Structures.OrderedType.KeyOrderedType.ltk_right_l	40	0	search with cache (only 1: auto).	0.00680899620056	1
Coq.Structures.OrderedType.KeyOrderedType.eqk_refl	40	0.0	search with cache (only 1: unfold eqk, eqke; only 1: intuition).	0.101440191269	2
Coq.Structures.OrderedType.KeyOrderedType.eqke_refl	40	0.0	search with cache (only 1: unfold eqk, eqke; only 1: intuition).	0.102778911591	2
Coq.Structures.OrderedType.KeyOrderedType.eqk_sym	40	0	search with cache (only 1: auto with ordered_type).	0.0967869758606	1
Coq.Structures.OrderedType.KeyOrderedType.eqke_sym	40	0.1	search with cache (only 1: unfold eqk, eqke; only 1: intuition).	0.0184290409088	3
Coq.Structures.OrderedType.KeyOrderedType.eqk_trans	40	7.6.1	search with cache (only 1: unfold eqk, eqke; only 1: intros; only 1: order).	0.357873916626	493
Coq.Structures.OrderedType.KeyOrderedType.eqke_trans	40
Coq.Structures.OrderedType.KeyOrderedType.ltk_trans	40	3	search with cache (only 1: eauto with ordered_type).	0.0125699043274	4
Coq.Structures.OrderedType.KeyOrderedType.ltk_not_eqk	40	2	search with cache (only 1: eauto with ordered_type).	0.0130929946899	3
Coq.Structures.OrderedType.KeyOrderedType.ltk_not_eqke	40	5.0.3.5.16.3	search with cache (only 1: unfold eqke; only 1: intros (EQ, LE); only 1: unfold eqk, ltk; only 1: intros (U, V); only 1: intuition; only 1: order).	15.7386300564	18647
Coq.Structures.OrderedType.KeyOrderedType.eqk_equiv	40	2.0.0.5.2	search with cache (only 1: unfold eqk, eqke; only 1: split; only 1: intuition; only 1: intuition; only 1: eauto with ordered_type).	0.155137062073	118
Coq.Structures.OrderedType.KeyOrderedType.eqke_equiv	40	0.0.0.0	search with cache (only 1: constructor; only 1: eauto with ordered_type; only 1: eauto with ordered_type; only 1: eauto with ordered_type).	0.0229408740997	4
Coq.Structures.OrderedType.KeyOrderedType.ltk_strorder	40	0.2.0.15.0.0.13.7	search with cache (only 1: split; only 1: intros H'; only 1: unfold eqk, ltk; only 1: intuition; only 1: intro; only 1: simpl in *; only 1: order; only 1: eauto with ordered_type).	3.63295388222	8027
Coq.Structures.OrderedType.KeyOrderedType.ltk_compat	40
Coq.Structures.OrderedType.KeyOrderedType.ltk_compat'	40
Coq.Structures.OrderedType.KeyOrderedType.eqk_not_ltk	40	1.0	search with cache (only 1: unfold eqk, ltk; only 1: auto with ordered_type).	0.028354883194	18
Coq.Structures.OrderedType.KeyOrderedType.ltk_eqk	40	1.0.0	search with cache (only 1: unfold eqk, ltk; only 1: intuition; only 1: eauto with ordered_type).	0.015930891037	4
Coq.Structures.OrderedType.KeyOrderedType.eqk_ltk	40	1.0.0	search with cache (only 1: unfold eqk, ltk; only 1: intuition; only 1: eauto with ordered_type).	0.0153908729553	4
Coq.Structures.OrderedType.KeyOrderedType.InA_eqke_eqk	40
Coq.Structures.OrderedType.KeyOrderedType.In_alt	40
Coq.Structures.OrderedType.KeyOrderedType.MapsTo_eq	40
Coq.Structures.OrderedType.KeyOrderedType.In_eq	40
Coq.Structures.OrderedType.KeyOrderedType.Inf_eq	40	1.4.3.0.0.18	search with cache (only 1: induction l; only 1: unfold eqk, ltk; only 1: intuition; only 1: intros; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: eauto with ordered_type).	5.44201612473	5183
Coq.Structures.OrderedType.KeyOrderedType.Inf_lt	40	1.4.2.0.1.23	search with cache (only 1: induction l; only 1: unfold eqk, ltk; only 1: intuition; only 1: constructor; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: eauto with *).	4.33262991905	3034
Coq.Structures.OrderedType.KeyOrderedType.Sort_Inf_In	40
Coq.Structures.OrderedType.KeyOrderedType.Sort_Inf_NotIn	40
Coq.Structures.OrderedType.KeyOrderedType.Sort_NoDupA	40
Coq.Structures.OrderedType.KeyOrderedType.Sort_In_cons_1	40	0.0.0.3.7.7	search with cache (only 1: firstorder; only 1: inversion H; only 1: eapply Sort_Inf_In; only 1: eauto with ordered_type; only 1: eauto with ordered_type; only 1: eauto with ordered_type).	2.50430893898	1435
Coq.Structures.OrderedType.KeyOrderedType.Sort_In_cons_2	40
Coq.Structures.OrderedType.KeyOrderedType.Sort_In_cons_3	40
Coq.Structures.OrderedType.KeyOrderedType.In_inv	40
Coq.Structures.OrderedType.KeyOrderedType.In_inv_2	40	0.3.0	search with cache (only 1: inversion_clear 1; only 1: intuition; only 1: eauto with ordered_type).	0.0210120677948	6
Coq.Structures.OrderedType.KeyOrderedType.In_inv_3	40	0.0.2.1	search with cache (only 1: inversion_clear 1; only 1: compute in H0; only 1: intuition; only 1: eauto with *).	0.0659339427948	35
Coq.Structures.OrdersFacts.CompareFacts.compare_eq_iff	40
Coq.Structures.OrdersFacts.CompareFacts.compare_eq	40	1.0.1.0.1.0.0	search with cache (only 1: case compare_spec; only 1: intro H; only 1: easy; only 1: intro H; only 1: easy; only 1: intro H; only 1: easy).	0.0351378917694	10
Coq.Structures.OrdersFacts.CompareFacts.compare_lt_iff	40
Coq.Structures.OrdersFacts.CompareFacts.compare_gt_iff	40
Coq.Structures.OrdersFacts.CompareFacts.compare_nlt_iff	40
Coq.Structures.OrdersFacts.CompareFacts.compare_ngt_iff	40
Coq.Structures.OrdersFacts.CompareFacts.compare_compat	40
Coq.Structures.OrdersFacts.CompareFacts.compare_refl	40	1.0	search with cache (only 1: autorewrite with order; only 1: easy).	0.0150380134583	3
Coq.Structures.OrdersFacts.CompareFacts.compare_antisym	40
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_compat	40
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_preorder	40	5.1.5.42.25	search with cache (only 1: split; only 1: hnf; only 1: iorder; only 1: repeat red; only 1: iorder).	1.78152894974	5736
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_order	40	0.1.1	search with cache (only 1: repeat red; only 1: compute; only 1: iorder).	0.0231699943542	5
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_antisym	40	3.1	search with cache (only 1: repeat red; only 1: iorder).	0.0191240310669	17
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_not_gt_iff	40	12	search with cache (only 1: iorder).	0.176794052124	117
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.lt_not_ge_iff	40	0	search with cache (only 1: iorder).	0.0293259620667	1
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_or_gt	40
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.lt_or_ge	40	2.2.2.0.0.0	search with cache (only 1: intros; only 1: rewrite le_lteq; only 1: destruct (compare_spec x y); only 1: intuition; only 1: intuition; only 1: intuition).	5.03062605858	924
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.eq_is_le_ge	40	0	search with cache (only 1: iorder).	0.0185790061951	1
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.compare_le_iff	40	1.0	search with cache (only 1: rewrite compare_gt_iff; only 1: iorder).	0.020467042923	3
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.compare_ge_iff	40	0.0.0	search with cache (only 1: rewrite le_not_gt_iff; only 1: rewrite compare_lt_iff; only 1: intuition).	0.0239169597626	3
Coq.Structures.OrdersFacts.OrderedTypeFacts.lt_dec	40
Coq.Structures.OrdersFacts.OrderedTypeFacts.if_eq_dec	40
Coq.Structures.OrdersFacts.OrderedTypeFacts.eqb_alt	40
Coq.Structures.OrdersFacts.OrderedTypeFacts.eqb_compat	40
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_not_eq	40	5.1	search with cache (only 1: intro H; only 1: order).	0.0307669639587	14
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_eq	40	0	search with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0193271636963	1
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_lt	40	0	search with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0172078609467	1
Coq.Structures.OrdersFacts.OrderedTypeTest.le_eq	40	1.0	search with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: order).	1.84245991707	3
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_le	40	0	search with cache (only 1: order).	0.0121378898621	1
Coq.Structures.OrdersFacts.OrderedTypeTest.neq_eq	40	2.0	search with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: order).	1.84149098396	4
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_neq	40	0	search with cache (only 1: order).	0.0113530158997	1
Coq.Structures.OrdersFacts.OrderedTypeTest.le_lt_trans	40	0	search with cache (only 1: order).	0.0111119747162	1
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_le_trans	40	0	search with cache (only 1: order).	0.0105700492859	1
Coq.Structures.OrdersFacts.OrderedTypeTest.le_trans	40	0	search with cache (only 1: order).	0.0114538669586	1
Coq.Structures.OrdersFacts.OrderedTypeTest.le_antisym	40	2	search with cache (only 1: order).	0.068078994751	18
Coq.Structures.OrdersFacts.OrderedTypeTest.le_neq	40	2.1	search with cache (only 1: intro H; only 1: order).	0.024374961853	12
Coq.Structures.OrdersFacts.OrderedTypeTest.neq_sym	40	5.1	search with cache (only 1: intro H; only 1: order).	0.0338268280029	22
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_le	40	6	search with cache (only 1: order).	0.032292842865	21
Coq.Structures.OrdersFacts.OrderedTypeTest.gt_not_eq	40	2.1	search with cache (only 1: intro H; only 1: order).	0.0153529644012	5
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_not_lt	40	2	search with cache (only 1: order).	0.0444509983063	19
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_not_gt	40	2	search with cache (only 1: order).	0.0434439182281	19
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_not_gt	40	6	search with cache (only 1: order).	0.0315420627594	21
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_is_nlt_ngt	40	12.0.0.0.0.0.0.5.8.1	search with cache (only 1: split; only 1: intro H; only 1: rewrite H; only 1: intuition; only 1: eapply OrderTac.lt_irrefl; only 1: eauto; only 1: eapply OrderTac.lt_irrefl; only 1: eauto; only 1: intuition; only 1: order).	22.3008258343	23294
Coq.Structures.OrdersFacts.OrderedTypeRev.lt_strorder	40
Coq.Structures.OrdersFacts.OrderedTypeRev.lt_compat	40
Coq.Structures.OrdersFacts.OrderedTypeRev.le_lteq	40
Coq.Structures.OrdersFacts.OrderedTypeRev.compare_spec	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_spec	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_eq	40	2.1	search with cache (only 1: intros H; only 1: now apply compare_eq_iff).	0.0135569572449	5
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_refl	40	3.0.0.0.0.0.0	search with cache (only 1: apply compare_eq_iff; only 1: apply compare_eq_iff; only 1: apply compare_eq_iff; only 1: apply compare_eq_iff; only 1: apply compare_eq_iff; only 1: apply compare_eq_iff; only 1: now apply compare_eq_iff).	0.0311598777771	16
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_gt_iff	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_ge_iff	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_ngt_iff	40	0	search with cache (only 1: now rewrite <- compare_lt_iff, compare_antisym, CompOpp_iff).	0.0126171112061	1
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_nlt_iff	40	5	search with cache (only 1: now rewrite <- compare_lt_iff, compare_antisym, CompOpp_iff).	0.0450310707092	22
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_nle_iff	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_nge_iff	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.lt_irrefl	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.lt_eq_cases	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_spec0	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_spec	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_spec0	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_spec	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_nle	40	0.5.5	search with cache (only 1: case leb_spec0; only 1: intuition; only 1: now rewrite <- compare_nle_iff, compare_antisym, CompOpp_iff).	1.55834317207	634
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_gt	40	3.8.3	search with cache (only 1: case leb_spec0; only 1: now rewrite <- compare_lt_iff, compare_nge_iff; only 1: now rewrite <- compare_lt_iff, compare_nge_iff).	1.95573806763	982
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_nlt	40	3.5.3	search with cache (only 1: case ltb_spec0; only 1: intuition; only 1: intuition).	0.629238843918	426
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_ge	40	0.2.8	search with cache (only 1: rewrite <- compare_le_iff; only 1: rewrite compare_gt_iff; only 1: now rewrite <- not_true_iff_false, ltb_lt).	0.704031944275	263
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_refl	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_antisym	40	2.0.2.0.4.1.8	search with cache (only 1: case leb_spec0; only 1: case ltb_spec0; only 1: now rewrite <- compare_lt_iff, compare_nge_iff; only 1: constructor; only 1: case ltb_spec0; only 1: constructor; only 1: now rewrite <- compare_lt_iff, compare_nge_iff).	2.24728822708	1791
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_irrefl	40	2.28.9	search with cache (only 1: case ltb_spec0; only 1: now rewrite <- compare_lt_iff, compare_refl; only 1: constructor).	24.8127980232	40470
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_antisym	40
Coq.Structures.OrdersFacts.BoolOrderFacts.eqb_compare	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_compare	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_compare	40	1.1.1.0.1.2.2.22	search with cache (only 1: case leb_spec0; only 1: rewrite <- compare_le_iff; only 1: now destruct compare; only 1: rewrite <- compare_le_iff; only 1: destruct compare; only 1: easy || now destruct 1; only 1: easy || now destruct 1; only 1: split).	6.19905805588	7552
Coq.Structures.OrdersLists.OrderedTypeLists.In_eq	40	4.0.1	search with cache (only 1: intros; only 1: rewrite <- H; only 1: tauto).	0.215591907501	49
Coq.Structures.OrdersLists.OrderedTypeLists.ListIn_In	40	5.0.3.1.1.0.1	search with cache (only 1: simple induction l; only 1: intros; only 1: inversion H; only 1: simpl; only 1: intuition; only 1: subst; only 1: intuition).	4.28645396233	3133
Coq.Structures.OrdersLists.OrderedTypeLists.Inf_lt	40
Coq.Structures.OrdersLists.OrderedTypeLists.Inf_eq	40	6.1.5.2.12	search with cache (only 1: destruct l; only 1: constructor; only 1: intro y; only 1: intros; only 1: now rewrite H).	5.11498403549	7304
Coq.Structures.OrdersLists.OrderedTypeLists.Sort_Inf_In	40
Coq.Structures.OrdersLists.OrderedTypeLists.ListIn_Inf	40	2.3.1.6.5	search with cache (only 1: induction l; only 1: constructor; only 1: intros; only 1: simpl in *; only 1: auto).	1.76506185532	1538
Coq.Structures.OrdersLists.OrderedTypeLists.In_Inf	40	19.9	search with cache (only 1: apply InA_InfA; only 1: auto with *).	1.44731092453	2060
Coq.Structures.OrdersLists.OrderedTypeLists.Inf_alt	40
Coq.Structures.OrdersLists.OrderedTypeLists.Sort_NoDup	40
Coq.Structures.OrdersLists.KeyOrderedType.ltk_compat	40	16.0	search with cache (only 1: intros x x' Hx l l' Hl; only 1: now f_equiv).	0.717269897461	303
Coq.Structures.OrdersLists.KeyOrderedType.ltk_compat'	40	6	search with cache (only 1: solve_proper).	0.460236787796	26
Coq.Structures.OrdersLists.KeyOrderedType.pair_compat	40	1.4	search with cache (only 1: intros x x' Hx l l' Hl; only 1: intuition).	0.0703110694885	18
Coq.Structures.OrdersLists.KeyOrderedType.ltk_not_eqk	40
Coq.Structures.OrdersLists.KeyOrderedType.ltk_not_eqke	40
Coq.Structures.OrdersLists.KeyOrderedType.Inf_eq	40	11.7.3	search with cache (only 1: unfold eqk, ltk; only 1: firstorder; only 1: now rewrite H).	0.880940914154	806
Coq.Structures.OrdersLists.KeyOrderedType.Inf_lt	40
Coq.Structures.OrdersLists.KeyOrderedType.Sort_Inf_In	40
Coq.Structures.OrdersLists.KeyOrderedType.Sort_Inf_NotIn	40
Coq.Structures.OrdersLists.KeyOrderedType.Sort_NoDupA	40
Coq.Structures.OrdersLists.KeyOrderedType.Sort_In_cons_1	40
Coq.Structures.OrdersLists.KeyOrderedType.Sort_In_cons_2	40
Coq.Structures.OrdersLists.KeyOrderedType.Sort_In_cons_3	40
Coq.Structures.GenericMinMax.GenericMinMax.ge_not_lt	40
Coq.Structures.GenericMinMax.GenericMinMax.max_l	40
Coq.Structures.GenericMinMax.GenericMinMax.max_r	40
Coq.Structures.GenericMinMax.GenericMinMax.min_l	40
Coq.Structures.GenericMinMax.GenericMinMax.min_r	40	2.4.4.1.0.2.0.0	search with cache (only 1: unfold min, gmin; only 1: case compare_spec; only 1: auto with relations; only 1: intros; only 1: elim (ge_not_lt x y); only 1: auto; only 1: auto; only 1: auto with relations).	9.46458005905	15741
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_spec	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_spec_le	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.Proper_instance_0	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_compat	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_unicity	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_unicity_ext	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_mono	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_id	40	3.6	search with cache (only 1: apply max_r; only 1: order).	0.037575006485	24
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_assoc	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_comm	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_max_l	40	4.0.3.0.16	search with cache (only 1: destruct (max_spec n m); only 1: intuition; only 1: order; only 1: intuition; only 1: order).	3.00988101959	1930
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_max_r	40	0	search with cache (only 1: solve_max).	0.0164189338684	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_l_iff	40	19	search with cache (only 1: solve_max).	1.74240398407	967
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_r_iff	40	0	search with cache (only 1: solve_max).	0.0639410018921	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_iff	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lt_iff	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_l	40	5	search with cache (only 1: solve_max).	0.0245819091797	16
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_r	40	5	search with cache (only 1: solve_max).	0.0280780792236	16
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub	40	5.0	search with cache (only 1: intuition; only 1: solve_max).	0.0200319290161	7
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_iff	40	6	search with cache (only 1: solve_max).	0.100914001465	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_lt	40	0.0.0.0.2.1	search with cache (only 1: intuition; only 1: destruct (max_spec n m); only 1: intuition; only 1: order || (right; order) || (left; order); only 1: intuition; only 1: order || (right; order) || (left; order)).	0.0344228744507	9
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_lt_iff	40	0.0.0.0.0.0.0.0.1	search with cache (only 1: destruct (max_spec n m); only 1: intuition; only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order); only 1: intuition; only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order)).	0.179682970047	39
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_compat_l	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_compat_r	40	0.1.0	search with cache (only 1: intros; only 1: apply max_lub_iff; only 1: solve_max).	0.0319850444794	4
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_compat	40	2.2.1	search with cache (only 1: intros; only 1: apply max_lub_iff; only 1: solve_max).	0.0953619480133	12
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_spec	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_spec_le	40	2.0.2.0.0.0.0.0.4.0.2	search with cache (only 1: destruct (lt_total n m); only 1: left; only 1: split; only 1: order || (right; order) || (left; order); only 1: apply min_l; only 1: order || (right; order) || (left; order); only 1: right; only 1: assert (m <= n) by (rewrite le_lteq; intuition); only 1: split; only 1: intuition; only 1: now apply min_r).	15.9401800632	6567
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_compat	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_unicity	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_unicity_ext	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_mono	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_id	40	1.1	search with cache (only 1: apply min_l; only 1: order || (right; order) || (left; order)).	0.0133218765259	4
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_assoc	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_comm	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_min_r	40	3.3.0.6	search with cache (only 1: pose proof (min_spec n m) as Hm; only 1: intuition; only 1: order; only 1: order).	0.477895975113	189
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_min_l	40	0	search with cache (only 1: solve_min).	0.0185542106628	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_l_iff	40	3.3.3.0.8	search with cache (only 1: pose proof (min_spec n m) as Hm; only 1: intuition; only 1: order; only 1: order; only 1: order).	2.39408898354	1009
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_r_iff	40	0	search with cache (only 1: solve_min).	0.0222339630127	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_iff	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_lt_iff	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_l	40	0	search with cache (only 1: solve_min).	0.0177748203278	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_r	40	0	search with cache (only 1: solve_min).	0.0204689502716	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb	40	0	search with cache (only 1: solve_min).	0.014720916748	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_iff	40	0.0.3.0	search with cache (only 1: split; only 1: solve_min; only 1: intuition; only 1: solve_min).	0.0492060184479	16
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_lt	40	0.0.0.0.2.1	search with cache (only 1: intuition; only 1: destruct (min_spec n m); only 1: intuition; only 1: order || (right; order) || (left; order); only 1: intuition; only 1: order || (right; order) || (left; order)).	0.0310008525848	9
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_lt_iff	40	0.0.0.0.0.0.0.0.1	search with cache (only 1: destruct (min_spec n m); only 1: intuition; only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order); only 1: intuition; only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order)).	0.1584379673	39
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_compat_l	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_compat_r	40	0.1.0	search with cache (only 1: intros; only 1: apply min_glb_iff; only 1: solve_min).	0.056736946106	4
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_compat	40	0.2.1	search with cache (only 1: intros; only 1: apply min_glb_iff; only 1: solve_min).	0.0838539600372	6
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_absorption	40	0.2	search with cache (only 1: apply max_l; only 1: solve_min).	0.0196809768677	4
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_absorption	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_distr	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_distr	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_modular	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_modular	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_disassoc	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_antimono	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_antimono	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.max_case_strong	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.max_case	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.max_dec	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.min_case_strong	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.min_case	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.min_dec	40
Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.max_monotone	40	12.52	search with cache (only 1: apply max_mono; only 1: eauto with *).	15.1995370388	27541
Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.min_monotone	40	1.46	search with cache (only 1: apply min_mono; only 1: congruence).	3.23408484459	5795
Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.min_max_antimonotone	40
Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.max_min_antimonotone	40
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.max_case_strong	40	4.0.3.11.2	search with cache (only 1: intros Compat Hl Hr; only 1: apply max_case_strong; only 1: intros; only 1: rewrite <- H; only 1: auto).	0.542395114899	858
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.max_case	40	3.3.3.0	search with cache (only 1: intros; only 1: apply Private_Dec.max_case_strong; only 1: congruence; only 1: congruence).	0.191074848175	161
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.max_dec	40	6.6.0.8	search with cache (only 1: intros; only 1: apply Private_Dec.max_case; only 1: auto with relations; only 1: auto with relations).	0.849472999573	1323
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_case_strong	40	3.12.3	search with cache (only 1: intros Compat Hl Hr; only 1: apply min_case_strong; only 1: congruence).	0.926040887833	1292
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_case	40	3.2.3	search with cache (only 1: intros Compat Hl Hr; only 1: apply min_case; only 1: congruence).	0.120049953461	71
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_dec	40	6.6.0.1	search with cache (only 1: intros; only 1: apply Private_Dec.min_case; only 1: auto with relations; only 1: auto with relations).	0.391184091568	470
Coq.Structures.GenericMinMax.TOMaxEqDec_to_Compare.compare_spec	40
Coq.ZArith.Znat.nat_N_Z	40	4.0.0	search with cache (only 1: induction n; only 1: trivial; only 1: trivial).	0.0510818958282	23
Coq.ZArith.Znat.N_nat_Z	40
Coq.ZArith.Znat.positive_nat_Z	40	0.0.0.0.0	search with cache (only 1: destruct (Pos2Nat.is_succ p) as (m, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv).	0.0517961978912	5
Coq.ZArith.Znat.positive_N_Z	40	0	search with cache (only 1: trivial).	0.0189950466156	1
Coq.ZArith.Znat.positive_N_nat	40	4.0	search with cache (only 1: simpl; only 1: trivial).	0.0227270126343	6
Coq.ZArith.Znat.positive_nat_N	40	2.0.0.0.1	search with cache (only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv).	0.0575108528137	13
Coq.ZArith.Znat.Z_N_nat	40	0.0.13.1	search with cache (only 1: induction n; only 1: tauto; only 1: trivial; only 1: trivial).	0.347911834717	276
Coq.ZArith.Znat.Z_nat_N	40	2.8.0.0.4.30.46	search with cache (only 1: N.bitwise; only 1: destruct n as [| n| n]; only 1: trivial; only 1: f_equal; only 1: simpl Z.to_N; only 1: Nat2N.nat2N; only 1: f_equal).	2.46790885925	6550
Coq.ZArith.Znat.Zabs_N_nat	40	0	search with cache (only 1: now destruct n).	0.0237507820129	1
Coq.ZArith.Znat.Zabs_nat_N	40	0.1.0.0.26	search with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: apply positive_nat_N; only 1: Nat2N.nat2N).	0.697082042694	894
Coq.ZArith.Znat.N2Z.id	40	0.1.0.0	search with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: trivial).	0.0306401252747	5
Coq.ZArith.Znat.N2Z.inj	40
Coq.ZArith.Znat.N2Z.inj_iff	40	0.0.1.0.0.0.2.0.0.0.2.0.2.0.0	search with cache (only 1: destruct n, m; only 1: simpl; only 1: tauto; only 1: simpl; only 1: split; only 1: congruence; only 1: congruence; only 1: simpl; only 1: split; only 1: congruence; only 1: congruence; only 1: simpl; only 1: split; only 1: congruence; only 1: congruence).	7.15452384949	3650
Coq.ZArith.Znat.N2Z.is_nonneg	40	0	search with cache (only 1: now destruct n).	0.0250852108002	1
Coq.ZArith.Znat.N2Z.inj_0	40	0	search with cache (only 1: trivial).	0.0185639858246	1
Coq.ZArith.Znat.N2Z.inj_pos	40	0	search with cache (only 1: reflexivity).	0.0187368392944	1
Coq.ZArith.Znat.N2Z.inj_compare	40	1.0.2.0.0.1.2.1	search with cache (only 1: destruct n, m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: easy || now destruct y; only 1: simpl; only 1: now rewrite <- ?Pos.compare_antisym).	0.93488407135	439
Coq.ZArith.Znat.N2Z.inj_le	40	0.1	search with cache (only 1: unfold N.le, N.ge; only 1: now destruct n, m).	0.029846906662	3
Coq.ZArith.Znat.N2Z.inj_lt	40	0.6	search with cache (only 1: unfold N.lt, N.gt; only 1: now destruct n, m).	0.0470261573792	25
Coq.ZArith.Znat.N2Z.inj_ge	40
Coq.ZArith.Znat.N2Z.inj_gt	40
Coq.ZArith.Znat.N2Z.inj_abs_N	40
Coq.ZArith.Znat.N2Z.inj_add	40	11	search with cache (only 1: now destruct n, m).	0.257446050644	86
Coq.ZArith.Znat.N2Z.inj_mul	40	3.1.0	search with cache (only 1: destruct n; only 1: reflexivity; only 1: now destruct m).	0.0749480724335	17
Coq.ZArith.Znat.N2Z.inj_sub_max	40
Coq.ZArith.Znat.N2Z.inj_sub	40
Coq.ZArith.Znat.N2Z.inj_succ	40	0.0.0.5	search with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: now rewrite Pos.add_1_r).	0.135869979858	9
Coq.ZArith.Znat.N2Z.inj_pred_max	40	38.0.0.8	search with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: now destruct p).	9.94666814804	15807
Coq.ZArith.Znat.N2Z.inj_pred	40	0.1.6.0	search with cache (only 1: destruct n; only 1: N.order; only 1: simpl; only 1: now destruct p).	0.204030036926	61
Coq.ZArith.Znat.N2Z.inj_min	40
Coq.ZArith.Znat.N2Z.inj_max	40
Coq.ZArith.Znat.N2Z.inj_div	40
Coq.ZArith.Znat.N2Z.inj_mod	40
Coq.ZArith.Znat.N2Z.inj_quot	40
Coq.ZArith.Znat.N2Z.inj_rem	40
Coq.ZArith.Znat.N2Z.inj_div2	40	25.15.3.0.20	search with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: destruct (Pos.sqrtrem p) as (s, r); only 1: now destruct p).	9.38566613197	18026
Coq.ZArith.Znat.N2Z.inj_quot2	40	1.0.0	search with cache (only 1: destruct n as [| p]; only 1: trivial; only 1: now destruct p).	0.0281109809875	4
Coq.ZArith.Znat.N2Z.inj_pow	40
Coq.ZArith.Znat.N2Z.inj_testbit	40	0.0.1.0.1.0.1.0.0	search with cache (only 1: destruct a as [| a], n; only 1: simpl; only 1: tauto; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now destruct a; only 1: simpl; only 1: trivial).	0.297089099884	124
Coq.ZArith.Znat.Z2N.id	40	3.0.0.0	search with cache (only 1: destruct n; only 1: trivial; only 1: trivial; only 1: now destruct 1).	0.0357360839844	7
Coq.ZArith.Znat.Z2N.inj	40
Coq.ZArith.Znat.Z2N.inj_iff	40	2.0.0.1.0.5	search with cache (only 1: split; only 1: intros; only 1: rewrite <- (id n), <- (id m) by trivial; only 1: now f_equal; only 1: intros; only 1: now f_equal).	1.95224690437	531
Coq.ZArith.Znat.Z2N.inj_0	40	2.0	search with cache (only 1: simpl; only 1: tauto).	0.0259029865265	4
Coq.ZArith.Znat.Z2N.inj_pos	40	0.0	search with cache (only 1: simpl Z.to_N; only 1: now subst).	0.0195071697235	2
Coq.ZArith.Znat.Z2N.inj_neg	40	2	search with cache (only 1: reflexivity).	0.0170030593872	3
Coq.ZArith.Znat.Z2N.inj_add	40
Coq.ZArith.Znat.Z2N.inj_mul	40	6.4.2	search with cache (only 1: intros; only 1: rewrite <- (id n), <- (id m) by trivial; only 1: now destruct n, m).	0.542028903961	175
Coq.ZArith.Znat.Z2N.inj_succ	40	1.2.2.0.143	search with cache (only 1: destruct n; only 1: trivial; only 1: simpl Z.to_N; only 1: now rewrite Pos.add_1_r; only 1: now destruct 1 || now destruct 2).	21.9329030514	43876
Coq.ZArith.Znat.Z2N.inj_sub	40
Coq.ZArith.Znat.Z2N.inj_pred	40	0.4.0.82	search with cache (only 1: destruct n; only 1: trivial; only 1: now destruct p; only 1: trivial).	4.10563087463	6843
Coq.ZArith.Znat.Z2N.inj_compare	40	1.12.9	search with cache (only 1: intros; only 1: rewrite <- (id n), <- (id m) by trivial; only 1: now destruct n, m).	4.2314889431	2985
Coq.ZArith.Znat.Z2N.inj_le	40
Coq.ZArith.Znat.Z2N.inj_lt	40
Coq.ZArith.Znat.Z2N.inj_min	40
Coq.ZArith.Znat.Z2N.inj_max	40
Coq.ZArith.Znat.Z2N.inj_div	40
Coq.ZArith.Znat.Z2N.inj_mod	40
Coq.ZArith.Znat.Z2N.inj_quot	40
Coq.ZArith.Znat.Z2N.inj_rem	40
Coq.ZArith.Znat.Z2N.inj_div2	40	0.25.0.6	search with cache (only 1: destruct n; only 1: trivial; only 1: now destruct p; only 1: trivial).	1.88302397728	2493
Coq.ZArith.Znat.Z2N.inj_quot2	40	1.1.0.0	search with cache (only 1: destruct n as [| p| p]; only 1: trivial; only 1: now destruct p; only 1: now destruct p).	0.0371649265289	6
Coq.ZArith.Znat.Z2N.inj_pow	40
Coq.ZArith.Znat.Z2N.inj_testbit	40	1.0.1.0.0.0.0.1.0.8	search with cache (only 1: destruct a as [| a], n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now split; only 1: simpl; only 1: now split; only 1: apply Z.testbit_Zpos; only 1: apply Z.testbit_Zpos; only 1: apply Z.testbit_Zpos).	3.13149809837	1244
Coq.ZArith.Znat.Zabs2N.abs_N_spec	40	0.0.0.1.12	search with cache (only 1: destruct n; only 1: now f_equal; only 1: simpl; only 1: trivial; only 1: trivial).	0.555402994156	152
Coq.ZArith.Znat.Zabs2N.abs_N_nonneg	40	10	search with cache (only 1: now destruct n).	0.0644509792328	38
Coq.ZArith.Znat.Zabs2N.id_abs	40	1.1.1.10	search with cache (only 1: destruct n; only 1: trivial; only 1: trivial; only 1: trivial).	0.869954109192	462
Coq.ZArith.Znat.Zabs2N.id	40	0.0.0.6	search with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: trivial).	0.0341589450836	10
Coq.ZArith.Znat.Zabs2N.inj_0	40	1	search with cache (only 1: easy).	0.0200910568237	2
Coq.ZArith.Znat.Zabs2N.inj_pos	40	0.0	search with cache (only 1: simpl; only 1: trivial).	0.0223660469055	2
Coq.ZArith.Znat.Zabs2N.inj_neg	40	0.0	search with cache (only 1: simpl; only 1: trivial).	0.0219128131866	2
Coq.ZArith.Znat.Zabs2N.inj_opp	40	0.0.0.0	search with cache (only 1: destruct n; only 1: trivial; only 1: trivial; only 1: trivial).	0.0321989059448	4
Coq.ZArith.Znat.Zabs2N.inj_succ	40	2.0.0.0.2.1.0.0	search with cache (only 1: destruct n; only 1: reflexivity; only 1: now destruct 1 || intros _; only 1: destruct p; only 1: trivial; only 1: trivial; only 1: trivial; only 1: now destruct 1 || intros _).	1.141685009	354
Coq.ZArith.Znat.Zabs2N.inj_add	40	0.1.0.1.0.0.0.0.0.3	search with cache (only 1: destruct n, m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: reflexivity; only 1: now destruct 1 || now destruct 2; only 1: trivial; only 1: now destruct 1 || now destruct 2; only 1: trivial).	9.72289180756	3715
Coq.ZArith.Znat.Zabs2N.inj_mul	40	0.0.0.0.0.0.0.0.0.2	search with cache (only 1: destruct n, m; only 1: trivial; only 1: reflexivity; only 1: trivial; only 1: reflexivity; only 1: trivial; only 1: reflexivity; only 1: trivial; only 1: trivial; only 1: trivial).	1.23805880547	350
Coq.ZArith.Znat.Zabs2N.inj_sub	40
Coq.ZArith.Znat.Zabs2N.inj_pred	40	0.0.4.3.1.2.0.0	search with cache (only 1: unfold Z.pred; only 1: destruct n; only 1: easy; only 1: simpl; only 1: now destruct p; only 1: unfold Z.lt in *; only 1: simpl; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l).	1.43457889557	772
Coq.ZArith.Znat.Zabs2N.inj_compare	40	9	search with cache (only 1: now destruct n, m).	0.161314964294	48
Coq.ZArith.Znat.Zabs2N.inj_le	40
Coq.ZArith.Znat.Zabs2N.inj_lt	40	6.1	search with cache (only 1: intros; only 1: now destruct n, m).	0.0738689899445	23
Coq.ZArith.Znat.Zabs2N.inj_min	40
Coq.ZArith.Znat.Zabs2N.inj_max	40
Coq.ZArith.Znat.Zabs2N.inj_quot	40
Coq.ZArith.Znat.Zabs2N.inj_rem	40
Coq.ZArith.Znat.Zabs2N.inj_pow	40
Coq.ZArith.Znat.Zabs2N.inj_succ_abs	40
Coq.ZArith.Znat.Zabs2N.inj_add_abs	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.1	search with cache (only 1: destruct n, m; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: trivial; only 1: trivial; only 1: simpl; only 1: trivial; only 1: trivial; only 1: simpl; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l).	11.0956270695	4818
Coq.ZArith.Znat.Zabs2N.inj_mul_abs	40	0	search with cache (only 1: now destruct n, m).	0.0277979373932	1
Coq.ZArith.Znat.Nat2Z.inj_0	40	2	search with cache (only 1: tauto).	0.0181970596313	3
Coq.ZArith.Znat.Nat2Z.inj_succ	40
Coq.ZArith.Znat.Nat2Z.is_nonneg	40	4.0.15.8.6.41	search with cache (only 1: unfold Z.le, N.le; only 1: simpl; only 1: intuition; only 1: destruct n; only 1: easy'; only 1: now intuition).	3.78711986542	5083
Coq.ZArith.Znat.Nat2Z.id	40	1.1.20.1.8	search with cache (only 1: induction n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply SuccNat2Pos.id_succ).	0.925714969635	1293
Coq.ZArith.Znat.Nat2Z.inj	40
Coq.ZArith.Znat.Nat2Z.inj_iff	40	0.1.0.1.17	search with cache (only 1: split; only 1: intros H; only 1: now rewrite <- (id n), <- (id m), H; only 1: intros H; only 1: now rewrite <- (id n), <- (id m), H).	2.9265191555	1077
Coq.ZArith.Znat.Nat2Z.inj_compare	40
Coq.ZArith.Znat.Nat2Z.inj_le	40
Coq.ZArith.Znat.Nat2Z.inj_lt	40
Coq.ZArith.Znat.Nat2Z.inj_ge	40
Coq.ZArith.Znat.Nat2Z.inj_gt	40
Coq.ZArith.Znat.Nat2Z.inj_abs_nat	40
Coq.ZArith.Znat.Nat2Z.inj_add	40
Coq.ZArith.Znat.Nat2Z.inj_mul	40
Coq.ZArith.Znat.Nat2Z.inj_sub_max	40
Coq.ZArith.Znat.Nat2Z.inj_sub	40
Coq.ZArith.Znat.Nat2Z.inj_pred_max	40
Coq.ZArith.Znat.Nat2Z.inj_pred	40
Coq.ZArith.Znat.Nat2Z.inj_min	40
Coq.ZArith.Znat.Nat2Z.inj_max	40
Coq.ZArith.Znat.Z2Nat.id	40	8.0.0.0.0.2.5.0.16.6	search with cache (only 1: intros EQ; only 1: destruct n; only 1: trivial; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (m, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv; only 1: now f_equal).	17.7428340912	18840
Coq.ZArith.Znat.Z2Nat.inj	40	3.4.1	search with cache (only 1: intros; only 1: rewrite <- (Z2N.id n), <- (Z2N.id m) by trivial; only 1: now f_equal).	0.165020942688	32
Coq.ZArith.Znat.Z2Nat.inj_iff	40	0.1.0.2.1.3.1.0	search with cache (only 1: intros; only 1: rewrite <- (id n), <- (id m) by trivial; only 1: split; only 1: intros; only 1: rewrite <- (id n), <- (id m) by trivial; only 1: now f_equal; only 1: intros; only 1: now f_equal).	1.34754610062	334
Coq.ZArith.Znat.Z2Nat.inj_0	40	8	search with cache (only 1: now subst).	0.0177681446075	9
Coq.ZArith.Znat.Z2Nat.inj_pos	40	0	search with cache (only 1: trivial).	0.0171840190887	1
Coq.ZArith.Znat.Z2Nat.inj_neg	40	0	search with cache (only 1: reflexivity).	0.0182569026947	1
Coq.ZArith.Znat.Z2Nat.inj_add	40
Coq.ZArith.Znat.Z2Nat.inj_mul	40
Coq.ZArith.Znat.Z2Nat.inj_succ	40	2.0.6.2.1.4.1.1.4.0.2.8	search with cache (only 1: destruct n as [| n| n]; only 1: reflexivity; only 1: now destruct 1 || intros _; only 1: simpl; only 1: destruct n; only 1: simpl; only 1: unfold Pos.to_nat; only 1: simpl; only 1: now rewrite !Pmult_nat_mult, Pos2Nat.inj_succ; only 1: trivial; only 1: trivial; only 1: now destruct 1).	27.4927990437	34953
Coq.ZArith.Znat.Z2Nat.inj_sub	40
Coq.ZArith.Znat.Z2Nat.inj_pred	40
Coq.ZArith.Znat.Z2Nat.inj_compare	40
Coq.ZArith.Znat.Z2Nat.inj_le	40
Coq.ZArith.Znat.Z2Nat.inj_lt	40
Coq.ZArith.Znat.Z2Nat.inj_min	40
Coq.ZArith.Znat.Z2Nat.inj_max	40
Coq.ZArith.Znat.Zabs2Nat.abs_nat_spec	40	0	search with cache (only 1: now destruct n).	0.0168628692627	1
Coq.ZArith.Znat.Zabs2Nat.abs_nat_nonneg	40	0	search with cache (only 1: now destruct n).	0.0207238197327	1
Coq.ZArith.Znat.Zabs2Nat.id_abs	40	0.0.0.0.2.0.0.0.0.0.2.0.3.1	search with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (m, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (m, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv).	8.08194494247	5030
Coq.ZArith.Znat.Zabs2Nat.id	40	1.1.0.21	search with cache (only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: apply SuccNat2Pos.id_succ).	0.53089594841	356
Coq.ZArith.Znat.Zabs2Nat.inj_0	40	0	search with cache (only 1: trivial).	0.0173380374908	1
Coq.ZArith.Znat.Zabs2Nat.inj_pos	40	0	search with cache (only 1: trivial).	0.0142431259155	1
Coq.ZArith.Znat.Zabs2Nat.inj_neg	40	0	search with cache (only 1: reflexivity).	0.0142459869385	1
Coq.ZArith.Znat.Zabs2Nat.inj_succ	40	1.2.19.3.2.0.0	search with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: intros; only 1: rewrite ?Pos.add_1_r, ?Pos.pred_N_succ; only 1: apply Pos2Nat.inj_succ; only 1: now destruct 1).	17.2126121521	17258
Coq.ZArith.Znat.Zabs2Nat.inj_add	40
Coq.ZArith.Znat.Zabs2Nat.inj_mul	40
Coq.ZArith.Znat.Zabs2Nat.inj_sub	40
Coq.ZArith.Znat.Zabs2Nat.inj_pred	40
Coq.ZArith.Znat.Zabs2Nat.inj_compare	40
Coq.ZArith.Znat.Zabs2Nat.inj_le	40	0.5.0	search with cache (only 1: intros; only 1: unfold Z.le, N.le; only 1: now rewrite nat_compare_le, Z2Nat.inj_compare).	0.0349059104919	8
Coq.ZArith.Znat.Zabs2Nat.inj_lt	40	3.2.0	search with cache (only 1: unfold Z.lt; only 1: intros; only 1: now rewrite nat_compare_lt, Z2Nat.inj_compare).	0.141874074936	8
Coq.ZArith.Znat.Zabs2Nat.inj_min	40
Coq.ZArith.Znat.Zabs2Nat.inj_max	40
Coq.ZArith.Znat.Zabs2Nat.inj_succ_abs	40	0.0.0.4	search with cache (only 1: destruct n; only 1: now rewrite <- !Zabs_N_nat, Zabs2N.inj_succ, N2Nat.inj_succ; only 1: now rewrite <- !Zabs_N_nat, Zabs2N.inj_succ, N2Nat.inj_succ; only 1: now rewrite <- !Zabs_N_nat, Zabs2N.inj_succ, N2Nat.inj_succ).	0.0591869354248	8
Coq.ZArith.Znat.Zabs2Nat.inj_add_abs	40
Coq.ZArith.Znat.Zabs2Nat.inj_mul_abs	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0	search with cache (only 1: destruct n, m; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply Pos2Nat.inj_mul; only 1: simpl; only 1: apply Pos2Nat.inj_mul; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply Pos2Nat.inj_mul; only 1: simpl; only 1: apply Pos2Nat.inj_mul).	9.23490285873	6785
Coq.ZArith.Znat.inj_neq	40
Coq.ZArith.Znat.inj_minus2	40
Coq.ZArith.Zcompare.Zcompare_Gt_trans	40
Coq.ZArith.Zcompare.Zcompare_opp	40
Coq.ZArith.Zcompare.Zcompare_Gt_spec	40
Coq.ZArith.Zcompare.Zcompare_plus_compat	40
Coq.ZArith.Zcompare.Zplus_compare_compat	40
Coq.ZArith.Zcompare.Zcompare_succ_Gt	40
Coq.ZArith.Zcompare.Zcompare_Gt_not_Lt	40
Coq.ZArith.Zcompare.Zcompare_succ_compat	40
Coq.ZArith.Zcompare.Zcompare_mult_compat	40
Coq.ZArith.Zcompare.Zmult_compare_compat_l	40
Coq.ZArith.Zcompare.Zmult_compare_compat_r	40
Coq.ZArith.Zcompare.Zcompare_elim	40
Coq.ZArith.Zcompare.Zcompare_eq_case	40
Coq.ZArith.Zcompare.Zle_compare	40	18.5.1.11.0	search with cache (only 1: intros; only 1: case Z.compare_spec; only 1: trivial; only 1: trivial; only 1: Z.Private_Tac.order).	26.309183836	32365
Coq.ZArith.Zcompare.Zlt_compare	40
Coq.ZArith.Zcompare.Zge_compare	40	0.1.0.0.18.1	search with cache (only 1: intros; only 1: Z.swap_greater; only 1: case Z.compare_spec; only 1: trivial; only 1: Z.order; only 1: trivial).	5.33127307892	8049
Coq.ZArith.Zcompare.Zgt_compare	40	0.0	search with cache (only 1: intros x y H; only 1: now rewrite H).	0.0264580249786	2
Coq.ZArith.Zquot.Zquot_0_r	40
Coq.ZArith.Zquot.Zrem_0_r	40
Coq.ZArith.Zquot.Zrem_0_l	40	2	search with cache (only 1: now destruct a).	0.0285878181458	3
Coq.ZArith.Zquot.Zquot_0_l	40	4	search with cache (only 1: now destruct a).	0.114228010178	20
Coq.ZArith.Zquot.Z_rem_same	40
Coq.ZArith.Zquot.Z_rem_mult	40
Coq.ZArith.Zquot.Zquot_opp_l	40
Coq.ZArith.Zquot.Zquot_opp_r	40
Coq.ZArith.Zquot.Zrem_opp_l	40
Coq.ZArith.Zquot.Zrem_opp_r	40
Coq.ZArith.Zquot.Zquot_opp_opp	40
Coq.ZArith.Zquot.Zrem_opp_opp	40
Coq.ZArith.Zquot.Zrem_sgn	40
Coq.ZArith.Zquot.Zrem_sgn2	40
Coq.ZArith.Zquot.Zrem_lt_pos	40
Coq.ZArith.Zquot.Zrem_lt_neg	40
Coq.ZArith.Zquot.Zrem_lt_pos_pos	40	0.9	search with cache (only 1: generalize (Z.rem_nonneg a b), (Z.rem_bound_abs a b); only 1: lia).	1.22564220428	283
Coq.ZArith.Zquot.Zrem_lt_pos_neg	40	0.3.1.1.0	search with cache (only 1: generalize (Z.rem_nonpos a b), (Z.rem_bound_abs a b); only 1: generalize (Z.rem_nonpos a b), (Z.rem_bound_abs a b); only 1: generalize (Z.rem_nonpos a b), (Z.rem_bound_abs a b); only 1: generalize (Z.rem_nonneg a b), (Z.rem_bound_abs a b); only 1: lia).	2.95810317993	16
Coq.ZArith.Zquot.Zrem_lt_neg_pos	40	0.1.1.0	search with cache (only 1: intros; only 1: generalize (Zrem_lt_pos a b); only 1: generalize (Z.rem_nonpos a b), (Z.rem_bound_abs a b); only 1: lia).	0.093896150589	6
Coq.ZArith.Zquot.Zrem_lt_neg_neg	40	0.3.3.0	search with cache (only 1: intros; only 1: generalize (Zrem_lt_pos a b); only 1: generalize (Z.rem_nonpos a b), (Z.rem_bound_abs a b); only 1: lia).	0.291249036789	21
Coq.ZArith.Zquot.Remainder_equiv	40
Coq.ZArith.Zquot.Zquot_mod_unique_full	40
Coq.ZArith.Zquot.Zquot_unique_full	40
Coq.ZArith.Zquot.Zrem_unique_full	40	1.3.3.3.2	search with cache (only 1: intros; only 1: destruct (Zquot_mod_unique_full a b q r); only 1: auto; only 1: auto; only 1: auto).	3.34582018852	1165
Coq.ZArith.Zquot.Z_quot_pos	40
Coq.ZArith.Zquot.Z_quot_lt	40
Coq.ZArith.Zquot.Z_quot_monotone	40
Coq.ZArith.Zquot.Z_mult_quot_le	40
Coq.ZArith.Zquot.Z_mult_quot_ge	40
Coq.ZArith.Zquot.Z_quot_exact_full	40
Coq.ZArith.Zquot.Zrem_le	40
Coq.ZArith.Zquot.Zquot_le_upper_bound	40
Coq.ZArith.Zquot.Zquot_lt_upper_bound	40
Coq.ZArith.Zquot.Zquot_le_lower_bound	40
Coq.ZArith.Zquot.Zquot_sgn	40
Coq.ZArith.Zquot.Z_rem_plus	40
Coq.ZArith.Zquot.Z_quot_plus	40
Coq.ZArith.Zquot.Z_quot_plus_l	40
Coq.ZArith.Zquot.Zquot_mult_cancel_r	40
Coq.ZArith.Zquot.Zquot_mult_cancel_l	40
Coq.ZArith.Zquot.Zmult_rem_distr_l	40
Coq.ZArith.Zquot.Zmult_rem_distr_r	40
Coq.ZArith.Zquot.Zrem_rem	40
Coq.ZArith.Zquot.Zmult_rem	40
Coq.ZArith.Zquot.Zplus_rem	40
Coq.ZArith.Zquot.Zplus_rem_idemp_l	40
Coq.ZArith.Zquot.Zplus_rem_idemp_r	40
Coq.ZArith.Zquot.Zmult_rem_idemp_l	40
Coq.ZArith.Zquot.Zmult_rem_idemp_r	40
Coq.ZArith.Zquot.Zquot_Zquot	40
Coq.ZArith.Zquot.Zquot_mult_le	40
Coq.ZArith.Zquot.Zrem_divides	40
Coq.ZArith.Zquot.Zquot2_odd_remainder	40
Coq.ZArith.Zquot.Zrem_odd	40
Coq.ZArith.Zquot.Zrem_even	40
Coq.ZArith.Zquot.Zeven_rem	40
Coq.ZArith.Zquot.Zodd_rem	40
Coq.ZArith.Zquot.Zquotrem_Zdiv_eucl_pos	40
Coq.ZArith.Zquot.Zquot_Zdiv_pos	40
Coq.ZArith.Zquot.Zrem_Zmod_pos	40
Coq.ZArith.Zquot.Zrem_Zmod_zero	40	1.6.4.0	search with cache (only 1: intros a b Hb; only 1: rewrite Z.rem_divide; only 1: now rewrite <- Z.mod_divide; only 1: tauto).	1.91493082047	651
Coq.ZArith.BinInt.Z.eq_dec	40	0.0.11	search with cache (only 1: decide equality; only 1: apply Pos.eq_dec; only 1: apply Pos.eq_dec).	0.193718910217	196
Coq.ZArith.BinInt.Z.pos_sub_spec	40
Coq.ZArith.BinInt.Z.pos_sub_discr	40
Coq.ZArith.BinInt.Z.pos_sub_diag	40
Coq.ZArith.BinInt.Z.pos_sub_lt	40
Coq.ZArith.BinInt.Z.pos_sub_gt	40
Coq.ZArith.BinInt.Z.pos_sub_opp	40
Coq.ZArith.BinInt.Z.Private_BootStrap.add_0_r	40	2.0.0.5	search with cache (only 1: induction n; only 1: trivial; only 1: trivial; only 1: trivial).	0.0594139099121	33
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_0_r	40	2.0.0.21	search with cache (only 1: induction n; only 1: trivial; only 1: trivial; only 1: trivial).	0.28019118309	357
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_1_l	40	0	search with cache (only 1: now destruct n).	0.015193939209	1
Coq.ZArith.BinInt.Z.Private_BootStrap.add_comm	40
Coq.ZArith.BinInt.Z.Private_BootStrap.opp_add_distr	40
Coq.ZArith.BinInt.Z.Private_BootStrap.opp_inj	40
Coq.ZArith.BinInt.Z.Private_BootStrap.pos_sub_add	40
Coq.ZArith.BinInt.Z.Private_BootStrap.add_assoc_pos	40
Coq.ZArith.BinInt.Z.Private_BootStrap.add_assoc	40
Coq.ZArith.BinInt.Z.Private_BootStrap.add_opp_diag_r	40	0.0.0.0.0.0.5	search with cache (only 1: destruct n; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now rewrite pos_sub_spec, Pos.compare_refl; only 1: simpl; only 1: now rewrite pos_sub_spec, Pos.compare_refl).	0.186661958694	69
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_opp_r	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: destruct n, m; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal).	8.74542808533	6534
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_add_distr_pos	40
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_add_distr_r	40
Coq.ZArith.BinInt.Z.one_succ	40	1.7	search with cache (only 1: simpl; only 1: now f_equal).	0.0581240653992	10
Coq.ZArith.BinInt.Z.two_succ	40	0	search with cache (only 1: reflexivity).	0.0141489505768	1
Coq.ZArith.BinInt.Z.add_0_l	40	0	search with cache (only 1: now destruct n).	0.0541319847107	1
Coq.ZArith.BinInt.Z.add_succ_l	40
Coq.ZArith.BinInt.Z.opp_0	40	0.0	search with cache (only 1: simpl; only 1: now f_equal).	0.0175089836121	2
Coq.ZArith.BinInt.Z.opp_succ	40	0.0.2.0.0.0.0.3.1	search with cache (only 1: unfold succ; only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: rewrite !opp_add_distr; only 1: simpl; only 1: trivial).	0.735091924667	302
Coq.ZArith.BinInt.Z.succ_pred	40
Coq.ZArith.BinInt.Z.pred_succ	40	0.0	search with cache (only 1: unfold succ, pred; only 1: now rewrite <- add_assoc, add_opp_diag_r, add_0_r).	0.0209817886353	2
Coq.ZArith.BinInt.Z.sub_0_r	40	0	search with cache (only 1: now destruct n).	0.0165059566498	1
Coq.ZArith.BinInt.Z.sub_succ_r	40
Coq.ZArith.BinInt.Z.mul_0_l	40	0	search with cache (only 1: now destruct n).	0.0170869827271	1
Coq.ZArith.BinInt.Z.mul_succ_l	40
Coq.ZArith.BinInt.Z.eqb_eq	40
Coq.ZArith.BinInt.Z.ltb_lt	40	3.4.7	search with cache (only 1: revert m; only 1: fix even_spec 1; only 1: trivial).	2.40971684456	1138
Coq.ZArith.BinInt.Z.leb_le	40
Coq.ZArith.BinInt.Z.compare_eq_iff	40
Coq.ZArith.BinInt.Z.compare_sub	40
Coq.ZArith.BinInt.Z.compare_antisym	40
Coq.ZArith.BinInt.Z.compare_lt_iff	40	0.0.0.0.1	search with cache (only 1: unfold ltb, lt; only 1: destruct compare; only 1: easy'; only 1: easy'; only 1: easy').	0.440970897675	99
Coq.ZArith.BinInt.Z.compare_le_iff	40
Coq.ZArith.BinInt.Z.lt_succ_r	40
Coq.ZArith.BinInt.Z.max_l	40
Coq.ZArith.BinInt.Z.max_r	40
Coq.ZArith.BinInt.Z.min_l	40
Coq.ZArith.BinInt.Z.min_r	40	0.0.0.1.1.0	search with cache (only 1: unfold le, min; only 1: rewrite (compare_antisym n m); only 1: case compare_spec; only 1: intuition; only 1: intuition; only 1: intuition).	0.755514144897	166
Coq.ZArith.BinInt.Z.peano_ind	40
Coq.ZArith.BinInt.Z.bi_induction	40
Coq.ZArith.BinInt.Z.abs_eq	40	2.6	search with cache (only 1: rewrite <- (add_0_l 0); only 1: now destruct n).	0.191545009613	12
Coq.ZArith.BinInt.Z.abs_neq	40	0.14.0.0	search with cache (only 1: destruct n; only 1: trivial; only 1: now f_equal; only 1: trivial).	2.10271501541	1435
Coq.ZArith.BinInt.Z.sgn_null	40	0.0.0.9	search with cache (only 1: destruct n; only 1: now f_equal; only 1: congruence; only 1: congruence).	0.517131090164	192
Coq.ZArith.BinInt.Z.sgn_pos	40	8.2.1	search with cache (only 1: zero_pos_neg ltac:(n); only 1: now f_equiv; only 1: now destruct n).	1.11160492897	393
Coq.ZArith.BinInt.Z.sgn_neg	40	0	search with cache (only 1: now destruct n).	0.0223188400269	1
Coq.ZArith.BinInt.Z.pow_0_r	40	2	search with cache (only 1: reflexivity).	0.0156559944153	3
Coq.ZArith.BinInt.Z.pow_succ_r	40
Coq.ZArith.BinInt.Z.pow_neg_r	40	0.2.5.0.11	search with cache (only 1: rewrite <- (mul_0_l m)  at 1; only 1: destruct m as [| m| m]; only 1: now nzsimpl; only 1: now nzsimpl; only 1: now destruct 1 || intros _).	1.98900508881	796
Coq.ZArith.BinInt.Z.pow_pos_fold	40	0	search with cache (only 1: reflexivity).	0.0143849849701	1
Coq.ZArith.BinInt.Z.square_spec	40
Coq.ZArith.BinInt.Z.sqrtrem_spec	40
Coq.ZArith.BinInt.Z.sqrt_spec	40
Coq.ZArith.BinInt.Z.sqrt_neg	40	0.9.4.7.0.0	search with cache (only 1: destruct n; only 1: now repeat split; only 1: simpl; only 1: generalize (Pos.sqrtrem_spec p); only 1: now nzsimpl; only 1: now destruct 1).	1.34319186211	1450
Coq.ZArith.BinInt.Z.sqrtrem_sqrt	40
Coq.ZArith.BinInt.Z.log2_spec	40
Coq.ZArith.BinInt.Z.log2_nonpos	40	0.1.2.1.11	search with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: now destruct 1; only 1: trivial).	0.411068916321	240
Coq.ZArith.BinInt.Z.even_spec	40
Coq.ZArith.BinInt.Z.odd_spec	40
Coq.ZArith.BinInt.Z.double_spec	40	1.1	search with cache (only 1: simpl; only 1: trivial).	0.322587966919	110
Coq.ZArith.BinInt.Z.succ_double_spec	40	0.0.2.0.1.0.5.0	search with cache (only 1: simpl; only 1: destruct n; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: split; only 1: simpl; only 1: easy).	2.56024813652	961
Coq.ZArith.BinInt.Z.pred_double_spec	40	5	search with cache (only 1: now destruct n as [| [| | ]| [| | ]]).	0.218509912491	14
Coq.ZArith.BinInt.Z.pos_div_eucl_eq	40
Coq.ZArith.BinInt.Z.div_eucl_eq	40
Coq.ZArith.BinInt.Z.div_mod	40
Coq.ZArith.BinInt.Z.pos_div_eucl_bound	40
Coq.ZArith.BinInt.Z.mod_pos_bound	40
Coq.ZArith.BinInt.Z.mod_neg_bound	40
Coq.ZArith.BinInt.Z.quotrem_eq	40
Coq.ZArith.BinInt.Z.quot_rem'	40
Coq.ZArith.BinInt.Z.quot_rem	40	0.0.1.0.0.0.0.0	search with cache (only 1: rewrite mul_comm; only 1: rewrite mul_comm; only 1: rewrite mul_comm; only 1: rewrite mul_comm; only 1: rewrite mul_comm; only 1: generalize (quotrem_eq a b); only 1: unfold quot, rem; only 1: now destruct quotrem).	0.130185127258	24
Coq.ZArith.BinInt.Z.rem_bound_pos	40
Coq.ZArith.BinInt.Z.rem_opp_l'	40
Coq.ZArith.BinInt.Z.rem_opp_r'	40
Coq.ZArith.BinInt.Z.rem_opp_l	40
Coq.ZArith.BinInt.Z.rem_opp_r	40
Coq.ZArith.BinInt.Z.divide_Zpos	40
Coq.ZArith.BinInt.Z.divide_Zpos_Zneg_r	40
Coq.ZArith.BinInt.Z.divide_Zpos_Zneg_l	40
Coq.ZArith.BinInt.Z.ggcd_gcd	40
Coq.ZArith.BinInt.Z.ggcd_correct_divisors	40
Coq.ZArith.BinInt.Z.gcd_divide_l	40
Coq.ZArith.BinInt.Z.gcd_divide_r	40
Coq.ZArith.BinInt.Z.gcd_greatest	40
Coq.ZArith.BinInt.Z.gcd_nonneg	40
Coq.ZArith.BinInt.Z.ggcd_opp	40
Coq.ZArith.BinInt.Z.testbit_of_N	40
Coq.ZArith.BinInt.Z.testbit_of_N'	40	1.0.0.0.1.0.0.0.0.0.0.0.0	search with cache (only 1: destruct a as [| a], n; only 1: simpl; only 1: now split; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now destruct a; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now destruct a).	7.11422610283	3324
Coq.ZArith.BinInt.Z.testbit_Zpos	40	1.0.0.0.0.2.0	search with cache (only 1: rewrite <- testbit_of_N; only 1: intro Hn; only 1: f_equal; only 1: destruct n; only 1: trivial; only 1: trivial; only 1: now destruct Hn).	0.259881973267	10
Coq.ZArith.BinInt.Z.testbit_Zneg	40
Coq.ZArith.BinInt.Z.div2_spec	40	4	search with cache (only 1: reflexivity).	0.01522397995	5
Coq.ZArith.BinInt.Z.testbit_0_l	40	1.0.1.1.1.0.0.15	search with cache (only 1: rewrite <- ?negb_true_iff, ?PeanoNat.Nat.negb_even, ?PeanoNat.Nat.odd_spec, ?PeanoNat.Nat.even_spec; only 1: destruct n as [| n| n]; only 1: unfold testbit; only 1: easy; only 1: unfold testbit; only 1: destr_bool; only 1: unfold testbit; only 1: destr_bool).	0.856115102768	815
Coq.ZArith.BinInt.Z.testbit_neg_r	40	0	search with cache (only 1: now destruct n).	0.0224421024323	1
Coq.ZArith.BinInt.Z.testbit_odd_0	40
Coq.ZArith.BinInt.Z.testbit_even_0	40	0	search with cache (only 1: now destruct a as [| a| [a| a| ]]).	0.0165770053864	1
Coq.ZArith.BinInt.Z.testbit_odd_succ	40
Coq.ZArith.BinInt.Z.testbit_even_succ	40
Coq.ZArith.BinInt.Z.shiftr_spec_aux	40
Coq.ZArith.BinInt.Z.shiftl_spec_low	40
Coq.ZArith.BinInt.Z.shiftl_spec_high	40
Coq.ZArith.BinInt.Z.shiftr_spec	40
Coq.ZArith.BinInt.Z.lor_spec	40
Coq.ZArith.BinInt.Z.land_spec	40
Coq.ZArith.BinInt.Z.ldiff_spec	40
Coq.ZArith.BinInt.Z.lxor_spec	40
Coq.ZArith.BinInt.Z.gt_lt_iff	40
Coq.ZArith.BinInt.Z.gt_lt	40	2.0	search with cache (only 1: unfold lt, gt; only 1: now rewrite compare_antisym, CompOpp_iff).	0.36842083931	53
Coq.ZArith.BinInt.Z.lt_gt	40	2.0	search with cache (only 1: unfold lt, gt; only 1: now rewrite compare_antisym, CompOpp_iff).	0.360863924026	52
Coq.ZArith.BinInt.Z.ge_le_iff	40
Coq.ZArith.BinInt.Z.ge_le	40	2.0	search with cache (only 1: unfold le, ge; only 1: now rewrite compare_antisym, CompOpp_iff).	0.243318080902	36
Coq.ZArith.BinInt.Z.le_ge	40	2.0	search with cache (only 1: unfold le, ge; only 1: now rewrite compare_antisym, CompOpp_iff).	0.240807056427	36
Coq.ZArith.BinInt.Z.gtb_ltb	40
Coq.ZArith.BinInt.Z.geb_leb	40
Coq.ZArith.BinInt.Z.gtb_lt	40	1.6.3.0	search with cache (only 1: unfold ltb, lt; only 1: unfold gtb, ltb; only 1: rewrite compare_antisym; only 1: now case compare).	5.98283910751	1876
Coq.ZArith.BinInt.Z.geb_le	40	3.5.3.0	search with cache (only 1: unfold geb, leb; only 1: rewrite compare_antisym; only 1: unfold leb, le; only 1: now destruct compare).	12.9912450314	3765
Coq.ZArith.BinInt.Z.gtb_spec	40
Coq.ZArith.BinInt.Z.geb_spec	40
Coq.ZArith.BinInt.Z.add_reg_l	40	4	search with cache (only 1: apply add_cancel_l).	0.358158826828	15
Coq.ZArith.BinInt.Z.mul_reg_l	40	0.6.0	search with cache (only 1: intro H; only 1: apply mul_cancel_l; only 1: now nzsimpl).	0.0777530670166	9
Coq.ZArith.BinInt.Z.mul_reg_r	40	4.5	search with cache (only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: exact (fun Hp => proj1 (mul_cancel_l n m p Hp))).	0.185028076172	58
Coq.ZArith.BinInt.Z.opp_eq_mul_m1	40
Coq.ZArith.BinInt.Z.add_diag	40	1.10	search with cache (only 1: nzsimpl'; only 1: now nzsimpl).	0.427635908127	47
Coq.ZArith.BinInt.Z.compare_opp	40
Coq.ZArith.BinInt.Z.add_compare_mono_l	40
Coq.ZArith.BinInt.Z.testbit_mod_pow2	40
Coq.ZArith.BinInt.Z.testbit_ones	40
Coq.ZArith.BinInt.Z.testbit_ones_nonneg	40	0.0.6.0.0.0.0.0.0	search with cache (only 1: destruct (leb_spec 0 i), (ltb_spec i n); only 1: rewrite ?testbit_neg_r, ?ones_spec_low, ?ones_spec_high by auto; only 1: trivial; only 1: rewrite ?testbit_neg_r, ?ones_spec_low, ?ones_spec_high by auto; only 1: trivial; only 1: rewrite ?testbit_neg_r, ?ones_spec_low, ?ones_spec_high by auto; only 1: order; only 1: rewrite ?testbit_neg_r, ?ones_spec_low, ?ones_spec_high by auto; only 1: trivial).	1.73644018173	710
Coq.ZArith.BinInt.Pos2Z.id	40	0	search with cache (only 1: now f_equal).	0.0134229660034	1
Coq.ZArith.BinInt.Pos2Z.inj	40	0.7.5	search with cache (only 1: intros; only 1: destr_eq H; only 1: now f_equal).	0.420826911926	108
Coq.ZArith.BinInt.Pos2Z.inj_iff	40	1.6.0.4	search with cache (only 1: split; only 1: now injection 1; only 1: intros; only 1: now f_equal).	0.591155052185	144
Coq.ZArith.BinInt.Pos2Z.is_pos	40	1	search with cache (only 1: easy).	0.0105991363525	2
Coq.ZArith.BinInt.Pos2Z.is_nonneg	40	1	search with cache (only 1: easy).	0.0148420333862	2
Coq.ZArith.BinInt.Pos2Z.inj_1	40	0	search with cache (only 1: now Z.nzsimpl).	0.0284049510956	1
Coq.ZArith.BinInt.Pos2Z.inj_xO	40	4.0	search with cache (only 1: simpl; only 1: trivial).	0.0157911777496	6
Coq.ZArith.BinInt.Pos2Z.inj_xI	40	2.0	search with cache (only 1: simpl; only 1: now f_equal).	0.0143389701843	4
Coq.ZArith.BinInt.Pos2Z.inj_succ	40	2.0	search with cache (only 1: rewrite <- Pos.add_1_r; only 1: trivial).	0.0168318748474	4
Coq.ZArith.BinInt.Pos2Z.inj_add	40	4.0	search with cache (only 1: simpl; only 1: f_equal).	0.01775598526	6
Coq.ZArith.BinInt.Pos2Z.inj_sub	40
Coq.ZArith.BinInt.Pos2Z.inj_sub_max	40
Coq.ZArith.BinInt.Pos2Z.inj_pred	40	1.0.1.0.1.0.0	search with cache (only 1: destruct p; only 1: simpl; only 1: trivial; only 1: intros H; only 1: simpl; only 1: trivial; only 1: easy').	0.0359749794006	10
Coq.ZArith.BinInt.Pos2Z.inj_mul	40	1.0	search with cache (only 1: simpl; only 1: trivial).	0.0147318840027	3
Coq.ZArith.BinInt.Pos2Z.inj_pow_pos	40	0	search with cache (only 1: now apply Pos.iter_swap_gen).	0.0106551647186	1
Coq.ZArith.BinInt.Pos2Z.inj_pow	40	0	search with cache (only 1: now apply Pos.iter_swap_gen).	0.0109820365906	1
Coq.ZArith.BinInt.Pos2Z.inj_square	40	0	search with cache (only 1: trivial).	0.0085928440094	1
Coq.ZArith.BinInt.Pos2Z.inj_compare	40	0.0.0	search with cache (only 1: simpl; only 1: revert q; only 1: trivial).	0.0173740386963	3
Coq.ZArith.BinInt.Pos2Z.inj_leb	40	1.2.1.1	search with cache (only 1: symmetry; only 1: symmetry; only 1: unfold Z.leb, Z.le; only 1: now split).	0.0370647907257	18
Coq.ZArith.BinInt.Pos2Z.inj_ltb	40	8	search with cache (only 1: trivial).	0.0103929042816	9
Coq.ZArith.BinInt.Pos2Z.inj_eqb	40	0.0.1	search with cache (only 1: simpl; only 1: revert q; only 1: congruence).	0.0146210193634	4
Coq.ZArith.BinInt.Pos2Z.inj_max	40
Coq.ZArith.BinInt.Pos2Z.inj_min	40
Coq.ZArith.BinInt.Pos2Z.inj_sqrt	40	2	search with cache (only 1: now f_equal).	0.0156030654907	3
Coq.ZArith.BinInt.Pos2Z.inj_gcd	40	2.0.5	search with cache (only 1: generalize (Pos.ggcd_gcd p q); only 1: simpl; only 1: trivial).	0.0177638530731	10
Coq.ZArith.BinInt.Pos2Z.inj_divide	40
Coq.ZArith.BinInt.Pos2Z.inj_testbit	40	7.6.2.1.17.41.0	search with cache (only 1: intro Hn; only 1: destruct n as [| n| n]; only 1: simpl; only 1: now destruct a; only 1: simpl Z.to_N; only 1: trivial; only 1: now destruct Hn).	14.1119599342	26620
Coq.ZArith.BinInt.Pos2Z.inj_neg	40	5	search with cache (only 1: congruence).	0.637434005737	78
Coq.ZArith.BinInt.Pos2Z.inj_neg_iff	40	6.0.2	search with cache (only 1: split; only 1: now injection 1; only 1: congruence).	0.749459981918	132
Coq.ZArith.BinInt.Pos2Z.inj_pos	40	1	search with cache (only 1: now injection 1).	0.0167410373688	2
Coq.ZArith.BinInt.Pos2Z.inj_pos_iff	40	0.2.1.0	search with cache (only 1: split; only 1: now injection 1; only 1: intros; only 1: now f_equal).	0.0330410003662	7
Coq.ZArith.BinInt.Pos2Z.neg_is_neg	40	0	search with cache (only 1: easy).	0.00975179672241	1
Coq.ZArith.BinInt.Pos2Z.neg_is_nonpos	40	1	search with cache (only 1: easy).	0.0143060684204	2
Coq.ZArith.BinInt.Pos2Z.pos_is_pos	40	0	search with cache (only 1: reflexivity).	0.00897288322449	1
Coq.ZArith.BinInt.Pos2Z.pos_is_nonneg	40	1	search with cache (only 1: easy).	0.0141549110413	2
Coq.ZArith.BinInt.Pos2Z.neg_le_pos	40	0	search with cache (only 1: easy).	0.0143430233002	1
Coq.ZArith.BinInt.Pos2Z.neg_lt_pos	40	0	search with cache (only 1: easy).	0.00946497917175	1
Coq.ZArith.BinInt.Pos2Z.neg_le_neg	40
Coq.ZArith.BinInt.Pos2Z.neg_lt_neg	40
Coq.ZArith.BinInt.Pos2Z.pos_le_pos	40	4.1	search with cache (only 1: unfold Pos.gt, Pos.le, Pos.compare; only 1: trivial).	0.0180759429932	7
Coq.ZArith.BinInt.Pos2Z.pos_lt_pos	40	1	search with cache (only 1: trivial).	0.0077850818634	2
Coq.ZArith.BinInt.Pos2Z.neg_xO	40	0.0	search with cache (only 1: simpl; only 1: trivial).	0.0143458843231	2
Coq.ZArith.BinInt.Pos2Z.neg_xI	40	0	search with cache (only 1: reflexivity).	0.00850296020508	1
Coq.ZArith.BinInt.Pos2Z.pos_xO	40	0	search with cache (only 1: reflexivity).	0.0112187862396	1
Coq.ZArith.BinInt.Pos2Z.pos_xI	40	0	search with cache (only 1: reflexivity).	0.0103499889374	1
Coq.ZArith.BinInt.Pos2Z.opp_neg	40	0.0	search with cache (only 1: simpl; only 1: now f_equal).	0.0168869495392	2
Coq.ZArith.BinInt.Pos2Z.opp_pos	40	0.0	search with cache (only 1: simpl; only 1: now f_equal).	0.015527009964	2
Coq.ZArith.BinInt.Pos2Z.add_neg_neg	40	0	search with cache (only 1: trivial).	0.010162115097	1
Coq.ZArith.BinInt.Pos2Z.add_pos_neg	40	0.1.0	search with cache (only 1: simpl; only 1: revert q; only 1: trivial).	0.021900177002	4
Coq.ZArith.BinInt.Pos2Z.add_neg_pos	40	0	search with cache (only 1: reflexivity).	0.0108058452606	1
Coq.ZArith.BinInt.Pos2Z.add_pos_pos	40	0	search with cache (only 1: reflexivity).	0.011570930481	1
Coq.ZArith.BinInt.Pos2Z.divide_pos_neg_r	40
Coq.ZArith.BinInt.Pos2Z.divide_pos_neg_l	40
Coq.ZArith.BinInt.Pos2Z.testbit_neg	40	2.0.3.8.1.4.2.3.4.13.10.1	search with cache (only 1: intro Hn; only 1: destruct n as [| n| n]; only 1: simpl; only 1: destruct a as [| a| [a| a| ]]; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now destruct a; only 1: trivial; only 1: simpl; only 1: now destruct (Pos.pred_N a); only 1: now destruct Hn).	10.2000081539	23929
Coq.ZArith.BinInt.Pos2Z.testbit_pos	40	0	search with cache (only 1: apply Z.testbit_Zpos).	0.0130579471588	1
Coq.ZArith.BinInt.Z2Pos.id	40
Coq.ZArith.BinInt.Z2Pos.inj	40
Coq.ZArith.BinInt.Z2Pos.inj_iff	40
Coq.ZArith.BinInt.Z2Pos.to_pos_nonpos	40
Coq.ZArith.BinInt.Z2Pos.inj_1	40	0	search with cache (only 1: trivial).	0.0114779472351	1
Coq.ZArith.BinInt.Z2Pos.inj_double	40	0.0.0.2.0	search with cache (only 1: destruct x; only 1: easy; only 1: trivial; only 1: simpl; only 1: easy).	0.0468740463257	17
Coq.ZArith.BinInt.Z2Pos.inj_succ_double	40	4.2	search with cache (only 1: intros; only 1: now destruct x).	0.0579271316528	14
Coq.ZArith.BinInt.Z2Pos.inj_succ	40	0.0.2.0.2.1	search with cache (only 1: destruct x; only 1: now Z.nzsimpl; only 1: simpl; only 1: now destruct p; only 1: simpl; only 1: easy).	0.318409204483	78
Coq.ZArith.BinInt.Z2Pos.inj_add	40
Coq.ZArith.BinInt.Z2Pos.inj_sub	40
Coq.ZArith.BinInt.Z2Pos.inj_pred	40	0.0.0.0.3.0.0.12.13	search with cache (only 1: intuition; only 1: destruct H; only 1: destruct x; only 1: trivial; only 1: destruct p; only 1: reflexivity; only 1: trivial; only 1: trivial; only 1: trivial).	2.54122400284	1760
Coq.ZArith.BinInt.Z2Pos.inj_mul	40	0.0.0.0.3	search with cache (only 1: destruct x; only 1: simpl; only 1: easy; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.150450944901	22
Coq.ZArith.BinInt.Z2Pos.inj_pow	40
Coq.ZArith.BinInt.Z2Pos.inj_pow_pos	40
Coq.ZArith.BinInt.Z2Pos.inj_compare	40	0.0.0.6	search with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.0757958889008	22
Coq.ZArith.BinInt.Z2Pos.inj_leb	40	1.1.11.2	search with cache (only 1: destruct x; only 1: Z.order; only 1: easy || now destruct y; only 1: easy || now destruct y).	1.19252300262	843
Coq.ZArith.BinInt.Z2Pos.inj_ltb	40
Coq.ZArith.BinInt.Z2Pos.inj_eqb	40	0.0.0.0	search with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.053680896759	4
Coq.ZArith.BinInt.Z2Pos.inj_max	40
Coq.ZArith.BinInt.Z2Pos.inj_min	40
Coq.ZArith.BinInt.Z2Pos.inj_sqrt	40	0.0.0.0.3	search with cache (only 1: destruct x; only 1: trivial; only 1: simpl; only 1: reflexivity; only 1: easy).	0.0299389362335	8
Coq.ZArith.BinInt.Z2Pos.inj_gcd	40	0.0.0.3.2	search with cache (only 1: intros; only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy).	0.0532250404358	10
Coq.ZArith.BinInt.Zplus_minus_eq	40
Coq.ZArith.BinInt.Zpos_eq	40	0.0	search with cache (only 1: intros; only 1: now f_equal).	0.018415927887	2
Coq.ZArith.BinInt.ZL0	40	7	search with cache (only 1: now PeanoNat.Nat.nzsimpl).	0.0678989887238	8
Coq.ZArith.BinInt.Zplus_diag_eq_mult_2	40	1.11	search with cache (only 1: Z.nzsimpl'; only 1: now Z.nzsimpl).	0.824537992477	201
Coq.ZArith.BinInt.Z_eq_mult	40	3.0.56.3	search with cache (only 1: intro H1; only 1: rewrite H1; only 1: Z.nzsimpl; only 1: trivial).	4.66639685631	8726
Coq.ZArith.Zeven.Zeven_equiv	40
Coq.ZArith.Zeven.Zodd_equiv	40
Coq.ZArith.Zeven.Zeven_bool_iff	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.29	search with cache (only 1: induction n; only 1: simpl; only 1: intuition; only 1: destruct p; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: destruct p; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).	12.1028850079	8497
Coq.ZArith.Zeven.Zodd_bool_iff	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.24	search with cache (only 1: induction n; only 1: simpl; only 1: intuition; only 1: destruct p; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: destruct p; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).	17.2142391205	9080
Coq.ZArith.Zeven.Zodd_even_bool	40	49.11.1.5.42	search with cache (only 1: destruct n as [| n| n]; only 1: simpl; only 1: tauto; only 1: now destruct n; only 1: now destruct n).	10.0845768452	46074
Coq.ZArith.Zeven.Zeven_odd_bool	40	26	search with cache (only 1: now destruct n as [| [| | ]| [| | ]]).	0.263209104538	729
Coq.ZArith.Zeven.Zeven_odd_dec	40
Coq.ZArith.Zeven.Zeven_dec	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: destruct n as [| p| p]; only 1: simpl; only 1: now left || now right; only 1: destruct p; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: tauto; only 1: destruct p; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: tauto).	3.21965789795	2169
Coq.ZArith.Zeven.Zodd_dec	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: destruct n as [| p| p]; only 1: simpl; only 1: now left || now right; only 1: destruct p; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right; only 1: destruct p; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right).	6.49894118309	4701
Coq.ZArith.Zeven.Zeven_not_Zodd	40	0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0	search with cache (only 1: destruct n as [| p| p]; only 1: simpl; only 1: tauto; only 1: destruct p; only 1: simpl; only 1: tauto; only 1: simpl; only 1: tauto; only 1: simpl; only 1: tauto; only 1: destruct p; only 1: simpl; only 1: tauto; only 1: simpl; only 1: tauto; only 1: simpl; only 1: tauto).	4.4384739399	3331
Coq.ZArith.Zeven.Zodd_not_Zeven	40	0.0.0.0.0	search with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd; only 1: destruct Z.odd; only 1: intuition; only 1: intuition).	0.0317730903625	5
Coq.ZArith.Zeven.Zeven_Sn	40
Coq.ZArith.Zeven.Zodd_Sn	40
Coq.ZArith.Zeven.Zeven_pred	40
Coq.ZArith.Zeven.Zodd_pred	40
Coq.ZArith.Zeven.Zeven_div2	40	0	search with cache (only 1: now destruct n as [| [| | ]| [| | ]]).	0.0145609378815	1
Coq.ZArith.Zeven.Zodd_div2	40	0.0.0.0.0.0.0.0.0.0.0.0.2.0.0.3	search with cache (only 1: boolify_even_odd; only 1: destruct n as [| [| | ]| [| | ]]; only 1: simpl; only 1: now try Z.order'; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite Pos.pred_double_succ; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy).	26.6202530861	12077
Coq.ZArith.Zeven.Zquot2_odd_eqn	40	0.0.0.0.1.0.0.0.0.1.3.0.2	search with cache (only 1: destruct n as [| [| | ]| [| | ]]; only 1: simpl; only 1: tauto; only 1: reflexivity; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: now Z.nzsimpl; only 1: reflexivity; only 1: simpl; only 1: trivial; only 1: simpl; only 1: easy).	11.5436439514	3750
Coq.ZArith.Zeven.Zeven_quot2	40	0	search with cache (only 1: now destruct n as [| [p| p| ]| [p| p| ]]).	0.0128040313721	1
Coq.ZArith.Zeven.Zodd_quot2	40	0	search with cache (only 1: now destruct n as [| [p| p| ]| [p| p| ]]).	0.0175788402557	1
Coq.ZArith.Zeven.Zodd_quot2_neg	40	4.0.0.1.0	search with cache (only 1: intros Hn Hn'; only 1: apply Zodd_bool_iff in Hn'; only 1: rewrite (Zquot2_odd_eqn n)  at 1; only 1: rewrite Hn'; only 1: now destruct n as [| [p| p| ]| [p| p| ]]).	0.140993833542	15
Coq.ZArith.Zeven.Zquot2_opp	40
Coq.ZArith.Zeven.Zquot2_quot	40
Coq.ZArith.Zeven.Z_modulo_2	40
Coq.ZArith.Zeven.Zsplit2	40
Coq.ZArith.Zeven.Zeven_ex	40	5.0	search with cache (only 1: exists (Z.div2 n); only 1: now destruct n as [| [| | ]| [| | ]]).	0.156155109406	17
Coq.ZArith.Zeven.Zodd_ex	40	0.0.18	search with cache (only 1: intros Hn; only 1: exists (Z.div2 n); only 1: exact (Zodd_div2 n Hn)).	37.0469748974	5733
Coq.ZArith.Zeven.Zeven_2p	40	2.3.0.0.1.4.8.6	search with cache (only 1: boolify_even_odd; only 1: simpl; only 1: destruct p; only 1: simpl; only 1: tauto; only 1: simpl; only 1: trivial; only 1: easy).	0.989444971085	1069
Coq.ZArith.Zeven.Zodd_2p_plus_1	40
Coq.ZArith.Zeven.Zeven_plus_Zodd	40
Coq.ZArith.Zeven.Zeven_plus_Zeven	40	1.2.0.2.0.66	search with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: intros Ha Hb; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: now rewrite Z.odd_add, Ha, Hb).	2.68366599083	3145
Coq.ZArith.Zeven.Zodd_plus_Zeven	40	1.0.0.0	search with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: intros Ha Hb; only 1: now rewrite Z.odd_add, Ha, Hb).	0.0381779670715	5
Coq.ZArith.Zeven.Zodd_plus_Zodd	40	1.0.0.0	search with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: intros Ha Hb; only 1: now rewrite Z.odd_add, Ha, Hb).	0.0401260852814	5
Coq.ZArith.Zeven.Zeven_mult_Zeven_l	40
Coq.ZArith.Zeven.Zeven_mult_Zeven_r	40
Coq.ZArith.Zeven.Zodd_mult_Zodd	40
Coq.ZArith.Znumtheory.Zdivide_opp_r	40
Coq.ZArith.Znumtheory.Zdivide_opp_r_rev	40	0	search with cache (only 1: apply Z.divide_opp_r).	0.0209970474243	1
Coq.ZArith.Znumtheory.Zdivide_opp_l	40
Coq.ZArith.Znumtheory.Zdivide_opp_l_rev	40	0	search with cache (only 1: apply Z.divide_opp_l).	0.0204010009766	1
Coq.ZArith.Znumtheory.Zdivide_Zabs_l	40
Coq.ZArith.Znumtheory.Zdivide_Zabs_inv_l	40	0	search with cache (only 1: apply Z.divide_abs_l).	0.0177209377289	1
Coq.ZArith.Znumtheory.Zmult_one	40
Coq.ZArith.Znumtheory.Zdivide_bounds	40
Coq.ZArith.Znumtheory.Zmod_divide	40	1.1.2.14.4.1	search with cache (only 1: intros a b Hb; only 1: exists (a / b); only 1: rewrite Z.mul_comm; only 1: rewrite Z.div_exact; only 1: now Z.nzsimpl; only 1: now Z.nzsimpl).	8.65418815613	3700
Coq.ZArith.Znumtheory.Zdivide_mod	40	1.1.1.20.2.0.4	search with cache (only 1: intros a b; only 1: intros (c, Hc); only 1: zero_or_not b; only 1: rewrite Z.mod_divide; only 1: exists c; only 1: trivial; only 1: trivial).	18.5113739967	11502
Coq.ZArith.Znumtheory.Zdivide_dec	40
Coq.ZArith.Znumtheory.Z_lt_neq	40
Coq.ZArith.Znumtheory.Zdivide_Zdiv_eq	40
Coq.ZArith.Znumtheory.Zdivide_Zdiv_eq_2	40
Coq.ZArith.Znumtheory.Zdivide_le	40
Coq.ZArith.Znumtheory.Zdivide_Zdiv_lt_pos	40
Coq.ZArith.Znumtheory.Zmod_div_mod	40
Coq.ZArith.Znumtheory.Zmod_divide_minus	40
Coq.ZArith.Znumtheory.Zdivide_mod_minus	40
Coq.ZArith.Znumtheory.Zis_gcd_sym	40
Coq.ZArith.Znumtheory.Zis_gcd_0	40
Coq.ZArith.Znumtheory.Zis_gcd_1	40
Coq.ZArith.Znumtheory.Zis_gcd_refl	40	0.4.4.1	search with cache (only 1: constructor; only 1: intuition; only 1: intuition; only 1: trivial).	0.222723007202	110
Coq.ZArith.Znumtheory.Zis_gcd_minus	40	0.0.0.0.0	search with cache (only 1: induction 1; only 1: constructor; only 1: intuition; only 1: intuition; only 1: intuition).	0.0598740577698	5
Coq.ZArith.Znumtheory.Zis_gcd_opp	40	0.0.0.0.0	search with cache (only 1: induction 1; only 1: constructor; only 1: intuition; only 1: intuition; only 1: intuition).	0.194621086121	5
Coq.ZArith.Znumtheory.Zis_gcd_0_abs	40
Coq.ZArith.Znumtheory.Zis_gcd_unique	40
Coq.ZArith.Znumtheory.Zis_gcd_for_euclid	40
Coq.ZArith.Znumtheory.Zis_gcd_for_euclid2	40
Coq.ZArith.Znumtheory.euclid_rec	40
Coq.ZArith.Znumtheory.euclid	40
Coq.ZArith.Znumtheory.Zis_gcd_uniqueness_apart_sign	40	3.3.0.0	search with cache (only 1: intros a b c d [Hc1 Hc2 Hc3] [Hd1 Hd2 Hd3]; only 1: apply Z.divide_antisym; only 1: auto; only 1: auto).	0.128998041153	45
Coq.ZArith.Znumtheory.Zis_gcd_bezout	40
Coq.ZArith.Znumtheory.Zis_gcd_mult	40
Coq.ZArith.Znumtheory.rel_prime_bezout	40
Coq.ZArith.Znumtheory.bezout_rel_prime	40
Coq.ZArith.Znumtheory.Gauss	40
Coq.ZArith.Znumtheory.rel_prime_mult	40
Coq.ZArith.Znumtheory.rel_prime_cross_prod	40
Coq.ZArith.Znumtheory.Zis_gcd_rel_prime	40
Coq.ZArith.Znumtheory.rel_prime_sym	40
Coq.ZArith.Znumtheory.rel_prime_div	40
Coq.ZArith.Znumtheory.rel_prime_1	40
Coq.ZArith.Znumtheory.not_rel_prime_0	40
Coq.ZArith.Znumtheory.rel_prime_mod	40
Coq.ZArith.Znumtheory.rel_prime_mod_rev	40
Coq.ZArith.Znumtheory.Zrel_prime_neq_mod_0	40
Coq.ZArith.Znumtheory.prime_divisors	40
Coq.ZArith.Znumtheory.prime_rel_prime	40
Coq.ZArith.Znumtheory.rel_prime_le_prime	40
Coq.ZArith.Znumtheory.prime_mult	40
Coq.ZArith.Znumtheory.not_prime_0	40	8	search with cache (only 1: now destruct 1 || intros _).	0.057165145874	18
Coq.ZArith.Znumtheory.not_prime_1	40	64	search with cache (only 1: now destruct 1 || intros _).	3.63124990463	6787
Coq.ZArith.Znumtheory.prime_2	40
Coq.ZArith.Znumtheory.prime_3	40
Coq.ZArith.Znumtheory.prime_ge_2	40
Coq.ZArith.Znumtheory.Z_0_1_more	40
Coq.ZArith.Znumtheory.prime_alt	40
Coq.ZArith.Znumtheory.square_not_prime	40
Coq.ZArith.Znumtheory.prime_div_prime	40
Coq.ZArith.Znumtheory.Zgcd_is_gcd	40
Coq.ZArith.Znumtheory.Zgcd_spec	40
Coq.ZArith.Znumtheory.Zdivide_Zgcd	40	0.0.3.21.3	search with cache (only 1: intros a b; only 1: intros; only 1: apply Z.gcd_greatest; only 1: intuition; only 1: intuition).	16.3839228153	10219
Coq.ZArith.Znumtheory.Zis_gcd_gcd	40
Coq.ZArith.Znumtheory.Zgcd_div_swap0	40
Coq.ZArith.Znumtheory.Zgcd_div_swap	40
Coq.ZArith.Znumtheory.Zgcd_ass	40
Coq.ZArith.Znumtheory.Zgcd_1_rel_prime	40
Coq.ZArith.Znumtheory.rel_prime_dec	40
Coq.ZArith.Znumtheory.prime_dec_aux	40
Coq.ZArith.Znumtheory.prime_dec	40
Coq.ZArith.Znumtheory.not_prime_divide	40
Coq.ZArith.Zdiv.Z_div_mod_POS	40
Coq.ZArith.Zdiv.Z_div_mod	40
Coq.ZArith.Zdiv.Remainder_equiv	40	1.0.50	search with cache (only 1: fix even_spec 1; only 1: intros a b; only 1: trivial).	36.3791148663	36385
Coq.ZArith.Zdiv.Z_div_mod_full	40
Coq.ZArith.Zdiv.Z_mod_remainder	40	0.0.1.0.0.0.0.1.1.0.1.0	search with cache (only 1: intros Hb; only 1: generalize (Z.div_eucl_eq a b Hb), (Z.mod_pos_bound a b), (Z.mod_neg_bound a b); only 1: unfold Z.modulo; only 1: destruct Z.div_eucl as (q, r); only 1: intros EQ POS NEG; only 1: red; only 1: destruct b; only 1: now destruct Hb; only 1: left; only 1: now apply POS; only 1: right; only 1: now apply NEG).	4.73712396622	1188
Coq.ZArith.Zdiv.Z_div_mod_eq	40	0.2.0.1.0.2.0	search with cache (only 1: intros Hb; only 1: unfold Z.div, Z.modulo; only 1: Z.swap_greater; only 1: assert (Hb' : b <> 0) by now destruct b; only 1: generalize (Z.div_eucl_eq a b Hb'), (Z.mod_pos_bound a b Hb); only 1: destruct Z.div_eucl; only 1: auto).	1.16860795021	241
Coq.ZArith.Zdiv.Zmod_eq_full	40
Coq.ZArith.Zdiv.Zmod_eq	40
Coq.ZArith.Zdiv.Zdiv_eucl_exist	40
Coq.ZArith.Zdiv.Zdiv_mod_unique	40
Coq.ZArith.Zdiv.Zdiv_unique	40
Coq.ZArith.Zdiv.Zmod_unique	40
Coq.ZArith.Zdiv.Zmod_0_l	40	3	search with cache (only 1: trivial).	0.094456911087	13
Coq.ZArith.Zdiv.Zmod_0_r	40	0.0.3.1	search with cache (only 1: destruct a; only 1: auto; only 1: auto; only 1: auto).	0.114278078079	23
Coq.ZArith.Zdiv.Zdiv_0_l	40	5.0	search with cache (only 1: intros; only 1: trivial).	0.0232291221619	14
Coq.ZArith.Zdiv.Zdiv_0_r	40	0.0.5.1	search with cache (only 1: destruct a; only 1: auto; only 1: auto; only 1: auto).	0.0925319194794	30
Coq.ZArith.Zdiv.Zmod_1_r	40	16.0	search with cache (only 1: intros; only 1: now Z.nzsimpl).	1.19458293915	1028
Coq.ZArith.Zdiv.Zdiv_1_r	40	2.1.1.1.0	search with cache (only 1: intros; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: now Z.nzsimpl).	0.106106996536	11
Coq.ZArith.Zdiv.Z_mod_same_full	40
Coq.ZArith.Zdiv.Z_mod_mult	40
Coq.ZArith.Zdiv.Z_div_pos	40
Coq.ZArith.Zdiv.Z_div_ge0	40	4.4.5.2.1.17.1	search with cache (only 1: intros Hb; only 1: intros a0; only 1: Z.swap_greater; only 1: intros; only 1: apply Z.div_pos; only 1: now Z.nzsimpl; only 1: now Z.nzsimpl).	37.4935288429	26639
Coq.ZArith.Zdiv.Z_div_lt	40
Coq.ZArith.Zdiv.Z_div_ge	40
Coq.ZArith.Zdiv.Z_div_le	40	0.0.0.0	search with cache (only 1: intros; only 1: apply Z.div_le_mono; only 1: auto using Z.gt_lt, Z.ge_le; only 1: auto using Z.gt_lt, Z.ge_le).	0.0241429805756	4
Coq.ZArith.Zdiv.Z_mult_div_ge	40
Coq.ZArith.Zdiv.Z_mult_div_ge_neg	40
Coq.ZArith.Zdiv.Z_div_exact_full_1	40
Coq.ZArith.Zdiv.Z_div_exact_full_2	40	0.0.2.1	search with cache (only 1: intros; only 1: rewrite Z.div_exact; only 1: now Z.nzsimpl; only 1: now Z.nzsimpl).	0.0623018741608	7
Coq.ZArith.Zdiv.Zmod_le	40
Coq.ZArith.Zdiv.Zdiv_lt_upper_bound	40
Coq.ZArith.Zdiv.Zdiv_le_upper_bound	40
Coq.ZArith.Zdiv.Zdiv_le_lower_bound	40
Coq.ZArith.Zdiv.Zdiv_le_compat_l	40
Coq.ZArith.Zdiv.Zdiv_sgn	40
Coq.ZArith.Zdiv.Z_mod_plus_full	40
Coq.ZArith.Zdiv.Zdiv_opp_opp	40
Coq.ZArith.Zdiv.Zmod_opp_opp	40
Coq.ZArith.Zdiv.Z_mod_zero_opp_full	40
Coq.ZArith.Zdiv.Z_mod_nz_opp_full	40
Coq.ZArith.Zdiv.Z_mod_zero_opp_r	40
Coq.ZArith.Zdiv.Z_mod_nz_opp_r	40
Coq.ZArith.Zdiv.Z_div_zero_opp_full	40
Coq.ZArith.Zdiv.Z_div_nz_opp_full	40
Coq.ZArith.Zdiv.Z_div_zero_opp_r	40
Coq.ZArith.Zdiv.Z_div_nz_opp_r	40
Coq.ZArith.Zdiv.Zdiv_mult_cancel_r	40
Coq.ZArith.Zdiv.Zdiv_mult_cancel_l	40
Coq.ZArith.Zdiv.Zmult_mod_distr_l	40
Coq.ZArith.Zdiv.Zmult_mod_distr_r	40
Coq.ZArith.Zdiv.Zmod_mod	40
Coq.ZArith.Zdiv.Zmult_mod	40
Coq.ZArith.Zdiv.Zplus_mod	40
Coq.ZArith.Zdiv.Zminus_mod	40
Coq.ZArith.Zdiv.Zplus_mod_idemp_l	40	0.1.5.1.5.11.1	search with cache (only 1: intros; only 1: rewrite Zplus_mod; only 1: repeat rewrite Zmod_mod; only 1: zero_or_not n; only 1: symmetry; only 1: apply Z.add_mod; only 1: tauto).	4.1756439209	4148
Coq.ZArith.Zdiv.Zplus_mod_idemp_r	40	0.7.1	search with cache (only 1: intros; only 1: rewrite Zplus_mod, Zmod_mod, <- Zplus_mod; only 1: trivial).	0.0831639766693	50
Coq.ZArith.Zdiv.Zminus_mod_idemp_l	40
Coq.ZArith.Zdiv.Zminus_mod_idemp_r	40	0.1.1.1.0	search with cache (only 1: intros; only 1: rewrite Zminus_mod, Zmod_mod, <- Zminus_mod; only 1: replace (a - b) with a + -1 * b; only 1: auto with zarith; only 1: auto with zarith).	0.19305896759	52
Coq.ZArith.Zdiv.Zmult_mod_idemp_l	40	0.1.5.0.1.15.1	search with cache (only 1: intros; only 1: rewrite Zmult_mod; only 1: repeat rewrite Zmod_mod; only 1: zero_or_not n; only 1: symmetry; only 1: apply Z.mul_mod; only 1: tauto).	6.24294614792	4730
Coq.ZArith.Zdiv.Zmult_mod_idemp_r	40	0.0.1	search with cache (only 1: intros; only 1: rewrite Zmult_mod, Zmod_mod, <- Zmult_mod; only 1: trivial).	0.0191838741302	4
Coq.ZArith.Zdiv.eqm_refl	40	2.1	search with cache (only 1: intro n; only 1: now f_equal).	0.00930690765381	5
Coq.ZArith.Zdiv.eqm_sym	40	0.0	search with cache (only 1: unfold eqm; only 1: auto).	0.00982809066772	2
Coq.ZArith.Zdiv.eqm_trans	40	12.0	search with cache (only 1: unfold eqm; only 1: Z.order').	1.41366410255	508
Coq.ZArith.Zdiv.eqm_setoid	40
Coq.ZArith.Zdiv.Zplus_eqm	40
Coq.ZArith.Zdiv.Zminus_eqm	40
Coq.ZArith.Zdiv.Zmult_eqm	40
Coq.ZArith.Zdiv.Zopp_eqm	40
Coq.ZArith.Zdiv.Zmod_eqm	40
Coq.ZArith.Zdiv.Zdiv_Zdiv	40
Coq.ZArith.Zdiv.Zmod_div	40
Coq.ZArith.Zdiv.Zdiv_mult_le	40
Coq.ZArith.Zdiv.Zmod_divides	40
Coq.ZArith.Zdiv.Zmod_odd	40
Coq.ZArith.Zdiv.Zmod_even	40
Coq.ZArith.Zdiv.Zodd_mod	40
Coq.ZArith.Zdiv.Zeven_mod	40	0.0.0	search with cache (only 1: intros a; only 1: rewrite Zmod_odd, Zodd_even_bool; only 1: now destruct Z.even).	0.015811920166	3
Coq.ZArith.Zdiv.Z_mod_same	40	1.4.29.2	search with cache (only 1: intros; only 1: rewrite Z.mod_divide; only 1: easy; only 1: now intros ->).	9.77157688141	6332
Coq.ZArith.Zdiv.Z_div_same	40
Coq.ZArith.Zdiv.Z_div_plus	40
Coq.ZArith.Zdiv.Z_div_mult	40
Coq.ZArith.Zdiv.Z_mod_plus	40	1.2.0.0.0.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: apply Z.mod_add; only 1: now intros ->).	0.0767130851746	20
Coq.ZArith.Zdiv.Z_div_exact_1	40	1.0.6.8.0	search with cache (only 1: intros a b; only 1: zero_or_not b; only 1: rewrite Z.div_exact; only 1: now destruct b; only 1: tauto).	2.35343909264	1181
Coq.ZArith.Zdiv.Z_div_exact_2	40	1.8.10.0	search with cache (only 1: intros; only 1: rewrite Z.div_exact; only 1: trivial; only 1: now destruct b).	3.25250887871	1615
Coq.ZArith.Zdiv.Z_mod_zero_opp	40	1.1.4.5.0	search with cache (only 1: intros; only 1: zero_or_not b; only 1: apply Z.mod_opp_l_z; only 1: now destruct b; only 1: now destruct b).	1.50267195702	639
Coq.ZArith.Zdiv.Zmod_POS_correct	40
Coq.ZArith.Zdiv.Zmod'_correct	40
Coq.ZArith.Zdiv.Zdiv_eucl_extended	40
Coq.ZArith.Zdiv.div_Zdiv	40
Coq.ZArith.Zdiv.mod_Zmod	40
Coq.ZArith.Zpower.Zpower_nat_0_r	40	2	search with cache (only 1: trivial).	0.00779795646667	3
Coq.ZArith.Zpower.Zpower_nat_succ_r	40	0.2.1.2	search with cache (only 1: destruct n; only 1: tauto; only 1: simpl; only 1: trivial).	0.0294809341431	9
Coq.ZArith.Zpower.Zpower_nat_is_exp	40
Coq.ZArith.Zpower.Zpower_pos_nat	40
Coq.ZArith.Zpower.Zpower_nat_Z	40
Coq.ZArith.Zpower.Zpower_nat_Zpower	40	2.4.6.1.2	search with cache (only 1: induction n; only 1: now f_equal; only 1: intros Hn; only 1: apply Pos2Nat.inj_iter; only 1: now destruct 1).	2.04645299911	734
Coq.ZArith.Zpower.Zpower_pos_is_exp	40
Coq.ZArith.Zpower.Zpower_exp	40
Coq.ZArith.Zpower.shift_nat_equiv	40	0	search with cache (only 1: now subst).	0.00820589065552	1
Coq.ZArith.Zpower.shift_pos_equiv	40	0	search with cache (only 1: trivial).	0.00804018974304	1
Coq.ZArith.Zpower.shift_equiv	40	1.4.0.4.1.7.0.8	search with cache (only 1: intros; only 1: Z.bitwise; only 1: destruct n as [| n| n]; only 1: easy; only 1: simpl Z.shiftl; only 1: rewrite <- (Pos.iter_swap_gen _ _ _ xO) by trivial; only 1: trivial; only 1: easy).	2.65530490875	2122
Coq.ZArith.Zpower.two_power_nat_equiv	40
Coq.ZArith.Zpower.two_power_pos_equiv	40	8.5.5.1.89	search with cache (only 1: simpl; only 1: generalize (Pos.sqrtrem_spec p); only 1: destruct (Pos.sqrtrem p) as (s, r); only 1: intros; only 1: now apply Pos.iter_swap_gen).	9.56067299843	13937
Coq.ZArith.Zpower.two_p_equiv	40	4.10.0.6.0.0.0.7.13.34	search with cache (only 1: Morphisms.f_equiv; only 1: intros n Hn; only 1: intros H; only 1: induction n; only 1: destruct H; only 1: now Z.nzsimpl; only 1: destruct H; only 1: now apply Pos.iter_swap_gen; only 1: destruct H; only 1: split).	15.4575850964	11342
Coq.ZArith.Zpower.two_power_nat_S	40	3.0.1	search with cache (only 1: induction n; only 1: trivial; only 1: now Morphisms.f_equiv).	0.0242249965668	7
Coq.ZArith.Zpower.shift_nat_plus	40
Coq.ZArith.Zpower.shift_nat_correct	40
Coq.ZArith.Zpower.two_power_nat_correct	40
Coq.ZArith.Zpower.shift_pos_nat	40
Coq.ZArith.Zpower.two_power_pos_nat	40
Coq.ZArith.Zpower.shift_pos_correct	40	2.1.0.10.30	search with cache (only 1: Z.nzsimpl'; only 1: generalize (Pos.sqrtrem_spec p); only 1: revert p; only 1: fix sqrtrem_spec 1; only 1: trivial).	2.47136116028	1855
Coq.ZArith.Zpower.two_power_pos_correct	40	1	search with cache (only 1: now apply Pos.iter_swap_gen).	0.00864291191101	2
Coq.ZArith.Zpower.two_power_pos_is_exp	40
Coq.ZArith.Zpower.two_p_is_exp	40
Coq.ZArith.Zpower.two_p_gt_ZERO	40	0.1.0.2.1.0	search with cache (only 1: intros; only 1: destruct x; only 1: unfold Z.gt; only 1: trivial; only 1: easy; only 1: easy).	0.0449578762054	16
Coq.ZArith.Zpower.two_p_S	40	14.12.0	search with cache (only 1: rewrite !two_p_equiv; only 1: symmetry; only 1: now Z.nzsimpl).	2.97236394882	1036
Coq.ZArith.Zpower.two_p_pred	40
Coq.ZArith.Zpower.Zdiv_rest_correct1	40
Coq.ZArith.Zpower.Zdiv_rest_correct2	40
Coq.ZArith.Zpower.Zdiv_rest_correct	40
Coq.ZArith.Zpower.Zdiv_rest_ok	40
Coq.ZArith.Zpower.Zdiv_rest_shiftr	40
Coq.ZArith.Zorder.Ztrichotomy_inf	40
Coq.ZArith.Zorder.Ztrichotomy	40
Coq.ZArith.Zorder.dec_Zne	40
Coq.ZArith.Zorder.dec_Zgt	40
Coq.ZArith.Zorder.dec_Zge	40
Coq.ZArith.Zorder.not_Zeq	40
Coq.ZArith.Zorder.Zle_not_lt	40	0	search with cache (only 1: Z.order).	0.0106780529022	1
Coq.ZArith.Zorder.Zlt_not_le	40	0	search with cache (only 1: Z.order).	0.0113480091095	1
Coq.ZArith.Zorder.Zle_not_gt	40	0.1	search with cache (only 1: Z.swap_greater; only 1: Z.order).	0.0184791088104	3
Coq.ZArith.Zorder.Zgt_not_le	40	0.2	search with cache (only 1: Z.swap_greater; only 1: Z.order).	0.0194261074066	4
Coq.ZArith.Zorder.Znot_ge_lt	40	0.0	search with cache (only 1: Z.swap_greater; only 1: Z.order).	0.0195491313934	2
Coq.ZArith.Zorder.Znot_lt_ge	40	0.0	search with cache (only 1: Z.swap_greater; only 1: Z.order).	0.0185260772705	2
Coq.ZArith.Zorder.Znot_gt_le	40	0	search with cache (only 1: trivial).	0.00787281990051	1
Coq.ZArith.Zorder.Znot_le_gt	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.nle_gt).	0.0181031227112	2
Coq.ZArith.Zorder.not_Zne	40	4.3.4.12	search with cache (only 1: intuition; only 1: destruct (Z.eq_decidable n m); only 1: auto; only 1: tauto).	2.04466891289	953
Coq.ZArith.Zorder.Zgt_asym	40	6.1	search with cache (only 1: Z.swap_greater; only 1: Z.order).	0.0367889404297	17
Coq.ZArith.Zorder.Zgt_irrefl	40	4.0.1	search with cache (only 1: Z.swap_greater; only 1: intro H; only 1: Z.order).	0.0167980194092	8
Coq.ZArith.Zorder.Zle_lt_or_eq	40
Coq.ZArith.Zorder.Zgt_trans	40	5.0	search with cache (only 1: Z.swap_greater; only 1: now transitivity m).	0.0579421520233	7
Coq.ZArith.Zorder.Zle_gt_trans	40	6.0	search with cache (only 1: Z.swap_greater; only 1: Z.Private_Tac.order || (right; Z.Private_Tac.order) || (left; Z.Private_Tac.order)).	0.0425360202789	17
Coq.ZArith.Zorder.Zgt_le_trans	40	3.0	search with cache (only 1: Z.swap_greater; only 1: Z.Private_Tac.order).	0.0221781730652	5
Coq.ZArith.Zorder.Zge_trans	40	15.6	search with cache (only 1: Z.swap_greater; only 1: Z.Private_Tac.order).	5.61546397209	2368
Coq.ZArith.Zorder.Zsucc_le_compat	40
Coq.ZArith.Zorder.Zsucc_lt_compat	40
Coq.ZArith.Zorder.Zsucc_gt_compat	40	0.3	search with cache (only 1: Z.swap_greater; only 1: apply Z.succ_lt_mono).	0.109408855438	20
Coq.ZArith.Zorder.Zsucc_gt_reg	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.succ_lt_mono).	0.0193281173706	2
Coq.ZArith.Zorder.Zsucc_le_reg	40	1	search with cache (only 1: apply Z.succ_le_mono).	0.0150549411774	2
Coq.ZArith.Zorder.Zsucc_lt_reg	40	0	search with cache (only 1: apply Z.succ_lt_mono).	0.00802302360535	1
Coq.ZArith.Zorder.Zgt_succ	40	4.1.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.succ_lt_mono; only 1: apply Z.lt_succ_diag_r).	0.0176520347595	11
Coq.ZArith.Zorder.Znot_le_succ	40	2.25	search with cache (only 1: apply Z.nle_gt; only 1: apply Z.lt_succ_diag_r).	0.558502912521	1118
Coq.ZArith.Zorder.Zgt_le_succ	40
Coq.ZArith.Zorder.Zle_gt_succ	40
Coq.ZArith.Zorder.Zle_lt_succ	40	1	search with cache (only 1: apply Z.lt_succ_r).	0.00811290740967	2
Coq.ZArith.Zorder.Zlt_le_succ	40	1	search with cache (only 1: apply Z.le_succ_l).	0.00884699821472	2
Coq.ZArith.Zorder.Zgt_succ_le	40	1.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.lt_succ_r).	0.016526222229	3
Coq.ZArith.Zorder.Zlt_succ_le	40	1	search with cache (only 1: apply Z.lt_succ_r).	0.00885701179504	2
Coq.ZArith.Zorder.Zle_succ_gt	40	1.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.le_succ_l).	0.0166440010071	3
Coq.ZArith.Zorder.Zle_succ_le	40
Coq.ZArith.Zorder.Zgt_succ_pred	40
Coq.ZArith.Zorder.Zlt_succ_pred	40	0	search with cache (only 1: apply Z.lt_succ_lt_pred).	0.00954794883728	1
Coq.ZArith.Zorder.Zlt_0_le_0_pred	40
Coq.ZArith.Zorder.Zgt_0_le_0_pred	40	0.14	search with cache (only 1: Z.swap_greater; only 1: apply Z.lt_le_pred).	0.142865180969	91
Coq.ZArith.Zorder.Zle_neg_pos	40	3.0.1	search with cache (only 1: red; only 1: simpl in *; only 1: easy').	0.0268540382385	16
Coq.ZArith.Zorder.Zgt_pos_0	40	1.12	search with cache (only 1: intros; only 1: easy).	0.0329720973969	76
Coq.ZArith.Zorder.Zle_0_pos	40	0	search with cache (only 1: easy).	0.0147161483765	1
Coq.ZArith.Zorder.Zlt_neg_0	40	0	search with cache (only 1: easy).	0.00807285308838	1
Coq.ZArith.Zorder.Zle_0_nat	40	7.4.4.22	search with cache (only 1: destruct n; only 1: now Z.nzsimpl; only 1: intro H; only 1: easy || now destruct y).	2.0858399868	3013
Coq.ZArith.Zorder.Zgt_succ_gt_or_eq	40	5.21.21.0.5	search with cache (only 1: intros EQ; only 1: Z.swap_greater; only 1: apply Z.lt_eq_cases; only 1: apply Z.lt_succ_r; only 1: Z.order).	12.0956320763	16617
Coq.ZArith.Zorder.Zplus_gt_compat_l	40
Coq.ZArith.Zorder.Zplus_gt_compat_r	40
Coq.ZArith.Zorder.Zplus_le_compat_l	40
Coq.ZArith.Zorder.Zplus_le_compat_r	40
Coq.ZArith.Zorder.Zplus_lt_compat_l	40	1	search with cache (only 1: apply Z.add_lt_mono_l).	0.023097038269	2
Coq.ZArith.Zorder.Zplus_lt_compat_r	40	6	search with cache (only 1: apply Z.add_lt_mono_r).	0.638839006424	29
Coq.ZArith.Zorder.Zplus_le_reg_l	40	11	search with cache (only 1: apply Z.add_le_mono_l).	1.28092217445	110
Coq.ZArith.Zorder.Zplus_le_reg_r	40	6	search with cache (only 1: apply Z.add_le_mono_r).	0.342592954636	26
Coq.ZArith.Zorder.Zplus_lt_reg_l	40	1	search with cache (only 1: apply Z.add_lt_mono_l).	0.0232360363007	2
Coq.ZArith.Zorder.Zplus_lt_reg_r	40	6	search with cache (only 1: apply Z.add_lt_mono_r).	0.636963844299	29
Coq.ZArith.Zorder.Zplus_gt_reg_l	40	1.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.add_lt_mono_l).	0.0340728759766	3
Coq.ZArith.Zorder.Zplus_gt_reg_r	40	6.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.add_lt_mono_r).	0.347095966339	26
Coq.ZArith.Zorder.Zmult_le_compat_r	40
Coq.ZArith.Zorder.Zmult_le_compat_l	40
Coq.ZArith.Zorder.Zmult_lt_compat_r	40
Coq.ZArith.Zorder.Zmult_gt_compat_r	40	17.4	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).	31.2533388138	14333
Coq.ZArith.Zorder.Zmult_gt_0_lt_compat_r	40	17.4	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).	11.4289140701	6713
Coq.ZArith.Zorder.Zmult_gt_0_le_compat_r	40
Coq.ZArith.Zorder.Zmult_lt_0_le_compat_r	40	2	search with cache (only 1: apply Z.mul_le_mono_pos_r).	0.0109038352966	3
Coq.ZArith.Zorder.Zmult_gt_0_lt_compat_l	40
Coq.ZArith.Zorder.Zmult_lt_compat_l	40	6	search with cache (only 1: apply Z.mul_lt_mono_pos_l).	0.0818619728088	11
Coq.ZArith.Zorder.Zmult_gt_compat_l	40	6.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_l).	0.097874879837	11
Coq.ZArith.Zorder.Zmult_ge_compat_r	40	11.2.0	search with cache (only 1: Z.swap_greater; only 1: intros; only 1: now apply Z.mul_le_mono_nonneg_r).	0.888063907623	412
Coq.ZArith.Zorder.Zmult_ge_compat_l	40	8.2.0	search with cache (only 1: Z.swap_greater; only 1: intros; only 1: now apply Z.mul_le_mono_nonneg_l).	0.541638851166	166
Coq.ZArith.Zorder.Zmult_ge_compat	40
Coq.ZArith.Zorder.Zmult_le_compat	40	3.1	search with cache (only 1: intros; only 1: now apply Z.mul_le_mono_nonneg).	0.0368990898132	11
Coq.ZArith.Zorder.Zmult_gt_0_lt_reg_r	40	6.0.2	search with cache (only 1: rewrite 2!(Z.mul_comm _ p); only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_l).	0.826954126358	149
Coq.ZArith.Zorder.Zmult_lt_reg_r	40	18	search with cache (only 1: apply Z.mul_lt_mono_pos_r).	0.722057104111	257
Coq.ZArith.Zorder.Zmult_le_reg_r	40	2.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_le_mono_pos_r).	0.0192711353302	4
Coq.ZArith.Zorder.Zmult_lt_0_le_reg_r	40	2	search with cache (only 1: apply Z.mul_le_mono_pos_r).	0.010703086853	3
Coq.ZArith.Zorder.Zmult_ge_reg_r	40	2.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_le_mono_pos_r).	0.0278770923615	4
Coq.ZArith.Zorder.Zmult_gt_reg_r	40	6.0.2	search with cache (only 1: rewrite 2!(Z.mul_comm _ p); only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_l).	0.783560991287	143
Coq.ZArith.Zorder.Zmult_lt_compat	40
Coq.ZArith.Zorder.Zmult_lt_compat2	40
Coq.ZArith.Zorder.Zmult_gt_0_compat	40	5.3.15.0	search with cache (only 1: Z.swap_greater; only 1: revert n m; only 1: intros a b Ha Hb; only 1: Z.order_pos).	3.77767896652	1451
Coq.ZArith.Zorder.Zmult_gt_0_le_0_compat	40	17.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_le_mono_pos_r).	0.565900087357	361
Coq.ZArith.Zorder.Zmult_le_0_reg_r	40
Coq.ZArith.Zorder.Zmult_lt_0_reg_r	40
Coq.ZArith.Zorder.Zmult_gt_0_lt_0_reg_r	40	30.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_pos_cancel_r).	9.11113595963	5694
Coq.ZArith.Zorder.Zmult_gt_0_reg_l	40
Coq.ZArith.Zorder.Zlt_square_simpl	40
Coq.ZArith.Zorder.Zgt_square_simpl	40	9.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.square_lt_simpl_nonneg).	0.493535041809	83
Coq.ZArith.Zorder.Zeq_plus_swap	40
Coq.ZArith.Zorder.Zlt_0_minus_lt	40
Coq.ZArith.Zorder.Zle_0_minus_le	40
Coq.ZArith.Zorder.Zle_minus_le_0	40	0	search with cache (only 1: apply Z.le_0_sub).	0.00834107398987	1
Coq.Program.Wf.Fix_F_eq	40	0.15	search with cache (only 1: destruct r using Acc_inv_dep; only 1: auto).	0.156437158585	213
Coq.Program.Wf.Fix_F_inv	40	0.2.22.16.1	search with cache (only 1: destruct r using Acc_inv_dep; only 1: intro p; only 1: destruct p; only 1: apply F_ext; only 1: auto).	32.8011069298	48355
Coq.Program.Wf.Fix_eq	40
Coq.Program.Wf.fix_sub_eq	40	0.0.0.0.0.0	search with cache (only 1: intro x; only 1: unfold Fix_sub; only 1: rewrite <- Fix_F_eq; only 1: apply F_ext; only 1: intros; only 1: apply Fix_F_inv).	0.0349159240723	6
Coq.Program.Wf.measure_wf	40
Coq.Program.Wf.F_unfold	40	0.1	search with cache (only 1: destruct r using Acc_inv_dep; only 1: auto).	0.0185480117798	3
Coq.Program.Wf.Fix_F_sub_rect	40	2.8.7.0	search with cache (only 1: intros; only 1: induction (Rwf x); only 1: rewrite <- Fix_F_eq; only 1: auto).	0.691460847855	694
Coq.Program.Wf.eq_Fix_F_sub	40	2.3.0.5	search with cache (only 1: induction (Rwf x); only 1: rewrite F_unfold; only 1: rewrite F_unfold; only 1: auto).	0.644889831543	302
Coq.Program.Wf.Fix_sub_rect	40
Coq.Program.Wf.WfExtensionality.fix_sub_eq_ext	40
Coq.Program.Subset.subset_eq	40
Coq.Program.Subset.match_eq_rewrite	40
Coq.Program.Equality.JMeq_eq_refl	40	3	search with cache (only 1: apply UIP).	0.00681614875793	4
Coq.Program.Equality.UIP_refl_refl	40	6	search with cache (only 1: apply UIP).	0.0331678390503	24
Coq.Program.Equality.inj_pairT2_refl	40	20	search with cache (only 1: apply UIP).	0.243158817291	343
Coq.Program.Equality.solution_left	40	2.1.31	search with cache (only 1: intros; only 1: destruct H; only 1: trivial).	0.146150112152	769
Coq.Program.Equality.solution_right	40	3.0.0	search with cache (only 1: intros; only 1: subst; only 1: trivial).	0.00949907302856	6
Coq.Program.Equality.deletion	40	2.1	search with cache (only 1: intros; only 1: assumption).	0.00672912597656	5
Coq.Program.Equality.simplification_heq	40	1.7.28.9	search with cache (only 1: intros h1 h2; only 1: subst; only 1: apply h1; only 1: trivial).	0.63693189621	2976
Coq.Program.Equality.simplification_existT2	40	0.0.41.7.24	search with cache (only 1: intro H; only 1: intros; only 1: apply H; only 1: apply eq_dep_eq; only 1: auto using eq_sigT_eq_dep, eq_dep_eq_sigT).	4.04980301857	20305
Coq.Program.Equality.simplification_existT1	40	0.4.6.38.13.37	search with cache (only 1: intro Streicher_K; only 1: intros; only 1: apply Streicher_K; only 1: dependent rewrite H; only 1: auto using eq_sigT_eq_dep, eq_dep_eq_sigT; only 1: assumption).	11.211714983	66034
Coq.Program.Equality.simplification_K	40	21.5.6	search with cache (only 1: intros; only 1: rewrite UIP_refl; only 1: assumption).	8.08949685097	9117
Coq.Program.Combinators.compose_id_left	40	7	search with cache (only 1: trivial).	0.0130841732025	17
Coq.Program.Combinators.compose_id_right	40	0.0	search with cache (only 1: intros; only 1: reflexivity).	0.0079710483551	2
Coq.Program.Combinators.compose_assoc	40	0.0	search with cache (only 1: intros; only 1: reflexivity).	0.00810813903809	2
Coq.Program.Combinators.flip_flip	40	0.0	search with cache (only 1: intros; only 1: reflexivity).	0.00764894485474	2
Coq.Program.Combinators.prod_uncurry_curry	40	0.0	search with cache (only 1: intros; only 1: reflexivity).	0.00834584236145	2
Coq.Program.Combinators.prod_curry_uncurry	40
Coq.Sorting.Permutation.Permutation_nil	40
Coq.Sorting.Permutation.Permutation_nil_cons	40
Coq.Sorting.Permutation.Permutation_refl	40	0.3.13	search with cache (only 1: induction l as [| a l' Hrec]; only 1: discriminate || auto; only 1: discriminate || auto).	0.396754026413	408
Coq.Sorting.Permutation.Permutation_sym	40
Coq.Sorting.Permutation.Permutation_trans	40	2.0	search with cache (only 1: intros l l' Hperm; only 1: apply perm_trans with (l' := l')).	0.0175650119781	4
Coq.Sorting.Permutation.Permutation_cons	40	0.5.5	search with cache (only 1: intros x x' Hxx' y y' Hyy'; only 1: subst; only 1: auto).	0.462574958801	116
Coq.Sorting.Permutation.Permutation_in	40
Coq.Sorting.Permutation.Permutation_in'	40
Coq.Sorting.Permutation.Permutation_app_tail	40
Coq.Sorting.Permutation.Permutation_app_head	40	0.0.2.2.8	search with cache (only 1: induction l; only 1: trivial; only 1: intro y; only 1: simpl; only 1: auto).	4.31643390656	957
Coq.Sorting.Permutation.Permutation_app	40
Coq.Sorting.Permutation.Permutation_app'	40
Coq.Sorting.Permutation.Permutation_add_inside	40
Coq.Sorting.Permutation.Permutation_cons_append	40
Coq.Sorting.Permutation.Permutation_app_comm	40
Coq.Sorting.Permutation.Permutation_cons_app	40	0.12.22.0	search with cache (only 1: intros; only 1: rewrite H; only 1: rewrite app_comm_cons, Permutation_cons_append; only 1: now rewrite <- app_assoc).	9.96167993546	11507
Coq.Sorting.Permutation.Permutation_Add	40
Coq.Sorting.Permutation.Permutation_middle	40	2.1	search with cache (only 1: intro l'; only 1: auto).	0.020054101944	5
Coq.Sorting.Permutation.Permutation_rev	40	2.1.0.2.0.8	search with cache (only 1: induction l; only 1: simpl; only 1: constructor; only 1: simpl; only 1: rewrite <- IHl; only 1: auto).	0.787142038345	499
Coq.Sorting.Permutation.Permutation_rev'	40
Coq.Sorting.Permutation.Permutation_length	40
Coq.Sorting.Permutation.Permutation_length'	40	0.0.0.0.0.2.2.1	search with cache (only 1: intros l l' Hperm; only 1: induction Hperm; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto with arith; only 1: now transitivity (length l')).	0.34313416481	155
Coq.Sorting.Permutation.Permutation_ind_bis	40
Coq.Sorting.Permutation.Permutation_nil_app_cons	40	1.3.8.5.2.0.0.0.0.4.0	search with cache (only 1: induction l; only 1: simpl; only 1: intros l x HF; only 1: apply Permutation_nil in HF; only 1: discriminate; only 1: intros; only 1: simpl; only 1: rewrite app_comm_cons, Permutation_cons_append; only 1: rewrite <- app_assoc; only 1: simpl; only 1: auto).	23.4024400711	17217
Coq.Sorting.Permutation.Permutation_Add_inv	40
Coq.Sorting.Permutation.Permutation_app_inv	40
Coq.Sorting.Permutation.Permutation_cons_inv	40
Coq.Sorting.Permutation.Permutation_cons_app_inv	40	0.3.0.4.3	search with cache (only 1: intros; only 1: eapply Permutation_Add_inv; only 1: eauto using Add_app; only 1: eauto using Add_head; only 1: eauto using Add_app).	12.9209849834	140
Coq.Sorting.Permutation.Permutation_app_inv_l	40
Coq.Sorting.Permutation.Permutation_app_inv_r	40
Coq.Sorting.Permutation.Permutation_length_1_inv	40
Coq.Sorting.Permutation.Permutation_length_1	40
Coq.Sorting.Permutation.Permutation_length_2_inv	40
Coq.Sorting.Permutation.Permutation_length_2	40
Coq.Sorting.Permutation.NoDup_Permutation	40
Coq.Sorting.Permutation.NoDup_Permutation_bis	40
Coq.Sorting.Permutation.Permutation_NoDup	40
Coq.Sorting.Permutation.Permutation_NoDup'	40
Coq.Sorting.Permutation.Permutation_map	40
Coq.Sorting.Permutation.Permutation_map'	40	0.0.0.0.0.0.0.0.1	search with cache (only 1: repeat red; only 1: induction 1; only 1: simpl; only 1: eauto; only 1: simpl; only 1: eauto; only 1: simpl; only 1: eauto; only 1: eauto).	0.108126878738	10
Coq.Sorting.Permutation.nat_bijection_Permutation	40
Coq.Sorting.Permutation.adapt_injective	40
Coq.Sorting.Permutation.adapt_ok	40
Coq.Sorting.Permutation.Permutation_nth_error	40
Coq.Sorting.Permutation.Permutation_nth_error_bis	40
Coq.Sorting.Permutation.Permutation_nth	40
Coq.Sorting.PermutSetoid.list_contents_app	40
Coq.Sorting.PermutSetoid.permut_refl	40	1.7.2	search with cache (only 1: intros; only 1: red; only 1: auto with datatypes).	0.154438018799	133
Coq.Sorting.PermutSetoid.permut_sym	40	1.0	search with cache (only 1: unfold permutation; only 1: auto with datatypes).	0.0241820812225	3
Coq.Sorting.PermutSetoid.permut_trans	40	0.10.1.0.5	search with cache (only 1: intros; only 1: unfold permutation, meq; only 1: intros; only 1: rewrite H; only 1: trivial).	10.7471780777	8424
Coq.Sorting.PermutSetoid.permut_cons_eq	40
Coq.Sorting.PermutSetoid.permut_cons	40	0.0.0	search with cache (only 1: unfold permutation; only 1: simpl; only 1: auto with datatypes).	0.0350661277771	3
Coq.Sorting.PermutSetoid.permut_app	40
Coq.Sorting.PermutSetoid.permut_add_inside_eq	40
Coq.Sorting.PermutSetoid.permut_add_inside	40
Coq.Sorting.PermutSetoid.permut_add_cons_inside_eq	40
Coq.Sorting.PermutSetoid.permut_add_cons_inside	40
Coq.Sorting.PermutSetoid.permut_middle	40
Coq.Sorting.PermutSetoid.permut_sym_app	40	2.0.4.0.1	search with cache (only 1: unfold permutation, meq in *; only 1: intros; only 1: repeat rewrite list_contents_app in *; only 1: simpl in *; only 1: auto with arith).	0.577504873276	130
Coq.Sorting.PermutSetoid.permut_rev	40
Coq.Sorting.PermutSetoid.permut_conv_inv	40
Coq.Sorting.PermutSetoid.permut_app_inv1	40
Coq.Sorting.PermutSetoid.if_eqA_then	40	30.1.33.5	search with cache (only 1: intros; only 1: destruct (eqA_dec a a') as [HeqA| ]; only 1: auto with arith; only 1: congruence).	29.1209640503	56973
Coq.Sorting.PermutSetoid.permut_app_inv2	40	0.1.0.0.0.0.1.0.0.1	search with cache (only 1: intros l l1 l2; only 1: unfold permutation, meq; only 1: intros H a; only 1: generalize (H a); only 1: clear H; only 1: do 2 rewrite list_contents_app; only 1: simpl; only 1: intros; only 1: apply plus_reg_l with (multiplicity (list_contents l) a); only 1: trivial).	3.1536989212	785
Coq.Sorting.PermutSetoid.permut_remove_hd_eq	40
Coq.Sorting.PermutSetoid.permut_remove_hd	40
Coq.Sorting.PermutSetoid.if_eqA_else	40
Coq.Sorting.PermutSetoid.if_eqA_refl	40	8.0.2.0.0	search with cache (only 1: intros; only 1: destruct eqA_dec as [_| NEQ]; only 1: auto; only 1: contradict NEQ; only 1: reflexivity).	0.5777759552	362
Coq.Sorting.PermutSetoid.if_eqA	40
Coq.Sorting.PermutSetoid.if_eqA_rewrite_l	40
Coq.Sorting.PermutSetoid.if_eqA_rewrite_r	40
Coq.Sorting.PermutSetoid.multiplicity_eqA	40
Coq.Sorting.PermutSetoid.multiplicity_InA	40
Coq.Sorting.PermutSetoid.multiplicity_InA_O	40
Coq.Sorting.PermutSetoid.multiplicity_InA_S	40	0.1.0.0.0.0	search with cache (only 1: intros l a; only 1: rewrite multiplicity_InA; only 1: destruct (multiplicity (list_contents l) a); only 1: intros a'; only 1: auto with arith; only 1: auto with arith).	0.0506601333618	7
Coq.Sorting.PermutSetoid.multiplicity_NoDupA	40
Coq.Sorting.PermutSetoid.permut_InA_InA	40
Coq.Sorting.PermutSetoid.permut_cons_InA	40
Coq.Sorting.PermutSetoid.permut_nil	40
Coq.Sorting.PermutSetoid.permut_length_1	40
Coq.Sorting.PermutSetoid.permut_length_2	40
Coq.Sorting.PermutSetoid.permut_length	40
Coq.Sorting.PermutSetoid.NoDupA_equivlistA_permut	40
Coq.Sorting.PermutSetoid.permut_map	40
Coq.Sorting.PermutSetoid.Permutation_impl_permutation	40
Coq.Sorting.PermutSetoid.permut_eqA	40	0.0.0.2.0.2	search with cache (only 1: induction 1; only 1: apply permut_refl; only 1: apply permut_cons_eq; only 1: auto using Equivalence_Reflexive, permut_refl; only 1: auto using Equivalence_Reflexive, permut_refl; only 1: auto using Equivalence_Reflexive, permut_refl).	0.0501320362091	10
Coq.Sorting.PermutSetoid.permutation_Permutation	40
Coq.Init.Wf.Acc_inv	40	2.16	search with cache (only 1: destruct 1; only 1: trivial).	0.12726020813	324
Coq.Init.Wf.well_founded_induction_type	40
Coq.Init.Wf.well_founded_induction	40	0.0.0.1	search with cache (only 1: intros; only 1: apply Acc_rect; only 1: auto; only 1: auto).	0.00979995727539	5
Coq.Init.Wf.well_founded_ind	40	0.0.0.1	search with cache (only 1: intros; only 1: apply Acc_rect; only 1: auto; only 1: auto).	0.0104548931122	5
Coq.Init.Wf.Fix_F_eq	40	0.107	search with cache (only 1: intros f [x]; only 1: auto).	5.61030602455	48324
Coq.Init.Wf.Fix_F_inv	40
Coq.Init.Wf.Fix_eq	40
Coq.Init.Wf.well_founded_induction_type_2	40
Coq.Init.Tactics.decide_left	40	0.1.0.1.2.13.8.5.3	search with cache (only 1: unfold not; only 1: intro A; only 1: intro H1; only 1: elim H1; only 1: intro z; only 1: auto; only 1: intro H; only 1: intro z; only 1: destruct (H z)).	8.23669791222	46489
Coq.Init.Tactics.decide_right	40	1.0.1.0	search with cache (only 1: intros; only 1: destruct decide; only 1: contradiction; only 1: apply H0).	0.0139310359955	6
Coq.Init.Peano.pred_Sn	40	2	search with cache (only 1: trivial).	0.00566601753235	3
Coq.Init.Peano.not_eq_S	40	2.25	search with cache (only 1: intros x' x'' Hx' Hx''; only 1: auto).	1.45984196663	4454
Coq.Init.Peano.O_S	40	8	search with cache (only 1: discriminate).	0.0191221237183	31
Coq.Init.Peano.n_Sn	40
Coq.Init.Peano.plus_n_O	40	0.4.1.2	search with cache (only 1: induction n; only 1: auto; only 1: simpl; only 1: auto).	0.0413639545441	44
Coq.Init.Peano.plus_O_n	40	0.0.1.0.0	search with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.016028881073	6
Coq.Init.Peano.plus_n_Sm	40	1.1.0.2	search with cache (only 1: induction n; only 1: auto; only 1: simpl; only 1: auto).	0.0157678127289	8
Coq.Init.Peano.plus_Sn_m	40	0.0.1.0.0.0.0	search with cache (only 1: intros n m; only 1: simpl; only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0203821659088	8
Coq.Init.Peano.mult_n_O	40	0.1.3	search with cache (only 1: induction n; only 1: auto; only 1: auto).	0.0108299255371	7
Coq.Init.Peano.mult_n_Sm	40
Coq.Init.Peano.le_pred	40
Coq.Init.Peano.le_S_n	40
Coq.Init.Peano.le_0_n	40	2.0.4	search with cache (only 1: induction n; only 1: auto; only 1: auto).	0.0117788314819	9
Coq.Init.Peano.le_n_S	40	3.0.6	search with cache (only 1: induction 1; only 1: constructor; only 1: auto).	0.199880123138	266
Coq.Init.Peano.nat_case	40	1.7.1	search with cache (only 1: induction n; only 1: auto; only 1: auto).	0.0640788078308	96
Coq.Init.Peano.nat_double_ind	40	0.0.13.1.0	search with cache (only 1: induction n; only 1: auto; only 1: destruct m; only 1: auto; only 1: auto).	0.55223608017	968
Coq.Init.Peano.max_l	40
Coq.Init.Peano.max_r	40	0.1.2.0.6.0.0.0.1.0.0	search with cache (only 1: revert m; only 1: induction n; only 1: simpl; only 1: trivial; only 1: destruct m; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	25.369590044	31324
Coq.Init.Peano.min_l	40	0.1.3.2.2.3.0.0.0	search with cache (only 1: revert m; only 1: induction n; only 1: trivial; only 1: destruct m; only 1: inversion 1; only 1: intros; only 1: simpl; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	9.52362203598	10545
Coq.Init.Peano.min_r	40	0.1.2.0.0.0.0.1.1.1.0.0	search with cache (only 1: revert m; only 1: induction n; only 1: simpl; only 1: inversion 1; only 1: trivial; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	7.42136406898	7456
Coq.Init.Peano.nat_rect_succ_r	40	1.0.3.1.13	search with cache (only 1: induction n as [| p H]; only 1: reflexivity; only 1: simpl; only 1: destruct H; only 1: auto).	0.450268983841	581
Coq.Init.Peano.nat_rect_plus	40	0.1.4.2.1.0	search with cache (only 1: induction n; only 1: reflexivity; only 1: intros; only 1: simpl; only 1: rewrite <- ?IHn; only 1: trivial).	1.86477398872	1363
Coq.Init.Datatypes.andb_prop	40
Coq.Init.Datatypes.andb_true_intro	40	1.1.3.25.85	search with cache (only 1: intro H; only 1: destruct 1; only 1: destruct H; only 1: assumption; only 1: assumption).	20.4975199699	235055
Coq.Init.Datatypes.eq_true_ind_r	40	6.63.19	search with cache (only 1: intros A P H; only 1: destruct 1; only 1: assumption).	1.46268820763	18153
Coq.Init.Datatypes.eq_true_rec_r	40	1.0.0	search with cache (only 1: intros P b H H0; only 1: destruct H0 in H; only 1: assumption).	0.00983500480652	4
Coq.Init.Datatypes.eq_true_rect_r	40	1.0.0	search with cache (only 1: intros P b H H0; only 1: destruct H0 in H; only 1: assumption).	0.0103409290314	4
Coq.Init.Datatypes.surjective_pairing	40	0.1.6	search with cache (only 1: intros; only 1: destruct p; only 1: reflexivity).	0.0110609531403	10
Coq.Init.Datatypes.injective_projections	40
Coq.Init.Datatypes.pair_equal_spec	40
Coq.Init.Datatypes.rew_pair	40	1.4	search with cache (only 1: destruct H; only 1: trivial).	0.0126099586487	7
Coq.Init.Datatypes.comparison_eq_stable	40
Coq.Init.Datatypes.CompOpp_involutive	40	2.2.2.3.1	search with cache (only 1: intro H; only 1: reflexivity || destruct H; only 1: reflexivity || destruct H; only 1: reflexivity || destruct H; only 1: reflexivity || destruct H).	0.117825031281	215
Coq.Init.Datatypes.CompOpp_inj	40	0.2.2.2.0.2.2.2.0.2	search with cache (only 1: destruct c, c'; only 1: reflexivity; only 1: discriminate; only 1: discriminate; only 1: discriminate; only 1: reflexivity; only 1: discriminate; only 1: discriminate; only 1: discriminate; only 1: reflexivity).	3.45346093178	9379
Coq.Init.Datatypes.CompOpp_iff	40
Coq.Init.Datatypes.CompareSpec2Type	40
Coq.Init.Datatypes.CompSpec2Type	40
Coq.Init.Logic.proj1	40
Coq.Init.Logic.proj2	40	0.0	search with cache (only 1: destruct 1; only 1: trivial).	0.00205898284912	2
Coq.Init.Logic.iff_refl	40
Coq.Init.Logic.iff_trans	40	2.2.0.2.2	search with cache (only 1: destruct 1; only 1: destruct 1; only 1: split; only 1: auto; only 1: auto).	0.0203499794006	95
Coq.Init.Logic.iff_sym	40	0.0.0.3	search with cache (only 1: destruct 1; only 1: split; only 1: trivial; only 1: trivial).	0.00399589538574	12
Coq.Init.Logic.and_iff_compat_l	40	0.0.2.0.0.0.2.0.1.3	search with cache (only 1: destruct 1; only 1: split; only 1: destruct 1; only 1: split; only 1: auto; only 1: auto; only 1: destruct 1; only 1: split; only 1: auto; only 1: auto).	0.0821220874786	625
Coq.Init.Logic.and_iff_compat_r	40	2.2.1.0.2.2.1.0.0.0	search with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: intros [? ?]; only 1: split; only 1: auto; only 1: auto; only 1: intros [? ?]; only 1: split; only 1: auto; only 1: auto).	0.401326179504	2959
Coq.Init.Logic.or_iff_compat_l	40
Coq.Init.Logic.or_iff_compat_r	40	4.1.4.0.1.4.1.4.0.1.0.0	search with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: intros [?| ?]; only 1: left; only 1: auto; only 1: right; only 1: auto; only 1: intros [?| ?]; only 1: left; only 1: auto; only 1: right; only 1: auto).	1.2529399395	13174
Coq.Init.Logic.imp_iff_compat_l	40	4.4.0.3	search with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: auto; only 1: auto).	0.0467619895935	233
Coq.Init.Logic.imp_iff_compat_r	40	5.5.0.3	search with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: auto; only 1: auto).	0.0714020729065	357
Coq.Init.Logic.not_iff_compat	40	8.8.0.0	search with cache (only 1: intros A B [H1 H2]; only 1: split; only 1: auto; only 1: auto).	0.133522033691	721
Coq.Init.Logic.neg_false	40	2.11.9.2.2.2.0	search with cache (only 1: intros; only 1: split; only 1: split; only 1: trivial; only 1: destruct 1; only 1: intros [? ?]; only 1: trivial).	1.39255595207	11890
Coq.Init.Logic.and_cancel_l	40
Coq.Init.Logic.and_cancel_r	40
Coq.Init.Logic.and_comm	40	0.1.7.3.0.1.7.3.3	search with cache (only 1: split; only 1: intros [HypL HypR]; only 1: split; only 1: trivial; only 1: apply HypL; only 1: intros [HypL HypR]; only 1: split; only 1: trivial; only 1: apply HypL).	2.03221583366	10042
Coq.Init.Logic.and_assoc	40	5.5.0.6.6.3.5.0.6.0.6.3.1.0	search with cache (only 1: intros; only 1: split; only 1: intros [HypL HypR]; only 1: split; only 1: apply HypL; only 1: split; only 1: apply HypL; only 1: apply HypR; only 1: intros [HypL HypR]; only 1: split; only 1: split; only 1: apply HypL; only 1: apply HypR; only 1: apply HypR).	19.0587878227	127730
Coq.Init.Logic.or_cancel_l	40
Coq.Init.Logic.or_cancel_r	40
Coq.Init.Logic.or_comm	40	0.2.1.5.10.1.2.0.5.10.5	search with cache (only 1: split; only 1: intros [?| ?]; only 1: right; only 1: exact H; only 1: left; only 1: trivial; only 1: intros [?| ?]; only 1: right; only 1: trivial; only 1: left; only 1: exact H).	5.97869920731	42981
Coq.Init.Logic.or_assoc	40
Coq.Init.Logic.iff_and	40	2.2	search with cache (only 1: intros; only 1: assumption).	0.00979399681091	12
Coq.Init.Logic.iff_to_and	40	1.1.4.3.5	search with cache (only 1: intros; only 1: apply and_iff_compat_r; only 1: split; only 1: trivial; only 1: trivial).	0.690632104874	1676
Coq.Init.Logic.inst	40	12	search with cache (only 1: trivial).	0.0197451114655	89
Coq.Init.Logic.gen	40	1.0	search with cache (only 1: unfold all; only 1: auto).	0.0069260597229	3
Coq.Init.Logic.absurd	40	3.16.2.14	search with cache (only 1: unfold not; only 1: intro H; only 1: intros A B []; only 1: trivial).	1.02294802666	8818
Coq.Init.Logic.eq_sym	40	1.17	search with cache (only 1: destruct 1; only 1: trivial).	0.0679881572723	265
Coq.Init.Logic.eq_trans	40	0.0	search with cache (only 1: destruct 1; only 1: trivial).	0.00870490074158	2
Coq.Init.Logic.eq_trans_r	40	1.0	search with cache (only 1: destruct 2; only 1: trivial).	0.00883412361145	3
Coq.Init.Logic.f_equal	40	0.1	search with cache (only 1: destruct 1; only 1: trivial).	0.00952100753784	3
Coq.Init.Logic.not_eq_sym	40	0.7.1.5.16	search with cache (only 1: unfold not; only 1: intro H1; only 1: destruct 1; only 1: elim H1; only 1: trivial).	0.592892885208	3092
Coq.Init.Logic.eq_sind_r	40	2.6	search with cache (only 1: destruct 2; only 1: auto).	0.0104899406433	16
Coq.Init.Logic.eq_ind_r	40	1.0.0	search with cache (only 1: intros A x P H y H0; only 1: elim eq_sym with (1 := H0); only 1: assumption).	0.0102050304413	4
Coq.Init.Logic.eq_rec_r	40	1.0.0	search with cache (only 1: intros A x P H y H0; only 1: elim eq_sym with (1 := H0); only 1: assumption).	0.0105130672455	4
Coq.Init.Logic.eq_rect_r	40	1.0.0	search with cache (only 1: intros A x P H y H0; only 1: elim eq_sym with (1 := H0); only 1: assumption).	0.0107080936432	4
Coq.Init.Logic.f_equal_dep	40
Coq.Init.Logic.f_equal_dep2	40	0.3.0	search with cache (only 1: destruct H; only 1: destruct 1; only 1: reflexivity).	0.0139009952545	6
Coq.Init.Logic.rew_opp_r	40	0.1	search with cache (only 1: destruct H; only 1: reflexivity).	0.010794878006	3
Coq.Init.Logic.rew_opp_l	40	0.0.0	search with cache (only 1: intros; only 1: destruct H; only 1: reflexivity).	0.0109047889709	3
Coq.Init.Logic.f_equal2	40	1.11.1.0	search with cache (only 1: intros; only 1: destruct H; only 1: elim eq_sym with (1 := H0); only 1: trivial).	0.29453420639	482
Coq.Init.Logic.f_equal3	40	0.1.0.1	search with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	0.0211229324341	21
Coq.Init.Logic.f_equal4	40	0.1.0.0.1	search with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	0.0247900485992	22
Coq.Init.Logic.f_equal5	40	0.1.0.0.0.1	search with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	0.0291378498077	23
Coq.Init.Logic.f_equal_compose	40	0.4.7.3	search with cache (only 1: intros A x P H y H0; only 1: intros h1 h2; only 1: destruct h2; only 1: reflexivity).	0.136780977249	345
Coq.Init.Logic.eq_trans_refl_l	40	0.1	search with cache (only 1: destruct e; only 1: reflexivity).	0.0106489658356	3
Coq.Init.Logic.eq_trans_refl_r	40	0.0	search with cache (only 1: destruct e; only 1: reflexivity).	0.0103650093079	2
Coq.Init.Logic.eq_sym_involutive	40	0.0	search with cache (only 1: destruct e; only 1: reflexivity).	0.0102541446686	2
Coq.Init.Logic.eq_trans_sym_inv_l	40	0.0	search with cache (only 1: destruct e; only 1: reflexivity).	0.0110211372375	2
Coq.Init.Logic.eq_trans_sym_inv_r	40	0.0	search with cache (only 1: destruct e; only 1: reflexivity).	0.0101010799408	2
Coq.Init.Logic.eq_trans_assoc	40	0.5.8.0	search with cache (only 1: destruct e; only 1: intros h1 h2; only 1: destruct h2; only 1: reflexivity).	0.238462924957	349
Coq.Init.Logic.rew_map	40	0.0.1	search with cache (only 1: intros; only 1: destruct H; only 1: reflexivity).	0.0138728618622	4
Coq.Init.Logic.eq_trans_map	40	3.23.2.22.7	search with cache (only 1: intros A x P H y H0; only 1: intros ? ? ? Fl Fr; only 1: destruct 1; only 1: destruct Fl; only 1: assumption).	10.1050949097	55010
Coq.Init.Logic.map_subst	40	0.0	search with cache (only 1: destruct H; only 1: reflexivity).	0.0109970569611	2
Coq.Init.Logic.map_subst_map	40	0.0	search with cache (only 1: destruct H; only 1: reflexivity).	0.0135610103607	2
Coq.Init.Logic.rew_swap	40	0.2.3.1	search with cache (only 1: destruct H; only 1: intros; only 1: destruct H; only 1: reflexivity).	0.0229530334473	25
Coq.Init.Logic.rew_compose	40	2.0.0	search with cache (only 1: intros; only 1: destruct H2; only 1: trivial).	0.0151920318604	5
Coq.Init.Logic.eq_id_comm_l	40
Coq.Init.Logic.eq_id_comm_r	40
Coq.Init.Logic.eq_refl_map_distr	40	0.0	search with cache (only 1: intros; only 1: reflexivity).	0.0119180679321	2
Coq.Init.Logic.eq_trans_map_distr	40	0.1.1.18.7.0	search with cache (only 1: intros; only 1: unfold f_equal; only 1: destruct e; only 1: rewrite eq_trans_refl_l; only 1: rewrite eq_trans_refl_l; only 1: reflexivity).	0.930536031723	3277
Coq.Init.Logic.eq_sym_map_distr	40	0.5	search with cache (only 1: destruct e; only 1: reflexivity).	0.016988992691	14
Coq.Init.Logic.eq_trans_sym_distr	40	0.3.8	search with cache (only 1: destruct e'; only 1: rewrite eq_trans_refl_l; only 1: reflexivity).	0.174734115601	168
Coq.Init.Logic.eq_trans_rew_distr	40	0.6	search with cache (only 1: destruct e'; only 1: reflexivity).	0.017599105835	16
Coq.Init.Logic.rew_const	40	0.23	search with cache (only 1: destruct e; only 1: reflexivity).	0.211765050888	522
Coq.Init.Logic.unique_existence	40
Coq.Init.Logic.forall_exists_unique_domain_coincide	40
Coq.Init.Logic.forall_exists_coincide_unique_domain	40
Coq.Init.Logic.exists_inhabited	40	13.11.1	search with cache (only 1: intros A P H; only 1: destruct H; only 1: auto).	0.469927787781	1723
Coq.Init.Logic.inhabited_covariant	40	0.2.10	search with cache (only 1: intros; only 1: destruct H; only 1: auto).	0.0478098392487	102
Coq.Init.Logic.eq_stepl	40	0.7.3.6	search with cache (only 1: intros; only 1: destruct H; only 1: elim eq_sym with (1 := H0); only 1: trivial).	0.113537073135	290
Coq.Init.Logic.iff_stepl	40	22.22.4.2	search with cache (only 1: intros A B C [H1 H2] [H3 H4]; only 1: split; only 1: auto; only 1: auto).	9.63946700096	57294
Coq.Init.Logic.eq_ex_uncurried	40
Coq.Init.Logic.rew_ex	40
Coq.Init.Logic.eq_ex2_uncurried	40	0.0.0.5.0	search with cache (only 1: destruct pq as [p q]; only 1: destruct H; only 1: destruct q; only 1: destruct p; only 1: reflexivity).	0.050910949707	37
Coq.Init.Logic.rew_ex2	40	0.0	search with cache (only 1: destruct H, u; only 1: reflexivity).	0.0180721282959	2
Coq.Init.Logic_Type.identity_sym	40	1.6	search with cache (only 1: destruct 1; only 1: trivial).	0.00749516487122	9
Coq.Init.Logic_Type.identity_trans	40	0.0	search with cache (only 1: destruct 1; only 1: trivial).	0.00634908676147	2
Coq.Init.Logic_Type.identity_congr	40	1.1	search with cache (only 1: destruct 1; only 1: trivial).	0.0079607963562	4
Coq.Init.Logic_Type.not_identity_sym	40	0.13.2	search with cache (only 1: destruct 2; only 1: destruct H; only 1: trivial).	0.18174290657	546
Coq.Init.Logic_Type.identity_ind_r	40	3.6	search with cache (only 1: destruct 2; only 1: assumption).	0.0240030288696	42
Coq.Init.Logic_Type.identity_rec_r	40	0.0.0	search with cache (only 1: intros A x P H y H0; only 1: case identity_sym with (1 := H0); only 1: trivial).	0.00908517837524	3
Coq.Init.Logic_Type.identity_rect_r	40	0.0.0	search with cache (only 1: intros A x P H y H0; only 1: case identity_sym with (1 := H0); only 1: trivial).	0.009446144104	3
Coq.Init.Specif.sigT_eta	40	4.1	search with cache (only 1: destruct p; only 1: reflexivity).	0.0103809833527	7
Coq.Init.Specif.sig_eta	40	0.0	search with cache (only 1: destruct p; only 1: reflexivity).	0.0101428031921	2
Coq.Init.Specif.sigT2_eta	40	0.0	search with cache (only 1: destruct p; only 1: reflexivity).	0.0106790065765	2
Coq.Init.Specif.sig2_eta	40	0.0	search with cache (only 1: destruct p; only 1: reflexivity).	0.0117871761322	2
Coq.Init.Specif.exists_to_inhabited_sig	40	1.13.16.15	search with cache (only 1: destruct 1; only 1: split; only 1: exists x; only 1: trivial).	0.605624914169	3680
Coq.Init.Specif.inhabited_sig_to_exists	40	4.7.0.81.75	search with cache (only 1: intro H1; only 1: elim H1; only 1: intros [x y]; only 1: exists x; only 1: auto).	4.22315716743	75747
Coq.Init.Specif.eq_existT_uncurried	40	0.1.1.0	search with cache (only 1: destruct pq as [p q]; only 1: destruct q; only 1: destruct p; only 1: reflexivity).	0.0173771381378	6
Coq.Init.Specif.eq_sigT_uncurried	40
Coq.Init.Specif.eq_existT_curried	40	0.0.0	search with cache (only 1: destruct q; only 1: destruct p; only 1: reflexivity).	0.0153260231018	3
Coq.Init.Specif.eq_existT_curried_map	40	0.0	search with cache (only 1: destruct p, q; only 1: reflexivity).	0.0221929550171	2
Coq.Init.Specif.eq_existT_curried_trans	40
Coq.Init.Specif.eq_existT_curried_congr	40	0.8.14.18	search with cache (only 1: intros; only 1: destruct H; only 1: destruct r, q, p; only 1: reflexivity).	7.07462000847	13865
Coq.Init.Specif.eq_sigT_uncurried_iff	40
Coq.Init.Specif.eq_sigT_rect	40
Coq.Init.Specif.rew_sigT	40	0.0	search with cache (only 1: destruct H, u; only 1: reflexivity).	0.0168900489807	2
Coq.Init.Specif.eq_exist_uncurried	40	0.0.0	search with cache (only 1: destruct pq as [p q]; only 1: destruct p, q; only 1: reflexivity).	0.0208110809326	3
Coq.Init.Specif.eq_sig_uncurried	40	0.0.0.3.0.5	search with cache (only 1: destruct u as [u1 u2], v as [v1 v2]; only 1: destruct pq as [p q]; only 1: simpl in *; only 1: destruct q; only 1: destruct p; only 1: reflexivity).	0.297845125198	143
Coq.Init.Specif.eq_sig_rect	40
Coq.Init.Specif.eq_sig_uncurried_iff	40	0.0.0.5.10.5.2.4	search with cache (only 1: split; only 1: intro p; only 1: subst; only 1: exists eq_refl; only 1: reflexivity; only 1: destruct u as [u1 u2], v as [v1 v2]; only 1: simpl in *; only 1: apply eq_exist_uncurried).	2.46214079857	6482
Coq.Init.Specif.rew_sig	40	0.0	search with cache (only 1: destruct H, u; only 1: reflexivity).	0.0205581188202	2
Coq.Init.Specif.eq_existT2_uncurried	40
Coq.Init.Specif.eq_sigT2_uncurried	40	2.0.0.4.6.11	search with cache (only 1: destruct pqr as [p q r]; only 1: destruct u as [u1 u2], v as [v1 v2]; only 1: simpl in *; only 1: destruct r, q, p; only 1: simpl; only 1: reflexivity).	1.28066897392	1623
Coq.Init.Specif.eq_sigT2_uncurried_iff	40	0.0.0.3.2.7.6.2.2	search with cache (only 1: split; only 1: intro p; only 1: subst; only 1: exists eq_refl; only 1: reflexivity; only 1: reflexivity; only 1: destruct u as [u1 u2 u3], v as [v1 v2 v3]; only 1: simpl in *; only 1: apply eq_existT2_uncurried).	8.94805502892	15696
Coq.Init.Specif.eq_sigT2_rect	40
Coq.Init.Specif.rew_sigT2	40	0.0	search with cache (only 1: destruct H, u; only 1: reflexivity).	0.0220839977264	2
Coq.Init.Specif.eq_exist2_uncurried	40	1.0.0.0	search with cache (only 1: destruct pqr as [p q r]; only 1: destruct r, q, p; only 1: simpl in *; only 1: reflexivity).	0.0546410083771	5
Coq.Init.Specif.eq_sig2_uncurried	40	2.0.0.4.0.13	search with cache (only 1: destruct u as [u1 u2 u3], v as [v1 v2 v3]; only 1: destruct pqr as [p q r]; only 1: simpl in *; only 1: destruct r, q, p; only 1: simpl; only 1: reflexivity).	1.44492793083	1335
Coq.Init.Specif.eq_sig2_uncurried_iff	40	0.0.0.2.1.9.4.1.2.2	search with cache (only 1: split; only 1: intro p; only 1: simpl in *; only 1: subst; only 1: exists eq_refl; only 1: reflexivity; only 1: reflexivity; only 1: destruct u as [u1 u2 u3], v as [v1 v2 v3]; only 1: simpl in *; only 1: apply eq_exist2_uncurried).	9.96375393867	15636
Coq.Init.Specif.eq_sig2_rect	40
Coq.Init.Specif.rew_sig2	40	0.0	search with cache (only 1: destruct H, u; only 1: reflexivity).	0.0241010189056	2
Coq.Init.Specif.Choice	40
Coq.Init.Specif.Choice2	40
Coq.Init.Specif.bool_choice	40
Coq.Init.Specif.dependent_choice	40
Coq.Init.Specif.absurd_set	40	0.1.1	search with cache (only 1: unfold not; only 1: intros A C h1 h2; only 1: destruct (h2 h1)).	0.0246591567993	26
Coq.QArith.Qcanon.Qred_identity	40
Coq.QArith.Qcanon.Qred_identity2	40
Coq.QArith.Qcanon.Qred_iff	40
Coq.QArith.Qcanon.Qc_is_canon	40
Coq.QArith.Qcanon.Qc_decomp	40
Coq.QArith.Qcanon.Qred_involutive	40
Coq.QArith.Qcanon.Q2Qc_eq_iff	40
Coq.QArith.Qcanon.Qceq_alt	40	1.37	search with cache (only 1: fix even_spec 1; only 1: easy).	10.6671130657	13433
Coq.QArith.Qcanon.Qclt_alt	40	0.0.0	search with cache (only 1: unfold Qccompare; only 1: intros; only 1: auto with *).	0.016263961792	3
Coq.QArith.Qcanon.Qcgt_alt	40	1.2.0.0	search with cache (only 1: intros; only 1: unfold Qccompare; only 1: symmetry; only 1: apply Z.gt_lt_iff).	0.0172040462494	7
Coq.QArith.Qcanon.Qcle_alt	40	0	search with cache (only 1: auto with *).	0.0100190639496	1
Coq.QArith.Qcanon.Qcge_alt	40	3.0	search with cache (only 1: symmetry; only 1: apply Z.ge_le_iff).	0.0281610488892	14
Coq.QArith.Qcanon.Qc_eq_dec	40
Coq.QArith.Qcanon.Q_apart_0_1	40	0	search with cache (only 1: discriminate).	0.0108418464661	1
Coq.QArith.Qcanon.Qcplus_assoc	40
Coq.QArith.Qcanon.Qcplus_0_l	40	13.2.1.0	search with cache (only 1: unfold Q2Qc; only 1: intros H; only 1: qc; only 1: ring).	0.818457841873	823
Coq.QArith.Qcanon.Qcplus_0_r	40	14.0.0	search with cache (only 1: intros; only 1: qc; only 1: ring).	0.707265138626	558
Coq.QArith.Qcanon.Qcplus_comm	40	8.0.0	search with cache (only 1: intros; only 1: qc; only 1: ring).	0.136350154877	48
Coq.QArith.Qcanon.Qcopp_involutive	40	19.0.92	search with cache (only 1: intros a; only 1: qc; only 1: ring).	10.4575178623	31815
Coq.QArith.Qcanon.Qcplus_opp_r	40	0.0.19.0.0	search with cache (only 1: intros; only 1: qc; only 1: unfold Qeq; only 1: simpl; only 1: ring).	3.19334721565	1462
Coq.QArith.Qcanon.Qcmult_assoc	40
Coq.QArith.Qcanon.Qcmult_0_l	40	3.0	search with cache (only 1: intros; only 1: auto with qarith).	0.0496189594269	20
Coq.QArith.Qcanon.Qcmult_0_r	40	0.0.13.0.0	search with cache (only 1: intros; only 1: qc; only 1: unfold Qeq; only 1: simpl; only 1: ring).	0.553644895554	645
Coq.QArith.Qcanon.Qcmult_1_l	40	24.0.0	search with cache (only 1: intros; only 1: qc; only 1: ring).	1.51055812836	1623
Coq.QArith.Qcanon.Qcmult_1_r	40	25.0.0	search with cache (only 1: intros; only 1: qc; only 1: ring).	2.0199868679	1956
Coq.QArith.Qcanon.Qcmult_comm	40	9.0.0	search with cache (only 1: intros; only 1: qc; only 1: ring).	0.222437858582	121
Coq.QArith.Qcanon.Qcmult_plus_distr_r	40	4.6.2	search with cache (only 1: intros (q, hq) (q', hq') H; only 1: qc; only 1: ring).	1.5508351326	706
Coq.QArith.Qcanon.Qcmult_plus_distr_l	40	8.0.3.3	search with cache (only 1: intros a b; only 1: intros (c, Hc); only 1: qc; only 1: ring).	5.37606096268	2585
Coq.QArith.Qcanon.Qcmult_integral	40
Coq.QArith.Qcanon.Qcmult_integral_l	40
Coq.QArith.Qcanon.Qcmult_inv_r	40
Coq.QArith.Qcanon.Qcmult_inv_l	40	0.0.3.2.3.9	search with cache (only 1: intros (x1, x2); only 1: intros; only 1: qc; only 1: rewrite Qmult_comm; only 1: apply Qmult_inv_r; only 1: auto).	1.51226305962	1719
Coq.QArith.Qcanon.Qcinv_mult_distr	40
Coq.QArith.Qcanon.Qcdiv_mult_l	40
Coq.QArith.Qcanon.Qcmult_div_r	40
Coq.QArith.Qcanon.Qcle_refl	40
Coq.QArith.Qcanon.Qcle_antisym	40	2.0.0.14	search with cache (only 1: intro n; only 1: unfold Qcle; only 1: intros; only 1: auto with qarith).	3.14893579483	1429
Coq.QArith.Qcanon.Qcle_trans	40
Coq.QArith.Qcanon.Qclt_not_eq	40	3.9.3.0	search with cache (only 1: intros; only 1: contradict H; only 1: destruct H; only 1: apply Z.lt_irrefl).	0.838780879974	651
Coq.QArith.Qcanon.Qclt_le_weak	40
Coq.QArith.Qcanon.Qcle_lt_trans	40
Coq.QArith.Qcanon.Qclt_le_trans	40
Coq.QArith.Qcanon.Qclt_trans	40	2.0.3.0.0.0	search with cache (only 1: unfold Qcle, Qclt; only 1: intros; only 1: eapply Qle_lt_trans; only 1: apply Qlt_le_weak; only 1: eauto; only 1: eauto).	0.190397024155	123
Coq.QArith.Qcanon.Qcnot_lt_le	40	3.1.0.1	search with cache (only 1: unfold Qclt; only 1: intros; only 1: intro; only 1: auto with qarith).	0.0652210712433	47
Coq.QArith.Qcanon.Qcnot_le_lt	40	3.0.1	search with cache (only 1: unfold Qclt; only 1: intros; only 1: auto with qarith).	0.0707519054413	65
Coq.QArith.Qcanon.Qclt_not_le	40
Coq.QArith.Qcanon.Qcle_not_lt	40
Coq.QArith.Qcanon.Qcle_lt_or_eq	40
Coq.QArith.Qcanon.Qc_dec	40
Coq.QArith.Qcanon.Qclt_le_dec	40	0.0.3.0	search with cache (only 1: unfold Qcle, Qclt; only 1: unfold Qlt, Qle; only 1: intros; only 1: exact (Z_lt_le_dec (Qnum x * QDen y) (Qnum y * QDen x))).	0.0322589874268	24
Coq.QArith.Qcanon.Qcopp_le_compat	40
Coq.QArith.Qcanon.Qcle_minus_iff	40
Coq.QArith.Qcanon.Qclt_minus_iff	40
Coq.QArith.Qcanon.Qcplus_le_compat	40
Coq.QArith.Qcanon.Qcmult_le_compat_r	40	6.2.9.1.0	search with cache (only 1: unfold Qcle, Qcminus; only 1: simpl in *; only 1: intros (a1, a2) (b1, b2) (c1, c2); only 1: repeat rewrite Qred_correct; only 1: apply Qmult_le_compat_r).	6.78461503983	5246
Coq.QArith.Qcanon.Qcmult_lt_0_le_reg_r	40
Coq.QArith.Qcanon.Qcmult_lt_compat_r	40	0.0.12.0.1.0.0.0	search with cache (only 1: unfold Qcmult, Qcle, Qclt; only 1: intros; only 1: simpl in *; only 1: repeat rewrite Qred_correct; only 1: rewrite !Qred_correct in * |-; only 1: apply Qmult_lt_r; only 1: eauto; only 1: eauto).	11.6345641613	7981
Coq.QArith.Qcanon.Qcpower_1	40
Coq.QArith.Qcanon.Qcpower_0	40	1.0.4.0	search with cache (only 1: induction n; only 1: tauto; only 1: simpl; only 1: auto with qarith).	0.0609130859375	34
Coq.QArith.Qcanon.Qcpower_pos	40
Coq.QArith.Qcanon.Qc_eq_bool_correct	40	5.19	search with cache (only 1: fix even_spec 1; only 1: intuition).	10.3309509754	5608
Coq.QArith.Qcanon.Qcrt	40	0.0.0.0.0.0.0.0.0.0.1.0.1.0.0.0.0.0.0.0.1.0.0.25	search with cache (only 1: repeat split; only 1: intros; only 1: qc; only 1: apply Qplus_0_l; only 1: intros; only 1: qc; only 1: apply Qplus_comm; only 1: intros; only 1: qc; only 1: apply Qplus_assoc; only 1: intros; only 1: apply Qcmult_1_l; only 1: intros; only 1: qc; only 1: apply Qmult_comm; only 1: intros; only 1: qc; only 1: apply Qmult_assoc; only 1: intros; only 1: qc; only 1: apply Qmult_plus_distr_l; only 1: intros; only 1: qc; only 1: apply Qplus_opp_r).	12.0915122032	8054
Coq.QArith.Qcanon.Qcft	40
Coq.QArith.Qcanon.test_field	40	0.0.4.3.0.0	search with cache (only 1: unfold Qcdiv; only 1: intros; only 1: rewrite <- Qcmult_assoc; only 1: rewrite Qcmult_inv_l; only 1: apply Qcmult_1_r; only 1: tauto).	0.64831495285	316
Coq.QArith.QArith_base.inject_Z_injective	40
Coq.QArith.QArith_base.Qeq_alt	40
Coq.QArith.QArith_base.Qlt_alt	40	2	search with cache (only 1: reflexivity).	0.0122151374817	3
Coq.QArith.QArith_base.Qgt_alt	40
Coq.QArith.QArith_base.Qle_alt	40	4.1.1	search with cache (only 1: symmetry; only 1: symmetry; only 1: reflexivity).	0.0377089977264	15
Coq.QArith.QArith_base.Qge_alt	40
Coq.QArith.QArith_base.Qcompare_antisym	40
Coq.QArith.QArith_base.Qcompare_spec	40
Coq.QArith.QArith_base.Qeq_refl	40	12	search with cache (only 1: easy).	0.0184769630432	46
Coq.QArith.QArith_base.Qeq_sym	40	0	search with cache (only 1: auto with qarith).	0.0124077796936	1
Coq.QArith.QArith_base.Qeq_trans	40
Coq.QArith.QArith_base.Q_Setoid	40
Coq.QArith.QArith_base.Qeq_dec	40	0.0.5.0	search with cache (only 1: unfold Qeq, Qlt, Qcompare; only 1: decide equality; only 1: apply Pos.eq_dec; only 1: apply Pos.eq_dec).	0.0525929927826	9
Coq.QArith.QArith_base.Qeq_bool_iff	40
Coq.QArith.QArith_base.Qeq_bool_eq	40	3.1.0.0.0.0	search with cache (only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: apply Zeq_is_eq_bool; only 1: auto with qarith).	0.108527898788	35
Coq.QArith.QArith_base.Qeq_eq_bool	40	0	search with cache (only 1: apply Qeq_bool_iff).	0.011626958847	1
Coq.QArith.QArith_base.Qeq_bool_neq	40
Coq.QArith.QArith_base.Qle_bool_iff	40
Coq.QArith.QArith_base.Qle_bool_imp_le	40	0	search with cache (only 1: apply Zle_is_le_bool).	0.0137898921967	1
Coq.QArith.QArith_base.Qnot_eq_sym	40	0.2	search with cache (only 1: unfold Qeq, Qlt, Qcompare; only 1: auto with qarith).	0.0187239646912	4
Coq.QArith.QArith_base.Qeq_bool_comm	40
Coq.QArith.QArith_base.Qeq_bool_refl	40	0.0	search with cache (only 1: apply Qeq_bool_iff; only 1: now symmetry).	0.0160188674927	2
Coq.QArith.QArith_base.Qeq_bool_sym	40	3.3	search with cache (only 1: rewrite !Qeq_bool_iff; only 1: now symmetry).	0.181683778763	31
Coq.QArith.QArith_base.Qeq_bool_trans	40	0.0.0.2.0.3	search with cache (only 1: rewrite !Qeq_bool_iff; only 1: unfold Qeq; only 1: intros XY YZ; only 1: apply Z.mul_reg_r with (QDen y); only 1: auto with qarith; only 1: now rewrite Z.mul_shuffle0, XY, Z.mul_shuffle0, YZ, Z.mul_shuffle0).	0.421874046326	89
Coq.QArith.QArith_base.Qmake_Qdiv	40
Coq.QArith.QArith_base.Qplus_comp	40
Coq.QArith.QArith_base.Qopp_comp	40
Coq.QArith.QArith_base.Qminus_comp	40
Coq.QArith.QArith_base.Qmult_comp	40
Coq.QArith.QArith_base.Qinv_comp	40
Coq.QArith.QArith_base.Qdiv_comp	40
Coq.QArith.QArith_base.Qcompare_comp	40
Coq.QArith.QArith_base.Qle_comp	40
Coq.QArith.QArith_base.Qlt_compat	40
Coq.QArith.QArith_base.Qeqb_comp	40
Coq.QArith.QArith_base.Qleb_comp	40
Coq.QArith.QArith_base.Q_apart_0_1	40	0.17	search with cache (only 1: intros m; only 1: now subst).	0.390897989273	184
Coq.QArith.QArith_base.Qplus_assoc	40
Coq.QArith.QArith_base.Qplus_0_l	40	0.0.0.18	search with cache (only 1: intros (b, Hb); only 1: unfold Qeq; only 1: simpl in *; only 1: ring).	0.614336967468	836
Coq.QArith.QArith_base.Qplus_0_r	40	0.0.0.0.0	search with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: simpl_mult; only 1: ring).	0.0789439678192	5
Coq.QArith.QArith_base.Qplus_comm	40	7.0.11.1	search with cache (only 1: intros (x1, x2); only 1: CRelationClasses.simpl_crelation; only 1: rewrite Pos.mul_comm; only 1: ring).	4.7980298996	2563
Coq.QArith.QArith_base.Qopp_involutive	40	1.2.1.3	search with cache (only 1: unfold Qeq; only 1: intros; only 1: simpl in *; only 1: ring).	0.796775102615	34
Coq.QArith.QArith_base.Qplus_opp_r	40	1.0.0.0	search with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: ring).	0.0319018363953	5
Coq.QArith.QArith_base.Qplus_inj_r	40
Coq.QArith.QArith_base.Qplus_inj_l	40
Coq.QArith.QArith_base.Qmult_assoc	40	0.0.0.0.0	search with cache (only 1: intros (x1, x2) (y1, y2) (z1, z2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: simpl_mult; only 1: ring).	0.0414228439331	5
Coq.QArith.QArith_base.Qmult_0_l	40	2.0.0	search with cache (only 1: red; only 1: simpl in *; only 1: tauto).	0.0238268375397	5
Coq.QArith.QArith_base.Qmult_0_r	40	5.0.2.0	search with cache (only 1: intros; only 1: red; only 1: simpl in *; only 1: ring).	0.346118927002	123
Coq.QArith.QArith_base.Qmult_1_l	40
Coq.QArith.QArith_base.Qmult_1_r	40	0.1.0.0.0.4	search with cache (only 1: intros (x1, x2); only 1: red; only 1: simpl; only 1: rewrite Pos.mul_comm; only 1: simpl; only 1: ring).	1.46963405609	297
Coq.QArith.QArith_base.Qmult_comm	40	2.3.0.1.6	search with cache (only 1: intros a b; only 1: red; only 1: simpl; only 1: rewrite Pos.mul_comm; only 1: ring).	3.32704496384	1594
Coq.QArith.QArith_base.Qmult_plus_distr_r	40	0.0.0.0.0	search with cache (only 1: intros (x1, x2) (y1, y2) (z1, z2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: simpl_mult; only 1: ring).	0.0555739402771	5
Coq.QArith.QArith_base.Qmult_plus_distr_l	40	0.0.0.0.0	search with cache (only 1: intros (x1, x2) (y1, y2) (z1, z2); only 1: unfold Qeq, Qmult, Qplus; only 1: simpl; only 1: simpl_mult; only 1: ring).	0.0694780349731	5
Coq.QArith.QArith_base.Qmult_integral	40
Coq.QArith.QArith_base.Qmult_integral_l	40
Coq.QArith.QArith_base.inject_Z_plus	40
Coq.QArith.QArith_base.inject_Z_mult	40	5	search with cache (only 1: now constructor).	0.0125758647919	6
Coq.QArith.QArith_base.inject_Z_opp	40	7	search with cache (only 1: now constructor).	0.0141777992249	8
Coq.QArith.QArith_base.Qinv_involutive	40
Coq.QArith.QArith_base.Qmult_inv_r	40
Coq.QArith.QArith_base.Qinv_mult_distr	40
Coq.QArith.QArith_base.Qdiv_mult_l	40
Coq.QArith.QArith_base.Qmult_div_r	40
Coq.QArith.QArith_base.Qinv_plus_distr	40
Coq.QArith.QArith_base.Qinv_minus_distr	40	0.0.0.0.0	search with cache (only 1: intros; only 1: unfold Qeq; only 1: simpl; only 1: rewrite Pos2Z.inj_mul; only 1: ring).	0.0372622013092	5
Coq.QArith.QArith_base.Qmult_inj_r	40
Coq.QArith.QArith_base.Qmult_inj_l	40
Coq.QArith.QArith_base.Qle_refl	40	23.15	search with cache (only 1: red; only 1: f_equiv).	0.768285989761	1402
Coq.QArith.QArith_base.Qle_antisym	40
Coq.QArith.QArith_base.Qle_trans	40
Coq.QArith.QArith_base.Qlt_irrefl	40
Coq.QArith.QArith_base.Qlt_not_eq	40
Coq.QArith.QArith_base.Zle_Qle	40
Coq.QArith.QArith_base.Zlt_Qlt	40
Coq.QArith.QArith_base.Qle_lteq	40
Coq.QArith.QArith_base.Qlt_le_weak	40	13.1	search with cache (only 1: unfold Qeq, Qlt, Qcompare; only 1: Z.order).	0.183192968369	259
Coq.QArith.QArith_base.Qle_lt_trans	40
Coq.QArith.QArith_base.Qlt_le_trans	40
Coq.QArith.QArith_base.Qlt_trans	40
Coq.QArith.QArith_base.Qnot_lt_le	40	16.9	search with cache (only 1: unfold Qle, Qlt; only 1: Z.order).	1.99721598625	2020
Coq.QArith.QArith_base.Qnot_le_lt	40	12.10	search with cache (only 1: unfold Qle, Qlt; only 1: now apply Z.nle_gt).	1.09907317162	545
Coq.QArith.QArith_base.Qlt_not_le	40	0	search with cache (only 1: apply Z.nle_gt).	0.012433052063	1
Coq.QArith.QArith_base.Qle_not_lt	40	0	search with cache (only 1: apply Z.nlt_ge).	0.0114469528198	1
Coq.QArith.QArith_base.Qle_lt_or_eq	40
Coq.QArith.QArith_base.Q_dec	40
Coq.QArith.QArith_base.Qlt_le_dec	40
Coq.QArith.QArith_base.Qarchimedean	40
Coq.QArith.QArith_base.Qopp_le_compat	40
Coq.QArith.QArith_base.Qle_minus_iff	40
Coq.QArith.QArith_base.Qlt_minus_iff	40
Coq.QArith.QArith_base.Qplus_le_compat	40
Coq.QArith.QArith_base.Qplus_lt_le_compat	40
Coq.QArith.QArith_base.Qplus_le_l	40
Coq.QArith.QArith_base.Qplus_le_r	40	0.0.1.0.0.0.0.1.2.0.0.7	search with cache (only 1: rewrite (Qplus_comm z x), (Qplus_comm z y); only 1: split; only 1: intros; only 1: rewrite <- (Qplus_0_r x), <- (Qplus_0_r y), <- (Qplus_opp_r z); only 1: do 2 rewrite Qplus_assoc; only 1: apply Qplus_le_compat; only 1: auto with *; only 1: auto with *; only 1: intros; only 1: apply Qplus_le_compat; only 1: auto with *; only 1: auto with *).	27.0476047993	7800
Coq.QArith.QArith_base.Qplus_lt_l	40
Coq.QArith.QArith_base.Qplus_lt_r	40	0.1.1.0.0.0.1.0.2.0.0.7	search with cache (only 1: rewrite (Qplus_comm z x), (Qplus_comm z y); only 1: split; only 1: intros; only 1: rewrite <- (Qplus_0_r x), <- (Qplus_0_r y), <- (Qplus_opp_r z); only 1: do 2 rewrite Qplus_assoc; only 1: apply Qplus_lt_le_compat; only 1: auto with *; only 1: auto with *; only 1: intros; only 1: apply Qplus_lt_le_compat; only 1: auto with *; only 1: auto with *).	38.7388699055	9567
Coq.QArith.QArith_base.Qmult_le_compat_r	40
Coq.QArith.QArith_base.Qmult_lt_0_le_reg_r	40
Coq.QArith.QArith_base.Qmult_le_r	40
Coq.QArith.QArith_base.Qmult_le_l	40	0.4.1.2.0.2.0.6	search with cache (only 1: rewrite (Qmult_comm z x), (Qmult_comm z y); only 1: split; only 1: intro; only 1: now apply Qmult_lt_0_le_reg_r with z; only 1: intro; only 1: apply Qmult_le_compat_r; only 1: auto with qarith; only 1: auto with qarith).	9.03037619591	4579
Coq.QArith.QArith_base.Qmult_lt_compat_r	40
Coq.QArith.QArith_base.Qmult_lt_r	40
Coq.QArith.QArith_base.Qmult_lt_l	40
Coq.QArith.QArith_base.Qmult_le_0_compat	40
Coq.QArith.QArith_base.Qinv_le_0_compat	40
Coq.QArith.QArith_base.Qle_shift_div_l	40
Coq.QArith.QArith_base.Qle_shift_inv_l	40
Coq.QArith.QArith_base.Qle_shift_div_r	40
Coq.QArith.QArith_base.Qle_shift_inv_r	40
Coq.QArith.QArith_base.Qinv_lt_0_compat	40	2.1.0.3.4.0.5.0.5.6	search with cache (only 1: intros (x1, x2); only 1: red; only 1: simpl; only 1: red; only 1: case x1; only 1: auto; only 1: auto; only 1: simpl; only 1: unfold Qle, Qlt; only 1: auto).	27.2640180588	16335
Coq.QArith.QArith_base.Qlt_shift_div_l	40
Coq.QArith.QArith_base.Qlt_shift_inv_l	40
Coq.QArith.QArith_base.Qlt_shift_div_r	40
Coq.QArith.QArith_base.Qlt_shift_inv_r	40
Coq.QArith.QArith_base.Qinv_lt_contravar	40
Coq.QArith.QArith_base.Qpower_positive_comp	40
Coq.QArith.QArith_base.Qpower_comp	40
Coq.Classes.CMorphisms.eq_proper_proxy	40	1.5	search with cache (only 1: red; only 1: trivial).	0.00947618484497	8
Coq.Classes.CMorphisms.reflexive_proper_proxy	40	1	search with cache (only 1: firstorder).	0.00523805618286	2
Coq.Classes.CMorphisms.proper_proper_proxy	40	0	search with cache (only 1: firstorder).	0.00484609603882	1
Coq.Classes.CMorphisms.pointwise_pointwise	40	6.8.1.13.2	search with cache (only 1: split; only 1: destruct 2; only 1: firstorder; only 1: red; only 1: firstorder).	6.01425909996	14187
Coq.Classes.CMorphisms.subrelation_id_proper	40	0	search with cache (only 1: firstorder).	0.0073459148407	1
Coq.Classes.CMorphisms.subrelation_respectful	40	0	search with cache (only 1: firstorder).	0.00969314575195	1
Coq.Classes.CMorphisms.subrelation_refl	40	5.0.0	search with cache (only 1: hnf; only 1: intros; only 1: firstorder).	0.0143299102783	8
Coq.Classes.CMorphisms.subrelation_proper	40	0	search with cache (only 1: simpl_crelation).	0.0126059055328	1
Coq.Classes.CMorphisms.proper_subrelation_proper_arrow	40	4	search with cache (only 1: simpl_crelation).	0.0349769592285	5
Coq.Classes.CMorphisms.pointwise_subrelation	40	1	search with cache (only 1: simpl_crelation).	0.0158109664917	2
Coq.Classes.CMorphisms.forall_subrelation	40	8	search with cache (only 1: firstorder).	0.0660359859467	57
Coq.Classes.CMorphisms.iff_impl_subrelation	40	5	search with cache (only 1: simpl_crelation).	0.0175688266754	13
Coq.Classes.CMorphisms.iff_flip_impl_subrelation	40	0	search with cache (only 1: firstorder).	0.00938200950623	1
Coq.Classes.CMorphisms.iffT_arrow_subrelation	40	0.0	search with cache (only 1: reduce; only 1: firstorder).	0.0113439559937	2
Coq.Classes.CMorphisms.iffT_flip_arrow_subrelation	40	0	search with cache (only 1: firstorder).	0.00909399986267	1
Coq.Classes.CMorphisms.respectful_per_obligation_2	40
Coq.Classes.CMorphisms.flip_proper_obligation_1	40	5	search with cache (only 1: firstorder).	0.0277998447418	6
Coq.Classes.CMorphisms.trans_contra_co_type_morphism_obligation_1	40	11	search with cache (only 1: firstorder).	2.9962990284	1932
Coq.Classes.CMorphisms.trans_contra_inv_impl_type_morphism_obligation_1	40	11	search with cache (only 1: firstorder).	8.09673094749	4431
Coq.Classes.CMorphisms.trans_co_impl_type_morphism_obligation_1	40	12	search with cache (only 1: firstorder).	24.5665509701	12383
Coq.Classes.CMorphisms.trans_sym_co_inv_impl_type_morphism_obligation_1	40	12	search with cache (only 1: firstorder).	1.48211288452	1231
Coq.Classes.CMorphisms.trans_sym_contra_arrow_morphism_obligation_1	40	12	search with cache (only 1: firstorder).	12.3683619499	6577
Coq.Classes.CMorphisms.per_partial_app_type_morphism_obligation_1	40	12	search with cache (only 1: firstorder).	1.43692684174	626
Coq.Classes.CMorphisms.trans_co_eq_inv_arrow_morphism_obligation_1	40	14	search with cache (only 1: firstorder).	8.01210093498	5523
Coq.Classes.CMorphisms.PER_type_morphism_obligation_1	40	11	search with cache (only 1: firstorder).	5.85258793831	2526
Coq.Classes.CMorphisms.symmetric_equiv_flip	40	7.0	search with cache (only 1: hnf; only 1: firstorder).	0.0282020568848	14
Coq.Classes.CMorphisms.compose_proper_obligation_1	40	7	search with cache (only 1: firstorder).	0.0358040332794	8
Coq.Classes.CMorphisms.reflexive_eq_dom_reflexive	40	5	search with cache (only 1: simpl_crelation).	0.022894859314	11
Coq.Classes.CMorphisms.respectful_morphism	40
Coq.Classes.CMorphisms.Reflexive_partial_app_morphism	40	0.4	search with cache (only 1: unfold respectful, relation_equivalence in *; only 1: firstorder).	0.0177090167999	6
Coq.Classes.CMorphisms.flip_respectful	40	5.3	search with cache (only 1: simpl_crelation; only 1: firstorder).	0.0474660396576	20
Coq.Classes.CMorphisms.flip1	40	3.0.0	search with cache (only 1: hnf; only 1: intros; only 1: auto).	0.0195569992065	6
Coq.Classes.CMorphisms.flip2	40	0	search with cache (only 1: firstorder).	0.0119271278381	1
Coq.Classes.CMorphisms.eq_subrelation	40	3	search with cache (only 1: simpl_crelation).	0.0165779590607	4
Coq.Classes.CMorphisms.reflexive_proper	40	0	search with cache (only 1: firstorder).	0.0126860141754	1
Coq.Classes.CMorphisms.proper_eq	40	1	search with cache (only 1: firstorder).	0.0117828845978	2
Coq.Classes.CMorphisms.proper_proper	40	0.0.1	search with cache (only 1: reduce; only 1: subst; only 1: firstorder).	0.0237851142883	4
Coq.Classes.CMorphisms.proper_normalizes_proper	40	11	search with cache (only 1: firstorder).	0.0955989360809	72
Coq.Classes.CMorphisms.flip_atom	40	0	search with cache (only 1: firstorder).	0.0126550197601	1
Coq.Classes.CMorphisms.flip_arrow	40
Coq.Classes.CMorphisms.proper_sym_flip	40	0.1.1	search with cache (only 1: intros A B R R' HRR' S S' HSS' f g; only 1: unfold flip, respectful; only 1: simpl_crelation).	0.0303010940552	5
Coq.Classes.CMorphisms.proper_sym_flip_2	40	2.4.0	search with cache (only 1: intros A R1 Sym B R2 f Hf; only 1: unfold flip, respectful; only 1: firstorder).	0.205368995667	33
Coq.Classes.CMorphisms.proper_sym_impl_iff	40	18.4	search with cache (only 1: simpl_crelation; only 1: firstorder).	3.01700806618	1704
Coq.Classes.CMorphisms.proper_sym_arrow_iffT	40	0.0.1.0.1	search with cache (only 1: intros A R Sym f Hf x x' Hxx'; only 1: repeat red in Hf; only 1: split; only 1: eauto; only 1: eauto).	0.0337970256805	7
Coq.Classes.CMorphisms.proper_sym_impl_iff_2	40
Coq.Classes.CMorphisms.proper_sym_arrow_iffT_2	40	0.0.1.0.4	search with cache (only 1: intros A R Sym B R' Sym' f Hf x x' Hxx' y y' Hyy'; only 1: repeat red in Hf; only 1: split; only 1: eauto; only 1: eauto).	0.0838301181793	45
Coq.Classes.CMorphisms.PartialOrder_proper_type	40
Coq.Classes.CMorphisms.PartialOrder_StrictOrder	40
Coq.Classes.CMorphisms.StrictOrder_PreOrder	40
Coq.Classes.CMorphisms.StrictOrder_PartialOrder	40
Coq.Classes.Morphisms_Prop.Acc_pt_morphism	40
Coq.Classes.Morphisms_Prop.Acc_rel_morphism	40
Coq.Classes.Morphisms_Prop.well_founded_morphism	40
Coq.Classes.CEquivalence.equiv_transitive_obligation_1	40	0.5	search with cache (only 1: compute; only 1: firstorder).	0.687776088715	42
Coq.Classes.CEquivalence.respecting_equiv_obligation_3	40
Coq.Classes.CEquivalence.pointwise_reflexive	40	0	search with cache (only 1: simpl_crelation).	0.00904011726379	1
Coq.Classes.CEquivalence.pointwise_symmetric	40	0	search with cache (only 1: firstorder).	0.0066339969635	1
Coq.Classes.CEquivalence.pointwise_transitive	40	0	search with cache (only 1: firstorder).	0.00818991661072	1
Coq.Classes.CEquivalence.pointwise_equivalence	40	0	search with cache (only 1: firstorder).	0.294337034225	1
Coq.Classes.CRelationClasses.complement_inverse	40	4	search with cache (only 1: trivial).	0.00601005554199	5
Coq.Classes.CRelationClasses.StrictOrder_Asymmetric	40
Coq.Classes.CRelationClasses.subrelation_symmetric	40	1	search with cache (only 1: firstorder).	0.00646495819092	2
Coq.Classes.CRelationClasses.flip_Reflexive	40	5.0	search with cache (only 1: hnf; only 1: firstorder).	0.00914096832275	7
Coq.Classes.CRelationClasses.flip_Antisymmetric	40	6.1	search with cache (only 1: hnf; only 1: firstorder).	0.020026922226	14
Coq.Classes.CRelationClasses.flip_PreOrder	40	5	search with cache (only 1: firstorder).	0.0167150497437	6
Coq.Classes.CRelationClasses.flip_StrictOrder	40	5	search with cache (only 1: firstorder).	0.0180079936981	6
Coq.Classes.CRelationClasses.flip_PER	40	5	search with cache (only 1: firstorder).	0.0255148410797	6
Coq.Classes.CRelationClasses.flip_Equivalence	40	0	search with cache (only 1: firstorder).	0.0316021442413	1
Coq.Classes.CRelationClasses.complement_Irreflexive	40	6	search with cache (only 1: firstorder).	0.0136640071869	13
Coq.Classes.CRelationClasses.complement_Symmetric	40	1	search with cache (only 1: firstorder).	0.00795102119446	2
Coq.Classes.CRelationClasses.iffT_Reflexive	40	1	search with cache (only 1: firstorder).	0.00817012786865	2
Coq.Classes.CRelationClasses.iffT_Symmetric	40	0	search with cache (only 1: firstorder).	0.0083589553833	1
Coq.Classes.CRelationClasses.iffT_Transitive	40	0	search with cache (only 1: firstorder).	0.00958395004272	1
Coq.Classes.CRelationClasses.relation_equivalence_equivalence	40
Coq.Classes.CRelationClasses.relation_implication_preorder	40	1	search with cache (only 1: firstorder).	0.0103299617767	2
Coq.Classes.CRelationClasses.partial_order_antisym	40	0	search with cache (only 1: firstorder).	0.0142619609833	1
Coq.Classes.CRelationClasses.PartialOrder_inverse	40	0	search with cache (only 1: firstorder).	0.0361559391022	1
Coq.Classes.Equivalence.equiv_transitive_obligation_1	40	0.8	search with cache (only 1: compute; only 1: firstorder).	0.0819408893585	49
Coq.Classes.Equivalence.respecting_equiv_obligation_3	40
Coq.Classes.Equivalence.pointwise_reflexive	40	0	search with cache (only 1: simpl_relation).	0.00934481620789	1
Coq.Classes.Equivalence.pointwise_symmetric	40	0	search with cache (only 1: firstorder).	0.00644207000732	1
Coq.Classes.Equivalence.pointwise_transitive	40	0	search with cache (only 1: firstorder).	0.00795102119446	1
Coq.Classes.Equivalence.pointwise_equivalence	40	0	search with cache (only 1: firstorder).	0.281206130981	1
Coq.Classes.EquivDec.unit_eqdec_obligation_1	40	21.48.0	search with cache (only 1: destruct x; only 1: destruct y; only 1: now subst).	4.85104894638	8116
Coq.Classes.EquivDec.bool_function_eqdec_obligation_1	40
Coq.Classes.EquivDec.list_eqdec_obligation_5	40
Coq.Classes.RelationClasses.complement_inverse	40	5	search with cache (only 1: trivial).	0.00603890419006	6
Coq.Classes.RelationClasses.StrictOrder_Asymmetric	40
Coq.Classes.RelationClasses.subrelation_symmetric	40	1	search with cache (only 1: firstorder).	0.0067241191864	2
Coq.Classes.RelationClasses.flip_Reflexive	40	6.1.0	search with cache (only 1: hnf; only 1: intros; only 1: firstorder).	0.0153150558472	15
Coq.Classes.RelationClasses.flip_Antisymmetric	40	6.1	search with cache (only 1: hnf; only 1: firstorder).	0.0217950344086	18
Coq.Classes.RelationClasses.flip_PreOrder	40	5	search with cache (only 1: firstorder).	0.0204660892487	6
Coq.Classes.RelationClasses.flip_StrictOrder	40	5	search with cache (only 1: firstorder).	0.0204567909241	6
Coq.Classes.RelationClasses.flip_PER	40	5	search with cache (only 1: firstorder).	0.0304911136627	6
Coq.Classes.RelationClasses.flip_Equivalence	40	0	search with cache (only 1: firstorder).	0.0307688713074	1
Coq.Classes.RelationClasses.complement_Irreflexive	40	6.2	search with cache (only 1: hnf; only 1: firstorder).	0.01486992836	12
Coq.Classes.RelationClasses.complement_Symmetric	40	1	search with cache (only 1: firstorder).	0.00853610038757	2
Coq.Classes.RelationClasses.predicate_equivalence_equivalence_obligation_1	40
Coq.Classes.RelationClasses.predicate_equivalence_equivalence_obligation_2	40	0.0.1	search with cache (only 1: induction l; only 1: firstorder; only 1: firstorder).	0.0228018760681	4
Coq.Classes.RelationClasses.predicate_equivalence_equivalence_obligation_3	40
Coq.Classes.RelationClasses.predicate_implication_preorder_obligation_1	40	1.0.5	search with cache (only 1: induction l; only 1: firstorder; only 1: firstorder).	0.0246560573578	12
Coq.Classes.RelationClasses.predicate_implication_preorder_obligation_2	40	0.1.0.0.5	search with cache (only 1: induction l; only 1: firstorder; only 1: intros; only 1: pose (IHl (x x0) (y x0) (z x0)); only 1: firstorder).	0.489637851715	34
Coq.Classes.RelationClasses.relation_equivalence_equivalence	40
Coq.Classes.RelationClasses.relation_implication_preorder	40	1	search with cache (only 1: firstorder).	0.0113790035248	2
Coq.Classes.RelationClasses.partial_order_antisym	40	0	search with cache (only 1: firstorder).	0.0151650905609	1
Coq.Classes.RelationClasses.PartialOrder_inverse	40	2	search with cache (only 1: firstorder).	0.0448751449585	3
Coq.Classes.RelationClasses.subrelation_partial_order_obligation_1	40	0	search with cache (only 1: firstorder).	0.0157680511475	1
Coq.Classes.Morphisms.eq_proper_proxy	40	1.5	search with cache (only 1: red; only 1: trivial).	0.00940704345703	8
Coq.Classes.Morphisms.reflexive_proper_proxy	40	0	search with cache (only 1: firstorder).	0.00538182258606	1
Coq.Classes.Morphisms.proper_proper_proxy	40	0	search with cache (only 1: firstorder).	0.00511407852173	1
Coq.Classes.Morphisms.pointwise_pointwise	40	1.10.0.0.23	search with cache (only 1: intros Hfst Hsnd; only 1: compute; only 1: firstorder; only 1: elim eq_sym with (1 := H0); only 1: trivial).	23.2431349754	58568
Coq.Classes.Morphisms.subrelation_id_proper	40	4.0	search with cache (only 1: compute; only 1: firstorder).	0.0103189945221	6
Coq.Classes.Morphisms.subrelation_respectful	40	0	search with cache (only 1: firstorder).	0.00957107543945	1
Coq.Classes.Morphisms.subrelation_refl	40	0.0	search with cache (only 1: compute; only 1: firstorder).	0.00935697555542	2
Coq.Classes.Morphisms.subrelation_proper	40	1	search with cache (only 1: firstorder).	0.00828194618225	2
Coq.Classes.Morphisms.proper_subrelation_proper	40	0.4.3.5	search with cache (only 1: unfold subrelation; only 1: reduce; only 1: subst; only 1: firstorder).	0.625642061234	203
Coq.Classes.Morphisms.pointwise_subrelation	40	1.4	search with cache (only 1: reduce; only 1: firstorder).	0.0126249790192	7
Coq.Classes.Morphisms.forall_subrelation	40	0.4	search with cache (only 1: unfold subrelation; only 1: firstorder).	0.0280029773712	19
Coq.Classes.Morphisms.iff_impl_subrelation	40	0.0	search with cache (only 1: reduce; only 1: firstorder).	0.00978302955627	2
Coq.Classes.Morphisms.iff_flip_impl_subrelation	40	0	search with cache (only 1: firstorder).	0.00782799720764	1
Coq.Classes.Morphisms.respectful_per_obligation_2	40
Coq.Classes.Morphisms.complement_proper_obligation_1	40
Coq.Classes.Morphisms.flip_proper_obligation_1	40	4	search with cache (only 1: firstorder).	0.0178070068359	5
Coq.Classes.Morphisms.trans_contra_co_morphism_obligation_1	40	7	search with cache (only 1: firstorder).	0.169523000717	36
Coq.Classes.Morphisms.trans_contra_inv_impl_morphism_obligation_1	40	5	search with cache (only 1: firstorder).	1.52461409569	369
Coq.Classes.Morphisms.trans_co_impl_morphism_obligation_1	40	6	search with cache (only 1: firstorder).	1.9826028347	720
Coq.Classes.Morphisms.trans_sym_co_inv_impl_morphism_obligation_1	40	9	search with cache (only 1: firstorder).	0.316996097565	139
Coq.Classes.Morphisms.trans_sym_contra_impl_morphism_obligation_1	40	9	search with cache (only 1: firstorder).	1.39554405212	563
Coq.Classes.Morphisms.per_partial_app_morphism_obligation_1	40	10	search with cache (only 1: firstorder).	0.77135682106	269
Coq.Classes.Morphisms.trans_co_eq_inv_impl_morphism_obligation_1	40	3.3.2	search with cache (only 1: transitivity y; only 1: intuition; only 1: intuition).	0.835887908936	477
Coq.Classes.Morphisms.PER_morphism_obligation_1	40	13	search with cache (only 1: firstorder).	27.3308231831	11207
Coq.Classes.Morphisms.symmetric_equiv_flip	40	5.1.0.0	search with cache (only 1: hnf; only 1: intros; only 1: compute; only 1: firstorder).	0.0281889438629	12
Coq.Classes.Morphisms.compose_proper_obligation_1	40	7	search with cache (only 1: firstorder).	0.0171740055084	8
Coq.Classes.Morphisms.reflexive_eq_dom_reflexive	40	9	search with cache (only 1: simpl_relation).	0.0230028629303	13
Coq.Classes.Morphisms.respectful_morphism	40	1.2.4.2.1.0.9.2	search with cache (only 1: reduce; only 1: unfold relation_equivalence in *; only 1: compute; only 1: firstorder; only 1: apply H0; only 1: firstorder; only 1: apply H0; only 1: firstorder).	17.4247689247	2705
Coq.Classes.Morphisms.Reflexive_partial_app_morphism	40	7	search with cache (only 1: firstorder).	0.0192379951477	11
Coq.Classes.Morphisms.flip_respectful	40	7	search with cache (only 1: firstorder).	0.097244977951	34
Coq.Classes.Morphisms.flip1	40	4.0.3	search with cache (only 1: hnf; only 1: unfold flip, respectful; only 1: apply H).	0.0295391082764	15
Coq.Classes.Morphisms.flip2	40	0	search with cache (only 1: firstorder).	0.0121359825134	1
Coq.Classes.Morphisms.eq_subrelation	40	0.2.0.3	search with cache (only 1: unfold subrelation; only 1: firstorder; only 1: subst; only 1: firstorder).	0.0231168270111	9
Coq.Classes.Morphisms.reflexive_proper	40	0	search with cache (only 1: firstorder).	0.011018037796	1
Coq.Classes.Morphisms.proper_eq	40	1	search with cache (only 1: firstorder).	0.0109009742737	2
Coq.Classes.Morphisms.proper_proper	40	0.0.0.0.0	search with cache (only 1: reduce; only 1: subst; only 1: unfold respectful, relation_equivalence, predicate_equivalence in *; only 1: simpl in *; only 1: firstorder).	0.028589963913	5
Coq.Classes.Morphisms.proper_normalizes_proper	40	10	search with cache (only 1: firstorder).	0.243586063385	120
Coq.Classes.Morphisms.flip_atom	40	0	search with cache (only 1: firstorder).	0.013484954834	1
Coq.Classes.Morphisms.flip_arrow	40
Coq.Classes.Morphisms.proper_sym_flip	40	0	search with cache (only 1: simpl_relation).	0.0204930305481	1
Coq.Classes.Morphisms.proper_sym_flip_2	40	1.6	search with cache (only 1: unfold flip, respectful; only 1: simpl_relation).	0.333395004272	104
Coq.Classes.Morphisms.proper_sym_impl_iff	40	15.2	search with cache (only 1: simpl_relation; only 1: firstorder).	1.63352704048	1174
Coq.Classes.Morphisms.proper_sym_impl_iff_2	40
Coq.Classes.Morphisms.PartialOrder_proper	40
Coq.Classes.Morphisms.PartialOrder_StrictOrder	40
Coq.Classes.Morphisms.StrictOrder_PreOrder	40
Coq.Classes.Morphisms.StrictOrder_PartialOrder	40
Coq.Classes.SetoidDec.unit_eqdec_obligation_1	40
Coq.Classes.SetoidDec.bool_function_eqdec_obligation_1	40
Coq.PArith.Pnat.Pos2Nat.inj_succ	40
Coq.PArith.Pnat.Pos2Nat.inj_add	40
Coq.PArith.Pnat.Pos2Nat.inj_mul	40
Coq.PArith.Pnat.Pos2Nat.inj_1	40	9	search with cache (only 1: trivial).	0.0160717964172	10
Coq.PArith.Pnat.Pos2Nat.inj_xO	40
Coq.PArith.Pnat.Pos2Nat.inj_xI	40
Coq.PArith.Pnat.Pos2Nat.is_succ	40
Coq.PArith.Pnat.Pos2Nat.is_pos	40
Coq.PArith.Pnat.Pos2Nat.id	40
Coq.PArith.Pnat.Pos2Nat.inj	40
Coq.PArith.Pnat.Pos2Nat.inj_iff	40	0.1.0.1.5	search with cache (only 1: split; only 1: intros H; only 1: now rewrite <- (id p), <- (id q), H; only 1: intros H; only 1: now rewrite <- (id p), <- (id q), H).	0.272730112076	171
Coq.PArith.Pnat.Pos2Nat.inj_compare	40
Coq.PArith.Pnat.Pos2Nat.inj_lt	40
Coq.PArith.Pnat.Pos2Nat.inj_le	40
Coq.PArith.Pnat.Pos2Nat.inj_gt	40
Coq.PArith.Pnat.Pos2Nat.inj_ge	40
Coq.PArith.Pnat.Pos2Nat.inj_sub	40
Coq.PArith.Pnat.Pos2Nat.inj_sub_max	40
Coq.PArith.Pnat.Pos2Nat.inj_pred	40
Coq.PArith.Pnat.Pos2Nat.inj_pred_max	40
Coq.PArith.Pnat.Pos2Nat.inj_min	40
Coq.PArith.Pnat.Pos2Nat.inj_max	40
Coq.PArith.Pnat.Pos2Nat.inj_iter	40
Coq.PArith.Pnat.Nat2Pos.id	40
Coq.PArith.Pnat.Nat2Pos.id_max	40	5.0.0.0.2.0.3	search with cache (only 1: induction n as [| n H]; only 1: trivial; only 1: simpl Pos.of_nat; only 1: destruct n; only 1: trivial; only 1: rewrite Pos2Nat.inj_succ; only 1: now rewrite H).	0.56631398201	415
Coq.PArith.Pnat.Nat2Pos.inj	40
Coq.PArith.Pnat.Nat2Pos.inj_iff	40
Coq.PArith.Pnat.Nat2Pos.inj_succ	40	0.1.0	search with cache (only 1: destruct n; only 1: now destruct 1; only 1: trivial).	0.0272948741913	4
Coq.PArith.Pnat.Nat2Pos.inj_pred	40
Coq.PArith.Pnat.Nat2Pos.inj_add	40
Coq.PArith.Pnat.Nat2Pos.inj_mul	40
Coq.PArith.Pnat.Nat2Pos.inj_compare	40
Coq.PArith.Pnat.Nat2Pos.inj_sub	40
Coq.PArith.Pnat.Nat2Pos.inj_min	40
Coq.PArith.Pnat.Nat2Pos.inj_max	40
Coq.PArith.Pnat.Pos2SuccNat.id_succ	40
Coq.PArith.Pnat.Pos2SuccNat.pred_id	40
Coq.PArith.Pnat.SuccNat2Pos.id_succ	40
Coq.PArith.Pnat.SuccNat2Pos.pred_id	40	2.0.0.0.0.6.2.5.0.0.13.4	search with cache (only 1: Nat.cases n; only 1: now Nat.nzsimpl'; only 1: intro n; only 1: rewrite Pos.of_nat_succ; only 1: simpl Pos.of_nat; only 1: rewrite Pos2Nat.inj_succ; only 1: simpl; only 1: destruct n; only 1: trivial; only 1: rewrite Pos2Nat.inj_succ; only 1: f_equal; only 1: now apply Nat2Pos.id).	17.6209819317	19930
Coq.PArith.Pnat.SuccNat2Pos.inj	40
Coq.PArith.Pnat.SuccNat2Pos.inj_iff	40	6.0.1.0.1.0.23	search with cache (only 1: split; only 1: intro H; only 1: apply (f_equal Pos.to_nat) in H; only 1: rewrite !id_succ in H; only 1: now injection H; only 1: intro H; only 1: now subst).	5.2356569767	6968
Coq.PArith.Pnat.SuccNat2Pos.inv	40
Coq.PArith.Pnat.SuccNat2Pos.inj_succ	40	0.1	search with cache (only 1: simpl; only 1: f_equal).	0.0166699886322	3
Coq.PArith.Pnat.SuccNat2Pos.inj_compare	40
Coq.PArith.Pnat.Pmult_nat_mult	40
Coq.PArith.Pnat.Pmult_nat_succ_morphism	40
Coq.PArith.Pnat.Pmult_nat_l_plus_morphism	40
Coq.PArith.Pnat.Pmult_nat_plus_carry_morphism	40
Coq.PArith.Pnat.Pmult_nat_r_plus_morphism	40
Coq.PArith.Pnat.ZL6	40	7.9.8	search with cache (only 1: intros q; only 1: rewrite !Pmult_nat_mult; only 1: now Nat.nzsimpl).	2.57171916962	3072
Coq.PArith.Pnat.le_Pmult_nat	40	11.0.26	search with cache (only 1: fix le_div2 1; only 1: intros; only 1: trivial).	10.9411849976	15573
Coq.PArith.BinPos.Pos.eq_dec	40	14	search with cache (only 1: decide equality).	0.17859005928	204
Coq.PArith.BinPos.Pos.xI_succ_xO	40	4	search with cache (only 1: trivial).	0.0119829177856	5
Coq.PArith.BinPos.Pos.succ_discr	40	31.23.22.52.15	search with cache (only 1: red; only 1: destruct p; only 1: easy; only 1: easy; only 1: simpl_relation).	20.7735760212	111157
Coq.PArith.BinPos.Pos.pred_double_spec	40	6	search with cache (only 1: trivial).	0.0143029689789	7
Coq.PArith.BinPos.Pos.succ_pred_double	40
Coq.PArith.BinPos.Pos.pred_double_succ	40	0.0.0.1.2.3	search with cache (only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: reflexivity; only 1: simpl; only 1: reflexivity).	0.202673912048	62
Coq.PArith.BinPos.Pos.double_succ	40	0.1	search with cache (only 1: simpl; only 1: now f_equal).	0.0197191238403	3
Coq.PArith.BinPos.Pos.pred_double_xO_discr	40	0.0.0.0.0.0.2	search with cache (only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal).	0.0558309555054	9
Coq.PArith.BinPos.Pos.succ_not_1	40	0	search with cache (only 1: now destruct p).	0.0279128551483	1
Coq.PArith.BinPos.Pos.pred_succ	40	2.0.1.0.1.0.0.0.2.3	search with cache (only 1: induction p; only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: now destruct p; only 1: now f_equal).	4.25412917137	2042
Coq.PArith.BinPos.Pos.succ_pred_or	40
Coq.PArith.BinPos.Pos.succ_pred	40
Coq.PArith.BinPos.Pos.succ_inj	40
Coq.PArith.BinPos.Pos.pred_N_succ	40	0.0.0.0.2.6.0.2	search with cache (only 1: destruct p; only 1: simpl; only 1: f_equal; only 1: apply pred_double_succ; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal).	1.0276389122	676
Coq.PArith.BinPos.Pos.add_1_r	40	2	search with cache (only 1: now destruct p).	0.0456659793854	19
Coq.PArith.BinPos.Pos.add_1_l	40	0	search with cache (only 1: now destruct p).	0.0127329826355	1
Coq.PArith.BinPos.Pos.add_carry_spec	40
Coq.PArith.BinPos.Pos.add_comm	40
Coq.PArith.BinPos.Pos.add_succ_r	40
Coq.PArith.BinPos.Pos.add_succ_l	40
Coq.PArith.BinPos.Pos.add_no_neutral	40
Coq.PArith.BinPos.Pos.add_carry_add	40
Coq.PArith.BinPos.Pos.add_reg_r	40
Coq.PArith.BinPos.Pos.add_reg_l	40
Coq.PArith.BinPos.Pos.add_cancel_r	40
Coq.PArith.BinPos.Pos.add_cancel_l	40
Coq.PArith.BinPos.Pos.add_carry_reg_r	40
Coq.PArith.BinPos.Pos.add_carry_reg_l	40
Coq.PArith.BinPos.Pos.add_assoc	40
Coq.PArith.BinPos.Pos.add_xO	40	0.2	search with cache (only 1: simpl; only 1: f_equal).	0.0179779529572	4
Coq.PArith.BinPos.Pos.add_xI_pred_double	40
Coq.PArith.BinPos.Pos.add_xO_pred_double	40
Coq.PArith.BinPos.Pos.add_diag	40
Coq.PArith.BinPos.Pos.peano_rect_succ	40
Coq.PArith.BinPos.Pos.peano_rect_base	40	0.0	search with cache (only 1: revert P a f; only 1: trivial).	0.0175099372864	2
Coq.PArith.BinPos.Pos.peano_case	40
Coq.PArith.BinPos.Pos.eq_dep_eq_positive	40
Coq.PArith.BinPos.Pos.PeanoViewUnique	40
Coq.PArith.BinPos.Pos.peano_equiv	40
Coq.PArith.BinPos.Pos.mul_1_l	40	0.1	search with cache (only 1: apply succ_inj; only 1: now rewrite <- 2!add_1_r).	0.0172641277313	3
Coq.PArith.BinPos.Pos.mul_1_r	40
Coq.PArith.BinPos.Pos.mul_xO_r	40	0.0.1.0.4.1.3	search with cache (only 1: induction p; only 1: simpl; only 1: rewrite IHp; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: now f_equal).	0.696187973022	245
Coq.PArith.BinPos.Pos.mul_xI_r	40
Coq.PArith.BinPos.Pos.mul_comm	40
Coq.PArith.BinPos.Pos.mul_add_distr_l	40
Coq.PArith.BinPos.Pos.mul_add_distr_r	40
Coq.PArith.BinPos.Pos.mul_assoc	40
Coq.PArith.BinPos.Pos.mul_succ_l	40
Coq.PArith.BinPos.Pos.mul_succ_r	40
Coq.PArith.BinPos.Pos.mul_xI_mul_xO_discr	40
Coq.PArith.BinPos.Pos.mul_xO_discr	40
Coq.PArith.BinPos.Pos.mul_reg_r	40
Coq.PArith.BinPos.Pos.mul_reg_l	40
Coq.PArith.BinPos.Pos.mul_cancel_r	40
Coq.PArith.BinPos.Pos.mul_cancel_l	40	1.2.3.0	search with cache (only 1: split; only 1: rewrite 2!(mul_comm r); only 1: apply mul_reg_r; only 1: congruence).	0.0784561634064	43
Coq.PArith.BinPos.Pos.mul_eq_1_l	40
Coq.PArith.BinPos.Pos.mul_eq_1_r	40	0	search with cache (only 1: now destruct p, q).	0.0335578918457	1
Coq.PArith.BinPos.Pos.square_xO	40	3.0.2	search with cache (only 1: simpl; only 1: f_equal; only 1: auto using mul_xI_r, mul_xO_r, mul_1_r).	0.0663411617279	12
Coq.PArith.BinPos.Pos.square_xI	40
Coq.PArith.BinPos.Pos.iter_swap_gen	40
Coq.PArith.BinPos.Pos.iter_swap	40
Coq.PArith.BinPos.Pos.iter_succ	40
Coq.PArith.BinPos.Pos.iter_add	40
Coq.PArith.BinPos.Pos.iter_invariant	40
Coq.PArith.BinPos.Pos.pow_1_r	40	1.1.4.1.4.1.7.10.6	search with cache (only 1: apply succ_inj; only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: reflexivity || apply f_equal || exfalso; only 1: auto using mul_xI_r, mul_xO_r, mul_1_r; only 1: simpl; only 1: now f_equal).	25.0532388687	34943
Coq.PArith.BinPos.Pos.pow_succ_r	40
Coq.PArith.BinPos.Pos.square_spec	40
Coq.PArith.BinPos.Pos.sub_mask_succ_r	40
Coq.PArith.BinPos.Pos.sub_mask_carry_spec	40
Coq.PArith.BinPos.Pos.sub_mask_spec	40
Coq.PArith.BinPos.Pos.sub_mask_nul_iff	40
Coq.PArith.BinPos.Pos.sub_mask_diag	40	0.0.0.0.0.0.0	search with cache (only 1: induction p; only 1: simpl; only 1: now rewrite ?IHp; only 1: simpl; only 1: now rewrite ?IHp; only 1: simpl; only 1: now rewrite ?IHp).	0.0345311164856	7
Coq.PArith.BinPos.Pos.sub_mask_add	40
Coq.PArith.BinPos.Pos.sub_mask_add_diag_l	40
Coq.PArith.BinPos.Pos.sub_mask_pos_iff	40
Coq.PArith.BinPos.Pos.sub_mask_add_diag_r	40
Coq.PArith.BinPos.Pos.sub_mask_neg_iff	40
Coq.PArith.BinPos.Pos.eqb_eq	40	1.8.1	search with cache (only 1: revert p q; only 1: fix even_spec 1; only 1: Bool.destr_bool).	0.540657043457	542
Coq.PArith.BinPos.Pos.ltb_lt	40
Coq.PArith.BinPos.Pos.leb_le	40
Coq.PArith.BinPos.Pos.compare_cont_spec	40
Coq.PArith.BinPos.Pos.compare_cont_Eq	40
Coq.PArith.BinPos.Pos.compare_cont_Lt_Gt	40
Coq.PArith.BinPos.Pos.compare_cont_Lt_Lt	40	0.0.0.0.1.4	search with cache (only 1: unfold leb, le; only 1: rewrite compare_cont_spec; only 1: destruct (p ?= q); only 1: now split; only 1: now split; only 1: now split).	0.942138910294	165
Coq.PArith.BinPos.Pos.compare_cont_Gt_Lt	40	0.0.0.0.2.3	search with cache (only 1: unfold ltb, lt; only 1: rewrite compare_cont_spec; only 1: destruct (p ?= q); only 1: easy'; only 1: easy'; only 1: easy').	0.681535959244	161
Coq.PArith.BinPos.Pos.compare_cont_Gt_Gt	40
Coq.PArith.BinPos.Pos.compare_cont_Lt_not_Lt	40	0.0.0.0.0.0	search with cache (only 1: rewrite compare_cont_spec; only 1: unfold gt; only 1: destruct (p ?= q); only 1: easy'; only 1: easy'; only 1: easy').	0.0558228492737	6
Coq.PArith.BinPos.Pos.compare_cont_Lt_not_Gt	40	0.0.0.0.0.0	search with cache (only 1: rewrite compare_cont_spec; only 1: unfold le; only 1: destruct (p ?= q); only 1: easy'; only 1: easy'; only 1: easy').	0.0755081176758	6
Coq.PArith.BinPos.Pos.compare_cont_Gt_not_Lt	40	0.0.0.0.0.0	search with cache (only 1: rewrite compare_cont_spec; only 1: unfold ge; only 1: destruct (p ?= q); only 1: easy'; only 1: easy'; only 1: easy').	0.0757710933685	6
Coq.PArith.BinPos.Pos.compare_cont_Gt_not_Gt	40	0.0.0.0.0.0	search with cache (only 1: rewrite compare_cont_spec; only 1: unfold lt; only 1: destruct (p ?= q); only 1: easy'; only 1: easy'; only 1: easy').	0.0817680358887	6
Coq.PArith.BinPos.Pos.compare_xO_xO	40	1.0.1.0	search with cache (only 1: destruct compare; only 1: easy'; only 1: trivial; only 1: easy').	0.0234429836273	6
Coq.PArith.BinPos.Pos.compare_xI_xI	40	1.0.1.0	search with cache (only 1: destruct compare; only 1: easy'; only 1: trivial; only 1: easy').	0.0229270458221	6
Coq.PArith.BinPos.Pos.compare_xI_xO	40
Coq.PArith.BinPos.Pos.compare_xO_xI	40
Coq.PArith.BinPos.Pos.compare_sub_mask	40
Coq.PArith.BinPos.Pos.lt_iff_add	40
Coq.PArith.BinPos.Pos.gt_iff_add	40
Coq.PArith.BinPos.Pos.compare_cont_refl	40	1.1.3.1.3.1.4.1.0	search with cache (only 1: rewrite compare_cont_spec; only 1: unfold compare; only 1: induction p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: auto).	1.36536097527	1989
Coq.PArith.BinPos.Pos.compare_cont_antisym	40
Coq.PArith.BinPos.Pos.compare_eq_iff	40
Coq.PArith.BinPos.Pos.compare_antisym	40
Coq.PArith.BinPos.Pos.compare_lt_iff	40	0.1.0.1.0	search with cache (only 1: unfold lt; only 1: destruct compare; only 1: easy'; only 1: easy'; only 1: easy').	0.0289931297302	7
Coq.PArith.BinPos.Pos.compare_le_iff	40	0.0.0.0.1	search with cache (only 1: unfold le; only 1: destruct compare; only 1: easy'; only 1: easy'; only 1: easy').	0.0318839550018	6
Coq.PArith.BinPos.Pos.gt_lt_iff	40
Coq.PArith.BinPos.Pos.gt_lt	40	0.0	search with cache (only 1: unfold lt, gt; only 1: now rewrite compare_antisym, CompOpp_iff).	0.0218279361725	2
Coq.PArith.BinPos.Pos.lt_gt	40	0.0	search with cache (only 1: unfold lt, gt; only 1: now rewrite compare_antisym, CompOpp_iff).	0.0218639373779	2
Coq.PArith.BinPos.Pos.ge_le_iff	40	3.0.1	search with cache (only 1: unfold le; only 1: unfold ge; only 1: now rewrite compare_antisym, CompOpp_iff).	0.230951070786	42
Coq.PArith.BinPos.Pos.ge_le	40	0.0	search with cache (only 1: unfold le, ge; only 1: now rewrite compare_antisym, CompOpp_iff).	0.0225751399994	2
Coq.PArith.BinPos.Pos.le_ge	40	0	search with cache (only 1: apply ge_le_iff).	0.0112390518188	1
Coq.PArith.BinPos.Pos.compare_succ_r	40
Coq.PArith.BinPos.Pos.compare_succ_l	40
Coq.PArith.BinPos.Pos.lt_succ_r	40
Coq.PArith.BinPos.Pos.lt_succ_diag_r	40
Coq.PArith.BinPos.Pos.compare_succ_succ	40
Coq.PArith.BinPos.Pos.le_1_l	40	2.7.0	search with cache (only 1: unfold gt, le, compare; only 1: rewrite compare_cont_spec; only 1: now destruct compare || now destruct p).	0.273823976517	111
Coq.PArith.BinPos.Pos.nlt_1_r	40	2.12.0	search with cache (only 1: unfold ge, lt, compare; only 1: rewrite compare_cont_spec; only 1: now destruct compare || now destruct p).	0.816373825073	558
Coq.PArith.BinPos.Pos.lt_1_succ	40	1	search with cache (only 1: now destruct p).	0.05668592453	28
Coq.PArith.BinPos.Pos.le_nlt	40	1.0	search with cache (only 1: unfold lt, le; only 1: now rewrite compare_antisym, CompOpp_iff).	0.750920057297	132
Coq.PArith.BinPos.Pos.lt_nle	40	2.5	search with cache (only 1: unfold lt, gt; only 1: now rewrite <- compare_nle_iff, compare_antisym, CompOpp_iff).	0.924808979034	198
Coq.PArith.BinPos.Pos.lt_le_incl	40	1.2.2	search with cache (only 1: unfold lt, le; only 1: rewrite compare_antisym; only 1: now do 2 destruct compare).	0.560315847397	89
Coq.PArith.BinPos.Pos.lt_lt_succ	40
Coq.PArith.BinPos.Pos.succ_lt_mono	40
Coq.PArith.BinPos.Pos.succ_le_mono	40	0.0.0.2.1	search with cache (only 1: unfold lt, le; only 1: rewrite compare_gt_iff; only 1: rewrite compare_gt_iff; only 1: unfold lt; only 1: now rewrite compare_succ_succ).	0.426462888718	46
Coq.PArith.BinPos.Pos.lt_trans	40
Coq.PArith.BinPos.Pos.lt_ind	40
Coq.PArith.BinPos.Pos.lt_strorder	40
Coq.PArith.BinPos.Pos.lt_compat	40	1	search with cache (only 1: solve_proper).	0.133072853088	21
Coq.PArith.BinPos.Pos.lt_total	40
Coq.PArith.BinPos.Pos.le_refl	40	0.3	search with cache (only 1: apply le_lteq; only 1: intuition).	0.0971400737762	22
Coq.PArith.BinPos.Pos.le_lt_trans	40
Coq.PArith.BinPos.Pos.lt_le_trans	40
Coq.PArith.BinPos.Pos.le_trans	40
Coq.PArith.BinPos.Pos.le_succ_l	40	0.2.15.1.0	search with cache (only 1: unfold le; only 1: rewrite compare_gt_iff; only 1: rewrite PeanoNat.Nat.lt_succ_r; only 1: unfold lt; only 1: now rewrite <- compare_nle_iff, compare_antisym, CompOpp_iff).	34.2338190079	17794
Coq.PArith.BinPos.Pos.le_antisym	40	6.2.4.4	search with cache (only 1: unfold lt, le; only 1: rewrite compare_antisym; only 1: rewrite compare_sub_mask; only 1: now case sub_mask_spec).	6.36300206184	3491
Coq.PArith.BinPos.Pos.le_preorder	40
Coq.PArith.BinPos.Pos.le_partorder	40
Coq.PArith.BinPos.Pos.add_compare_mono_l	40
Coq.PArith.BinPos.Pos.add_compare_mono_r	40
Coq.PArith.BinPos.Pos.lt_add_diag_r	40
Coq.PArith.BinPos.Pos.add_lt_mono_l	40
Coq.PArith.BinPos.Pos.add_lt_mono_r	40	1.0.1.0	search with cache (only 1: unfold lt; only 1: rewrite 2!(add_comm _ p); only 1: rewrite add_compare_mono_l; only 1: apply iff_refl).	0.0268039703369	6
Coq.PArith.BinPos.Pos.add_lt_mono	40
Coq.PArith.BinPos.Pos.add_le_mono_l	40	1.0.6	search with cache (only 1: unfold lt, le; only 1: rewrite add_compare_mono_l; only 1: now rewrite compare_antisym, CompOpp_iff).	0.181838035583	11
Coq.PArith.BinPos.Pos.add_le_mono_r	40	1.1.0	search with cache (only 1: unfold le; only 1: rewrite add_compare_mono_r; only 1: apply iff_refl).	0.0235657691956	5
Coq.PArith.BinPos.Pos.add_le_mono	40
Coq.PArith.BinPos.Pos.mul_compare_mono_l	40
Coq.PArith.BinPos.Pos.mul_compare_mono_r	40
Coq.PArith.BinPos.Pos.mul_lt_mono_l	40
Coq.PArith.BinPos.Pos.mul_lt_mono_r	40	2.0.5.0	search with cache (only 1: unfold lt; only 1: rewrite 2!(mul_comm _ p); only 1: rewrite mul_compare_mono_l; only 1: apply iff_refl).	0.196926832199	132
Coq.PArith.BinPos.Pos.mul_lt_mono	40
Coq.PArith.BinPos.Pos.mul_le_mono_l	40	2.1.0	search with cache (only 1: unfold le; only 1: rewrite mul_compare_mono_l; only 1: apply iff_refl).	0.0212650299072	6
Coq.PArith.BinPos.Pos.mul_le_mono_r	40	2.1.0	search with cache (only 1: unfold le; only 1: rewrite mul_compare_mono_r; only 1: apply iff_refl).	0.0199911594391	6
Coq.PArith.BinPos.Pos.mul_le_mono	40
Coq.PArith.BinPos.Pos.lt_add_r	40	1.3	search with cache (only 1: rewrite lt_iff_add; only 1: now exists q).	0.0198020935059	6
Coq.PArith.BinPos.Pos.lt_not_add_l	40
Coq.PArith.BinPos.Pos.pow_gt_1	40
Coq.PArith.BinPos.Pos.sub_1_r	40	0.0.0.1.0.0	search with cache (only 1: destruct p; only 1: simpl; only 1: now f_equal; only 1: reflexivity; only 1: simpl; only 1: now f_equal).	0.0278251171112	7
Coq.PArith.BinPos.Pos.pred_sub	40	0	search with cache (only 1: now destruct p).	0.0133218765259	1
Coq.PArith.BinPos.Pos.sub_succ_r	40
Coq.PArith.BinPos.Pos.sub_mask_pos'	40
Coq.PArith.BinPos.Pos.sub_mask_pos	40	4.0.0.0	search with cache (only 1: rewrite lt_iff_add; only 1: intros (r, Hr); only 1: exists r; only 1: now apply sub_mask_pos_iff).	0.0368201732635	13
Coq.PArith.BinPos.Pos.sub_add	40
Coq.PArith.BinPos.Pos.add_sub	40
Coq.PArith.BinPos.Pos.mul_sub_distr_l	40
Coq.PArith.BinPos.Pos.mul_sub_distr_r	40
Coq.PArith.BinPos.Pos.sub_lt_mono_l	40
Coq.PArith.BinPos.Pos.sub_compare_mono_l	40
Coq.PArith.BinPos.Pos.sub_compare_mono_r	40
Coq.PArith.BinPos.Pos.sub_lt_mono_r	40
Coq.PArith.BinPos.Pos.sub_decr	40
Coq.PArith.BinPos.Pos.add_sub_assoc	40
Coq.PArith.BinPos.Pos.sub_add_distr	40
Coq.PArith.BinPos.Pos.sub_sub_distr	40
Coq.PArith.BinPos.Pos.sub_xO_xO	40
Coq.PArith.BinPos.Pos.sub_xI_xI	40	0.1.0.1	search with cache (only 1: intros H; only 1: unfold sub; only 1: simpl; only 1: now destruct (sub_mask_pos n m H) as (p, ->)).	0.129945993423	24
Coq.PArith.BinPos.Pos.sub_xI_xO	40	1.0.3.0	search with cache (only 1: unfold sub; only 1: intros H; only 1: simpl; only 1: now destruct (sub_mask_pos n m H) as (p, ->)).	0.0946288108826	16
Coq.PArith.BinPos.Pos.sub_xO_xI	40	2.1.0.2.4.0.21.5.0.0	search with cache (only 1: unfold sub; only 1: simpl; only 1: rewrite sub_mask_carry_spec; only 1: case sub_mask_spec; only 1: auto; only 1: destruct r; only 1: auto; only 1: auto; only 1: auto; only 1: auto).	13.2662210464	24510
Coq.PArith.BinPos.Pos.sub_mask_neg_iff'	40	0.2.0.4.0.0.0.0.8	search with cache (only 1: rewrite lt_iff_add; only 1: split; only 1: case sub_mask_spec; only 1: discriminate; only 1: discriminate; only 1: intros r Hr _; only 1: now exists r; only 1: intros (r, <-); only 1: apply sub_mask_add_diag_r).	6.0597820282	4132
Coq.PArith.BinPos.Pos.sub_mask_neg	40	1.0	search with cache (only 1: rewrite lt_iff_add; only 1: apply sub_mask_neg_iff).	0.0339169502258	11
Coq.PArith.BinPos.Pos.sub_le	40
Coq.PArith.BinPos.Pos.sub_lt	40	0.0.0.0.0.27.5	search with cache (only 1: unfold le, sub; only 1: unfold lt; only 1: rewrite compare_sub_mask; only 1: destruct sub_mask; only 1: easy'; only 1: easy'; only 1: easy').	19.57523489	31058
Coq.PArith.BinPos.Pos.sub_diag	40	1.0.2.2.11.1.6.2	search with cache (only 1: unfold le, sub; only 1: case sub_mask_spec; only 1: auto; only 1: intros r H; only 1: contradict H; only 1: rewrite add_comm; only 1: auto using add_no_neutral; only 1: auto).	7.75325608253	11242
Coq.PArith.BinPos.Pos.size_nat_monotone	40
Coq.PArith.BinPos.Pos.size_gt	40
Coq.PArith.BinPos.Pos.size_le	40
Coq.PArith.BinPos.Pos.max_l	40
Coq.PArith.BinPos.Pos.max_r	40	3.1.0.0.0.0	search with cache (only 1: intros x y H; only 1: unfold max; only 1: case compare_spec; only 1: now subst; only 1: auto; only 1: now rewrite <- compare_lt_iff, compare_nge_iff).	0.146950006485	23
Coq.PArith.BinPos.Pos.min_l	40
Coq.PArith.BinPos.Pos.min_r	40	1.3.0.0.6.1	search with cache (only 1: intros x y H; only 1: unfold le, min; only 1: case compare_spec; only 1: now subst; only 1: now rewrite <- compare_lt_iff, compare_nge_iff; only 1: auto).	3.48051404953	2643
Coq.PArith.BinPos.Pos.max_1_l	40
Coq.PArith.BinPos.Pos.max_1_r	40	1.1.0.2.0.1.0.0	search with cache (only 1: unfold max; only 1: case compare_spec; only 1: auto; only 1: intros H; only 1: apply lt_nle in H; only 1: elim H; only 1: apply le_1_l; only 1: auto).	0.523231983185	396
Coq.PArith.BinPos.Pos.min_1_l	40	1.19	search with cache (only 1: apply min_r || apply min_l; only 1: apply le_1_l).	0.444420814514	463
Coq.PArith.BinPos.Pos.min_1_r	40	1.2	search with cache (only 1: apply min_r; only 1: apply le_1_l).	0.084851026535	67
Coq.PArith.BinPos.Pos.succ_max_distr	40
Coq.PArith.BinPos.Pos.succ_min_distr	40
Coq.PArith.BinPos.Pos.add_max_distr_l	40
Coq.PArith.BinPos.Pos.add_max_distr_r	40
Coq.PArith.BinPos.Pos.add_min_distr_l	40	0.0.14	search with cache (only 1: apply min_monotone; only 1: intros x x'; only 1: apply add_le_mono_l).	0.638710021973	281
Coq.PArith.BinPos.Pos.add_min_distr_r	40
Coq.PArith.BinPos.Pos.mul_max_distr_l	40	4.0.8	search with cache (only 1: apply max_monotone; only 1: intros x x'; only 1: now apply mul_le_mono_l).	1.8267891407	573
Coq.PArith.BinPos.Pos.mul_max_distr_r	40
Coq.PArith.BinPos.Pos.mul_min_distr_l	40	0.0.12	search with cache (only 1: apply min_monotone; only 1: intros x x'; only 1: apply mul_le_mono_l).	2.16362500191	570
Coq.PArith.BinPos.Pos.mul_min_distr_r	40
Coq.PArith.BinPos.Pos.iter_op_succ	40
Coq.PArith.BinPos.Pos.of_nat_succ	40
Coq.PArith.BinPos.Pos.pred_of_succ_nat	40
Coq.PArith.BinPos.Pos.succ_of_nat	40	1.1.3.2.4.2	search with cache (only 1: induction n; only 1: now f_equal; only 1: simpl; only 1: induction n; only 1: auto using add_carry_add; only 1: now rewrite IHn).	0.779803991318	591
Coq.PArith.BinPos.Pos.sqrtrem_step_spec	40
Coq.PArith.BinPos.Pos.sqrtrem_spec	40
Coq.PArith.BinPos.Pos.sqrt_spec	40
Coq.PArith.BinPos.Pos.divide_add_cancel_l	40
Coq.PArith.BinPos.Pos.divide_xO_xI	40
Coq.PArith.BinPos.Pos.divide_xO_xO	40
Coq.PArith.BinPos.Pos.divide_mul_l	40
Coq.PArith.BinPos.Pos.divide_mul_r	40
Coq.PArith.BinPos.Pos.ggcdn_gcdn	40
Coq.PArith.BinPos.Pos.ggcd_gcd	40
Coq.PArith.BinPos.Pos.ggcdn_correct_divisors	40
Coq.PArith.BinPos.Pos.ggcd_correct_divisors	40
Coq.PArith.BinPos.Pos.gcd_divide_l	40
Coq.PArith.BinPos.Pos.gcd_divide_r	40
Coq.PArith.BinPos.Pos.gcdn_greatest	40
Coq.PArith.BinPos.Pos.gcd_greatest	40
Coq.PArith.BinPos.Pos.ggcd_greatest	40
Coq.PArith.BinPos.Peqb_true_eq	40
Coq.PArith.BinPos.Pcompare_eq_Gt	40	5.0	search with cache (only 1: unfold Pos.gt; only 1: reflexivity).	0.0453460216522	18
Coq.PArith.BinPos.Pminus_mask_Gt	40
Coq.PArith.BinPos.Pplus_minus	40	3.1.0.1.4.7	search with cache (only 1: intros; only 1: apply Pos.gt_lt in H; only 1: unfold Pos.sub; only 1: destruct (Pos.sub_mask_pos p q H) as (r, U); only 1: rewrite U; only 1: now apply Pos.sub_mask_pos_iff).	1.19651389122	1817
Coq.PArith.BinPos.Dcompare	40	1.1.1.8.48	search with cache (only 1: intros H; only 1: reflexivity || destruct H; only 1: now intuition; only 1: now intuition; only 1: now intuition).	2.70158314705	2946
Coq.Arith.Between.bet_eq	40
Coq.Arith.Between.between_le	40	11.12	search with cache (only 1: fix le_div2 1; only 1: trivial).	1.9752509594	1815
Coq.Arith.Between.between_Sk_l	40	0.0.19.4.2.4.0.0	search with cache (only 1: intro n; only 1: induction 1; only 1: intro H; only 1: false_hyp H PeanoNat.Nat.lt_irrefl; only 1: intros; only 1: PeanoNat.Nat.le_elim H1; only 1: auto with arith; only 1: auto with arith).	13.0101919174	17195
Coq.Arith.Between.between_restr	40	0.0.0.0	search with cache (only 1: induction 1 as [| * [| ]]; only 1: auto with arith; only 1: auto with arith; only 1: auto with arith).	0.0319600105286	4
Coq.Arith.Between.exists_le_S	40
Coq.Arith.Between.exists_S_le	40
Coq.Arith.Between.in_int_intro	40	0.0.5.1	search with cache (only 1: intro n; only 1: constructor; only 1: auto; only 1: auto).	0.120151996613	46
Coq.Arith.Between.in_int_lt	40
Coq.Arith.Between.in_int_p_Sq	40
Coq.Arith.Between.in_int_S	40	0.0	search with cache (only 1: intros p q r []; only 1: auto with arith).	0.0188539028168	2
Coq.Arith.Between.in_int_Sp_q	40	0.0	search with cache (only 1: intros p q r []; only 1: auto with arith).	0.017991065979	2
Coq.Arith.Between.between_in_int	40
Coq.Arith.Between.in_int_between	40	2.2.1.0	search with cache (only 1: induction 1; only 1: intros; only 1: auto with arith; only 1: auto with arith).	0.0746049880981	11
Coq.Arith.Between.exists_in_int	40	2.0.43	search with cache (only 1: fix le_div2 1; only 1: intros; only 1: auto with arith).	5.44760489464	12025
Coq.Arith.Between.in_int_exists	40
Coq.Arith.Between.between_or_exists	40
Coq.Arith.Between.between_not_exists	40
Coq.Arith.Between.nth_le	40
Coq.Arith.Between.event_O	40
Coq.Arith.Wf_nat.well_founded_ltof	40
Coq.Arith.Wf_nat.well_founded_gtof	40	0.0.0.0.0.1.0.2.0.3.0.0.0.0.0.0	search with cache (only 1: assert (H : forall (n : nat) (a : A), f a < n -> Acc ltof a); only 1: induction n; only 1: intros; only 1: absurd (f a < 0); only 1: auto with arith; only 1: auto with arith; only 1: intros a Ha; only 1: apply Acc_intro; only 1: intros b Hb; only 1: apply IHn; only 1: apply Nat.lt_le_trans with (f a); only 1: auto with arith; only 1: auto with arith; only 1: intros a; only 1: apply (H (S (f a))); only 1: auto with arith).	29.0545251369	23169
Coq.Arith.Wf_nat.induction_ltof1	40
Coq.Arith.Wf_nat.induction_gtof1	40
Coq.Arith.Wf_nat.induction_ltof2	40
Coq.Arith.Wf_nat.induction_gtof2	40	0	search with cache (only 1: exact induction_ltof1).	0.00686383247375	1
Coq.Arith.Wf_nat.well_founded_lt_compat	40
Coq.Arith.Wf_nat.lt_wf	40
Coq.Arith.Wf_nat.lt_wf_rec1	40
Coq.Arith.Wf_nat.lt_wf_rec	40	0	search with cache (only 1: exact (fun (p : nat) P F => induction_ltof1 nat (fun m : nat => m) P F p)).	0.00739288330078	1
Coq.Arith.Wf_nat.lt_wf_ind	40	0	search with cache (only 1: exact (fun (p : nat) P F => induction_ltof2 nat (fun m : nat => m) P F p)).	0.0074520111084	1
Coq.Arith.Wf_nat.gt_wf_rec	40	1	search with cache (only 1: exact (fun (p : nat) P F => induction_ltof2 nat (fun m : nat => m) P F p)).	0.0205070972443	22
Coq.Arith.Wf_nat.lt_wf_double_rec	40
Coq.Arith.Wf_nat.lt_wf_double_ind	40	0.1.1.1.1.2	search with cache (only 1: intros P Hrec p; only 1: pattern p; only 1: apply lt_wf_rec; only 1: intros n H q; only 1: apply lt_wf_rec; only 1: auto with arith).	0.404988050461	196
Coq.Arith.Wf_nat.acc_lt_rel	40
Coq.Arith.Wf_nat.well_founded_inv_lt_rel_compat	40
Coq.Arith.Wf_nat.well_founded_inv_rel_inv_lt_rel	40
Coq.Arith.Wf_nat.dec_inh_nat_subset_has_unique_least_element	40
Coq.Arith.Factorial.lt_O_fact	40
Coq.Arith.Factorial.fact_neq_0	40
Coq.Arith.Factorial.fact_le	40
Coq.Arith.PeanoNat.Nat.bi_induction	40	41.5.3	search with cache (only 1: induction n; only 1: intuition; only 1: firstorder).	25.5717389584	40582
Coq.Arith.PeanoNat.Nat.recursion_wd	40
Coq.Arith.PeanoNat.Nat.recursion_0	40	1.0	search with cache (only 1: simpl; only 1: trivial).	0.0144059658051	3
Coq.Arith.PeanoNat.Nat.recursion_succ	40
Coq.Arith.PeanoNat.Nat.pred_succ	40	0.1.0.0	search with cache (only 1: simpl; only 1: induction n; only 1: trivial; only 1: trivial).	0.0210270881653	5
Coq.Arith.PeanoNat.Nat.pred_0	40	1.0	search with cache (only 1: simpl; only 1: trivial).	0.0157129764557	3
Coq.Arith.PeanoNat.Nat.one_succ	40	0	search with cache (only 1: auto).	0.0104370117188	1
Coq.Arith.PeanoNat.Nat.two_succ	40	0	search with cache (only 1: reflexivity).	0.0101118087769	1
Coq.Arith.PeanoNat.Nat.add_0_l	40	0	search with cache (only 1: auto).	0.00908017158508	1
Coq.Arith.PeanoNat.Nat.add_succ_l	40	0.0.2.0.0.0	search with cache (only 1: simpl; only 1: induction n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: auto).	0.0291619300842	8
Coq.Arith.PeanoNat.Nat.sub_0_r	40	0.1.4	search with cache (only 1: induction n; only 1: trivial; only 1: trivial).	0.0165991783142	8
Coq.Arith.PeanoNat.Nat.sub_succ_r	40
Coq.Arith.PeanoNat.Nat.mul_0_l	40	0	search with cache (only 1: auto).	0.0109488964081	1
Coq.Arith.PeanoNat.Nat.mul_succ_l	40
Coq.Arith.PeanoNat.Nat.lt_succ_r	40	0.0.1.1.0.7.8.4.1	search with cache (only 1: constructor; only 1: exact (le_pred (S n) (S m)); only 1: revert m; only 1: induction 1; only 1: induction n; only 1: auto; only 1: constructor; only 1: constructor; only 1: trivial).	18.0278179646	25327
Coq.Arith.PeanoNat.Nat.eqb_eq	40
Coq.Arith.PeanoNat.Nat.leb_le	40
Coq.Arith.PeanoNat.Nat.ltb_lt	40
Coq.Arith.PeanoNat.Nat.eq_dec	40	0	search with cache (only 1: decide equality).	0.0150938034058	1
Coq.Arith.PeanoNat.Nat.compare_eq_iff	40
Coq.Arith.PeanoNat.Nat.compare_lt_iff	40
Coq.Arith.PeanoNat.Nat.compare_le_iff	40
Coq.Arith.PeanoNat.Nat.compare_antisym	40	2.1.0.2.0.0.0.2.0.1.1	search with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: easy; only 1: simpl; only 1: easy; only 1: destruct m; only 1: easy; only 1: simpl; only 1: revert m; only 1: easy).	4.41065502167	3868
Coq.Arith.PeanoNat.Nat.compare_succ	40	0.1	search with cache (only 1: simpl; only 1: trivial).	0.0151009559631	3
Coq.Arith.PeanoNat.Nat.max_l	40	0.1.2.0.0.0.0.1.1.1.0	search with cache (only 1: induction n; only 1: simpl; only 1: inversion 1; only 1: trivial; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	10.0864570141	6730
Coq.Arith.PeanoNat.Nat.max_r	40	0.1.2.0.1.0.0.0.1.0	search with cache (only 1: induction n; only 1: simpl; only 1: trivial; only 1: destruct m; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	7.09753084183	4295
Coq.Arith.PeanoNat.Nat.min_l	40	0.1.2.0.1.0.0.0.1.0	search with cache (only 1: induction n; only 1: simpl; only 1: trivial; only 1: destruct m; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	7.09089112282	5007
Coq.Arith.PeanoNat.Nat.min_r	40	0.1.2.0.0.0.0.1.1.1.0	search with cache (only 1: induction n; only 1: simpl; only 1: inversion 1; only 1: trivial; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	7.60994005203	5729
Coq.Arith.PeanoNat.Nat.pow_neg_r	40	32	search with cache (only 1: now nzsimpl).	0.551362991333	552
Coq.Arith.PeanoNat.Nat.pow_0_r	40	23	search with cache (only 1: reflexivity).	0.197318077087	255
Coq.Arith.PeanoNat.Nat.pow_succ_r	40	1	search with cache (only 1: reflexivity).	0.0569229125977	24
Coq.Arith.PeanoNat.Nat.square_spec	40	2.2	search with cache (only 1: assert (succ_r : forall x y, x + S y = S (x + y)) by now induction x; only 1: now f_equal).	0.0420620441437	14
Coq.Arith.PeanoNat.Nat.Private_Parity.Even_1	40
Coq.Arith.PeanoNat.Nat.Private_Parity.Even_2	40
Coq.Arith.PeanoNat.Nat.Private_Parity.Odd_0	40	2.3.1.5.14.3	search with cache (only 1: intro H1; only 1: elim H1; only 1: intro n; only 1: nzsimpl; only 1: apply neq_sym; only 1: apply neq_succ_0).	1.39659905434	2668
Coq.Arith.PeanoNat.Nat.Private_Parity.Odd_2	40
Coq.Arith.PeanoNat.Nat.even_spec	40
Coq.Arith.PeanoNat.Nat.odd_spec	40	3.4	search with cache (only 1: fix even_spec 1; only 1: trivial).	0.113692045212	18
Coq.Arith.PeanoNat.Nat.divmod_spec	40
Coq.Arith.PeanoNat.Nat.div_mod	40
Coq.Arith.PeanoNat.Nat.mod_bound_pos	40
Coq.Arith.PeanoNat.Nat.sqrt_iter_spec	40
Coq.Arith.PeanoNat.Nat.sqrt_specif	40
Coq.Arith.PeanoNat.Nat.sqrt_neg	40	9	search with cache (only 1: inversion 1).	0.0654458999634	10
Coq.Arith.PeanoNat.Nat.log2_iter_spec	40
Coq.Arith.PeanoNat.Nat.log2_spec	40
Coq.Arith.PeanoNat.Nat.log2_nonpos	40	2.8	search with cache (only 1: inversion 1; only 1: trivial).	0.54579615593	289
Coq.Arith.PeanoNat.Nat.gcd_divide	40
Coq.Arith.PeanoNat.Nat.gcd_divide_l	40	2.0.1.0.0.1.3	search with cache (only 1: intros [| a] b; only 1: now exists 0; only 1: simpl; only 1: fold (b mod S a); only 1: destruct (gcd_divide (b mod S a) (S a)) as (H, H'); only 1: set (a' := S a) in *; only 1: auto).	0.69046497345	483
Coq.Arith.PeanoNat.Nat.gcd_divide_r	40	0.2	search with cache (only 1: intros; only 1: apply gcd_divide).	0.0471429824829	27
Coq.Arith.PeanoNat.Nat.gcd_greatest	40	5.2.5	search with cache (only 1: fix gcd_divide 1; only 1: intros; only 1: auto).	0.805990934372	598
Coq.Arith.PeanoNat.Nat.gcd_nonneg	40	59	search with cache (only 1: apply le_0_l).	3.93559002876	6363
Coq.Arith.PeanoNat.Nat.div2_double	40	1.0.1.3.14.3.7	search with cache (only 1: simpl; only 1: nzsimpl; only 1: induction n; only 1: now rewrite add_0_l; only 1: simpl; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	3.541451931	2639
Coq.Arith.PeanoNat.Nat.div2_succ_double	40	0.1.0.1.2.1	search with cache (only 1: simpl; only 1: nzsimpl; only 1: induction n; only 1: now f_equal; only 1: rewrite add_succ_r; only 1: now f_equal).	0.249039888382	60
Coq.Arith.PeanoNat.Nat.le_div2	40
Coq.Arith.PeanoNat.Nat.lt_div2	40
Coq.Arith.PeanoNat.Nat.div2_decr	40	0.3.4	search with cache (only 1: revert n; only 1: fix le_div2 1; only 1: trivial).	0.0252809524536	10
Coq.Arith.PeanoNat.Nat.double_twice	40	0.9.0	search with cache (only 1: intro n; only 1: simpl; only 1: now rewrite !add_0_r).	0.0983719825745	52
Coq.Arith.PeanoNat.Nat.testbit_0_l	40	0.2.19.6	search with cache (only 1: intros; only 1: induction n; only 1: easy; only 1: easy).	1.30972218513	1756
Coq.Arith.PeanoNat.Nat.testbit_odd_0	40	2.9.2.5.19.0.10.2	search with cache (only 1: nzsimpl'; only 1: simpl; only 1: unfold odd; only 1: apply eq_true_iff_eq; only 1: split; only 1: trivial; only 1: fix odd_spec 1; only 1: trivial).	10.6770808697	19400
Coq.Arith.PeanoNat.Nat.testbit_even_0	40	2.4.9.3.11.4.3.0	search with cache (only 1: unfold testbit; only 1: unfold odd; only 1: simpl; only 1: apply eq_true_iff_eq; only 1: split; only 1: fix odd_spec 1; only 1: trivial; only 1: discriminate).	5.60553598404	9942
Coq.Arith.PeanoNat.Nat.testbit_odd_succ'	40
Coq.Arith.PeanoNat.Nat.testbit_even_succ'	40
Coq.Arith.PeanoNat.Nat.shiftr_specif	40
Coq.Arith.PeanoNat.Nat.shiftl_specif_high	40	2.4.3	search with cache (only 1: unfold testbit, odd; only 1: fix even_spec 1; only 1: trivial).	0.55611205101	277
Coq.Arith.PeanoNat.Nat.shiftl_spec_low	40	6.7.0.2.3	search with cache (only 1: intros m; only 1: unfold testbit, odd; only 1: intro H; only 1: fix odd_spec 1; only 1: trivial).	7.32762002945	5872
Coq.Arith.PeanoNat.Nat.div2_bitwise	40	0.5.17	search with cache (only 1: intro H; only 1: fix le_div2 1; only 1: now f_equal).	2.21875905991	1848
Coq.Arith.PeanoNat.Nat.odd_bitwise	40	0.7.2.1	search with cache (only 1: unfold odd; only 1: intro H; only 1: fix odd_spec 1; only 1: trivial).	2.46608304977	1452
Coq.Arith.PeanoNat.Nat.testbit_bitwise_1	40
Coq.Arith.PeanoNat.Nat.testbit_bitwise_2	40
Coq.Arith.PeanoNat.Nat.land_spec	40
Coq.Arith.PeanoNat.Nat.ldiff_spec	40	0.0.1	search with cache (only 1: apply testbit_bitwise_1; only 1: destr_bool; only 1: trivial).	0.0241129398346	4
Coq.Arith.PeanoNat.Nat.lor_spec	40
Coq.Arith.PeanoNat.Nat.lxor_spec	40
Coq.Arith.PeanoNat.Nat.div2_spec	40	8	search with cache (only 1: eauto).	0.0191431045532	9
Coq.Arith.PeanoNat.Nat.testbit_neg_r	40	10	search with cache (only 1: inversion H).	0.121407985687	25
Coq.Arith.PeanoNat.Nat.tail_add_spec	40
Coq.Arith.PeanoNat.Nat.tail_addmul_spec	40
Coq.Arith.PeanoNat.Nat.tail_mul_spec	40
Coq.Arith.PeanoNat.test	40	6.0	search with cache (only 1: intros a b Ha Hb; only 1: Nat.order).	0.0233941078186	8
Coq.Arith.Compare.discrete_nat	40
Coq.Logic.PropFacts.injection_is_involution_in_Prop	40
Coq.Logic.JMeq.JMeq_sym	40	3.0.22	search with cache (only 1: intros; only 1: destruct H; only 1: trivial).	0.186005115509	836
Coq.Logic.JMeq.JMeq_trans	40	1.0.0	search with cache (only 1: intros; only 1: destruct H; only 1: trivial).	0.00956296920776	4
Coq.Logic.JMeq.JMeq_ind	40
Coq.Logic.JMeq.JMeq_rec	40	0.0.0	search with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := H'); only 1: trivial).	0.0118999481201	3
Coq.Logic.JMeq.JMeq_rect	40	0.0.0	search with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := H'); only 1: trivial).	0.0122230052948	3
Coq.Logic.JMeq.JMeq_ind_r	40
Coq.Logic.JMeq.JMeq_rec_r	40	0.1.0	search with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := JMeq_sym H'); only 1: trivial).	0.0128121376038	4
Coq.Logic.JMeq.JMeq_rect_r	40	0.1.0	search with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := JMeq_sym H'); only 1: trivial).	0.0130290985107	4
Coq.Logic.JMeq.JMeq_congr	40	0.1.0	search with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := H'); only 1: trivial).	0.0143980979919	4
Coq.Logic.JMeq.JMeq_eq_dep_id	40	1.0.1	search with cache (only 1: intros; only 1: destruct H; only 1: apply eq_dep_intro).	0.013393163681	5
Coq.Logic.JMeq.eq_dep_id_JMeq	40	1.0	search with cache (only 1: destruct 1; only 1: trivial).	0.011735200882	3
Coq.Logic.JMeq.eq_dep_JMeq	40	0.0	search with cache (only 1: destruct 1; only 1: trivial).	0.0116069316864	2
Coq.Logic.JMeq.eq_dep_strictly_stronger_JMeq	40
Coq.Logic.JMeq.JMeq_eq_dep	40	0.4.9.0	search with cache (only 1: destruct 1; only 1: intros; only 1: dependent rewrite H; only 1: trivial).	0.322329044342	302
Coq.Logic.ExtensionalityFacts.diagonal_projs_same_behavior	40	1.0.48.11	search with cache (only 1: intro x; only 1: intro H; only 1: destruct H; only 1: trivial).	1.34811401367	12609
Coq.Logic.ExtensionalityFacts.diagonal_inverse1	40
Coq.Logic.ExtensionalityFacts.diagonal_inverse2	40	0.0.0.0	search with cache (only 1: split; only 1: trivial; only 1: destruct b as (a1, a2, []); only 1: reflexivity).	0.0154240131378	4
Coq.Logic.ExtensionalityFacts.FunctExt_iff_EqDeltaProjs	40
Coq.Logic.ExtensionalityFacts.FunctExt_UniqInverse	40
Coq.Logic.ExtensionalityFacts.UniqInverse_EqDeltaProjs	40
Coq.Logic.ExtensionalityFacts.FunctExt_iff_UniqInverse	40
Coq.Logic.ExtensionalityFacts.FunctExt_BijComp	40
Coq.Logic.ExtensionalityFacts.BijComp_FunctExt	40
Coq.Logic.Hurkens.Generic.Omega	40
Coq.Logic.Hurkens.Generic.lemma1	40
Coq.Logic.Hurkens.Generic.lemma2	40
Coq.Logic.Hurkens.Generic.paradox	40
Coq.Logic.Hurkens.NoRetractToImpredicativeUniverse.paradox	40
Coq.Logic.Hurkens.NoRetractToModalProposition.strength	40
Coq.Logic.Hurkens.NoRetractToModalProposition.modal	40	2.12.12	search with cache (only 1: intro H; only 1: destruct H; only 1: eauto).	0.225276947021	568
Coq.Logic.Hurkens.NoRetractToModalProposition.Forall	40	2.17	search with cache (only 1: red; only 1: eauto).	0.0584688186646	189
Coq.Logic.Hurkens.NoRetractToModalProposition.paradox	40
Coq.Logic.Hurkens.NoRetractToNegativeProp.paradox	40
Coq.Logic.Hurkens.NoRetractFromSmallPropositionToProp.mparadox	40	2.2.2.1.2.2.2.1.2.2.4	search with cache (only 1: intros B; only 1: unshelve refine ((fun h => _) (NoRetractToModalProposition.paradox _ _ _ _ _ _ _ _)); only 1: easy; only 1: exact bool; only 1: easy; only 1: easy; only 1: easy; only 1: exact h; only 1: easy; only 1: easy; only 1: easy).	28.2361950874	4869
Coq.Logic.Hurkens.NoRetractFromSmallPropositionToProp.paradox	40
Coq.Logic.Hurkens.NoRetractFromTypeToProp.paradox	40
Coq.Logic.Hurkens.TypeNeqSmallType.up_down	40
Coq.Logic.Hurkens.TypeNeqSmallType.paradox	40
Coq.Logic.Hurkens.PropNeqType.paradox	40
Coq.Logic.Eqdep_dec.trans_sym_eq	40	0.31.33.37	search with cache (only 1: intro; only 1: intros h1 h2; only 1: destruct h2; only 1: reflexivity).	3.19361495972	23106
Coq.Logic.Eqdep_dec.nu_constant	40
Coq.Logic.Eqdep_dec.nu_left_inv_on	40
Coq.Logic.Eqdep_dec.eq_proofs_unicity_on	40
Coq.Logic.Eqdep_dec.K_dec_on	40
Coq.Logic.Eqdep_dec.inj_right_pair_on	40
Coq.Logic.Eqdep_dec.K_dec_type	40
Coq.Logic.Eqdep_dec.eq_rect_eq_dec	40	1.3.2.3.1.0.1.2.0	search with cache (only 1: intros A eq_dec x P H p; only 1: elim p using K_dec; only 1: intros; only 1: case (eq_dec x0 y); only 1: left; only 1: assumption; only 1: right; only 1: assumption; only 1: trivial).	18.3754689693	14148
Coq.Logic.Eqdep_dec.DecidableEqDep.inj_pairP2	40
Coq.Logic.Eqdep_dec.inj_pair2_eq_dec	40
Coq.Logic.Eqdep_dec.UIP_refl_unit	40
Coq.Logic.Eqdep_dec.UIP_refl_bool	40
Coq.Logic.Eqdep_dec.UIP_refl_nat	40
Coq.Logic.ConstructiveEpsilon.linear_search_smallest	40
Coq.Logic.ConstructiveEpsilon.epsilon_smallest	40
Coq.Logic.ConstructiveEpsilon.P_implies_acc	40	18.3	search with cache (only 1: split; only 1: abstract now inversion 1).	2.60741496086	1470
Coq.Logic.ConstructiveEpsilon.P_eventually_implies_acc	40
Coq.Logic.ConstructiveEpsilon.P_eventually_implies_acc_ex	40
Coq.Logic.ConstructiveEpsilon.acc_implies_P_eventually	40
Coq.Logic.ConstructiveEpsilon.constructive_indefinite_ground_description_nat_Acc	40
Coq.Logic.ConstructiveEpsilon.P'_decidable	40	52.6	search with cache (only 1: intro x; only 1: eauto).	12.299546957	29224
Coq.Logic.ConstructiveEpsilon.constructive_indefinite_ground_description	40
Coq.Logic.ConstructiveEpsilon.constructive_definite_ground_description	40	1.0.0.0.0.3.0.0.0.29.3.1	search with cache (only 1: intro H; only 1: assert (H1 : exists n : nat, P' n); only 1: firstorder  (subst; auto); only 1: exists (f x); only 1: unfold P'; only 1: rewrite gof_eq_id; only 1: assumption; only 1: apply (constructive_indefinite_ground_description_nat P' P'_decidable) in H1; only 1: destruct H1 as [n Hn]; only 1: exists (g n); only 1: unfold P' in Hn; only 1: assumption).	39.5407440662	82209
Coq.Logic.ChoiceFacts.functional_rel_reification_and_rel_choice_imp_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_imp_rel_choice	40
Coq.Logic.ChoiceFacts.fun_choice_imp_functional_rel_reification	40
Coq.Logic.ChoiceFacts.fun_choice_iff_rel_choice_and_functional_rel_reification	40
Coq.Logic.ChoiceFacts.rel_choice_and_proof_irrel_imp_guarded_rel_choice	40
Coq.Logic.ChoiceFacts.rel_choice_indep_of_general_premises_imp_guarded_rel_choice	40
Coq.Logic.ChoiceFacts.guarded_rel_choice_imp_rel_choice	40
Coq.Logic.ChoiceFacts.subset_types_imp_guarded_rel_choice_iff_rel_choice	40
Coq.Logic.ChoiceFacts.guarded_iff_omniscient_rel_choice	40
Coq.Logic.ChoiceFacts.guarded_fun_choice_imp_indep_of_general_premises	40
Coq.Logic.ChoiceFacts.guarded_fun_choice_imp_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_indep_general_prem_imp_guarded_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_indep_general_prem_iff_guarded_fun_choice	40
Coq.Logic.ChoiceFacts.omniscient_fun_choice_imp_small_drinker	40
Coq.Logic.ChoiceFacts.omniscient_fun_choice_imp_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_small_drinker_imp_omniscient_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_small_drinker_iff_omniscient_fun_choice	40
Coq.Logic.ChoiceFacts.guarded_iff_omniscient_fun_choice	40
Coq.Logic.ChoiceFacts.iota_imp_constructive_definite_description	40
Coq.Logic.ChoiceFacts.epsilon_imp_constructive_indefinite_description	40
Coq.Logic.ChoiceFacts.constructive_indefinite_description_and_small_drinker_imp_epsilon	40
Coq.Logic.ChoiceFacts.epsilon_imp_small_drinker	40	1.0.1.3.0.4	search with cache (only 1: intros D_epsilon A P H; only 1: destruct H; only 1: destruct D_epsilon with (P := P) as (x, H1); only 1: auto; only 1: exists x; only 1: apply H1).	0.242920875549	184
Coq.Logic.ChoiceFacts.constructive_indefinite_description_and_small_drinker_iff_epsilon	40
Coq.Logic.ChoiceFacts.classical_denumerable_description_imp_fun_choice	40
Coq.Logic.ChoiceFacts.dep_non_dep_functional_choice	40	18.3.3.20	search with cache (only 1: intro H; only 1: intros EQ; only 1: intros A B; only 1: apply H).	10.1629879475	26859
Coq.Logic.ChoiceFacts.non_dep_dep_functional_choice	40
Coq.Logic.ChoiceFacts.functional_choice_to_inhabited_forall_commute	40
Coq.Logic.ChoiceFacts.inhabited_forall_commute_to_functional_choice	40
Coq.Logic.ChoiceFacts.dep_non_dep_functional_rel_reification	40
Coq.Logic.ChoiceFacts.non_dep_dep_functional_rel_reification	40
Coq.Logic.ChoiceFacts.dep_iff_non_dep_functional_rel_reification	40
Coq.Logic.ChoiceFacts.relative_non_contradiction_of_indefinite_descr	40
Coq.Logic.ChoiceFacts.constructive_indefinite_descr_fun_choice	40
Coq.Logic.ChoiceFacts.relative_non_contradiction_of_definite_descr	40
Coq.Logic.ChoiceFacts.constructive_definite_descr_fun_reification	40
Coq.Logic.ChoiceFacts.constructive_definite_descr_excluded_middle	40
Coq.Logic.ChoiceFacts.fun_reification_descr_computational_excluded_middle_in_prop_context	40
Coq.Logic.ChoiceFacts.functional_choice_imp_functional_dependent_choice	40
Coq.Logic.ChoiceFacts.functional_dependent_choice_imp_functional_countable_choice	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_prop_repr	40	0.7	search with cache (only 1: intros A P; only 1: firstorder using PredExt_imp_PropExt, PredExt_imp_PropFunExt, PropExt_and_PropFunExt_imp_PredExt).	2.14570307732	9
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_pred_repr	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_function_repr	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_excluded_middle	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_relational_choice	40
Coq.Logic.ChoiceFacts.gen_setoid_fun_choice_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_gen_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_iff_gen_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_simple_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.simple_setoid_fun_choice_imp_setoid_fun_choice	40	2.3.1.3.2	search with cache (only 1: intros A B GenSetoidFunChoice R T Hequiv Hcompat Hex; only 1: apply GenSetoidFunChoice; only 1: easy; only 1: intros; only 1: firstorder).	2.6635529995	1006
Coq.Logic.ChoiceFacts.setoid_fun_choice_iff_simple_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_functional_rel_reification	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_repr_fun_choice	40
Coq.Logic.ChoiceFacts.functional_rel_reification_and_repr_fun_choice_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.functional_rel_reification_and_repr_fun_choice_iff_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_ext_functions_repr_and_excluded_middle_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_functional_choice_first_characterization	40
Coq.Logic.ChoiceFacts.fun_choice_and_ext_pred_ext_and_proof_irrel_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_functional_choice_second_characterization	40
Coq.Logic.PropExtensionality.proof_irrelevance	40
Coq.Logic.StrictProp.Spr1_inj	40	4.2.20.108	search with cache (only 1: destruct a, b; only 1: simpl in *; only 1: subst; only 1: trivial).	1.4603331089	14860
Coq.Logic.ClassicalFacts.prop_degen_ext	40
Coq.Logic.ClassicalFacts.prop_degen_em	40
Coq.Logic.ClassicalFacts.prop_ext_em_degen	40
Coq.Logic.ClassicalFacts.provable_prop_ext	40	13.0.0.9.10	search with cache (only 1: intros Ext EM A; only 1: apply Ext; only 1: split; only 1: exact (fun _ => I); only 1: trivial).	0.333531141281	1878
Coq.Logic.ClassicalFacts.prop_ext_A_eq_A_imp_A	40	53	search with cache (only 1: firstorder using PredExt_imp_PropExt, PredExt_imp_PropFunExt, PropExt_and_PropFunExt_imp_PredExt).	1.41134285927	7193
Coq.Logic.ClassicalFacts.prop_ext_retract_A_A_imp_A	40
Coq.Logic.ClassicalFacts.ext_prop_fixpoint	40
Coq.Logic.ClassicalFacts.aux	40
Coq.Logic.ClassicalFacts.ext_prop_dep_proof_irrel_gen	40
Coq.Logic.ClassicalFacts.ext_prop_dep_proof_irrel_cc	40
Coq.Logic.ClassicalFacts.ext_prop_dep_proof_irrel_cic	40
Coq.Logic.ClassicalFacts.p2p1	40
Coq.Logic.ClassicalFacts.p2p2	40
Coq.Logic.ClassicalFacts.proof_irrelevance_cc	40
Coq.Logic.ClassicalFacts.wp2p1	40
Coq.Logic.ClassicalFacts.wp2p2	40
Coq.Logic.ClassicalFacts.wproof_irrelevance_cc	40
Coq.Logic.ClassicalFacts.proof_irrelevance_cci	40
Coq.Logic.ClassicalFacts.wem_proof_irrelevance_cci	40
Coq.Logic.ClassicalFacts.excluded_middle_Godel_Dummett	40
Coq.Logic.ClassicalFacts.Godel_Dummett_iff_right_distr_implication_over_disjunction	40
Coq.Logic.ClassicalFacts.Godel_Dummett_weak_excluded_middle	40
Coq.Logic.ClassicalFacts.weak_excluded_middle_iff_classical_de_morgan_law	40
Coq.Logic.ClassicalFacts.independence_general_premises_right_distr_implication_over_disjunction	40
Coq.Logic.ClassicalFacts.independence_general_premises_Godel_Dummett	40
Coq.Logic.ClassicalFacts.independence_general_premises_drinker	40
Coq.Logic.ClassicalFacts.excluded_middle_independence_general_premises	40
Coq.Logic.ClassicalFacts.unrestricted_minimization_entails_excluded_middle	40
Coq.Logic.ClassicalFacts.excluded_middle_entails_unrestricted_minimization	40
Coq.Logic.ClassicalFacts.undecidable_predicate_with_the_minimization_property	40
Coq.Logic.ClassicalFacts.representative_boolean_partition_imp_excluded_middle	40
Coq.Logic.ClassicalFacts.excluded_middle_imp_representative_boolean_partition	40
Coq.Logic.ClassicalFacts.excluded_middle_iff_representative_boolean_partition	40
Coq.Logic.ProofIrrelevanceFacts.ProofIrrelevanceTheory.Eq_rect_eq.eq_rect_eq	40
Coq.Logic.ProofIrrelevanceFacts.ProofIrrelevanceTheory.subset_eq_compat	40
Coq.Logic.ProofIrrelevanceFacts.ProofIrrelevanceTheory.subsetT_eq_compat	40	0.0.1.9.0	search with cache (only 1: intros; only 1: rewrite M.proof_irrelevance with (p1 := q) (p2 := (eq_rect x P p y H)); only 1: apply eq_dep_eq; only 1: elim H using eq_indd; only 1: reflexivity).	0.448733091354	319
Coq.Logic.FunctionalExtensionality.equal_f	40	1.1.4	search with cache (only 1: intros; only 1: destruct H; only 1: trivial).	0.0173451900482	24
Coq.Logic.FunctionalExtensionality.equal_f_dep	40	0.0.4	search with cache (only 1: intros; only 1: rewrite H; only 1: auto).	0.0175399780273	22
Coq.Logic.FunctionalExtensionality.functional_extensionality	40
Coq.Logic.FunctionalExtensionality.forall_extensionality	40
Coq.Logic.FunctionalExtensionality.forall_extensionalityP	40	2.1.0	search with cache (only 1: apply functional_extensionality in H; only 1: destruct H; only 1: reflexivity).	0.0131859779358	6
Coq.Logic.FunctionalExtensionality.forall_extensionalityS	40	2.1.0	search with cache (only 1: apply functional_extensionality in H; only 1: destruct H; only 1: reflexivity).	0.0127248764038	6
Coq.Logic.FunctionalExtensionality.functional_extensionality_dep_good_refl	40
Coq.Logic.FunctionalExtensionality.forall_sig_eq_rect	40
Coq.Logic.FunctionalExtensionality.forall_eq_rect_comp	40
Coq.Logic.FunctionalExtensionality.f_equal__functional_extensionality_dep_good	40
Coq.Logic.FunctionalExtensionality.f_equal__functional_extensionality_dep_good__fun	40	3.5.0	search with cache (only 1: apply forall_eq_rect with (H := H); only 1: rewrite functional_extensionality_dep_good_refl; only 1: reflexivity).	0.0628459453583	63
Coq.Logic.FunctionalExtensionality.eta_expansion_dep	40	9	search with cache (only 1: reflexivity).	0.00882983207703	10
Coq.Logic.FunctionalExtensionality.eta_expansion	40	9	search with cache (only 1: reflexivity).	0.00897812843323	10
Coq.Logic.HLevels.forall_hprop	40
Coq.Logic.HLevels.and_hprop	40
Coq.Logic.HLevels.impl_hprop	40	0.0.2.1.0	search with cache (only 1: intros; only 1: intros p q; only 1: apply functional_extensionality_dep; only 1: intro x; only 1: apply H).	0.0167038440704	8
Coq.Logic.HLevels.false_hprop	40	0.2	search with cache (only 1: intros p q; only 1: destruct p, q).	0.00929093360901	4
Coq.Logic.HLevels.true_hprop	40	11.0.2	search with cache (only 1: intros p q; only 1: destruct p, q; only 1: trivial).	0.122144937515	313
Coq.Logic.HLevels.not_hprop	40	0.5.1.0	search with cache (only 1: intros p q; only 1: intro x; only 1: apply functional_extensionality_dep; only 1: contradiction).	0.0146169662476	10
Coq.Logic.HLevels.hset_hprop	40
Coq.Logic.HLevels.eq_trans_cancel	40
Coq.Logic.HLevels.hset_hOneType	40
Coq.Logic.HLevels.hprop_hprop	40
Coq.Logic.HLevels.hprop_hset	40
Coq.Logic.EqdepFacts.eq_dep_sym	40	1.4.18	search with cache (only 1: intros; only 1: destruct H; only 1: reflexivity).	0.0962290763855	365
Coq.Logic.EqdepFacts.eq_dep_trans	40	0.0	search with cache (only 1: destruct 1; only 1: auto).	0.00834989547729	2
Coq.Logic.EqdepFacts.eq_dep1_dep	40
Coq.Logic.EqdepFacts.eq_dep_dep1	40	3.64.1	search with cache (only 1: destruct 1; only 1: exists eq_refl; only 1: reflexivity).	1.66618490219	12507
Coq.Logic.EqdepFacts.eq_sigT_eq_dep	40	1.78	search with cache (only 1: inversion 1; only 1: reflexivity).	7.02455210686	38738
Coq.Logic.EqdepFacts.eq_dep_eq_sigT	40	4.3.0	search with cache (only 1: intros; only 1: rewrite H; only 1: reflexivity).	0.0158848762512	10
Coq.Logic.EqdepFacts.eq_sigT_iff_eq_dep	40	0.15.0.0.14.16	search with cache (only 1: split; only 1: intros; only 1: dependent rewrite H; only 1: apply eq_dep_intro; only 1: destruct 1; only 1: reflexivity).	1.88627910614	7302
Coq.Logic.EqdepFacts.eq_sig_eq_dep	40	0.1.7	search with cache (only 1: intros; only 1: dependent rewrite H; only 1: auto using eq_sigT_eq_dep, eq_dep_eq_sigT).	0.0347428321838	24
Coq.Logic.EqdepFacts.eq_dep_eq_sig	40	2.5.0	search with cache (only 1: intros; only 1: rewrite H; only 1: auto using eq_sigT_eq_dep, eq_dep_eq_sigT).	0.0209898948669	10
Coq.Logic.EqdepFacts.eq_sig_iff_eq_dep	40	0.14.0.0.13.2	search with cache (only 1: split; only 1: intros; only 1: dependent rewrite H; only 1: apply eq_dep_intro; only 1: destruct 1; only 1: reflexivity).	1.16066598892	3254
Coq.Logic.EqdepFacts.eq_sigT_sig_eq	40
Coq.Logic.EqdepFacts.eq_sigT_fst	40	6.0.2.0	search with cache (only 1: intros; only 1: change_no_check x2 with (projT1 (existT P x2 H2)); only 1: destruct H; only 1: split).	0.103224039078	155
Coq.Logic.EqdepFacts.eq_sigT_snd	40
Coq.Logic.EqdepFacts.eq_sig_fst	40	3.16.0	search with cache (only 1: intros; only 1: dependent rewrite H; only 1: split).	2.36417198181	3887
Coq.Logic.EqdepFacts.eq_sig_snd	40
Coq.Logic.EqdepFacts.eq_rect_eq_on__eq_dep1_eq_on	40	11.3.10.25	search with cache (only 1: intros h1 h2; only 1: destruct 1; only 1: rewrite H; only 1: auto using eq_sigT_eq_dep, eq_dep_eq_sigT).	1.272990942	3080
Coq.Logic.EqdepFacts.eq_rect_eq_on__eq_dep_eq_on	40
Coq.Logic.EqdepFacts.eq_dep_eq_on__UIP_on	40
Coq.Logic.EqdepFacts.UIP_on__UIP_refl_on	40	8.2.0	search with cache (only 1: red; only 1: intros; only 1: auto).	0.122883081436	309
Coq.Logic.EqdepFacts.UIP_refl_on__Streicher_K_on	40	3.10.3.1.4	search with cache (only 1: intros; only 1: intro UIP; only 1: intro eq_dep_eq; only 1: rewrite H; only 1: apply UIP).	2.07520914078	7206
Coq.Logic.EqdepFacts.Streicher_K_on__eq_rect_eq_on	40	4.0.0	search with cache (only 1: intro; only 1: intro; only 1: auto).	0.0137209892273	7
Coq.Logic.EqdepFacts.UIP_shift_on	40
Coq.Logic.EqdepFacts.eq_dep_eq_on__inj_pair2_on	40	0.0	search with cache (only 1: red; only 1: auto using eq_sigT_eq_dep, eq_dep_eq_sigT).	0.0155401229858	2
Coq.Logic.EqdepFacts.f_eq_dep	40	1.1	search with cache (only 1: destruct 1; only 1: trivial).	0.0329079627991	14
Coq.Logic.EqdepFacts.eq_dep_non_dep	40	0.1	search with cache (only 1: destruct 1; only 1: trivial).	0.0267810821533	15
Coq.Logic.EqdepFacts.f_eq_dep_non_dep	40	0.1	search with cache (only 1: destruct 1; only 1: reflexivity).	0.02485704422	13
Coq.Logic.PropExtensionalityFacts.PredExt_imp_PropExt	40
Coq.Logic.PropExtensionalityFacts.PredExt_imp_PropFunExt	40
Coq.Logic.PropExtensionalityFacts.PropExt_and_PropFunExt_imp_PredExt	40	10	search with cache (only 1: auto).	0.0852620601654	132
Coq.Logic.PropExtensionalityFacts.PropExt_and_PropFunExt_iff_PredExt	40
Coq.Logic.PropExtensionalityFacts.PropExt_imp_ProvPropExt	40	8	search with cache (only 1: firstorder using PredExt_imp_PropExt, PredExt_imp_PropFunExt, PropExt_and_PropFunExt_imp_PredExt).	0.583068847656	12
Coq.Logic.PropExtensionalityFacts.PropExt_imp_RefutPropExt	40	13	search with cache (only 1: firstorder using PredExt_imp_PropExt, PredExt_imp_PropFunExt, PropExt_and_PropFunExt_imp_PredExt).	0.653578996658	254
Coq.Logic.Berardi.AC_IF	40
Coq.Logic.Berardi.AC	40
Coq.Logic.Berardi.L1	40
Coq.Logic.Berardi.retract_pow_U_U	40
Coq.Logic.Berardi.not_has_fixpoint	40
Coq.Logic.Berardi.classical_proof_irrelevance	40
Coq.Logic.Decidable.dec_not_not	40	3.6.0.0.7.4.2.0.0	search with cache (only 1: intro A; only 1: unfold not; only 1: intro H1; only 1: elim H1; only 1: intros H H'; only 1: exact H; only 1: unfold not; only 1: intros h1 h2; only 1: destruct (h2 h1)).	3.15231323242	16180
Coq.Logic.Decidable.dec_True	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.00823783874512	2
Coq.Logic.Decidable.dec_False	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.00794005393982	2
Coq.Logic.Decidable.dec_or	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0200381278992	2
Coq.Logic.Decidable.dec_and	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0242130756378	2
Coq.Logic.Decidable.dec_not	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0128338336945	2
Coq.Logic.Decidable.dec_imp	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0182781219482	2
Coq.Logic.Decidable.dec_iff	40	1.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0281698703766	3
Coq.Logic.Decidable.not_not	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0122802257538	2
Coq.Logic.Decidable.not_or	40	0	search with cache (only 1: tauto).	0.0120491981506	1
Coq.Logic.Decidable.not_and	40	0.1	search with cache (only 1: unfold decidable; only 1: tauto).	0.0223879814148	3
Coq.Logic.Decidable.not_imp	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0217609405518	2
Coq.Logic.Decidable.imp_simp	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.01615691185	2
Coq.Logic.Decidable.not_iff	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0462138652802	2
Coq.Logic.Decidable.not_true_iff	40	1.1.4	search with cache (only 1: split; only 1: auto; only 1: auto).	0.0154559612274	9
Coq.Logic.Decidable.not_false_iff	40	0	search with cache (only 1: tauto).	0.00964188575745	1
Coq.Logic.Decidable.not_not_iff	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0181648731232	2
Coq.Logic.Decidable.contrapositive	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0212268829346	2
Coq.Logic.Decidable.or_not_l_iff_1	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0234460830688	2
Coq.Logic.Decidable.or_not_l_iff_2	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0745768547058	2
Coq.Logic.Decidable.or_not_r_iff_1	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0258779525757	2
Coq.Logic.Decidable.or_not_r_iff_2	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0267088413239	2
Coq.Logic.Decidable.imp_not_l	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0282979011536	2
Coq.Logic.Decidable.not_or_iff	40	0	search with cache (only 1: tauto).	0.0197620391846	1
Coq.Logic.Decidable.not_and_iff	40	1	search with cache (only 1: tauto).	0.0163869857788	2
Coq.Logic.Decidable.not_imp_iff	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0337069034576	2
Coq.Logic.Decidable.not_imp_rev_iff	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0336980819702	2
Coq.Logic.Decidable.dec_functional_relation	40
Coq.Logic.WeakFan.Y_unique	40
Coq.Logic.WeakFan.Y_approx	40	4.31.5	search with cache (only 1: intros H; only 1: fix even_spec 1; only 1: firstorder).	27.5792181492	54562
Coq.Logic.WeakFan.WeakFanTheorem	40
Coq.MSets.MSetRBT.MakeRaw.singleton_spec	40	1.0.2.48	search with cache (only 1: compute; only 1: intuition; only 1: inv; only 1: L.MO.order).	2.75533390045	4673
Coq.MSets.MSetRBT.MakeRaw.singleton_ok	40	0.0	search with cache (only 1: unfold singleton; only 1: intuition_in).	0.0202238559723	2
Coq.MSets.MSetRBT.MakeRaw.makeBlack_spec	40
Coq.MSets.MSetRBT.MakeRaw.makeRed_spec	40	0.1.0.0	search with cache (only 1: destruct s; only 1: intuition_in; only 1: simpl; only 1: intuition_in).	0.215188980103	12
Coq.MSets.MSetRBT.MakeRaw.makeBlack_ok	40	0.0.1.0	search with cache (only 1: destruct s; only 1: intuition; only 1: simpl; only 1: intuition_in).	0.120837926865	5
Coq.MSets.MSetRBT.MakeRaw.makeRed_ok	40	4.1.0.0.0	search with cache (only 1: destruct s; only 1: ok; only 1: ok; only 1: simpl; only 1: auto).	0.338806867599	10
Coq.MSets.MSetRBT.MakeRaw.rmatch	40
Coq.MSets.MSetRBT.MakeRaw.rrmatch	40
Coq.MSets.MSetRBT.MakeRaw.rrmatch'	40	0.1.0.0.0.0.0.0.0.0.0.0.1.0.1.0	search with cache (only 1: destruct t as [| [| ] l x r]; only 1: simpl; only 1: now constructor; only 1: simpl; only 1: destruct l as [| [| ] ll lx lr], r as [| [| ] rl rx rr]; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: simpl; only 1: now constructor).	1.46286606789	1284
Coq.MSets.MSetRBT.MakeRaw.lbal_match	40
Coq.MSets.MSetRBT.MakeRaw.rbal_match	40	0	search with cache (only 1: exact (rrmatch _ _ _)).	0.0155999660492	1
Coq.MSets.MSetRBT.MakeRaw.rbal'_match	40
Coq.MSets.MSetRBT.MakeRaw.lbalS_match	40
Coq.MSets.MSetRBT.MakeRaw.rbalS_match	40	0.48.55	search with cache (only 1: revert l; only 1: intros l'; only 1: exact (rmatch _ _ _)).	13.5033819675	23916
Coq.MSets.MSetRBT.MakeRaw.lbal_spec	40
Coq.MSets.MSetRBT.MakeRaw.lbal_ok	40
Coq.MSets.MSetRBT.MakeRaw.rbal_spec	40
Coq.MSets.MSetRBT.MakeRaw.rbal_ok	40
Coq.MSets.MSetRBT.MakeRaw.rbal'_spec	40
Coq.MSets.MSetRBT.MakeRaw.rbal'_ok	40
Coq.MSets.MSetRBT.MakeRaw.ins_spec	40
Coq.MSets.MSetRBT.MakeRaw.ins_ok	40
Coq.MSets.MSetRBT.MakeRaw.add_spec'	40
Coq.MSets.MSetRBT.MakeRaw.add_spec	40	0.0	search with cache (only 1: unfold add; only 1: now autorew).	0.0470061302185	2
Coq.MSets.MSetRBT.MakeRaw.add_ok	40	0	search with cache (only 1: eauto with *).	0.0193610191345	1
Coq.MSets.MSetRBT.MakeRaw.lbalS_spec	40
Coq.MSets.MSetRBT.MakeRaw.lbalS_ok	40
Coq.MSets.MSetRBT.MakeRaw.rbalS_spec	40
Coq.MSets.MSetRBT.MakeRaw.rbalS_ok	40
Coq.MSets.MSetRBT.MakeRaw.append_rr_match	40	2.11	search with cache (only 1: simpl; only 1: exact (rmatch _ _ _)).	0.496465921402	295
Coq.MSets.MSetRBT.MakeRaw.append_bb_match	40	0	search with cache (only 1: exact (rmatch _ _ _)).	0.0161049365997	1
Coq.MSets.MSetRBT.MakeRaw.append_spec	40
Coq.MSets.MSetRBT.MakeRaw.append_ok	40
Coq.MSets.MSetRBT.MakeRaw.del_spec	40
Coq.MSets.MSetRBT.MakeRaw.del_ok	40
Coq.MSets.MSetRBT.MakeRaw.remove_spec	40
Coq.MSets.MSetRBT.MakeRaw.remove_ok	40	14	search with cache (only 1: ok).	2.56188201904	919
Coq.MSets.MSetRBT.MakeRaw.delmin_spec	40
Coq.MSets.MSetRBT.MakeRaw.remove_min_spec1	40
Coq.MSets.MSetRBT.MakeRaw.remove_min_spec2	40
Coq.MSets.MSetRBT.MakeRaw.remove_min_ok	40
Coq.MSets.MSetRBT.MakeRaw.treeify_zero_spec	40	1.1.1	search with cache (only 1: intros a b; only 1: simpl; only 1: now simpl).	0.0366730690002	6
Coq.MSets.MSetRBT.MakeRaw.treeify_one_spec	40	8.1.15.6	search with cache (only 1: intro n; only 1: induction n as [| n IH]; only 1: easy; only 1: now f_equal).	2.02742314339	2023
Coq.MSets.MSetRBT.MakeRaw.treeify_cont_spec	40
Coq.MSets.MSetRBT.MakeRaw.treeify_aux_spec	40
Coq.MSets.MSetRBT.MakeRaw.plength_aux_spec	40
Coq.MSets.MSetRBT.MakeRaw.plength_spec	40
Coq.MSets.MSetRBT.MakeRaw.treeify_elements	40
Coq.MSets.MSetRBT.MakeRaw.treeify_spec	40
Coq.MSets.MSetRBT.MakeRaw.treeify_ok	40
Coq.MSets.MSetRBT.MakeRaw.filter_aux_elements	40
Coq.MSets.MSetRBT.MakeRaw.filter_elements	40
Coq.MSets.MSetRBT.MakeRaw.filter_spec	40
Coq.MSets.MSetRBT.MakeRaw.filter_ok	40
Coq.MSets.MSetRBT.MakeRaw.partition_aux_spec	40
Coq.MSets.MSetRBT.MakeRaw.partition_spec	40
Coq.MSets.MSetRBT.MakeRaw.partition_spec1	40
Coq.MSets.MSetRBT.MakeRaw.partition_spec2	40	0	search with cache (only 1: now rewrite partition_spec).	0.019966840744	1
Coq.MSets.MSetRBT.MakeRaw.partition_ok1	40
Coq.MSets.MSetRBT.MakeRaw.partition_ok2	40	0.1	search with cache (only 1: rewrite partition_spec; only 1: now apply filter_ok).	0.0687758922577	3
Coq.MSets.MSetRBT.MakeRaw.INV_init	40
Coq.MSets.MSetRBT.MakeRaw.INV_sym	40	1.1.1.1.1.4.5	search with cache (only 1: inversion_clear 1; only 1: repeat split; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial).	2.32775807381	1762
Coq.MSets.MSetRBT.MakeRaw.INV_drop	40
Coq.MSets.MSetRBT.MakeRaw.INV_eq	40
Coq.MSets.MSetRBT.MakeRaw.INV_lt	40
Coq.MSets.MSetRBT.MakeRaw.INV_rev	40
Coq.MSets.MSetRBT.MakeRaw.union_list_ok	40
Coq.MSets.MSetRBT.MakeRaw.linear_union_ok	40
Coq.MSets.MSetRBT.MakeRaw.fold_add_ok	40
Coq.MSets.MSetRBT.MakeRaw.union_ok	40
Coq.MSets.MSetRBT.MakeRaw.union_list_spec	40
Coq.MSets.MSetRBT.MakeRaw.linear_union_spec	40
Coq.MSets.MSetRBT.MakeRaw.fold_add_spec	40
Coq.MSets.MSetRBT.MakeRaw.union_spec'	40
Coq.MSets.MSetRBT.MakeRaw.union_spec	40	0.0.0.0.1.0.0.9	search with cache (only 1: intros; only 1: unfold union; only 1: destruct compare_height; only 1: apply linear_union_spec; only 1: rewrite fold_add_spec; only 1: tauto; only 1: rewrite fold_add_spec; only 1: tauto).	1.13486003876	453
Coq.MSets.MSetRBT.MakeRaw.inter_list_ok	40
Coq.MSets.MSetRBT.MakeRaw.linear_inter_ok	40
Coq.MSets.MSetRBT.MakeRaw.inter_ok	40
Coq.MSets.MSetRBT.MakeRaw.inter_list_spec	40
Coq.MSets.MSetRBT.MakeRaw.linear_inter_spec	40
Coq.MSets.MSetRBT.MakeRaw.mem_proper	40
Coq.MSets.MSetRBT.MakeRaw.inter_spec	40
Coq.MSets.MSetRBT.MakeRaw.diff_list_ok	40
Coq.MSets.MSetRBT.MakeRaw.diff_inter_ok	40
Coq.MSets.MSetRBT.MakeRaw.fold_remove_ok	40	0.0.0.2.0.0.0.0	search with cache (only 1: rewrite fold_spec, <- fold_left_rev_right; only 1: unfold elt in *; only 1: induction (rev (elements s1)); only 1: simpl; only 1: auto_tc; only 1: simpl; only 1: unfold flip in *; only 1: auto_tc).	0.0421938896179	10
Coq.MSets.MSetRBT.MakeRaw.diff_ok	40
Coq.MSets.MSetRBT.MakeRaw.diff_list_spec	40
Coq.MSets.MSetRBT.MakeRaw.linear_diff_spec	40
Coq.MSets.MSetRBT.MakeRaw.fold_remove_spec	40
Coq.MSets.MSetRBT.MakeRaw.diff_spec	40
Coq.MSets.MSetRBT.BalanceProps.rr_nrr_rb	40
Coq.MSets.MSetRBT.BalanceProps.arb_nrr_rb	40
Coq.MSets.MSetRBT.BalanceProps.arb_nr_rb	40
Coq.MSets.MSetRBT.BalanceProps.rb_maxdepth	40
Coq.MSets.MSetRBT.BalanceProps.rb_mindepth	40
Coq.MSets.MSetRBT.BalanceProps.maxdepth_upperbound	40
Coq.MSets.MSetRBT.BalanceProps.maxdepth_lowerbound	40	0.0.0.0.0.0.0.1	search with cache (only 1: intros H; only 1: apply Nat.log2_lt_pow2; only 1: destruct s; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: apply maxdepth_cardinal).	0.0506761074066	9
Coq.MSets.MSetRBT.BalanceProps.singleton_rb	40	60.0.23	search with cache (only 1: red; only 1: unfold singleton; only 1: eauto).	4.30806207657	15146
Coq.MSets.MSetRBT.BalanceProps.makeBlack_rb	40
Coq.MSets.MSetRBT.BalanceProps.makeRed_rr	40	2.1.3.1.0	search with cache (only 1: destruct t; only 1: invrb; only 1: simpl; only 1: invrb; only 1: auto).	0.645086050034	282
Coq.MSets.MSetRBT.BalanceProps.lbal_rb	40
Coq.MSets.MSetRBT.BalanceProps.rbal_rb	40
Coq.MSets.MSetRBT.BalanceProps.rbal'_rb	40
Coq.MSets.MSetRBT.BalanceProps.lbalS_rb	40
Coq.MSets.MSetRBT.BalanceProps.lbalS_arb	40
Coq.MSets.MSetRBT.BalanceProps.rbalS_rb	40
Coq.MSets.MSetRBT.BalanceProps.rbalS_arb	40
Coq.MSets.MSetRBT.BalanceProps.ifred_notred	40
Coq.MSets.MSetRBT.BalanceProps.ifred_or	40	2.0.1.0.0.0.6.1.0	search with cache (only 1: destruct s; only 1: simpl; only 1: right; only 1: trivial; only 1: descolor; only 1: simpl; only 1: left; only 1: intuition; only 1: now constructor).	1.80534601212	3055
Coq.MSets.MSetRBT.BalanceProps.ins_rr_rb	40
Coq.MSets.MSetRBT.BalanceProps.ins_arb	40
Coq.MSets.MSetRBT.BalanceProps.add_rb	40
Coq.MSets.MSetRBT.BalanceProps.append_arb_rb	40
Coq.MSets.MSetRBT.BalanceProps.del_arb	40	14	search with cache (only 1: auto).	2.42431497574	963
Coq.MSets.MSetRBT.BalanceProps.remove_rb	40
Coq.MSets.MSetRBT.BalanceProps.treeify_zero_rb	40	0.0.0	search with cache (only 1: intro; only 1: simpl; only 1: auto).	0.0264890193939	3
Coq.MSets.MSetRBT.BalanceProps.treeify_one_rb	40	0.0.3.0.9.0.37	search with cache (only 1: intros n m; only 1: simpl; only 1: destruct n; only 1: simpl; only 1: easy; only 1: simpl; only 1: auto).	0.854436159134	1970
Coq.MSets.MSetRBT.BalanceProps.treeify_cont_rb	40
Coq.MSets.MSetRBT.BalanceProps.treeify_aux_rb	40
Coq.MSets.MSetRBT.BalanceProps.treeify_rb	40
Coq.MSets.MSetRBT.BalanceProps.filter_rb	40	6.1	search with cache (only 1: unfold filter; only 1: now auto_tc).	0.0186169147491	9
Coq.MSets.MSetRBT.BalanceProps.partition_rb1	40	0.0.4.0	search with cache (only 1: rewrite partition_spec; only 1: simpl; only 1: unfold filter; only 1: auto_tc).	0.0407631397247	17
Coq.MSets.MSetRBT.BalanceProps.partition_rb2	40	1.0.4.0	search with cache (only 1: rewrite partition_spec; only 1: simpl; only 1: unfold filter; only 1: auto_tc).	0.0293650627136	9
Coq.MSets.MSetRBT.BalanceProps.fold_add_rb	40	0.1.0.1.0.1.0	search with cache (only 1: rewrite fold_spec, <- fold_left_rev_right; only 1: unfold elt in *; only 1: induction (rev (elements s1)); only 1: tauto; only 1: simpl; only 1: unfold flip in *; only 1: auto_tc).	0.0724420547485	28
Coq.MSets.MSetRBT.BalanceProps.fold_remove_rb	40	1.0.0.2.0.0.0.1	search with cache (only 1: rewrite fold_spec, <- fold_left_rev_right; only 1: unfold elt in *; only 1: induction (rev (elements s1)); only 1: simpl; only 1: auto_tc; only 1: simpl; only 1: unfold flip in *; only 1: auto_tc).	1.39595293999	921
Coq.MSets.MSetRBT.BalanceProps.union_rb	40	2.2.10.0.0.0	search with cache (only 1: unfold union; only 1: destruct compare_height; only 1: unfold linear_union; only 1: auto_tc; only 1: auto_tc; only 1: auto_tc).	23.0125160217	17219
Coq.MSets.MSetRBT.BalanceProps.inter_rb	40	0.0.2.0.0.0	search with cache (only 1: unfold inter; only 1: destruct compare_height; only 1: unfold linear_inter; only 1: auto_tc; only 1: auto_tc; only 1: auto_tc).	0.0374400615692	8
Coq.MSets.MSetRBT.BalanceProps.diff_rb	40
Coq.MSets.MSetRBT.Make.remove_min_spec1	40
Coq.MSets.MSetRBT.Make.remove_min_spec2	40
Coq.MSets.MSetPositive.PositiveSet.In_compat	40	1.0.0	search with cache (only 1: intros x x' Hx y y' Hy; only 1: rewrite Hx, Hy; only 1: intuition).	0.0509779453278	4
Coq.MSets.MSetPositive.PositiveSet.eq_equiv	40
Coq.MSets.MSetPositive.PositiveSet.mem_spec	40	10.5	search with cache (only 1: intro EQ; only 1: easy').	0.382168054581	338
Coq.MSets.MSetPositive.PositiveSet.mem_Leaf	40	0	search with cache (only 1: intuition).	0.0126829147339	1
Coq.MSets.MSetPositive.PositiveSet.empty_spec	40	2.0	search with cache (only 1: intros a b; only 1: intuition).	0.0147590637207	4
Coq.MSets.MSetPositive.PositiveSet.mem_node	40	0.41	search with cache (only 1: fix odd_spec 1; only 1: intuition).	18.6299130917	18397
Coq.MSets.MSetPositive.PositiveSet.is_empty_spec	40
Coq.MSets.MSetPositive.PositiveSet.subset_Leaf_s	40	8.0	search with cache (only 1: intuition; only 1: now N_as_OT.nzsimpl).	0.0717911720276	17
Coq.MSets.MSetPositive.PositiveSet.subset_spec	40	2.8	search with cache (only 1: fix even_spec 1; only 1: intuition).	0.321691989899	115
Coq.MSets.MSetPositive.PositiveSet.equal_subset	40
Coq.MSets.MSetPositive.PositiveSet.equal_spec	40
Coq.MSets.MSetPositive.PositiveSet.eq_dec	40
Coq.MSets.MSetPositive.PositiveSet.lex_Opp	40
Coq.MSets.MSetPositive.PositiveSet.compare_bool_inv	40
Coq.MSets.MSetPositive.PositiveSet.compare_inv	40
Coq.MSets.MSetPositive.PositiveSet.lex_Eq	40	1.2.9.0.2.24	search with cache (only 1: intros n m; only 1: revert m; only 1: induction n; only 1: now split; only 1: easy'; only 1: easy').	8.20951485634	5474
Coq.MSets.MSetPositive.PositiveSet.compare_bool_Eq	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: easy'; only 1: easy'; only 1: easy'; only 1: easy').	0.0469110012054	5
Coq.MSets.MSetPositive.PositiveSet.compare_equal	40
Coq.MSets.MSetPositive.PositiveSet.compare_gt	40
Coq.MSets.MSetPositive.PositiveSet.compare_eq	40
Coq.MSets.MSetPositive.PositiveSet.compare_spec	40	0.108	search with cache (only 1: fix sqrtrem_spec 1; only 1: auto using PeanoNat.Nat.Private_Tac.eq_sym).	16.4334261417	27716
Coq.MSets.MSetPositive.PositiveSet.ct_cxe	40
Coq.MSets.MSetPositive.PositiveSet.ct_xce	40	0.0.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0239191055298	4
Coq.MSets.MSetPositive.PositiveSet.ct_lxl	40	1.0.0.1.13	search with cache (only 1: intros; only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.127269983292	190
Coq.MSets.MSetPositive.PositiveSet.ct_gxg	40	0.0.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0152339935303	4
Coq.MSets.MSetPositive.PositiveSet.ct_xll	40	0.1.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0157160758972	5
Coq.MSets.MSetPositive.PositiveSet.ct_xgg	40	0.0.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0160710811615	4
Coq.MSets.MSetPositive.PositiveSet.ct_lex	40
Coq.MSets.MSetPositive.PositiveSet.ct_compare_bool	40	0.0.0.0.0.0.0.0.18	search with cache (only 1: destr_bool; only 1: ct; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: ct).	1.91528105736	1930
Coq.MSets.MSetPositive.PositiveSet.compare_x_Leaf	40	0.0.0.0.0.3	search with cache (only 1: induction s as [| l IHl o r IHr]; only 1: trivial; only 1: unfold compare, equal; only 1: case is_empty; only 1: reflexivity; only 1: reflexivity).	0.120587825775	17
Coq.MSets.MSetPositive.PositiveSet.compare_empty_x	40
Coq.MSets.MSetPositive.PositiveSet.compare_x_empty	40
Coq.MSets.MSetPositive.PositiveSet.ct_compare	40
Coq.MSets.MSetPositive.PositiveSet.lt_strorder	40
Coq.MSets.MSetPositive.PositiveSet.compare_compat_1	40
Coq.MSets.MSetPositive.PositiveSet.compare_compat	40
Coq.MSets.MSetPositive.PositiveSet.lt_compat	40	1.2.1.5.3.17	search with cache (only 1: intros x x' Hx y y' Hy; only 1: unfold eq in *; only 1: unfold lt; only 1: rewrite Hx; only 1: rewrite compare_inv, Hy, <- compare_inv; only 1: reflexivity).	30.5131189823	12643
Coq.MSets.MSetPositive.PositiveSet.add_spec	40
Coq.MSets.MSetPositive.PositiveSet.remove_spec	40
Coq.MSets.MSetPositive.PositiveSet.singleton_spec	40
Coq.MSets.MSetPositive.PositiveSet.union_spec	40
Coq.MSets.MSetPositive.PositiveSet.inter_spec	40
Coq.MSets.MSetPositive.PositiveSet.diff_spec	40
Coq.MSets.MSetPositive.PositiveSet.fold_spec	40
Coq.MSets.MSetPositive.PositiveSet.cardinal_spec	40
Coq.MSets.MSetPositive.PositiveSet.xfilter_spec	40
Coq.MSets.MSetPositive.PositiveSet.filter_spec	40
Coq.MSets.MSetPositive.PositiveSet.xforall_spec	40
Coq.MSets.MSetPositive.PositiveSet.for_all_spec	40
Coq.MSets.MSetPositive.PositiveSet.xexists_spec	40
Coq.MSets.MSetPositive.PositiveSet.exists_spec	40
Coq.MSets.MSetPositive.PositiveSet.partition_filter	40
Coq.MSets.MSetPositive.PositiveSet.partition_spec1	40
Coq.MSets.MSetPositive.PositiveSet.partition_spec2	40	0.0.0	search with cache (only 1: intros; only 1: rewrite partition_filter; only 1: reflexivity).	0.0182659626007	3
Coq.MSets.MSetPositive.PositiveSet.xelements_spec	40
Coq.MSets.MSetPositive.PositiveSet.elements_spec1	40
Coq.MSets.MSetPositive.PositiveSet.lt_rev_append	40
Coq.MSets.MSetPositive.PositiveSet.elements_spec2	40
Coq.MSets.MSetPositive.PositiveSet.elements_spec2w	40
Coq.MSets.MSetPositive.PositiveSet.choose_spec1	40
Coq.MSets.MSetPositive.PositiveSet.choose_spec2	40
Coq.MSets.MSetPositive.PositiveSet.choose_empty	40
Coq.MSets.MSetPositive.PositiveSet.choose_spec3'	40
Coq.MSets.MSetPositive.PositiveSet.choose_spec3	40
Coq.MSets.MSetPositive.PositiveSet.min_elt_spec1	40
Coq.MSets.MSetPositive.PositiveSet.min_elt_spec3	40
Coq.MSets.MSetPositive.PositiveSet.min_elt_spec2	40
Coq.MSets.MSetPositive.PositiveSet.max_elt_spec1	40
Coq.MSets.MSetPositive.PositiveSet.max_elt_spec3	40
Coq.MSets.MSetPositive.PositiveSet.max_elt_spec2	40
Coq.MSets.MSetFacts.WFactsOn.In_1	40
Coq.MSets.MSetFacts.WFactsOn.mem_1	40
Coq.MSets.MSetFacts.WFactsOn.mem_2	40
Coq.MSets.MSetFacts.WFactsOn.equal_1	40
Coq.MSets.MSetFacts.WFactsOn.equal_2	40
Coq.MSets.MSetFacts.WFactsOn.subset_1	40
Coq.MSets.MSetFacts.WFactsOn.subset_2	40
Coq.MSets.MSetFacts.WFactsOn.is_empty_1	40
Coq.MSets.MSetFacts.WFactsOn.is_empty_2	40
Coq.MSets.MSetFacts.WFactsOn.add_1	40
Coq.MSets.MSetFacts.WFactsOn.add_2	40	0.1.0	search with cache (only 1: intros; only 1: apply <- add_spec; only 1: auto with relations).	0.0252659320831	4
Coq.MSets.MSetFacts.WFactsOn.add_3	40
Coq.MSets.MSetFacts.WFactsOn.remove_1	40
Coq.MSets.MSetFacts.WFactsOn.remove_2	40	0.1.0	search with cache (only 1: intros; only 1: rewrite remove_spec; only 1: intuition).	0.09685587883	4
Coq.MSets.MSetFacts.WFactsOn.remove_3	40	0.2	search with cache (only 1: rewrite remove_spec; only 1: intuition).	0.118334054947	13
Coq.MSets.MSetFacts.WFactsOn.singleton_1	40
Coq.MSets.MSetFacts.WFactsOn.singleton_2	40	3.2.0	search with cache (only 1: rewrite singleton_spec; only 1: intros; only 1: intuition).	0.0310070514679	8
Coq.MSets.MSetFacts.WFactsOn.union_1	40
Coq.MSets.MSetFacts.WFactsOn.union_2	40	1.0	search with cache (only 1: rewrite union_spec; only 1: auto).	0.0285248756409	3
Coq.MSets.MSetFacts.WFactsOn.union_3	40	1.0	search with cache (only 1: rewrite union_spec; only 1: auto).	0.0279719829559	3
Coq.MSets.MSetFacts.WFactsOn.inter_1	40
Coq.MSets.MSetFacts.WFactsOn.inter_2	40	0.0	search with cache (only 1: rewrite inter_spec; only 1: intuition).	0.0259878635406	2
Coq.MSets.MSetFacts.WFactsOn.inter_3	40	0.0	search with cache (only 1: rewrite inter_spec; only 1: intuition).	0.0315170288086	2
Coq.MSets.MSetFacts.WFactsOn.diff_1	40
Coq.MSets.MSetFacts.WFactsOn.diff_2	40	0.0	search with cache (only 1: rewrite diff_spec; only 1: intuition).	0.0315208435059	2
Coq.MSets.MSetFacts.WFactsOn.diff_3	40	0.0	search with cache (only 1: rewrite diff_spec; only 1: intuition).	0.035973072052	2
Coq.MSets.MSetFacts.WFactsOn.filter_1	40
Coq.MSets.MSetFacts.WFactsOn.filter_2	40	0.0.1.0	search with cache (only 1: intros P; only 1: rewrite filter_spec; only 1: intuition; only 1: intuition).	0.0427370071411	5
Coq.MSets.MSetFacts.WFactsOn.filter_3	40	0.0.1.0	search with cache (only 1: intros P; only 1: rewrite filter_spec; only 1: intuition; only 1: intuition).	0.0490460395813	5
Coq.MSets.MSetFacts.WFactsOn.for_all_1	40
Coq.MSets.MSetFacts.WFactsOn.for_all_2	40
Coq.MSets.MSetFacts.WFactsOn.exists_1	40
Coq.MSets.MSetFacts.WFactsOn.exists_2	40
Coq.MSets.MSetFacts.WFactsOn.elements_1	40
Coq.MSets.MSetFacts.WFactsOn.elements_2	40
Coq.MSets.MSetFacts.WFactsOn.In_eq_iff	40	2.0.1	search with cache (only 1: intros E; only 1: rewrite E; only 1: intuition).	0.0302948951721	6
Coq.MSets.MSetFacts.WFactsOn.mem_iff	40	2.1.9.7	search with cache (only 1: red; only 1: split; only 1: apply <- mem_spec; only 1: apply -> mem_spec).	0.616375923157	395
Coq.MSets.MSetFacts.WFactsOn.not_mem_iff	40
Coq.MSets.MSetFacts.WFactsOn.equal_iff	40	5	search with cache (only 1: intuition).	0.0466628074646	6
Coq.MSets.MSetFacts.WFactsOn.subset_iff	40	19	search with cache (only 1: intuition).	0.398331880569	165
Coq.MSets.MSetFacts.WFactsOn.empty_iff	40
Coq.MSets.MSetFacts.WFactsOn.is_empty_iff	40	6	search with cache (only 1: intuition).	0.0471408367157	11
Coq.MSets.MSetFacts.WFactsOn.singleton_iff	40	1.0	search with cache (only 1: rewrite singleton_spec; only 1: intuition).	0.0274999141693	3
Coq.MSets.MSetFacts.WFactsOn.add_iff	40	4.0	search with cache (only 1: rewrite add_spec; only 1: intuition).	0.0373380184174	6
Coq.MSets.MSetFacts.WFactsOn.add_neq_iff	40	3.5.2.0	search with cache (only 1: rewrite add_spec; only 1: intuition; only 1: elim H; only 1: intuition).	1.33108401299	362
Coq.MSets.MSetFacts.WFactsOn.remove_iff	40	0.2	search with cache (only 1: rewrite remove_spec; only 1: intuition).	0.0371930599213	4
Coq.MSets.MSetFacts.WFactsOn.remove_neq_iff	40	1.0	search with cache (only 1: rewrite remove_spec; only 1: intuition).	0.0375289916992	3
Coq.MSets.MSetFacts.WFactsOn.for_all_iff	40	53	search with cache (only 1: intuition).	4.37794303894	5221
Coq.MSets.MSetFacts.WFactsOn.exists_iff	40	7.0	search with cache (only 1: intros; only 1: intuition).	0.083829164505	9
Coq.MSets.MSetFacts.WFactsOn.elements_iff	40	6	search with cache (only 1: intuition).	0.0566020011902	7
Coq.MSets.MSetFacts.WFactsOn.mem_b	40
Coq.MSets.MSetFacts.WFactsOn.empty_b	40
Coq.MSets.MSetFacts.WFactsOn.add_b	40
Coq.MSets.MSetFacts.WFactsOn.add_neq_b	40	0.0.0.0.0.1.1.2	search with cache (only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_iff s x y); only 1: destruct (mem y s); only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition).	25.9593260288	5312
Coq.MSets.MSetFacts.WFactsOn.remove_b	40
Coq.MSets.MSetFacts.WFactsOn.remove_neq_b	40
Coq.MSets.MSetFacts.WFactsOn.singleton_b	40
Coq.MSets.MSetFacts.WFactsOn.union_b	40
Coq.MSets.MSetFacts.WFactsOn.inter_b	40
Coq.MSets.MSetFacts.WFactsOn.diff_b	40
Coq.MSets.MSetFacts.WFactsOn.elements_b	40
Coq.MSets.MSetFacts.WFactsOn.filter_b	40
Coq.MSets.MSetFacts.WFactsOn.for_all_b	40
Coq.MSets.MSetFacts.WFactsOn.exists_b	40
Coq.MSets.MSetFacts.WFactsOn.In_m	40	6.15.5	search with cache (only 1: intros x x' Hx y y' Hy; only 1: rewrite Hx; only 1: auto).	22.94541502	3039
Coq.MSets.MSetFacts.WFactsOn.Empty_m	40
Coq.MSets.MSetFacts.WFactsOn.is_empty_m	40
Coq.MSets.MSetFacts.WFactsOn.mem_m	40
Coq.MSets.MSetFacts.WFactsOn.singleton_m	40
Coq.MSets.MSetFacts.WFactsOn.add_m	40
Coq.MSets.MSetFacts.WFactsOn.remove_m	40
Coq.MSets.MSetFacts.WFactsOn.union_m	40
Coq.MSets.MSetFacts.WFactsOn.inter_m	40
Coq.MSets.MSetFacts.WFactsOn.diff_m	40
Coq.MSets.MSetFacts.WFactsOn.Subset_m	40	5.12.0	search with cache (only 1: repeat red; only 1: intros; only 1: firstorder).	3.83777403831	759
Coq.MSets.MSetFacts.WFactsOn.subset_m	40
Coq.MSets.MSetFacts.WFactsOn.equal_m	40
Coq.MSets.MSetFacts.WFactsOn.SubsetSetoid	40
Coq.MSets.MSetFacts.WFactsOn.In_s_m	40	11.0.0	search with cache (only 1: intros x y H s s' H0; only 1: rewrite (In_eq_iff s H); only 1: firstorder).	0.69948887825	408
Coq.MSets.MSetFacts.WFactsOn.Empty_s_m	40	1.3.0.1.0	search with cache (only 1: repeat red; only 1: intuition; only 1: red in H0; only 1: red in H0; only 1: eauto with set).	0.0613629817963	10
Coq.MSets.MSetFacts.WFactsOn.add_s_m	40	0.0.1	search with cache (only 1: intros x x' Hx s s' Hs a; only 1: rewrite !add_iff, Hx, Hs; only 1: intuition).	0.150261878967	13
Coq.MSets.MSetFacts.WFactsOn.remove_s_m	40	0.0.1	search with cache (only 1: intros x x' Hx s s' Hs a; only 1: rewrite !remove_iff, Hx, Hs; only 1: intuition).	0.354177951813	36
Coq.MSets.MSetFacts.WFactsOn.union_s_m	40	0.0.0	search with cache (only 1: intros s1 s1' Hs1 s2 s2' Hs2 a; only 1: rewrite !union_spec, Hs1, Hs2; only 1: intuition).	0.0851459503174	3
Coq.MSets.MSetFacts.WFactsOn.inter_s_m	40	0.0.0	search with cache (only 1: intros s1 s1' Hs1 s2 s2' Hs2 a; only 1: rewrite !inter_spec, Hs1, Hs2; only 1: intuition).	0.0607421398163	3
Coq.MSets.MSetFacts.WFactsOn.diff_s_m	40	0.0.1	search with cache (only 1: intros s1 s1' Hs1 s2 s2' Hs2 a; only 1: rewrite !diff_spec, Hs1, Hs2; only 1: intuition).	0.120710134506	4
Coq.MSets.MSetFacts.WFactsOn.filter_equal	40
Coq.MSets.MSetFacts.WFactsOn.filter_subset	40	0.0.0	search with cache (only 1: intros f Hf s s' Hs a; only 1: rewrite !filter_spec, Hs by auto; only 1: intuition).	0.0613279342651	3
Coq.MSets.MSetFacts.WFactsOn.filter_ext	40
Coq.MSets.MSetProperties.WPropertiesOn.In_dec	40	0.1.0.3.0	search with cache (only 1: intros; only 1: generalize (F.mem_iff s x); only 1: case (mem x s); only 1: intuition; only 1: intuition).	0.502671003342	23
Coq.MSets.MSetProperties.WPropertiesOn.Add_Equal	40
Coq.MSets.MSetProperties.WPropertiesOn.equal_refl	40	5	search with cache (only 1: fsetdec).	0.176181077957	30
Coq.MSets.MSetProperties.WPropertiesOn.equal_sym	40	0	search with cache (only 1: intuition).	0.017128944397	1
Coq.MSets.MSetProperties.WPropertiesOn.equal_trans	40
Coq.MSets.MSetProperties.WPropertiesOn.subset_refl	40	7.0	search with cache (only 1: apply -> subset_spec; only 1: intuition).	0.0921759605408	25
Coq.MSets.MSetProperties.WPropertiesOn.subset_trans	40	1	search with cache (only 1: fsetdec).	0.0472218990326	2
Coq.MSets.MSetProperties.WPropertiesOn.subset_antisym	40	7.1	search with cache (only 1: intros; only 1: fsetdec).	0.0672979354858	10
Coq.MSets.MSetProperties.WPropertiesOn.subset_equal	40	0	search with cache (only 1: fsetdec).	0.0397009849548	1
Coq.MSets.MSetProperties.WPropertiesOn.subset_empty	40	5.2.0	search with cache (only 1: apply -> subset_spec; only 1: apply <- subset_spec; only 1: fsetdec).	0.073707818985	18
Coq.MSets.MSetProperties.WPropertiesOn.subset_remove_3	40	1.0	search with cache (only 1: intuition; only 1: fsetdec).	0.0668261051178	3
Coq.MSets.MSetProperties.WPropertiesOn.subset_diff	40	1	search with cache (only 1: fsetdec).	0.052267074585	2
Coq.MSets.MSetProperties.WPropertiesOn.subset_add_3	40	3.0	search with cache (only 1: intuition; only 1: fsetdec).	0.0895228385925	5
Coq.MSets.MSetProperties.WPropertiesOn.subset_add_2	40	0	search with cache (only 1: fsetdec).	0.0454530715942	1
Coq.MSets.MSetProperties.WPropertiesOn.in_subset	40	0	search with cache (only 1: fsetdec).	0.0402591228485	1
Coq.MSets.MSetProperties.WPropertiesOn.double_inclusion	40	4.4.4.1	search with cache (only 1: intuition; only 1: fsetdec; only 1: fsetdec; only 1: fsetdec).	6.06369614601	1728
Coq.MSets.MSetProperties.WPropertiesOn.empty_is_empty_1	40	1	search with cache (only 1: fsetdec).	0.0544788837433	2
Coq.MSets.MSetProperties.WPropertiesOn.empty_is_empty_2	40	0	search with cache (only 1: fsetdec).	0.0440361499786	1
Coq.MSets.MSetProperties.WPropertiesOn.add_equal	40	1.0.0	search with cache (only 1: red; only 1: intros; only 1: fsetdec).	0.264722824097	12
Coq.MSets.MSetProperties.WPropertiesOn.add_add	40	2	search with cache (only 1: fsetdec).	0.154985904694	3
Coq.MSets.MSetProperties.WPropertiesOn.remove_equal	40	3.0	search with cache (only 1: intros; only 1: fsetdec).	0.10617518425	5
Coq.MSets.MSetProperties.WPropertiesOn.Equal_remove	40	2	search with cache (only 1: fsetdec).	0.252856969833	3
Coq.MSets.MSetProperties.WPropertiesOn.add_remove	40	0	search with cache (only 1: fsetdec).	0.130223989487	1
Coq.MSets.MSetProperties.WPropertiesOn.remove_add	40	0	search with cache (only 1: fsetdec).	0.469342947006	1
Coq.MSets.MSetProperties.WPropertiesOn.singleton_equal_add	40	0	search with cache (only 1: fsetdec).	0.0885241031647	1
Coq.MSets.MSetProperties.WPropertiesOn.remove_singleton_empty	40	0	search with cache (only 1: fsetdec).	0.413823127747	1
Coq.MSets.MSetProperties.WPropertiesOn.union_sym	40	6	search with cache (only 1: fsetdec).	0.0952968597412	7
Coq.MSets.MSetProperties.WPropertiesOn.union_subset_equal	40	0	search with cache (only 1: fsetdec).	0.0734090805054	1
Coq.MSets.MSetProperties.WPropertiesOn.union_equal_1	40	0	search with cache (only 1: fsetdec).	0.105635881424	1
Coq.MSets.MSetProperties.WPropertiesOn.union_equal_2	40	0	search with cache (only 1: fsetdec).	0.103296041489	1
Coq.MSets.MSetProperties.WPropertiesOn.union_assoc	40	0	search with cache (only 1: fsetdec).	0.157413005829	1
Coq.MSets.MSetProperties.WPropertiesOn.add_union_singleton	40	0	search with cache (only 1: fsetdec).	0.0897390842438	1
Coq.MSets.MSetProperties.WPropertiesOn.union_add	40	0	search with cache (only 1: fsetdec).	0.167860984802	1
Coq.MSets.MSetProperties.WPropertiesOn.union_remove_add_1	40	0	search with cache (only 1: fsetdec).	0.298625946045	1
Coq.MSets.MSetProperties.WPropertiesOn.union_remove_add_2	40	0	search with cache (only 1: fsetdec).	0.271836042404	1
Coq.MSets.MSetProperties.WPropertiesOn.union_subset_1	40	0	search with cache (only 1: fsetdec).	0.0346732139587	1
Coq.MSets.MSetProperties.WPropertiesOn.union_subset_2	40	0	search with cache (only 1: fsetdec).	0.0359320640564	1
Coq.MSets.MSetProperties.WPropertiesOn.union_subset_3	40	0	search with cache (only 1: fsetdec).	0.0540781021118	1
Coq.MSets.MSetProperties.WPropertiesOn.union_subset_4	40	0	search with cache (only 1: fsetdec).	0.059287071228	1
Coq.MSets.MSetProperties.WPropertiesOn.union_subset_5	40	0	search with cache (only 1: fsetdec).	0.0562329292297	1
Coq.MSets.MSetProperties.WPropertiesOn.empty_union_1	40	0	search with cache (only 1: fsetdec).	0.0700130462646	1
Coq.MSets.MSetProperties.WPropertiesOn.empty_union_2	40	0	search with cache (only 1: fsetdec).	0.0681798458099	1
Coq.MSets.MSetProperties.WPropertiesOn.not_in_union	40	5.0	search with cache (only 1: intuition; only 1: fsetdec).	1.89963698387	140
Coq.MSets.MSetProperties.WPropertiesOn.inter_sym	40	1	search with cache (only 1: fsetdec).	0.0828061103821	2
Coq.MSets.MSetProperties.WPropertiesOn.inter_subset_equal	40	0	search with cache (only 1: fsetdec).	0.0679228305817	1
Coq.MSets.MSetProperties.WPropertiesOn.inter_equal_1	40	0	search with cache (only 1: fsetdec).	0.0972909927368	1
Coq.MSets.MSetProperties.WPropertiesOn.inter_equal_2	40	0	search with cache (only 1: fsetdec).	0.092257976532	1
Coq.MSets.MSetProperties.WPropertiesOn.inter_assoc	40	0	search with cache (only 1: fsetdec).	0.135851144791	1
Coq.MSets.MSetProperties.WPropertiesOn.union_inter_1	40	0	search with cache (only 1: fsetdec).	0.182385206223	1
Coq.MSets.MSetProperties.WPropertiesOn.union_inter_2	40	0	search with cache (only 1: fsetdec).	0.192400932312	1
Coq.MSets.MSetProperties.WPropertiesOn.inter_add_1	40	3.0	search with cache (only 1: intuition; only 1: fsetdec).	0.449909925461	26
Coq.MSets.MSetProperties.WPropertiesOn.inter_add_2	40	0	search with cache (only 1: fsetdec).	0.13257598877	1
Coq.MSets.MSetProperties.WPropertiesOn.empty_inter_1	40	1	search with cache (only 1: fsetdec).	0.0486690998077	2
Coq.MSets.MSetProperties.WPropertiesOn.empty_inter_2	40	0	search with cache (only 1: fsetdec).	0.0472500324249	1
Coq.MSets.MSetProperties.WPropertiesOn.inter_subset_1	40	0	search with cache (only 1: fsetdec).	0.0376961231232	1
Coq.MSets.MSetProperties.WPropertiesOn.inter_subset_2	40	0	search with cache (only 1: fsetdec).	0.0351960659027	1
Coq.MSets.MSetProperties.WPropertiesOn.inter_subset_3	40	0	search with cache (only 1: fsetdec).	0.0505478382111	1
Coq.MSets.MSetProperties.WPropertiesOn.empty_diff_1	40	1	search with cache (only 1: fsetdec).	0.0588431358337	2
Coq.MSets.MSetProperties.WPropertiesOn.empty_diff_2	40	0	search with cache (only 1: fsetdec).	0.0738019943237	1
Coq.MSets.MSetProperties.WPropertiesOn.diff_subset	40	1	search with cache (only 1: fsetdec).	0.0402290821075	2
Coq.MSets.MSetProperties.WPropertiesOn.diff_subset_equal	40	0	search with cache (only 1: fsetdec).	0.10391497612	1
Coq.MSets.MSetProperties.WPropertiesOn.remove_diff_singleton	40	0	search with cache (only 1: fsetdec).	0.103085041046	1
Coq.MSets.MSetProperties.WPropertiesOn.diff_inter_empty	40	0	search with cache (only 1: fsetdec).	0.167052984238	1
Coq.MSets.MSetProperties.WPropertiesOn.diff_inter_all	40	0	search with cache (only 1: fsetdec).	0.134804964066	1
Coq.MSets.MSetProperties.WPropertiesOn.Add_add	40	1.0.39	search with cache (only 1: intro H; only 1: rewrite add_spec; only 1: intuition).	2.45253396034	1744
Coq.MSets.MSetProperties.WPropertiesOn.Add_remove	40	8.16.0	search with cache (only 1: intros; only 1: intros E; only 1: fsetdec).	16.4251489639	3415
Coq.MSets.MSetProperties.WPropertiesOn.union_Add	40
Coq.MSets.MSetProperties.WPropertiesOn.inter_Add	40	0.0	search with cache (only 1: expAdd; only 1: fsetdec).	0.40212893486	2
Coq.MSets.MSetProperties.WPropertiesOn.union_Equal	40	0.0	search with cache (only 1: expAdd; only 1: fsetdec).	0.358476877213	2
Coq.MSets.MSetProperties.WPropertiesOn.inter_Add_2	40	0.0	search with cache (only 1: expAdd; only 1: fsetdec).	0.28878903389	2
Coq.MSets.MSetProperties.WPropertiesOn.elements_Empty	40
Coq.MSets.MSetProperties.WPropertiesOn.elements_empty	40	11.0.10.13.8.2.37.64.10	search with cache (only 1: apply length_zero_iff_nil; only 1: PeanoNat.Nat.bitwise; only 1: unfold PeanoNat.Nat.testbit, PeanoNat.Nat.odd; only 1: rewrite <- ?negb_true_iff, ?PeanoNat.Nat.negb_even, ?PeanoNat.Nat.odd_spec, ?PeanoNat.Nat.even_spec; only 1: apply eq_true_iff_eq; only 1: split; only 1: destr_bool; only 1: fix odd_spec 1; only 1: intuition).	24.6263520718	51494
Coq.MSets.MSetProperties.WPropertiesOn.of_list_1	40
Coq.MSets.MSetProperties.WPropertiesOn.of_list_2	40
Coq.MSets.MSetProperties.WPropertiesOn.of_list_3	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_spec_right	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_rec	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_rec_bis	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_rec_nodep	40	1.0.1.1.0	search with cache (only 1: intros A P f i s Pempty Pstep; only 1: apply fold_rec; only 1: auto with *; only 1: set (l := rev (elements s)); only 1: auto with *).	0.283938884735	88
Coq.MSets.MSetProperties.WPropertiesOn.fold_rec_weak	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_rel	40
Coq.MSets.MSetProperties.WPropertiesOn.set_induction	40
Coq.MSets.MSetProperties.WPropertiesOn.set_induction_bis	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_identity	40	0.3.9.0.0.4.20	search with cache (only 1: intros a b; only 1: red; only 1: apply fold_rec_bis; only 1: intros s s' E; only 1: fsetdec; only 1: auto; only 1: fsetdec).	4.69682002068	2920
Coq.MSets.MSetProperties.WPropertiesOn.fold_0	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_1	40	8.0.0.4.1.3.1	search with cache (only 1: intros; only 1: apply fold_rec_bis; only 1: auto; only 1: set (l := rev (elements s)); only 1: auto with *; only 1: intro x; only 1: fsetdec).	24.4784710407	7227
Coq.MSets.MSetProperties.WPropertiesOn.fold_2	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_1b	40	8.2.0.0.6.1	search with cache (only 1: intros; only 1: apply fold_rec; only 1: intros; only 1: fsetdec; only 1: intros; only 1: fsetdec).	20.3698010445	14098
Coq.MSets.MSetProperties.WPropertiesOn.fold_commutes	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_init	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_equal	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_empty	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_add	40
Coq.MSets.MSetProperties.WPropertiesOn.add_fold	40
Coq.MSets.MSetProperties.WPropertiesOn.remove_fold_1	40
Coq.MSets.MSetProperties.WPropertiesOn.remove_fold_2	40	0.12.0	search with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set relations).	1.38964796066	712
Coq.MSets.MSetProperties.WPropertiesOn.fold_union_inter	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_diff_inter	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_union	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_plus	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_fold	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_0	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_1	40	3.4.2.0.0	search with cache (only 1: intros; only 1: rewrite cardinal_spec; only 1: rewrite elements_Empty in H; only 1: rewrite H; only 1: auto).	0.685868024826	302
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_2	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_Empty	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_inv_1	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_inv_2	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_inv_2b	40	0.0.2.0.1.0.0	search with cache (only 1: intros; only 1: rewrite cardinal_spec in H; only 1: generalize (elements_2 (s:=s)); only 1: destruct (elements s); only 1: intuition; only 1: exists e; only 1: auto with relations).	0.273764848709	46
Coq.MSets.MSetProperties.WPropertiesOn.Equal_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_m	40
Coq.MSets.MSetProperties.WPropertiesOn.empty_cardinal	40	0.0.0.1	search with cache (only 1: rewrite cardinal_fold; only 1: apply fold_1; only 1: auto with *; only 1: auto with set).	0.0349040031433	5
Coq.MSets.MSetProperties.WPropertiesOn.singleton_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.diff_inter_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.union_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.subset_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.subset_cardinal_lt	40
Coq.MSets.MSetProperties.WPropertiesOn.union_inter_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.union_cardinal_inter	40
Coq.MSets.MSetProperties.WPropertiesOn.union_cardinal_le	40	2.1.11.0	search with cache (only 1: intros; only 1: generalize (cardinal_inv_2 (s:=s)); only 1: rewrite <- union_inter_cardinal; only 1: auto with arith).	1.81805515289	1146
Coq.MSets.MSetProperties.WPropertiesOn.add_cardinal_1	40	0.1	search with cache (only 1: intro; only 1: intuition).	0.355055809021	63
Coq.MSets.MSetProperties.WPropertiesOn.add_cardinal_2	40	0.2.0.0.0.0.0.2.1.0.0.1	search with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: change_no_check S with ((fun _ => S) x); only 1: apply fold_2; only 1: split; only 1: congruence; only 1: congruence; only 1: congruence; only 1: congruence; only 1: auto; only 1: congruence; only 1: auto with set).	8.83055901527	3420
Coq.MSets.MSetProperties.WPropertiesOn.remove_cardinal_1	40	0.0.0.1.5.3	search with cache (only 1: intros; only 1: rewrite (cardinal_2 (s:=remove x s) (s':=s) (x:=x)); only 1: eauto with set relations; only 1: auto with set relations; only 1: expAdd; only 1: fsetdec).	0.729625940323	250
Coq.MSets.MSetProperties.WPropertiesOn.remove_cardinal_2	40	2.0	search with cache (only 1: intros; only 1: eauto with set relations).	0.110158920288	29
Coq.MSets.MSetProperties.OrdProperties.sort_equivlistA_eqlistA	40
Coq.MSets.MSetProperties.OrdProperties.gtb_1	40
Coq.MSets.MSetProperties.OrdProperties.leb_1	40
Coq.MSets.MSetProperties.OrdProperties.gtb_compat	40
Coq.MSets.MSetProperties.OrdProperties.leb_compat	40	0.0.0.0.8.0.4.0	search with cache (only 1: intros P; only 1: intros; only 1: unfold leb, gtb; only 1: rewrite H; only 1: destruct E.compare; only 1: intuition; only 1: intuition; only 1: intuition).	4.32614398003	2325
Coq.MSets.MSetProperties.OrdProperties.elements_split	40
Coq.MSets.MSetProperties.OrdProperties.elements_Add	40
Coq.MSets.MSetProperties.OrdProperties.elements_Add_Above	40
Coq.MSets.MSetProperties.OrdProperties.elements_Add_Below	40
Coq.MSets.MSetProperties.OrdProperties.set_induction_max	40
Coq.MSets.MSetProperties.OrdProperties.set_induction_min	40
Coq.MSets.MSetProperties.OrdProperties.fold_3	40
Coq.MSets.MSetProperties.OrdProperties.fold_4	40
Coq.MSets.MSetProperties.OrdProperties.fold_equal	40
Coq.MSets.MSetProperties.OrdProperties.add_fold	40	0.0.0	search with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).	0.0304679870605	3
Coq.MSets.MSetProperties.OrdProperties.remove_fold_2	40	0.0.0	search with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).	0.0296351909637	3
Coq.MSets.MSetProperties.OrdProperties.choose_equal	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.mem_eq	40	0.0.0.0.0.1.0.0.1	search with cache (only 1: intros; only 1: generalize (mem_iff s x), (mem_iff s y), (In_eq_iff s H); only 1: destruct (mem x s); only 1: destruct (mem y s); only 1: intuition; only 1: intuition; only 1: destruct (mem y s); only 1: intuition; only 1: intuition).	2.53794288635	246
Coq.MSets.MSetEqProperties.WEqPropertiesOn.equal_mem_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.equal_mem_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.subset_mem_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.subset_mem_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.empty_mem	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.is_empty_equal_empty	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.choose_mem_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.choose_mem_2	40	4.4.1	search with cache (only 1: intros; only 1: apply <- is_empty_spec; only 1: auto with set).	0.142096996307	61
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_mem_1	40	10	search with cache (only 1: intuition).	1.310120821	291
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_mem_2	40	1.1.0.1.1.0.1.0.1	search with cache (only 1: intros; only 1: generalize (FM.mem_iff (add x s) y), (FM.mem_iff s y), (FM.add_neq_iff s H); only 1: destruct (mem y s); only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition).	18.1119468212	2977
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_mem_1	40	0.9	search with cache (only 1: rewrite <- not_mem_iff; only 1: auto with set relations).	0.745322942734	89
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_mem_2	40	0.0.0.0.1.2.2.0.2	search with cache (only 1: intros; only 1: generalize (FM.mem_iff (remove x s) y), (FM.mem_iff s y), (FM.remove_neq_iff s H); only 1: destruct (mem y s); only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition).	3.80255389214	740
Coq.MSets.MSetEqProperties.WEqPropertiesOn.singleton_equal_add	40	0	search with cache (only 1: auto with set relations).	0.0227088928223	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_mem	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_mem	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.diff_mem	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.mem_3	40	0.0.0.0	search with cache (only 1: rewrite <- mem_spec; only 1: destruct (mem x s); only 1: intuition; only 1: intuition).	0.0601100921631	4
Coq.MSets.MSetEqProperties.WEqPropertiesOn.mem_4	40	0.0.0.1.0	search with cache (only 1: intros; only 1: rewrite <- mem_spec; only 1: destruct (mem x s); only 1: intuition; only 1: intuition).	0.0702180862427	6
Coq.MSets.MSetEqProperties.WEqPropertiesOn.equal_refl	40	2.3	search with cache (only 1: apply equal_1; only 1: Dec.fsetdec).	0.038330078125	7
Coq.MSets.MSetEqProperties.WEqPropertiesOn.equal_sym	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.equal_trans	40	1.2.0.1	search with cache (only 1: do 2 rewrite <- equal_iff; only 1: intros; only 1: apply <- equal_spec; only 1: Dec.fsetdec).	0.19824719429	8
Coq.MSets.MSetEqProperties.WEqPropertiesOn.equal_equal	40	2.0.1	search with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto).	0.0367538928986	6
Coq.MSets.MSetEqProperties.WEqPropertiesOn.equal_cardinal	40	5.0.2	search with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto).	0.0423150062561	10
Coq.MSets.MSetEqProperties.WEqPropertiesOn.subset_refl	40	5.3	search with cache (only 1: apply subset_1; only 1: Dec.fsetdec).	0.0476078987122	13
Coq.MSets.MSetEqProperties.WEqPropertiesOn.subset_antisym	40	12	search with cache (only 1: auto with set).	0.233958005905	102
Coq.MSets.MSetEqProperties.WEqPropertiesOn.subset_trans	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.subset_equal	40	0	search with cache (only 1: auto with set).	0.0212819576263	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.choose_mem_3	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.choose_mem_4	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_mem_3	40	11	search with cache (only 1: auto with set relations).	2.89527010918	400
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_equal	40	0.2.1	search with cache (only 1: intros; only 1: apply equal_1; only 1: auto with set relations).	0.0350589752197	6
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_mem_3	40	5.6	search with cache (only 1: generalize (mem_iff (remove x s) y), (mem_iff s y), (remove_iff s x y); only 1: intuition).	1.96936917305	334
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_equal	40	0.2.0.2.1	search with cache (only 1: destruct (mem y s); only 1: rewrite <- not_mem_iff; only 1: auto with set relations; only 1: rewrite <- not_mem_iff; only 1: auto with set relations).	0.771908998489	31
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_remove	40	3.16	search with cache (only 1: generalize (FM.mem_iff (inter s s') x), (FM.mem_iff s x), (FM.mem_iff s' x), (inter_spec s s' x); only 1: intuition).	10.3018069267	1383
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_add	40	3.9	search with cache (only 1: rewrite <- not_mem_iff; only 1: auto with set).	1.72811508179	273
Coq.MSets.MSetEqProperties.WEqPropertiesOn.is_empty_cardinal	40	0.0.0.1.3.0.0.0.1.3.1.3	search with cache (only 1: apply eq_true_iff_eq; only 1: split; only 1: rewrite <- is_empty_iff; only 1: rewrite elements_Empty, cardinal_spec; only 1: destruct (elements s); only 1: intuition; only 1: discriminate; only 1: rewrite <- is_empty_iff; only 1: rewrite elements_Empty, cardinal_spec; only 1: destruct (elements s); only 1: intuition; only 1: discriminate).	7.79906988144	4173
Coq.MSets.MSetEqProperties.WEqPropertiesOn.singleton_mem_1	40	4.1	search with cache (only 1: generalize (mem_iff (singleton x) y), (singleton_iff x y); only 1: intuition).	1.11276197433	135
Coq.MSets.MSetEqProperties.WEqPropertiesOn.singleton_mem_2	40	0.0.0.6	search with cache (only 1: generalize (mem_iff (singleton x) y), (singleton_iff x y); only 1: destruct (mem y (singleton x)); only 1: intuition; only 1: intuition).	3.7048561573	525
Coq.MSets.MSetEqProperties.WEqPropertiesOn.singleton_mem_3	40	4.5	search with cache (only 1: generalize (mem_iff (singleton x) y), (singleton_iff x y); only 1: intuition).	3.86820197105	714
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_sym	40	0	search with cache (only 1: intuition).	0.0423469543457	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_subset_equal	40	0	search with cache (only 1: auto with set).	0.0365710258484	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_equal_1	40	0	search with cache (only 1: auto with set).	0.0258748531342	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_equal_2	40	0	search with cache (only 1: auto with set).	0.0254509449005	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_assoc	40	0	search with cache (only 1: auto with set).	0.0204780101776	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_union_singleton	40	2	search with cache (only 1: auto with set).	0.0373930931091	3
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_add	40	0	search with cache (only 1: auto with set).	0.0235269069672	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_subset_1	40	0	search with cache (only 1: auto with set).	0.021703004837	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_subset_2	40	0	search with cache (only 1: auto with set).	0.0218670368195	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_subset_3	40	0	search with cache (only 1: auto with set).	0.0399169921875	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_sym	40	5	search with cache (only 1: auto with set).	0.0263180732727	6
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_subset_equal	40	0	search with cache (only 1: auto with set).	0.0250370502472	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_equal_1	40	0	search with cache (only 1: auto with set).	0.0237720012665	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_equal_2	40	0	search with cache (only 1: auto with set).	0.17517209053	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_assoc	40	0	search with cache (only 1: auto with set).	0.0214738845825	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_inter_1	40	1	search with cache (only 1: auto with set).	0.0424439907074	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_inter_2	40	0	search with cache (only 1: auto with set).	0.0204019546509	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_add_1	40	0	search with cache (only 1: auto with set).	0.0234971046448	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_add_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_subset_1	40	0	search with cache (only 1: auto with set).	0.020761013031	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_subset_2	40	0	search with cache (only 1: auto with set).	0.0197491645813	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_subset_3	40	0	search with cache (only 1: auto with set).	0.0386700630188	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.diff_subset	40	0.4	search with cache (only 1: apply <- subset_spec; only 1: Dec.fsetdec).	0.0561680793762	6
Coq.MSets.MSetEqProperties.WEqPropertiesOn.diff_subset_equal	40	0	search with cache (only 1: auto with set).	0.0249481201172	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_inter_singleton	40	0.2	search with cache (only 1: apply equal_1; only 1: Dec.fsetdec).	0.121969938278	4
Coq.MSets.MSetEqProperties.WEqPropertiesOn.diff_inter_empty	40	1	search with cache (only 1: auto with set).	0.0368988513947	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.diff_inter_all	40	0	search with cache (only 1: auto with set).	0.0195279121399	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.set_rec	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.exclusive_set	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.fold_empty	40	0.0	search with cache (only 1: apply fold_1b; only 1: auto with set).	0.0337090492249	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.fold_equal	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.fold_add	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_fold	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_fold_1	40	0.3.2.2.2.1.0	search with cache (only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set relations; only 1: auto with set relations).	7.75994992256	2884
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_fold_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.fold_union	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_cardinal_1	40	1.0	search with cache (only 1: intros; only 1: auto with set).	0.0892381668091	18
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_cardinal_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_cardinal_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_cardinal_2	40	2.2.22.6	search with cache (only 1: intro; only 1: intros a; only 1: rewrite <- not_mem_iff; only 1: eauto with set relations).	17.3425788879	8865
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_cardinal	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.subset_cardinal	40	1.2	search with cache (only 1: intros H a; only 1: auto with set).	0.047397851944	14
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Comp'	40	17	search with cache (only 1: solve_proper).	1.12775802612	478
Coq.MSets.MSetEqProperties.WEqPropertiesOn.filter_mem	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.for_all_filter	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.exists_filter	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.partition_filter_1	40	6	search with cache (only 1: intuition).	0.0650091171265	16
Coq.MSets.MSetEqProperties.WEqPropertiesOn.partition_filter_2	40	0	search with cache (only 1: auto with set).	0.0280179977417	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.filter_add_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.filter_add_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_filter_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_filter_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_filter	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.filter_union	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.for_all_mem_1	40	13.2.0.2.1.0	search with cache (only 1: intros; only 1: apply for_all_1; only 1: tauto; only 1: red; only 1: intros; only 1: intuition).	20.0139000416	5488
Coq.MSets.MSetEqProperties.WEqPropertiesOn.for_all_mem_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.for_all_mem_3	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.for_all_mem_4	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.for_all_exists	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Comp'	40	0.0.0.7	search with cache (only 1: repeat red; only 1: intros; only 1: f_equal; only 1: intuition).	0.0889179706573	31
Coq.MSets.MSetEqProperties.WEqPropertiesOn.exists_mem_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.exists_mem_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.exists_mem_3	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.exists_mem_4	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.sum_plus	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.sum_filter	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.fold_compat	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.sum_compat	40
Coq.MSets.MSetDecide.WDecideOn.MSetLogicalFacts.test_push	40	2.0	search with cache (only 1: unfold decidable; only 1: intuition).	1.7289249897	4
Coq.MSets.MSetDecide.WDecideOn.MSetLogicalFacts.test_pull	40	0.0.0	search with cache (only 1: intros; only 1: push not in *; only 1: tauto).	0.180454969406	3
Coq.MSets.MSetDecide.WDecideOn.MSetDecideAuxiliary.eq_refl_iff	40	0	search with cache (only 1: intuition).	0.0102589130402	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideAuxiliary.dec_In	40
Coq.MSets.MSetDecide.WDecideOn.MSetDecideAuxiliary.dec_eq	40
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_trans_1	40
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_trans_2	40
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_neq_trans_1	40	0	search with cache (only 1: fsetdec).	0.0580408573151	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_neq_trans_2	40	0	search with cache (only 1: fsetdec).	0.141999959946	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_In_singleton	40	0	search with cache (only 1: fsetdec).	0.013720035553	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_add_In	40	1	search with cache (only 1: fsetdec).	0.0317671298981	2
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_Subset_add_remove	40	0	search with cache (only 1: fsetdec).	0.0336220264435	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_disjunction	40	0	search with cache (only 1: fsetdec).	0.113811016083	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_not_In_disj	40	0	search with cache (only 1: fsetdec).	0.0666689872742	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_not_In_conj	40	0	search with cache (only 1: fsetdec).	0.086364030838	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_iff_conj	40	0	search with cache (only 1: fsetdec).	0.0418269634247	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_set_ops_1	40	0	search with cache (only 1: fsetdec).	0.478310108185	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.eq_chain_test	40	0	search with cache (only 1: fsetdec).	0.26882982254	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_too_complex	40	7.5.18.6	search with cache (only 1: intros; only 1: apply -> subset_spec; only 1: intuition; only 1: intuition).	5.6494538784	3726
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.function_test_1	40	0	search with cache (only 1: fsetdec).	0.0466909408569	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.function_test_2	40	0	search with cache (only 1: fsetdec).	0.0588128566742	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_baydemir	40	0	search with cache (only 1: fsetdec).	0.0367350578308	1
Coq.MSets.MSetGenTree.Props.ltb_tree_iff	40	6.11.2	search with cache (only 1: intro H; only 1: fix odd_spec 1; only 1: trivial).	0.919387102127	877
Coq.MSets.MSetGenTree.Props.gtb_tree_iff	40	5.9.4	search with cache (only 1: intro H; only 1: fix odd_spec 1; only 1: trivial).	1.48428702354	1874
Coq.MSets.MSetGenTree.Props.isok_iff	40	0.16	search with cache (only 1: fix even_spec 1; only 1: intuition_in).	1.30844306946	759
Coq.MSets.MSetGenTree.Props.isok_Ok	40
Coq.MSets.MSetGenTree.Props.In_1	40
Coq.MSets.MSetGenTree.Props.In_compat	40	18.1.1.0.0.2	search with cache (only 1: apply proper_sym_impl_iff_2; only 1: intuition_in; only 1: congruence; only 1: reduce; only 1: subst; only 1: eauto).	28.1176888943	22233
Coq.MSets.MSetGenTree.Props.In_node_iff	40	0.1	search with cache (only 1: intros; only 1: intuition_in).	0.0375981330872	3
Coq.MSets.MSetGenTree.Props.In_leaf_iff	40	0	search with cache (only 1: intuition_in).	0.0165829658508	1
Coq.MSets.MSetGenTree.Props.lt_leaf	40	0.1.1	search with cache (only 1: intuition_in; only 1: unfold lt_tree; only 1: intuition_in).	0.017147064209	5
Coq.MSets.MSetGenTree.Props.gt_leaf	40	0.0	search with cache (only 1: unfold gt_tree; only 1: intuition_in).	0.0124530792236	2
Coq.MSets.MSetGenTree.Props.lt_tree_node	40	0.0.2	search with cache (only 1: unfold lt_tree; only 1: intuition_in; only 1: order).	0.123256921768	31
Coq.MSets.MSetGenTree.Props.gt_tree_node	40	0.0.7.0	search with cache (only 1: intuition_in; only 1: unfold gt_tree; only 1: intuition_in; only 1: order).	0.142889976501	48
Coq.MSets.MSetGenTree.Props.lt_tree_not_in	40	0.1	search with cache (only 1: intuition_in; only 1: order).	0.0943210124969	26
Coq.MSets.MSetGenTree.Props.lt_tree_trans	40	2.0.0	search with cache (only 1: unfold lt_tree; only 1: intuition_in; only 1: eauto).	0.0172410011292	5
Coq.MSets.MSetGenTree.Props.gt_tree_not_in	40	0.0.0	search with cache (only 1: intros; only 1: intro; only 1: order).	0.0136370658875	3
Coq.MSets.MSetGenTree.Props.gt_tree_trans	40	3.0.0	search with cache (only 1: unfold gt_tree; only 1: intuition_in; only 1: eauto).	0.0167589187622	6
Coq.MSets.MSetGenTree.Props.lt_tree_compat	40	0.0.1.1.0.0.0	search with cache (only 1: apply proper_sym_impl_iff_2; only 1: auto with *; only 1: auto with *; only 1: repeat red; only 1: intros; only 1: subst; only 1: order).	0.0325520038605	9
Coq.MSets.MSetGenTree.Props.gt_tree_compat	40	0.0.0.2.0.0.0	search with cache (only 1: apply proper_sym_impl_iff_2; only 1: auto with *; only 1: auto with *; only 1: intros x x' Hx s s' Hs H y Hy; only 1: subst; only 1: setoid_rewrite  <- Hx; only 1: auto).	0.0508539676666	19
Coq.MSets.MSetGenTree.Props.empty_spec	40	2.5	search with cache (only 1: intro y; only 1: auto).	0.0180790424347	17
Coq.MSets.MSetGenTree.Props.empty_ok	40	0.1.0.2.18.21	search with cache (only 1: apply -> Forall_forall; only 1: right; only 1: eauto; only 1: eauto; only 1: simpl; only 1: intuition_in).	2.97258496284	5096
Coq.MSets.MSetGenTree.Props.is_empty_spec	40
Coq.MSets.MSetGenTree.Props.mem_spec	40	1.21	search with cache (only 1: fix even_spec 1; only 1: intuition_in).	26.4544119835	8543
Coq.MSets.MSetGenTree.Props.min_elt_spec1	40
Coq.MSets.MSetGenTree.Props.min_elt_spec2	40
Coq.MSets.MSetGenTree.Props.min_elt_spec3	40
Coq.MSets.MSetGenTree.Props.max_elt_spec1	40
Coq.MSets.MSetGenTree.Props.max_elt_spec2	40
Coq.MSets.MSetGenTree.Props.max_elt_spec3	40
Coq.MSets.MSetGenTree.Props.choose_spec1	40
Coq.MSets.MSetGenTree.Props.choose_spec2	40
Coq.MSets.MSetGenTree.Props.choose_spec3	40
Coq.MSets.MSetGenTree.Props.elements_spec1'	40
Coq.MSets.MSetGenTree.Props.elements_spec1	40
Coq.MSets.MSetGenTree.Props.elements_spec2'	40
Coq.MSets.MSetGenTree.Props.elements_spec2	40
Coq.MSets.MSetGenTree.Props.elements_spec2w	40
Coq.MSets.MSetGenTree.Props.elements_aux_cardinal	40
Coq.MSets.MSetGenTree.Props.elements_cardinal	40
Coq.MSets.MSetGenTree.Props.elements_app	40
Coq.MSets.MSetGenTree.Props.elements_node	40
Coq.MSets.MSetGenTree.Props.rev_elements_app	40
Coq.MSets.MSetGenTree.Props.rev_elements_node	40
Coq.MSets.MSetGenTree.Props.rev_elements_rev	40
Coq.MSets.MSetGenTree.Props.sorted_app_inv	40
Coq.MSets.MSetGenTree.Props.elements_sort_ok	40
Coq.MSets.MSetGenTree.Props.for_all_spec	40
Coq.MSets.MSetGenTree.Props.exists_spec	40
Coq.MSets.MSetGenTree.Props.fold_spec'	40
Coq.MSets.MSetGenTree.Props.fold_spec	40
Coq.MSets.MSetGenTree.Props.subsetl_spec	40
Coq.MSets.MSetGenTree.Props.subsetr_spec	40
Coq.MSets.MSetGenTree.Props.subset_spec	40	4.20	search with cache (only 1: fix odd_spec 1; only 1: intuition).	6.07084417343	4103
Coq.MSets.MSetGenTree.Props.eq_equiv	40
Coq.MSets.MSetGenTree.Props.eq_Leq	40
Coq.MSets.MSetGenTree.Props.lt_strorder	40
Coq.MSets.MSetGenTree.Props.lt_compat	40
Coq.MSets.MSetGenTree.Props.flatten_e_elements	40
Coq.MSets.MSetGenTree.Props.cons_1	40
Coq.MSets.MSetGenTree.Props.compare_end_Cmp	40
Coq.MSets.MSetGenTree.Props.compare_more_Cmp	40
Coq.MSets.MSetGenTree.Props.compare_cont_Cmp	40
Coq.MSets.MSetGenTree.Props.compare_Cmp	40
Coq.MSets.MSetGenTree.Props.compare_spec	40
Coq.MSets.MSetGenTree.Props.equal_spec	40	1.0.19	search with cache (only 1: fix even_spec 1; only 1: intros; only 1: auto with *).	21.0289759636	19732
Coq.MSets.MSetGenTree.Props.mindepth_maxdepth	40
Coq.MSets.MSetGenTree.Props.maxdepth_cardinal	40
Coq.MSets.MSetGenTree.Props.mindepth_cardinal	40
Coq.MSets.MSetGenTree.Props.maxdepth_log_cardinal	40
Coq.MSets.MSetGenTree.Props.mindepth_log_cardinal	40
Coq.MSets.MSetInterface.WRaw2SetsOn.In_compat	40	13.4.24.0	search with cache (only 1: simpl_relation; only 1: compute; only 1: setoid_rewrite  <- H; only 1: auto).	8.11856102943	11532
Coq.MSets.MSetInterface.WRaw2SetsOn.eq_equiv	40	27.11	search with cache (only 1: compute; only 1: firstorder).	0.414856910706	1154
Coq.MSets.MSetInterface.WRaw2SetsOn.eq_dec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.mem_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.equal_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.subset_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.empty_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.is_empty_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.add_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.remove_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.singleton_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.union_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.inter_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.diff_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.fold_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.cardinal_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.filter_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.for_all_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.exists_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.partition_spec1	40
Coq.MSets.MSetInterface.WRaw2SetsOn.partition_spec2	40
Coq.MSets.MSetInterface.WRaw2SetsOn.elements_spec1	40
Coq.MSets.MSetInterface.WRaw2SetsOn.elements_spec2w	40
Coq.MSets.MSetInterface.WRaw2SetsOn.choose_spec1	40	4.45	search with cache (only 1: fix even_spec 1; only 1: easy).	1.54539394379	2273
Coq.MSets.MSetInterface.WRaw2SetsOn.choose_spec2	40
Coq.MSets.MSetInterface.Raw2SetsOn.lt_strorder	40
Coq.MSets.MSetInterface.Raw2SetsOn.lt_compat	40
Coq.MSets.MSetInterface.Raw2SetsOn.compare_spec	40
Coq.MSets.MSetInterface.Raw2SetsOn.elements_spec2	40
Coq.MSets.MSetInterface.Raw2SetsOn.min_elt_spec1	40
Coq.MSets.MSetInterface.Raw2SetsOn.min_elt_spec2	40
Coq.MSets.MSetInterface.Raw2SetsOn.min_elt_spec3	40
Coq.MSets.MSetInterface.Raw2SetsOn.max_elt_spec1	40
Coq.MSets.MSetInterface.Raw2SetsOn.max_elt_spec2	40
Coq.MSets.MSetInterface.Raw2SetsOn.max_elt_spec3	40
Coq.MSets.MSetInterface.Raw2SetsOn.choose_spec3	40
Coq.MSets.MSetInterface.MakeSetOrdering.eq_equiv	40	51	search with cache (only 1: firstorder).	1.31236982346	2449
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_0	40
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_1	40
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_2	40
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_3	40
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_4	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_compat	40	0.0.2.25.1	search with cache (only 1: intros x x' Ex s s' Es; only 1: compute; only 1: setoid_rewrite Es; only 1: setoid_rewrite Ex; only 1: intuition).	8.48209404945	4053
Coq.MSets.MSetInterface.MakeSetOrdering.lt_strorder	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_empty_r	40	6.0	search with cache (only 1: intuition; only 1: firstorder).	0.0492050647736	8
Coq.MSets.MSetInterface.MakeSetOrdering.lt_empty_l	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_add_lt	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_add_eq	40
Coq.MSets.MSetInterface.MakeListOrdering.lt_strorder	40
Coq.MSets.MSetInterface.MakeListOrdering.lt_compat'	40
Coq.MSets.MSetInterface.MakeListOrdering.eq_cons	40
Coq.MSets.MSetInterface.MakeListOrdering.cons_CompSpec	40
Coq.MSets.MSetList.MakeRaw.inf_iff	40
Coq.MSets.MSetList.MakeRaw.isok_iff	40
Coq.MSets.MSetList.MakeRaw.isok_Ok	40	0	search with cache (only 1: tauto).	0.00678491592407	1
Coq.MSets.MSetList.MakeRaw.mem_spec	40
Coq.MSets.MSetList.MakeRaw.add_inf	40
Coq.MSets.MSetList.MakeRaw.add_ok	40
Coq.MSets.MSetList.MakeRaw.add_spec	40
Coq.MSets.MSetList.MakeRaw.remove_inf	40
Coq.MSets.MSetList.MakeRaw.remove_ok	40	0.1.0.0.0.0.0.1.0.2.0.4	search with cache (only 1: repeat rewrite <- isok_iff; only 1: revert s x; only 1: simple induction s; only 1: intuition; only 1: simpl; only 1: intros; only 1: elim_compare x a; only 1: inv; only 1: auto; only 1: auto; only 1: inv; only 1: auto).	11.3124320507	3731
Coq.MSets.MSetList.MakeRaw.remove_spec	40
Coq.MSets.MSetList.MakeRaw.singleton_ok	40	3	search with cache (only 1: intuition).	0.014753818512	13
Coq.MSets.MSetList.MakeRaw.singleton_spec	40
Coq.MSets.MSetList.MakeRaw.union_inf	40
Coq.MSets.MSetList.MakeRaw.union_ok	40
Coq.MSets.MSetList.MakeRaw.union_spec	40
Coq.MSets.MSetList.MakeRaw.inter_inf	40
Coq.MSets.MSetList.MakeRaw.inter_ok	40
Coq.MSets.MSetList.MakeRaw.inter_spec	40
Coq.MSets.MSetList.MakeRaw.diff_inf	40
Coq.MSets.MSetList.MakeRaw.diff_ok	40	4.0.0	search with cache (only 1: repeat rewrite <- isok_iff; only 1: revert s s'; only 1: induction2).	0.060576915741	7
Coq.MSets.MSetList.MakeRaw.diff_spec	40
Coq.MSets.MSetList.MakeRaw.equal_spec	40	0.4.0	search with cache (only 1: intros x Hs; only 1: fix even_spec 1; only 1: intuition).	0.145045995712	41
Coq.MSets.MSetList.MakeRaw.subset_spec	40	1.4.6.4	search with cache (only 1: intros H; only 1: intros x l; only 1: fix even_spec 1; only 1: intuition).	3.07060813904	1861
Coq.MSets.MSetList.MakeRaw.empty_ok	40	0.2	search with cache (only 1: red; only 1: tauto).	0.0092089176178	4
Coq.MSets.MSetList.MakeRaw.empty_spec	40	3.23.16	search with cache (only 1: intro n; only 1: rewrite InA_alt; only 1: firstorder).	2.1412320137	3299
Coq.MSets.MSetList.MakeRaw.is_empty_spec	40
Coq.MSets.MSetList.MakeRaw.elements_spec1	40	1	search with cache (only 1: intuition).	0.00869584083557	2
Coq.MSets.MSetList.MakeRaw.elements_spec2	40	6.12.4	search with cache (only 1: intuition; only 1: inv; only 1: intuition).	0.600860834122	880
Coq.MSets.MSetList.MakeRaw.elements_spec2w	40	0.0.0	search with cache (only 1: intro s; only 1: repeat rewrite <- isok_iff; only 1: auto).	0.0158128738403	3
Coq.MSets.MSetList.MakeRaw.min_elt_spec1	40
Coq.MSets.MSetList.MakeRaw.min_elt_spec2	40
Coq.MSets.MSetList.MakeRaw.min_elt_spec3	40	1.1.0.0	search with cache (only 1: inversion 1; only 1: induction s as [| x s IH]; only 1: inversion 1; only 1: discriminate).	0.0220470428467	6
Coq.MSets.MSetList.MakeRaw.max_elt_spec1	40	1.0.1.0.5.0.3	search with cache (only 1: induction s; only 1: inversion 1; only 1: destruct s; only 1: inversion 1; only 1: auto; only 1: inversion 1; only 1: intuition).	5.87100505829	2561
Coq.MSets.MSetList.MakeRaw.max_elt_spec2	40
Coq.MSets.MSetList.MakeRaw.max_elt_spec3	40
Coq.MSets.MSetList.MakeRaw.choose_spec3	40
Coq.MSets.MSetList.MakeRaw.fold_spec	40	0.0	search with cache (only 1: intro s; only 1: auto).	0.0103781223297	2
Coq.MSets.MSetList.MakeRaw.cardinal_spec	40	6.1	search with cache (only 1: intros; only 1: auto).	0.0104789733887	9
Coq.MSets.MSetList.MakeRaw.filter_inf	40
Coq.MSets.MSetList.MakeRaw.filter_ok	40
Coq.MSets.MSetList.MakeRaw.filter_spec	40
Coq.MSets.MSetList.MakeRaw.for_all_spec	40
Coq.MSets.MSetList.MakeRaw.exists_spec	40
Coq.MSets.MSetList.MakeRaw.partition_inf1	40
Coq.MSets.MSetList.MakeRaw.partition_inf2	40
Coq.MSets.MSetList.MakeRaw.partition_ok1	40
Coq.MSets.MSetList.MakeRaw.partition_ok2	40
Coq.MSets.MSetList.MakeRaw.partition_spec1	40
Coq.MSets.MSetList.MakeRaw.partition_spec2	40
Coq.MSets.MSetList.MakeRaw.In_compat	40
Coq.MSets.MSetList.MakeRaw.lt_strorder	40
Coq.MSets.MSetList.MakeRaw.lt_compat	40
Coq.MSets.MSetList.MakeRaw.compare_spec_aux	40
Coq.MSets.MSetList.MakeRaw.compare_spec	40
Coq.MSets.MSetList.MakeWithLeibniz.eq_leibniz_list	40
Coq.MSets.MSetList.MakeWithLeibniz.eq_leibniz	40
Coq.Relations.Operators_Properties.clos_rt_is_preorder	40
Coq.Relations.Operators_Properties.clos_rt_idempotent	40
Coq.Relations.Operators_Properties.clos_rt_clos_rst	40
Coq.Relations.Operators_Properties.clos_r_clos_rt	40	1.1.0.0	search with cache (only 1: red; only 1: induction 1; only 1: auto with sets; only 1: auto with sets).	0.0173599720001	6
Coq.Relations.Operators_Properties.clos_rt_t	40
Coq.Relations.Operators_Properties.clos_rst_is_equiv	40	2.0.0.1.5.1.2.8	search with cache (only 1: constructor; only 1: auto with sets; only 1: red; only 1: intros; only 1: apply rst_trans with y; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets).	3.05158495903	3327
Coq.Relations.Operators_Properties.clos_rst_idempotent	40	0.0.1.0.0.0.2.0	search with cache (only 1: red; only 1: induction 1; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets; only 1: apply rst_trans with y; only 1: auto with sets; only 1: auto with sets).	0.245069980621	143
Coq.Relations.Operators_Properties.clos_t1n_trans	40
Coq.Relations.Operators_Properties.clos_trans_t1n	40
Coq.Relations.Operators_Properties.clos_trans_t1n_iff	40
Coq.Relations.Operators_Properties.clos_tn1_trans	40	4.1.4.3.1.1.3	search with cache (only 1: induction 1; only 1: left; only 1: auto with sets; only 1: right with y; only 1: auto; only 1: left; only 1: auto).	5.45282506943	9187
Coq.Relations.Operators_Properties.clos_trans_tn1	40
Coq.Relations.Operators_Properties.clos_trans_tn1_iff	40
Coq.Relations.Operators_Properties.clos_rt1n_step	40	2.1.5.0	search with cache (only 1: intros; only 1: right with y; only 1: auto with sets; only 1: left).	0.132122993469	165
Coq.Relations.Operators_Properties.clos_rtn1_step	40	6.1.0.2	search with cache (only 1: intro y0; only 1: right with y0; only 1: auto; only 1: left).	0.227607965469	317
Coq.Relations.Operators_Properties.clos_rt1n_rt	40	3.3.5.1.3	search with cache (only 1: induction 1; only 1: auto with sets; only 1: apply rt_trans with y; only 1: auto with sets; only 1: auto with sets).	0.569396018982	1074
Coq.Relations.Operators_Properties.clos_rt_rt1n	40
Coq.Relations.Operators_Properties.clos_rt_rt1n_iff	40
Coq.Relations.Operators_Properties.clos_rtn1_rt	40	9.6.7.2.4	search with cache (only 1: induction 1; only 1: auto with sets; only 1: constructor 3 with y; only 1: auto; only 1: auto with sets).	5.20022201538	16173
Coq.Relations.Operators_Properties.clos_rt_rtn1	40
Coq.Relations.Operators_Properties.clos_rt_rtn1_iff	40
Coq.Relations.Operators_Properties.clos_refl_trans_ind_left	40
Coq.Relations.Operators_Properties.rt1n_ind_right	40
Coq.Relations.Operators_Properties.clos_refl_trans_ind_right	40	0.0.1.0.0.2.0.1.4.1.1.1.1.7.5.0	search with cache (only 1: intros; only 1: induction H1; only 1: apply H0 with y; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets; only 1: apply IHclos_refl_trans1; only 1: auto with sets; only 1: intros; only 1: apply H0 with y0; only 1: auto with sets; only 1: auto with sets; only 1: apply rt_trans with y; only 1: auto with sets; only 1: auto with sets).	8.44493985176	20066
Coq.Relations.Operators_Properties.clos_rst1n_rst	40
Coq.Relations.Operators_Properties.clos_rst1n_trans	40	4.4.10.4.1	search with cache (only 1: induction 1; only 1: auto; only 1: right with y; only 1: auto; only 1: auto).	2.19910502434	4954
Coq.Relations.Operators_Properties.clos_rst1n_sym	40
Coq.Relations.Operators_Properties.clos_rst_rst1n	40
Coq.Relations.Operators_Properties.clos_rst_rst1n_iff	40
Coq.Relations.Operators_Properties.clos_rstn1_rst	40
Coq.Relations.Operators_Properties.clos_rstn1_trans	40
Coq.Relations.Operators_Properties.clos_rstn1_sym	40
Coq.Relations.Operators_Properties.clos_rst_rstn1	40
Coq.Relations.Operators_Properties.clos_rst_rstn1_iff	40
Coq.Relations.Operators_Properties.clos_trans_transp_permute	40
Coq.Relations.Relations.inverse_image_of_equivalence	40
Coq.Relations.Relations.inverse_image_of_eq	40	1.3.0.3.3.0.1.1.0.0	search with cache (only 1: intros; only 1: split; only 1: red; only 1: reflexivity; only 1: red; only 1: destruct 1; only 1: trivial; only 1: red; only 1: destruct 1; only 1: trivial).	1.95442819595	3827
Coq.Sets.Uniset.leb_refl	40	0	search with cache (only 1: destr_bool).	0.00723004341125	1
Coq.Sets.Uniset.incl_left	40	2.9.11.13	search with cache (only 1: intros; only 1: intro z; only 1: destruct (H z); only 1: auto).	0.927526950836	3271
Coq.Sets.Uniset.incl_right	40	1.0.0.0	search with cache (only 1: unfold incl; only 1: intros s1 s2 E a; only 1: elim (E a); only 1: auto).	0.0145800113678	5
Coq.Sets.Uniset.seq_refl	40	3	search with cache (only 1: auto).	0.00665402412415	4
Coq.Sets.Uniset.seq_trans	40	0.1.2.14.0.0	search with cache (only 1: destruct x; only 1: unfold seq; only 1: intro H; only 1: intros s1 s2 E a; only 1: elim (E a); only 1: auto).	1.22299408913	2669
Coq.Sets.Uniset.seq_sym	40	0.0.0.1.1.0.0	search with cache (only 1: destruct x; only 1: unfold seq; only 1: destruct y; only 1: simpl; only 1: intros; only 1: rewrite H; only 1: auto).	0.0212309360504	9
Coq.Sets.Uniset.union_empty_left	40	1.0.0	search with cache (only 1: destruct x; only 1: unfold seq; only 1: auto).	0.0117020606995	4
Coq.Sets.Uniset.union_empty_right	40	4.0.0.11.0.0.0.0.2	search with cache (only 1: destruct x; only 1: unfold seq; only 1: unfold union; only 1: simpl; only 1: intros; only 1: destruct b; only 1: auto; only 1: simpl; only 1: auto).	6.57085108757	16577
Coq.Sets.Uniset.union_comm	40	27.0.0.0	search with cache (only 1: unfold seq; only 1: unfold union; only 1: simpl; only 1: intuition).	27.689936161	64233
Coq.Sets.Uniset.union_ass	40	0.0.0.1.0.0.0	search with cache (only 1: unfold seq; only 1: unfold charac; only 1: unfold union; only 1: simpl; only 1: destruct x; only 1: destruct y; only 1: auto with bool).	0.0464210510254	19
Coq.Sets.Uniset.seq_left	40	0.0.1.0.1.1.0.1.0	search with cache (only 1: unfold seq; only 1: unfold union; only 1: unfold charac; only 1: destruct x; only 1: destruct y; only 1: destruct z; only 1: intros; only 1: rewrite H; only 1: auto).	2.74724292755	1781
Coq.Sets.Uniset.seq_right	40	1.0.2.0.0.1.0	search with cache (only 1: unfold seq; only 1: unfold union; only 1: unfold charac; only 1: destruct z; only 1: intros; only 1: elim H; only 1: auto).	0.921389102936	441
Coq.Sets.Uniset.union_rotate	40
Coq.Sets.Uniset.seq_congr	40
Coq.Sets.Uniset.union_perm_left	40
Coq.Sets.Uniset.uniset_twist1	40
Coq.Sets.Uniset.uniset_twist2	40
Coq.Sets.Uniset.treesort_twist1	40
Coq.Sets.Uniset.treesort_twist2	40
Coq.Sets.Relations_1_facts.Rsym_imp_notRsym	40	4.0.1.6.6.26	search with cache (only 1: intro x; only 1: red; only 1: red; only 1: unfold not; only 1: intros h1 h2; only 1: auto).	1.10467386246	5309
Coq.Sets.Relations_1_facts.Equiv_from_preorder	40
Coq.Sets.Relations_1_facts.Equiv_from_order	40	8.1.0	search with cache (only 1: intros U R H'; only 1: elim H'; only 1: auto  10 with sets).	0.561444997787	340
Coq.Sets.Relations_1_facts.contains_is_preorder	40	18	search with cache (only 1: auto  10 with sets).	0.105987071991	248
Coq.Sets.Relations_1_facts.same_relation_is_equivalence	40
Coq.Sets.Relations_1_facts.cong_reflexive_same_relation	40	0.4.9.0	search with cache (only 1: unfold same_relation at 1; only 1: intros x y z h; only 1: elim h; only 1: auto  10 with sets).	1.05981183052	1543
Coq.Sets.Relations_1_facts.cong_symmetric_same_relation	40	0.0.0	search with cache (only 1: unfold Symmetric, Complement; only 1: unfold same_relation at 1; only 1: intuition).	0.0161399841309	3
Coq.Sets.Relations_1_facts.cong_antisymmetric_same_relation	40	0.1	search with cache (only 1: unfold same_relation at 1; only 1: intuition).	0.0225970745087	20
Coq.Sets.Relations_1_facts.cong_transitive_same_relation	40
Coq.Sets.Relations_2_facts.Rstar_reflexive	40	0	search with cache (only 1: intuition).	0.00879788398743	1
Coq.Sets.Relations_2_facts.Rplus_contains_R	40	0	search with cache (only 1: intuition).	0.00864505767822	1
Coq.Sets.Relations_2_facts.Rstar_contains_R	40
Coq.Sets.Relations_2_facts.Rstar_contains_Rplus	40
Coq.Sets.Relations_2_facts.Rstar_transitive	40
Coq.Sets.Relations_2_facts.Rstar_cases	40
Coq.Sets.Relations_2_facts.Rstar_equiv_Rstar1	40
Coq.Sets.Relations_2_facts.Rsym_imp_Rstarsym	40
Coq.Sets.Relations_2_facts.Sstar_contains_Rstar	40
Coq.Sets.Relations_2_facts.star_monotone	40	0.0.2.5.1.0.6.2	search with cache (only 1: unfold contains; only 1: intros U R S H' x y H'0; only 1: elim H'0; only 1: auto with sets; only 1: intros x0 y0 z H'1 H'2 H'3; only 1: apply Rstar_n with y0; only 1: auto with sets; only 1: auto with sets).	12.4587140083	18005
Coq.Sets.Relations_2_facts.RstarRplus_RRstar	40
Coq.Sets.Relations_2_facts.Lemma1	40
Coq.Sets.Permut.cong_congr	40
Coq.Sets.Permut.comm_right	40	3.2.2	search with cache (only 1: intros; only 1: apply cong_right; only 1: trivial).	0.0412700176239	34
Coq.Sets.Permut.comm_left	40	3.2.2	search with cache (only 1: intros; only 1: apply cong_left; only 1: apply op_comm).	0.035101890564	24
Coq.Sets.Permut.perm_right	40
Coq.Sets.Permut.perm_left	40
Coq.Sets.Permut.op_rotate	40
Coq.Sets.Permut.twist	40
Coq.Sets.Powerset.Empty_set_minimal	40	11.10.4	search with cache (only 1: intros; only 1: intros H'3 H'4; only 1: elim H'4).	1.23452806473	3712
Coq.Sets.Powerset.Power_set_Inhabited	40	8.79.71	search with cache (only 1: intro x; only 1: exists x; only 1: intuition).	10.1286051273	135367
Coq.Sets.Powerset.Inclusion_is_an_order	40	22	search with cache (only 1: auto  10 with sets).	0.370948076248	458
Coq.Sets.Powerset.Inclusion_is_transitive	40	4.0.0.0.0	search with cache (only 1: red; only 1: intro X; only 1: red; only 1: intros x H'; only 1: auto  6 with sets).	0.018266916275	12
Coq.Sets.Powerset.Power_set_PO	40
Coq.Sets.Powerset.Strict_Rel_is_Strict_Included	40	0.2	search with cache (only 1: red; only 1: intuition).	0.0117177963257	4
Coq.Sets.Powerset.Strict_inclusion_is_transitive_with_inclusion	40
Coq.Sets.Powerset.Strict_inclusion_is_transitive_with_inclusion_left	40
Coq.Sets.Powerset.Strict_inclusion_is_transitive	40
Coq.Sets.Powerset.Empty_set_is_Bottom	40
Coq.Sets.Powerset.Union_minimal	40
Coq.Sets.Powerset.Intersection_maximal	40	0	search with cache (only 1: auto with sets).	0.0105109214783	1
Coq.Sets.Powerset.Union_increases_l	40	0.0.1	search with cache (only 1: red; only 1: intros x H'1; only 1: auto with sets).	0.0155160427094	4
Coq.Sets.Powerset.Union_increases_r	40	0	search with cache (only 1: auto with sets).	0.00995206832886	1
Coq.Sets.Powerset.Intersection_decreases_l	40	0.2.2.4.4	search with cache (only 1: intros H'1 H'2; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: auto with sets).	1.49516296387	804
Coq.Sets.Powerset.Intersection_decreases_r	40	0.1.1.0.0	search with cache (only 1: intros a b; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: auto with sets).	0.0223500728607	7
Coq.Sets.Powerset.Union_is_Lub	40
Coq.Sets.Powerset.Intersection_is_Glb	40
Coq.Sets.Relations_3_facts.Rstar_imp_coherent	40	1.0.7.0.6.1.3.9	search with cache (only 1: intros x0 H'0; only 1: generalize Rstar_transitive; only 1: intro T1; only 1: red; only 1: red in T1; only 1: intros x1 y0 H'1; only 1: exists y0; only 1: auto with sets).	7.79973983765	14215
Coq.Sets.Relations_3_facts.coherent_symmetric	40
Coq.Sets.Relations_3_facts.Strong_confluence	40
Coq.Sets.Relations_3_facts.Strong_confluence_direct	40
Coq.Sets.Relations_3_facts.Noetherian_contains_Noetherian	40
Coq.Sets.Relations_3_facts.Newman	40
Coq.Sets.Partial_Order.Strict_Rel_Transitive_with_Rel	40
Coq.Sets.Partial_Order.Strict_Rel_Transitive_with_Rel_left	40
Coq.Sets.Partial_Order.Strict_Rel_Transitive	40
Coq.Sets.Powerset_facts.Empty_set_zero	40	66	search with cache (only 1: auto  6 with sets).	3.13596200943	9320
Coq.Sets.Powerset_facts.Empty_set_zero_right	40	0	search with cache (only 1: auto  6 with sets).	0.0112028121948	1
Coq.Sets.Powerset_facts.Empty_set_zero'	40	0.8	search with cache (only 1: unfold Add at 1; only 1: auto  6 with sets).	0.0362110137939	26
Coq.Sets.Powerset_facts.less_than_empty	40	0	search with cache (only 1: auto with sets).	0.0105979442596	1
Coq.Sets.Powerset_facts.Union_commutative	40	0	search with cache (only 1: auto  6 with sets).	0.0106868743896	1
Coq.Sets.Powerset_facts.Union_associative	40
Coq.Sets.Powerset_facts.Union_idempotent	40	0	search with cache (only 1: auto  6 with sets).	0.0110771656036	1
Coq.Sets.Powerset_facts.Union_absorbs	40	0	search with cache (only 1: auto  7 with sets).	0.0151641368866	1
Coq.Sets.Powerset_facts.Couple_as_union	40
Coq.Sets.Powerset_facts.Triple_as_union	40
Coq.Sets.Powerset_facts.Triple_as_Couple	40	0.0.0.0.0.0.0.0.0.0.0.0.0.1	search with cache (only 1: intros x y; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x1 H'0; only 1: elim H'0; only 1: auto with sets; only 1: auto with sets; only 1: red; only 1: intros x1 H'0; only 1: elim H'0; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets).	1.08799099922	844
Coq.Sets.Powerset_facts.Triple_as_Couple_Singleton	40	0.1.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros x y z; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x1 H'0; only 1: elim H'0; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets; only 1: red; only 1: intros x1 H'0; only 1: elim H'0; only 1: intros x2 H'1; only 1: elim H'1; only 1: auto with sets; only 1: auto with sets; only 1: intros x2 H'1; only 1: elim H'1; only 1: auto with sets).	30.6636650562	15990
Coq.Sets.Powerset_facts.Intersection_commutative	40
Coq.Sets.Powerset_facts.Distributivity	40
Coq.Sets.Powerset_facts.Distributivity_l	40
Coq.Sets.Powerset_facts.Distributivity'	40
Coq.Sets.Powerset_facts.Union_add	40	8.1.1	search with cache (only 1: unfold Add at 1; only 1: unfold Add at 1; only 1: auto  9 with sets).	1.34072089195	719
Coq.Sets.Powerset_facts.Non_disjoint_union	40	0.0.0.1.1.0.1.1.0.0.0.2.1	search with cache (only 1: unfold Add; only 1: intros x y z; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x1 H'0; only 1: elim H'0; only 1: auto with sets; only 1: intros x2 H'1; only 1: elim H'1; only 1: auto with sets; only 1: red; only 1: auto with sets).	4.49710392952	3027
Coq.Sets.Powerset_facts.Non_disjoint_union'	40
Coq.Sets.Powerset_facts.singlx	40	0.1.1.2.2.1	search with cache (only 1: unfold Add at 1; only 1: intros x y H'; only 1: elim H'; only 1: intros x1 H'0; only 1: elim H'0; only 1: auto with sets).	0.456429004669	255
Coq.Sets.Powerset_facts.incl_add	40	0.0	search with cache (only 1: unfold Add; only 1: auto with sets).	0.0131599903107	2
Coq.Sets.Powerset_facts.incl_add_x	40
Coq.Sets.Powerset_facts.Add_commutative	40	8.0	search with cache (only 1: unfold Add; only 1: auto  9 with sets).	0.168774843216	48
Coq.Sets.Powerset_facts.Add_commutative'	40
Coq.Sets.Powerset_facts.Add_distributes	40
Coq.Sets.Powerset_facts.setcover_intro	40	0	search with cache (only 1: auto with sets).	0.0109069347382	1
Coq.Sets.Powerset_facts.Disjoint_Intersection	40
Coq.Sets.Powerset_facts.Intersection_Empty_set_l	40	1.1.0.0.0	search with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intuition; only 1: intuition).	0.0230119228363	7
Coq.Sets.Powerset_facts.Intersection_Empty_set_r	40	0.0	search with cache (only 1: intros; only 1: auto with sets).	0.0153241157532	2
Coq.Sets.Powerset_facts.Seminus_Empty_set_l	40	0.1.0.1.0.1.0.0.0.2	search with cache (only 1: intros X H'; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x0 H'0; only 1: elim H'0; only 1: auto with sets; only 1: red; only 1: intros x0 H'0; only 1: elim H'0).	1.14320993423	1029
Coq.Sets.Powerset_facts.Seminus_Empty_set_r	40	0.0.0.0.1.0.0.0	search with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x H1; only 1: destruct H1; only 1: unfold In in *; only 1: assumption; only 1: intuition).	0.0330581665039	9
Coq.Sets.Powerset_facts.Setminus_Union_l	40
Coq.Sets.Powerset_facts.Setminus_Union_r	40
Coq.Sets.Powerset_facts.Setminus_Disjoint_noop	40
Coq.Sets.Powerset_facts.Setminus_Included_empty	40	1.0.0.0.0.1.0.0.1.0	search with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x H1; only 1: inversion_clear H1; only 1: intuition; only 1: contradict H; only 1: intuition; only 1: intros x H1; only 1: inversion_clear H1).	0.467875003815	279
Coq.Sets.Constructive_sets.Extension	40	3.1.3.3.1.3.9.11	search with cache (only 1: red; only 1: split; only 1: intros Hfst Hsnd; only 1: destruct H; only 1: trivial; only 1: intros Hfst Hsnd; only 1: destruct H; only 1: trivial).	2.96637916565	12293
Coq.Sets.Constructive_sets.Noone_in_empty	40	7.5.4.2	search with cache (only 1: red; only 1: intro H; only 1: intro H1; only 1: elim H1).	0.512778997421	1265
Coq.Sets.Constructive_sets.Included_Empty	40	1.0.0	search with cache (only 1: red; only 1: red; only 1: destruct 1).	0.0112161636353	4
Coq.Sets.Constructive_sets.Add_intro1	40	0.17.5	search with cache (only 1: intros B C H'; only 1: left; only 1: auto with sets).	2.61800217628	6275
Coq.Sets.Constructive_sets.Add_intro2	40	0.0	search with cache (only 1: unfold Add at 1; only 1: auto with sets).	0.011125087738	2
Coq.Sets.Constructive_sets.Inhabited_add	40	0.38.4.4.0	search with cache (only 1: unfold Add at 1; only 1: intro; only 1: intro; only 1: exists x; only 1: auto with sets).	5.46169114113	37030
Coq.Sets.Constructive_sets.Inhabited_not_empty	40
Coq.Sets.Constructive_sets.Add_not_Empty	40
Coq.Sets.Constructive_sets.not_Empty_Add	40	1.8.14.2.2.0	search with cache (only 1: intros A x; only 1: red; only 1: intro H'1; only 1: elim (Noone_in_empty x); only 1: rewrite H'1; only 1: auto using Add_intro2 with sets).	4.73009991646	14644
Coq.Sets.Constructive_sets.Singleton_inv	40	2.4	search with cache (only 1: destruct 1; only 1: auto with sets).	0.0271620750427	31
Coq.Sets.Constructive_sets.Singleton_intro	40	1.0.0	search with cache (only 1: intros x y H'; only 1: elim H'; only 1: trivial with sets).	0.0136549472809	4
Coq.Sets.Constructive_sets.Union_inv	40	1.1.12	search with cache (only 1: destruct 1; only 1: auto with sets; only 1: auto with sets).	0.435296058655	585
Coq.Sets.Constructive_sets.Add_inv	40
Coq.Sets.Constructive_sets.Intersection_inv	40	0.1.0	search with cache (only 1: intros B C x H'; only 1: elim H'; only 1: auto with sets).	0.0157430171967	4
Coq.Sets.Constructive_sets.Couple_inv	40	2.2.4.1.0.0	search with cache (only 1: intros A x y H'; only 1: induction H'; only 1: left; only 1: trivial with sets; only 1: right; only 1: trivial with sets).	0.663437128067	864
Coq.Sets.Constructive_sets.Setminus_intro	40	0	search with cache (only 1: auto with sets).	0.00897479057312	1
Coq.Sets.Constructive_sets.Strict_Included_intro	40	3.0.0.0	search with cache (only 1: intro; only 1: intro; only 1: red; only 1: auto with sets).	0.0174911022186	7
Coq.Sets.Constructive_sets.Strict_Included_strict	40	0.6.4	search with cache (only 1: intros X H'; only 1: elim H'; only 1: auto with sets).	0.176671981812	311
Coq.Sets.Finite_sets.cardinal_invert	40
Coq.Sets.Finite_sets.cardinal_elim	40	5.5.0	search with cache (only 1: induction 1; only 1: auto with sets; only 1: auto with sets).	0.125371217728	135