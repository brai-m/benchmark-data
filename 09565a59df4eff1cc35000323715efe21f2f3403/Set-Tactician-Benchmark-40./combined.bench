
Coq.micromega.ZifyClasses.mkapp2	40	1.12	synth with cache (only 1: subst; only 1: auto).	0.0365879535675	76
Coq.micromega.ZifyClasses.mkapp	40	8.0	synth with cache (only 1: subst; only 1: trivial).	0.013081073761	10
Coq.micromega.ZifyClasses.mkrel	40	4.0	synth with cache (only 1: subst; only 1: auto).	0.0116121768951	6
Coq.micromega.ZifyClasses.and_morph	40	5.1.0.0.1.2.0.0.0.0.16	synth with cache (only 1: intro x; only 1: intros A B C [H1 H2] [H3 H4]; only 1: split; only 1: intros [? ?]; only 1: split; only 1: auto; only 1: auto; only 1: intros [? ?]; only 1: split; only 1: auto; only 1: auto).	15.4697899818	38020
Coq.micromega.ZifyClasses.or_morph	40	0.0	synth with cache (only 1: intros; only 1: tauto).	0.0229260921478	2
Coq.micromega.ZifyClasses.impl_morph	40	0.0	synth with cache (only 1: intros; only 1: tauto).	0.0144770145416	2
Coq.micromega.ZifyClasses.iff_morph	40	0.0	synth with cache (only 1: intros; only 1: tauto).	0.0271592140198	2
Coq.micromega.ZifyClasses.not_morph	40	0.0	synth with cache (only 1: intros; only 1: tauto).	0.0124049186707	2
Coq.micromega.ZifyClasses.eq_iff	40	0.0.0.1	synth with cache (only 1: intros A B []; only 1: split; only 1: auto; only 1: auto).	0.0119779109955	14
Coq.micromega.ZifyClasses.rew_iff	40	3	synth with cache (only 1: tauto).	0.00805902481079	4
Coq.micromega.ZifyClasses.rew_iff_rev	40	4	synth with cache (only 1: tauto).	0.00821089744568	5
Coq.micromega.Env.S.jump_add	40
Coq.micromega.Env.S.jump_simpl	40
Coq.micromega.Env.S.jump_tl	40	1.0.1.51.0.0	synth with cache (only 1: unfold tail; only 1: rewrite <- ?jump_add; only 1: rewrite ?Pos.add_1_r, ?Pos.pred_N_succ; only 1: unfold jump; only 1: f_equal; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l).	38.5327401161	79112
Coq.micromega.Env.S.jump_succ	40	2.2.1.1	synth with cache (only 1: rewrite <- ?jump_add; only 1: unfold jump; only 1: f_equal; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l).	0.0437688827515	32
Coq.micromega.Env.S.jump_pred_double	40
Coq.micromega.Env.S.nth_spec	40
Coq.micromega.Env.S.nth_jump	40	27	synth with cache (only 1: now destruct p).	0.201584100723	409
Coq.micromega.Env.S.nth_pred_double	40	0.0.0	synth with cache (only 1: unfold hd, nth, tail, jump; only 1: f_equal; only 1: now rewrite Pos.add_1_r, Pos.succ_pred_double, Pos.add_diag).	0.0183579921722	3
Coq.micromega.Tauto.S.EVAL.eval_f_rew	40	33.0	synth with cache (only 1: intro n; only 1: now intro l; induction l).	30.0442910194	13241
Coq.micromega.Tauto.S.eiff_refl	40
Coq.micromega.Tauto.S.eiff_sym	40	0.0.10.0.0.0	synth with cache (only 1: destruct k; only 1: simpl; only 1: tauto; only 1: induction 1; only 1: simpl; only 1: tauto).	1.17409205437	406
Coq.micromega.Tauto.S.eiff_trans	40	0.4.2.0.0	synth with cache (only 1: destruct k; only 1: simpl; only 1: tauto; only 1: destruct 2; only 1: intuition).	0.981922149658	152
Coq.micromega.Tauto.S.hold_eiff	40
Coq.micromega.Tauto.S.eiff_eq	40	2.0.1.0.0	synth with cache (only 1: destruct k; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).	0.0760440826416	8
Coq.micromega.Tauto.S.eAnd_morph_Proper	40	0.0.0.0.0.0	synth with cache (only 1: destruct k; only 1: simpl; only 1: intros; only 1: intuition congruence; only 1: simpl; only 1: intuition congruence).	0.296309947968	6
Coq.micromega.Tauto.S.eOR_morph_Proper	40	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct k; only 1: simpl in *; only 1: intuition congruence; only 1: simpl in *; only 1: intuition congruence).	0.151664018631	6
Coq.micromega.Tauto.S.eIMPL_morph_Proper	40	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct k; only 1: simpl in *; only 1: intuition congruence; only 1: simpl in *; only 1: intuition congruence).	0.132215976715	6
Coq.micromega.Tauto.S.eIFF_morph_Proper	40	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct k; only 1: simpl in *; only 1: intuition congruence; only 1: simpl in *; only 1: intuition congruence).	0.18824505806	6
Coq.micromega.Tauto.S.eNOT_morph_Proper	40	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct k; only 1: simpl in *; only 1: intuition congruence; only 1: simpl in *; only 1: intuition congruence).	0.103217840195	6
Coq.micromega.Tauto.S.eval_f_morph	40	2.7.3.9.0.9	synth with cache (only 1: destruct k; only 1: simpl; only 1: fix odd_spec 1; only 1: intuition congruence; only 1: fix Odd_alt_Odd 1; only 1: intuition congruence).	28.3073728085	13887
Coq.micromega.EnvRing.MakeRingPol.radd_ext_Proper	40	16.4	synth with cache (only 1: intuition; only 1: firstorder).	0.711071968079	550
Coq.micromega.EnvRing.MakeRingPol.rmul_ext_Proper	40	15.5	synth with cache (only 1: intuition; only 1: firstorder).	0.804438114166	514
Coq.micromega.EnvRing.MakeRingPol.ropp_ext_Proper	40	10.3.5	synth with cache (only 1: elim ARth; only 1: intros A R1 Sym B R2 f Hf; only 1: firstorder).	1.08021807671	532
Coq.micromega.EnvRing.MakeRingPol.rsub_ext_Proper	40
Coq.micromega.EnvRing.MakeRingPol.Peq_ok	40
Coq.micromega.EnvRing.MakeRingPol.Peq_spec	40
Coq.micromega.EnvRing.MakeRingPol.Pphi0	40	87	synth with cache (only 1: CRelationClasses.simpl_crelation).	4.05295300484	9001
Coq.micromega.EnvRing.MakeRingPol.Pphi1	40	88	synth with cache (only 1: firstorder).	2.94913816452	7840
Coq.micromega.EnvRing.MakeRingPol.env_morph	40
Coq.micromega.EnvRing.MakeRingPol.Pjump_add	40
Coq.micromega.EnvRing.MakeRingPol.Pjump_xO_tail	40
Coq.micromega.EnvRing.MakeRingPol.Pjump_pred_double	40
Coq.micromega.EnvRing.MakeRingPol.mkPinj_ok	40
Coq.micromega.EnvRing.MakeRingPol.pow_pos_add	40
Coq.micromega.EnvRing.MakeRingPol.ceqb_spec	40
Coq.micromega.EnvRing.MakeRingPol.mkPX_ok	40
Coq.micromega.EnvRing.MakeRingPol.PaddC_ok	40
Coq.micromega.EnvRing.MakeRingPol.PsubC_ok	40	0.2.0.0.1.0.0.0.0.0.0.0	synth with cache (only 1: revert l; only 1: induction P as [| | ? ? ? ? IHP2]; only 1: simpl; only 1: intros; only 1: Esimpl; only 1: simpl; only 1: intros; only 1: trivial; only 1: simpl; only 1: intros; only 1: rewrite IHP2; only 1: rsimpl).	14.0586059093	2142
Coq.micromega.EnvRing.MakeRingPol.PmulC_aux_ok	40
Coq.micromega.EnvRing.MakeRingPol.PmulC_ok	40
Coq.micromega.EnvRing.MakeRingPol.Popp_ok	40	0.1.1.0.0.1.0.0.0.0.0.0.1	synth with cache (only 1: revert l; only 1: induction P as [| | ? IHP1 ? ? IHP2]; only 1: simpl; only 1: intros; only 1: Esimpl; only 1: simpl; only 1: intros; only 1: trivial; only 1: simpl; only 1: intros; only 1: Esimpl; only 1: rewrite IHP1, IHP2; only 1: rsimpl).	19.9852049351	3360
Coq.micromega.EnvRing.MakeRingPol.PaddX_ok	40
Coq.micromega.EnvRing.MakeRingPol.Padd_ok	40
Coq.micromega.EnvRing.MakeRingPol.PsubX_ok	40
Coq.micromega.EnvRing.MakeRingPol.Psub_ok	40
Coq.micromega.EnvRing.MakeRingPol.PmulI_ok	40
Coq.micromega.EnvRing.MakeRingPol.Pmul_ok	40
Coq.micromega.EnvRing.MakeRingPol.Psquare_ok	40
Coq.micromega.EnvRing.MakeRingPol.Mphi_morph	40
Coq.micromega.EnvRing.MakeRingPol.Mjump_xO_tail	40
Coq.micromega.EnvRing.MakeRingPol.Mjump_pred_double	40	0.1.0.0	synth with cache (only 1: apply Mphi_morph; only 1: intros; only 1: rewrite jump_pred_double; only 1: now jump_simpl).	0.0982549190521	5
Coq.micromega.EnvRing.MakeRingPol.Mjump_add	40	0.0.0.0.1	synth with cache (only 1: apply Mphi_morph; only 1: intros; only 1: rewrite <- jump_add; only 1: f_equal; only 1: apply Pos.add_comm).	0.0940289497375	6
Coq.micromega.EnvRing.MakeRingPol.mkZmon_ok	40	3.3.6.11	synth with cache (only 1: induction M as [| ? ? IHM| ? ? IHM]; only 1: rsimpl; only 1: now jump_simpl; only 1: now jump_simpl).	2.80219197273	913
Coq.micromega.EnvRing.MakeRingPol.zmon_pred_ok	40
Coq.micromega.EnvRing.MakeRingPol.mkVmon_ok	40
Coq.micromega.EnvRing.MakeRingPol.Mphi_ok	40
Coq.micromega.EnvRing.MakeRingPol.POneSubst_ok	40
Coq.micromega.EnvRing.MakeRingPol.PNSubst1_ok	40
Coq.micromega.EnvRing.MakeRingPol.PNSubst_ok	40
Coq.micromega.EnvRing.MakeRingPol.PSubstL1_ok	40
Coq.micromega.EnvRing.MakeRingPol.PSubstL_ok	40
Coq.micromega.EnvRing.MakeRingPol.PNSubstL_ok	40
Coq.micromega.EnvRing.MakeRingPol.mkX_ok	40
Coq.micromega.EnvRing.MakeRingPol.POWER.Ppow_pos_ok	40
Coq.micromega.EnvRing.MakeRingPol.POWER.Ppow_N_ok	40
Coq.micromega.EnvRing.MakeRingPol.NORM_SUBST_REC.norm_aux_PEadd	40
Coq.micromega.EnvRing.MakeRingPol.NORM_SUBST_REC.norm_aux_PEopp	40
Coq.micromega.EnvRing.MakeRingPol.NORM_SUBST_REC.norm_aux_spec	40
Coq.micromega.Refl.make_impl_true	40	1.0.3.0.3	synth with cache (only 1: intros; only 1: induction l; only 1: constructor; only 1: simpl; only 1: auto).	0.181260108948	113
Coq.micromega.Refl.make_impl_map	40	6.1.0.0.3.7	synth with cache (only 1: induction l as [| ? ? IHl]; only 1: intro n; only 1: cbn; only 1: reflexivity; only 1: intros; only 1: firstorder).	2.89447188377	2135
Coq.micromega.Refl.make_conj_cons	40	0.0.1.1.2.0.11	synth with cache (only 1: intros f x l; only 1: simpl; only 1: intros []; only 1: simpl; only 1: intuition; only 1: simpl; only 1: now split; [ intro H; inversion H | constructor ]).	7.44384503365	7065
Coq.micromega.Refl.make_conj_impl	40
Coq.micromega.Refl.make_conj_in	40
Coq.micromega.Refl.make_conj_app	40
Coq.micromega.Refl.make_conj_rapp	40
Coq.micromega.Refl.not_make_conj_cons	40	0.0.3.2.1.0	synth with cache (only 1: intros A eval a l; only 1: intro n; only 1: rewrite make_conj_cons; only 1: split; only 1: tauto; only 1: tauto).	0.795616865158	210
Coq.micromega.Refl.not_make_conj_app	40
Coq.Vectors.VectorEq.BEQ.eqb_nat_eq	40	0.11.5.0.0	synth with cache (only 1: intros m n p; only 1: revert n; only 1: intros H; only 1: fix odd_specT 1; only 1: auto).	2.66180992126	2011
Coq.Vectors.VectorEq.BEQ.eqb_eq	40	3.2.7.0	synth with cache (only 1: intros ? v2; only 1: fix even_spec 1; only 1: intros Hbeq; only 1: auto).	1.51979804039	748
Coq.Vectors.VectorEq.BEQ.eq_dec	40
Coq.Vectors.VectorEq.CAST.cast	40	6	synth with cache (only 1: congruence).	0.191753864288	36
Coq.Vectors.VectorDef.BASES.trunc	40
Coq.Vectors.VectorSpec.eta	40
Coq.Vectors.VectorSpec.eq_nth_iff	40
Coq.Vectors.VectorSpec.nth_order_hd	40
Coq.Vectors.VectorSpec.nth_order_tl	40
Coq.Vectors.VectorSpec.nth_order_last	40
Coq.Vectors.VectorSpec.nth_order_ext	40	3.16	synth with cache (only 1: fix gcd_greatest 1; only 1: now simpl).	5.15345287323	4335
Coq.Vectors.VectorSpec.shiftin_nth	40
Coq.Vectors.VectorSpec.shiftin_last	40	5.0.11.4.0	synth with cache (only 1: generalize dependent n; only 1: intros x l; only 1: induction l as [| y l IHl]; only 1: now simpl; only 1: auto).	4.82503414154	3790
Coq.Vectors.VectorSpec.shiftrepeat_nth	40
Coq.Vectors.VectorSpec.shiftrepeat_last	40
Coq.Vectors.VectorSpec.nth_order_replace_eq	40
Coq.Vectors.VectorSpec.nth_order_replace_neq	40
Coq.Vectors.VectorSpec.replace_id	40
Coq.Vectors.VectorSpec.replace_replace_eq	40
Coq.Vectors.VectorSpec.replace_replace_neq	40
Coq.Vectors.VectorSpec.const_nth	40	0.1.0.0	synth with cache (only 1: induction p as [| ? p IHp]; only 1: now split; only 1: simpl; only 1: now rewrite IHp).	0.027941942215	5
Coq.Vectors.VectorSpec.map_id	40	2.0.18	synth with cache (only 1: fix OddT_EvenT_rect 1; only 1: intros n p; only 1: now f_equal).	5.15863513947	5241
Coq.Vectors.VectorSpec.map_map	40	3.1.5.0.0.3.1	synth with cache (only 1: intros; only 1: induction v as [| ? ? v IHv]; only 1: simpl; only 1: auto; only 1: cbn; only 1: f_equal; only 1: intuition).	3.22158002853	2662
Coq.Vectors.VectorSpec.map_ext_in	40
Coq.Vectors.VectorSpec.map_ext	40	0.1.0.4	synth with cache (only 1: intro l'; only 1: intros; only 1: apply List.map_ext_in; only 1: intuition).	0.272444009781	104
Coq.Vectors.VectorSpec.nth_map	40
Coq.Vectors.VectorSpec.nth_map2	40
Coq.Vectors.VectorSpec.fold_left_right_assoc_eq	40	0.0.0.2.33.2	synth with cache (only 1: revert n v; only 1: fix OddT_EvenT_rect 1; only 1: intro l; only 1: induction l as [| a1 l IHl]; only 1: auto; only 1: now simpl).	23.1267361641	22908
Coq.Vectors.VectorSpec.take_O	40	0.2.1	synth with cache (only 1: intros n m H1 H2; only 1: simpl; only 1: auto).	0.0226240158081	6
Coq.Vectors.VectorSpec.take_idem	40	2.17.1	synth with cache (only 1: intro x; only 1: fix gcd_greatest 1; only 1: intuition).	21.1080691814	14859
Coq.Vectors.VectorSpec.take_app	40	4.0.2.0.1.9.0	synth with cache (only 1: intros A p; only 1: intros l d; only 1: induction l as [| ? l IHl]; only 1: reflexivity; only 1: simpl; only 1: intros l1 l2; only 1: now f_equal).	7.22562003136	5349
Coq.Vectors.VectorSpec.take_prf_irr	40
Coq.Vectors.VectorSpec.uncons_cons	40	7.0	synth with cache (only 1: intro l; only 1: split).	0.0435121059418	23
Coq.Vectors.VectorSpec.append_comm_cons	40	0	synth with cache (only 1: now simpl).	0.00966596603394	1
Coq.Vectors.VectorSpec.splitat_append	40	2.6.0.2.0.0.5	synth with cache (only 1: intro l; only 1: induction v as [| ? ? v IHv]; only 1: now simpl; only 1: intros; only 1: simpl; only 1: rewrite IHv; only 1: auto).	6.76697397232	3486
Coq.Vectors.VectorSpec.append_splitat	40
Coq.Vectors.VectorSpec.Forall_impl	40
Coq.Vectors.VectorSpec.Forall_forall	40
Coq.Vectors.VectorSpec.Forall_nth_order	40
Coq.Vectors.VectorSpec.Forall2_nth_order	40
Coq.Vectors.VectorSpec.to_list_of_list_opp	40	2.11.0.0	synth with cache (only 1: induction l as [| ? ? H]; only 1: now simpl; only 1: cbn; only 1: now f_equal).	2.49511599541	1698
Coq.Vectors.VectorSpec.length_to_list	40	5.5.0.0.1	synth with cache (only 1: induction v as [| ? ? v IHv]; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).	1.22000598907	656
Coq.Vectors.VectorSpec.of_list_to_list_opp	40
Coq.Vectors.VectorSpec.to_list_nil	40	0	synth with cache (only 1: now simpl).	0.00911998748779	1
Coq.Vectors.VectorSpec.to_list_cons	40	0	synth with cache (only 1: now constructor).	0.0110499858856	1
Coq.Vectors.VectorSpec.to_list_hd	40	0	synth with cache (only 1: now rewrite (eta v)).	0.0121548175812	1
Coq.Vectors.VectorSpec.to_list_last	40	0.5.8.0.0.0.1	synth with cache (only 1: generalize dependent n; only 1: refine (@rectS _ _ _ _); only 1: intro Hneq; only 1: now simpl; only 1: intro l'; only 1: intros ? ?; only 1: now rewrite (eta v)).	13.2725958824	6601
Coq.Vectors.VectorSpec.to_list_const	40	0.1.0.0.9	synth with cache (only 1: induction n as [| n IHn]; only 1: reflexivity; only 1: simpl; only 1: unfold to_list; only 1: now f_equal).	0.506805896759	188
Coq.Vectors.VectorSpec.to_list_nth_order	40
Coq.Vectors.VectorSpec.to_list_tl	40	0.0.1	synth with cache (only 1: apply (fun P IS => caseS P IS v); only 1: intros; only 1: reflexivity).	0.023775100708	4
Coq.Vectors.VectorSpec.to_list_append	40
Coq.Vectors.VectorSpec.to_list_rev_append_tail	40
Coq.Vectors.VectorSpec.to_list_rev_append	40
Coq.Vectors.VectorSpec.to_list_rev	40
Coq.Vectors.VectorSpec.to_list_map	40	1.7.0.2.0.0.4	synth with cache (only 1: induction v as [| ? ? v IHv]; only 1: simpl; only 1: reflexivity; only 1: unfold to_list; only 1: simpl; only 1: f_equal; only 1: auto).	7.3401081562	4405
Coq.Vectors.VectorSpec.to_list_fold_left	40
Coq.Vectors.VectorSpec.to_list_fold_right	40	2.0.2.0	synth with cache (only 1: induction v; only 1: auto; only 1: simpl; only 1: now cbn; f_equal).	0.0292232036591	8
Coq.Vectors.VectorSpec.to_list_Forall	40
Coq.Vectors.VectorSpec.to_list_Exists	40
Coq.Vectors.VectorSpec.to_list_In	40
Coq.Vectors.VectorSpec.to_list_Forall2	40
Coq.Vectors.Fin.of_nat_ext	40
Coq.Vectors.Fin.of_nat_to_nat_inv	40
Coq.Vectors.Fin.to_nat_of_nat	40
Coq.Vectors.Fin.to_nat_inj	40
Coq.Vectors.Fin.L_sanity	40
Coq.Vectors.Fin.L_R	40
Coq.Vectors.Fin.R_sanity	40
Coq.Vectors.Fin.depair_sanity	40
Coq.Vectors.Fin.eqb_nat_eq	40	2.5.2.15	synth with cache (only 1: intro m; only 1: intros a Ha; only 1: fix odd_specT 1; only 1: assumption).	1.9298248291	2250
Coq.Vectors.Fin.eqb_eq	40	4.5.1	synth with cache (only 1: intros ? q; only 1: fix even_spec 1; only 1: easy).	2.1084458828	1243
Coq.Vectors.Fin.eq_dec	40
Coq.Vectors.Fin.cast	40	1.0.2.1.2.4	synth with cache (only 1: intros ? q; only 1: induction n; only 1: destruct m; only 1: trivial; only 1: easy; only 1: now intros ->).	0.668035984039	494
Coq.rtauto.Bintree.Gt_Psucc	40
Coq.rtauto.Bintree.Psucc_Gt	40	0.0.0.1.4.0.0.1.3.2	synth with cache (only 1: induction p as [p| p| ]; only 1: simpl; only 1: Pos.simpl_compare; only 1: now rewrite IHp; only 1: rewrite <- Pos.compare_succ_succ; only 1: simpl; only 1: Pos.simpl_compare; only 1: now rewrite IHp; only 1: simpl; only 1: trivial).	10.1576881409	4223
Coq.rtauto.Bintree.map_app	40	0.0.0.0.2.0.0.0	synth with cache (only 1: intros A B f l; only 1: induction l as [| a l IHl]; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: rewrite IHl; only 1: auto).	0.35561299324	36
Coq.rtauto.Bintree.length_map	40	0.0.0.0.0.0	synth with cache (only 1: intro p; only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0793590545654	6
Coq.rtauto.Bintree.Lget_map	40
Coq.rtauto.Bintree.Lget_app	40
Coq.rtauto.Bintree.Lget_app_Some	40	3.8.4	synth with cache (only 1: intro l1; only 1: fix gcd_greatest 1; only 1: auto).	40.0148239136	7485
Coq.rtauto.Bintree.Store.Tget_Tempty	40	7.1.0.1.5.3	synth with cache (only 1: intro; only 1: destruct p; only 1: simpl; only 1: reflexivity; only 1: split; only 1: split).	3.38714003563	1926
Coq.rtauto.Bintree.Store.Tget_Tadd	40
Coq.rtauto.Bintree.Store.get_empty	40	1.2.1.2	synth with cache (only 1: destruct i; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	0.151549100876	14
Coq.rtauto.Bintree.Store.get_Full_Gt	40
Coq.rtauto.Bintree.Store.get_Full_Eq	40
Coq.rtauto.Bintree.Store.get_push_Full	40
Coq.rtauto.Bintree.Store.Full_push_compat	40
Coq.rtauto.Bintree.Store.Full_index_one_empty	40
Coq.rtauto.Bintree.Store.push_not_empty	40	0.0.18.1	synth with cache (only 1: intro n; only 1: fix even_spec 1; only 1: inversion 1; only 1: congruence).	8.83801102638	4201
Coq.rtauto.Bintree.Store.get_In	40
Coq.Setoids.Setoid.Seq_refl	40	0	synth with cache (only 1: firstorder).	0.00993800163269	1
Coq.Setoids.Setoid.Seq_sym	40	4.2.0.0	synth with cache (only 1: unfold Setoid_Theory in s; only 1: intros; only 1: apply (symmetry (x:=_)); only 1: assumption).	0.0221791267395	12
Coq.Setoids.Setoid.Seq_trans	40	2.0.0.0.0.0.0.0	synth with cache (only 1: unfold Setoid_Theory in s; only 1: intros; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: now transitivity y).	0.0451679229736	13
Coq.Setoids.Setoid.gen_st	40	3	synth with cache (only 1: CRelationClasses.simpl_crelation).	0.0988340377808	60
Coq.Bool.IfProp.Iftrue_inv	40	1.0.4	synth with cache (only 1: destruct 1; only 1: intuition; only 1: discriminate).	0.0524508953094	32
Coq.Bool.IfProp.Iffalse_inv	40	0.0.0.1.0.0	synth with cache (only 1: destruct 1; only 1: intros; only 1: case diff_true_false; only 1: auto with bool; only 1: intros; only 1: auto with bool).	0.0396959781647	7
Coq.Bool.IfProp.IfProp_true	40	0.42.0.11	synth with cache (only 1: intro m; only 1: intros; only 1: inversion_clear H; only 1: trivial).	35.5310208797	121257
Coq.Bool.IfProp.IfProp_false	40	0.0.0.0	synth with cache (only 1: intros A B H; only 1: inversion H; only 1: inversion H; only 1: assumption).	0.0282101631165	4
Coq.Bool.IfProp.IfProp_or	40	0.1.0.0.0	synth with cache (only 1: destruct 1; only 1: left; only 1: assumption; only 1: right; only 1: assumption).	0.0338780879974	12
Coq.Bool.IfProp.IfProp_sum	40	0.0.6.0.0.5.13	synth with cache (only 1: destr_bool; only 1: left; only 1: inversion H; only 1: assumption; only 1: right; only 1: inversion H; only 1: assumption).	4.29150891304	5135
Coq.Bool.BoolOrder.le_refl	40	1.0.3.0	synth with cache (only 1: intros; only 1: destruct b; only 1: destr_bool; only 1: intuition).	0.0144588947296	8
Coq.Bool.BoolOrder.le_trans	40	2.6	synth with cache (only 1: intro y0; only 1: destr_bool).	0.0232350826263	21
Coq.Bool.BoolOrder.le_true	40	0	synth with cache (only 1: destr_bool).	0.00687313079834	1
Coq.Bool.BoolOrder.false_le	40	0	synth with cache (only 1: destr_bool).	0.00707697868347	1
Coq.Bool.BoolOrder.le_compat	40	0.0.1.0.0.0	synth with cache (only 1: apply proper_sym_impl_iff_2; only 1: congruence; only 1: congruence; only 1: reduce; only 1: subst; only 1: trivial).	0.0326838493347	18
Coq.Bool.BoolOrder.lt_irrefl	40	0.0	synth with cache (only 1: destr_bool; only 1: tauto).	0.0116090774536	2
Coq.Bool.BoolOrder.lt_trans	40	0.0	synth with cache (only 1: destr_bool; only 1: intuition).	0.0127799510956	2
Coq.Bool.BoolOrder.lt_compat	40	0	synth with cache (only 1: intuition).	0.0100438594818	1
Coq.Bool.BoolOrder.lt_trichotomy	40	0.0.0.0.1	synth with cache (only 1: destr_bool; only 1: auto; only 1: auto; only 1: intuition; only 1: intuition).	0.0357930660248	6
Coq.Bool.BoolOrder.lt_total	40	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: auto; only 1: auto; only 1: auto; only 1: intuition).	0.027734041214	5
Coq.Bool.BoolOrder.lt_le_incl	40	0.0	synth with cache (only 1: destr_bool; only 1: tauto).	0.0122470855713	2
Coq.Bool.BoolOrder.le_lteq_dec	40	0.0.0.0	synth with cache (only 1: destr_bool; only 1: auto; only 1: auto; only 1: intuition).	0.0254788398743	4
Coq.Bool.BoolOrder.le_lteq	40	1.1.1.1.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0408310890198	9
Coq.Bool.BoolOrder.le_preorder	40	1.10.5.4.2	synth with cache (only 1: constructor; only 1: simpl_relation; only 1: destr_bool; only 1: compute; only 1: destr_bool).	0.585730075836	1295
Coq.Bool.BoolOrder.lt_strorder	40	0.0.3.13.3.3.1	synth with cache (only 1: split; only 1: intros b; only 1: destr_bool; only 1: destruct 1; only 1: intros b; only 1: destr_bool; only 1: auto).	0.864263057709	1561
Coq.Bool.DecBool.ifdec_left	40	0.2.6.1.0.2	synth with cache (only 1: intro A; only 1: intro H; only 1: intro n; only 1: intros [?| ?]; only 1: auto; only 1: contradiction).	1.62969493866	1831
Coq.Bool.DecBool.ifdec_right	40	1.10.1.0.0	synth with cache (only 1: intros A B C H **; only 1: case H; only 1: intro; only 1: contradiction; only 1: auto).	5.74264502525	4172
Coq.Bool.Sumbool.sumbool_of_bool	40	0.0.11.0	synth with cache (only 1: intro H; only 1: destruct H; only 1: auto; only 1: auto).	0.0655000209808	146
Coq.Bool.Sumbool.bool_eq_rec	40	0.3.0.4	synth with cache (only 1: intros b; only 1: destruct b; only 1: auto; only 1: auto).	0.0715961456299	76
Coq.Bool.Sumbool.bool_eq_ind	40	0.0.0.0	synth with cache (only 1: intros b; only 1: destruct b; only 1: auto; only 1: auto).	0.0172710418701	4
Coq.Bool.Sumbool.connectives.sumbool_and	40
Coq.Bool.Sumbool.connectives.sumbool_or	40	0.0.0.0.0.0.0	synth with cache (only 1: case H1; only 1: case H2; only 1: auto; only 1: auto; only 1: case H2; only 1: auto; only 1: auto).	0.0253961086273	7
Coq.Bool.Sumbool.connectives.sumbool_not	40	0.0.0.0.0.0.0	synth with cache (only 1: case H1; only 1: case H2; only 1: auto; only 1: auto; only 1: case H2; only 1: auto; only 1: auto).	0.0221409797668	7
Coq.Bool.Sumbool.bool_of_sumbool	40
Coq.Bool.Bool.bool_dec	40
Coq.Bool.Bool.diff_true_false	40	3	synth with cache (only 1: discriminate).	0.0189099311829	13
Coq.Bool.Bool.diff_false_true	40	0	synth with cache (only 1: discriminate).	0.0125920772552	1
Coq.Bool.Bool.eq_true_false_abs	40	2.1.5.4.0	synth with cache (only 1: intro H; only 1: intro z; only 1: destruct H; only 1: discriminate; only 1: discriminate).	0.316617965698	458
Coq.Bool.Bool.not_true_is_false	40	2.8.0	synth with cache (only 1: destr_bool; only 1: reflexivity || destruct H; only 1: exact eq_refl).	0.0903830528259	115
Coq.Bool.Bool.not_false_is_true	40	0.0	synth with cache (only 1: destr_bool; only 1: intuition).	0.0195920467377	2
Coq.Bool.Bool.not_true_iff_false	40	0.0.0.8.2	synth with cache (only 1: intro H; only 1: split; only 1: destr_bool; only 1: intuition; only 1: destr_bool).	0.589457035065	562
Coq.Bool.Bool.not_false_iff_true	40	0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0236918926239	3
Coq.Bool.Bool.le_implb	40	0.0.0.1.2	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.116324901581	88
Coq.Bool.Bool.compare_spec	40	0.1.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0278100967407	6
Coq.Bool.Bool.eqb_subst	40	0	synth with cache (only 1: destr_bool).	0.0160050392151	1
Coq.Bool.Bool.eqb_reflx	40	0	synth with cache (only 1: destr_bool).	0.0136060714722	1
Coq.Bool.Bool.eqb_prop	40	0	synth with cache (only 1: destr_bool).	0.0150818824768	1
Coq.Bool.Bool.eqb_true_iff	40	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0308980941772	5
Coq.Bool.Bool.eqb_false_iff	40	0.0.0.0.1	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0334930419922	6
Coq.Bool.Bool.negb_orb	40	0	synth with cache (only 1: destr_bool).	0.0167000293732	1
Coq.Bool.Bool.negb_andb	40	0	synth with cache (only 1: destr_bool).	0.0140800476074	1
Coq.Bool.Bool.negb_involutive	40	1	synth with cache (only 1: destr_bool).	0.0140628814697	2
Coq.Bool.Bool.negb_involutive_reverse	40	0	synth with cache (only 1: destr_bool).	0.0136668682098	1
Coq.Bool.Bool.negb_sym	40	0	synth with cache (only 1: destr_bool).	0.0142619609833	1
Coq.Bool.Bool.no_fixpoint_negb	40	0	synth with cache (only 1: destr_bool).	0.0146119594574	1
Coq.Bool.Bool.eqb_negb1	40	0	synth with cache (only 1: destr_bool).	0.0122408866882	1
Coq.Bool.Bool.eqb_negb2	40	0	synth with cache (only 1: destr_bool).	0.011871099472	1
Coq.Bool.Bool.if_negb	40	2	synth with cache (only 1: destr_bool).	0.0193319320679	12
Coq.Bool.Bool.negb_true_iff	40	0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0222129821777	3
Coq.Bool.Bool.negb_false_iff	40	0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0224199295044	3
Coq.Bool.Bool.orb_true_iff	40	0.1.1.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0384600162506	7
Coq.Bool.Bool.orb_false_iff	40	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0378711223602	5
Coq.Bool.Bool.orb_true_elim	40	0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: auto; only 1: auto).	0.0246338844299	4
Coq.Bool.Bool.orb_prop	40	0.0.0.0.0.0	synth with cache (only 1: intro b1; only 1: destruct b1; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.028391122818	6
Coq.Bool.Bool.orb_true_intro	40	1.0.0.0.0.0.1	synth with cache (only 1: intro b1; only 1: destruct b1; only 1: simpl; only 1: auto; only 1: simpl; only 1: destr_bool; only 1: intuition).	0.132797956467	55
Coq.Bool.Bool.orb_false_intro	40	7.0	synth with cache (only 1: intros; only 1: destr_bool).	0.0408771038055	9
Coq.Bool.Bool.orb_false_elim	40	0.0.3.0.0.1	synth with cache (only 1: intro b1; only 1: destruct b1; only 1: simpl; only 1: destr_bool; only 1: simpl; only 1: auto).	0.0790438652039	34
Coq.Bool.Bool.orb_diag	40	0	synth with cache (only 1: destr_bool).	0.0336360931396	1
Coq.Bool.Bool.orb_true_r	40	0	synth with cache (only 1: destr_bool).	0.0124039649963	1
Coq.Bool.Bool.orb_true_l	40	0	synth with cache (only 1: destr_bool).	0.0121810436249	1
Coq.Bool.Bool.orb_false_r	40	0	synth with cache (only 1: destr_bool).	0.0120589733124	1
Coq.Bool.Bool.orb_false_l	40	0	synth with cache (only 1: destr_bool).	0.0121660232544	1
Coq.Bool.Bool.orb_negb_r	40	0	synth with cache (only 1: destr_bool).	0.0141680240631	1
Coq.Bool.Bool.orb_negb_l	40	0	synth with cache (only 1: destr_bool).	0.0139758586884	1
Coq.Bool.Bool.orb_comm	40	0	synth with cache (only 1: destr_bool).	0.0137920379639	1
Coq.Bool.Bool.orb_assoc	40	1	synth with cache (only 1: destr_bool).	0.0264980792999	11
Coq.Bool.Bool.andb_true_iff	40	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.034117937088	5
Coq.Bool.Bool.andb_false_iff	40	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0357859134674	5
Coq.Bool.Bool.andb_true_eq	40	0.5.1	synth with cache (only 1: intro b1; only 1: destr_bool; only 1: intuition).	0.133096933365	67
Coq.Bool.Bool.andb_false_intro1	40	0	synth with cache (only 1: destr_bool).	0.0144240856171	1
Coq.Bool.Bool.andb_false_intro2	40	0.0.0	synth with cache (only 1: intros; only 1: apply andb_false_iff; only 1: auto).	0.0182931423187	3
Coq.Bool.Bool.andb_false_r	40	1	synth with cache (only 1: destr_bool).	0.0124170780182	2
Coq.Bool.Bool.andb_false_l	40	0	synth with cache (only 1: destr_bool).	0.0123271942139	1
Coq.Bool.Bool.andb_diag	40	0	synth with cache (only 1: destr_bool).	0.012668132782	1
Coq.Bool.Bool.andb_true_r	40	0	synth with cache (only 1: destr_bool).	0.0123510360718	1
Coq.Bool.Bool.andb_true_l	40	0	synth with cache (only 1: destr_bool).	0.0124480724335	1
Coq.Bool.Bool.andb_false_elim	40	0.0.0.1	synth with cache (only 1: destr_bool; only 1: auto; only 1: auto; only 1: auto).	0.0410788059235	15
Coq.Bool.Bool.andb_negb_r	40	0	synth with cache (only 1: destr_bool).	0.0130369663239	1
Coq.Bool.Bool.andb_negb_l	40	0	synth with cache (only 1: destr_bool).	0.0130300521851	1
Coq.Bool.Bool.andb_comm	40	0	synth with cache (only 1: destr_bool).	0.0142531394958	1
Coq.Bool.Bool.andb_assoc	40	0	synth with cache (only 1: destr_bool).	0.0178370475769	1
Coq.Bool.Bool.andb_orb_distrib_r	40	0	synth with cache (only 1: destr_bool).	0.0199201107025	1
Coq.Bool.Bool.andb_orb_distrib_l	40	0	synth with cache (only 1: destr_bool).	0.0197129249573	1
Coq.Bool.Bool.orb_andb_distrib_r	40	0	synth with cache (only 1: destr_bool).	0.0192070007324	1
Coq.Bool.Bool.orb_andb_distrib_l	40	0	synth with cache (only 1: destr_bool).	0.0196969509125	1
Coq.Bool.Bool.absorption_andb	40	0	synth with cache (only 1: destr_bool).	0.0138049125671	1
Coq.Bool.Bool.absorption_orb	40	0	synth with cache (only 1: destr_bool).	0.013699054718	1
Coq.Bool.Bool.implb_true_iff	40	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0321180820465	5
Coq.Bool.Bool.implb_false_iff	40	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0371630191803	5
Coq.Bool.Bool.implb_orb	40	0	synth with cache (only 1: destr_bool).	0.0139110088348	1
Coq.Bool.Bool.implb_negb_orb	40	0	synth with cache (only 1: destr_bool).	0.0139210224152	1
Coq.Bool.Bool.implb_true_r	40	0	synth with cache (only 1: destr_bool).	0.0138199329376	1
Coq.Bool.Bool.implb_false_r	40	0	synth with cache (only 1: destr_bool).	0.0130209922791	1
Coq.Bool.Bool.implb_true_l	40	0	synth with cache (only 1: destr_bool).	0.0579540729523	1
Coq.Bool.Bool.implb_false_l	40	0	synth with cache (only 1: destr_bool).	0.0123949050903	1
Coq.Bool.Bool.implb_same	40	0	synth with cache (only 1: destr_bool).	0.0119349956512	1
Coq.Bool.Bool.implb_contrapositive	40	0	synth with cache (only 1: destr_bool).	0.014358997345	1
Coq.Bool.Bool.implb_negb	40	0	synth with cache (only 1: destr_bool).	0.0144639015198	1
Coq.Bool.Bool.implb_curry	40	0	synth with cache (only 1: destr_bool).	0.0180411338806	1
Coq.Bool.Bool.implb_andb_distrib_r	40	0	synth with cache (only 1: destr_bool).	0.0177879333496	1
Coq.Bool.Bool.implb_orb_distrib_r	40	0	synth with cache (only 1: destr_bool).	0.0183792114258	1
Coq.Bool.Bool.implb_orb_distrib_l	40	0	synth with cache (only 1: destr_bool).	0.018383026123	1
Coq.Bool.Bool.xorb_false_r	40	0	synth with cache (only 1: destr_bool).	0.0126430988312	1
Coq.Bool.Bool.xorb_false_l	40	0	synth with cache (only 1: destr_bool).	0.0125980377197	1
Coq.Bool.Bool.xorb_true_r	40	0	synth with cache (only 1: destr_bool).	0.0129828453064	1
Coq.Bool.Bool.xorb_true_l	40	0	synth with cache (only 1: reflexivity).	0.011440038681	1
Coq.Bool.Bool.xorb_nilpotent	40	0	synth with cache (only 1: destr_bool).	0.0122218132019	1
Coq.Bool.Bool.xorb_comm	40	0	synth with cache (only 1: destr_bool).	0.0141460895538	1
Coq.Bool.Bool.xorb_assoc_reverse	40	0	synth with cache (only 1: destr_bool).	0.0189650058746	1
Coq.Bool.Bool.xorb_eq	40	0	synth with cache (only 1: destr_bool).	0.0152549743652	1
Coq.Bool.Bool.xorb_move_l_r_1	40	3.0	synth with cache (only 1: intros; only 1: destr_bool).	0.0258939266205	5
Coq.Bool.Bool.xorb_move_l_r_2	40	0	synth with cache (only 1: destr_bool).	0.0210361480713	1
Coq.Bool.Bool.xorb_move_r_l_1	40	0	synth with cache (only 1: destr_bool).	0.0209710597992	1
Coq.Bool.Bool.xorb_move_r_l_2	40	0	synth with cache (only 1: destr_bool).	0.0211019515991	1
Coq.Bool.Bool.negb_xorb_l	40	0	synth with cache (only 1: destr_bool).	0.0163760185242	1
Coq.Bool.Bool.negb_xorb_r	40	0.0.0.0.0.0	synth with cache (only 1: intros b b'; only 1: destruct b, b'; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial).	0.0287499427795	6
Coq.Bool.Bool.xorb_negb_negb	40	0	synth with cache (only 1: destr_bool).	0.0144028663635	1
Coq.Bool.Bool.eq_iff_eq_true	40	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0432529449463	5
Coq.Bool.Bool.eq_true_iff_eq	40	1.1.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0249030590057	5
Coq.Bool.Bool.eq_true_negb_classical	40	0.0	synth with cache (only 1: destr_bool; only 1: intuition).	0.0195460319519	2
Coq.Bool.Bool.eq_true_not_negb	40	0.0	synth with cache (only 1: destr_bool; only 1: intuition).	0.0174081325531	2
Coq.Bool.Bool.absurd_eq_bool	40	1.1.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0206110477448	5
Coq.Bool.Bool.absurd_eq_true	40	1.0	synth with cache (only 1: destr_bool; only 1: intuition).	0.0173230171204	3
Coq.Bool.Bool.trans_eq_bool	40	0	synth with cache (only 1: destr_bool).	0.0184750556946	1
Coq.Bool.Bool.Is_true_eq_true	40	1.1	synth with cache (only 1: destr_bool; only 1: intuition).	0.016086101532	4
Coq.Bool.Bool.Is_true_eq_left	40	0	synth with cache (only 1: destr_bool).	0.0128099918365	1
Coq.Bool.Bool.Is_true_eq_right	40	0.0.0	synth with cache (only 1: intros; only 1: subst; only 1: auto with bool).	0.017746925354	3
Coq.Bool.Bool.eqb_refl	40	0	synth with cache (only 1: destr_bool).	0.0119950771332	1
Coq.Bool.Bool.eqb_eq	40	0.0.0	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.0214130878448	3
Coq.Bool.Bool.orb_prop_elim	40	3.1.0.0.0.1	synth with cache (only 1: intro b1; only 1: destruct b1; only 1: simpl; only 1: intros; only 1: auto; only 1: auto).	0.310258865356	173
Coq.Bool.Bool.orb_prop_intro	40	1.4.2.0.0.0.2	synth with cache (only 1: intro b1; only 1: destruct b1; only 1: simpl; only 1: tauto; only 1: simpl; only 1: intro A; only 1: tauto).	1.00206398964	1327
Coq.Bool.Bool.andb_prop_intro	40	0.0.0.0	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto; only 1: tauto).	0.0233669281006	4
Coq.Bool.Bool.andb_prop_elim	40	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto; only 1: tauto; only 1: tauto).	0.0276491641998	5
Coq.Bool.Bool.eq_bool_prop_intro	40	0.0.0	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.0242660045624	3
Coq.Bool.Bool.eq_bool_prop_elim	40	0.0.0.5	synth with cache (only 1: induction 1; only 1: destr_bool; only 1: tauto; only 1: tauto).	0.108554124832	73
Coq.Bool.Bool.negb_prop_elim	40	0.0.0	synth with cache (only 1: destr_bool; only 1: auto; only 1: tauto).	0.0182869434357	3
Coq.Bool.Bool.negb_prop_intro	40	2.0	synth with cache (only 1: destr_bool; only 1: tauto).	0.0160579681396	4
Coq.Bool.Bool.negb_prop_classical	40	0.0	synth with cache (only 1: destr_bool; only 1: tauto).	0.016263961792	2
Coq.Bool.Bool.negb_prop_involutive	40	0.0.0	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.0189740657806	3
Coq.Bool.Bool.andb_if	40	0	synth with cache (only 1: destr_bool).	0.0148861408234	1
Coq.Bool.Bool.negb_if	40	0	synth with cache (only 1: destr_bool).	0.013797044754	1
Coq.Bool.Bool.andb_lazy_alt	40	0	synth with cache (only 1: destr_bool).	0.0145990848541	1
Coq.Bool.Bool.orb_lazy_alt	40	0	synth with cache (only 1: reflexivity).	0.0114531517029	1
Coq.Bool.Bool.reflect_iff	40	10.0.5.0.7.5	synth with cache (only 1: intros A P H; only 1: destruct H; only 1: intuition; only 1: split; only 1: intuition; only 1: destr_bool).	13.1765909195	23237
Coq.Bool.Bool.iff_reflect	40	8.0.1	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.124928951263	120
Coq.Bool.Bool.reflect_dec	40	0.2.0	synth with cache (only 1: destruct 1; only 1: intuition; only 1: intuition).	0.0233769416809	5
Coq.Bool.Bool.eqb_spec	40	1.0.0.0.0	synth with cache (only 1: destruct b, b'; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0290160179138	6
Coq.Bool.BoolEq.Bool_eq_dec.beq_eq_true	40	1.3.1	synth with cache (only 1: intros; only 1: destruct H; only 1: intuition).	0.0173180103302	8
Coq.Bool.BoolEq.Bool_eq_dec.beq_eq_not_false	40
Coq.Bool.BoolEq.Bool_eq_dec.beq_false_not_eq	40
Coq.Bool.BoolEq.Bool_eq_dec.exists_beq_eq	40
Coq.Bool.BoolEq.Bool_eq_dec.not_eq_false_beq	40
Coq.Bool.BoolEq.Bool_eq_dec.eq_dec	40
Coq.Lists.ListSet.first_definitions.set_In_dec	40
Coq.Lists.ListSet.first_definitions.set_mem_ind	40
Coq.Lists.ListSet.first_definitions.set_mem_ind2	40	13.0.0.0.0.3.0.0.0	synth with cache (only 1: simple induction x; only 1: simpl; only 1: intros; only 1: auto; only 1: simpl; only 1: intros; only 1: elim (Aeq_dec a a0); only 1: auto with datatypes; only 1: intuition).	31.8331019878	20659
Coq.Lists.ListSet.first_definitions.set_mem_correct1	40
Coq.Lists.ListSet.first_definitions.set_mem_correct2	40
Coq.Lists.ListSet.first_definitions.set_mem_complete1	40
Coq.Lists.ListSet.first_definitions.set_mem_complete2	40
Coq.Lists.ListSet.first_definitions.set_add_intro1	40
Coq.Lists.ListSet.first_definitions.set_add_intro2	40
Coq.Lists.ListSet.first_definitions.set_add_intro	40	2.0.1.2	synth with cache (only 1: intro l; only 1: intros H1 H2 [H3| H4]; only 1: auto with datatypes; only 1: auto with datatypes).	0.321714878082	108
Coq.Lists.ListSet.first_definitions.set_add_elim	40
Coq.Lists.ListSet.first_definitions.set_add_elim2	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold set_In; only 1: simple induction x; only 1: simpl; only 1: intros [H1| H2]; only 1: auto with datatypes; only 1: auto with datatypes; only 1: simpl; only 1: do 3 intro; only 1: elim (Aeq_dec b a0); only 1: simpl; only 1: tauto; only 1: simpl; only 1: intros H0 [| ]; only 1: tauto; only 1: tauto).	4.1392159462	1576
Coq.Lists.ListSet.first_definitions.set_add_not_empty	40	1.0.0.1.0.7.5.2	synth with cache (only 1: simple induction x; only 1: discriminate; only 1: unfold not; only 1: simpl; only 1: intros a0 l; only 1: elim (Aeq_dec a a0); only 1: intros _ _ [=]; only 1: intros _ _ [=]).	2.66653108597	2322
Coq.Lists.ListSet.first_definitions.set_add_iff	40
Coq.Lists.ListSet.first_definitions.set_add_nodup	40
Coq.Lists.ListSet.first_definitions.set_remove_1	40
Coq.Lists.ListSet.first_definitions.set_remove_2	40
Coq.Lists.ListSet.first_definitions.set_remove_3	40
Coq.Lists.ListSet.first_definitions.set_remove_iff	40
Coq.Lists.ListSet.first_definitions.set_remove_nodup	40
Coq.Lists.ListSet.first_definitions.set_union_intro1	40
Coq.Lists.ListSet.first_definitions.set_union_intro2	40	0.0.1.7.0.3.0	synth with cache (only 1: simple induction y; only 1: now simpl; only 1: simpl; only 1: intros Hocc; only 1: intros H1 H2 [H3| H4]; only 1: auto with datatypes; only 1: auto with datatypes).	4.61651206017	2762
Coq.Lists.ListSet.first_definitions.set_union_intro	40	0.0.0.1.2.0.0	synth with cache (only 1: simple induction y; only 1: simpl; only 1: tauto; only 1: intros; only 1: elim H0; only 1: auto with datatypes; only 1: auto with datatypes).	0.108001947403	21
Coq.Lists.ListSet.first_definitions.set_union_elim	40
Coq.Lists.ListSet.first_definitions.set_union_iff	40
Coq.Lists.ListSet.first_definitions.set_union_nodup	40
Coq.Lists.ListSet.first_definitions.set_union_emptyL	40
Coq.Lists.ListSet.first_definitions.set_union_emptyR	40	0.0.0.0	synth with cache (only 1: intros a x H; only 1: case (set_union_elim _ _ _ H); only 1: auto || contradiction; only 1: auto || contradiction).	0.0264060497284	4
Coq.Lists.ListSet.first_definitions.set_inter_intro	40
Coq.Lists.ListSet.first_definitions.set_inter_elim1	40
Coq.Lists.ListSet.first_definitions.set_inter_elim2	40
Coq.Lists.ListSet.first_definitions.set_inter_elim	40	0.2.0.1.1	synth with cache (only 1: simple induction x; only 1: simpl; only 1: tauto; only 1: intros; only 1: eauto with datatypes).	0.333269834518	65
Coq.Lists.ListSet.first_definitions.set_inter_iff	40
Coq.Lists.ListSet.first_definitions.set_inter_nodup	40
Coq.Lists.ListSet.first_definitions.set_diff_intro	40
Coq.Lists.ListSet.first_definitions.set_diff_elim1	40
Coq.Lists.ListSet.first_definitions.set_diff_elim2	40
Coq.Lists.ListSet.first_definitions.set_diff_iff	40
Coq.Lists.ListSet.first_definitions.set_diff_nodup	40
Coq.Lists.ListSet.first_definitions.set_diff_trivial	40	0.2.0.0.2.2	synth with cache (only 1: unfold set_In; only 1: intros a x y; only 1: eapply set_diff_elim2; only 1: eauto; only 1: eapply set_diff_elim1; only 1: eauto).	3.33862018585	920
Coq.Lists.ListDec.Dec_in_Prop.In_decidable	40	0.2.0.0.0.0	synth with cache (only 1: induction l as [| y l IHl]; only 1: simpl; only 1: unfold decidable, not; only 1: auto; only 1: simpl; only 1: intuition).	0.0285029411316	8
Coq.Lists.ListDec.Dec_in_Prop.incl_decidable	40
Coq.Lists.ListDec.Dec_in_Prop.NoDup_decidable	40
Coq.Lists.ListDec.Dec_in_Type.incl_dec	40
Coq.Lists.ListDec.Dec_in_Type.NoDup_dec	40
Coq.Lists.ListDec.uniquify_map	40
Coq.Lists.ListDec.uniquify	40
Coq.Lists.Streams.Streams.unfold_Stream	40	0.4	synth with cache (only 1: intros [x y]; only 1: reflexivity).	0.012757062912	15
Coq.Lists.Streams.Streams.tl_nth_tl	40	0.0.0.0.5	synth with cache (only 1: induction n as [| n IHn]; only 1: trivial; only 1: simpl; only 1: intro x; only 1: trivial).	0.1081199646	69
Coq.Lists.Streams.Streams.Str_nth_tl_plus	40
Coq.Lists.Streams.Streams.Str_nth_plus	40
Coq.Lists.Streams.Streams.EqSt_reflex	40
Coq.Lists.Streams.Streams.sym_EqSt	40	2.3.9.0.4	synth with cache (only 1: intro x; only 1: coinduction ltac:(EqSt_reflex); only 1: destruct H; only 1: auto; only 1: assumption).	1.13085818291	2023
Coq.Lists.Streams.Streams.trans_EqSt	40
Coq.Lists.Streams.Streams.eqst_ntheq	40
Coq.Lists.Streams.Streams.ntheq_eqst	40
Coq.Lists.Streams.Streams.Stream_Properties.ForAll_Str_nth_tl	40
Coq.Lists.Streams.Streams.Stream_Properties.Co_Induction_ForAll.ForAll_coind	40	8.9.2	synth with cache (only 1: coinduction ltac:(EqSt_reflex); only 1: auto; only 1: auto).	0.233591079712	429
Coq.Lists.Streams.Map.Str_nth_tl_map	40	0.0.0.0.0	synth with cache (only 1: simple induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0212411880493	5
Coq.Lists.Streams.Map.Str_nth_map	40	0.1.0.0	synth with cache (only 1: induction n; only 1: reflexivity; only 1: intros s; only 1: apply IHn).	0.0191080570221	5
Coq.Lists.Streams.Map.ForAll_map	40
Coq.Lists.Streams.Map.Exists_map	40
Coq.Lists.Streams.Zip.Str_nth_tl_zipWith	40	0.0.4.0.1.0	synth with cache (only 1: induction n; only 1: simpl; only 1: trivial; only 1: intro m; only 1: intros s; only 1: apply IHn).	0.264542102814	155
Coq.Lists.Streams.Zip.Str_nth_zipWith	40	0.0.1.0.0.0	synth with cache (only 1: induction n; only 1: reflexivity; only 1: intros [x xs] [y ys]; only 1: unfold Str_nth in *; only 1: simpl in *; only 1: apply IHn).	0.0272209644318	7
Coq.Lists.List.Facts.nil_cons	40	8	synth with cache (only 1: discriminate).	0.0253250598907	9
Coq.Lists.List.Facts.destruct_list	40
Coq.Lists.List.Facts.hd_error_tl_repr	40
Coq.Lists.List.Facts.hd_error_some_nil	40	0.3.0.28	synth with cache (only 1: induction l as [| T l IHl]; only 1: discriminate; only 1: inversion 1; only 1: discriminate).	3.36959314346	2426
Coq.Lists.List.Facts.length_zero_iff_nil	40	1.0.0.2.0.2.9.0	synth with cache (only 1: split; only 1: inversion 1; only 1: destruct l as [| x xs]; only 1: reflexivity; only 1: now discriminate; only 1: induction l as [| a tail]; only 1: easy; only 1: now intros [=-> ->]).	1.15696001053	1019
Coq.Lists.List.Facts.hd_error_nil	40	1	synth with cache (only 1: reflexivity).	0.0231640338898	11
Coq.Lists.List.Facts.hd_error_cons	40	0.1	synth with cache (only 1: unfold hd_error; only 1: easy).	0.0242140293121	3
Coq.Lists.List.Facts.app_cons_not_nil	40
Coq.Lists.List.Facts.app_nil_l	40	2	synth with cache (only 1: reflexivity).	0.0163221359253	3
Coq.Lists.List.Facts.app_nil_r	40
Coq.Lists.List.Facts.app_nil_end	40	0.0.0.0.0.1	synth with cache (only 1: induction l; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: f_equal; only 1: auto).	0.115144014359	7
Coq.Lists.List.Facts.app_assoc	40
Coq.Lists.List.Facts.app_assoc_reverse	40	0.0.0.0.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: f_equal; only 1: auto).	0.0478088855743	6
Coq.Lists.List.Facts.app_comm_cons	40	2	synth with cache (only 1: split).	0.0171909332275	3
Coq.Lists.List.Facts.app_eq_nil	40	0.0.0.1.0	synth with cache (only 1: destruct l; only 1: split; only 1: f_equal; only 1: auto; only 1: now intros [=-> ->]).	0.0426218509674	6
Coq.Lists.List.Facts.app_eq_unit	40
Coq.Lists.List.Facts.elt_eq_unit	40	2.5.8.18	synth with cache (only 1: compute; only 1: fix Even_Odd_double 1; only 1: intro; only 1: auto).	3.92544293404	3874
Coq.Lists.List.Facts.app_eq_app	40
Coq.Lists.List.Facts.app_inj_tail	40
Coq.Lists.List.Facts.app_inj_tail_iff	40
Coq.Lists.List.Facts.app_length	40	1.0.1.8	synth with cache (only 1: induction l; only 1: reflexivity; only 1: simpl; only 1: auto).	1.45130395889	586
Coq.Lists.List.Facts.last_length	40	6.0.0.0.2	synth with cache (only 1: induction l; only 1: simpl; only 1: now try Nat.order'; only 1: simpl; only 1: auto).	1.04804706573	391
Coq.Lists.List.Facts.app_inv_head_iff	40
Coq.Lists.List.Facts.app_inv_head	40
Coq.Lists.List.Facts.app_inv_tail	40	2.32.20	synth with cache (only 1: intro H; only 1: fix Even_Odd_double 1; only 1: auto).	36.137611866	35990
Coq.Lists.List.Facts.app_inv_tail_iff	40	0.1.0.0.0.1.0.1.0.0.0.0	synth with cache (only 1: intro l; only 1: induction l as [| ? l IHl]; only 1: split; only 1: now rewrite !app_nil_r; only 1: now rewrite !app_nil_r; only 1: split; only 1: change (a :: l) with ([a] ++ l); only 1: rewrite !app_assoc; only 1: now intros [? ?]%app_inj_tail_iff%IHl; only 1: intros H; only 1: subst; only 1: auto).	8.43421316147	3689
Coq.Lists.List.Facts.in_eq	40	1.5.0	synth with cache (only 1: intros; only 1: constructor 1; only 1: reflexivity).	0.0676100254059	29
Coq.Lists.List.Facts.in_cons	40	1.0	synth with cache (only 1: simpl; only 1: auto).	0.0211620330811	3
Coq.Lists.List.Facts.not_in_cons	40	38	synth with cache (only 1: firstorder).	16.7674059868	15439
Coq.Lists.List.Facts.in_nil	40	2.0.0	synth with cache (only 1: simpl; only 1: intro H; only 1: firstorder).	0.0247619152069	5
Coq.Lists.List.Facts.in_app_or	40	11.1.3.1.0.2	synth with cache (only 1: induction l as [| a l IHl]; only 1: simpl; only 1: auto; only 1: intro y0; only 1: intros H; only 1: firstorder).	15.5098109245	9175
Coq.Lists.List.Facts.in_or_app	40	0.0.0.0.0.0	synth with cache (only 1: intros l m a; only 1: induction l; only 1: cbn; only 1: tauto; only 1: cbn; only 1: tauto).	0.0787150859833	6
Coq.Lists.List.Facts.in_app_iff	40	0.0.0.0.0.0.0.0.0.0.4.0	synth with cache (only 1: intros l m a; only 1: split; only 1: induction l; only 1: cbn; only 1: tauto; only 1: cbn; only 1: tauto; only 1: induction l; only 1: cbn; only 1: tauto; only 1: cbn; only 1: tauto).	12.7095060349	4031
Coq.Lists.List.Facts.in_split	40
Coq.Lists.List.Facts.in_elt	40	0.3.0.0.2.8.2.10.24	synth with cache (only 1: intro p; only 1: red; only 1: intro l; only 1: intros; only 1: induction l; only 1: left; only 1: reflexivity; only 1: simpl; only 1: auto).	30.3033850193	50061
Coq.Lists.List.Facts.in_elt_inv	40
Coq.Lists.List.Facts.in_inv	40	0	synth with cache (only 1: auto).	0.0162870883942	1
Coq.Lists.List.Facts.in_dec	40
Coq.Lists.List.Elts.nth_in_or_default	40
Coq.Lists.List.Elts.nth_S_cons	40	0.0.1	synth with cache (only 1: simpl; only 1: intros; only 1: auto).	0.0312659740448	4
Coq.Lists.List.Elts.nth_default_eq	40
Coq.Lists.List.Elts.nth_In	40
Coq.Lists.List.Elts.In_nth	40
Coq.Lists.List.Elts.nth_overflow	40
Coq.Lists.List.Elts.nth_indep	40
Coq.Lists.List.Elts.app_nth1	40	0.0.0.6.1.0.0.0	synth with cache (only 1: intro l; only 1: induction l as [| ? ? IHl]; only 1: inversion 1; only 1: intros; only 1: destruct n; only 1: reflexivity; only 1: apply IHl; only 1: now apply Nat.succ_lt_mono).	8.54475808144	3384
Coq.Lists.List.Elts.app_nth2	40
Coq.Lists.List.Elts.app_nth2_plus	40	2.0.1.3	synth with cache (only 1: intros l m a; only 1: induction l; only 1: auto; only 1: auto).	0.316633939743	89
Coq.Lists.List.Elts.nth_middle	40	0.0.0.0.0.0.5	synth with cache (only 1: intros l m a; only 1: induction l; only 1: cbn; only 1: intros; only 1: auto; only 1: simpl; only 1: auto).	0.461869955063	155
Coq.Lists.List.Elts.nth_split	40
Coq.Lists.List.Elts.nth_ext	40
Coq.Lists.List.Elts.nth_error_In	40
Coq.Lists.List.Elts.In_nth_error	40
Coq.Lists.List.Elts.nth_error_None	40
Coq.Lists.List.Elts.nth_error_Some	40
Coq.Lists.List.Elts.nth_error_split	40
Coq.Lists.List.Elts.nth_error_app1	40
Coq.Lists.List.Elts.nth_error_app2	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: revert l; only 1: induction n as [| n IHn]; only 1: intros [| a l] H; only 1: easy; only 1: easy; only 1: intros [| a l] H; only 1: easy; only 1: cbn; only 1: now apply IHn, Nat.succ_le_mono).	0.0857419967651	9
Coq.Lists.List.Elts.nth_error_nth	40	0.0.0.2.4.1.1.0.3	synth with cache (only 1: induction l as [| a l IH]; only 1: intros [| n]; only 1: easy; only 1: easy; only 1: intros [| n] d d'; only 1: intros; only 1: now injection H as [=->]; only 1: simpl; only 1: eauto).	19.1121809483	7092
Coq.Lists.List.Elts.nth_error_nth'	40
Coq.Lists.List.Elts.last_last	40
Coq.Lists.List.Elts.app_removelast_last	40
Coq.Lists.List.Elts.exists_last	40
Coq.Lists.List.Elts.removelast_app	40
Coq.Lists.List.Elts.removelast_last	40
Coq.Lists.List.Elts.remove_cons	40
Coq.Lists.List.Elts.remove_app	40
Coq.Lists.List.Elts.remove_In	40
Coq.Lists.List.Elts.notin_remove	40
Coq.Lists.List.Elts.in_remove	40
Coq.Lists.List.Elts.in_in_remove	40
Coq.Lists.List.Elts.remove_remove_comm	40
Coq.Lists.List.Elts.remove_remove_eq	40
Coq.Lists.List.Elts.remove_length_le	40
Coq.Lists.List.Elts.remove_length_lt	40
Coq.Lists.List.Elts.count_occ_In	40
Coq.Lists.List.Elts.count_occ_not_In	40
Coq.Lists.List.Elts.count_occ_nil	40	3.0	synth with cache (only 1: simpl; only 1: split).	0.0200159549713	5
Coq.Lists.List.Elts.count_occ_inv_nil	40
Coq.Lists.List.Elts.count_occ_cons_eq	40	2.8.0.0.3	synth with cache (only 1: simpl; only 1: destruct (eq_dec x y); only 1: intuition apply Nat.lt_0_succ; only 1: intros Heq; only 1: now exfalso).	0.907778978348	683
Coq.Lists.List.Elts.count_occ_cons_neq	40	0.0.0	synth with cache (only 1: intros H; only 1: simpl; only 1: now destruct (eq_dec x y)).	0.0318808555603	3
Coq.Lists.List.Elts.count_occ_app	40
Coq.Lists.List.Elts.count_occ_elt_eq	40	1.3.8.4.0.0.0.1.0	synth with cache (only 1: intros H; only 1: induction l1 as [| h l1 IHl1]; only 1: simpl; only 1: now destruct (eq_dec x y); only 1: simpl; only 1: destruct eq_dec as [->| Hneq]; only 1: f_equal; only 1: now destruct (eq_dec x y); only 1: apply IHl1).	8.19033503532	5162
Coq.Lists.List.Elts.count_occ_elt_neq	40	0.0.2	synth with cache (only 1: rewrite ?count_occ_app; only 1: cbn; only 1: now destruct (eq_dec x y)).	0.107877969742	36
Coq.Lists.List.Elts.count_occ_bound	40
Coq.Lists.List.ListOps.rev_app_distr	40
Coq.Lists.List.ListOps.rev_unit	40	0.6.13.2.0.10.0	synth with cache (only 1: intros; only 1: induction l; only 1: auto; only 1: simpl; only 1: symmetry; only 1: rewrite IHl; only 1: auto).	32.5663349628	35755
Coq.Lists.List.ListOps.rev_involutive	40
Coq.Lists.List.ListOps.rev_eq_app	40
Coq.Lists.List.ListOps.rev_list_ind	40	12.2.0	synth with cache (only 1: induction l as [| ? l IHl]; only 1: trivial; only 1: auto).	0.524816989899	420
Coq.Lists.List.ListOps.rev_ind	40
Coq.Lists.List.ListOps.in_rev	40
Coq.Lists.List.ListOps.rev_length	40	0.4.0.0.0.0.0.3	synth with cache (only 1: induction l as [| ? ? IHl]; only 1: reflexivity; only 1: cbn; only 1: rewrite app_length; only 1: simpl; only 1: rewrite Nat.add_succ_r, Nat.add_0_r; only 1: destruct IHl; only 1: reflexivity).	2.30754089355	825
Coq.Lists.List.ListOps.rev_nth	40
Coq.Lists.List.ListOps.rev_append_rev	40
Coq.Lists.List.ListOps.rev_alt	40
Coq.Lists.List.ListOps.concat_nil	40	0	synth with cache (only 1: reflexivity).	0.0166609287262	1
Coq.Lists.List.ListOps.concat_cons	40	1.0	synth with cache (only 1: intros l a; only 1: auto).	0.0245940685272	3
Coq.Lists.List.ListOps.concat_app	40	0.0.0.0.4.3	synth with cache (only 1: intros l a; only 1: induction l; only 1: simpl; only 1: trivial; only 1: cbn; only 1: now rewrite IHl, app_assoc).	1.9508728981	657
Coq.Lists.List.ListOps.in_concat	40
Coq.Lists.List.ListOps.list_eq_dec	40
Coq.Lists.List.ListOps.count_occ_rev	40
Coq.Lists.List.Map.map_cons	40	0.0	synth with cache (only 1: simpl; only 1: auto).	0.0250198841095	2
Coq.Lists.List.Map.in_map	40	0.1.0.1.1.0.1.1	synth with cache (only 1: intros l x; only 1: induction l; only 1: easy; only 1: simpl; only 1: intros [H| H]; only 1: subst; only 1: auto; only 1: auto).	4.3343770504	1921
Coq.Lists.List.Map.in_map_iff	40	0.0.0.0	synth with cache (only 1: intro l; only 1: induction l as [| a l IHl]; only 1: firstorder  (subst; auto); only 1: firstorder  (subst; auto)).	0.103250980377	4
Coq.Lists.List.Map.map_length	40	0.0.0.0.0.0	synth with cache (only 1: intro l; only 1: induction l as [| ? l IHl]; only 1: simpl; only 1: trivial; only 1: simpl; only 1: firstorder  (subst; auto)).	0.0490880012512	6
Coq.Lists.List.Map.map_nth	40	0.0.0.2.2.0.0.4.0.0.0	synth with cache (only 1: intro l; only 1: induction l; only 1: firstorder  (subst; auto); only 1: induction n as [| n IHn]; only 1: simpl; only 1: trivial; only 1: split; only 1: destruct n; only 1: firstorder  (subst; auto); only 1: simpl; only 1: firstorder  (subst; auto)).	7.12589621544	4204
Coq.Lists.List.Map.nth_error_map	40
Coq.Lists.List.Map.map_nth_error	40
Coq.Lists.List.Map.map_app	40	4.0.0.0.0.0.0.2	synth with cache (only 1: induction l as [| ? l IHl]; only 1: simpl; only 1: intro l; only 1: trivial; only 1: simpl; only 1: intros; only 1: f_equal; only 1: auto).	4.93313598633	1849
Coq.Lists.List.Map.map_last	40	0.0.0.7.0.0.1.0.5	synth with cache (only 1: intro l; only 1: induction l as [| a l IHl]; only 1: simpl; only 1: intros; only 1: f_equal; only 1: intros H; only 1: simpl; only 1: rewrite IHl; only 1: auto).	12.4841001034	5509
Coq.Lists.List.Map.map_rev	40
Coq.Lists.List.Map.map_eq_nil	40	4.0.0.0.8.0	synth with cache (only 1: intro l; only 1: induction l; only 1: simpl; only 1: auto; only 1: intros; only 1: discriminate).	1.77357912064	931
Coq.Lists.List.Map.map_eq_cons	40
Coq.Lists.List.Map.map_eq_app	40
Coq.Lists.List.Map.count_occ_map	40
Coq.Lists.List.FlatMap.flat_map_concat_map	40	0.5.0.0.0	synth with cache (only 1: induction l as [| a l IHl]; only 1: reflexivity; only 1: simpl; only 1: destruct IHl; only 1: auto).	0.04860496521	10
Coq.Lists.List.FlatMap.flat_map_app	40
Coq.Lists.List.FlatMap.in_flat_map	40
Coq.Lists.List.concat_map	40
Coq.Lists.List.remove_concat	40
Coq.Lists.List.map_id	40	0.0.0.0.0.2	synth with cache (only 1: intros; only 1: induction l as [| x l IH]; only 1: reflexivity; only 1: simpl; only 1: f_equal; only 1: auto).	0.0868871212006	32
Coq.Lists.List.map_map	40	0.0.1.0.1.4	synth with cache (only 1: intros a b n ? ? ?; only 1: induction l as [| x l IH]; only 1: reflexivity; only 1: simpl; only 1: rewrite IH; only 1: reflexivity).	0.478659152985	154
Coq.Lists.List.map_ext_in	40	0.0.4.0.3.0.1.5.3	synth with cache (only 1: intros Hnin; only 1: induction l; only 1: auto; only 1: firstorder  (subst; auto); only 1: simpl; only 1: rewrite IHl; only 1: f_equal; only 1: firstorder  (subst; auto); only 1: firstorder  (subst; auto)).	11.0246779919	5201
Coq.Lists.List.ext_in_map	40
Coq.Lists.List.map_ext_in_iff	40	0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.2.1	synth with cache (only 1: intros Hnin; only 1: repeat split; only 1: induction l; only 1: intros [=] ? []; only 1: intros [=] ? []; only 1: subst; only 1: auto; only 1: auto; only 1: induction l as [| ? ? IHl]; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros H; only 1: rewrite H by intuition; only 1: rewrite IHl; only 1: auto; only 1: auto).	30.7772231102	13198
Coq.Lists.List.map_ext	40	2.1.0.4.0.0.1.1.11	synth with cache (only 1: intros n m p Hp H; only 1: intros; only 1: induction l as [| a l IHl]; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: rewrite H by intuition; only 1: rewrite IHl; only 1: auto).	6.09844303131	5833
Coq.Lists.List.flat_map_ext	40	0.0.0.0.0.10.0	synth with cache (only 1: intros; only 1: induction l as [| a l IHl]; only 1: reflexivity; only 1: simpl; only 1: rewrite H by intuition; only 1: rewrite IHl; only 1: auto).	1.93152713776	935
Coq.Lists.List.nth_nth_nth_map	40
Coq.Lists.List.Fold_Left_Recursor.fold_left_app	40	5.3.1.0.0	synth with cache (only 1: induction l as [| a l IHl]; only 1: intros; only 1: auto; only 1: simpl; only 1: auto).	2.02487111092	914
Coq.Lists.List.fold_left_length	40
Coq.Lists.List.fold_right_app	40	1.0.0.2.3.0.10	synth with cache (only 1: intros a n ? ?; only 1: induction l as [| ? l IHl]; only 1: firstorder  (subst; auto); only 1: intros; only 1: simpl; only 1: rewrite IHl; only 1: firstorder).	5.95588493347	4179
Coq.Lists.List.fold_left_rev_right	40
Coq.Lists.List.fold_symmetric	40
Coq.Lists.List.Bool.existsb_exists	40
Coq.Lists.List.Bool.existsb_nth	40
Coq.Lists.List.Bool.existsb_app	40
Coq.Lists.List.Bool.forallb_forall	40
Coq.Lists.List.Bool.forallb_app	40
Coq.Lists.List.Bool.filter_In	40
Coq.Lists.List.Bool.filter_app	40
Coq.Lists.List.Bool.concat_filter_map	40
Coq.Lists.List.Bool.find_some	40	1.19.1.0.0.6	synth with cache (only 1: destruct l; only 1: simpl; only 1: easy; only 1: simpl; only 1: fix even_spec 1; only 1: eauto).	33.9323220253	18776
Coq.Lists.List.Bool.find_none	40
Coq.Lists.List.Bool.partition_cons1	40	2.2.10.1.3.0.1	synth with cache (only 1: simpl; only 1: intros H; only 1: case (f a); only 1: intros; only 1: rewrite H; only 1: reflexivity; only 1: easy).	13.6569600105	8445
Coq.Lists.List.Bool.partition_cons2	40	0.0	synth with cache (only 1: simpl; only 1: now intros -> ->).	0.0274591445923	2
Coq.Lists.List.Bool.partition_length	40
Coq.Lists.List.Bool.partition_inv_nil	40	3.4.3.0.2.1.5.1.0	synth with cache (only 1: split; only 1: induction l as [| a l' Hrec]; only 1: simpl; only 1: auto; only 1: simpl; only 1: destruct (f a), (partition l') as (left, right); only 1: discriminate; only 1: discriminate; only 1: now destruct l).	24.2693109512	13488
Coq.Lists.List.Bool.elements_in_partition	40
Coq.Lists.List.Filtering.filter_ext_in	40
Coq.Lists.List.Filtering.ext_in_filter	40
Coq.Lists.List.Filtering.filter_ext_in_iff	40
Coq.Lists.List.Filtering.filter_map	40
Coq.Lists.List.Filtering.filter_ext	40	0.0.0.0.0.3.2.0.2.3	synth with cache (only 1: induction l as [| a l IHl]; only 1: cbn; only 1: f_equal; only 1: simpl; only 1: pose proof (proj1 (filter_In f a l)) as Hf; only 1: rewrite (H a) by now left; only 1: destruct (g a); only 1: f_equal; only 1: congruence; only 1: congruence).	2.71024894714	1450
Coq.Lists.List.Filtering.remove_alt	40	0.0.3.6.0.0.0.0.7	synth with cache (only 1: induction l as [| a l IHl]; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: destruct (eq_dec x a); only 1: apply IHl; only 1: intuition; only 1: f_equal; only 1: tauto).	8.23346805573	5980
Coq.Lists.List.Filtering.count_occ_alt	40	0.0.4.4.0.0.0.0.2	synth with cache (only 1: induction l as [| y l IHl]; only 1: cbn; only 1: reflexivity; only 1: simpl; only 1: cbn; only 1: destruct eq_dec as [->| Hneq]; only 1: cbn; only 1: intuition; only 1: now destruct (eq_dec x y)).	31.3064699173	12870
Coq.Lists.List.ListPairs.in_split_l	40
Coq.Lists.List.ListPairs.in_split_r	40	0.0.0.0.0.0	synth with cache (only 1: intro l; only 1: induction l as [| [? ?] l IHl]; only 1: easy; only 1: intros [? ?]; only 1: cbn; only 1: now intros [[=]| ?%IHl]; destruct (split l); [ left | right ]).	0.0613269805908	6
Coq.Lists.List.ListPairs.split_nth	40
Coq.Lists.List.ListPairs.split_length_l	40	1.5.1.1.0.0.0	synth with cache (only 1: intro l; only 1: induction l as [| [? ?] l IHl]; only 1: easy; only 1: simpl; only 1: destruct (split l); only 1: simpl; only 1: auto).	1.78023099899	726
Coq.Lists.List.ListPairs.split_length_r	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intro l; only 1: induction l as [| a l IHl]; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: destruct a; only 1: destruct (split l); only 1: simpl; only 1: auto).	0.0836668014526	9
Coq.Lists.List.ListPairs.split_combine	40
Coq.Lists.List.ListPairs.combine_split	40
Coq.Lists.List.ListPairs.in_combine_l	40
Coq.Lists.List.ListPairs.in_combine_r	40
Coq.Lists.List.ListPairs.combine_length	40
Coq.Lists.List.ListPairs.combine_nth	40
Coq.Lists.List.ListPairs.in_prod_aux	40	0.5.3.1.2	synth with cache (only 1: induction l as [| ? ? IHl]; only 1: intro H; only 1: auto; only 1: simpl; only 1: firstorder  (subst; auto)).	2.24034714699	1021
Coq.Lists.List.ListPairs.in_prod	40
Coq.Lists.List.ListPairs.in_prod_iff	40
Coq.Lists.List.ListPairs.prod_length	40
Coq.Lists.List.length_order.lel_refl	40	10	synth with cache (only 1: now left).	0.0327360630035	21
Coq.Lists.List.length_order.lel_trans	40
Coq.Lists.List.length_order.lel_cons_cons	40	27	synth with cache (only 1: apply le_n_S).	8.25742411613	3874
Coq.Lists.List.length_order.lel_cons	40	8.0.0.23	synth with cache (only 1: revert m; only 1: unfold lel; only 1: simpl; only 1: solve [ auto ]).	4.15986585617	1523
Coq.Lists.List.length_order.lel_tail	40	0	synth with cache (only 1: now intros ?%Nat.succ_le_mono).	0.0185220241547	1
Coq.Lists.List.length_order.lel_nil	40
Coq.Lists.List.SetIncl.incl_nil_l	40	0.1.13.0	synth with cache (only 1: intros; only 1: intros Heq; only 1: intros H; only 1: inversion_clear H).	1.02552700043	613
Coq.Lists.List.SetIncl.incl_l_nil	40
Coq.Lists.List.SetIncl.incl_refl	40	3	synth with cache (only 1: auto).	0.262079000473	67
Coq.Lists.List.SetIncl.incl_tl	40	10.5	synth with cache (only 1: intros n m p; only 1: intuition).	1.22648501396	682
Coq.Lists.List.SetIncl.incl_tran	40	0.0.2	synth with cache (only 1: intros l; only 1: intro l1; only 1: auto).	0.0317409038544	5
Coq.Lists.List.SetIncl.incl_appl	40	0	synth with cache (only 1: auto with datatypes).	0.0194630622864	1
Coq.Lists.List.SetIncl.incl_appr	40	0	synth with cache (only 1: auto with datatypes).	0.0192170143127	1
Coq.Lists.List.SetIncl.incl_cons	40	0.3.4.3	synth with cache (only 1: intros f g l; only 1: induction l as [| ? ? IHl]; only 1: auto; only 1: firstorder  (subst; auto)).	1.00323390961	335
Coq.Lists.List.SetIncl.incl_cons_inv	40	0	synth with cache (only 1: auto with datatypes).	0.0216910839081	1
Coq.Lists.List.SetIncl.incl_app	40	0.6	synth with cache (only 1: fix gcd_greatest 1; only 1: auto).	0.210623979568	60
Coq.Lists.List.SetIncl.incl_app_app	40	3.0	synth with cache (only 1: intros; only 1: auto).	0.0252559185028	5
Coq.Lists.List.SetIncl.incl_app_inv	40	8.4.0	synth with cache (only 1: unfold incl; only 1: intro l; only 1: auto using in_app_or, in_or_app).	3.17000007629	1102
Coq.Lists.List.SetIncl.incl_filter	40
Coq.Lists.List.SetIncl.remove_incl	40
Coq.Lists.List.incl_map	40
Coq.Lists.List.Cutting.firstn_nil	40	0.0.0.0.14	synth with cache (only 1: destruct n; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: auto).	0.195878982544	156
Coq.Lists.List.Cutting.firstn_cons	40	0	synth with cache (only 1: now simpl).	0.0209360122681	1
Coq.Lists.List.Cutting.firstn_all	40	0.1.1.0.7	synth with cache (only 1: induction l as [| a l IHl]; only 1: now simpl; only 1: simpl; only 1: rewrite IHl; only 1: f_equal).	0.359780073166	105
Coq.Lists.List.Cutting.firstn_all2	40
Coq.Lists.List.Cutting.firstn_O	40	0.1	synth with cache (only 1: simpl; only 1: auto).	0.0252850055695	3
Coq.Lists.List.Cutting.firstn_le_length	40
Coq.Lists.List.Cutting.firstn_length_le	40
Coq.Lists.List.Cutting.firstn_app	40
Coq.Lists.List.Cutting.firstn_app_2	40	0.2.1.2.1.2.2	synth with cache (only 1: intro l; only 1: induction l; only 1: auto; only 1: simpl; only 1: intro H; only 1: rewrite IHl; only 1: auto).	4.70579886436	1587
Coq.Lists.List.Cutting.firstn_firstn	40
Coq.Lists.List.Cutting.firstn_skipn_comm	40
Coq.Lists.List.Cutting.skipn_firstn_comm	40
Coq.Lists.List.Cutting.skipn_O	40	0.0.0.0.0.0	synth with cache (only 1: intro l; only 1: induction l as [| a l IHl]; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: auto).	0.0525908470154	6
Coq.Lists.List.Cutting.skipn_nil	40	0.0.0.0.9	synth with cache (only 1: intros; only 1: induction n; only 1: simpl; only 1: f_equal; only 1: now simpl).	0.310835838318	130
Coq.Lists.List.Cutting.skipn_cons	40	0.0.2	synth with cache (only 1: symmetry; only 1: simpl; only 1: reflexivity).	0.0400540828705	5
Coq.Lists.List.Cutting.skipn_all	40	0.0.0.0.1.2	synth with cache (only 1: intros; only 1: induction l as [| ? ? H]; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: auto).	0.0534691810608	9
Coq.Lists.List.Cutting.skipn_all2	40	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction n as [| k iHk]; only 1: intro l; only 1: now destruct l; only 1: intro l; only 1: destruct l as [| x xs]; only 1: simpl; only 1: now reflexivity; only 1: simpl; only 1: intro H; only 1: apply iHk; only 1: now apply Nat.succ_le_mono).	1.77891206741	372
Coq.Lists.List.Cutting.firstn_skipn	40	2.0.0.1.3.0.1.1	synth with cache (only 1: induction n as [| k iHk]; only 1: simpl; only 1: auto; only 1: intros [| j]; only 1: auto; only 1: simpl; only 1: f_equal; only 1: firstorder).	10.5651810169	3797
Coq.Lists.List.Cutting.firstn_length	40	0.0.2.0.0.0.0.0.0	synth with cache (only 1: intro l; only 1: induction l; only 1: easy; only 1: intro l'; only 1: destruct l'; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	2.1163520813	432
Coq.Lists.List.Cutting.skipn_length	40	1.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction n; only 1: intro l; only 1: destruct l; only 1: simpl; only 1: auto; only 1: simpl; only 1: reflexivity; only 1: intro l; only 1: destruct l; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	12.5134329796	3114
Coq.Lists.List.Cutting.skipn_app	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction n as [| k iHk]; only 1: intros l1 l2; only 1: now simpl; only 1: intros l1 l2; only 1: destruct l1 as [| x xs]; only 1: reflexivity; only 1: rewrite <- app_comm_cons; only 1: simpl; only 1: apply iHk).	0.0801849365234	9
Coq.Lists.List.Cutting.firstn_skipn_rev	40
Coq.Lists.List.Cutting.firstn_rev	40
Coq.Lists.List.Cutting.skipn_rev	40
Coq.Lists.List.Cutting.removelast_firstn	40
Coq.Lists.List.Cutting.removelast_firstn_len	40
Coq.Lists.List.Cutting.firstn_removelast	40
Coq.Lists.List.CuttingMap.firstn_map	40
Coq.Lists.List.CuttingMap.skipn_map	40	0.0.0.0.0.1.0.0.0.0.0.0	synth with cache (only 1: intro n; only 1: induction n; only 1: intros []; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: auto; only 1: intros []; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: trivial).	4.83188319206	1318
Coq.Lists.List.Combining.combine_nil	40	0.1.3.4	synth with cache (only 1: intros []; only 1: auto; only 1: simpl; only 1: f_equal).	0.55109500885	216
Coq.Lists.List.Combining.combine_firstn_l	40
Coq.Lists.List.Combining.combine_firstn_r	40	0.0.0.3.0.1.0.0.1.2.0.0	synth with cache (only 1: intro l; only 1: induction l as [| x l IHl]; only 1: intro l; only 1: induction l as [| x l IHl]; only 1: reflexivity; only 1: reflexivity; only 1: destruct l' as [| x' l']; only 1: reflexivity; only 1: specialize IHl with l'; only 1: simpl; only 1: rewrite <- IHl; only 1: reflexivity).	17.5137000084	7048
Coq.Lists.List.Combining.combine_firstn	40
Coq.Lists.List.Add.Add_app	40
Coq.Lists.List.Add.Add_split	40
Coq.Lists.List.Add.Add_in	40
Coq.Lists.List.Add.Add_length	40	2.1.0.2.0	synth with cache (only 1: induction 1 as [| ? ? ? ? IHAdd]; only 1: auto; only 1: simpl in *; only 1: rewrite ?IHAdd; only 1: trivial).	0.0537550449371	10
Coq.Lists.List.Add.Add_inv	40
Coq.Lists.List.Add.incl_Add_inv	40
Coq.Lists.List.ReDun.NoDup_Add	40
Coq.Lists.List.ReDun.NoDup_remove	40
Coq.Lists.List.ReDun.NoDup_remove_1	40
Coq.Lists.List.ReDun.NoDup_remove_2	40
Coq.Lists.List.ReDun.NoDup_cons_iff	40	0.0.0.0	synth with cache (only 1: split; only 1: inversion_clear 1; only 1: now split; only 1: now constructor).	0.0635809898376	4
Coq.Lists.List.ReDun.NoDup_rev	40
Coq.Lists.List.ReDun.NoDup_filter	40
Coq.Lists.List.ReDun.nodup_fixed_point	40
Coq.Lists.List.ReDun.nodup_In	40
Coq.Lists.List.ReDun.nodup_incl	40
Coq.Lists.List.ReDun.NoDup_nodup	40
Coq.Lists.List.ReDun.nodup_inv	40
Coq.Lists.List.ReDun.NoDup_count_occ	40
Coq.Lists.List.ReDun.NoDup_count_occ'	40
Coq.Lists.List.ReDun.NoDup_nth_error	40
Coq.Lists.List.ReDun.NoDup_nth	40
Coq.Lists.List.ReDun.NoDup_incl_length	40
Coq.Lists.List.ReDun.NoDup_length_incl	40
Coq.Lists.List.ReDun.NoDup_incl_NoDup	40
Coq.Lists.List.NoDup_map_inv	40
Coq.Lists.List.NatSeq.cons_seq	40	4.0	synth with cache (only 1: intros; only 1: tauto).	0.028913974762	6
Coq.Lists.List.NatSeq.seq_length	40	0.0.0.3.1.10.4	synth with cache (only 1: intro l; only 1: induction l; only 1: intros a0; only 1: split; only 1: simpl; only 1: intros; only 1: now auto).	23.4756641388	12468
Coq.Lists.List.NatSeq.seq_nth	40
Coq.Lists.List.NatSeq.seq_shift	40
Coq.Lists.List.NatSeq.in_seq	40
Coq.Lists.List.NatSeq.seq_NoDup	40
Coq.Lists.List.NatSeq.seq_app	40
Coq.Lists.List.NatSeq.seq_S	40
Coq.Lists.List.Exists_Forall.One_predicate.Exists_exists	40
Coq.Lists.List.Exists_Forall.One_predicate.Exists_nth	40
Coq.Lists.List.Exists_Forall.One_predicate.Exists_nil	40	0.5.8	synth with cache (only 1: split; only 1: now simpl; only 1: destruct 1).	0.844735145569	530
Coq.Lists.List.Exists_Forall.One_predicate.Exists_cons	40	0.0.2.0.2.0.34	synth with cache (only 1: split; only 1: inversion_clear 1; only 1: firstorder  (subst; auto); only 1: firstorder  (subst; auto); only 1: inversion_clear 1; only 1: firstorder; only 1: firstorder).	3.37832713127	2344
Coq.Lists.List.Exists_Forall.One_predicate.Exists_app	40
Coq.Lists.List.Exists_Forall.One_predicate.Exists_rev	40
Coq.Lists.List.Exists_Forall.One_predicate.Exists_dec	40
Coq.Lists.List.Exists_Forall.One_predicate.Exists_fold_right	40	0.0.0.0.0.3.0.0.0.0	synth with cache (only 1: split; only 1: induction 1; only 1: firstorder; only 1: firstorder; only 1: induction l; only 1: inversion 1; only 1: induction l; only 1: simpl; only 1: firstorder  (subst; auto); only 1: firstorder  (subst; auto)).	2.4561920166	976
Coq.Lists.List.Exists_Forall.One_predicate.incl_Exists	40
Coq.Lists.List.Exists_Forall.One_predicate.Forall_inv	40	0.2.5	synth with cache (only 1: intro l; only 1: inversion 1; only 1: auto).	0.0926551818848	19
Coq.Lists.List.Exists_Forall.One_predicate.Forall_inv_tail	40	0.0.0	synth with cache (only 1: intros a l H; only 1: inversion H; only 1: trivial).	0.0353009700775	3
Coq.Lists.List.Exists_Forall.One_predicate.Forall_nil_iff	40	1.0.1.0.0	synth with cache (only 1: split; only 1: inversion 1; only 1: intuition; only 1: inversion 1; only 1: constructor).	0.0372710227966	7
Coq.Lists.List.Exists_Forall.One_predicate.Forall_cons_iff	40	0.0.1.0.0.2.0	synth with cache (only 1: intro l1; only 1: intros; only 1: split; only 1: inversion 1; only 1: auto; only 1: inversion 1; only 1: auto).	0.0555717945099	10
Coq.Lists.List.Exists_Forall.One_predicate.Forall_forall	40
Coq.Lists.List.Exists_Forall.One_predicate.Forall_nth	40
Coq.Lists.List.Exists_Forall.One_predicate.Forall_app	40
Coq.Lists.List.Exists_Forall.One_predicate.Forall_elt	40
Coq.Lists.List.Exists_Forall.One_predicate.Forall_rev	40
Coq.Lists.List.Exists_Forall.One_predicate.Forall_rect	40
Coq.Lists.List.Exists_Forall.One_predicate.Forall_dec	40
Coq.Lists.List.Exists_Forall.One_predicate.Forall_fold_right	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: easy; only 1: simpl; only 1: split; only 1: intros HE; only 1: now inversion HE; intuition; only 1: intros HE; only 1: now inversion HE; intuition).	0.144539833069	9
Coq.Lists.List.Exists_Forall.One_predicate.incl_Forall	40
Coq.Lists.List.Exists_Forall.map_ext_Forall	40
Coq.Lists.List.Exists_Forall.Exists_impl	40
Coq.Lists.List.Exists_Forall.Exists_or	40	13.2.6.0.0.0.6.0.0.3	synth with cache (only 1: intros H x1 y H0; only 1: firstorder; only 1: induction H0 as [x l H0| x l H0 IHExists]; only 1: constructor; only 1: auto; only 1: apply (Exists_cons_tl x IHExists); only 1: induction H0 as [x l H0| x l H0 IHExists]; only 1: constructor; only 1: auto; only 1: now constructor).	29.3611228466	28050
Coq.Lists.List.Exists_Forall.Exists_or_inv	40	2.15.0	synth with cache (only 1: intros P Q l; only 1: fix OddT_EvenT_rect 1; only 1: firstorder  (subst; auto)).	5.41597485542	3311
Coq.Lists.List.Exists_Forall.Forall_impl	40
Coq.Lists.List.Exists_Forall.Forall_and	40
Coq.Lists.List.Exists_Forall.Forall_and_inv	40	3.0.6.11	synth with cache (only 1: intros HP HQ; only 1: intros l2; only 1: rewrite !Forall_forall; only 1: firstorder  auto with datatypes).	22.4043598175	17763
Coq.Lists.List.Exists_Forall.Forall_Exists_neg	40
Coq.Lists.List.Exists_Forall.Exists_Forall_neg	40
Coq.Lists.List.Exists_Forall.neg_Forall_Exists_neg	40	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intro Dec; only 1: intros NF; only 1: induction l as [| a l IH]; only 1: destruct NF; only 1: apply Forall_nil; only 1: destruct (Dec a) as [Ha| Ha]; only 1: apply Exists_cons_tl, IH; only 1: contradict NF; only 1: now constructor; only 1: now apply Exists_cons_hd).	0.14337015152	10
Coq.Lists.List.Exists_Forall.Forall_Exists_dec	40
Coq.Lists.List.Exists_Forall.incl_Forall_in_iff	40
Coq.Lists.List.Exists_map	40	1.0.0.8.2.4.0.15.1.0	synth with cache (only 1: induction l as [| ? ? IHl]; only 1: simpl; only 1: easy; only 1: simpl; only 1: split; only 1: intros HF; only 1: now inversion HF; intuition; only 1: inversion_clear 1; only 1: firstorder; only 1: firstorder).	16.4936947823	14282
Coq.Lists.List.Exists_concat	40
Coq.Lists.List.Exists_flat_map	40
Coq.Lists.List.Forall_map	40
Coq.Lists.List.Forall_concat	40
Coq.Lists.List.Forall_flat_map	40
Coq.Lists.List.exists_Forall	40
Coq.Lists.List.Forall_image	40
Coq.Lists.List.concat_nil_Forall	40
Coq.Lists.List.in_flat_map_Exists	40
Coq.Lists.List.notin_flat_map_Forall	40
Coq.Lists.List.Forall2.Forall2_refl	40	1	synth with cache (only 1: constructor).	0.0161330699921	2
Coq.Lists.List.Forall2.Forall2_app_inv_l	40
Coq.Lists.List.Forall2.Forall2_app_inv_r	40
Coq.Lists.List.Forall2.Forall2_app	40
Coq.Lists.List.ForallPairs.ForallOrdPairs_In	40
Coq.Lists.List.ForallPairs.ForallPairs_ForallOrdPairs	40
Coq.Lists.List.ForallPairs.ForallOrdPairs_ForallPairs	40
Coq.Lists.List.Repeat.repeat_length	40	1.0.3.1.1.0.2.6	synth with cache (only 1: revert n; only 1: induction n; only 1: easy; only 1: simpl; only 1: destruct n; only 1: simpl; only 1: reflexivity; only 1: auto).	1.57506203651	855
Coq.Lists.List.Repeat.repeat_spec	40	0.0.0.0.0.3.3.30.0	synth with cache (only 1: revert n; only 1: intro l; only 1: induction l as [| a l IHl]; only 1: induction 1; only 1: simpl; only 1: destruct 1; only 1: subst; only 1: auto using Nat.lt_0_succ; only 1: intuition).	13.7016320229	14611
Coq.Lists.List.Repeat.repeat_cons	40	0.7.6.0.33	synth with cache (only 1: induction n; only 1: trivial; only 1: simpl; only 1: f_equal; only 1: auto).	3.54210996628	2852
Coq.Lists.List.Repeat.repeat_app	40	3.0.1.1.0.0.1.31	synth with cache (only 1: revert m; only 1: induction n; only 1: simpl; only 1: auto; only 1: intros; only 1: simpl; only 1: f_equal; only 1: firstorder).	3.24420499802	2163
Coq.Lists.List.Repeat.repeat_eq_app	40
Coq.Lists.List.Repeat.repeat_eq_cons	40	0.7.0.0.2.7.4	synth with cache (only 1: destruct n; only 1: revert l; only 1: simpl; only 1: easy; only 1: intros; only 1: injection H; only 1: auto).	12.2064659595	7109
Coq.Lists.List.Repeat.repeat_eq_elt	40
Coq.Lists.List.Repeat.Forall_eq_repeat	40
Coq.Lists.List.Repeat.count_occ_repeat_eq	40
Coq.Lists.List.Repeat.count_occ_repeat_neq	40
Coq.Lists.List.Repeat.count_occ_unique	40
Coq.Lists.List.Repeat.count_occ_repeat_excl	40
Coq.Lists.List.Repeat.count_occ_sgt	40
Coq.Lists.List.Repeat.nth_repeat	40
Coq.Lists.List.Repeat.nth_error_repeat	40
Coq.Lists.List.repeat_to_concat	40	0.2.2.0.0.9	synth with cache (only 1: induction n as [| n IH]; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite IH; only 1: f_equal).	1.56376099586	464
Coq.Lists.List.list_sum_app	40
Coq.Lists.List.list_max_app	40
Coq.Lists.List.list_max_le	40
Coq.Lists.List.list_max_lt	40
Coq.Lists.SetoidPermutation.Permutation.Equivalence_instance_0	40
Coq.Lists.SetoidPermutation.Permutation.PermutationA_cons	40	1.0.1	synth with cache (only 1: repeat red; only 1: intros l m l' m' Hpermll' Hpermmm'; only 1: auto).	0.0191090106964	5
Coq.Lists.SetoidPermutation.Permutation.PermutationA_app_head	40	0.0.2.9	synth with cache (only 1: induction l; only 1: intuition; only 1: simpl; only 1: intuition).	2.48016190529	626
Coq.Lists.SetoidPermutation.Permutation.PermutationA_app	40
Coq.Lists.SetoidPermutation.Permutation.PermutationA_app_tail	40	0.1.0.0.3	synth with cache (only 1: induction 1; only 1: easy; only 1: now apply permA_skip; only 1: now constructor; only 1: do 2 (etransitivity; try eassumption)).	0.200571060181	56
Coq.Lists.SetoidPermutation.Permutation.PermutationA_cons_append	40	0.0.0.0.7.25	synth with cache (only 1: induction l; only 1: simpl; only 1: intuition; only 1: simpl; only 1: rewrite <- IHl; only 1: auto).	1.18105602264	1400
Coq.Lists.SetoidPermutation.Permutation.PermutationA_app_comm	40
Coq.Lists.SetoidPermutation.Permutation.PermutationA_cons_app	40
Coq.Lists.SetoidPermutation.Permutation.PermutationA_middle	40	0	synth with cache (only 1: now rewrite app_comm_cons, (PermutationA_cons_append l₁ x), <- app_assoc).	0.0169360637665	1
Coq.Lists.SetoidPermutation.Permutation.PermutationA_equivlistA	40
Coq.Lists.SetoidPermutation.Permutation.NoDupA_equivlistA_PermutationA	40
Coq.Lists.SetoidPermutation.Permutation.Permutation_eqlistA_commute	40
Coq.Lists.SetoidPermutation.Permutation.PermutationA_decompose	40
Coq.Lists.SetoidPermutation.Permutation.Permutation_PermutationA	40	2.0.1.0.0	synth with cache (only 1: induction 1; only 1: intuition; only 1: intuition; only 1: eauto; only 1: now transitivity l').	0.034154176712	8
Coq.Lists.SetoidPermutation.Permutation.eqlistA_PermutationA	40	1.0.0	synth with cache (only 1: induction 1; only 1: constructor; only 1: now constructor).	0.0209431648254	4
Coq.Lists.SetoidPermutation.Permutation.NoDupA_equivlistA_decompose	40
Coq.Lists.SetoidPermutation.Permutation.PermutationA_preserves_NoDupA	40
Coq.Lists.StreamMemo.MemoFunction.memo_get_correct	40
Coq.Lists.StreamMemo.MemoFunction.imemo_get_correct	40
Coq.Lists.StreamMemo.DependentMemoFunction.dmemo_get_correct	40
Coq.Lists.StreamMemo.DependentMemoFunction.dimemo_get_correct	40
Coq.Lists.SetoidList.Type_with_equality.InA_altdef	40	0.1.0.1.1.1.0.6.1	synth with cache (only 1: intros Pdec l; only 1: split; only 1: induction 1; only 1: left; only 1: trivial; only 1: auto; only 1: induction 1; only 1: now constructor; only 1: now constructor).	21.129584074	10534
Coq.Lists.SetoidList.Type_with_equality.InA_cons	40	0.0.0.0.0.1.2.3.1	synth with cache (only 1: intros; only 1: constructor; only 1: firstorder using Sorted_inv; only 1: inversion H; only 1: auto; only 1: auto; only 1: induction 1; only 1: auto; only 1: auto).	2.02764391899	732
Coq.Lists.SetoidList.Type_with_equality.InA_nil	40	1.1	synth with cache (only 1: firstorder using StronglySorted_rect; only 1: inversion_clear H).	0.159675121307	29
Coq.Lists.SetoidList.Type_with_equality.InA_alt	40	0.0.0.0.0.0.1	synth with cache (only 1: split; only 1: induction 1; only 1: firstorder; only 1: firstorder; only 1: induction l; only 1: firstorder  (subst; auto); only 1: firstorder  (subst; auto)).	0.190907001495	56
Coq.Lists.SetoidList.Type_with_equality.NoDupA_altdef	40
Coq.Lists.SetoidList.Type_with_equality.incl_nil	40	6.2	synth with cache (only 1: rewrite <- (firstn_all (A:=l))  at 1; only 1: now simpl).	0.109537124634	17
Coq.Lists.SetoidList.Type_with_equality.eqlistA_altdef	40	0.5.1.2.1.0.0	synth with cache (only 1: split; only 1: induction 1; only 1: apply Forall2_nil; only 1: auto; only 1: induction 1; only 1: left; only 1: auto).	3.65399098396	1872
Coq.Lists.SetoidList.Type_with_equality.equivlist_equiv	40	9.1.0.1.1.0.2	synth with cache (only 1: constructor; only 1: intros x; only 1: firstorder; only 1: intros a H; only 1: intros x y; only 1: firstorder; only 1: firstorder).	18.2112870216	7248
Coq.Lists.SetoidList.Type_with_equality.eqlistA_equiv	40
Coq.Lists.SetoidList.Type_with_equality.eqlistA_equivlistA	40
Coq.Lists.SetoidList.Type_with_equality.InA_compat	40
Coq.Lists.SetoidList.Type_with_equality.InA_eqA	40	0.0.20	synth with cache (only 1: intros H x y Hxy; only 1: rewrite 2!InA_alt; only 1: firstorder).	4.26074910164	1925
Coq.Lists.SetoidList.Type_with_equality.In_InA	40	0.1.7	synth with cache (only 1: induction l as [| a l IHl]; only 1: firstorder  (subst; auto); only 1: firstorder  (subst; auto)).	0.212827920914	60
Coq.Lists.SetoidList.Type_with_equality.InA_split	40
Coq.Lists.SetoidList.Type_with_equality.InA_app	40
Coq.Lists.SetoidList.Type_with_equality.InA_app_iff	40
Coq.Lists.SetoidList.Type_with_equality.InA_rev	40
Coq.Lists.SetoidList.Type_with_equality.InA_singleton	40	0.0.3	synth with cache (only 1: intuition; only 1: invlist InA; only 1: auto).	0.128625869751	23
Coq.Lists.SetoidList.Type_with_equality.InA_double_head	40	0.0	synth with cache (only 1: do 2 rewrite InA_alt; only 1: firstorder).	0.107036113739	2
Coq.Lists.SetoidList.Type_with_equality.InA_permute_heads	40	0.0	synth with cache (only 1: rewrite !InA_cons; only 1: intuition).	0.100048065186	2
Coq.Lists.SetoidList.Type_with_equality.InA_app_idem	40
Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_app	40
Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_rev	40
Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_split	40
Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_swap	40
Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_singleton	40	0.0.0.4.0	synth with cache (only 1: constructor; only 1: red; only 1: intuition; only 1: inv; only 1: auto).	0.0538189411163	9
Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_cons_proper	40
Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_app_proper	40
Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_cons_nil	40
Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_nil_eq	40	0.0.3.0.0.0	synth with cache (only 1: destruct l as [| a l]; only 1: intros Hincl; only 1: reflexivity; only 1: intros E; only 1: exfalso; only 1: now eapply InA_nil, E, InA_cons_hd).	0.105214118958	29
Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_double_head	40	0.0.0.3	synth with cache (only 1: red; only 1: intros; only 1: rewrite !InA_cons; only 1: tauto).	0.08238697052	7
Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_permute_heads	40
Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_app_idem	40
Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_NoDupA_split	40
Coq.Lists.SetoidList.Type_with_equality.Fold.fold_right_eqlistA	40
Coq.Lists.SetoidList.Type_with_equality.Fold.Fold_With_Restriction.ForallOrdPairs_inclA	40
Coq.Lists.SetoidList.Type_with_equality.Fold.Fold_With_Restriction.fold_right_commutes_restr	40
Coq.Lists.SetoidList.Type_with_equality.Fold.Fold_With_Restriction.fold_right_equivlistA_restr	40
Coq.Lists.SetoidList.Type_with_equality.Fold.Fold_With_Restriction.fold_right_add_restr	40
Coq.Lists.SetoidList.Type_with_equality.Fold.fold_right_commutes	40
Coq.Lists.SetoidList.Type_with_equality.Fold.fold_right_equivlistA	40
Coq.Lists.SetoidList.Type_with_equality.Fold.fold_right_add	40
Coq.Lists.SetoidList.Type_with_equality.Fold2.fold_right_eqlistA2	40	0.0.0.1.0.0.3.11.6	synth with cache (only 1: intros l l'; only 1: intros x x' Hxx'; only 1: induction 1; only 1: simpl; only 1: auto; only 1: simpl; only 1: apply Comp; only 1: auto; only 1: auto).	2.83792805672	1890
Coq.Lists.SetoidList.Type_with_equality.Fold2.Fold2_With_Restriction.fold_right_commutes_restr2	40
Coq.Lists.SetoidList.Type_with_equality.Fold2.Fold2_With_Restriction.fold_right_equivlistA_restr2	40
Coq.Lists.SetoidList.Type_with_equality.Fold2.Fold2_With_Restriction.fold_right_add_restr2	40
Coq.Lists.SetoidList.Type_with_equality.Fold2.fold_right_commutes2	40
Coq.Lists.SetoidList.Type_with_equality.Fold2.fold_right_equivlistA2	40
Coq.Lists.SetoidList.Type_with_equality.Fold2.fold_right_add2	40
Coq.Lists.SetoidList.Type_with_equality.Remove.InA_dec	40
Coq.Lists.SetoidList.Type_with_equality.Remove.removeA_filter	40
Coq.Lists.SetoidList.Type_with_equality.Remove.removeA_InA	40
Coq.Lists.SetoidList.Type_with_equality.Remove.removeA_NoDupA	40
Coq.Lists.SetoidList.Type_with_equality.Remove.removeA_equivlistA	40
Coq.Lists.SetoidList.Type_with_equality.InfA_ltA	40
Coq.Lists.SetoidList.Type_with_equality.InfA_compat	40
Coq.Lists.SetoidList.Type_with_equality.InfA_eqA	40
Coq.Lists.SetoidList.Type_with_equality.SortA_InfA_InA	40
Coq.Lists.SetoidList.Type_with_equality.In_InfA	40	5.0.0.2.1.1.0	synth with cache (only 1: intros l; only 1: intros H; only 1: induction l as [| a l IHl]; only 1: intro; only 1: constructor; only 1: intro; only 1: intuition).	5.51885700226	1992
Coq.Lists.SetoidList.Type_with_equality.InA_InfA	40	0.0.1.0.1.0.0	synth with cache (only 1: intros l; only 1: induction l; only 1: intros; only 1: constructor; only 1: intros; only 1: constructor; only 1: auto).	0.0745329856873	9
Coq.Lists.SetoidList.Type_with_equality.InfA_alt	40
Coq.Lists.SetoidList.Type_with_equality.InfA_app	40	1.0.0.0.2.1.1.0	synth with cache (only 1: intros l; only 1: destruct l; only 1: intros x a **; only 1: simpl; only 1: eauto; only 1: constructor; only 1: inv; only 1: eauto).	2.62986707687	330
Coq.Lists.SetoidList.Type_with_equality.SortA_app	40
Coq.Lists.SetoidList.Type_with_equality.SortA_NoDupA	40
Coq.Lists.SetoidList.Type_with_equality.EqlistA.eqlistA_length	40
Coq.Lists.SetoidList.Type_with_equality.EqlistA.app_eqlistA_compat	40
Coq.Lists.SetoidList.Type_with_equality.EqlistA.eqlistA_app	40	1.0.1.0.0	synth with cache (only 1: induction 1; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0644879341125	7
Coq.Lists.SetoidList.Type_with_equality.EqlistA.eqlistA_rev_app	40
Coq.Lists.SetoidList.Type_with_equality.EqlistA.rev_eqlistA_compat	40
Coq.Lists.SetoidList.Type_with_equality.EqlistA.eqlistA_rev	40	0.0.0.0.0	synth with cache (only 1: intros x y ?; only 1: rewrite <- (app_nil_r (rev x)), <- (app_nil_r (rev y)); only 1: apply eqlistA_rev_app; only 1: auto; only 1: auto).	0.0655081272125	5
Coq.Lists.SetoidList.Type_with_equality.EqlistA.SortA_equivlistA_eqlistA	40
Coq.Lists.SetoidList.Type_with_equality.Filter.filter_sort	40
Coq.Lists.SetoidList.Type_with_equality.Filter.filter_InA	40
Coq.Lists.SetoidList.Type_with_equality.Filter.filter_split	40
Coq.Lists.SetoidList.Find.findA_NoDupA	40
Coq.NArith.BinNat.N.eq_dec	40	3.7.12	synth with cache (only 1: intros H; only 1: fix odd_spec 1; only 1: auto).	16.1799719334	16555
Coq.NArith.BinNat.N.discr	40
Coq.NArith.BinNat.N.peano_rect_base	40	0.0.0	synth with cache (only 1: simpl; only 1: revert P a f; only 1: trivial).	0.0142560005188	3
Coq.NArith.BinNat.N.peano_rect_succ	40
Coq.NArith.BinNat.N.peano_rec_base	40	0	synth with cache (only 1: reflexivity).	0.00809979438782	1
Coq.NArith.BinNat.N.peano_rec_succ	40	0.0.0.0.0	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite Pos.peano_rect_succ).	0.0269811153412	5
Coq.NArith.BinNat.N.bi_induction	40
Coq.NArith.BinNat.N.recursion_wd	40
Coq.NArith.BinNat.N.recursion_0	40	0.0	synth with cache (only 1: simpl; only 1: trivial).	0.0093080997467	2
Coq.NArith.BinNat.N.recursion_succ	40
Coq.NArith.BinNat.N.one_succ	40	0.0	synth with cache (only 1: simpl; only 1: trivial).	0.00877594947815	2
Coq.NArith.BinNat.N.two_succ	40	0.0	synth with cache (only 1: simpl; only 1: trivial).	0.00979804992676	2
Coq.NArith.BinNat.N.pred_0	40	0	synth with cache (only 1: trivial).	0.00605797767639	1
Coq.NArith.BinNat.N.pos_pred_spec	40	4.0.0.0.0.0	synth with cache (only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: trivial).	0.0242259502411	10
Coq.NArith.BinNat.N.succ_pos_spec	40	0.0.0.46	synth with cache (only 1: induction n; only 1: trivial; only 1: simpl; only 1: trivial).	0.56673002243	1549
Coq.NArith.BinNat.N.pos_pred_succ	40	0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.1.3	synth with cache (only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: destruct p; only 1: simpl; only 1: f_equal; only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	16.9725921154	8677
Coq.NArith.BinNat.N.succ_pos_pred	40	0.0.0.0.0.0.0.1.0.0.0.0.0	synth with cache (only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: f_equal; only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: reflexivity).	3.52258896828	1655
Coq.NArith.BinNat.N.pred_succ	40	0.0.18	synth with cache (only 1: destruct n as [| n]; only 1: reflexivity; only 1: apply Pos.pred_N_succ).	0.133826971054	194
Coq.NArith.BinNat.N.pred_sub	40	0.0.0	synth with cache (only 1: destruct n; only 1: reflexivity; only 1: now destruct p).	0.0142478942871	3
Coq.NArith.BinNat.N.succ_0_discr	40	0	synth with cache (only 1: now destruct n).	0.0192539691925	1
Coq.NArith.BinNat.N.add_0_l	40	0.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: trivial).	0.0139760971069	3
Coq.NArith.BinNat.N.add_succ_l	40
Coq.NArith.BinNat.N.sub_0_r	40	0	synth with cache (only 1: now destruct n as [| [p| p| ]]).	0.008624792099	1
Coq.NArith.BinNat.N.sub_succ_r	40
Coq.NArith.BinNat.N.mul_0_l	40	0	synth with cache (only 1: reflexivity).	0.00738501548767	1
Coq.NArith.BinNat.N.mul_succ_l	40
Coq.NArith.BinNat.N.eqb_eq	40
Coq.NArith.BinNat.N.ltb_lt	40	4.19.8	synth with cache (only 1: revert m; only 1: fix even_specT 1; only 1: easy).	9.61666202545	9107
Coq.NArith.BinNat.N.leb_le	40	6.1.1.6	synth with cache (only 1: revert m; only 1: fix even_spec 1; only 1: intro q; only 1: easy).	1.82947015762	1258
Coq.NArith.BinNat.N.compare_eq_iff	40
Coq.NArith.BinNat.N.compare_lt_iff	40	0.0.0.0.0	synth with cache (only 1: unfold ltb, lt; only 1: destruct compare; only 1: now split; only 1: now split; only 1: easy').	0.0219709873199	5
Coq.NArith.BinNat.N.compare_le_iff	40	2.3.0	synth with cache (only 1: revert m; only 1: intro m; only 1: easy').	0.410018920898	105
Coq.NArith.BinNat.N.compare_antisym	40
Coq.NArith.BinNat.N.min_l	40
Coq.NArith.BinNat.N.min_r	40
Coq.NArith.BinNat.N.max_l	40
Coq.NArith.BinNat.N.max_r	40	0.1.0.0.0.0	synth with cache (only 1: unfold max, le; only 1: rewrite compare_antisym; only 1: case compare_spec; only 1: trivial; only 1: now destruct 2; only 1: trivial).	0.0264990329742	7
Coq.NArith.BinNat.N.lt_succ_r	40
Coq.NArith.BinNat.N.double_spec	40	1	synth with cache (only 1: now nzsimpl).	0.0457670688629	2
Coq.NArith.BinNat.N.succ_double_spec	40	1.0.1.16.0	synth with cache (only 1: simpl; only 1: cases ltac:(n); only 1: now nzsimpl'; only 1: intro n; only 1: now destruct n as [| [p| p| ]]).	0.857851028442	447
Coq.NArith.BinNat.N.double_add	40	2.0.0.0.0.2.4	synth with cache (only 1: destruct n, m; only 1: now nzsimpl; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: trivial).	2.64743494987	674
Coq.NArith.BinNat.N.succ_double_add	40	1.0.0.1.0.1.0.0	synth with cache (only 1: destruct n, m; only 1: now nzsimpl; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: unfold succ, add; only 1: trivial).	0.66717505455	158
Coq.NArith.BinNat.N.double_mul	40	2	synth with cache (only 1: now destruct n, m).	0.408223152161	91
Coq.NArith.BinNat.N.succ_double_mul	40
Coq.NArith.BinNat.N.div2_double	40	0.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: trivial).	0.0151119232178	3
Coq.NArith.BinNat.N.div2_succ_double	40	0	synth with cache (only 1: now destruct n).	0.00737714767456	1
Coq.NArith.BinNat.N.double_inj	40
Coq.NArith.BinNat.N.succ_double_inj	40
Coq.NArith.BinNat.N.succ_double_lt	40
Coq.NArith.BinNat.N.double_lt_mono	40	1.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n as [| n], m as [| m]; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: now destr_eq H).	0.0434880256653	11
Coq.NArith.BinNat.N.double_le_mono	40	0.0.0.0.0.0.7.0.0	synth with cache (only 1: destruct n as [| n], m as [| m]; only 1: intros H; only 1: now nzsimpl; only 1: intros H; only 1: apply le_0_l; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy).	2.1533870697	927
Coq.NArith.BinNat.N.succ_double_lt_mono	40	9	synth with cache (only 1: now destruct n, m).	0.627788066864	102
Coq.NArith.BinNat.N.succ_double_le_mono	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n as [| n], m as [| m]; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy).	0.0312900543213	9
Coq.NArith.BinNat.N.compare_0_r	40	4.17.19	synth with cache (only 1: intro H; only 1: apply (neq_succ_0 0); only 1: false_hyp ltac:(H) nlt_0_r).	10.7867717743	11924
Coq.NArith.BinNat.N.pow_0_r	40	2	synth with cache (only 1: reflexivity).	0.00769114494324	3
Coq.NArith.BinNat.N.pow_succ_r	40
Coq.NArith.BinNat.N.pow_neg_r	40	2.0	synth with cache (only 1: intro H; only 1: false_hyp H nlt_0_r).	0.0869870185852	37
Coq.NArith.BinNat.N.square_spec	40
Coq.NArith.BinNat.N.size_log2	40
Coq.NArith.BinNat.N.size_gt	40	5.2.8.7.0.6.12.1	synth with cache (only 1: rewrite two_succ; only 1: cases ltac:(n); only 1: simpl; only 1: apply lt_0_1; only 1: simpl; only 1: fix odd_spec 1; only 1: intro m; only 1: now nzsimpl').	31.2239420414	21142
Coq.NArith.BinNat.N.size_le	40
Coq.NArith.BinNat.N.log2_spec	40
Coq.NArith.BinNat.N.log2_nonpos	40	0.0.1.0.0.5	synth with cache (only 1: cases ltac:(n); only 1: intro H; only 1: now apply pred_0; only 1: intro m; only 1: intro H; only 1: false_hyp ltac:(H) nle_succ_0).	0.727480173111	342
Coq.NArith.BinNat.N.even_spec	40
Coq.NArith.BinNat.N.odd_spec	40
Coq.NArith.BinNat.N.pos_div_eucl_spec	40
Coq.NArith.BinNat.N.div_eucl_spec	40
Coq.NArith.BinNat.N.div_mod'	40
Coq.NArith.BinNat.N.div_mod	40	0.0.0.0	synth with cache (only 1: unfold div, modulo; only 1: intro H; only 1: generalize (div_eucl_spec a b); only 1: now destruct div_eucl).	0.0275030136108	4
Coq.NArith.BinNat.N.pos_div_eucl_remainder	40
Coq.NArith.BinNat.N.mod_lt	40
Coq.NArith.BinNat.N.mod_bound_pos	40
Coq.NArith.BinNat.N.sqrtrem_sqrt	40
Coq.NArith.BinNat.N.sqrtrem_spec	40
Coq.NArith.BinNat.N.sqrt_spec	40
Coq.NArith.BinNat.N.sqrt_neg	40	0.0	synth with cache (only 1: intro H; only 1: false_hyp ltac:(H) nlt_0_r).	0.0889070034027	2
Coq.NArith.BinNat.N.ggcd_gcd	40
Coq.NArith.BinNat.N.ggcd_correct_divisors	40
Coq.NArith.BinNat.N.gcd_divide_l	40
Coq.NArith.BinNat.N.gcd_divide_r	40	0.2.1.0.0.0.0	synth with cache (only 1: rewrite <- ggcd_gcd; only 1: generalize (ggcd_correct_divisors a b); only 1: destruct ggcd as (g, (aa, bb)); only 1: simpl; only 1: intros (_, H); only 1: exists bb; only 1: now rewrite mul_comm).	0.0646719932556	22
Coq.NArith.BinNat.N.gcd_greatest	40
Coq.NArith.BinNat.N.gcd_nonneg	40	3.0.0.0.0.0	synth with cache (only 1: rewrite <- ggcd_gcd; only 1: generalize (ggcd_correct_divisors a b); only 1: destruct ggcd as (g, (aa, bb)); only 1: simpl; only 1: intros (H, _); only 1: apply le_0_l).	0.0289371013641	9
Coq.NArith.BinNat.N.testbit_even_0	40
Coq.NArith.BinNat.N.testbit_odd_0	40	0.7	synth with cache (only 1: rewrite two_succ; only 1: now destruct a).	0.0193300247192	14
Coq.NArith.BinNat.N.testbit_succ_r_div2	40
Coq.NArith.BinNat.N.testbit_odd_succ	40
Coq.NArith.BinNat.N.testbit_even_succ	40
Coq.NArith.BinNat.N.testbit_neg_r	40	0.2.0.0.0.0.0.0.0.0	synth with cache (only 1: intros H; only 1: destruct a as [| [a| a| ]], n as [| n]; only 1: easy; only 1: easy; only 1: now destruct a; only 1: easy; only 1: now destruct a; only 1: easy; only 1: easy'; only 1: easy).	1.46653985977	522
Coq.NArith.BinNat.N.shiftr_succ_r	40
Coq.NArith.BinNat.N.shiftl_succ_r	40
Coq.NArith.BinNat.N.shiftr_spec	40
Coq.NArith.BinNat.N.shiftl_spec_high	40
Coq.NArith.BinNat.N.shiftl_spec_low	40
Coq.NArith.BinNat.N.div2_spec	40	0.0	synth with cache (only 1: simpl; only 1: trivial).	0.0115008354187	2
Coq.NArith.BinNat.N.pos_lxor_spec	40
Coq.NArith.BinNat.N.lxor_spec	40
Coq.NArith.BinNat.N.pos_lor_spec	40
Coq.NArith.BinNat.N.lor_spec	40
Coq.NArith.BinNat.N.pos_land_spec	40
Coq.NArith.BinNat.N.land_spec	40
Coq.NArith.BinNat.N.pos_ldiff_spec	40
Coq.NArith.BinNat.N.ldiff_spec	40
Coq.NArith.BinNat.N.gt_lt_iff	40
Coq.NArith.BinNat.N.gt_lt	40
Coq.NArith.BinNat.N.lt_gt	40	0	synth with cache (only 1: apply gt_lt_iff).	0.00701785087585	1
Coq.NArith.BinNat.N.ge_le_iff	40	3.3.8	synth with cache (only 1: unfold leb, le; only 1: rewrite compare_gt_iff; only 1: reflexivity).	11.8999481201	5748
Coq.NArith.BinNat.N.ge_le	40	0.1	synth with cache (only 1: unfold le, ge; only 1: now rewrite compare_antisym, CompOpp_iff).	0.0196158885956	3
Coq.NArith.BinNat.N.le_ge	40	0	synth with cache (only 1: apply ge_le_iff).	0.00732493400574	1
Coq.NArith.BinNat.N.pos_pred_shiftl_low	40
Coq.NArith.BinNat.N.pos_pred_shiftl_high	40
Coq.NArith.BinNat.N.pred_div2_up	40	0.0.0.0.1.0.0.1.0.1	synth with cache (only 1: destruct p; only 1: simpl; only 1: apply Pos.pred_N_succ; only 1: simpl; only 1: destruct p; only 1: trivial; only 1: auto; only 1: simpl; only 1: now nzsimpl; only 1: trivial).	1.36038804054	584
Coq.NArith.BinNat.N.iter_swap_gen	40
Coq.NArith.BinNat.N.iter_swap	40	1.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: now apply Pos.iter_swap_gen).	0.0404970645905	11
Coq.NArith.BinNat.N.iter_succ	40
Coq.NArith.BinNat.N.iter_succ_r	40	1.0.0.3.0	synth with cache (only 1: intros; only 1: destruct n; only 1: simpl; only 1: trivial; only 1: now rewrite Pos.iter_succ, Pos.iter_swap).	0.0287730693817	11
Coq.NArith.BinNat.N.iter_add	40
Coq.NArith.BinNat.N.iter_ind	40
Coq.NArith.BinNat.N.iter_invariant	40	0.1.0.0	synth with cache (only 1: intros; only 1: apply Pos.iter_ind; only 1: auto; only 1: auto).	0.017804145813	5
Coq.NArith.Ndiv_def.Pdiv_eucl_remainder	40
Coq.NArith.Nnat.N2Nat.id	40
Coq.NArith.Nnat.N2Nat.inj	40
Coq.NArith.Nnat.N2Nat.inj_iff	40	13.0.0.0.3	synth with cache (only 1: split; only 1: intro H; only 1: rewrite <- (id a), <- (id a'); only 1: now f_equal; only 1: congruence).	1.76937198639	1236
Coq.NArith.Nnat.N2Nat.inj_0	40	8	synth with cache (only 1: trivial).	0.00721406936646	9
Coq.NArith.Nnat.N2Nat.inj_double	40
Coq.NArith.Nnat.N2Nat.inj_succ_double	40
Coq.NArith.Nnat.N2Nat.inj_succ	40
Coq.NArith.Nnat.N2Nat.inj_add	40
Coq.NArith.Nnat.N2Nat.inj_mul	40
Coq.NArith.Nnat.N2Nat.inj_sub	40
Coq.NArith.Nnat.N2Nat.inj_pred	40
Coq.NArith.Nnat.N2Nat.inj_div2	40
Coq.NArith.Nnat.N2Nat.inj_compare	40
Coq.NArith.Nnat.N2Nat.inj_div	40
Coq.NArith.Nnat.N2Nat.inj_mod	40
Coq.NArith.Nnat.N2Nat.inj_pow	40
Coq.NArith.Nnat.N2Nat.inj_max	40
Coq.NArith.Nnat.N2Nat.inj_min	40
Coq.NArith.Nnat.N2Nat.inj_iter	40
Coq.NArith.Nnat.Nat2N.id	40	2.0.0.1.3.0.3	synth with cache (only 1: unfold N.div2, N.to_nat; only 1: unfold Pos.to_nat; only 1: induction n as [| n IH]; only 1: simpl; only 1: Nat.order_nz; only 1: simpl; only 1: apply SuccNat2Pos.id_succ).	0.706447124481	340
Coq.NArith.Nnat.Nat2N.inj	40
Coq.NArith.Nnat.Nat2N.inj_iff	40	0.0.0.0.0.0	synth with cache (only 1: split; only 1: intros H; only 1: rewrite <- (id n), <- (id n'); only 1: now f_equal; only 1: intros H; only 1: now f_equal).	0.025985956192	6
Coq.NArith.Nnat.Nat2N.inj_double	40
Coq.NArith.Nnat.Nat2N.inj_succ_double	40
Coq.NArith.Nnat.Nat2N.inj_succ	40	0	synth with cache (only 1: nat2N).	0.0185310840607	1
Coq.NArith.Nnat.Nat2N.inj_pred	40	0.1.0.1	synth with cache (only 1: induction n; only 1: nat2N; only 1: Nat.nzsimpl; only 1: nat2N).	0.134438991547	6
Coq.NArith.Nnat.Nat2N.inj_add	40	0	synth with cache (only 1: nat2N).	0.0220839977264	1
Coq.NArith.Nnat.Nat2N.inj_sub	40	0	synth with cache (only 1: nat2N).	0.096097946167	1
Coq.NArith.Nnat.Nat2N.inj_mul	40	0	synth with cache (only 1: nat2N).	0.0213921070099	1
Coq.NArith.Nnat.Nat2N.inj_div2	40	0	synth with cache (only 1: nat2N).	0.0176770687103	1
Coq.NArith.Nnat.Nat2N.inj_compare	40
Coq.NArith.Nnat.Nat2N.inj_div	40	0	synth with cache (only 1: nat2N).	0.0199060440063	1
Coq.NArith.Nnat.Nat2N.inj_mod	40	0	synth with cache (only 1: nat2N).	0.0203251838684	1
Coq.NArith.Nnat.Nat2N.inj_pow	40	0	synth with cache (only 1: nat2N).	0.0201079845428	1
Coq.NArith.Nnat.Nat2N.inj_min	40	0	synth with cache (only 1: nat2N).	0.0192980766296	1
Coq.NArith.Nnat.Nat2N.inj_max	40	0	synth with cache (only 1: nat2N).	0.0739569664001	1
Coq.NArith.Nnat.Nat2N.inj_iter	40	0.19.0.28	synth with cache (only 1: Nat.cases ltac:(n); only 1: trivial; only 1: fix odd_spec 1; only 1: trivial).	18.169467926	22105
Coq.Strings.Ascii.ascii_dec	40
Coq.Strings.Ascii.eqb_spec	40
Coq.Strings.Ascii.eqb_refl	40	8.4.15.3.5.8	synth with cache (only 1: apply eq_true_iff_eq; only 1: split; only 1: auto; only 1: induction x; only 1: simpl; only 1: destr_bool).	13.313740015	16632
Coq.Strings.Ascii.eqb_sym	40
Coq.Strings.Ascii.eqb_eq	40	0.0.5.1.4.7.1.1	synth with cache (only 1: revert m; only 1: intro q; only 1: split; only 1: revert q; only 1: fix odd_specT 1; only 1: t_eqb; only 1: intro; only 1: t_eqb).	7.25844287872	6871
Coq.Strings.Ascii.eqb_neq	40	0	synth with cache (only 1: now rewrite <- not_true_iff_false, Nat.eqb_eq).	0.0223751068115	1
Coq.Strings.Ascii.eqb_compat	40	6	synth with cache (only 1: Morphisms.solve_proper).	0.0620400905609	33
Coq.Strings.Ascii.ascii_N_embedding	40	3.1.7	synth with cache (only 1: fix even_spec 1; only 1: intros a0; only 1: trivial).	0.965739965439	555
Coq.Strings.Ascii.N_ascii_embedding	40
Coq.Strings.Ascii.N_ascii_bounded	40
Coq.Strings.Ascii.ascii_nat_embedding	40
Coq.Strings.Ascii.nat_ascii_embedding	40
Coq.Strings.Ascii.nat_ascii_bounded	40
Coq.Strings.Ascii.compare_antisym	40
Coq.Strings.Ascii.compare_eq_iff	40
Coq.Strings.Ascii.leb_antisym	40
Coq.Strings.Ascii.leb_total	40
Coq.Strings.Ascii.ascii_of_byte_of_ascii	40
Coq.Strings.Ascii.byte_of_ascii_of_byte	40	0.17.0	synth with cache (only 1: cbv[ascii_of_byte byte_of_ascii]; only 1: vm_compute; only 1: repeat match goal with | |- context [ match ?x with | _ => _ end ] => is_var x; destruct x | _ => intro | _ => reflexivity | _ => progress subst | H:Some ?a = Some ?b |- _ => assert (a = b) by refine match H with | eq_refl => eq_refl end; clear H | H:None = Some _ |- _ => solve [ inversion H ] end).	27.098954916	7279
Coq.Strings.Ascii.ascii_of_byte_via_N	40
Coq.Strings.Ascii.ascii_of_byte_via_nat	40
Coq.Strings.Ascii.byte_of_ascii_via_N	40
Coq.Strings.Ascii.byte_of_ascii_via_nat	40
Coq.Strings.Byte.byte_dec_lb	40
Coq.Strings.Byte.byte_dec_bl	40
Coq.Strings.Byte.eqb_false	40
Coq.Strings.Byte.nat.of_to_nat	40
Coq.Strings.Byte.nat.to_of_nat	40
Coq.Strings.Byte.nat.to_of_nat_iff	40
Coq.Strings.Byte.nat.to_of_nat_option_map	40
Coq.Strings.Byte.nat.to_nat_bounded	40
Coq.Strings.Byte.nat.of_nat_None_iff	40
Coq.Strings.Byte.N.of_to_N	40
Coq.Strings.Byte.N.to_of_N	40
Coq.Strings.Byte.N.to_of_N_iff	40
Coq.Strings.Byte.N.to_of_N_option_map	40
Coq.Strings.Byte.N.to_N_bounded	40
Coq.Strings.Byte.N.of_N_None_iff	40
Coq.Strings.Byte.N.to_N_via_nat	40
Coq.Strings.Byte.N.to_nat_via_N	40
Coq.Strings.Byte.N.of_N_via_nat	40
Coq.Strings.Byte.N.of_nat_via_N	40
Coq.FSets.FMapWeakList.Raw.Elt.empty_1	40	6.15	synth with cache (only 1: intros n Hr; only 1: now f_equal).	0.799418926239	304
Coq.FSets.FMapWeakList.Raw.Elt.empty_NoDup	40	7	synth with cache (only 1: constructor).	0.0380208492279	8
Coq.FSets.FMapWeakList.Raw.Elt.is_empty_1	40	2.11	synth with cache (only 1: fix even_specT 1; only 1: intuition).	4.94847488403	206
Coq.FSets.FMapWeakList.Raw.Elt.is_empty_2	40	5.0.0	synth with cache (only 1: fix even_specT 1; only 1: intro n; only 1: auto).	0.0831620693207	15
Coq.FSets.FMapWeakList.Raw.Elt.mem_1	40
Coq.FSets.FMapWeakList.Raw.Elt.mem_2	40
Coq.FSets.FMapWeakList.Raw.Elt.find_2	40
Coq.FSets.FMapWeakList.Raw.Elt.find_1	40
Coq.FSets.FMapWeakList.Raw.Elt.find_eq	40
Coq.FSets.FMapWeakList.Raw.Elt.add_1	40
Coq.FSets.FMapWeakList.Raw.Elt.add_2	40
Coq.FSets.FMapWeakList.Raw.Elt.add_3	40
Coq.FSets.FMapWeakList.Raw.Elt.add_3'	40
Coq.FSets.FMapWeakList.Raw.Elt.add_NoDup	40
Coq.FSets.FMapWeakList.Raw.Elt.add_eq	40
Coq.FSets.FMapWeakList.Raw.Elt.add_not_eq	40
Coq.FSets.FMapWeakList.Raw.Elt.remove_1	40
Coq.FSets.FMapWeakList.Raw.Elt.remove_2	40
Coq.FSets.FMapWeakList.Raw.Elt.remove_3	40
Coq.FSets.FMapWeakList.Raw.Elt.remove_3'	40	0.0.0.0.0.0.0.0	synth with cache (only 1: intros m Hm x y e; only 1: generalize Hm; only 1: functional induction remove x m; only 1: auto; only 1: auto; only 1: do 2 inversion_clear 1; only 1: auto; only 1: auto).	0.186934947968	8
Coq.FSets.FMapWeakList.Raw.Elt.remove_NoDup	40
Coq.FSets.FMapWeakList.Raw.Elt.elements_1	40	5	synth with cache (only 1: auto using eqke_equiv).	0.0349957942963	6
Coq.FSets.FMapWeakList.Raw.Elt.elements_2	40	2	synth with cache (only 1: auto).	0.0298500061035	3
Coq.FSets.FMapWeakList.Raw.Elt.elements_3w	40	4.1.0.0.0	synth with cache (only 1: induction m; only 1: intuition; only 1: intros; only 1: destruct a as (x', e'); only 1: auto).	0.239919900894	28
Coq.FSets.FMapWeakList.Raw.Elt.fold_1	40	2.0.0.0.0.0.7	synth with cache (only 1: intros l; only 1: intro n; only 1: induction l as [| a l IHl]; only 1: easy; only 1: intros; only 1: simpl; only 1: intuition).	1.45497512817	318
Coq.FSets.FMapWeakList.Raw.Elt.submap_1	40
Coq.FSets.FMapWeakList.Raw.Elt.submap_2	40
Coq.FSets.FMapWeakList.Raw.Elt.equal_1	40
Coq.FSets.FMapWeakList.Raw.Elt.equal_2	40
Coq.FSets.FMapWeakList.Raw.Elt2.map_1	40
Coq.FSets.FMapWeakList.Raw.Elt2.map_2	40
Coq.FSets.FMapWeakList.Raw.Elt2.map_NoDup	40
Coq.FSets.FMapWeakList.Raw.Elt2.mapi_1	40
Coq.FSets.FMapWeakList.Raw.Elt2.mapi_2	40
Coq.FSets.FMapWeakList.Raw.Elt2.mapi_NoDup	40
Coq.FSets.FMapWeakList.Raw.Elt3.fold_right_pair_NoDup	40
Coq.FSets.FMapWeakList.Raw.Elt3.combine_NoDup	40
Coq.FSets.FMapWeakList.Raw.Elt3.combine_l_1	40
Coq.FSets.FMapWeakList.Raw.Elt3.combine_r_1	40
Coq.FSets.FMapWeakList.Raw.Elt3.combine_1	40
Coq.FSets.FMapWeakList.Raw.Elt3.map2_NoDup	40
Coq.FSets.FMapWeakList.Raw.Elt3.map2_0	40
Coq.FSets.FMapWeakList.Raw.Elt3.map2_1	40
Coq.FSets.FMapWeakList.Raw.Elt3.map2_2	40
Coq.FSets.FMapWeakList.Make.Elt.MapsTo_1	40
Coq.FSets.FMapWeakList.Make.Elt.mem_1	40	8.10	synth with cache (only 1: fix odd_spec 1; only 1: intuition).	3.44391894341	1718
Coq.FSets.FMapWeakList.Make.Elt.mem_2	40	5.26.11	synth with cache (only 1: intros NoDup belong1; only 1: fix odd_specT 1; only 1: assumption).	20.1285879612	18421
Coq.FSets.FMapWeakList.Make.Elt.empty_1	40	4.28	synth with cache (only 1: intros H ?; only 1: inversion 1).	0.374099969864	571
Coq.FSets.FMapWeakList.Make.Elt.is_empty_1	40
Coq.FSets.FMapWeakList.Make.Elt.is_empty_2	40	2.1.0.2	synth with cache (only 1: fix odd_specT 1; only 1: intros m; only 1: intros H; only 1: auto).	0.0782771110535	18
Coq.FSets.FMapWeakList.Make.Elt.add_1	40
Coq.FSets.FMapWeakList.Make.Elt.add_2	40
Coq.FSets.FMapWeakList.Make.Elt.add_3	40
Coq.FSets.FMapWeakList.Make.Elt.remove_1	40
Coq.FSets.FMapWeakList.Make.Elt.remove_2	40
Coq.FSets.FMapWeakList.Make.Elt.remove_3	40
Coq.FSets.FMapWeakList.Make.Elt.find_1	40
Coq.FSets.FMapWeakList.Make.Elt.find_2	40	0.5.37	synth with cache (only 1: fix gcd_divide 1; only 1: intros a0 b H; only 1: auto).	6.41539216042	7154
Coq.FSets.FMapWeakList.Make.Elt.elements_1	40	3.0	synth with cache (only 1: intros m; only 1: auto).	0.0446469783783	5
Coq.FSets.FMapWeakList.Make.Elt.elements_2	40	0.0	synth with cache (only 1: intros m; only 1: exact (Raw.elements_1 (m:=m))).	0.0473029613495	2
Coq.FSets.FMapWeakList.Make.Elt.elements_3w	40	44	synth with cache (only 1: now intro n; induction n).	2.2259759903	4066
Coq.FSets.FMapWeakList.Make.Elt.cardinal_1	40	6.0	synth with cache (only 1: intros m; only 1: constructor 1).	0.0513489246368	8
Coq.FSets.FMapWeakList.Make.Elt.fold_1	40
Coq.FSets.FMapWeakList.Make.Elt.equal_1	40
Coq.FSets.FMapWeakList.Make.Elt.equal_2	40
Coq.FSets.FMapWeakList.Make.map_1	40	0.8.16.7.0	synth with cache (only 1: intros m; only 1: intros s; only 1: fix gcd_greatest 1; only 1: intros A A_wd A0 AS; only 1: auto).	36.7577679157	21364
Coq.FSets.FMapWeakList.Make.map_2	40
Coq.FSets.FMapWeakList.Make.mapi_1	40
Coq.FSets.FMapWeakList.Make.mapi_2	40
Coq.FSets.FMapWeakList.Make.map2_1	40
Coq.FSets.FMapWeakList.Make.map2_2	40
Coq.FSets.FSetBridge.DepOfNodep.empty	40
Coq.FSets.FSetBridge.DepOfNodep.is_empty	40
Coq.FSets.FSetBridge.DepOfNodep.mem	40
Coq.FSets.FSetBridge.DepOfNodep.add	40
Coq.FSets.FSetBridge.DepOfNodep.singleton	40
Coq.FSets.FSetBridge.DepOfNodep.remove	40
Coq.FSets.FSetBridge.DepOfNodep.union	40
Coq.FSets.FSetBridge.DepOfNodep.inter	40
Coq.FSets.FSetBridge.DepOfNodep.diff	40
Coq.FSets.FSetBridge.DepOfNodep.equal	40
Coq.FSets.FSetBridge.DepOfNodep.subset	40
Coq.FSets.FSetBridge.DepOfNodep.elements	40
Coq.FSets.FSetBridge.DepOfNodep.fold	40	7.6.1.4	synth with cache (only 1: intros n IH; only 1: simpl; only 1: intro l; only 1: eauto with set).	2.14052391052	2271
Coq.FSets.FSetBridge.DepOfNodep.cardinal	40	15.25.1	synth with cache (only 1: simpl; only 1: intros l2; only 1: eauto with set).	5.6368560791	13941
Coq.FSets.FSetBridge.DepOfNodep.compat_P_aux	40
Coq.FSets.FSetBridge.DepOfNodep.filter	40
Coq.FSets.FSetBridge.DepOfNodep.for_all	40
Coq.FSets.FSetBridge.DepOfNodep.exists_	40
Coq.FSets.FSetBridge.DepOfNodep.partition	40
Coq.FSets.FSetBridge.DepOfNodep.choose_aux	40
Coq.FSets.FSetBridge.DepOfNodep.choose	40
Coq.FSets.FSetBridge.DepOfNodep.choose_ok1	40
Coq.FSets.FSetBridge.DepOfNodep.choose_ok2	40
Coq.FSets.FSetBridge.DepOfNodep.choose_equal	40
Coq.FSets.FSetBridge.DepOfNodep.min_elt	40
Coq.FSets.FSetBridge.DepOfNodep.max_elt	40
Coq.FSets.FSetBridge.NodepOfDep.empty_1	40
Coq.FSets.FSetBridge.NodepOfDep.is_empty_1	40
Coq.FSets.FSetBridge.NodepOfDep.is_empty_2	40	1.17.9	synth with cache (only 1: intro l; only 1: fix even_specT 1; only 1: auto).	3.37453103065	6071
Coq.FSets.FSetBridge.NodepOfDep.mem_1	40
Coq.FSets.FSetBridge.NodepOfDep.mem_2	40	0.20.2.18	synth with cache (only 1: intros Hp; only 1: intro n; only 1: fix even_specT 1; only 1: auto).	8.39142107964	20023
Coq.FSets.FSetBridge.NodepOfDep.equal_1	40
Coq.FSets.FSetBridge.NodepOfDep.equal_2	40	1.23.3	synth with cache (only 1: intros ? ?; only 1: fix even_specT 1; only 1: intuition).	5.09519219398	7096
Coq.FSets.FSetBridge.NodepOfDep.subset_1	40
Coq.FSets.FSetBridge.NodepOfDep.subset_2	40
Coq.FSets.FSetBridge.NodepOfDep.choose_1	40
Coq.FSets.FSetBridge.NodepOfDep.choose_2	40	0.2.0.0.0.0.36	synth with cache (only 1: intro; only 1: unfold choose; only 1: case (M.choose s); only 1: simple destruct s0; only 1: intros; only 1: easy; only 1: auto).	4.76401090622	11728
Coq.FSets.FSetBridge.NodepOfDep.choose_3	40
Coq.FSets.FSetBridge.NodepOfDep.elements_1	40
Coq.FSets.FSetBridge.NodepOfDep.elements_2	40	0.0.0.0.2.0.0.0.0.1.0.0.1	synth with cache (only 1: intros s x; only 1: unfold elements; only 1: case (M.choose s); only 1: case (M.is_empty s); only 1: case (M.elements s); only 1: firstorder; only 1: case (M.elements s); only 1: firstorder; only 1: case (M.is_empty s); only 1: case (M.elements s); only 1: firstorder; only 1: case (M.elements s); only 1: firstorder).	2.83640694618	1893
Coq.FSets.FSetBridge.NodepOfDep.elements_3	40	0.0.1.0.0.2	synth with cache (only 1: intros; only 1: unfold elements; only 1: case (M.elements s); only 1: case (M.elements s); only 1: case (M.elements s); only 1: firstorder).	0.0563549995422	41
Coq.FSets.FSetBridge.NodepOfDep.elements_3w	40	3.0	synth with cache (only 1: intros; only 1: intuition).	0.0800549983978	49
Coq.FSets.FSetBridge.NodepOfDep.min_elt_1	40
Coq.FSets.FSetBridge.NodepOfDep.min_elt_2	40
Coq.FSets.FSetBridge.NodepOfDep.min_elt_3	40	0.4.0.0.0.1.0	synth with cache (only 1: intro s; only 1: unfold min_elt; only 1: case (M.min_elt s); only 1: simple destruct s0; only 1: intros; only 1: discriminate H; only 1: auto).	1.14689207077	346
Coq.FSets.FSetBridge.NodepOfDep.max_elt_1	40
Coq.FSets.FSetBridge.NodepOfDep.max_elt_2	40	0.0.0.0.0.0.0.0.0.1.8.1.12.3	synth with cache (only 1: intros s; only 1: intro Hnm; only 1: unfold max_elt; only 1: intros H0; only 1: case (M.max_elt s); only 1: unfold For_all; only 1: simple destruct s0; only 1: intros; only 1: injection H; only 1: intros; only 1: subst; only 1: firstorder; only 1: intros; only 1: discriminate H).	27.7781410217	19531
Coq.FSets.FSetBridge.NodepOfDep.max_elt_3	40	0.0.0.0.1.2.0	synth with cache (only 1: intro s; only 1: unfold max_elt; only 1: case (M.max_elt s); only 1: simple destruct s0; only 1: intros; only 1: discriminate H; only 1: auto).	0.208499908447	32
Coq.FSets.FSetBridge.NodepOfDep.add_1	40
Coq.FSets.FSetBridge.NodepOfDep.add_2	40	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold add; only 1: case (M.add x s); only 1: unfold Add; only 1: firstorder).	0.0260670185089	5
Coq.FSets.FSetBridge.NodepOfDep.add_3	40	0.0.2.4.1.5	synth with cache (only 1: intros s x; only 1: case (M.elements s); only 1: intro l; only 1: unfold add; only 1: case (M.add x s); only 1: firstorder).	1.73040413857	1267
Coq.FSets.FSetBridge.NodepOfDep.remove_1	40
Coq.FSets.FSetBridge.NodepOfDep.remove_2	40	0.0.0.0.2.0	synth with cache (only 1: intros s x y; only 1: intros; only 1: unfold remove; only 1: case (M.add x s); only 1: case (M.remove x s); only 1: firstorder).	0.137433052063	8
Coq.FSets.FSetBridge.NodepOfDep.remove_3	40
Coq.FSets.FSetBridge.NodepOfDep.singleton_1	40
Coq.FSets.FSetBridge.NodepOfDep.singleton_2	40	0.1.9.31.0	synth with cache (only 1: intros x y; only 1: compute; only 1: CRelationClasses.simpl_crelation; only 1: case (M.singleton x); only 1: firstorder).	23.188284874	45260
Coq.FSets.FSetBridge.NodepOfDep.union_1	40
Coq.FSets.FSetBridge.NodepOfDep.union_2	40
Coq.FSets.FSetBridge.NodepOfDep.union_3	40	0.0.0.0	synth with cache (only 1: intros s s' x; only 1: unfold union; only 1: case (M.union s s'); only 1: firstorder).	0.0214099884033	4
Coq.FSets.FSetBridge.NodepOfDep.inter_1	40
Coq.FSets.FSetBridge.NodepOfDep.inter_2	40	0.0.0.0	synth with cache (only 1: intros s s' x; only 1: unfold inter; only 1: case (M.inter s s'); only 1: firstorder).	0.0206768512726	4
Coq.FSets.FSetBridge.NodepOfDep.inter_3	40	0.0.0.7	synth with cache (only 1: intros; only 1: unfold inter; only 1: case (M.inter s s'); only 1: firstorder).	0.245554924011	138
Coq.FSets.FSetBridge.NodepOfDep.diff_1	40
Coq.FSets.FSetBridge.NodepOfDep.diff_2	40	0.0.0.0	synth with cache (only 1: intros s s' x; only 1: unfold diff; only 1: case (M.diff s s'); only 1: firstorder).	0.0202748775482	4
Coq.FSets.FSetBridge.NodepOfDep.diff_3	40	0.0.0.0.0.0.1.0	synth with cache (only 1: intros s s' x; only 1: unfold diff; only 1: case (M.inter s s'); only 1: firstorder; only 1: case (M.remove x s); only 1: case (M.inter s s'); only 1: case (M.diff s s'); only 1: firstorder).	0.0563218593597	9
Coq.FSets.FSetBridge.NodepOfDep.cardinal_1	40
Coq.FSets.FSetBridge.NodepOfDep.fold_1	40
Coq.FSets.FSetBridge.NodepOfDep.f_dec	40	0	synth with cache (only 1: decide equality).	0.0111229419708	1
Coq.FSets.FSetBridge.NodepOfDep.compat_P_aux	40
Coq.FSets.FSetBridge.NodepOfDep.filter_1	40
Coq.FSets.FSetBridge.NodepOfDep.filter_2	40	0.1.0.0.0.0	synth with cache (only 1: intros s x f; only 1: unfold filter; only 1: destruct M.filter as (x0, Hiff); only 1: intuition; only 1: generalize (Hiff (compat_P_aux H)); only 1: firstorder).	0.0866949558258	7
Coq.FSets.FSetBridge.NodepOfDep.filter_3	40	0.0.0.0.2.1.0.0	synth with cache (only 1: intros s x f; only 1: unfold filter; only 1: case (M.remove x s); only 1: intro l; only 1: destruct M.filter as (x0, Hiff); only 1: firstorder; only 1: generalize (Hiff (compat_P_aux H)); only 1: firstorder).	0.683258056641	155
Coq.FSets.FSetBridge.NodepOfDep.for_all_1	40
Coq.FSets.FSetBridge.NodepOfDep.for_all_2	40
Coq.FSets.FSetBridge.NodepOfDep.exists_1	40
Coq.FSets.FSetBridge.NodepOfDep.exists_2	40	0.0.0.1.1.0	synth with cache (only 1: intros s f; only 1: unfold exists_; only 1: case M.exists_; only 1: intuition; only 1: intuition; only 1: inversion H0).	0.0395810604095	8
Coq.FSets.FSetBridge.NodepOfDep.partition_1	40
Coq.FSets.FSetBridge.NodepOfDep.partition_2	40
Coq.FSets.FMapList.Raw.Elt.empty_1	40	6	synth with cache (only 1: now intuition).	0.0169129371643	7
Coq.FSets.FMapList.Raw.Elt.empty_sorted	40	5.6	synth with cache (only 1: unfold PX.eqk, PX.ltk; only 1: constructor).	0.0387179851532	58
Coq.FSets.FMapList.Raw.Elt.is_empty_1	40	5.6	synth with cache (only 1: fix even_spec 1; only 1: intuition).	1.38403582573	143
Coq.FSets.FMapList.Raw.Elt.is_empty_2	40
Coq.FSets.FMapList.Raw.Elt.mem_1	40
Coq.FSets.FMapList.Raw.Elt.mem_2	40
Coq.FSets.FMapList.Raw.Elt.find_2	40
Coq.FSets.FMapList.Raw.Elt.find_1	40
Coq.FSets.FMapList.Raw.Elt.add_1	40
Coq.FSets.FMapList.Raw.Elt.add_2	40
Coq.FSets.FMapList.Raw.Elt.add_3	40
Coq.FSets.FMapList.Raw.Elt.add_Inf	40
Coq.FSets.FMapList.Raw.Elt.add_sorted	40
Coq.FSets.FMapList.Raw.Elt.remove_1	40
Coq.FSets.FMapList.Raw.Elt.remove_2	40
Coq.FSets.FMapList.Raw.Elt.remove_3	40
Coq.FSets.FMapList.Raw.Elt.remove_Inf	40
Coq.FSets.FMapList.Raw.Elt.remove_sorted	40	0.0.0.0.0.0.0.0.0.0.0.1.1.0	synth with cache (only 1: induction m; only 1: simpl; only 1: intuition; only 1: intros; only 1: destruct a as (x', e'); only 1: simpl; only 1: case (X.compare x x'); only 1: intuition; only 1: intuition; only 1: inversion_clear Hm; only 1: auto; only 1: intuition; only 1: inversion_clear Hm; only 1: auto).	6.63055801392	2559
Coq.FSets.FMapList.Raw.Elt.elements_1	40	1	synth with cache (only 1: auto).	0.00902390480042	2
Coq.FSets.FMapList.Raw.Elt.elements_2	40	4.1	synth with cache (only 1: intros e' eqfind; only 1: auto).	0.0149829387665	7
Coq.FSets.FMapList.Raw.Elt.elements_3	40	2.0.0.1.0	synth with cache (only 1: induction m; only 1: intuition; only 1: intros; only 1: destruct a as (x', e'); only 1: intuition).	0.05224609375	12
Coq.FSets.FMapList.Raw.Elt.elements_3w	40
Coq.FSets.FMapList.Raw.Elt.fold_1	40	0.0.0.0.12.1	synth with cache (only 1: intro l; only 1: induction l as [| ? l IHl]; only 1: easy; only 1: intuition; only 1: simpl; only 1: auto).	1.19571709633	821
Coq.FSets.FMapList.Raw.Elt.equal_1	40
Coq.FSets.FMapList.Raw.Elt.equal_2	40
Coq.FSets.FMapList.Raw.Elt.equal_cons	40
Coq.FSets.FMapList.Raw.Elt2.map_1	40
Coq.FSets.FMapList.Raw.Elt2.map_2	40
Coq.FSets.FMapList.Raw.Elt2.map_lelistA	40	1.2.0.2.1.2.0.0	synth with cache (only 1: induction m; only 1: simpl; only 1: intros l k e H H0; only 1: auto; only 1: intuition; only 1: inversion_clear H; only 1: simpl; only 1: intuition).	5.95888805389	2248
Coq.FSets.FMapList.Raw.Elt2.map_sorted	40	4.0.1.3.1.3.0.0.0.0.0	synth with cache (only 1: induction m; only 1: simpl; only 1: intuition; only 1: intros; only 1: inversion_clear Hm; only 1: intuition; only 1: destruct a as (x'', e''); only 1: simpl; only 1: constructor; only 1: auto; only 1: eauto with ordered_type).	21.7316730022	10358
Coq.FSets.FMapList.Raw.Elt2.mapi_1	40
Coq.FSets.FMapList.Raw.Elt2.mapi_2	40
Coq.FSets.FMapList.Raw.Elt2.mapi_lelistA	40	0.0.0.0.2.0.0.2	synth with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: destruct a as (x0, e0); only 1: inversion_clear H; only 1: auto).	0.926873922348	305
Coq.FSets.FMapList.Raw.Elt2.mapi_sorted	40	2.0.0.0.0.0.0.0	synth with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: destruct a as (x', e'); only 1: inversion_clear Hm; only 1: auto).	0.0948269367218	13
Coq.FSets.FMapList.Raw.Elt3.map2_alt_equiv	40
Coq.FSets.FMapList.Raw.Elt3.combine_lelistA	40
Coq.FSets.FMapList.Raw.Elt3.combine_sorted	40
Coq.FSets.FMapList.Raw.Elt3.map2_sorted	40
Coq.FSets.FMapList.Raw.Elt3.combine_1	40
Coq.FSets.FMapList.Raw.Elt3.map2_0	40
Coq.FSets.FMapList.Raw.Elt3.map2_1	40
Coq.FSets.FMapList.Raw.Elt3.map2_2	40
Coq.FSets.FMapList.Make.Elt.MapsTo_1	40	0.0.0.2.0	synth with cache (only 1: intros l x y e **; only 1: apply InA_eqA with (x, e); only 1: eauto with *; only 1: eauto with *; only 1: eauto with *).	0.0382218360901	7
Coq.FSets.FMapList.Make.Elt.mem_1	40
Coq.FSets.FMapList.Make.Elt.mem_2	40	4.42.3.0	synth with cache (only 1: intros m; only 1: intro n; only 1: fix odd_specT 1; only 1: eauto with bool).	15.2490611076	27673
Coq.FSets.FMapList.Make.Elt.empty_1	40	4.3.1.7.31	synth with cache (only 1: intros H; only 1: generalize H; only 1: simpl; only 1: intros; only 1: inversion_clear 1).	0.820271015167	2033
Coq.FSets.FMapList.Make.Elt.is_empty_1	40	0.3.6	synth with cache (only 1: fix even_spec 1; only 1: intro H; only 1: apply PeanoNat.Nat.even_spec).	0.418820858002	281
Coq.FSets.FMapList.Make.Elt.is_empty_2	40	0.1.4.3.0.0.0.1.8	synth with cache (only 1: intros (m', Hm); only 1: generalize Hm; only 1: clear Hm; only 1: intros sorted hyp; only 1: red; only 1: red; only 1: destruct m'; only 1: inversion 1; only 1: intuition).	6.32547593117	6074
Coq.FSets.FMapList.Make.Elt.add_1	40
Coq.FSets.FMapList.Make.Elt.add_2	40
Coq.FSets.FMapList.Make.Elt.add_3	40
Coq.FSets.FMapList.Make.Elt.remove_1	40
Coq.FSets.FMapList.Make.Elt.remove_2	40
Coq.FSets.FMapList.Make.Elt.remove_3	40
Coq.FSets.FMapList.Make.Elt.find_1	40
Coq.FSets.FMapList.Make.Elt.find_2	40
Coq.FSets.FMapList.Make.Elt.elements_1	40	0.0	synth with cache (only 1: intros m; only 1: auto).	0.013916015625	2
Coq.FSets.FMapList.Make.Elt.elements_2	40	0.0	synth with cache (only 1: intros m; only 1: exact (Raw.elements_1 (m:=m))).	0.013955116272	2
Coq.FSets.FMapList.Make.Elt.elements_3	40	3.25.16	synth with cache (only 1: intros l; only 1: destruct l; only 1: auto).	0.926712036133	3469
Coq.FSets.FMapList.Make.Elt.elements_3w	40
Coq.FSets.FMapList.Make.Elt.cardinal_1	40	8	synth with cache (only 1: auto).	0.0287508964539	23
Coq.FSets.FMapList.Make.Elt.fold_1	40
Coq.FSets.FMapList.Make.Elt.equal_1	40	2.23	synth with cache (only 1: fix even_specT 1; only 1: auto).	3.7940261364	3578
Coq.FSets.FMapList.Make.Elt.equal_2	40	3.0.1.20.3	synth with cache (only 1: intros m Hm x; only 1: revert m; only 1: fix odd_specT 1; only 1: intros sorted hyp; only 1: eauto).	31.3073618412	29729
Coq.FSets.FMapList.Make.map_1	40
Coq.FSets.FMapList.Make.map_2	40
Coq.FSets.FMapList.Make.mapi_1	40
Coq.FSets.FMapList.Make.mapi_2	40
Coq.FSets.FMapList.Make.map2_1	40
Coq.FSets.FMapList.Make.map2_2	40
Coq.FSets.FMapList.Make_ord.eq_equal	40	3.0.27	synth with cache (only 1: intro H; only 1: fix even_spec 1; only 1: trivial).	22.1329100132	26669
Coq.FSets.FMapList.Make_ord.eq_1	40
Coq.FSets.FMapList.Make_ord.eq_2	40
Coq.FSets.FMapList.Make_ord.eq_refl	40
Coq.FSets.FMapList.Make_ord.eq_sym	40
Coq.FSets.FMapList.Make_ord.eq_trans	40
Coq.FSets.FMapList.Make_ord.lt_trans	40
Coq.FSets.FMapList.Make_ord.lt_not_eq	40
Coq.FSets.FMapList.Make_ord.compare	40	1.42.2.5.0	synth with cache (only 1: unfold eq, lt; only 1: intro n; only 1: induction n; only 1: fix le_div2 1; only 1: auto).	23.8394501209	54602
Coq.Wellfounded.Inclusion.WfInclusion.Acc_incl	40	2.6.0.6.23.9.0	synth with cache (only 1: intro x; only 1: intro z; only 1: apply Acc_rect; only 1: intro H; only 1: intro; only 1: split; only 1: auto).	35.9191541672	59429
Coq.Wellfounded.Inclusion.WfInclusion.wf_incl	40	0.5.7.2	synth with cache (only 1: intro H; only 1: intro z; only 1: split; only 1: auto with sets).	0.230242013931	237
Coq.Wellfounded.Well_Ordering.WellOrdering.le_WO_inv	40
Coq.Wellfounded.Well_Ordering.WellOrdering.wf_WO	40
Coq.Wellfounded.Well_Ordering.Characterisation_wf_relations.wof	40
Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.left_prefix	40
Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.right_prefix	40
Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.desc_prefix	40
Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.desc_tail	40
Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.dist_aux	40
Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.dist_Desc_concat	40
Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.desc_end	40
Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.ltl_unit	40
Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.acc_app	40	1.0.0.8	synth with cache (only 1: destruct 1; only 1: intros E; only 1: intro; only 1: auto with sets).	1.0950448513	391
Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.wf_lex_exp	40
Coq.Wellfounded.Inverse_Image.Inverse_Image.Acc_lemma	40
Coq.Wellfounded.Inverse_Image.Inverse_Image.Acc_inverse_image	40
Coq.Wellfounded.Inverse_Image.Inverse_Image.wf_inverse_image	40	0.0.0.14.0	synth with cache (only 1: intros; only 1: intro x; only 1: apply (Acc_lemma (f x)); only 1: trivial; only 1: trivial).	0.186141967773	321
Coq.Wellfounded.Inverse_Image.Inverse_Image.Acc_inverse_rel	40
Coq.Wellfounded.Inverse_Image.Inverse_Image.wf_inverse_rel	40
Coq.Wellfounded.Disjoint_Union.Wf_Disjoint_Union.acc_A_sum	40
Coq.Wellfounded.Disjoint_Union.Wf_Disjoint_Union.acc_B_sum	40
Coq.Wellfounded.Disjoint_Union.Wf_Disjoint_Union.wf_disjoint_sum	40
Coq.Wellfounded.Union.WfUnion.strip_commut	40
Coq.Wellfounded.Union.WfUnion.Acc_union	40
Coq.Wellfounded.Union.WfUnion.wf_union	40
Coq.Wellfounded.Lexicographic_Product.WfLexicographic_Product.acc_A_B_lexprod	40
Coq.Wellfounded.Lexicographic_Product.WfLexicographic_Product.wf_lexprod	40
Coq.Wellfounded.Lexicographic_Product.WfSimple_Lexicographic_Product.wf_slexprod	40
Coq.Wellfounded.Lexicographic_Product.Wf_Symmetric_Product.Acc_symprod	40
Coq.Wellfounded.Lexicographic_Product.Wf_Symmetric_Product.wf_symprod	40
Coq.Wellfounded.Lexicographic_Product.Swap.swap_Acc	40
Coq.Wellfounded.Lexicographic_Product.Swap.Acc_swapprod	40
Coq.Wellfounded.Lexicographic_Product.Swap.wf_swapprod	40
Coq.Wellfounded.Transitive_Closure.Wf_Transitive_Closure.incl_clos_trans	40	2.21	synth with cache (only 1: left; only 1: trivial).	0.293337106705	506
Coq.Wellfounded.Transitive_Closure.Wf_Transitive_Closure.Acc_clos_trans	40
Coq.Wellfounded.Transitive_Closure.Wf_Transitive_Closure.Acc_inv_trans	40	1.0.2.1.1.8	synth with cache (only 1: intro x; only 1: intros y H2; only 1: induction H2; only 1: destruct 1; only 1: auto with sets; only 1: auto with sets).	0.94637298584	612
Coq.Wellfounded.Transitive_Closure.Wf_Transitive_Closure.wf_clos_trans	40	0.1.0	synth with cache (only 1: red; only 1: intros y H2; only 1: auto with sets).	0.0285310745239	4
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_neg_neg	40	0.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_lt_mono).	0.0516397953033	3
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_neg_nonpos	40	0.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_lt_le_mono).	0.0219469070435	3
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_nonpos_neg	40	0.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_le_lt_mono).	0.0217950344086	3
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_nonpos_nonpos	40	0.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_le_mono).	0.0218670368195	3
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_0_sub	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_0_sub	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_0	40	0.3.11	synth with cache (only 1: intro p; only 1: intro n; only 1: now rewrite (add_lt_mono_r _ _ n), add_0_l, sub_simpl_r).	3.79017996788	1773
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_0	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_lt_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_le_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_pos_neg	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_neg_pos	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_nonneg_nonpos	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_nonpos_nonneg	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_m1_0	40	0.49	synth with cache (only 1: apply le_succ_l; only 1: now rewrite one_succ, opp_succ, opp_0, succ_pred).	4.12969708443	5041
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_mono_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_mono_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_mono_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_mono_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_le_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_lt_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_lt_sub_lt	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_le_sub_lt	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_le_sub_lt	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_add_lt_sub_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_add_le_sub_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_add_lt_sub_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_add_le_sub_l	40	0.2.4.11	synth with cache (only 1: intro p; only 1: intros; only 1: rewrite add_comm; only 1: now rewrite (sub_le_mono_r _ _ p), add_simpl_r).	3.77262997627	2611
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_lt_add_r	40	0.23.2	synth with cache (only 1: intros n m; only 1: symmetry; only 1: now rewrite (sub_lt_mono_r _ _ p), add_simpl_r).	22.2099699974	11105
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_le_add_r	40	0.23.2	synth with cache (only 1: intros n m; only 1: symmetry; only 1: now rewrite (sub_le_mono_r _ _ p), add_simpl_r).	19.10120821	9911
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_lt_add_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_le_add_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_lt_add	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_le_add	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_pos	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_nonneg	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_neg_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_pos_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_nonpos_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_nonneg_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.PosNeg.zero_pos_neg	40
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.odd_pred	40
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_pred	40	0.0.2.0.0.0	synth with cache (only 1: intros n; only 1: rewrite <- (succ_pred n)  at 2; only 1: symmetry; only 1: apply eq_iff_eq_true; only 1: rewrite even_spec, odd_spec; only 1: apply Odd_succ).	0.181182861328	24
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_opp	40
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.odd_opp	40
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_sub	40
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.odd_sub	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_pred_r	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_pred_l	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_l	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_r	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_opp	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_comm	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_sub_distr_l	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_sub_distr_r	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_lt_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_le_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_nonpos_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_nonneg_nonpos	40	1.0.0	synth with cache (only 1: intros n m Hn Hm; only 1: rewrite <- (mul_0_l m); only 1: now apply mul_le_mono_nonpos_r).	0.539518117905	59
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_nonpos_nonneg	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_0	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_0_mul	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_mul_0	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.nlt_square_0	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_lt_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_le_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_lt_simpl_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_le_simpl_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_1_mul_neg	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_m1_neg	40	0.0.0.0.0.5.0.1.0	synth with cache (only 1: intros n m H1 H2; only 1: apply (mul_lt_mono_neg_r m) in H1; only 1: rewrite mul_1_l in H1; only 1: apply lt_le_pred in H2; only 1: setoid_replace (P 0) with (-1) in H2; only 1: now apply lt_le_trans with m; only 1: apply eq_opp_r; only 1: now rewrite one_succ, opp_pred, opp_0; only 1: assumption).	12.3757209778	3220
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_m1_pos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_1_mul_l	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_m1_mul_r	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.eq_mul_1	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_diag_l	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_diag_r	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_mul_diag_l	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_mul_diag_r	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow_sub_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow_div_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.exists_div2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_0_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_succ_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_spec'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_spec	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_true	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_false	40	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros a n Hn; only 1: rewrite <- testbit_spec' by trivial; only 1: destruct a.[n]; only 1: split; only 1: simpl; only 1: now try order'; only 1: simpl; only 1: now try order'; only 1: split; only 1: simpl; only 1: now try order'; only 1: simpl; only 1: now try order').	3.914675951	1212
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.b2z_inj	40	4.1.4.1.12.10.2	synth with cache (only 1: intros; only 1: apply eq_true_iff_eq; only 1: split; only 1: destr_bool; only 1: now try order'; only 1: destr_bool; only 1: now try order').	16.9703419209	14900
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_b2z_double_div2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_b2z_double_bit0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.b2z_div2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.b2z_bit0	40	0.0.0.0.5	synth with cache (only 1: intros; only 1: apply b2z_inj; only 1: rewrite testbit_spec' by order; only 1: nzsimpl; only 1: now rewrite mod_small by (destruct a0; split; simpl; order')).	0.130752801895	18
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_unique	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_opp	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_m1	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit0_odd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit0_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit0_mod	40	0.8.0	synth with cache (only 1: intros a; only 1: rewrite testbit_spec' by order; only 1: now nzsimpl).	0.82269692421	291
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_odd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit_log2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_above_log2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit_log2_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_above_log2_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_nonneg'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_nonneg_ex	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_neg'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_neg_ex	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div_pow2_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.double_bits_succ	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.double_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mul_pow2_bits_add	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mul_pow2_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mul_pow2_bits_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mod_pow2_bits_high	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mod_pow2_bits_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.eqf_equiv	40	6.0.2.1.5.0	synth with cache (only 1: split; only 1: congruence; only 1: intros m Hm; only 1: intros LE EQ; only 1: CRelationClasses.simpl_crelation; only 1: congruence).	1.20279979706	1475
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_eqf	40	10.11	synth with cache (only 1: intros n m p q; only 1: now f_equiv).	5.74028110504	1437
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj_0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj_iff'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.are_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_spec	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_opp_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_opp_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_div_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_mul_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_mul_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_div_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_spec_alt	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_shiftl	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_shiftl_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_shiftl_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_shiftr	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_1_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_0_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_0_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_0_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_0_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_eq_0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_div	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_odd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_wd	40	0.0.1	synth with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.131479978561	35
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_wd	40	0.0.1	synth with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.111131906509	36
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_eq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_nilpotent	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_eq_0_iff	40	0.0.8.2.0.0.0.0.3	synth with cache (only 1: split; only 1: intros H; only 1: bitwise; only 1: apply xorb_eq; only 1: now rewrite <- lxor_spec, H, bits_0; only 1: intros H; only 1: rewrite H; only 1: bitwise; only 1: apply xorb_nilpotent).	12.7595741749	7243
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_0_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_0_r	40	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_l).	0.0206229686737	3
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_comm	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_assoc	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_0_l	40	9.1.1	synth with cache (only 1: intros; only 1: bitwise; only 1: now nzsimpl).	0.663233995438	408
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_0_r	40	1.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_r).	0.0222969055176	4
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_comm	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_assoc	40	22.0.1	synth with cache (only 1: intros; only 1: bitwise; only 1: intuition).	4.73724579811	3586
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_eq_0_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_0_l	40	3.8.0	synth with cache (only 1: intros; only 1: bitwise; only 1: trivial).	0.491119861603	366
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_0_r	40	3.5.0.5	synth with cache (only 1: intros x; only 1: bitwise; only 1: apply andb_false_iff; only 1: intuition).	1.76297497749	1290
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_comm	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_assoc	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_0_l	40	0.1.2	synth with cache (only 1: intros; only 1: bitwise; only 1: trivial).	0.117443799973	41
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_0_r	40	1.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_l).	0.0206911563873	4
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_land_distr_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_land_distr_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_lor_distr_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_lor_distr_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ldiff_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_ldiff_and	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_spec'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_spec'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_wd	40	0.7.0.0.16.3	synth with cache (only 1: intros x x' Exx' y y' Eyy'; only 1: generalize (partial_order_equivalence y y'); only 1: compute; only 1: intuition; only 1: rewrite H; only 1: now f_equiv).	24.4699048996	11655
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_wd	40	0.12	synth with cache (only 1: unfold clearbit; only 1: solve_proper).	1.65884304047	512
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow2_bits_true	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow2_bits_false	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow2_bits_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_eq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_neq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_eq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_neq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_spec	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_involutive	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_m1	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_m1_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_m1_l	40	11.0.1	synth with cache (only 1: intros n; only 1: bitwise; only 1: now rewrite bits_opp, one_succ, pred_succ, bits_0).	0.687737941742	429
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_m1_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_m1_l	40	17.0.1	synth with cache (only 1: intros n; only 1: bitwise; only 1: now rewrite bits_opp, one_succ, pred_succ, bits_0).	1.46903085709	1512
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_m1_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_m1_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_lnot_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_lnot_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_lnot_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_lnot_lnot	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lxor_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lxor_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_m1_r	40	0.0.3.0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: rewrite lnot_spec, bits_m1; only 1: now destruct a.[m]; only 1: trivial; only 1: trivial).	0.0320670604706	9
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_m1_l	40	0.1.0	synth with cache (only 1: intros a; only 1: bitwise; only 1: now rewrite lnot_spec, bits_m1).	0.0282678604126	4
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_shiftr	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_equiv	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_add	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_div_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_mod_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_spec_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_spec_high	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_spec_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_ones_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ones	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ones_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_r_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_l_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_neg	40	0.1.0	synth with cache (only 1: intros a n; only 1: rewrite <- shiftl_opp_r; only 1: now rewrite 2!lt_nge, shiftl_nonneg).	0.0229001045227	4
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_neg	40	0.3.0	synth with cache (only 1: intro n; only 1: rewrite div2_spec; only 1: now rewrite 2!lt_nge, shiftr_nonneg).	0.0270519256592	6
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_bits_unique	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_shiftr	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_shiftl	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_shiftl'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_bit0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add3_bit0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add3_bits_div2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_carry_div2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_carry_bits_aux	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_carry_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_bit1	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.nocarry_equiv	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_le	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.sub_nocarry_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_lt_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_mod_lt_pow2	40
Coq.Numbers.Integer.Abstract.ZBase.ZBaseProp.pred_inj	40
Coq.Numbers.Integer.Abstract.ZBase.ZBaseProp.pred_inj_wd	40	0.0.0.0.0.0.0.11	synth with cache (only 1: intro n; only 1: intro; only 1: split; only 1: intros; only 1: apply succ_wd in H; only 1: now rewrite 2!succ_pred in H; only 1: intros; only 1: now f_equiv).	4.03490591049	2629
Coq.Numbers.Integer.Abstract.ZBase.ZBaseProp.succ_m1	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_twice_r	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.even_pow	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.odd_pow	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_opp_even	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_opp_odd	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_even_abs	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_even_nonneg	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_odd_abs_sgn	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_odd_sgn	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.abs_pow	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_opp_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_opp_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_abs_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_abs_r	40	0.0.0.0.0.0.0.0.9.0	synth with cache (only 1: intros n m; only 1: destruct_max m; only 1: easy; only 1: split; only 1: intros (p, Hp); only 1: exists (- p); only 1: now rewrite mul_opp_l, <- Hp, opp_involutive; only 1: intros (p, Hp); only 1: exists (- p); only 1: now rewrite Hp, mul_opp_l).	7.16430783272	3806
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_1_r_abs	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_1_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_antisym_abs	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_antisym	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_sub_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_add_cancel_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_opp_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_opp_r	40	1.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply gcd_unique_alt; only 1: apply gcd_nonneg; only 1: intros; only 1: rewrite divide_opp_r; only 1: rewrite and_comm; only 1: rewrite and_comm; only 1: apply gcd_divide_iff).	0.0899391174316	12
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_abs_l	40	1.0.0.1.1.0.0.0.1.0	synth with cache (only 1: intros; only 1: destruct (abs_eq_or_opp n) as [H| H]; only 1: rewrite H; only 1: easy; only 1: rewrite H; only 1: apply gcd_unique_alt; only 1: apply gcd_nonneg; only 1: intros; only 1: rewrite divide_opp_r; only 1: apply gcd_divide_iff).	4.91631484032	1935
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_abs_r	40	3.0.0.0.5.0	synth with cache (only 1: intros n m; only 1: destruct (abs_eq_or_opp m) as [H| H]; only 1: rewrite H; only 1: easy; only 1: rewrite H; only 1: now rewrite gcd_comm, gcd_opp_l, gcd_comm).	2.30931305885	769
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_0_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_0_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_diag	40	0.0.0.1.5.0.0	synth with cache (only 1: intros; only 1: rewrite <- gcd_abs_r; only 1: apply gcd_unique; only 1: apply abs_nonneg; only 1: now apply divide_abs_l; only 1: now apply divide_abs_l, divide_abs_r; only 1: trivial using divide_refl).	2.99103093147	970
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_add_mult_diag_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_add_diag_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_sub_diag_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.Bezout_wd	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.bezout_1_gcd	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_bezout	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_l_nonneg	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_r_nonneg	40	0.2.0.0	synth with cache (only 1: intros n m p ?; only 1: rewrite <- (abs_eq p)  at 3; only 1: now rewrite !(mul_comm _ p), gcd_mul_mono_l, mul_comm; only 1: trivial).	0.054878950119	6
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gauss	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_mul_split	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.quot_div_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_mod_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.quot_div	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_mod	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.mod_divide	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_divide	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_mod_eq_0	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.quot_div_exact	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_div_mul_exact	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_quot_mul_exact	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_div_factor	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_quot_factor	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_div_gcd	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_quot_gcd	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_mod	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_rem	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_wd	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_equiv1	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_equiv2	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_div_swap	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_l	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_r	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_div	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_least	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_nonneg	40	7.6.0	synth with cache (only 1: unfold lcm; only 1: intros n m; only 1: apply abs_nonneg).	8.87248396873	3193
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_comm	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_divide_iff	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_unique	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_unique_alt	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_assoc	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_0_l	40	0.0.0.6.8.3	synth with cache (only 1: intros x; only 1: unfold lcm; only 1: nzsimpl; only 1: rewrite abs_eq; only 1: auto using eq_refl, le_refl; only 1: order || apply lt_0_1).	2.183770895	1413
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_0_r	40	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: order || apply lt_0_1; only 1: exists 0; only 1: now nzsimpl; only 1: apply divide_refl; only 1: trivial).	0.0603759288788	7
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_l_nonneg	40	0.0.0.2.0.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: trivial; only 1: exists n; only 1: now nzsimpl; only 1: apply divide_refl; only 1: trivial).	0.065621137619	9
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_r_nonneg	40	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: trivial; only 1: apply divide_refl; only 1: trivial using divide_1_l, le_0_1, divide_refl; only 1: trivial using divide_1_l, le_0_1, divide_refl).	0.0476701259613	6
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_diag_nonneg	40	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: trivial; only 1: apply divide_refl; only 1: apply divide_refl; only 1: trivial using divide_refl).	0.0467941761017	6
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_eq_0	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_eq_r	40	0.0.0.0.1.3.0	synth with cache (only 1: intros n m Hn; only 1: intros EQ; only 1: apply divide_antisym_nonneg; only 1: apply lcm_nonneg; only 1: order; only 1: now apply lcm_least; only 1: apply divide_lcm_r).	1.3352701664	338
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_iff	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_opp_l	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_opp_r	40	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique_alt; only 1: apply lcm_nonneg; only 1: intros; only 1: rewrite divide_opp_l; only 1: apply lcm_divide_iff).	0.0576059818268	6
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_abs_l	40	0.0.0.1.2.0.0.0.1.0	synth with cache (only 1: intros; only 1: destruct (abs_eq_or_opp n) as [H| H]; only 1: rewrite H; only 1: easy; only 1: rewrite H; only 1: apply lcm_unique_alt; only 1: apply lcm_nonneg; only 1: intros; only 1: rewrite divide_opp_l; only 1: apply lcm_divide_iff).	5.19544506073	1951
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_abs_r	40	2.0.0.0.4.0	synth with cache (only 1: intros n m; only 1: destruct (abs_eq_or_opp m) as [H| H]; only 1: rewrite H; only 1: easy; only 1: rewrite H; only 1: now rewrite lcm_comm, lcm_opp_l, lcm_comm).	1.21565890312	336
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_l	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_r	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_diag	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_l	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_l_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_r	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_r_nonneg	40	0.2.0.0	synth with cache (only 1: intros n m p ?; only 1: rewrite <- (abs_eq p)  at 3; only 1: now rewrite !(mul_comm _ p), lcm_mul_mono_l, mul_comm; only 1: trivial).	0.0635850429535	6
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_1_lcm_mul	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.succ_max_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.succ_min_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.pred_max_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.pred_min_distr	40	0.0.0.1.0.0.0.0.1	synth with cache (only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?pred_le_mono; only 1: now rewrite <- ?pred_le_mono; only 1: order; only 1: rewrite 2!min_r; only 1: now rewrite <- ?pred_le_mono; only 1: now rewrite <- ?pred_le_mono; only 1: order).	1.82975006104	361
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_max_distr_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_max_distr_r	40	1.0.0.0.1.0.0.1.0	synth with cache (only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply add_le_mono_r; only 1: rewrite 2!max_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply add_le_mono_r).	2.31030106544	425
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_min_distr_l	40	0.0.0.4.0.0.0.3.0	synth with cache (only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: rewrite 2!min_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l).	8.99823307991	2229
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_min_distr_r	40	1.0.0.1.1.0.0.0.1	synth with cache (only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_r; only 1: rewrite 2!min_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_r).	4.74413180351	976
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.opp_max_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.opp_min_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_max_distr_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_max_distr_r	40	1.0.1.4.1.0.1.5.1	synth with cache (only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply sub_le_mono_r; only 1: rewrite 2!max_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply sub_le_mono_r).	8.94072604179	2512
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_min_distr_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_min_distr_r	40	1.0.0.8.1.0.0.7.1	synth with cache (only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: order; only 1: now apply sub_le_mono_r; only 1: rewrite 2!min_r; only 1: order; only 1: order; only 1: now apply sub_le_mono_r).	28.260627985	9219
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonneg_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonneg_r	40	1.2.0.0.0.1.2.0.0.1.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: order; only 1: order; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonneg_l; only 1: rewrite 2!max_l; only 1: order; only 1: order; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonneg_l).	34.1773450375	10311
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonneg_l	40	1.0.0.4.1.0.0.3.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: order; only 1: now apply mul_le_mono_nonneg_l; only 1: rewrite 2!min_r; only 1: order; only 1: order; only 1: now apply mul_le_mono_nonneg_l).	16.1096930504	4751
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonneg_r	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonpos_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonpos_r	40	0.2.0.0.1.0.2.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite min_l by trivial; only 1: rewrite max_l; only 1: order; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonpos_l; only 1: rewrite min_r by trivial; only 1: rewrite max_r; only 1: order; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonpos_l).	20.3902819157	4634
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonpos_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonpos_r	40	0.2.0.0.1.0.2.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite max_r by trivial; only 1: rewrite min_r; only 1: order; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonpos_l; only 1: rewrite max_l by trivial; only 1: rewrite min_l; only 1: order; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonpos_l).	24.5204331875	5871
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neg_pos_cases	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.nonpos_pos_cases	40	0.0.0.0.23.0	synth with cache (only 1: intros; only 1: nzinduct n; only 1: intuition order; only 1: intro n; only 1: rewrite lt_succ_r, le_succ_l, !lt_eq_cases; only 1: intuition).	13.020843029	5795
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neg_nonneg_cases	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.nonpos_nonneg_cases	40	0.0.0	synth with cache (only 1: intro; only 1: apply add_le_cases; only 1: now nzsimpl).	0.0875360965729	3
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_l	40	1.2.34.0	synth with cache (only 1: intro n; only 1: apply le_succ_l; only 1: rewrite <- (succ_pred n)  at 2; only 1: now rewrite succ_pred).	7.315969944	6117
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_pred_l	40	22.0.0	synth with cache (only 1: intro n; only 1: rewrite <- (succ_pred n)  at 2; only 1: now apply le_le_succ_r).	4.98899102211	2809
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_le_pred	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.nle_pred_r	40	0.0.10.1	synth with cache (only 1: intro; only 1: rewrite nle_gt; only 1: rewrite <- (succ_pred n)  at 2; only 1: apply lt_succ_diag_r).	1.9932911396	942
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_le	40	3.12.1.0	synth with cache (only 1: intros n m; only 1: rewrite <- (succ_pred m); only 1: rewrite <- le_succ_l; only 1: now rewrite succ_pred).	37.5549459457	9098
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_lt_pred	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_le_pred	40	0.0.5.0	synth with cache (only 1: intros n m LE; only 1: apply lt_le_incl; only 1: apply lt_pred_le; only 1: order).	0.265829801559	56
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_lt	40	0.1.2.7.2	synth with cache (only 1: intros n m; only 1: rewrite <- (succ_pred m)  at 2; only 1: intros H; only 1: rewrite lt_succ_r; only 1: order).	14.8409590721	2233
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_pred_lt	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.pred_lt_mono	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.pred_le_mono	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_succ_lt_pred	40	2.0.0	synth with cache (only 1: intros; only 1: rewrite lt_le_pred; only 1: apply le_succ_l).	0.0499019622803	5
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_succ_le_pred	40	0.0.0.0.1.0	synth with cache (only 1: intros n m; only 1: rewrite <- lt_pred_le; only 1: rewrite <- (succ_pred m); only 1: rewrite pred_succ; only 1: rewrite pred_succ; only 1: apply lt_succ_r).	0.100320100784	7
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_lt_succ	40	0.1.4.1.0	synth with cache (only 1: intros n m; only 1: rewrite <- le_succ_l; only 1: rewrite <- (succ_pred n)  at 2; only 1: symmetry; only 1: apply lt_succ_r).	0.966868877411	134
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_pred_lt_succ	40	0.5.0	synth with cache (only 1: intros n m; only 1: rewrite <- (succ_pred n)  at 2; only 1: now rewrite 2!lt_eq_cases, <- succ_lt_mono, succ_inj_wd).	0.197494983673	22
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neq_pred_l	40	2.3.1	synth with cache (only 1: intro n; only 1: rewrite <- (succ_pred n)  at 2; only 1: apply neq_sym, neq_succ_diag_l).	0.263180017471	47
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_m1_r	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericAbs.abs_eq	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericAbs.abs_neq	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_null	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_pos	40	0.0.0.0.0.0	synth with cache (only 1: unfold sgn; only 1: intros; only 1: destruct (compare_spec 0 n); only 1: order; only 1: order; only 1: order).	0.0537889003754	6
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_neg	40	0.0.0.0.0.0	synth with cache (only 1: unfold sgn; only 1: intros; only 1: destruct (compare_spec 0 n); only 1: order; only 1: order; only 1: order).	0.0553441047668	6
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_wd	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_max	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_neq'	40	0.0.0.0.0.4	synth with cache (only 1: intros m; only 1: rewrite opp_nonneg_nonpos; only 1: intros n; only 1: rewrite abs_neq; only 1: auto with relations; only 1: auto).	0.194925069809	44
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_nonneg	40	0.0.0.1.0	synth with cache (only 1: intros; only 1: destruct_max n; only 1: auto; only 1: rewrite opp_nonneg_nonpos; only 1: auto).	0.053699016571	6
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_eq_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_neq_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_opp	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_0	40	0.4.0	synth with cache (only 1: rewrite abs_eq; only 1: now nzsimpl; only 1: order).	0.0337729454041	7
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_0_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_pos	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_eq_or_opp	40	10.12.0.0	synth with cache (only 1: intros n; only 1: destruct_max n; only 1: auto with relations; only 1: auto with relations).	14.8961770535	6547
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_or_opp_abs	40	26.9.0.0.0	synth with cache (only 1: intros n; only 1: destruct_max n; only 1: auto with relations; only 1: right; only 1: now rewrite opp_involutive).	21.734994173	21760
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_involutive	40	0.0.0.0.0.0.5.0.0	synth with cache (only 1: intros n; only 1: destruct_max n; only 1: rewrite abs_eq; only 1: reflexivity; only 1: auto; only 1: rewrite (abs_eq (- n)); only 1: reflexivity; only 1: rewrite opp_nonneg_nonpos; only 1: auto).	0.993614912033	416
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_spec	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_case_strong	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_case	40	0.0.0.0	synth with cache (only 1: intros P n **; only 1: destruct_max n; only 1: auto; only 1: auto).	0.0468480587006	4
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_eq_cases	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_lt	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_le	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_triangle	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_sub_triangle	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_mul	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_square	40	4.1.1.2	synth with cache (only 1: intros n; only 1: destruct_max n; only 1: auto with relations; only 1: now rewrite mul_opp_l, mul_opp_r, opp_involutive).	1.30800294876	359
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_wd	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_spec	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_0	40	9.9.0	synth with cache (only 1: rewrite sgn_null; only 1: now nzsimpl; only 1: now nzsimpl).	3.70203304291	2876
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_pos_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_null_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_neg_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_opp	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_nonneg	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_nonpos	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_mul	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_abs	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_sgn	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_sgn	40	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct_sgn x; only 1: apply sgn_pos; only 1: apply lt_0_1; only 1: apply sgn_0; only 1: apply sgn_neg; only 1: rewrite opp_neg_pos; only 1: apply lt_0_1).	0.07306599617	8
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_eq	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_opp_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_opp_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_rem_unique	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_unique	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_unique	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_same	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_same	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_small	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_small	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_0_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_0_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_1_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_1_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_1_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_1_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_mul	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_unique_exact	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_nonneg	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_nonpos	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_sign_mul	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_sign_nz	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_sign	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_abs_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_abs_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_abs	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_abs_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_abs_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_abs	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_bound_abs	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_le	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_pos	40	0.0.1.0	synth with cache (only 1: intros a b ? ?; only 1: apply NZQuot.div_pos; only 1: order; only 1: trivial).	0.318830013275	35
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_str_pos	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_lt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_mono	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_quot_le	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_quot_ge	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_succ_quot_gt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_pred_quot_lt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_pred_quot_gt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_succ_quot_lt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_exact	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_lt_upper_bound	40	0.0.0.8.0.0.0	synth with cache (only 1: intros a b q ? ? ?; only 1: rewrite (mul_lt_mono_pos_l b) by order; only 1: apply le_lt_trans with a; only 1: apply NZQuot.mul_div_le; only 1: auto; only 1: auto; only 1: auto).	3.79782509804	1424
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_upper_bound	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_lower_bound	40	0.0.0.0.0	synth with cache (only 1: intros a b q **; only 1: rewrite <- (quot_mul q b) by order; only 1: apply quot_le_mono; only 1: trivial; only 1: now rewrite mul_comm).	0.0791800022125	5
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_compat_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_add	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_add	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_add_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul_cancel_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul_cancel_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_distr_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_distr_l	40	0.0.0.0.7.0	synth with cache (only 1: intros a b c **; only 1: rewrite !(mul_comm c); only 1: assert (b * c ~= 0) by (rewrite <- neq_mul_0; tauto); only 1: rewrite !rem_eq by trivial; only 1: rewrite quot_mul_cancel_r by order; only 1: now rewrite mul_sub_distr_r, <- !mul_assoc, (mul_comm (a ÷ b) c)).	10.2001159191	1772
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_rem	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_idemp_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.add_rem_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.add_rem_idemp_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.add_rem	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_quot	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mod_mul_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_quot	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul_le	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_eq	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_bound_abs	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mod_unique	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique_pos	40	0.3.0.0.0.1.0.2.0.0.0	synth with cache (only 1: intros a b q r Hr EQ; only 1: destruct (Private_NZDiv.div_mod_unique b q (a / b) r (a mod b)); only 1: left; only 1: auto; only 1: left; only 1: apply mod_pos_bound; only 1: intuition order; only 1: rewrite <- div_mod; only 1: order; only 1: intuition order; only 1: auto).	6.53431820869	2198
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique_neg	40	0.0.0.0	synth with cache (only 1: intros a b q r **; only 1: apply div_unique with r; only 1: auto; only 1: auto).	0.040755033493	4
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique	40	0.1.0.0.1.0.1.0.1.0.0.0.0	synth with cache (only 1: intros a b q r Hr EQ; only 1: assert (Hb : b ~= 0) by (destruct Hr; intuition; order); only 1: destruct (div_mod_unique b q (a / b) r (a mod b)); only 1: trivial; only 1: destruct Hr; only 1: left; only 1: apply mod_pos_bound; only 1: intuition order; only 1: right; only 1: apply mod_neg_bound; only 1: intuition order; only 1: now rewrite <- div_mod; only 1: trivial).	25.5225119591	7269
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique_pos	40	0.5.1.0.2.1.0.0.2.0	synth with cache (only 1: intros a b q r **; only 1: destruct (Private_NZDiv.div_mod_unique b q (a / b) r (a mod b)); only 1: auto; only 1: left; only 1: apply mod_pos_bound; only 1: intuition order; only 1: rewrite <- div_mod; only 1: order; only 1: intuition order; only 1: auto).	19.1084170341	6817
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique_neg	40	0.0.0.0	synth with cache (only 1: intros a b q r **; only 1: apply mod_unique with q; only 1: auto; only 1: auto).	0.0444397926331	4
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_bound_or	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.opp_mod_bound_or	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_r_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_r_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_r_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_r_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign_mul	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_same	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_same	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_small	40	0.0.0.1.0.0.0	synth with cache (only 1: intros a b ?; only 1: symmetry; only 1: apply Private_NZDiv.div_unique with a; only 1: left; only 1: intuition; only 1: intuition; only 1: now nzsimpl).	0.109266042709	22
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_small	40	0.0.0.1.0.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 0; only 1: left; only 1: intuition; only 1: intuition; only 1: now nzsimpl).	0.116389036179	22
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_0_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_0_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_1_r	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_1_r	40	1.0.0.0.0.0.0.3	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: left; only 1: split; only 1: auto using eq_refl, le_refl; only 1: order'; only 1: now nzsimpl).	0.686035871506	204
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_1_l	40	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.0369210243225	5
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_1_l	40	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.035835981369	5
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_mul	40	0.0.0.1.0.1.0.0.1.0.0	synth with cache (only 1: intros a b **; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: destruct (lt_ge_cases 0 b); only 1: left; only 1: intuition; only 1: right; only 1: intuition; only 1: order; only 1: nzsimpl; only 1: apply mul_comm).	10.6405727863	3019
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique_exact	40	0.0.0.2.0.0.0.0.1.2.6	synth with cache (only 1: intros NEQ; only 1: intros Hab; only 1: apply Private_NZDiv.div_unique with 0; only 1: destruct (lt_ge_cases 0 b); only 1: left; only 1: now try split; only 1: right; only 1: intuition; only 1: order; only 1: nzsimpl; only 1: now try split).	3.41105914116	1421
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_le	40	0.0.0.0	synth with cache (only 1: intros a b ? ?; only 1: apply mod_le; only 1: order; only 1: trivial).	0.0399680137634	4
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_pos	40	2.0.1.0	synth with cache (only 1: intros a b ? ?; only 1: assert (LE : 0 <= a / b) by (apply div_pos; order); only 1: assert (MOD : a mod b < b) by (destruct (mod_bound_pos a b); order); only 1: auto).	0.705492019653	83
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_str_pos	40	0.1.0.0	synth with cache (only 1: intros a b (Hb, Hab); only 1: assert (LE : 0 <= a / b) by (apply Private_NZDiv.div_pos; order); only 1: apply div_str_pos; only 1: auto).	0.44560790062	61
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_lt	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_mono	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_div_le	40	0.0.1.0.0.0.1	synth with cache (only 1: intros a b **; only 1: rewrite (add_le_mono_r _ _ (a mod b)), <- div_mod by order; only 1: rewrite <- (add_0_r a)  at 1; only 1: rewrite <- add_le_mono_l; only 1: destruct (mod_pos_bound a b); only 1: order; only 1: order).	0.0770218372345	13
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_div_ge	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_succ_div_gt	40	4.0.0.0.1	synth with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite mul_succ_r; only 1: rewrite <- add_lt_mono_l; only 1: now destruct (mod_pos_bound a b)).	0.0943582057953	14
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_succ_div_lt	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_exact	40	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite <- (add_0_r (b * (a / b)))  at 2; only 1: apply add_cancel_l).	0.0457520484924	4
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_lt_upper_bound	40	0.0.0.0.0.1.9	synth with cache (only 1: intros a b ? ?; only 1: intros Hab; only 1: rewrite (mul_lt_mono_pos_l b) by order; only 1: apply le_lt_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: auto; only 1: auto).	4.39373207092	2015
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_upper_bound	40	0.1.0.0.0	synth with cache (only 1: intros a b q **; only 1: rewrite (mul_le_mono_pos_l _ _ b) by order; only 1: apply le_trans with a; only 1: now apply mul_div_le; only 1: auto).	0.0452079772949	6
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_lower_bound	40	0.0.0.0.0	synth with cache (only 1: intros a b q **; only 1: rewrite <- (div_mul q b) by order; only 1: apply div_le_mono; only 1: trivial; only 1: now rewrite mul_comm).	0.0575180053711	5
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_compat_l	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros p q r Hp (Hq, Hqr); only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite (div_mod p r)  at 2 by order; only 1: apply le_trans with (r * (p / r)); only 1: apply mul_le_mono_nonneg_r; only 1: apply Private_NZDiv.div_pos; only 1: order; only 1: order; only 1: order; only 1: rewrite <- (add_0_r (r * (p / r)))  at 1; only 1: rewrite <- add_le_mono_l; only 1: destruct (mod_bound_pos p r); only 1: order; only 1: order; only 1: order).	32.6283538342	7656
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_add	40	0.0.5.0.0.1	synth with cache (only 1: intros a b **; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with (a / c + b); only 1: now apply mod_bound_or; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	3.06284022331	913
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_add	40	0.1.0.0.0.0.0	synth with cache (only 1: intros a b c **; only 1: apply (mul_cancel_l _ _ c); only 1: order; only 1: apply (add_cancel_r _ _ ((a + b * c) mod c)); only 1: rewrite <- div_mod, Private_NZDiv.mod_add by order; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	0.0866868495941	8
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_add_l	40	0.0.0.1.6	synth with cache (only 1: intros a b ?; only 1: rewrite (add_comm _ c), (add_comm a); only 1: intros; only 1: apply Private_NZDiv.div_add; only 1: order).	0.826924085617	328
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul_cancel_r	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul_cancel_l	40	0.0.2.3.0	synth with cache (only 1: intros a b c **; only 1: rewrite !(mul_comm c); only 1: apply Private_NZDiv.div_mul_cancel_r; only 1: tauto; only 1: tauto).	1.32123708725	147
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_distr_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_distr_r	40	1.0	synth with cache (only 1: intros a b c **; only 1: now rewrite !(mul_comm _ c), Private_NZDiv.mul_mod_distr_l).	0.162869930267	17
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_mod	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_idemp_r	40	1.1.1.0.0.0	synth with cache (only 1: intros a b n Hn; only 1: rewrite !(mul_comm a); only 1: symmetry; only 1: symmetry; only 1: apply Private_NZDiv.mul_mod_idemp_l; only 1: order).	0.203320980072	34
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod	40	1.1.3.0.0	synth with cache (only 1: intros a b n **; only 1: rewrite Private_NZDiv.mul_mod_idemp_l, Private_NZDiv.mul_mod_idemp_r; only 1: now rewrite mul_comm; only 1: order; only 1: order).	0.27457690239	39
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod_idemp_r	40	1.2.1.0	synth with cache (only 1: intros a b n Hn; only 1: rewrite !(add_comm a); only 1: apply Private_NZDiv.add_mod_idemp_l; only 1: order).	0.153527021408	33
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod	40	1.1.5.1.0	synth with cache (only 1: intros; only 1: rewrite Private_NZDiv.add_mod_idemp_l, Private_NZDiv.add_mod_idemp_r; only 1: reflexivity; only 1: order; only 1: order).	2.63159489632	742
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_div	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.rem_mul_r	40	0.0.1.0.0.0.1	synth with cache (only 1: intros a b c Hb Hc; only 1: apply add_cancel_l with (b * c * (a / (b * c))); only 1: rewrite <- div_mod by (apply neq_mul_0; split; order); only 1: rewrite <- Private_NZDiv.div_div by trivial; only 1: rewrite add_assoc, add_shuffle0, <- mul_assoc, <- mul_add_distr_l; only 1: rewrite <- div_mod by order; only 1: now apply div_mod).	0.152117967606	15
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_div	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mul_mod_distr_l	40	0.0.0.0.0.0.0.0.0.0.1	synth with cache (only 1: intros a b c d ? ? [? ?]; only 1: assert (0 <= a * c) by (apply mul_nonneg_nonneg; order); only 1: assert (0 <= a * c + d) by (apply add_nonneg_nonneg; order); only 1: rewrite (mul_comm c a), mod_mul_r, Private_NZDiv.add_mod, Private_NZDiv.mod_mul, Private_NZDiv.div_add_l; only 1: now rewrite ?add_0_l, Private_NZDiv.div_small, add_0_r, ?(Private_NZDiv.mod_small d c), (add_comm d); only 1: order; only 1: order; only 1: order; only 1: order; only 1: order; only 1: order).	3.20042705536	465
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mul_mod_distr_r	40	0.0	synth with cache (only 1: intros a b c d ? ? ?; only 1: now rewrite !(mul_comm _ c), Private_NZDiv.add_mul_mod_distr_l).	0.0392348766327	2
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul_le	40	0.0.0.0.0.0.0.0	synth with cache (only 1: intros a b c ? ? ?; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite mul_assoc, (mul_comm b c), <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: auto; only 1: apply Private_NZDiv.mul_div_le; only 1: auto).	0.0839648246765	8
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_pred_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_pred_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_0_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_succ_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_pred_l	40	0.1.0	synth with cache (only 1: rewrite <- 2!add_opp_r; only 1: rewrite <- (succ_pred n)  at 2; only 1: now rewrite add_succ_l, pred_succ).	0.0209839344025	4
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_pred_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_pred	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_diag	40	1.0.5.0.1.1	synth with cache (only 1: nzinduct n; only 1: now nzsimpl; only 1: intro m; only 1: nzsimpl; only 1: rewrite sub_succ_l; only 1: now nzsimpl).	1.88382411003	575
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_diag_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_diag_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_l	40	0.0.0.0.0.2	synth with cache (only 1: rewrite <- add_opp_r; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.381615161896	81
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_sub_assoc	40	0.0.0.0.0.0.4.6	synth with cache (only 1: rewrite <- add_opp_r; only 1: rewrite add_comm; only 1: rewrite <- add_opp_r; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	14.919506073	4189
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_involutive	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_add_distr	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_sub_distr	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_inj	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_inj_wd	40	5.0.0.0.0.8	synth with cache (only 1: split; only 1: intros H; only 1: apply opp_wd in H; only 1: now rewrite 2!opp_involutive in H; only 1: intros H; only 1: now f_equiv).	1.20369100571	515
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.eq_opp_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.eq_opp_r	40	1	synth with cache (only 1: now rewrite <- (opp_inj_wd (- n) m), opp_involutive).	0.0980799198151	54
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add_distr	40	0.2.0	synth with cache (only 1: rewrite <- 2!add_opp_r; only 1: rewrite <- add_opp_r, opp_add_distr; only 1: now rewrite add_assoc).	0.0233089923859	5
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_sub_distr	40	0.1.2.1	synth with cache (only 1: rewrite <- 2!add_opp_r; only 1: rewrite <- add_opp_r, opp_add_distr, add_assoc; only 1: rewrite <- 2!add_assoc, add_cancel_l; only 1: now rewrite opp_involutive).	0.0395669937134	8
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_opp_l	40	1.0.6	synth with cache (only 1: rewrite <- add_opp_r; only 1: rewrite <- add_opp_r; only 1: now rewrite add_comm).	0.0572731494904	31
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_opp_r	40	0.1	synth with cache (only 1: rewrite <- add_opp_r; only 1: now rewrite opp_involutive).	0.286334037781	67
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_sub_swap	40	1.1.0	synth with cache (only 1: rewrite <- 2!add_opp_r; only 1: rewrite <- 2!add_assoc, add_cancel_l; only 1: apply add_comm).	0.0197160243988	5
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_cancel_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_cancel_r	40	13.0.0.1.6	synth with cache (only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite pred_inj_wd).	14.9980111122	10617
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_l	40	2.18	synth with cache (only 1: rewrite <- add_opp_r; only 1: now apply add_move_l).	0.441300153732	324
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_0_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_0_r	40	0.31	synth with cache (only 1: rewrite add_comm; only 1: now rewrite add_move_l, sub_0_l).	36.7066700459	14903
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_0_l	40	0.4.1.1	synth with cache (only 1: symmetry; only 1: symmetry; only 1: rewrite <- (add_opp_r n m); only 1: now rewrite add_move_l, sub_0_l).	0.451766014099	143
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_0_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_simpl_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_simpl_r	40	0.4	synth with cache (only 1: rewrite add_comm; only 1: now rewrite add_sub_swap, sub_diag, add_0_l).	0.250919818878	76
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_simpl_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_simpl_r	40	1.1.0.4.0.4.11	synth with cache (only 1: nzinduct n; only 1: nzinduct m; only 1: now nzsimpl; only 1: intro p; only 1: now do 2 rewrite <- sub_sub_distr, sub_diag, sub_0_r; only 1: intro n; only 1: now do 2 rewrite <- sub_sub_distr, sub_diag, sub_0_r).	20.8310570717	7461
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add	40	0	synth with cache (only 1: now rewrite <- sub_sub_distr, sub_diag, sub_0_r).	0.0129518508911	1
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_l_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_l_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_r_l	40	1.11	synth with cache (only 1: rewrite add_comm; only 1: apply add_add_simpl_l_l).	0.571302175522	224
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_r_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add_simpl_r_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add_simpl_r_r	40	0.12	synth with cache (only 1: rewrite (add_comm p m); only 1: now rewrite <- sub_sub_distr, sub_add_distr, sub_diag, sub_0_l, sub_opp_r).	0.47345995903	176
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_eq	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mod_unique	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_unique	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_unique	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_opp_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_opp_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_opp_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_opp_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_same	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_same	40	0.0.0.0.3.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 1; only 1: split; only 1: order; only 1: now rewrite abs_pos; only 1: now nzsimpl).	0.123317956924	27
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_small	40	0.2.3.0	synth with cache (only 1: intros a b ?; only 1: intuition; only 1: apply div_small; only 1: intuition).	0.460386037827	100
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_small	40	2.2.1.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: symmetry; only 1: intuition; only 1: auto using mod_small).	0.317750930786	59
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_0_l	40	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique with 0; only 1: split; only 1: order; only 1: now rewrite abs_pos; only 1: now nzsimpl).	0.0579340457916	7
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_0_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_1_r	40	1.0.0.7.0.0.3.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique with 0; only 1: split; only 1: auto using eq_refl, le_refl; only 1: rewrite abs_eq; only 1: apply lt_0_1; only 1: apply le_0_1; only 1: now nzsimpl).	21.1343188286	9859
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_1_r	40	1.0.0.0.0.0.0.5	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: pose proof lt_0_1 as H; only 1: rewrite abs_pos; only 1: intuition; only 1: order; only 1: now nzsimpl).	1.62039089203	671
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_1_l	40	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.0388851165771	5
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_1_l	40	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.0391139984131	5
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mul	40	0.0.0.0.0.2.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: split; only 1: order; only 1: now rewrite abs_pos; only 1: nzsimpl; only 1: apply mul_comm).	0.077211856842	10
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_unique_exact	40	0.0.0.0.0.1.3.7	synth with cache (only 1: intros NEQ; only 1: intros Hab; only 1: apply Private_NZDiv.div_unique with 0; only 1: split; only 1: now try split; only 1: now rewrite abs_pos; only 1: nzsimpl; only 1: now try split).	2.27410697937	1018
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_le	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_pos	40	2.0.1.0	synth with cache (only 1: intros a b ? ?; only 1: assert (LE : 0 <= a / b) by (apply div_pos; order); only 1: assert (MOD : a mod b < b) by (destruct (mod_bound_pos a b); order); only 1: auto).	0.728394985199	85
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_str_pos	40	0.4.0.0	synth with cache (only 1: intros a b (Hb, Hab); only 1: assert (LE : 0 <= a / b) by (apply Private_NZDiv.div_pos; order); only 1: apply div_str_pos; only 1: auto).	0.678191900253	134
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_lt	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_mono	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_div_le	40	6.0.2.2.0	synth with cache (only 1: intros; only 1: rewrite (add_le_mono_r _ _ (a mod b)), <- div_mod by order; only 1: rewrite <- (add_0_r a)  at 1; only 1: rewrite <- add_le_mono_l; only 1: now apply mod_always_pos).	1.75576400757	715
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_succ_div_gt	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_pred_div_gt	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_exact	40	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite <- (add_0_r (b * (a / b)))  at 2; only 1: apply add_cancel_l).	0.0469188690186	4
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_lt_upper_bound	40	0.1.0.0.0.5	synth with cache (only 1: intros a b c Hc Hab; only 1: rewrite (mul_lt_mono_pos_l b) by order; only 1: apply le_lt_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: order; only 1: order).	0.447999954224	136
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_upper_bound	40	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite (mul_le_mono_pos_l _ _ b) by order; only 1: apply le_trans with a; only 1: apply mul_div_le; only 1: order; only 1: auto).	0.0513150691986	6
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_lower_bound	40	1.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- (div_mul q b) by order; only 1: apply div_le_mono; only 1: trivial; only 1: now rewrite mul_comm).	0.08078789711	6
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_compat_l	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros p q r Hp (Hq, Hqr); only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite (div_mod p r)  at 2 by order; only 1: apply le_trans with (r * (p / r)); only 1: apply mul_le_mono_nonneg_r; only 1: apply Private_NZDiv.div_pos; only 1: order; only 1: order; only 1: order; only 1: rewrite <- (add_0_r (r * (p / r)))  at 1; only 1: rewrite <- add_le_mono_l; only 1: destruct (mod_bound_pos p r); only 1: order; only 1: order; only 1: order).	24.3797259331	6552
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_add	40	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with (a / c + b); only 1: now apply mod_always_pos; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	0.0595581531525	6
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_add	40	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply (mul_cancel_l _ _ c); only 1: order; only 1: apply (add_cancel_r _ _ ((a + b * c) mod c)); only 1: rewrite <- div_mod, Private_NZDiv.mod_add by order; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	0.0824151039124	7
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_add_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_cancel_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_cancel_l	40	0.0.0.0.0.0.0.0.0.0.2.0	synth with cache (only 1: intros; only 1: rewrite !(mul_comm c); only 1: symmetry; only 1: apply div_unique with (a mod b * c); only 1: rewrite abs_mul, (abs_eq c) by order; only 1: rewrite <- (mul_0_l c), <- mul_lt_mono_pos_r, <- mul_le_mono_pos_r by trivial; only 1: now apply mod_always_pos; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite mul_add_distr_r; only 1: rewrite add_cancel_r; only 1: rewrite <- 2!mul_assoc; only 1: now rewrite (mul_comm c)).	8.10265111923	1936
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_distr_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_distr_r	40	1.0	synth with cache (only 1: intros; only 1: now rewrite !(mul_comm _ c), Private_NZDiv.mul_mod_distr_l).	0.282740116119	25
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mod	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_idemp_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod	40	1.1.3.0.0	synth with cache (only 1: intros; only 1: rewrite Private_NZDiv.mul_mod_idemp_l, Private_NZDiv.mul_mod_idemp_r; only 1: now rewrite mul_comm; only 1: order; only 1: order).	0.177895069122	29
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.add_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.add_mod_idemp_r	40	1.2.1.0.0.0	synth with cache (only 1: intros a b n Hn; only 1: rewrite !(add_comm a); only 1: symmetry; only 1: symmetry; only 1: apply Private_NZDiv.add_mod_idemp_l; only 1: order).	0.176795959473	27
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.add_mod	40	1.1.5.1.0	synth with cache (only 1: intros; only 1: rewrite Private_NZDiv.add_mod_idemp_l, Private_NZDiv.add_mod_idemp_r; only 1: reflexivity; only 1: order; only 1: order).	2.71045994759	761
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_div	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mul_r	40	0.0.0.1.0.0.0.0	synth with cache (only 1: intros a b c Hb Hc; only 1: apply add_cancel_l with (b * c * (a / (b * c))); only 1: rewrite <- div_mod by (apply neq_mul_0; split; order); only 1: rewrite <- Private_NZDiv.div_div by trivial; only 1: rewrite add_assoc, add_shuffle0, <- mul_assoc, <- mul_add_distr_l; only 1: rewrite <- div_mod by order; only 1: apply div_mod; only 1: order).	0.177375078201	18
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_div	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_le	40	0.0.0.0.0.0.0.0	synth with cache (only 1: intros a b c ? ? ?; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite mul_assoc, (mul_comm b c), <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: auto; only 1: apply Private_NZDiv.mul_div_le; only 1: order).	0.0825109481812	8
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_divides	40
Coq.Numbers.Integer.Binary.ZBinary.TestOrder.test	40	1	synth with cache (only 1: BinInt.Z.order).	0.0312399864197	16
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_wf_0	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.nlt_0_r	40	1.5.0	synth with cache (only 1: intros; only 1: rewrite nlt_ge; only 1: apply le_0_l).	0.0316500663757	12
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.nle_succ_0	40	0.0.10.2	synth with cache (only 1: intro n; only 1: rewrite nle_gt; only 1: rewrite lt_succ_r; only 1: apply le_0_l).	1.3295211792	1566
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_0_r	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_0_succ	40	0.0.0	synth with cache (only 1: intro n; only 1: rewrite lt_succ_r; only 1: apply le_0_l).	0.0127468109131	3
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.neq_0_lt_0	40	0.0.1.0.1.0.1.2.0.0.0.2.0	synth with cache (only 1: intro n; only 1: split; only 1: cases n; only 1: intro H; only 1: now elim H; only 1: intros n _; only 1: rewrite lt_succ_r; only 1: apply le_0_l; only 1: intro H; only 1: intro H1; only 1: apply (lt_irrefl n); only 1: rewrite H1 in H; only 1: false_hyp H lt_irrefl).	24.441395998	20325
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.eq_0_gt_0_cases	40	0.1.1.0.10.4.0	synth with cache (only 1: intros n; only 1: cases ltac:(n); only 1: auto with relations; only 1: intro n; only 1: right; only 1: rewrite lt_succ_r; only 1: apply le_0_l).	2.20351815224	2647
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.zero_one	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_1_r	40	0.3.0.0.0.0.0.5.0.0.2	synth with cache (only 1: setoid_rewrite one_succ; only 1: intro n; only 1: split; only 1: rewrite lt_succ_r; only 1: intro H; only 1: le_elim H; only 1: false_hyp H nlt_0_r; only 1: assumption; only 1: intro H; only 1: rewrite H; only 1: apply lt_0_succ).	18.6047799587	15472
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_1_r	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_lt_0	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_1_l'	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.RelElim.le_ind_rel	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.RelElim.lt_ind_rel	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.succ_pred_pos	40	0.0.0.0	synth with cache (only 1: intros; only 1: destruct (lt_exists_pred _ _ H) as (n', (EQ, LE)); only 1: rewrite EQ; only 1: now rewrite pred_succ).	0.0235118865967	4
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_pred_l	40	1.0.4.1.0.0.5.0	synth with cache (only 1: intro; only 1: cases n; only 1: rewrite pred_0; only 1: order; only 1: intro n; only 1: nzsimpl; only 1: apply lt_le_incl; only 1: apply lt_succ_diag_r).	4.01738286018	2765
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_l	40	1.0.3.0.0.0.2	synth with cache (only 1: intro n; only 1: cases n; only 1: intro H; only 1: now elim H; only 1: intros n _; only 1: rewrite pred_succ; only 1: apply lt_succ_diag_r).	1.56715798378	634
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_le_pred	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_lt_pred	40	0.4.0.2.3.1.0.2	synth with cache (only 1: intros n m; only 1: induct n; only 1: intro H; only 1: rewrite pred_0; only 1: order; only 1: intros n IH H; only 1: rewrite pred_succ; only 1: now apply lt_succ_l).	8.43048405647	4127
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_le_pred	40	0.0.2.1	synth with cache (only 1: intros z n H; only 1: destruct (lt_exists_pred _ _ H) as (n', (EQ, LE)); only 1: rewrite EQ; only 1: now rewrite pred_succ).	0.0977959632874	37
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_le	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_lt	40	0.0.0.1.0.0.8.0	synth with cache (only 1: intros n m; only 1: cases m; only 1: rewrite pred_0; only 1: trivial; only 1: intros m IH; only 1: rewrite pred_succ in IH; only 1: rewrite lt_succ_r; only 1: order).	1.76759195328	1455
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_pred_le	40	10.0.1.0.0.0.1.0	synth with cache (only 1: intros n m; only 1: cases m; only 1: rewrite pred_0; only 1: intro H; only 1: assumption; only 1: intros m IH; only 1: rewrite pred_succ in IH; only 1: now apply le_le_succ_r).	7.02604103088	5614
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.pred_le_mono	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.pred_lt_mono	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_succ_lt_pred	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_succ_le_pred	40	0.0.0.0.0.0.0.0.0.7.0	synth with cache (only 1: intros n m H; only 1: elim H using le_ind; only 1: solve_proper; only 1: rewrite pred_succ; only 1: now apply eq_le_incl; only 1: clear m H; only 1: intros; only 1: rewrite pred_succ; only 1: apply le_trans with (P m); only 1: assumption; only 1: apply le_pred_l).	5.2626619339	3737
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_lt_succ	40	0.2.0.0.1.1.0.2	synth with cache (only 1: intros n m; only 1: cases n; only 1: intro H; only 1: apply lt_0_succ; only 1: intros n IH; only 1: rewrite pred_succ in IH; only 1: rewrite lt_succ_r; only 1: now apply le_succ_l).	1.92244696617	1295
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_pred_le_succ	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_upper_bound	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_eq	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mod_unique	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_unique	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_unique	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_unique_exact	40	0.0.3.0.8	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_unique with 0; only 1: auto'; only 1: nzsimpl; only 1: now try split).	3.07163596153	1921
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_same	40	4.0.0.0.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique_exact; only 1: apply neq_0_lt_0; only 1: auto'; only 1: now nzsimpl').	0.0408320426941	14
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_same	40	1.0.0.1.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 1; only 1: auto'; only 1: intuition; only 1: now nzsimpl).	0.038547039032	9
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_small	40	1.2.0.0.0	synth with cache (only 1: intros a b ?; only 1: symmetry; only 1: apply Private_NZDiv.div_unique with a; only 1: auto; only 1: now nzsimpl).	0.032488822937	8
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_small	40	1.0.0.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 0; only 1: auto'; only 1: now nzsimpl).	0.0314891338348	6
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_0_l	40	0.1.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: auto').	0.0181469917297	4
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_0_l	40	0.2.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: auto').	0.0156331062317	5
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_1_r	40	0.0.0.1.0.1.2	synth with cache (only 1: setoid_rewrite one_succ; only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique_exact; only 1: apply neq_succ_0; only 1: nzsimpl; only 1: order').	0.621324062347	391
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_1_r	40	1.1.0.1	synth with cache (only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: order'; only 1: now nzsimpl).	0.0779619216919	48
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_1_l	40	0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: auto).	0.0137739181519	3
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_1_l	40	0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: auto).	0.0125567913055	3
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul	40	1.1.0.5.0.2	synth with cache (only 1: intros; only 1: symmetry; only 1: intuition; only 1: apply Private_NZDiv.div_unique_exact; only 1: order; only 1: apply mul_comm).	4.93040394783	2770
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_mul	40	1.0.0.0.7.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: intuition; only 1: apply Private_NZDiv.mod_unique with a; only 1: auto'; only 1: nzsimpl; only 1: apply mul_comm).	1.9467549324	1246
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_le	40	0.2.3.0.0.13.0	synth with cache (only 1: intros; only 1: destruct (mod_bound_pos a b); only 1: auto'; only 1: auto'; only 1: apply mod_le; only 1: auto'; only 1: order).	17.5218789577	15336
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_str_pos	40	0.0.0.2.1.0.0	synth with cache (only 1: intros a b (Hb, Hab); only 1: assert (LE : 0 <= a / b) by (apply div_pos; order); only 1: rewrite lt_eq_cases in LE; only 1: apply div_str_pos; only 1: destruct LE as [LT| EQ]; only 1: auto; only 1: auto).	0.40901017189	91
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_small_iff	40	1.0.1.1.0.0.0.2.7.0.0.1	synth with cache (only 1: intros; only 1: split; only 1: intros Hab; only 1: rewrite <- div_small_iff; only 1: auto; only 1: auto'; only 1: auto'; only 1: intros Hab; only 1: symmetry; only 1: apply Private_NZDiv.div_unique with a; only 1: auto'; only 1: now nzsimpl).	27.2764260769	19567
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_small_iff	40	1.0.1.1.1.0.0.1.0.0.1.1.1.0	synth with cache (only 1: intros; only 1: split; only 1: intros Hab; only 1: rewrite <- Private_NZDiv.div_small_iff; only 1: rewrite <- (mul_cancel_l _ _ b) by order; only 1: rewrite <- (add_cancel_r _ _ (a mod b)); only 1: rewrite <- div_mod by order; only 1: symmetry; only 1: now nzsimpl; only 1: order; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 0; only 1: auto'; only 1: now nzsimpl).	19.6098089218	10247
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_str_pos_iff	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_lt	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_mono	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_div_le	40	0.0.6.0	synth with cache (only 1: intros; only 1: apply mul_div_le; only 1: auto'; only 1: auto').	0.0699710845947	31
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_succ_div_gt	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_exact	40	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite <- (add_0_r (b * (a / b)))  at 2; only 1: apply add_cancel_l).	0.0318968296051	4
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_lt_upper_bound	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_upper_bound	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_lower_bound	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_compat_l	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_add	40	0.0.0.1.2.0.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with (a / c + b); only 1: apply mod_bound_pos; only 1: auto'; only 1: auto'; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	0.506025075912	193
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_add	40	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply (mul_cancel_l _ _ c); only 1: order; only 1: apply (add_cancel_r _ _ ((a + b * c) mod c)); only 1: rewrite <- div_mod, Private_NZDiv.mod_add by order; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	0.0514249801636	7
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_add_l	40	0.1.0.8.0	synth with cache (only 1: intros; only 1: rewrite (add_comm _ c), (add_comm a); only 1: apply Private_NZDiv.div_add; only 1: apply neq_0_lt_0; only 1: auto').	1.59845995903	581
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_cancel_r	40	1.2.1.0.3	synth with cache (only 1: intros; only 1: apply div_mul_cancel_r; only 1: auto'; only 1: auto'; only 1: auto').	0.593795061111	248
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_cancel_l	40	0.1.0.1.0	synth with cache (only 1: intros; only 1: rewrite !(mul_comm c); only 1: apply Private_NZDiv.div_mul_cancel_r; only 1: auto'; only 1: auto').	0.027095079422	7
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_distr_r	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_distr_l	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_mod	40	0.4.0.0.0	synth with cache (only 1: intros; only 1: destruct (mod_bound_pos a n); only 1: auto'; only 1: auto'; only 1: now rewrite Private_NZDiv.mod_small_iff).	0.0263559818268	9
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_idemp_l	40	0.0.0.2.1.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: symmetry; only 1: apply mul_mod_idemp_l; only 1: auto'; only 1: auto'; only 1: auto').	0.132539987564	20
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_idemp_r	40	0.4.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite !(mul_comm a); only 1: apply Private_NZDiv.mul_mod_idemp_l; only 1: intro H1; only 1: rewrite H1 in H; only 1: now apply H).	0.0361549854279	10
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod	40	0.1.0.1.3.0.0	synth with cache (only 1: intros; only 1: rewrite Private_NZDiv.mul_mod_idemp_l, Private_NZDiv.mul_mod_idemp_r; only 1: reflexivity; only 1: apply neq_0_lt_0; only 1: auto'; only 1: apply neq_0_lt_0; only 1: auto').	0.925301074982	357
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.add_mod_idemp_l	40	0.0.0.4.0	synth with cache (only 1: intros; only 1: apply add_mod_idemp_l; only 1: auto'; only 1: auto'; only 1: auto').	0.112398862839	22
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.add_mod_idemp_r	40	0.1.0.1.0	synth with cache (only 1: intros; only 1: rewrite !(add_comm a); only 1: apply Private_NZDiv.add_mod_idemp_l; only 1: apply neq_0_lt_0; only 1: auto').	0.11013507843	12
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.add_mod	40	0.1.0.1.3.1.0	synth with cache (only 1: intros; only 1: rewrite Private_NZDiv.add_mod_idemp_l, Private_NZDiv.add_mod_idemp_r; only 1: reflexivity; only 1: apply neq_0_lt_0; only 1: auto'; only 1: apply neq_0_lt_0; only 1: auto').	0.774658203125	338
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_div	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_mul_r	40	2.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply add_cancel_l with (b * c * (a / (b * c))); only 1: rewrite <- div_mod by (apply neq_mul_0; split; order); only 1: rewrite <- Private_NZDiv.div_div by trivial; only 1: rewrite add_assoc, add_shuffle0, <- mul_assoc, <- mul_add_distr_l; only 1: rewrite <- div_mod by order; only 1: apply div_mod; only 1: auto').	0.0549869537354	10
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_le	40	0.1.0.0.0.1.0.1.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: apply neq_0_lt_0; only 1: auto'; only 1: rewrite mul_assoc, (mul_comm b c), <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: auto'; only 1: apply Private_NZDiv.mul_div_le; only 1: apply neq_0_lt_0; only 1: auto').	1.78498697281	804
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_divides	40	1.0.0.0.1.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros; only 1: exists (a / b); only 1: rewrite Private_NZDiv.div_exact; only 1: auto; only 1: auto; only 1: intros (c, Hc); only 1: rewrite Hc, mul_comm; only 1: apply Private_NZDiv.mod_mul; only 1: auto').	1.31078791618	426
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_succ_0	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_0_succ	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.le_0_l	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.induction	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.case_analysis	40	0.0.0.0.0.0.0	synth with cache (only 1: intros A A_wd A0 AS n; only 1: apply right_induction with 0; only 1: assumption; only 1: assumption; only 1: intros; only 1: auto; only 1: apply le_0_l).	0.0807831287384	7
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_0	40	6.0	synth with cache (only 1: intro n; only 1: now apply (neq_succ_diag_l 0)).	0.0301518440247	8
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_0_r	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.zero_or_succ	40	0.12.0.39.0	synth with cache (only 1: cases n; only 1: auto with relations; only 1: intro n; only 1: right; only 1: now exists n).	5.65802311897	6899
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.eq_pred_0	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.succ_pred	40	5.0.2.2.0.0.3	synth with cache (only 1: cases n; only 1: intro H; only 1: now elim H; only 1: intro H; only 1: intro n; only 1: rewrite pred_succ; only 1: now f_equiv).	1.8597009182	959
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.pred_inj	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.PairInduction.pair_induction	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.TwoDimensionalInduction.two_dim_induction	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.DoubleInduction.double_induction	40	2.11.0.0.0.6.0.0.0	synth with cache (only 1: intros H1 H2 H3; only 1: intro n; only 1: induct ltac:(n); only 1: exact H1; only 1: intros n IH; only 1: intro m; only 1: induct ltac:(m); only 1: trivial; only 1: auto).	21.51070714	14780
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.if_zero_wd	40	0.4.8.9	synth with cache (only 1: intros a a' Ha b b' Hb; only 1: compute; only 1: intros n1 n2 H; only 1: now f_equiv).	16.5186729431	5786
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.if_zero_0	40	10.0.1.6.0.13	synth with cache (only 1: intros n m; only 1: revert m; only 1: intros a Ha; only 1: unfold if_zero; only 1: rewrite recursion_0; only 1: trivial).	13.7018809319	15368
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.if_zero_succ	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_wd	40	1.1.4.3.2.5.11	synth with cache (only 1: compute; only 1: intros a b c d ? ?; only 1: f_equiv; only 1: auto with *; only 1: intros x1 x2 H1 x3 x4 H2; only 1: now rewrite H2; only 1: assumption).	20.186522007	6489
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_0_l	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_succ_l	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_add	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_0_r	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_succ_r	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_mul	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_base	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_step	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_0	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_0_succ	40	1.1.4.0	synth with cache (only 1: intro n; only 1: rewrite ltb_base; only 1: unfold if_zero; only 1: now rewrite recursion_succ).	0.0470409393311	10
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.succ_ltb_mono	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_lt	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_ge	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.even_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.even_0	40	0.1.51.2.28	synth with cache (only 1: apply PeanoNat.Nat.eqb_eq; only 1: unfold even; only 1: CRelationClasses.reduce_goal; only 1: rewrite recursion_0; only 1: trivial).	29.2724270821	16924
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.even_succ	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_0	40	0.0.116	synth with cache (only 1: compute; only 1: rewrite recursion_0; only 1: trivial).	1.57079291344	7096
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_succ	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_spec	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_spec2	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_0	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_1	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_double	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_upper_bound	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_lower_bound	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_nz	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_decrease	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow_0	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow_succ	40	0.11.1.0.0.1	synth with cache (only 1: intros m n; only 1: unfold pow; only 1: rewrite recursion_succ; only 1: now nzsimpl; only 1: now f_equiv; only 1: f_equiv').	31.8052060604	2190
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_prewd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_good_step	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_init	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_step	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow2_log	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.square_lt_mono	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.square_le_mono	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_le_mono_l	40	0.3.3.1	synth with cache (only 1: intros a b Ha Hb; only 1: apply mul_le_mono_nonneg_l; only 1: apply le_0_l; only 1: order).	1.10845112801	158
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_le_mono_r	40	0.0.0.3.0	synth with cache (only 1: intros; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: apply mul_le_mono_nonneg_l; only 1: apply le_0_l; only 1: assumption).	0.10262799263	15
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_lt_mono	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_le_mono	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.lt_0_mul'	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.eq_mul_1	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow_sub_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow_div_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_proper	40	1.0	synth with cache (only 1: intros x x' EQ; only 1: now f_equiv).	0.0317840576172	11
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.exists_div2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_0_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_succ_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_spec'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_spec	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_true	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_false	40	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros a n; only 1: rewrite <- testbit_spec'; only 1: destruct a.[n]; only 1: split; only 1: simpl; only 1: now try order'; only 1: simpl; only 1: now try order'; only 1: split; only 1: simpl; only 1: now try order'; only 1: simpl; only 1: now try order').	3.52280592918	961
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_inj	40	0.0.0.0.0.0.0.2	synth with cache (only 1: intros b b'; only 1: destruct b, b'; only 1: now try order'; only 1: simpl; only 1: now try order'; only 1: simpl; only 1: now try order'; only 1: now try order').	0.0888209342957	29
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_b2n_double_div2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_b2n_double_bit0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_div2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_bit0	40	0.0.0.0.10	synth with cache (only 1: intros; only 1: apply b2n_inj; only 1: rewrite testbit_spec'; only 1: nzsimpl; only 1: now rewrite mod_small by (destruct a0; order')).	0.332479000092	173
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_unique	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_0	40	0.0.5.1.0.0.5.1	synth with cache (only 1: destr_bool; only 1: apply b2n_inj; only 1: rewrite testbit_spec' by trivial; only 1: nzsimpl; only 1: simpl; only 1: order; only 1: order'; only 1: order_nz).	2.16084098816	1089
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit0_odd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit0_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit0_mod	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros a; only 1: destruct (exists_div2 a) as (a', (b, H)); only 1: rewrite H  at 1; only 1: rewrite testbit_0_r; only 1: apply mod_unique with a'; only 1: destruct b; only 1: order'; only 1: order'; only 1: trivial).	0.0755770206451	9
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_odd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit_log2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_above_log2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_bits	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div_pow2_bits	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.double_bits_succ	40	0.0	synth with cache (only 1: intros; only 1: apply testbit_even_succ, le_0_l).	0.0275030136108	2
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mul_pow2_bits_add	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mul_pow2_bits_high	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mul_pow2_bits_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mod_pow2_bits_high	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mod_pow2_bits_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.eqf_equiv	40	4.1.1.6.0.0.6.47	synth with cache (only 1: constructor; only 1: congruence; only 1: intros x x' EQ; only 1: now f_equiv; only 1: intros x y z H H0 x0; only 1: transitivity (y x0); only 1: firstorder; only 1: apply H0).	7.77134895325	7567
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_eqf	40	12.1.5	synth with cache (only 1: repeat red; only 1: intros n m p Hm; only 1: now f_equiv).	5.96553397179	1739
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_inj_0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_inj	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_inj_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.are_bits	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_spec'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_spec_high'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_div_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_mul_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_spec_alt	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_shiftl	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_shiftr	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_shiftl_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_shiftl_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_1_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_0_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_0_r	40	0.1.0.12.9	synth with cache (only 1: intro m; only 1: symmetry; only 1: bitwise; only 1: rewrite shiftr_spec'; only 1: now nzsimpl).	11.0562582016	6792
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_0_l	40	0.0.0	synth with cache (only 1: intros; only 1: rewrite shiftl_mul_pow2; only 1: now nzsimpl).	0.0861849784851	3
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_0_l	40	0.2.0.0	synth with cache (only 1: intros; only 1: rewrite shiftr_div_pow2; only 1: apply Private_NZDiv.div_0_l; only 1: order_nz).	0.103996992111	6
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_eq_0	40	0.0.0.0.0.0.9	synth with cache (only 1: intros a Ha; only 1: rewrite shiftr_div_pow2, div_small_iff by order_nz; only 1: intros H; only 1: apply log2_lt_cancel; only 1: rewrite log2_pow2; only 1: trivial using le_0_l; only 1: trivial using le_0_l).	3.05160713196	916
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_div	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_odd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_wd	40	0.1.0	synth with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.0740959644318	4
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_wd	40	0.1.0	synth with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.0833611488342	4
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_eq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_nilpotent	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_0_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_0_r	40	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_l).	0.0434210300446	3
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_comm	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_assoc	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_0_l	40	4.1.1	synth with cache (only 1: intros; only 1: bitwise; only 1: now nzsimpl).	0.127467155457	30
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_0_r	40	1.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_r).	0.0410740375519	4
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_comm	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_assoc	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_diag	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_eq_0_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_0_l	40	0.0.6.2	synth with cache (only 1: intro H; only 1: bitwise; only 1: apply andb_false_iff; only 1: intuition).	0.516460895538	194
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_0_r	40	2.1.0.3	synth with cache (only 1: intro H; only 1: bitwise; only 1: apply andb_false_iff; only 1: intuition).	0.306076049805	76
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_comm	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_assoc	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_diag	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_0_l	40	2.5.0	synth with cache (only 1: intro n; only 1: bitwise; only 1: now destruct (even n), (even m)).	0.193041086197	30
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_0_r	40	1.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_l).	0.0445032119751	4
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_diag	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_land_distr_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_land_distr_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lor_distr_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lor_distr_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ldiff_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_ldiff_and	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_ldiff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_spec'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_spec'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_true	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_false	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_eq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_neq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_eq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_neq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_lxor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_lxor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_land	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_land	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_lor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_lor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_ldiff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_ldiff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_equiv	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_add	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_div_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_mod_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_spec_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_spec_high	40	0.1.0.1.0.0.0.0.0.0.1.1.2	synth with cache (only 1: intros a n H; only 1: rewrite testbit_false; only 1: rewrite div_small; only 1: nzsimpl; only 1: order'; only 1: order'; only 1: rewrite ones_equiv; only 1: apply le_succ_l; only 1: rewrite succ_pred; only 1: apply Private_NZPow.pow_le_mono_r; only 1: order'; only 1: auto; only 1: order_nz).	8.26601696014	3020
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_spec_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_spec_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_spec_high	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_involutive	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_0_l	40	0.0.1.0	synth with cache (only 1: intros; only 1: unfold lnot; only 1: bitwise; only 1: apply xorb_false_l).	0.164174795151	33
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_ones	40	0.1.0.0	synth with cache (only 1: intros; only 1: unfold lnot; only 1: bitwise; only 1: apply xorb_nilpotent).	0.0812900066376	5
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_ones_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_ones	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_ones_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ones_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ones_r_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ones_l_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_lnot_diag	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_lnot_diag_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lnot_diag	40	2.0.5.0	synth with cache (only 1: intros a n; only 1: unfold lnot; only 1: bitwise as m; only 1: now destruct a.[m]).	1.18829107285	273
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lnot_diag_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_lor_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_land_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_land_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_ldiff_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_lnot_lnot	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_lxor_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_lxor_r	40	0.0.7.0	synth with cache (only 1: intros a b n; only 1: unfold lnot; only 1: bitwise; only 1: apply xorb_assoc_reverse).	1.16580319405	321
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_lor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_bits_unique	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_shiftr	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_shiftl	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_lor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_land	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_lxor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_bit0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add3_bit0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add3_bits_div2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_carry_div2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_carry_bits	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_bit1	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.nocarry_equiv	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_nocarry_lxor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_le	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.sub_nocarry_ldiff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_lnot_diag_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_sub_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_nocarry_lt_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_nocarry_mod_lt_pow2	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.divide_add_cancel_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.divide_sub_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_add_mult_diag_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_add_diag_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_sub_diag_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.Bezout_wd	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.bezout_1_gcd	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout_pos_pos	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout_pos	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.bezout_comm	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_mul_mono_l	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_mul_mono_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gauss	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.divide_mul_split	40
Coq.Numbers.Natural.Abstract.NIso.Homomorphism.natural_isomorphism_wd	40
Coq.Numbers.Natural.Abstract.NIso.Homomorphism.natural_isomorphism_0	40
Coq.Numbers.Natural.Abstract.NIso.Homomorphism.natural_isomorphism_succ	40
Coq.Numbers.Natural.Abstract.NIso.Homomorphism.hom_nat_iso	40	0.0.0.0.0.0.0.0.6.0	synth with cache (only 1: unfold natural_isomorphism; only 1: constructor; only 1: now rewrite N1.recursion_0; only 1: intro n; only 1: rewrite N1.recursion_succ; only 1: auto with *; only 1: auto with *; only 1: repeat red; only 1: intros; only 1: now f_equiv).	0.766080141068	377
Coq.Numbers.Natural.Abstract.NIso.Inverse.inverse_nat_iso	40
Coq.Numbers.Natural.Abstract.NIso.Isomorphism.iso_nat_iso	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_spec'	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_square	40	0.1.0.0.0.0.0.1	synth with cache (only 1: intro n; only 1: apply sqrt_unique' with 0; only 1: split; only 1: order; only 1: apply mul_nonneg_nonneg; only 1: order'; only 1: apply le_0_l; only 1: now nzsimpl).	0.12082195282	10
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_le_square	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_lt_square	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_le_lin	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_mul_above	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_succ_le	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_succ_or	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.add_sqrt_le	40
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.eq_add_0	40
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.eq_add_succ	40
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.eq_add_1	40
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.succ_add_discr	40	2.1.0.0.1.1.0.6	synth with cache (only 1: intro H; only 1: intro n; only 1: nzinduct n; only 1: apply neq_sym; only 1: apply neq_succ_0; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	8.86853981018	2841
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.add_pred_l	40	1.1.2.0.0.0.0.1	synth with cache (only 1: intros n m; only 1: cases n; only 1: intro H; only 1: exfalso; only 1: now apply H; only 1: intros n _; only 1: nzsimpl; only 1: now nzsimpl).	2.52329897881	619
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.add_pred_r	40	0.0.0.2.4.1.0.0.1.0	synth with cache (only 1: intros n m; only 1: cases m; only 1: intro H; only 1: now elim H; only 1: intros; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	7.50104403496	2672
Coq.Numbers.Natural.Abstract.NParity.NParityProp.odd_pred	40	0.1.0.0.0.0.0	synth with cache (only 1: cases n; only 1: intros; only 1: exfalso; only 1: now apply H; only 1: intros; only 1: rewrite pred_succ; only 1: now rewrite <- negb_odd, odd_succ, negb_even).	0.0409979820251	8
Coq.Numbers.Natural.Abstract.NParity.NParityProp.even_pred	40	2.0.3.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- (succ_pred n)  at 2 by trivial; only 1: symmetry; only 1: apply eq_iff_eq_true; only 1: rewrite even_spec, odd_spec; only 1: apply Odd_succ).	1.09816503525	444
Coq.Numbers.Natural.Abstract.NParity.NParityProp.even_sub	40
Coq.Numbers.Natural.Abstract.NParity.NParityProp.odd_sub	40
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.le_add_r	40
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.lt_lt_add_r	40
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.lt_lt_add_l	40	0.0.0.0.3.0	synth with cache (only 1: intros n m p H; only 1: rewrite add_comm; only 1: rewrite <- (add_0_r n); only 1: apply add_lt_le_mono; only 1: assumption; only 1: apply le_0_l).	0.440597057343	70
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.add_pos_l	40	1.1	synth with cache (only 1: intros n m; only 1: apply lt_lt_add_r).	0.783131837845	95
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.add_pos_r	40	1.2.1	synth with cache (only 1: intros n m; only 1: rewrite add_comm; only 1: apply lt_lt_add_r).	0.515530824661	70
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_succ_r'	40	1.0.0.0.0.0.1.0	synth with cache (only 1: intros n m; only 1: nzsimpl; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite add_cancel_r; only 1: apply le_0_l).	0.182729005814	24
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_0_l	40	1.0.0.0.0	synth with cache (only 1: intros a Ha; only 1: destruct (lt_trichotomy a 0) as [LT| [EQ| GT]]; only 1: now rewrite pow_neg_r; only 1: order; only 1: now apply pow_0_l).	0.0294041633606	6
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_1_l	40	7.0.11.0	synth with cache (only 1: intros; only 1: nzsimpl; only 1: now nzsimpl; only 1: apply le_0_l).	3.19770884514	1442
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_mul_l	40	0.0.0.1.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros a b c; only 1: destruct (lt_ge_cases c 0) as [Hc| Hc]; only 1: rewrite !(pow_neg_r _ _ Hc); only 1: now nzsimpl; only 1: apply le_ind with (4 := Hc); only 1: solve_proper; only 1: now nzsimpl; only 1: clear c Hc; only 1: intros c Hc IH; only 1: nzsimpl; only 1: rewrite IH; only 1: apply mul_shuffle1; only 1: trivial; only 1: trivial; only 1: trivial).	2.9185988903	878
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_mul_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_eq_0	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_nonzero	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_l	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_l	40	0.0.0.0.0.0.0.0.0.6.0.3.1	synth with cache (only 1: intros; only 1: apply lt_eq_cases in H; only 1: destruct H as [H| H]; only 1: destruct (lt_trichotomy c 0) as [Hc| [Hc| Hc]]; only 1: apply lt_le_incl, Private_NZPow.pow_lt_mono_l; only 1: order; only 1: trivial; only 1: rewrite Hc; only 1: now nzsimpl; only 1: apply lt_le_incl, Private_NZPow.pow_lt_mono_l; only 1: order; only 1: trivial; only 1: now rewrite <- H).	13.4663569927	7997
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_gt_1	40	0.2.0.0.0.0	synth with cache (only 1: intros a b Ha Hb; only 1: rewrite <- (Private_NZPow.pow_1_l b) by order; only 1: apply Private_NZPow.pow_lt_mono_l; only 1: contradict Ha; only 1: order; only 1: trivial).	0.0306429862976	8
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono	40	2.0.0.2.0.0.0	synth with cache (only 1: intros a b c d ? ?; only 1: transitivity (a ^ d); only 1: apply Private_NZPow.pow_le_mono_r; only 1: intuition order; only 1: intuition order; only 1: apply Private_NZPow.pow_le_mono_l; only 1: intuition order).	0.308590888977	135
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_inj_l	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_inj_r	40	0.0.0.0.2.0.1	synth with cache (only 1: intros; only 1: destruct (lt_trichotomy b c) as [LT| [EQ'| GT]]; only 1: assert (a ^ b < a ^ c) by (apply Private_NZPow.pow_lt_mono_r; try split; trivial); only 1: order; only 1: trivial; only 1: assert (a ^ c < a ^ b) by (apply Private_NZPow.pow_lt_mono_r; try split; trivial); only 1: order).	0.0346508026123	10
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_l_iff	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_l_iff	40	0.4.0.3.0.0.9.0.0.5	synth with cache (only 1: intros; only 1: split; only 1: intro LE; only 1: apply Private_NZPow.pow_le_mono_l; only 1: auto'; only 1: intro LE; only 1: destruct (le_gt_cases a b) as [LE'| GT]; only 1: auto'; only 1: assert (b ^ c < a ^ c) by (apply Private_NZPow.pow_lt_mono_l; try split; trivial); only 1: order).	32.9581120014	22556
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_r_iff	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_r_iff	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_gt_lin_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_lower	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_upper	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.even_pow	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.odd_pow	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.max_0_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.max_0_r	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.min_0_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.min_0_r	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.succ_max_distr	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.succ_min_distr	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_max_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_max_distr_r	40	1.0.0.1.1.0.0.0.1	synth with cache (only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: now rewrite <- ?add_le_mono_l; only 1: assumption; only 1: now apply add_le_mono_r; only 1: rewrite 2!max_l; only 1: now rewrite <- ?add_le_mono_l; only 1: assumption; only 1: now apply add_le_mono_r).	1.74492788315	725
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_min_distr_l	40	1.0.0.4.1.0.0.3.1	synth with cache (only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?add_le_mono_r; only 1: now rewrite <- ?add_le_mono_r; only 1: now rewrite <- ?add_le_mono_l; only 1: rewrite 2!min_r; only 1: now rewrite <- ?add_le_mono_r; only 1: now rewrite <- ?add_le_mono_r; only 1: now rewrite <- ?add_le_mono_l).	5.7471549511	2532
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_min_distr_r	40	0.0.0.1.0.0.0.0.1	synth with cache (only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?add_le_mono_r; only 1: now rewrite <- ?add_le_mono_r; only 1: now rewrite <- ?add_le_mono_r; only 1: rewrite 2!min_r; only 1: now rewrite <- ?add_le_mono_r; only 1: now rewrite <- ?add_le_mono_r; only 1: now rewrite <- ?add_le_mono_r).	0.855902194977	283
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_max_distr_l	40	0.0.0.0.4.1.0.0.0.0.2.0.1	synth with cache (only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: now f_equiv; only 1: now rewrite <- ?add_le_mono_r; only 1: apply mul_le_mono_nonneg_l; only 1: apply le_0_l; only 1: now rewrite <- ?add_le_mono_r; only 1: rewrite 2!max_l; only 1: now f_equiv; only 1: now rewrite <- ?add_le_mono_r; only 1: apply mul_le_mono_nonneg_l; only 1: apply le_0_l; only 1: now rewrite <- ?add_le_mono_r).	29.4485430717	11821
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_max_distr_r	40	0.0.2.0.0.1.0.0.2.0.0.0.1	synth with cache (only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: order; only 1: now rewrite <- ?add_le_mono_r; only 1: apply mul_le_mono_nonneg_r; only 1: apply le_0_l; only 1: now rewrite <- ?add_le_mono_r; only 1: rewrite 2!max_l; only 1: order; only 1: now rewrite <- ?add_le_mono_r; only 1: apply mul_le_mono_nonneg_r; only 1: apply le_0_l; only 1: now rewrite <- ?add_le_mono_r).	14.9027841091	7350
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_min_distr_l	40	0.0.0.1.0.0.0.0.1	synth with cache (only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: now rewrite <- ?add_le_mono_r; only 1: now apply mul_le_mono_l; only 1: rewrite 2!min_r; only 1: order; only 1: now rewrite <- ?add_le_mono_r; only 1: now apply mul_le_mono_l).	0.677075147629	215
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_min_distr_r	40	2.0.0.1.2.0.0.0.1	synth with cache (only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: now rewrite <- ?add_le_mono_r; only 1: now apply mul_le_mono_r; only 1: rewrite 2!min_r; only 1: order; only 1: now rewrite <- ?add_le_mono_r; only 1: now apply mul_le_mono_r).	3.86412096024	1705
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_max_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_max_distr_r	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_min_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_min_distr_r	40	1.0.0.8.1.0.0.7.0	synth with cache (only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: now rewrite <- ?add_le_mono_r; only 1: now apply sub_le_mono_r; only 1: rewrite 2!min_r; only 1: order; only 1: now rewrite <- ?add_le_mono_r; only 1: now apply sub_le_mono_r).	24.0612368584	9777
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.strong_rec_alt	40	7.0	synth with cache (only 1: symmetry; only 1: split).	1.07787418365	14
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.strong_rec0_wd	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.strong_rec_wd	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec0_0	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec0_succ	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec_0	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec0_more_steps	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec0_fixpoint	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec_fixpoint	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec_0_any	40	0.0.1.3.0.0	synth with cache (only 1: intros; only 1: rewrite strong_rec_alt; only 1: rewrite strong_rec0_succ; only 1: apply step_good; only 1: intros m Hm; only 1: destruct (nlt_0_r _ Hm)).	0.0988411903381	15
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec_any_fst_arg	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.mod_divide	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_div_mul_exact	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_div_factor	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_div_gcd	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_mod	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_wd	40	1.3.0.1.22.0	synth with cache (only 1: intros x x' Hx y y' Hy; only 1: generalize (partial_order_equivalence y y'); only 1: compute; only 1: setoid_rewrite Hx; only 1: setoid_rewrite Hy; only 1: easy).	23.3410918713	4939
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_equiv1	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_equiv2	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_div_swap	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_l	40	1.1	synth with cache (only 1: intros n m; only 1: apply divide_mul_l, divide_refl).	0.0164601802826	13
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_r	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_div	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_least	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_comm	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_divide_iff	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_unique	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_unique_alt	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_assoc	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_0_l	40	0.0.0.15.0.3.1.0	synth with cache (only 1: intro n; only 1: nzinduct n; only 1: unfold lcm; only 1: now nzsimpl; only 1: unfold lcm; only 1: intros; only 1: nzsimpl; only 1: now nzsimpl).	21.7384879589	19414
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_0_r	40	0.1.0.1.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: order; only 1: apply divide_0_r; only 1: apply divide_refl; only 1: trivial).	0.0217528343201	8
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_1_l	40	0.0.0.0.0.9.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: apply le_0_l; only 1: exists n; only 1: now nzsimpl; only 1: exists 1; only 1: now nzsimpl; only 1: trivial).	1.98889613152	1035
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_1_r	40	0.0.0.0.0.8.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: trivial using divide_1_l, le_0_l, divide_refl; only 1: exists 1; only 1: now nzsimpl; only 1: exists n; only 1: now nzsimpl; only 1: trivial using divide_1_l, le_0_l, divide_refl).	1.26476383209	663
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_diag	40	0.0.0.0.0.8.1.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: trivial using divide_1_l, le_0_l, divide_refl; only 1: exists 1; only 1: now nzsimpl; only 1: exists 1; only 1: now nzsimpl; only 1: trivial using divide_refl).	1.96901988983	1206
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_eq_0	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_eq_r	40	0.3.4.0	synth with cache (only 1: intros; only 1: apply divide_antisym; only 1: now apply lcm_least; only 1: trivial using divide_lcm_r).	0.310478925705	146
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_iff	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_mul_mono_l	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_mul_mono_r	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_1_lcm_mul	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_0_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_succ	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_diag	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_gt	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_assoc	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_succ_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_add	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_eq_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_eq_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_eq_nz	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_add_distr	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_swap	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_sub_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_0_le	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_add_le	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_sub_le_add_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_sub_le_add_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_sub_lt_add_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_sub_lt_add_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_add_le_sub_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_add_le_sub_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_add_lt_sub_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_add_lt_sub_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_lt	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_le_mono_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_le_mono_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.mul_pred_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.mul_sub_distr_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.mul_sub_distr_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_equiv	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_equiv	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_alt_wd	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_alt_wd	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_alt_dichotomy	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_dichotomy	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_spec_nonneg	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_nonneg	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_unique	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_wd	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_spec_alt	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_unique'	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_pred_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_le_mono	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_lt_cancel	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_le_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_lt_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_0	40	0.3.7	synth with cache (only 1: apply sqrt_unique' with 0; only 1: now nzsimpl'; only 1: now nzsimpl).	0.430257081985	106
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_1	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_2	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_pos	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_lt_lin	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_le_lin	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_mul_below	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_mul_above	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_succ_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_succ_or	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_eq_succ_iff_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_add_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.add_sqrt_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_eqn0	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_eqn	40	0.0.0.0.0.0.5	synth with cache (only 1: unfold sqrt_up; only 1: intros a Ha; only 1: case compare_spec; only 1: order; only 1: rewrite <- le_succ_l; only 1: order; only 1: order).	0.409414052963	179
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_spec	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_nonneg	40	0.3.1.0.0.0.0	synth with cache (only 1: intros a; only 1: unfold sqrt_up; only 1: case compare_spec; only 1: order; only 1: intros Ha; only 1: apply le_le_succ_r, sqrt_nonneg; only 1: order).	0.561141014099	174
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_wd	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_unique	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_succ_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_0	40	0.0.0.0.0	synth with cache (only 1: unfold sqrt_up; only 1: case compare_spec; only 1: order; only 1: order; only 1: order).	0.0374929904938	5
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_1	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_2	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.le_sqrt_sqrt_up	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.le_sqrt_up_succ_sqrt	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_sqrt_up_spec	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_sqrt_up_exact	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_mono	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_lt_cancel	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_lt_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_pos	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_lt_lin	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_lin	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_mul_above	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_mul_below	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_succ_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_succ_or	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_eq_succ_iff_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_add_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.add_sqrt_up_le	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mod_unique	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_unique	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_unique	40	0.0.0.0.0.0.0.0.2.0	synth with cache (only 1: intros a b q r Ha (Hb, Hr) EQ; only 1: destruct (div_mod_unique b q (a / b) r (a mod b)); only 1: auto; only 1: apply mod_bound_pos; only 1: order; only 1: order; only 1: rewrite <- div_mod; only 1: order; only 1: order; only 1: auto).	0.550261974335	241
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_unique_exact	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_same	40	0.1.0.3.2.18.0.16.8	synth with cache (only 1: intro n; only 1: rewrite one_succ; only 1: intro H; only 1: rewrite <- (mul_0_r n)  at 1; only 1: symmetry; only 1: apply div_unique with 0; only 1: order; only 1: intuition; only 1: now nzsimpl).	16.5115389824	17654
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_same	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_small	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_small	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_0_l	40	0.0.1.0.1.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique_exact; only 1: intuition; only 1: order; only 1: nzsimpl; only 1: order).	0.0750851631165	38
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_0_l	40	1.1.0.3.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply mod_unique with 0; only 1: order; only 1: intuition; only 1: now nzsimpl).	0.609929084778	310
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_1_r	40	0.0.0.5.1.0.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique_exact; only 1: order; only 1: rewrite one_succ; only 1: apply lt_succ_diag_r; only 1: nzsimpl; only 1: order).	0.79522895813	558
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_1_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_1_l	40	5.1.1.0	synth with cache (only 1: intros; only 1: apply div_small; only 1: intuition; only 1: order').	0.346047878265	242
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_1_l	40	0.1.0.2.0	synth with cache (only 1: intros a ?; only 1: apply mod_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.0521659851074	30
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_mul	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_le	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_pos	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_str_pos	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_small_iff	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_small_iff	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_str_pos_iff	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_lt	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_mono	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_div_le	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_succ_div_gt	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_exact	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_lt_upper_bound	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_upper_bound	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_lower_bound	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_compat_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_add	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_add	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_add_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul_cancel_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul_cancel_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_mod	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_idemp_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_idemp_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.add_mod_idemp_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.add_mod_idemp_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.add_mod	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_div	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_mul_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.add_mul_mod_distr_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.add_mul_mod_distr_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_distr_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_distr_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul_le	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_divides	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_0_r	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_succ_r	40	0.0.0.0.1.2.3	synth with cache (only 1: intros n m; only 1: nzinduct n; only 1: nzsimpl; only 1: now f_equiv; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.639526128769	143
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_succ_comm	40	0.1.0.0.0.0	synth with cache (only 1: intros; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.164258003235	7
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_comm	40	1.1.0.0.1.0	synth with cache (only 1: intros n m; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.167183160782	9
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_1_l	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_1_r	40	0.0	synth with cache (only 1: intro n; only 1: now nzsimpl').	0.0417628288269	2
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_assoc	40	0.0.0.0.1.0.1	synth with cache (only 1: intros n m; only 1: intro; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.122354030609	9
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_cancel_l	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_cancel_r	40	0.0.0.0.0.0	synth with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.116101026535	6
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle0	40	0.0.0.0.4.0	synth with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.236348152161	22
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle1	40	0.0.0.0.0.0.0.5.0.4.0	synth with cache (only 1: intros n m p; only 1: intro; only 1: nzinduct n; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	25.2201850414	5192
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle2	40	0.0.0.0.0.4.7.0	synth with cache (only 1: intros n m p q; only 1: nzinduct p; only 1: nzsimpl; only 1: rewrite <- 2!add_assoc, add_cancel_l; only 1: apply add_comm; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	5.71824216843	1738
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle3	40	0.0.0.0.1.0	synth with cache (only 1: intros n m p; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.134433031082	7
Coq.Numbers.NatInt.NZAdd.NZAddProp.sub_1_r	40	0.1	synth with cache (only 1: intro A; only 1: now nzsimpl').	0.0535759925842	12
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_wd	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_le_incl	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_refl	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_succ_diag_r	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_diag_r	40	0.0.9.2.0	synth with cache (only 1: intro n; only 1: apply lt_eq_cases; only 1: constructor; only 1: rewrite lt_succ_r; only 1: apply le_refl).	0.783895969391	488
Coq.Numbers.NatInt.NZOrder.NZOrderProp.neq_succ_diag_l	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.neq_succ_diag_r	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nlt_succ_diag_l	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nle_succ_diag_l	40	10.0.1.0	synth with cache (only 1: intros n H; only 1: apply (lt_irrefl (S n)); only 1: rewrite lt_succ_r; only 1: auto).	1.89190292358	423
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_l	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_gt_cases	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_trichotomy	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_asymm	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_trans	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_trans	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_strorder	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_preorder	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_partialorder	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_neq	40	0.0.0.0	synth with cache (only 1: intros n m; only 1: intros LT EQ; only 1: rewrite EQ in LT; only 1: false_hyp LT lt_irrefl).	0.0335731506348	4
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_neq	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.eq_le_incl	40	4.0.0	synth with cache (only 1: intros; only 1: apply lt_eq_cases; only 1: intuition).	0.0310578346252	7
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_stepl	40	0.0.3.0	synth with cache (only 1: intros n m p; only 1: generalize (lt_trans n m p); only 1: intros H H1 H2; only 1: now rewrite H2 in H1).	0.117963075638	54
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_stepr	40	0	synth with cache (only 1: order).	0.0165188312531	1
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_stepl	40	3.0.3.0	synth with cache (only 1: intros n m p; only 1: generalize (lt_trans n m p); only 1: intros H H1 H2; only 1: now rewrite H2 in H1).	0.065927028656	13
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_stepr	40	0	synth with cache (only 1: order).	0.0170230865479	1
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_lt_trans	40	0	synth with cache (only 1: order).	0.0152170658112	1
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_le_trans	40	0	synth with cache (only 1: order).	0.0159108638763	1
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_antisymm	40	0.0.0.0.0.2.0	synth with cache (only 1: intros x y; only 1: rewrite 2!lt_eq_cases; only 1: intuition; only 1: elim (lt_irrefl x); only 1: transitivity y; only 1: auto; only 1: auto).	0.157175064087	38
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_r	40	0.0.6.3.2.0	synth with cache (only 1: intros n m; only 1: rewrite lt_eq_cases; only 1: rewrite lt_eq_cases; only 1: rewrite lt_succ_r; only 1: rewrite lt_eq_cases; only 1: intuition).	12.3126950264	3519
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_succ_l	40	0.5.0	synth with cache (only 1: intros x y H; only 1: apply le_succ_l; only 1: now apply lt_le_incl).	0.0283498764038	8
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_le_succ_r	40	2.2.3.1.0	synth with cache (only 1: intros x y; only 1: intro EQ; only 1: apply lt_le_incl; only 1: rewrite lt_succ_r; only 1: auto).	0.630545854568	283
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_lt_succ_r	40	0.0.2.0	synth with cache (only 1: intros n m H; only 1: rewrite lt_succ_r; only 1: apply lt_eq_cases; only 1: now left).	0.0363380908966	6
Coq.Numbers.NatInt.NZOrder.NZOrderProp.succ_lt_mono	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.succ_le_mono	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_0_1	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_0_1	40	0.4.8.0.17	synth with cache (only 1: pose proof (@partial_order_equivalence _ _ _ _ _) as poe; only 1: do 3 red in poe; only 1: rewrite one_succ; only 1: apply lt_le_incl; only 1: apply lt_succ_diag_r).	1.54690217972	797
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_1_2	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_0_2	40	0.2.0.1.0	synth with cache (only 1: rewrite two_succ; only 1: rewrite one_succ; only 1: rewrite lt_succ_r; only 1: apply lt_le_incl; only 1: apply lt_succ_diag_r).	0.0834169387817	8
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_0_2	40	0.2.1.0.1	synth with cache (only 1: transitivity 1; only 1: apply lt_le_incl, lt_0_1; only 1: rewrite two_succ; only 1: apply lt_le_incl; only 1: apply lt_succ_diag_r).	0.0772299766541	9
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_1_l	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_ge_cases	40	0.0.1.0.2.0	synth with cache (only 1: intros n m; only 1: nzinduct m n; only 1: now right; only 1: intro m; only 1: rewrite lt_succ_r, le_succ_l, !lt_eq_cases; only 1: intuition).	0.148679018021	37
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_ge_cases	40	0.0.5.3.0	synth with cache (only 1: intros n m; only 1: destruct (le_gt_cases m n); only 1: rewrite lt_eq_cases; only 1: intuition order; only 1: intuition order).	1.08989882469	613
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_gt_cases	40	8.0.0	synth with cache (only 1: intros n m; only 1: generalize (le_gt_cases n m); only 1: intuition order).	1.04785203934	144
Coq.Numbers.NatInt.NZOrder.NZOrderProp.eq_decidable	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.eq_dne	40	0.0.5.1	synth with cache (only 1: intros; only 1: destruct (lt_trichotomy n m); only 1: intuition order; only 1: intuition order).	0.101417064667	19
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_ngt	40	0	synth with cache (only 1: intuition order).	0.0221199989319	1
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nlt_ge	40	0	synth with cache (only 1: intuition order).	0.0220880508423	1
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_decidable	40	0.0.0.1.0	synth with cache (only 1: intros n m; only 1: destruct (lt_trichotomy n m) as [| [| ]]; only 1: (right; order) || (left; order); only 1: (right; order) || (left; order); only 1: (right; order) || (left; order)).	0.0436708927155	6
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_dne	40	0.1.4.0	synth with cache (only 1: intros n m; only 1: destruct (lt_trichotomy n m); only 1: intuition order; only 1: intuition order).	0.309283971786	76
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nle_gt	40	0	synth with cache (only 1: intuition order).	0.0216629505157	1
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_nge	40	0	synth with cache (only 1: intuition order).	0.0209419727325	1
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_decidable	40	0.0.0.2.0	synth with cache (only 1: intros n m; only 1: destruct (lt_trichotomy n m) as [| [| ]]; only 1: (right; order) || (left; order); only 1: (right; order) || (left; order); only 1: (right; order) || (left; order)).	0.0839130878448	24
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_dne	40	1.2.0.0.1.0	synth with cache (only 1: intros n m; only 1: rewrite lt_eq_cases; only 1: generalize (le_gt_cases n m); only 1: rewrite lt_eq_cases; only 1: intro H; only 1: intuition order).	0.42728304863	52
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nlt_succ_r	40	0.1.1.0.0.0.0.0	synth with cache (only 1: intros n m; only 1: split; only 1: intro H; only 1: apply le_succ_l; only 1: order; only 1: intro H; only 1: rewrite lt_succ_r; only 1: order).	0.124340057373	25
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_exists_pred_strong	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_exists_pred	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_succ_pred	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.rs_rs'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.rs'_rs''	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.rbase	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.A'A_right	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.strong_right_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.right_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.right_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.strong_right_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.ls_ls'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.ls'_ls''	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.lbase	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.A'A_left	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.strong_left_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.left_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.left_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.strong_left_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.order_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.order_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.lt_ind	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.le_ind	40	1.1.18.1	synth with cache (only 1: intros Az AS AP n; only 1: apply right_induction; only 1: assumption; only 1: assumption).	8.6302189827	8149
Coq.Numbers.NatInt.NZOrder.NZOrderProp.WF.Rlt_wd	40	0.2.0.20	synth with cache (only 1: compute; only 1: intros IH m H1 H2; only 1: intro n; only 1: intuition order).	8.69174098969	7372
Coq.Numbers.NatInt.NZOrder.NZOrderProp.WF.Rgt_wd	40	3.3.1.23	synth with cache (only 1: compute; only 1: intros IH m H1 H2; only 1: intro n; only 1: intuition order).	12.713739872	8768
Coq.Numbers.NatInt.NZOrder.NZOrderProp.WF.lt_wf	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.WF.gt_wf	40
Coq.Numbers.NatInt.NZDomain.nat_rect_wd	40	3.0.0.12.13	synth with cache (only 1: compute; only 1: Nat.induct n; only 1: firstorder; only 1: intros x y z H0 H1; only 1: auto).	17.0074188709	15888
Coq.Numbers.NatInt.NZDomain.NZDomainProp.itersucc_or_itersucc	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.succ_swap_pred	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.itersucc_or_iterpred	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.itersucc0_or_iterpred0	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.initial_alt	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.initial_alt2	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.InitialExists.initial_unique	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.InitialExists.initial_ancestor	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.InitialExists.SuccPred.succ_pred_approx	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.InitialDontExists.succ_onto_gives_succ_pred	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.InitialDontExists.succ_onto_pred_injective	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.bi_induction_pred	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.central_induction_pred	40
Coq.Numbers.NatInt.NZDomain.NZOfNat.ofnat_zero	40	13.4	synth with cache (only 1: simpl; only 1: intuition).	0.165693044662	289
Coq.Numbers.NatInt.NZDomain.NZOfNat.ofnat_succ	40	0.1.0.0.0.0.0.0	synth with cache (only 1: intro n; only 1: revert n; only 1: intro n; only 1: revert n; only 1: intro n; only 1: revert n; only 1: fix le_div2 1; only 1: solve_proper).	0.0365560054779	15
Coq.Numbers.NatInt.NZDomain.NZOfNat.ofnat_pred	40	0.0.10.1.0.0.0.0.0	synth with cache (only 1: intro n; only 1: Nat.cases ltac:(n); only 1: intros H; only 1: exfalso; only 1: now apply H; only 1: intro n; only 1: simpl; only 1: intro H; only 1: now rewrite Nat.pred_succ).	3.10311198235	3830
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_S_gt_0	40	0.0.7.4.2	synth with cache (only 1: intro n; only 1: induction n; only 1: simpl; only 1: apply lt_succ_diag_r; only 1: now apply Nat.lt_lt_succ_r).	0.959444046021	858
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_S_neq_0	40	10.19	synth with cache (only 1: fix odd_spec 1; only 1: trivial).	13.7568089962	10478
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_injective	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_eq	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_lt	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_le	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_add_l	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_add	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_mul	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_sub_r	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_sub	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_0_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_0_l'	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_1_r	40	5.0	synth with cache (only 1: intro n; only 1: now nzsimpl').	0.112766981125	12
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_1_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_2_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_eq_0	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_nonzero	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_eq_0_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_add_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_mul_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_mul_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_nonneg	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_pos_nonneg	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_gt_1	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_inj_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_inj_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_l_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_l_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_r_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_r_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_gt_lin_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_add_lower	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_add_upper	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_wd	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_1_l	40	0.5.25	synth with cache (only 1: reduce; only 1: exists n; only 1: now nzsimpl').	3.48541402817	5089
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_0_r	40	1.4.8	synth with cache (only 1: unfold divide; only 1: exists 0; only 1: now nzsimpl).	3.9763469696	1460
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_0_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.eq_mul_1_nonneg	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.eq_mul_1_nonneg'	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_1_r_nonneg	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_refl	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_trans	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_antisym_nonneg	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_mono_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_mono_r	40	0.0.10.0	synth with cache (only 1: intros n m p (q, Hq); only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: exists q; only 1: now rewrite mul_shuffle3, Hq).	0.878393888474	533
Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_cancel_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_cancel_r	40	0.0.0.0.8.0.1	synth with cache (only 1: intros n m p; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: split; only 1: intros (q, Hq); only 1: exists q; only 1: now rewrite mul_shuffle3, mul_cancel_l in Hq; only 1: apply mul_divide_mono_l).	4.76029396057	3130
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_add_r	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_mul_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_mul_r	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_factor_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_factor_r	40	0.8.0	synth with cache (only 1: intros; only 1: rewrite mul_comm; only 1: apply divide_mul_l, divide_refl).	0.07923412323	41
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_pos_le	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_unique	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_wd	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_divide_iff	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_unique_alt	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_comm	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_assoc	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_0_l_nonneg	40	1.0.0.0.0.1.0.2	synth with cache (only 1: intros; only 1: apply gcd_unique; only 1: order; only 1: exists 0; only 1: now nzsimpl; only 1: exists 1; only 1: now nzsimpl; only 1: trivial).	0.247057914734	112
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_0_r_nonneg	40	0.1.0.0.0.0	synth with cache (only 1: intros; only 1: apply gcd_unique; only 1: trivial; only 1: apply divide_refl; only 1: apply divide_0_r; only 1: trivial).	0.0230860710144	7
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_1_l	40	0.0.0.0.0.0.0.0	synth with cache (only 1: intro n; only 1: apply gcd_unique; only 1: apply lt_le_incl, lt_0_1; only 1: exists 1; only 1: now nzsimpl; only 1: exists n; only 1: now nzsimpl; only 1: trivial).	0.0328440666199	8
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_1_r	40	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply gcd_unique; only 1: trivial using divide_1_l, le_0_1; only 1: exists n; only 1: now nzsimpl; only 1: trivial using divide_1_l, le_0_1; only 1: trivial using divide_1_l, le_0_1).	0.0273950099945	7
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_diag_nonneg	40	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply gcd_unique; only 1: trivial; only 1: apply divide_refl; only 1: apply divide_refl; only 1: trivial).	0.0229032039642	6
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_eq_0_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_eq_0_r	40	1.6.0.5.2.0	synth with cache (only 1: intros n m H; only 1: apply divide_0_l; only 1: transitivity (gcd n m); only 1: rewrite H; only 1: now nzsimpl; only 1: trivial using gcd_divide_r).	19.1605470181	10229
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_eq_0	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_mul_diag_l	40	0.0.0.0.0.2	synth with cache (only 1: intros n m Hn; only 1: apply gcd_unique; only 1: trivial; only 1: apply divide_refl; only 1: apply divide_mul_l, divide_refl; only 1: trivial using divide_refl).	0.025768995285	8
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_gcd_iff	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_wd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Odd_wd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_wd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_wd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_or_Odd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.double_below	40
Coq.Numbers.NatInt.NZParity.NZParityProp.double_above	40	0.0.0.0.0.0	synth with cache (only 1: intros n m; only 1: rewrite <- le_succ_l, (mul_le_mono_pos_l (S n) m 2); only 1: rewrite two_succ; only 1: nzsimpl; only 1: now rewrite le_succ_l; only 1: order').	0.121972084045	6
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_Odd_False	40
Coq.Numbers.NatInt.NZParity.NZParityProp.orb_even_odd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.negb_odd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.negb_even	40	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros n; only 1: generalize (Even_or_Odd n), (Even_Odd_False n); only 1: rewrite <- even_spec, <- odd_spec; only 1: destruct (odd n), (even n); only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).	2.10366106033	653
Coq.Numbers.NatInt.NZParity.NZParityProp.even_0	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_0	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_1	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_1	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_2	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_2	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Odd_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_succ_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Odd_succ_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_succ_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_succ_succ	40	0.6.0	synth with cache (only 1: intros; only 1: rewrite eq_iff_eq_true, 2!odd_spec; only 1: now rewrite Odd_succ, Even_succ).	0.0236990451813	13
Coq.Numbers.NatInt.NZParity.NZParityProp.even_add	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_mul	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_mul	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_even	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add_even	40	0.0.5.0.0	synth with cache (only 1: intros n m Hm; only 1: apply even_spec in Hm; only 1: rewrite <- !negb_even; only 1: rewrite even_add, Hm; only 1: now destruct (even n)).	0.0466029644012	17
Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_mul_even	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add_mul_even	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_mul_2	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add_mul_2	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_mono_l	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_mono_r	40	0.0.0.0.0.0	synth with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite <- succ_lt_mono).	0.0712089538574	6
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_mono	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_mono_l	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_mono_r	40	0.0.0.0.0.0	synth with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite <- succ_le_mono).	0.0722351074219	6
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_mono	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_le_mono	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_lt_mono	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_pos_pos	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_pos_nonneg	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonneg_pos	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonneg_nonneg	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_add_pos_l	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_add_pos_r	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_lt_add_lt	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_le_add_lt	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_le_add_le	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_cases	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_cases	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_neg_cases	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_pos_cases	40	0.0.0	synth with cache (only 1: intros n m H; only 1: apply add_lt_cases; only 1: now nzsimpl).	0.0246419906616	3
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonpos_cases	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonneg_cases	40	0.0.0	synth with cache (only 1: intros n m H; only 1: apply add_le_cases; only 1: now nzsimpl).	0.0246109962463	3
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_exists_sub	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_0_r	40	1.0.0.0.0.0	synth with cache (only 1: intro n; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now nzsimpl).	0.0520930290222	7
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_succ_r	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_comm	40	2.0.0.0.4.0.0.0.0	synth with cache (only 1: intros n m; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: split; only 1: nzsimpl; only 1: now rewrite add_cancel_r; only 1: nzsimpl; only 1: now rewrite add_cancel_r).	4.28564500809	1188
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_add_distr_r	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_add_distr_l	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_assoc	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_1_l	40	0.0.0.3.0.0	synth with cache (only 1: intro n; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.0469989776611	9
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_1_r	40	0.0	synth with cache (only 1: intro n; only 1: now nzsimpl').	0.0220668315887	2
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle0	40	0.0.0.1.0.9.0	synth with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: rewrite mul_add_distr_r; only 1: now rewrite add_cancel_r).	9.38720393181	3014
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle1	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle2	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle3	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_nonneg	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_unique	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_wd	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_spec_alt	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_unique'	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pred_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_1	40	0.0.0.2.7.2.0.1	synth with cache (only 1: apply log2_unique; only 1: now nzsimpl; only 1: split; only 1: now nzsimpl; only 1: nzsimpl; only 1: rewrite two_succ; only 1: apply lt_succ_diag_r; only 1: now nzsimpl).	8.68691897392	2579
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_2	40	2.0.3.0.0.0.0.2.0	synth with cache (only 1: rewrite <- (pow_0_r 2); only 1: apply log2_unique' with 0; only 1: nzsimpl; only 1: apply lt_le_incl, lt_0_1; only 1: split; only 1: now nzsimpl; only 1: nzsimpl; only 1: order'; only 1: now nzsimpl).	1.34091305733	793
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pos	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_null	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_le_mono	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_lt_cancel	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_le_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_lt_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_lt_lin	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_le_lin	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_mul_below	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_mul_above	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_mul_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_double	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_same	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_succ_le	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_succ_or	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_eq_succ_is_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_eq_succ_iff_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_succ_double	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_add_le	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.add_log2_lt	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eqn0	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eqn	40	0.0.0.0.2.5.7	synth with cache (only 1: intro n; only 1: intros H; only 1: unfold log2_up; only 1: case compare_spec; only 1: order; only 1: order; only 1: order).	7.61863398552	1306
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_spec	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_nonpos	40	0.7.0.0.0.0	synth with cache (only 1: intros a Ha; only 1: unfold log2_up; only 1: case compare_spec; only 1: order; only 1: order'; only 1: order).	0.556692123413	241
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_wd	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_nonneg	40	0.2.5.0.0.1.0	synth with cache (only 1: intros a; only 1: unfold log2_up; only 1: case compare_spec; only 1: order; only 1: intros H; only 1: order_pos; only 1: order).	2.67160010338	1567
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_unique	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_pow2	40	1.2.0.0.0.0.2.3.0.0.2.0	synth with cache (only 1: intros a Ha; only 1: apply log2_up_unique; only 1: apply lt_succ_r; only 1: trivial; only 1: rewrite pred_succ; only 1: rewrite lt_succ_r, le_succ_l; only 1: split; only 1: order; only 1: apply pow_lt_mono_r; only 1: order'; only 1: order_pos; only 1: now apply lt_succ_r).	35.379668951	14310
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_1	40	0.0	synth with cache (only 1: apply log2_up_eqn0; only 1: order).	0.00975394248962	2
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_2	40	1.0.0.3.0.1.22.0.0.4	synth with cache (only 1: unfold log2_up; only 1: case compare_spec; only 1: order'; only 1: rewrite <- (pow_1_r 2); only 1: intros; only 1: rewrite log2_pred_pow2; only 1: apply lt_succ_pred with 0; only 1: order_pos; only 1: order_pos; only 1: order').	31.3791110516	21160
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.le_log2_log2_up	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.le_log2_up_succ_log2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_log2_up_spec	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_log2_up_exact	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_pos	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_null	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_le_mono	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_lt_cancel	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_lt_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_le_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_lt_lin	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_le_lin	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_mul_above	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_mul_below	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_mul_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_double	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_same	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_le	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_or	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eq_succ_is_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eq_succ_iff_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_double	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_add_le	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.add_log2_up_lt	40
Coq.Numbers.NatInt.NZBase.NZBaseProp.eq_sym_iff	40	14	synth with cache (only 1: now symmetry).	1.20295190811	1029
Coq.Numbers.NatInt.NZBase.NZBaseProp.neq_sym	40	6.0	synth with cache (only 1: intros; only 1: simpl_relation).	0.0298449993134	8
Coq.Numbers.NatInt.NZBase.NZBaseProp.eq_stepl	40	0.0.3.13.0.1	synth with cache (only 1: intro y0; only 1: intros; only 1: transitivity y0; only 1: symmetry; only 1: auto; only 1: auto).	2.38658905029	2773
Coq.Numbers.NatInt.NZBase.NZBaseProp.succ_inj	40
Coq.Numbers.NatInt.NZBase.NZBaseProp.succ_inj_wd	40
Coq.Numbers.NatInt.NZBase.NZBaseProp.succ_inj_wd_neg	40	0.1.0.0.1.0	synth with cache (only 1: intros; only 1: apply imp_iff_compat_r; only 1: split; only 1: apply succ_inj; only 1: symmetry; only 1: now f_equiv).	0.0401129722595	8
Coq.Numbers.NatInt.NZBase.NZBaseProp.CentralInduction.central_induction	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_pred	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_pos_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_pos_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_neg_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_neg_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonneg_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonpos_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonneg_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonpos_r	40	0.1.0.0.0.1.0.0.0.1.0	synth with cache (only 1: intros n m p H1 H2; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: le_elim H1; only 1: le_elim H2; only 1: apply lt_le_incl; only 1: now apply mul_lt_mono_neg_l; only 1: apply eq_le_incl; only 1: now rewrite H2; only 1: apply eq_le_incl; only 1: rewrite H1; only 1: now do 2 rewrite mul_0_l).	5.66371798515	1715
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_cancel_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_cancel_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_id_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_id_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_pos_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_pos_r	40	0.0.0.4.0.4	synth with cache (only 1: intros n m p; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: intros H; only 1: do 2 rewrite lt_eq_cases; only 1: rewrite (mul_lt_mono_pos_l p n m) by assumption; only 1: now rewrite (mul_cancel_l n m p) by (intro H1; rewrite H1 in H; false_hyp H lt_irrefl)).	2.50716590881	1228
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_neg_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_neg_r	40	0.0.0.0.0.5.0.0	synth with cache (only 1: intros n m p; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: intros H; only 1: do 2 rewrite lt_eq_cases; only 1: rewrite (mul_lt_mono_neg_l p n m); only 1: rewrite (mul_cancel_l m n p) by (intro H1; rewrite H1 in H; false_hyp H lt_irrefl); only 1: now setoid_replace (n == m) with (m == n) by split; now intro; only 1: assumption).	1.33337497711	529
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_pos	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_neg_neg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_neg	40	1.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (mul_0_l m); only 1: now apply mul_lt_mono_neg_r).	0.0214290618896	4
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_neg_pos	40	0.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (mul_0_l m); only 1: now apply mul_lt_mono_pos_r).	0.0190470218658	3
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_cancel_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_cancel_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_cancel_l	40	3.0.9.0.0.0	synth with cache (only 1: intros n m Hn; only 1: rewrite <- (mul_0_r n)  at 1; only 1: symmetry; only 1: apply mul_le_mono_pos_l; only 1: rewrite <- (add_0_l 0); only 1: now nzsimpl).	9.99506998062	4158
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_cancel_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.lt_1_mul_pos	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_mul_0	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.neq_mul_0	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_square_0	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_mul_0_l	40	3.7.4	synth with cache (only 1: intros n m H1 H2; only 1: apply eq_mul_0 in H1; only 1: intuition order).	5.98056006432	4276
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_mul_0_r	40	0.1.0.0.0	synth with cache (only 1: intros n m H1 H2; only 1: apply eq_mul_0 in H1; only 1: destruct H1 as [H1| H1]; only 1: false_hyp H1 H2; only 1: assumption).	0.020054101944	6
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.lt_0_mul	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_lt_mono_nonneg	40	12.18	synth with cache (only 1: intros Az RS LS n; only 1: now apply mul_lt_mono_nonneg).	6.10295605659	7207
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_le_mono_nonneg	40	1.0.1.0.0.0	synth with cache (only 1: intros n m H1 H2; only 1: apply mul_le_mono_nonneg; only 1: order; only 1: order; only 1: order; only 1: order).	0.0206398963928	8
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_lt_simpl_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_le_simpl_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_2_mono_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.add_le_mul	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.crossmul_le_addsquare	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.add_square_le	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_add_le	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.quadmul_le_squareadd	40
Coq.Structures.OrdersTac.OrderFacts.eq_refl	40	1.0	synth with cache (only 1: intros; only 1: reflexivity).	0.0100679397583	3
Coq.Structures.OrdersTac.OrderFacts.le_refl	40
Coq.Structures.OrdersTac.OrderFacts.lt_irrefl	40
Coq.Structures.OrdersTac.OrderFacts.eq_sym	40	2.1.1.1.0	synth with cache (only 1: intros; only 1: apply (symmetry (x:=_)); only 1: apply (symmetry (x:=_)); only 1: apply (symmetry (x:=_)); only 1: assumption).	0.0261249542236	11
Coq.Structures.OrdersTac.OrderFacts.le_antisym	40
Coq.Structures.OrdersTac.OrderFacts.neq_sym	40	0	synth with cache (only 1: auto with *).	0.0096960067749	1
Coq.Structures.OrdersTac.OrderFacts.trans	40
Coq.Structures.OrdersTac.OrderFacts.eq_neq	40
Coq.Structures.OrdersTac.OrderFacts.neq_eq	40	0	synth with cache (only 1: eauto using eq_trans, eq_sym).	0.00959897041321	1
Coq.Structures.OrdersTac.OrderFacts.not_neq_eq	40
Coq.Structures.OrdersTac.OrderFacts.not_ge_lt	40
Coq.Structures.OrdersTac.OrderFacts.not_gt_le	40	0.0.3.0.0	synth with cache (only 1: intros x y H; only 1: rewrite P.le_lteq; only 1: destruct (P.lt_total x y); only 1: intuition; only 1: intuition).	0.0665030479431	33
Coq.Structures.OrdersTac.OrderFacts.le_neq_lt	40	0.2.2.0	synth with cache (only 1: intros x y; only 1: generalize (P.lt_total x y); only 1: rewrite P.le_lteq; only 1: intuition).	0.074728012085	28
Coq.Structures.Orders.Compare2EqBool.eqb_eq	40
Coq.Structures.Orders.OT_to_Full.le_lteq	40	2.2	synth with cache (only 1: intros A P; only 1: reflexivity).	0.085794210434	43
Coq.Structures.Orders.OTF_LtIsTotal.lt_total	40
Coq.Structures.Orders.OTF_to_TTLB.leb_le	40
Coq.Structures.Orders.OTF_to_TTLB.leb_total	40
Coq.Structures.Orders.OTF_to_TTLB.leb_trans	40
Coq.Structures.Orders.TTLB_to_OTF.compare_spec	40
Coq.Structures.Orders.TTLB_to_OTF.eqb_eq	40
Coq.Structures.Orders.TTLB_to_OTF.eq_equiv	40
Coq.Structures.Orders.TTLB_to_OTF.lt_strorder	40
Coq.Structures.Orders.TTLB_to_OTF.lt_compat	40
Coq.Structures.Orders.TTLB_to_OTF.le_lteq	40
Coq.Structures.Equalities.UpdateEq.eq_equiv	40	3.32.0.1.0	synth with cache (only 1: constructor; only 1: simpl_relation; only 1: auto with relations; only 1: intros x' x'' Hx' Hx''; only 1: eauto).	35.6272060871	60941
Coq.Structures.Equalities.HasEqDec2Bool.eqb_eq	40
Coq.Structures.Equalities.HasEqBool2Dec.eq_dec	40
Coq.Structures.Equalities.BoolEqualityFacts.eqb_compat	40
Coq.Structures.Equalities.BoolEqualityFacts.eqb_spec	40
Coq.Structures.Equalities.BoolEqualityFacts.eqb_neq	40
Coq.Structures.Equalities.BoolEqualityFacts.eqb_refl	40	1.1.0.0.0.0.0.0	synth with cache (only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: apply eqb_eq; only 1: reflexivity).	0.11545920372	17
Coq.Structures.Equalities.BoolEqualityFacts.eqb_sym	40
Coq.Structures.OrderedType.MOT_to_OT.eq_dec	40
Coq.Structures.OrderedType.OrderedTypeFacts.eq_equiv	40
Coq.Structures.OrderedType.OrderedTypeFacts.lt_antirefl	40
Coq.Structures.OrderedType.OrderedTypeFacts.lt_strorder	40
Coq.Structures.OrderedType.OrderedTypeFacts.lt_eq	40
Coq.Structures.OrderedType.OrderedTypeFacts.eq_lt	40
Coq.Structures.OrderedType.OrderedTypeFacts.lt_compat	40
Coq.Structures.OrderedType.OrderedTypeFacts.lt_total	40
Coq.Structures.OrderedType.OrderedTypeFacts.IsTO.le_lteq	40	2.3.3	synth with cache (only 1: split; only 1: auto; only 1: auto).	0.117796897888	53
Coq.Structures.OrderedType.OrderedTypeFacts.le_eq	40
Coq.Structures.OrderedType.OrderedTypeFacts.eq_le	40	0	synth with cache (only 1: order).	0.0239629745483	1
Coq.Structures.OrderedType.OrderedTypeFacts.neq_eq	40	0	synth with cache (only 1: order).	0.0230660438538	1
Coq.Structures.OrderedType.OrderedTypeFacts.eq_neq	40	0	synth with cache (only 1: order).	0.023344039917	1
Coq.Structures.OrderedType.OrderedTypeFacts.le_lt_trans	40	0	synth with cache (only 1: order).	0.0221869945526	1
Coq.Structures.OrderedType.OrderedTypeFacts.lt_le_trans	40	0	synth with cache (only 1: order).	0.0201890468597	1
Coq.Structures.OrderedType.OrderedTypeFacts.le_neq	40
Coq.Structures.OrderedType.OrderedTypeFacts.le_trans	40	0	synth with cache (only 1: order).	0.0243439674377	1
Coq.Structures.OrderedType.OrderedTypeFacts.le_antisym	40	0	synth with cache (only 1: order).	0.0229489803314	1
Coq.Structures.OrderedType.OrderedTypeFacts.neq_sym	40	0	synth with cache (only 1: order).	0.0227391719818	1
Coq.Structures.OrderedType.OrderedTypeFacts.lt_le	40	0	synth with cache (only 1: order).	0.155411958694	1
Coq.Structures.OrderedType.OrderedTypeFacts.gt_not_eq	40	0	synth with cache (only 1: order).	0.151881933212	1
Coq.Structures.OrderedType.OrderedTypeFacts.eq_not_lt	40	0	synth with cache (only 1: order).	0.0213179588318	1
Coq.Structures.OrderedType.OrderedTypeFacts.eq_not_gt	40	0	synth with cache (only 1: order).	0.0222809314728	1
Coq.Structures.OrderedType.OrderedTypeFacts.lt_not_gt	40	0	synth with cache (only 1: order).	0.0230741500854	1
Coq.Structures.OrderedType.OrderedTypeFacts.elim_compare_eq	40
Coq.Structures.OrderedType.OrderedTypeFacts.elim_compare_lt	40	1.0.0.0.0.1.0.0.0	synth with cache (only 1: intros x y H; only 1: case (compare x y); only 1: intros H'; only 1: exists H'; only 1: auto; only 1: intros H'; only 1: exfalso; only 1: order; only 1: order).	0.782788991928	186
Coq.Structures.OrderedType.OrderedTypeFacts.elim_compare_gt	40	0.1.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros x y H; only 1: case (compare x y); only 1: intros H'; only 1: exfalso; only 1: order; only 1: intros H'; only 1: exfalso; only 1: order; only 1: intros H'; only 1: exists H'; only 1: auto).	1.47996497154	419
Coq.Structures.OrderedType.OrderedTypeFacts.lt_dec	40
Coq.Structures.OrderedType.OrderedTypeFacts.eqb_alt	40
Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.In_eq	40	0.0.0	synth with cache (only 1: intros l x y H H'; only 1: rewrite <- H; only 1: auto).	0.0608348846436	3
Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.ListIn_In	40	2.0.0.0.0.0.1	synth with cache (only 1: intro l; only 1: induction l; only 1: firstorder  (subst; auto); only 1: simpl; only 1: intuition; only 1: subst; only 1: intuition).	0.074364900589	10
Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Inf_lt	40	3.5	synth with cache (only 1: fix gcd_greatest 1; only 1: auto).	0.598599910736	37
Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Inf_eq	40	4.0.5.2.0.13	synth with cache (only 1: intros [| a l] H; only 1: intuition; only 1: intros; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: constructor; only 1: order).	36.8515470028	20068
Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Sort_Inf_In	40
Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.ListIn_Inf	40	0.0.0.1.0.1.1.4	synth with cache (only 1: intro l; only 1: induction l as [| a l IH]; only 1: intros x a **; only 1: auto with ordered_type; only 1: simpl; only 1: intros; only 1: constructor; only 1: auto).	1.93410587311	636
Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.In_Inf	40	11.8.3.8	synth with cache (only 1: induction l as [| a l IHl]; only 1: auto; only 1: intros HP HQ; only 1: intuition).	32.3486459255	22698
Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Inf_alt	40
Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Sort_NoDup	40	1.22	synth with cache (only 1: fix odd_specT 1; only 1: firstorder  (subst; auto)).	30.3501179218	16506
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_eqk	40	10.5	synth with cache (only 1: intros x y H; only 1: apply H).	0.705281972885	438
Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_right_r	40	0.2	synth with cache (only 1: intro l'; only 1: auto).	0.0271768569946	4
Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_right_l	40	0	synth with cache (only 1: auto).	0.0207312107086	1
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_refl	40	1.0.5	synth with cache (only 1: intro x; only 1: induction x; only 1: auto with ordered_type).	0.0457279682159	9
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_refl	40	0	synth with cache (only 1: auto with ordered_type).	0.0199580192566	1
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_sym	40	2.2.0	synth with cache (only 1: unfold eqk, eqke; only 1: intros l' x H; only 1: eauto with *).	0.0381817817688	7
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_sym	40	4.0.0	synth with cache (only 1: unfold eqk, eqke; only 1: intros x y H; only 1: intuition).	0.0470299720764	7
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_trans	40	0.8.15.16	synth with cache (only 1: intros x y H; only 1: destruct H; only 1: compute; only 1: order).	24.4679391384	27151
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_trans	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_trans	40	1	synth with cache (only 1: eauto with ordered_type).	0.0330929756165	2
Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_not_eqk	40	1.0	synth with cache (only 1: unfold eqk, eqke; only 1: auto with ordered_type).	0.0314300060272	3
Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_not_eqke	40	1.5.5.2.0.0	synth with cache (only 1: unfold eqk, ltk; only 1: unfold eqk, eqke; only 1: intro l; only 1: intros n IH; only 1: intros (H, _); only 1: order).	6.19303107262	2876
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_equiv	40	0.3.0.25.0.0.6.0.32	synth with cache (only 1: constructor; only 1: auto with ordered_type; only 1: repeat red; only 1: unfold eqk, eqke; only 1: intuition; only 1: intros l l' x y; only 1: intros; only 1: red; only 1: eauto with *).	26.685901165	26225
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_equiv	40	0.0.0.0	synth with cache (only 1: constructor; only 1: eauto with ordered_type; only 1: eauto with ordered_type; only 1: eauto with ordered_type).	0.0601298809052	4
Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_strorder	40	0.2.2.3.0	synth with cache (only 1: split; only 1: compute; only 1: intros a H; only 1: order; only 1: eauto with ordered_type).	0.127535104752	68
Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_compat	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_compat'	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_not_ltk	40	0.0	synth with cache (only 1: unfold eqk, ltk; only 1: auto with ordered_type).	0.0309240818024	2
Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_eqk	40	0	synth with cache (only 1: eauto with ordered_type).	0.0254530906677	1
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_ltk	40	0	synth with cache (only 1: eauto with ordered_type).	0.0254740715027	1
Coq.Structures.OrderedType.KeyOrderedType.Elt.InA_eqke_eqk	40	1.0.0.0.13	synth with cache (only 1: intros x l; only 1: unfold eqk, ltk; only 1: do 2 rewrite InA_alt; only 1: intros (y, H); only 1: firstorder).	2.65782904625	1361
Coq.Structures.OrderedType.KeyOrderedType.Elt.In_alt	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.MapsTo_eq	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.In_eq	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.Inf_eq	40	0.4.3.7.2	synth with cache (only 1: intuition; only 1: induction l; only 1: eauto with *; only 1: rewrite H; only 1: intuition).	2.35736513138	1047
Coq.Structures.OrderedType.KeyOrderedType.Elt.Inf_lt	40	6.15	synth with cache (only 1: fix gcd_greatest 1; only 1: auto with ordered_type).	6.9595489502	2324
Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_Inf_In	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_Inf_NotIn	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_NoDupA	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_In_cons_1	40	0.1.0.0.3.6.11	synth with cache (only 1: intros H0; only 1: intros l x y e **; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: eapply Sort_Inf_In; only 1: eauto with ordered_type; only 1: eauto with ordered_type; only 1: eauto with ordered_type).	13.8708178997	4480
Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_In_cons_2	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_In_cons_3	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.In_inv	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.In_inv_2	40	1.5.0	synth with cache (only 1: inversion_clear 1 as [| ? ? H0 H1]; only 1: intuition; only 1: eauto with *).	0.0529329776764	9
Coq.Structures.OrderedType.KeyOrderedType.Elt.In_inv_3	40	0.4.1	synth with cache (only 1: inversion 1; only 1: firstorder; only 1: eauto).	0.121577978134	24
Coq.Structures.OrdersFacts.CompareFacts.compare_eq_iff	40
Coq.Structures.OrdersFacts.CompareFacts.compare_eq	40	0.0.0.0.0.0.0	synth with cache (only 1: case compare_spec; only 1: intro H; only 1: easy; only 1: intro H; only 1: easy; only 1: intro H; only 1: easy).	0.0421190261841	7
Coq.Structures.OrdersFacts.CompareFacts.compare_lt_iff	40	0.0.0.0.0.0.0.2.0.0.0.0.1.0.0.1.0	synth with cache (only 1: case compare_spec; only 1: intro EQ; only 1: split; only 1: easy; only 1: intro H; only 1: contradict ltac:(H); only 1: rewrite EQ; only 1: apply irreflexivity; only 1: intro H; only 1: easy; only 1: intro H; only 1: split; only 1: easy; only 1: intro EQ; only 1: contradict ltac:(H); only 1: rewrite EQ; only 1: apply irreflexivity).	20.1632611752	10833
Coq.Structures.OrdersFacts.CompareFacts.compare_gt_iff	40	1.1.0.0.0.0.0.0.0.1.1.0.0.0.0.0	synth with cache (only 1: case compare_spec; only 1: intro H; only 1: split; only 1: easy; only 1: intro LT; only 1: contradict ltac:(LT); only 1: rewrite H; only 1: apply irreflexivity; only 1: intro H; only 1: split; only 1: easy; only 1: intro LT; only 1: contradict ltac:(LT); only 1: rewrite H; only 1: apply irreflexivity; only 1: easy).	34.478634119	11520
Coq.Structures.OrdersFacts.CompareFacts.compare_nlt_iff	40	1.0.0.2.0.0.1.1.0.1.2.0.0.0	synth with cache (only 1: case compare_spec; only 1: intro H; only 1: split; only 1: intro LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: easy; only 1: easy; only 1: intro H; only 1: split; only 1: intro LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: easy).	32.2269070148	9792
Coq.Structures.OrdersFacts.CompareFacts.compare_ngt_iff	40
Coq.Structures.OrdersFacts.CompareFacts.compare_compat	40
Coq.Structures.OrdersFacts.CompareFacts.compare_refl	40	0.0.0.0.0.0.0.0	synth with cache (only 1: case compare_spec; only 1: easy; only 1: intro LT; only 1: contradict ltac:(LT); only 1: apply irreflexivity; only 1: intro LT; only 1: contradict ltac:(LT); only 1: apply irreflexivity).	0.0479731559753	8
Coq.Structures.OrdersFacts.CompareFacts.compare_antisym	40
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_compat	40
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_preorder	40
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_order	40	0.0.0.0.4	synth with cache (only 1: red; only 1: unfold relation_equivalence in *; only 1: unfold predicate_equivalence in *; only 1: compute; only 1: iorder).	0.0876770019531	30
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_antisym	40	2.0	synth with cache (only 1: compute; only 1: order).	0.0724050998688	20
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_not_gt_iff	40	14	synth with cache (only 1: iorder).	0.882321119308	412
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.lt_not_ge_iff	40	0	synth with cache (only 1: iorder).	0.0246050357819	1
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_or_gt	40
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.lt_or_ge	40	0.0.3.0.0.0	synth with cache (only 1: intros x y; only 1: rewrite le_lteq; only 1: destruct (OrderTac.TO.compare_spec x y); only 1: intuition; only 1: auto; only 1: auto).	0.435310125351	39
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.eq_is_le_ge	40	0.0	synth with cache (only 1: intros x y; only 1: iorder).	0.0347139835358	2
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.compare_le_iff	40	0.0.0.1.0.0	synth with cache (only 1: rewrite compare_gt_iff; only 1: rewrite le_lteq; only 1: destruct (OrderTac.TO.compare_spec x y); only 1: iorder; only 1: iorder; only 1: iorder).	0.103543043137	7
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.compare_ge_iff	40	0.0.0	synth with cache (only 1: rewrite le_not_gt_iff; only 1: rewrite compare_lt_iff; only 1: intuition).	0.037346124649	3
Coq.Structures.OrdersFacts.OrderedTypeFacts.lt_dec	40
Coq.Structures.OrdersFacts.OrderedTypeFacts.if_eq_dec	40
Coq.Structures.OrdersFacts.OrderedTypeFacts.eqb_alt	40
Coq.Structures.OrdersFacts.OrderedTypeFacts.eqb_compat	40
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_not_eq	40	3.0	synth with cache (only 1: intro H; only 1: order).	0.113574981689	5
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_eq	40	1	synth with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0305061340332	2
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_lt	40	1	synth with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0288829803467	2
Coq.Structures.OrdersFacts.OrderedTypeTest.le_eq	40	2	synth with cache (only 1: order).	1.01926493645	3
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_le	40	0	synth with cache (only 1: order).	0.020131111145	1
Coq.Structures.OrdersFacts.OrderedTypeTest.neq_eq	40	2	synth with cache (only 1: order).	1.01784396172	3
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_neq	40	0	synth with cache (only 1: order).	0.0205948352814	1
Coq.Structures.OrdersFacts.OrderedTypeTest.le_lt_trans	40	2	synth with cache (only 1: order).	0.0806400775909	29
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_le_trans	40	2	synth with cache (only 1: order).	0.169390916824	51
Coq.Structures.OrdersFacts.OrderedTypeTest.le_trans	40	0	synth with cache (only 1: order).	0.0234930515289	1
Coq.Structures.OrdersFacts.OrderedTypeTest.le_antisym	40	1	synth with cache (only 1: order).	0.171329021454	73
Coq.Structures.OrdersFacts.OrderedTypeTest.le_neq	40	0	synth with cache (only 1: order).	0.0224180221558	1
Coq.Structures.OrdersFacts.OrderedTypeTest.neq_sym	40	0	synth with cache (only 1: order).	0.0191960334778	1
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_le	40	0.0.0	synth with cache (only 1: intro H; only 1: rewrite H; only 1: apply irreflexivity).	0.0484509468079	3
Coq.Structures.OrdersFacts.OrderedTypeTest.gt_not_eq	40	0	synth with cache (only 1: order).	0.0194051265717	1
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_not_lt	40	0	synth with cache (only 1: order).	0.0186960697174	1
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_not_gt	40	0	synth with cache (only 1: order).	0.0187361240387	1
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_not_gt	40	0	synth with cache (only 1: order).	0.0201900005341	1
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_is_nlt_ngt	40	1.1.0.0.4.4.1.1	synth with cache (only 1: split; only 1: intuition; only 1: order; only 1: order; only 1: destruct (OrderTac.TO.compare_spec x y); only 1: auto; only 1: easy; only 1: easy).	4.32964396477	2350
Coq.Structures.OrdersFacts.OrderedTypeRev.lt_strorder	40
Coq.Structures.OrdersFacts.OrderedTypeRev.lt_compat	40
Coq.Structures.OrdersFacts.OrderedTypeRev.le_lteq	40
Coq.Structures.OrdersFacts.OrderedTypeRev.compare_spec	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_spec	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_eq	40	0.0	synth with cache (only 1: intros H; only 1: now apply compare_eq_iff).	0.021525144577	2
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_refl	40	2.0.0.0.0.0.0.0	synth with cache (only 1: apply compare_eq_iff; only 1: apply compare_eq_iff; only 1: apply compare_eq_iff; only 1: apply compare_eq_iff; only 1: apply compare_eq_iff; only 1: apply compare_eq_iff; only 1: apply compare_eq_iff; only 1: reflexivity).	0.0686311721802	13
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_gt_iff	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_ge_iff	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_ngt_iff	40	0	synth with cache (only 1: now rewrite <- compare_lt_iff, compare_antisym, CompOpp_iff).	0.0257759094238	1
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_nlt_iff	40	2	synth with cache (only 1: now rewrite <- compare_lt_iff, compare_antisym, CompOpp_iff).	0.0335068702698	3
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_nle_iff	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_nge_iff	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.lt_irrefl	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.lt_eq_cases	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_spec0	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_spec	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_spec0	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_spec	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_nle	40	0.0.0.2.1.4	synth with cache (only 1: case leb_spec0; only 1: rewrite <- compare_le_iff; only 1: easy || now destruct 1; only 1: constructor; only 1: trivial; only 1: trivial).	2.06534481049	446
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_gt	40	0.1.0.1.0.5	synth with cache (only 1: case leb_spec0; only 1: symmetry; only 1: now rewrite <- compare_lt_iff, compare_nge_iff; only 1: constructor; only 1: now rewrite <- compare_lt_iff, compare_nge_iff; only 1: trivial).	1.07767295837	226
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_nlt	40	1.7.0.5.0	synth with cache (only 1: symmetry; only 1: case ltb_spec0; only 1: destr_bool; only 1: intuition; only 1: intuition).	5.55454897881	2637
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_ge	40	0.0.8	synth with cache (only 1: rewrite <- compare_le_iff; only 1: rewrite compare_gt_iff; only 1: now rewrite <- not_true_iff_false, ltb_lt).	0.352931976318	62
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_refl	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_antisym	40	1.0.6.3.0.8	synth with cache (only 1: case ltb_spec0; only 1: now rewrite leb_nle, <- compare_lt_iff, compare_nge_iff; only 1: symmetry; only 1: case leb_spec0; only 1: trivial; only 1: now rewrite <- compare_le_iff, compare_ngt_iff).	4.23015713692	2741
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_irrefl	40	0.2.1.20	synth with cache (only 1: case ltb_spec0; only 1: now rewrite <- compare_lt_iff, compare_refl; only 1: symmetry; only 1: trivial).	1.94283509254	1311
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_antisym	40
Coq.Structures.OrdersFacts.BoolOrderFacts.eqb_compare	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_compare	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_compare	40	0.0.0.1.0.0.0.15.0.3	synth with cache (only 1: symmetry; only 1: apply eq_true_iff_eq; only 1: case leb_spec0; only 1: rewrite <- compare_le_iff; only 1: now destruct compare; only 1: rewrite <- compare_le_iff; only 1: destruct compare; only 1: easy || now destruct 1; only 1: easy || now destruct 1; only 1: easy || now destruct 1).	8.00899291039	4628
Coq.Structures.OrdersLists.OrderedTypeLists.In_eq	40	1.5	synth with cache (only 1: intros l; only 1: congruence).	0.0579149723053	35
Coq.Structures.OrdersLists.OrderedTypeLists.ListIn_In	40	2.0.0.0.0.0.0	synth with cache (only 1: intro l; only 1: induction l; only 1: firstorder  (subst; auto); only 1: simpl; only 1: intuition; only 1: subst; only 1: intuition).	0.0434091091156	9
Coq.Structures.OrdersLists.OrderedTypeLists.Inf_lt	40	2.4	synth with cache (only 1: fix gcd_greatest 1; only 1: auto).	0.256410837173	24
Coq.Structures.OrdersLists.OrderedTypeLists.Inf_eq	40	2.0.2	synth with cache (only 1: intros x y z H; only 1: rewrite <- H; only 1: auto).	0.0338819026947	15
Coq.Structures.OrdersLists.OrderedTypeLists.Sort_Inf_In	40
Coq.Structures.OrdersLists.OrderedTypeLists.ListIn_Inf	40	0.0.0.1.1.1.1.3	synth with cache (only 1: intro l; only 1: induction l as [| a l IH]; only 1: intros x a **; only 1: easy; only 1: simpl; only 1: intros; only 1: constructor; only 1: auto).	1.57769584656	704
Coq.Structures.OrdersLists.OrderedTypeLists.In_Inf	40	5.0.0.0.1.8.9	synth with cache (only 1: intros l; only 1: induction l as [| x xs Hl]; only 1: intros x a0 **; only 1: auto; only 1: intros; only 1: constructor; only 1: intuition).	16.3498420715	14168
Coq.Structures.OrdersLists.OrderedTypeLists.Inf_alt	40
Coq.Structures.OrdersLists.OrderedTypeLists.Sort_NoDup	40	1.22	synth with cache (only 1: fix odd_specT 1; only 1: firstorder  (subst; auto)).	25.0445230007	19243
Coq.Structures.OrdersLists.KeyOrderedType.ltk_compat	40	5	synth with cache (only 1: solve_proper).	0.19971203804	45
Coq.Structures.OrdersLists.KeyOrderedType.ltk_compat'	40	5.0	synth with cache (only 1: unfold eqk, ltk; only 1: solve_proper).	0.79528093338	14
Coq.Structures.OrdersLists.KeyOrderedType.pair_compat	40	0.0	synth with cache (only 1: intros x x' Hx l l' Hl; only 1: now compute).	0.0191910266876	2
Coq.Structures.OrdersLists.KeyOrderedType.Elt.ltk_not_eqk	40
Coq.Structures.OrdersLists.KeyOrderedType.Elt.ltk_not_eqke	40	0.0.0	synth with cache (only 1: intros LT EQ; only 1: rewrite EQ in LT; only 1: elim (StrictOrder_Irreflexive _ LT)).	0.025857925415	3
Coq.Structures.OrdersLists.KeyOrderedType.Elt.Inf_eq	40	0	synth with cache (only 1: now intros <-).	0.0220129489899	1
Coq.Structures.OrdersLists.KeyOrderedType.Elt.Inf_lt	40
Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_Inf_In	40
Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_Inf_NotIn	40
Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_NoDupA	40
Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_In_cons_1	40
Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_In_cons_2	40
Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_In_cons_3	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_eqk	40	0	synth with cache (only 1: firstorder).	0.00975298881531	1
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_def	40	2	synth with cache (only 1: tauto).	0.0110399723053	3
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_def'	40	0	synth with cache (only 1: reflexivity).	0.00847792625427	1
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_1	40	22.3	synth with cache (only 1: intros H; only 1: firstorder).	0.342492818832	775
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_2	40	0	synth with cache (only 1: now destruct 1).	0.00950407981873	1
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqk_def	40	10	synth with cache (only 1: reflexivity).	0.0141401290894	21
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqk_def'	40	1	synth with cache (only 1: reflexivity).	0.00847196578979	2
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqk_1	40	7.6	synth with cache (only 1: intros; only 1: auto).	0.0566511154175	100
Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqke_eqk	40	1.28.4	synth with cache (only 1: rewrite InA_alt; only 1: rewrite InA_alt; only 1: firstorder).	4.58908510208	5530
Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqk_eqke	40	0.1.8.3.7.1.0	synth with cache (only 1: induction 1; only 1: exists y; only 1: split; only 1: auto; only 1: constructor; only 1: intuition; only 1: firstorder).	4.17458295822	3798
Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqk	40	0.1.9.6.0.4	synth with cache (only 1: intros x; only 1: induction 1; only 1: destruct (split (A:=l)); only 1: rewrite <- H; only 1: firstorder  auto with crelations; only 1: firstorder).	1.28257417679	1384
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_alt	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_alt'	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_alt2	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_nil	40	1.3.4.0	synth with cache (only 1: split; only 1: intros HE; only 1: now inversion HE; intuition; only 1: inversion 1).	0.173630952835	105
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_cons	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.MapsTo_compat	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_compat	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.MapsTo_eq	40	1.2.5	synth with cache (only 1: intros ->; only 1: setoid_rewrite InA_alt; only 1: intuition).	0.217242002487	90
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_eq	40	0	synth with cache (only 1: now intros <-).	0.0171041488647	1
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_inv	40	5.5.13.4.1	synth with cache (only 1: unfold In, MapsTo; only 1: firstorder  auto with crelations; only 1: invlist InA; only 1: eauto; only 1: eauto).	31.2367351055	21715
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_inv_2	40	1.7.14.8	synth with cache (only 1: intros H; only 1: invlist InA; only 1: now compute; only 1: auto).	5.52659082413	4111
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_inv_3	40	0.0.11.1	synth with cache (only 1: firstorder; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: firstorder  auto with crelations; only 1: eauto).	0.976218938828	679
Coq.Structures.EqualitiesFacts.PairDecidableType.eq_dec	40
Coq.Structures.EqualitiesFacts.PairUsualDecidableType.eq_dec	40	3.29.3.8	synth with cache (only 1: intros n m; only 1: revert m; only 1: fix le_div2 1; only 1: auto).	38.4388849735	75552
Coq.Structures.DecidableType.KeyDecidableType.Elt.eqke_eqk	40	7	synth with cache (only 1: firstorder).	0.105422019958	38
Coq.Structures.DecidableType.KeyDecidableType.Elt.eqk_refl	40	4.1.0	synth with cache (only 1: unfold eqk, eqke; only 1: intros; only 1: auto).	0.0327599048615	8
Coq.Structures.DecidableType.KeyDecidableType.Elt.eqke_refl	40	0	synth with cache (only 1: auto).	0.0215888023376	1
Coq.Structures.DecidableType.KeyDecidableType.Elt.eqk_sym	40	6.1.0	synth with cache (only 1: unfold eqk, eqke; only 1: intros l' x H; only 1: auto).	0.0334968566895	10
Coq.Structures.DecidableType.KeyDecidableType.Elt.eqke_sym	40	3.0.0	synth with cache (only 1: unfold eqk, eqke; only 1: intros n m H; only 1: intuition).	0.0574550628662	6
Coq.Structures.DecidableType.KeyDecidableType.Elt.eqk_trans	40	9.1.1	synth with cache (only 1: intros l1; only 1: intros n m p H; only 1: eauto).	1.15078806877	499
Coq.Structures.DecidableType.KeyDecidableType.Elt.eqke_trans	40
Coq.Structures.DecidableType.KeyDecidableType.Elt.eqk_equiv	40	0.2.0.5.1	synth with cache (only 1: split; only 1: auto; only 1: auto; only 1: intro l; only 1: eauto).	0.338474035263	93
Coq.Structures.DecidableType.KeyDecidableType.Elt.eqke_equiv	40	0.0.0.0	synth with cache (only 1: split; only 1: eauto; only 1: eauto; only 1: eauto).	0.0587170124054	4
Coq.Structures.DecidableType.KeyDecidableType.Elt.InA_eqke_eqk	40	0.0.3.4.16	synth with cache (only 1: intro n; only 1: intro l; only 1: do 2 rewrite InA_alt; only 1: destruct 1 as (y, (H1, H2)); only 1: firstorder  (subst; auto)).	2.27178120613	1348
Coq.Structures.DecidableType.KeyDecidableType.Elt.InA_eqk	40	0.1.0.2.15	synth with cache (only 1: intros x y; only 1: intro l; only 1: intros; only 1: rewrite <- H; only 1: intuition).	5.67256689072	3516
Coq.Structures.DecidableType.KeyDecidableType.Elt.In_alt	40
Coq.Structures.DecidableType.KeyDecidableType.Elt.MapsTo_eq	40
Coq.Structures.DecidableType.KeyDecidableType.Elt.In_eq	40	4.16	synth with cache (only 1: fix gcd_greatest 1; only 1: auto).	2.46443414688	1717
Coq.Structures.DecidableType.KeyDecidableType.Elt.In_inv	40	1.2.3.1.5.3.1.0	synth with cache (only 1: intros P ? ? l; only 1: intros [y H]; only 1: unfold MapsTo in *; only 1: inversion H; only 1: firstorder; only 1: destruct (split (A:=l)); only 1: destruct (split (A:=l)); only 1: eauto).	11.3699121475	4941
Coq.Structures.DecidableType.KeyDecidableType.Elt.In_inv_2	40	0.5.7.4	synth with cache (only 1: intros; only 1: invlist InA; only 1: intuition; only 1: auto using eqke_equiv).	1.16788387299	495
Coq.Structures.DecidableType.KeyDecidableType.Elt.In_inv_3	40	0.4.0.1.12	synth with cache (only 1: intros x y z H; only 1: invlist InA; only 1: compute in H0; only 1: intuition; only 1: intuition).	16.4550960064	5544
Coq.Structures.OrdersAlt.Update_OT.lt_strorder	40
Coq.Structures.OrdersAlt.Update_OT.lt_compat	40
Coq.Structures.OrdersAlt.Update_OT.compare_spec	40
Coq.Structures.OrdersAlt.Backport_OT.lt_not_eq	40
Coq.Structures.OrdersAlt.Backport_OT.lt_trans	40	0.2.9.0.0	synth with cache (only 1: red; only 1: intros x y z H0 H1; only 1: transitivity y; only 1: assumption; only 1: assumption).	0.63174700737	338
Coq.Structures.OrdersAlt.Backport_OT.compare	40
Coq.Structures.OrdersAlt.OT_from_Alt.eq_equiv	40
Coq.Structures.OrdersAlt.OT_from_Alt.lt_strorder	40
Coq.Structures.OrdersAlt.OT_from_Alt.lt_eq	40
Coq.Structures.OrdersAlt.OT_from_Alt.eq_lt	40
Coq.Structures.OrdersAlt.OT_from_Alt.lt_compat	40	4.0.7.1.1.1	synth with cache (only 1: repeat red; only 1: intro n; only 1: intro y0; only 1: fix gcd_divide 1; only 1: intros y q u H; only 1: PeanoNat.Nat.auto').	23.1980021	8628
Coq.Structures.OrdersAlt.OT_from_Alt.compare_spec	40
Coq.Structures.OrdersAlt.OT_from_Alt.eq_dec	40	1.2	synth with cache (only 1: unfold eq; only 1: decide equality).	0.139750957489	48
Coq.Structures.OrdersAlt.OT_to_Alt.compare_sym	40
Coq.Structures.OrdersAlt.OT_to_Alt.compare_Eq	40
Coq.Structures.OrdersAlt.OT_to_Alt.compare_Lt	40
Coq.Structures.OrdersAlt.OT_to_Alt.compare_Gt	40	0.0.0.0.0.0.0.0.4.0.0.0.0.0	synth with cache (only 1: unfold compare; only 1: intros x y; only 1: destruct (compare_spec x y); only 1: intuition; only 1: discriminate; only 1: rewrite H in H0; only 1: elim (StrictOrder_Irreflexive y); only 1: auto; only 1: intuition; only 1: discriminate; only 1: rewrite H in H0; only 1: elim (StrictOrder_Irreflexive y); only 1: auto; only 1: intuition).	27.178194046	8422
Coq.Structures.OrdersAlt.OT_to_Alt.compare_trans	40
Coq.Structures.GenericMinMax.GenericMinMax.ge_not_lt	40
Coq.Structures.GenericMinMax.GenericMinMax.max_l	40
Coq.Structures.GenericMinMax.GenericMinMax.max_r	40
Coq.Structures.GenericMinMax.GenericMinMax.min_l	40	0.0.1.0.0.0.0.0.11	synth with cache (only 1: compute; only 1: intros; only 1: case compare_spec; only 1: auto with relations; only 1: auto with relations; only 1: intros; only 1: elim (ge_not_lt y x); only 1: auto; only 1: auto).	1.17159986496	1261
Coq.Structures.GenericMinMax.GenericMinMax.min_r	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold min, gmin; only 1: case compare_spec; only 1: auto with relations; only 1: intros; only 1: elim (ge_not_lt x y); only 1: auto; only 1: auto; only 1: auto with relations).	0.0335359573364	9
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_spec	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_spec_le	40	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct (lt_total n m); only 1: left; only 1: split; only 1: rewrite le_lteq; only 1: auto; only 1: apply max_r; only 1: rewrite le_lteq; only 1: auto; only 1: right; only 1: assert (m <= n) by (rewrite le_lteq; intuition); only 1: split; only 1: auto; only 1: now apply max_l).	1.44447398186	766
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.Proper_instance_0	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_compat	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_unicity	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_unicity_ext	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_mono	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_id	40	3.5.7.0.0.0.0.8.99.6	synth with cache (only 1: apply max_r; only 1: apply Build_preorder; only 1: red; only 1: intros; only 1: rewrite le_lteq; only 1: right; only 1: intuition; only 1: red; only 1: intros y0 z D H0 H1; only 1: intuition order).	4.50230693817	26527
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_assoc	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_comm	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_max_l	40	2.2.3.10	synth with cache (only 1: pose proof (max_spec n m) as Hm; only 1: intuition; only 1: order; only 1: order).	0.453229904175	439
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_max_r	40	0	synth with cache (only 1: solve_max).	0.011470079422	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_l_iff	40	3	synth with cache (only 1: solve_max).	0.195502996445	62
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_r_iff	40	0	synth with cache (only 1: solve_max).	0.055408000946	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le	40	0.12.0.7.1.0	synth with cache (only 1: pose proof (max_spec n m) as Hm; only 1: intuition; only 1: right; only 1: order; only 1: left; only 1: order).	31.6812989712	14281
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_iff	40	3.0.0.0.0.0.0.0.6	synth with cache (only 1: split; only 1: destruct (max_spec n m); only 1: right; only 1: intuition; only 1: order; only 1: left; only 1: intuition; only 1: order; only 1: solve_max).	15.6441669464	5558
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lt_iff	40	0.0.0.0.0.0.0.1.0	synth with cache (only 1: split; only 1: destruct (max_spec n m); only 1: right; only 1: intuition; only 1: order; only 1: left; only 1: intuition; only 1: order; only 1: solve_max).	0.0473821163177	10
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_l	40	0.1.0.1.1	synth with cache (only 1: destruct (max_spec n m); only 1: intuition; only 1: order; only 1: intuition; only 1: order).	0.0256760120392	8
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_r	40	0	synth with cache (only 1: solve_max).	0.0127630233765	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub	40	0.1.0.1.1	synth with cache (only 1: destruct (max_spec n m); only 1: intuition; only 1: order || (right; order) || (left; order); only 1: intuition; only 1: order).	0.0270240306854	8
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_iff	40	0.4.0	synth with cache (only 1: split; only 1: solve_max; only 1: solve_max).	0.0936391353607	27
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_lt	40	0	synth with cache (only 1: solve_max).	0.0132029056549	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_lt_iff	40	0.0.0.0.0.0.0.0.1	synth with cache (only 1: destruct (max_spec n m); only 1: intuition; only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order); only 1: intuition; only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order)).	0.0509750843048	19
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_compat_l	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_compat_r	40	0.0.0	synth with cache (only 1: intros; only 1: apply max_lub_iff; only 1: solve_max).	0.0230448246002	3
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_compat	40	0.0.3	synth with cache (only 1: intuition; only 1: apply max_lub_iff; only 1: solve_max).	0.0392589569092	6
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_spec	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_spec_le	40	1.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct (lt_total n m); only 1: left; only 1: split; only 1: rewrite le_lteq; only 1: auto; only 1: apply min_l; only 1: rewrite le_lteq; only 1: auto; only 1: right; only 1: assert (m <= n) by (rewrite le_lteq; intuition); only 1: split; only 1: auto; only 1: now apply min_r).	6.29389595985	2969
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_compat	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_unicity	40	0.0.0.0.0.1.11	synth with cache (only 1: destruct (min_spec n m); only 1: intuition; only 1: order; only 1: order; only 1: intuition; only 1: order; only 1: order).	18.7549171448	8277
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_unicity_ext	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_mono	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_id	40	0.2	synth with cache (only 1: apply min_l; only 1: order).	0.00831699371338	4
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_assoc	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_comm	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_min_r	40	1.2.6.14	synth with cache (only 1: pose proof (min_spec n m) as Hm; only 1: intuition; only 1: order; only 1: order).	0.525750160217	645
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_min_l	40	0	synth with cache (only 1: solve_min).	0.0102469921112	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_l_iff	40	7	synth with cache (only 1: solve_min).	0.0631091594696	35
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_r_iff	40	0	synth with cache (only 1: solve_min).	0.0142738819122	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le	40	0.0.1.5	synth with cache (only 1: pose proof (min_spec n m) as Hm; only 1: intuition; only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order)).	0.192142009735	73
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_iff	40	0.0.2.1.0.0.2.1.2	synth with cache (only 1: destruct (min_spec n m); only 1: intuition; only 1: order || (right; order) || (left; order); only 1: order; only 1: order; only 1: intuition; only 1: order || (right; order) || (left; order); only 1: order; only 1: order).	15.9522330761	7235
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_lt_iff	40	0.0.0.0.0.0.0.1.3	synth with cache (only 1: split; only 1: destruct (min_spec n m); only 1: left; only 1: intuition; only 1: order; only 1: right; only 1: intuition; only 1: order; only 1: solve_min).	2.00301384926	714
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_l	40	0.1.0.1.2	synth with cache (only 1: destruct (min_spec n m); only 1: intuition; only 1: order; only 1: intuition; only 1: order).	0.0279560089111	9
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_r	40	0	synth with cache (only 1: solve_min).	0.0134871006012	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb	40	0.1.0.1.2	synth with cache (only 1: destruct (min_spec n m); only 1: intuition; only 1: order; only 1: intuition; only 1: order).	0.0251932144165	9
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_iff	40	0.6.0	synth with cache (only 1: split; only 1: solve_min; only 1: solve_min).	0.0801599025726	31
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_lt	40	1	synth with cache (only 1: solve_min).	0.0124361515045	2
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_lt_iff	40	0.0.0.0.0.0.0.0.1	synth with cache (only 1: destruct (min_spec n m); only 1: intuition; only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order); only 1: intuition; only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order)).	0.055762052536	19
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_compat_l	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_compat_r	40	0.0.0	synth with cache (only 1: intros; only 1: apply min_glb_iff; only 1: solve_min).	0.046019077301	3
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_compat	40	1.3.0.0.0	synth with cache (only 1: intros Hnm Hpq; only 1: pose proof (max_le_compat_l _ _ m Hpq) as LE; only 1: pose proof (max_le_compat_r _ _ p Hnm) as LE'; only 1: apply min_glb_iff; only 1: solve_min).	0.0339138507843	9
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_absorption	40	0.5	synth with cache (only 1: apply max_r || apply max_l; only 1: solve_min).	0.0251898765564	7
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_absorption	40	0.8	synth with cache (only 1: apply min_l; only 1: solve_max).	0.0488319396973	27
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_distr	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_distr	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_modular	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_modular	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_disassoc	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_antimono	40	0.0.0.1.0.0.0.0.1.0.0.0	synth with cache (only 1: intros Eqf Lef x y; only 1: destruct (min_spec x y) as [(H, E)| (H, E)]; only 1: rewrite E; only 1: destruct (max_spec (f x) (f y)) as [(H', E')| (H', E')]; only 1: assert (f y <= f x) by (apply Lef; order); only 1: order; only 1: auto; only 1: rewrite E; only 1: destruct (max_spec (f x) (f y)) as [(H', E')| (H', E')]; only 1: auto; only 1: assert (f x <= f y) by (apply Lef; order); only 1: order).	2.05977606773	793
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_antimono	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.max_case_strong	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.max_case	40	0.0.0.0.0.0.0.0.1.1.0.0.0.0.0.1.0	synth with cache (only 1: intros Compat Hl Hr; only 1: destruct (CompSpec2Type (compare_spec n m)) as [EQ| LT| GT]; only 1: assert (n <= m) by (rewrite le_lteq; auto); only 1: apply (Compat m), Hr; only 1: symmetry; only 1: apply max_r; only 1: auto; only 1: assert (n <= m) by (rewrite le_lteq; auto); only 1: apply (Compat m), Hr; only 1: symmetry; only 1: apply max_r; only 1: auto; only 1: assert (m <= n) by (rewrite le_lteq; auto); only 1: apply (Compat n), Hl; only 1: symmetry; only 1: apply max_l; only 1: auto).	14.5048968792	9369
Coq.Structures.GenericMinMax.MinMaxDecProperties.max_dec	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.min_case_strong	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.min_case	40	0.0.0.1.0.0.0.0.0.1.0.0.0.0.0.1.1	synth with cache (only 1: intros Compat Hl Hr; only 1: destruct (CompSpec2Type (compare_spec n m)) as [EQ| LT| GT]; only 1: assert (n <= m) by (rewrite le_lteq; auto); only 1: apply (Compat n), Hl; only 1: symmetry; only 1: apply min_l; only 1: auto; only 1: assert (n <= m) by (rewrite le_lteq; auto); only 1: apply (Compat n), Hl; only 1: symmetry; only 1: apply min_l; only 1: auto; only 1: assert (m <= n) by (rewrite le_lteq; auto); only 1: apply (Compat m), Hr; only 1: symmetry; only 1: apply min_r; only 1: auto).	15.7068910599	9677
Coq.Structures.GenericMinMax.MinMaxDecProperties.min_dec	40	1.1.0.0.0.0.0.0.0.7	synth with cache (only 1: apply min_case_strong; only 1: intros x y H [E| E]; only 1: left; only 1: rewrite <- H; only 1: auto; only 1: right; only 1: rewrite <- H; only 1: auto; only 1: auto with relations; only 1: auto with relations).	5.37620306015	3148
Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.max_monotone	40	0.18	synth with cache (only 1: apply max_mono; only 1: eauto with *).	0.404055833817	468
Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.min_monotone	40	0.0.18.0	synth with cache (only 1: intros; only 1: apply min_mono; only 1: congruence; only 1: auto).	4.55958390236	660
Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.min_max_antimonotone	40
Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.max_min_antimonotone	40
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.max_case_strong	40	2.0.1.3.13	synth with cache (only 1: intros x y z; only 1: apply max_case_strong; only 1: intros; only 1: subst; only 1: auto with sets).	35.8154199123	19273
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.max_case	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply Private_Dec.max_case_strong; only 1: auto; only 1: auto).	0.0137031078339	4
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.max_dec	40	0.0.0.8	synth with cache (only 1: Bool.destr_bool; only 1: apply Private_Dec.max_case; only 1: auto with relations; only 1: auto with relations).	0.10922908783	84
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_case_strong	40	0.8.2	synth with cache (only 1: intros Compat Hl Hr; only 1: apply min_case_strong; only 1: congruence).	0.680830001831	439
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_case	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply Private_Dec.min_case_strong; only 1: auto; only 1: auto).	0.0133848190308	4
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_dec	40	0.0.1.10	synth with cache (only 1: Bool.destr_bool; only 1: apply Private_Dec.min_case; only 1: auto with relations; only 1: auto with relations).	0.33681511879	246
Coq.Structures.GenericMinMax.TOMaxEqDec_to_Compare.compare_spec	40
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.eq_refl	40
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.eq_sym	40
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.lt_not_eq	40
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.compare	40
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.eq_dec	40	6.16.0	synth with cache (only 1: intros x l; only 1: unfold eq, lt; only 1: decide equality).	5.35706615448	2900
Coq.Structures.OrderedTypeAlt.OrderedType_to_Alt.compare_sym	40
Coq.Structures.OrderedTypeAlt.OrderedType_to_Alt.compare_trans	40
Coq.ZArith.Znat.nat_N_Z	40	1.1.1	synth with cache (only 1: destruct n; only 1: split; only 1: split).	0.0422630310059	6
Coq.ZArith.Znat.N_nat_Z	40
Coq.ZArith.Znat.positive_nat_Z	40	0.0.0.0.0	synth with cache (only 1: destruct (Pos2Nat.is_succ p) as (m, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv).	0.0638239383698	5
Coq.ZArith.Znat.positive_N_Z	40	0.1.0	synth with cache (only 1: destruct (Pos2Nat.is_succ p) as (m, H); only 1: simpl; only 1: f_equal).	0.044075012207	4
Coq.ZArith.Znat.positive_N_nat	40	0	synth with cache (only 1: reflexivity).	0.0273280143738	1
Coq.ZArith.Znat.positive_nat_N	40	0.1.0.0.0.0.1	synth with cache (only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: apply Pos2Nat.inj; only 1: rewrite H; only 1: apply SuccNat2Pos.id_succ).	0.0756139755249	9
Coq.ZArith.Znat.Z_N_nat	40	1.0.0.0.0.0.1	synth with cache (only 1: induction n; only 1: simpl; only 1: Nat.order_nz; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	0.0751230716705	9
Coq.ZArith.Znat.Z_nat_N	40
Coq.ZArith.Znat.Zabs_N_nat	40	0.0.0.0.0.1.0	synth with cache (only 1: induction n; only 1: simpl; only 1: Nat.order_nz; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	0.0699269771576	8
Coq.ZArith.Znat.Zabs_nat_N	40	1.0.1.0.0.0.0	synth with cache (only 1: destruct n; only 1: simpl; only 1: now N.nzsimpl; only 1: simpl; only 1: apply positive_nat_N; only 1: simpl; only 1: apply positive_nat_N).	0.0913579463959	9
Coq.ZArith.Znat.N2Z.id	40	0.0.0.0.0	synth with cache (only 1: destruct n; only 1: simpl; only 1: now N.nzsimpl; only 1: simpl; only 1: trivial).	0.0730059146881	5
Coq.ZArith.Znat.N2Z.inj	40	0.3.0.0.0.2.0.0.11	synth with cache (only 1: destruct n as [| n], m as [| m]; only 1: intro; only 1: trivial; only 1: now N.nzsimpl; only 1: simpl; only 1: congruence; only 1: intro H; only 1: f_equal; only 1: now destr_eq H).	4.92194414139	1771
Coq.ZArith.Znat.N2Z.inj_iff	40	0.0.2.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n, m; only 1: simpl; only 1: easy'; only 1: simpl; only 1: split; only 1: congruence; only 1: congruence; only 1: simpl; only 1: split; only 1: congruence; only 1: congruence; only 1: simpl; only 1: split; only 1: congruence; only 1: congruence).	14.2127959728	5506
Coq.ZArith.Znat.N2Z.is_nonneg	40	34	synth with cache (only 1: now destruct n).	0.593775987625	586
Coq.ZArith.Znat.N2Z.inj_0	40	0	synth with cache (only 1: trivial).	0.0249619483948	1
Coq.ZArith.Znat.N2Z.inj_pos	40	0	synth with cache (only 1: reflexivity).	0.0217118263245	1
Coq.ZArith.Znat.N2Z.inj_compare	40	1.0.1.1.0.0.0.5	synth with cache (only 1: destruct n, m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: trivial).	1.59173703194	446
Coq.ZArith.Znat.N2Z.inj_le	40	0	synth with cache (only 1: now destruct n, m).	0.0320889949799	1
Coq.ZArith.Znat.N2Z.inj_lt	40	2	synth with cache (only 1: now destruct n, m).	0.776031970978	95
Coq.ZArith.Znat.N2Z.inj_ge	40	4	synth with cache (only 1: now destruct n, m).	0.129683971405	30
Coq.ZArith.Znat.N2Z.inj_gt	40	1	synth with cache (only 1: now destruct n, m).	0.0311748981476	2
Coq.ZArith.Znat.N2Z.inj_abs_N	40
Coq.ZArith.Znat.N2Z.inj_add	40	1.8	synth with cache (only 1: symmetry; only 1: now destruct n, m).	0.0702850818634	22
Coq.ZArith.Znat.N2Z.inj_mul	40	0	synth with cache (only 1: now destruct n, m).	0.038339138031	1
Coq.ZArith.Znat.N2Z.inj_sub_max	40
Coq.ZArith.Znat.N2Z.inj_sub	40
Coq.ZArith.Znat.N2Z.inj_succ	40	0.0.0.0.0	synth with cache (only 1: destruct n as [| p]; only 1: simpl; only 1: easy; only 1: simpl; only 1: now rewrite Pos.add_1_r).	0.0842249393463	5
Coq.ZArith.Znat.N2Z.inj_pred_max	40	5.3.14.13	synth with cache (only 1: unfold Z.max, Pos.max; only 1: destruct n as [| p]; only 1: trivial; only 1: now destruct p).	26.9102680683	13207
Coq.ZArith.Znat.N2Z.inj_pred	40
Coq.ZArith.Znat.N2Z.inj_min	40
Coq.ZArith.Znat.N2Z.inj_max	40
Coq.ZArith.Znat.N2Z.inj_div	40
Coq.ZArith.Znat.N2Z.inj_mod	40
Coq.ZArith.Znat.N2Z.inj_quot	40
Coq.ZArith.Znat.N2Z.inj_rem	40
Coq.ZArith.Znat.N2Z.inj_div2	40	20.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: now destruct p).	3.49337100983	2506
Coq.ZArith.Znat.N2Z.inj_quot2	40	1.0.0	synth with cache (only 1: destruct n as [| p]; only 1: trivial; only 1: now destruct p).	0.0621659755707	4
Coq.ZArith.Znat.N2Z.inj_pow	40
Coq.ZArith.Znat.N2Z.inj_testbit	40	0.0.1.0.0.0.0.0.0	synth with cache (only 1: destruct a as [| a], n; only 1: simpl; only 1: split; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now destruct a; only 1: simpl; only 1: trivial).	0.116341114044	10
Coq.ZArith.Znat.Z2N.id	40	0.0.0.0.0	synth with cache (only 1: intro Hn; only 1: destruct n; only 1: trivial; only 1: trivial; only 1: now destruct Hn).	0.09001994133	5
Coq.ZArith.Znat.Z2N.inj	40
Coq.ZArith.Znat.Z2N.inj_iff	40	1.0.0.1.2.0	synth with cache (only 1: intros; only 1: split; only 1: apply N2Z.inj; only 1: Z.order; only 1: Z.order; only 1: now intros ->).	0.642279148102	54
Coq.ZArith.Znat.Z2N.inj_0	40	5	synth with cache (only 1: reflexivity).	0.0370891094208	6
Coq.ZArith.Znat.Z2N.inj_pos	40	0.0	synth with cache (only 1: simpl; only 1: trivial).	0.0518929958344	2
Coq.ZArith.Znat.Z2N.inj_neg	40	0	synth with cache (only 1: now destruct 1 || trivial).	0.0407810211182	1
Coq.ZArith.Znat.Z2N.inj_add	40
Coq.ZArith.Znat.Z2N.inj_mul	40	1.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n, m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: now destruct 1 || now destruct 2; only 1: trivial; only 1: now destruct 1 || now destruct 2; only 1: now destruct 1 || now destruct 2).	1.70698285103	185
Coq.ZArith.Znat.Z2N.inj_succ	40	0.0.3.5.0.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: intros H; only 1: rewrite <- Pos.add_1_r; only 1: trivial; only 1: now destruct 1 || trivial).	3.25785303116	877
Coq.ZArith.Znat.Z2N.inj_sub	40
Coq.ZArith.Znat.Z2N.inj_pred	40	0.0.3.0.5	synth with cache (only 1: destruct n; only 1: trivial; only 1: now destruct p; only 1: simpl; only 1: trivial).	0.37461400032	93
Coq.ZArith.Znat.Z2N.inj_compare	40	0.0	synth with cache (only 1: intros; only 1: now destruct n, m).	0.07790184021	2
Coq.ZArith.Znat.Z2N.inj_le	40
Coq.ZArith.Znat.Z2N.inj_lt	40
Coq.ZArith.Znat.Z2N.inj_min	40
Coq.ZArith.Znat.Z2N.inj_max	40
Coq.ZArith.Znat.Z2N.inj_div	40
Coq.ZArith.Znat.Z2N.inj_mod	40
Coq.ZArith.Znat.Z2N.inj_quot	40
Coq.ZArith.Znat.Z2N.inj_rem	40
Coq.ZArith.Znat.Z2N.inj_div2	40	1	synth with cache (only 1: now destruct n as [| [| | ]| [| | ]]).	0.04856300354	2
Coq.ZArith.Znat.Z2N.inj_quot2	40	1.1.0.0	synth with cache (only 1: destruct n as [| p| p]; only 1: trivial; only 1: now destruct p; only 1: now destruct p).	0.0826358795166	6
Coq.ZArith.Znat.Z2N.inj_pow	40
Coq.ZArith.Znat.Z2N.inj_testbit	40	4.0.1.0.1.0.0.1.3.0	synth with cache (only 1: intro Hn; only 1: destruct a as [| a], n; only 1: simpl; only 1: split; only 1: trivial; only 1: now destruct Hn || now destruct Hm || clear; only 1: simpl; only 1: now destruct a; only 1: trivial; only 1: easy).	12.7519319057	5044
Coq.ZArith.Znat.Zabs2N.abs_N_spec	40	0.0.0.0.0.0.6	synth with cache (only 1: destruct n as [| p| p]; only 1: simpl; only 1: now N.nzsimpl; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	0.634373903275	96
Coq.ZArith.Znat.Zabs2N.abs_N_nonneg	40	3.0	synth with cache (only 1: intros; only 1: now destruct n).	0.0489120483398	5
Coq.ZArith.Znat.Zabs2N.id_abs	40	1	synth with cache (only 1: now destruct n).	0.0425279140472	2
Coq.ZArith.Znat.Zabs2N.id	40	0	synth with cache (only 1: now destruct n).	0.0322799682617	1
Coq.ZArith.Znat.Zabs2N.inj_0	40	0.0	synth with cache (only 1: simpl; only 1: now N.nzsimpl).	0.072909116745	2
Coq.ZArith.Znat.Zabs2N.inj_pos	40	0.0	synth with cache (only 1: simpl; only 1: trivial).	0.0439321994781	2
Coq.ZArith.Znat.Zabs2N.inj_neg	40	0	synth with cache (only 1: reflexivity).	0.0392699241638	1
Coq.ZArith.Znat.Zabs2N.inj_opp	40	1	synth with cache (only 1: now destruct n).	0.0422968864441	2
Coq.ZArith.Znat.Zabs2N.inj_succ	40	0.0.0.0.5	synth with cache (only 1: destruct n as [| n| n]; only 1: trivial; only 1: simpl; only 1: now rewrite Pos.add_1_r; only 1: now destruct 1 || intros _).	0.632915019989	97
Coq.ZArith.Znat.Zabs2N.inj_add	40	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n, m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: now destruct 1 || now destruct 2; only 1: trivial; only 1: now destruct 1 || now destruct 2; only 1: trivial).	0.148172855377	10
Coq.ZArith.Znat.Zabs2N.inj_mul	40	9	synth with cache (only 1: now destruct n, m).	0.0966000556946	10
Coq.ZArith.Znat.Zabs2N.inj_sub	40
Coq.ZArith.Znat.Zabs2N.inj_pred	40	0.0.1.1.5.0	synth with cache (only 1: destruct n; only 1: now N.nzsimpl'; only 1: intros; only 1: now destruct p; only 1: intros; only 1: easy).	1.79826188087	323
Coq.ZArith.Znat.Zabs2N.inj_compare	40	2.0	synth with cache (only 1: intros Hn Hm; only 1: now destruct n, m).	0.0800440311432	4
Coq.ZArith.Znat.Zabs2N.inj_le	40	0.0.0	synth with cache (only 1: intros Hn Hm; only 1: unfold Z.le, N.le; only 1: now rewrite Z2N.inj_compare).	0.0797588825226	3
Coq.ZArith.Znat.Zabs2N.inj_lt	40	0.0.0	synth with cache (only 1: intros Hn Hm; only 1: unfold Z.lt, N.lt; only 1: now rewrite Z2N.inj_compare).	0.0756330490112	3
Coq.ZArith.Znat.Zabs2N.inj_min	40	0.0.1.0.9.0	synth with cache (only 1: intros; only 1: unfold Z.min, N.min; only 1: rewrite Pos2Z.inj_compare; only 1: now case Z.compare_spec; only 1: trivial; only 1: trivial).	30.1533150673	6354
Coq.ZArith.Znat.Zabs2N.inj_max	40
Coq.ZArith.Znat.Zabs2N.inj_quot	40
Coq.ZArith.Znat.Zabs2N.inj_rem	40
Coq.ZArith.Znat.Zabs2N.inj_pow	40
Coq.ZArith.Znat.Zabs2N.inj_succ_abs	40
Coq.ZArith.Znat.Zabs2N.inj_add_abs	40
Coq.ZArith.Znat.Zabs2N.inj_mul_abs	40	0	synth with cache (only 1: now destruct n, m).	0.0458920001984	1
Coq.ZArith.Znat.Nat2Z.inj_0	40	2	synth with cache (only 1: reflexivity).	0.0364818572998	3
Coq.ZArith.Znat.Nat2Z.inj_succ	40	0.0.4.2	synth with cache (only 1: destruct n; only 1: now Z.nzsimpl'; only 1: simpl; only 1: now rewrite Pos.add_1_r).	0.42563700676	34
Coq.ZArith.Znat.Nat2Z.is_nonneg	40	0	synth with cache (only 1: now destruct n).	0.0597140789032	1
Coq.ZArith.Znat.Nat2Z.id	40	1.5.5.11	synth with cache (only 1: induction n as [| n IHn]; only 1: trivial; only 1: simpl; only 1: apply SuccNat2Pos.id_succ).	2.46819710732	776
Coq.ZArith.Znat.Nat2Z.inj	40	1.3	synth with cache (only 1: intros H; only 1: now rewrite <- (Nat2Pos.id n), <- (Nat2Pos.id m), H).	0.0625061988831	6
Coq.ZArith.Znat.Nat2Z.inj_iff	40	0.0.0.0	synth with cache (only 1: split; only 1: intros H; only 1: now rewrite <- (id n), <- (id m), H; only 1: auto).	0.0797231197357	4
Coq.ZArith.Znat.Nat2Z.inj_compare	40
Coq.ZArith.Znat.Nat2Z.inj_le	40	6.2.5	synth with cache (only 1: unfold Z.le; only 1: symmetry; only 1: now rewrite Pos2Nat.inj_compare, Nat.compare_le_iff).	10.7605700493	1891
Coq.ZArith.Znat.Nat2Z.inj_lt	40	3.8	synth with cache (only 1: unfold Z.ltb, Z.lt; only 1: now rewrite Pos2Nat.inj_compare, Nat.compare_lt_iff).	3.33129119873	553
Coq.ZArith.Znat.Nat2Z.inj_ge	40
Coq.ZArith.Znat.Nat2Z.inj_gt	40
Coq.ZArith.Znat.Nat2Z.inj_abs_nat	40
Coq.ZArith.Znat.Nat2Z.inj_add	40
Coq.ZArith.Znat.Nat2Z.inj_mul	40
Coq.ZArith.Znat.Nat2Z.inj_sub_max	40
Coq.ZArith.Znat.Nat2Z.inj_sub	40
Coq.ZArith.Znat.Nat2Z.inj_pred_max	40
Coq.ZArith.Znat.Nat2Z.inj_pred	40
Coq.ZArith.Znat.Nat2Z.inj_min	40
Coq.ZArith.Znat.Nat2Z.inj_max	40
Coq.ZArith.Znat.Nat2Z.inj_div	40
Coq.ZArith.Znat.Nat2Z.inj_mod	40
Coq.ZArith.Znat.Nat2Z.inj_pow	40
Coq.ZArith.Znat.Z2Nat.id	40	0.0.0.0.0.0.1.2.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: intros Hb'; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (m, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv; only 1: now destruct 1 || trivial).	2.54917192459	553
Coq.ZArith.Znat.Z2Nat.inj	40	7.1.3	synth with cache (only 1: intros Hn Hm; only 1: intros H; only 1: now rewrite <- (Nat2Z.id n), <- (Nat2Z.id m), H).	4.49532485008	1202
Coq.ZArith.Znat.Z2Nat.inj_iff	40	0.0.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: now apply Z2N.inj; only 1: intros; only 1: now f_equal).	0.0778670310974	5
Coq.ZArith.Znat.Z2Nat.inj_0	40	0	synth with cache (only 1: reflexivity).	0.030611038208	1
Coq.ZArith.Znat.Z2Nat.inj_pos	40	0	synth with cache (only 1: now destruct n).	0.0368680953979	1
Coq.ZArith.Znat.Z2Nat.inj_neg	40	0.7	synth with cache (only 1: Nat.bitwise; only 1: trivial).	0.0652470588684	9
Coq.ZArith.Znat.Z2Nat.inj_add	40	0.0.0.0.1.0.0.1.0.0.0.0.1	synth with cache (only 1: destruct n, m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: intros; only 1: now destruct Hn || now destruct Hm || clear; only 1: simpl; only 1: apply Pos2Nat.inj_add; only 1: now destruct 1 || now destruct 2; only 1: trivial; only 1: now destruct 1 || now destruct 2; only 1: now destruct 1 || now destruct 2).	32.2129650116	5311
Coq.ZArith.Znat.Z2Nat.inj_mul	40
Coq.ZArith.Znat.Z2Nat.inj_succ	40
Coq.ZArith.Znat.Z2Nat.inj_sub	40
Coq.ZArith.Znat.Z2Nat.inj_pred	40
Coq.ZArith.Znat.Z2Nat.inj_compare	40
Coq.ZArith.Znat.Z2Nat.inj_le	40
Coq.ZArith.Znat.Z2Nat.inj_lt	40
Coq.ZArith.Znat.Z2Nat.inj_min	40
Coq.ZArith.Znat.Z2Nat.inj_max	40
Coq.ZArith.Znat.Z2Nat.inj_div	40
Coq.ZArith.Znat.Z2Nat.inj_mod	40
Coq.ZArith.Znat.Z2Nat.inj_pow	40
Coq.ZArith.Znat.Zabs2Nat.abs_nat_spec	40	0	synth with cache (only 1: now destruct n).	0.0396840572357	1
Coq.ZArith.Znat.Zabs2Nat.abs_nat_nonneg	40	1.0.0.1	synth with cache (only 1: destruct n; only 1: trivial; only 1: trivial; only 1: now destruct 1).	0.102230072021	15
Coq.ZArith.Znat.Zabs2Nat.id_abs	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.15	synth with cache (only 1: destruct n; only 1: simpl; only 1: Z.order_nz; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (m, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (m, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv).	11.2406232357	5357
Coq.ZArith.Znat.Zabs2Nat.id	40	1.3.1.4	synth with cache (only 1: induction n; only 1: trivial; only 1: simpl; only 1: apply SuccNat2Pos.id_succ).	0.430438995361	85
Coq.ZArith.Znat.Zabs2Nat.inj_0	40	0	synth with cache (only 1: reflexivity).	0.0320198535919	1
Coq.ZArith.Znat.Zabs2Nat.inj_pos	40	0	synth with cache (only 1: reflexivity).	0.0393769741058	1
Coq.ZArith.Znat.Zabs2Nat.inj_neg	40	0	synth with cache (only 1: reflexivity).	0.0374782085419	1
Coq.ZArith.Znat.Zabs2Nat.inj_succ	40
Coq.ZArith.Znat.Zabs2Nat.inj_add	40
Coq.ZArith.Znat.Zabs2Nat.inj_mul	40
Coq.ZArith.Znat.Zabs2Nat.inj_sub	40
Coq.ZArith.Znat.Zabs2Nat.inj_pred	40
Coq.ZArith.Znat.Zabs2Nat.inj_compare	40
Coq.ZArith.Znat.Zabs2Nat.inj_le	40	0.0.0	synth with cache (only 1: intros Hn Hm; only 1: unfold Z.le; only 1: now rewrite nat_compare_le, Z2Nat.inj_compare).	0.0640561580658	3
Coq.ZArith.Znat.Zabs2Nat.inj_lt	40	0.0.0	synth with cache (only 1: intros Hn Hm; only 1: unfold Z.lt; only 1: now rewrite nat_compare_lt, Z2Nat.inj_compare).	0.059944152832	3
Coq.ZArith.Znat.Zabs2Nat.inj_min	40
Coq.ZArith.Znat.Zabs2Nat.inj_max	40
Coq.ZArith.Znat.Zabs2Nat.inj_succ_abs	40	0.1.1.0.0.0.0.0.31	synth with cache (only 1: destruct n as [| [| | ]| [| | ]]; only 1: now rewrite <- !Zabs_N_nat, Zabs2N.inj_succ, N2Nat.inj_succ; only 1: now rewrite <- !Zabs_N_nat, Zabs2N.inj_succ, N2Nat.inj_succ; only 1: now rewrite <- !Zabs_N_nat, Zabs2N.inj_succ, N2Nat.inj_succ; only 1: now rewrite <- !Zabs_N_nat, Zabs2N.inj_succ, N2Nat.inj_succ; only 1: now rewrite <- !Zabs_N_nat, Zabs2N.inj_succ, N2Nat.inj_succ; only 1: simpl; only 1: trivial; only 1: now rewrite <- !Zabs_N_nat, Zabs2N.inj_succ, N2Nat.inj_succ).	18.1065590382	6906
Coq.ZArith.Znat.Zabs2Nat.inj_add_abs	40
Coq.ZArith.Znat.Zabs2Nat.inj_mul_abs	40
Coq.ZArith.Znat.inj_neq	40
Coq.ZArith.Znat.inj_minus2	40
Coq.ZArith.Wf_Z.Z_of_nat_complete	40
Coq.ZArith.Wf_Z.Z_of_nat_complete_inf	40	0.0.0.0	synth with cache (only 1: intros H; only 1: exists (Z.to_nat x); only 1: symmetry; only 1: now apply Z2Nat.id).	0.021467924118	4
Coq.ZArith.Wf_Z.Z_of_nat_prop	40
Coq.ZArith.Wf_Z.Z_of_nat_set	40
Coq.ZArith.Wf_Z.natlike_ind	40
Coq.ZArith.Wf_Z.natlike_rec	40
Coq.ZArith.Wf_Z.Efficient_Rec.R_wf	40
Coq.ZArith.Wf_Z.Efficient_Rec.natlike_rec2	40
Coq.ZArith.Wf_Z.Efficient_Rec.natlike_rec3	40	0.0.4.0.4.1.2.4.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros P Ho Hrec z; only 1: induction z as [z IH] using (well_founded_induction_type R_wf); only 1: destruct z as [| p| p]; only 1: intros Hz; only 1: apply Ho; only 1: intros Hz; only 1: set (y := Z.pred (Z.pos p)); only 1: assert (LE : 0 <= y) by (unfold y; now apply Z.lt_le_pred); only 1: assert (EQ : Z.pos p = Z.succ y) by (unfold y; now rewrite Z.succ_pred); only 1: apply Hrec, IH; only 1: split; only 1: split; only 1: trivial; only 1: apply Z.lt_pred_l; only 1: trivial; only 1: intros Hz; only 1: now destruct Hz).	31.2187080383	40184
Coq.ZArith.Wf_Z.Efficient_Rec.Zlt_0_rec	40
Coq.ZArith.Wf_Z.Efficient_Rec.Zlt_0_ind	40	1.0.0.0.1.2.1.0.0	synth with cache (only 1: intros P Hrec x; only 1: induction x as [x IH] using (well_founded_induction_type R_wf); only 1: intros Hx; only 1: apply Hrec; only 1: intros y (Hy, Hy'); only 1: apply IH; only 1: now split; only 1: trivial; only 1: trivial).	1.73936390877	992
Coq.ZArith.Wf_Z.Efficient_Rec.Z_lt_rec	40
Coq.ZArith.Wf_Z.Efficient_Rec.Z_lt_induction	40	0.0.0	synth with cache (only 1: intros P Hrec; only 1: apply Zlt_0_rec; only 1: auto).	0.020122051239	3
Coq.ZArith.Wf_Z.Efficient_Rec.Zlt_lower_bound_rec	40
Coq.ZArith.Wf_Z.Efficient_Rec.Zlt_lower_bound_ind	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros P z Hrec x Hx; only 1: rewrite <- (Z.sub_simpl_r x z); only 1: apply Z.le_0_sub in Hx; only 1: pattern (x - z); only 1: apply Zlt_0_rec; only 1: clear x Hx; only 1: intros x IH Hx; only 1: apply Hrec; only 1: intros y (Hy, Hy'); only 1: rewrite <- (Z.sub_simpl_r y z); only 1: apply IH; only 1: split; only 1: now rewrite Z.le_0_sub; only 1: now apply Z.lt_sub_lt_add_r; only 1: now rewrite <- (Z.add_le_mono_r 0 x z); only 1: trivial).	14.4485809803	5829
Coq.ZArith.Zpow_def.Zpower_theory	40
Coq.ZArith.Zcompare.Zcompare_Gt_trans	40
Coq.ZArith.Zcompare.Zcompare_opp	40
Coq.ZArith.Zcompare.Zcompare_Gt_spec	40
Coq.ZArith.Zcompare.Zcompare_plus_compat	40
Coq.ZArith.Zcompare.Zplus_compare_compat	40
Coq.ZArith.Zcompare.Zcompare_succ_Gt	40
Coq.ZArith.Zcompare.Zcompare_Gt_not_Lt	40
Coq.ZArith.Zcompare.Zcompare_succ_compat	40
Coq.ZArith.Zcompare.Zcompare_mult_compat	40
Coq.ZArith.Zcompare.Zmult_compare_compat_l	40
Coq.ZArith.Zcompare.Zmult_compare_compat_r	40
Coq.ZArith.Zcompare.Zcompare_elim	40
Coq.ZArith.Zcompare.Zcompare_eq_case	40	2.0.0.0.14	synth with cache (only 1: intros; only 1: case Z.compare_spec; only 1: trivial; only 1: Z.order; only 1: Z.order).	27.7518970966	4305
Coq.ZArith.Zcompare.Zle_compare	40
Coq.ZArith.Zcompare.Zlt_compare	40	1.0.5.0.0	synth with cache (only 1: intros; only 1: case Z.compare_spec; only 1: Z.order; only 1: trivial; only 1: Z.order).	0.225079059601	68
Coq.ZArith.Zcompare.Zge_compare	40	0.0.0.0.0	synth with cache (only 1: intros; only 1: case Z.compare_spec; only 1: trivial; only 1: trivial; only 1: trivial).	0.049409866333	5
Coq.ZArith.Zcompare.Zgt_compare	40	0.0	synth with cache (only 1: intros x y H; only 1: now rewrite H).	0.0428431034088	2
Coq.ZArith.BinInt.Z.eq_dec	40
Coq.ZArith.BinInt.Z.pos_sub_spec	40
Coq.ZArith.BinInt.Z.pos_sub_discr	40
Coq.ZArith.BinInt.Z.pos_sub_diag	40	0.0.1.0.0.1.0.5.7	synth with cache (only 1: induction p as [p IHp| p IHp| ]; only 1: simpl; only 1: rewrite ?Pos.compare_xI_xI, ?Pos.compare_xO_xI, ?Pos.compare_xI_xO, ?Pos.compare_xO_xO, IHp; only 1: trivial; only 1: simpl; only 1: rewrite ?Pos.compare_xI_xI, ?Pos.compare_xO_xI, ?Pos.compare_xI_xO, ?Pos.compare_xO_xO, IHp; only 1: trivial; only 1: simpl; only 1: trivial).	0.62793803215	668
Coq.ZArith.BinInt.Z.pos_sub_lt	40
Coq.ZArith.BinInt.Z.pos_sub_gt	40
Coq.ZArith.BinInt.Z.pos_sub_opp	40	1.1.16.10	synth with cache (only 1: revert q; only 1: fix even_spec 1; only 1: intros H; only 1: trivial).	39.1094229221	20180
Coq.ZArith.BinInt.Z.Private_BootStrap.add_0_r	40	0.1.3.81	synth with cache (only 1: induction n; only 1: trivial; only 1: trivial; only 1: trivial).	4.96845698357	16831
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_0_r	40	0	synth with cache (only 1: now destruct n).	0.00698900222778	1
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_1_l	40	0.2	synth with cache (only 1: simpl; only 1: now destruct n).	0.00989723205566	4
Coq.ZArith.BinInt.Z.Private_BootStrap.add_comm	40
Coq.ZArith.BinInt.Z.Private_BootStrap.opp_add_distr	40
Coq.ZArith.BinInt.Z.Private_BootStrap.opp_inj	40
Coq.ZArith.BinInt.Z.Private_BootStrap.pos_sub_add	40
Coq.ZArith.BinInt.Z.Private_BootStrap.add_assoc_pos	40
Coq.ZArith.BinInt.Z.Private_BootStrap.add_assoc	40
Coq.ZArith.BinInt.Z.Private_BootStrap.add_opp_diag_r	40	0.2.0.0.0.0.6.1.40	synth with cache (only 1: revert n; only 1: intros q; only 1: destruct q; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now rewrite pos_sub_spec, Pos.compare_refl; only 1: simpl; only 1: now rewrite pos_sub_spec, Pos.compare_refl).	7.68434214592	15258
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_opp_r	40
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_add_distr_pos	40
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_add_distr_r	40
Coq.ZArith.BinInt.Z.one_succ	40	0.1	synth with cache (only 1: simpl; only 1: trivial).	0.00963091850281	3
Coq.ZArith.BinInt.Z.two_succ	40	0.0	synth with cache (only 1: simpl; only 1: trivial).	0.00919485092163	2
Coq.ZArith.BinInt.Z.add_0_l	40	0	synth with cache (only 1: now destruct n).	0.00763607025146	1
Coq.ZArith.BinInt.Z.add_succ_l	40
Coq.ZArith.BinInt.Z.opp_0	40	0.0	synth with cache (only 1: simpl; only 1: now f_equal).	0.00876688957214	2
Coq.ZArith.BinInt.Z.opp_succ	40
Coq.ZArith.BinInt.Z.succ_pred	40
Coq.ZArith.BinInt.Z.pred_succ	40	0.0	synth with cache (only 1: unfold succ, pred; only 1: now rewrite <- add_assoc, add_opp_diag_r, add_0_r).	0.0104830265045	2
Coq.ZArith.BinInt.Z.sub_0_r	40	0	synth with cache (only 1: now destruct n).	0.0080201625824	1
Coq.ZArith.BinInt.Z.sub_succ_r	40
Coq.ZArith.BinInt.Z.mul_0_l	40	0	synth with cache (only 1: now destruct n).	0.0073709487915	1
Coq.ZArith.BinInt.Z.mul_succ_l	40
Coq.ZArith.BinInt.Z.eqb_eq	40	2.4.1	synth with cache (only 1: revert m; only 1: fix even_spec 1; only 1: easy).	0.0597059726715	38
Coq.ZArith.BinInt.Z.ltb_lt	40
Coq.ZArith.BinInt.Z.leb_le	40	3.3.3.0.4.14	synth with cache (only 1: symmetry; only 1: revert m; only 1: fix even_spec 1; only 1: intro m; only 1: rewrite even_spec; only 1: now split).	16.5550370216	13723
Coq.ZArith.BinInt.Z.compare_eq_iff	40
Coq.ZArith.BinInt.Z.compare_sub	40
Coq.ZArith.BinInt.Z.compare_antisym	40
Coq.ZArith.BinInt.Z.compare_lt_iff	40	0.2.0.0.0	synth with cache (only 1: unfold ltb, lt; only 1: destruct compare; only 1: now split; only 1: apply iff_refl; only 1: now split).	0.0205371379852	7
Coq.ZArith.BinInt.Z.compare_le_iff	40	1	synth with cache (only 1: reflexivity).	0.0673670768738	32
Coq.ZArith.BinInt.Z.lt_succ_r	40
Coq.ZArith.BinInt.Z.max_l	40
Coq.ZArith.BinInt.Z.max_r	40	1.0.0.4.0	synth with cache (only 1: unfold le, max; only 1: case N.compare_spec; only 1: trivial; only 1: trivial; only 1: now destruct 2).	0.18005490303	76
Coq.ZArith.BinInt.Z.min_l	40
Coq.ZArith.BinInt.Z.min_r	40	0.1.0.1.1.0	synth with cache (only 1: unfold le, min; only 1: rewrite (compare_antisym n m); only 1: case compare_spec; only 1: trivial; only 1: now destruct 2; only 1: intuition).	0.110448122025	44
Coq.ZArith.BinInt.Z.peano_ind	40
Coq.ZArith.BinInt.Z.bi_induction	40
Coq.ZArith.BinInt.Z.abs_eq	40	3.14	synth with cache (only 1: intros q; only 1: now destruct n).	2.90025496483	1638
Coq.ZArith.BinInt.Z.abs_neq	40	0.1.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: now destruct 1; only 1: trivial).	0.018602848053	5
Coq.ZArith.BinInt.Z.sgn_null	40	0.0.0.8.0	synth with cache (only 1: intros; only 1: destruct n; only 1: reflexivity; only 1: destr_eq H; only 1: destr_eq H).	0.268395185471	135
Coq.ZArith.BinInt.Z.sgn_pos	40	3.0	synth with cache (only 1: intros; only 1: now destruct n).	0.0407350063324	5
Coq.ZArith.BinInt.Z.sgn_neg	40	0	synth with cache (only 1: now destruct n).	0.0109670162201	1
Coq.ZArith.BinInt.Z.pow_0_r	40	0	synth with cache (only 1: reflexivity).	0.00712990760803	1
Coq.ZArith.BinInt.Z.pow_succ_r	40
Coq.ZArith.BinInt.Z.pow_neg_r	40	0.2.2.1.2.0	synth with cache (only 1: destruct m as [| m| m]; only 1: intros; only 1: now nzsimpl; only 1: intros H; only 1: destr_eq H; only 1: now destruct 1 || intros _).	1.22796177864	477
Coq.ZArith.BinInt.Z.pow_pos_fold	40	3.2.2	synth with cache (only 1: symmetry; only 1: symmetry; only 1: trivial).	0.0180299282074	11
Coq.ZArith.BinInt.Z.square_spec	40	1.0.6.1.0.0.0.0.87	synth with cache (only 1: induction n; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: f_equal; only 1: apply Pos.square_spec; only 1: simpl; only 1: f_equal; only 1: apply Pos.square_spec).	6.04564714432	10685
Coq.ZArith.BinInt.Z.sqrtrem_spec	40
Coq.ZArith.BinInt.Z.sqrt_spec	40
Coq.ZArith.BinInt.Z.sqrt_neg	40	1	synth with cache (only 1: now destruct n).	0.128331899643	11
Coq.ZArith.BinInt.Z.sqrtrem_sqrt	40	0.0.0.0.0.1.0.0	synth with cache (only 1: destruct n; only 1: now nzsimpl; only 1: simpl; only 1: unfold N.sqrtrem, N.sqrt, Pos.sqrt; only 1: destruct (Pos.sqrtrem p) as (s, r); only 1: now destruct r; only 1: simpl; only 1: trivial).	0.141227006912	9
Coq.ZArith.BinInt.Z.log2_spec	40
Coq.ZArith.BinInt.Z.log2_nonpos	40	0	synth with cache (only 1: now destruct n).	0.00848388671875	1
Coq.ZArith.BinInt.Z.even_spec	40
Coq.ZArith.BinInt.Z.odd_spec	40
Coq.ZArith.BinInt.Z.double_spec	40	0	synth with cache (only 1: now destruct n as [| [| | ]| [| | ]]).	0.00948691368103	1
Coq.ZArith.BinInt.Z.succ_double_spec	40	1.0.0.1.0.0.4.1	synth with cache (only 1: simpl; only 1: destruct n as [| p| p]; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy; only 1: simpl; only 1: trivial).	21.9539220333	4520
Coq.ZArith.BinInt.Z.pred_double_spec	40	0	synth with cache (only 1: now destruct n).	0.00810980796814	1
Coq.ZArith.BinInt.Z.pos_div_eucl_eq	40
Coq.ZArith.BinInt.Z.div_eucl_eq	40
Coq.ZArith.BinInt.Z.div_mod	40
Coq.ZArith.BinInt.Z.pos_div_eucl_bound	40
Coq.ZArith.BinInt.Z.mod_pos_bound	40
Coq.ZArith.BinInt.Z.mod_neg_bound	40
Coq.ZArith.BinInt.Z.quotrem_eq	40
Coq.ZArith.BinInt.Z.quot_rem'	40
Coq.ZArith.BinInt.Z.quot_rem	40	0.0.0.0.0	synth with cache (only 1: intros Hb; only 1: rewrite mul_comm; only 1: generalize (quotrem_eq a b); only 1: unfold quot, rem; only 1: now destruct quotrem).	0.0263810157776	5
Coq.ZArith.BinInt.Z.rem_bound_pos	40
Coq.ZArith.BinInt.Z.rem_opp_l'	40
Coq.ZArith.BinInt.Z.rem_opp_r'	40
Coq.ZArith.BinInt.Z.rem_opp_l	40
Coq.ZArith.BinInt.Z.rem_opp_r	40
Coq.ZArith.BinInt.Z.divide_Zpos	40
Coq.ZArith.BinInt.Z.divide_Zpos_Zneg_r	40
Coq.ZArith.BinInt.Z.divide_Zpos_Zneg_l	40
Coq.ZArith.BinInt.Z.ggcd_gcd	40
Coq.ZArith.BinInt.Z.ggcd_correct_divisors	40
Coq.ZArith.BinInt.Z.gcd_divide_l	40
Coq.ZArith.BinInt.Z.gcd_divide_r	40	0.1.1.0.0.0.0	synth with cache (only 1: rewrite <- ggcd_gcd; only 1: generalize (ggcd_correct_divisors a b); only 1: destruct ggcd as (g, (aa, bb)); only 1: simpl; only 1: intros (_, H); only 1: exists bb; only 1: now rewrite mul_comm).	0.063952922821	22
Coq.ZArith.BinInt.Z.gcd_greatest	40
Coq.ZArith.BinInt.Z.gcd_nonneg	40
Coq.ZArith.BinInt.Z.ggcd_opp	40
Coq.ZArith.BinInt.Z.testbit_of_N	40	0.1.1.0.0.1.0.0.0.0.0.0.3	synth with cache (only 1: destruct a as [| [a| a| ]], n as [| n]; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: split; only 1: trivial; only 1: simpl; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial).	6.75319504738	3504
Coq.ZArith.BinInt.Z.testbit_of_N'	40
Coq.ZArith.BinInt.Z.testbit_Zpos	40	1.0.0.1.0.0.5	synth with cache (only 1: destruct n; only 1: intros _; only 1: simpl; only 1: now destruct a; only 1: trivial; only 1: simpl; only 1: now destruct 1).	2.34820103645	1461
Coq.ZArith.BinInt.Z.testbit_Zneg	40
Coq.ZArith.BinInt.Z.div2_spec	40	0	synth with cache (only 1: trivial).	0.00771498680115	1
Coq.ZArith.BinInt.Z.testbit_0_l	40	0.0.0.6.109	synth with cache (only 1: compute; only 1: destruct n; only 1: trivial; only 1: trivial; only 1: trivial).	3.6721599102	8260
Coq.ZArith.BinInt.Z.testbit_neg_r	40	1.0.0.1.5.1.3.0.13.11	synth with cache (only 1: rewrite <- (add_0_l 0); only 1: destruct n as [| p| p]; only 1: intro Hn; only 1: simpl; only 1: easy; only 1: intros Hb; only 1: now discriminate Hb || clear Hb; only 1: intro Hn; only 1: unfold testbit; only 1: trivial).	5.21822619438	6584
Coq.ZArith.BinInt.Z.testbit_odd_0	40	0.0.0.7.0.0.1.17.2	synth with cache (only 1: simpl; only 1: induction a as [a IHa| a IHa| ]; only 1: now nzsimpl; only 1: now destruct a; only 1: simpl; only 1: induction p as [p| p| ]; only 1: now destruct p; only 1: now destruct p; only 1: trivial).	3.49969410896	3374
Coq.ZArith.BinInt.Z.testbit_even_0	40	2.4	synth with cache (only 1: simpl; only 1: now destruct a as [| [| | ]| ]).	0.0134282112122	8
Coq.ZArith.BinInt.Z.testbit_odd_succ	40
Coq.ZArith.BinInt.Z.testbit_even_succ	40
Coq.ZArith.BinInt.Z.shiftr_spec_aux	40
Coq.ZArith.BinInt.Z.shiftl_spec_low	40
Coq.ZArith.BinInt.Z.shiftl_spec_high	40
Coq.ZArith.BinInt.Z.shiftr_spec	40
Coq.ZArith.BinInt.Z.lor_spec	40
Coq.ZArith.BinInt.Z.land_spec	40
Coq.ZArith.BinInt.Z.ldiff_spec	40
Coq.ZArith.BinInt.Z.lxor_spec	40
Coq.ZArith.BinInt.Z.mod_bound_pos_le	40	0.0.1.0.0.0.0.1.0	synth with cache (only 1: intros Ha Hb; only 1: intuition; only 1: destruct (mod_bound_pos a b); only 1: order; only 1: trivial; only 1: order; only 1: apply Private_NZDiv.mod_le; only 1: order; only 1: trivial).	1.3521490097	322
Coq.ZArith.BinInt.Z.gt_lt_iff	40	13.3	synth with cache (only 1: unfold lt, le; only 1: now rewrite N.compare_antisym, CompOpp_iff).	4.31697297096	2260
Coq.ZArith.BinInt.Z.gt_lt	40	2	synth with cache (only 1: apply N.gt_lt_iff).	0.0372099876404	20
Coq.ZArith.BinInt.Z.lt_gt	40	0	synth with cache (only 1: apply gt_lt_iff).	0.00699090957642	1
Coq.ZArith.BinInt.Z.ge_le_iff	40
Coq.ZArith.BinInt.Z.ge_le	40	4.0.0	synth with cache (only 1: unfold le, ge; only 1: rewrite (compare_antisym n m); only 1: now destruct compare).	0.134863138199	14
Coq.ZArith.BinInt.Z.le_ge	40	0	synth with cache (only 1: apply ge_le_iff).	0.00744485855103	1
Coq.ZArith.BinInt.Z.gtb_ltb	40
Coq.ZArith.BinInt.Z.geb_leb	40
Coq.ZArith.BinInt.Z.gtb_lt	40
Coq.ZArith.BinInt.Z.geb_le	40
Coq.ZArith.BinInt.Z.gtb_spec	40
Coq.ZArith.BinInt.Z.geb_spec	40
Coq.ZArith.BinInt.Z.add_reg_l	40	3	synth with cache (only 1: apply add_cancel_l).	0.179017066956	32
Coq.ZArith.BinInt.Z.mul_reg_l	40	0	synth with cache (only 1: apply mul_cancel_l).	0.00808620452881	1
Coq.ZArith.BinInt.Z.mul_reg_r	40	0.2	synth with cache (only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: exact (fun Hp => proj1 (mul_cancel_l n m p Hp))).	0.0135688781738	4
Coq.ZArith.BinInt.Z.opp_eq_mul_m1	40
Coq.ZArith.BinInt.Z.add_diag	40	3	synth with cache (only 1: now nzsimpl').	0.12872004509	4
Coq.ZArith.BinInt.Z.compare_opp	40
Coq.ZArith.BinInt.Z.add_compare_mono_l	40
Coq.ZArith.BinInt.Z.testbit_mod_pow2	40
Coq.ZArith.BinInt.Z.testbit_ones	40
Coq.ZArith.BinInt.Z.testbit_ones_nonneg	40	0.0.0.0.2.9.11	synth with cache (only 1: symmetry; only 1: apply eq_true_iff_eq; only 1: destruct (ltb_spec i n); only 1: rewrite ?testbit_neg_r, ?ones_spec_low, ?ones_spec_high by auto; only 1: intuition; only 1: rewrite ?testbit_neg_r, ?ones_spec_low, ?ones_spec_high by auto; only 1: intuition).	1.60197901726	1747
Coq.ZArith.BinInt.Pos2Z.id	40	2	synth with cache (only 1: split).	0.114309072495	79
Coq.ZArith.BinInt.Pos2Z.inj	40	0	synth with cache (only 1: congruence).	0.00882697105408	1
Coq.ZArith.BinInt.Pos2Z.inj_iff	40	0.0.0	synth with cache (only 1: split; only 1: now injection 1; only 1: congruence).	0.0170879364014	3
Coq.ZArith.BinInt.Pos2Z.is_pos	40	1.3.1	synth with cache (only 1: induction p as [| p IHp] using Pos.peano_ind; only 1: Z.order'; only 1: intuition Z.order).	0.023118019104	11
Coq.ZArith.BinInt.Pos2Z.is_nonneg	40	9	synth with cache (only 1: now Z.nzsimpl').	0.0296750068665	11
Coq.ZArith.BinInt.Pos2Z.inj_1	40	0	synth with cache (only 1: easy).	0.00639200210571	1
Coq.ZArith.BinInt.Pos2Z.inj_xO	40	0.0	synth with cache (only 1: simpl; only 1: trivial).	0.0106778144836	2
Coq.ZArith.BinInt.Pos2Z.inj_xI	40	0.0	synth with cache (only 1: simpl; only 1: easy).	0.0100078582764	2
Coq.ZArith.BinInt.Pos2Z.inj_succ	40	0.0.7	synth with cache (only 1: simpl; only 1: f_equal; only 1: now destruct p).	0.0643000602722	21
Coq.ZArith.BinInt.Pos2Z.inj_add	40	0	synth with cache (only 1: reflexivity).	0.00722098350525	1
Coq.ZArith.BinInt.Pos2Z.inj_sub	40
Coq.ZArith.BinInt.Pos2Z.inj_sub_max	40
Coq.ZArith.BinInt.Pos2Z.inj_pred	40	2.1.1	synth with cache (only 1: intros H; only 1: simpl; only 1: now destruct p).	0.0424180030823	25
Coq.ZArith.BinInt.Pos2Z.inj_mul	40	0	synth with cache (only 1: reflexivity).	0.0071918964386	1
Coq.ZArith.BinInt.Pos2Z.inj_pow_pos	40	5.2.2.1.10.7	synth with cache (only 1: revert q; only 1: intro n; only 1: unfold Pos.pow; only 1: destruct (Pos.succ_pred_or n) as [->| <-]; only 1: easy; only 1: now apply Pos.iter_swap_gen).	18.0340969563	11122
Coq.ZArith.BinInt.Pos2Z.inj_pow	40	0	synth with cache (only 1: now apply Pos.iter_swap_gen).	0.00975799560547	1
Coq.ZArith.BinInt.Pos2Z.inj_square	40	0.1	synth with cache (only 1: simpl; only 1: easy).	0.0114650726318	3
Coq.ZArith.BinInt.Pos2Z.inj_compare	40	1.5.0	synth with cache (only 1: revert q; only 1: intros H; only 1: trivial).	0.487488031387	122
Coq.ZArith.BinInt.Pos2Z.inj_leb	40	0	synth with cache (only 1: reflexivity).	0.00841999053955	1
Coq.ZArith.BinInt.Pos2Z.inj_ltb	40	6.0.0	synth with cache (only 1: unfold Pos.ltb, Pos.lt; only 1: apply eq_true_iff_eq; only 1: reflexivity).	0.0157189369202	9
Coq.ZArith.BinInt.Pos2Z.inj_eqb	40	0.0.0	synth with cache (only 1: revert q; only 1: intros a; only 1: reflexivity).	0.0139989852905	3
Coq.ZArith.BinInt.Pos2Z.inj_max	40
Coq.ZArith.BinInt.Pos2Z.inj_min	40
Coq.ZArith.BinInt.Pos2Z.inj_sqrt	40	2	synth with cache (only 1: reflexivity).	0.00888085365295	3
Coq.ZArith.BinInt.Pos2Z.inj_gcd	40	3	synth with cache (only 1: reflexivity).	0.00823593139648	4
Coq.ZArith.BinInt.Pos2Z.inj_divide	40
Coq.ZArith.BinInt.Pos2Z.inj_testbit	40	0.1.0.0.1.1.0.1.1	synth with cache (only 1: simpl; only 1: destruct n as [| n| n]; only 1: now destruct 1 || intros _; only 1: simpl; only 1: now destruct a; only 1: now destruct 1 || intros _; only 1: unfold Z.testbit; only 1: f_equal; only 1: now destruct 1 || intros _).	0.648155212402	506
Coq.ZArith.BinInt.Pos2Z.inj_neg	40	0	synth with cache (only 1: congruence).	0.00787496566772	1
Coq.ZArith.BinInt.Pos2Z.inj_neg_iff	40	0.0.0.0	synth with cache (only 1: split; only 1: now injection 1; only 1: intros; only 1: now f_equal).	0.0210089683533	4
Coq.ZArith.BinInt.Pos2Z.inj_pos	40	0	synth with cache (only 1: now injection 1).	0.00779390335083	1
Coq.ZArith.BinInt.Pos2Z.inj_pos_iff	40	0.0.0.0	synth with cache (only 1: split; only 1: now injection 1; only 1: intros; only 1: now f_equal).	0.0200998783112	4
Coq.ZArith.BinInt.Pos2Z.neg_is_neg	40	2	synth with cache (only 1: now split).	0.00768208503723	3
Coq.ZArith.BinInt.Pos2Z.neg_is_nonpos	40	4	synth with cache (only 1: easy).	0.0114741325378	5
Coq.ZArith.BinInt.Pos2Z.pos_is_pos	40	0	synth with cache (only 1: reflexivity).	0.00857591629028	1
Coq.ZArith.BinInt.Pos2Z.pos_is_nonneg	40	0	synth with cache (only 1: easy).	0.00947713851929	1
Coq.ZArith.BinInt.Pos2Z.neg_le_pos	40	2	synth with cache (only 1: now f_equal).	0.0118420124054	3
Coq.ZArith.BinInt.Pos2Z.neg_lt_pos	40	0	synth with cache (only 1: easy).	0.00851607322693	1
Coq.ZArith.BinInt.Pos2Z.neg_le_neg	40
Coq.ZArith.BinInt.Pos2Z.neg_lt_neg	40	1.0.12.14.1	synth with cache (only 1: revert q; only 1: intros m Hm; only 1: symmetry; only 1: simpl; only 1: now rewrite <- Pos.compare_antisym).	34.8903348446	32408
Coq.ZArith.BinInt.Pos2Z.pos_le_pos	40	2.0	synth with cache (only 1: intros; only 1: now auto).	0.0105049610138	4
Coq.ZArith.BinInt.Pos2Z.pos_lt_pos	40	2.0.0	synth with cache (only 1: intros; only 1: unfold Z.lt; only 1: now destruct (p - q)%positive).	0.0191490650177	12
Coq.ZArith.BinInt.Pos2Z.neg_xO	40	0	synth with cache (only 1: reflexivity).	0.00905895233154	1
Coq.ZArith.BinInt.Pos2Z.neg_xI	40	0.0	synth with cache (only 1: simpl; only 1: trivial).	0.00968503952026	2
Coq.ZArith.BinInt.Pos2Z.pos_xO	40	0	synth with cache (only 1: reflexivity).	0.00705099105835	1
Coq.ZArith.BinInt.Pos2Z.pos_xI	40	0	synth with cache (only 1: reflexivity).	0.00739288330078	1
Coq.ZArith.BinInt.Pos2Z.opp_neg	40	1	synth with cache (only 1: split).	0.00767111778259	2
Coq.ZArith.BinInt.Pos2Z.opp_pos	40	0	synth with cache (only 1: reflexivity).	0.00795984268188	1
Coq.ZArith.BinInt.Pos2Z.add_neg_neg	40	0	synth with cache (only 1: reflexivity).	0.00881290435791	1
Coq.ZArith.BinInt.Pos2Z.add_pos_neg	40	1	synth with cache (only 1: trivial).	0.0077760219574	2
Coq.ZArith.BinInt.Pos2Z.add_neg_pos	40	0	synth with cache (only 1: reflexivity).	0.00764012336731	1
Coq.ZArith.BinInt.Pos2Z.add_pos_pos	40	0	synth with cache (only 1: reflexivity).	0.00687718391418	1
Coq.ZArith.BinInt.Pos2Z.divide_pos_neg_r	40
Coq.ZArith.BinInt.Pos2Z.divide_pos_neg_l	40
Coq.ZArith.BinInt.Pos2Z.testbit_neg	40	0.1.0.2.1.0	synth with cache (only 1: intro Hn; only 1: destruct n as [| n| n]; only 1: now destruct a as [| [| | ]| ]; only 1: simpl; only 1: now destruct n; only 1: now destruct Hn).	0.0926189422607	20
Coq.ZArith.BinInt.Pos2Z.testbit_pos	40	0	synth with cache (only 1: apply Z.testbit_Zpos).	0.00977396965027	1
Coq.ZArith.BinInt.Z2Pos.id	40
Coq.ZArith.BinInt.Z2Pos.inj	40
Coq.ZArith.BinInt.Z2Pos.inj_iff	40
Coq.ZArith.BinInt.Z2Pos.to_pos_nonpos	40
Coq.ZArith.BinInt.Z2Pos.inj_1	40	0	synth with cache (only 1: reflexivity).	0.00729703903198	1
Coq.ZArith.BinInt.Z2Pos.inj_double	40	2.3.0.3.0	synth with cache (only 1: destruct x; only 1: easy; only 1: trivial; only 1: intros H; only 1: easy).	0.502770900726	257
Coq.ZArith.BinInt.Z2Pos.inj_succ_double	40	0	synth with cache (only 1: now destruct x).	0.0135080814362	1
Coq.ZArith.BinInt.Z2Pos.inj_succ	40	0.3.6.1.4.1	synth with cache (only 1: destruct x; only 1: intros H; only 1: easy; only 1: now destruct p; only 1: intros H; only 1: easy).	2.87243700027	2106
Coq.ZArith.BinInt.Z2Pos.inj_add	40
Coq.ZArith.BinInt.Z2Pos.inj_sub	40
Coq.ZArith.BinInt.Z2Pos.inj_pred	40	2.3.3.1.27.105	synth with cache (only 1: inversion 1; only 1: unfold Z.succ, Z.pred; only 1: destruct x; only 1: easy; only 1: now destruct compare || now destruct p; only 1: now destruct p).	25.4268920422	52384
Coq.ZArith.BinInt.Z2Pos.inj_mul	40	0.0.0.0	synth with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.115350008011	4
Coq.ZArith.BinInt.Z2Pos.inj_pow	40
Coq.ZArith.BinInt.Z2Pos.inj_pow_pos	40
Coq.ZArith.BinInt.Z2Pos.inj_compare	40	0.0.0.2	synth with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.0472629070282	14
Coq.ZArith.BinInt.Z2Pos.inj_leb	40	0.0.0.0	synth with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.0394480228424	4
Coq.ZArith.BinInt.Z2Pos.inj_ltb	40	0.0.0.0	synth with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.03835105896	4
Coq.ZArith.BinInt.Z2Pos.inj_eqb	40	0.0.0.0	synth with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.0390141010284	4
Coq.ZArith.BinInt.Z2Pos.inj_max	40
Coq.ZArith.BinInt.Z2Pos.inj_min	40
Coq.ZArith.BinInt.Z2Pos.inj_sqrt	40	1.0.0.3.1	synth with cache (only 1: destruct x; only 1: trivial; only 1: simpl; only 1: trivial; only 1: easy).	0.0646169185638	32
Coq.ZArith.BinInt.Z2Pos.inj_gcd	40	0.0.0.1	synth with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.312625169754	72
Coq.ZArith.BinInt.Zplus_minus_eq	40
Coq.ZArith.BinInt.Zpos_eq	40	0.6	synth with cache (only 1: intros x y; only 1: congruence).	0.160866975784	45
Coq.ZArith.BinInt.ZL0	40	0.7	synth with cache (only 1: PeanoNat.Nat.nzsimpl; only 1: reflexivity).	0.107325077057	13
Coq.ZArith.BinInt.Zplus_diag_eq_mult_2	40	5.2.0	synth with cache (only 1: change 2 with (1 + 1); only 1: simpl; only 1: now Z.nzsimpl').	0.144566059113	18
Coq.ZArith.BinInt.Z_eq_mult	40	6.6.7	synth with cache (only 1: intros EQ; only 1: rewrite EQ; only 1: reflexivity).	4.84932494164	1639
Coq.ZArith.Zeven.Zeven_equiv	40
Coq.ZArith.Zeven.Zodd_equiv	40
Coq.ZArith.Zeven.Zeven_bool_iff	40	60	synth with cache (only 1: now destruct n as [| [| | ]| [| | ]]).	8.41255116463	8542
Coq.ZArith.Zeven.Zodd_bool_iff	40	62	synth with cache (only 1: now destruct n as [| [| | ]| [| | ]]).	2.96933603287	6720
Coq.ZArith.Zeven.Zodd_even_bool	40
Coq.ZArith.Zeven.Zeven_odd_bool	40
Coq.ZArith.Zeven.Zeven_odd_dec	40
Coq.ZArith.Zeven.Zeven_dec	40
Coq.ZArith.Zeven.Zodd_dec	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.34	synth with cache (only 1: destruct n; only 1: simpl; only 1: now left || now right; only 1: destruct p; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right; only 1: destruct p; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right).	6.22024393082	3821
Coq.ZArith.Zeven.Zeven_not_Zodd	40	8.6.4.5.0.3	synth with cache (only 1: intros NEQ; only 1: destruct n as [| p| p]; only 1: now Z.nzsimpl; only 1: simpl; only 1: now destruct p; only 1: now destruct p).	6.56937599182	6067
Coq.ZArith.Zeven.Zodd_not_Zeven	40	0.1.0.0.0.1.0.0.2.3.2.0.1.0	synth with cache (only 1: destruct n as [| p| p]; only 1: simpl; only 1: tauto; only 1: simpl; only 1: intros H; only 1: now destruct p; only 1: destruct p; only 1: simpl; only 1: now destruct p; only 1: simpl; only 1: tauto; only 1: simpl; only 1: intros H; only 1: tauto).	39.7333118916	22156
Coq.ZArith.Zeven.Zeven_Sn	40	6.6.0	synth with cache (only 1: boolify_even_odd; only 1: intros EQ; only 1: now destruct n as [| [| | ]| [| | ]]).	1.09039592743	560
Coq.ZArith.Zeven.Zodd_Sn	40
Coq.ZArith.Zeven.Zeven_pred	40	7.7.0	synth with cache (only 1: boolify_even_odd; only 1: intuition; only 1: now destruct n as [| [| | ]| [| | ]]).	0.84316110611	349
Coq.ZArith.Zeven.Zodd_pred	40
Coq.ZArith.Zeven.Zeven_div2	40	0	synth with cache (only 1: now destruct n as [| [| | ]| [| | ]]).	0.0306448936462	1
Coq.ZArith.Zeven.Zodd_div2	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros a; only 1: destruct n as [| [| | ]| [| | ]]; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy; only 1: simpl; only 1: now rewrite Pos.pred_double_succ; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy).	17.5109100342	3608
Coq.ZArith.Zeven.Zquot2_odd_eqn	40
Coq.ZArith.Zeven.Zeven_quot2	40	2.0.0.0.0	synth with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: intros Hn; only 1: rewrite (Zdiv2_odd_eqn n)  at 1; only 1: now destruct n as [| [p| p| ]| [p| p| ]]).	0.0950109958649	7
Coq.ZArith.Zeven.Zodd_quot2	40	0.4	synth with cache (only 1: simpl; only 1: now destruct n as [| [p| p| ]| [p| p| ]]).	1.14300489426	158
Coq.ZArith.Zeven.Zodd_quot2_neg	40	1.1.0.0.0.0	synth with cache (only 1: intros Hn Hn'; only 1: apply Zodd_bool_iff in Hn'; only 1: rewrite (Zquot2_odd_eqn n)  at 1; only 1: rewrite Hn'; only 1: rewrite (Zquot2_odd_eqn n)  at 1; only 1: now destruct n as [| [| | ]| [| | ]]).	0.551758050919	34
Coq.ZArith.Zeven.Zquot2_opp	40	2.2.3.0.1.10	synth with cache (only 1: destruct n; only 1: now Z.nzsimpl; only 1: simpl; only 1: now destruct p; only 1: simpl; only 1: now destruct p).	2.52434206009	1024
Coq.ZArith.Zeven.Zquot2_quot	40
Coq.ZArith.Zeven.Z_modulo_2	40
Coq.ZArith.Zeven.Zsplit2	40
Coq.ZArith.Zeven.Zeven_ex	40	0.0.0	synth with cache (only 1: intros Hn; only 1: exists (Z.div2 n); only 1: exact (Zeven_div2 n Hn)).	0.0341279506683	3
Coq.ZArith.Zeven.Zodd_ex	40	0.0.0.0.0	synth with cache (only 1: boolify_even_odd; only 1: intros Hn; only 1: exists (Z.div2 n); only 1: rewrite (Zdiv2_odd_eqn n)  at 1; only 1: now rewrite Hn).	0.0815200805664	5
Coq.ZArith.Zeven.Zeven_2p	40	1.3.0.0.10.16	synth with cache (only 1: Z.nzsimpl'; only 1: induction p as [p IHp| p IHp| ]; only 1: now Z.nzsimpl; only 1: now destruct p; only 1: simpl; only 1: now destruct p).	8.14674115181	5464
Coq.ZArith.Zeven.Zodd_2p_plus_1	40	0.0.0.0.1.1.6.3.8.1.17	synth with cache (only 1: simpl; only 1: boolify_even_odd; only 1: Z.nzsimpl; only 1: symmetry; only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now destruct p).	11.2723920345	4153
Coq.ZArith.Zeven.Zeven_plus_Zodd	40
Coq.ZArith.Zeven.Zeven_plus_Zeven	40
Coq.ZArith.Zeven.Zodd_plus_Zeven	40	0.0.0.0	synth with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: intros Ha Hb; only 1: now rewrite Z.odd_add, Ha, Hb).	0.0792140960693	4
Coq.ZArith.Zeven.Zodd_plus_Zodd	40	0.0.0.0	synth with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: intros Ha Hb; only 1: now rewrite Z.odd_add, Ha, Hb).	0.0835478305817	4
Coq.ZArith.Zeven.Zeven_mult_Zeven_l	40
Coq.ZArith.Zeven.Zeven_mult_Zeven_r	40
Coq.ZArith.Zeven.Zodd_mult_Zodd	40
Coq.ZArith.Zmisc.iter_nat_of_Z	40
Coq.ZArith.Zeuclid.ZEuclid.mod_wd	40	0.0.5	synth with cache (only 1: intros a a' Ha b b' Hb; only 1: Z.bitwise; only 1: now rewrite Ha, Hb).	0.0740518569946	23
Coq.ZArith.Zeuclid.ZEuclid.div_wd	40	1	synth with cache (only 1: congruence).	0.0357730388641	11
Coq.ZArith.Zeuclid.ZEuclid.div_mod	40
Coq.ZArith.Zeuclid.ZEuclid.mod_always_pos	40
Coq.ZArith.Zeuclid.ZEuclid.mod_bound_pos	40
Coq.ZArith.Zabs.Zabs_ind	40
Coq.ZArith.Zabs.Zabs_intro	40	0.0.0.1.0.12.4.0	synth with cache (only 1: intros a b; only 1: intros Hb; only 1: destruct b as [| b| b]; only 1: trivial; only 1: trivial; only 1: simpl; only 1: intros H; only 1: easy).	1.70807695389	2445
Coq.ZArith.Zabs.Zabs_dec	40
Coq.ZArith.Zabs.Zabs_spec	40	0.0.0.5.1.0.3.3	synth with cache (only 1: destruct x; only 1: left; only 1: now split; only 1: now left; only 1: right; only 1: split; only 1: easy; only 1: auto).	1.44019794464	1263
Coq.ZArith.Zabs.Zsgn_spec	40
Coq.ZArith.Zabs.Zabs_nat_le	40
Coq.ZArith.Zabs.Zabs_nat_lt	40
Coq.ZArith.Int.MoreInt.eqb_eq	40
Coq.ZArith.Int.MoreInt.eqb_neq	40
Coq.ZArith.Int.MoreInt.ltb_lt	40
Coq.ZArith.Int.MoreInt.ltb_nlt	40
Coq.ZArith.Int.MoreInt.leb_le	40
Coq.ZArith.Int.MoreInt.leb_nle	40
Coq.ZArith.Int.MoreInt.norm_ei_correct	40
Coq.ZArith.Int.MoreInt.norm_ez_correct	40
Coq.ZArith.Int.MoreInt.norm_ep_correct	40
Coq.ZArith.Int.MoreInt.norm_ep_correct2	40
Coq.ZArith.Int.Z_as_Int.gt_le_dec	40
Coq.ZArith.Int.Z_as_Int.ge_lt_dec	40
Coq.ZArith.Int.Z_as_Int.i2z_eq	40	4.3	synth with cache (only 1: intros H; only 1: auto with relations).	0.0299179553986	9
Coq.ZArith.Int.Z_as_Int.i2z_0	40	5	synth with cache (only 1: split).	0.0210840702057	6
Coq.ZArith.Int.Z_as_Int.i2z_1	40	0	synth with cache (only 1: reflexivity).	0.0246291160583	1
Coq.ZArith.Int.Z_as_Int.i2z_2	40	9	synth with cache (only 1: trivial).	0.02357006073	10
Coq.ZArith.Int.Z_as_Int.i2z_3	40	0	synth with cache (only 1: reflexivity).	0.0231029987335	1
Coq.ZArith.Int.Z_as_Int.i2z_add	40	8	synth with cache (only 1: now Z.nzsimpl).	1.8730070591	139
Coq.ZArith.Int.Z_as_Int.i2z_opp	40	1.1.0.2	synth with cache (only 1: nzinduct n; only 1: now Z.nzsimpl; only 1: intro; only 1: now Z.nzsimpl).	0.431432008743	23
Coq.ZArith.Int.Z_as_Int.i2z_sub	40	5	synth with cache (only 1: trivial).	0.0226099491119	6
Coq.ZArith.Int.Z_as_Int.i2z_mul	40	0	synth with cache (only 1: reflexivity).	0.0248539447784	1
Coq.ZArith.Int.Z_as_Int.i2z_max	40	0	synth with cache (only 1: reflexivity).	0.0230419635773	1
Coq.ZArith.Int.Z_as_Int.i2z_eqb	40	1.3	synth with cache (only 1: symmetry; only 1: trivial).	0.0339119434357	6
Coq.ZArith.Int.Z_as_Int.i2z_leb	40	0	synth with cache (only 1: reflexivity).	0.0245549678802	1
Coq.ZArith.Int.Z_as_Int.i2z_ltb	40	0	synth with cache (only 1: reflexivity).	0.0247669219971	1
Coq.ZArith.auxiliary.Zne_left	40
Coq.ZArith.auxiliary.Zegal_left	40	1	synth with cache (only 1: now rewrite <- Z.sub_move_0_r).	0.013729095459	2
Coq.ZArith.auxiliary.Zle_left	40
Coq.ZArith.auxiliary.Zle_left_rev	40	0	synth with cache (only 1: apply Z.le_0_sub).	0.00889110565186	1
Coq.ZArith.auxiliary.Zlt_left_rev	40	1	synth with cache (only 1: apply Z.lt_0_sub).	0.0100719928741	2
Coq.ZArith.auxiliary.Zlt_left_lt	40	2	synth with cache (only 1: apply Z.lt_0_sub).	0.00866103172302	3
Coq.ZArith.auxiliary.Zlt_left	40
Coq.ZArith.auxiliary.Zge_left	40	0.2	synth with cache (only 1: Z.swap_greater; only 1: apply Z.le_0_sub).	0.0182781219482	4
Coq.ZArith.auxiliary.Zgt_left	40	0.1.0.1.1	synth with cache (only 1: change (-1) with (- Z.succ 0); only 1: Z.swap_greater; only 1: intros; only 1: rewrite Z.add_shuffle0; only 1: now apply Z.le_0_sub, Z.le_succ_l, Z.lt_0_sub).	0.262125015259	103
Coq.ZArith.auxiliary.Zgt_left_gt	40	0.1	synth with cache (only 1: Z.swap_greater; only 1: apply Z.lt_0_sub).	0.0224151611328	3
Coq.ZArith.auxiliary.Zgt_left_rev	40	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.lt_0_sub).	0.0218820571899	2
Coq.ZArith.auxiliary.Zle_mult_approx	40
Coq.ZArith.auxiliary.Zmult_le_approx	40
Coq.ZArith.Zmax.Zmax_spec	40
Coq.ZArith.Zmax.Zmax_left	40
Coq.ZArith.Zmax.Zpos_max_1	40	13.4.0.0.0.5.5.1	synth with cache (only 1: unfold Z.max, Pos.max; only 1: simpl; only 1: case Pos.compare_spec; only 1: congruence; only 1: intros; only 1: trivial; only 1: intros H; only 1: now destruct p).	26.6541249752	14474
Coq.ZArith.Zmin.Zmin_spec	40
Coq.ZArith.Zmin.Zmin_irreducible	40
Coq.ZArith.Zmin.Zmin_le_prime_inf	40
Coq.ZArith.Zmin.Zpos_min_1	40	17	synth with cache (only 1: apply Pos.compare_succ_l || apply Pos.compare_succ_r || now destruct p || now destruct q).	21.2208089828	5878
Coq.ZArith.Zorder.Ztrichotomy_inf	40
Coq.ZArith.Zorder.Ztrichotomy	40	0.0.0.0.0.3.0.0	synth with cache (only 1: unfold Z.gt, Z.lt; only 1: generalize (Z.compare_eq n m); only 1: intro r; only 1: generalize (Z.compare_eq n m); only 1: destruct (n ?= m); only 1: auto; only 1: auto; only 1: auto).	0.609293937683	240
Coq.ZArith.Zorder.dec_Zne	40
Coq.ZArith.Zorder.dec_Zgt	40
Coq.ZArith.Zorder.dec_Zge	40	9.0.3.1.17.1.3	synth with cache (only 1: left; only 1: Z.swap_greater; only 1: nzinduct n m; only 1: Z.order; only 1: fix even_spec 1; only 1: intros; only 1: auto).	5.50517606735	6284
Coq.ZArith.Zorder.not_Zeq	40
Coq.ZArith.Zorder.Zle_not_lt	40	0.3	synth with cache (only 1: intros; only 1: Z.order).	0.172904968262	51
Coq.ZArith.Zorder.Zlt_not_le	40	3	synth with cache (only 1: intuition Z.order).	0.118673086166	32
Coq.ZArith.Zorder.Zle_not_gt	40	0.5	synth with cache (only 1: unfold Z.le, Z.min; only 1: trivial).	0.107553005219	35
Coq.ZArith.Zorder.Zgt_not_le	40	1.7	synth with cache (only 1: intro H; only 1: auto).	0.0994441509247	31
Coq.ZArith.Zorder.Znot_ge_lt	40	5.5	synth with cache (only 1: Z.swap_greater; only 1: intuition Z.order).	0.331494808197	130
Coq.ZArith.Zorder.Znot_lt_ge	40	2.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.le_ngt).	0.044881105423	4
Coq.ZArith.Zorder.Znot_gt_le	40	0	synth with cache (only 1: trivial).	0.00660395622253	1
Coq.ZArith.Zorder.Znot_le_gt	40	0.2	synth with cache (only 1: Z.swap_greater; only 1: apply Z.nle_gt).	0.0447549819946	4
Coq.ZArith.Zorder.not_Zne	40
Coq.ZArith.Zorder.Zgt_asym	40	2.2.1	synth with cache (only 1: Z.swap_greater; only 1: intro H; only 1: Z.order).	0.199233055115	45
Coq.ZArith.Zorder.Zgt_irrefl	40	3	synth with cache (only 1: now Z.nzsimpl').	0.0230851173401	4
Coq.ZArith.Zorder.Zle_lt_or_eq	40
Coq.ZArith.Zorder.Zgt_trans	40	0.0.0	synth with cache (only 1: Z.swap_greater; only 1: intros; only 1: now transitivity m).	0.0351829528809	3
Coq.ZArith.Zorder.Zle_gt_trans	40	0.0.0	synth with cache (only 1: Z.swap_greater; only 1: intros; only 1: Z.Private_Tac.order || (right; Z.Private_Tac.order) || (left; Z.Private_Tac.order)).	0.0284831523895	3
Coq.ZArith.Zorder.Zgt_le_trans	40	0.0	synth with cache (only 1: Z.swap_greater; only 1: Z.order).	0.0219748020172	2
Coq.ZArith.Zorder.Zge_trans	40	2.0	synth with cache (only 1: Z.swap_greater; only 1: Z.order).	0.0280730724335	4
Coq.ZArith.Zorder.Zsucc_le_compat	40
Coq.ZArith.Zorder.Zsucc_lt_compat	40	0.0.4.3.4	synth with cache (only 1: unfold Z.lt; only 1: intro H; only 1: reflexivity || destruct H; only 1: rewrite <- 2!Z.add_1_l; only 1: apply Z.add_compare_mono_l).	1.01902699471	521
Coq.ZArith.Zorder.Zsucc_gt_compat	40	0.2	synth with cache (only 1: Z.swap_greater; only 1: apply Z.succ_lt_mono).	0.0210788249969	4
Coq.ZArith.Zorder.Zsucc_gt_reg	40	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.succ_lt_mono).	0.0196671485901	2
Coq.ZArith.Zorder.Zsucc_le_reg	40
Coq.ZArith.Zorder.Zsucc_lt_reg	40	0	synth with cache (only 1: apply Z.succ_lt_mono).	0.00813102722168	1
Coq.ZArith.Zorder.Zgt_succ	40	1.8	synth with cache (only 1: Z.swap_greater; only 1: apply Z.lt_succ_diag_r).	0.149415969849	29
Coq.ZArith.Zorder.Znot_le_succ	40	1.30	synth with cache (only 1: apply Z.nle_gt; only 1: apply Z.lt_succ_diag_r).	0.52618598938	741
Coq.ZArith.Zorder.Zgt_le_succ	40
Coq.ZArith.Zorder.Zle_gt_succ	40
Coq.ZArith.Zorder.Zle_lt_succ	40	0	synth with cache (only 1: apply Z.lt_succ_r).	0.0781419277191	1
Coq.ZArith.Zorder.Zlt_le_succ	40	0	synth with cache (only 1: apply Z.le_succ_l).	0.00745701789856	1
Coq.ZArith.Zorder.Zgt_succ_le	40	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.lt_succ_r).	0.0162069797516	2
Coq.ZArith.Zorder.Zlt_succ_le	40	0	synth with cache (only 1: apply Z.lt_succ_r).	0.00888395309448	1
Coq.ZArith.Zorder.Zle_succ_gt	40	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.le_succ_l).	0.0172798633575	2
Coq.ZArith.Zorder.Zle_succ_le	40
Coq.ZArith.Zorder.Zgt_succ_pred	40
Coq.ZArith.Zorder.Zlt_succ_pred	40	0	synth with cache (only 1: apply Z.lt_succ_lt_pred).	0.00915217399597	1
Coq.ZArith.Zorder.Zlt_0_le_0_pred	40
Coq.ZArith.Zorder.Zgt_0_le_0_pred	40	0.1	synth with cache (only 1: Z.swap_greater; only 1: apply Z.lt_le_pred).	0.0161859989166	3
Coq.ZArith.Zorder.Zle_neg_pos	40	0.1	synth with cache (only 1: intros a ?; only 1: easy).	0.0191030502319	3
Coq.ZArith.Zorder.Zgt_pos_0	40	1.0	synth with cache (only 1: intros; only 1: easy).	0.0139849185944	3
Coq.ZArith.Zorder.Zle_0_pos	40	0.0	synth with cache (only 1: intros n; only 1: easy).	0.0146508216858	2
Coq.ZArith.Zorder.Zlt_neg_0	40	0.0	synth with cache (only 1: intros; only 1: reflexivity).	0.0109331607819	2
Coq.ZArith.Zorder.Zle_0_nat	40	1.1.16.15	synth with cache (only 1: unfold Z.le; only 1: fix odd_spec 1; only 1: simpl; only 1: trivial).	3.34085392952	6305
Coq.ZArith.Zorder.Zgt_succ_gt_or_eq	40
Coq.ZArith.Zorder.Zplus_gt_compat_l	40
Coq.ZArith.Zorder.Zplus_gt_compat_r	40
Coq.ZArith.Zorder.Zplus_le_compat_l	40
Coq.ZArith.Zorder.Zplus_le_compat_r	40
Coq.ZArith.Zorder.Zplus_lt_compat_l	40	1	synth with cache (only 1: apply Z.add_lt_mono_l).	0.00968503952026	2
Coq.ZArith.Zorder.Zplus_lt_compat_r	40	0	synth with cache (only 1: apply Z.add_lt_mono_r).	0.0104041099548	1
Coq.ZArith.Zorder.Zplus_le_reg_l	40	0	synth with cache (only 1: apply Z.add_le_mono_l).	0.00915098190308	1
Coq.ZArith.Zorder.Zplus_le_reg_r	40	1	synth with cache (only 1: apply Z.add_le_mono_r).	0.0115211009979	2
Coq.ZArith.Zorder.Zplus_lt_reg_l	40	2	synth with cache (only 1: apply Z.add_lt_mono_l).	0.0312678813934	12
Coq.ZArith.Zorder.Zplus_lt_reg_r	40	2	synth with cache (only 1: apply Z.add_lt_mono_r).	0.0308690071106	11
Coq.ZArith.Zorder.Zplus_gt_reg_l	40	1.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.add_lt_mono_l).	0.0282959938049	3
Coq.ZArith.Zorder.Zplus_gt_reg_r	40	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.add_lt_mono_r).	0.0218720436096	2
Coq.ZArith.Zorder.Zmult_le_compat_r	40
Coq.ZArith.Zorder.Zmult_le_compat_l	40
Coq.ZArith.Zorder.Zmult_lt_compat_r	40
Coq.ZArith.Zorder.Zmult_gt_compat_r	40	0.4.0.0.1.0.1.14	synth with cache (only 1: destruct p as [| p| p]; only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r; only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r; only 1: Z.swap_greater; only 1: symmetry; only 1: discriminate).	2.43636703491	1192
Coq.ZArith.Zorder.Zmult_gt_0_lt_compat_r	40	0.1	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).	0.0192868709564	3
Coq.ZArith.Zorder.Zmult_gt_0_le_compat_r	40
Coq.ZArith.Zorder.Zmult_lt_0_le_compat_r	40	0	synth with cache (only 1: apply Z.mul_le_mono_pos_r).	0.00940203666687	1
Coq.ZArith.Zorder.Zmult_gt_0_lt_compat_l	40
Coq.ZArith.Zorder.Zmult_lt_compat_l	40	0	synth with cache (only 1: apply Z.mul_lt_mono_pos_l).	0.00961780548096	1
Coq.ZArith.Zorder.Zmult_gt_compat_l	40	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_l).	0.0290849208832	2
Coq.ZArith.Zorder.Zmult_ge_compat_r	40	7.0.2	synth with cache (only 1: Z.swap_greater; only 1: intros; only 1: now apply Z.mul_le_mono_nonneg_r).	0.360231876373	120
Coq.ZArith.Zorder.Zmult_ge_compat_l	40	2.0.0	synth with cache (only 1: Z.swap_greater; only 1: intros; only 1: now apply Z.mul_le_mono_nonneg_l).	0.0340669155121	5
Coq.ZArith.Zorder.Zmult_ge_compat	40
Coq.ZArith.Zorder.Zmult_le_compat	40	5.0	synth with cache (only 1: intros; only 1: now apply Z.mul_le_mono_nonneg).	0.0683739185333	15
Coq.ZArith.Zorder.Zmult_gt_0_lt_reg_r	40	1.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).	0.0190138816833	3
Coq.ZArith.Zorder.Zmult_lt_reg_r	40	0	synth with cache (only 1: apply Z.mul_lt_mono_pos_r).	0.00866508483887	1
Coq.ZArith.Zorder.Zmult_le_reg_r	40	2.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_le_mono_pos_r).	0.0196440219879	4
Coq.ZArith.Zorder.Zmult_lt_0_le_reg_r	40	0	synth with cache (only 1: apply Z.mul_le_mono_pos_r).	0.00976800918579	1
Coq.ZArith.Zorder.Zmult_ge_reg_r	40	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_le_mono_pos_r).	0.0265870094299	2
Coq.ZArith.Zorder.Zmult_gt_reg_r	40	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).	0.028342962265	2
Coq.ZArith.Zorder.Zmult_lt_compat	40
Coq.ZArith.Zorder.Zmult_lt_compat2	40
Coq.ZArith.Zorder.Zmult_gt_0_compat	40	8.3.4	synth with cache (only 1: Z.swap_greater; only 1: intros; only 1: Z.order_pos).	0.493290901184	371
Coq.ZArith.Zorder.Zmult_gt_0_le_0_compat	40	0.2.1.2.0.7	synth with cache (only 1: destruct m as [| m| m]; only 1: Z.swap_greater; only 1: now repeat split; only 1: simpl; only 1: now destruct n; only 1: easy || now destruct y).	1.1230340004	747
Coq.ZArith.Zorder.Zmult_le_0_reg_r	40	9.0.8.0.0.1.4	synth with cache (only 1: destruct m as [| m| m]; only 1: intros; only 1: Z.order; only 1: Z.swap_greater; only 1: now destruct 1 || intros _; only 1: Z.swap_greater; only 1: now destruct n).	30.9130630493	26093
Coq.ZArith.Zorder.Zmult_lt_0_reg_r	40
Coq.ZArith.Zorder.Zmult_gt_0_lt_0_reg_r	40	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_pos_cancel_r).	0.0569589138031	2
Coq.ZArith.Zorder.Zmult_gt_0_reg_l	40	1.5.0.1.18	synth with cache (only 1: destruct n as [| n| n]; only 1: easy || now destruct y; only 1: now destruct 1 || intros _; only 1: now destruct m; only 1: easy || now destruct y).	3.6649711132	3265
Coq.ZArith.Zorder.Zlt_square_simpl	40
Coq.ZArith.Zorder.Zgt_square_simpl	40	0.1	synth with cache (only 1: Z.swap_greater; only 1: apply Z.square_lt_simpl_nonneg).	0.0267808437347	3
Coq.ZArith.Zorder.Zeq_plus_swap	40
Coq.ZArith.Zorder.Zlt_0_minus_lt	40
Coq.ZArith.Zorder.Zle_0_minus_le	40
Coq.ZArith.Zorder.Zle_minus_le_0	40	0	synth with cache (only 1: apply Z.le_0_sub).	0.00807309150696	1
Coq.ZArith.Zbool.Zle_cases	40
Coq.ZArith.Zbool.Zlt_cases	40
Coq.ZArith.Zbool.Zge_cases	40
Coq.ZArith.Zbool.Zgt_cases	40
Coq.ZArith.Zbool.Zle_bool_imp_le	40	3.0.0.2	synth with cache (only 1: case Z.leb_spec; only 1: intro H; only 1: now try Z.order'; only 1: now destruct n).	0.138748884201	25
Coq.ZArith.Zbool.Zle_imp_le_bool	40	0.0.0.12.1.1	synth with cache (only 1: unfold Z.geb, Z.leb; only 1: unfold Z.le, Z.max; only 1: case Z.compare; only 1: trivial; only 1: trivial; only 1: easy').	2.0281329155	1174
Coq.ZArith.Zbool.Zle_bool_antisym	40
Coq.ZArith.Zbool.Zle_bool_trans	40
Coq.ZArith.Zbool.Zle_bool_total	40
Coq.ZArith.Zbool.Zle_bool_plus_mono	40
Coq.ZArith.Zbool.Zone_pos	40	2	synth with cache (only 1: now split).	0.0222761631012	3
Coq.ZArith.Zbool.Zone_min_pos	40	9.0	synth with cache (only 1: intros Hn; only 1: now destruct n as [| [| | ]| [| | ]]).	0.379689216614	62
Coq.ZArith.Zbool.Zle_is_le_bool	40	0.0.0.7.1	synth with cache (only 1: unfold Z.leb, Z.le; only 1: case Z.compare; only 1: easy'; only 1: easy'; only 1: easy').	0.475548028946	98
Coq.ZArith.Zbool.Zge_is_le_bool	40	2.0.10.0	synth with cache (only 1: symmetry; only 1: case Z.leb_spec; only 1: now Z.swap_greater; only 1: now destruct n).	2.28692698479	789
Coq.ZArith.Zbool.Zlt_is_lt_bool	40
Coq.ZArith.Zbool.Zgt_is_gt_bool	40	3.2.11.10	synth with cache (only 1: unfold Z.gtb, Z.ltb; only 1: revert m; only 1: fix odd_spec 1; only 1: easy).	17.6339139938	9773
Coq.ZArith.Zbool.Zlt_is_le_bool	40
Coq.ZArith.Zbool.Zgt_is_le_bool	40	0.0.0	synth with cache (only 1: rewrite Z.leb_le; only 1: Z.swap_greater; only 1: apply Z.lt_le_pred).	0.0480251312256	3
Coq.ZArith.Zbool.Zeq_is_eq_bool	40
Coq.ZArith.Zbool.Zeq_bool_eq	40	6.52	synth with cache (only 1: fix even_specT 1; only 1: auto).	4.04362988472	7208
Coq.ZArith.Zbool.Zeq_bool_neq	40
Coq.ZArith.Zbool.Zeq_bool_if	40
Coq.ZArith.ZArith_dec.Dcompare_inf	40	0.0.0.2.0.2	synth with cache (only 1: intro r; only 1: destruct r; only 1: auto; only 1: auto; only 1: right; only 1: trivial).	0.109220981598	22
Coq.ZArith.ZArith_dec.Zcompare_rect	40	7.0.2.0	synth with cache (only 1: destruct (n ?= m); only 1: now intuition; only 1: now intuition; only 1: intuition).	8.60416197777	1830
Coq.ZArith.ZArith_dec.Zcompare_rec	40	0.0.0.0.0	synth with cache (only 1: intros H1 H2 H3; only 1: destruct (n ?= m); only 1: auto; only 1: auto; only 1: auto).	0.0830268859863	5
Coq.ZArith.ZArith_dec.decidability.Z_lt_dec	40	19.47	synth with cache (only 1: unfold Z.lt, Z.le; only 1: decide equality).	9.88800096512	13179
Coq.ZArith.ZArith_dec.decidability.Z_le_dec	40
Coq.ZArith.ZArith_dec.decidability.Z_gt_dec	40
Coq.ZArith.ZArith_dec.decidability.Z_ge_dec	40
Coq.ZArith.ZArith_dec.decidability.Z_lt_ge_dec	40
Coq.ZArith.ZArith_dec.decidability.Z_lt_le_dec	40
Coq.ZArith.ZArith_dec.decidability.Z_le_gt_dec	40
Coq.ZArith.ZArith_dec.decidability.Z_gt_le_dec	40	4.0.2.0.0	synth with cache (only 1: elim Z_le_dec; only 1: auto with arith; only 1: constructor; only 1: Z.swap_greater; only 1: now apply Z.nle_gt).	3.95189094543	305
Coq.ZArith.ZArith_dec.decidability.Z_ge_lt_dec	40	4.1.0.0.1	synth with cache (only 1: elim Z_lt_ge_dec; only 1: right; only 1: trivial; only 1: constructor; only 1: trivial).	0.495085000992	106
Coq.ZArith.ZArith_dec.decidability.Z_le_lt_eq_dec	40
Coq.ZArith.ZArith_dec.Zlt_cotrans	40
Coq.ZArith.ZArith_dec.Zlt_cotrans_pos	40
Coq.ZArith.ZArith_dec.Zlt_cotrans_neg	40
Coq.ZArith.ZArith_dec.not_Zeq_inf	40
Coq.ZArith.ZArith_dec.Z_dec	40	1.2.0.0.0.0.1.0.0.0.0	synth with cache (only 1: intros n m; only 1: unfold Z.gt, Z.lt; only 1: generalize (Z.compare_eq n m); only 1: destruct (n ?= m); only 1: right; only 1: auto; only 1: left; only 1: left; only 1: auto; only 1: left; only 1: auto).	6.47218203545	1674
Coq.ZArith.ZArith_dec.Z_dec'	40
Coq.ZArith.ZArith_dec.Z_zerop	40	0.0.7.5	synth with cache (only 1: intro H; only 1: decide equality; only 1: apply Pos.eq_dec; only 1: apply Pos.eq_dec).	1.15166091919	300
Coq.ZArith.Zpow_alt.Piter_mul_acc	40
Coq.ZArith.Zpow_alt.Piter_op_square	40
Coq.ZArith.Zpow_alt.Zpower_equiv	40
Coq.ZArith.Zpow_alt.Zpower_alt_0_r	40	0	synth with cache (only 1: reflexivity).	0.0199019908905	1
Coq.ZArith.Zpow_alt.Zpower_alt_succ_r	40
Coq.ZArith.Zpow_alt.Zpower_alt_neg_r	40	0.1.0.2.1.0.4.0	synth with cache (only 1: intros Hab; only 1: symmetry; only 1: destruct b as [| p| p]; only 1: simpl; only 1: easy; only 1: unfold Zpower_alt, Z.pow, Z.pow_pos; only 1: easy; only 1: easy).	0.808866024017	350
Coq.ZArith.Zpow_alt.Zpower_alt_Ppow	40
Coq.omega.OmegaLemmas.Zred_factor0	40	0	synth with cache (only 1: now Z.nzsimpl).	0.0820889472961	1
Coq.omega.OmegaLemmas.Zred_factor1	40	2.0.0	synth with cache (only 1: rewrite Z.mul_comm; only 1: change 2 with (1 + 1); only 1: apply Z.add_diag).	0.0197949409485	5
Coq.omega.OmegaLemmas.Zred_factor2	40
Coq.omega.OmegaLemmas.Zred_factor3	40	6	synth with cache (only 1: now Z.nzsimpl).	0.551174879074	71
Coq.omega.OmegaLemmas.Zred_factor4	40
Coq.omega.OmegaLemmas.Zred_factor5	40	1	synth with cache (only 1: now Z.nzsimpl).	0.0401811599731	2
Coq.omega.OmegaLemmas.Zred_factor6	40	2.0.0.0.0	synth with cache (only 1: nzinduct n; only 1: now Z.nzsimpl; only 1: intro; only 1: Z.nzsimpl; only 1: now Z.nzsimpl).	0.16330909729	23
Coq.omega.OmegaLemmas.new_var	40	4.35	synth with cache (only 1: intro n; only 1: now exists n).	1.78797602654	3388
Coq.omega.OmegaLemmas.OMEGA1	40	1.9	synth with cache (only 1: intros Hn Hm; only 1: Z.order).	0.0298690795898	34
Coq.omega.OmegaLemmas.OMEGA2	40	2.0	synth with cache (only 1: intros Hn Hm; only 1: Z.order_pos).	0.0203559398651	4
Coq.omega.OmegaLemmas.OMEGA3	40
Coq.omega.OmegaLemmas.OMEGA4	40
Coq.omega.OmegaLemmas.OMEGA5	40	2.2.11	synth with cache (only 1: intro EQ; only 1: intros ->; only 1: now Z.nzsimpl).	0.331673145294	206
Coq.omega.OmegaLemmas.OMEGA6	40	0.2.1.12	synth with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy).	1.76632285118	402
Coq.omega.OmegaLemmas.OMEGA7	40
Coq.omega.OmegaLemmas.OMEGA8	40	2.4.0.2	synth with cache (only 1: destruct x; only 1: easy; only 1: easy || now destruct y; only 1: now destruct 1 || now destruct 2).	0.397866010666	187
Coq.omega.OmegaLemmas.OMEGA9	40
Coq.omega.OmegaLemmas.OMEGA10	40
Coq.omega.OmegaLemmas.OMEGA11	40
Coq.omega.OmegaLemmas.OMEGA12	40	0.0	synth with cache (only 1: rewrite ?Z.mul_add_distr_r, ?Z.mul_add_distr_l, ?Z.mul_assoc; only 1: apply Z.add_shuffle3).	0.0152518749237	2
Coq.omega.OmegaLemmas.OMEGA13	40
Coq.omega.OmegaLemmas.OMEGA14	40	0.0.0	synth with cache (only 1: rewrite Z.add_shuffle1; only 1: rewrite <- Z.mul_add_distr_l, <- Pos2Z.opp_neg, Z.add_opp_diag_r; only 1: now Z.nzsimpl).	0.0806939601898	3
Coq.omega.OmegaLemmas.OMEGA15	40	0.0.0.0	synth with cache (only 1: rewrite ?Z.mul_add_distr_r, ?Z.mul_add_distr_l, ?Z.mul_assoc; only 1: rewrite <- !Z.add_assoc; only 1: f_equal; only 1: apply Z.add_shuffle3).	0.02423787117	4
Coq.omega.OmegaLemmas.OMEGA16	40	5.9	synth with cache (only 1: rewrite ?Z.mul_add_distr_r, ?Z.mul_add_distr_l, ?Z.mul_assoc; only 1: Morphisms.f_equiv).	0.226358175278	106
Coq.omega.OmegaLemmas.OMEGA17	40	1.0	synth with cache (only 1: intros H ->; only 1: now Z.nzsimpl).	0.0414910316467	3
Coq.omega.OmegaLemmas.OMEGA18	40	6.5.1.0	synth with cache (only 1: unfold Zne, not; only 1: intros; only 1: rewrite H1 in H; only 1: now try split).	0.548978090286	415
Coq.omega.OmegaLemmas.OMEGA19	40
Coq.omega.OmegaLemmas.OMEGA20	40	0.0.0.0	synth with cache (only 1: unfold Zne, not; only 1: intros NE EQ; only 1: subst; only 1: now Z.nzsimpl).	0.0763170719147	4
Coq.omega.OmegaLemmas.intro_Z	40
Coq.Program.Wf.Well_founded.Fix_F_eq	40	2.5.11	synth with cache (only 1: intro p; only 1: destruct r using Acc_inv_dep; only 1: auto).	0.446995019913	553
Coq.Program.Wf.Well_founded.Fix_F_inv	40
Coq.Program.Wf.Well_founded.Fix_eq	40
Coq.Program.Wf.Well_founded.fix_sub_eq	40	0.0.0.0.0.0	synth with cache (only 1: intro x; only 1: unfold Fix_sub; only 1: rewrite <- Fix_F_eq; only 1: apply F_ext; only 1: intros; only 1: apply Fix_F_inv).	0.0528800487518	6
Coq.Program.Wf.Measure_well_founded.measure_wf	40
Coq.Program.Wf.Fix_rects.F_unfold	40	0.0	synth with cache (only 1: destruct r using Acc_inv_dep; only 1: auto).	0.0167398452759	2
Coq.Program.Wf.Fix_rects.Fix_F_sub_rect	40	2.4.1.3.3.4	synth with cache (only 1: intro x; only 1: induction (Rwf x); only 1: induction (Rwf x); only 1: intros; only 1: rewrite <- Init.Wf.Fix_F_eq; only 1: auto).	4.43737912178	3010
Coq.Program.Wf.Fix_rects.eq_Fix_F_sub	40	3.0.0	synth with cache (only 1: induction (Rwf x); only 1: rewrite <- 2!Fix_F_eq; only 1: auto).	0.0292232036591	6
Coq.Program.Wf.Fix_rects.Fix_sub_rect	40
Coq.Program.Wf.WfExtensionality.fix_sub_eq_ext	40
Coq.Program.Subset.subset_eq	40
Coq.Program.Subset.match_eq_rewrite	40	0.2.5.2.16	synth with cache (only 1: intros A x y Heq; only 1: intros H; only 1: destruct H; only 1: destruct e; only 1: reflexivity).	1.12376213074	2647
Coq.Program.Equality.JMeq_eq_refl	40	3	synth with cache (only 1: apply UIP_refl).	0.019257068634	4
Coq.Program.Equality.UIP_refl_refl	40	24	synth with cache (only 1: apply UIP).	3.27876782417	4575
Coq.Program.Equality.inj_pairT2_refl	40	20	synth with cache (only 1: apply UIP).	0.123126029968	187
Coq.Program.Equality.solution_left	40	0.0.9	synth with cache (only 1: intros y H; only 1: destruct 1; only 1: exact y).	0.189255952835	130
Coq.Program.Equality.solution_right	40	2.0.0	synth with cache (only 1: intros; only 1: subst; only 1: assumption).	0.0326659679413	5
Coq.Program.Equality.deletion	40	6	synth with cache (only 1: trivial).	0.0204432010651	7
Coq.Program.Equality.simplification_heq	40	1.22.10.1	synth with cache (only 1: intros h1 h2; only 1: apply h1; only 1: subst; only 1: trivial).	1.34789013863	2465
Coq.Program.Equality.simplification_existT2	40	0.0.0.5.0	synth with cache (only 1: intros H J; only 1: apply H; only 1: apply eq_dep_eq; only 1: apply eq_sigT_eq_dep; only 1: assumption).	0.0481531620026	10
Coq.Program.Equality.simplification_existT1	40	0.13.2.4.12.34	synth with cache (only 1: intro eq_dep_eq; only 1: intro H; only 1: apply eq_dep_eq; only 1: dependent rewrite H; only 1: trivial; only 1: assumption).	10.7294139862	22927
Coq.Program.Equality.simplification_K	40	0.0.0	synth with cache (only 1: intros; only 1: rewrite UIP_refl; only 1: assumption).	0.0348339080811	3
Coq.Program.Combinators.compose_id_left	40	0.0	synth with cache (only 1: intros; only 1: apply (eta_expansion_dep f)).	0.027941942215	2
Coq.Program.Combinators.compose_id_right	40	0.0	synth with cache (only 1: intros; only 1: reflexivity).	0.0239322185516	2
Coq.Program.Combinators.compose_assoc	40	0.0.0	synth with cache (only 1: intros A B C Hl Hr; only 1: intros n m; only 1: reflexivity).	0.0337810516357	3
Coq.Program.Combinators.flip_flip	40	0.0	synth with cache (only 1: intros; only 1: reflexivity).	0.0239760875702	2
Coq.Program.Combinators.curry_uncurry	40	0.0	synth with cache (only 1: intros; only 1: reflexivity).	0.0271711349487	2
Coq.Program.Combinators.uncurry_curry	40
Coq.Sorting.Mergesort.Sort.Sorted_merge	40
Coq.Sorting.Mergesort.Sort.Permuted_merge	40
Coq.Sorting.Mergesort.Sort.Sorted_merge_list_to_stack	40
Coq.Sorting.Mergesort.Sort.Permuted_merge_list_to_stack	40
Coq.Sorting.Mergesort.Sort.Sorted_merge_stack	40
Coq.Sorting.Mergesort.Sort.Permuted_merge_stack	40
Coq.Sorting.Mergesort.Sort.Sorted_iter_merge	40
Coq.Sorting.Mergesort.Sort.Permuted_iter_merge	40
Coq.Sorting.Mergesort.Sort.LocallySorted_sort	40
Coq.Sorting.Mergesort.Sort.Sorted_sort	40	2.25	synth with cache (only 1: fix odd_spec 1; only 1: auto).	2.43671107292	1897
Coq.Sorting.Mergesort.Sort.Permuted_sort	40
Coq.Sorting.Mergesort.Sort.StronglySorted_sort	40
Coq.Sorting.Mergesort.NatOrder.leb_total	40
Coq.Sorting.Permutation.Permutation.Permutation_nil	40
Coq.Sorting.Permutation.Permutation.Permutation_nil_cons	40
Coq.Sorting.Permutation.Permutation.Permutation_refl	40	0.1.6	synth with cache (only 1: induction l; only 1: discriminate || auto; only 1: now repeat constructor).	0.0425097942352	22
Coq.Sorting.Permutation.Permutation.Permutation_refl'	40	0.1.7.13.0.27	synth with cache (only 1: intros l2' l H; only 1: subst; only 1: induction l as [| h l]; only 1: auto with datatypes; only 1: constructor; only 1: exact IHl).	24.9445309639	33650
Coq.Sorting.Permutation.Permutation.Permutation_sym	40
Coq.Sorting.Permutation.Permutation.Permutation_trans	40	1.4.10	synth with cache (only 1: intro l; only 1: intros ? ?; only 1: apply perm_trans with (l' := l')).	2.09393596649	1570
Coq.Sorting.Permutation.Permutation_morph_transp	40
Coq.Sorting.Permutation.Permutation_cons	40	4.4	synth with cache (only 1: intros a a' Ha n; only 1: firstorder  (subst; auto)).	0.105803012848	27
Coq.Sorting.Permutation.Permutation_properties.Permutation_in	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_in'	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_app_tail	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_app_head	40	1.0.1.7.1.3	synth with cache (only 1: intros l; only 1: intros; only 1: induction l; only 1: firstorder; only 1: simpl; only 1: auto).	6.46755504608	1743
Coq.Sorting.Permutation.Permutation_properties.Permutation_app	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_app'	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_add_inside	40	0.3	synth with cache (only 1: intros x y l1 l2 Hin; only 1: now intros -> ->).	0.0636668205261	21
Coq.Sorting.Permutation.Permutation_properties.Permutation_cons_append	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_app_comm	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_app_rot	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_app_swap_app	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_app_middle	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_cons_app	40	0.1.6.3.2.13	synth with cache (only 1: intros l2; only 1: intros l l' Hperm; only 1: intros; only 1: rewrite H; only 1: rewrite app_comm_cons, Permutation_cons_append; only 1: now rewrite <- app_assoc).	28.1662979126	18809
Coq.Sorting.Permutation.Permutation_properties.Permutation_Add	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_middle	40	0.0.4	synth with cache (only 1: intros; only 1: rewrite app_comm_cons, Permutation_cons_append; only 1: now rewrite <- app_assoc).	0.0414209365845	13
Coq.Sorting.Permutation.Permutation_properties.Permutation_middle2	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_elt	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_rev	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_rev'	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_length	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_length'	40	0.0.0.0.0.0.0.2.8.14	synth with cache (only 1: intro l; only 1: intro n; only 1: induction 1; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: now transitivity (length l')).	23.470015049	10896
Coq.Sorting.Permutation.Permutation_properties.Permutation_Forall	40	4.5.0.22	synth with cache (only 1: repeat red; only 1: intros l l' Hperm; only 1: rewrite !Forall_forall; only 1: eauto using Permutation_in).	5.96869015694	4903
Coq.Sorting.Permutation.Permutation_properties.Permutation_Exists	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_Forall2	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_ind_bis	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_nil_app_cons	40	2.1.13.2.8.1	synth with cache (only 1: intros; only 1: intro HF; only 1: apply Permutation_nil in HF; only 1: destruct l as [| a0 l]; only 1: discriminate; only 1: discriminate).	27.7518119812	24499
Coq.Sorting.Permutation.Permutation_properties.Permutation_Add_inv	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_app_inv	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_cons_inv	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_cons_app_inv	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_app_inv_l	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_app_inv_r	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_app_inv_m	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_length_1_inv	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_length_1	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_length_2_inv	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_length_2	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_vs_elt_inv	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_vs_cons_inv	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_vs_cons_cons_inv	40
Coq.Sorting.Permutation.Permutation_properties.NoDup_Permutation	40
Coq.Sorting.Permutation.Permutation_properties.NoDup_Permutation_bis	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_NoDup	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_NoDup'	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_repeat	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_count_occ	40
Coq.Sorting.Permutation.Permutation_map.Permutation_map	40
Coq.Sorting.Permutation.Permutation_map.Permutation_map'	40
Coq.Sorting.Permutation.Permutation_map.Permutation_map_inv	40
Coq.Sorting.Permutation.Permutation_map.Permutation_image	40
Coq.Sorting.Permutation.Permutation_map.Permutation_elt_map_inv	40
Coq.Sorting.Permutation.Permutation_map.Permutation_flat_map	40
Coq.Sorting.Permutation.nat_bijection_Permutation	40
Coq.Sorting.Permutation.Permutation_alt.adapt_injective	40
Coq.Sorting.Permutation.Permutation_alt.adapt_ok	40
Coq.Sorting.Permutation.Permutation_alt.Permutation_nth_error	40
Coq.Sorting.Permutation.Permutation_alt.Permutation_nth_error_bis	40
Coq.Sorting.Permutation.Permutation_alt.Permutation_nth	40
Coq.Sorting.Permutation.Permutation_list_sum	40
Coq.Sorting.Permutation.Permutation_list_max	40
Coq.Sorting.Permutation.Permutation_transp.Permutation_transp_sym	40
Coq.Sorting.Permutation.Permutation_transp.Permutation_transp_equiv	40
Coq.Sorting.Permutation.Permutation_transp.Permutation_transp_cons	40
Coq.Sorting.Permutation.Permutation_transp.Permutation_Permutation_transp	40
Coq.Sorting.Permutation.Permutation_transp.Permutation_ind_transp	40
Coq.Sorting.Sorted.defs.HdRel_inv	40	2.0	synth with cache (only 1: inversion 1; only 1: auto).	0.0313940048218	4
Coq.Sorting.Sorted.defs.Sorted_inv	40	0.0.2	synth with cache (only 1: intros x Hin; only 1: inversion 1; only 1: auto).	0.0389590263367	5
Coq.Sorting.Sorted.defs.Sorted_rect	40
Coq.Sorting.Sorted.defs.Sorted_LocallySorted_iff	40
Coq.Sorting.Sorted.defs.StronglySorted_inv	40	0.0.0	synth with cache (only 1: intros; only 1: inversion H; only 1: auto).	0.110960006714	3
Coq.Sorting.Sorted.defs.StronglySorted_rect	40
Coq.Sorting.Sorted.defs.StronglySorted_rec	40	0.0.0.0	synth with cache (only 1: intros P ? ? l; only 1: induction l; only 1: firstorder using StronglySorted_inv; only 1: firstorder using StronglySorted_inv).	0.0469999313354	4
Coq.Sorting.Sorted.defs.StronglySorted_Sorted	40
Coq.Sorting.Sorted.defs.Sorted_extends	40
Coq.Sorting.Sorted.defs.Sorted_StronglySorted	40
Coq.Sorting.CPermutation.CPermutation.CPermutation_Permutation	40
Coq.Sorting.CPermutation.CPermutation.CPermutation_nil	40
Coq.Sorting.CPermutation.CPermutation.CPermutation_nil_cons	40
Coq.Sorting.CPermutation.CPermutation.CPermutation_nil_app_cons	40
Coq.Sorting.CPermutation.CPermutation.CPermutation_split	40
Coq.Sorting.CPermutation.CPermutation.CPermutation_refl	40
Coq.Sorting.CPermutation.CPermutation.CPermutation_refl'	40	3.12.4.2	synth with cache (only 1: intros l1; only 1: intros l HF; only 1: subst; only 1: now rewrite <- (app_nil_l l)  at 1; rewrite <- (app_nil_r l)  at 2).	3.65136098862	2182
Coq.Sorting.CPermutation.CPermutation.CPermutation_sym	40	2.0.0	synth with cache (only 1: intros l l' Hperm; only 1: induction Hperm; only 1: split).	0.0431931018829	5
Coq.Sorting.CPermutation.CPermutation.CPermutation_trans	40
Coq.Sorting.CPermutation.CPermutation_properties.CPermutation_app	40	4.0	synth with cache (only 1: intros l tl tl' Hperm; only 1: eauto using Add_head, Add_app).	0.0570428371429	6
Coq.Sorting.CPermutation.CPermutation_properties.CPermutation_app_comm	40	1.2	synth with cache (only 1: intros; only 1: auto).	0.0405340194702	5
Coq.Sorting.CPermutation.CPermutation_properties.CPermutation_app_rot	40	0.0	synth with cache (only 1: intros l1 l2 l3; only 1: now rewrite (app_assoc l2)).	0.0443949699402	2
Coq.Sorting.CPermutation.CPermutation_properties.CPermutation_cons_append	40
Coq.Sorting.CPermutation.CPermutation_properties.CPermutation_morph_cons	40
Coq.Sorting.CPermutation.CPermutation_properties.CPermutation_length_1	40
Coq.Sorting.CPermutation.CPermutation_properties.CPermutation_length_1_inv	40
Coq.Sorting.CPermutation.CPermutation_properties.CPermutation_swap	40
Coq.Sorting.CPermutation.CPermutation_properties.CPermutation_length_2	40
Coq.Sorting.CPermutation.CPermutation_properties.CPermutation_length_2_inv	40
Coq.Sorting.CPermutation.CPermutation_properties.CPermutation_vs_elt_inv	40
Coq.Sorting.CPermutation.CPermutation_properties.CPermutation_vs_cons_inv	40
Coq.Sorting.CPermutation.CPermutation_rev	40
Coq.Sorting.CPermutation.CPermutation_in	40
Coq.Sorting.CPermutation.CPermutation_in'	40	0.0.4.0.4.0	synth with cache (only 1: repeat red; only 1: intros f g l; only 1: intros; only 1: rewrite H; only 1: subst; only 1: eauto using Permutation_in).	7.5439350605	1107
Coq.Sorting.CPermutation.CPermutation_map	40
Coq.Sorting.CPermutation.CPermutation_map_inv	40
Coq.Sorting.CPermutation.CPermutation_image	40
Coq.Sorting.CPermutation.CPermutation_Forall	40
Coq.Sorting.CPermutation.CPermutation_Exists	40
Coq.Sorting.CPermutation.CPermutation_Forall2	40
Coq.Sorting.CPermutation.CPermutation_rewrite_rev	40	2	synth with cache (only 1: now intros ->).	0.201621055603	21
Coq.Init.Wf.Well_founded.Acc_inv	40	4.1.20	synth with cache (only 1: intro H; only 1: destruct 1; only 1: assumption).	0.714178085327	822
Coq.Init.Wf.Well_founded.well_founded_induction_type	40
Coq.Init.Wf.Well_founded.well_founded_induction	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply Acc_rect; only 1: auto; only 1: auto).	0.0386469364166	4
Coq.Init.Wf.Well_founded.well_founded_ind	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply Acc_rect; only 1: auto; only 1: auto).	0.040657043457	4
Coq.Init.Wf.Well_founded.FixPoint.Fix_F_eq	40
Coq.Init.Wf.Well_founded.FixPoint.Fix_F_inv	40
Coq.Init.Wf.Well_founded.FixPoint.Fix_eq	40
Coq.Init.Wf.Well_founded_2.well_founded_induction_type_2	40
Coq.Init.Tactics.decide_left	40	20.0.5.0.4.3.6.0	synth with cache (only 1: intro z; only 1: intro H; only 1: destruct H; only 1: intros A P H; only 1: auto; only 1: intro H; only 1: apply False_rec; only 1: auto).	16.3331539631	54622
Coq.Init.Tactics.decide_right	40	1.1.0.0	synth with cache (only 1: intros C decide H P H0; only 1: destruct decide; only 1: contradiction; only 1: apply H0).	0.0151410102844	6
Coq.Init.Peano.pred_Sn	40	2.0.0.0.0.0	synth with cache (only 1: intro n; only 1: induction n; only 1: simpl; only 1: split; only 1: simpl; only 1: split).	0.0304780006409	12
Coq.Init.Peano.not_eq_S	40	5.3.0	synth with cache (only 1: red; only 1: intro A; only 1: auto).	0.169215917587	155
Coq.Init.Peano.O_S	40	2.1	synth with cache (only 1: intro n; only 1: discriminate).	0.00799918174744	5
Coq.Init.Peano.n_Sn	40	5.1.0.2	synth with cache (only 1: intro n; only 1: induction n; only 1: discriminate; only 1: auto).	0.0746910572052	90
Coq.Init.Peano.plus_n_O	40	0.2.0.0.1	synth with cache (only 1: intro n; only 1: induction n; only 1: auto; only 1: simpl; only 1: auto).	0.0278182029724	15
Coq.Init.Peano.plus_O_n	40	0.0.0.0.0.0	synth with cache (only 1: intro n; only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0156979560852	6
Coq.Init.Peano.plus_n_Sm	40	0.0.1.4.3	synth with cache (only 1: intro n; only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: auto).	0.158634901047	109
Coq.Init.Peano.plus_Sn_m	40	0.0.0.0.0.0	synth with cache (only 1: intros n m; only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0185930728912	6
Coq.Init.Peano.mult_n_O	40	1.0.0.0.0.0	synth with cache (only 1: intro n; only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0203900337219	7
Coq.Init.Peano.mult_n_Sm	40
Coq.Init.Peano.le_pred	40
Coq.Init.Peano.le_S_n	40
Coq.Init.Peano.le_0_n	40	0.2.2.1	synth with cache (only 1: intro n; only 1: induction n; only 1: auto; only 1: auto).	0.0104429721832	9
Coq.Init.Peano.le_n_S	40	1.0.0.0.0	synth with cache (only 1: induction 1 as [| m _]; only 1: auto; only 1: destruct m; only 1: auto; only 1: auto).	0.0149519443512	6
Coq.Init.Peano.nat_case	40	1.2.6.5	synth with cache (only 1: intros n m; only 1: induction n; only 1: auto; only 1: auto).	0.272336959839	617
Coq.Init.Peano.nat_double_ind	40	0.2.11.2.0.9	synth with cache (only 1: induction n; only 1: intro n; only 1: auto; only 1: destruct m; only 1: auto; only 1: auto).	4.30877304077	8177
Coq.Init.Peano.max_l	40
Coq.Init.Peano.max_r	40
Coq.Init.Peano.min_l	40	0.0.0.0.1.0.0.0.2.0.0.0	synth with cache (only 1: revert m; only 1: induction n as [| n IHn]; only 1: intro m; only 1: trivial; only 1: intro m; only 1: destruct m; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	12.2253861427	6596
Coq.Init.Peano.min_r	40	0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0	synth with cache (only 1: revert m; only 1: induction n as [| n IHn]; only 1: intro m; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: inversion 1; only 1: intro m; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	13.7936239243	8500
Coq.Init.Peano.nat_rect_succ_r	40	4.3.0.0.0.8	synth with cache (only 1: induction n as [| p H]; only 1: simpl; only 1: trivial; only 1: simpl; only 1: destruct H; only 1: trivial).	1.96864819527	3121
Coq.Init.Peano.nat_rect_plus	40	0.1.1.3.0.3.1	synth with cache (only 1: intro n; only 1: intros; only 1: induction n as [| n IHn]; only 1: trivial; only 1: simpl; only 1: rewrite <- ?IHn; only 1: trivial).	5.06406211853	3361
Coq.Init.Byte.of_bits_to_bits	40
Coq.Init.Byte.to_bits_of_bits	40
Coq.Init.Datatypes.andb_prop	40
Coq.Init.Datatypes.andb_true_intro	40	1.115.3	synth with cache (only 1: destruct 1; only 1: subst; only 1: repeat split).	27.687005043	167805
Coq.Init.Datatypes.eq_true_ind_r	40	0.31	synth with cache (only 1: destruct 2; only 1: assumption).	0.558552980423	1193
Coq.Init.Datatypes.eq_true_rec_r	40	0.0.0	synth with cache (only 1: intros P b H H0; only 1: destruct H0 in H; only 1: assumption).	0.0264899730682	3
Coq.Init.Datatypes.eq_true_rect_r	40	0.0.0	synth with cache (only 1: intros P b H H0; only 1: destruct H0 in H; only 1: assumption).	0.0266699790955	3
Coq.Init.Datatypes.surjective_pairing	40	0.0	synth with cache (only 1: destruct p; only 1: reflexivity).	0.0237832069397	2
Coq.Init.Datatypes.injective_projections	40
Coq.Init.Datatypes.pair_equal_spec	40
Coq.Init.Datatypes.rew_pair	40	0.0.0	synth with cache (only 1: destruct H; only 1: simpl; only 1: reflexivity).	0.0340809822083	3
Coq.Init.Datatypes.comparison_eq_stable	40
Coq.Init.Datatypes.CompOpp_involutive	40
Coq.Init.Datatypes.CompOpp_inj	40	0.1.1.1.0.1.1.1.0.5.2	synth with cache (only 1: intro H; only 1: destruct c, c'; only 1: reflexivity || destruct H; only 1: discriminate; only 1: discriminate; only 1: discriminate; only 1: reflexivity || destruct H; only 1: discriminate; only 1: discriminate; only 1: discriminate; only 1: reflexivity || destruct H).	38.7515609264	37774
Coq.Init.Datatypes.CompOpp_iff	40
Coq.Init.Datatypes.CompareSpec2Type	40
Coq.Init.Datatypes.CompSpec2Type	40
Coq.Init.Logic.Conjunction.proj1	40
Coq.Init.Logic.Conjunction.proj2	40	0.0	synth with cache (only 1: destruct 1; only 1: trivial).	0.00332593917847	2
Coq.Init.Logic.Equivalence.iff_refl	40
Coq.Init.Logic.Equivalence.iff_trans	40	2.2.0.0.2	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: split; only 1: auto; only 1: auto).	0.0134961605072	41
Coq.Init.Logic.Equivalence.iff_sym	40	0.0.0.3	synth with cache (only 1: destruct 1; only 1: split; only 1: auto; only 1: auto).	0.00572204589844	12
Coq.Init.Logic.and_iff_compat_l	40	2.0.0.0.2.0.1.0.0.4	synth with cache (only 1: destruct 1; only 1: split; only 1: destruct 1; only 1: split; only 1: trivial; only 1: auto; only 1: destruct 1; only 1: split; only 1: trivial; only 1: auto).	0.123290061951	759
Coq.Init.Logic.and_iff_compat_r	40	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: intros [? ?]; only 1: split; only 1: apply Hl; only 1: assumption; only 1: assumption; only 1: intros [? ?]; only 1: split; only 1: apply Hr; only 1: assumption; only 1: assumption).	0.082839012146	290
Coq.Init.Logic.or_iff_compat_l	40
Coq.Init.Logic.or_iff_compat_r	40	0.1.0.0.1.0.0.1.0.0.1.0.0.0	synth with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: intros [?| ?]; only 1: left; only 1: apply Hl; only 1: assumption; only 1: right; only 1: assumption; only 1: intros [?| ?]; only 1: left; only 1: apply Hr; only 1: assumption; only 1: right; only 1: assumption).	0.672329902649	2280
Coq.Init.Logic.imp_iff_compat_l	40	9.9.0.0	synth with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: auto; only 1: auto).	0.167824983597	746
Coq.Init.Logic.imp_iff_compat_r	40	2.1.2.0.2.1.1.0.0.0	synth with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: intros H ?; only 1: apply H; only 1: apply Hr; only 1: assumption; only 1: intros H ?; only 1: apply H; only 1: apply Hl; only 1: assumption).	0.433487176895	1298
Coq.Init.Logic.not_iff_compat	40	1.1.0.0	synth with cache (only 1: intros A B [H1 H2]; only 1: split; only 1: auto; only 1: auto).	0.0108618736267	6
Coq.Init.Logic.neg_false	40	1.1.11.0.0.0	synth with cache (only 1: split; only 1: split; only 1: auto; only 1: destruct 1; only 1: intros [? ?]; only 1: auto).	0.309890031815	1106
Coq.Init.Logic.and_cancel_l	40
Coq.Init.Logic.and_cancel_r	40	0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros A B C Hl Hr; only 1: split; only 1: intros [HypL HypR]; only 1: split; only 1: intros; only 1: apply HypL; only 1: split; only 1: assumption; only 1: apply Hl; only 1: assumption; only 1: intros; only 1: apply HypR; only 1: split; only 1: assumption; only 1: apply Hr; only 1: assumption; only 1: intros [HypL HypR]; only 1: split; only 1: intros [? ?]; only 1: split; only 1: apply HypL; only 1: assumption; only 1: apply Hl; only 1: assumption; only 1: intros [? ?]; only 1: split; only 1: apply HypR; only 1: assumption; only 1: apply Hr; only 1: assumption).	36.4137380123	63227
Coq.Init.Logic.and_comm	40	0.0.0.0.0.0.0.0.2	synth with cache (only 1: split; only 1: intros [? ?]; only 1: split; only 1: trivial; only 1: trivial; only 1: intros [? ?]; only 1: split; only 1: trivial; only 1: trivial).	0.133022069931	92
Coq.Init.Logic.and_assoc	40
Coq.Init.Logic.or_cancel_l	40
Coq.Init.Logic.or_cancel_r	40
Coq.Init.Logic.or_comm	40	0.0.0.1.0.0.0.0.1.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros [?| ?]; only 1: right; only 1: assumption; only 1: left; only 1: assumption; only 1: intros [?| ?]; only 1: right; only 1: assumption; only 1: left; only 1: assumption).	0.499373912811	640
Coq.Init.Logic.or_assoc	40
Coq.Init.Logic.iff_and	40	1.0	synth with cache (only 1: intros; only 1: assumption).	0.0107359886169	3
Coq.Init.Logic.iff_to_and	40	1.0.0.0.0.1.2	synth with cache (only 1: split; only 1: intros [? ?]; only 1: split; only 1: trivial; only 1: trivial; only 1: intro H; only 1: assumption).	0.187216997147	138
Coq.Init.Logic.universal_quantification.inst	40	4.2	synth with cache (only 1: intro H1; only 1: auto).	0.0141050815582	11
Coq.Init.Logic.universal_quantification.gen	40	0.0	synth with cache (only 1: unfold all; only 1: auto).	0.0114560127258	2
Coq.Init.Logic.Logic_lemmas.absurd	40	0.7.2.0	synth with cache (only 1: intro A; only 1: intros H ?; only 1: destruct 1; only 1: assumption).	0.129634141922	260
Coq.Init.Logic.Logic_lemmas.equality.eq_sym	40	1.2	synth with cache (only 1: destruct 1; only 1: split).	0.011745929718	5
Coq.Init.Logic.Logic_lemmas.equality.eq_trans	40	0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: trivial).	0.0153760910034	3
Coq.Init.Logic.Logic_lemmas.equality.eq_trans_r	40	0.0	synth with cache (only 1: destruct 2; only 1: trivial).	0.0125048160553	2
Coq.Init.Logic.Logic_lemmas.equality.f_equal	40	0.0	synth with cache (only 1: destruct 1; only 1: trivial).	0.0122990608215	2
Coq.Init.Logic.Logic_lemmas.equality.not_eq_sym	40	29.1	synth with cache (only 1: destruct 2; only 1: auto).	0.613328933716	1794
Coq.Init.Logic.Logic_lemmas.eq_sind_r	40	2.1.1	synth with cache (only 1: intros ? ? ? Fl Fr; only 1: destruct 1; only 1: auto).	0.0157861709595	7
Coq.Init.Logic.Logic_lemmas.eq_ind_r	40	0.0.0	synth with cache (only 1: intros A x P H y H0; only 1: elim eq_sym with (1 := H0); only 1: assumption).	0.0159049034119	3
Coq.Init.Logic.Logic_lemmas.eq_rec_r	40	0.0.0	synth with cache (only 1: intros A x P H y H0; only 1: elim eq_sym with (1 := H0); only 1: assumption).	0.0159080028534	3
Coq.Init.Logic.Logic_lemmas.eq_rect_r	40	0.0.0	synth with cache (only 1: intros A x P H y H0; only 1: elim eq_sym with (1 := H0); only 1: assumption).	0.016294002533	3
Coq.Init.Logic.equality_dep.f_equal_dep	40
Coq.Init.Logic.f_equal_dep2	40	0.1.0	synth with cache (only 1: destruct H; only 1: destruct 1; only 1: reflexivity).	0.0228011608124	4
Coq.Init.Logic.rew_opp_r	40	0.0	synth with cache (only 1: destruct H; only 1: reflexivity).	0.0156378746033	2
Coq.Init.Logic.rew_opp_l	40	0.0	synth with cache (only 1: destruct H; only 1: reflexivity).	0.0162329673767	2
Coq.Init.Logic.f_equal2	40	0.2.0	synth with cache (only 1: destruct 2; only 1: destruct H; only 1: trivial).	0.0182929039001	5
Coq.Init.Logic.f_equal3	40	0.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	0.0212550163269	4
Coq.Init.Logic.f_equal4	40	0.0.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	0.0259730815887	5
Coq.Init.Logic.f_equal5	40	0.0.0.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	0.0333878993988	6
Coq.Init.Logic.f_equal_compose	40
Coq.Init.Logic.eq_trans_refl_l	40	0.0	synth with cache (only 1: destruct e; only 1: reflexivity).	0.0163798332214	2
Coq.Init.Logic.eq_trans_refl_r	40	0.0	synth with cache (only 1: destruct e; only 1: reflexivity).	0.0170290470123	2
Coq.Init.Logic.eq_sym_involutive	40	0.0	synth with cache (only 1: destruct e; only 1: reflexivity).	0.0164129734039	2
Coq.Init.Logic.eq_trans_sym_inv_l	40	0.0	synth with cache (only 1: destruct e; only 1: reflexivity).	0.0157830715179	2
Coq.Init.Logic.eq_trans_sym_inv_r	40	0.0	synth with cache (only 1: destruct e; only 1: reflexivity).	0.0166940689087	2
Coq.Init.Logic.eq_trans_assoc	40
Coq.Init.Logic.rew_map	40	0.1	synth with cache (only 1: destruct H; only 1: reflexivity).	0.0210452079773	3
Coq.Init.Logic.eq_trans_map	40
Coq.Init.Logic.map_subst	40	0.0	synth with cache (only 1: destruct H; only 1: reflexivity).	0.0192921161652	2
Coq.Init.Logic.map_subst_map	40	0.0	synth with cache (only 1: destruct H; only 1: reflexivity).	0.0219461917877	2
Coq.Init.Logic.rew_swap	40	0.0	synth with cache (only 1: destruct H, 1; only 1: reflexivity).	0.0187709331512	2
Coq.Init.Logic.rew_compose	40	2.0	synth with cache (only 1: destruct H2; only 1: reflexivity).	0.019504070282	4
Coq.Init.Logic.eq_id_comm_l	40
Coq.Init.Logic.eq_id_comm_r	40
Coq.Init.Logic.eq_refl_map_distr	40	0	synth with cache (only 1: reflexivity).	0.0151031017303	1
Coq.Init.Logic.eq_trans_map_distr	40	1.5.5.1	synth with cache (only 1: destruct e; only 1: rewrite eq_trans_refl_l; only 1: rewrite eq_trans_refl_l; only 1: reflexivity).	0.446843147278	319
Coq.Init.Logic.eq_sym_map_distr	40	0.3	synth with cache (only 1: destruct e; only 1: reflexivity).	0.023689031601	5
Coq.Init.Logic.eq_trans_sym_distr	40	0.1.0	synth with cache (only 1: destruct e'; only 1: destruct e; only 1: reflexivity).	0.142085075378	4
Coq.Init.Logic.eq_trans_rew_distr	40	0.2	synth with cache (only 1: destruct e'; only 1: reflexivity).	0.0240910053253	4
Coq.Init.Logic.rew_const	40	0.3	synth with cache (only 1: destruct e; only 1: reflexivity).	0.0228791236877	5
Coq.Init.Logic.unique_existence	40
Coq.Init.Logic.forall_exists_unique_domain_coincide	40
Coq.Init.Logic.forall_exists_coincide_unique_domain	40
Coq.Init.Logic.exists_inhabited	40	2.3.10	synth with cache (only 1: intros A B []; only 1: split; only 1: trivial).	0.41158413887	844
Coq.Init.Logic.inhabited_covariant	40	0.2	synth with cache (only 1: destruct 2; only 1: auto).	0.02485704422	21
Coq.Init.Logic.eq_stepl	40	0.0.1	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: trivial).	0.0312168598175	18
Coq.Init.Logic.iff_stepl	40	0.0.0.0	synth with cache (only 1: intros A B C [H1 H2] [H3 H4]; only 1: split; only 1: auto; only 1: auto).	0.0257360935211	4
Coq.Init.Logic.ex_eta	40
Coq.Init.Logic.ex2_eta	40	0.1	synth with cache (only 1: destruct p; only 1: reflexivity).	0.0227479934692	3
Coq.Init.Logic.ex.eq_ex_intro_uncurried	40
Coq.Init.Logic.ex.eq_ex_uncurried	40
Coq.Init.Logic.ex.eq_ex_eta	40	0.0.5.0	synth with cache (only 1: destruct u as [u1 u2], v as [v1 v2]; only 1: destruct p; only 1: simpl in *; only 1: reflexivity).	0.0456581115723	13
Coq.Init.Logic.ex.eq_ex_uncurried_iff	40
Coq.Init.Logic.ex.rew_ex	40	0.0.1.5	synth with cache (only 1: apply eq_ex_uncurried; only 1: destruct H; only 1: exists eq_refl; only 1: reflexivity).	0.139634132385	24
Coq.Init.Logic.ex2.eq_ex_intro2_uncurried	40
Coq.Init.Logic.ex2.eq_ex2_uncurried	40	0.0.0.2.1.1	synth with cache (only 1: destruct pqr as [p q r]; only 1: destruct u as [u1 u2], v as [v1 v2]; only 1: simpl in *; only 1: destruct r, q, p; only 1: simpl; only 1: reflexivity).	0.125931024551	44
Coq.Init.Logic.ex2.eq_ex2_uncurried_iff	40	7.2.0.0.3.0.0.0	synth with cache (only 1: split; only 1: intro; only 1: subst; only 1: exists eq_refl; only 1: reflexivity; only 1: reflexivity; only 1: destruct u as [u1 u2 u3], v as [v1 v2 v3]; only 1: apply eq_ex_intro2_uncurried).	5.84942317009	3190
Coq.Init.Logic.ex2.eq_ex2_eta	40	0.1	synth with cache (only 1: destruct p, u; only 1: reflexivity).	0.0404222011566	12
Coq.Init.Logic.ex2.rew_ex2	40	0.0	synth with cache (only 1: destruct H, u; only 1: reflexivity).	0.0348429679871	2
Coq.Init.Specif.sigT_eta	40	0.0	synth with cache (only 1: destruct p; only 1: reflexivity).	0.0147891044617	2
Coq.Init.Specif.sig_eta	40	0.0	synth with cache (only 1: destruct p; only 1: reflexivity).	0.0151610374451	2
Coq.Init.Specif.sigT2_eta	40	0.0	synth with cache (only 1: destruct p; only 1: reflexivity).	0.0149149894714	2
Coq.Init.Specif.sig2_eta	40	0.0	synth with cache (only 1: destruct p; only 1: reflexivity).	0.0166420936584	2
Coq.Init.Specif.exists_to_inhabited_sig	40	0.0.2.9.8	synth with cache (only 1: intro; only 1: destruct H; only 1: split; only 1: exists x; only 1: trivial).	0.28796505928	602
Coq.Init.Specif.inhabited_sig_to_exists	40	0.0.0.73.55	synth with cache (only 1: intro H1; only 1: elim H1; only 1: intros [x y]; only 1: exists x; only 1: assumption).	4.1694829464	41784
Coq.Init.Specif.ProdSigT.sigT_prod_sigT	40	1.2	synth with cache (only 1: destruct p; only 1: reflexivity).	0.0127050876617	5
Coq.Init.Specif.ProdSigT.prod_sigT_prod	40
Coq.Init.Specif.sigT.eq_existT_uncurried	40	0.1.0.0	synth with cache (only 1: destruct pq as [p q]; only 1: destruct q; only 1: destruct p; only 1: reflexivity).	0.0263350009918	5
Coq.Init.Specif.sigT.eq_sigT_uncurried	40	0.1.0.0.0.0	synth with cache (only 1: destruct u as [u1 u2], v as [v1 v2]; only 1: simpl in *; only 1: destruct pq as [p q]; only 1: destruct q; only 1: destruct p; only 1: reflexivity).	0.0395641326904	7
Coq.Init.Specif.sigT.eq_existT_curried	40	0.1.0	synth with cache (only 1: destruct q; only 1: destruct p; only 1: reflexivity).	0.0198969841003	4
Coq.Init.Specif.sigT.eq_existT_curried_map	40	0.6.2	synth with cache (only 1: destruct q; only 1: destruct p; only 1: reflexivity).	0.0656261444092	31
Coq.Init.Specif.sigT.eq_existT_curried_trans	40	0.29.0	synth with cache (only 1: destruct p, q; only 1: subst; only 1: reflexivity).	1.19300794601	1759
Coq.Init.Specif.sigT.eq_existT_curried_congr	40	0.15.30.2	synth with cache (only 1: destruct q; only 1: destruct 1; only 1: subst; only 1: reflexivity).	13.3601398468	20473
Coq.Init.Specif.sigT.eq_sigT_uncurried_iff	40	15.6.0.1.0.0.0	synth with cache (only 1: split; only 1: intro; only 1: subst; only 1: exists eq_refl; only 1: reflexivity; only 1: destruct u as [u1 u2], v as [v1 v2]; only 1: apply eq_sigT_uncurried).	6.17577719688	7654
Coq.Init.Specif.sigT.eq_sigT_rect	40
Coq.Init.Specif.sigT.rew_sigT	40	0.0	synth with cache (only 1: destruct H, u; only 1: reflexivity).	0.0193920135498	2
Coq.Init.Specif.sig.eq_exist_uncurried	40	0.1.0.0	synth with cache (only 1: destruct pq as [p q]; only 1: destruct q; only 1: destruct p; only 1: reflexivity).	0.0268669128418	5
Coq.Init.Specif.sig.eq_sig_uncurried	40	0.1.0.0.0.0	synth with cache (only 1: destruct u as [u1 u2], v as [v1 v2]; only 1: simpl in *; only 1: destruct pq as [p q]; only 1: destruct q; only 1: destruct p; only 1: reflexivity).	0.0421311855316	7
Coq.Init.Specif.sig.eq_exist_curried	40	0.1.0	synth with cache (only 1: destruct q; only 1: destruct p; only 1: reflexivity).	0.0205600261688	4
Coq.Init.Specif.sig.eq_sig_rect	40
Coq.Init.Specif.sig.eq_sig_uncurried_iff	40	14.7.0.1.0.0.0	synth with cache (only 1: split; only 1: intro; only 1: subst; only 1: exists eq_refl; only 1: reflexivity; only 1: destruct u as [u1 u2], v as [v1 v2]; only 1: apply eq_sig_uncurried).	10.0417850018	9548
Coq.Init.Specif.sig.rew_sig	40	0.0	synth with cache (only 1: destruct H, u; only 1: reflexivity).	0.0179469585419	2
Coq.Init.Specif.sigT2.eq_existT2_uncurried	40	0.0.0.0	synth with cache (only 1: destruct pqr as [p q r]; only 1: destruct r, q, p; only 1: simpl; only 1: reflexivity).	0.026780128479	4
Coq.Init.Specif.sigT2.eq_sigT2_uncurried	40	0.0.0.0.0.0	synth with cache (only 1: destruct u as [u1 u2 u3], v as [v1 v2 v3]; only 1: simpl in *; only 1: destruct pqr as [p q r]; only 1: destruct r, q, p; only 1: simpl; only 1: reflexivity).	0.054398059845	6
Coq.Init.Specif.sigT2.eq_existT2_curried	40	0.0.0	synth with cache (only 1: destruct r, q, p; only 1: simpl; only 1: reflexivity).	0.0205800533295	3
Coq.Init.Specif.sigT2.eq_sigT2_uncurried_iff	40	11.7.0.0.1.0.0.0	synth with cache (only 1: split; only 1: intro; only 1: subst; only 1: exists eq_refl; only 1: reflexivity; only 1: reflexivity; only 1: destruct u as [u1 u2 u3], v as [v1 v2 v3]; only 1: apply eq_existT2_uncurried).	18.0182750225	10361
Coq.Init.Specif.sigT2.eq_sigT2_rect	40
Coq.Init.Specif.sigT2.rew_sigT2	40	0.0	synth with cache (only 1: destruct H, u; only 1: reflexivity).	0.0249288082123	2
Coq.Init.Specif.sig2.eq_exist2_uncurried	40	0.0.1.0	synth with cache (only 1: destruct pqr as [p q r]; only 1: destruct r, q, p; only 1: simpl; only 1: reflexivity).	0.0286769866943	5
Coq.Init.Specif.sig2.eq_sig2_uncurried	40	0.0.0.0.0.0	synth with cache (only 1: destruct u as [u1 u2 u3], v as [v1 v2 v3]; only 1: simpl in *; only 1: destruct pqr as [p q r]; only 1: destruct r, q, p; only 1: simpl; only 1: reflexivity).	0.0751280784607	6
Coq.Init.Specif.sig2.eq_exist2_curried	40	0.0.0	synth with cache (only 1: destruct r, q, p; only 1: simpl; only 1: reflexivity).	0.019690990448	3
Coq.Init.Specif.sig2.eq_sig2_uncurried_iff	40	13.9.0.0.1.0.0.0	synth with cache (only 1: split; only 1: intro; only 1: subst; only 1: exists eq_refl; only 1: reflexivity; only 1: reflexivity; only 1: destruct u as [u1 u2 u3], v as [v1 v2 v3]; only 1: apply eq_sig2_uncurried).	32.226790905	19052
Coq.Init.Specif.sig2.eq_sig2_rect	40
Coq.Init.Specif.sig2.rew_sig2	40	0.0	synth with cache (only 1: destruct H, u; only 1: reflexivity).	0.0226590633392	2
Coq.Init.Specif.Choice_lemmas.Choice	40
Coq.Init.Specif.Choice_lemmas.Choice2	40
Coq.Init.Specif.Choice_lemmas.bool_choice	40
Coq.Init.Specif.Dependent_choice_lemmas.dependent_choice	40
Coq.Init.Specif.absurd_set	40	0.0.0	synth with cache (only 1: unfold not; only 1: intros A C h1 h2; only 1: destruct (h2 h1)).	0.0113799571991	3
Coq.funind.Recdef.le_lt_SS	40	6	synth with cache (only 1: CRelationClasses.simpl_crelation).	0.016303062439	11
Coq.funind.Recdef.Splus_lt	40	114	synth with cache (only 1: intuition).	1.45948910713	6631
Coq.funind.Recdef.SSplus_lt	40
Coq.funind.Recdef.max	40
Coq.Classes.CMorphisms.Proper.eq_proper_proxy	40	0	synth with cache (only 1: reflexivity).	0.0147840976715	1
Coq.Classes.CMorphisms.Proper.reflexive_proper_proxy	40	0	synth with cache (only 1: firstorder).	0.0152719020844	1
Coq.Classes.CMorphisms.Proper.proper_proper_proxy	40	0	synth with cache (only 1: firstorder).	0.0141780376434	1
Coq.Classes.CMorphisms.Relations.pointwise_pointwise	40	3.2.1.1.1	synth with cache (only 1: split; only 1: destruct 2; only 1: firstorder; only 1: intros h1 h2; only 1: firstorder).	0.149102926254	121
Coq.Classes.CMorphisms.Relations.subrelation_id_proper	40	0	synth with cache (only 1: firstorder).	0.0163519382477	1
Coq.Classes.CMorphisms.Relations.subrelation_respectful	40	0	synth with cache (only 1: firstorder).	0.0198659896851	1
Coq.Classes.CMorphisms.Relations.subrelation_refl	40	0.0.0	synth with cache (only 1: hnf; only 1: intros x y H'; only 1: assumption).	0.0238430500031	3
Coq.Classes.CMorphisms.Relations.subrelation_proper	40	0	synth with cache (only 1: firstorder).	0.0151340961456	1
Coq.Classes.CMorphisms.Relations.proper_subrelation_proper_arrow	40	5	synth with cache (only 1: simpl_crelation).	0.0511300563812	6
Coq.Classes.CMorphisms.Relations.pointwise_subrelation	40	0	synth with cache (only 1: simpl_crelation).	0.0275418758392	1
Coq.Classes.CMorphisms.Relations.forall_subrelation	40	2.0.1	synth with cache (only 1: intro; only 1: reduce; only 1: firstorder).	0.0280768871307	6
Coq.Classes.CMorphisms.iff_impl_subrelation	40	0	synth with cache (only 1: firstorder).	0.015753030777	1
Coq.Classes.CMorphisms.iff_flip_impl_subrelation	40	0	synth with cache (only 1: firstorder).	0.0172998905182	1
Coq.Classes.CMorphisms.iffT_arrow_subrelation	40	0	synth with cache (only 1: firstorder).	0.0148351192474	1
Coq.Classes.CMorphisms.iffT_flip_arrow_subrelation	40	0	synth with cache (only 1: firstorder).	0.0181550979614	1
Coq.Classes.CMorphisms.GenericInstances.respectful_per_obligation_2	40
Coq.Classes.CMorphisms.GenericInstances.flip_proper_obligation_1	40	6.2.2.3	synth with cache (only 1: intros x y z X X0 x0 y0; only 1: red; only 1: simpl_crelation; only 1: firstorder).	1.3117389679	633
Coq.Classes.CMorphisms.GenericInstances.trans_contra_co_type_morphism_obligation_1	40	7.0	synth with cache (only 1: reduce; only 1: firstorder).	0.0837490558624	15
Coq.Classes.CMorphisms.GenericInstances.trans_contra_inv_impl_type_morphism_obligation_1	40	3	synth with cache (only 1: firstorder).	0.034618139267	4
Coq.Classes.CMorphisms.GenericInstances.trans_co_impl_type_morphism_obligation_1	40	5.0	synth with cache (only 1: intros A R H x x0 y X X0; only 1: firstorder).	1.35601401329	398
Coq.Classes.CMorphisms.GenericInstances.trans_sym_co_inv_impl_type_morphism_obligation_1	40	2	synth with cache (only 1: firstorder).	1.41618394852	427
Coq.Classes.CMorphisms.GenericInstances.trans_sym_contra_arrow_morphism_obligation_1	40	1.3	synth with cache (only 1: intros x y H'; only 1: firstorder).	1.54228615761	422
Coq.Classes.CMorphisms.GenericInstances.per_partial_app_type_morphism_obligation_1	40	5.3	synth with cache (only 1: destruct 1; only 1: firstorder).	0.0907979011536	15
Coq.Classes.CMorphisms.GenericInstances.trans_co_eq_inv_arrow_morphism_obligation_1	40
Coq.Classes.CMorphisms.GenericInstances.PER_type_morphism_obligation_1	40	1.6	synth with cache (only 1: intros; only 1: firstorder).	1.59448385239	294
Coq.Classes.CMorphisms.GenericInstances.symmetric_equiv_flip	40	4.0	synth with cache (only 1: hnf; only 1: firstorder).	0.025043964386	6
Coq.Classes.CMorphisms.GenericInstances.compose_proper_obligation_1	40	4.3	synth with cache (only 1: intros A C h1 h2; only 1: firstorder).	0.045392036438	21
Coq.Classes.CMorphisms.GenericInstances.reflexive_eq_dom_reflexive	40	3	synth with cache (only 1: simpl_crelation).	0.0255711078644	4
Coq.Classes.CMorphisms.GenericInstances.respectful_morphism	40
Coq.Classes.CMorphisms.GenericInstances.Reflexive_partial_app_morphism	40	8	synth with cache (only 1: firstorder).	0.0199031829834	9
Coq.Classes.CMorphisms.GenericInstances.flip_respectful	40	0.0.0	synth with cache (only 1: split; only 1: simpl_crelation; only 1: firstorder).	0.0414600372314	3
Coq.Classes.CMorphisms.GenericInstances.flip1	40	0.0	synth with cache (only 1: reduce; only 1: auto).	0.022442817688	2
Coq.Classes.CMorphisms.GenericInstances.flip2	40	0	synth with cache (only 1: firstorder).	0.0150649547577	1
Coq.Classes.CMorphisms.GenericInstances.eq_subrelation	40	0.2.2	synth with cache (only 1: hnf; only 1: destruct 1; only 1: firstorder).	0.0378749370575	13
Coq.Classes.CMorphisms.GenericInstances.reflexive_proper	40	0	synth with cache (only 1: firstorder).	0.0141978263855	1
Coq.Classes.CMorphisms.GenericInstances.proper_eq	40	0	synth with cache (only 1: firstorder).	0.0156421661377	1
Coq.Classes.CMorphisms.proper_proper	40	1.0.0	synth with cache (only 1: reduce; only 1: subst; only 1: firstorder).	0.0291690826416	4
Coq.Classes.CMorphisms.Normalize.proper_normalizes_proper	40	2.0	synth with cache (only 1: simpl_crelation; only 1: firstorder).	0.030727148056	4
Coq.Classes.CMorphisms.Normalize.flip_atom	40	1	synth with cache (only 1: firstorder).	0.0190558433533	2
Coq.Classes.CMorphisms.flip_arrow	40
Coq.Classes.CMorphisms.proper_sym_flip	40	1.0.0	synth with cache (only 1: intros A R H x x0 y X X0; only 1: firstorder; only 1: simpl_crelation).	0.1289498806	4
Coq.Classes.CMorphisms.proper_sym_flip_2	40	4.1.3.0	synth with cache (only 1: intros A R1 Sym B R2 f Hf; only 1: unfold flip, respectful; only 1: intros x x' Hxx'; only 1: firstorder).	1.96253490448	276
Coq.Classes.CMorphisms.proper_sym_impl_iff	40	17.16	synth with cache (only 1: simpl_crelation; only 1: firstorder).	33.4592161179	20568
Coq.Classes.CMorphisms.proper_sym_arrow_iffT	40	0.0.0.0.0	synth with cache (only 1: intros A R Sym f Hf x x' Hxx'; only 1: repeat red in Hf; only 1: split; only 1: eauto; only 1: eauto).	0.0415961742401	5
Coq.Classes.CMorphisms.proper_sym_impl_iff_2	40	0.0.1.0.0.1.8.0	synth with cache (only 1: intros A B C RA RB RC f mor x y X x0 y0 X0; only 1: split; only 1: apply mor; only 1: auto; only 1: auto; only 1: apply mor; only 1: auto; only 1: auto).	8.44684100151	1529
Coq.Classes.CMorphisms.proper_sym_arrow_iffT_2	40	0.0.0.0.0	synth with cache (only 1: intros A R Sym B R' Sym' f Hf x x' Hxx' y y' Hyy'; only 1: repeat red in Hf; only 1: split; only 1: eauto; only 1: eauto).	0.0471122264862	5
Coq.Classes.CMorphisms.PartialOrder_proper_type	40
Coq.Classes.CMorphisms.PartialOrder_StrictOrder	40
Coq.Classes.CMorphisms.StrictOrder_PreOrder	40
Coq.Classes.CMorphisms.StrictOrder_PartialOrder	40
Coq.Classes.Morphisms_Prop.Acc_pt_morphism	40
Coq.Classes.Morphisms_Prop.Acc_rel_morphism	40
Coq.Classes.Morphisms_Prop.well_founded_morphism	40
Coq.Classes.CEquivalence.equiv_transitive_obligation_1	40	5.3.0.0	synth with cache (only 1: intros A R H x x0 y X X0; only 1: transitivity x0; only 1: auto; only 1: auto).	4.49189901352	1785
Coq.Classes.CEquivalence.Respecting.respecting_equiv_obligation_3	40
Coq.Classes.CEquivalence.pointwise_reflexive	40	0	synth with cache (only 1: simpl_crelation).	0.00946187973022	1
Coq.Classes.CEquivalence.pointwise_symmetric	40	0	synth with cache (only 1: firstorder).	0.00631499290466	1
Coq.Classes.CEquivalence.pointwise_transitive	40	0	synth with cache (only 1: firstorder).	0.00812578201294	1
Coq.Classes.CEquivalence.pointwise_equivalence	40	0	synth with cache (only 1: firstorder).	0.190212965012	1
Coq.Classes.CRelationClasses.Defs.complement_inverse	40	2	synth with cache (only 1: reflexivity).	0.00864100456238	3
Coq.Classes.CRelationClasses.Defs.StrictOrder_Asymmetric	40
Coq.Classes.CRelationClasses.Defs.subrelation_symmetric	40	0.12	synth with cache (only 1: intro p; only 1: firstorder).	0.020299911499	60
Coq.Classes.CRelationClasses.Defs.flip.flip_Reflexive	40	2.0	synth with cache (only 1: hnf; only 1: firstorder).	0.00813007354736	4
Coq.Classes.CRelationClasses.Defs.flip.flip_Antisymmetric	40	7	synth with cache (only 1: firstorder).	0.0337610244751	33
Coq.Classes.CRelationClasses.Defs.flip.flip_PreOrder	40	2	synth with cache (only 1: firstorder).	0.0214369297028	3
Coq.Classes.CRelationClasses.Defs.flip.flip_StrictOrder	40	0	synth with cache (only 1: firstorder).	0.0213451385498	1
Coq.Classes.CRelationClasses.Defs.flip.flip_PER	40	0	synth with cache (only 1: firstorder).	0.0205969810486	1
Coq.Classes.CRelationClasses.Defs.flip.flip_Equivalence	40	0	synth with cache (only 1: firstorder).	0.026437997818	1
Coq.Classes.CRelationClasses.Defs.complement.complement_Irreflexive	40	1	synth with cache (only 1: firstorder).	0.00679612159729	2
Coq.Classes.CRelationClasses.Defs.complement.complement_Symmetric	40	0	synth with cache (only 1: firstorder).	0.00859713554382	1
Coq.Classes.CRelationClasses.iffT_Reflexive	40	1.0.1.0.2	synth with cache (only 1: constructor; only 1: intro H1; only 1: trivial; only 1: intro H1; only 1: trivial).	0.0143060684204	9
Coq.Classes.CRelationClasses.iffT_Symmetric	40	0	synth with cache (only 1: firstorder).	0.00782418251038	1
Coq.Classes.CRelationClasses.iffT_Transitive	40	0	synth with cache (only 1: firstorder).	0.00833916664124	1
Coq.Classes.CRelationClasses.Binary.relation_equivalence_equivalence	40
Coq.Classes.CRelationClasses.Binary.relation_implication_preorder	40	2.0.1.0.0	synth with cache (only 1: split; only 1: red; only 1: firstorder; only 1: red; only 1: firstorder).	0.0262360572815	12
Coq.Classes.CRelationClasses.Binary.partial_order_antisym	40	0	synth with cache (only 1: firstorder).	0.0167388916016	1
Coq.Classes.CRelationClasses.Binary.PartialOrder_inverse	40	1.0	synth with cache (only 1: reduce_goal; only 1: firstorder).	0.0364110469818	3
Coq.Classes.Equivalence.equiv_transitive_obligation_1	40	2.2.3.3	synth with cache (only 1: intros; only 1: transitivity y; only 1: auto; only 1: auto).	0.297876834869	283
Coq.Classes.Equivalence.Respecting.respecting_equiv_obligation_3	40
Coq.Classes.Equivalence.pointwise_reflexive	40	0	synth with cache (only 1: simpl_relation).	0.00951218605042	1
Coq.Classes.Equivalence.pointwise_symmetric	40	0	synth with cache (only 1: firstorder).	0.00644493103027	1
Coq.Classes.Equivalence.pointwise_transitive	40	0	synth with cache (only 1: firstorder).	0.00874805450439	1
Coq.Classes.Equivalence.pointwise_equivalence	40	0	synth with cache (only 1: firstorder).	0.20175409317	1
Coq.Classes.EquivDec.unit_eqdec_obligation_1	40	6.85.23.63	synth with cache (only 1: destruct y; only 1: red; only 1: destruct x; only 1: trivial).	21.071833849	52262
Coq.Classes.EquivDec.bool_function_eqdec_obligation_1	40
Coq.Classes.EquivDec.list_eqdec_obligation_5	40
Coq.Classes.RelationClasses.Defs.complement_inverse	40	2	synth with cache (only 1: reflexivity).	0.0188939571381	3
Coq.Classes.RelationClasses.Defs.StrictOrder_Asymmetric	40
Coq.Classes.RelationClasses.Defs.subrelation_symmetric	40	0	synth with cache (only 1: firstorder).	0.0151689052582	1
Coq.Classes.RelationClasses.Defs.flip.flip_Reflexive	40	2.0	synth with cache (only 1: hnf; only 1: firstorder).	0.0205371379852	4
Coq.Classes.RelationClasses.Defs.flip.flip_Antisymmetric	40	9.1	synth with cache (only 1: hnf; only 1: auto).	0.0931429862976	95
Coq.Classes.RelationClasses.Defs.flip.flip_PreOrder	40	2	synth with cache (only 1: firstorder).	0.035915851593	3
Coq.Classes.RelationClasses.Defs.flip.flip_StrictOrder	40	0	synth with cache (only 1: firstorder).	0.0360538959503	1
Coq.Classes.RelationClasses.Defs.flip.flip_PER	40	0	synth with cache (only 1: firstorder).	0.0499958992004	1
Coq.Classes.RelationClasses.Defs.flip.flip_Equivalence	40	0	synth with cache (only 1: firstorder).	0.0490181446075	1
Coq.Classes.RelationClasses.Defs.complement.complement_Irreflexive	40	1	synth with cache (only 1: firstorder).	0.0194919109344	2
Coq.Classes.RelationClasses.Defs.complement.complement_Symmetric	40	0	synth with cache (only 1: firstorder).	0.0182728767395	1
Coq.Classes.RelationClasses.predicate_equivalence_equivalence_obligation_1	40	10.8.2.2.2.1.1.4	synth with cache (only 1: intro n; only 1: induction n; only 1: constructor; only 1: trivial; only 1: trivial; only 1: simpl; only 1: intro m; only 1: firstorder).	37.1712110043	51780
Coq.Classes.RelationClasses.predicate_equivalence_equivalence_obligation_2	40	0.0.0.0	synth with cache (only 1: intro l; only 1: induction l; only 1: firstorder; only 1: firstorder).	0.0338778495789	4
Coq.Classes.RelationClasses.predicate_equivalence_equivalence_obligation_3	40
Coq.Classes.RelationClasses.predicate_implication_preorder_obligation_1	40	0.0.0.0	synth with cache (only 1: intro l; only 1: induction l; only 1: firstorder; only 1: firstorder).	0.0340049266815	4
Coq.Classes.RelationClasses.predicate_implication_preorder_obligation_2	40	0.0.1.0.0.0	synth with cache (only 1: intro l; only 1: induction l; only 1: firstorder; only 1: intros x y z H H0 x0; only 1: pose (IHl (x x0) (y x0) (z x0)); only 1: firstorder).	0.572608947754	7
Coq.Classes.RelationClasses.Binary.relation_equivalence_equivalence	40
Coq.Classes.RelationClasses.Binary.relation_implication_preorder	40	2	synth with cache (only 1: firstorder).	0.0213010311127	3
Coq.Classes.RelationClasses.Binary.partial_order_antisym	40	0	synth with cache (only 1: firstorder).	0.0353739261627	1
Coq.Classes.RelationClasses.Binary.PartialOrder_inverse	40	0.0.0.0	synth with cache (only 1: reduce_goal; only 1: pose proof partial_order_equivalence as poe; only 1: do 3 red in poe; only 1: firstorder).	0.156988143921	4
Coq.Classes.RelationClasses.subrelation_partial_order_obligation_1	40	0	synth with cache (only 1: firstorder).	0.0288681983948	1
Coq.Classes.Morphisms.Proper.eq_proper_proxy	40	2	synth with cache (only 1: repeat split).	0.0203280448914	3
Coq.Classes.Morphisms.Proper.reflexive_proper_proxy	40	0	synth with cache (only 1: firstorder).	0.0188689231873	1
Coq.Classes.Morphisms.Proper.proper_proper_proxy	40	0	synth with cache (only 1: firstorder).	0.0181591510773	1
Coq.Classes.Morphisms.Relations.pointwise_pointwise	40	2.0.4.1.10	synth with cache (only 1: repeat split; only 1: red; only 1: destruct 2; only 1: firstorder; only 1: firstorder).	0.587209939957	385
Coq.Classes.Morphisms.Relations.subrelation_id_proper	40	4.2	synth with cache (only 1: reduce; only 1: firstorder).	0.0290410518646	8
Coq.Classes.Morphisms.Relations.subrelation_respectful	40	0	synth with cache (only 1: firstorder).	0.0315039157867	1
Coq.Classes.Morphisms.Relations.subrelation_refl	40	1.2	synth with cache (only 1: reduce; only 1: assumption).	0.0284152030945	5
Coq.Classes.Morphisms.Relations.subrelation_proper	40	0	synth with cache (only 1: firstorder).	0.029669046402	1
Coq.Classes.Morphisms.Relations.proper_subrelation_proper	40	3.5.3	synth with cache (only 1: reduce; only 1: subst; only 1: firstorder).	0.706182956696	142
Coq.Classes.Morphisms.Relations.pointwise_subrelation	40	0.0	synth with cache (only 1: unfold subrelation in *; only 1: firstorder).	0.028528213501	2
Coq.Classes.Morphisms.Relations.forall_subrelation	40	1	synth with cache (only 1: firstorder).	0.0270118713379	2
Coq.Classes.Morphisms.iff_impl_subrelation	40	0.0	synth with cache (only 1: reduce; only 1: firstorder).	0.0252602100372	2
Coq.Classes.Morphisms.iff_flip_impl_subrelation	40	2.0.0	synth with cache (only 1: hnf; only 1: intros A B [H1 H2]; only 1: trivial).	0.0290558338165	5
Coq.Classes.Morphisms.GenericInstances.respectful_per_obligation_2	40
Coq.Classes.Morphisms.GenericInstances.complement_proper_obligation_1	40
Coq.Classes.Morphisms.GenericInstances.flip_proper_obligation_1	40	2.2.16.2	synth with cache (only 1: reduce; only 1: apply mor; only 1: intuition; only 1: intuition).	4.85946798325	3049
Coq.Classes.Morphisms.GenericInstances.trans_contra_co_morphism_obligation_1	40	5	synth with cache (only 1: firstorder).	0.198379993439	41
Coq.Classes.Morphisms.GenericInstances.trans_contra_inv_impl_morphism_obligation_1	40	9	synth with cache (only 1: firstorder).	0.097706079483	17
Coq.Classes.Morphisms.GenericInstances.trans_co_impl_morphism_obligation_1	40	6	synth with cache (only 1: firstorder).	1.81734490395	410
Coq.Classes.Morphisms.GenericInstances.trans_sym_co_inv_impl_morphism_obligation_1	40	5	synth with cache (only 1: firstorder).	2.0458137989	413
Coq.Classes.Morphisms.GenericInstances.trans_sym_contra_impl_morphism_obligation_1	40	7	synth with cache (only 1: firstorder).	2.34709596634	452
Coq.Classes.Morphisms.GenericInstances.per_partial_app_morphism_obligation_1	40	5.4	synth with cache (only 1: intros; only 1: firstorder).	1.26580500603	223
Coq.Classes.Morphisms.GenericInstances.trans_co_eq_inv_impl_morphism_obligation_1	40
Coq.Classes.Morphisms.GenericInstances.PER_morphism_obligation_1	40	7	synth with cache (only 1: firstorder).	7.77790093422	656
Coq.Classes.Morphisms.GenericInstances.symmetric_equiv_flip	40	2.0	synth with cache (only 1: hnf; only 1: firstorder).	0.0393650531769	4
Coq.Classes.Morphisms.GenericInstances.compose_proper_obligation_1	40	2.1	synth with cache (only 1: intros R H x x0 y H0 H1; only 1: firstorder).	0.0631611347198	16
Coq.Classes.Morphisms.GenericInstances.reflexive_eq_dom_reflexive	40	0.0.2	synth with cache (only 1: reduce; only 1: subst; only 1: firstorder).	0.0459978580475	5
Coq.Classes.Morphisms.GenericInstances.respectful_morphism	40
Coq.Classes.Morphisms.GenericInstances.Reflexive_partial_app_morphism	40	2	synth with cache (only 1: firstorder).	0.022243976593	3
Coq.Classes.Morphisms.GenericInstances.flip_respectful	40	2.1.0.0.0.0	synth with cache (only 1: split; only 1: reduce; only 1: simpl_relation; only 1: reduce; only 1: apply H; only 1: simpl_relation).	0.107080936432	9
Coq.Classes.Morphisms.GenericInstances.flip1	40	2	synth with cache (only 1: apply H).	0.0252430438995	3
Coq.Classes.Morphisms.GenericInstances.flip2	40	0	synth with cache (only 1: firstorder).	0.0242800712585	1
Coq.Classes.Morphisms.GenericInstances.eq_subrelation	40	1	synth with cache (only 1: simpl_relation).	0.0339570045471	2
Coq.Classes.Morphisms.GenericInstances.reflexive_proper	40	0	synth with cache (only 1: firstorder).	0.0190269947052	1
Coq.Classes.Morphisms.GenericInstances.proper_eq	40	0	synth with cache (only 1: firstorder).	0.0184609889984	1
Coq.Classes.Morphisms.proper_proper	40	1.0.6.0	synth with cache (only 1: reduce; only 1: subst; only 1: unfold respectful, relation_equivalence, predicate_equivalence in *; only 1: firstorder).	0.749956846237	167
Coq.Classes.Morphisms.Normalize.proper_normalizes_proper	40	7	synth with cache (only 1: firstorder).	0.0502650737762	8
Coq.Classes.Morphisms.Normalize.flip_atom	40	1	synth with cache (only 1: firstorder).	0.0246231555939	2
Coq.Classes.Morphisms.flip_arrow	40
Coq.Classes.Morphisms.proper_sym_flip	40	0.1	synth with cache (only 1: intros R H x y H0 x0 y0 H1 H2; only 1: simpl_relation).	0.0464391708374	3
Coq.Classes.Morphisms.proper_sym_flip_2	40	0.2.13	synth with cache (only 1: compute; only 1: intros C decide H P H0; only 1: firstorder).	7.98492383957	1691
Coq.Classes.Morphisms.proper_sym_impl_iff	40	1.0.8.4.3.5	synth with cache (only 1: intro n; only 1: intros R H x x0 y H0; only 1: firstorder; only 1: setoid_rewrite  <- H; only 1: simpl_relation; only 1: assumption).	24.1936109066	8874
Coq.Classes.Morphisms.proper_sym_impl_iff_2	40	0.0.4.0.0.4.9.3	synth with cache (only 1: intros RA RB RC f mor x y H x0 y0 H0; only 1: split; only 1: apply H; only 1: auto; only 1: auto; only 1: apply H; only 1: auto; only 1: auto).	28.6399841309	10844
Coq.Classes.Morphisms.PartialOrder_proper	40
Coq.Classes.Morphisms.PartialOrder_StrictOrder	40
Coq.Classes.Morphisms.StrictOrder_PreOrder	40
Coq.Classes.Morphisms.StrictOrder_PartialOrder	40
Coq.Classes.RelationPairs.RelCompFun_Instances.RelCompFun_Reflexive	40	1	synth with cache (only 1: firstorder).	0.0094518661499	2
Coq.Classes.RelationPairs.RelCompFun_Instances.RelCompFun_Symmetric	40	0	synth with cache (only 1: firstorder).	0.010055065155	1
Coq.Classes.RelationPairs.RelCompFun_Instances.RelCompFun_Transitive	40	0	synth with cache (only 1: firstorder).	0.0250029563904	1
Coq.Classes.RelationPairs.RelCompFun_Instances.RelCompFun_Irreflexive	40	0	synth with cache (only 1: firstorder).	0.00931596755981	1
Coq.Classes.RelationPairs.RelProd_Instances.RelProd_Reflexive	40	0	synth with cache (only 1: CRelationClasses.simpl_crelation).	0.021418094635	1
Coq.Classes.RelationPairs.RelProd_Instances.RelProd_Symmetric	40	0	synth with cache (only 1: firstorder).	0.0152151584625	1
Coq.Classes.RelationPairs.RelProd_Instances.RelProd_Transitive	40	0	synth with cache (only 1: firstorder).	0.27925992012	1
Coq.Classes.RelationPairs.RelProd_Instances.FstRel_ProdRel	40	0	synth with cache (only 1: firstorder).	0.0121331214905	1
Coq.Classes.RelationPairs.RelProd_Instances.SndRel_ProdRel	40	0	synth with cache (only 1: firstorder).	0.013298034668	1
Coq.Classes.RelationPairs.RelProd_Instances.FstRel_sub	40	0	synth with cache (only 1: firstorder).	0.00938606262207	1
Coq.Classes.RelationPairs.RelProd_Instances.SndRel_sub	40	0	synth with cache (only 1: firstorder).	0.00955200195312	1
Coq.Classes.RelationPairs.RelProd_Instances.pair_compat	40	0.0	synth with cache (only 1: intros x x' Hxx' y y' Hyy'; only 1: firstorder).	0.0125079154968	2
Coq.Classes.RelationPairs.RelProd_Instances.fst_compat	40	0	synth with cache (only 1: firstorder).	0.0101020336151	1
Coq.Classes.RelationPairs.RelProd_Instances.snd_compat	40	0.0.0	synth with cache (only 1: intros (x, y) (x', y') (Hx, Hy); only 1: compute in *; only 1: auto).	0.0187292098999	3
Coq.Classes.RelationPairs.RelProd_Instances.RelCompFun_compat	40	1.7.5.9.3.1.0	synth with cache (only 1: repeat red; only 1: intro l; only 1: intros e H3; only 1: intros s; only 1: intros; only 1: compute in *; only 1: eauto).	4.59666204453	5615
Coq.Classes.DecidableClass.Decidable_sound	40	0.5.23.9	synth with cache (only 1: intro x; only 1: intros h1 h2; only 1: apply h1; only 1: assumption).	3.56111598015	12514
Coq.Classes.DecidableClass.Decidable_complete	40	4.0.0.1.3.0.14.4.12	synth with cache (only 1: intro p; only 1: intros n m; only 1: case n; only 1: simpl; only 1: intro H; only 1: destruct H; only 1: auto; only 1: intros [? ?]; only 1: auto).	10.0837039948	34210
Coq.Classes.DecidableClass.Decidable_sound_alt	40
Coq.Classes.DecidableClass.Decidable_complete_alt	40
Coq.Classes.SetoidClass.setoid_refl	40	32	synth with cache (only 1: simpl_relation).	7.40536999702	6377
Coq.Classes.SetoidClass.setoid_sym	40	0	synth with cache (only 1: typeclasses eauto).	0.0312969684601	1
Coq.Classes.SetoidClass.setoid_trans	40	0	synth with cache (only 1: typeclasses eauto).	0.0337710380554	1
Coq.Classes.SetoidClass.nequiv_equiv_trans	40	0.0.4.2.1.13	synth with cache (only 1: intros m Hm; only 1: intro y0; only 1: intros; only 1: rewrite <- H0; only 1: unfold complement; only 1: auto with sets).	23.1501410007	9285
Coq.Classes.SetoidClass.equiv_nequiv_trans	40	1.14.7.6	synth with cache (only 1: intros p q r Hq Hr; only 1: intro; only 1: rewrite <- H; only 1: auto).	16.7194609642	9629
Coq.Classes.Morphisms_Relations.relation_conjunction_morphism	40	4.0	synth with cache (only 1: intros x y H x0 y0 H0 x1 x2; only 1: firstorder).	0.292769908905	24
Coq.Classes.Morphisms_Relations.relation_disjunction_morphism	40	0	synth with cache (only 1: firstorder).	0.0425271987915	1
Coq.Classes.Morphisms_Relations.predicate_equivalence_pointwise	40	1.4	synth with cache (only 1: intros x x' Hxx'; only 1: firstorder).	0.0289158821106	7
Coq.Classes.Morphisms_Relations.predicate_implication_pointwise	40	1.0	synth with cache (only 1: do 2 red; only 1: auto).	0.0133690834045	3
Coq.Classes.Morphisms_Relations.relation_equivalence_pointwise	40	1.3.2	synth with cache (only 1: do 2 red; only 1: intro l1; only 1: firstorder).	0.16474199295	13
Coq.Classes.Morphisms_Relations.subrelation_pointwise	40	1.3.0	synth with cache (only 1: intro; only 1: intros; only 1: firstorder).	0.0228178501129	7
Coq.Classes.Morphisms_Relations.flip_pointwise_relation	40	2	synth with cache (only 1: firstorder).	0.0151810646057	3
Coq.PArith.Pnat.Pos2Nat.inj_succ	40
Coq.PArith.Pnat.Pos2Nat.inj_add	40
Coq.PArith.Pnat.Pos2Nat.inj_mul	40
Coq.PArith.Pnat.Pos2Nat.inj_1	40	3.1.1.0	synth with cache (only 1: unfold to_nat; only 1: rewrite <- (Nat.mul_1_l 1)  at 1; only 1: rewrite <- (Nat.mul_1_l 1)  at 1; only 1: now Nat.nzsimpl).	0.150927066803	9
Coq.PArith.Pnat.Pos2Nat.inj_xO	40
Coq.PArith.Pnat.Pos2Nat.inj_xI	40
Coq.PArith.Pnat.Pos2Nat.is_succ	40
Coq.PArith.Pnat.Pos2Nat.is_pos	40
Coq.PArith.Pnat.Pos2Nat.id	40
Coq.PArith.Pnat.Pos2Nat.inj	40
Coq.PArith.Pnat.Pos2Nat.inj_iff	40	3.0.0.0.1	synth with cache (only 1: split; only 1: intros H; only 1: now rewrite <- (id p), <- (id q), H; only 1: intros <-; only 1: now destruct p).	0.0675349235535	9
Coq.PArith.Pnat.Pos2Nat.inj_compare	40
Coq.PArith.Pnat.Pos2Nat.inj_lt	40
Coq.PArith.Pnat.Pos2Nat.inj_le	40
Coq.PArith.Pnat.Pos2Nat.inj_gt	40	0.0.18.0	synth with cache (only 1: unfold gt, le, compare; only 1: rewrite compare_gt_iff; only 1: unfold lt; only 1: now rewrite inj_compare, Nat.compare_lt_iff).	26.0349609852	7712
Coq.PArith.Pnat.Pos2Nat.inj_ge	40
Coq.PArith.Pnat.Pos2Nat.inj_sub	40
Coq.PArith.Pnat.Pos2Nat.inj_sub_max	40
Coq.PArith.Pnat.Pos2Nat.inj_pred	40
Coq.PArith.Pnat.Pos2Nat.inj_pred_max	40
Coq.PArith.Pnat.Pos2Nat.inj_min	40
Coq.PArith.Pnat.Pos2Nat.inj_max	40
Coq.PArith.Pnat.Pos2Nat.inj_iter	40
Coq.PArith.Pnat.Pos2Nat.inj_pow	40
Coq.PArith.Pnat.Nat2Pos.id	40
Coq.PArith.Pnat.Nat2Pos.id_max	40	2.0.0.0.0.8.1.3	synth with cache (only 1: induction n as [| n H]; only 1: trivial; only 1: simpl; only 1: destruct n; only 1: trivial; only 1: rewrite Pos2Nat.inj_succ; only 1: f_equal; only 1: trivial).	6.47058200836	2002
Coq.PArith.Pnat.Nat2Pos.inj	40
Coq.PArith.Pnat.Nat2Pos.inj_iff	40	2.0.0.5.3.7	synth with cache (only 1: intros Hy; only 1: intro H2; only 1: split; only 1: intros H; only 1: now rewrite <- (id n), <- (id m), H; only 1: now intros ->).	4.03977298737	1254
Coq.PArith.Pnat.Nat2Pos.inj_0	40	0	synth with cache (only 1: trivial).	0.0265538692474	1
Coq.PArith.Pnat.Nat2Pos.inj_succ	40	0.1.0	synth with cache (only 1: destruct n; only 1: now destruct 1; only 1: trivial).	0.0536730289459	4
Coq.PArith.Pnat.Nat2Pos.inj_pred	40
Coq.PArith.Pnat.Nat2Pos.inj_add	40
Coq.PArith.Pnat.Nat2Pos.inj_mul	40
Coq.PArith.Pnat.Nat2Pos.inj_compare	40
Coq.PArith.Pnat.Nat2Pos.inj_sub	40
Coq.PArith.Pnat.Nat2Pos.inj_min	40
Coq.PArith.Pnat.Nat2Pos.inj_max	40
Coq.PArith.Pnat.Nat2Pos.inj_pow	40
Coq.PArith.Pnat.Pos2SuccNat.id_succ	40
Coq.PArith.Pnat.Pos2SuccNat.pred_id	40
Coq.PArith.Pnat.SuccNat2Pos.id_succ	40	2.0.0.0.0.2.0.1.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: rewrite Pos2Nat.inj_succ; only 1: induction n; only 1: f_equal; only 1: f_equal; only 1: simpl; only 1: rewrite Pos2Nat.inj_succ; only 1: now rewrite IHn).	2.33780002594	640
Coq.PArith.Pnat.SuccNat2Pos.pred_id	40	0.0.0.0.0.0.3.0.0.0.2.2.10.4.0	synth with cache (only 1: rewrite Pos.of_nat_succ; only 1: destruct n; only 1: reflexivity; only 1: simpl; only 1: rewrite Pos2Nat.inj_succ; only 1: destruct n; only 1: trivial; only 1: rewrite Pos2Nat.inj_succ; only 1: simpl; only 1: f_equal; only 1: destruct n; only 1: trivial; only 1: rewrite Pos2Nat.inj_succ; only 1: f_equal; only 1: now apply Nat2Pos.id).	38.0460190773	16754
Coq.PArith.Pnat.SuccNat2Pos.inj	40
Coq.PArith.Pnat.SuccNat2Pos.inj_iff	40	6.0.1.1	synth with cache (only 1: split; only 1: now apply Nat2Pos.inj; only 1: intros; only 1: now Morphisms.f_equiv).	9.47196602821	1829
Coq.PArith.Pnat.SuccNat2Pos.inv	40	4.6.13.0.1	synth with cache (only 1: rewrite Pos.of_nat_succ; only 1: intro H; only 1: symmetry in H; only 1: rewrite H; only 1: apply Pos2Nat.id).	17.4098370075	9711
Coq.PArith.Pnat.SuccNat2Pos.inj_succ	40	1.3.0.6	synth with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: split).	0.91215801239	238
Coq.PArith.Pnat.SuccNat2Pos.inj_compare	40
Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_mult	40
Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_succ_morphism	40
Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_l_plus_morphism	40
Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_plus_carry_morphism	40
Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_r_plus_morphism	40
Coq.PArith.Pnat.ObsoletePmultNat.ZL6	40	1.0.1.1	synth with cache (only 1: intros; only 1: unfold Pos.to_nat; only 1: rewrite !Pmult_nat_mult; only 1: now Nat.nzsimpl).	0.171455860138	26
Coq.PArith.Pnat.ObsoletePmultNat.le_Pmult_nat	40	8.2.5	synth with cache (only 1: intro m; only 1: fix le_div2 1; only 1: trivial).	6.12159204483	2278
Coq.PArith.BinPos.Pos.eq_dec	40	8.0	synth with cache (only 1: intro n; only 1: decide equality).	0.0755488872528	45
Coq.PArith.BinPos.Pos.xI_succ_xO	40	3	synth with cache (only 1: reflexivity).	0.00655293464661	4
Coq.PArith.BinPos.Pos.succ_discr	40	6.17.12.9.6.38	synth with cache (only 1: destruct p; only 1: intro H1; only 1: discriminate; only 1: discriminate; only 1: simpl; only 1: discriminate).	6.59923791885	24169
Coq.PArith.BinPos.Pos.pred_double_spec	40	0	synth with cache (only 1: now destruct p).	0.00673890113831	1
Coq.PArith.BinPos.Pos.succ_pred_double	40
Coq.PArith.BinPos.Pos.pred_double_succ	40	0.0.1.0.1.0.2	synth with cache (only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal).	0.099347114563	43
Coq.PArith.BinPos.Pos.double_succ	40	0.0.0.0.0.0.0	synth with cache (only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal).	0.0234680175781	7
Coq.PArith.BinPos.Pos.pred_double_xO_discr	40	1	synth with cache (only 1: now destruct p).	0.0185160636902	2
Coq.PArith.BinPos.Pos.succ_not_1	40	2.0.0.0.0.0.0	synth with cache (only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal).	0.0361249446869	9
Coq.PArith.BinPos.Pos.pred_succ	40	1.0.0.0.0.0.0.0.0.4.9	synth with cache (only 1: destruct p; only 1: cbn; only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: now destruct p; only 1: now f_equal).	1.48270702362	1479
Coq.PArith.BinPos.Pos.succ_pred_or	40
Coq.PArith.BinPos.Pos.succ_pred	40	1.1.0.0.0.5.1.0	synth with cache (only 1: destruct p; only 1: now destruct p; only 1: intro H; only 1: simpl; only 1: apply succ_pred_double; only 1: simpl; only 1: intros; only 1: now f_equal).	20.6588242054	9033
Coq.PArith.BinPos.Pos.succ_inj	40
Coq.PArith.BinPos.Pos.pred_N_succ	40	0.0.0.0.11.0.3	synth with cache (only 1: destruct p; only 1: simpl; only 1: f_equal; only 1: apply pred_double_succ; only 1: now destruct p; only 1: simpl; only 1: now f_equal).	3.20927095413	1988
Coq.PArith.BinPos.Pos.add_1_r	40	0	synth with cache (only 1: now destruct p).	0.0079550743103	1
Coq.PArith.BinPos.Pos.add_1_l	40	0	synth with cache (only 1: now destruct p).	0.00798988342285	1
Coq.PArith.BinPos.Pos.add_carry_spec	40
Coq.PArith.BinPos.Pos.add_comm	40
Coq.PArith.BinPos.Pos.add_succ_r	40
Coq.PArith.BinPos.Pos.add_succ_l	40
Coq.PArith.BinPos.Pos.add_no_neutral	40
Coq.PArith.BinPos.Pos.add_carry_add	40
Coq.PArith.BinPos.Pos.add_reg_r	40
Coq.PArith.BinPos.Pos.add_reg_l	40
Coq.PArith.BinPos.Pos.add_cancel_r	40	2.11.0	synth with cache (only 1: revert q; only 1: fix even_spec 1; only 1: auto using add_no_neutral).	4.70730400085	2360
Coq.PArith.BinPos.Pos.add_cancel_l	40	3.11.1	synth with cache (only 1: revert q; only 1: fix even_spec 1; only 1: auto using add_no_neutral).	11.979254961	7014
Coq.PArith.BinPos.Pos.add_carry_reg_r	40
Coq.PArith.BinPos.Pos.add_carry_reg_l	40
Coq.PArith.BinPos.Pos.add_assoc	40
Coq.PArith.BinPos.Pos.add_xO	40	0.0.0.0.0.0.0	synth with cache (only 1: destruct q; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: f_equal).	0.0292699337006	7
Coq.PArith.BinPos.Pos.add_xI_pred_double	40
Coq.PArith.BinPos.Pos.add_xO_pred_double	40
Coq.PArith.BinPos.Pos.add_diag	40
Coq.PArith.BinPos.Pos.peano_rect_succ	40
Coq.PArith.BinPos.Pos.peano_rect_base	40	0	synth with cache (only 1: split).	0.00925397872925	1
Coq.PArith.BinPos.Pos.peano_case	40
Coq.PArith.BinPos.Pos.eq_dep_eq_positive	40
Coq.PArith.BinPos.Pos.PeanoViewUnique	40
Coq.PArith.BinPos.Pos.peano_equiv	40
Coq.PArith.BinPos.Pos.mul_1_l	40	0	synth with cache (only 1: now destruct p).	0.0101089477539	1
Coq.PArith.BinPos.Pos.mul_1_r	40	1.1.0.3.1.1.7	synth with cache (only 1: induction p; only 1: simpl; only 1: f_equal; only 1: auto using add_1_r; only 1: simpl; only 1: now f_equal; only 1: now f_equal).	1.62887406349	1286
Coq.PArith.BinPos.Pos.mul_xO_r	40
Coq.PArith.BinPos.Pos.mul_xI_r	40
Coq.PArith.BinPos.Pos.mul_comm	40
Coq.PArith.BinPos.Pos.mul_add_distr_l	40
Coq.PArith.BinPos.Pos.mul_add_distr_r	40
Coq.PArith.BinPos.Pos.mul_assoc	40
Coq.PArith.BinPos.Pos.mul_succ_l	40
Coq.PArith.BinPos.Pos.mul_succ_r	40
Coq.PArith.BinPos.Pos.mul_xI_mul_xO_discr	40
Coq.PArith.BinPos.Pos.mul_xO_discr	40
Coq.PArith.BinPos.Pos.mul_reg_r	40
Coq.PArith.BinPos.Pos.mul_reg_l	40
Coq.PArith.BinPos.Pos.mul_cancel_r	40	0.2.0	synth with cache (only 1: split; only 1: apply mul_reg_r; only 1: congruence).	0.394592046738	121
Coq.PArith.BinPos.Pos.mul_cancel_l	40	0.2.1.0	synth with cache (only 1: split; only 1: rewrite 2!(mul_comm r); only 1: apply mul_reg_r; only 1: congruence).	0.391247034073	129
Coq.PArith.BinPos.Pos.mul_eq_1_l	40
Coq.PArith.BinPos.Pos.mul_eq_1_r	40	0	synth with cache (only 1: now destruct p, q).	0.0188069343567	1
Coq.PArith.BinPos.Pos.square_xO	40	0.0.5	synth with cache (only 1: rewrite mul_xO_r; only 1: simpl; only 1: f_equal).	0.0741980075836	44
Coq.PArith.BinPos.Pos.square_xI	40
Coq.PArith.BinPos.Pos.iter_swap_gen	40
Coq.PArith.BinPos.Pos.iter_swap	40	0.0.0.0.3.0.6.1.2	synth with cache (only 1: induction p as [p IHp| p IHp| ]; only 1: simpl; only 1: intros A B f; only 1: now rewrite ?H, ?IHp; only 1: simpl; only 1: intros; only 1: now rewrite ?H, ?IHp; only 1: simpl; only 1: split).	2.53296685219	2339
Coq.PArith.BinPos.Pos.iter_succ	40
Coq.PArith.BinPos.Pos.iter_succ_r	40
Coq.PArith.BinPos.Pos.iter_add	40
Coq.PArith.BinPos.Pos.iter_ind	40	1.3.23.15	synth with cache (only 1: intros H; only 1: intro; only 1: fix OddT_EvenT_rect 1; only 1: auto).	15.9914841652	36207
Coq.PArith.BinPos.Pos.iter_invariant	40
Coq.PArith.BinPos.Pos.pow_1_r	40
Coq.PArith.BinPos.Pos.pow_succ_r	40
Coq.PArith.BinPos.Pos.square_spec	40
Coq.PArith.BinPos.Pos.sub_mask_succ_r	40
Coq.PArith.BinPos.Pos.sub_mask_carry_spec	40
Coq.PArith.BinPos.Pos.sub_mask_spec	40
Coq.PArith.BinPos.Pos.sub_mask_nul_iff	40
Coq.PArith.BinPos.Pos.sub_mask_diag	40	0.0.0.0.0.0.0	synth with cache (only 1: induction p as [p IHp| p IHp| ]; only 1: simpl; only 1: now rewrite ?IHp; only 1: simpl; only 1: now rewrite ?IHp; only 1: simpl; only 1: now rewrite ?IHp).	0.0291090011597	7
Coq.PArith.BinPos.Pos.sub_mask_add	40
Coq.PArith.BinPos.Pos.sub_mask_add_diag_l	40
Coq.PArith.BinPos.Pos.sub_mask_pos_iff	40
Coq.PArith.BinPos.Pos.sub_mask_add_diag_r	40
Coq.PArith.BinPos.Pos.sub_mask_neg_iff	40
Coq.PArith.BinPos.Pos.eqb_eq	40
Coq.PArith.BinPos.Pos.ltb_lt	40
Coq.PArith.BinPos.Pos.leb_le	40	0.0.0.5.2.3.0	synth with cache (only 1: revert q; only 1: fix even_spec 1; only 1: intro n; only 1: rewrite even_spec; only 1: split; only 1: congruence; only 1: congruence).	3.48887395859	2309
Coq.PArith.BinPos.Pos.compare_cont_spec	40
Coq.PArith.BinPos.Pos.compare_cont_Eq	40
Coq.PArith.BinPos.Pos.compare_cont_Lt_Gt	40	3.6.7	synth with cache (only 1: revert q; only 1: fix even_spec 1; only 1: trivial).	1.16870999336	565
Coq.PArith.BinPos.Pos.compare_cont_Lt_Lt	40	0.1.0.0.0.1	synth with cache (only 1: unfold leb, le; only 1: rewrite compare_cont_spec; only 1: destruct (p ?= q); only 1: now split; only 1: easy'; only 1: now split).	0.16095995903	33
Coq.PArith.BinPos.Pos.compare_cont_Gt_Lt	40	0.0.0.2.1.1.7.7	synth with cache (only 1: revert q; only 1: intros a; only 1: unfold ltb, lt; only 1: rewrite compare_cont_spec; only 1: destruct compare; only 1: now split; only 1: now split; only 1: now split).	29.6618270874	12974
Coq.PArith.BinPos.Pos.compare_cont_Gt_Gt	40	1.7.7	synth with cache (only 1: revert q; only 1: fix even_spec 1; only 1: trivial).	6.0697619915	2397
Coq.PArith.BinPos.Pos.compare_cont_Lt_not_Lt	40	0.0.0.0.0.0	synth with cache (only 1: rewrite compare_cont_spec; only 1: unfold gt; only 1: destruct (p ?= q); only 1: easy'; only 1: easy'; only 1: easy').	0.044527053833	6
Coq.PArith.BinPos.Pos.compare_cont_Lt_not_Gt	40	0.0.0.0.0.1	synth with cache (only 1: rewrite compare_cont_spec; only 1: unfold le; only 1: destruct (p ?= q); only 1: now split; only 1: now split; only 1: now split).	0.040107011795	7
Coq.PArith.BinPos.Pos.compare_cont_Gt_not_Lt	40	0.0.0.0.0.2	synth with cache (only 1: rewrite compare_cont_spec; only 1: unfold ge; only 1: destruct (p ?= q); only 1: easy'; only 1: now split; only 1: now split).	0.0418140888214	8
Coq.PArith.BinPos.Pos.compare_cont_Gt_not_Gt	40	0.0.0.0.0.2	synth with cache (only 1: rewrite compare_cont_spec; only 1: unfold lt; only 1: destruct (p ?= q); only 1: easy'; only 1: easy'; only 1: easy').	0.0447518825531	8
Coq.PArith.BinPos.Pos.compare_xO_xO	40	2.8	synth with cache (only 1: unfold ge, lt, compare; only 1: split).	0.0699920654297	41
Coq.PArith.BinPos.Pos.compare_xI_xI	40	0	synth with cache (only 1: reflexivity).	0.00729393959045	1
Coq.PArith.BinPos.Pos.compare_xI_xO	40	0.0.1.2.0	synth with cache (only 1: unfold compare; only 1: simpl; only 1: rewrite compare_cont_spec; only 1: unfold compare; only 1: reflexivity).	0.0625319480896	37
Coq.PArith.BinPos.Pos.compare_xO_xI	40	1.0.5.3.1	synth with cache (only 1: unfold compare; only 1: simpl; only 1: rewrite compare_cont_spec; only 1: unfold compare; only 1: now split).	0.708025932312	435
Coq.PArith.BinPos.Pos.compare_sub_mask	40
Coq.PArith.BinPos.Pos.lt_iff_add	40
Coq.PArith.BinPos.Pos.gt_iff_add	40
Coq.PArith.BinPos.Pos.compare_cont_refl	40	5.0.0.0.0.18	synth with cache (only 1: induction p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: auto).	1.69727110863	2468
Coq.PArith.BinPos.Pos.compare_cont_antisym	40
Coq.PArith.BinPos.Pos.compare_eq_iff	40
Coq.PArith.BinPos.Pos.compare_antisym	40
Coq.PArith.BinPos.Pos.compare_lt_iff	40	0.0.0.0.2	synth with cache (only 1: unfold ltb, lt; only 1: destruct (p ?= q); only 1: now split; only 1: now split; only 1: now split).	0.0213470458984	7
Coq.PArith.BinPos.Pos.compare_le_iff	40	9	synth with cache (only 1: reflexivity).	0.107157945633	33
Coq.PArith.BinPos.Pos.gt_lt_iff	40	2.2	synth with cache (only 1: unfold gt; only 1: now rewrite <- compare_lt_iff, compare_antisym, CompOpp_iff).	0.297720909119	73
Coq.PArith.BinPos.Pos.gt_lt	40	0.0	synth with cache (only 1: unfold lt, gt; only 1: now rewrite compare_antisym, CompOpp_iff).	0.0167939662933	2
Coq.PArith.BinPos.Pos.lt_gt	40	0	synth with cache (only 1: apply gt_lt_iff).	0.00710391998291	1
Coq.PArith.BinPos.Pos.ge_le_iff	40	6.3	synth with cache (only 1: unfold ge, lt, compare; only 1: now rewrite <- compare_le_iff, compare_antisym, CompOpp_iff).	0.164593935013	55
Coq.PArith.BinPos.Pos.ge_le	40	0.0	synth with cache (only 1: unfold le, ge; only 1: now rewrite compare_antisym, CompOpp_iff).	0.0141651630402	2
Coq.PArith.BinPos.Pos.le_ge	40	0	synth with cache (only 1: apply ge_le_iff).	0.00692296028137	1
Coq.PArith.BinPos.Pos.compare_succ_r	40
Coq.PArith.BinPos.Pos.compare_succ_l	40
Coq.PArith.BinPos.Pos.lt_succ_r	40	2.7.8.1	synth with cache (only 1: unfold lt; only 1: revert q; only 1: fix odd_spec 1; only 1: now destruct compare || now destruct p).	27.127022028	11306
Coq.PArith.BinPos.Pos.lt_succ_diag_r	40	0.0.27	synth with cache (only 1: apply Nat.lt_succ_r; only 1: apply lt_eq_cases; only 1: now right).	24.6303901672	19945
Coq.PArith.BinPos.Pos.compare_succ_succ	40
Coq.PArith.BinPos.Pos.le_1_l	40	1.13	synth with cache (only 1: unfold le; only 1: apply compare_succ_l || apply compare_succ_r || now destruct p || now destruct q).	0.530259132385	478
Coq.PArith.BinPos.Pos.nlt_1_r	40	2	synth with cache (only 1: now destruct p).	0.0305359363556	13
Coq.PArith.BinPos.Pos.lt_1_succ	40	1	synth with cache (only 1: now destruct p).	0.0560250282288	34
Coq.PArith.BinPos.Pos.le_nlt	40	0.0	synth with cache (only 1: unfold lt, le; only 1: now rewrite compare_antisym, CompOpp_iff).	0.0113430023193	2
Coq.PArith.BinPos.Pos.lt_nle	40	19	synth with cache (only 1: now rewrite <- Nat.compare_nle_iff, Nat.compare_antisym, CompOpp_iff).	37.2201011181	10385
Coq.PArith.BinPos.Pos.lt_le_incl	40	9	synth with cache (only 1: congruence).	0.253308057785	56
Coq.PArith.BinPos.Pos.lt_lt_succ	40	0.0.1.1	synth with cache (only 1: intro H; only 1: rewrite Nat.lt_succ_r; only 1: apply le_lteq; only 1: now left).	0.0243158340454	15
Coq.PArith.BinPos.Pos.succ_lt_mono	40
Coq.PArith.BinPos.Pos.succ_le_mono	40
Coq.PArith.BinPos.Pos.lt_trans	40
Coq.PArith.BinPos.Pos.lt_ind	40
Coq.PArith.BinPos.Pos.lt_strorder	40	0.0.0.0.8.1.3.0.0	synth with cache (only 1: split; only 1: exact Nat.lt_irrefl; only 1: intro l; only 1: intro n; only 1: intros H; only 1: rewrite 3!lt_iff_add; only 1: intros (r, Hr) (s, Hs); only 1: exists (r + s); only 1: now rewrite add_assoc, Hr, Hs).	0.894701957703	988
Coq.PArith.BinPos.Pos.lt_compat	40	3	synth with cache (only 1: solve_proper).	0.152015924454	20
Coq.PArith.BinPos.Pos.lt_total	40
Coq.PArith.BinPos.Pos.le_refl	40	0.0	synth with cache (only 1: apply lt_eq_cases; only 1: now right).	0.0121459960938	2
Coq.PArith.BinPos.Pos.le_lt_trans	40
Coq.PArith.BinPos.Pos.lt_le_trans	40	0.0.0.0.3.13	synth with cache (only 1: intro H2; only 1: intros H; only 1: apply le_lteq in H; only 1: destruct H; only 1: now apply lt_trans with m; only 1: now subst).	4.30079889297	2332
Coq.PArith.BinPos.Pos.le_trans	40
Coq.PArith.BinPos.Pos.le_succ_l	40
Coq.PArith.BinPos.Pos.le_antisym	40
Coq.PArith.BinPos.Pos.le_preorder	40
Coq.PArith.BinPos.Pos.le_partorder	40
Coq.PArith.BinPos.Pos.add_compare_mono_l	40
Coq.PArith.BinPos.Pos.add_compare_mono_r	40
Coq.PArith.BinPos.Pos.lt_add_diag_r	40
Coq.PArith.BinPos.Pos.add_lt_mono_l	40
Coq.PArith.BinPos.Pos.add_lt_mono_r	40	0.0.4.0	synth with cache (only 1: unfold lt; only 1: rewrite 2!(add_comm _ p); only 1: rewrite add_compare_mono_l; only 1: apply iff_refl).	0.0519869327545	25
Coq.PArith.BinPos.Pos.add_lt_mono	40
Coq.PArith.BinPos.Pos.add_le_mono_l	40
Coq.PArith.BinPos.Pos.add_le_mono_r	40	0.0.0.4	synth with cache (only 1: rewrite 2!(add_comm _ p); only 1: unfold le; only 1: rewrite add_compare_mono_l; only 1: apply iff_refl).	0.12454199791	44
Coq.PArith.BinPos.Pos.add_le_mono	40
Coq.PArith.BinPos.Pos.mul_compare_mono_l	40
Coq.PArith.BinPos.Pos.mul_compare_mono_r	40
Coq.PArith.BinPos.Pos.mul_lt_mono_l	40	2.10.6.1	synth with cache (only 1: revert q r; only 1: intros H; only 1: fix even_spec 1; only 1: trivial).	25.5319640636	18341
Coq.PArith.BinPos.Pos.mul_lt_mono_r	40	0.0.6.0	synth with cache (only 1: unfold lt; only 1: rewrite 2!(mul_comm _ p); only 1: rewrite mul_compare_mono_l; only 1: apply iff_refl).	0.0233421325684	13
Coq.PArith.BinPos.Pos.mul_lt_mono	40
Coq.PArith.BinPos.Pos.mul_le_mono_l	40	0.2.0	synth with cache (only 1: unfold le; only 1: rewrite mul_compare_mono_l; only 1: apply iff_refl).	0.0162041187286	5
Coq.PArith.BinPos.Pos.mul_le_mono_r	40	0.3.0	synth with cache (only 1: unfold le; only 1: rewrite mul_compare_mono_r; only 1: apply iff_refl).	0.0164661407471	6
Coq.PArith.BinPos.Pos.mul_le_mono	40
Coq.PArith.BinPos.Pos.lt_add_r	40	0.0	synth with cache (only 1: rewrite lt_iff_add; only 1: now exists q).	0.0118749141693	2
Coq.PArith.BinPos.Pos.lt_not_add_l	40	0.0.1.1.0.1.0.2.1.7	synth with cache (only 1: unfold lt, le; only 1: rewrite compare_sub_mask; only 1: case sub_mask_spec; only 1: intros H; only 1: rewrite add_comm in H; only 1: elim (add_no_neutral _ _ H); only 1: discriminate; only 1: intros r H; only 1: rewrite <- add_assoc, add_comm in H; only 1: elim (add_no_neutral _ _ H)).	10.7792129517	9410
Coq.PArith.BinPos.Pos.pow_gt_1	40
Coq.PArith.BinPos.Pos.sub_1_r	40	1	synth with cache (only 1: now destruct p).	0.0353140830994	2
Coq.PArith.BinPos.Pos.pred_sub	40	0	synth with cache (only 1: now destruct p).	0.0090548992157	1
Coq.PArith.BinPos.Pos.sub_succ_r	40
Coq.PArith.BinPos.Pos.sub_mask_pos'	40
Coq.PArith.BinPos.Pos.sub_mask_pos	40
Coq.PArith.BinPos.Pos.sub_add	40
Coq.PArith.BinPos.Pos.add_sub	40
Coq.PArith.BinPos.Pos.mul_sub_distr_l	40
Coq.PArith.BinPos.Pos.mul_sub_distr_r	40
Coq.PArith.BinPos.Pos.sub_lt_mono_l	40
Coq.PArith.BinPos.Pos.sub_compare_mono_l	40
Coq.PArith.BinPos.Pos.sub_compare_mono_r	40
Coq.PArith.BinPos.Pos.sub_lt_mono_r	40
Coq.PArith.BinPos.Pos.sub_decr	40
Coq.PArith.BinPos.Pos.add_sub_assoc	40
Coq.PArith.BinPos.Pos.sub_add_distr	40
Coq.PArith.BinPos.Pos.sub_sub_distr	40
Coq.PArith.BinPos.Pos.sub_xO_xO	40
Coq.PArith.BinPos.Pos.sub_xI_xI	40	0.0.0.0	synth with cache (only 1: intros H; only 1: unfold sub; only 1: simpl; only 1: now destruct (sub_mask_pos n m H) as (p, ->)).	0.0196390151978	4
Coq.PArith.BinPos.Pos.sub_xI_xO	40	0.0.0.0	synth with cache (only 1: intros H; only 1: unfold sub; only 1: simpl; only 1: now destruct (sub_mask_pos n m H) as (p, ->)).	0.0199730396271	4
Coq.PArith.BinPos.Pos.sub_xO_xI	40
Coq.PArith.BinPos.Pos.sub_mask_neg_iff'	40
Coq.PArith.BinPos.Pos.sub_mask_neg	40	0.0.3	synth with cache (only 1: rewrite lt_iff_add; only 1: intros (r, <-); only 1: apply sub_mask_add_diag_r).	0.13828420639	19
Coq.PArith.BinPos.Pos.sub_le	40
Coq.PArith.BinPos.Pos.sub_lt	40
Coq.PArith.BinPos.Pos.sub_diag	40	3.0.1.0.1.5.3	synth with cache (only 1: unfold le, sub; only 1: case sub_mask_spec; only 1: congruence; only 1: intros r H; only 1: rewrite add_comm in H; only 1: elim (add_no_neutral _ _ H); only 1: congruence).	13.6545419693	1660
Coq.PArith.BinPos.Pos.size_nat_monotone	40
Coq.PArith.BinPos.Pos.size_gt	40
Coq.PArith.BinPos.Pos.size_le	40
Coq.PArith.BinPos.Pos.max_l	40
Coq.PArith.BinPos.Pos.max_r	40	0.0.0.1.0.0.0.0	synth with cache (only 1: intros x y H; only 1: unfold max; only 1: case compare_spec; only 1: auto; only 1: auto; only 1: intros H'; only 1: apply le_nlt in H; only 1: now elim H).	0.0614521503448	22
Coq.PArith.BinPos.Pos.min_l	40
Coq.PArith.BinPos.Pos.min_r	40	1.0.0.0.0.0.0.0.1.0	synth with cache (only 1: unfold le, min; only 1: intros; only 1: case compare_spec; only 1: auto; only 1: rewrite compare_antisym, CompOpp_iff in H; only 1: intros H'; only 1: apply le_nlt in H; only 1: apply le_nlt in H; only 1: now elim H; only 1: constructor).	1.25087594986	667
Coq.PArith.BinPos.Pos.max_1_l	40	0.1.6.2.32	synth with cache (only 1: induction n; only 1: intuition; only 1: reflexivity || apply f_equal || exfalso; only 1: apply max_r || apply max_l; only 1: easy).	0.75313782692	1292
Coq.PArith.BinPos.Pos.max_1_r	40	0.0.0.0.0.0.0.0	synth with cache (only 1: unfold max; only 1: case compare_spec; only 1: auto; only 1: intros H; only 1: apply lt_nle in H; only 1: elim H; only 1: apply le_1_l; only 1: auto).	0.0291028022766	8
Coq.PArith.BinPos.Pos.min_1_l	40	0.0.0.0.1.0.0.3	synth with cache (only 1: unfold min; only 1: case compare_spec; only 1: auto; only 1: auto; only 1: intros H; only 1: apply lt_nle in H; only 1: elim H; only 1: apply le_1_l).	0.418303966522	252
Coq.PArith.BinPos.Pos.min_1_r	40	0.0.0.0.0.0.0.0	synth with cache (only 1: unfold min; only 1: case compare_spec; only 1: auto; only 1: intros H; only 1: apply lt_nle in H; only 1: elim H; only 1: apply le_1_l; only 1: auto).	0.0307989120483	8
Coq.PArith.BinPos.Pos.succ_max_distr	40
Coq.PArith.BinPos.Pos.succ_min_distr	40	0.0.0.2.0.1.0	synth with cache (only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: apply min_mono; only 1: eauto with *; only 1: intros x x'; only 1: apply succ_le_mono).	0.0480618476868	18
Coq.PArith.BinPos.Pos.add_max_distr_l	40	2.1.1.0.0.0.0	synth with cache (only 1: apply max_mono; only 1: eauto with *; only 1: repeat red; only 1: intros q r; only 1: unfold le, sub; only 1: rewrite add_compare_mono_l; only 1: easy').	0.501919031143	240
Coq.PArith.BinPos.Pos.add_max_distr_r	40
Coq.PArith.BinPos.Pos.add_min_distr_l	40	0.0.0.3	synth with cache (only 1: apply min_mono; only 1: eauto with *; only 1: intros x x'; only 1: apply add_le_mono_l).	0.0259799957275	7
Coq.PArith.BinPos.Pos.add_min_distr_r	40	0.0.0.1	synth with cache (only 1: rewrite 3!(add_comm _ p); only 1: apply min_monotone; only 1: intros x x'; only 1: apply add_le_mono_l).	0.0198428630829	5
Coq.PArith.BinPos.Pos.mul_max_distr_l	40
Coq.PArith.BinPos.Pos.mul_max_distr_r	40
Coq.PArith.BinPos.Pos.mul_min_distr_l	40	0.0.3	synth with cache (only 1: apply min_monotone; only 1: intros x x'; only 1: apply mul_le_mono_l).	0.0155169963837	6
Coq.PArith.BinPos.Pos.mul_min_distr_r	40	0.0.0.1	synth with cache (only 1: rewrite 3!(mul_comm _ p); only 1: apply min_monotone; only 1: intros x x'; only 1: apply mul_le_mono_l).	0.019424200058	5
Coq.PArith.BinPos.Pos.iter_op_succ	40
Coq.PArith.BinPos.Pos.of_nat_succ	40	2.0.10.0.1.6	synth with cache (only 1: Nat.induct ltac:(n); only 1: simpl; only 1: now f_equal; only 1: fix odd_specT 1; only 1: intros m IH; only 1: auto).	3.84276604652	4381
Coq.PArith.BinPos.Pos.pred_of_succ_nat	40	0.8.7.0.13	synth with cache (only 1: nzinduct n; only 1: trivial; only 1: fix even_spec 1; only 1: intros x; only 1: easy).	13.1210000515	10179
Coq.PArith.BinPos.Pos.succ_of_nat	40	1.1.5.0.0.0.2.2.4	synth with cache (only 1: induction n as [| n IHn]; only 1: easy'; only 1: simpl; only 1: intro H; only 1: destruct n; only 1: now f_equal; only 1: f_equal; only 1: simpl; only 1: auto).	30.8438332081	23282
Coq.PArith.BinPos.Pos.sqrtrem_step_spec	40
Coq.PArith.BinPos.Pos.sqrtrem_spec	40
Coq.PArith.BinPos.Pos.sqrt_spec	40
Coq.PArith.BinPos.Pos.divide_add_cancel_l	40
Coq.PArith.BinPos.Pos.divide_xO_xI	40
Coq.PArith.BinPos.Pos.divide_xO_xO	40
Coq.PArith.BinPos.Pos.divide_mul_l	40
Coq.PArith.BinPos.Pos.divide_mul_r	40	1.0.10.15.5	synth with cache (only 1: revert q r; only 1: revert p; only 1: intros n m p; only 1: rewrite Nat.mul_comm; only 1: apply Nat.divide_mul_l).	14.6972289085	15559
Coq.PArith.BinPos.Pos.ggcdn_gcdn	40
Coq.PArith.BinPos.Pos.ggcd_gcd	40
Coq.PArith.BinPos.Pos.ggcdn_correct_divisors	40
Coq.PArith.BinPos.Pos.ggcd_correct_divisors	40
Coq.PArith.BinPos.Pos.gcd_divide_l	40
Coq.PArith.BinPos.Pos.gcd_divide_r	40	3.3.9	synth with cache (only 1: intro n; only 1: fix sqrtrem_spec 1; only 1: easy).	2.77025914192	2625
Coq.PArith.BinPos.Pos.gcdn_greatest	40
Coq.PArith.BinPos.Pos.gcd_greatest	40
Coq.PArith.BinPos.Pos.ggcd_greatest	40
Coq.PArith.BinPos.Peqb_true_eq	40	1.2.44	synth with cache (only 1: fix even_specT 1; only 1: intro q; only 1: auto).	1.50769090652	4161
Coq.PArith.BinPos.Pcompare_eq_Gt	40	0.0.0.1.0	synth with cache (only 1: unfold Pos.gt; only 1: destruct (p ?= q); only 1: now split; only 1: now split; only 1: now split).	0.0235619544983	6
Coq.PArith.BinPos.Pminus_mask_Gt	40
Coq.PArith.BinPos.Pplus_minus	40
Coq.PArith.BinPos.Dcompare	40	0.0.3.6.4	synth with cache (only 1: intro m; only 1: destruct m; only 1: now intuition; only 1: now intuition; only 1: intuition).	0.45800280571	397
Coq.Arith.Le.le_elim_rel_stt	40	2.12.10	synth with cache (only 1: intros IH m H1 H2; only 1: fix OddT_EvenT_rect 1; only 1: auto).	12.9895370007	8724
Coq.Arith.Even.even_or_odd_stt	40	11.6.38.12	synth with cache (only 1: Nat.induct n; only 1: intuition; only 1: intros x; only 1: intuition).	18.9661791325	34168
Coq.Arith.Even.even_odd_dec_stt	40	0.1.0.0.0.0	synth with cache (only 1: induction n as [| n IHn]; only 1: auto with arith; only 1: elim IHn; only 1: intros; only 1: auto with arith; only 1: auto with arith).	0.203855991364	31
Coq.Arith.Even.not_even_and_odd_stt	40
Coq.Arith.Even.even_plus_split_stt	40
Coq.Arith.Even.odd_plus_split_stt	40	0	synth with cache (only 1: parity_binop_dep).	0.247502803802	1
Coq.Arith.Even.even_even_plus_stt	40
Coq.Arith.Even.odd_plus_l_stt	40	0	synth with cache (only 1: parity_binop_dep).	0.149884939194	1
Coq.Arith.Even.odd_plus_r_stt	40	0	synth with cache (only 1: parity_binop_dep).	0.13769197464	1
Coq.Arith.Even.odd_even_plus_stt	40	0	synth with cache (only 1: parity_binop_dep).	0.123108148575	1
Coq.Arith.Even.even_plus_aux_stt	40	0.0.2.0.1	synth with cache (only 1: revert n; only 1: intro p; only 1: split; only 1: parity_binop_dep; only 1: parity_binop_dep).	0.548955917358	20
Coq.Arith.Even.even_plus_even_inv_r_stt	40	0	synth with cache (only 1: parity_binop_dep).	0.136835098267	1
Coq.Arith.Even.even_plus_even_inv_l_stt	40	0	synth with cache (only 1: parity_binop_dep).	0.236377000809	1
Coq.Arith.Even.even_plus_odd_inv_r_stt	40	0	synth with cache (only 1: parity_binop_dep).	0.146570920944	1
Coq.Arith.Even.even_plus_odd_inv_l_stt	40	0	synth with cache (only 1: parity_binop_dep).	0.149896860123	1
Coq.Arith.Even.odd_plus_even_inv_l_stt	40	0	synth with cache (only 1: parity_binop_dep).	0.177628993988	1
Coq.Arith.Even.odd_plus_even_inv_r_stt	40	0	synth with cache (only 1: parity_binop_dep).	0.147552967072	1
Coq.Arith.Even.odd_plus_odd_inv_l_stt	40	0	synth with cache (only 1: parity_binop_dep).	0.139931917191	1
Coq.Arith.Even.odd_plus_odd_inv_r_stt	40	0	synth with cache (only 1: parity_binop_dep).	0.287797212601	1
Coq.Arith.Even.even_mult_aux_stt	40	1	synth with cache (only 1: parity_binop_dep).	0.327883958817	2
Coq.Arith.Even.even_mult_l_stt	40	2	synth with cache (only 1: parity_binop_dep).	0.104486942291	3
Coq.Arith.Even.even_mult_r_stt	40	0	synth with cache (only 1: parity_binop_dep).	0.100694179535	1
Coq.Arith.Even.even_mult_inv_r_stt	40	0	synth with cache (only 1: parity_binop_dep).	0.149158000946	1
Coq.Arith.Even.even_mult_inv_l_stt	40	0	synth with cache (only 1: parity_binop_dep).	0.170843839645	1
Coq.Arith.Even.odd_mult_stt	40	1	synth with cache (only 1: parity_binop_dep).	0.140827894211	2
Coq.Arith.Even.odd_mult_inv_l_stt	40	3	synth with cache (only 1: parity_binop_dep).	0.140332937241	12
Coq.Arith.Even.odd_mult_inv_r_stt	40	0	synth with cache (only 1: parity_binop_dep).	0.0990312099457	1
Coq.Arith.Between.Between.bet_eq	40	3.13	synth with cache (only 1: intros n m; only 1: now intros ->).	0.473081111908	428
Coq.Arith.Between.Between.between_le	40	2.1.16.2	synth with cache (only 1: intros x y H; only 1: elim H; only 1: left; only 1: auto).	4.86461591721	2823
Coq.Arith.Between.Between.between_Sk_l	40
Coq.Arith.Between.Between.between_restr	40
Coq.Arith.Between.Between.exists_le_S	40	1.6.0.2	synth with cache (only 1: induction 1; only 1: auto; only 1: apply le_n_S; only 1: trivial).	0.317719936371	355
Coq.Arith.Between.Between.exists_S_le	40	4.5.6.2	synth with cache (only 1: intros n m; only 1: revert m; only 1: fix le_div2 1; only 1: trivial).	3.76836585999	3727
Coq.Arith.Between.Between.in_int_intro	40	0.0.0.6	synth with cache (only 1: fix gcd_greatest 1; only 1: intros [| a] b; only 1: auto; only 1: auto).	0.081976890564	33
Coq.Arith.Between.Between.in_int_lt	40	14.4.3	synth with cache (only 1: intros n m p; only 1: induction 1; only 1: Nat.Private_Tac.order).	3.04174208641	2925
Coq.Arith.Between.Between.in_int_p_Sq	40
Coq.Arith.Between.Between.in_int_S	40	1.0	synth with cache (only 1: intros p q r []; only 1: auto).	0.0120630264282	3
Coq.Arith.Between.Between.in_int_Sp_q	40	2.2.7	synth with cache (only 1: intros n m; only 1: fix OddT_EvenT_rect 1; only 1: auto).	0.453139066696	436
Coq.Arith.Between.Between.between_in_int	40	4.0.3.0.12.0	synth with cache (only 1: induction 1; only 1: intros; only 1: destruct H; only 1: Nat.order; only 1: fix OddT_EvenT_rect 1; only 1: assumption).	1.88618397713	3103
Coq.Arith.Between.Between.in_int_between	40	0.2.15	synth with cache (only 1: induction 1; only 1: auto; only 1: auto).	1.3326010704	1785
Coq.Arith.Between.Between.exists_in_int	40	1.1.2.26	synth with cache (only 1: fix gcd_divide 1; only 1: induction 1; only 1: auto; only 1: auto).	2.82341909409	4685
Coq.Arith.Between.Between.in_int_exists	40
Coq.Arith.Between.Between.between_or_exists	40
Coq.Arith.Between.Between.between_not_exists	40	1.0.5.31	synth with cache (only 1: intro n; only 1: fix OddT_EvenT_rect 1; only 1: intros P_or_Q; only 1: auto).	8.65225696564	17772
Coq.Arith.Between.Between.nth_le	40
Coq.Arith.Between.Between.event_O	40	1.5.3.5.0.1.0.0	synth with cache (only 1: intros [[| k] H0]; only 1: auto; only 1: exfalso; only 1: absurd (k < k); only 1: Nat.order_pos; only 1: eapply in_int_lt; only 1: red; only 1: now try split).	1.30262708664	2292
Coq.Arith.Peano_dec.O_or_S	40	5.12.0.24.1	synth with cache (only 1: right; only 1: nzinduct n; only 1: Nat.order_nz; only 1: fix even_spec 1; only 1: easy).	34.914413929	53968
Coq.Arith.Peano_dec.dec_eq_nat	40
Coq.Arith.Peano_dec.le_unique	40
Coq.Arith.Mult.odd_even_lem_stt	40
Coq.Arith.Arith_prebase.minus_plus_simpl_l_reverse_stt	40	2.1.5	synth with cache (only 1: Nat.induct p; only 1: now Nat.nzsimpl; only 1: auto).	1.31934499741	220
Coq.Arith.Arith_prebase.mult_O_le_stt	40
Coq.Arith.Div2.ind_0_1_SS_stt	40	0.0.0.11.0.0	synth with cache (only 1: intros A A_wd A0 AS; only 1: assert (D : forall n, A n /\ A (S n)); only 1: fix le_div2 1; only 1: assumption; only 1: intro n; only 1: exact (proj1 (D n))).	2.83027005196	1711
Coq.Arith.Div2.even_div2_stt	40
Coq.Arith.Div2.odd_div2_stt	40
Coq.Arith.Div2.div2_even_stt	40
Coq.Arith.Div2.div2_odd_stt	40
Coq.Arith.Div2.even_odd_div2_stt	40	6.4.5.1	synth with cache (only 1: revert n; only 1: fix Odd_alt_Odd 1; only 1: simpl Nat.div2; only 1: auto).	25.3360669613	15986
Coq.Arith.Div2.even_odd_double_stt	40	5.1.0.0.0	synth with cache (only 1: revert n; only 1: fix Even_Odd_double 1; only 1: intros n; only 1: destruct (Even_Odd_double n) as ((Ev, Ev'), (Od, Od')); only 1: auto).	0.572337150574	282
Coq.Arith.Div2.even_2n_stt	40	2.32.15	synth with cache (only 1: intros H; only 1: fix Even_Odd_double 1; only 1: auto using div2_odd, div2_even, odd_div2, even_div2).	14.6476531029	37713
Coq.Arith.Div2.odd_S2n_stt	40	1.0.1	synth with cache (only 1: intros n H; only 1: exists (Nat.div2 n); only 1: auto with arith).	0.0420711040497	20
Coq.Arith.Div2.div2_double_stt	40	2	synth with cache (only 1: apply Nat.div2_double).	0.138919115067	60
Coq.Arith.Div2.div2_double_plus_one_stt	40	1.14	synth with cache (only 1: rewrite Nat.div2_succ_double; only 1: Nat.Private_Tac.order).	2.639564991	1982
Coq.Arith.Plus.plus_is_one_stt	40
Coq.Arith.Wf_nat.Well_founded_Nat.well_founded_ltof	40
Coq.Arith.Wf_nat.Well_founded_Nat.well_founded_gtof	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: assert (H : forall n (a : A), f a < n -> Acc ltof a); only 1: intro n; only 1: induction n as [| n IHn]; only 1: intros a Ha; only 1: absurd (f a < 0); only 1: apply Nat.nlt_0_r; only 1: auto; only 1: intros a Ha; only 1: apply Acc_intro; only 1: unfold ltof at 1; only 1: intros b Hb; only 1: apply IHn; only 1: apply Nat.lt_le_trans with (f a); only 1: auto; only 1: now apply Nat.succ_le_mono; only 1: intros a; only 1: apply (H (S (f a))); only 1: apply Nat.lt_succ_diag_r).	9.89987897873	7137
Coq.Arith.Wf_nat.Well_founded_Nat.induction_ltof1	40
Coq.Arith.Wf_nat.Well_founded_Nat.induction_gtof1	40	0.0.0.0.0.0.3.1.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros P F; only 1: assert (H : forall n (a : A), f a < n -> P a); only 1: intro n; only 1: induction n as [| n IHn]; only 1: intros a Ha; only 1: absurd (f a < 0); only 1: apply Nat.nlt_0_r; only 1: auto; only 1: intros a Ha; only 1: apply F; only 1: intros b Hb; only 1: apply IHn; only 1: apply Nat.lt_le_trans with (f a); only 1: auto; only 1: now apply Nat.succ_le_mono; only 1: intros a; only 1: apply (H (S (f a))); only 1: apply Nat.lt_succ_diag_r).	34.8374910355	24690
Coq.Arith.Wf_nat.Well_founded_Nat.induction_ltof2	40	1	synth with cache (only 1: exact induction_ltof1).	0.367486953735	156
Coq.Arith.Wf_nat.Well_founded_Nat.induction_gtof2	40	0	synth with cache (only 1: exact induction_ltof1).	0.007483959198	1
Coq.Arith.Wf_nat.Well_founded_Nat.well_founded_lt_compat	40
Coq.Arith.Wf_nat.lt_wf	40
Coq.Arith.Wf_nat.lt_wf_rect1	40
Coq.Arith.Wf_nat.lt_wf_rect	40	0	synth with cache (only 1: exact (fun p P F => induction_ltof1 nat (fun m => m) P F p)).	0.00714898109436	1
Coq.Arith.Wf_nat.lt_wf_rec1	40	0	synth with cache (only 1: exact (fun p P F => induction_ltof1 nat (fun m => m) P F p)).	0.00727105140686	1
Coq.Arith.Wf_nat.lt_wf_rec	40	0	synth with cache (only 1: exact (fun p P F => induction_ltof1 nat (fun m => m) P F p)).	0.00724291801453	1
Coq.Arith.Wf_nat.lt_wf_ind	40	0	synth with cache (only 1: exact (fun p P F => induction_ltof1 nat (fun m => m) P F p)).	0.00727486610413	1
Coq.Arith.Wf_nat.gt_wf_rect	40	0.0.0.0	synth with cache (only 1: intro p; only 1: intros; only 1: elim (lt_wf p); only 1: auto).	0.0293629169464	4
Coq.Arith.Wf_nat.gt_wf_rec	40	0	synth with cache (only 1: exact lt_wf_rect).	0.00650405883789	1
Coq.Arith.Wf_nat.lt_wf_double_rect	40
Coq.Arith.Wf_nat.lt_wf_double_rec	40	0.0.0.0.0.0.0	synth with cache (only 1: intros P Hrec p; only 1: pattern p; only 1: apply lt_wf_rect; only 1: intros n H q; only 1: pattern q; only 1: apply lt_wf_rect; only 1: auto).	0.0313899517059	7
Coq.Arith.Wf_nat.lt_wf_double_ind	40	0.0.0.0.0.0.0	synth with cache (only 1: intros P Hrec p; only 1: pattern p; only 1: apply lt_wf_rect; only 1: intros n H q; only 1: pattern q; only 1: apply lt_wf_rect; only 1: auto).	0.0325751304626	7
Coq.Arith.Wf_nat.LT_WF_REL.acc_lt_rel	40
Coq.Arith.Wf_nat.LT_WF_REL.well_founded_inv_lt_rel_compat	40
Coq.Arith.Wf_nat.well_founded_inv_rel_inv_lt_rel	40
Coq.Arith.Wf_nat.dec_inh_nat_subset_has_unique_least_element	40
Coq.Arith.Factorial.lt_O_fact	40
Coq.Arith.Factorial.fact_neq_0	40
Coq.Arith.Factorial.fact_le	40
Coq.Arith.Compare_dec.zerop	40	19.25.0.0.35	synth with cache (only 1: induction n; only 1: now left; only 1: right; only 1: intuition; only 1: apply le_n_S, le_0_n).	23.167140007	44713
Coq.Arith.Compare_dec.lt_eq_lt_dec	40
Coq.Arith.Compare_dec.gt_eq_gt_dec	40
Coq.Arith.Compare_dec.le_lt_dec	40
Coq.Arith.Compare_dec.le_le_S_dec	40
Coq.Arith.Compare_dec.le_ge_dec	40
Coq.Arith.Compare_dec.le_gt_dec	40	0.0.0	synth with cache (only 1: elim (le_lt_dec n m); only 1: auto; only 1: auto).	0.0317358970642	3
Coq.Arith.Compare_dec.le_lt_eq_dec	40
Coq.Arith.Compare_dec.le_dec	40
Coq.Arith.Compare_dec.lt_dec	40	0.4.0.0.0.0.3.2.4.0	synth with cache (only 1: destruct (le_gt_dec n m); only 1: destruct (lt_eq_lt_dec n m); only 1: intuition Nat.order; only 1: right; only 1: Nat.order; only 1: right; only 1: intros Hle; only 1: apply (Nat.lt_irrefl n), (Nat.le_lt_trans n m); only 1: Nat.Private_Tac.order; only 1: assumption).	13.9855890274	7680
Coq.Arith.Compare_dec.gt_dec	40	1	synth with cache (only 1: apply le_dec).	0.0199179649353	2
Coq.Arith.Compare_dec.ge_dec	40	1	synth with cache (only 1: apply le_dec).	0.0180099010468	2
Coq.Arith.Compare_dec.dec_le	40
Coq.Arith.Compare_dec.dec_lt	40	3	synth with cache (only 1: apply Nat.le_decidable).	0.0463650226593	20
Coq.Arith.Compare_dec.dec_gt	40	2	synth with cache (only 1: apply Nat.lt_decidable).	0.0257930755615	11
Coq.Arith.Compare_dec.dec_ge	40	1	synth with cache (only 1: apply Nat.le_decidable).	0.0200109481812	2
Coq.Arith.Compare_dec.not_eq	40	0.0.29	synth with cache (only 1: destruct (lt_eq_lt_dec n m); only 1: intuition Nat.order; only 1: intuition Nat.order).	5.19608902931	3252
Coq.Arith.Compare_dec.not_le	40	9.3	synth with cache (only 1: intro H; only 1: Nat.order).	0.166921854019	121
Coq.Arith.Compare_dec.not_gt	40	14.4	synth with cache (only 1: intro H; only 1: Nat.order).	0.625759124756	538
Coq.Arith.Compare_dec.not_ge	40	0	synth with cache (only 1: apply Nat.nle_gt).	0.0204000473022	1
Coq.Arith.Compare_dec.not_lt	40	1	synth with cache (only 1: apply Nat.nlt_ge).	0.0207810401917	2
Coq.Arith.Compare_dec.nat_compare_lt	40
Coq.Arith.Compare_dec.nat_compare_gt	40	5.4.2	synth with cache (only 1: revert m; only 1: fix even_spec 1; only 1: easy).	6.70821690559	2588
Coq.Arith.Compare_dec.nat_compare_le	40
Coq.Arith.Compare_dec.nat_compare_ge	40
Coq.Arith.Compare_dec.nat_compare_eq	40	2.0.0.0.0.3.0.1.3.0.0	synth with cache (only 1: revert m; only 1: induction n as [| n IHn]; only 1: destruct m; only 1: easy; only 1: easy; only 1: intro m; only 1: destruct m; only 1: simpl; only 1: easy; only 1: simpl; only 1: auto).	17.811011076	7783
Coq.Arith.Compare_dec.nat_compare_Lt_lt	40	0	synth with cache (only 1: apply Nat.compare_lt_iff).	0.0196058750153	1
Coq.Arith.Compare_dec.nat_compare_Gt_gt	40	1.5.6	synth with cache (only 1: revert m; only 1: intros H; only 1: apply Nat.compare_gt_iff).	0.385876178741	129
Coq.Arith.Compare_dec.nat_compare_equiv	40
Coq.Arith.Compare_dec.leb_iff_conv	40	3.3.0	synth with cache (only 1: revert m; only 1: fix even_spec 1; only 1: easy).	0.956202983856	208
Coq.Arith.Compare_dec.leb_correct	40
Coq.Arith.Compare_dec.leb_complete	40	5.2.0.0.0.0.2	synth with cache (only 1: induction n as [| n IHn]; only 1: destruct m; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy; only 1: apply Nat.leb_le).	27.0009658337	10287
Coq.Arith.Compare_dec.leb_correct_conv	40	0.0.0.0.1	synth with cache (only 1: rewrite Nat.leb_nle; only 1: intros LT EQ; only 1: apply (Nat.lt_irrefl n), (Nat.le_lt_trans n m); only 1: assumption; only 1: assumption).	0.054703950882	6
Coq.Arith.Compare_dec.leb_complete_conv	40	0.1	synth with cache (only 1: rewrite Nat.leb_nle; only 1: apply Nat.nle_gt).	0.034784078598	3
Coq.Arith.Compare_dec.leb_compare	40	12.4.1	synth with cache (only 1: revert m; only 1: fix odd_spec 1; only 1: easy).	33.1260900497	14567
Coq.Arith.EqNat.eq_nat_refl	40	3.3.14	synth with cache (only 1: induction n; only 1: split; only 1: trivial).	0.441251993179	381
Coq.Arith.EqNat.eq_nat_is_eq	40	4.0.6.7	synth with cache (only 1: revert m; only 1: fix even_spec 1; only 1: intro m; only 1: auto).	9.79361701012	6444
Coq.Arith.EqNat.eq_eq_nat	40	0.0	synth with cache (only 1: intros <-; only 1: apply eq_nat_refl).	0.0116360187531	2
Coq.Arith.EqNat.eq_nat_eq	40	1.1.0.1.0	synth with cache (only 1: revert m; only 1: intro m; only 1: revert m; only 1: intro m; only 1: apply eq_nat_is_eq).	0.407245874405	144
Coq.Arith.EqNat.eq_nat_elim	40	0.12.0	synth with cache (only 1: intros Base Step n; only 1: fix even_specT 1; only 1: contradiction || auto).	0.266192913055	403
Coq.Arith.EqNat.eq_nat_decide	40	0.2.1.0.0.0.0.1.1.0.0.0	synth with cache (only 1: intro n; only 1: induction n as [| n IHn]; only 1: intro m; only 1: simpl; only 1: destruct m as [| m]; only 1: auto; only 1: auto; only 1: intro m; only 1: destruct m as [| m]; only 1: auto; only 1: simpl; only 1: auto).	7.00717687607	3741
Coq.Arith.Euclid.eucl_dev	40
Coq.Arith.Euclid.quotient	40
Coq.Arith.Euclid.modulo	40
Coq.Arith.PeanoNat.Nat.bi_induction	40
Coq.Arith.PeanoNat.Nat.recursion_wd	40
Coq.Arith.PeanoNat.Nat.recursion_0	40	0	synth with cache (only 1: destr_bool).	0.0157771110535	1
Coq.Arith.PeanoNat.Nat.recursion_succ	40	1.1.2.3.2.6	synth with cache (only 1: intros A B f r H; only 1: unfold respectful; only 1: simpl; only 1: induction n; only 1: auto; only 1: auto).	3.38086891174	2494
Coq.Arith.PeanoNat.Nat.pred_succ	40	0.0.0	synth with cache (only 1: induction n; only 1: auto; only 1: auto).	0.0298700332642	3
Coq.Arith.PeanoNat.Nat.pred_0	40	0	synth with cache (only 1: reflexivity).	0.0170948505402	1
Coq.Arith.PeanoNat.Nat.one_succ	40	0	synth with cache (only 1: auto).	0.0171010494232	1
Coq.Arith.PeanoNat.Nat.two_succ	40	0	synth with cache (only 1: reflexivity).	0.0172758102417	1
Coq.Arith.PeanoNat.Nat.add_0_l	40	0.0.0.0.0	synth with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0371890068054	5
Coq.Arith.PeanoNat.Nat.add_succ_l	40	0.0.0.0.0	synth with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.040864944458	5
Coq.Arith.PeanoNat.Nat.sub_0_r	40	0.0.0.0.1	synth with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0413320064545	6
Coq.Arith.PeanoNat.Nat.sub_succ_r	40
Coq.Arith.PeanoNat.Nat.mul_0_l	40	1.0.0.0.0	synth with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0429139137268	6
Coq.Arith.PeanoNat.Nat.mul_succ_l	40
Coq.Arith.PeanoNat.Nat.lt_succ_r	40
Coq.Arith.PeanoNat.Nat.eqb_eq	40
Coq.Arith.PeanoNat.Nat.leb_le	40
Coq.Arith.PeanoNat.Nat.ltb_lt	40
Coq.Arith.PeanoNat.Nat.eq_dec	40	0	synth with cache (only 1: decide equality).	0.0379269123077	1
Coq.Arith.PeanoNat.Nat.compare_eq_iff	40
Coq.Arith.PeanoNat.Nat.compare_lt_iff	40
Coq.Arith.PeanoNat.Nat.compare_le_iff	40
Coq.Arith.PeanoNat.Nat.compare_antisym	40
Coq.Arith.PeanoNat.Nat.compare_succ	40	2.0.1.0.1	synth with cache (only 1: revert m; only 1: intro m; only 1: revert m; only 1: intro m; only 1: split).	0.0772500038147	12
Coq.Arith.PeanoNat.Nat.max_l	40	0.0.0.0.0.0.0.0.1.0.0.0.0.0.2	synth with cache (only 1: induction n as [| n IHn]; only 1: intro m; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: inversion 1; only 1: intro m; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	28.6460130215	10208
Coq.Arith.PeanoNat.Nat.max_r	40	0.0.0.0.1.0.0.0.1.1.0.3	synth with cache (only 1: induction n as [| n IHn]; only 1: intro m; only 1: simpl; only 1: trivial; only 1: intro m; only 1: destruct m; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	33.0700330734	9289
Coq.Arith.PeanoNat.Nat.min_l	40
Coq.Arith.PeanoNat.Nat.min_r	40
Coq.Arith.PeanoNat.Nat.pow_neg_r	40	4	synth with cache (only 1: inversion 1).	0.469758987427	21
Coq.Arith.PeanoNat.Nat.pow_0_r	40	2	synth with cache (only 1: now nzsimpl').	0.0363659858704	3
Coq.Arith.PeanoNat.Nat.pow_succ_r	40	2.2.0.0	synth with cache (only 1: simpl; only 1: inversion 1; only 1: now f_equiv; only 1: trivial).	0.0635988712311	8
Coq.Arith.PeanoNat.Nat.square_spec	40	4	synth with cache (only 1: now nzsimpl).	0.0348391532898	5
Coq.Arith.PeanoNat.Nat.Private_Parity.Even_0	40
Coq.Arith.PeanoNat.Nat.Private_Parity.Even_1	40
Coq.Arith.PeanoNat.Nat.Private_Parity.Even_2	40
Coq.Arith.PeanoNat.Nat.Private_Parity.Odd_0	40	0.19.34.16	synth with cache (only 1: intro n; only 1: case n; only 1: intros H; only 1: now nzsimpl).	20.5220470428	21780
Coq.Arith.PeanoNat.Nat.Private_Parity.Odd_1	40
Coq.Arith.PeanoNat.Nat.Private_Parity.Odd_2	40
Coq.Arith.PeanoNat.Nat.even_spec	40
Coq.Arith.PeanoNat.Nat.odd_spec	40	5.1.0.0	synth with cache (only 1: fix even_spec 1; only 1: intro n; only 1: rewrite even_spec; only 1: now split).	0.274657011032	38
Coq.Arith.PeanoNat.Nat.divmod_spec	40
Coq.Arith.PeanoNat.Nat.div_mod	40
Coq.Arith.PeanoNat.Nat.div_mod_eq	40	0.0.0.0.0.0.2.0	synth with cache (only 1: destruct y as [| y]; only 1: now nzsimpl; only 1: unfold div, modulo; only 1: generalize (divmod_spec x y 0 y (le_n y)); only 1: destruct divmod as (q, u); only 1: intros (U, V); only 1: simpl in *; only 1: now rewrite mul_0_r, sub_diag, !add_0_r in U).	0.111886978149	10
Coq.Arith.PeanoNat.Nat.mod_bound_pos	40
Coq.Arith.PeanoNat.Nat.sqrt_iter_spec	40
Coq.Arith.PeanoNat.Nat.sqrt_specif	40
Coq.Arith.PeanoNat.Nat.sqrt_neg	40	1.0	synth with cache (only 1: intro H; only 1: false_hyp ltac:(H) nlt_0_r).	0.035964012146	3
Coq.Arith.PeanoNat.Nat.log2_iter_spec	40
Coq.Arith.PeanoNat.Nat.log2_spec	40
Coq.Arith.PeanoNat.Nat.log2_nonpos	40	6.2	synth with cache (only 1: inversion 1; only 1: trivial).	0.177536964417	43
Coq.Arith.PeanoNat.Nat.gcd_divide	40
Coq.Arith.PeanoNat.Nat.gcd_divide_l	40
Coq.Arith.PeanoNat.Nat.gcd_divide_r	40	0	synth with cache (only 1: apply gcd_divide).	0.0210030078888	1
Coq.Arith.PeanoNat.Nat.gcd_greatest	40
Coq.Arith.PeanoNat.Nat.gcd_nonneg	40	9	synth with cache (only 1: apply le_0_l).	0.0664329528809	14
Coq.Arith.PeanoNat.Nat.div2_double	40	0.3.0.1.0.15	synth with cache (only 1: nzinduct n; only 1: reflexivity; only 1: intro m; only 1: simpl; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	20.1867051125	5484
Coq.Arith.PeanoNat.Nat.div2_succ_double	40	0.0.0.0.1.3	synth with cache (only 1: simpl; only 1: induction n; only 1: trivial; only 1: simpl; only 1: rewrite add_succ_r; only 1: now f_equal).	0.0983030796051	10
Coq.Arith.PeanoNat.Nat.le_div2	40	0.10.0.15	synth with cache (only 1: cases ltac:(n); only 1: trivial; only 1: fix odd_spec 1; only 1: trivial).	26.8281390667	17795
Coq.Arith.PeanoNat.Nat.lt_div2	40
Coq.Arith.PeanoNat.Nat.div2_decr	40
Coq.Arith.PeanoNat.Nat.double_twice	40	2.0	synth with cache (only 1: intro n; only 1: now nzsimpl').	0.0668020248413	4
Coq.Arith.PeanoNat.Nat.testbit_0_l	40	0.0.1.5.0	synth with cache (only 1: destr_bool; only 1: nzinduct n; only 1: reflexivity; only 1: intros; only 1: now nzsimpl).	0.35502409935	54
Coq.Arith.PeanoNat.Nat.testbit_odd_0	40	0.13.1.3.0.3.3.1.2	synth with cache (only 1: simpl; only 1: unfold odd; only 1: apply eq_true_iff_eq; only 1: nzsimpl; only 1: simpl; only 1: split; only 1: easy; only 1: fix even_spec 1; only 1: assumption).	13.3778882027	5616
Coq.Arith.PeanoNat.Nat.testbit_even_0	40
Coq.Arith.PeanoNat.Nat.testbit_odd_succ'	40
Coq.Arith.PeanoNat.Nat.testbit_even_succ'	40
Coq.Arith.PeanoNat.Nat.shiftr_specif	40
Coq.Arith.PeanoNat.Nat.shiftl_specif_high	40
Coq.Arith.PeanoNat.Nat.shiftl_spec_low	40	4.12	synth with cache (only 1: fix gcd_greatest 1; only 1: assumption).	4.64494490623	1658
Coq.Arith.PeanoNat.Nat.div2_bitwise	40
Coq.Arith.PeanoNat.Nat.odd_bitwise	40
Coq.Arith.PeanoNat.Nat.testbit_bitwise_1	40
Coq.Arith.PeanoNat.Nat.testbit_bitwise_2	40
Coq.Arith.PeanoNat.Nat.land_spec	40
Coq.Arith.PeanoNat.Nat.ldiff_spec	40	0.0.0	synth with cache (only 1: apply testbit_bitwise_1; only 1: destr_bool; only 1: trivial).	0.0398890972137	3
Coq.Arith.PeanoNat.Nat.lor_spec	40
Coq.Arith.PeanoNat.Nat.lxor_spec	40	6.8.0.2	synth with cache (only 1: apply testbit_bitwise_2; only 1: trivial; only 1: solve_max; only 1: solve_max).	15.4878649712	6913
Coq.Arith.PeanoNat.Nat.div2_spec	40	0	synth with cache (only 1: trivial).	0.0247180461884	1
Coq.Arith.PeanoNat.Nat.testbit_neg_r	40	0	synth with cache (only 1: inversion H).	0.0260891914368	1
Coq.Arith.PeanoNat.Nat.tail_add_spec	40
Coq.Arith.PeanoNat.Nat.tail_addmul_spec	40
Coq.Arith.PeanoNat.Nat.tail_mul_spec	40
Coq.Arith.PeanoNat.Nat.Even_Odd_dec	40
Coq.Arith.PeanoNat.Nat.Even_add_split	40
Coq.Arith.PeanoNat.Nat.Odd_add_split	40
Coq.Arith.PeanoNat.Nat.Even_Even_add	40	0.0.0.7	synth with cache (only 1: rewrite add_comm; only 1: intros (m', Hm) (n', Hn); only 1: exists (n' + m'); only 1: now rewrite mul_add_distr_l, Hn, Hm).	2.29682993889	288
Coq.Arith.PeanoNat.Nat.Odd_add_l	40
Coq.Arith.PeanoNat.Nat.Odd_add_r	40	0.0.0.0.0.0.1	synth with cache (only 1: rewrite <- ?even_spec, <- ?odd_spec, odd_add; only 1: unfold odd; only 1: do 2 destruct even; only 1: auto; only 1: auto; only 1: auto; only 1: auto).	0.464421987534	48
Coq.Arith.PeanoNat.Nat.Odd_Odd_add	40
Coq.Arith.PeanoNat.Nat.Even_add_aux	40
Coq.Arith.PeanoNat.Nat.Even_add_Even_inv_r	40	0.0.0.0.0.1	synth with cache (only 1: rewrite <- ?even_spec, even_add; only 1: do 2 destruct even; only 1: auto; only 1: auto; only 1: auto; only 1: auto).	0.300488948822	31
Coq.Arith.PeanoNat.Nat.Even_add_Even_inv_l	40	0.0.0.0.0.0	synth with cache (only 1: rewrite <- ?even_spec, even_add; only 1: do 2 destruct even; only 1: auto; only 1: auto; only 1: auto; only 1: auto).	0.119020938873	6
Coq.Arith.PeanoNat.Nat.Even_add_Odd_inv_r	40	0.0.0.0.0.0.2	synth with cache (only 1: rewrite <- ?even_spec, <- ?odd_spec, even_add; only 1: unfold odd; only 1: do 2 destruct even; only 1: auto; only 1: auto; only 1: auto; only 1: auto).	0.85778093338	96
Coq.Arith.PeanoNat.Nat.Even_add_Odd_inv_l	40	0.0.0.0.0.0.0	synth with cache (only 1: rewrite <- ?even_spec, <- ?odd_spec, even_add; only 1: unfold odd; only 1: do 2 destruct even; only 1: auto; only 1: auto; only 1: auto; only 1: auto).	0.141976118088	7
Coq.Arith.PeanoNat.Nat.Odd_add_Even_inv_l	40	0.0.0.0.0.0.2	synth with cache (only 1: rewrite <- ?even_spec, <- ?odd_spec, odd_add; only 1: unfold odd; only 1: do 2 destruct even; only 1: auto; only 1: auto; only 1: auto; only 1: auto).	0.189853906631	9
Coq.Arith.PeanoNat.Nat.Odd_add_Even_inv_r	40	0.0.0.0.0.0.0	synth with cache (only 1: rewrite <- ?even_spec, <- ?odd_spec, odd_add; only 1: unfold odd; only 1: do 2 destruct even; only 1: auto; only 1: auto; only 1: auto; only 1: auto).	0.119385957718	7
Coq.Arith.PeanoNat.Nat.Odd_add_Odd_inv_l	40	0.0.0.0.0.0.1	synth with cache (only 1: rewrite <- ?even_spec, <- ?odd_spec, odd_add; only 1: unfold odd; only 1: do 2 destruct even; only 1: auto; only 1: auto; only 1: auto; only 1: auto).	0.159541845322	8
Coq.Arith.PeanoNat.Nat.Odd_add_Odd_inv_r	40	0.0.0.0.0.0.0	synth with cache (only 1: rewrite <- ?even_spec, <- ?odd_spec, odd_add; only 1: unfold odd; only 1: do 2 destruct even; only 1: auto; only 1: auto; only 1: auto; only 1: auto).	0.127694129944	7
Coq.Arith.PeanoNat.Nat.Even_mul_aux	40
Coq.Arith.PeanoNat.Nat.Even_mul_l	40	0.0.0	synth with cache (only 1: intros (n', Hn); only 1: exists (n' * m); only 1: now rewrite Hn, mul_assoc).	0.0492029190063	3
Coq.Arith.PeanoNat.Nat.Even_mul_r	40	0.0.0.0.0.1	synth with cache (only 1: rewrite <- ?even_spec, even_mul; only 1: do 2 destruct even; only 1: auto; only 1: auto; only 1: auto; only 1: auto).	0.194380998611	24
Coq.Arith.PeanoNat.Nat.Even_mul_inv_r	40
Coq.Arith.PeanoNat.Nat.Even_mul_inv_l	40
Coq.Arith.PeanoNat.Nat.Odd_mul	40
Coq.Arith.PeanoNat.Nat.Odd_mul_inv_l	40
Coq.Arith.PeanoNat.Nat.Odd_mul_inv_r	40	0.0.0.0.0.0.0	synth with cache (only 1: rewrite <- ?odd_spec, odd_mul; only 1: unfold odd; only 1: do 2 destruct even; only 1: auto; only 1: auto; only 1: auto; only 1: auto).	0.31131696701	7
Coq.Arith.PeanoNat.Nat.Even_div2	40
Coq.Arith.PeanoNat.Nat.Odd_div2	40
Coq.Arith.PeanoNat.Nat.div2_Even	40
Coq.Arith.PeanoNat.Nat.div2_Odd	40
Coq.Arith.PeanoNat.Nat.Even_Odd_div2	40
Coq.Arith.PeanoNat.Nat.Even_Odd_double	40
Coq.Arith.PeanoNat.Nat.Even_alt_Even	40	5.2	synth with cache (only 1: fix even_spec 1; only 1: trivial).	0.283324956894	65
Coq.Arith.PeanoNat.Nat.Odd_alt_Odd	40	6.0.2	synth with cache (only 1: fix Even_Odd_double 1; only 1: intros n; only 1: trivial).	0.84080696106	240
Coq.Arith.PeanoNat.Nat.Odd_Even_ind	40	7.9.4	synth with cache (only 1: intros n H1 H2; only 1: fix Odd_alt_Odd 1; only 1: auto).	2.87625193596	1885
Coq.Arith.PeanoNat.Nat.Even_Odd_ind	40	0.11.4	synth with cache (only 1: intros b Hb IH; only 1: fix even_spec 1; only 1: auto).	1.98221206665	990
Coq.Arith.PeanoNat.Nat.Odd_Even_sind	40	0.0.0.0.0.0.0.0	synth with cache (only 1: intros HSE H0 HSO n HO%Odd_alt_Odd; only 1: apply Odd_alt_Even_alt_ind with Q; only 1: intros m HSE'%Even_alt_Even; only 1: auto; only 1: assumption; only 1: intros m HSO'%Odd_alt_Odd; only 1: auto; only 1: assumption).	0.0971500873566	8
Coq.Arith.PeanoNat.Nat.Even_Odd_sind	40	0.0.0.0.0.0.0.0	synth with cache (only 1: intros HSE H0 HSO n HE%Even_alt_Even; only 1: apply Even_alt_Odd_alt_ind with P; only 1: intros m HSE'%Even_alt_Even; only 1: auto; only 1: assumption; only 1: intros m HSO'%Odd_alt_Odd; only 1: auto; only 1: assumption).	0.0981800556183	8
Coq.Arith.PeanoNat.Nat.EvenT_0	40	0.10.29	synth with cache (only 1: rewrite <- (add_0_l 0); only 1: eexists; only 1: now nzsimpl).	1.32120609283	934
Coq.Arith.PeanoNat.Nat.EvenT_2	40	0.0.0.0.0	synth with cache (only 1: intros (m, H); only 1: exists (S m); only 1: rewrite H; only 1: simpl; only 1: now rewrite plus_n_Sm).	0.077486038208	5
Coq.Arith.PeanoNat.Nat.OddT_1	40	0.0	synth with cache (only 1: exists 0; only 1: reflexivity).	0.0343821048737	2
Coq.Arith.PeanoNat.Nat.OddT_2	40	0.0.0.0.0	synth with cache (only 1: intros (m, H); only 1: exists (S m); only 1: rewrite H; only 1: simpl; only 1: now rewrite <- (plus_n_Sm m)).	0.0807049274445	5
Coq.Arith.PeanoNat.Nat.EvenT_S_OddT	40	0.0.0.0.0.0.0.0	synth with cache (only 1: intros (m, H); only 1: destruct m as [| m]; only 1: discriminate; only 1: exists m; only 1: simpl in H; only 1: inversion H; only 1: simpl; only 1: now rewrite <- !plus_n_Sm, <- !plus_n_O).	0.106285810471	8
Coq.Arith.PeanoNat.Nat.OddT_S_EvenT	40	0.0.0.1	synth with cache (only 1: intros (m, H); only 1: exists m; only 1: apply succ_inj; only 1: now rewrite add_1_r in H).	0.0724411010742	14
Coq.Arith.PeanoNat.Nat.even_EvenT	40	4.0.0	synth with cache (only 1: fix even_spec 1; only 1: intro n; only 1: intuition).	0.0508668422699	11
Coq.Arith.PeanoNat.Nat.odd_OddT	40
Coq.Arith.PeanoNat.Nat.EvenT_Even	40	0.2.0	synth with cache (only 1: intros (m, H); only 1: exists m; only 1: now f_equiv).	0.393999099731	50
Coq.Arith.PeanoNat.Nat.OddT_Odd	40	0.0.0.7.1	synth with cache (only 1: intros (m, H); only 1: exists m; only 1: rewrite H; only 1: simpl; only 1: reflexivity).	6.40039396286	561
Coq.Arith.PeanoNat.Nat.Even_EvenT	40
Coq.Arith.PeanoNat.Nat.Odd_OddT	40
Coq.Arith.PeanoNat.Nat.EvenT_even	40	8.5	synth with cache (only 1: fix even_specT 1; only 1: assumption).	5.9630818367	1856
Coq.Arith.PeanoNat.Nat.OddT_odd	40	2.0.0.0.1.0.5.1.3	synth with cache (only 1: unfold odd; only 1: fix odd_specT 1; only 1: destruct n as [| [| n]]; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	22.7451720238	6839
Coq.Arith.PeanoNat.Nat.EvenT_OddT_dec	40	0.0.4.0.12.4.0.1	synth with cache (only 1: constructor; only 1: apply even_EvenT, even_spec; only 1: apply Odd_succ; only 1: apply Odd_2; only 1: apply Odd_2; only 1: revert n; only 1: fix Even_Odd_double 1; only 1: auto).	11.8653190136	5506
Coq.Arith.PeanoNat.Nat.OddT_EvenT_rect	40	3.5.10.14	synth with cache (only 1: intro x; only 1: intros Az LS; only 1: fix odd_specT 1; only 1: auto).	7.33270096779	5711
Coq.Arith.PeanoNat.Nat.EvenT_OddT_rect	40	4.0.1	synth with cache (only 1: intros HQP HQ0 HPQ; only 1: fix OddT_EvenT_rect 1; only 1: assumption).	0.270539999008	30
Coq.Arith.PeanoNat.TestOrder.test	40	6.0	synth with cache (only 1: intros x y; only 1: Nat.order).	0.0540790557861	8
Coq.Arith.Compare.discrete_nat	40
Coq.Arith.Gt.gt_0_eq_stt	40	1.3.5.1.0	synth with cache (only 1: Nat.cases ltac:(n); only 1: now right; only 1: intro m; only 1: left; only 1: apply le_n_S, le_0_n).	5.69166898727	1028
Coq.Logic.PropFacts.injection_is_involution_in_Prop	40
Coq.Logic.JMeq.JMeq_sym	40	1.0.0	synth with cache (only 1: intros p; only 1: destruct 1; only 1: auto).	0.0367050170898	4
Coq.Logic.JMeq.JMeq_trans	40	0.0	synth with cache (only 1: destruct 1; only 1: auto).	0.0276458263397	2
Coq.Logic.JMeq.JMeq_eq	40
Coq.Logic.JMeq.JMeq_ind	40
Coq.Logic.JMeq.JMeq_rec	40	0.0.0	synth with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := H'); only 1: trivial).	0.0324959754944	3
Coq.Logic.JMeq.JMeq_rect	40	0.0.0	synth with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := H'); only 1: trivial).	0.0330901145935	3
Coq.Logic.JMeq.JMeq_ind_r	40
Coq.Logic.JMeq.JMeq_rec_r	40	0.1.0	synth with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := JMeq_sym H'); only 1: trivial).	0.0412948131561	4
Coq.Logic.JMeq.JMeq_rect_r	40	0.1.0	synth with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := JMeq_sym H'); only 1: trivial).	0.0443511009216	4
Coq.Logic.JMeq.JMeq_congr	40	0.0.0	synth with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := H'); only 1: trivial).	0.0421738624573	3
Coq.Logic.JMeq.JMeq_eq_dep_id	40	0.1.0	synth with cache (only 1: intros A B x y H; only 1: destruct H; only 1: auto).	0.0446031093597	4
Coq.Logic.JMeq.eq_dep_id_JMeq	40	0.0	synth with cache (only 1: destruct 1; only 1: trivial).	0.0317010879517	2
Coq.Logic.JMeq.eq_dep_JMeq	40	0.0	synth with cache (only 1: destruct 1; only 1: reflexivity).	0.0351049900055	2
Coq.Logic.JMeq.eq_dep_strictly_stronger_JMeq	40
Coq.Logic.JMeq.JMeq_eq_dep	40	0.1.1.5.3.6.0	synth with cache (only 1: intros * H; only 1: intro eq_dep_eq; only 1: apply eq_sigT_eq_dep; only 1: apply eq_sigT_uncurried; only 1: subst; only 1: exists eq_refl; only 1: reflexivity).	4.2398660183	2236
Coq.Logic.ExtensionalityFacts.diagonal_projs_same_behavior	40	1.8.4.2	synth with cache (only 1: intro m; only 1: intro n; only 1: induction n; only 1: trivial).	0.566931009293	1125
Coq.Logic.ExtensionalityFacts.diagonal_inverse1	40	0.9.2.1.2.0.1.7	synth with cache (only 1: split; only 1: simpl; only 1: reflexivity; only 1: intro n; only 1: induction n; only 1: simpl in *; only 1: subst; only 1: reflexivity).	4.43771910667	6736
Coq.Logic.ExtensionalityFacts.diagonal_inverse2	40	0.0.0.0	synth with cache (only 1: split; only 1: trivial; only 1: destruct b as (a1, a2, []); only 1: reflexivity).	0.0146958827972	4
Coq.Logic.ExtensionalityFacts.FunctExt_iff_EqDeltaProjs	40
Coq.Logic.ExtensionalityFacts.FunctExt_UniqInverse	40
Coq.Logic.ExtensionalityFacts.UniqInverse_EqDeltaProjs	40
Coq.Logic.ExtensionalityFacts.FunctExt_iff_UniqInverse	40
Coq.Logic.ExtensionalityFacts.FunctExt_BijComp	40
Coq.Logic.ExtensionalityFacts.BijComp_FunctExt	40
Coq.Logic.Classical_Prop.NNPP	40
Coq.Logic.Classical_Prop.Peirce	40	4.15	synth with cache (only 1: intuition; only 1: tauto).	0.435119152069	197
Coq.Logic.Classical_Prop.not_imply_elim	40	8.2.3.1	synth with cache (only 1: intro not_eq_b1_b2; only 1: intro H; only 1: intros Hy; only 1: tauto).	2.11093592644	1441
Coq.Logic.Classical_Prop.not_imply_elim2	40	0.1.0.0.0.0.0	synth with cache (only 1: intros; only 1: intro; only 1: apply H; only 1: intro; only 1: absurd P; only 1: auto; only 1: trivial).	0.0809760093689	8
Coq.Logic.Classical_Prop.imply_to_or	40	0.10.3	synth with cache (only 1: Bool.destr_bool; only 1: apply NNPP; only 1: tauto).	2.38837695122	908
Coq.Logic.Classical_Prop.imply_to_and	40	4.7	synth with cache (only 1: intros A P H; only 1: tauto).	3.02112984657	890
Coq.Logic.Classical_Prop.or_to_imply	40	0	synth with cache (only 1: tauto).	0.0431401729584	1
Coq.Logic.Classical_Prop.not_and_or	40	1.6	synth with cache (only 1: intros n m; only 1: tauto).	0.330129146576	40
Coq.Logic.Classical_Prop.or_not_and	40	2.1.3.0	synth with cache (only 1: intros; only 1: red; only 1: intro; only 1: tauto).	0.237793922424	35
Coq.Logic.Classical_Prop.not_or_and	40	0	synth with cache (only 1: tauto).	0.0449101924896	1
Coq.Logic.Classical_Prop.and_not_or	40	2.0	synth with cache (only 1: simple induction 1; only 1: tauto).	0.253345966339	31
Coq.Logic.Classical_Prop.imply_and_or	40	0	synth with cache (only 1: tauto).	0.0326130390167	1
Coq.Logic.Classical_Prop.imply_and_or2	40	6	synth with cache (only 1: tauto).	0.225476980209	33
Coq.Logic.Classical_Prop.Eq_rect_eq.eq_rect_eq	40
Coq.Logic.Hurkens.Generic.Paradox.Omega	40
Coq.Logic.Hurkens.Generic.Paradox.lemma1	40
Coq.Logic.Hurkens.Generic.Paradox.lemma2	40
Coq.Logic.Hurkens.Generic.Paradox.paradox	40
Coq.Logic.Hurkens.NoRetractToImpredicativeUniverse.Paradox.paradox	40
Coq.Logic.Hurkens.NoRetractToModalProposition.Paradox.strength	40
Coq.Logic.Hurkens.NoRetractToModalProposition.Paradox.modal	40	0.6.11	synth with cache (only 1: intro m; only 1: destruct m; only 1: eauto).	0.429270029068	430
Coq.Logic.Hurkens.NoRetractToModalProposition.Paradox.Forall	40	3.47	synth with cache (only 1: red; only 1: eauto).	0.702734947205	1339
Coq.Logic.Hurkens.NoRetractToModalProposition.Paradox.paradox	40
Coq.Logic.Hurkens.NoRetractToNegativeProp.Paradox.paradox	40
Coq.Logic.Hurkens.NoRetractFromSmallPropositionToProp.MParadox.mparadox	40	1.1.0.0.0.1.0.1.0.7.0.0	synth with cache (only 1: intros B; only 1: unshelve refine ((fun h => _) (NoRetractToModalProposition.paradox _ _ _ _ _ _ _ _)); only 1: auto; only 1: exact bool; only 1: apply p2b; only 1: exact b2p; only 1: exact B; only 1: exact h; only 1: cbn; only 1: auto; only 1: auto; only 1: auto).	4.80890893936	2991
Coq.Logic.Hurkens.NoRetractFromSmallPropositionToProp.Paradox.paradox	40
Coq.Logic.Hurkens.NoRetractFromTypeToProp.Paradox.paradox	40
Coq.Logic.Hurkens.TypeNeqSmallType.Paradox.up_down	40	1.33.10	synth with cache (only 1: intro z; only 1: subst; only 1: reflexivity).	2.39687991142	5293
Coq.Logic.Hurkens.TypeNeqSmallType.Paradox.paradox	40
Coq.Logic.Hurkens.PropNeqType.paradox	40
Coq.Logic.Eqdep_dec.EqdepDec.trans_sym_eq	40	0.87	synth with cache (only 1: subst; only 1: reflexivity).	1.52408599854	6427
Coq.Logic.Eqdep_dec.EqdepDec.nu_constant	40
Coq.Logic.Eqdep_dec.EqdepDec.nu_left_inv_on	40
Coq.Logic.Eqdep_dec.EqdepDec.eq_proofs_unicity_on	40
Coq.Logic.Eqdep_dec.EqdepDec.K_dec_on	40
Coq.Logic.Eqdep_dec.EqdepDec.inj_right_pair_on	40
Coq.Logic.Eqdep_dec.K_dec_type	40
Coq.Logic.Eqdep_dec.eq_rect_eq_dec	40
Coq.Logic.Eqdep_dec.DecidableEqDep.inj_pairP2	40
Coq.Logic.Eqdep_dec.inj_pair2_eq_dec	40
Coq.Logic.Eqdep_dec.UIP_refl_unit	40
Coq.Logic.Eqdep_dec.UIP_refl_bool	40
Coq.Logic.Eqdep_dec.UIP_refl_nat	40
Coq.Logic.ChoiceFacts.functional_rel_reification_and_rel_choice_imp_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_imp_rel_choice	40
Coq.Logic.ChoiceFacts.fun_choice_imp_functional_rel_reification	40
Coq.Logic.ChoiceFacts.fun_choice_iff_rel_choice_and_functional_rel_reification	40
Coq.Logic.ChoiceFacts.rel_choice_and_proof_irrel_imp_guarded_rel_choice	40
Coq.Logic.ChoiceFacts.rel_choice_indep_of_general_premises_imp_guarded_rel_choice	40
Coq.Logic.ChoiceFacts.guarded_rel_choice_imp_rel_choice	40
Coq.Logic.ChoiceFacts.subset_types_imp_guarded_rel_choice_iff_rel_choice	40
Coq.Logic.ChoiceFacts.guarded_iff_omniscient_rel_choice	40
Coq.Logic.ChoiceFacts.guarded_fun_choice_imp_indep_of_general_premises	40
Coq.Logic.ChoiceFacts.guarded_fun_choice_imp_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_indep_general_prem_imp_guarded_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_indep_general_prem_iff_guarded_fun_choice	40
Coq.Logic.ChoiceFacts.omniscient_fun_choice_imp_small_drinker	40
Coq.Logic.ChoiceFacts.omniscient_fun_choice_imp_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_small_drinker_imp_omniscient_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_small_drinker_iff_omniscient_fun_choice	40
Coq.Logic.ChoiceFacts.guarded_iff_omniscient_fun_choice	40	0.1.0.2.2.2.0.0.19.9.5.1	synth with cache (only 1: split; only 1: intuition auto using omniscient_fun_choice_imp_small_drinker, omniscient_fun_choice_imp_fun_choice, fun_choice_and_small_drinker_imp_omniscient_fun_choice; only 1: intros x HPx; only 1: apply H; only 1: firstorder; only 1: auto; only 1: intros OAC_rel A B P R H; only 1: firstorder; only 1: destruct (OAC_rel A B R) as (f, Hf); only 1: eauto; only 1: exists f; only 1: firstorder).	24.9821228981	38366
Coq.Logic.ChoiceFacts.iota_imp_constructive_definite_description	40
Coq.Logic.ChoiceFacts.epsilon_imp_constructive_indefinite_description	40	1.0.0.1.1.0.0	synth with cache (only 1: intros D_iota A P H; only 1: destruct D_iota with (P := P) as (x, H1); only 1: destruct H; only 1: auto; only 1: exists x; only 1: apply H1; only 1: assumption).	0.053817987442	11
Coq.Logic.ChoiceFacts.constructive_indefinite_description_and_small_drinker_imp_epsilon	40
Coq.Logic.ChoiceFacts.epsilon_imp_small_drinker	40	0.5.0.5.0	synth with cache (only 1: intros D_epsilon A P H; only 1: destruct D_epsilon with (P := P) as (x, H1); only 1: auto; only 1: exists x; only 1: assumption).	0.443506002426	364
Coq.Logic.ChoiceFacts.constructive_indefinite_description_and_small_drinker_iff_epsilon	40
Coq.Logic.ChoiceFacts.classical_denumerable_description_imp_fun_choice	40
Coq.Logic.ChoiceFacts.dep_non_dep_functional_choice	40	0.11.6.4	synth with cache (only 1: intros; only 1: intros x HPx; only 1: apply H; only 1: firstorder).	3.2958779335	3170
Coq.Logic.ChoiceFacts.non_dep_dep_functional_choice	40
Coq.Logic.ChoiceFacts.functional_choice_to_inhabited_forall_commute	40
Coq.Logic.ChoiceFacts.inhabited_forall_commute_to_functional_choice	40
Coq.Logic.ChoiceFacts.dep_non_dep_functional_rel_reification	40
Coq.Logic.ChoiceFacts.non_dep_dep_functional_rel_reification	40
Coq.Logic.ChoiceFacts.dep_iff_non_dep_functional_rel_reification	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1	synth with cache (only 1: split; only 1: intros AC_fun A B R H; only 1: pose (B' := {x : A & B x}); only 1: pose (R' := fun (x : A) (y : B') => projT1 y = x /\ R (projT1 y) (projT2 y)); only 1: destruct (AC_fun A B' R') as (f, Hf); only 1: intros x; only 1: destruct (H x) as (y, (Hy, Huni)); only 1: exists (existT (fun x => B x) x y); only 1: repeat split; only 1: trivial; only 1: intros (x', y') (Heqx', Hy'); only 1: simpl in *; only 1: destruct Heqx'; only 1: rewrite (Huni y'); only 1: trivial; only 1: trivial; only 1: exists (fun x => eq_rect _ _ (projT2 (f x)) _ (proj1_inf (Hf x))); only 1: intro x; only 1: destruct (Hf x) as (Heq, HR) using and_indd; only 1: destruct (f x); only 1: simpl in *; only 1: destruct Heq using eq_indd; only 1: trivial; only 1: intros DepFunReify A B R H; only 1: destruct (DepFunReify A (fun _ => B) R H) as (f, Hf); only 1: exists f; only 1: trivial).	24.3053770065	13403
Coq.Logic.ChoiceFacts.relative_non_contradiction_of_indefinite_descr	40
Coq.Logic.ChoiceFacts.constructive_indefinite_descr_fun_choice	40
Coq.Logic.ChoiceFacts.relative_non_contradiction_of_definite_descr	40
Coq.Logic.ChoiceFacts.constructive_definite_descr_fun_reification	40
Coq.Logic.ChoiceFacts.constructive_definite_descr_excluded_middle	40
Coq.Logic.ChoiceFacts.fun_reification_descr_computational_excluded_middle_in_prop_context	40
Coq.Logic.PropExtensionality.proof_irrelevance	40
Coq.Logic.StrictProp.Spr1_inj	40	4.15.8.21	synth with cache (only 1: destruct a, b; only 1: simpl in *; only 1: destruct e; only 1: reflexivity).	0.888664007187	2907
Coq.Logic.ClassicalFacts.prop_degen_ext	40
Coq.Logic.ClassicalFacts.prop_degen_em	40
Coq.Logic.ClassicalFacts.prop_ext_em_degen	40
Coq.Logic.ClassicalFacts.provable_prop_ext	40	8.0.0.3.1	synth with cache (only 1: intros Ext EM A; only 1: apply Ext; only 1: split; only 1: exact (fun _ => I); only 1: auto).	0.259192943573	693
Coq.Logic.ClassicalFacts.prop_ext_A_eq_A_imp_A	40	10.9.0.14.0	synth with cache (only 1: intros Ext A Ha; only 1: apply Ext; only 1: split; only 1: trivial; only 1: trivial).	4.15204691887	16292
Coq.Logic.ClassicalFacts.prop_ext_retract_A_A_imp_A	40
Coq.Logic.ClassicalFacts.ext_prop_fixpoint	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_gen.aux	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_gen.ext_prop_dep_proof_irrel_gen	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_Prop_Ext_CC.ext_prop_dep_proof_irrel_cc	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_CIC.ext_prop_dep_proof_irrel_cic	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_EM_CC.p2p1	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_EM_CC.p2p2	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_EM_CC.proof_irrelevance_cc	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_WEM_CC.wp2p1	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_WEM_CC.wp2p2	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_WEM_CC.wproof_irrelevance_cc	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_CCI.proof_irrelevance_cci	40
Coq.Logic.ClassicalFacts.Weak_proof_irrelevance_CCI.wem_proof_irrelevance_cci	40
Coq.Logic.ClassicalFacts.excluded_middle_Godel_Dummett	40
Coq.Logic.ClassicalFacts.Godel_Dummett_iff_right_distr_implication_over_disjunction	40
Coq.Logic.ClassicalFacts.Godel_Dummett_weak_excluded_middle	40
Coq.Logic.ClassicalFacts.weak_excluded_middle_iff_classical_de_morgan_law	40
Coq.Logic.ClassicalFacts.independence_general_premises_right_distr_implication_over_disjunction	40
Coq.Logic.ClassicalFacts.independence_general_premises_Godel_Dummett	40
Coq.Logic.ClassicalFacts.independence_general_premises_drinker	40
Coq.Logic.ClassicalFacts.excluded_middle_independence_general_premises	40
Coq.Logic.ClassicalFacts.Unrestricted_minimization_entails_excluded_middle.unrestricted_minimization_entails_excluded_middle	40
Coq.Logic.ClassicalFacts.Excluded_middle_entails_unrestricted_minimization.excluded_middle_entails_unrestricted_minimization	40
Coq.Logic.ClassicalFacts.Example_of_undecidable_predicate_with_the_minimization_property.undecidable_predicate_with_the_minimization_property	40
Coq.Logic.ClassicalFacts.representative_boolean_partition_imp_excluded_middle	40
Coq.Logic.ClassicalFacts.excluded_middle_imp_representative_boolean_partition	40	6.9.12.8	synth with cache (only 1: intros n m Hm; only 1: eexists; only 1: fix Even_Odd_double 1; only 1: intuition).	9.84689211845	9060
Coq.Logic.ClassicalFacts.excluded_middle_iff_representative_boolean_partition	40
Coq.Logic.Classical_Pred_Type.Generic.not_all_not_ex	40
Coq.Logic.Classical_Pred_Type.Generic.not_all_ex_not	40
Coq.Logic.Classical_Pred_Type.Generic.not_ex_all_not	40	0.0.1.0.0	synth with cache (only 1: intros P notall; only 1: intros n H; only 1: apply notall; only 1: exists n; only 1: exact H).	0.0428159236908	6
Coq.Logic.Classical_Pred_Type.Generic.not_ex_not_all	40	5.3.2.21	synth with cache (only 1: intros x y H; only 1: apply NNPP; only 1: apply NNPP; only 1: firstorder).	29.3200080395	43050
Coq.Logic.Classical_Pred_Type.Generic.ex_not_not_all	40	3.0.2.1	synth with cache (only 1: intro abs; only 1: intros (b, Hb); only 1: intro all; only 1: auto).	0.299865007401	121
Coq.Logic.Classical_Pred_Type.Generic.all_not_not_ex	40	14.13.0	synth with cache (only 1: unfold not; only 1: intros a H; only 1: firstorder).	16.9143631458	20695
Coq.Logic.ProofIrrelevanceFacts.ProofIrrelevanceTheory.Eq_rect_eq.eq_rect_eq	40
Coq.Logic.ProofIrrelevanceFacts.ProofIrrelevanceTheory.subset_eq_compat	40
Coq.Logic.ProofIrrelevanceFacts.ProofIrrelevanceTheory.subsetT_eq_compat	40	0.0.0.1	synth with cache (only 1: intros U P x y p q H; only 1: rewrite (M.proof_irrelevance _ q (eq_rect x P p y H)); only 1: elim H using eq_indd; only 1: reflexivity).	0.0658040046692	16
Coq.Logic.FinFun.Finite_alt	40
Coq.Logic.FinFun.Injective_map_NoDup	40
Coq.Logic.FinFun.Injective_list_carac	40
Coq.Logic.FinFun.Injective_carac	40
Coq.Logic.FinFun.Surjective_list_carac	40
Coq.Logic.FinFun.Surjective_carac	40
Coq.Logic.FinFun.Endo_Injective_Surjective	40
Coq.Logic.FinFun.Finite_Empty_or_not	40
Coq.Logic.FinFun.Surjective_inverse	40
Coq.Logic.FinFun.Injective_Surjective_Bijective	40
Coq.Logic.FinFun.Fin_Finite	40
Coq.Logic.FinFun.Fin2Restrict.extend_ok	40
Coq.Logic.FinFun.Fin2Restrict.extend_f2n	40
Coq.Logic.FinFun.Fin2Restrict.extend_n2f	40
Coq.Logic.FinFun.Fin2Restrict.restrict_f2n	40
Coq.Logic.FinFun.Fin2Restrict.restrict_n2f	40
Coq.Logic.FinFun.Fin2Restrict.extend_surjective	40
Coq.Logic.FinFun.Fin2Restrict.extend_injective	40
Coq.Logic.FinFun.Fin2Restrict.restrict_surjective	40
Coq.Logic.FinFun.Fin2Restrict.restrict_injective	40
Coq.Logic.FinFun.bInjective_bSurjective	40
Coq.Logic.FinFun.bSurjective_bBijective	40
Coq.Logic.FunctionalExtensionality.equal_f	40	0.0.0	synth with cache (only 1: intros; only 1: destruct H; only 1: trivial).	0.0412309169769	3
Coq.Logic.FunctionalExtensionality.equal_f_dep	40	0.0.0	synth with cache (only 1: intros A B f g H x; only 1: rewrite H; only 1: auto).	0.040894985199	3
Coq.Logic.FunctionalExtensionality.functional_extensionality	40
Coq.Logic.FunctionalExtensionality.forall_extensionality	40
Coq.Logic.FunctionalExtensionality.forall_extensionalityP	40	0.0.0	synth with cache (only 1: apply functional_extensionality in H; only 1: destruct H; only 1: reflexivity).	0.0379741191864	3
Coq.Logic.FunctionalExtensionality.forall_extensionalityS	40	0.0.0	synth with cache (only 1: apply functional_extensionality in H; only 1: destruct H; only 1: reflexivity).	0.0399041175842	3
Coq.Logic.FunctionalExtensionality.functional_extensionality_dep_good_refl	40
Coq.Logic.FunctionalExtensionality.forall_sig_eq_rect	40
Coq.Logic.FunctionalExtensionality.forall_eq_rect_comp	40
Coq.Logic.FunctionalExtensionality.f_equal__functional_extensionality_dep_good	40
Coq.Logic.FunctionalExtensionality.f_equal__functional_extensionality_dep_good__fun	40	5.10.0.0	synth with cache (only 1: apply (fun P k => forall_eq_rect _ P k _ H); only 1: clear H g; only 1: rewrite functional_extensionality_dep_good_refl; only 1: reflexivity).	0.863804101944	516
Coq.Logic.FunctionalExtensionality.eta_expansion_dep	40	0	synth with cache (only 1: reflexivity).	0.0262560844421	1
Coq.Logic.FunctionalExtensionality.eta_expansion	40	0	synth with cache (only 1: eauto using @functional_extensionality_dep).	0.0258359909058	1
Coq.Logic.HLevels.forall_hprop	40
Coq.Logic.HLevels.and_hprop	40
Coq.Logic.HLevels.impl_hprop	40	0.0.0.0	synth with cache (only 1: intros A P H p q; only 1: apply functional_extensionality_dep; only 1: intro x; only 1: apply H).	0.0131440162659	4
Coq.Logic.HLevels.false_hprop	40	4.0	synth with cache (only 1: intros p q; only 1: destruct p, q).	0.00769305229187	6
Coq.Logic.HLevels.true_hprop	40	3.5.0	synth with cache (only 1: intros p q; only 1: destruct p, q; only 1: reflexivity || destruct H).	0.0150039196014	33
Coq.Logic.HLevels.not_hprop	40	0.4.3.0	synth with cache (only 1: intros p q; only 1: intro n; only 1: apply functional_extensionality_dep; only 1: contradiction).	0.0580270290375	62
Coq.Logic.HLevels.hset_hprop	40
Coq.Logic.HLevels.eq_trans_cancel	40
Coq.Logic.HLevels.hset_hOneType	40
Coq.Logic.HLevels.hprop_hprop	40
Coq.Logic.HLevels.hprop_hset	40
Coq.Logic.ClassicalUniqueChoice.unique_choice	40
Coq.Logic.ClassicalUniqueChoice.classic_set_in_prop_context	40
Coq.Logic.ClassicalUniqueChoice.not_not_classic_set	40
Coq.Logic.EqdepFacts.Dependent_Equality.eq_dep_sym	40	1.4.0.0.10	synth with cache (only 1: intro; only 1: intro x; only 1: intros; only 1: destruct H; only 1: reflexivity).	0.175038814545	278
Coq.Logic.EqdepFacts.Dependent_Equality.eq_dep_trans	40	0.0	synth with cache (only 1: destruct 1; only 1: auto).	0.00812888145447	2
Coq.Logic.EqdepFacts.Dependent_Equality.eq_dep1_dep	40	0.69.0	synth with cache (only 1: destruct 1; only 1: subst; only 1: auto).	7.33774185181	33125
Coq.Logic.EqdepFacts.Dependent_Equality.eq_dep_dep1	40	2.38.0	synth with cache (only 1: destruct 1; only 1: exists eq_refl; only 1: reflexivity).	0.728838205338	2905
Coq.Logic.EqdepFacts.eq_sigT_eq_dep	40
Coq.Logic.EqdepFacts.eq_dep_eq_sigT	40	0.1.1.1	synth with cache (only 1: destruct 1; only 1: apply eq_sigT_uncurried; only 1: exists eq_refl; only 1: reflexivity).	0.0337660312653	22
Coq.Logic.EqdepFacts.eq_sigT_iff_eq_dep	40	0.11.0.0.7.10	synth with cache (only 1: split; only 1: intros * H; only 1: dependent rewrite H; only 1: apply eq_dep_intro; only 1: destruct 1; only 1: reflexivity).	1.60381984711	3257
Coq.Logic.EqdepFacts.eq_sig_eq_dep	40	0.0.0	synth with cache (only 1: intros * H; only 1: dependent rewrite H; only 1: apply eq_dep_intro).	0.0141730308533	3
Coq.Logic.EqdepFacts.eq_dep_eq_sig	40	0.0	synth with cache (only 1: destruct 1; only 1: reflexivity).	0.00870609283447	2
Coq.Logic.EqdepFacts.eq_sig_iff_eq_dep	40	0.12.0.0.14.0	synth with cache (only 1: split; only 1: intros * H; only 1: dependent rewrite H; only 1: apply eq_dep_intro; only 1: destruct 1; only 1: reflexivity).	2.68475079536	4788
Coq.Logic.EqdepFacts.eq_sigT_sig_eq	40	0.1.2.1.17.5.3.1.0.0	synth with cache (only 1: split; only 1: intro; only 1: dependent rewrite H; only 1: exists eq_refl; only 1: reflexivity; only 1: destruct 1; only 1: apply eq_sigT_uncurried; only 1: subst; only 1: exists eq_refl; only 1: reflexivity).	5.92662000656	11257
Coq.Logic.EqdepFacts.eq_sigT_fst	40	0.2.1	synth with cache (only 1: change x2 with (projT1 (existT P x2 H2)); only 1: destruct H; only 1: reflexivity).	0.0213420391083	13
Coq.Logic.EqdepFacts.eq_sigT_snd	40
Coq.Logic.EqdepFacts.eq_sig_fst	40	0.2.6	synth with cache (only 1: dependent rewrite H; only 1: destruct H; only 1: split).	0.283068180084	189
Coq.Logic.EqdepFacts.eq_sig_snd	40
Coq.Logic.EqdepFacts.Equivalences.eq_rect_eq_on__eq_dep1_eq_on	40	31.1.5.7	synth with cache (only 1: intro x; only 1: destruct 1; only 1: rewrite H; only 1: auto).	2.21720600128	5764
Coq.Logic.EqdepFacts.Equivalences.eq_rect_eq_on__eq_dep_eq_on	40
Coq.Logic.EqdepFacts.Equivalences.eq_dep_eq_on__UIP_on	40	0.4.2.15.15.17.21.6	synth with cache (only 1: intros eq_rect_eq; only 1: red; only 1: destruct p1; only 1: intro H; only 1: rewrite <- eq_rect_eq; only 1: reflexivity; only 1: destruct H; only 1: apply eq_dep_intro).	12.9117078781	60410
Coq.Logic.EqdepFacts.Equivalences.UIP_on__UIP_refl_on	40	11.0.0.0	synth with cache (only 1: intro eq_dep_eq; only 1: red; only 1: intros p2; only 1: auto).	0.324535131454	391
Coq.Logic.EqdepFacts.Equivalences.UIP_refl_on__Streicher_K_on	40	2.6.1.3.4.2	synth with cache (only 1: red; only 1: intro; only 1: intro UIP; only 1: intros p2; only 1: rewrite H; only 1: apply UIP).	2.16367101669	5001
Coq.Logic.EqdepFacts.Equivalences.Streicher_K_on__eq_rect_eq_on	40	2.11.0	synth with cache (only 1: intros eq_rect_eq; only 1: red; only 1: auto).	0.25070810318	312
Coq.Logic.EqdepFacts.UIP_shift_on	40
Coq.Logic.EqdepFacts.Corollaries.eq_dep_eq_on__inj_pair2_on	40	3.0.0	synth with cache (only 1: intros eq_rect_eq; only 1: red; only 1: auto using eq_sigT_eq_dep, eq_dep_eq_sigT).	0.0521259307861	31
Coq.Logic.EqdepFacts.f_eq_dep	40	0.2	synth with cache (only 1: destruct 1; only 1: reflexivity).	0.0264649391174	16
Coq.Logic.EqdepFacts.eq_dep_non_dep	40	0.1	synth with cache (only 1: destruct 1; only 1: reflexivity).	0.0331521034241	18
Coq.Logic.EqdepFacts.f_eq_dep_non_dep	40	0.0	synth with cache (only 1: intros * []; only 1: reflexivity).	0.00930595397949	2
Coq.Logic.PropExtensionalityFacts.PredExt_imp_PropExt	40
Coq.Logic.PropExtensionalityFacts.PredExt_imp_PropFunExt	40
Coq.Logic.PropExtensionalityFacts.PropExt_and_PropFunExt_imp_PredExt	40	5	synth with cache (only 1: auto).	0.0621521472931	37
Coq.Logic.PropExtensionalityFacts.PropExt_and_PropFunExt_iff_PredExt	40
Coq.Logic.PropExtensionalityFacts.PropExt_imp_ProvPropExt	40
Coq.Logic.PropExtensionalityFacts.PropExt_imp_RefutPropExt	40	5.0	synth with cache (only 1: intros Ext A Ha; only 1: now apply Ext).	0.0605809688568	33
Coq.Logic.Berardi.Berardis_paradox.AC_IF	40
Coq.Logic.Berardi.Berardis_paradox.Retracts.AC	40	0.52	synth with cache (only 1: intros [HypL HypR]; only 1: assumption).	12.0474119186	25889
Coq.Logic.Berardi.Berardis_paradox.L1	40
Coq.Logic.Berardi.Berardis_paradox.retract_pow_U_U	40
Coq.Logic.Berardi.Berardis_paradox.not_has_fixpoint	40
Coq.Logic.Berardi.Berardis_paradox.classical_proof_irrelevance	40
Coq.Logic.Decidable.dec_not_not	40	4.4.0.0.0.7.0	synth with cache (only 1: intro A; only 1: intro H1; only 1: unfold not; only 1: intro H; only 1: elim H1; only 1: trivial; only 1: contradiction).	3.49708890915	6336
Coq.Logic.Decidable.dec_True	40	3.0.0	synth with cache (only 1: unfold decidable; only 1: unfold not; only 1: auto).	0.0237309932709	6
Coq.Logic.Decidable.dec_False	40	0.0	synth with cache (only 1: unfold decidable; only 1: auto).	0.0191490650177	2
Coq.Logic.Decidable.dec_or	40	1.1.6.7	synth with cache (only 1: intro H; only 1: intro p; only 1: unfold decidable; only 1: tauto).	2.0789411068	3042
Coq.Logic.Decidable.dec_and	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.042652130127	2
Coq.Logic.Decidable.dec_not	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0273139476776	2
Coq.Logic.Decidable.dec_imp	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0342400074005	2
Coq.Logic.Decidable.dec_iff	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0461549758911	2
Coq.Logic.Decidable.not_not	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0242700576782	2
Coq.Logic.Decidable.not_or	40	0	synth with cache (only 1: tauto).	0.0221199989319	1
Coq.Logic.Decidable.not_and	40	0.1	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0366780757904	3
Coq.Logic.Decidable.not_imp	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0369939804077	2
Coq.Logic.Decidable.imp_simp	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0272750854492	2
Coq.Logic.Decidable.not_iff	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0722908973694	2
Coq.Logic.Decidable.not_true_iff	40	0.1.10.0.0	synth with cache (only 1: split; only 1: intro H; only 1: tauto; only 1: intros h1 h2; only 1: apply h1).	0.123610973358	252
Coq.Logic.Decidable.not_false_iff	40	0	synth with cache (only 1: tauto).	0.0169570446014	1
Coq.Logic.Decidable.not_not_iff	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0272970199585	2
Coq.Logic.Decidable.contrapositive	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0322170257568	2
Coq.Logic.Decidable.or_not_l_iff_1	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0369510650635	2
Coq.Logic.Decidable.or_not_l_iff_2	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0374531745911	2
Coq.Logic.Decidable.or_not_r_iff_1	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0355970859528	2
Coq.Logic.Decidable.or_not_r_iff_2	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0370619297028	2
Coq.Logic.Decidable.imp_not_l	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0357439517975	2
Coq.Logic.Decidable.not_or_iff	40	8.0	synth with cache (only 1: intros; only 1: tauto).	0.0444550514221	23
Coq.Logic.Decidable.not_and_iff	40	0	synth with cache (only 1: tauto).	0.0235269069672	1
Coq.Logic.Decidable.not_imp_iff	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0428078174591	2
Coq.Logic.Decidable.not_imp_rev_iff	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0707869529724	2
Coq.Logic.Decidable.dec_functional_relation	40
Coq.Logic.WeakFan.Y_unique	40
Coq.Logic.WeakFan.Y_approx	40	2.10.4	synth with cache (only 1: intros a; only 1: fix odd_specT 1; only 1: firstorder).	3.74487900734	1611
Coq.Logic.WeakFan.WeakFanTheorem	40
Coq.setoid_ring.Ring_theory.Power.pow_pos_swap	40
Coq.setoid_ring.Ring_theory.Power.pow_pos_succ	40
Coq.setoid_ring.Ring_theory.Power.pow_pos_add	40
Coq.setoid_ring.Ring_theory.Power.pow_N_pow_N	40	5	synth with cache (only 1: reflexivity).	0.0107340812683	6
Coq.setoid_ring.Ring_theory.DEFINITIONS.MORPHISM.get_sign_None_th	40	0	synth with cache (only 1: now rewrite ?H, ?IHp).	0.0141010284424	1
Coq.setoid_ring.Ring_theory.DEFINITIONS.IDmorph	40	35	synth with cache (only 1: firstorder).	0.428465127945	942
Coq.setoid_ring.Ring_theory.ALMOST_RING.Eqsth	40	2.2.1.12.1.3.1.18	synth with cache (only 1: split; only 1: red; only 1: reflexivity; only 1: congruence; only 1: intro n; only 1: intros x y; only 1: simple destruct 1; only 1: firstorder).	3.88051104546	6868
Coq.setoid_ring.Ring_theory.ALMOST_RING.Eq_s_ext	40	6.6.5	synth with cache (only 1: split; only 1: solve_proper; only 1: solve_proper).	0.764233112335	708
Coq.setoid_ring.Ring_theory.ALMOST_RING.Eq_ext	40	0.0.0.28	synth with cache (only 1: split; only 1: solve_proper; only 1: solve_proper; only 1: solve_proper).	0.316341876984	487
Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.radd_ext1_Proper	40	1	synth with cache (only 1: firstorder).	0.0742049217224	11
Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.rmul_ext1_Proper	40	3	synth with cache (only 1: firstorder).	0.0747389793396	12
Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRopp_ext	40	3	synth with cache (only 1: firstorder).	0.0115790367126	4
Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SReqe_Reqe	40	6	synth with cache (only 1: firstorder).	0.0760960578918	19
Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRopp_mul_l	40	5	synth with cache (only 1: reflexivity).	0.0109100341797	6
Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRopp_add	40	0.7	synth with cache (only 1: intros a b; only 1: reflexivity).	0.0524327754974	9
Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRsub_def	40	0	synth with cache (only 1: reflexivity).	0.0091700553894	1
Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRIDmorph	40	14	synth with cache (only 1: now split).	0.375324964523	288
Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRmorph_Rmorph	40	4	synth with cache (only 1: firstorder).	0.0226879119873	5
Coq.setoid_ring.Ring_theory.ALMOST_RING.radd_ext2_Proper	40	1.6.7	synth with cache (only 1: intro y0; only 1: intros ? ? p; only 1: firstorder).	0.689357042313	248
Coq.setoid_ring.Ring_theory.ALMOST_RING.rmul_ext2_Proper	40	14.7	synth with cache (only 1: intuition; only 1: firstorder).	0.933877944946	622
Coq.setoid_ring.Ring_theory.ALMOST_RING.ropp_ext2_Proper	40	11.2.8	synth with cache (only 1: intro y0; only 1: intro Hxz; only 1: firstorder).	1.14731788635	1673
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Rmul_0_l	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Ropp_mul_l	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Ropp_add	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Ropp_opp	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.cadd_ext_Proper	40	6.5.15	synth with cache (only 1: intro H; only 1: intros; only 1: firstorder).	1.46679091454	529
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.cmul_ext_Proper	40	11.11	synth with cache (only 1: intro H; only 1: firstorder).	0.349348068237	333
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.copp_ext_Proper	40	27	synth with cache (only 1: firstorder).	1.60764813423	1367
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.phi_ext1_Proper	40	10	synth with cache (only 1: now auto).	0.0338158607483	24
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Smorph_opp	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Smorph_sub	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARth_SRth	40	47	synth with cache (only 1: firstorder).	0.535434961319	1621
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARsub_ext	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARadd_0_r	40	17.0.2	synth with cache (only 1: elim ARth; only 1: intros; only 1: firstorder).	0.468764066696	634
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARmul_1_r	40	0	synth with cache (only 1: mrewrite).	0.0146858692169	1
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARmul_0_r	40	0	synth with cache (only 1: mrewrite).	0.0153110027313	1
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARdistr_r	40	0.0.12.0.0.7.1.0	synth with cache (only 1: mrewrite; only 1: elim ARth; only 1: intros H1 H2 H3 n; only 1: elim ARth; only 1: intros; only 1: f_equiv; only 1: trivial; only 1: trivial).	22.1648712158	3871
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARadd_assoc1	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARadd_assoc2	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARmul_assoc1	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARmul_assoc2	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARopp_mul_r	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARopp_zero	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.radd_ext_Proper	40	13.12	synth with cache (only 1: intros; only 1: firstorder).	2.24241995811	1178
Coq.setoid_ring.Ring_polynom.MakeRingPol.rmul_ext_Proper	40	12.11.3.12	synth with cache (only 1: intros a b c Ha Hc H; only 1: elim ARth; only 1: intros Pdec l; only 1: firstorder).	38.6245942116	5769
Coq.setoid_ring.Ring_polynom.MakeRingPol.ropp_ext_Proper	40	14.13.3.12	synth with cache (only 1: intros n1 m1 H; only 1: elim ARth; only 1: intro n; only 1: firstorder).	7.0164141655	5175
Coq.setoid_ring.Ring_polynom.MakeRingPol.rsub_ext_Proper	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Pequiv_eq	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi_ext	40	12.3	synth with cache (only 1: unfold Pequiv; only 1: solve_proper).	3.18635010719	840
Coq.setoid_ring.Ring_polynom.MakeRingPol.Pinj_ext	40	13.3	synth with cache (only 1: unfold Pequiv; only 1: solve_proper).	1.65940213203	283
Coq.setoid_ring.Ring_polynom.MakeRingPol.PX_ext	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.jump_add'	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Peq_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Peq_spec	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi0	40	91.5	synth with cache (only 1: simpl; only 1: firstorder).	19.8221280575	18655
Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi1	40	95.0	synth with cache (only 1: simpl; only 1: firstorder).	29.5489079952	27714
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkPinj_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkPinj_ext	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.pow_pos_add	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.ceqb_spec	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkPX_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkPX_ext	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.PaddC_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.PsubC_ok	40	0.2.0.0.1.0.0.0.0.0.0.0	synth with cache (only 1: revert l; only 1: induction P as [| | P2 IHP1 p P3 IHP2]; only 1: simpl; only 1: intros; only 1: Esimpl; only 1: simpl; only 1: intros; only 1: trivial; only 1: simpl; only 1: intros; only 1: rewrite IHP2; only 1: rsimpl).	32.0001609325	3013
Coq.setoid_ring.Ring_polynom.MakeRingPol.PmulC_aux_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.PmulC_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Popp_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.PaddX_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Padd_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Psub_opp	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Psub_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.PmulI_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Pmul_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkZmon_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.zmon_pred_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkVmon_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Mcphi_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Mphi_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.POneSubst_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.PNSubst1_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.PNSubst_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.PSubstL1_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.PSubstL_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.PNSubstL_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkX_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.POWER.Ppow_pos_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.POWER.Ppow_N_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.NORM_SUBST_REC.norm_aux_PEadd	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.NORM_SUBST_REC.norm_aux_PEopp	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.NORM_SUBST_REC.norm_aux_spec	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.NORM_SUBST_REC.norm_subst_spec	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.mon_of_pol_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.interp_PElist_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.norm_subst_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.ring_correct	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkmult_rec_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkmult1_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkmultm1_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.r_list_pow_rev	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkmult_c_pos_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkmult_c_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkadd_mult_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.add_pow_list_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.add_mult_dev_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mult_dev_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.Pphi_avoid_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.local_mkpow_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi_pow_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.ring_rw_pow_correct	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkmult_pow_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkpow_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkopp_pow_ok	40	0.0.0.1.0.1.0.0.0.0.0.2	synth with cache (only 1: destruct p; only 1: simpl; only 1: Esimpl; only 1: rewrite !mkmult_pow_ok; only 1: Esimpl; only 1: simpl; only 1: rewrite mkmult_pow_ok; only 1: Esimpl; only 1: change x with (x ^ 1)  at 1; only 1: now rewrite <- pow_pos_add, Pos.add_1_r, Pos.succ_pred_double; only 1: simpl; only 1: now rewrite ?local_mkpow_ok).	27.8924720287	1109
Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi_dev_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.ring_rw_correct	40
Coq.setoid_ring.BinList.MakeBinList.jump_tl	40
Coq.setoid_ring.BinList.MakeBinList.jump_succ	40
Coq.setoid_ring.BinList.MakeBinList.jump_add	40
Coq.setoid_ring.BinList.MakeBinList.jump_pred_double	40
Coq.setoid_ring.BinList.MakeBinList.nth_jump	40
Coq.setoid_ring.BinList.MakeBinList.nth_pred_double	40
Coq.setoid_ring.Ncring.Ring.pow_pos_comm	40
Coq.setoid_ring.Ncring.Ring.pow_pos_succ	40
Coq.setoid_ring.Ncring.Ring.pow_pos_add	40
Coq.setoid_ring.Ncring.Ring.pow_N_pow_N	40	0	synth with cache (only 1: reflexivity).	0.0290431976318	1
Coq.setoid_ring.Ncring.Ring.ring_mul_0_l	40
Coq.setoid_ring.Ncring.Ring.ring_mul_0_r	40
Coq.setoid_ring.Ncring.Ring.ring_opp_mul_l	40
Coq.setoid_ring.Ncring.Ring.ring_opp_mul_r	40
Coq.setoid_ring.Ncring.Ring.ring_opp_add	40
Coq.setoid_ring.Ncring.Ring.ring_opp_opp	40
Coq.setoid_ring.Ncring.Ring.ring_sub_ext	40	40	synth with cache (only 1: firstorder).	11.0207149982	7132
Coq.setoid_ring.Ncring.Ring.ring_add_0_r	40	0.0.0.0	synth with cache (only 1: intros x; only 1: rewrite (ring_add_comm x); only 1: rewrite ring_add_0_l; only 1: reflexivity).	0.0956311225891	4
Coq.setoid_ring.Ncring.Ring.ring_add_assoc1	40
Coq.setoid_ring.Ncring.Ring.ring_add_assoc2	40	0.0.0.8.0	synth with cache (only 1: intros; only 1: rewrite (ring_add_comm y); only 1: rewrite <- (ring_add_assoc x); only 1: rewrite (ring_add_comm x); only 1: reflexivity).	0.440429925919	80
Coq.setoid_ring.Ncring.Ring.ring_opp_zero	40
Coq.MSets.MSetInterface.WRaw2SetsOn.In_compat	40
Coq.MSets.MSetInterface.WRaw2SetsOn.eq_equiv	40	0.2.1.1.12.0	synth with cache (only 1: split; only 1: firstorder; only 1: intro l; only 1: firstorder; only 1: intro l; only 1: firstorder).	3.78452801704	1800
Coq.MSets.MSetInterface.WRaw2SetsOn.eq_dec	40	5.14.3.10.0	synth with cache (only 1: intro n; only 1: intros; only 1: revert n; only 1: fix le_div2 1; only 1: destr_bool).	38.1720890999	26298
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.mem_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.equal_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.subset_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.empty_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.is_empty_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.add_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.remove_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.singleton_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.union_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.inter_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.diff_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.fold_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.cardinal_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.filter_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.for_all_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.exists_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.partition_spec1	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.partition_spec2	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.elements_spec1	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.elements_spec2w	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.choose_spec1	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.choose_spec2	40
Coq.MSets.MSetInterface.Raw2SetsOn.lt_strorder	40
Coq.MSets.MSetInterface.Raw2SetsOn.lt_compat	40
Coq.MSets.MSetInterface.Raw2SetsOn.Spec.compare_spec	40
Coq.MSets.MSetInterface.Raw2SetsOn.Spec.elements_spec2	40
Coq.MSets.MSetInterface.Raw2SetsOn.Spec.min_elt_spec1	40
Coq.MSets.MSetInterface.Raw2SetsOn.Spec.min_elt_spec2	40
Coq.MSets.MSetInterface.Raw2SetsOn.Spec.min_elt_spec3	40
Coq.MSets.MSetInterface.Raw2SetsOn.Spec.max_elt_spec1	40
Coq.MSets.MSetInterface.Raw2SetsOn.Spec.max_elt_spec2	40
Coq.MSets.MSetInterface.Raw2SetsOn.Spec.max_elt_spec3	40
Coq.MSets.MSetInterface.Raw2SetsOn.Spec.choose_spec3	40
Coq.MSets.MSetInterface.MakeSetOrdering.eq_equiv	40	4.0.0.0.0.0	synth with cache (only 1: split; only 1: intro l; only 1: firstorder; only 1: intro l; only 1: firstorder; only 1: firstorder).	0.0819420814514	10
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_0	40
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_1	40
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_2	40
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_3	40
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_4	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_compat	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_strorder	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_empty_r	40	13.5.0	synth with cache (only 1: intro n; only 1: intros e H3; only 1: firstorder).	4.13563609123	3063
Coq.MSets.MSetInterface.MakeSetOrdering.lt_empty_l	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_add_lt	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_add_eq	40
Coq.MSets.MSetInterface.MakeListOrdering.lt_strorder	40
Coq.MSets.MSetInterface.MakeListOrdering.lt_compat'	40
Coq.MSets.MSetInterface.MakeListOrdering.eq_cons	40
Coq.MSets.MSetInterface.MakeListOrdering.cons_CompSpec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.In_compat	40	8	synth with cache (only 1: solve_proper).	0.819197893143	69
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.mem_spec	40	2.11	synth with cache (only 1: fix even_spec 1; only 1: intuition).	0.746876955032	456
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.isok_iff	40	5.19	synth with cache (only 1: fix odd_specT 1; only 1: auto).	2.7219748497	3360
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.isok_Ok	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.add_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.add_ok	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.remove_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.remove_ok	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.singleton_ok	40	1.0	synth with cache (only 1: intros; only 1: intuition).	0.0159208774567	3
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.singleton_spec	40	0.3.0.0.1.10.0	synth with cache (only 1: intros; only 1: unfold singleton; only 1: split; only 1: intros; only 1: inv; only 1: auto; only 1: auto).	35.4373011589	1840
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.empty_ok	40	0.0	synth with cache (only 1: apply <- isok_iff; only 1: auto).	0.0167591571808	2
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.empty_spec	40	0.0.6.0	synth with cache (only 1: unfold empty; only 1: intro; only 1: intro; only 1: inv).	0.0247769355774	10
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.is_empty_spec	40	1.3.3.0.1.0.2.2.5	synth with cache (only 1: unfold Empty, empty; only 1: intros; only 1: red; only 1: induction s; only 1: intuition; only 1: inv; only 1: simpl; only 1: intuition; only 1: eauto).	33.2111570835	21128
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.elements_spec1	40	3.1	synth with cache (only 1: intros; only 1: intuition).	0.0860228538513	51
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.elements_spec2w	40	3.2.0.0	synth with cache (only 1: intros; only 1: induction s; only 1: intuition; only 1: auto).	0.0537130832672	16
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.fold_spec	40	2.0	synth with cache (only 1: unfold elements; only 1: constructors).	0.0128149986267	4
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.union_ok	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.union_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.inter_ok	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.inter_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.diff_ok	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.diff_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.subset_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.equal_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.choose_spec1	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.choose_spec2	40	2.0.0.5.0.0.1	synth with cache (only 1: intros; only 1: inversion H; only 1: induction s; only 1: intro; only 1: intro; only 1: inv; only 1: inversion H).	2.42724204063	1189
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.cardinal_spec	40	2.0.0.0.0.0	synth with cache (only 1: unfold elements; only 1: intros; only 1: induction s; only 1: intuition; only 1: inv; only 1: auto).	0.0606780052185	11
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.filter_spec'	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.filter_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.filter_ok	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.for_all_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.exists_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_spec1	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_spec2	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_ok1'	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_ok2'	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_ok1	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_ok2	40
Coq.MSets.MSetList.MakeRaw.ForNotations.inf_iff	40
Coq.MSets.MSetList.MakeRaw.ForNotations.isok_iff	40
Coq.MSets.MSetList.MakeRaw.ForNotations.isok_Ok	40	5	synth with cache (only 1: assumption).	0.0214409828186	6
Coq.MSets.MSetList.MakeRaw.ForNotations.mem_spec	40	0.0.1.6	synth with cache (only 1: intros x l; only 1: fix odd_spec 1; only 1: intro n; only 1: auto).	0.925166845322	189
Coq.MSets.MSetList.MakeRaw.ForNotations.add_inf	40
Coq.MSets.MSetList.MakeRaw.ForNotations.add_ok	40
Coq.MSets.MSetList.MakeRaw.ForNotations.add_spec	40
Coq.MSets.MSetList.MakeRaw.ForNotations.remove_inf	40
Coq.MSets.MSetList.MakeRaw.ForNotations.remove_ok	40	0.0.0.0.0.0.0.2.0.1.0.0.0	synth with cache (only 1: repeat rewrite <- isok_iff; only 1: revert s x; only 1: simple induction s; only 1: intuition; only 1: simpl; only 1: intros; only 1: elim_compare x a; only 1: inv; only 1: auto; only 1: inv; only 1: auto; only 1: inv; only 1: auto).	8.91675496101	2112
Coq.MSets.MSetList.MakeRaw.ForNotations.remove_spec	40
Coq.MSets.MSetList.MakeRaw.ForNotations.singleton_ok	40	0	synth with cache (only 1: intuition).	0.0240159034729	1
Coq.MSets.MSetList.MakeRaw.ForNotations.singleton_spec	40	0.4.5.3	synth with cache (only 1: intros; only 1: unfold singleton; only 1: rewrite InA_cons, InA_nil; only 1: intuition).	1.39689207077	438
Coq.MSets.MSetList.MakeRaw.ForNotations.union_inf	40
Coq.MSets.MSetList.MakeRaw.ForNotations.union_ok	40
Coq.MSets.MSetList.MakeRaw.ForNotations.union_spec	40
Coq.MSets.MSetList.MakeRaw.ForNotations.inter_inf	40
Coq.MSets.MSetList.MakeRaw.ForNotations.inter_ok	40	0.3.0.7.0.0.0.0.0.0.0	synth with cache (only 1: repeat rewrite <- isok_iff; only 1: revert s s'; only 1: induction2; only 1: constructors; only 1: auto; only 1: apply Inf_eq with x'; only 1: auto; only 1: destruct H1; only 1: auto; only 1: inv; only 1: auto).	16.0730469227	5147
Coq.MSets.MSetList.MakeRaw.ForNotations.inter_spec	40
Coq.MSets.MSetList.MakeRaw.ForNotations.diff_inf	40	1.0.1.12.0	synth with cache (only 1: induction2; only 1: eauto; only 1: apply Inf_lt with x'; only 1: auto; only 1: auto).	6.6997449398	1920
Coq.MSets.MSetList.MakeRaw.ForNotations.diff_ok	40	0.0.0	synth with cache (only 1: repeat rewrite <- isok_iff; only 1: revert s s'; only 1: induction2).	0.10135102272	3
Coq.MSets.MSetList.MakeRaw.ForNotations.diff_spec	40
Coq.MSets.MSetList.MakeRaw.ForNotations.equal_spec	40
Coq.MSets.MSetList.MakeRaw.ForNotations.subset_spec	40	4.9	synth with cache (only 1: fix odd_spec 1; only 1: intuition).	9.75059294701	2702
Coq.MSets.MSetList.MakeRaw.ForNotations.empty_ok	40	32	synth with cache (only 1: constructor).	0.263319969177	516
Coq.MSets.MSetList.MakeRaw.ForNotations.empty_spec	40	23	synth with cache (only 1: now f_equiv).	0.252215147018	255
Coq.MSets.MSetList.MakeRaw.ForNotations.is_empty_spec	40	8.1.1	synth with cache (only 1: fix odd_spec 1; only 1: intro m; only 1: trivial).	1.14589190483	447
Coq.MSets.MSetList.MakeRaw.ForNotations.elements_spec1	40	3.2.1.0	synth with cache (only 1: induction s; only 1: easy; only 1: intros; only 1: intuition).	0.106116056442	15
Coq.MSets.MSetList.MakeRaw.ForNotations.elements_spec2	40	2.7.0	synth with cache (only 1: intro H; only 1: repeat rewrite <- isok_iff; only 1: intuition).	0.141147136688	59
Coq.MSets.MSetList.MakeRaw.ForNotations.elements_spec2w	40	0.0.0	synth with cache (only 1: intro s; only 1: repeat rewrite <- isok_iff; only 1: auto).	0.0445940494537	3
Coq.MSets.MSetList.MakeRaw.ForNotations.min_elt_spec1	40	1.5.0.1.0.2	synth with cache (only 1: intros l; only 1: induction l; only 1: intuition; only 1: discriminate; only 1: inversion 1; only 1: auto).	2.8077890873	749
Coq.MSets.MSetList.MakeRaw.ForNotations.min_elt_spec2	40
Coq.MSets.MSetList.MakeRaw.ForNotations.min_elt_spec3	40	0.0.0.0.0	synth with cache (only 1: destruct s; only 1: simpl; only 1: intros _ x H; only 1: inv; only 1: discriminate).	0.0518910884857	5
Coq.MSets.MSetList.MakeRaw.ForNotations.max_elt_spec1	40
Coq.MSets.MSetList.MakeRaw.ForNotations.max_elt_spec2	40
Coq.MSets.MSetList.MakeRaw.ForNotations.max_elt_spec3	40
Coq.MSets.MSetList.MakeRaw.ForNotations.choose_spec3	40
Coq.MSets.MSetList.MakeRaw.ForNotations.fold_spec	40	0.0	synth with cache (only 1: intro l; only 1: intuition).	0.0361371040344	2
Coq.MSets.MSetList.MakeRaw.ForNotations.cardinal_spec	40	1.0	synth with cache (only 1: intros n H; only 1: reflexivity).	0.032506942749	3
Coq.MSets.MSetList.MakeRaw.ForNotations.filter_inf	40
Coq.MSets.MSetList.MakeRaw.ForNotations.filter_ok	40
Coq.MSets.MSetList.MakeRaw.ForNotations.filter_spec	40
Coq.MSets.MSetList.MakeRaw.ForNotations.for_all_spec	40
Coq.MSets.MSetList.MakeRaw.ForNotations.exists_spec	40
Coq.MSets.MSetList.MakeRaw.ForNotations.partition_inf1	40
Coq.MSets.MSetList.MakeRaw.ForNotations.partition_inf2	40
Coq.MSets.MSetList.MakeRaw.ForNotations.partition_ok1	40
Coq.MSets.MSetList.MakeRaw.ForNotations.partition_ok2	40
Coq.MSets.MSetList.MakeRaw.ForNotations.partition_spec1	40
Coq.MSets.MSetList.MakeRaw.ForNotations.partition_spec2	40
Coq.MSets.MSetList.MakeRaw.In_compat	40	4	synth with cache (only 1: solve_proper).	0.191082000732	37
Coq.MSets.MSetList.MakeRaw.lt_strorder	40
Coq.MSets.MSetList.MakeRaw.lt_compat	40
Coq.MSets.MSetList.MakeRaw.compare_spec_aux	40
Coq.MSets.MSetList.MakeRaw.compare_spec	40
Coq.MSets.MSetList.MakeWithLeibniz.eq_leibniz_list	40
Coq.MSets.MSetList.MakeWithLeibniz.eq_leibniz	40	1.1.32.8	synth with cache (only 1: intros l; only 1: fix odd_specT 1; only 1: intro m; only 1: auto).	25.1383769512	28388
Coq.Relations.Relation_Operators.Simple_Lexicographic_Product.slexprod_lexprod	40
Coq.Relations.Operators_Properties.Properties.Clos_Refl_Trans.clos_rt_is_preorder	40
Coq.Relations.Operators_Properties.Properties.Clos_Refl_Trans.clos_rt_idempotent	40
Coq.Relations.Operators_Properties.Properties.Clos_Refl_Sym_Trans.clos_rt_clos_rst	40
Coq.Relations.Operators_Properties.Properties.Clos_Refl_Sym_Trans.clos_r_clos_rt	40	0.0.6.13.0	synth with cache (only 1: red; only 1: intros; only 1: destruct H; only 1: auto with sets; only 1: auto with sets).	0.375608921051	574
Coq.Relations.Operators_Properties.Properties.Clos_Refl_Sym_Trans.clos_rt_t	40
Coq.Relations.Operators_Properties.Properties.Clos_Refl_Sym_Trans.clos_rst_is_equiv	40
Coq.Relations.Operators_Properties.Properties.Clos_Refl_Sym_Trans.clos_rst_idempotent	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_t1n_trans	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_trans_t1n	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_trans_t1n_iff	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_tn1_trans	40	0.2.1.0.0.0.6.36	synth with cache (only 1: intro H1; only 1: induction 1 as [? ?| ]; only 1: left; only 1: assumption; only 1: right with y; only 1: auto; only 1: left; only 1: auto).	3.1743991375	8142
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_trans_tn1	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_trans_tn1_iff	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt1n_step	40	0.0.0.14.5	synth with cache (only 1: intro y0; only 1: intro; only 1: right with y; only 1: auto; only 1: constructor).	0.319869041443	406
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rtn1_step	40	1.0.5.6.26.6	synth with cache (only 1: intro y0; only 1: intro p; only 1: intro H; only 1: right with y0; only 1: auto; only 1: constructor).	5.06277394295	11491
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt1n_rt	40	0.0.1.0.2	synth with cache (only 1: induction 1 as [x y H| x y z H H0 IH0]; only 1: auto with sets; only 1: apply rt_trans with y; only 1: auto with sets; only 1: auto with sets).	0.111264944077	56
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt_rt1n	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt_rt1n_iff	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rtn1_rt	40	0.2.1.0.0.3	synth with cache (only 1: induction 1 as [y H| y z H H0 ?]; only 1: auto with sets; only 1: constructor 3 with y; only 1: auto; only 1: constructor 1; only 1: assumption).	0.346342086792	152
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt_rtn1	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt_rtn1_iff	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_refl_trans_ind_left	40
Coq.Relations.Operators_Properties.Properties.Equivalences.rt1n_ind_right	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_refl_trans_ind_right	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst1n_rst	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst1n_trans	40	0.7.0.0.21	synth with cache (only 1: induction 1 as [? ?| ]; only 1: auto; only 1: right with y; only 1: auto; only 1: auto).	7.72076392174	12382
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst1n_sym	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst_rst1n	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst_rst1n_iff	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rstn1_rst	40	0.0.1.0.0.2.1.0.0.4	synth with cache (only 1: induction 1 as [y H| y z H H0 ?]; only 1: auto with sets; only 1: constructor 4 with y; only 1: auto; only 1: case H; only 1: constructor 1; only 1: auto; only 1: constructor 3; only 1: constructor 1; only 1: auto).	7.59331297874	3331
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rstn1_trans	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rstn1_sym	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst_rstn1	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst_rstn1_iff	40
Coq.Relations.Operators_Properties.Properties.clos_trans_transp_permute	40
Coq.Relations.Relations.inverse_image_of_equivalence	40
Coq.Relations.Relations.inverse_image_of_eq	40	0.0.2.0.3.2.1.0.1	synth with cache (only 1: intros; only 1: split; only 1: split; only 1: red; only 1: destruct 2; only 1: assumption; only 1: red; only 1: destruct 1; only 1: trivial).	1.39506483078	885
Coq.ssr.ssreflect.master_key	40	2	synth with cache (only 1: split).	0.00736904144287	3
Coq.ssr.ssreflect.lock	40
Coq.ssr.ssreflect.not_locked_false_eq_true	40	0.3	synth with cache (only 1: unlock; only 1: discriminate).	0.0242519378662	14
Coq.ssr.ssreflect.unlock	40
Coq.ssr.ssreflect.locked_withE	40
Coq.ssr.ssreflect.unlock_with	40	1	synth with cache (only 1: by case : k ).	0.00772213935852	2
Coq.ssr.ssreflect.nary_congruence	40
Coq.ssr.ssreflect.ssr_congr_arrow	40	1.6.0	synth with cache (only 1: intro H; only 1: destruct H; only 1: auto).	0.019268989563	14
Coq.ssr.ssreflect.ApplyIff.iffLR	40	0	synth with cache (only 1: intuition).	0.0103468894958	1
Coq.ssr.ssreflect.ApplyIff.iffRL	40	0	synth with cache (only 1: by case : eqPQ ).	0.00711989402771	1
Coq.ssr.ssreflect.ApplyIff.iffLRn	40	1	synth with cache (only 1: intuition).	0.0174739360809	2
Coq.ssr.ssreflect.ApplyIff.iffRLn	40	0	synth with cache (only 1: by move  =>nP tQ; case : nP ; case : eqPQ tQ ).	0.00744104385376	1
Coq.ssr.ssreflect.abstract_context	40	1.100.174	synth with cache (only 1: intros H; only 1: apply H; only 1: split).	20.1640410423	257443
Coq.ssr.ssrbool.prop_congr	40	0	synth with cache (only 1: Bool.destr_bool).	0.00908803939819	1
Coq.ssr.ssrbool.is_true_true	40	20	synth with cache (only 1: reflexivity).	0.0231511592865	186
Coq.ssr.ssrbool.not_false_is_true	40	0	synth with cache (only 1: intuition).	0.00643801689148	1
Coq.ssr.ssrbool.is_true_locked_true	40	0.0	synth with cache (only 1: unlock; only 1: by [  ]).	0.00650191307068	2
Coq.ssr.ssrbool.negbT	40	4	synth with cache (only 1: Bool.destr_bool).	0.00993919372559	11
Coq.ssr.ssrbool.negbTE	40	0	synth with cache (only 1: by case : b ).	0.0073618888855	1
Coq.ssr.ssrbool.negbF	40	0	synth with cache (only 1: by case : b ).	0.0080668926239	1
Coq.ssr.ssrbool.negbFE	40	0	synth with cache (only 1: by case : b ).	0.00741982460022	1
Coq.ssr.ssrbool.negbK	40	3.25	synth with cache (only 1: intro x; only 1: Bool.destr_bool).	0.103660821915	426
Coq.ssr.ssrbool.negbNE	40	0	synth with cache (only 1: by case : b ).	0.00594997406006	1
Coq.ssr.ssrbool.negb_inj	40	0.25	synth with cache (only 1: intro x; only 1: Bool.destr_bool).	0.113483905792	333
Coq.ssr.ssrbool.negbLR	40	0.0.3	synth with cache (only 1: destruct c; only 1: by case : b ; only 1: by case : b ).	0.0173089504242	13
Coq.ssr.ssrbool.negbRL	40	1.1.5	synth with cache (only 1: destruct c; only 1: by case : b ; only 1: by case : b ).	0.0218138694763	16
Coq.ssr.ssrbool.contra	40	5.6	synth with cache (only 1: Bool.destr_bool; only 1: auto).	0.0722968578339	80
Coq.ssr.ssrbool.contraL	40	0	synth with cache (only 1: by case : b  => //; case : c ).	0.0103070735931	1
Coq.ssr.ssrbool.contraR	40	0	synth with cache (only 1: by case : b  => //; case : c ).	0.0102269649506	1
Coq.ssr.ssrbool.contraLR	40	0	synth with cache (only 1: by case : b  => //; case : c ).	0.00959801673889	1
Coq.ssr.ssrbool.contraT	40	1.10	synth with cache (only 1: Bool.destr_bool; only 1: intuition).	0.0622301101685	53
Coq.ssr.ssrbool.wlog_neg	40	0	synth with cache (only 1: by case : b  => // ->).	0.00802683830261	1
Coq.ssr.ssrbool.contraFT	40	2.9	synth with cache (only 1: Bool.destr_bool; only 1: intuition).	0.0753648281097	49
Coq.ssr.ssrbool.contraFN	40	2.10	synth with cache (only 1: Bool.destr_bool; only 1: intuition).	0.111492156982	63
Coq.ssr.ssrbool.contraTF	40	2.7	synth with cache (only 1: Bool.destr_bool; only 1: intuition).	0.0560250282288	23
Coq.ssr.ssrbool.contraNF	40	2.8	synth with cache (only 1: Bool.destr_bool; only 1: intuition).	0.0804710388184	36
Coq.ssr.ssrbool.contraFF	40	1.4.19	synth with cache (only 1: destruct c; only 1: by case : b  => // ->; only 1: by move /contra =>notb_notc /negbT).	0.639274120331	790
Coq.ssr.ssrbool.contra_not	40	0.5	synth with cache (only 1: Bool.destr_bool; only 1: auto).	0.0111029148102	7
Coq.ssr.ssrbool.contraPnot	40	0	synth with cache (only 1: by auto).	0.007159948349	1
Coq.ssr.ssrbool.contraTnot	40	0.9	synth with cache (only 1: Bool.destr_bool; only 1: intuition).	0.0499489307404	21
Coq.ssr.ssrbool.contraNnot	40	0	synth with cache (only 1: by case : b ; auto).	0.00762796401978	1
Coq.ssr.ssrbool.contraPT	40	0.12.16	synth with cache (only 1: Bool.destr_bool; only 1: red; only 1: intuition).	1.64172291756	2665
Coq.ssr.ssrbool.contra_notT	40	0.15.8.1	synth with cache (only 1: rewrite -{+1}[b]negbK; only 1: Bool.destr_bool; only 1: red; only 1: intuition).	2.66199612617	2738
Coq.ssr.ssrbool.contra_notN	40	0	synth with cache (only 1: by case : b  => //= /(_ isT) HP /(_ HP)).	0.0128309726715	1
Coq.ssr.ssrbool.contraPN	40	0	synth with cache (only 1: by case : b  => //= /(_ isT) nP /nP).	0.0128488540649	1
Coq.ssr.ssrbool.contraFnot	40	0	synth with cache (only 1: by case : b ; auto).	0.0121598243713	1
Coq.ssr.ssrbool.contraPF	40	0	synth with cache (only 1: by case : b  => //=; move /(_ isT) =>HP /HP).	0.0117030143738	1
Coq.ssr.ssrbool.contra_notF	40	0	synth with cache (only 1: by case : b  => // /(_ isT)).	0.0124650001526	1
Coq.ssr.ssrbool.BoolIf.ifP	40
Coq.ssr.ssrbool.BoolIf.ifPn	40	0	synth with cache (only 1: by case  def_b: b ; constructor).	0.00898694992065	1
Coq.ssr.ssrbool.BoolIf.ifT	40	1	synth with cache (only 1: by case : b ).	0.0111410617828	2
Coq.ssr.ssrbool.BoolIf.ifF	40	0	synth with cache (only 1: by move ->).	0.00783681869507	1
Coq.ssr.ssrbool.BoolIf.ifN	40	2	synth with cache (only 1: by case : b ).	0.0123372077942	3
Coq.ssr.ssrbool.BoolIf.if_same	40	0	synth with cache (only 1: by case  def_b: b ; constructor; rewrite ?def_b).	0.008465051651	1
Coq.ssr.ssrbool.BoolIf.if_neg	40	1	synth with cache (only 1: by case b).	0.0103569030762	2
Coq.ssr.ssrbool.BoolIf.fun_if	40	0	synth with cache (only 1: by case b).	0.00857400894165	1
Coq.ssr.ssrbool.BoolIf.if_arg	40	0	synth with cache (only 1: by case b).	0.00788807868958	1
Coq.ssr.ssrbool.BoolIf.ifE	40	10	synth with cache (only 1: trivial).	0.0190880298615	21
Coq.ssr.ssrbool.ReflectCore.introNTF	40
Coq.ssr.ssrbool.ReflectCore.introTF	40	0	synth with cache (only 1: by case c; case Hb).	0.014142036438	1
Coq.ssr.ssrbool.ReflectCore.elimNTF	40	0	synth with cache (only 1: by case c; case Hb).	0.0140681266785	1
Coq.ssr.ssrbool.ReflectCore.elimTF	40	0	synth with cache (only 1: by move <-; case Hb).	0.00874614715576	1
Coq.ssr.ssrbool.ReflectCore.equivPif	40
Coq.ssr.ssrbool.ReflectCore.xorPif	40	0.0.27	synth with cache (only 1: intuition; only 1: by case Hb; auto; only 1: by case Hb; auto).	6.53178882599	466
Coq.ssr.ssrbool.ReflectNegCore.introTFn	40	0.23	synth with cache (only 1: rewrite -{+1}[b]negbK; only 1: by case c; case Hb).	11.5409491062	402
Coq.ssr.ssrbool.ReflectNegCore.elimTFn	40	0.24	synth with cache (only 1: rewrite -{+1}[b]negbK; only 1: by move <-; case Hb).	0.467782020569	389
Coq.ssr.ssrbool.ReflectNegCore.equivPifn	40
Coq.ssr.ssrbool.ReflectNegCore.xorPifn	40	0.21	synth with cache (only 1: rewrite -{+1}[b]negbK; only 1: by case Hb => [? _ H ?|? H _]; case : H ).	0.225275993347	231
Coq.ssr.ssrbool.Reflect.introT	40
Coq.ssr.ssrbool.Reflect.introF	40
Coq.ssr.ssrbool.Reflect.introN	40
Coq.ssr.ssrbool.Reflect.introNf	40
Coq.ssr.ssrbool.Reflect.introTn	40
Coq.ssr.ssrbool.Reflect.introFn	40
Coq.ssr.ssrbool.Reflect.elimT	40
Coq.ssr.ssrbool.Reflect.elimF	40
Coq.ssr.ssrbool.Reflect.elimN	40
Coq.ssr.ssrbool.Reflect.elimNf	40
Coq.ssr.ssrbool.Reflect.elimTn	40
Coq.ssr.ssrbool.Reflect.elimFn	40
Coq.ssr.ssrbool.Reflect.introP	40
Coq.ssr.ssrbool.Reflect.iffP	40
Coq.ssr.ssrbool.Reflect.equivP	40	0.21	synth with cache (only 1: intuition; only 1: by case : Pb ; constructor; auto).	0.210630178452	231
Coq.ssr.ssrbool.Reflect.sumboolP	40
Coq.ssr.ssrbool.Reflect.appP	40
Coq.ssr.ssrbool.Reflect.sameP	40
Coq.ssr.ssrbool.Reflect.decPcases	40
Coq.ssr.ssrbool.Reflect.decP	40	15	synth with cache (only 1: by case : Pb ; constructor; auto).	0.0629460811615	91
Coq.ssr.ssrbool.Reflect.rwP	40	13	synth with cache (only 1: by case : Pb ; constructor; auto).	0.0529651641846	60
Coq.ssr.ssrbool.Reflect.rwP2	40
Coq.ssr.ssrbool.Reflect.altP	40
Coq.ssr.ssrbool.impliesP	40	6.22.46	synth with cache (only 1: intro H; only 1: destruct H; only 1: auto).	2.19940900803	11661
Coq.ssr.ssrbool.impliesPn	40	2.13.8.35	synth with cache (only 1: red; only 1: Bool.destr_bool; only 1: destruct H; only 1: tauto).	1.96997308731	4213
Coq.ssr.ssrbool.unlessL	40	9.2.37.2	synth with cache (only 1: split; only 1: intros r s; only 1: intros H ?; only 1: auto).	0.864106893539	3549
Coq.ssr.ssrbool.unlessR	40	14.35.2	synth with cache (only 1: repeat split; only 1: red; only 1: by auto).	1.19826793671	5587
Coq.ssr.ssrbool.unless_sym	40	2.1.7.19.44.3	synth with cache (only 1: split; only 1: red; only 1: intros; only 1: apply H; only 1: auto; only 1: auto).	1.68926715851	8488
Coq.ssr.ssrbool.unlessP	40
Coq.ssr.ssrbool.bind_unless	40
Coq.ssr.ssrbool.unless_contra	40
Coq.ssr.ssrbool.classicP	40
Coq.ssr.ssrbool.classicW	40	0.19	synth with cache (only 1: red; only 1: by move  =>b b' ->).	0.0633730888367	186
Coq.ssr.ssrbool.classic_bind	40
Coq.ssr.ssrbool.classic_EM	40
Coq.ssr.ssrbool.classic_pick	40
Coq.ssr.ssrbool.classic_imply	40
Coq.ssr.ssrbool.AllAnd.all_and2	40	1.0.1.1.0.1.0	synth with cache (only 1: repeat split; only 1: intro z; only 1: destruct (H z); only 1: auto; only 1: intro z; only 1: destruct (H z); only 1: auto).	0.141931056976	115
Coq.ssr.ssrbool.AllAnd.all_and3	40	0	synth with cache (only 1: by split => haveP; split => x; case : (haveP x) ).	0.0099880695343	1
Coq.ssr.ssrbool.AllAnd.all_and4	40	0	synth with cache (only 1: by split => haveP; split => x; case : (haveP x) ).	0.0109670162201	1
Coq.ssr.ssrbool.AllAnd.all_and5	40	0	synth with cache (only 1: by split => haveP; split => x; case : (haveP x) ).	0.0133259296417	1
Coq.ssr.ssrbool.pair_andP	40	7	synth with cache (only 1: intuition).	0.0265679359436	25
Coq.ssr.ssrbool.ReflectConnectives.idP	40	5.0.8	synth with cache (only 1: destruct b1; only 1: intuition; only 1: now constructor).	0.0799338817596	130
Coq.ssr.ssrbool.ReflectConnectives.boolP	40	0	synth with cache (only 1: by case b1; constructor).	0.00693798065186	1
Coq.ssr.ssrbool.ReflectConnectives.idPn	40	0	synth with cache (only 1: by case b1; constructor).	0.00703501701355	1
Coq.ssr.ssrbool.ReflectConnectives.negP	40	0	synth with cache (only 1: by case b1; constructor).	0.00902509689331	1
Coq.ssr.ssrbool.ReflectConnectives.negPn	40	0	synth with cache (only 1: by case b1; constructor).	0.00685000419617	1
Coq.ssr.ssrbool.ReflectConnectives.negPf	40	0	synth with cache (only 1: by case b1; constructor; auto).	0.00773000717163	1
Coq.ssr.ssrbool.ReflectConnectives.andP	40
Coq.ssr.ssrbool.ReflectConnectives.and3P	40
Coq.ssr.ssrbool.ReflectConnectives.and4P	40
Coq.ssr.ssrbool.ReflectConnectives.and5P	40
Coq.ssr.ssrbool.ReflectConnectives.orP	40
Coq.ssr.ssrbool.ReflectConnectives.or3P	40
Coq.ssr.ssrbool.ReflectConnectives.or4P	40
Coq.ssr.ssrbool.ReflectConnectives.nandP	40	0	synth with cache (only 1: by case b1; case b2; constructor; auto; case).	0.0855238437653	1
Coq.ssr.ssrbool.ReflectConnectives.norP	40	0	synth with cache (only 1: by case b1; case b2; constructor; auto; case; auto).	0.0841889381409	1
Coq.ssr.ssrbool.ReflectConnectives.implyP	40	0	synth with cache (only 1: by case b1; case b2; constructor; auto; case).	0.00849509239197	1
Coq.ssr.ssrbool.ReflectCombinators.negPP	40
Coq.ssr.ssrbool.ReflectCombinators.andPP	40
Coq.ssr.ssrbool.ReflectCombinators.orPP	40
Coq.ssr.ssrbool.ReflectCombinators.implyPP	40
Coq.ssr.ssrbool.andTb	40	6	synth with cache (only 1: constructor).	0.00796604156494	7
Coq.ssr.ssrbool.andFb	40	0	synth with cache (only 1: by [  ]).	0.00728106498718	1
Coq.ssr.ssrbool.andbT	40	4.18	synth with cache (only 1: intro b1; only 1: Bool.destr_bool).	0.106484889984	265
Coq.ssr.ssrbool.andbF	40	1	synth with cache (only 1: by case).	0.00873613357544	2
Coq.ssr.ssrbool.andbb	40	9	synth with cache (only 1: by case).	0.0132231712341	11
Coq.ssr.ssrbool.andbC	40	0.21	synth with cache (only 1: intro b1; only 1: Bool.destr_bool).	0.0849659442902	231
Coq.ssr.ssrbool.andbA	40	0	synth with cache (only 1: by case).	0.00722503662109	1
Coq.ssr.ssrbool.andbCA	40	0	synth with cache (only 1: by do 2!case).	0.00844407081604	1
Coq.ssr.ssrbool.andbAC	40	0	synth with cache (only 1: by do 3!case).	0.0144879817963	1
Coq.ssr.ssrbool.andbACA	40	0.33	synth with cache (only 1: intro x; only 1: Bool.destr_bool).	0.360466957092	585
Coq.ssr.ssrbool.orTb	40	0	synth with cache (only 1: Bool.destr_bool).	0.00796484947205	1
Coq.ssr.ssrbool.orFb	40	0	synth with cache (only 1: by [  ]).	0.00621199607849	1
Coq.ssr.ssrbool.orbT	40	1	synth with cache (only 1: Bool.destr_bool).	0.00875306129456	2
Coq.ssr.ssrbool.orbF	40	0	synth with cache (only 1: by case).	0.00665903091431	1
Coq.ssr.ssrbool.orbb	40	0	synth with cache (only 1: by case).	0.00682592391968	1
Coq.ssr.ssrbool.orbC	40	0	synth with cache (only 1: by do 2!case).	0.00808906555176	1
Coq.ssr.ssrbool.orbA	40	0	synth with cache (only 1: by do 3!case).	0.00987911224365	1
Coq.ssr.ssrbool.orbCA	40	0	synth with cache (only 1: by do 3!case).	0.00953602790833	1
Coq.ssr.ssrbool.orbAC	40	0	synth with cache (only 1: by do 3!case).	0.0105428695679	1
Coq.ssr.ssrbool.orbACA	40	0	synth with cache (only 1: by do 4!case).	0.0142409801483	1
Coq.ssr.ssrbool.andbN	40	0	synth with cache (only 1: by case : b ).	0.00777220726013	1
Coq.ssr.ssrbool.andNb	40	0	synth with cache (only 1: by case : b ).	0.00782704353333	1
Coq.ssr.ssrbool.orbN	40	0	synth with cache (only 1: by case : b ).	0.00846791267395	1
Coq.ssr.ssrbool.orNb	40	0	synth with cache (only 1: by case : b ).	0.00791597366333	1
Coq.ssr.ssrbool.andb_orl	40	3	synth with cache (only 1: by do 3!case).	0.0132908821106	4
Coq.ssr.ssrbool.andb_orr	40	0	synth with cache (only 1: by do 3!case).	0.0111792087555	1
Coq.ssr.ssrbool.orb_andl	40	0	synth with cache (only 1: by do 3!case).	0.0104169845581	1
Coq.ssr.ssrbool.orb_andr	40	0	synth with cache (only 1: by do 3!case).	0.0107991695404	1
Coq.ssr.ssrbool.andb_idl	40	3.13	synth with cache (only 1: Bool.destr_bool; only 1: intuition).	0.209552049637	132
Coq.ssr.ssrbool.andb_idr	40	0	synth with cache (only 1: by case : a ; case : b  => // ->).	0.0121810436249	1
Coq.ssr.ssrbool.andb_id2l	40	0	synth with cache (only 1: by case : a ; case : b  => // ->).	0.0132458209991	1
Coq.ssr.ssrbool.andb_id2r	40	1.0.14	synth with cache (only 1: destruct c; only 1: by case : a ; case : b  => // ->; only 1: by case : a ; case : b  => // ->).	0.410315990448	421
Coq.ssr.ssrbool.orb_idl	40	0	synth with cache (only 1: by case : a ; case : b  => // ->).	0.0118958950043	1
Coq.ssr.ssrbool.orb_idr	40	0	synth with cache (only 1: by case : a ; case : b  => // ->).	0.011677980423	1
Coq.ssr.ssrbool.orb_id2l	40	0	synth with cache (only 1: by case : a ; case : b ; case : c  => // ->).	0.0159120559692	1
Coq.ssr.ssrbool.orb_id2r	40	0	synth with cache (only 1: by case : a ; case : b ; case : c  => // ->).	0.0158941745758	1
Coq.ssr.ssrbool.negb_and	40	1	synth with cache (only 1: by case : a ; case : b  => // ->).	0.0112988948822	2
Coq.ssr.ssrbool.negb_or	40	0	synth with cache (only 1: by case : a ; case : b ).	0.00911784172058	1
Coq.ssr.ssrbool.andbK	40	0	synth with cache (only 1: by case : a ; case : b ).	0.0087411403656	1
Coq.ssr.ssrbool.andKb	40	0	synth with cache (only 1: by case : a ; case : b ).	0.00906801223755	1
Coq.ssr.ssrbool.orbK	40	0	synth with cache (only 1: by case : a ; case : b ).	0.00876188278198	1
Coq.ssr.ssrbool.orKb	40	0	synth with cache (only 1: by case : a ; case : b ).	0.00900506973267	1
Coq.ssr.ssrbool.implybT	40	0	synth with cache (only 1: by case : b ).	0.00753998756409	1
Coq.ssr.ssrbool.implybF	40	0	synth with cache (only 1: by case : b ).	0.00773406028748	1
Coq.ssr.ssrbool.implyFb	40	0	synth with cache (only 1: by case : b ).	0.00720000267029	1
Coq.ssr.ssrbool.implyTb	40	0	synth with cache (only 1: by case : b ).	0.00724983215332	1
Coq.ssr.ssrbool.implybb	40	0	synth with cache (only 1: by case : b ).	0.00701785087585	1
Coq.ssr.ssrbool.negb_imply	40	0	synth with cache (only 1: by case : a ; case : b ).	0.00877404212952	1
Coq.ssr.ssrbool.implybE	40	0	synth with cache (only 1: by case : a ; case : b ).	0.00897407531738	1
Coq.ssr.ssrbool.implyNb	40	0	synth with cache (only 1: by case : a ; case : b ).	0.00904297828674	1
Coq.ssr.ssrbool.implybN	40	0	synth with cache (only 1: by case : a ; case : b ).	0.00924682617188	1
Coq.ssr.ssrbool.implybNN	40	0	synth with cache (only 1: by case : a ; case : b ).	0.00965309143066	1
Coq.ssr.ssrbool.implyb_idl	40	0	synth with cache (only 1: by case : a ; case : b  => // ->).	0.0122470855713	1
Coq.ssr.ssrbool.implyb_idr	40	0	synth with cache (only 1: by case : a ; case : b  => // ->).	0.0118520259857	1
Coq.ssr.ssrbool.implyb_id2l	40	0	synth with cache (only 1: by case : a ; case : b ; case : c  => // ->).	0.0927519798279	1
Coq.ssr.ssrbool.addFb	40	0	synth with cache (only 1: by [  ]).	0.00644111633301	1
Coq.ssr.ssrbool.addbF	40	0	synth with cache (only 1: by case).	0.00717711448669	1
Coq.ssr.ssrbool.addbb	40	1	synth with cache (only 1: by case).	0.00860595703125	2
Coq.ssr.ssrbool.addbC	40	0	synth with cache (only 1: by do 2!case).	0.00839900970459	1
Coq.ssr.ssrbool.addbA	40	0	synth with cache (only 1: by do 3!case).	0.00982403755188	1
Coq.ssr.ssrbool.addbCA	40	0	synth with cache (only 1: by do 3!case).	0.0100979804993	1
Coq.ssr.ssrbool.addbAC	40	0	synth with cache (only 1: by do 3!case).	0.0105757713318	1
Coq.ssr.ssrbool.addbACA	40	0	synth with cache (only 1: by do 4!case).	0.0147459506989	1
Coq.ssr.ssrbool.andb_addl	40	0	synth with cache (only 1: by do 3!case).	0.0106818675995	1
Coq.ssr.ssrbool.andb_addr	40	0	synth with cache (only 1: by do 3!case).	0.0102338790894	1
Coq.ssr.ssrbool.addKb	40	3	synth with cache (only 1: by do 2!case).	0.0123240947723	4
Coq.ssr.ssrbool.addbK	40	0	synth with cache (only 1: by do 2!case).	0.00808095932007	1
Coq.ssr.ssrbool.addIb	40	0	synth with cache (only 1: by do 3!case).	0.0117030143738	1
Coq.ssr.ssrbool.addbI	40	0	synth with cache (only 1: by do 3!case).	0.011617898941	1
Coq.ssr.ssrbool.addTb	40	0	synth with cache (only 1: by case : b ).	0.00811696052551	1
Coq.ssr.ssrbool.addbT	40	1	synth with cache (only 1: by case : b ).	0.00913381576538	2
Coq.ssr.ssrbool.addbN	40	0	synth with cache (only 1: by case : a ; case : b ).	0.00920605659485	1
Coq.ssr.ssrbool.addNb	40	0	synth with cache (only 1: by case : a ; case : b ).	0.0091450214386	1
Coq.ssr.ssrbool.addbP	40	0.0.0.0.29	synth with cache (only 1: Bool.destr_bool; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor).	0.470314979553	560
Coq.ssr.ssrbool.subrelUl	40	3.8.0.28.26	synth with cache (only 1: intro x; only 1: intro m; only 1: red; only 1: simpl; only 1: by move ->).	4.09450507164	10965
Coq.ssr.ssrbool.subrelUr	40	10.1.1.29.31	synth with cache (only 1: intro x; only 1: intro m; only 1: red; only 1: Bool.destr_bool; only 1: intuition).	4.53906106949	12003
Coq.ssr.ssrbool.sub_refl	40	2.25	synth with cache (only 1: red; only 1: Bool.destr_bool).	0.122193098068	393
Coq.ssr.ssrbool.PredicateSimplification.mem_topred	40
Coq.ssr.ssrbool.PredicateSimplification.topredE	40	0	synth with cache (only 1: by case : pT pp ).	0.00878310203552	1
Coq.ssr.ssrbool.PredicateSimplification.app_predE	40
Coq.ssr.ssrbool.PredicateSimplification.in_applicative	40
Coq.ssr.ssrbool.PredicateSimplification.in_collective	40
Coq.ssr.ssrbool.PredicateSimplification.in_simpl	40	0	synth with cache (only 1: by case : msp  => _ /= ->).	0.00897097587585	1
Coq.ssr.ssrbool.PredicateSimplification.unfold_in	40	7	synth with cache (only 1: reflexivity).	0.00902390480042	8
Coq.ssr.ssrbool.PredicateSimplification.simpl_predE	40	2	synth with cache (only 1: by [  ]).	0.007248878479	3
Coq.ssr.ssrbool.PredicateSimplification.mem_simpl	40	2	synth with cache (only 1: by [  ]).	0.00815010070801	3
Coq.ssr.ssrbool.PredicateSimplification.mem_mem	40
Coq.ssr.ssrbool.qualifE	40	1	synth with cache (only 1: by [  ]).	0.00871515274048	2
Coq.ssr.ssrbool.KeyPred.keyed_predE	40
Coq.ssr.ssrbool.KeyedQualifier.keyed_qualifier_suproof	40
Coq.ssr.ssrbool.all_tag_cond_dep	40
Coq.ssr.ssrbool.all_tag_cond	40
Coq.ssr.ssrbool.all_sig_cond_dep	40
Coq.ssr.ssrbool.all_sig_cond	40
Coq.ssr.ssrbool.RelationProperties.symmetric_from_pre	40
Coq.ssr.ssrbool.RelationProperties.PER.sym_left_transitive	40
Coq.ssr.ssrbool.RelationProperties.PER.sym_right_transitive	40
Coq.ssr.ssrbool.RelationProperties.equivalence_relP	40
Coq.ssr.ssrbool.rev_trans	40
Coq.ssr.ssrbool.LocalProperties.forE	40	1	synth with cache (only 1: reflexivity).	0.00720500946045	2
Coq.ssr.ssrbool.LocalGlobal.in1W	40	0.7	synth with cache (only 1: intro m; only 1: by [  ]).	0.0323491096497	9
Coq.ssr.ssrbool.LocalGlobal.in2W	40	0	synth with cache (only 1: by move  =>? ?).	0.0104508399963	1
Coq.ssr.ssrbool.LocalGlobal.in3W	40	0	synth with cache (only 1: by move  =>? ?).	0.00995397567749	1
Coq.ssr.ssrbool.LocalGlobal.in1T	40	8	synth with cache (only 1: auto).	0.0343239307404	11
Coq.ssr.ssrbool.LocalGlobal.in2T	40	1	synth with cache (only 1: by move  =>? ?; auto).	0.0244691371918	2
Coq.ssr.ssrbool.LocalGlobal.in3T	40	0	synth with cache (only 1: by move  =>? ?; auto).	0.0111088752747	1
Coq.ssr.ssrbool.LocalGlobal.sub_in1	40	0	synth with cache (only 1: by move  =>? ?; auto).	0.00894904136658	1
Coq.ssr.ssrbool.LocalGlobal.sub_in11	40	1	synth with cache (only 1: by move  =>? ?; auto).	0.106664896011	2
Coq.ssr.ssrbool.LocalGlobal.sub_in111	40	2	synth with cache (only 1: by move  =>? ?; auto).	0.0132191181183	3
Coq.ssr.ssrbool.LocalGlobal.on1W	40	0	synth with cache (only 1: by move  =>? ?).	0.0105931758881	1
Coq.ssr.ssrbool.LocalGlobal.on1lW	40	0	synth with cache (only 1: by move  =>? ?).	0.0108280181885	1
Coq.ssr.ssrbool.LocalGlobal.on2W	40	0	synth with cache (only 1: by move  =>? ?).	0.0114121437073	1
Coq.ssr.ssrbool.LocalGlobal.on1T	40	1	synth with cache (only 1: by move  =>? ?; auto).	0.0141711235046	2
Coq.ssr.ssrbool.LocalGlobal.on1lT	40	1	synth with cache (only 1: by move  =>? ?; auto).	0.014760017395	2
Coq.ssr.ssrbool.LocalGlobal.on2T	40	0	synth with cache (only 1: by move  =>? ?; auto).	0.0122191905975	1
Coq.ssr.ssrbool.LocalGlobal.subon1	40	1	synth with cache (only 1: by move  =>? ?; auto).	0.0148918628693	2
Coq.ssr.ssrbool.LocalGlobal.subon1l	40	0	synth with cache (only 1: by move  =>allQ x /sub2; apply : allQ ).	0.0118749141693	1
Coq.ssr.ssrbool.LocalGlobal.subon2	40	2	synth with cache (only 1: by move  =>? ?; auto).	0.0174491405487	3
Coq.ssr.ssrbool.LocalGlobal.can_in_inj	40
Coq.ssr.ssrbool.LocalGlobal.canLR_in	40	28.31.32	synth with cache (only 1: Bool.destr_bool; only 1: subst; only 1: auto).	10.3264110088	20619
Coq.ssr.ssrbool.LocalGlobal.canRL_in	40
Coq.ssr.ssrbool.LocalGlobal.on_can_inj	40	0	synth with cache (only 1: by move  =>fK x y /fK {+2}<- /fK {+2}<- ->).	0.0153589248657	1
Coq.ssr.ssrbool.LocalGlobal.canLR_on	40	1	synth with cache (only 1: by move  =>fK D1y ->; rewrite fK).	0.0139319896698	2
Coq.ssr.ssrbool.LocalGlobal.canRL_on	40	2	synth with cache (only 1: by move  =>fK D1x <-; rewrite fK).	0.0141310691833	3
Coq.ssr.ssrbool.LocalGlobal.inW_bij	40
Coq.ssr.ssrbool.LocalGlobal.onW_bij	40	0	synth with cache (only 1: by case  =>g' fK g'K; exists g' => * ? *; auto).	0.0137588977814	1
Coq.ssr.ssrbool.LocalGlobal.inT_bij	40	0	synth with cache (only 1: by case  =>g' fK g'K; exists g' => * ? *; auto).	0.0180830955505	1
Coq.ssr.ssrbool.LocalGlobal.onT_bij	40	0	synth with cache (only 1: by case  =>g' fK g'K; exists g' => * ? *; auto).	0.0167498588562	1
Coq.ssr.ssrbool.LocalGlobal.sub_in_bij	40	0.22	synth with cache (only 1: intro n; only 1: by case  =>g' fK g'K; exists g' => * ? *; auto).	0.302796125412	255
Coq.ssr.ssrbool.LocalGlobal.subon_bij	40	0	synth with cache (only 1: by move  =>subD [g' fK g'K]; exists g' => x; move /subD ; [ apply : fK  | apply : g'K  ]).	0.0320620536804	1
Coq.ssr.ssrbool.LocalGlobal.in_on1P	40
Coq.ssr.ssrbool.LocalGlobal.in_on1lP	40	0.0	synth with cache (only 1: split => allf x; have  := allf x; rewrite inE => Q1f ; first  by case /andP ; only 1: by move  =>? ?; apply : Q1f ; apply /andP ).	0.0364029407501	2
Coq.ssr.ssrbool.LocalGlobal.in_on2P	40
Coq.ssr.ssrbool.LocalGlobal.on1W_in	40	4	synth with cache (only 1: by move  =>? ?; auto).	0.0157492160797	5
Coq.ssr.ssrbool.LocalGlobal.on1lW_in	40	0	synth with cache (only 1: by move  =>D1f ? /D1f).	0.0162749290466	1
Coq.ssr.ssrbool.LocalGlobal.on2W_in	40	4	synth with cache (only 1: by move  =>? ?; auto).	0.0176141262054	5
Coq.ssr.ssrbool.LocalGlobal.in_on1W	40	2	synth with cache (only 1: by move  =>? ?).	0.0172190666199	3
Coq.ssr.ssrbool.LocalGlobal.in_on1lW	40	1	synth with cache (only 1: by move  =>allf ? ? ?; apply : allf ).	0.0163469314575	2
Coq.ssr.ssrbool.LocalGlobal.in_on2W	40	0	synth with cache (only 1: by move  =>D1f ? ? ? ? ? ?; apply : D1f ).	0.0148410797119	1
Coq.ssr.ssrbool.LocalGlobal.on1S	40	0.34	synth with cache (only 1: intro n; only 1: by move  =>? ?; auto).	0.545938014984	621
Coq.ssr.ssrbool.LocalGlobal.on1lS	40	0	synth with cache (only 1: by move  =>? fD1 ?; apply : fD1 ).	0.0152840614319	1
Coq.ssr.ssrbool.LocalGlobal.on2S	40	14.41	synth with cache (only 1: intros; only 1: by move  =>? ?; auto).	1.31978988647	1713
Coq.ssr.ssrbool.LocalGlobal.on1S_in	40	13.37	synth with cache (only 1: intro x; only 1: by move  =>? ?; auto).	1.51754403114	1424
Coq.ssr.ssrbool.LocalGlobal.on1lS_in	40	0	synth with cache (only 1: by move  =>fD fD1 ? ?; apply /fD1/fD ).	0.0194120407104	1
Coq.ssr.ssrbool.LocalGlobal.on2S_in	40	8.57	synth with cache (only 1: intros; only 1: by move  =>? ?; auto).	2.25635004044	2362
Coq.ssr.ssrbool.LocalGlobal.in_on1S	40	1	synth with cache (only 1: by move  =>? fD1 ?; apply : fD1 ).	0.0172290802002	2
Coq.ssr.ssrbool.LocalGlobal.in_on1lS	40	0	synth with cache (only 1: by move  =>fD2 fD1 ?; apply : fD1 ).	0.0172679424286	1
Coq.ssr.ssrbool.LocalGlobal.in_on2S	40	2	synth with cache (only 1: by move  =>? fD1 ? ?; apply : fD1 ).	0.0182199478149	3
Coq.ssr.ssrbool.in_sig.in1_sig	40	45.36	synth with cache (only 1: intro p; only 1: case  =>// undecP).	3.99305295944	10043
Coq.ssr.ssrbool.in_sig.in2_sig	40
Coq.ssr.ssrbool.in_sig.in3_sig	40
Coq.ssr.ssrbool.sub_in2	40	5.8.24	synth with cache (only 1: intros; only 1: intro; only 1: auto).	0.899257898331	1555
Coq.ssr.ssrbool.sub_in3	40	12.6.21	synth with cache (only 1: red; only 1: intros; only 1: auto).	0.931741952896	1700
Coq.ssr.ssrbool.sub_in12	40	0.23	synth with cache (only 1: intro H; only 1: by move  =>/= sub_dd'; apply : sub_in111 ).	0.267273187637	280
Coq.ssr.ssrbool.sub_in21	40	0	synth with cache (only 1: by move  =>/= sub1 sub; apply : sub_in111 ).	0.0102400779724	1
Coq.ssr.ssrbool.equivalence_relP_in	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory.monoW	40	4	synth with cache (only 1: by move  =>eq_fg eq_gh x; rewrite eq_fg).	0.0127429962158	5
Coq.ssr.ssrbool.MonoHomoMorphismTheory.mono2W	40	0	synth with cache (only 1: by move  =>hf x ax; rewrite hf).	0.00918912887573	1
Coq.ssr.ssrbool.MonoHomoMorphismTheory.homoRL	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory.homoLR	40	0	synth with cache (only 1: by move  =>Hf x y /Hf; rewrite fgK).	0.00999402999878	1
Coq.ssr.ssrbool.MonoHomoMorphismTheory.homo_mono	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory.monoLR	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory.monoRL	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory.can_mono	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.mono1W_in	40	0	synth with cache (only 1: by move  =>hf x ax; rewrite hf).	0.0115711688995	1
Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.monoW_in	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.homoRL_in	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.homoLR_in	40	0	synth with cache (only 1: by move  =>Hf x y hx hy /Hf; rewrite fgK ?mem_g // ?inE; apply).	0.0243909358978	1
Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.homo_mono_in	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.monoLR_in	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.monoRL_in	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.can_mono_in	40
Coq.ssr.ssrbool.HomoMonoMorphismFlip.homo_sym	40	0	synth with cache (only 1: by move  =>hf x y axy; rewrite hf).	0.0106449127197	1
Coq.ssr.ssrbool.HomoMonoMorphismFlip.mono_sym	40	1	synth with cache (only 1: by move  =>fR y x; apply : fR ).	0.0107719898224	2
Coq.ssr.ssrbool.HomoMonoMorphismFlip.homo_sym_in	40	28	synth with cache (only 1: by move  =>? ?; auto).	0.518316984177	390
Coq.ssr.ssrbool.HomoMonoMorphismFlip.mono_sym_in	40	1	synth with cache (only 1: by move  =>fR y x yD xD; apply : fR ).	0.0125567913055	2
Coq.ssr.ssrbool.HomoMonoMorphismFlip.homo_sym_in11	40	0	synth with cache (only 1: by move  =>fR y x yD xD; apply : fR ).	0.0125160217285	1
Coq.ssr.ssrbool.HomoMonoMorphismFlip.mono_sym_in11	40	0	synth with cache (only 1: by move  =>fR y x yD xD; apply : fR ).	0.011510848999	1
Coq.ssr.ssrbool.CancelOn.onW_can	40	5	synth with cache (only 1: by move  =>? ?).	0.0124261379242	6
Coq.ssr.ssrbool.CancelOn.onW_can_in	40	1	synth with cache (only 1: by move  =>D1f ? /D1f).	0.0142500400543	2
Coq.ssr.ssrbool.CancelOn.in_onW_can	40	0	synth with cache (only 1: by move  =>fgK x xrD xaD; apply : fgK ).	0.0105319023132	1
Coq.ssr.ssrbool.CancelOn.onS_can	40	2	synth with cache (only 1: by move  =>? fD1 ?; apply : fD1 ).	0.0135040283203	3
Coq.ssr.ssrbool.CancelOn.onS_can_in	40	11.51	synth with cache (only 1: intuition; only 1: by move  =>? ?; auto).	2.20267605782	3271
Coq.ssr.ssrbool.CancelOn.in_onS_can	40	1	synth with cache (only 1: by move  =>mem_g fgK x; apply : fgK ).	0.0136559009552	2
Coq.ssr.ssrbool.inj_can_sym_in_on.inj_can_sym_in_on	40
Coq.ssr.ssrbool.inj_can_sym_in_on.inj_can_sym_on	40
Coq.ssr.ssrbool.inj_can_sym_in_on.inj_can_sym_in	40
Coq.ssr.ssrsetoid.compat_Reflexive	40	0.4	synth with cache (only 1: intros; only 1: firstorder).	0.0282928943634	6
Coq.ssr.ssrfun.unitE	40	2.3.6.20	synth with cache (only 1: intro p; only 1: simpl; only 1: destruct p; only 1: reflexivity || destruct H).	0.364743947983	1140
Coq.ssr.ssrfun.ExtensionalEquality.frefl	40	0	synth with cache (only 1: split).	0.00639081001282	1
Coq.ssr.ssrfun.ExtensionalEquality.fsym	40	0.5	synth with cache (only 1: intros; only 1: by [  ]).	0.0124208927155	7
Coq.ssr.ssrfun.ExtensionalEquality.ftrans	40	0.38.55.14	synth with cache (only 1: intros; only 1: intro p; only 1: rewrite H; only 1: trivial).	4.64909100533	32855
Coq.ssr.ssrfun.ExtensionalEquality.rrefl	40	0	synth with cache (only 1: repeat split).	0.00572299957275	1
Coq.ssr.ssrfun.Composition.eq_comp	40
Coq.ssr.ssrfun.all_tag	40	0.0.0.0.0	synth with cache (only 1: intro H; only 1: exists (fun z => projT1 (H z)); only 1: intro z; only 1: destruct (H z); only 1: assumption).	0.0208368301392	5
Coq.ssr.ssrfun.all_tag2	40	0	synth with cache (only 1: by move  =>fP; exists (fun x => tag (fP x)) => x; case : (fP x) ).	0.0132229328156	1
Coq.ssr.ssrfun.Sig.svalP	40	19	synth with cache (only 1: apply proj2_sig).	0.0489389896393	165
Coq.ssr.ssrfun.Sig.s2valP	40	0	synth with cache (only 1: by case : u ).	0.00721192359924	1
Coq.ssr.ssrfun.Sig.s2valP'	40	0	synth with cache (only 1: by case : u ).	0.00703501701355	1
Coq.ssr.ssrfun.all_sig	40	0	synth with cache (only 1: by move  =>fP; exists (fun x => tag (fP x)) => x; case : (fP x) ).	0.00998115539551	1
Coq.ssr.ssrfun.all_sig2	40	0	synth with cache (only 1: by case /all_tag =>f /all_pair []; exists f).	0.0136849880219	1
Coq.ssr.ssrfun.Injections.can_pcan	40
Coq.ssr.ssrfun.Injections.pcan_inj	40
Coq.ssr.ssrfun.Injections.can_inj	40	1	synth with cache (only 1: by move  =>fK x y /(congr1 g); rewrite !fK => [[]]).	0.00906586647034	2
Coq.ssr.ssrfun.Injections.canLR	40	3.5.9	synth with cache (only 1: intros; only 1: elim eq_sym with (1 := H0); only 1: trivial).	0.162801980972	252
Coq.ssr.ssrfun.Injections.canRL	40	8.22.12	synth with cache (only 1: intros Hfst Hsnd; only 1: subst; only 1: auto).	0.647398948669	2334
Coq.ssr.ssrfun.Some_inj	40	3.0.29	synth with cache (only 1: inversion 1; only 1: destruct H; only 1: reflexivity).	1.75673604012	3023
Coq.ssr.ssrfun.of_voidK	40	1.9	synth with cache (only 1: intro p; only 1: destruct p).	0.0712640285492	58
Coq.ssr.ssrfun.esymK	40	0.1.57	synth with cache (only 1: intro H; only 1: destruct H; only 1: reflexivity).	0.455493927002	1859
Coq.ssr.ssrfun.etrans_id	40	0.18	synth with cache (only 1: subst; only 1: reflexivity).	0.0900681018829	165
Coq.ssr.ssrfun.InjectionsTheory.inj_id	40	0.13	synth with cache (only 1: red; only 1: Bool.destr_bool).	0.0481429100037	75
Coq.ssr.ssrfun.InjectionsTheory.inj_can_sym	40	7.3.49	synth with cache (only 1: red; only 1: intros; only 1: auto).	1.06671094894	4084
Coq.ssr.ssrfun.InjectionsTheory.inj_comp	40	27.13.12	synth with cache (only 1: intros Hfst Hsnd; only 1: intros H ?; only 1: auto).	1.0201830864	3259
Coq.ssr.ssrfun.InjectionsTheory.inj_compr	40
Coq.ssr.ssrfun.InjectionsTheory.can_comp	40
Coq.ssr.ssrfun.InjectionsTheory.pcan_pcomp	40
Coq.ssr.ssrfun.InjectionsTheory.eq_inj	40
Coq.ssr.ssrfun.InjectionsTheory.eq_can	40
Coq.ssr.ssrfun.InjectionsTheory.inj_can_eq	40
Coq.ssr.ssrfun.Bijections.bij_inj	40
Coq.ssr.ssrfun.Bijections.bij_can_sym	40
Coq.ssr.ssrfun.Bijections.bij_can_eq	40
Coq.ssr.ssrfun.BijectionsTheory.eq_bij	40
Coq.ssr.ssrfun.BijectionsTheory.bij_comp	40
Coq.ssr.ssrfun.BijectionsTheory.bij_can_bij	40
Coq.ssr.ssrfun.Involutions.inv_inj	40
Coq.ssr.ssrfun.Involutions.inv_bij	40
Coq.ssr.ssrunder.Under_rel.Under_rel_from_rel	40	7.0	synth with cache (only 1: intros C decide H P H0; only 1: auto).	0.0219080448151	9
Coq.ssr.ssrunder.Under_rel.Under_relE	40	0	synth with cache (only 1: auto).	0.0168190002441	1
Coq.ssr.ssrunder.Under_rel.over_rel	40	0	synth with cache (only 1: now trivial).	0.0161919593811	1
Coq.ssr.ssrunder.Under_rel.over_rel_done	40	0	synth with cache (only 1: now trivial).	0.0165951251984	1
Coq.ssr.ssrunder.Under_rel.under_rel_done	40	0	synth with cache (only 1: now unfold Over_rel).	0.0143210887909	1
Coq.Sets.Uniset.defs.le_refl	40	0	synth with cache (only 1: destr_bool).	0.00810694694519	1
Coq.Sets.Uniset.defs.incl_left	40	2.3.6.4.56	synth with cache (only 1: intros b b'; only 1: destruct b, b'; only 1: intros Hfst Hsnd; only 1: rewrite Hfst; only 1: auto).	32.2958650589	69233
Coq.Sets.Uniset.defs.incl_right	40	0.0.0.0	synth with cache (only 1: unfold incl; only 1: intros s1 s2 E a; only 1: elim (E a); only 1: auto).	0.0144610404968	4
Coq.Sets.Uniset.defs.seq_refl	40	4	synth with cache (only 1: auto).	0.00741410255432	5
Coq.Sets.Uniset.defs.seq_trans	40	1.0.2.0.8.5	synth with cache (only 1: destruct x; only 1: intro x; only 1: unfold seq; only 1: intros s1 s2 E a; only 1: elim (E a); only 1: auto).	1.18727397919	1480
Coq.Sets.Uniset.defs.seq_sym	40	0.0.1	synth with cache (only 1: intros s1 s2 E a; only 1: elim (E a); only 1: auto).	0.0140600204468	4
Coq.Sets.Uniset.defs.union_empty_left	40	0.0.0	synth with cache (only 1: destruct x; only 1: unfold seq; only 1: auto).	0.0141501426697	3
Coq.Sets.Uniset.defs.union_empty_right	40	13.1.1.0.2	synth with cache (only 1: destruct x; only 1: unfold seq; only 1: unfold union; only 1: simpl; only 1: intuition).	5.47040486336	7249
Coq.Sets.Uniset.defs.union_comm	40	14.0.0.0.2	synth with cache (only 1: unfold seq; only 1: simpl; only 1: destruct x; only 1: destruct y; only 1: intuition).	5.02594017982	5300
Coq.Sets.Uniset.defs.union_ass	40	3.0.1.0.0.1	synth with cache (only 1: unfold seq; only 1: unfold charac; only 1: destruct x; only 1: destruct y; only 1: simpl; only 1: auto with bool).	0.606028079987	214
Coq.Sets.Uniset.defs.seq_left	40	1.0.1.1.0.0	synth with cache (only 1: unfold seq; only 1: destruct y; only 1: simpl; only 1: intros; only 1: rewrite H; only 1: auto).	0.0266690254211	9
Coq.Sets.Uniset.defs.seq_right	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold seq; only 1: unfold union; only 1: unfold charac; only 1: destruct x; only 1: destruct y; only 1: destruct z; only 1: intros; only 1: elim H; only 1: auto).	0.0416691303253	9
Coq.Sets.Uniset.defs.union_rotate	40
Coq.Sets.Uniset.defs.seq_congr	40
Coq.Sets.Uniset.defs.union_perm_left	40
Coq.Sets.Uniset.defs.uniset_twist1	40
Coq.Sets.Uniset.defs.uniset_twist2	40
Coq.Sets.Uniset.defs.treesort_twist1	40
Coq.Sets.Uniset.defs.treesort_twist2	40	2.1.1.1.0.0.0.0.0.0.1	synth with cache (only 1: unfold seq; only 1: intros; only 1: apply seq_trans with (union x (union (union y z) t)); only 1: apply seq_right; only 1: apply seq_left; only 1: trivial; only 1: apply seq_trans with (union (union x (union y z)) t); only 1: apply seq_sym; only 1: apply union_ass; only 1: apply seq_left; only 1: apply union_perm_left).	16.2457249165	8845
Coq.Sets.Multiset.multiset_defs.meq_refl	40	3	synth with cache (only 1: split).	0.0317771434784	4
Coq.Sets.Multiset.multiset_defs.meq_trans	40
Coq.Sets.Multiset.multiset_defs.meq_sym	40	1.0.0.2.0	synth with cache (only 1: unfold meq; only 1: destruct x; only 1: intros; only 1: rewrite H; only 1: auto).	0.0782551765442	8
Coq.Sets.Multiset.multiset_defs.munion_empty_left	40	0.0.0	synth with cache (only 1: destruct x; only 1: unfold meq; only 1: reflexivity).	0.0544149875641	3
Coq.Sets.Multiset.multiset_defs.munion_empty_right	40	1.0.0.0	synth with cache (only 1: unfold meq; only 1: unfold munion; only 1: simpl; only 1: auto).	0.0574188232422	5
Coq.Sets.Multiset.multiset_defs.munion_comm	40
Coq.Sets.Multiset.multiset_defs.munion_ass	40
Coq.Sets.Multiset.multiset_defs.meq_left	40	2.5.0.0	synth with cache (only 1: unfold meq; only 1: destruct y; only 1: simpl; only 1: auto).	1.62787508965	307
Coq.Sets.Multiset.multiset_defs.meq_right	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold meq; only 1: unfold munion; only 1: unfold multiplicity; only 1: destruct x; only 1: destruct y; only 1: destruct z; only 1: intros; only 1: elim H; only 1: reflexivity).	0.157223939896	9
Coq.Sets.Multiset.multiset_defs.munion_rotate	40
Coq.Sets.Multiset.multiset_defs.meq_congr	40	1.3.1.2.0	synth with cache (only 1: unfold meq; only 1: unfold munion; only 1: unfold multiplicity; only 1: intros; only 1: auto).	3.06070899963	745
Coq.Sets.Multiset.multiset_defs.munion_perm_left	40
Coq.Sets.Multiset.multiset_defs.multiset_twist1	40
Coq.Sets.Multiset.multiset_defs.multiset_twist2	40
Coq.Sets.Multiset.multiset_defs.treesort_twist1	40
Coq.Sets.Multiset.multiset_defs.treesort_twist2	40
Coq.Sets.Multiset.multiset_defs.meq_singleton	40
Coq.Sets.Integers.Integers_sect.le_reflexive	40	0	synth with cache (only 1: auto  10 with sets).	0.00852108001709	1
Coq.Sets.Integers.Integers_sect.le_antisym	40	20	synth with cache (only 1: intuition).	0.180649995804	186
Coq.Sets.Integers.Integers_sect.le_trans	40	1.3.0.0	synth with cache (only 1: red; only 1: intros n m p; only 1: intros Hnm Hpq; only 1: Nat.Private_Tac.order).	0.0220148563385	8
Coq.Sets.Integers.Integers_sect.le_Order	40	2.0.2.0.1.0	synth with cache (only 1: split; only 1: auto  10 with sets; only 1: red; only 1: Nat.order; only 1: red; only 1: Nat.order).	0.459434986115	241
Coq.Sets.Integers.Integers_sect.triv_nat	40	7.0	synth with cache (only 1: intros; only 1: now Nat.nzsimpl).	0.0209140777588	9
Coq.Sets.Integers.Integers_sect.nat_po	40	0.0.1.0.5.284	synth with cache (only 1: eexists; only 1: auto with sets; only 1: split; only 1: exact le_reflexive; only 1: exact le_trans; only 1: exact le_antisym).	4.4041800499	44085
Coq.Sets.Integers.Integers_sect.le_total_order	40
Coq.Sets.Integers.Integers_sect.Finite_subset_has_lub	40
Coq.Sets.Integers.Integers_sect.Integers_has_no_ub	40
Coq.Sets.Integers.Integers_sect.Integers_infinite	40
Coq.Sets.Relations_1_facts.Rsym_imp_notRsym	40	1.0.0.4.6	synth with cache (only 1: intros A P H; only 1: red; only 1: red; only 1: intros; only 1: auto).	0.270143032074	187
Coq.Sets.Relations_1_facts.Equiv_from_preorder	40
Coq.Sets.Relations_1_facts.Equiv_from_order	40	0.1.0.0.0	synth with cache (only 1: intros U R H'; only 1: elim H'; only 1: intros H'0 H'1; only 1: red in H'0; only 1: auto  10 with sets).	0.362874031067	67
Coq.Sets.Relations_1_facts.contains_is_preorder	40	0.0.0.3	synth with cache (only 1: split; only 1: auto  10 with sets; only 1: intros H'0 H'1; only 1: auto  10 with sets).	0.0306930541992	7
Coq.Sets.Relations_1_facts.same_relation_is_equivalence	40
Coq.Sets.Relations_1_facts.cong_reflexive_same_relation	40	0.9	synth with cache (only 1: destruct 1; only 1: auto  10 with sets).	0.107867002487	69
Coq.Sets.Relations_1_facts.cong_symmetric_same_relation	40	0.0	synth with cache (only 1: unfold same_relation; only 1: intuition).	0.0266599655151	2
Coq.Sets.Relations_1_facts.cong_antisymmetric_same_relation	40	3.0.0.0.0.0	synth with cache (only 1: compute; only 1: intros; only 1: elim H; only 1: intros; only 1: clear H; only 1: auto with sets).	0.0490539073944	9
Coq.Sets.Relations_1_facts.cong_transitive_same_relation	40
Coq.Sets.Relations_2_facts.Rstar_reflexive	40	1	synth with cache (only 1: auto  10 with sets).	0.0142378807068	2
Coq.Sets.Relations_2_facts.Rplus_contains_R	40	0	synth with cache (only 1: auto with sets).	0.0143239498138	1
Coq.Sets.Relations_2_facts.Rstar_contains_R	40
Coq.Sets.Relations_2_facts.Rstar_contains_Rplus	40
Coq.Sets.Relations_2_facts.Rstar_transitive	40
Coq.Sets.Relations_2_facts.Rstar_cases	40
Coq.Sets.Relations_2_facts.Rstar_equiv_Rstar1	40
Coq.Sets.Relations_2_facts.Rsym_imp_Rstarsym	40
Coq.Sets.Relations_2_facts.Sstar_contains_Rstar	40	0.1.0.0.0.2.1.0.2.2.5.0	synth with cache (only 1: compute; only 1: intros U R H' x y H'0; only 1: intros; only 1: elim H; only 1: auto with sets; only 1: intros x0 y0 z H'1 H'2 H'3; only 1: generalize Rstar_transitive; only 1: intro T1; only 1: red in T1; only 1: apply T1 with y0; only 1: auto with sets; only 1: auto with sets).	13.5740818977	12715
Coq.Sets.Relations_2_facts.star_monotone	40	0.0.6.3.0.0.0.0	synth with cache (only 1: unfold contains; only 1: intros U R S H' x y H'0; only 1: elim H'0; only 1: auto with sets; only 1: intros x0 y0 z H'1 H'2 H'3; only 1: apply Rstar_n with y0; only 1: auto with sets; only 1: auto with sets).	19.1186189651	9495
Coq.Sets.Relations_2_facts.RstarRplus_RRstar	40
Coq.Sets.Relations_2_facts.Lemma1	40
Coq.Sets.Permut.Axiomatisation.cong_congr	40
Coq.Sets.Permut.Axiomatisation.comm_right	40	4.1.0	synth with cache (only 1: intros; only 1: apply cong_right; only 1: trivial).	0.0305540561676	18
Coq.Sets.Permut.Axiomatisation.comm_left	40	0.2.0	synth with cache (only 1: intros; only 1: apply cong_left; only 1: apply op_comm).	0.0139451026917	5
Coq.Sets.Permut.Axiomatisation.perm_right	40
Coq.Sets.Permut.Axiomatisation.perm_left	40
Coq.Sets.Permut.Axiomatisation.op_rotate	40	0.8.2.0.0	synth with cache (only 1: intros; only 1: apply cong_sym; only 1: apply cong_trans with (op (op x y) z); only 1: apply op_comm; only 1: apply op_ass).	10.503672123	3410
Coq.Sets.Permut.Axiomatisation.twist	40
Coq.Sets.Image.Image.Im_def	40
Coq.Sets.Image.Image.Im_add	40
Coq.Sets.Image.Image.image_empty	40	1.0.2.2.0.0.0.1.0.1	synth with cache (only 1: intro A; only 1: apply Extensionality_Ensembles; only 1: red; only 1: split; only 1: red; only 1: intros x H'; only 1: unfold In in *; only 1: elim H'; only 1: destruct 1; only 1: destruct 1).	1.85283493996	978
Coq.Sets.Image.Image.finite_image	40
Coq.Sets.Image.Image.Im_inv	40	0.7.0.5.10	synth with cache (only 1: intros x0 H'; only 1: intro K; only 1: destruct 1; only 1: exists x; only 1: auto using Im_def with sets).	27.3769128323	20814
Coq.Sets.Image.Image.not_injective_elim	40
Coq.Sets.Image.Image.cardinal_Im_intro	40
Coq.Sets.Image.Image.In_Image_elim	40
Coq.Sets.Image.Image.injective_preserves_cardinal	40
Coq.Sets.Image.Image.cardinal_decreases	40
Coq.Sets.Image.Image.Pigeonhole	40
Coq.Sets.Image.Image.Pigeonhole_principle	40
Coq.Sets.Infinite_sets.Infinite_sets.make_new_approximant	40
Coq.Sets.Infinite_sets.Infinite_sets.approximants_grow	40
Coq.Sets.Infinite_sets.Infinite_sets.approximants_grow'	40
Coq.Sets.Infinite_sets.Infinite_sets.approximant_can_be_any_size	40
Coq.Sets.Infinite_sets.Infinite_sets.Image_set_continuous	40
Coq.Sets.Infinite_sets.Infinite_sets.Image_set_continuous'	40
Coq.Sets.Infinite_sets.Infinite_sets.Pigeonhole_bis	40
Coq.Sets.Infinite_sets.Infinite_sets.Pigeonhole_ter	40
Coq.Sets.Powerset.The_power_set_partial_order.Empty_set_minimal	40	6.9.4.2	synth with cache (only 1: intro n; only 1: intro H'6; only 1: red; only 1: contradiction).	1.09223198891	2434
Coq.Sets.Powerset.The_power_set_partial_order.Power_set_Inhabited	40	5.4.2.22.38	synth with cache (only 1: intro x; only 1: exists x; only 1: split; only 1: intro X; only 1: auto  10 with sets).	1.67761015892	14377
Coq.Sets.Powerset.The_power_set_partial_order.Inclusion_is_an_order	40	0.0.0.7	synth with cache (only 1: constructor; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets).	0.0500829219818	24
Coq.Sets.Powerset.The_power_set_partial_order.Inclusion_is_transitive	40	0	synth with cache (only 1: auto  6 with sets).	0.00676608085632	1
Coq.Sets.Powerset.The_power_set_partial_order.Power_set_PO	40
Coq.Sets.Powerset.The_power_set_partial_order.Strict_Rel_is_Strict_Included	40	0.2	synth with cache (only 1: red; only 1: auto  10 with sets).	0.00950384140015	4
Coq.Sets.Powerset.The_power_set_partial_order.Strict_inclusion_is_transitive_with_inclusion	40
Coq.Sets.Powerset.The_power_set_partial_order.Strict_inclusion_is_transitive_with_inclusion_left	40
Coq.Sets.Powerset.The_power_set_partial_order.Strict_inclusion_is_transitive	40	0.0.3.0.0.0.0.0.0.6	synth with cache (only 1: red; only 1: intros x y z H' H'0; only 1: elim Strict_Rel_is_Strict_Included; only 1: unfold contains; only 1: intros H'1 H'2; only 1: apply H'1; only 1: apply Strict_Rel_Transitive_with_Rel_left with (y := y); only 1: apply H'1; only 1: auto with sets; only 1: auto with sets).	25.0530397892	5055
Coq.Sets.Powerset.The_power_set_partial_order.Empty_set_is_Bottom	40	3.1.1.0.1.7.17.0	synth with cache (only 1: intro X; only 1: split; only 1: split; only 1: auto with sets; only 1: intros x H'; only 1: red; only 1: red; only 1: auto with sets).	33.3912529945	33468
Coq.Sets.Powerset.The_power_set_partial_order.Union_minimal	40
Coq.Sets.Powerset.The_power_set_partial_order.Intersection_maximal	40	6.0.0.0	synth with cache (only 1: intros a b X H' H'0; only 1: red; only 1: intros x H'1; only 1: auto with sets).	0.0319209098816	18
Coq.Sets.Powerset.The_power_set_partial_order.Union_increases_l	40	0	synth with cache (only 1: auto with sets).	0.00764012336731	1
Coq.Sets.Powerset.The_power_set_partial_order.Union_increases_r	40	0	synth with cache (only 1: auto with sets).	0.00693297386169	1
Coq.Sets.Powerset.The_power_set_partial_order.Intersection_decreases_l	40	0.0.0.0.0.3	synth with cache (only 1: intro A; only 1: intro X; only 1: red; only 1: intros x H'1; only 1: elim H'1; only 1: auto with sets).	0.0353500843048	23
Coq.Sets.Powerset.The_power_set_partial_order.Intersection_decreases_r	40	0.0.0.0.0	synth with cache (only 1: intros a b; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: auto with sets).	0.017147064209	5
Coq.Sets.Powerset.The_power_set_partial_order.Union_is_Lub	40
Coq.Sets.Powerset.The_power_set_partial_order.Intersection_is_Glb	40
Coq.Sets.Classical_sets.Ensembles_classical.not_included_empty_Inhabited	40
Coq.Sets.Classical_sets.Ensembles_classical.not_empty_Inhabited	40
Coq.Sets.Classical_sets.Ensembles_classical.Inhabited_Setminus	40
Coq.Sets.Classical_sets.Ensembles_classical.Strict_super_set_contains_new_element	40
Coq.Sets.Classical_sets.Ensembles_classical.Subtract_intro	40	1.8.1	synth with cache (only 1: intros A x y H'; only 1: RelationClasses.reduce; only 1: auto with sets).	0.906869888306	390
Coq.Sets.Classical_sets.Ensembles_classical.Subtract_inv	40	12.0.1	synth with cache (only 1: intros A x y H'; only 1: induction H'; only 1: intuition).	1.5317940712	1207
Coq.Sets.Classical_sets.Ensembles_classical.Included_Strict_Included	40
Coq.Sets.Classical_sets.Ensembles_classical.Strict_Included_inv	40
Coq.Sets.Classical_sets.Ensembles_classical.not_SIncl_empty	40	3.0.1.0.0.0	synth with cache (only 1: intro X; only 1: red; only 1: intro H'; only 1: red in H'; only 1: elim H'; only 1: auto with sets).	0.0415618419647	11
Coq.Sets.Classical_sets.Ensembles_classical.Complement_Complement	40
Coq.Sets.Relations_3_facts.Rstar_imp_coherent	40	0.0.0.9.3	synth with cache (only 1: intros U R; only 1: red; only 1: intros x0 a H'1; only 1: exists a; only 1: auto with sets).	4.5046877861	3976
Coq.Sets.Relations_3_facts.coherent_symmetric	40
Coq.Sets.Relations_3_facts.Strong_confluence	40
Coq.Sets.Relations_3_facts.Strong_confluence_direct	40
Coq.Sets.Relations_3_facts.Noetherian_contains_Noetherian	40
Coq.Sets.Relations_3_facts.Newman	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.sincl_add_x	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.incl_soustr_in	40	0.0.1.0.0	synth with cache (only 1: intros X x H'; only 1: red; only 1: intros x0 H'0; only 1: elim H'0; only 1: auto with sets).	0.0743148326874	6
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.incl_soustr	40	0.2.3.0.0	synth with cache (only 1: intros A B x H'; only 1: red; only 1: intros x1 H'0; only 1: elim H'0; only 1: auto with sets).	0.216202974319	16
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.incl_soustr_add_l	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.incl_soustr_add_r	40	0.0.0.0.0.0.0.1.1.1.0	synth with cache (only 1: intros X x H'; only 1: split; only 1: auto with sets; only 1: red; only 1: intro H'1; only 1: lapply (Singleton_inv U x x0); only 1: intro H'4; only 1: apply H'; only 1: rewrite H'4; only 1: auto with sets; only 1: auto with sets).	10.2188210487	1767
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.add_soustr_2	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.add_soustr_1	40	0.0.0.0.0.2.0.1.4.0.0	synth with cache (only 1: intros X x H'; only 1: red; only 1: unfold Subtract; only 1: intros x0 H'0; only 1: elim H'0; only 1: intros t H'1; only 1: elim H'1; only 1: auto with sets; only 1: intros t H'1; only 1: elim H'1; only 1: auto with sets).	21.3978850842	8399
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.add_soustr_xy	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.incl_st_add_soustr	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.Sub_Add_new	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.Simplify_add	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.Included_Add	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.setcover_inv	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.Add_covers	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.covers_Add	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.covers_is_Add	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.Singleton_atomic	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.less_than_singleton	40
Coq.Sets.Partial_Order.Partial_order_facts.Strict_Rel_Transitive_with_Rel	40
Coq.Sets.Partial_Order.Partial_order_facts.Strict_Rel_Transitive_with_Rel_left	40
Coq.Sets.Partial_Order.Partial_order_facts.Strict_Rel_Transitive	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Empty_set_zero	40	20.0	synth with cache (only 1: intro A; only 1: auto  6 with sets).	0.537207841873	767
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Empty_set_zero_right	40	0	synth with cache (only 1: auto  6 with sets).	0.00989699363708	1
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Empty_set_zero'	40	0.11	synth with cache (only 1: unfold Add at 1; only 1: auto  6 with sets).	0.143273115158	116
Coq.Sets.Powerset_facts.Sets_as_an_algebra.less_than_empty	40	2.1	synth with cache (only 1: intros X H'; only 1: auto with sets).	0.012825012207	5
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_commutative	40	0	synth with cache (only 1: auto with sets).	0.01016497612	1
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_associative	40	8	synth with cache (only 1: auto  10 with sets).	0.0428919792175	12
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_idempotent	40	0	synth with cache (only 1: auto  6 with sets).	0.0103688240051	1
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_absorbs	40	3	synth with cache (only 1: auto  9 with sets).	0.0177760124207	4
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Couple_as_union	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Triple_as_union	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Triple_as_Couple	40	0.0.0.0.1.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros x y; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: auto with sets; only 1: auto with sets; only 1: red; only 1: intros x1 H'0; only 1: elim H'0; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets).	2.60080313683	1729
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Triple_as_Couple_Singleton	40	0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros x y z; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: intros x1 H'0; only 1: elim H'0; only 1: auto with sets; only 1: auto with sets; only 1: intros x1 H'0; only 1: elim H'0; only 1: auto with sets).	29.6072230339	15295
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Intersection_commutative	40	0.0.1.0.0.0.1.0.1.2.5	synth with cache (only 1: intros x y; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: auto with sets; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: auto with sets).	1.61242604256	1264
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Distributivity	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Distributivity_l	40	0.0.0.0.0.0.0.0.0.0.0.3.3.0.0.0.0.0.0	synth with cache (only 1: intros A B C; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: intros x0 H'0; only 1: elim H'0; only 1: auto with sets; only 1: auto with sets; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: intros x0 H'0; only 1: elim H'0; only 1: auto with sets; only 1: intros x0 H'0; only 1: elim H'0; only 1: auto with sets).	39.4910459518	25683
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Distributivity'	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_add	40	1.0.1.5	synth with cache (only 1: intros A B; only 1: unfold Add at 1; only 1: unfold Add at 1; only 1: auto  9 with sets).	0.333753108978	155
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Non_disjoint_union	40	1.0.0.1.1.0.0.4.1.1.1.3	synth with cache (only 1: unfold Add; only 1: intros x y z; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x1 H'0; only 1: elim H'0; only 1: auto with sets; only 1: intros x2 H'1; only 1: elim H'1; only 1: auto with sets; only 1: auto with sets).	4.90769505501	4451
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Non_disjoint_union'	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.singlx	40	1.0.2.0.0.1	synth with cache (only 1: unfold Add at 1; only 1: intros x y H'; only 1: elim H'; only 1: intros x1 H'0; only 1: elim H'0; only 1: auto with sets).	0.155997991562	58
Coq.Sets.Powerset_facts.Sets_as_an_algebra.incl_add	40	1.5	synth with cache (only 1: unfold Add; only 1: auto using Union_associative with sets).	0.178148984909	69
Coq.Sets.Powerset_facts.Sets_as_an_algebra.incl_add_x	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Add_commutative	40	0.0	synth with cache (only 1: unfold Add; only 1: auto  9 with sets).	0.0268940925598	2
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Add_commutative'	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Add_distributes	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.setcover_intro	40	1.0	synth with cache (only 1: intros x y z H' H'0; only 1: auto with sets).	0.0105440616608	3
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Disjoint_Intersection	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Intersection_Empty_set_l	40	1.0.0.0.0	synth with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intuition; only 1: intuition).	0.0258708000183	11
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Intersection_Empty_set_r	40	0.0	synth with cache (only 1: intros; only 1: auto with sets).	0.0130620002747	2
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Seminus_Empty_set_l	40	0.0.1.1.1.1.1.0	synth with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x0 H'0; only 1: elim H'0; only 1: auto with sets; only 1: auto with sets).	0.459993124008	323
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Seminus_Empty_set_r	40	1.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x H1; only 1: destruct H1; only 1: unfold In in *; only 1: assumption; only 1: intuition).	0.0347559452057	11
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Setminus_Union_l	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Setminus_Union_r	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Setminus_Disjoint_noop	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Setminus_Included_empty	40	0.0.0.1.1.0.1.0.0.0	synth with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x H1; only 1: unfold In in *; only 1: inversion_clear H1; only 1: exfalso; only 1: contradict H; only 1: intuition; only 1: intuition).	0.598320007324	359
Coq.Sets.Constructive_sets.Ensembles_facts.Extension	40	3.1.3.1.0.8.1.25.3	synth with cache (only 1: red; only 1: intros A P; only 1: intro H; only 1: destruct H; only 1: split; only 1: red; only 1: trivial; only 1: red; only 1: trivial).	25.480079174	95820
Coq.Sets.Constructive_sets.Ensembles_facts.Noone_in_empty	40	1.5.0	synth with cache (only 1: intro n; only 1: unfold not; only 1: contradiction).	0.0124590396881	9
Coq.Sets.Constructive_sets.Ensembles_facts.Included_Empty	40	0.0.1	synth with cache (only 1: intro n; only 1: red; only 1: destruct 1).	0.0174241065979	20
Coq.Sets.Constructive_sets.Ensembles_facts.Add_intro1	40	1.8.0.8	synth with cache (only 1: intros n m; only 1: intros x H; only 1: constructor; only 1: auto with sets).	0.842892885208	1195
Coq.Sets.Constructive_sets.Ensembles_facts.Add_intro2	40	0.0	synth with cache (only 1: unfold Add at 1; only 1: auto with sets).	0.0108549594879	2
Coq.Sets.Constructive_sets.Ensembles_facts.Inhabited_add	40	0.6.3.4.0	synth with cache (only 1: unfold Add at 1; only 1: intro m; only 1: intro; only 1: exists x; only 1: auto with sets).	0.320847034454	710
Coq.Sets.Constructive_sets.Ensembles_facts.Inhabited_not_empty	40
Coq.Sets.Constructive_sets.Ensembles_facts.Add_not_Empty	40	0.21.1.5.0.3	synth with cache (only 1: red; only 1: intros A x; only 1: intro; only 1: elim (Noone_in_empty x); only 1: destruct H; only 1: auto using Add_intro2 with sets).	28.3898730278	78630
Coq.Sets.Constructive_sets.Ensembles_facts.not_Empty_Add	40	0.2.3.1.2.0	synth with cache (only 1: intros A x; only 1: red; only 1: intro H'1; only 1: elim (Noone_in_empty x); only 1: rewrite H'1; only 1: auto using Add_intro2 with sets).	0.46807384491	520
Coq.Sets.Constructive_sets.Ensembles_facts.Singleton_inv	40	1.1.1	synth with cache (only 1: intros B C H'; only 1: rewrite H'; only 1: auto with sets).	0.0125710964203	6
Coq.Sets.Constructive_sets.Ensembles_facts.Singleton_intro	40	0.5.0	synth with cache (only 1: intros x y H'; only 1: elim H'; only 1: auto using Noone_in_empty with sets).	0.0114381313324	8
Coq.Sets.Constructive_sets.Ensembles_facts.Union_inv	40	0.0.2.4	synth with cache (only 1: intros A x; only 1: destruct 1; only 1: auto using Noone_in_empty with sets; only 1: auto using Noone_in_empty with sets).	0.043753862381	41
Coq.Sets.Constructive_sets.Ensembles_facts.Add_inv	40	1.8.0.0.1.0	synth with cache (only 1: unfold Add at 1; only 1: intros B C x H'; only 1: elim H'; only 1: auto with sets; only 1: destruct 1; only 1: auto with sets).	2.65862011909	1863
Coq.Sets.Constructive_sets.Ensembles_facts.Intersection_inv	40	0.0.0	synth with cache (only 1: intros B C x H'; only 1: elim H'; only 1: auto with sets).	0.013818025589	3
Coq.Sets.Constructive_sets.Ensembles_facts.Couple_inv	40	0.2.0.1.0.0	synth with cache (only 1: intros A x y H'; only 1: induction H'; only 1: left; only 1: trivial with sets; only 1: right; only 1: trivial with sets).	0.0271060466766	13
Coq.Sets.Constructive_sets.Ensembles_facts.Setminus_intro	40	1.0	synth with cache (only 1: intros B C x H'; only 1: auto with sets).	0.010929107666	3
Coq.Sets.Constructive_sets.Ensembles_facts.Strict_Included_intro	40	1.0	synth with cache (only 1: intros B C H'; only 1: auto with sets).	0.00980806350708	3
Coq.Sets.Constructive_sets.Ensembles_facts.Strict_Included_strict	40	3.7.6	synth with cache (only 1: red; only 1: destruct 1; only 1: auto with sets).	0.48668718338	1075
Coq.Sets.Finite_sets_facts.Finite_sets_facts.finite_cardinal	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.cardinal_finite	40	7.0.4.2.4.2	synth with cache (only 1: intro X; only 1: intro H'; only 1: intro H'0; only 1: elim H'0; only 1: trivial with sets; only 1: auto using Add_intro2 with sets).	4.08008217812	3961
Coq.Sets.Finite_sets_facts.Finite_sets_facts.Add_preserves_Finite	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.Singleton_is_finite	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.Union_preserves_Finite	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.Finite_downward_closed	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.Intersection_preserves_finite	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.cardinalO_empty	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.inh_card_gt_O	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.card_soustr_1	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.cardinal_is_functional	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.cardinal_Empty	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.cardinal_unicity	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.card_Add_gen	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.incl_st_card_lt	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.incl_card_le	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.G_aux	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.Generalized_induction_on_finite_sets	40
Coq.Sets.Finite_sets.Ensembles_finis_facts.cardinal_invert	40
Coq.Sets.Finite_sets.Ensembles_finis_facts.cardinal_elim	40	4.1.0	synth with cache (only 1: induction 1; only 1: auto; only 1: auto with sets).	0.0435981750488	11