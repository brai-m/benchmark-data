
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.rplus_morph_Proper	40	25.19	synth with cache (only 1: intros; only 1: firstorder).	12.0274631977	2675
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.rtimes_morph_Proper	40	25.20	synth with cache (only 1: intros; only 1: firstorder).	10.9038047791	2529
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.ropp_morph_Proper	40	29	synth with cache (only 1: firstorder).	7.88398194313	1482
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.rle_morph_Proper	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.rlt_morph_Proper	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.rminus_morph_Proper	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rneq_symm	40	8.3	synth with cache (only 1: intros n m H1 H2; only 1: now apply H1).	0.437034130096	67
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_0_l	40	21	synth with cache (only 1: firstorder).	2.81591916084	561
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_0_r	40	0.1	synth with cache (only 1: intro; only 1: ring).	0.162043094635	3
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_0_r	40	3.1	synth with cache (only 1: intro; only 1: ring).	0.166121959686	6
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_comm	40	6.8	synth with cache (only 1: intros n m; only 1: ring).	0.970448970795	118
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_0_l	40	2.1	synth with cache (only 1: intro; only 1: ring).	0.171538114548	5
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_comm	40	0.0	synth with cache (only 1: intros; only 1: ring).	0.164173841476	2
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rminus_eq_0	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_cancel_l	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Req_em	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Req_dne	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_lt_eq	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_trans	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_lt_trans	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_le_trans	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_gt_cases	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_neq	40	0.2.0.0	synth with cache (only 1: intros n m; only 1: intro H; only 1: rewrite Rlt_le_neq in H; only 1: now destruct H).	0.238580942154	6
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_ngt	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_nge	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_le_mono_l	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_le_mono_r	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_lt_mono_l	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_lt_mono_r	40	0.0.1.3.2.0	synth with cache (only 1: intros n m p; only 1: rewrite (Rplus_comm n p); only 1: rewrite (Rplus_comm m p); only 1: do 2 rewrite Rlt_le_neq; only 1: rewrite Rplus_cancel_l; only 1: now rewrite <- Rplus_le_mono_l).	8.66870188713	383
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_lt_mono	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_le_mono	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_lt_le_mono	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_le_lt_mono	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_pos_pos	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_pos_nonneg	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_nonneg_pos	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_nonneg_nonneg	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_le_minus	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_lt_minus	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Ropp_lt_mono	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Ropp_pos_neg	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_nonneg_nonneg	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_pos_neg	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_neg_neg	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_square_nonneg	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_neq_0	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Ropp_neg_pos	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_0_1	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_succ_r	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_lt_succ	40
Coq.micromega.Ztac.eq_incl	40	0.0.0	synth with cache (only 1: intros x y; only 1: intro EQ; only 1: now rewrite EQ).	0.217200994492	3
Coq.micromega.Ztac.elim_concl_eq	40
Coq.micromega.Ztac.elim_concl_le	40	4.0	synth with cache (only 1: intros; only 1: now apply Z.ge_le).	0.183148145676	12
Coq.micromega.Ztac.elim_concl_lt	40	6.0	synth with cache (only 1: intros; only 1: now apply Z.lt_nge).	0.294974088669	18
Coq.micromega.Ztac.Zlt_le_add_1	40	0.2	synth with cache (only 1: intros n m; only 1: apply Z.le_succ_l).	0.562811136246	21
Coq.micromega.Ztac.add_le	40	4.0	synth with cache (only 1: intros n m H1 H2; only 1: now apply Z.add_nonneg_nonneg).	0.159786939621	6
Coq.micromega.Ztac.mul_le	40	0.0.6.1	synth with cache (only 1: intros n m H1 H2; only 1: apply Z.mul_nonneg_nonneg; only 1: Z.order; only 1: trivial).	3.09270596504	106
Coq.micromega.ZifyInst.PropAnd	40	3.4.19	synth with cache (only 1: constructor; only 1: intros; only 1: intuition).	3.34058499336	481
Coq.micromega.ZifyInst.PropOr	40	0.1	synth with cache (only 1: constructor; only 1: tauto).	0.299693107605	3
Coq.micromega.ZifyInst.PropArrow	40	0.8	synth with cache (only 1: constructor; only 1: tauto).	0.145890951157	10
Coq.micromega.ZifyInst.PropIff	40	0.0	synth with cache (only 1: constructor; only 1: tauto).	0.161283016205	2
Coq.micromega.ZifyInst.PropNot	40	1.0.4	synth with cache (only 1: constructor; only 1: intros a b H; only 1: intuition).	1.10571193695	8
Coq.micromega.ZifyInst.of_nat_to_nat_eq	40
Coq.micromega.ZifyInst.z_max_spec	40
Coq.micromega.ZifyInst.z_min_spec	40
Coq.micromega.ZCoeff.InitialMorphism.req_refl	40	48	synth with cache (only 1: firstorder).	23.921640873	7494
Coq.micromega.ZCoeff.InitialMorphism.req_sym	40
Coq.micromega.ZCoeff.InitialMorphism.req_trans	40
Coq.micromega.ZCoeff.InitialMorphism.rplus_morph_Proper	40	0	synth with cache (only 1: exact (SORplus_wd sor)).	0.111935853958	1
Coq.micromega.ZCoeff.InitialMorphism.rtimes_morph_Proper	40	0	synth with cache (only 1: exact (SORtimes_wd sor)).	0.112217187881	1
Coq.micromega.ZCoeff.InitialMorphism.ropp_morph_Proper	40	0	synth with cache (only 1: exact (SORopp_wd sor)).	0.101740121841	1
Coq.micromega.ZCoeff.InitialMorphism.rle_morph_Proper	40	0	synth with cache (only 1: exact (SORle_wd sor)).	0.109398841858	1
Coq.micromega.ZCoeff.InitialMorphism.rlt_morph_Proper	40	0	synth with cache (only 1: exact (SORlt_wd sor)).	0.418896913528	1
Coq.micromega.ZCoeff.InitialMorphism.rminus_morph_Proper	40	0.0.0.0.0	synth with cache (only 1: intros x1 x2 H1 y1 y2 H2; only 1: rewrite (Rsub_def (SORrt sor) x1 y1); only 1: rewrite (Rsub_def (SORrt sor) x2 y2); only 1: rewrite H1; only 1: now rewrite H2).	0.344908952713	5
Coq.micromega.ZCoeff.InitialMorphism.ring_ops_wd	40	1.0.0.3	synth with cache (only 1: constructor; only 1: Morphisms.solve_proper; only 1: Morphisms.solve_proper; only 1: Morphisms.solve_proper).	0.263837099075	8
Coq.micromega.ZCoeff.InitialMorphism.Zring_morph	40
Coq.micromega.ZCoeff.InitialMorphism.phi_pos1_pos	40
Coq.micromega.ZCoeff.InitialMorphism.phi_pos1_succ	40
Coq.micromega.ZCoeff.InitialMorphism.clt_pos_morph	40
Coq.micromega.ZCoeff.InitialMorphism.clt_morph	40
Coq.micromega.ZCoeff.InitialMorphism.Zcleb_morph	40
Coq.micromega.ZCoeff.InitialMorphism.Zcneqb_morph	40
Coq.micromega.Fourier_util.Rlt_mult_inv_pos	40	0.0.0.2.3	synth with cache (only 1: intros a b Ha Hb; only 1: apply Rmult_lt_0_compat; only 1: assumption; only 1: apply Rinv_0_lt_compat; only 1: assumption).	6.09676814079	211
Coq.micromega.Fourier_util.Rlt_zero_pos_plus1	40
Coq.micromega.Fourier_util.Rle_zero_pos_plus1	40	4.1.0	synth with cache (only 1: intros; only 1: rewrite Rplus_comm; only 1: auto with real).	0.398272037506	17
Coq.micromega.Fourier_util.Rle_mult_inv_pos	40	9.0.0.0	synth with cache (only 1: intros x y H H0; only 1: rewrite <- (Rmult_0_l x); only 1: rewrite <- (Rmult_comm x); only 1: auto with real).	12.3088989258	593
Coq.micromega.ZifyClasses.mkapp2	40
Coq.micromega.ZifyClasses.mkapp	40
Coq.micromega.ZifyClasses.mkapp0	40
Coq.micromega.ZifyClasses.mkrel	40
Coq.micromega.ZMicromega.eq_le_iff	40	4.3.1.1	synth with cache (only 1: intro n; only 1: intuition; only 1: Z.order; only 1: Z.order').	6.24917387962	341
Coq.micromega.ZMicromega.lt_le_iff	40	6.0.7.0	synth with cache (only 1: intro n; only 1: split; only 1: apply Z.lt_le_pred; only 1: apply Z.lt_le_pred).	10.5341420174	771
Coq.micromega.ZMicromega.le_0_iff	40	0.0.12.0	synth with cache (only 1: intros n m; only 1: split; only 1: apply Z.le_0_sub; only 1: apply Z.le_0_sub).	10.1518571377	632
Coq.micromega.ZMicromega.le_neg	40
Coq.micromega.ZMicromega.eq_cnf	40
Coq.micromega.ZMicromega.Zsor	40
Coq.micromega.ZMicromega.ZSORaddon	40
Coq.micromega.ZMicromega.ZNpower	40
Coq.micromega.ZMicromega.Zeval_expr_compat	40
Coq.micromega.ZMicromega.Zeval_formula_compat'	40
Coq.micromega.ZMicromega.Zeval_nformula_dec	40
Coq.micromega.ZMicromega.ZWeakChecker_sound	40
Coq.micromega.ZMicromega.eval_pol_sub	40
Coq.micromega.ZMicromega.eval_pol_add	40
Coq.micromega.ZMicromega.eval_pol_mul	40
Coq.micromega.ZMicromega.eval_pol_norm	40
Coq.micromega.ZMicromega.Zunsat_sound	40
Coq.micromega.ZMicromega.xnnormalise_correct	40
Coq.micromega.ZMicromega.eval_pol_Pc	40	0	synth with cache (only 1: reflexivity).	0.0969550609589	1
Coq.micromega.ZMicromega.xnormalise_correct	40
Coq.micromega.ZMicromega.cnf_of_list_correct	40
Coq.micromega.ZMicromega.normalise_correct	40
Coq.micromega.ZMicromega.xnegate_correct	40
Coq.micromega.ZMicromega.negate_correct	40
Coq.micromega.ZMicromega.Zdivide_ceiling	40
Coq.micromega.ZMicromega.narrow_interval_lower_bound	40
Coq.micromega.ZMicromega.isZ0_0	40	8.14	synth with cache (only 1: fix even_spec 1; only 1: destr_bool).	26.510573864	3500
Coq.micromega.ZMicromega.isZ0_n0	40	0.0.0.12	synth with cache (only 1: destruct x; only 1: easy'; only 1: now split; only 1: now split).	11.6433048248	1020
Coq.micromega.ZMicromega.Zdiv_pol_correct	40
Coq.micromega.ZMicromega.Zgcd_pol_ge	40
Coq.micromega.ZMicromega.Zdivide_pol_Zdivide	40
Coq.micromega.ZMicromega.Zdivide_pol_one	40
Coq.micromega.ZMicromega.Zgcd_minus	40
Coq.micromega.ZMicromega.Zdivide_pol_sub	40
Coq.micromega.ZMicromega.Zdivide_pol_sub_0	40
Coq.micromega.ZMicromega.Zgcd_pol_div	40
Coq.micromega.ZMicromega.Zgcd_pol_correct_lt	40
Coq.micromega.ZMicromega.is_pol_Z0_eval_pol	40
Coq.micromega.ZMicromega.pos_le_add	40	0.1.14.0	synth with cache (only 1: intro n; only 1: fix sqrtrem_spec 1; only 1: intro; only 1: auto).	6.13373208046	779
Coq.micromega.ZMicromega.max_var_le	40	0.1.6.3	synth with cache (only 1: intro n; only 1: fix sqrtrem_spec 1; only 1: intro; only 1: trivial).	2.7307870388	244
Coq.micromega.ZMicromega.max_var_correct	40
Coq.micromega.ZMicromega.MaxVar.max_var_nformulae_mono_aux	40
Coq.micromega.ZMicromega.MaxVar.max_var_nformulae_mono_aux'	40
Coq.micromega.ZMicromega.MaxVar.max_var_nformulae_correct_aux	40
Coq.micromega.ZMicromega.max_var_nformalae_correct	40
Coq.micromega.ZMicromega.in_bdepth	40
Coq.micromega.ZMicromega.eval_Psatz_sound	40
Coq.micromega.ZMicromega.makeCuttingPlane_ns_sound	40
Coq.micromega.ZMicromega.cutting_plane_sound	40
Coq.micromega.ZMicromega.genCuttingPlaneNone	40
Coq.micromega.ZMicromega.eval_nformula_mk_eq_pos	40
Coq.micromega.ZMicromega.eval_nformula_bound_var	40
Coq.micromega.ZMicromega.agree_env_subset	40
Coq.micromega.ZMicromega.agree_env_jump	40
Coq.micromega.ZMicromega.agree_env_tail	40
Coq.micromega.ZMicromega.max_var_acc	40
Coq.micromega.ZMicromega.agree_env_eval_nformula	40
Coq.micromega.ZMicromega.agree_env_eval_nformulae	40
Coq.micromega.ZMicromega.eq_true_iff_eq	40	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.338554143906	5
Coq.micromega.ZMicromega.ZChecker_sound	40
Coq.micromega.ZMicromega.ZTautoChecker_sound	40
Coq.micromega.ZifyBool.Z_of_bool_bound	40	22.2	synth with cache (only 1: intro n; only 1: now destruct n).	15.4566640854	2087
Coq.micromega.ZifyBool.Z_eqb_isZero	40
Coq.micromega.ZifyBool.Z_leb_sub	40
Coq.micromega.ZifyBool.Z_ltb_leb	40
Coq.micromega.ZifyBool.Z_of_nat_eqb_iff	40
Coq.micromega.ZifyBool.Z_of_nat_leb_iff	40
Coq.micromega.ZifyBool.Z_of_nat_ltb_iff	40
Coq.micromega.ZifyBool.Z_eqb_ZSpec_ok	40
Coq.micromega.ZifyBool.leZeroSpec_ok	40
Coq.micromega.Env.S.jump_add	40
Coq.micromega.Env.S.jump_simpl	40
Coq.micromega.Env.S.jump_tl	40
Coq.micromega.Env.S.jump_succ	40	20.1	synth with cache (only 1: rewrite <- ?jump_add; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l).	19.9443910122	2608
Coq.micromega.Env.S.jump_pred_double	40
Coq.micromega.Env.S.nth_spec	40
Coq.micromega.Env.S.nth_jump	40	5.3	synth with cache (only 1: unfold hd, nth, tail, jump; only 1: now rewrite Pos.add_comm).	0.436824083328	21
Coq.micromega.Env.S.nth_pred_double	40	9.0.6	synth with cache (only 1: unfold hd, nth, tail, jump; only 1: f_equal; only 1: now rewrite Pos.add_1_r, Pos.succ_pred_double, Pos.add_diag).	11.4286999702	828
Coq.micromega.Tauto.S.eval_f_morph	40
Coq.micromega.Tauto.map_simpl	40	0.0.0.6	synth with cache (only 1: induction l; only 1: auto; only 1: simpl; only 1: auto).	0.200752973557	17
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_X_inv	40
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.if_same	40	13	synth with cache (only 1: destr_bool).	0.494829177856	70
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_cnf_tt_cnf_ff	40	0.0	synth with cache (only 1: simpl; only 1: auto).	0.0871679782867	2
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_cnf_ff_cnf_ff	40	0.0	synth with cache (only 1: simpl; only 1: auto).	0.0844449996948	2
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_cnf_tt_inv	40	2.38	synth with cache (only 1: fix odd_spec 1; only 1: auto).	32.0499768257	8089
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_cnf_ff_inv	40
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.if_cnf_tt	40	1.1.23.9	synth with cache (only 1: firstorder; only 1: induction f; only 1: auto; only 1: auto).	15.0964579582	3524
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.or_cnf_opt_cnf_ff	40
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.abs_and_pol	40
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.abs_or_pol	40
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.xcnf_true_mk_arrow_l	40
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.or_cnf_opt_cnf_ff_r	40	0.0.0.2.0.2.0.2.1	synth with cache (only 1: intros; only 1: unfold or_cnf_opt; only 1: simpl; only 1: destruct (is_cnf_tt f) eqn:EQ; only 1: simpl; only 1: apply is_cnf_tt_inv in EQ; only 1: auto; only 1: simpl; only 1: auto).	6.27611303329	541
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.xcnf_true_mk_arrow_r	40
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.abst_form_correct	40
Coq.micromega.Tauto.S.radd_term_term	40
Coq.micromega.Tauto.S.radd_term_term'	40
Coq.micromega.Tauto.S.xror_clause_clause	40
Coq.micromega.Tauto.S.ror_clause_clause	40
Coq.micromega.Tauto.S.ror_cnf_cnf	40
Coq.micromega.Tauto.S.ror_opt_cnf_cnf	40
Coq.micromega.Tauto.S.ratom_cnf	40
Coq.micromega.Tauto.S.rxcnf_xcnf	40
Coq.micromega.Tauto.S.eval_cnf_app	40
Coq.micromega.Tauto.S.eval_cnf_ff	40	2.1.0.10.1	synth with cache (only 1: split; only 1: destruct 1; only 1: simpl; only 1: auto; only 1: congruence).	11.6829349995	1338
Coq.micromega.Tauto.S.eval_cnf_tt	40	3.2.0.1	synth with cache (only 1: unfold cnf_ff, eval_cnf, eval_clause; only 1: simpl; only 1: intros; only 1: reflexivity).	0.159559965134	10
Coq.micromega.Tauto.S.eval_cnf_and_opt	40
Coq.micromega.Tauto.S.add_term_correct	40
Coq.micromega.Tauto.S.no_middle_eval_tt	40	16	synth with cache (only 1: firstorder).	3.05104088783	256
Coq.micromega.Tauto.S.or_clause_correct	40
Coq.micromega.Tauto.S.or_clause_cnf_correct	40
Coq.micromega.Tauto.S.eval_cnf_cons	40	1.1.3.6.1.0	synth with cache (only 1: unfold eval_cnf; only 1: intros; only 1: repeat rewrite make_conj_cons in *; only 1: split; only 1: auto; only 1: auto).	16.4135849476	1806
Coq.micromega.Tauto.S.eval_cnf_cons_iff	40	0.1.0.0.0	synth with cache (only 1: intros; only 1: unfold eval_cnf in *; only 1: rewrite make_conj_cons; only 1: unfold eval_clause at 2; only 1: tauto).	0.197764873505	6
Coq.micromega.Tauto.S.or_cnf_correct	40
Coq.micromega.Tauto.S.or_cnf_opt_correct	40
Coq.micromega.Tauto.S.xcnf_correct	40
Coq.micromega.Tauto.S.cnf_checker_sound	40
Coq.micromega.Tauto.S.tauto_checker_sound	40
Coq.micromega.Tauto.S.eval_bf_map	40
Coq.micromega.ZifyComparison.Z_of_comparison_bound	40
Coq.micromega.ZifyComparison.Zcompare_spec	40
Coq.micromega.EnvRing.MakeRingPol.radd_ext_Proper	40	6	synth with cache (only 1: exact (Radd_ext Reqe)).	0.111927986145	7
Coq.micromega.EnvRing.MakeRingPol.rmul_ext_Proper	40	3	synth with cache (only 1: exact (Rmul_ext Reqe)).	0.110954999924	4
Coq.micromega.EnvRing.MakeRingPol.ropp_ext_Proper	40	6	synth with cache (only 1: exact (Ropp_ext Reqe)).	0.164347887039	11
Coq.micromega.EnvRing.MakeRingPol.rsub_ext_Proper	40
Coq.micromega.EnvRing.MakeRingPol.Peq_ok	40
Coq.micromega.EnvRing.MakeRingPol.Peq_spec	40
Coq.micromega.EnvRing.MakeRingPol.Pphi0	40	50	synth with cache (only 1: firstorder).	6.87446093559	2436
Coq.micromega.EnvRing.MakeRingPol.Pphi1	40	65	synth with cache (only 1: firstorder).	9.31644892693	4275
Coq.micromega.EnvRing.MakeRingPol.env_morph	40
Coq.micromega.EnvRing.MakeRingPol.Pjump_add	40
Coq.micromega.EnvRing.MakeRingPol.Pjump_xO_tail	40	0.2.7.1.2	synth with cache (only 1: apply env_morph; only 1: intros; only 1: unfold tail; only 1: rewrite <- jump_add; only 1: f_equal).	4.41425490379	357
Coq.micromega.EnvRing.MakeRingPol.Pjump_pred_double	40
Coq.micromega.EnvRing.MakeRingPol.mkPinj_ok	40
Coq.micromega.EnvRing.MakeRingPol.pow_pos_add	40
Coq.micromega.EnvRing.MakeRingPol.ceqb_spec	40
Coq.micromega.EnvRing.MakeRingPol.mkPX_ok	40
Coq.micromega.EnvRing.MakeRingPol.PaddC_ok	40
Coq.micromega.EnvRing.MakeRingPol.PsubC_ok	40
Coq.micromega.EnvRing.MakeRingPol.PmulC_aux_ok	40
Coq.micromega.EnvRing.MakeRingPol.PmulC_ok	40
Coq.micromega.EnvRing.MakeRingPol.Popp_ok	40
Coq.micromega.EnvRing.MakeRingPol.PaddX_ok	40
Coq.micromega.EnvRing.MakeRingPol.Padd_ok	40
Coq.micromega.EnvRing.MakeRingPol.PsubX_ok	40
Coq.micromega.EnvRing.MakeRingPol.Psub_ok	40
Coq.micromega.EnvRing.MakeRingPol.PmulI_ok	40
Coq.micromega.EnvRing.MakeRingPol.Pmul_ok	40
Coq.micromega.EnvRing.MakeRingPol.Psquare_ok	40
Coq.micromega.EnvRing.MakeRingPol.Mphi_morph	40
Coq.micromega.EnvRing.MakeRingPol.Mjump_xO_tail	40
Coq.micromega.EnvRing.MakeRingPol.Mjump_pred_double	40	0.1.0.0	synth with cache (only 1: apply Mphi_morph; only 1: intros; only 1: rewrite jump_pred_double; only 1: now jump_simpl).	0.218472003937	5
Coq.micromega.EnvRing.MakeRingPol.Mjump_add	40	0.0.0.0.3	synth with cache (only 1: apply Mphi_morph; only 1: intros; only 1: rewrite <- jump_add; only 1: f_equal; only 1: apply Pos.add_comm).	0.267790079117	8
Coq.micromega.EnvRing.MakeRingPol.mkZmon_ok	40	0.0.0.20	synth with cache (only 1: induction M; only 1: Esimpl; only 1: rsimpl; only 1: rsimpl).	8.14753198624	911
Coq.micromega.EnvRing.MakeRingPol.zmon_pred_ok	40
Coq.micromega.EnvRing.MakeRingPol.mkVmon_ok	40
Coq.micromega.EnvRing.MakeRingPol.Mphi_ok	40
Coq.micromega.EnvRing.MakeRingPol.POneSubst_ok	40
Coq.micromega.EnvRing.MakeRingPol.PNSubst1_ok	40
Coq.micromega.EnvRing.MakeRingPol.PNSubst_ok	40
Coq.micromega.EnvRing.MakeRingPol.PSubstL1_ok	40
Coq.micromega.EnvRing.MakeRingPol.PSubstL_ok	40
Coq.micromega.EnvRing.MakeRingPol.PNSubstL_ok	40
Coq.micromega.EnvRing.MakeRingPol.mkX_ok	40
Coq.micromega.EnvRing.MakeRingPol.POWER.Ppow_pos_ok	40
Coq.micromega.EnvRing.MakeRingPol.POWER.Ppow_N_ok	40
Coq.micromega.EnvRing.MakeRingPol.NORM_SUBST_REC.norm_aux_PEadd	40
Coq.micromega.EnvRing.MakeRingPol.NORM_SUBST_REC.norm_aux_PEopp	40
Coq.micromega.EnvRing.MakeRingPol.NORM_SUBST_REC.norm_aux_spec	40
Coq.micromega.RingMicromega.Micromega.rplus_morph_Proper	40	4	synth with cache (only 1: exact (SORplus_wd sor)).	0.170073986053	12
Coq.micromega.RingMicromega.Micromega.rtimes_morph_Proper	40	6	synth with cache (only 1: exact (SORtimes_wd sor)).	0.170194149017	12
Coq.micromega.RingMicromega.Micromega.ropp_morph_Proper	40	4	synth with cache (only 1: exact (SORopp_wd sor)).	0.321686029434	20
Coq.micromega.RingMicromega.Micromega.rle_morph_Proper	40	2	synth with cache (only 1: exact (SORle_wd sor)).	0.111643791199	3
Coq.micromega.RingMicromega.Micromega.rlt_morph_Proper	40	3	synth with cache (only 1: exact (SORlt_wd sor)).	0.112154006958	4
Coq.micromega.RingMicromega.Micromega.rminus_morph_Proper	40	3.2.2.3.6	synth with cache (only 1: intros x1 x2 H1 y1 y2 H2; only 1: rewrite (Rsub_def (SORrt sor) x1 y1); only 1: rewrite (Rsub_def (SORrt sor) x2 y2); only 1: rewrite H1; only 1: now rewrite H2).	6.74023604393	534
Coq.micromega.RingMicromega.Micromega.cleb_sound	40	40.8	synth with cache (only 1: intros x y H; only 1: firstorder).	17.0059831142	5342
Coq.micromega.RingMicromega.Micromega.cneqb_sound	40
Coq.micromega.RingMicromega.Micromega.cltb_sound	40
Coq.micromega.RingMicromega.Micromega.OpMult_sound	40
Coq.micromega.RingMicromega.Micromega.OpAdd_sound	40
Coq.micromega.RingMicromega.Micromega.pexpr_times_nformula_correct	40
Coq.micromega.RingMicromega.Micromega.nformula_times_nformula_correct	40
Coq.micromega.RingMicromega.Micromega.nformula_plus_nformula_correct	40
Coq.micromega.RingMicromega.Micromega.eval_Psatz_Sound	40
Coq.micromega.RingMicromega.Micromega.ge_bool_cases	40	2.11	synth with cache (only 1: fix gcd_divide 1; only 1: auto).	2.30741405487	161
Coq.micromega.RingMicromega.Micromega.extract_hyps_app	40
Coq.micromega.RingMicromega.Micromega.nhyps_of_psatz_correct	40
Coq.micromega.RingMicromega.Micromega.check_inconsistent_sound	40
Coq.micromega.RingMicromega.Micromega.checker_nf_sound	40
Coq.micromega.RingMicromega.Micromega.eval_pol_sub	40
Coq.micromega.RingMicromega.Micromega.eval_pol_add	40	0.17.0	synth with cache (only 1: intros; only 1: rewrite (Padd_ok (SORsetoid sor) Rops_wd (Rth_ARth (SORsetoid sor) Rops_wd (SORrt sor)) (SORrm addon)); only 1: reflexivity).	3.37904787064	300
Coq.micromega.RingMicromega.Micromega.eval_pol_mul	40	0.17.0	synth with cache (only 1: intros; only 1: rewrite (Pmul_ok (SORsetoid sor) Rops_wd (Rth_ARth (SORsetoid sor) Rops_wd (SORrt sor)) (SORrm addon)); only 1: reflexivity).	3.98270702362	300
Coq.micromega.RingMicromega.Micromega.eval_pol_opp	40
Coq.micromega.RingMicromega.Micromega.eval_pol_norm	40
Coq.micromega.RingMicromega.Micromega.normalise_sound	40
Coq.micromega.RingMicromega.Micromega.negate_correct	40
Coq.micromega.RingMicromega.Micromega.cnf_of_list_correct	40
Coq.micromega.RingMicromega.Micromega.eq0_cnf	40
Coq.micromega.RingMicromega.Micromega.xnormalise_correct	40
Coq.micromega.RingMicromega.Micromega.xnegate_correct	40
Coq.micromega.RingMicromega.Micromega.cnf_normalise_correct	40
Coq.micromega.RingMicromega.Micromega.cnf_negate_correct	40
Coq.micromega.RingMicromega.Micromega.eval_nformula_dec	40
Coq.micromega.RingMicromega.Micromega.xdenorm_correct	40
Coq.micromega.RingMicromega.Micromega.denorm_correct	40
Coq.micromega.RingMicromega.Micromega.eval_pexprSC	40
Coq.micromega.RingMicromega.Micromega.eval_formulaSC	40
Coq.micromega.Refl.make_impl_true	40	0.0.0.0.13	synth with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.838095903397	199
Coq.micromega.Refl.make_impl_map	40	4.2.4	synth with cache (only 1: induction l as [| a l IH]; only 1: firstorder; only 1: firstorder).	2.18944907188	212
Coq.micromega.Refl.make_conj_cons	40
Coq.micromega.Refl.make_conj_impl	40
Coq.micromega.Refl.make_conj_in	40
Coq.micromega.Refl.make_conj_app	40
Coq.micromega.Refl.make_conj_rapp	40
Coq.micromega.Refl.not_make_conj_cons	40
Coq.micromega.Refl.not_make_conj_app	40
Coq.micromega.QMicromega.Qsor	40
Coq.micromega.QMicromega.QSORaddon	40
Coq.micromega.QMicromega.Qeval_expr_simpl	40	0.0.0.0.0.0.0.0.4.10	synth with cache (only 1: intros n m; only 1: destruct m; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: simpl; only 1: reflexivity).	39.4271869659	809
Coq.micromega.QMicromega.QNpower	40	0.0.0.0.1	synth with cache (only 1: intros; only 1: destruct n; only 1: reflexivity; only 1: simpl; only 1: reflexivity).	0.341965913773	6
Coq.micromega.QMicromega.Qeval_expr_compat	40
Coq.micromega.QMicromega.Qeval_formula_compat	40
Coq.micromega.QMicromega.Qeval_nformula_dec	40
Coq.micromega.QMicromega.QWeakChecker_sound	40
Coq.micromega.QMicromega.QTautoChecker_sound	40
Coq.rtauto.Bintree.Gt_Psucc	40
Coq.rtauto.Bintree.Psucc_Gt	40
Coq.rtauto.Bintree.map_app	40	0.2.2.0.0.0.2	synth with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: rewrite IHl; only 1: auto).	6.99064612389	385
Coq.rtauto.Bintree.length_map	40	0.0.0.0.4.5	synth with cache (only 1: intros x y; only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	1.89799714088	134
Coq.rtauto.Bintree.Lget_map	40
Coq.rtauto.Bintree.Lget_app	40
Coq.rtauto.Bintree.Lget_app_Some	40
Coq.rtauto.Bintree.Store.Tget_Tempty	40	5	synth with cache (only 1: now intros []).	0.107795000076	11
Coq.rtauto.Bintree.Store.Tget_Tadd	40
Coq.rtauto.Bintree.Store.get_empty	40	1.0.0.8	synth with cache (only 1: destruct i; only 1: reflexivity; only 1: reflexivity; only 1: auto).	1.22133398056	75
Coq.rtauto.Bintree.Store.get_Full_Gt	40
Coq.rtauto.Bintree.Store.get_Full_Eq	40
Coq.rtauto.Bintree.Store.get_push_Full	40
Coq.rtauto.Bintree.Store.Full_push_compat	40
Coq.rtauto.Bintree.Store.Full_index_one_empty	40
Coq.rtauto.Bintree.Store.push_not_empty	40	0.17.4.6	synth with cache (only 1: inversion 1; only 1: inversion_clear H; only 1: pose proof (Pos.succ_not_1 (index S)) as h; only 1: auto).	31.5322659016	5458
Coq.rtauto.Bintree.Store.get_In	40
Coq.rtauto.Bintree.Map.Tget_Tmap	40
Coq.rtauto.Bintree.Map.Tmap_Tadd	40
Coq.rtauto.Bintree.Map.get_map	40
Coq.rtauto.Bintree.Map.map_push	40
Coq.rtauto.Bintree.Map.Full_map	40	0.23	synth with cache (only 1: fix sqrtrem_spec 1; only 1: auto).	6.0281689167	1287
Coq.rtauto.Rtauto.pos_eq_refl	40
Coq.rtauto.Rtauto.form_eq_refl	40
Coq.rtauto.Rtauto.with_env.compose0	40	1.0.1.0.15.7	synth with cache (only 1: intros S W; only 1: induction W; only 1: simpl; only 1: congruence; only 1: simpl; only 1: auto).	9.31019806862	1851
Coq.rtauto.Rtauto.with_env.compose1	40	7.5.0.1.0	synth with cache (only 1: induction F; only 1: auto; only 1: simpl; only 1: intros; only 1: firstorder).	16.6502850056	1868
Coq.rtauto.Rtauto.with_env.compose2	40
Coq.rtauto.Rtauto.with_env.compose3	40
Coq.rtauto.Rtauto.with_env.weaken	40
Coq.rtauto.Rtauto.with_env.project_In	40
Coq.rtauto.Rtauto.with_env.project	40
Coq.rtauto.Rtauto.with_env.interp_proof	40
Coq.rtauto.Rtauto.with_env.Reflect	40
Coq.nsatz.Nsatz.nsatz1.psos_r1b	40
Coq.nsatz.Nsatz.nsatz1.psos_r1	40	4.8.0	synth with cache (only 1: intros; only 1: setoid_rewrite H; only 1: cring).	9.9966199398	336
Coq.nsatz.Nsatz.nsatz1.nsatzR_diff	40
Coq.nsatz.Nsatz.nsatz1.P0Z_correct	40	1.0	synth with cache (only 1: simpl; only 1: reflexivity).	0.184986114502	3
Coq.nsatz.Nsatz.nsatz1.Rext	40	0.0.0.12	synth with cache (only 1: constructor; only 1: solve_proper; only 1: solve_proper; only 1: solve_proper).	3.1758389473	96
Coq.nsatz.Nsatz.nsatz1.Rset	40	3.3	synth with cache (only 1: unfold Setoid_Theory; only 1: apply ring_setoid).	0.193897008896	8
Coq.nsatz.Nsatz.nsatz1.Rtheory	40
Coq.nsatz.Nsatz.nsatz1.PolZadd_correct	40
Coq.nsatz.Nsatz.nsatz1.PolZmul_correct	40
Coq.nsatz.Nsatz.nsatz1.R_power_theory	40
Coq.nsatz.Nsatz.nsatz1.norm_correct	40
Coq.nsatz.Nsatz.nsatz1.PolZeq_correct	40
Coq.nsatz.Nsatz.nsatz1.mult_l_correct	40
Coq.nsatz.Nsatz.nsatz1.compute_list_correct	40
Coq.nsatz.Nsatz.nsatz1.check_correct	40
Coq.nsatz.Nsatz.Rsth	40	13	synth with cache (only 1: exact eq_equivalence).	4.1033141613	192
Coq.nsatz.Nsatz.Rri	40
Coq.nsatz.Nsatz.R_one_zero	40	1	synth with cache (only 1: exact R1_neq_R0).	0.418255805969	24
Coq.nsatz.Nsatz.Rcri	40	6.0.2.3.3	synth with cache (only 1: red; only 1: unfold equality; only 1: unfold eq_notation in *; only 1: intros; only 1: intuition).	21.9078669548	1139
Coq.nsatz.Nsatz.Rdi	40
Coq.nsatz.Nsatz.Qri	40
Coq.nsatz.Nsatz.Q_one_zero	40	0	synth with cache (only 1: discriminate).	0.187587022781	1
Coq.nsatz.Nsatz.Qcri	40	1.0.0.1.4.22	synth with cache (only 1: intros x H; only 1: apply Qeq_sym; only 1: red; only 1: simpl; only 1: rewrite Pos.mul_comm; only 1: ring).	16.0392770767	1346
Coq.nsatz.Nsatz.Qdi	40
Coq.nsatz.Nsatz.Z_one_zero	40	2	synth with cache (only 1: discriminate).	0.178525924683	3
Coq.nsatz.Nsatz.Zcri	40	0.0	synth with cache (only 1: red; only 1: exact Z.mul_comm).	0.278996944427	2
Coq.nsatz.Nsatz.Zdi	40
Coq.omega.OmegaLemmas.Zred_factor0	40	0	synth with cache (only 1: now Z.nzsimpl').	0.165318965912	1
Coq.omega.OmegaLemmas.Zred_factor1	40	2.1.3.0	synth with cache (only 1: change 2 with (1 + 1); only 1: simpl; only 1: rewrite Z.mul_comm; only 1: apply Z.add_diag).	3.42134380341	82
Coq.omega.OmegaLemmas.Zred_factor2	40
Coq.omega.OmegaLemmas.Zred_factor3	40	1.0.0.0.3	synth with cache (only 1: Z.nzsimpl; only 1: nzinduct n; only 1: now Z.nzsimpl; only 1: intro; only 1: intuition).	9.29246687889	223
Coq.omega.OmegaLemmas.Zred_factor4	40
Coq.omega.OmegaLemmas.Zred_factor5	40	0.0.0.0.3	synth with cache (only 1: nzinduct n; only 1: now Z.nzsimpl; only 1: intro n; only 1: Z.nzsimpl; only 1: auto with relations).	0.511528015137	8
Coq.omega.OmegaLemmas.Zred_factor6	40	0	synth with cache (only 1: now destruct n).	0.113176107407	1
Coq.omega.OmegaLemmas.new_var	40	2.3	synth with cache (only 1: intro n; only 1: now exists n).	0.17453289032	7
Coq.omega.OmegaLemmas.OMEGA1	40	3.6	synth with cache (only 1: intuition; only 1: Z.order).	0.411633014679	38
Coq.omega.OmegaLemmas.OMEGA2	40
Coq.omega.OmegaLemmas.OMEGA3	40
Coq.omega.OmegaLemmas.OMEGA4	40
Coq.omega.OmegaLemmas.OMEGA5	40	0.16.7.6.15	synth with cache (only 1: intuition; only 1: rewrite H; only 1: rewrite <- H; only 1: subst; only 1: now Z.nzsimpl).	23.3960688114	4739
Coq.omega.OmegaLemmas.OMEGA6	40
Coq.omega.OmegaLemmas.OMEGA7	40
Coq.omega.OmegaLemmas.OMEGA8	40
Coq.omega.OmegaLemmas.OMEGA9	40
Coq.omega.OmegaLemmas.OMEGA10	40
Coq.omega.OmegaLemmas.OMEGA11	40	0.2.0	synth with cache (only 1: rewrite ?Z.mul_add_distr_r, ?Z.mul_add_distr_l, ?Z.mul_assoc; only 1: rewrite <- !Z.add_assoc; only 1: f_equal).	0.541460990906	17
Coq.omega.OmegaLemmas.OMEGA12	40	1.0	synth with cache (only 1: rewrite ?Z.mul_add_distr_r, ?Z.mul_add_distr_l, ?Z.mul_assoc; only 1: apply Z.add_shuffle3).	0.188454866409	3
Coq.omega.OmegaLemmas.OMEGA13	40
Coq.omega.OmegaLemmas.OMEGA14	40	0.1.0.0.0.0.0.0.0	synth with cache (only 1: rewrite Z.add_shuffle1; only 1: rewrite Z.add_shuffle1; only 1: rewrite Z.add_shuffle1; only 1: rewrite Z.add_shuffle1; only 1: rewrite Z.add_shuffle1; only 1: rewrite Z.add_shuffle1; only 1: rewrite Z.add_shuffle1; only 1: rewrite <- Z.mul_add_distr_l, <- Pos2Z.opp_neg, Z.add_opp_diag_r; only 1: now Z.nzsimpl).	0.810259103775	13
Coq.omega.OmegaLemmas.OMEGA15	40	0.0.0.0	synth with cache (only 1: rewrite ?Z.mul_add_distr_r, ?Z.mul_add_distr_l, ?Z.mul_assoc; only 1: rewrite <- !Z.add_assoc; only 1: f_equal; only 1: apply Z.add_shuffle3).	0.338006019592	4
Coq.omega.OmegaLemmas.OMEGA16	40	0.6	synth with cache (only 1: rewrite ?Z.mul_add_distr_r, ?Z.mul_add_distr_l, ?Z.mul_assoc; only 1: trivial).	0.500384807587	19
Coq.omega.OmegaLemmas.OMEGA17	40	2.2	synth with cache (only 1: intros H ->; only 1: now Z.nzsimpl).	0.206674098969	6
Coq.omega.OmegaLemmas.OMEGA18	40	2.11.12.7	synth with cache (only 1: unfold Zne, not; only 1: intuition; only 1: rewrite H1 in H; only 1: auto).	9.47301888466	1543
Coq.omega.OmegaLemmas.OMEGA19	40
Coq.omega.OmegaLemmas.OMEGA20	40	0.2.0.0	synth with cache (only 1: unfold Zne, not; only 1: intros NE EQ; only 1: subst; only 1: now Z.nzsimpl).	0.295986175537	6
Coq.omega.OmegaLemmas.intro_Z	40
Coq.omega.PreOmega.Z.mod_0_r_ext	40
Coq.omega.PreOmega.Z.div_0_r_ext	40	0.0.0.0.1.0	synth with cache (only 1: symmetry; only 1: subst; only 1: destruct x; only 1: trivial; only 1: reflexivity; only 1: reflexivity).	0.305809020996	7
Coq.omega.PreOmega.Z.rem_0_r_ext	40	0.0.0.4.2.0	synth with cache (only 1: symmetry; only 1: subst; only 1: destruct x; only 1: trivial; only 1: trivial; only 1: trivial).	1.42049598694	118
Coq.omega.PreOmega.Z.quot_0_r_ext	40	0.0.0.0.1.0	synth with cache (only 1: intro; only 1: subst; only 1: destruct x; only 1: trivial; only 1: reflexivity; only 1: reflexivity).	0.288849115372	7
Coq.omega.PreOmega.Z.rem_bound_pos_pos	40
Coq.omega.PreOmega.Z.rem_bound_neg_pos	40
Coq.omega.PreOmega.Z.rem_bound_pos_neg	40
Coq.omega.PreOmega.Z.rem_bound_neg_neg	40
Coq.btauto.Algebra.Decidable_sound	40	1.0.1	synth with cache (only 1: intros P H Hp; only 1: apply -> Decidable_spec; only 1: assumption).	0.180575847626	5
Coq.btauto.Algebra.Decidable_complete	40	0.1.1	synth with cache (only 1: intros P H Hp; only 1: apply <- Decidable_spec; only 1: assumption).	0.175317049026	5
Coq.btauto.Algebra.Decidable_sound_alt	40	0.0.0.0.0	synth with cache (only 1: intros P [wit spec] Hd; only 1: simpl; only 1: destruct wit; only 1: tauto; only 1: tauto).	0.232036113739	5
Coq.btauto.Algebra.Decidable_complete_alt	40	0.0.0	synth with cache (only 1: intros P [wit spec] Hd Hc; only 1: simpl in *; only 1: intuition congruence).	0.178570985794	3
Coq.btauto.Algebra.Computational.Decidable_PosEq_obligation_1	40	0.2.2.1	synth with cache (only 1: revert q; only 1: intro n; only 1: rewrite Pos.eqb_eq; only 1: auto with relations).	1.37040805817	78
Coq.btauto.Algebra.Computational.Decidable_PosLt_obligation_1	40
Coq.btauto.Algebra.Computational.Decidable_PosLe_obligation_1	40
Coq.btauto.Algebra.Computational.Decidable_eq_poly_obligation_1	40
Coq.btauto.Algebra.Computational.Decidable_null_obligation_3	40
Coq.btauto.Algebra.Computational.Decidable_valid_obligation_1	40
Coq.btauto.Algebra.Validity.valid_le_compat	40
Coq.btauto.Algebra.Validity.linear_le_compat	40	0.0.0.3.1.0.2.2	synth with cache (only 1: intros k l p H Hl; only 1: induction H; only 1: constructor; only 1: constructor; only 1: now eapply Pos.lt_le_trans; eassumption; only 1: eauto; only 1: trivial; only 1: trivial).	7.93591880798	598
Coq.btauto.Algebra.Validity.linear_valid_incl	40
Coq.btauto.Algebra.Evaluation.eval_null_zero	40	0.0.17.3	synth with cache (only 1: intros a m H; only 1: inversion H; only 1: simpl; only 1: trivial).	4.96426296234	903
Coq.btauto.Algebra.Evaluation.eval_extensional_eq_compat	40
Coq.btauto.Algebra.Evaluation.eval_suffix_compat	40
Coq.btauto.Algebra.Algebra.poly_add_compat	40
Coq.btauto.Algebra.Algebra.poly_mul_cst_compat	40
Coq.btauto.Algebra.Algebra.poly_mul_mon_compat	40
Coq.btauto.Algebra.Algebra.poly_mul_compat	40
Coq.btauto.Algebra.Algebra.poly_add_valid_compat	40
Coq.btauto.Algebra.Algebra.poly_mul_cst_valid_compat	40
Coq.btauto.Algebra.Algebra.poly_mul_mon_null_compat	40
Coq.btauto.Algebra.Algebra.poly_mul_mon_valid_compat	40
Coq.btauto.Algebra.Algebra.poly_mul_valid_compat	40
Coq.btauto.Algebra.Algebra.poly_add_linear_compat	40
Coq.btauto.Algebra.Reduce.reduce_aux_eval_compat	40
Coq.btauto.Algebra.Reduce.reduce_eval_compat	40
Coq.btauto.Algebra.Reduce.reduce_aux_le_compat	40
Coq.btauto.Algebra.Reduce.linear_reduce_aux	40
Coq.btauto.Algebra.Reduce.linear_reduce	40
Coq.btauto.Reflect.Translation.poly_of_formula_eval_compat	40
Coq.btauto.Reflect.Translation.poly_of_formula_valid_compat	40
Coq.btauto.Reflect.Translation.poly_of_formula_sound	40
Coq.btauto.Reflect.Completeness.reduce_poly_of_formula_sound	40
Coq.btauto.Reflect.Completeness.list_nth_base	40	0	synth with cache (only 1: reflexivity).	0.118730068207	1
Coq.btauto.Reflect.Completeness.list_nth_succ	40
Coq.btauto.Reflect.Completeness.list_nth_nil	40
Coq.btauto.Reflect.Completeness.make_last_nth_1	40
Coq.btauto.Reflect.Completeness.make_last_nth_2	40
Coq.btauto.Reflect.Completeness.list_replace_nth_1	40
Coq.btauto.Reflect.Completeness.list_replace_nth_2	40
Coq.btauto.Reflect.Completeness.boolean_witness_nonzero	40
Coq.btauto.Reflect.Completeness.reduce_poly_of_formula_sound_alt	40
Coq.funind.Recdef.le_lt_SS	40	8	synth with cache (only 1: intuition).	0.307855129242	16
Coq.funind.Recdef.Splus_lt	40	13	synth with cache (only 1: auto with arith).	0.983149051666	99
Coq.funind.Recdef.SSplus_lt	40	14	synth with cache (only 1: auto with arith).	1.15449810028	175
Coq.funind.Recdef.max	40
Coq.setoid_ring.Rings_Z.Zcri	40	0.0	synth with cache (only 1: red; only 1: exact Z.mul_comm).	0.168867111206	2
Coq.setoid_ring.Rings_Z.Z_one_zero	40	0.0	synth with cache (only 1: intro EQ; only 1: discriminate).	0.143030166626	2
Coq.setoid_ring.Rings_Z.Zdi	40
Coq.setoid_ring.Integral_domain.integral_domain.integral_domain_minus_one_zero	40
Coq.setoid_ring.Integral_domain.integral_domain.pow_not_zero	40
Coq.setoid_ring.Integral_domain.integral_domain.Rintegral_domain_pow	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.cO	40	1	synth with cache (only 1: auto).	0.127315044403	2
Coq.setoid_ring.Ncring_polynom.MakeRingPol.cI	40	0	synth with cache (only 1: exact ring0).	0.121961116791	1
Coq.setoid_ring.Ncring_polynom.MakeRingPol.Peq_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.Pphi0	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.Pphi1	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.mkPX_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.PaddCl_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.PmulC_aux_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.PmulC_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.Popp_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.PaddXPX	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.PaddX_ok2	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.Padd_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.PaddX_ok	40	0.6.2	synth with cache (only 1: intro P; only 1: elim (PaddX_ok2 P); only 1: auto).	7.36254382133	270
Coq.setoid_ring.Ncring_polynom.MakeRingPol.Psub_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.Pmul_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.Psquare_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.mkX_ok	40	9.2.0	synth with cache (only 1: simpl; only 1: intros; only 1: Esimpl).	4.30354785919	230
Coq.setoid_ring.Ncring_polynom.MakeRingPol.POWER2.Ppow_pos_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.POWER2.Ppow_N_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.NORM_SUBST_REC.norm_aux_spec	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.NORM_SUBST_REC.norm_subst_spec	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.norm_subst_ok	40	10.2	synth with cache (only 1: intros; only 1: apply norm_aux_spec).	2.63308000565	123
Coq.setoid_ring.Ncring_polynom.MakeRingPol.ring_correct	40
Coq.setoid_ring.Ring.BoolTheory	40	0.0.0.0.0.0.0.0.0.6	synth with cache (only 1: constructor; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool).	10.9628789425	479
Coq.setoid_ring.Ring.bool_eq_ok	40	3	synth with cache (only 1: destr_bool).	0.145161867142	11
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.radd_ext_Proper	40	5	synth with cache (only 1: exact (Radd_ext Reqe)).	0.145599842072	6
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rmul_ext_Proper	40	7	synth with cache (only 1: exact (Rmul_ext Reqe)).	0.232380151749	8
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.ropp_ext_Proper	40	8	synth with cache (only 1: exact (Ropp_ext Reqe)).	0.133355140686	9
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rsub_ext_Proper	40	13	synth with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).	0.555443048477	60
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rinv_ext_Proper	40	2	synth with cache (only 1: trivial).	0.107985973358	3
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.ceqb_spec	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEequiv_eq	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEeval_ext	40	5	synth with cache (only 1: now intros l l' <- P Q H).	1.63590407372	79
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rsub_0_l	40	2	synth with cache (only 1: let rec Esimpl := let rec rsimpl := gen_srewrite Rsth Reqe ARth in try rewrite_db Esimpl; rsimpl; simpl in Esimpl).	0.15394282341	3
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rsub_0_r	40	2	synth with cache (only 1: let rec Esimpl := let rec rsimpl := gen_srewrite Rsth Reqe ARth in try rewrite_db Esimpl; rsimpl; simpl in Esimpl).	0.169023990631	3
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv_simpl	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv_ext	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rmul_reg_l	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.field_is_integral_domain	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.ropp_neq_0	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv_r_r	40	14	synth with cache (only 1: eauto).	1.49054193497	132
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv1	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv2	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv2b	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv5	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv3b	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv6	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv4	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv4b	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv7	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv7b	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rinv_nz	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv8	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.cross_product_eq	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_ext	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_N_ext	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_0	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_1	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_cst	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_mul_l	40	1.5.0.5.0.6	synth with cache (only 1: induction p; only 1: simpl; only 1: ring [ IHp ]; only 1: simpl; only 1: ring [ IHp ]; only 1: trivial).	38.1490409374	1348
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_add_r	40	1	synth with cache (only 1: apply (pow_pos_add Rsth (Rmul_ext Reqe) (ARmul_assoc ARth))).	0.108906030655	2
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_mul_r	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_nz	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_div	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEadd_ext	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEsub_ext	40	1.1.2.0	synth with cache (only 1: red; only 1: intros ? ? E ? ? E' l; only 1: simpl; only 1: now rewrite E, E').	7.72368407249	95
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEmul_ext	40	1.1.2.0	synth with cache (only 1: red; only 1: intros ? ? E ? ? E' l; only 1: simpl; only 1: now rewrite E, E').	7.68974089622	95
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEopp_ext	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_ext	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PE_1_l	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PE_1_r	40	5.0.1.0.0	synth with cache (only 1: red; only 1: simpl; only 1: intros; only 1: rewrite phi_1; only 1: let rec Esimpl := let rec rsimpl := gen_srewrite Rsth Reqe ARth in try rewrite_db Esimpl; rsimpl; simpl in Esimpl).	3.27302098274	121
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_0_r	40	2.0.0	synth with cache (only 1: red; only 1: simpl; only 1: eauto).	0.231096982956	5
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_1_r	40	9.1.0.0	synth with cache (only 1: red; only 1: simpl; only 1: intros; only 1: eauto).	6.58088302612	524
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_1_l	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_add_r	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_mul_l	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_mul_r	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_nz	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.if_true	40	0.13	synth with cache (only 1: Bool.destr_bool; only 1: auto).	3.22955513	219
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PExpr_eq_semi_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PExpr_eq_spec	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEadd_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEsub_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEopp_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEpow_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEmul_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEsimp_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PCond_cons	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PCond_cons_inv_l	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PCond_cons_inv_r	40	6.1.18	synth with cache (only 1: rewrite PCond_cons; only 1: intro H; only 1: intuition).	19.7089419365	2945
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PCond_app	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.absurd_PCond_bottom	40	4.0	synth with cache (only 1: simpl; only 1: easy || now destruct 1).	0.232188940048	11
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Z_pos_sub_gt	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.default_isIn_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.isIn_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_aux_ok1	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_aux_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_ok_l	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_ok_r	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_nz_l	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_nz_r	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Pcond_Fnorm	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fnorm_FEeval_PEeval	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fnorm_crossproduct	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fnorm_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_rw_correct	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_rw_pow_correct	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_correct	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_simplify_eq_correct	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_simplify_eq_pow_correct	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_simplify_aux_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_simplify_eq_pow_in_correct	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_simplify_eq_in_correct	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_impl.fcons_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons_fcons_inv	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons0_fcons_inv	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons00_fcons_inv	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.ceqb_spec'	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons1_fcons_inv	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons2_fcons_inv	40
Coq.setoid_ring.Field_theory.Complete.radd_ext3_Proper	40	1	synth with cache (only 1: exact (Radd_ext Reqe)).	0.173295974731	2
Coq.setoid_ring.Field_theory.Complete.rmul_ext3_Proper	40	0	synth with cache (only 1: exact (Rmul_ext Reqe)).	0.16793179512	1
Coq.setoid_ring.Field_theory.Complete.ropp_ext3_Proper	40	0	synth with cache (only 1: exact (Ropp_ext Reqe)).	0.15299987793	1
Coq.setoid_ring.Field_theory.Complete.AlmostField.add_inj_r	40
Coq.setoid_ring.Field_theory.Complete.AlmostField.gen_phiPOS_inj	40
Coq.setoid_ring.Field_theory.Complete.AlmostField.gen_phiN_inj	40
Coq.setoid_ring.Field_theory.Complete.AlmostField.gen_phiN_complete	40
Coq.setoid_ring.Field_theory.Complete.Field.ring_S_inj	40
Coq.setoid_ring.Field_theory.Complete.Field.gen_phiPOS_discr_sgn	40
Coq.setoid_ring.Field_theory.Complete.Field.gen_phiZ_inj	40
Coq.setoid_ring.Field_theory.Complete.Field.gen_phiZ_complete	40
Coq.setoid_ring.Ncring_initial.Zsth	40	8	synth with cache (only 1: exact eq_equivalence).	0.254354953766	15
Coq.setoid_ring.Ncring_initial.Zr	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.same_gen	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.ARgen_phiPOS_Psucc	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.ARgen_phiPOS_add	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.ARgen_phiPOS_mult	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.same_genZ	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_Zeqb_ok	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ1_add_pos_neg	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.match_compOpp	40	0.0.0.15	synth with cache (only 1: induction x; only 1: auto; only 1: auto; only 1: auto).	3.70076203346	264
Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ_add	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ_opp	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ_mul	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ_ext	40	0.2.2	synth with cache (only 1: intros; only 1: subst; only 1: reflexivity).	0.225547075272	7
Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ_morph	40
Coq.setoid_ring.ArithRing.natSRth	40
Coq.setoid_ring.ArithRing.nat_morph_N	40
Coq.setoid_ring.Rings_R.Rsth	40	0.0.1.1.0.1.1.4	synth with cache (only 1: constructor; only 1: constructor; only 1: unfold Symmetric; only 1: auto with *; only 1: unfold Transitive; only 1: intros x y z H1 H2; only 1: subst; only 1: reflexivity).	5.55309200287	282
Coq.setoid_ring.Rings_R.Rri	40
Coq.setoid_ring.Rings_R.Rcri	40	9.0.2.4.3	synth with cache (only 1: red; only 1: unfold equality; only 1: unfold eq_notation in *; only 1: intros; only 1: intuition).	30.3789758682	1743
Coq.setoid_ring.Rings_R.R_one_zero	40	0	synth with cache (only 1: exact R1_neq_R0).	0.194384098053	1
Coq.setoid_ring.Rings_R.Rdi	40
Coq.setoid_ring.RealField.RTheory	40
Coq.setoid_ring.RealField.Rfield	40
Coq.setoid_ring.RealField.Rlt_n_Sn	40
Coq.setoid_ring.RealField.Rlt_0_2	40
Coq.setoid_ring.RealField.Rgen_phiPOS	40
Coq.setoid_ring.RealField.Rgen_phiPOS_not_0	40
Coq.setoid_ring.RealField.Rdef_pow_add	40
Coq.setoid_ring.RealField.R_power_theory	40
Coq.setoid_ring.Ring_theory.Power.pow_pos_swap	40
Coq.setoid_ring.Ring_theory.Power.pow_pos_succ	40
Coq.setoid_ring.Ring_theory.Power.pow_pos_add	40
Coq.setoid_ring.Ring_theory.Power.pow_N_pow_N	40	3	synth with cache (only 1: reflexivity).	0.0746400356293	4
Coq.setoid_ring.Ring_theory.DEFINITIONS.MORPHISM.get_sign_None_th	40	9	synth with cache (only 1: now rewrite ?H, ?IHp).	0.148823022842	11
Coq.setoid_ring.Ring_theory.DEFINITIONS.IDmorph	40	14	synth with cache (only 1: firstorder).	0.818363904953	108
Coq.setoid_ring.Ring_theory.ALMOST_RING.Eqsth	40	8	synth with cache (only 1: intuition).	0.282497882843	9
Coq.setoid_ring.Ring_theory.ALMOST_RING.Eq_s_ext	40	7.7.10	synth with cache (only 1: split; only 1: congruence; only 1: congruence).	17.5502479076	2036
Coq.setoid_ring.Ring_theory.ALMOST_RING.Eq_ext	40	1.0.0.1	synth with cache (only 1: constructor; only 1: solve_proper; only 1: solve_proper; only 1: congruence).	0.235992908478	6
Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.radd_ext1_Proper	40	18	synth with cache (only 1: firstorder).	1.20805215836	203
Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.rmul_ext1_Proper	40	19	synth with cache (only 1: firstorder).	1.28128314018	223
Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRopp_ext	40	0	synth with cache (only 1: auto).	0.0745298862457	1
Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SReqe_Reqe	40	16	synth with cache (only 1: firstorder).	1.29205107689	143
Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRopp_mul_l	40	7	synth with cache (only 1: reflexivity).	0.0774970054626	8
Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRopp_add	40	0	synth with cache (only 1: reflexivity).	0.0752558708191	1
Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRsub_def	40	0	synth with cache (only 1: reflexivity).	0.0744619369507	1
Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRIDmorph	40	11	synth with cache (only 1: firstorder).	0.500569105148	49
Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRmorph_Rmorph	40	4	synth with cache (only 1: firstorder).	0.0968239307404	5
Coq.setoid_ring.Ring_theory.ALMOST_RING.radd_ext2_Proper	40	23.6	synth with cache (only 1: intros x y H; only 1: firstorder).	5.62842202187	1120
Coq.setoid_ring.Ring_theory.ALMOST_RING.rmul_ext2_Proper	40	23.7	synth with cache (only 1: intros x y H; only 1: firstorder).	5.87676000595	1178
Coq.setoid_ring.Ring_theory.ALMOST_RING.ropp_ext2_Proper	40	25	synth with cache (only 1: firstorder).	4.05285000801	734
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Rmul_0_l	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Ropp_mul_l	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Ropp_add	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Ropp_opp	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.cadd_ext_Proper	40	7	synth with cache (only 1: firstorder).	0.197361946106	18
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.cmul_ext_Proper	40	8	synth with cache (only 1: firstorder).	0.194916963577	16
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.copp_ext_Proper	40	15	synth with cache (only 1: firstorder).	2.9067928791	263
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.phi_ext1_Proper	40	2	synth with cache (only 1: auto).	0.0782480239868	3
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Smorph_opp	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Smorph_sub	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARth_SRth	40	46	synth with cache (only 1: firstorder).	7.41822290421	3443
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARsub_ext	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARadd_0_r	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARmul_1_r	40	0	synth with cache (only 1: mrewrite).	0.0908570289612	1
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARmul_0_r	40	3	synth with cache (only 1: mrewrite).	0.0935170650482	4
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARdistr_r	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARadd_assoc1	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARadd_assoc2	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARmul_assoc1	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARmul_assoc2	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARopp_mul_r	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARopp_zero	40
Coq.setoid_ring.InitialRing.Zth	40
Coq.setoid_ring.InitialRing.ZMORPHISM.radd_ext3_Proper	40	1	synth with cache (only 1: exact (Radd_ext Reqe)).	0.104984998703	2
Coq.setoid_ring.InitialRing.ZMORPHISM.rmul_ext3_Proper	40	1	synth with cache (only 1: exact (Rmul_ext Reqe)).	0.103430986404	2
Coq.setoid_ring.InitialRing.ZMORPHISM.ropp_ext3_Proper	40	1	synth with cache (only 1: exact (Ropp_ext Reqe)).	0.0940799713135	2
Coq.setoid_ring.InitialRing.ZMORPHISM.get_signZ_th	40
Coq.setoid_ring.InitialRing.ZMORPHISM.ALMOST_RING.rsub_ext3_Proper	40	0.10	synth with cache (only 1: intros x1 x2 Ex y1 y2 Ey; only 1: now rewrite !(ARsub_def ARth), Ex, Ey).	0.750037908554	40
Coq.setoid_ring.InitialRing.ZMORPHISM.ALMOST_RING.same_gen	40
Coq.setoid_ring.InitialRing.ZMORPHISM.ALMOST_RING.ARgen_phiPOS_Psucc	40
Coq.setoid_ring.InitialRing.ZMORPHISM.ALMOST_RING.ARgen_phiPOS_add	40
Coq.setoid_ring.InitialRing.ZMORPHISM.ALMOST_RING.ARgen_phiPOS_mult	40
Coq.setoid_ring.InitialRing.ZMORPHISM.rsub_ext4_Proper	40	3	synth with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).	0.10421705246	4
Coq.setoid_ring.InitialRing.ZMORPHISM.same_genZ	40
Coq.setoid_ring.InitialRing.ZMORPHISM.gen_Zeqb_ok	40
Coq.setoid_ring.InitialRing.ZMORPHISM.gen_phiZ1_pos_sub	40
Coq.setoid_ring.InitialRing.ZMORPHISM.gen_phiZ_add	40
Coq.setoid_ring.InitialRing.ZMORPHISM.gen_phiZ_mul	40
Coq.setoid_ring.InitialRing.ZMORPHISM.gen_phiZ_ext	40	5.2.3	synth with cache (only 1: intros x y H; only 1: rewrite H; only 1: rrefl).	1.13259887695	106
Coq.setoid_ring.InitialRing.ZMORPHISM.gen_phiZ_morph	40
Coq.setoid_ring.InitialRing.Nth	40
Coq.setoid_ring.InitialRing.Neqb_ok	40
Coq.setoid_ring.InitialRing.NMORPHISM.radd_ext4_Proper	40	3	synth with cache (only 1: exact (SRadd_ext SReqe)).	0.217918872833	4
Coq.setoid_ring.InitialRing.NMORPHISM.rmul_ext4_Proper	40	4	synth with cache (only 1: exact (SRmul_ext SReqe)).	0.100759029388	5
Coq.setoid_ring.InitialRing.NMORPHISM.same_genN	40
Coq.setoid_ring.InitialRing.NMORPHISM.gen_phiN_add	40
Coq.setoid_ring.InitialRing.NMORPHISM.gen_phiN_mult	40
Coq.setoid_ring.InitialRing.NMORPHISM.gen_phiN_sub	40
Coq.setoid_ring.InitialRing.NMORPHISM.gen_phiN_morph	40
Coq.setoid_ring.InitialRing.NWORDMORPHISM.radd_ext5_Proper	40	1	synth with cache (only 1: exact (Radd_ext Reqe)).	0.10117316246	2
Coq.setoid_ring.InitialRing.NWORDMORPHISM.rmul_ext5_Proper	40	1	synth with cache (only 1: exact (Rmul_ext Reqe)).	0.0994188785553	2
Coq.setoid_ring.InitialRing.NWORDMORPHISM.ropp_ext5_Proper	40	1	synth with cache (only 1: exact (Ropp_ext Reqe)).	0.0908930301666	2
Coq.setoid_ring.InitialRing.NWORDMORPHISM.rsub_ext7_Proper	40	2	synth with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).	0.10525894165	3
Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword0_ok	40
Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword_cons	40
Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword_Nwcons	40
Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword_ok	40
Coq.setoid_ring.InitialRing.NWORDMORPHISM.Nwadd_ok	40
Coq.setoid_ring.InitialRing.NWORDMORPHISM.Nwopp_ok	40	1.1.5	synth with cache (only 1: induction x; only 1: let rec norm := gen_srewrite Rsth Reqe ARth in norm; only 1: let rec norm := gen_srewrite Rsth Reqe ARth in norm).	0.482362985611	21
Coq.setoid_ring.InitialRing.NWORDMORPHISM.Nwscal_ok	40
Coq.setoid_ring.InitialRing.NWORDMORPHISM.Nwmul_ok	40
Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword_morph	40
Coq.setoid_ring.InitialRing.GEN_DIV.radd_ext_Proper	40	1	synth with cache (only 1: exact (Radd_ext Reqe)).	0.112977981567	2
Coq.setoid_ring.InitialRing.GEN_DIV.rmul_ext_Proper	40	2	synth with cache (only 1: exact (Rmul_ext Reqe)).	0.11216211319	3
Coq.setoid_ring.InitialRing.GEN_DIV.ropp_ext_Proper	40	1	synth with cache (only 1: exact (Ropp_ext Reqe)).	0.103059053421	2
Coq.setoid_ring.InitialRing.GEN_DIV.rsub_ext_Proper	40	2	synth with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).	0.110953092575	3
Coq.setoid_ring.InitialRing.GEN_DIV.triv_div_th	40
Coq.setoid_ring.InitialRing.GEN_DIV.Ztriv_div_th	40
Coq.setoid_ring.InitialRing.GEN_DIV.Ntriv_div_th	40
Coq.setoid_ring.Cring.cring.cring_eq_ext	40	2.0.0.11	synth with cache (only 1: constructor; only 1: solve_proper; only 1: solve_proper; only 1: solve_proper).	2.67587995529	127
Coq.setoid_ring.Cring.cring.cring_almost_ring_theory	40
Coq.setoid_ring.Cring.cring.cring_morph	40
Coq.setoid_ring.Cring.cring.cring_power_theory	40	0.0.36	synth with cache (only 1: constructor; only 1: intros; only 1: reflexivity).	8.02741909027	736
Coq.setoid_ring.Cring.cring.cring_div_theory	40
Coq.setoid_ring.Cring.Zcri	40	2.3.15.10	synth with cache (only 1: intro n; only 1: repeat red; only 1: intros; only 1: intuition).	14.3484530449	1844
Coq.setoid_ring.Ring_polynom.MakeRingPol.radd_ext_Proper	40	2	synth with cache (only 1: exact (Radd_ext Reqe)).	0.108626842499	3
Coq.setoid_ring.Ring_polynom.MakeRingPol.rmul_ext_Proper	40	5	synth with cache (only 1: exact (Rmul_ext Reqe)).	0.109461784363	6
Coq.setoid_ring.Ring_polynom.MakeRingPol.ropp_ext_Proper	40	2	synth with cache (only 1: exact (Ropp_ext Reqe)).	0.0980370044708	3
Coq.setoid_ring.Ring_polynom.MakeRingPol.rsub_ext_Proper	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Pequiv_eq	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi_ext	40	0.1.0.9.2.1	synth with cache (only 1: red; only 1: red; only 1: induction 1; only 1: red; only 1: intros; only 1: auto).	10.7132711411	926
Coq.setoid_ring.Ring_polynom.MakeRingPol.Pinj_ext	40	11.10	synth with cache (only 1: unfold Pequiv; only 1: solve_proper).	17.4905591011	1563
Coq.setoid_ring.Ring_polynom.MakeRingPol.PX_ext	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.jump_add'	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Peq_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Peq_spec	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi0	40	49	synth with cache (only 1: firstorder).	6.53715395927	1896
Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi1	40	42	synth with cache (only 1: firstorder).	5.94174313545	1734
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkPinj_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkPinj_ext	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.pow_pos_add	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.ceqb_spec	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkPX_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkPX_ext	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.PaddC_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.PsubC_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.PmulC_aux_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.PmulC_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Popp_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.PaddX_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Padd_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Psub_opp	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Psub_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.PmulI_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Pmul_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkZmon_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.zmon_pred_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkVmon_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Mcphi_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Mphi_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.POneSubst_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.PNSubst1_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.PNSubst_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.PSubstL1_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.PSubstL_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.PNSubstL_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkX_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.POWER.Ppow_pos_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.POWER.Ppow_N_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.NORM_SUBST_REC.norm_aux_PEadd	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.NORM_SUBST_REC.norm_aux_PEopp	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.NORM_SUBST_REC.norm_aux_spec	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.NORM_SUBST_REC.norm_subst_spec	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.mon_of_pol_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.interp_PElist_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.norm_subst_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.ring_correct	40	3.21.0	synth with cache (only 1: simpl; only 1: fix even_spec 1; only 1: trivial).	20.9322040081	3728
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkmult_rec_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkmult1_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkmultm1_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.r_list_pow_rev	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkmult_c_pos_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkmult_c_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkadd_mult_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.add_pow_list_ok	40	0.0.1.2.0.11	synth with cache (only 1: destruct n; only 1: intros; only 1: Esimpl; only 1: simpl; only 1: intros; only 1: Esimpl).	36.1049509048	1943
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.add_mult_dev_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mult_dev_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.Pphi_avoid_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.local_mkpow_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi_pow_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.ring_rw_pow_correct	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkmult_pow_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkpow_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkopp_pow_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi_dev_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.ring_rw_correct	40
Coq.setoid_ring.BinList.MakeBinList.jump_tl	40
Coq.setoid_ring.BinList.MakeBinList.jump_succ	40
Coq.setoid_ring.BinList.MakeBinList.jump_add	40
Coq.setoid_ring.BinList.MakeBinList.jump_pred_double	40
Coq.setoid_ring.BinList.MakeBinList.nth_jump	40
Coq.setoid_ring.BinList.MakeBinList.nth_pred_double	40
Coq.setoid_ring.Ncring.Ring.pow_pos_comm	40	0.16.7	synth with cache (only 1: intro; only 1: fix sqrtrem_spec 1; only 1: auto).	9.37270092964	1104
Coq.setoid_ring.Ncring.Ring.pow_pos_succ	40
Coq.setoid_ring.Ncring.Ring.pow_pos_add	40
Coq.setoid_ring.Ncring.Ring.pow_N_pow_N	40	4.0.2	synth with cache (only 1: intro x; only 1: intro n; only 1: reflexivity).	0.19170498848	9
Coq.setoid_ring.Ncring.Ring.ring_mul_0_l	40
Coq.setoid_ring.Ncring.Ring.ring_mul_0_r	40
Coq.setoid_ring.Ncring.Ring.ring_opp_mul_l	40
Coq.setoid_ring.Ncring.Ring.ring_opp_mul_r	40
Coq.setoid_ring.Ncring.Ring.ring_opp_add	40
Coq.setoid_ring.Ncring.Ring.ring_opp_opp	40
Coq.setoid_ring.Ncring.Ring.ring_sub_ext	40	19	synth with cache (only 1: firstorder).	5.81274199486	559
Coq.setoid_ring.Ncring.Ring.ring_add_0_r	40	0.1.0.1	synth with cache (only 1: intros x; only 1: rewrite (ring_add_comm x); only 1: rewrite ring_add_0_l; only 1: reflexivity).	0.525372982025	21
Coq.setoid_ring.Ncring.Ring.ring_add_assoc1	40
Coq.setoid_ring.Ncring.Ring.ring_add_assoc2	40	2.0.0.19.0	synth with cache (only 1: intros; only 1: rewrite (ring_add_comm y); only 1: rewrite <- (ring_add_assoc x); only 1: rewrite (ring_add_comm x); only 1: reflexivity).	24.4541039467	2926
Coq.setoid_ring.Ncring.Ring.ring_opp_zero	40
Coq.setoid_ring.Ncring_tac.Zeqb_ok	40	5.17	synth with cache (only 1: intros a b; only 1: apply Zeq_is_eq_bool).	7.94744706154	944
Coq.setoid_ring.Ncring_tac.comm	40
Coq.setoid_ring.Rings_Q.Qri	40
Coq.setoid_ring.Rings_Q.Qcri	40	1.0.0.2.0.1.8	synth with cache (only 1: intros H1; only 1: intro; only 1: apply Qeq_sym; only 1: red; only 1: simpl; only 1: rewrite Pos.mul_comm; only 1: ring).	15.5891048908	541
Coq.setoid_ring.Rings_Q.Q_one_zero	40	0.0	synth with cache (only 1: unfold Qeq; only 1: auto with qarith).	0.214334964752	2
Coq.setoid_ring.Rings_Q.Qdi	40
Coq.ssr.ssreflect.master_key	40	0	synth with cache (only 1: tauto).	0.0161740779877	1
Coq.ssr.ssreflect.lock	40
Coq.ssr.ssreflect.not_locked_false_eq_true	40	0.15	synth with cache (only 1: unlock; only 1: discriminate).	0.352996110916	218
Coq.ssr.ssreflect.unlock	40
Coq.ssr.ssreflect.locked_withE	40
Coq.ssr.ssreflect.unlock_with	40	0	synth with cache (only 1: by case : k ).	0.0187401771545	1
Coq.ssr.ssreflect.nary_congruence	40
Coq.ssr.ssreflect.ssr_congr_arrow	40	0.16	synth with cache (only 1: destruct 1; only 1: auto).	12.7268400192	199
Coq.ssr.ssreflect.ApplyIff.iffLR	40	0	synth with cache (only 1: tauto).	0.256665229797	1
Coq.ssr.ssreflect.ApplyIff.iffRL	40	0	synth with cache (only 1: by case : eqPQ ).	0.328706026077	1
Coq.ssr.ssreflect.ApplyIff.iffLRn	40	2	synth with cache (only 1: tauto).	0.263910055161	3
Coq.ssr.ssreflect.ApplyIff.iffRLn	40	2	synth with cache (only 1: by move  =>nP tQ; case : nP ; case : eqPQ tQ ).	0.24245095253	3
Coq.ssr.ssreflect.abstract_context	40
Coq.ssr.ssrbool.prop_congr	40	0	synth with cache (only 1: Bool.destr_bool).	1.89609289169	1
Coq.ssr.ssrbool.is_true_true	40	1	synth with cache (only 1: by [  ]).	2.81459593773	2
Coq.ssr.ssrbool.not_false_is_true	40	0	synth with cache (only 1: by [  ]).	3.02474403381	1
Coq.ssr.ssrbool.is_true_locked_true	40
Coq.ssr.ssrbool.negbT	40	0.0.3	synth with cache (only 1: intuition; only 1: subst; only 1: by [  ]).	7.22914385796	6
Coq.ssr.ssrbool.negbTE	40	2	synth with cache (only 1: by case : b ).	1.45514798164	3
Coq.ssr.ssrbool.negbF	40	0	synth with cache (only 1: by case : b ).	1.16939401627	1
Coq.ssr.ssrbool.negbFE	40	0	synth with cache (only 1: by case : b ).	1.39436411858	1
Coq.ssr.ssrbool.negbK	40	7	synth with cache (only 1: by case).	2.96993684769	8
Coq.ssr.ssrbool.negbNE	40	4	synth with cache (only 1: by case : b ).	2.85875701904	5
Coq.ssr.ssrbool.negb_inj	40
Coq.ssr.ssrbool.negbLR	40	7	synth with cache (only 1: Bool.destr_bool).	3.67006802559	19
Coq.ssr.ssrbool.negbRL	40	9	synth with cache (only 1: Bool.destr_bool).	3.58451795578	18
Coq.ssr.ssrbool.contra	40
Coq.ssr.ssrbool.contraL	40	0	synth with cache (only 1: by case : b  => //; case : c ).	2.24780297279	1
Coq.ssr.ssrbool.contraR	40	0	synth with cache (only 1: by case : b  => //; case : c ).	2.10104584694	1
Coq.ssr.ssrbool.contraLR	40	0	synth with cache (only 1: by case : b  => //; case : c ).	2.06083106995	1
Coq.ssr.ssrbool.contraT	40
Coq.ssr.ssrbool.wlog_neg	40	2	synth with cache (only 1: by case : b  => // ->).	2.25788211823	3
Coq.ssr.ssrbool.contraFT	40
Coq.ssr.ssrbool.contraFN	40
Coq.ssr.ssrbool.contraTF	40
Coq.ssr.ssrbool.contraNF	40
Coq.ssr.ssrbool.contraFF	40
Coq.ssr.ssrbool.BoolIf.ifP	40
Coq.ssr.ssrbool.BoolIf.ifPn	40	2	synth with cache (only 1: by case  def_b: b ; constructor).	5.01644611359	3
Coq.ssr.ssrbool.BoolIf.ifT	40	6	synth with cache (only 1: by case : b ).	9.45470023155	12
Coq.ssr.ssrbool.BoolIf.ifF	40	1	synth with cache (only 1: by case : b ).	4.22940015793	2
Coq.ssr.ssrbool.BoolIf.ifN	40	4	synth with cache (only 1: by case : b ).	4.95111107826	5
Coq.ssr.ssrbool.BoolIf.if_same	40	3	synth with cache (only 1: by case  def_b: b ; constructor; rewrite ?def_b).	5.37582993507	4
Coq.ssr.ssrbool.BoolIf.if_neg	40	1	synth with cache (only 1: by case b).	5.37546396255	2
Coq.ssr.ssrbool.BoolIf.fun_if	40	0	synth with cache (only 1: by case b).	4.29073095322	1
Coq.ssr.ssrbool.BoolIf.if_arg	40	0	synth with cache (only 1: by case b).	4.19129300117	1
Coq.ssr.ssrbool.BoolIf.ifE	40	4	synth with cache (only 1: now constructor).	4.7348549366	5
Coq.ssr.ssrbool.ReflectCore.introNTF	40
Coq.ssr.ssrbool.ReflectCore.introTF	40	0	synth with cache (only 1: by case c; case Hb).	4.05578899384	1
Coq.ssr.ssrbool.ReflectCore.elimNTF	40	0	synth with cache (only 1: by case c; case Hb).	4.6602101326	1
Coq.ssr.ssrbool.ReflectCore.elimTF	40	0	synth with cache (only 1: by move <-; case Hb).	4.05555915833	1
Coq.ssr.ssrbool.ReflectCore.equivPif	40
Coq.ssr.ssrbool.ReflectCore.xorPif	40
Coq.ssr.ssrbool.ReflectNegCore.introTFn	40
Coq.ssr.ssrbool.ReflectNegCore.elimTFn	40
Coq.ssr.ssrbool.ReflectNegCore.equivPifn	40
Coq.ssr.ssrbool.ReflectNegCore.xorPifn	40
Coq.ssr.ssrbool.Reflect.introT	40
Coq.ssr.ssrbool.Reflect.introF	40
Coq.ssr.ssrbool.Reflect.introN	40
Coq.ssr.ssrbool.Reflect.introNf	40
Coq.ssr.ssrbool.Reflect.introTn	40
Coq.ssr.ssrbool.Reflect.introFn	40
Coq.ssr.ssrbool.Reflect.elimT	40
Coq.ssr.ssrbool.Reflect.elimF	40
Coq.ssr.ssrbool.Reflect.elimN	40
Coq.ssr.ssrbool.Reflect.elimNf	40
Coq.ssr.ssrbool.Reflect.elimTn	40
Coq.ssr.ssrbool.Reflect.elimFn	40
Coq.ssr.ssrbool.Reflect.introP	40
Coq.ssr.ssrbool.Reflect.iffP	40
Coq.ssr.ssrbool.Reflect.equivP	40
Coq.ssr.ssrbool.Reflect.sumboolP	40
Coq.ssr.ssrbool.Reflect.appP	40
Coq.ssr.ssrbool.Reflect.sameP	40
Coq.ssr.ssrbool.Reflect.decPcases	40
Coq.ssr.ssrbool.Reflect.decP	40
Coq.ssr.ssrbool.Reflect.rwP	40	7	synth with cache (only 1: by case : Pb ; constructor; auto).	2.69460296631	8
Coq.ssr.ssrbool.Reflect.rwP2	40
Coq.ssr.ssrbool.Reflect.altP	40
Coq.ssr.ssrbool.impliesP	40
Coq.ssr.ssrbool.impliesPn	40
Coq.ssr.ssrbool.unlessL	40
Coq.ssr.ssrbool.unlessR	40
Coq.ssr.ssrbool.unless_sym	40
Coq.ssr.ssrbool.unlessP	40
Coq.ssr.ssrbool.bind_unless	40
Coq.ssr.ssrbool.unless_contra	40
Coq.ssr.ssrbool.classicP	40
Coq.ssr.ssrbool.classicW	40
Coq.ssr.ssrbool.classic_bind	40
Coq.ssr.ssrbool.classic_EM	40
Coq.ssr.ssrbool.classic_pick	40
Coq.ssr.ssrbool.classic_imply	40
Coq.ssr.ssrbool.AllAnd.all_and2	40
Coq.ssr.ssrbool.AllAnd.all_and3	40	0	synth with cache (only 1: by split => haveP; split => x; case : (haveP x) ).	8.34668111801	1
Coq.ssr.ssrbool.AllAnd.all_and4	40	0	synth with cache (only 1: by split => haveP; split => x; case : (haveP x) ).	8.17478084564	1
Coq.ssr.ssrbool.AllAnd.all_and5	40	0	synth with cache (only 1: by split => haveP; split => x; case : (haveP x) ).	8.32648181915	1
Coq.ssr.ssrbool.pair_andP	40	0	synth with cache (only 1: intuition).	7.10749316216	1
Coq.ssr.ssrbool.ReflectConnectives.idP	40
Coq.ssr.ssrbool.ReflectConnectives.boolP	40	0	synth with cache (only 1: by case b1; constructor).	7.24057507515	1
Coq.ssr.ssrbool.ReflectConnectives.idPn	40	0	synth with cache (only 1: by case b1; constructor).	6.02454304695	1
Coq.ssr.ssrbool.ReflectConnectives.negP	40	0	synth with cache (only 1: by case b1; constructor).	5.78545188904	1
Coq.ssr.ssrbool.ReflectConnectives.negPn	40	0	synth with cache (only 1: by case b1; constructor).	5.63084387779	1
Coq.ssr.ssrbool.ReflectConnectives.negPf	40	5	synth with cache (only 1: by case b1; constructor).	4.92828202248	6
Coq.ssr.ssrbool.ReflectConnectives.andP	40
Coq.ssr.ssrbool.ReflectConnectives.and3P	40
Coq.ssr.ssrbool.ReflectConnectives.and4P	40
Coq.ssr.ssrbool.ReflectConnectives.and5P	40
Coq.ssr.ssrbool.ReflectConnectives.orP	40
Coq.ssr.ssrbool.ReflectConnectives.or3P	40
Coq.ssr.ssrbool.ReflectConnectives.or4P	40
Coq.ssr.ssrbool.ReflectConnectives.nandP	40	1	synth with cache (only 1: by case b1; case b2; constructor; auto; case).	3.51194405556	2
Coq.ssr.ssrbool.ReflectConnectives.norP	40	0	synth with cache (only 1: by case b1; case b2; constructor => //; case).	2.30430603027	1
Coq.ssr.ssrbool.ReflectConnectives.implyP	40	6	synth with cache (only 1: by case b1; case b2; constructor; auto; case).	3.66949295998	7
Coq.ssr.ssrbool.andTb	40	0	synth with cache (only 1: by constructor; case).	3.40892100334	1
Coq.ssr.ssrbool.andFb	40	0	synth with cache (only 1: by constructor; case).	3.96674203873	1
Coq.ssr.ssrbool.andbT	40
Coq.ssr.ssrbool.andbF	40	1	synth with cache (only 1: by case).	3.69757604599	2
Coq.ssr.ssrbool.andbb	40	3	synth with cache (only 1: by case).	3.91805100441	4
Coq.ssr.ssrbool.andbC	40
Coq.ssr.ssrbool.andbA	40	0	synth with cache (only 1: by case).	3.83975291252	1
Coq.ssr.ssrbool.andbCA	40	0	synth with cache (only 1: by do 2!case).	3.21004390717	1
Coq.ssr.ssrbool.andbAC	40	0	synth with cache (only 1: by do 3!case).	2.64154601097	1
Coq.ssr.ssrbool.andbACA	40	2	synth with cache (only 1: by do 3!case).	3.62581777573	3
Coq.ssr.ssrbool.orTb	40	0	synth with cache (only 1: reflexivity).	2.4446618557	1
Coq.ssr.ssrbool.orFb	40	0	synth with cache (only 1: by [  ]).	3.33762693405	1
Coq.ssr.ssrbool.orbT	40	2	synth with cache (only 1: Bool.destr_bool).	2.13910222054	3
Coq.ssr.ssrbool.orbF	40	1	synth with cache (only 1: by case).	3.35416507721	2
Coq.ssr.ssrbool.orbb	40	0	synth with cache (only 1: by case).	3.22430706024	1
Coq.ssr.ssrbool.orbC	40	0	synth with cache (only 1: by do 2!case).	2.56203508377	1
Coq.ssr.ssrbool.orbA	40	0	synth with cache (only 1: by do 3!case).	3.29502511024	1
Coq.ssr.ssrbool.orbCA	40	0	synth with cache (only 1: by do 2!case).	2.58170580864	1
Coq.ssr.ssrbool.orbAC	40	0	synth with cache (only 1: by do 3!case).	2.4981470108	1
Coq.ssr.ssrbool.orbACA	40	0	synth with cache (only 1: by do 4!case).	3.02186512947	1
Coq.ssr.ssrbool.andbN	40	0	synth with cache (only 1: by case : b ).	4.40112686157	1
Coq.ssr.ssrbool.andNb	40	0	synth with cache (only 1: by case : b ).	4.02073693275	1
Coq.ssr.ssrbool.orbN	40	1	synth with cache (only 1: by case : b ).	2.45536780357	2
Coq.ssr.ssrbool.orNb	40	0	synth with cache (only 1: by case : b ).	2.38972806931	1
Coq.ssr.ssrbool.andb_orl	40	3	synth with cache (only 1: by do 3!case).	1.93864297867	4
Coq.ssr.ssrbool.andb_orr	40	1	synth with cache (only 1: by do 3!case).	1.77622389793	2
Coq.ssr.ssrbool.orb_andl	40	0	synth with cache (only 1: by do 3!case).	1.70252990723	1
Coq.ssr.ssrbool.orb_andr	40	0	synth with cache (only 1: by do 3!case).	1.68637084961	1
Coq.ssr.ssrbool.andb_idl	40	2.1	synth with cache (only 1: Bool.destr_bool; only 1: intuition).	8.93491697311	5
Coq.ssr.ssrbool.andb_idr	40	0	synth with cache (only 1: by case : a ; case : b  => // ->).	6.14838814735	1
Coq.ssr.ssrbool.andb_id2l	40	8	synth with cache (only 1: by case : a ; case : b  => // ->).	9.02120089531	16
Coq.ssr.ssrbool.andb_id2r	40	0	synth with cache (only 1: by case : a ; case : b ; case : c  => // ->).	3.15127897263	1
Coq.ssr.ssrbool.orb_idl	40	0	synth with cache (only 1: by case : a ; case : b  => // ->).	6.03765797615	1
Coq.ssr.ssrbool.orb_idr	40	0	synth with cache (only 1: by case : a ; case : b  => // ->).	5.91529607773	1
Coq.ssr.ssrbool.orb_id2l	40	0	synth with cache (only 1: by case : a ; case : b ; case : c  => // ->).	4.12044596672	1
Coq.ssr.ssrbool.orb_id2r	40	0	synth with cache (only 1: by case : a ; case : b ; case : c  => // ->).	3.63598203659	1
Coq.ssr.ssrbool.negb_and	40	1	synth with cache (only 1: by case : a ; case : b  => // ->).	4.36105012894	2
Coq.ssr.ssrbool.negb_or	40	0	synth with cache (only 1: by case : a ; case : b ).	3.90433812141	1
Coq.ssr.ssrbool.andbK	40	0	synth with cache (only 1: by case : a ; case : b ).	3.60475206375	1
Coq.ssr.ssrbool.andKb	40	0	synth with cache (only 1: by case : a ; case : b ).	3.56592702866	1
Coq.ssr.ssrbool.orbK	40	0	synth with cache (only 1: by case : a ; case : b ).	3.34760499001	1
Coq.ssr.ssrbool.orKb	40	0	synth with cache (only 1: by case : a ; case : b ).	3.04582810402	1
Coq.ssr.ssrbool.implybT	40	6	synth with cache (only 1: by case : b ).	1.20106101036	7
Coq.ssr.ssrbool.implybF	40	0	synth with cache (only 1: by case : b ).	3.51433801651	1
Coq.ssr.ssrbool.implyFb	40	0	synth with cache (only 1: by case : b ).	1.69628596306	1
Coq.ssr.ssrbool.implyTb	40	0	synth with cache (only 1: by case : b ).	1.93951511383	1
Coq.ssr.ssrbool.implybb	40	1	synth with cache (only 1: by case : b ).	1.51899600029	2
Coq.ssr.ssrbool.negb_imply	40	1	synth with cache (only 1: by case : a ; case : b ).	3.68298506737	2
Coq.ssr.ssrbool.implybE	40	0	synth with cache (only 1: by case : a ; case : b ).	4.65837192535	1
Coq.ssr.ssrbool.implyNb	40	0	synth with cache (only 1: by case : a ; case : b ).	4.52025389671	1
Coq.ssr.ssrbool.implybN	40	1	synth with cache (only 1: by case : a ; case : b ).	4.36118197441	2
Coq.ssr.ssrbool.implybNN	40	0	synth with cache (only 1: by case : a ; case : b ).	4.0756509304	1
Coq.ssr.ssrbool.implyb_idl	40	0	synth with cache (only 1: by case : a ; case : b  => // ->).	7.23804998398	1
Coq.ssr.ssrbool.implyb_idr	40	0	synth with cache (only 1: by case : a ; case : b  => // ->).	5.53410482407	1
Coq.ssr.ssrbool.implyb_id2l	40	0	synth with cache (only 1: by case : a ; case : b ; case : c  => // ->).	3.05673503876	1
Coq.ssr.ssrbool.addFb	40	0	synth with cache (only 1: by [  ]).	2.65627479553	1
Coq.ssr.ssrbool.addbF	40	0	synth with cache (only 1: by case).	2.47827792168	1
Coq.ssr.ssrbool.addbb	40	1	synth with cache (only 1: by case).	2.32772493362	2
Coq.ssr.ssrbool.addbC	40	0	synth with cache (only 1: by do 2!case).	1.35705399513	1
Coq.ssr.ssrbool.addbA	40	0	synth with cache (only 1: by do 3!case).	1.61845993996	1
Coq.ssr.ssrbool.addbCA	40	0	synth with cache (only 1: by do 3!case).	1.20841789246	1
Coq.ssr.ssrbool.addbAC	40	0	synth with cache (only 1: by do 3!case).	1.12561416626	1
Coq.ssr.ssrbool.addbACA	40	0	synth with cache (only 1: by do 4!case).	1.68211007118	1
Coq.ssr.ssrbool.andb_addl	40	0	synth with cache (only 1: by do 3!case).	1.019135952	1
Coq.ssr.ssrbool.andb_addr	40	0	synth with cache (only 1: by do 3!case).	1.01461410522	1
Coq.ssr.ssrbool.addKb	40	3	synth with cache (only 1: by do 2!case).	1.60212492943	4
Coq.ssr.ssrbool.addbK	40	0	synth with cache (only 1: by do 2!case).	1.55179786682	1
Coq.ssr.ssrbool.addIb	40	2	synth with cache (only 1: by do 3!case).	1.42293405533	3
Coq.ssr.ssrbool.addbI	40	0	synth with cache (only 1: by do 3!case).	1.19543504715	1
Coq.ssr.ssrbool.addTb	40	0	synth with cache (only 1: by [  ]).	1.68958306313	1
Coq.ssr.ssrbool.addbT	40	1	synth with cache (only 1: by case : b ).	1.67291212082	2
Coq.ssr.ssrbool.addbN	40	1	synth with cache (only 1: by case : a ; case : b ).	3.54079389572	2
Coq.ssr.ssrbool.addNb	40	1	synth with cache (only 1: by case : a ; case : b ).	2.84901189804	2
Coq.ssr.ssrbool.addbP	40
Coq.ssr.ssrbool.subrelUl	40
Coq.ssr.ssrbool.subrelUr	40
Coq.ssr.ssrbool.sub_refl	40	17	synth with cache (only 1: by [  ]).	15.0139429569	126
Coq.ssr.ssrbool.PredicateSimplification.mem_topred	40
Coq.ssr.ssrbool.PredicateSimplification.topredE	40	0	synth with cache (only 1: by case : pT pp ).	1.83731293678	1
Coq.ssr.ssrbool.PredicateSimplification.app_predE	40
Coq.ssr.ssrbool.PredicateSimplification.in_applicative	40
Coq.ssr.ssrbool.PredicateSimplification.in_collective	40
Coq.ssr.ssrbool.PredicateSimplification.in_simpl	40	0	synth with cache (only 1: by case : msp  => _ /= ->).	1.61317896843	1
Coq.ssr.ssrbool.PredicateSimplification.unfold_in	40	2	synth with cache (only 1: by rewrite -mem_topred).	1.15684509277	3
Coq.ssr.ssrbool.PredicateSimplification.simpl_predE	40	1	synth with cache (only 1: by [  ]).	1.47328519821	2
Coq.ssr.ssrbool.PredicateSimplification.mem_simpl	40	2	synth with cache (only 1: by [  ]).	2.17291808128	3
Coq.ssr.ssrbool.PredicateSimplification.mem_mem	40
Coq.ssr.ssrbool.qualifE	40	0	synth with cache (only 1: by [  ]).	1.97911906242	1
Coq.ssr.ssrbool.KeyPred.keyed_predE	40
Coq.ssr.ssrbool.KeyedQualifier.keyed_qualifier_suproof	40
Coq.ssr.ssrbool.all_tag_cond_dep	40
Coq.ssr.ssrbool.all_tag_cond	40
Coq.ssr.ssrbool.all_sig_cond_dep	40
Coq.ssr.ssrbool.all_sig_cond	40
Coq.ssr.ssrbool.RelationProperties.symmetric_from_pre	40
Coq.ssr.ssrbool.RelationProperties.PER.sym_left_transitive	40
Coq.ssr.ssrbool.RelationProperties.PER.sym_right_transitive	40
Coq.ssr.ssrbool.RelationProperties.equivalence_relP	40
Coq.ssr.ssrbool.rev_trans	40
Coq.ssr.ssrbool.LocalProperties.forE	40	0	synth with cache (only 1: by [  ]).	2.87946486473	1
Coq.ssr.ssrbool.LocalGlobal.in1W	40	0.12	synth with cache (only 1: move  =>f0 fP; only 1: by [  ]).	18.9877030849	60
Coq.ssr.ssrbool.LocalGlobal.in2W	40	1	synth with cache (only 1: by move  =>? ?).	2.60579586029	2
Coq.ssr.ssrbool.LocalGlobal.in3W	40	1	synth with cache (only 1: by move  =>? ?).	2.59484815598	2
Coq.ssr.ssrbool.LocalGlobal.in1T	40	14	synth with cache (only 1: auto).	13.2816381454	75
Coq.ssr.ssrbool.LocalGlobal.in2T	40	2	synth with cache (only 1: by move  =>? ?; auto).	2.17754888535	3
Coq.ssr.ssrbool.LocalGlobal.in3T	40	2	synth with cache (only 1: by move  =>? ?; auto).	2.20048284531	3
Coq.ssr.ssrbool.LocalGlobal.sub_in1	40	2	synth with cache (only 1: by move  =>? ?; auto).	2.49933004379	3
Coq.ssr.ssrbool.LocalGlobal.sub_in11	40	3	synth with cache (only 1: by move  =>? ?; auto).	3.78281593323	4
Coq.ssr.ssrbool.LocalGlobal.sub_in111	40	4	synth with cache (only 1: by move  =>? ?; auto).	6.28487300873	5
Coq.ssr.ssrbool.LocalGlobal.on1W	40	0	synth with cache (only 1: by move  =>? ?).	8.19714689255	1
Coq.ssr.ssrbool.LocalGlobal.on1lW	40	0	synth with cache (only 1: by move  =>? ?).	7.9687268734	1
Coq.ssr.ssrbool.LocalGlobal.on2W	40	0	synth with cache (only 1: by move  =>? ?).	8.03728580475	1
Coq.ssr.ssrbool.LocalGlobal.on1T	40	3	synth with cache (only 1: by move  =>? ?; auto).	8.13096094131	4
Coq.ssr.ssrbool.LocalGlobal.on1lT	40	1	synth with cache (only 1: by move  =>? ?; auto).	7.99125504494	2
Coq.ssr.ssrbool.LocalGlobal.on2T	40	1	synth with cache (only 1: by move  =>? ?; auto).	7.33821487427	2
Coq.ssr.ssrbool.LocalGlobal.subon1	40	1	synth with cache (only 1: by move  =>? ?; auto).	8.29989695549	2
Coq.ssr.ssrbool.LocalGlobal.subon1l	40	1	synth with cache (only 1: by move  =>? ?; auto).	9.39660406113	2
Coq.ssr.ssrbool.LocalGlobal.subon2	40	2	synth with cache (only 1: by move  =>? ?; auto).	10.7630228996	3
Coq.ssr.ssrbool.LocalGlobal.can_in_inj	40
Coq.ssr.ssrbool.LocalGlobal.canLR_in	40
Coq.ssr.ssrbool.LocalGlobal.canRL_in	40
Coq.ssr.ssrbool.LocalGlobal.on_can_inj	40	3	synth with cache (only 1: by move  =>fK x y /fK {+2}<- /fK {+2}<- ->).	10.6184580326	4
Coq.ssr.ssrbool.LocalGlobal.canLR_on	40	1	synth with cache (only 1: by move  =>fK D1y ->; rewrite fK).	8.70036005974	2
Coq.ssr.ssrbool.LocalGlobal.canRL_on	40	1	synth with cache (only 1: by move  =>fK D1x <-; rewrite fK).	8.34428501129	2
Coq.ssr.ssrbool.LocalGlobal.inW_bij	40
Coq.ssr.ssrbool.LocalGlobal.onW_bij	40	1	synth with cache (only 1: by case  =>g' fK g'K; exists g' => * ? *; auto).	12.5219290257	2
Coq.ssr.ssrbool.LocalGlobal.inT_bij	40	0	synth with cache (only 1: by case  =>g' fK g'K; exists g' => * ? *; auto).	13.0366771221	1
Coq.ssr.ssrbool.LocalGlobal.onT_bij	40	1	synth with cache (only 1: by case  =>g' fK g'K; exists g' => * ? *; auto).	12.8137969971	2
Coq.ssr.ssrbool.LocalGlobal.sub_in_bij	40
Coq.ssr.ssrbool.LocalGlobal.subon_bij	40	0	synth with cache (only 1: by move  =>subD [g' fK g'K]; exists g' => x; move /subD ; [ apply : fK  | apply : g'K  ]).	14.1131420135	1
Coq.ssr.ssrbool.sub_in2	40
Coq.ssr.ssrbool.sub_in3	40
Coq.ssr.ssrbool.sub_in12	40
Coq.ssr.ssrbool.sub_in21	40	2	synth with cache (only 1: by move  =>/= sub1 sub; apply : sub_in111 ).	8.34401416779	3
Coq.ssr.ssrbool.equivalence_relP_in	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory.monoW	40	10	synth with cache (only 1: by move  =>eq_fg eq_gh x; rewrite eq_fg).	11.484359026	21
Coq.ssr.ssrbool.MonoHomoMorphismTheory.mono2W	40	3	synth with cache (only 1: by move  =>hf x ax; rewrite hf).	6.06097102165	4
Coq.ssr.ssrbool.MonoHomoMorphismTheory.homoRL	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory.homoLR	40	1	synth with cache (only 1: by move  =>Hf x y /Hf; rewrite fgK).	8.56257510185	2
Coq.ssr.ssrbool.MonoHomoMorphismTheory.homo_mono	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory.monoLR	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory.monoRL	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory.can_mono	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.monoW_in	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.mono2W_in	40	7	synth with cache (only 1: by move  =>hf x ax; rewrite hf).	4.8459789753	8
Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.homoRL_in	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.homoLR_in	40	1	synth with cache (only 1: by move  =>Hf x y hx hy /Hf; rewrite fgK_on //; apply).	9.65912604332	2
Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.homo_mono_in	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.monoLR_in	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.monoRL_in	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.can_mono_in	40
Coq.ssr.ssrsetoid.compat_Reflexive	40	0	synth with cache (only 1: firstorder).	0.015606880188	1
Coq.ssr.ssrfun.unitE	40
Coq.ssr.ssrfun.ExtensionalEquality.frefl	40	2	synth with cache (only 1: constructor).	0.63910484314	3
Coq.ssr.ssrfun.ExtensionalEquality.fsym	40	2.10	synth with cache (only 1: intuition; only 1: by [  ]).	5.28044390678	63
Coq.ssr.ssrfun.ExtensionalEquality.ftrans	40
Coq.ssr.ssrfun.ExtensionalEquality.rrefl	40	2	synth with cache (only 1: by [  ]).	0.621490001678	3
Coq.ssr.ssrfun.Composition.eq_comp	40
Coq.ssr.ssrfun.all_tag	40
Coq.ssr.ssrfun.all_tag2	40	1	synth with cache (only 1: by move  =>fP; exists (fun x => tag (fP x)) => x; case : (fP x) ).	0.494169950485	2
Coq.ssr.ssrfun.Sig.svalP	40
Coq.ssr.ssrfun.Sig.s2valP	40	0	synth with cache (only 1: by case : u ).	1.67018795013	1
Coq.ssr.ssrfun.Sig.s2valP'	40	0	synth with cache (only 1: by case : u ).	1.68839216232	1
Coq.ssr.ssrfun.all_sig	40	0	synth with cache (only 1: by move  =>fP; exists (fun x => tag (fP x)) => x; case : (fP x) ).	1.76883196831	1
Coq.ssr.ssrfun.all_sig2	40	0	synth with cache (only 1: by case /all_tag =>f /all_pair []; exists f).	4.28840494156	1
Coq.ssr.ssrfun.Injections.can_pcan	40
Coq.ssr.ssrfun.Injections.pcan_inj	40
Coq.ssr.ssrfun.Injections.can_inj	40	2	synth with cache (only 1: by move  =>fK x y /(congr1 g); rewrite !fK => [[]]).	3.83425307274	3
Coq.ssr.ssrfun.Injections.canLR	40
Coq.ssr.ssrfun.Injections.canRL	40
Coq.ssr.ssrfun.Some_inj	40
Coq.ssr.ssrfun.of_voidK	40	0	synth with cache (only 1: by [  ]).	4.4287340641	1
Coq.ssr.ssrfun.esymK	40
Coq.ssr.ssrfun.etrans_id	40	0.13	synth with cache (only 1: subst; only 1: tauto).	18.8131549358	75
Coq.ssr.ssrfun.InjectionsTheory.inj_id	40	0	synth with cache (only 1: by [  ]).	2.99434781075	1
Coq.ssr.ssrfun.InjectionsTheory.inj_can_sym	40
Coq.ssr.ssrfun.InjectionsTheory.inj_comp	40
Coq.ssr.ssrfun.InjectionsTheory.inj_compr	40
Coq.ssr.ssrfun.InjectionsTheory.can_comp	40
Coq.ssr.ssrfun.InjectionsTheory.pcan_pcomp	40
Coq.ssr.ssrfun.InjectionsTheory.eq_inj	40
Coq.ssr.ssrfun.InjectionsTheory.eq_can	40
Coq.ssr.ssrfun.InjectionsTheory.inj_can_eq	40
Coq.ssr.ssrfun.Bijections.bij_inj	40
Coq.ssr.ssrfun.Bijections.bij_can_sym	40
Coq.ssr.ssrfun.Bijections.bij_can_eq	40
Coq.ssr.ssrfun.BijectionsTheory.eq_bij	40
Coq.ssr.ssrfun.BijectionsTheory.bij_comp	40
Coq.ssr.ssrfun.BijectionsTheory.bij_can_bij	40
Coq.ssr.ssrfun.Involutions.inv_inj	40
Coq.ssr.ssrfun.Involutions.inv_bij	40
Coq.ssr.ssrunder.Under_rel.Under_rel_from_rel	40	1	synth with cache (only 1: auto).	0.0136020183563	2
Coq.ssr.ssrunder.Under_rel.Under_relE	40	0	synth with cache (only 1: exact eq_refl).	0.0132019519806	1
Coq.ssr.ssrunder.Under_rel.over_rel	40	1	synth with cache (only 1: auto).	0.0133759975433	2
Coq.ssr.ssrunder.Under_rel.over_rel_done	40	1	synth with cache (only 1: auto).	0.0133190155029	2
Coq.ssr.ssrunder.Under_rel.under_rel_done	40	1	synth with cache (only 1: auto).	0.0134971141815	2
Coq.Vectors.VectorEq.BEQ.eqb_nat_eq	40
Coq.Vectors.VectorEq.BEQ.eqb_eq	40
Coq.Vectors.VectorEq.BEQ.eq_dec	40
Coq.Vectors.VectorEq.CAST.cast	40	0.12.0	synth with cache (only 1: intros x y z; only 1: simple destruct 1; only 1: auto).	2.96715283394	453
Coq.Vectors.VectorDef.BASES.trunc	40
Coq.Vectors.VectorSpec.eta	40
Coq.Vectors.VectorSpec.eq_nth_iff	40
Coq.Vectors.VectorSpec.nth_order_last	40
Coq.Vectors.VectorSpec.shiftin_nth	40
Coq.Vectors.VectorSpec.shiftin_last	40
Coq.Vectors.VectorSpec.shiftrepeat_nth	40
Coq.Vectors.VectorSpec.shiftrepeat_last	40	0.0.0.5	synth with cache (only 1: refine (@rectS _ _ _ _); only 1: intro n; only 1: firstorder; only 1: now simpl).	0.934828996658	80
Coq.Vectors.VectorSpec.const_nth	40	0.0.0.16.18	synth with cache (only 1: generalize dependent n; only 1: intros n v; only 1: induction v; only 1: firstorder; only 1: now simpl).	6.70484805107	1421
Coq.Vectors.VectorSpec.nth_map	40
Coq.Vectors.VectorSpec.nth_map2	40
Coq.Vectors.VectorSpec.fold_left_right_assoc_eq	40
Coq.Vectors.VectorSpec.to_list_of_list_opp	40
Coq.Vectors.VectorSpec.take_O	40	0	synth with cache (only 1: trivial).	0.0617198944092	1
Coq.Vectors.VectorSpec.take_idem	40
Coq.Vectors.VectorSpec.take_app	40
Coq.Vectors.VectorSpec.take_prf_irr	40
Coq.Vectors.VectorSpec.uncons_cons	40	3	synth with cache (only 1: trivial).	0.0650861263275	4
Coq.Vectors.VectorSpec.append_comm_cons	40	0.0	synth with cache (only 1: intros; only 1: trivial).	0.0976319313049	2
Coq.Vectors.VectorSpec.splitat_append	40
Coq.Vectors.VectorSpec.append_splitat	40
Coq.Vectors.Fin.of_nat_ext	40
Coq.Vectors.Fin.of_nat_to_nat_inv	40
Coq.Vectors.Fin.to_nat_of_nat	40
Coq.Vectors.Fin.to_nat_inj	40
Coq.Vectors.Fin.L_sanity	40
Coq.Vectors.Fin.L_R	40
Coq.Vectors.Fin.R_sanity	40
Coq.Vectors.Fin.depair_sanity	40
Coq.Vectors.Fin.eqb_nat_eq	40
Coq.Vectors.Fin.eqb_eq	40	0.11	synth with cache (only 1: fix odd_spec 1; only 1: trivial).	2.68146800995	271
Coq.Vectors.Fin.eq_dec	40
Coq.Vectors.Fin.cast	40	7	synth with cache (only 1: congruence).	0.352811098099	45
Coq.Setoids.Setoid.Seq_refl	40	0	synth with cache (only 1: firstorder).	0.0219430923462	1
Coq.Setoids.Setoid.Seq_sym	40	0	synth with cache (only 1: firstorder).	0.0217618942261	1
Coq.Setoids.Setoid.Seq_trans	40	0	synth with cache (only 1: firstorder).	0.0924351215363	1
Coq.Setoids.Setoid.gen_st	40	2.1.3	synth with cache (only 1: intros; only 1: red; only 1: apply _).	0.0551979541779	9
Coq.Bool.IfProp.Iftrue_inv	40	5.1.8	synth with cache (only 1: destruct 1; only 1: auto; only 1: discriminate).	0.722936868668	471
Coq.Bool.IfProp.Iffalse_inv	40	0.0.0.2.0.1	synth with cache (only 1: destruct 1; only 1: intros; only 1: case diff_true_false; only 1: tauto; only 1: intros; only 1: auto with bool).	0.0508778095245	9
Coq.Bool.IfProp.IfProp_true	40	0.28.3	synth with cache (only 1: intuition; only 1: inversion_clear H; only 1: auto with bool).	5.77659988403	7042
Coq.Bool.IfProp.IfProp_false	40	0.2.2	synth with cache (only 1: intros; only 1: inversion H; only 1: auto with bool).	0.0331110954285	7
Coq.Bool.IfProp.IfProp_or	40	0.0.5.3	synth with cache (only 1: intros; only 1: inversion H; only 1: tauto; only 1: tauto).	0.296113014221	75
Coq.Bool.IfProp.IfProp_sum	40
Coq.Bool.Zerob.zerob_true_intro	40	13.3	synth with cache (only 1: intros; only 1: now subst).	3.14101004601	377
Coq.Bool.Zerob.zerob_true_elim	40	0.0.0.0.2	synth with cache (only 1: destruct n; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy).	0.190712928772	7
Coq.Bool.Zerob.zerob_false_intro	40	0.0.0.4.4	synth with cache (only 1: destruct n; only 1: easy; only 1: intro H; only 1: simpl; only 1: trivial).	3.73031687737	282
Coq.Bool.Zerob.zerob_false_elim	40	3.4.0.1	synth with cache (only 1: destruct n; only 1: simpl; only 1: now try Nat.order'; only 1: easy).	3.59287285805	220
Coq.Bool.DecBool.ifdec_left	40	10.1.41	synth with cache (only 1: destruct H; only 1: auto; only 1: contradiction).	7.99220609665	17063
Coq.Bool.DecBool.ifdec_right	40	0.12.2.2	synth with cache (only 1: intros; only 1: case H; only 1: contradiction; only 1: auto).	1.62061405182	970
Coq.Bool.Sumbool.sumbool_of_bool	40	1.1.36.5	synth with cache (only 1: intros; only 1: destruct b; only 1: auto; only 1: auto).	1.54986691475	4242
Coq.Bool.Sumbool.bool_eq_rec	40	1.1.2	synth with cache (only 1: destruct b; only 1: auto; only 1: auto).	0.028477191925	7
Coq.Bool.Sumbool.bool_eq_ind	40	0.0.1	synth with cache (only 1: destruct b; only 1: auto; only 1: auto).	0.0277140140533	4
Coq.Bool.Sumbool.connectives.sumbool_and	40
Coq.Bool.Sumbool.connectives.sumbool_or	40	0.0.3.0.1	synth with cache (only 1: case H2; only 1: auto; only 1: case H1; only 1: auto; only 1: auto).	0.123954057693	29
Coq.Bool.Sumbool.connectives.sumbool_not	40	0.0.4	synth with cache (only 1: case H1; only 1: auto; only 1: auto).	0.118899822235	40
Coq.Bool.Sumbool.bool_of_sumbool	40
Coq.Bool.Bool.bool_dec	40
Coq.Bool.Bool.diff_true_false	40	3	synth with cache (only 1: discriminate).	0.0160758495331	4
Coq.Bool.Bool.diff_false_true	40	3	synth with cache (only 1: discriminate).	0.0158770084381	4
Coq.Bool.Bool.eq_true_false_abs	40	5.31	synth with cache (only 1: inversion 1; only 1: discriminate).	1.32987117767	2386
Coq.Bool.Bool.not_true_is_false	40	0.3.3	synth with cache (only 1: destr_bool; only 1: reflexivity || destruct H; only 1: exact eq_refl).	0.0286381244659	9
Coq.Bool.Bool.not_false_is_true	40	3.2	synth with cache (only 1: destr_bool; only 1: intuition).	0.0239419937134	7
Coq.Bool.Bool.not_true_iff_false	40	3.3.2.19	synth with cache (only 1: constructor; only 1: destr_bool; only 1: intuition; only 1: destr_bool).	2.68236303329	2685
Coq.Bool.Bool.not_false_iff_true	40	0.0.2	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0313510894775	5
Coq.Bool.Bool.leb_implb	40	4.8.2	synth with cache (only 1: intuition; only 1: destr_bool; only 1: destr_bool).	0.379027843475	259
Coq.Bool.Bool.eqb_subst	40	3.1	synth with cache (only 1: intuition; only 1: destr_bool).	0.0290801525116	6
Coq.Bool.Bool.eqb_reflx	40	6.1	synth with cache (only 1: intuition; only 1: destr_bool).	0.0254120826721	9
Coq.Bool.Bool.eqb_prop	40	8.0	synth with cache (only 1: intuition; only 1: destr_bool).	0.0366730690002	14
Coq.Bool.Bool.eqb_true_iff	40	0.0.0.0.4	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0716190338135	22
Coq.Bool.Bool.eqb_false_iff	40	0.0.0.0.4	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.100524902344	23
Coq.Bool.Bool.negb_orb	40	7.1	synth with cache (only 1: intuition; only 1: destr_bool).	0.0287508964539	10
Coq.Bool.Bool.negb_andb	40	6.1	synth with cache (only 1: intuition; only 1: destr_bool).	0.0287520885468	9
Coq.Bool.Bool.negb_involutive	40	7.1	synth with cache (only 1: intuition; only 1: destr_bool).	0.0260798931122	10
Coq.Bool.Bool.negb_involutive_reverse	40	7.1	synth with cache (only 1: intuition; only 1: destr_bool).	0.025918006897	10
Coq.Bool.Bool.negb_sym	40	5.0	synth with cache (only 1: intuition; only 1: destr_bool).	0.0287160873413	7
Coq.Bool.Bool.no_fixpoint_negb	40	6.1	synth with cache (only 1: intuition; only 1: destr_bool).	0.0278329849243	9
Coq.Bool.Bool.eqb_negb1	40	5.1	synth with cache (only 1: intuition; only 1: destr_bool).	0.0262670516968	8
Coq.Bool.Bool.eqb_negb2	40	1	synth with cache (only 1: destr_bool).	0.0163090229034	2
Coq.Bool.Bool.if_negb	40	5.1	synth with cache (only 1: intuition; only 1: destr_bool).	0.0283241271973	8
Coq.Bool.Bool.negb_true_iff	40	0.0.2	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0916049480438	17
Coq.Bool.Bool.negb_false_iff	40	0.0.1	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0554280281067	18
Coq.Bool.Bool.orb_true_iff	40	0.0.0.0.3	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0863010883331	18
Coq.Bool.Bool.orb_false_iff	40	0.0.0.0.2	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0781238079071	21
Coq.Bool.Bool.orb_true_elim	40	0.0.0.5.0	synth with cache (only 1: intuition; only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition).	0.0850350856781	10
Coq.Bool.Bool.orb_prop	40	0.0.0.3	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition).	0.0650379657745	16
Coq.Bool.Bool.orb_true_intro	40	2.2	synth with cache (only 1: destr_bool; only 1: intuition).	0.0615491867065	18
Coq.Bool.Bool.orb_false_intro	40	8.0	synth with cache (only 1: intuition; only 1: destr_bool).	0.0309820175171	10
Coq.Bool.Bool.orb_false_elim	40	0.4	synth with cache (only 1: destr_bool; only 1: intuition).	0.134686946869	51
Coq.Bool.Bool.orb_diag	40	1	synth with cache (only 1: destr_bool).	0.0166101455688	2
Coq.Bool.Bool.orb_true_r	40	1	synth with cache (only 1: intuition).	0.0166640281677	2
Coq.Bool.Bool.orb_true_l	40	1	synth with cache (only 1: destr_bool).	0.0165278911591	2
Coq.Bool.Bool.orb_false_r	40	1	synth with cache (only 1: destr_bool).	0.0168001651764	2
Coq.Bool.Bool.orb_false_l	40	1	synth with cache (only 1: destr_bool).	0.0165979862213	2
Coq.Bool.Bool.orb_negb_r	40	1	synth with cache (only 1: destr_bool).	0.0166530609131	2
Coq.Bool.Bool.orb_comm	40	2	synth with cache (only 1: destr_bool).	0.0318429470062	11
Coq.Bool.Bool.orb_assoc	40	2.1	synth with cache (only 1: intuition; only 1: destr_bool).	0.0340528488159	5
Coq.Bool.Bool.andb_true_iff	40	0.0.0.0.1	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0767087936401	17
Coq.Bool.Bool.andb_false_iff	40	0.0.0.0.1	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.127091884613	16
Coq.Bool.Bool.andb_true_eq	40	0.4	synth with cache (only 1: destr_bool; only 1: intuition).	0.387494087219	89
Coq.Bool.Bool.andb_false_intro1	40	0.3.0	synth with cache (only 1: intuition; only 1: subst; only 1: intuition).	0.0335619449615	6
Coq.Bool.Bool.andb_false_intro2	40	0.1.0	synth with cache (only 1: intuition; only 1: apply andb_false_iff; only 1: intuition).	0.0344250202179	4
Coq.Bool.Bool.andb_false_r	40	0.4.1	synth with cache (only 1: intuition; only 1: apply andb_false_iff; only 1: intuition).	0.0356481075287	8
Coq.Bool.Bool.andb_false_l	40	0	synth with cache (only 1: destr_bool).	0.0168361663818	1
Coq.Bool.Bool.andb_diag	40	0	synth with cache (only 1: destr_bool).	0.0166831016541	1
Coq.Bool.Bool.andb_true_r	40	0	synth with cache (only 1: destr_bool).	0.016813993454	1
Coq.Bool.Bool.andb_true_l	40	0	synth with cache (only 1: destr_bool).	0.0166549682617	1
Coq.Bool.Bool.andb_false_elim	40	0.0.1	synth with cache (only 1: destruct b1; only 1: auto; only 1: auto).	0.0679790973663	13
Coq.Bool.Bool.andb_negb_r	40	0	synth with cache (only 1: destr_bool).	0.016881942749	1
Coq.Bool.Bool.andb_comm	40	1	synth with cache (only 1: destr_bool).	0.0190739631653	2
Coq.Bool.Bool.andb_assoc	40	1	synth with cache (only 1: destr_bool).	0.0225999355316	2
Coq.Bool.Bool.andb_orb_distrib_r	40	1	synth with cache (only 1: destr_bool).	0.0228490829468	2
Coq.Bool.Bool.andb_orb_distrib_l	40	1	synth with cache (only 1: destr_bool).	0.0229678153992	2
Coq.Bool.Bool.orb_andb_distrib_r	40	1	synth with cache (only 1: destr_bool).	0.0224869251251	2
Coq.Bool.Bool.orb_andb_distrib_l	40	1	synth with cache (only 1: destr_bool).	0.0226228237152	2
Coq.Bool.Bool.absorption_andb	40	0	synth with cache (only 1: destr_bool).	0.0189130306244	1
Coq.Bool.Bool.absorption_orb	40	0	synth with cache (only 1: destr_bool).	0.0190060138702	1
Coq.Bool.Bool.xorb_false_r	40	0	synth with cache (only 1: destr_bool).	0.0579059123993	1
Coq.Bool.Bool.xorb_false_l	40	0	synth with cache (only 1: destr_bool).	0.0166819095612	1
Coq.Bool.Bool.xorb_true_r	40	0	synth with cache (only 1: destr_bool).	0.0170040130615	1
Coq.Bool.Bool.xorb_true_l	40	0	synth with cache (only 1: reflexivity).	0.0155639648438	1
Coq.Bool.Bool.xorb_nilpotent	40	1	synth with cache (only 1: destr_bool).	0.0170629024506	2
Coq.Bool.Bool.xorb_comm	40	0	synth with cache (only 1: destr_bool).	0.0188448429108	1
Coq.Bool.Bool.xorb_assoc_reverse	40	0	synth with cache (only 1: destr_bool).	0.0225369930267	1
Coq.Bool.Bool.xorb_eq	40	0	synth with cache (only 1: destr_bool).	0.0194299221039	1
Coq.Bool.Bool.xorb_move_l_r_1	40	5.0	synth with cache (only 1: intros; only 1: destr_bool).	0.0340120792389	7
Coq.Bool.Bool.xorb_move_l_r_2	40	0	synth with cache (only 1: destr_bool).	0.0236608982086	1
Coq.Bool.Bool.xorb_move_r_l_1	40	0	synth with cache (only 1: destr_bool).	0.0236079692841	1
Coq.Bool.Bool.xorb_move_r_l_2	40	0	synth with cache (only 1: destr_bool).	0.0233120918274	1
Coq.Bool.Bool.negb_xorb_l	40	0	synth with cache (only 1: destr_bool).	0.0194799900055	1
Coq.Bool.Bool.negb_xorb_r	40	0.0.0.0.1	synth with cache (only 1: destruct b, b'; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial).	0.0439360141754	6
Coq.Bool.Bool.xorb_negb_negb	40	1	synth with cache (only 1: destr_bool).	0.0200400352478	2
Coq.Bool.Bool.eq_iff_eq_true	40	0.0.0.0.3	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.116024971008	25
Coq.Bool.Bool.eq_true_iff_eq	40	2.2.3	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0795331001282	30
Coq.Bool.Bool.eq_true_negb_classical	40	0.0	synth with cache (only 1: destr_bool; only 1: intuition).	0.0251688957214	2
Coq.Bool.Bool.eq_true_not_negb	40	0.0	synth with cache (only 1: destr_bool; only 1: intuition).	0.0251929759979	2
Coq.Bool.Bool.absurd_eq_bool	40	1	synth with cache (only 1: intuition).	0.0179460048676	2
Coq.Bool.Bool.absurd_eq_true	40	1	synth with cache (only 1: intuition).	0.0174460411072	2
Coq.Bool.Bool.trans_eq_bool	40	0.6.0	synth with cache (only 1: intuition; only 1: subst; only 1: trivial).	0.0364038944244	9
Coq.Bool.Bool.Is_true_eq_true	40	1.3	synth with cache (only 1: destr_bool; only 1: intuition).	0.0492570400238	13
Coq.Bool.Bool.Is_true_eq_left	40	1	synth with cache (only 1: destr_bool).	0.0181479454041	2
Coq.Bool.Bool.Is_true_eq_right	40	0.0.0	synth with cache (only 1: intros; only 1: subst; only 1: auto with bool).	0.028520822525	3
Coq.Bool.Bool.eqb_refl	40	6.1	synth with cache (only 1: intuition; only 1: destr_bool).	0.0299499034882	9
Coq.Bool.Bool.eqb_eq	40	0.0.1	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.0712640285492	4
Coq.Bool.Bool.orb_prop_elim	40	0.0.0.0.2.0.0.4	synth with cache (only 1: destr_bool; only 1: constructor; only 1: trivial; only 1: intuition; only 1: constructor; only 1: trivial; only 1: constructor; only 1: trivial).	1.94671702385	563
Coq.Bool.Bool.orb_prop_intro	40	0.0	synth with cache (only 1: destr_bool; only 1: tauto).	0.0262491703033	2
Coq.Bool.Bool.andb_prop_intro	40	0.0.0.1	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto; only 1: tauto).	0.0411779880524	5
Coq.Bool.Bool.andb_prop_elim	40	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto; only 1: tauto; only 1: tauto).	0.0455830097198	5
Coq.Bool.Bool.eq_bool_prop_intro	40	0.0.3	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.11709523201	6
Coq.Bool.Bool.eq_bool_prop_elim	40	1.1.1	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.0347611904144	6
Coq.Bool.Bool.negb_prop_elim	40	0.0.3	synth with cache (only 1: destr_bool; only 1: auto; only 1: tauto).	0.0331881046295	6
Coq.Bool.Bool.negb_prop_intro	40	0.0	synth with cache (only 1: destr_bool; only 1: tauto).	0.0248870849609	2
Coq.Bool.Bool.negb_prop_classical	40	0.0	synth with cache (only 1: destr_bool; only 1: tauto).	0.0248501300812	2
Coq.Bool.Bool.negb_prop_involutive	40	0.0.0	synth with cache (only 1: destr_bool; only 1: tauto; only 1: auto).	0.0310139656067	3
Coq.Bool.Bool.andb_if	40	3	synth with cache (only 1: destr_bool).	0.0248210430145	4
Coq.Bool.Bool.negb_if	40	0	synth with cache (only 1: destr_bool).	0.0182230472565	1
Coq.Bool.Bool.andb_lazy_alt	40	0	synth with cache (only 1: destr_bool).	0.0195970535278	1
Coq.Bool.Bool.orb_lazy_alt	40	0	synth with cache (only 1: destr_bool).	0.0192210674286	1
Coq.Bool.Bool.reflect_iff	40	7.0.0.8	synth with cache (only 1: induction 1; only 1: intuition; only 1: intuition; only 1: destr_bool).	2.91440796852	1370
Coq.Bool.Bool.iff_reflect	40	5.2.3	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.464879989624	203
Coq.Bool.Bool.reflect_dec	40	0.0.6	synth with cache (only 1: induction 1; only 1: tauto; only 1: tauto).	0.11335515976	21
Coq.Bool.Bool.eqb_spec	40	1.2.2.0.6	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.262308120728	162
Coq.Bool.BoolEq.Bool_eq_dec.beq_eq_true	40	2.5.2	synth with cache (only 1: destr_bool; only 1: subst; only 1: intuition).	0.200088024139	72
Coq.Bool.BoolEq.Bool_eq_dec.beq_eq_not_false	40
Coq.Bool.BoolEq.Bool_eq_dec.beq_false_not_eq	40
Coq.Bool.BoolEq.Bool_eq_dec.exists_beq_eq	40
Coq.Bool.BoolEq.Bool_eq_dec.not_eq_false_beq	40
Coq.Bool.BoolEq.Bool_eq_dec.eq_dec	40
Coq.Lists.ListSet.first_definitions.set_In_dec	40
Coq.Lists.ListSet.first_definitions.set_mem_ind	40
Coq.Lists.ListSet.first_definitions.set_mem_ind2	40	6.0.2.2.0.0.3	synth with cache (only 1: simple induction x; only 1: auto; only 1: simpl; only 1: intros; only 1: elim (Aeq_dec a a0); only 1: auto; only 1: intuition).	21.732309103	2379
Coq.Lists.ListSet.first_definitions.set_mem_correct1	40
Coq.Lists.ListSet.first_definitions.set_mem_correct2	40	6.0.2.2.0.1.2	synth with cache (only 1: simple induction x; only 1: auto; only 1: simpl; only 1: intros a0 l; only 1: elim (Aeq_dec a a0); only 1: auto; only 1: intuition).	24.0465819836	2915
Coq.Lists.ListSet.first_definitions.set_mem_complete1	40
Coq.Lists.ListSet.first_definitions.set_mem_complete2	40
Coq.Lists.ListSet.first_definitions.set_add_intro1	40
Coq.Lists.ListSet.first_definitions.set_add_intro2	40
Coq.Lists.ListSet.first_definitions.set_add_intro	40	9	synth with cache (only 1: intuition).	0.835163116455	35
Coq.Lists.ListSet.first_definitions.set_add_elim	40
Coq.Lists.ListSet.first_definitions.set_add_elim2	40
Coq.Lists.ListSet.first_definitions.set_add_not_empty	40
Coq.Lists.ListSet.first_definitions.set_add_iff	40
Coq.Lists.ListSet.first_definitions.set_add_nodup	40
Coq.Lists.ListSet.first_definitions.set_remove_1	40
Coq.Lists.ListSet.first_definitions.set_remove_2	40
Coq.Lists.ListSet.first_definitions.set_remove_3	40
Coq.Lists.ListSet.first_definitions.set_remove_iff	40
Coq.Lists.ListSet.first_definitions.set_remove_nodup	40
Coq.Lists.ListSet.first_definitions.set_union_intro1	40
Coq.Lists.ListSet.first_definitions.set_union_intro2	40	4.1.5.3.1.1	synth with cache (only 1: simple induction y; only 1: simpl; only 1: destruct 1; only 1: intros a0 x0 Ha0; only 1: simpl; only 1: intuition).	10.3224420547	1506
Coq.Lists.ListSet.first_definitions.set_union_intro	40	0.0.6	synth with cache (only 1: intros a b x [H1| H2]; only 1: auto; only 1: auto with datatypes).	0.63946890831	41
Coq.Lists.ListSet.first_definitions.set_union_elim	40
Coq.Lists.ListSet.first_definitions.set_union_iff	40
Coq.Lists.ListSet.first_definitions.set_union_nodup	40
Coq.Lists.ListSet.first_definitions.set_union_emptyL	40
Coq.Lists.ListSet.first_definitions.set_union_emptyR	40	0.0	synth with cache (only 1: simpl; only 1: auto).	0.0825259685516	2
Coq.Lists.ListSet.first_definitions.set_inter_intro	40
Coq.Lists.ListSet.first_definitions.set_inter_elim1	40
Coq.Lists.ListSet.first_definitions.set_inter_elim2	40
Coq.Lists.ListSet.first_definitions.set_inter_elim	40	13	synth with cache (only 1: eauto).	6.89512705803	580
Coq.Lists.ListSet.first_definitions.set_inter_iff	40
Coq.Lists.ListSet.first_definitions.set_inter_nodup	40
Coq.Lists.ListSet.first_definitions.set_diff_intro	40
Coq.Lists.ListSet.first_definitions.set_diff_elim1	40
Coq.Lists.ListSet.first_definitions.set_diff_elim2	40
Coq.Lists.ListSet.first_definitions.set_diff_iff	40
Coq.Lists.ListSet.first_definitions.set_diff_nodup	40
Coq.Lists.ListSet.first_definitions.set_diff_trivial	40
Coq.Lists.ListDec.Dec_in_Prop.In_decidable	40
Coq.Lists.ListDec.Dec_in_Prop.incl_decidable	40
Coq.Lists.ListDec.Dec_in_Prop.NoDup_decidable	40
Coq.Lists.ListDec.Dec_in_Type.incl_dec	40
Coq.Lists.ListDec.Dec_in_Type.NoDup_dec	40
Coq.Lists.ListDec.uniquify_map	40
Coq.Lists.ListDec.uniquify	40
Coq.Lists.Streams.Streams.unfold_Stream	40	0.38	synth with cache (only 1: intros [? ?]; only 1: auto).	0.763454914093	1912
Coq.Lists.Streams.Streams.tl_nth_tl	40	1.3.1.13	synth with cache (only 1: induction n; only 1: auto; only 1: simpl; only 1: auto).	0.61436009407	529
Coq.Lists.Streams.Streams.Str_nth_tl_plus	40
Coq.Lists.Streams.Streams.Str_nth_plus	40
Coq.Lists.Streams.Streams.EqSt_reflex	40
Coq.Lists.Streams.Streams.sym_EqSt	40	1.5.8	synth with cache (only 1: destruct 1; only 1: coinduction ltac:(EqSt_reflex); only 1: auto).	0.537415027618	446
Coq.Lists.Streams.Streams.trans_EqSt	40
Coq.Lists.Streams.Streams.eqst_ntheq	40
Coq.Lists.Streams.Streams.ntheq_eqst	40
Coq.Lists.Streams.Streams.Stream_Properties.ForAll_Str_nth_tl	40
Coq.Lists.Streams.Streams.Stream_Properties.Co_Induction_ForAll.ForAll_coind	40	0.0.0	synth with cache (only 1: coinduction ltac:(EqSt_reflex); only 1: auto; only 1: auto).	0.0278630256653	3
Coq.Lists.Streams.Map.Str_nth_tl_map	40	0.1.0.0.0	synth with cache (only 1: simple induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0417249202728	6
Coq.Lists.Streams.Map.Str_nth_map	40	1.3.0.4	synth with cache (only 1: induction n; only 1: auto; only 1: intros s; only 1: apply IHn).	0.271594047546	133
Coq.Lists.Streams.Map.ForAll_map	40	0.10.9.0.9.8.24	synth with cache (only 1: constructor; only 1: destruct 1; only 1: let rec coinduction proof := cofix proof; intros; constructor; [ clear proof | try (apply proof; clear proof) ] in coinduction ltac:(ForAll_coind); only 1: auto; only 1: destruct 1; only 1: let rec coinduction proof := cofix proof; intros; constructor; [ clear proof | try (apply proof; clear proof) ] in coinduction ltac:(ForAll_coind); only 1: auto).	16.399119854	24879
Coq.Lists.Streams.Map.Exists_map	40
Coq.Lists.Streams.Zip.Str_nth_tl_zipWith	40	1.0.1.0.1	synth with cache (only 1: simple induction n; only 1: simpl; only 1: firstorder; only 1: simpl; only 1: auto).	0.0696179866791	20
Coq.Lists.Streams.Zip.Str_nth_zipWith	40	2.1.1	synth with cache (only 1: simple induction n; only 1: auto; only 1: firstorder).	0.0528981685638	19
Coq.Lists.List.Facts.nil_cons	40	7	synth with cache (only 1: congruence).	0.354509830475	49
Coq.Lists.List.Facts.destruct_list	40
Coq.Lists.List.Facts.hd_error_tl_repr	40
Coq.Lists.List.Facts.hd_error_some_nil	40	1.1.1.5	synth with cache (only 1: induction l as [| a tail]; only 1: intro H; only 1: firstorder  discriminate; only 1: firstorder  discriminate).	1.73714995384	170
Coq.Lists.List.Facts.length_zero_iff_nil	40
Coq.Lists.List.Facts.hd_error_nil	40	0	synth with cache (only 1: trivial).	0.0627229213715	1
Coq.Lists.List.Facts.hd_error_cons	40	0	synth with cache (only 1: trivial).	0.0578238964081	1
Coq.Lists.List.Facts.in_eq	40	0.1	synth with cache (only 1: intro n; only 1: firstorder).	0.0846819877625	3
Coq.Lists.List.Facts.in_cons	40	0.0.3	synth with cache (only 1: simpl; only 1: intros x y z; only 1: auto).	0.111924886703	6
Coq.Lists.List.Facts.not_in_cons	40	5	synth with cache (only 1: firstorder).	0.174515008926	17
Coq.Lists.List.Facts.in_nil	40	0.1	synth with cache (only 1: intro n; only 1: firstorder).	0.0792579650879	3
Coq.Lists.List.Facts.in_split	40
Coq.Lists.List.Facts.in_inv	40	0	synth with cache (only 1: auto).	0.0569009780884	1
Coq.Lists.List.Facts.in_dec	40
Coq.Lists.List.Facts.app_cons_not_nil	40
Coq.Lists.List.Facts.app_nil_l	40	0.0	synth with cache (only 1: simpl; only 1: reflexivity).	0.0757429599762	2
Coq.Lists.List.Facts.app_nil_r	40
Coq.Lists.List.Facts.app_nil_end	40	0.0.0.0.0.1	synth with cache (only 1: induction l; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: f_equal; only 1: auto).	0.186519145966	7
Coq.Lists.List.Facts.app_assoc	40	0.0.4.0.1.2	synth with cache (only 1: induction l; only 1: trivial; only 1: simpl; only 1: intros; only 1: f_equal; only 1: auto).	3.09604096413	239
Coq.Lists.List.Facts.app_assoc_reverse	40	1.0.0.0.0.0.0	synth with cache (only 1: intros l m n; only 1: induction l; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: f_equal; only 1: auto).	0.207711935043	8
Coq.Lists.List.Facts.app_comm_cons	40	0.0.0	synth with cache (only 1: intros l m n; only 1: simpl; only 1: f_equal).	0.102691173553	3
Coq.Lists.List.Facts.app_eq_nil	40	0.0.1.1	synth with cache (only 1: induction l as [| a tail]; only 1: intros; only 1: auto; only 1: firstorder  discriminate).	0.145184993744	6
Coq.Lists.List.Facts.app_eq_unit	40
Coq.Lists.List.Facts.app_inj_tail	40
Coq.Lists.List.Facts.app_length	40	2.2.1.0.10.5	synth with cache (only 1: intro n; only 1: induction n as [| n IH]; only 1: intro n; only 1: split; only 1: simpl; only 1: auto).	10.6818461418	1690
Coq.Lists.List.Facts.in_app_or	40
Coq.Lists.List.Facts.in_or_app	40	5.0.3.0.0.0	synth with cache (only 1: intros l m a; only 1: elim l; only 1: simpl; only 1: firstorder; only 1: simpl; only 1: firstorder).	10.0775010586	798
Coq.Lists.List.Facts.in_app_iff	40	5.0.3.0.0.0	synth with cache (only 1: intros l m a; only 1: elim l; only 1: simpl; only 1: firstorder; only 1: simpl; only 1: firstorder).	13.1089000702	1165
Coq.Lists.List.Facts.app_inv_head	40
Coq.Lists.List.Facts.app_inv_tail	40
Coq.Lists.List.Elts.nth_in_or_default	40
Coq.Lists.List.Elts.nth_S_cons	40	0.0	synth with cache (only 1: simpl; only 1: auto).	0.0785071849823	2
Coq.Lists.List.Elts.nth_default_eq	40
Coq.Lists.List.Elts.nth_In	40
Coq.Lists.List.Elts.In_nth	40
Coq.Lists.List.Elts.nth_overflow	40
Coq.Lists.List.Elts.nth_indep	40
Coq.Lists.List.Elts.app_nth1	40	2.1.0.4.2.2	synth with cache (only 1: induction l; only 1: inversion 1; only 1: destruct n; only 1: auto; only 1: simpl; only 1: auto with arith).	9.17506098747	936
Coq.Lists.List.Elts.app_nth2	40
Coq.Lists.List.Elts.nth_split	40
Coq.Lists.List.Elts.nth_error_In	40
Coq.Lists.List.Elts.In_nth_error	40
Coq.Lists.List.Elts.nth_error_None	40	0.9.10	synth with cache (only 1: revert n; only 1: fix even_spec 1; only 1: auto).	6.47986507416	1303
Coq.Lists.List.Elts.nth_error_Some	40
Coq.Lists.List.Elts.nth_error_split	40
Coq.Lists.List.Elts.nth_error_app1	40	2.1.0.4.0.5.5.9	synth with cache (only 1: revert n; only 1: induction l; only 1: inversion 1; only 1: simpl; only 1: intros [| n]; only 1: auto; only 1: simpl; only 1: auto with arith).	37.9663629532	5914
Coq.Lists.List.Elts.nth_error_app2	40
Coq.Lists.List.Elts.nth_error_nth	40
Coq.Lists.List.Elts.nth_error_nth'	40	1.1.0.3.3.3	synth with cache (only 1: induction l; only 1: inversion 1; only 1: intros [| n] d d'; only 1: auto; only 1: simpl; only 1: auto with arith).	9.40924787521	906
Coq.Lists.List.Elts.remove_In	40
Coq.Lists.List.Elts.app_removelast_last	40
Coq.Lists.List.Elts.exists_last	40
Coq.Lists.List.Elts.removelast_app	40
Coq.Lists.List.Elts.count_occ_In	40
Coq.Lists.List.Elts.count_occ_not_In	40
Coq.Lists.List.Elts.count_occ_nil	40	0	synth with cache (only 1: auto).	0.0524709224701	1
Coq.Lists.List.Elts.count_occ_inv_nil	40
Coq.Lists.List.Elts.count_occ_cons_eq	40	4.0.13.1	synth with cache (only 1: simpl; only 1: destruct eq_dec as [->| Hneq]; only 1: auto; only 1: intuition).	10.996669054	2035
Coq.Lists.List.Elts.count_occ_cons_neq	40	2.2.1	synth with cache (only 1: simpl; only 1: intro H; only 1: now destruct (eq_dec x y)).	0.11093211174	8
Coq.Lists.List.ListOps.rev_app_distr	40
Coq.Lists.List.ListOps.rev_unit	40
Coq.Lists.List.ListOps.rev_involutive	40	0.33	synth with cache (only 1: fix le_div2 1; only 1: auto).	26.3324809074	10840
Coq.Lists.List.ListOps.in_rev	40
Coq.Lists.List.ListOps.rev_length	40
Coq.Lists.List.ListOps.rev_nth	40
Coq.Lists.List.ListOps.rev_append_rev	40
Coq.Lists.List.ListOps.rev_alt	40
Coq.Lists.List.ListOps.Reverse_Induction.rev_list_ind	40	0.0.6.3	synth with cache (only 1: intros a H; only 1: induction l; only 1: auto; only 1: auto).	1.14388298988	157
Coq.Lists.List.ListOps.Reverse_Induction.rev_ind	40
Coq.Lists.List.ListOps.concat_nil	40	0	synth with cache (only 1: auto).	0.054141998291	1
Coq.Lists.List.ListOps.concat_cons	40	0	synth with cache (only 1: auto).	0.0543830394745	1
Coq.Lists.List.ListOps.concat_app	40
Coq.Lists.List.ListOps.list_eq_dec	40	6	synth with cache (only 1: decide equality).	0.156038045883	19
Coq.Lists.List.Map.map_cons	40	0	synth with cache (only 1: auto).	0.0552549362183	1
Coq.Lists.List.Map.in_map	40
Coq.Lists.List.Map.in_map_iff	40
Coq.Lists.List.Map.map_length	40	0.0.0.3	synth with cache (only 1: induction l; only 1: auto; only 1: simpl; only 1: auto).	0.129244089127	7
Coq.Lists.List.Map.map_nth	40
Coq.Lists.List.Map.map_nth_error	40
Coq.Lists.List.Map.map_app	40	0.5.2.0.0.0.8	synth with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: intro y; only 1: rewrite (IHl y); only 1: auto).	11.5659620762	1376
Coq.Lists.List.Map.map_rev	40
Coq.Lists.List.Map.map_eq_nil	40	5.0.4	synth with cache (only 1: induction l; only 1: auto; only 1: firstorder  discriminate).	0.908508062363	102
Coq.Lists.List.Map.count_occ_map	40
Coq.Lists.List.Map.in_flat_map	40
Coq.Lists.List.flat_map_concat_map	40	0.6.1.0.7.6	synth with cache (only 1: intros x y z; only 1: induction l; only 1: auto; only 1: simpl; only 1: rewrite IHl; only 1: auto).	15.1136100292	2285
Coq.Lists.List.concat_map	40
Coq.Lists.List.map_id	40	0.2.1.0.0.7	synth with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: f_equal; only 1: auto).	2.86350488663	259
Coq.Lists.List.map_map	40	0.3.0.0.5	synth with cache (only 1: induction l; only 1: auto; only 1: simpl; only 1: f_equal; only 1: auto).	2.43639206886	197
Coq.Lists.List.map_ext_in	40
Coq.Lists.List.ext_in_map	40
Coq.Lists.List.map_ext_in_iff	40
Coq.Lists.List.map_ext	40	0.2.4.1.0.2	synth with cache (only 1: induction l; only 1: auto; only 1: simpl; only 1: rewrite H by intuition; only 1: rewrite IHl; only 1: auto).	4.22665596008	536
Coq.Lists.List.Fold_Left_Recursor.fold_left_app	40	0.1.0.10	synth with cache (only 1: induction l as [| x l IH]; only 1: auto; only 1: simpl; only 1: auto).	0.969374895096	166
Coq.Lists.List.fold_left_length	40
Coq.Lists.List.fold_right_app	40
Coq.Lists.List.fold_left_rev_right	40
Coq.Lists.List.fold_symmetric	40
Coq.Lists.List.Bool.existsb_exists	40
Coq.Lists.List.Bool.existsb_nth	40
Coq.Lists.List.Bool.existsb_app	40
Coq.Lists.List.Bool.forallb_forall	40
Coq.Lists.List.Bool.forallb_app	40	0.0.5.0.0.0.2	synth with cache (only 1: induction l1; only 1: simpl; only 1: auto; only 1: simpl; only 1: case (f a); only 1: auto; only 1: auto).	6.69006419182	640
Coq.Lists.List.Bool.filter_In	40
Coq.Lists.List.Bool.filter_app	40
Coq.Lists.List.Bool.concat_filter_map	40
Coq.Lists.List.Bool.find_some	40
Coq.Lists.List.Bool.find_none	40
Coq.Lists.List.Bool.partition_cons1	40
Coq.Lists.List.Bool.partition_cons2	40	2.0	synth with cache (only 1: simpl; only 1: now intros -> ->).	0.0868389606476	4
Coq.Lists.List.Bool.partition_length	40
Coq.Lists.List.Bool.partition_inv_nil	40
Coq.Lists.List.Bool.elements_in_partition	40
Coq.Lists.List.Filtering.filter_map	40
Coq.Lists.List.Filtering.filter_ext_in	40
Coq.Lists.List.Filtering.ext_in_filter	40
Coq.Lists.List.Filtering.filter_ext_in_iff	40
Coq.Lists.List.Filtering.filter_ext	40	1.2.4.2	synth with cache (only 1: intros f g l H; only 1: rewrite filter_map; only 1: apply map_ext_in; only 1: auto).	2.13308501244	169
Coq.Lists.List.ListPairs.in_split_l	40
Coq.Lists.List.ListPairs.in_split_r	40
Coq.Lists.List.ListPairs.split_nth	40
Coq.Lists.List.ListPairs.split_length_l	40
Coq.Lists.List.ListPairs.split_length_r	40	0.1.2.2.0.0.0.2	synth with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: destruct a; only 1: destruct (split l); only 1: simpl; only 1: auto).	7.66246986389	777
Coq.Lists.List.ListPairs.split_combine	40
Coq.Lists.List.ListPairs.combine_split	40
Coq.Lists.List.ListPairs.in_combine_l	40
Coq.Lists.List.ListPairs.in_combine_r	40
Coq.Lists.List.ListPairs.combine_length	40
Coq.Lists.List.ListPairs.combine_nth	40
Coq.Lists.List.ListPairs.in_prod_aux	40	0.4.2.0.0.0.2	synth with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: firstorder; only 1: subst; only 1: auto).	6.47280502319	641
Coq.Lists.List.ListPairs.in_prod	40
Coq.Lists.List.ListPairs.in_prod_iff	40
Coq.Lists.List.ListPairs.prod_length	40
Coq.Lists.List.length_order.lel_refl	40	12	synth with cache (only 1: left).	0.204851865768	46
Coq.Lists.List.length_order.lel_trans	40	22.7.3	synth with cache (only 1: unfold lel; only 1: intro H; only 1: intuition Nat.order).	19.4280421734	4937
Coq.Lists.List.length_order.lel_cons_cons	40	5.1.2	synth with cache (only 1: unfold lel; only 1: simpl; only 1: auto with arith).	0.587588071823	55
Coq.Lists.List.length_order.lel_cons	40	0.1.2	synth with cache (only 1: unfold lel; only 1: simpl; only 1: auto).	0.118734121323	6
Coq.Lists.List.length_order.lel_tail	40	2.1.2	synth with cache (only 1: unfold lel; only 1: simpl; only 1: auto with arith).	0.119489908218	8
Coq.Lists.List.length_order.lel_nil	40	5.1.0.9.3	synth with cache (only 1: unfold lel; only 1: destruct l' as [| y l']; only 1: auto; only 1: simpl; only 1: now auto with arith).	10.6542541981	1748
Coq.Lists.List.SetIncl.incl_refl	40	1	synth with cache (only 1: auto).	0.0618088245392	2
Coq.Lists.List.SetIncl.incl_tl	40	6	synth with cache (only 1: intuition).	0.186732053757	21
Coq.Lists.List.SetIncl.incl_tran	40	1	synth with cache (only 1: auto).	0.0628180503845	2
Coq.Lists.List.SetIncl.incl_appl	40	2	synth with cache (only 1: auto with datatypes).	0.0695650577545	3
Coq.Lists.List.SetIncl.incl_appr	40	2	synth with cache (only 1: auto with datatypes).	0.0692520141602	3
Coq.Lists.List.SetIncl.incl_cons	40	9.12.6	synth with cache (only 1: induction l; only 1: firstorder  (subst; auto); only 1: firstorder).	15.8843488693	3851
Coq.Lists.List.SetIncl.incl_app	40	1.8	synth with cache (only 1: fix gcd_greatest 1; only 1: auto).	0.539777040482	51
Coq.Lists.List.Cutting.firstn_nil	40	0.0.0.0.10	synth with cache (only 1: destruct n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.773740053177	86
Coq.Lists.List.Cutting.firstn_cons	40	0.0	synth with cache (only 1: simpl; only 1: auto).	0.0925080776215	2
Coq.Lists.List.Cutting.firstn_all	40	0.4.0.0.0.14	synth with cache (only 1: induction l as [| x l IH]; only 1: simpl; only 1: auto; only 1: simpl; only 1: f_equal; only 1: auto).	3.42566585541	469
Coq.Lists.List.Cutting.firstn_all2	40
Coq.Lists.List.Cutting.firstn_O	40	0	synth with cache (only 1: auto).	0.0650160312653	1
Coq.Lists.List.Cutting.firstn_le_length	40	0.7.8.2	synth with cache (only 1: intro H; only 1: revert n; only 1: fix le_div2 1; only 1: auto).	15.1475150585	1783
Coq.Lists.List.Cutting.firstn_length_le	40
Coq.Lists.List.Cutting.firstn_app	40
Coq.Lists.List.Cutting.firstn_app_2	40
Coq.Lists.List.Cutting.firstn_firstn	40
Coq.Lists.List.Cutting.firstn_skipn_comm	40
Coq.Lists.List.Cutting.skipn_firstn_comm	40
Coq.Lists.List.Cutting.skipn_O	40	0	synth with cache (only 1: auto).	0.0596098899841	1
Coq.Lists.List.Cutting.skipn_nil	40	0.0.0.0.2.4	synth with cache (only 1: symmetry; only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.740111112595	55
Coq.Lists.List.Cutting.skipn_cons	40	0.0	synth with cache (only 1: simpl; only 1: auto).	0.0926280021667	2
Coq.Lists.List.Cutting.skipn_none	40	0.0.0.0.4	synth with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.200283050537	15
Coq.Lists.List.Cutting.skipn_all2	40	2.0.0.0.2.5.2.2	synth with cache (only 1: induction n as [| k iHk]; only 1: intro; only 1: now destruct l; only 1: destruct l as [| x xs]; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto with arith).	29.2642691135	3593
Coq.Lists.List.Cutting.firstn_skipn	40
Coq.Lists.List.Cutting.firstn_length	40
Coq.Lists.List.Cutting.skipn_length	40
Coq.Lists.List.Cutting.skipn_all	40	0.0.0.0.8	synth with cache (only 1: induction l as [| ? ? H]; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.629004001617	57
Coq.Lists.List.Cutting.skipn_app	40	0.0.0.0.2.2.1.2	synth with cache (only 1: induction n as [| k iHk]; only 1: auto; only 1: intros l1 l2; only 1: destruct l1 as [| x xs]; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	17.7057580948	1309
Coq.Lists.List.Cutting.firstn_skipn_rev	40
Coq.Lists.List.Cutting.firstn_rev	40
Coq.Lists.List.Cutting.skipn_rev	40
Coq.Lists.List.Cutting.removelast_firstn	40
Coq.Lists.List.Cutting.firstn_removelast	40
Coq.Lists.List.Combining.combine_nil	40	4	synth with cache (only 1: now intros []).	0.0718989372253	5
Coq.Lists.List.Combining.combine_firstn_l	40
Coq.Lists.List.Combining.combine_firstn_r	40
Coq.Lists.List.Combining.combine_firstn	40
Coq.Lists.List.Add.Add_app	40	0.11.6.0.131	synth with cache (only 1: induction l1 as [| x1 l1]; only 1: simpl; only 1: left; only 1: right; only 1: auto).	18.6018898487	21075
Coq.Lists.List.Add.Add_split	40
Coq.Lists.List.Add.Add_in	40	5.3.0.9	synth with cache (only 1: induction 1; only 1: simpl; only 1: intuition; only 1: firstorder).	33.4187271595	4385
Coq.Lists.List.Add.Add_length	40	0.0.0.0.14	synth with cache (only 1: induction 1; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	2.23332095146	358
Coq.Lists.List.Add.Add_inv	40
Coq.Lists.List.Add.incl_Add_inv	40
Coq.Lists.List.ReDun.NoDup_Add	40
Coq.Lists.List.ReDun.NoDup_remove	40
Coq.Lists.List.ReDun.NoDup_remove_1	40
Coq.Lists.List.ReDun.NoDup_remove_2	40	2.3	synth with cache (only 1: apply NoDup_Add; only 1: apply Add_app).	0.129145145416	14
Coq.Lists.List.ReDun.NoDup_cons_iff	40	2.0.2.2	synth with cache (only 1: split; only 1: inversion_clear 1; only 1: auto; only 1: now constructor).	0.237654924393	10
Coq.Lists.List.ReDun.nodup_fixed_point	40
Coq.Lists.List.ReDun.nodup_In	40
Coq.Lists.List.ReDun.NoDup_nodup	40
Coq.Lists.List.ReDun.nodup_inv	40
Coq.Lists.List.ReDun.NoDup_count_occ	40
Coq.Lists.List.ReDun.NoDup_count_occ'	40
Coq.Lists.List.ReDun.NoDup_nth_error	40
Coq.Lists.List.ReDun.NoDup_nth	40
Coq.Lists.List.ReDun.NoDup_incl_length	40
Coq.Lists.List.ReDun.NoDup_length_incl	40
Coq.Lists.List.NoDup_map_inv	40
Coq.Lists.List.NatSeq.seq_length	40	0.0.0.0.5.5	synth with cache (only 1: intro n; only 1: induction n as [| n IH]; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	3.25679802895	477
Coq.Lists.List.NatSeq.seq_nth	40
Coq.Lists.List.NatSeq.seq_shift	40
Coq.Lists.List.NatSeq.in_seq	40
Coq.Lists.List.NatSeq.seq_NoDup	40
Coq.Lists.List.NatSeq.seq_app	40
Coq.Lists.List.Exists_Forall.One_predicate.Exists_exists	40
Coq.Lists.List.Exists_Forall.One_predicate.Exists_nil	40	2.3	synth with cache (only 1: intuition; only 1: inversion_clear H).	0.204402923584	19
Coq.Lists.List.Exists_Forall.One_predicate.Exists_cons	40	6.0.0.19.2	synth with cache (only 1: split; only 1: inversion_clear 1; only 1: auto; only 1: auto; only 1: intuition).	15.9554550648	3996
Coq.Lists.List.Exists_Forall.One_predicate.Exists_dec	40
Coq.Lists.List.Exists_Forall.One_predicate.Forall_forall	40
Coq.Lists.List.Exists_Forall.One_predicate.Forall_inv	40	0.2	synth with cache (only 1: inversion 1; only 1: auto).	0.110052108765	4
Coq.Lists.List.Exists_Forall.One_predicate.Forall_rect	40
Coq.Lists.List.Exists_Forall.One_predicate.Forall_dec	40
Coq.Lists.List.Exists_Forall.Forall_inv_tail	40	0.3.5	synth with cache (only 1: intros a b l H; only 1: inversion H; only 1: auto).	0.327273130417	40
Coq.Lists.List.Exists_Forall.Exists_impl	40	9.0.5.6.13	synth with cache (only 1: intros f g H l; only 1: induction 1; only 1: constructor; only 1: auto; only 1: now constructor).	30.7551209927	8519
Coq.Lists.List.Exists_Forall.Forall_Exists_neg	40
Coq.Lists.List.Exists_Forall.Exists_Forall_neg	40
Coq.Lists.List.Exists_Forall.neg_Forall_Exists_neg	40
Coq.Lists.List.Exists_Forall.Forall_Exists_dec	40
Coq.Lists.List.Exists_Forall.Forall_impl	40	0.0.8.3.3.2	synth with cache (only 1: intros P Q H xs H0; only 1: induction H0; only 1: constructor; only 1: right; only 1: auto; only 1: auto).	7.04169678688	1266
Coq.Lists.List.Forall2.Forall2_refl	40	0	synth with cache (only 1: auto).	0.0711400508881	1
Coq.Lists.List.Forall2.Forall2_app_inv_l	40
Coq.Lists.List.Forall2.Forall2_app_inv_r	40
Coq.Lists.List.Forall2.Forall2_app	40
Coq.Lists.List.ForallPairs.ForallOrdPairs_In	40
Coq.Lists.List.ForallPairs.ForallPairs_ForallOrdPairs	40
Coq.Lists.List.ForallPairs.ForallOrdPairs_ForallPairs	40
Coq.Lists.List.Repeat.repeat_length	40	0.1.0.14	synth with cache (only 1: induction n as [| n IH]; only 1: auto; only 1: simpl; only 1: auto).	0.926554918289	155
Coq.Lists.List.Repeat.repeat_spec	40
Coq.Lists.SetoidPermutation.Permutation.Equivalence_instance_0	40
Coq.Lists.SetoidPermutation.Permutation.PermutationA_cons	40	0.4	synth with cache (only 1: repeat red; only 1: auto).	0.0823628902435	6
Coq.Lists.SetoidPermutation.Permutation.PermutationA_app_head	40	4.1.2.0.12	synth with cache (only 1: induction l; only 1: auto; only 1: intro; only 1: simpl; only 1: intuition).	24.8016130924	2416
Coq.Lists.SetoidPermutation.Permutation.PermutationA_app	40
Coq.Lists.SetoidPermutation.Permutation.PermutationA_app_tail	40
Coq.Lists.SetoidPermutation.Permutation.PermutationA_cons_append	40	0.10.1.6.1.30	synth with cache (only 1: induction l; only 1: simpl; only 1: intuition; only 1: simpl; only 1: rewrite <- IHl; only 1: auto).	24.4337639809	4074
Coq.Lists.SetoidPermutation.Permutation.PermutationA_app_comm	40
Coq.Lists.SetoidPermutation.Permutation.PermutationA_cons_app	40
Coq.Lists.SetoidPermutation.Permutation.PermutationA_middle	40	3	synth with cache (only 1: now rewrite app_comm_cons, (PermutationA_cons_append l₁ x), <- app_assoc).	0.183473110199	4
Coq.Lists.SetoidPermutation.Permutation.PermutationA_equivlistA	40
Coq.Lists.SetoidPermutation.Permutation.NoDupA_equivlistA_PermutationA	40
Coq.Lists.SetoidPermutation.Permutation.Permutation_eqlistA_commute	40
Coq.Lists.SetoidPermutation.Permutation.PermutationA_decompose	40
Coq.Lists.SetoidPermutation.Permutation.Permutation_PermutationA	40	3.0.3.0.1	synth with cache (only 1: induction 1; only 1: auto; only 1: intuition; only 1: auto; only 1: eauto).	1.91432309151	161
Coq.Lists.SetoidPermutation.Permutation.eqlistA_PermutationA	40	0.0.1	synth with cache (only 1: induction 1; only 1: auto; only 1: auto).	0.11788892746	4
Coq.Lists.SetoidPermutation.Permutation.NoDupA_equivlistA_decompose	40
Coq.Lists.SetoidPermutation.Permutation.PermutationA_preserves_NoDupA	40
Coq.Lists.StreamMemo.MemoFunction.memo_get_correct	40
Coq.Lists.StreamMemo.MemoFunction.imemo_get_correct	40
Coq.Lists.StreamMemo.DependentMemoFunction.dmemo_get_correct	40
Coq.Lists.StreamMemo.DependentMemoFunction.dimemo_get_correct	40
Coq.Lists.SetoidList.Type_with_equality.InA_altdef	40	0.0.7.0.0.7.2	synth with cache (only 1: split; only 1: induction 1; only 1: auto; only 1: auto; only 1: induction 1; only 1: auto; only 1: auto).	33.8075180054	4231
Coq.Lists.SetoidList.Type_with_equality.InA_cons	40	6.0.0.6.1	synth with cache (only 1: split; only 1: inversion 1; only 1: auto; only 1: auto; only 1: intuition).	6.7480609417	800
Coq.Lists.SetoidList.Type_with_equality.InA_nil	40	3.5	synth with cache (only 1: intuition; only 1: inversion_clear H).	0.26053404808	29
Coq.Lists.SetoidList.Type_with_equality.InA_alt	40
Coq.Lists.SetoidList.Type_with_equality.NoDupA_altdef	40
Coq.Lists.SetoidList.Type_with_equality.incl_nil	40	7	synth with cache (only 1: inversion 1).	0.0814180374146	11
Coq.Lists.SetoidList.Type_with_equality.eqlistA_altdef	40	0.0.4.0.1.4.0	synth with cache (only 1: split; only 1: induction 1; only 1: auto; only 1: auto; only 1: induction 1; only 1: auto; only 1: auto).	8.01688289642	748
Coq.Lists.SetoidList.Type_with_equality.equivlist_equiv	40	6	synth with cache (only 1: firstorder).	0.456849098206	36
Coq.Lists.SetoidList.Type_with_equality.eqlistA_equiv	40
Coq.Lists.SetoidList.Type_with_equality.eqlistA_equivlistA	40
Coq.Lists.SetoidList.Type_with_equality.InA_compat	40
Coq.Lists.SetoidList.Type_with_equality.InA_eqA	40	0.6.1.9.2	synth with cache (only 1: intros x y z H; only 1: induction 1; only 1: constructor; only 1: firstorder; only 1: auto).	5.92713594437	1050
Coq.Lists.SetoidList.Type_with_equality.In_InA	40	0.2.2.1.9	synth with cache (only 1: induction l; only 1: firstorder; only 1: firstorder; only 1: subst; only 1: auto).	4.35827898979	409
Coq.Lists.SetoidList.Type_with_equality.InA_split	40
Coq.Lists.SetoidList.Type_with_equality.InA_app	40
Coq.Lists.SetoidList.Type_with_equality.InA_app_iff	40
Coq.Lists.SetoidList.Type_with_equality.InA_rev	40
Coq.Lists.SetoidList.Type_with_equality.InA_singleton	40	0.8.7	synth with cache (only 1: intuition; only 1: invlist InA; only 1: auto).	4.36695504189	456
Coq.Lists.SetoidList.Type_with_equality.InA_double_head	40	0.3.11.2	synth with cache (only 1: split; only 1: do 2 rewrite InA_alt; only 1: firstorder; only 1: auto).	4.60154819489	740
Coq.Lists.SetoidList.Type_with_equality.InA_permute_heads	40	4.12	synth with cache (only 1: rewrite !InA_cons; only 1: intuition).	7.03119087219	531
Coq.Lists.SetoidList.Type_with_equality.InA_app_idem	40
Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_app	40
Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_rev	40
Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_split	40
Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_swap	40
Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_singleton	40	0.2.7.3	synth with cache (only 1: constructor; only 1: intro; only 1: invlist InA; only 1: constructor).	2.44844388962	192
Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_cons_proper	40
Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_app_proper	40
Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_cons_nil	40
Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_nil_eq	40
Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_double_head	40	0.2.2.4	synth with cache (only 1: constructor; only 1: rewrite !InA_cons; only 1: tauto; only 1: auto).	0.545802116394	49
Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_permute_heads	40	3.2.3.2.8	synth with cache (only 1: constructor; only 1: rewrite !InA_cons; only 1: tauto; only 1: rewrite !InA_cons; only 1: tauto).	7.95835804939	604
Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_app_idem	40	0.4.3.4.2	synth with cache (only 1: constructor; only 1: rewrite InA_app_iff; only 1: tauto; only 1: rewrite InA_app_iff; only 1: auto).	7.38234210014	663
Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_NoDupA_split	40
Coq.Lists.SetoidList.Type_with_equality.Fold.fold_right_eqlistA	40
Coq.Lists.SetoidList.Type_with_equality.Fold.Fold_With_Restriction.ForallOrdPairs_inclA	40
Coq.Lists.SetoidList.Type_with_equality.Fold.Fold_With_Restriction.fold_right_commutes_restr	40
Coq.Lists.SetoidList.Type_with_equality.Fold.Fold_With_Restriction.fold_right_equivlistA_restr	40
Coq.Lists.SetoidList.Type_with_equality.Fold.Fold_With_Restriction.fold_right_add_restr	40
Coq.Lists.SetoidList.Type_with_equality.Fold.fold_right_commutes	40
Coq.Lists.SetoidList.Type_with_equality.Fold.fold_right_equivlistA	40
Coq.Lists.SetoidList.Type_with_equality.Fold.fold_right_add	40
Coq.Lists.SetoidList.Type_with_equality.Fold2.fold_right_eqlistA2	40
Coq.Lists.SetoidList.Type_with_equality.Fold2.Fold2_With_Restriction.fold_right_commutes_restr2	40
Coq.Lists.SetoidList.Type_with_equality.Fold2.Fold2_With_Restriction.fold_right_equivlistA_restr2	40
Coq.Lists.SetoidList.Type_with_equality.Fold2.Fold2_With_Restriction.fold_right_add_restr2	40
Coq.Lists.SetoidList.Type_with_equality.Fold2.fold_right_commutes2	40
Coq.Lists.SetoidList.Type_with_equality.Fold2.fold_right_equivlistA2	40
Coq.Lists.SetoidList.Type_with_equality.Fold2.fold_right_add2	40
Coq.Lists.SetoidList.Type_with_equality.Remove.InA_dec	40
Coq.Lists.SetoidList.Type_with_equality.Remove.removeA_filter	40
Coq.Lists.SetoidList.Type_with_equality.Remove.removeA_InA	40
Coq.Lists.SetoidList.Type_with_equality.Remove.removeA_NoDupA	40
Coq.Lists.SetoidList.Type_with_equality.Remove.removeA_equivlistA	40
Coq.Lists.SetoidList.Type_with_equality.InfA_ltA	40	7.0.15.7	synth with cache (only 1: intros x y z H; only 1: destruct 1; only 1: auto; only 1: eauto).	26.8901939392	3751
Coq.Lists.SetoidList.Type_with_equality.InfA_compat	40
Coq.Lists.SetoidList.Type_with_equality.InfA_eqA	40
Coq.Lists.SetoidList.Type_with_equality.SortA_InfA_InA	40
Coq.Lists.SetoidList.Type_with_equality.In_InfA	40	0.1.0.2	synth with cache (only 1: destruct l; only 1: auto; only 1: simpl; only 1: auto).	0.141067028046	7
Coq.Lists.SetoidList.Type_with_equality.InA_InfA	40	0.0.2	synth with cache (only 1: simple induction l; only 1: auto; only 1: auto).	0.113858938217	5
Coq.Lists.SetoidList.Type_with_equality.InfA_alt	40
Coq.Lists.SetoidList.Type_with_equality.InfA_app	40	0.1.0.14.2	synth with cache (only 1: intros; only 1: inversion H; only 1: auto; only 1: simpl; only 1: auto).	4.61974000931	601
Coq.Lists.SetoidList.Type_with_equality.SortA_app	40
Coq.Lists.SetoidList.Type_with_equality.SortA_NoDupA	40
Coq.Lists.SetoidList.Type_with_equality.EqlistA.eqlistA_length	40	0.1.0.0.4	synth with cache (only 1: induction 1; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.17298078537	10
Coq.Lists.SetoidList.Type_with_equality.EqlistA.app_eqlistA_compat	40	0.1.0.7.10	synth with cache (only 1: repeat red; only 1: induction 1; only 1: auto; only 1: simpl; only 1: auto).	9.89919900894	817
Coq.Lists.SetoidList.Type_with_equality.EqlistA.eqlistA_app	40	0.1.0.1	synth with cache (only 1: induction 1; only 1: auto; only 1: simpl; only 1: auto).	0.141072034836	6
Coq.Lists.SetoidList.Type_with_equality.EqlistA.eqlistA_rev_app	40
Coq.Lists.SetoidList.Type_with_equality.EqlistA.rev_eqlistA_compat	40
Coq.Lists.SetoidList.Type_with_equality.EqlistA.eqlistA_rev	40	0.0.6.1.0.3	synth with cache (only 1: induction 1; only 1: auto; only 1: simpl; only 1: apply eqlistA_rev_app; only 1: auto; only 1: auto).	4.27210712433	662
Coq.Lists.SetoidList.Type_with_equality.EqlistA.SortA_equivlistA_eqlistA	40
Coq.Lists.SetoidList.Type_with_equality.Filter.filter_sort	40
Coq.Lists.SetoidList.Type_with_equality.Filter.filter_InA	40
Coq.Lists.SetoidList.Type_with_equality.Filter.filter_split	40
Coq.Lists.SetoidList.Find.findA_NoDupA	40
Coq.NArith.BinNat.N.eq_dec	40	5.0	synth with cache (only 1: decide equality; only 1: decide equality).	0.185442209244	14
Coq.NArith.BinNat.N.discr	40
Coq.NArith.BinNat.N.peano_rect_base	40	0	synth with cache (only 1: trivial).	0.0593349933624	1
Coq.NArith.BinNat.N.peano_rect_succ	40
Coq.NArith.BinNat.N.peano_rec_base	40	0	synth with cache (only 1: reflexivity).	0.0572888851166	1
Coq.NArith.BinNat.N.peano_rec_succ	40	0.0.0.0.1	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite Pos.peano_rect_succ).	0.17329287529	6
Coq.NArith.BinNat.N.bi_induction	40	2.1.0.17.1	synth with cache (only 1: intros A A_wd A0 AS n; only 1: apply Pos.peano_ind; only 1: auto; only 1: intros; only 1: now apply -> AS).	33.265827179	5923
Coq.NArith.BinNat.N.recursion_wd	40
Coq.NArith.BinNat.N.recursion_0	40	0	synth with cache (only 1: firstorder).	0.0530269145966	1
Coq.NArith.BinNat.N.recursion_succ	40
Coq.NArith.BinNat.N.one_succ	40	0.0	synth with cache (only 1: simpl; only 1: trivial).	0.0865449905396	2
Coq.NArith.BinNat.N.two_succ	40	0	synth with cache (only 1: trivial).	0.0581669807434	1
Coq.NArith.BinNat.N.pred_0	40	0	synth with cache (only 1: trivial).	0.0573649406433	1
Coq.NArith.BinNat.N.pos_pred_spec	40	0.0	synth with cache (only 1: simpl; only 1: auto).	0.0835449695587	2
Coq.NArith.BinNat.N.succ_pos_spec	40	0.0.0.0.2	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	0.787479162216	7
Coq.NArith.BinNat.N.pos_pred_succ	40
Coq.NArith.BinNat.N.succ_pos_pred	40
Coq.NArith.BinNat.N.pred_succ	40	5.0.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: apply Pos.pred_N_succ).	0.590040922165	30
Coq.NArith.BinNat.N.pred_sub	40	1.1.1.0.0	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now destruct p).	0.171934843063	8
Coq.NArith.BinNat.N.succ_0_discr	40	0.0.2.4	synth with cache (only 1: destruct n; only 1: intro H; only 1: destr_eq H; only 1: discriminate).	0.194304943085	20
Coq.NArith.BinNat.N.add_0_l	40	0	synth with cache (only 1: auto).	0.056321144104	1
Coq.NArith.BinNat.N.add_succ_l	40
Coq.NArith.BinNat.N.sub_0_r	40	1	synth with cache (only 1: now destruct n).	0.0562510490417	2
Coq.NArith.BinNat.N.sub_succ_r	40
Coq.NArith.BinNat.N.mul_0_l	40	0	synth with cache (only 1: now destruct n).	0.0569789409637	1
Coq.NArith.BinNat.N.mul_succ_l	40
Coq.NArith.BinNat.N.eqb_eq	40
Coq.NArith.BinNat.N.ltb_lt	40	12.1.2	synth with cache (only 1: revert m; only 1: fix even_spec 1; only 1: trivial).	17.2765290737	2439
Coq.NArith.BinNat.N.leb_le	40	13.1.4	synth with cache (only 1: revert m; only 1: fix even_spec 1; only 1: trivial).	24.5798051357	3753
Coq.NArith.BinNat.N.compare_eq_iff	40
Coq.NArith.BinNat.N.compare_lt_iff	40	0.2.4.0	synth with cache (only 1: revert m; only 1: intro m; only 1: unfold ltb, lt; only 1: now split).	1.66025590897	120
Coq.NArith.BinNat.N.compare_le_iff	40	5.0	synth with cache (only 1: revert m; only 1: now split).	1.07236599922	82
Coq.NArith.BinNat.N.compare_antisym	40
Coq.NArith.BinNat.N.min_l	40
Coq.NArith.BinNat.N.min_r	40
Coq.NArith.BinNat.N.max_l	40
Coq.NArith.BinNat.N.max_r	40	1.0.0.3.2	synth with cache (only 1: unfold max, le; only 1: case compare; only 1: trivial; only 1: trivial; only 1: now destruct 1).	2.3738951683	143
Coq.NArith.BinNat.N.lt_succ_r	40
Coq.NArith.BinNat.N.double_spec	40	2	synth with cache (only 1: now destruct n as [| [p| p| ]]).	0.223453998566	3
Coq.NArith.BinNat.N.succ_double_spec	40	3	synth with cache (only 1: now destruct n).	0.137416124344	4
Coq.NArith.BinNat.N.double_add	40	0.0.1.0.1.0.1.4	synth with cache (only 1: destruct n, m; only 1: now nzsimpl; only 1: unfold succ, add; only 1: trivial; only 1: unfold succ, add; only 1: trivial; only 1: unfold succ, add; only 1: auto).	19.1866049767	1206
Coq.NArith.BinNat.N.succ_double_add	40	1	synth with cache (only 1: now destruct n, m).	1.35324406624	59
Coq.NArith.BinNat.N.double_mul	40	5	synth with cache (only 1: now destruct n, m).	2.94680500031	122
Coq.NArith.BinNat.N.succ_double_mul	40
Coq.NArith.BinNat.N.div2_double	40	0.0.1	synth with cache (only 1: destruct n; only 1: trivial; only 1: trivial).	0.381836891174	4
Coq.NArith.BinNat.N.div2_succ_double	40	1	synth with cache (only 1: now destruct n).	0.0686120986938	2
Coq.NArith.BinNat.N.double_inj	40
Coq.NArith.BinNat.N.succ_double_inj	40
Coq.NArith.BinNat.N.succ_double_lt	40
Coq.NArith.BinNat.N.double_lt_mono	40	0.0.0.0.0.0.0.0.2	synth with cache (only 1: destruct n as [| n], m as [| m]; only 1: intros H; only 1: easy; only 1: intro H; only 1: easy; only 1: intro H; only 1: easy; only 1: intro H; only 1: auto).	4.39654994011	182
Coq.NArith.BinNat.N.double_le_mono	40	0.0.0.0.0.0.0.0.2	synth with cache (only 1: destruct n as [| n], m as [| m]; only 1: intros H; only 1: auto; only 1: intro H; only 1: easy; only 1: intro H; only 1: easy; only 1: intro H; only 1: auto).	5.01261711121	202
Coq.NArith.BinNat.N.succ_double_lt_mono	40	0.0.0.0.0.0.0.0.1	synth with cache (only 1: destruct n as [| n], m as [| m]; only 1: intros H; only 1: easy; only 1: intro H; only 1: easy; only 1: intros H; only 1: easy; only 1: intro H; only 1: auto).	0.405062198639	25
Coq.NArith.BinNat.N.succ_double_le_mono	40	0.0.0.0.0.0.0.0.2	synth with cache (only 1: destruct n as [| n], m as [| m]; only 1: intros H; only 1: easy; only 1: intro H; only 1: easy; only 1: intro H; only 1: easy; only 1: intro H; only 1: auto).	4.36509895325	195
Coq.NArith.BinNat.N.compare_0_r	40	0.0.2.0	synth with cache (only 1: intro H; only 1: apply le_succ_l in H; only 1: apply le_succ_l in H; only 1: false_hyp H nlt_0_r).	0.224883079529	16
Coq.NArith.BinNat.N.pow_0_r	40	0.3	synth with cache (only 1: simpl; only 1: trivial).	0.108675003052	5
Coq.NArith.BinNat.N.pow_succ_r	40
Coq.NArith.BinNat.N.pow_neg_r	40
Coq.NArith.BinNat.N.square_spec	40
Coq.NArith.BinNat.N.size_log2	40
Coq.NArith.BinNat.N.size_gt	40
Coq.NArith.BinNat.N.size_le	40
Coq.NArith.BinNat.N.log2_spec	40
Coq.NArith.BinNat.N.log2_nonpos	40	5	synth with cache (only 1: now destruct n).	0.643867015839	54
Coq.NArith.BinNat.N.even_spec	40
Coq.NArith.BinNat.N.odd_spec	40
Coq.NArith.BinNat.N.pos_div_eucl_spec	40
Coq.NArith.BinNat.N.div_eucl_spec	40
Coq.NArith.BinNat.N.div_mod'	40
Coq.NArith.BinNat.N.div_mod	40	0.0.1.0	synth with cache (only 1: intro H; only 1: generalize (div_eucl_spec a b); only 1: unfold div, modulo; only 1: now destruct div_eucl).	0.18730711937	5
Coq.NArith.BinNat.N.pos_div_eucl_remainder	40
Coq.NArith.BinNat.N.mod_lt	40
Coq.NArith.BinNat.N.mod_bound_pos	40
Coq.NArith.BinNat.N.sqrtrem_sqrt	40
Coq.NArith.BinNat.N.sqrtrem_spec	40
Coq.NArith.BinNat.N.sqrt_spec	40
Coq.NArith.BinNat.N.sqrt_neg	40	0.0	synth with cache (only 1: intro H; only 1: false_hyp ltac:(H) nlt_0_r).	0.105565071106	2
Coq.NArith.BinNat.N.ggcd_gcd	40
Coq.NArith.BinNat.N.ggcd_correct_divisors	40
Coq.NArith.BinNat.N.gcd_divide_l	40	0.1.1.2.1.1	synth with cache (only 1: rewrite <- Pos.ggcd_gcd; only 1: generalize (Pos.ggcd_correct_divisors a b); only 1: destruct ggcd as (g, (aa, bb)); only 1: intros (H, _); only 1: exists aa; only 1: now rewrite Pos.mul_comm).	1.6378891468	99
Coq.NArith.BinNat.N.gcd_divide_r	40	0.0.3.0.1.1	synth with cache (only 1: rewrite <- ggcd_gcd; only 1: generalize (ggcd_correct_divisors a b); only 1: destruct ggcd as (g, (aa, bb)); only 1: intros (_, H); only 1: exists bb; only 1: now rewrite mul_comm).	3.49974799156	131
Coq.NArith.BinNat.N.gcd_greatest	40
Coq.NArith.BinNat.N.gcd_nonneg	40	4	synth with cache (only 1: apply le_0_l).	1.45542001724	79
Coq.NArith.BinNat.N.testbit_even_0	40
Coq.NArith.BinNat.N.testbit_odd_0	40	4	synth with cache (only 1: now destruct a).	0.110151052475	12
Coq.NArith.BinNat.N.testbit_succ_r_div2	40
Coq.NArith.BinNat.N.testbit_odd_succ	40
Coq.NArith.BinNat.N.testbit_even_succ	40	1.1.1.0.1	synth with cache (only 1: intros H; only 1: simpl; only 1: rewrite testbit_succ_r_div2 by trivial; only 1: f_equal; only 1: now destruct a).	4.49432706833	157
Coq.NArith.BinNat.N.testbit_neg_r	40	12	synth with cache (only 1: now induction n).	1.1430079937	153
Coq.NArith.BinNat.N.shiftr_succ_r	40
Coq.NArith.BinNat.N.shiftl_succ_r	40
Coq.NArith.BinNat.N.shiftr_spec	40
Coq.NArith.BinNat.N.shiftl_spec_high	40
Coq.NArith.BinNat.N.shiftl_spec_low	40
Coq.NArith.BinNat.N.div2_spec	40	1	synth with cache (only 1: trivial).	0.0752820968628	2
Coq.NArith.BinNat.N.pos_lxor_spec	40
Coq.NArith.BinNat.N.lxor_spec	40
Coq.NArith.BinNat.N.pos_lor_spec	40
Coq.NArith.BinNat.N.lor_spec	40
Coq.NArith.BinNat.N.pos_land_spec	40
Coq.NArith.BinNat.N.land_spec	40
Coq.NArith.BinNat.N.pos_ldiff_spec	40
Coq.NArith.BinNat.N.ldiff_spec	40
Coq.NArith.BinNat.N.gt_lt_iff	40
Coq.NArith.BinNat.N.gt_lt	40	1.10.0	synth with cache (only 1: intro H; only 1: apply lt_nge; only 1: now rewrite <- ?succ_le_mono).	3.07653903961	218
Coq.NArith.BinNat.N.lt_gt	40	2	synth with cache (only 1: apply gt_lt_iff).	0.142156124115	12
Coq.NArith.BinNat.N.ge_le_iff	40
Coq.NArith.BinNat.N.ge_le	40	3.10	synth with cache (only 1: unfold le, ge; only 1: now rewrite compare_antisym, CompOpp_iff).	5.83170986176	492
Coq.NArith.BinNat.N.le_ge	40	3	synth with cache (only 1: apply ge_le_iff).	0.144969940186	13
Coq.NArith.BinNat.N.pos_pred_shiftl_low	40
Coq.NArith.BinNat.N.pos_pred_shiftl_high	40
Coq.NArith.BinNat.N.pred_div2_up	40	0.1.3.1.2.0.7	synth with cache (only 1: destruct p; only 1: simpl; only 1: apply Pos.pred_N_succ; only 1: simpl; only 1: now destruct p; only 1: simpl; only 1: trivial).	29.0433189869	1601
Coq.NArith.Ndec.Peqb_complete	40	3	synth with cache (only 1: apply Pos.eqb_eq).	0.106009960175	4
Coq.NArith.Ndec.Peqb_Pcompare	40	1.17	synth with cache (only 1: rewrite ?CompOpp_iff, ?Pos.compare_eq_iff; only 1: now apply Pos.eqb_eq).	3.25210309029	334
Coq.NArith.Ndec.Pcompare_Peqb	40	2	synth with cache (only 1: now rewrite Pos.compare_eq_iff, <- Pos.eqb_eq).	0.106083869934	3
Coq.NArith.Ndec.Neqb_Ncompare	40
Coq.NArith.Ndec.Ncompare_Neqb	40	1	synth with cache (only 1: now rewrite N.compare_eq_iff, <- N.eqb_eq).	0.104129076004	2
Coq.NArith.Ndec.Neqb_complete	40	6	synth with cache (only 1: now rewrite N.eqb_eq, <- N.compare_eq_iff).	0.115170955658	7
Coq.NArith.Ndec.Nxor_eq_true	40
Coq.NArith.Ndec.Nxor_eq_false	40
Coq.NArith.Ndec.Nodd_not_double	40
Coq.NArith.Ndec.Nnot_div2_not_double	40
Coq.NArith.Ndec.Neven_not_double_plus_one	40
Coq.NArith.Ndec.Nnot_div2_not_double_plus_one	40
Coq.NArith.Ndec.Nbit0_neq	40	3.1.5.1	synth with cache (only 1: intros Ha Hb; only 1: eqb2eq; only 1: intros <-; only 1: auto).	5.06305003166	407
Coq.NArith.Ndec.Ndiv2_eq	40	5.8.2	synth with cache (only 1: intros Ha; only 1: eqb2eq; only 1: now subst).	4.46220684052	399
Coq.NArith.Ndec.Ndiv2_neq	40	1.1.1.1	synth with cache (only 1: intros H; only 1: eqb2eq; only 1: contradict H; only 1: now subst).	0.229221820831	8
Coq.NArith.Ndec.Ndiv2_bit_eq	40
Coq.NArith.Ndec.Ndiv2_bit_neq	40	1.7.7.4	synth with cache (only 1: intros H H'; only 1: eqb2eq; only 1: contradict H; only 1: now rewrite (N.div2_odd a), (N.div2_odd a'), H, H').	33.1336967945	2960
Coq.NArith.Ndec.Nneq_elim	40
Coq.NArith.Ndec.Ndouble_or_double_plus_un	40
Coq.NArith.Ndec.Nleb_alt	40
Coq.NArith.Ndec.Nleb_Nle	40
Coq.NArith.Ndec.Nleb_refl	40
Coq.NArith.Ndec.Nleb_antisym	40
Coq.NArith.Ndec.Nleb_trans	40	2.2.3.11	synth with cache (only 1: rewrite !Nleb_Nle; only 1: intro LT; only 1: intro LE; only 1: N.order').	8.93212795258	858
Coq.NArith.Ndec.Nleb_ltb_trans	40
Coq.NArith.Ndec.Nltb_leb_trans	40
Coq.NArith.Ndec.Nltb_trans	40
Coq.NArith.Ndec.Nltb_leb_weak	40
Coq.NArith.Ndec.Nleb_double_mono	40
Coq.NArith.Ndec.Nleb_double_plus_one_mono	40
Coq.NArith.Ndec.Nleb_double_mono_conv	40
Coq.NArith.Ndec.Nleb_double_plus_one_mono_conv	40
Coq.NArith.Ndec.Nltb_double_mono	40
Coq.NArith.Ndec.Nltb_double_plus_one_mono	40
Coq.NArith.Ndec.Nltb_double_mono_conv	40
Coq.NArith.Ndec.Nltb_double_plus_one_mono_conv	40
Coq.NArith.Ndec.Nltb_Ncompare	40
Coq.NArith.Ndec.Ncompare_Gt_Nltb	40	17	synth with cache (only 1: now rewrite N.compare_nle_iff, <- Nleb_Nle, not_true_iff_false).	6.48127102852	502
Coq.NArith.Ndec.Ncompare_Lt_Nltb	40
Coq.NArith.Ndec.Nmin_le_1	40
Coq.NArith.Ndec.Nmin_le_2	40	8.2	synth with cache (only 1: rewrite Nleb_Nle; only 1: N.solve_min).	0.619230985641	57
Coq.NArith.Ndec.Nmin_le_3	40
Coq.NArith.Ndec.Nmin_le_4	40	11.2	synth with cache (only 1: rewrite !Nleb_Nle; only 1: N.solve_min).	4.45301890373	276
Coq.NArith.Ndec.Nmin_le_5	40	19.0	synth with cache (only 1: rewrite !Nleb_Nle; only 1: N.solve_min).	16.8993492126	1620
Coq.NArith.Ndec.Nmin_lt_3	40
Coq.NArith.Ndec.Nmin_lt_4	40	1.1.2	synth with cache (only 1: rewrite <- !not_true_iff_false, !Nleb_Nle; only 1: rewrite N.min_le_iff; only 1: auto).	0.218659877777	7
Coq.NArith.Ndiv_def.Pdiv_eucl_remainder	40
Coq.NArith.Ndist.Nplength_infty	40	0.0.0.0.2	synth with cache (only 1: induction a as [| p]; only 1: intro; only 1: trivial; only 1: simpl; only 1: congruence).	0.308490991592	7
Coq.NArith.Ndist.Nplength_zeros	40
Coq.NArith.Ndist.Nplength_one	40
Coq.NArith.Ndist.Nplength_first_one	40
Coq.NArith.Ndist.ni_min_idemp	40
Coq.NArith.Ndist.ni_min_comm	40
Coq.NArith.Ndist.ni_min_assoc	40
Coq.NArith.Ndist.ni_min_O_l	40	10.1	synth with cache (only 1: simpl; only 1: now intros []).	2.08317899704	208
Coq.NArith.Ndist.ni_min_O_r	40	0.0.0.13.0.1	synth with cache (only 1: simple induction d; only 1: reflexivity; only 1: simple induction n; only 1: reflexivity; only 1: simpl; only 1: trivial).	29.9094569683	2819
Coq.NArith.Ndist.ni_min_inf_l	40	0	synth with cache (only 1: reflexivity).	0.0929019451141	1
Coq.NArith.Ndist.ni_min_inf_r	40	2.2	synth with cache (only 1: intro n; only 1: now destruct n).	0.147511005402	6
Coq.NArith.Ndist.ni_le_refl	40	0.0.10.5.0.13.4	synth with cache (only 1: vm_compute; only 1: destruct x; only 1: reflexivity; only 1: f_equal; only 1: induction n; only 1: auto; only 1: auto).	29.8361251354	7650
Coq.NArith.Ndist.ni_le_antisym	40
Coq.NArith.Ndist.ni_le_trans	40
Coq.NArith.Ndist.ni_le_min_1	40
Coq.NArith.Ndist.ni_le_min_2	40	0.2.3.1.0	synth with cache (only 1: unfold ni_le; only 1: intros; only 1: rewrite ni_min_assoc; only 1: rewrite ni_min_idemp; only 1: reflexivity).	3.50898194313	90
Coq.NArith.Ndist.ni_min_case	40
Coq.NArith.Ndist.ni_le_total	40
Coq.NArith.Ndist.ni_le_min_induc	40
Coq.NArith.Ndist.le_ni_le	40
Coq.NArith.Ndist.ni_le_le	40
Coq.NArith.Ndist.Nplength_lb	40
Coq.NArith.Ndist.Nplength_ub	40
Coq.NArith.Ndist.Npdist_eq_1	40
Coq.NArith.Ndist.Npdist_eq_2	40
Coq.NArith.Ndist.Npdist_comm	40
Coq.NArith.Ndist.Nplength_ultra_1	40
Coq.NArith.Ndist.Nplength_ultra	40
Coq.NArith.Ndist.Npdist_ultra	40
Coq.NArith.Ndigits.Ptestbit_Pbit	40
Coq.NArith.Ndigits.Ntestbit_Nbit	40
Coq.NArith.Ndigits.Pbit_Ptestbit	40
Coq.NArith.Ndigits.Nbit_Ntestbit	40
Coq.NArith.Ndigits.Nshiftr_nat_S	40	0	synth with cache (only 1: reflexivity).	0.0824229717255	1
Coq.NArith.Ndigits.Nshiftl_nat_S	40	0	synth with cache (only 1: reflexivity).	0.0813579559326	1
Coq.NArith.Ndigits.Nshiftr_nat_equiv	40
Coq.NArith.Ndigits.Nshiftr_equiv_nat	40
Coq.NArith.Ndigits.Nshiftl_nat_equiv	40
Coq.NArith.Ndigits.Nshiftl_equiv_nat	40
Coq.NArith.Ndigits.Nshiftr_nat_spec	40
Coq.NArith.Ndigits.Nshiftl_nat_spec_high	40
Coq.NArith.Ndigits.Nshiftl_nat_spec_low	40
Coq.NArith.Ndigits.Pshiftl_nat_0	40	0	synth with cache (only 1: reflexivity).	0.0773921012878	1
Coq.NArith.Ndigits.Pshiftl_nat_S	40	0	synth with cache (only 1: reflexivity).	0.0802619457245	1
Coq.NArith.Ndigits.Pshiftl_nat_N	40
Coq.NArith.Ndigits.Pshiftl_nat_plus	40
Coq.NArith.Ndigits.Pxor_semantics	40
Coq.NArith.Ndigits.Nxor_semantics	40
Coq.NArith.Ndigits.Por_semantics	40
Coq.NArith.Ndigits.Nor_semantics	40	1.0.0.0.0.0.0.0.0.1	synth with cache (only 1: destruct a, a'; only 1: simpl; only 1: trivial; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: now rewrite orb_false_r; only 1: simpl; only 1: rewrite <- !Ptestbit_Pbit; only 1: apply N.pos_lor_spec).	18.4263520241	883
Coq.NArith.Ndigits.Pand_semantics	40
Coq.NArith.Ndigits.Nand_semantics	40	1.1.0.0.0.0.0.2.0	synth with cache (only 1: rewrite <- !Ntestbit_Nbit; only 1: destruct a, a'; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite andb_false_r; only 1: apply N.pos_land_spec).	22.8964500427	1193
Coq.NArith.Ndigits.Pdiff_semantics	40
Coq.NArith.Ndigits.Ndiff_semantics	40	1.0.0.1.0.0.0.0.0.1	synth with cache (only 1: destruct a, a'; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite andb_true_r; only 1: simpl; only 1: rewrite <- Ntestbit_Nbit, <- !Ptestbit_Pbit; only 1: apply N.pos_ldiff_spec).	25.9777679443	1343
Coq.NArith.Ndigits.Pbit_faithful_0	40
Coq.NArith.Ndigits.Pbit_faithful	40
Coq.NArith.Ndigits.Nbit_faithful	40
Coq.NArith.Ndigits.Nbit_faithful_iff	40
Coq.NArith.Ndigits.Nbit0_correct	40
Coq.NArith.Ndigits.Ndouble_bit0	40	5.2	synth with cache (only 1: intros n; only 1: now destruct n).	0.124574899673	9
Coq.NArith.Ndigits.Ndouble_plus_one_bit0	40	0.0.6	synth with cache (only 1: destruct n; only 1: reflexivity; only 1: reflexivity).	0.209669828415	14
Coq.NArith.Ndigits.Ndiv2_double	40	0.3.0.0.0.0.2.1	synth with cache (only 1: intros; only 1: destruct n; only 1: reflexivity; only 1: vm_compute in H; only 1: destruct p; only 1: discriminate; only 1: reflexivity; only 1: discriminate).	19.7247200012	940
Coq.NArith.Ndigits.Ndiv2_double_plus_one	40	1.0.3.0.0.0.4.1	synth with cache (only 1: destruct n; only 1: discriminate; only 1: intro H; only 1: vm_compute in H; only 1: destruct p; only 1: reflexivity; only 1: discriminate; only 1: reflexivity).	29.0080459118	1771
Coq.NArith.Ndigits.Ndiv2_correct	40
Coq.NArith.Ndigits.Nxor_bit0	40
Coq.NArith.Ndigits.Nxor_div2	40
Coq.NArith.Ndigits.Nneg_bit0	40
Coq.NArith.Ndigits.Nneg_bit0_1	40
Coq.NArith.Ndigits.Nneg_bit0_2	40	0.3.4.4	synth with cache (only 1: intros; only 1: apply Nneg_bit0; only 1: rewrite H; only 1: reflexivity).	3.24403595924	272
Coq.NArith.Ndigits.Nsame_bit0	40
Coq.NArith.Ndigits.Nbit0_less	40
Coq.NArith.Ndigits.Nbit0_gt	40
Coq.NArith.Ndigits.Nless_not_refl	40
Coq.NArith.Ndigits.Nless_def_1	40
Coq.NArith.Ndigits.Nless_def_2	40	0.0.0.0.0.0.0.0.0.0.1	synth with cache (only 1: destruct a; only 1: destruct a'; only 1: reflexivity; only 1: reflexivity; only 1: destruct a'; only 1: reflexivity; only 1: unfold Nless; only 1: simpl; only 1: destruct (Pos.lxor p p0); only 1: reflexivity; only 1: trivial).	14.680316925	469
Coq.NArith.Ndigits.Nless_def_3	40
Coq.NArith.Ndigits.Nless_def_4	40
Coq.NArith.Ndigits.Nless_z	40
Coq.NArith.Ndigits.N0_less_1	40	3.1.1.19.3	synth with cache (only 1: intros a Ha; only 1: destruct a as [| p]; only 1: discriminate; only 1: exists p; only 1: auto).	23.6128818989	2789
Coq.NArith.Ndigits.N0_less_2	40
Coq.NArith.Ndigits.Nless_trans	40
Coq.NArith.Ndigits.Nless_total	40
Coq.NArith.Ndigits.Bv2N_N2Bv	40
Coq.NArith.Ndigits.Bv2N_Nsize	40
Coq.NArith.Ndigits.Bv2N_Nsize_1	40
Coq.NArith.Ndigits.Bv2N_upper_bound	40
Coq.NArith.Ndigits.ByteV2N_upper_bound	40
Coq.NArith.Ndigits.N2Bv_N2Bv_gen	40
Coq.NArith.Ndigits.N2Bv_N2Bv_gen_above	40
Coq.NArith.Ndigits.N2Bv_Bv2N	40
Coq.NArith.Ndigits.Nbit0_Blow	40
Coq.NArith.Ndigits.Bnth_Nbit	40
Coq.NArith.Ndigits.Nbit_Nsize	40
Coq.NArith.Ndigits.Nbit_Bth	40
Coq.NArith.Ndigits.Nxor_BVxor	40
Coq.NArith.Ndigits.Nand_BVand	40
Coq.NArith.Ndigits.N2Bv_sized_Nsize	40
Coq.NArith.Ndigits.N2Bv_sized_Bv2N	40
Coq.NArith.Ndigits.N2Bv_N2Bv_sized_above	40
Coq.NArith.NArith.TestOrder.test	40	1	synth with cache (only 1: N.order).	0.271908044815	26
Coq.NArith.Nnat.N2Nat.id	40
Coq.NArith.Nnat.N2Nat.inj	40
Coq.NArith.Nnat.N2Nat.inj_iff	40	4.1.0.1.1.0	synth with cache (only 1: split; only 1: intro H; only 1: rewrite <- (id a), <- (id a'); only 1: now f_equal; only 1: intro H; only 1: now subst).	3.17900514603	199
Coq.NArith.Nnat.N2Nat.inj_double	40
Coq.NArith.Nnat.N2Nat.inj_succ_double	40	0.0.5.3.2.3.1.2	synth with cache (only 1: destruct a; only 1: trivial; only 1: simpl; only 1: unfold Pos.to_nat; only 1: simpl; only 1: rewrite Pmult_nat_mult, Nat.mul_comm; only 1: simpl; only 1: trivial).	31.340223074	3692
Coq.NArith.Nnat.N2Nat.inj_succ	40
Coq.NArith.Nnat.N2Nat.inj_add	40
Coq.NArith.Nnat.N2Nat.inj_mul	40
Coq.NArith.Nnat.N2Nat.inj_sub	40
Coq.NArith.Nnat.N2Nat.inj_pred	40
Coq.NArith.Nnat.N2Nat.inj_div2	40
Coq.NArith.Nnat.N2Nat.inj_compare	40
Coq.NArith.Nnat.N2Nat.inj_max	40
Coq.NArith.Nnat.N2Nat.inj_min	40
Coq.NArith.Nnat.N2Nat.inj_iter	40
Coq.NArith.Nnat.Nat2N.id	40	0.0.1.0.1.3.1.24	synth with cache (only 1: destruct n as [| [| n]]; only 1: trivial; only 1: trivial; only 1: simpl; only 1: rewrite Pos.of_nat_succ; only 1: rewrite Pos2Nat.inj_succ; only 1: f_equal; only 1: now apply Nat2Pos.id).	7.44678783417	1063
Coq.NArith.Nnat.Nat2N.inj	40
Coq.NArith.Nnat.Nat2N.inj_iff	40	1.1.0.0.1.0	synth with cache (only 1: split; only 1: intros H; only 1: rewrite <- (id n), <- (id n'); only 1: now f_equal; only 1: intro H; only 1: auto).	0.24183011055	9
Coq.NArith.Nnat.Nat2N.inj_double	40
Coq.NArith.Nnat.Nat2N.inj_succ_double	40	5.0.0	synth with cache (only 1: induction n; only 1: trivial; only 1: nat2N).	0.846689939499	36
Coq.NArith.Nnat.Nat2N.inj_succ	40	0.0.0.1	synth with cache (only 1: induction n; only 1: trivial; only 1: simpl; only 1: trivial).	0.196893930435	5
Coq.NArith.Nnat.Nat2N.inj_pred	40	2.0.0.0	synth with cache (only 1: destruct n as [| [| n]]; only 1: trivial; only 1: trivial; only 1: nat2N).	0.302565097809	12
Coq.NArith.Nnat.Nat2N.inj_add	40
Coq.NArith.Nnat.Nat2N.inj_sub	40	0	synth with cache (only 1: nat2N).	0.100516080856	1
Coq.NArith.Nnat.Nat2N.inj_mul	40	0	synth with cache (only 1: nat2N).	0.0996980667114	1
Coq.NArith.Nnat.Nat2N.inj_div2	40	0	synth with cache (only 1: nat2N).	0.090656042099	1
Coq.NArith.Nnat.Nat2N.inj_compare	40
Coq.NArith.Nnat.Nat2N.inj_min	40	0	synth with cache (only 1: nat2N).	0.103703022003	1
Coq.NArith.Nnat.Nat2N.inj_max	40	0	synth with cache (only 1: nat2N).	0.0973320007324	1
Coq.NArith.Nnat.Nat2N.inj_iter	40
Coq.Strings.Ascii.ascii_dec	40
Coq.Strings.Ascii.eqb_spec	40
Coq.Strings.Ascii.eqb_refl	40
Coq.Strings.Ascii.eqb_sym	40
Coq.Strings.Ascii.eqb_eq	40
Coq.Strings.Ascii.eqb_neq	40	0	synth with cache (only 1: now rewrite <- not_true_iff_false, Pos.eqb_eq).	0.061558008194	1
Coq.Strings.Ascii.eqb_compat	40	1.0.0	synth with cache (only 1: intros x x' Exx' y y' Eyy'; only 1: apply eq_true_iff_eq; only 1: now rewrite 2!Pos.eqb_eq, Exx', Eyy').	0.124691009521	4
Coq.Strings.Ascii.ascii_N_embedding	40
Coq.Strings.Ascii.N_ascii_embedding	40
Coq.Strings.Ascii.N_ascii_bounded	40
Coq.Strings.Ascii.ascii_nat_embedding	40
Coq.Strings.Ascii.nat_ascii_embedding	40
Coq.Strings.Ascii.nat_ascii_bounded	40
Coq.Strings.Ascii.ascii_of_byte_of_ascii	40
Coq.Strings.Ascii.byte_of_ascii_of_byte	40
Coq.Strings.Ascii.ascii_of_byte_via_N	40
Coq.Strings.Ascii.ascii_of_byte_via_nat	40
Coq.Strings.Ascii.byte_of_ascii_via_N	40
Coq.Strings.Ascii.byte_of_ascii_via_nat	40
Coq.Strings.String.string_dec	40	0.0.0.0.0.0.0.0.27.0	synth with cache (only 1: decide equality; only 1: decide equality; only 1: apply bool_dec; only 1: apply bool_dec; only 1: apply bool_dec; only 1: apply bool_dec; only 1: apply bool_dec; only 1: apply bool_dec; only 1: apply bool_dec; only 1: apply bool_dec).	33.2605280876	5697
Coq.Strings.String.eqb_spec	40
Coq.Strings.String.eqb_refl	40
Coq.Strings.String.eqb_sym	40	30	synth with cache (only 1: t_eqb).	14.6913430691	2823
Coq.Strings.String.eqb_eq	40
Coq.Strings.String.eqb_neq	40	0	synth with cache (only 1: now rewrite <- not_true_iff_false, BinInt.Z.eqb_eq).	0.0864429473877	1
Coq.Strings.String.eqb_compat	40	1.0.0	synth with cache (only 1: intros x x' Exx' y y' Eyy'; only 1: apply eq_true_iff_eq; only 1: now rewrite 2!Nat.eqb_eq, Exx', Eyy').	0.165516853333	4
Coq.Strings.String.get_correct	40
Coq.Strings.String.append_correct1	40
Coq.Strings.String.append_correct2	40
Coq.Strings.String.substring_correct1	40
Coq.Strings.String.substring_correct2	40
Coq.Strings.String.prefix_correct	40
Coq.Strings.String.index_correct1	40
Coq.Strings.String.index_correct2	40
Coq.Strings.String.index_correct3	40
Coq.Strings.String.index_correct4	40
Coq.Strings.String.string_of_list_ascii_of_string	40	0.5.2.0.0.0.36	synth with cache (only 1: elim s; only 1: reflexivity; only 1: intro; only 1: simpl; only 1: intro; only 1: intros ->; only 1: reflexivity).	27.2177789211	3641
Coq.Strings.String.list_ascii_of_string_of_list_ascii	40
Coq.Strings.String.string_of_list_byte_of_string	40
Coq.Strings.String.list_byte_of_string_of_list_byte	40
Coq.Strings.Byte.byte_dec_lb	40
Coq.Strings.Byte.byte_dec_bl	40
Coq.Strings.Byte.eqb_false	40
Coq.Strings.Byte.nat.of_to_nat	40
Coq.Strings.Byte.nat.to_of_nat	40
Coq.Strings.Byte.nat.to_of_nat_iff	40
Coq.Strings.Byte.nat.to_of_nat_option_map	40
Coq.Strings.Byte.nat.to_nat_bounded	40
Coq.Strings.Byte.nat.of_nat_None_iff	40
Coq.Strings.Byte.N.of_to_N	40
Coq.Strings.Byte.N.to_of_N	40
Coq.Strings.Byte.N.to_of_N_iff	40
Coq.Strings.Byte.N.to_of_N_option_map	40
Coq.Strings.Byte.N.to_N_bounded	40
Coq.Strings.Byte.N.of_N_None_iff	40
Coq.Strings.Byte.N.to_N_via_nat	40
Coq.Strings.Byte.N.to_nat_via_N	40
Coq.Strings.Byte.N.of_N_via_nat	40
Coq.Strings.Byte.N.of_nat_via_N	40
Coq.Strings.HexString.Raw.to_N_of_pos	40	0	synth with cache (only 1: trivial).	0.117170095444	1
Coq.Strings.HexString.to_N_of_N	40
Coq.Strings.HexString.to_Z_of_Z	40
Coq.Strings.HexString.to_nat_of_nat	40
Coq.Strings.HexString.to_pos_of_pos	40
Coq.Strings.OctalString.Raw.to_N_of_pos	40	0	synth with cache (only 1: trivial).	0.128508090973	1
Coq.Strings.OctalString.to_N_of_N	40
Coq.Strings.OctalString.to_Z_of_Z	40
Coq.Strings.OctalString.to_nat_of_nat	40
Coq.Strings.OctalString.to_pos_of_pos	40
Coq.Strings.BinaryString.Raw.to_N_of_pos	40	0	synth with cache (only 1: trivial).	0.106762886047	1
Coq.Strings.BinaryString.to_N_of_N	40
Coq.Strings.BinaryString.Z_of_of_Z	40
Coq.Strings.BinaryString.to_nat_of_nat	40
Coq.Strings.BinaryString.to_pos_of_pos	40
Coq.Reals.Rdefinitions.total_order_T	40
Coq.Reals.Rdefinitions.Req_appart_dec	40
Coq.Reals.Rdefinitions.Rrepr_appart_0	40
Coq.Reals.Rdefinitions.up	40	38	synth with cache (only 1: constructor).	1.85109496117	735
Coq.Reals.Rtrigo_alt.pre_sin_bound	40
Coq.Reals.Rtrigo_alt.pre_cos_bound	40
Coq.Reals.Ratan.Ropp_div	40	0.0.0	synth with cache (only 1: intros x y; only 1: unfold Rdiv; only 1: ring).	0.289507865906	3
Coq.Reals.Ratan.pos_half_prf	40	0.0	synth with cache (only 1: apply Rinv_0_lt_compat; only 1: prove_sup0).	0.245749950409	2
Coq.Reals.Ratan.Boule_half_to_interval	40
Coq.Reals.Ratan.Boule_lt	40
Coq.Reals.Ratan.Un_cv_ext	40
Coq.Reals.Ratan.Alt_first_term_bound	40
Coq.Reals.Ratan.Alt_CVU	40
Coq.Reals.Ratan.pow2_ge_0	40	0.1.4.0	synth with cache (only 1: intros; only 1: simpl; only 1: rewrite Rmult_1_r; only 1: apply Rle_0_sqr).	0.74959897995	24
Coq.Reals.Ratan.pow2_abs	40	0.0.0.0.0.0.1.0	synth with cache (only 1: intro; only 1: unfold Rabs; only 1: case (Rcase_abs x); only 1: intro; only 1: simpl; only 1: ring; only 1: intro; only 1: reflexivity).	0.821714878082	9
Coq.Reals.Ratan.derivable_pt_tan	40
Coq.Reals.Ratan.derive_pt_tan	40
Coq.Reals.Ratan.derive_increasing_interv	40
Coq.Reals.Ratan.plus_Rsqr_gt_0	40
Coq.Reals.Ratan.PI2_lower_bound	40
Coq.Reals.Ratan.PI2_3_2	40
Coq.Reals.Ratan.PI2_1	40
Coq.Reals.Ratan.tan_increasing	40
Coq.Reals.Ratan.tan_is_inj	40
Coq.Reals.Ratan.exists_atan_in_frame	40
Coq.Reals.Ratan.tan_1_gt_1	40
Coq.Reals.Ratan.frame_tan	40
Coq.Reals.Ratan.ub_opp	40
Coq.Reals.Ratan.pos_opp_lt	40
Coq.Reals.Ratan.tech_opp_tan	40
Coq.Reals.Ratan.pre_atan	40
Coq.Reals.Ratan.atan_bound	40
Coq.Reals.Ratan.atan_right_inv	40
Coq.Reals.Ratan.atan_opp	40
Coq.Reals.Ratan.derivable_pt_atan	40
Coq.Reals.Ratan.atan_increasing	40
Coq.Reals.Ratan.atan_0	40
Coq.Reals.Ratan.atan_1	40
Coq.Reals.Ratan.derive_pt_atan	40
Coq.Reals.Ratan.derivable_pt_lim_atan	40
Coq.Reals.Ratan.Ratan_seq_decreasing	40
Coq.Reals.Ratan.Ratan_seq_converging	40
Coq.Reals.Ratan.ps_atan_exists_01	40
Coq.Reals.Ratan.Ratan_seq_opp	40
Coq.Reals.Ratan.sum_Ratan_seq_opp	40
Coq.Reals.Ratan.ps_atan_exists_1	40
Coq.Reals.Ratan.in_int	40
Coq.Reals.Ratan.ps_atan0_0	40
Coq.Reals.Ratan.ps_atan_exists_1_opp	40
Coq.Reals.Ratan.ps_atan_opp	40
Coq.Reals.Ratan.ps_atanSeq_continuity_pt_1	40
Coq.Reals.Ratan.pow_lt_1_compat	40
Coq.Reals.Ratan.Datan_seq_Rabs	40
Coq.Reals.Ratan.Datan_seq_pos	40
Coq.Reals.Ratan.Datan_sum_eq	40
Coq.Reals.Ratan.Datan_seq_increasing	40
Coq.Reals.Ratan.Datan_seq_decreasing	40
Coq.Reals.Ratan.Datan_seq_CV_0	40
Coq.Reals.Ratan.Datan_lim	40
Coq.Reals.Ratan.Datan_CVU_prelim	40
Coq.Reals.Ratan.Datan_is_datan	40
Coq.Reals.Ratan.Ratan_CVU'	40
Coq.Reals.Ratan.Ratan_CVU	40
Coq.Reals.Ratan.Alt_PI_tg	40
Coq.Reals.Ratan.Ratan_is_ps_atan	40
Coq.Reals.Ratan.Datan_continuity	40
Coq.Reals.Ratan.derivable_pt_lim_ps_atan	40
Coq.Reals.Ratan.derivable_pt_ps_atan	40
Coq.Reals.Ratan.ps_atan_continuity_pt_1	40
Coq.Reals.Ratan.Datan_eq_DatanSeq_interv	40
Coq.Reals.Ratan.atan_eq_ps_atan	40
Coq.Reals.Ratan.Alt_PI_eq	40
Coq.Reals.Ratan.PI_ineq	40
Coq.Reals.RList.MaxRlist_P1	40
Coq.Reals.RList.MinRlist_P1	40
Coq.Reals.RList.AbsList_P1	40
Coq.Reals.RList.MinRlist_P2	40
Coq.Reals.RList.AbsList_P2	40
Coq.Reals.RList.MaxRlist_P2	40
Coq.Reals.RList.pos_Rl_P1	40	0.1.5.3	synth with cache (only 1: intros; only 1: inversion H; only 1: trivial; only 1: trivial).	5.64848899841	183
Coq.Reals.RList.pos_Rl_P2	40
Coq.Reals.RList.Rlist_P1	40
Coq.Reals.RList.RList_P0	40
Coq.Reals.RList.RList_P1	40
Coq.Reals.RList.RList_P2	40
Coq.Reals.RList.RList_P3	40
Coq.Reals.RList.RList_P4	40
Coq.Reals.RList.RList_P5	40
Coq.Reals.RList.RList_P6	40
Coq.Reals.RList.RList_P7	40
Coq.Reals.RList.RList_P8	40
Coq.Reals.RList.RList_P9	40
Coq.Reals.RList.RList_P10	40
Coq.Reals.RList.RList_P11	40
Coq.Reals.RList.RList_P12	40
Coq.Reals.RList.RList_P13	40
Coq.Reals.RList.RList_P14	40	1.0.0.10	synth with cache (only 1: induction l; only 1: reflexivity; only 1: simpl; only 1: auto).	5.11223912239	286
Coq.Reals.RList.RList_P15	40
Coq.Reals.RList.RList_P16	40
Coq.Reals.RList.RList_P17	40
Coq.Reals.RList.RList_P18	40	1.1.0.0.2	synth with cache (only 1: simple induction l; only 1: reflexivity; only 1: intros; only 1: simpl; only 1: auto).	0.309956073761	9
Coq.Reals.RList.RList_P19	40
Coq.Reals.RList.RList_P20	40
Coq.Reals.RList.RList_P21	40	0.4.1	synth with cache (only 1: intros; only 1: rewrite H; only 1: reflexivity).	0.225270032883	8
Coq.Reals.RList.RList_P22	40	0.3.7.1	synth with cache (only 1: intros; only 1: induction l1 as [| r l1 Hrecl1]; only 1: easy; only 1: reflexivity).	7.61542510986	444
Coq.Reals.RList.RList_P23	40	2.1.0.0.0.1	synth with cache (only 1: simple induction l1; only 1: simpl; only 1: reflexivity; only 1: intros; only 1: simpl; only 1: auto).	0.323850870132	10
Coq.Reals.RList.RList_P24	40
Coq.Reals.RList.RList_P25	40
Coq.Reals.RList.RList_P26	40
Coq.Reals.RList.RList_P27	40
Coq.Reals.RList.RList_P28	40	1.7.1.0.12	synth with cache (only 1: induction l; only 1: reflexivity; only 1: simpl; only 1: f_equal; only 1: auto).	22.6725280285	1829
Coq.Reals.RList.RList_P29	40
Coq.Reals.Sqrt_reg.sqrt_var_maj	40
Coq.Reals.Sqrt_reg.sqrt_continuity_pt_R1	40
Coq.Reals.Sqrt_reg.sqrt_continuity_pt	40
Coq.Reals.Sqrt_reg.derivable_pt_lim_sqrt	40
Coq.Reals.Sqrt_reg.derivable_pt_sqrt	40
Coq.Reals.Sqrt_reg.derive_pt_sqrt	40	0.1.2.3	synth with cache (only 1: intros; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_sqrt; only 1: assumption).	0.549314975739	23
Coq.Reals.Sqrt_reg.continuity_pt_sqrt	40
Coq.Reals.Rsigma.Sigma.sigma_split	40
Coq.Reals.Rsigma.Sigma.sigma_diff	40
Coq.Reals.Rsigma.Sigma.sigma_diff_neg	40	1.1.1	synth with cache (only 1: intros low high k H1 H2; only 1: rewrite (sigma_split H1 H2); only 1: ring).	2.55141592026	43
Coq.Reals.Rsigma.Sigma.sigma_first	40
Coq.Reals.Rsigma.Sigma.sigma_last	40
Coq.Reals.Rsigma.Sigma.sigma_eq_arg	40
Coq.Reals.Rbasic_fun.Rmin_case	40
Coq.Reals.Rbasic_fun.Rmin_case_strong	40	3.1.0.1.1.0	synth with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec r1 r2); only 1: auto; only 1: generalize (Rtotal_order r1 r2); only 1: intuition).	6.96334505081	229
Coq.Reals.Rbasic_fun.Rmin_Rgt_l	40
Coq.Reals.Rbasic_fun.Rmin_Rgt_r	40
Coq.Reals.Rbasic_fun.Rmin_Rgt	40
Coq.Reals.Rbasic_fun.Rmin_l	40
Coq.Reals.Rbasic_fun.Rmin_r	40	1.1.1.0.1.0	synth with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: auto with qarith; only 1: intro H1; only 1: auto with real).	0.407227039337	13
Coq.Reals.Rbasic_fun.Rmin_left	40
Coq.Reals.Rbasic_fun.Rmin_right	40	0.0.3.0	synth with cache (only 1: intros; only 1: apply Rmin_case_strong; only 1: auto using Rle_antisym; only 1: auto).	0.220585107803	7
Coq.Reals.Rbasic_fun.Rle_min_compat_r	40
Coq.Reals.Rbasic_fun.Rle_min_compat_l	40	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: do 2 (apply Rmin_case_strong; intro); only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl).	0.332156181335	6
Coq.Reals.Rbasic_fun.Rmin_comm	40
Coq.Reals.Rbasic_fun.Rmin_stable_in_posreal	40
Coq.Reals.Rbasic_fun.Rmin_pos	40
Coq.Reals.Rbasic_fun.Rmin_glb	40	0.1.0.0.0.2.8	synth with cache (only 1: intros r1 r2 P H1 H2; only 1: unfold Rmin; only 1: case (Rle_dec r1 r2); only 1: intros; only 1: trivial; only 1: intros; only 1: trivial).	12.7880821228	842
Coq.Reals.Rbasic_fun.Rmin_glb_lt	40	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: intro; only 1: eauto using Rle_trans, Rle_refl; only 1: intro; only 1: auto).	0.392476081848	7
Coq.Reals.Rbasic_fun.Rmax_case	40
Coq.Reals.Rbasic_fun.Rmax_case_strong	40	0.0.0.2.0	synth with cache (only 1: intros; only 1: unfold Rmax; only 1: destruct (Rle_dec r1 r2); only 1: auto with real; only 1: auto with real).	0.356646060944	7
Coq.Reals.Rbasic_fun.Rmax_Rle	40
Coq.Reals.Rbasic_fun.Rmax_comm	40
Coq.Reals.Rbasic_fun.Rmax_l	40
Coq.Reals.Rbasic_fun.Rmax_r	40	1.0.0.1.0.0.2.0	synth with cache (only 1: intros; only 1: unfold Rmax; only 1: case (Rle_dec x y); only 1: intro H1; only 1: right; only 1: auto; only 1: intro H1; only 1: auto with real).	4.4219429493	166
Coq.Reals.Rbasic_fun.Rmax_left	40
Coq.Reals.Rbasic_fun.Rmax_right	40	0.0.5.0	synth with cache (only 1: intros; only 1: apply Rmax_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	0.223159074783	9
Coq.Reals.Rbasic_fun.Rle_max_compat_r	40
Coq.Reals.Rbasic_fun.Rle_max_compat_l	40	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: do 2 (apply Rmax_case_strong; intro); only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl).	1.89929699898	6
Coq.Reals.Rbasic_fun.RmaxRmult	40
Coq.Reals.Rbasic_fun.Rmax_stable_in_negreal	40
Coq.Reals.Rbasic_fun.Rmax_lub	40	0.0.0.2.7	synth with cache (only 1: intros r1 r2 P H1 H2; only 1: unfold Rmax; only 1: destruct (Rle_dec r1 r2) as [| Hnle]; only 1: trivial; only 1: trivial).	6.99401807785	350
Coq.Reals.Rbasic_fun.Rmax_lub_lt	40	0.0.0.0.0.1.0	synth with cache (only 1: intros; only 1: unfold Rmax; only 1: case (Rle_dec x y); only 1: intro; only 1: eauto using Rle_trans, Rle_refl; only 1: intro; only 1: assumption).	2.2970700264	8
Coq.Reals.Rbasic_fun.Rmax_Rlt	40
Coq.Reals.Rbasic_fun.Rmax_neg	40
Coq.Reals.Rbasic_fun.Rcase_abs	40
Coq.Reals.Rbasic_fun.Rabs_R0	40
Coq.Reals.Rbasic_fun.Rabs_R1	40
Coq.Reals.Rbasic_fun.Rabs_no_R0	40
Coq.Reals.Rbasic_fun.Rabs_left	40
Coq.Reals.Rbasic_fun.Rabs_right	40	0.0.1.0.1.0.1.0	synth with cache (only 1: intros; only 1: unfold Rabs; only 1: case (Rcase_abs r); only 1: intro; only 1: absurd (r >= 0); only 1: auto with real; only 1: assumption; only 1: trivial).	3.97720384598	87
Coq.Reals.Rbasic_fun.Rabs_left1	40
Coq.Reals.Rbasic_fun.Rabs_pos	40
Coq.Reals.Rbasic_fun.Rle_abs	40
Coq.Reals.Rbasic_fun.Rabs_le	40
Coq.Reals.Rbasic_fun.Rabs_pos_eq	40
Coq.Reals.Rbasic_fun.Rabs_Rabsolu	40
Coq.Reals.Rbasic_fun.Rabs_pos_lt	40
Coq.Reals.Rbasic_fun.Rabs_minus_sym	40
Coq.Reals.Rbasic_fun.Rabs_mult	40
Coq.Reals.Rbasic_fun.Rabs_Rinv	40
Coq.Reals.Rbasic_fun.Rabs_Ropp	40
Coq.Reals.Rbasic_fun.Rabs_triang	40
Coq.Reals.Rbasic_fun.Rabs_triang_inv	40
Coq.Reals.Rbasic_fun.Rabs_triang_inv2	40
Coq.Reals.Rbasic_fun.Rabs_def1	40
Coq.Reals.Rbasic_fun.Rabs_def2	40
Coq.Reals.Rbasic_fun.RmaxAbs	40
Coq.Reals.Rbasic_fun.Rabs_Zabs	40
Coq.Reals.Rbasic_fun.abs_IZR	40
Coq.Reals.Rbasic_fun.Ropp_Rmax	40
Coq.Reals.Rbasic_fun.Ropp_Rmin	40
Coq.Reals.Rbasic_fun.Rmax_assoc	40
Coq.Reals.Rbasic_fun.Rminmax	40
Coq.Reals.Rbasic_fun.Rmin_assoc	40
Coq.Reals.Rtrigo_def.exp_cof_no_R0	40
Coq.Reals.Rtrigo_def.exist_exp	40
Coq.Reals.Rtrigo_def.pow_i	40	1.0.4.0.1	synth with cache (only 1: simple induction 1; only 1: auto with real; only 1: simpl; only 1: intros; only 1: auto with real).	1.52738881111	89
Coq.Reals.Rtrigo_def.exist_exp0	40
Coq.Reals.Rtrigo_def.exp_0	40
Coq.Reals.Rtrigo_def.cosh_0	40
Coq.Reals.Rtrigo_def.sinh_0	40
Coq.Reals.Rtrigo_def.simpl_cos_n	40
Coq.Reals.Rtrigo_def.archimed_cor1	40
Coq.Reals.Rtrigo_def.Alembert_cos	40
Coq.Reals.Rtrigo_def.cosn_no_R0	40	0.1.0.0.6.1	synth with cache (only 1: intro H; only 1: apply Rmult_integral_contrapositive_currified; only 1: apply pow_nonzero; only 1: discrR; only 1: apply Rinv_neq_0_compat; only 1: apply INR_fact_neq_0).	8.21882486343	450
Coq.Reals.Rtrigo_def.exist_cos	40
Coq.Reals.Rtrigo_def.simpl_sin_n	40
Coq.Reals.Rtrigo_def.Alembert_sin	40
Coq.Reals.Rtrigo_def.sin_no_R0	40	0.0.0.0.6.1	synth with cache (only 1: intro; only 1: apply Rmult_integral_contrapositive_currified; only 1: apply pow_nonzero; only 1: discrR; only 1: apply Rinv_neq_0_compat; only 1: apply INR_fact_neq_0).	6.11514520645	271
Coq.Reals.Rtrigo_def.exist_sin	40
Coq.Reals.Rtrigo_def.cos_sym	40
Coq.Reals.Rtrigo_def.sin_antisym	40
Coq.Reals.Rtrigo_def.sin_0	40
Coq.Reals.Rtrigo_def.exist_cos0	40
Coq.Reals.Rtrigo_def.cos_0	40
Coq.Reals.NewtonInt.FTCN_step1	40
Coq.Reals.NewtonInt.FTC_Newton	40	0	synth with cache (only 1: reflexivity).	0.216458082199	1
Coq.Reals.NewtonInt.NewtonInt_P1	40
Coq.Reals.NewtonInt.NewtonInt_P2	40
Coq.Reals.NewtonInt.NewtonInt_P3	40
Coq.Reals.NewtonInt.NewtonInt_P4	40
Coq.Reals.NewtonInt.NewtonInt_P5	40
Coq.Reals.NewtonInt.antiderivative_P1	40
Coq.Reals.NewtonInt.NewtonInt_P6	40
Coq.Reals.NewtonInt.antiderivative_P2	40
Coq.Reals.NewtonInt.antiderivative_P3	40
Coq.Reals.NewtonInt.antiderivative_P4	40
Coq.Reals.NewtonInt.NewtonInt_P7	40
Coq.Reals.NewtonInt.NewtonInt_P8	40
Coq.Reals.NewtonInt.NewtonInt_P9	40
Coq.Reals.Runcountable.in_holed_interval_dec	40
Coq.Reals.Runcountable.middle_in_interval	40
Coq.Reals.Runcountable.point_in_holed_interval_works	40
Coq.Reals.Runcountable.first_in_holed_interval	40
Coq.Reals.Runcountable.first_in_holed_interval_works	40
Coq.Reals.Runcountable.split_couple_eq	40
Coq.Reals.Runcountable.first_two_in_interval_works	40
Coq.Reals.Runcountable.tearing_sequences	40	1.7	synth with cache (only 1: fix odd_equiv 1; only 1: auto).	0.414149999619	35
Coq.Reals.Runcountable.tearing_sequences_projsig	40
Coq.Reals.Runcountable.tearing_sequences_inc_dec	40
Coq.Reals.Runcountable.split_lt_succ	40	3.2	synth with cache (only 1: intros n m H; only 1: now apply Nat.lt_eq_cases, Nat.succ_le_mono).	0.517528772354	17
Coq.Reals.Runcountable.increase_seq_transit	40
Coq.Reals.Runcountable.decrease_seq_transit	40
Coq.Reals.Runcountable.tearing_sequences_ordered_forall	40
Coq.Reals.Runcountable.torn_number	40
Coq.Reals.Runcountable.torn_number_above_first_sequence	40
Coq.Reals.Runcountable.torn_number_below_second_sequence	40
Coq.Reals.Runcountable.limit_index_above_all_indices	40
Coq.Reals.Runcountable.first_indices_increasing	40
Coq.Reals.Runcountable.R_uncountable	40
Coq.Reals.Rfunctions.INR_fact_neq_0	40
Coq.Reals.Rfunctions.fact_simpl	40	1.0.0	synth with cache (only 1: intro n; only 1: simpl; only 1: auto).	0.17568898201	4
Coq.Reals.Rfunctions.simpl_fact	40
Coq.Reals.Rfunctions.pow_O	40	0.0	synth with cache (only 1: intro n; only 1: trivial).	0.15863609314	2
Coq.Reals.Rfunctions.pow_1	40	0.5.0	synth with cache (only 1: intro n; only 1: simpl; only 1: ring).	0.23637509346	8
Coq.Reals.Rfunctions.pow_add	40	0.0.1.0.0.0.0.0	synth with cache (only 1: intros x n; only 1: elim n; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: intros n0 H' m; only 1: rewrite H'; only 1: auto with real).	0.551465988159	9
Coq.Reals.Rfunctions.Rpow_mult_distr	40
Coq.Reals.Rfunctions.pow_nonzero	40
Coq.Reals.Rfunctions.pow_RN_plus	40
Coq.Reals.Rfunctions.pow_lt	40
Coq.Reals.Rfunctions.Rlt_pow_R1	40
Coq.Reals.Rfunctions.Rlt_pow	40
Coq.Reals.Rfunctions.tech_pow_Rmult	40	1.0	synth with cache (only 1: intros n m; only 1: trivial).	0.156251192093	3
Coq.Reals.Rfunctions.tech_pow_Rplus	40
Coq.Reals.Rfunctions.poly	40
Coq.Reals.Rfunctions.Power_monotonic	40
Coq.Reals.Rfunctions.RPow_abs	40
Coq.Reals.Rfunctions.Pow_x_infinity	40
Coq.Reals.Rfunctions.pow_ne_zero	40	1.0.1.0.0.2.0.3.2	synth with cache (only 1: intro n; only 1: case n; only 1: intro H; only 1: absurd (0%nat = 0%nat); only 1: trivial; only 1: trivial; only 1: simpl; only 1: intros; only 1: auto with real).	24.2376348972	2119
Coq.Reals.Rfunctions.Rinv_pow	40
Coq.Reals.Rfunctions.pow_lt_1_zero	40
Coq.Reals.Rfunctions.pow_R1	40
Coq.Reals.Rfunctions.pow_Rsqr	40
Coq.Reals.Rfunctions.pow_le	40	0.0.0.1.0.0.0.0.0	synth with cache (only 1: intros x n; only 1: elim n; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: intros n0 H' H'0; only 1: replace 0 with (x * 0); only 1: auto with real; only 1: auto with real).	0.508542776108	10
Coq.Reals.Rfunctions.pow_1_even	40
Coq.Reals.Rfunctions.pow_1_odd	40
Coq.Reals.Rfunctions.pow_1_abs	40
Coq.Reals.Rfunctions.pow_mult	40
Coq.Reals.Rfunctions.pow_incr	40
Coq.Reals.Rfunctions.pow_R1_Rle	40
Coq.Reals.Rfunctions.Rle_pow	40
Coq.Reals.Rfunctions.pow1	40
Coq.Reals.Rfunctions.pow_Rabs	40
Coq.Reals.Rfunctions.pow_maj_Rabs	40
Coq.Reals.Rfunctions.Rsqr_pow2	40	8.1	synth with cache (only 1: intros; only 1: ring_Rsqr).	6.31363081932	251
Coq.Reals.Rfunctions.PowerRZ.Z_compl.intP	40
Coq.Reals.Rfunctions.PowerRZ.Zpower_NR0	40
Coq.Reals.Rfunctions.PowerRZ.powerRZ_O	40	0.0	synth with cache (only 1: intro n; only 1: auto with relations).	0.184342861176	2
Coq.Reals.Rfunctions.PowerRZ.powerRZ_1	40	1.0.3	synth with cache (only 1: simpl; only 1: intro; only 1: ring).	0.854060173035	32
Coq.Reals.Rfunctions.PowerRZ.powerRZ_NOR	40
Coq.Reals.Rfunctions.PowerRZ.powerRZ_pos_sub	40
Coq.Reals.Rfunctions.PowerRZ.powerRZ_add	40
Coq.Reals.Rfunctions.PowerRZ.Zpower_nat_powerRZ	40
Coq.Reals.Rfunctions.PowerRZ.Zpower_pos_powerRZ	40
Coq.Reals.Rfunctions.PowerRZ.powerRZ_lt	40
Coq.Reals.Rfunctions.PowerRZ.powerRZ_le	40	0.0.1.0.0.0.1.0	synth with cache (only 1: intros x z; only 1: case z; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: auto with real).	0.542663812637	10
Coq.Reals.Rfunctions.PowerRZ.Zpower_nat_powerRZ_absolu	40
Coq.Reals.Rfunctions.PowerRZ.powerRZ_R1	40	0.0.7.0.12	synth with cache (only 1: nzinduct n; only 1: auto with real; only 1: fix odd_equiv 1; only 1: intro n; only 1: now Z.nzsimpl).	16.0841600895	1407
Coq.Reals.Rfunctions.PowerRZ.pow_powerRZ	40	0.3.0.0.0.0	synth with cache (only 1: induction n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite SuccNat2Pos.id_succ; only 1: reflexivity).	0.379785060883	9
Coq.Reals.Rfunctions.PowerRZ.powerRZ_ind	40
Coq.Reals.Rfunctions.PowerRZ.powerRZ_inv	40
Coq.Reals.Rfunctions.PowerRZ.powerRZ_neg	40
Coq.Reals.Rfunctions.PowerRZ.powerRZ_mult_distr	40
Coq.Reals.Rfunctions.GP_finite	40
Coq.Reals.Rfunctions.sum_f_R0_triangle	40
Coq.Reals.Rfunctions.R_dist_pos	40
Coq.Reals.Rfunctions.R_dist_sym	40
Coq.Reals.Rfunctions.R_dist_refl	40
Coq.Reals.Rfunctions.R_dist_eq	40
Coq.Reals.Rfunctions.R_dist_tri	40
Coq.Reals.Rfunctions.R_dist_plus	40
Coq.Reals.Rfunctions.R_dist_mult_l	40
Coq.Reals.Rprod.prod_SO_split	40
Coq.Reals.Rprod.prod_SO_pos	40
Coq.Reals.Rprod.prod_SO_Rle	40
Coq.Reals.Rprod.fact_prodSO	40
Coq.Reals.Rprod.le_n_2n	40	0.0.0.0.0.0	synth with cache (only 1: intro; only 1: simpl; only 1: rewrite <- (Nat.add_0_r n); only 1: rewrite <- Nat.add_assoc; only 1: apply Nat.add_le_mono_l; only 1: apply Nat.le_0_l).	0.286750078201	6
Coq.Reals.Rprod.RfactN_fact2N_factk	40
Coq.Reals.Rprod.INR_fact_lt_0	40
Coq.Reals.Rprod.C_maj	40
Coq.Reals.Exp_prop.E1_cvg	40
Coq.Reals.Exp_prop.exp_form	40
Coq.Reals.Exp_prop.div2_double	40	1.0	synth with cache (only 1: intro n; only 1: apply Nat.div2_double).	1.23350596428	65
Coq.Reals.Exp_prop.div2_S_double	40	1.0	synth with cache (only 1: intro n; only 1: apply Nat.div2_succ_double).	1.85707402229	83
Coq.Reals.Exp_prop.div2_not_R0	40	1.2.2.1.0.2.5	synth with cache (only 1: intro n; only 1: destruct n; only 1: inversion 1; only 1: intros _; only 1: revert n; only 1: fix le_div2 1; only 1: trivial).	25.607888937	2046
Coq.Reals.Exp_prop.Reste_E_maj	40
Coq.Reals.Exp_prop.maj_Reste_cv_R0	40
Coq.Reals.Exp_prop.Reste_E_cv	40
Coq.Reals.Exp_prop.exp_plus	40
Coq.Reals.Exp_prop.exp_pos_pos	40
Coq.Reals.Exp_prop.exp_pos	40
Coq.Reals.Exp_prop.derivable_pt_lim_exp_0	40
Coq.Reals.Exp_prop.derivable_pt_lim_exp	40
Coq.Reals.Rpower.P_Rmin	40	0.0.1.1.0	synth with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: auto; only 1: auto).	0.363034963608	7
Coq.Reals.Rpower.exp_le_3	40
Coq.Reals.Rpower.exp_increasing	40
Coq.Reals.Rpower.exp_lt_inv	40
Coq.Reals.Rpower.exp_ineq1	40
Coq.Reals.Rpower.ln_exists1	40
Coq.Reals.Rpower.ln_exists	40
Coq.Reals.Rpower.exp_ln	40
Coq.Reals.Rpower.exp_inv	40
Coq.Reals.Rpower.exp_Ropp	40
Coq.Reals.Rpower.ln_increasing	40
Coq.Reals.Rpower.ln_exp	40
Coq.Reals.Rpower.ln_1	40
Coq.Reals.Rpower.ln_lt_inv	40
Coq.Reals.Rpower.ln_inv	40
Coq.Reals.Rpower.ln_mult	40
Coq.Reals.Rpower.ln_Rinv	40
Coq.Reals.Rpower.ln_continue	40
Coq.Reals.Rpower.Rpower_plus	40
Coq.Reals.Rpower.Rpower_mult	40
Coq.Reals.Rpower.Rpower_O	40
Coq.Reals.Rpower.Rpower_1	40
Coq.Reals.Rpower.Rpower_pow	40
Coq.Reals.Rpower.Rpower_lt	40
Coq.Reals.Rpower.Rpower_sqrt	40
Coq.Reals.Rpower.Rpower_Ropp	40
Coq.Reals.Rpower.powerRZ_Rpower	40
Coq.Reals.Rpower.Rle_Rpower	40
Coq.Reals.Rpower.ln_lt_2	40
Coq.Reals.Rpower.limit1_ext	40
Coq.Reals.Rpower.limit1_imp	40
Coq.Reals.Rpower.Rinv_Rdiv	40	0.1.5.0	synth with cache (only 1: intros; only 1: unfold Rdiv; only 1: field; only 1: now split).	0.412090063095	15
Coq.Reals.Rpower.Dln	40
Coq.Reals.Rpower.derivable_pt_lim_ln	40
Coq.Reals.Rpower.D_in_imp	40
Coq.Reals.Rpower.D_in_ext	40
Coq.Reals.Rpower.Dpower	40
Coq.Reals.Rpower.derivable_pt_lim_power	40
Coq.Reals.Rpower.Rpower_mult_distr	40
Coq.Reals.Rpower.Rlt_Rpower_l	40
Coq.Reals.Rpower.Rle_Rpower_l	40
Coq.Reals.Rpower.arcsinh_sinh	40
Coq.Reals.Rpower.sinh_arcsinh	40
Coq.Reals.Rpower.derivable_pt_lim_arcsinh	40
Coq.Reals.Rpower.arcsinh_lt	40
Coq.Reals.Rpower.arcsinh_le	40
Coq.Reals.Rpower.arcsinh_0	40
Coq.Reals.ConstructiveRcomplete.CReal_absSmall	40
Coq.Reals.ConstructiveRcomplete.Un_cv_mod_eq	40
Coq.Reals.ConstructiveRcomplete.Rfloor	40
Coq.Reals.ConstructiveRcomplete.FQ_dense	40
Coq.Reals.ConstructiveRcomplete.RQ_limit	40
Coq.Reals.ConstructiveRcomplete.Rdiag_cauchy_sequence	40
Coq.Reals.ConstructiveRcomplete.doubleLeCovariant	40
Coq.Reals.ConstructiveRcomplete.CReal_cv_self	40
Coq.Reals.ConstructiveRcomplete.Un_cv_extens	40
Coq.Reals.ConstructiveRcomplete.R_has_all_rational_limits	40
Coq.Reals.ConstructiveRcomplete.Rcauchy_complete	40
Coq.Reals.ConstructiveRcomplete.CRealImplem	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_increasing_inv	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_unique	40
Coq.Reals.ConstructiveRealsMorphisms.Endomorph_id	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_proper	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_compose	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_le	40	0.1.1.0.1	synth with cache (only 1: intros; only 1: intro abs; only 1: apply CRmorph_increasing_inv in abs; only 1: destruct H; only 1: auto).	0.254837989807	8
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_le_inv	40	0.4.2.3.0	synth with cache (only 1: intros; only 1: intro abs; only 1: destruct H; only 1: apply CRmorph_increasing; only 1: auto).	10.5662419796	579
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_zero	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_one	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_opp	40
Coq.Reals.ConstructiveRealsMorphisms.CRplus_pos_rat_lt	40
Coq.Reals.ConstructiveRealsMorphisms.CRplus_neg_rat_lt	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_plus_rat	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_plus	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_pos	40
Coq.Reals.ConstructiveRealsMorphisms.NatOfZ	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_int	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_inv	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_rat	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_pos_pos_le	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_pos_pos	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_appart	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_appart_zero	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_inv	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_rat	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_increasing_Ql	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_increasing_Qr	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_increasing	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorphism	40
Coq.Reals.ConstructiveRealsMorphisms.RightBound	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inv	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inv_rat	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inv_increasing_Qr	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inv_increasing	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorphismInv	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_surject	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inject	40
Coq.Reals.RIneq.Rle_refl	40	2.0	synth with cache (only 1: intros; only 1: now left || now right).	0.150455951691	4
Coq.Reals.RIneq.Rge_refl	40	0.0.0	synth with cache (only 1: intros; only 1: right; only 1: reflexivity).	0.17723107338	3
Coq.Reals.RIneq.Rlt_irrefl	40
Coq.Reals.RIneq.Rgt_irrefl	40	0.0.0.1	synth with cache (only 1: intros r H; only 1: eapply Rlt_asym; only 1: eauto; only 1: eauto).	0.25802397728	14
Coq.Reals.RIneq.Rlt_not_eq	40	0.0.0.1.0.19	synth with cache (only 1: intros x y z; only 1: intro H; only 1: destruct H; only 1: eapply Rlt_asym; only 1: eauto; only 1: trivial).	28.9287350178	2699
Coq.Reals.RIneq.Rgt_not_eq	40	0.0.0.1.0.0.0	synth with cache (only 1: red; only 1: intros x y z; only 1: intro H; only 1: destruct H; only 1: eapply Rlt_asym; only 1: eauto; only 1: trivial).	0.533971071243	8
Coq.Reals.RIneq.Rlt_dichotomy_converse	40
Coq.Reals.RIneq.Req_dec	40
Coq.Reals.RIneq.Rtotal_order	40	0.1.1.4	synth with cache (only 1: intros x y; only 1: destruct (total_order_T x y); only 1: intuition; only 1: auto).	0.59717297554	42
Coq.Reals.RIneq.Rdichotomy	40	1.3.8.0	synth with cache (only 1: intros x y H; only 1: destruct (total_order_T x y); only 1: intuition; only 1: intuition).	9.19639706612	736
Coq.Reals.RIneq.Rlt_le	40	0.2.2	synth with cache (only 1: intros a b H; only 1: red; only 1: auto).	0.280649900436	19
Coq.Reals.RIneq.Rgt_ge	40	0.2.0	synth with cache (only 1: intros; only 1: red; only 1: tauto).	0.193236112595	5
Coq.Reals.RIneq.Rle_ge	40	0.0.7.2.2	synth with cache (only 1: intros a b H; only 1: red; only 1: inversion_clear H; only 1: auto; only 1: auto).	9.35099697113	729
Coq.Reals.RIneq.Rge_le	40	0.1.0.0	synth with cache (only 1: destruct 1; only 1: auto with real; only 1: red; only 1: auto with real).	0.224359989166	5
Coq.Reals.RIneq.Rlt_gt	40	1.0.0	synth with cache (only 1: intros; only 1: red; only 1: auto with real).	0.172405004501	4
Coq.Reals.RIneq.Rgt_lt	40	0.0	synth with cache (only 1: intros; only 1: auto with real).	0.136791944504	2
Coq.Reals.RIneq.Rnot_le_lt	40
Coq.Reals.RIneq.Rnot_ge_gt	40
Coq.Reals.RIneq.Rnot_le_gt	40	0.0.0.1	synth with cache (only 1: intros r1 r2; only 1: generalize (Rtotal_order r1 r2); only 1: unfold Rle; only 1: tauto).	0.39562702179	23
Coq.Reals.RIneq.Rnot_ge_lt	40	0.0.1	synth with cache (only 1: intros; only 1: apply Rnot_le_lt; only 1: auto with real).	0.322625875473	19
Coq.Reals.RIneq.Rnot_lt_le	40	1.0.0.1	synth with cache (only 1: intros r1 r2; only 1: generalize (Rtotal_order r1 r2); only 1: unfold Rle; only 1: intuition).	0.396133899689	24
Coq.Reals.RIneq.Rnot_gt_le	40	0.1.1.0.1.1	synth with cache (only 1: intros; only 1: destruct (Rtotal_order r1 r2) as [| [H0| H0]]; only 1: auto with real; only 1: subst; only 1: auto with rorders; only 1: contradiction).	2.92752289772	51
Coq.Reals.RIneq.Rnot_gt_ge	40	0.9.0.1	synth with cache (only 1: intros; only 1: red; only 1: generalize (total_order_T r1 r2); only 1: intuition).	12.7428710461	686
Coq.Reals.RIneq.Rnot_lt_ge	40	3.1	synth with cache (only 1: intros; only 1: eauto using Rnot_lt_le with rorders).	1.04508519173	66
Coq.Reals.RIneq.Rlt_not_le	40
Coq.Reals.RIneq.Rgt_not_le	40	2.1	synth with cache (only 1: intros; only 1: auto with real).	0.372543096542	31
Coq.Reals.RIneq.Rlt_not_ge	40
Coq.Reals.RIneq.Rgt_not_ge	40	0.0.1.0.2	synth with cache (only 1: intros; only 1: intro abs; only 1: eapply Rlt_not_le; only 1: eauto with real; only 1: eauto with real).	0.543755054474	22
Coq.Reals.RIneq.Rle_not_lt	40	0.0.1.0.1	synth with cache (only 1: intros; only 1: intro abs; only 1: eapply Rlt_not_le; only 1: eauto with real; only 1: eauto with real).	0.391991138458	21
Coq.Reals.RIneq.Rge_not_lt	40	0.0.0.0.1	synth with cache (only 1: intros; only 1: intro abs; only 1: eapply Rlt_not_le; only 1: eauto with real; only 1: eauto with real).	0.387562036514	20
Coq.Reals.RIneq.Rle_not_gt	40	0.0.1.0.2	synth with cache (only 1: intros; only 1: intro abs; only 1: eapply Rlt_not_le; only 1: eauto with real; only 1: eauto with real).	0.385419130325	22
Coq.Reals.RIneq.Rge_not_gt	40	0.0.1.0.4	synth with cache (only 1: intros; only 1: intro abs; only 1: eapply Rlt_not_le; only 1: eauto with real; only 1: eauto with real).	2.61337804794	38
Coq.Reals.RIneq.Req_le	40	0.1.6	synth with cache (only 1: destruct 1; only 1: right; only 1: auto).	2.18461799622	10
Coq.Reals.RIneq.Req_ge	40	0.2.7	synth with cache (only 1: intros * ->; only 1: right; only 1: reflexivity).	0.47579908371	41
Coq.Reals.RIneq.Req_le_sym	40	1.0	synth with cache (only 1: unfold Rle; only 1: auto with *).	0.13822889328	3
Coq.Reals.RIneq.Req_ge_sym	40	1.0	synth with cache (only 1: unfold Rge; only 1: auto).	0.136552095413	3
Coq.Reals.RIneq.Rgt_asym	40	0.0.1.0.1	synth with cache (only 1: intros; only 1: intro abs; only 1: eapply Rlt_not_le; only 1: eauto with real; only 1: eauto with real).	0.383703947067	21
Coq.Reals.RIneq.Rle_antisym	40
Coq.Reals.RIneq.Rge_antisym	40	1.1.2	synth with cache (only 1: intros r1 r2; only 1: generalize (total_order_T r1 r2); only 1: intuition).	0.668611049652	51
Coq.Reals.RIneq.Rle_le_eq	40	0.0	synth with cache (only 1: intros n m; only 1: intuition).	0.144702911377	2
Coq.Reals.RIneq.Rge_ge_eq	40	0	synth with cache (only 1: intuition).	0.109692811966	1
Coq.Reals.RIneq.Rlt_eq_compat	40	2.4.11	synth with cache (only 1: intros n m p q H1 H2; only 1: intros; only 1: now subst).	7.07849597931	755
Coq.Reals.RIneq.Rgt_eq_compat	40	0.1.2.0.0	synth with cache (only 1: intros x x' y y'; only 1: intros; only 1: replace x with x'; only 1: replace y with y'; only 1: trivial).	0.249382019043	8
Coq.Reals.RIneq.Rle_trans	40
Coq.Reals.RIneq.Rge_trans	40
Coq.Reals.RIneq.Rgt_trans	40
Coq.Reals.RIneq.Rle_lt_trans	40	0.0.3	synth with cache (only 1: generalize eq_trans, Rlt_trans, Rlt_eq_compat; only 1: unfold Rle; only 1: intuition eauto  2).	0.530083179474	29
Coq.Reals.RIneq.Rlt_le_trans	40	0.0.3	synth with cache (only 1: generalize Rlt_trans, Rlt_eq_compat; only 1: unfold Rle; only 1: intuition eauto  2).	0.417779922485	29
Coq.Reals.RIneq.Rge_gt_trans	40
Coq.Reals.RIneq.Rgt_ge_trans	40
Coq.Reals.RIneq.Rlt_dec	40	1.4.7.4	synth with cache (only 1: intros; only 1: generalize (Rlt_asym r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: generalize (total_order_T r1 r2); only 1: intuition).	13.2689299583	978
Coq.Reals.RIneq.Rle_dec	40	0.0.0	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition).	0.255834102631	3
Coq.Reals.RIneq.Rgt_dec	40	1.0.0	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition).	0.433820009232	11
Coq.Reals.RIneq.Rge_dec	40	1.0.0	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition).	0.454855918884	11
Coq.Reals.RIneq.Rlt_le_dec	40	1.1.1.2	synth with cache (only 1: intros; only 1: generalize (Rtotal_order r1 r2); only 1: generalize (total_order_T r1 r2); only 1: intuition).	2.2801721096	13
Coq.Reals.RIneq.Rgt_ge_dec	40	0.0.0	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition).	0.237898826599	3
Coq.Reals.RIneq.Rle_lt_dec	40	0.0.0	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition).	2.07194399834	3
Coq.Reals.RIneq.Rge_gt_dec	40	0.1.0.1.0.0	synth with cache (only 1: intros; only 1: edestruct Rlt_le_dec; only 1: right; only 1: eauto with rorders; only 1: left; only 1: eauto with rorders).	0.53511595726	27
Coq.Reals.RIneq.Rlt_or_le	40	0.0.1	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition).	0.280286073685	13
Coq.Reals.RIneq.Rgt_or_ge	40	0.0.0.0.0.1	synth with cache (only 1: intros; only 1: edestruct Rlt_le_dec; only 1: left; only 1: eauto with rorders; only 1: right; only 1: eauto with rorders).	0.636942148209	38
Coq.Reals.RIneq.Rle_or_lt	40	0.0.1	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition).	2.63871383667	38
Coq.Reals.RIneq.Rge_or_gt	40	0.0.1.0	synth with cache (only 1: intros n m; only 1: elim (Rle_lt_dec m n); only 1: auto with real; only 1: auto with real).	2.57760095596	29
Coq.Reals.RIneq.Rle_lt_or_eq_dec	40	2.4.3	synth with cache (only 1: intros r1 r2; only 1: generalize (total_order_T r1 r2); only 1: intuition).	5.80929994583	362
Coq.Reals.RIneq.inser_trans_R	40
Coq.Reals.RIneq.Rplus_0_r	40	3.0.0.1.0	synth with cache (only 1: intro n; only 1: apply Rquot1; only 1: rewrite Rrepr_plus, Rrepr_0; only 1: rewrite CReal_plus_comm; only 1: apply CReal_plus_0_l).	1.94481992722	29
Coq.Reals.RIneq.Rplus_ne	40	0.0.0.1.2.0	synth with cache (only 1: intro; only 1: split; only 1: ring; only 1: apply Rquot1; only 1: rewrite Rrepr_plus, Rrepr_0; only 1: apply CReal_plus_0_l).	2.15809202194	22
Coq.Reals.RIneq.Rplus_opp_l	40	0.1.0.0.0	synth with cache (only 1: intros; only 1: apply Rquot1; only 1: rewrite Rrepr_plus, Rrepr_opp, Rrepr_0; only 1: rewrite CReal_plus_comm; only 1: apply CReal_plus_opp_r).	1.31386899948	6
Coq.Reals.RIneq.Rplus_opp_r_uniq	40
Coq.Reals.RIneq.Rplus_eq_compat_l	40	7.1	synth with cache (only 1: intros x y; only 1: intuition).	0.273303031921	29
Coq.Reals.RIneq.Rplus_eq_compat_r	40	7.0	synth with cache (only 1: intros r r1 r2; only 1: congruence).	0.281563997269	14
Coq.Reals.RIneq.Rplus_eq_reg_l	40
Coq.Reals.RIneq.Rplus_eq_reg_r	40
Coq.Reals.RIneq.Rplus_0_r_uniq	40	2.4.2.5.0	synth with cache (only 1: intros x y H; only 1: replace y with (- x + x + y) by ring; only 1: rewrite Rplus_assoc; only 1: rewrite H; only 1: ring).	7.41249895096	561
Coq.Reals.RIneq.Rplus_eq_0_l	40
Coq.Reals.RIneq.Rplus_eq_R0	40
Coq.Reals.RIneq.Rinv_r	40
Coq.Reals.RIneq.Rinv_l_sym	40	0.1.0	synth with cache (only 1: intros; only 1: field; only 1: trivial).	2.19058299065	39
Coq.Reals.RIneq.Rinv_r_sym	40	0.1.0	synth with cache (only 1: intros; only 1: field; only 1: trivial).	1.94786691666	39
Coq.Reals.RIneq.Rmult_0_r	40	1.2	synth with cache (only 1: intros; only 1: ring).	0.221294164658	11
Coq.Reals.RIneq.Rmult_0_l	40	0.0	synth with cache (only 1: intro; only 1: ring).	0.155335903168	2
Coq.Reals.RIneq.Rmult_ne	40	0.0.0.1.0.0.0	synth with cache (only 1: split; only 1: apply Rquot1; only 1: rewrite Rrepr_mult, Rrepr_1; only 1: ring; only 1: apply Rquot1; only 1: rewrite Rrepr_mult, Rrepr_1; only 1: apply CReal_mult_1_l).	1.42010903358	8
Coq.Reals.RIneq.Rmult_1_r	40	0.0	synth with cache (only 1: intros; only 1: ring).	0.144869804382	2
Coq.Reals.RIneq.Rmult_eq_compat_l	40	1.0	synth with cache (only 1: intros r r1 r2; only 1: apply f_equal).	0.143038988113	3
Coq.Reals.RIneq.Rmult_eq_compat_r	40	8.1	synth with cache (only 1: intros r r1 r2; only 1: congruence).	0.924078226089	64
Coq.Reals.RIneq.Rmult_eq_reg_l	40
Coq.Reals.RIneq.Rmult_eq_reg_r	40
Coq.Reals.RIneq.Rmult_integral	40
Coq.Reals.RIneq.Rmult_eq_0_compat	40
Coq.Reals.RIneq.Rmult_eq_0_compat_r	40	0.0.0	synth with cache (only 1: intros; only 1: rewrite H; only 1: auto with real).	0.19442987442	3
Coq.Reals.RIneq.Rmult_eq_0_compat_l	40	0	synth with cache (only 1: auto with real).	0.0975160598755	1
Coq.Reals.RIneq.Rmult_neq_0_reg	40	3.0.3	synth with cache (only 1: intros n m; only 1: intro H; only 1: intuition).	0.378208875656	17
Coq.Reals.RIneq.Rmult_integral_contrapositive	40
Coq.Reals.RIneq.Rmult_integral_contrapositive_currified	40	0.0.0.0.3.0	synth with cache (only 1: intros r1 r2 H; only 1: intuition; only 1: case (Rmult_integral r1 r2); only 1: auto with real; only 1: auto with real; only 1: auto with real).	0.674304008484	9
Coq.Reals.RIneq.Rmult_plus_distr_r	40	2.0	synth with cache (only 1: intros; only 1: ring).	9.88291597366	38
Coq.Reals.RIneq.Rsqr_0	40
Coq.Reals.RIneq.Rsqr_0_uniq	40
Coq.Reals.RIneq.Ropp_eq_compat	40	0	synth with cache (only 1: auto with *).	0.095064163208	1
Coq.Reals.RIneq.Ropp_0	40	5	synth with cache (only 1: ring).	0.121384143829	6
Coq.Reals.RIneq.Ropp_eq_0_compat	40	3.10.3	synth with cache (only 1: intros; only 1: rewrite H; only 1: ring).	4.9090950489	561
Coq.Reals.RIneq.Ropp_involutive	40	2.3	synth with cache (only 1: intros z; only 1: ring).	0.184762001038	14
Coq.Reals.RIneq.Ropp_neq_0_compat	40
Coq.Reals.RIneq.Ropp_plus_distr	40	5.6	synth with cache (only 1: intros a b; only 1: ring).	5.28823685646	173
Coq.Reals.RIneq.Ropp_mult_distr_l	40	0.1	synth with cache (only 1: intros; only 1: ring).	0.26639008522	3
Coq.Reals.RIneq.Ropp_mult_distr_l_reverse	40	0.0	synth with cache (only 1: intros; only 1: ring).	0.1570789814	2
Coq.Reals.RIneq.Rmult_opp_opp	40	0.1	synth with cache (only 1: intros; only 1: ring).	0.237673044205	16
Coq.Reals.RIneq.Ropp_mult_distr_r	40	0.0	synth with cache (only 1: intros; only 1: ring).	0.155227184296	2
Coq.Reals.RIneq.Ropp_mult_distr_r_reverse	40	0.0	synth with cache (only 1: intros; only 1: ring).	0.153185844421	2
Coq.Reals.RIneq.Rminus_0_r	40	1.0	synth with cache (only 1: intro n; only 1: ring).	0.536859989166	3
Coq.Reals.RIneq.Rminus_0_l	40	0.0	synth with cache (only 1: intro n; only 1: ring).	0.153131961823	2
Coq.Reals.RIneq.Ropp_minus_distr	40	0.0	synth with cache (only 1: intros; only 1: ring).	0.153707027435	2
Coq.Reals.RIneq.Ropp_minus_distr'	40	0.0	synth with cache (only 1: intros; only 1: ring).	0.151692867279	2
Coq.Reals.RIneq.Rminus_diag_eq	40	0.2.11	synth with cache (only 1: intros n m H; only 1: subst; only 1: ring).	27.7159810066	1143
Coq.Reals.RIneq.Rminus_diag_uniq	40
Coq.Reals.RIneq.Rminus_diag_uniq_sym	40
Coq.Reals.RIneq.Rplus_minus	40	1.1	synth with cache (only 1: intros; only 1: ring).	1.53801298141	26
Coq.Reals.RIneq.Rminus_eq_contra	40	2.9	synth with cache (only 1: intros r b; only 1: intuition).	2.1713180542	172
Coq.Reals.RIneq.Rminus_not_eq	40	0.1.0.1	synth with cache (only 1: red; only 1: intros r1 r2 H H0; only 1: apply H; only 1: auto with real).	0.372963905334	24
Coq.Reals.RIneq.Rminus_not_eq_right	40	0.0.1.0.1	synth with cache (only 1: red; only 1: intros; only 1: elim H; only 1: apply Rminus_diag_eq; only 1: auto).	0.401673078537	25
Coq.Reals.RIneq.Rmult_minus_distr_l	40	1.0	synth with cache (only 1: intros; only 1: ring).	2.63856291771	17
Coq.Reals.RIneq.Rinv_1	40
Coq.Reals.RIneq.Rinv_neq_0_compat	40
Coq.Reals.RIneq.Rinv_involutive	40	0.1.2	synth with cache (only 1: intros; only 1: field; only 1: trivial).	0.559682846069	23
Coq.Reals.RIneq.Rinv_mult_distr	40
Coq.Reals.RIneq.Ropp_inv_permute	40	0.0.1	synth with cache (only 1: intros; only 1: field; only 1: trivial).	0.193536043167	4
Coq.Reals.RIneq.Rinv_r_simpl_r	40	1.10.0	synth with cache (only 1: intros; only 1: field; only 1: trivial).	6.91559505463	418
Coq.Reals.RIneq.Rinv_r_simpl_l	40	1.10.0	synth with cache (only 1: intros; only 1: field; only 1: auto with real).	8.42864179611	479
Coq.Reals.RIneq.Rinv_r_simpl_m	40	1.11.0	synth with cache (only 1: intros; only 1: field; only 1: auto with real).	31.0472421646	1365
Coq.Reals.RIneq.Rinv_mult_simpl	40
Coq.Reals.RIneq.Rplus_gt_compat_l	40	4.9	synth with cache (only 1: generalize Rlt_trans, Rlt_eq_compat; only 1: auto with *).	4.95083379745	366
Coq.Reals.RIneq.Rplus_lt_compat_r	40
Coq.Reals.RIneq.Rplus_gt_compat_r	40	3.2.1.1	synth with cache (only 1: intros; only 1: rewrite (Rplus_comm r1 r); only 1: rewrite (Rplus_comm r2 r); only 1: auto with real).	1.32193517685	61
Coq.Reals.RIneq.Rplus_le_compat_l	40	4.0.8	synth with cache (only 1: generalize eq_trans, Rlt_trans, Rlt_eq_compat; only 1: unfold Rle; only 1: intuition).	7.27439403534	428
Coq.Reals.RIneq.Rplus_ge_compat_l	40
Coq.Reals.RIneq.Rplus_le_compat_r	40	3.2.1.1	synth with cache (only 1: intros; only 1: rewrite (Rplus_comm r2 r); only 1: rewrite (Rplus_comm r1 r); only 1: auto with real).	14.1394660473	499
Coq.Reals.RIneq.Rplus_ge_compat_r	40	3.2.1.1	synth with cache (only 1: intros; only 1: rewrite (Rplus_comm r1 r); only 1: rewrite (Rplus_comm r2 r); only 1: auto with real).	1.32842898369	58
Coq.Reals.RIneq.Rplus_lt_compat	40
Coq.Reals.RIneq.Rplus_le_compat	40
Coq.Reals.RIneq.Rplus_gt_compat	40	0.0.2.0	synth with cache (only 1: intros; only 1: apply Rlt_trans with (r2 + r3); only 1: auto with real; only 1: auto with real).	0.270280838013	6
Coq.Reals.RIneq.Rplus_ge_compat	40
Coq.Reals.RIneq.Rplus_lt_le_compat	40
Coq.Reals.RIneq.Rplus_le_lt_compat	40
Coq.Reals.RIneq.Rplus_gt_ge_compat	40	0.0.4.1	synth with cache (only 1: intros; only 1: apply Rle_lt_trans with (r2 + r3); only 1: auto with real; only 1: auto with real).	0.823306083679	25
Coq.Reals.RIneq.Rplus_ge_gt_compat	40	0.0.3.3	synth with cache (only 1: intros; only 1: apply Rlt_le_trans with (r2 + r3); only 1: auto with real; only 1: auto with real).	0.566065073013	16
Coq.Reals.RIneq.Rplus_lt_0_compat	40
Coq.Reals.RIneq.Rplus_le_lt_0_compat	40
Coq.Reals.RIneq.Rplus_lt_le_0_compat	40
Coq.Reals.RIneq.Rplus_le_le_0_compat	40
Coq.Reals.RIneq.sum_inequa_Rle_lt	40	6.1.0	synth with cache (only 1: intros n m p q; only 1: intros; only 1: intuition).	0.520519018173	13
Coq.Reals.RIneq.Rplus_lt_reg_l	40
Coq.Reals.RIneq.Rplus_lt_reg_r	40
Coq.Reals.RIneq.Rplus_le_reg_l	40
Coq.Reals.RIneq.Rplus_le_reg_r	40
Coq.Reals.RIneq.Rplus_gt_reg_l	40
Coq.Reals.RIneq.Rplus_ge_reg_l	40
Coq.Reals.RIneq.Rplus_le_reg_pos_r	40
Coq.Reals.RIneq.Rplus_lt_reg_pos_r	40
Coq.Reals.RIneq.Rplus_ge_reg_neg_r	40
Coq.Reals.RIneq.Rplus_gt_reg_neg_r	40
Coq.Reals.RIneq.Ropp_gt_lt_contravar	40
Coq.Reals.RIneq.Ropp_lt_gt_contravar	40	8.0	synth with cache (only 1: intros; only 1: eauto with rorders).	0.279617786407	17
Coq.Reals.RIneq.Ropp_lt_contravar	40	1.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Rlt_def; only 1: rewrite Rrepr_opp, Rrepr_opp; only 1: apply CRealLtForget; only 1: apply CReal_opp_gt_lt_contravar; only 1: rewrite Rlt_def in H; only 1: apply CRealLtEpsilon; only 1: exact H).	0.584951162338	11
Coq.Reals.RIneq.Ropp_gt_contravar	40	1	synth with cache (only 1: auto with real).	4.9826631546	100
Coq.Reals.RIneq.Ropp_le_ge_contravar	40	0.0.0.8.2	synth with cache (only 1: destruct 1; only 1: red; only 1: auto with real; only 1: red; only 1: auto with real).	17.5545501709	585
Coq.Reals.RIneq.Ropp_ge_le_contravar	40	1.0	synth with cache (only 1: unfold Rge; only 1: intuition).	0.203732013702	3
Coq.Reals.RIneq.Ropp_le_contravar	40	2	synth with cache (only 1: auto with real).	0.168443918228	11
Coq.Reals.RIneq.Ropp_ge_contravar	40	2.0.0	synth with cache (only 1: unfold Rge; only 1: intros; only 1: intuition).	0.298919916153	5
Coq.Reals.RIneq.Ropp_0_lt_gt_contravar	40
Coq.Reals.RIneq.Ropp_0_gt_lt_contravar	40	0.0.0.0	synth with cache (only 1: intros; only 1: replace 0 with (- 0); only 1: auto with real; only 1: auto with real).	0.30957698822	4
Coq.Reals.RIneq.Ropp_lt_gt_0_contravar	40	0.0.0.0	synth with cache (only 1: intros; only 1: replace 0 with (- 0); only 1: auto with real; only 1: auto with real).	0.292293071747	4
Coq.Reals.RIneq.Ropp_gt_lt_0_contravar	40	0.0.0.0	synth with cache (only 1: intros; only 1: replace 0 with (- 0); only 1: auto with real; only 1: auto with real).	0.28373503685	4
Coq.Reals.RIneq.Ropp_0_le_ge_contravar	40	0.0.0.0	synth with cache (only 1: intros; only 1: replace 0 with (- 0); only 1: auto with real; only 1: auto with real).	0.276350021362	4
Coq.Reals.RIneq.Ropp_0_ge_le_contravar	40	0.0.0.0	synth with cache (only 1: intros; only 1: replace 0 with (- 0); only 1: auto with real; only 1: auto with real).	0.269726991653	4
Coq.Reals.RIneq.Ropp_lt_cancel	40
Coq.Reals.RIneq.Ropp_gt_cancel	40	0.0.2.0	synth with cache (only 1: intros x y H'; only 1: rewrite <- (Ropp_involutive x); only 1: rewrite <- (Ropp_involutive y); only 1: auto with real).	0.45010304451	19
Coq.Reals.RIneq.Ropp_le_cancel	40	0.0.2.0	synth with cache (only 1: intros x y H'; only 1: rewrite <- (Ropp_involutive x); only 1: rewrite <- (Ropp_involutive y); only 1: auto with real).	0.592717885971	22
Coq.Reals.RIneq.Ropp_ge_cancel	40	0.0.2.0	synth with cache (only 1: intros x y H'; only 1: rewrite <- (Ropp_involutive x); only 1: rewrite <- (Ropp_involutive y); only 1: auto with real).	0.473936796188	6
Coq.Reals.RIneq.Rmult_lt_compat_r	40
Coq.Reals.RIneq.Rmult_gt_compat_r	40	3.6	synth with cache (only 1: intros A P H p q; only 1: firstorder).	2.26904010773	139
Coq.Reals.RIneq.Rmult_gt_compat_l	40	3.8	synth with cache (only 1: intros A P H p q; only 1: firstorder).	2.88666009903	190
Coq.Reals.RIneq.Rmult_le_compat_l	40
Coq.Reals.RIneq.Rmult_le_compat_r	40
Coq.Reals.RIneq.Rmult_ge_compat_l	40	6.10	synth with cache (only 1: intros A P H p q; only 1: firstorder).	13.1435279846	1173
Coq.Reals.RIneq.Rmult_ge_compat_r	40
Coq.Reals.RIneq.Rmult_le_compat	40
Coq.Reals.RIneq.Rmult_ge_compat	40	1.11	synth with cache (only 1: intros R x y H x0 y0 H0; only 1: firstorder).	8.44711685181	539
Coq.Reals.RIneq.Rmult_gt_0_lt_compat	40
Coq.Reals.RIneq.Rmult_le_0_lt_compat	40
Coq.Reals.RIneq.Rmult_lt_0_compat	40
Coq.Reals.RIneq.Rmult_le_compat_neg_l	40
Coq.Reals.RIneq.Rmult_le_ge_compat_neg_l	40	0.1.1.3.0	synth with cache (only 1: intros r r1 r2 H H0; only 1: replace r with (- - r); only 1: do 2 rewrite (Ropp_mult_distr_l_reverse (- r)); only 1: auto with real; only 1: auto with real).	0.818742990494	33
Coq.Reals.RIneq.Rmult_lt_gt_compat_neg_l	40	0.3.2.8.0	synth with cache (only 1: intros; only 1: replace r with (- - r); only 1: do 2 rewrite (Ropp_mult_distr_l_reverse (- r)); only 1: auto with real; only 1: auto with real).	8.80009889603	579
Coq.Reals.RIneq.Rmult_lt_reg_l	40
Coq.Reals.RIneq.Rmult_lt_reg_r	40
Coq.Reals.RIneq.Rmult_gt_reg_l	40	4.0.1.1	synth with cache (only 1: intros; only 1: apply Rmult_lt_reg_l with r; only 1: exact H; only 1: auto with real).	2.62524700165	68
Coq.Reals.RIneq.Rmult_le_reg_l	40
Coq.Reals.RIneq.Rmult_le_reg_r	40
Coq.Reals.RIneq.Rlt_minus	40
Coq.Reals.RIneq.Rgt_minus	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply (Rplus_lt_reg_l r2); only 1: replace (r2 + (r1 - r2)) with r1 by ring; only 1: now rewrite Rplus_0_r).	0.290987968445	4
Coq.Reals.RIneq.Rlt_Rminus	40
Coq.Reals.RIneq.Rle_minus	40	1.0.0.4	synth with cache (only 1: intros r1 r2; only 1: generalize (Rlt_asym r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: unfold Rle; only 1: intuition).	2.92399597168	54
Coq.Reals.RIneq.Rge_minus	40
Coq.Reals.RIneq.Rminus_lt	40
Coq.Reals.RIneq.Rminus_gt	40
Coq.Reals.RIneq.Rminus_gt_0_lt	40
Coq.Reals.RIneq.Rminus_le	40	0.0.0.1.0.0	synth with cache (only 1: intros; only 1: replace r2 with (0 + r2); only 1: replace r1 with (r1 - r2 + r2); only 1: auto with real; only 1: ring; only 1: auto with real).	0.394158840179	7
Coq.Reals.RIneq.Rminus_ge	40
Coq.Reals.RIneq.tech_Rplus	40
Coq.Reals.RIneq.Rle_0_sqr	40
Coq.Reals.RIneq.Rlt_0_sqr	40
Coq.Reals.RIneq.Rplus_sqr_eq_0_l	40
Coq.Reals.RIneq.Rplus_sqr_eq_0	40
Coq.Reals.RIneq.Rlt_0_1	40	0.0.0	synth with cache (only 1: replace 1 with (0 + 1); only 1: apply Rlt_n_Sn; only 1: apply Rplus_0_l).	0.228361129761	3
Coq.Reals.RIneq.Rle_0_1	40	0.1.0.2	synth with cache (only 1: replace 1 with 1²; only 1: auto with real; only 1: unfold Rsqr; only 1: auto with real).	0.532504081726	21
Coq.Reals.RIneq.Rinv_0_lt_compat	40
Coq.Reals.RIneq.Rinv_lt_0_compat	40	0.0.0.0.1.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Rnot_le_lt; only 1: red; only 1: intros; only 1: absurd (1 <= 0); only 1: auto with real; only 1: replace 1 with (r * / r); only 1: replace 0 with (r * 0); only 1: auto with real; only 1: ring; only 1: auto with real).	18.0305521488	514
Coq.Reals.RIneq.Rinv_lt_contravar	40
Coq.Reals.RIneq.Rinv_1_lt_contravar	40
Coq.Reals.RIneq.Rle_lt_0_plus_1	40
Coq.Reals.RIneq.Rlt_plus_1	40	16	synth with cache (only 1: apply Rlt_n_Sn).	30.7876341343	1482
Coq.Reals.RIneq.tech_Rgt_minus	40	1.0.0.0.2.5	synth with cache (only 1: intros x y; only 1: intros; only 1: pattern x at 1; only 1: rewrite <- (Rplus_0_r x); only 1: apply Rplus_lt_compat_l; only 1: auto with real).	10.9917960167	596
Coq.Reals.RIneq.S_INR	40	1.2.0.3.1	synth with cache (only 1: intro n; only 1: destruct n; only 1: simpl; only 1: auto with real; only 1: reflexivity).	5.80784916878	258
Coq.Reals.RIneq.S_O_plus_INR	40	3.0.1.4.0.2	synth with cache (only 1: intro n; only 1: simpl; only 1: destruct n; only 1: auto with real; only 1: simpl; only 1: auto with real).	11.9888827801	836
Coq.Reals.RIneq.plus_INR	40
Coq.Reals.RIneq.minus_INR	40
Coq.Reals.RIneq.mult_INR	40
Coq.Reals.RIneq.pow_INR	40
Coq.Reals.RIneq.lt_0_INR	40
Coq.Reals.RIneq.lt_INR	40
Coq.Reals.RIneq.lt_1_INR	40
Coq.Reals.RIneq.pos_INR_nat_of_P	40
Coq.Reals.RIneq.pos_INR	40
Coq.Reals.RIneq.INR_lt	40
Coq.Reals.RIneq.le_INR	40	1.1.3.7	synth with cache (only 1: unfold Rle; only 1: induction 1; only 1: now right; only 1: intuition).	16.0963730812	1468
Coq.Reals.RIneq.INR_not_0	40	0.0.0.0.4	synth with cache (only 1: intro n; only 1: intro H; only 1: intro H1; only 1: rewrite H1 in H; only 1: now apply H).	1.06540203094	41
Coq.Reals.RIneq.not_0_INR	40
Coq.Reals.RIneq.not_INR	40
Coq.Reals.RIneq.INR_eq	40
Coq.Reals.RIneq.INR_le	40
Coq.Reals.RIneq.not_1_INR	40
Coq.Reals.RIneq.IZN	40
Coq.Reals.RIneq.INR_IPR	40
Coq.Reals.RIneq.INR_IZR_INZ	40
Coq.Reals.RIneq.plus_IZR_NEG_POS	40
Coq.Reals.RIneq.plus_IZR	40
Coq.Reals.RIneq.mult_IZR	40
Coq.Reals.RIneq.pow_IZR	40
Coq.Reals.RIneq.succ_IZR	40
Coq.Reals.RIneq.opp_IZR	40
Coq.Reals.RIneq.minus_IZR	40
Coq.Reals.RIneq.Z_R_minus	40
Coq.Reals.RIneq.lt_0_IZR	40
Coq.Reals.RIneq.lt_IZR	40
Coq.Reals.RIneq.eq_IZR_R0	40
Coq.Reals.RIneq.eq_IZR	40
Coq.Reals.RIneq.not_0_IZR	40
Coq.Reals.RIneq.le_0_IZR	40
Coq.Reals.RIneq.le_IZR	40
Coq.Reals.RIneq.le_IZR_R1	40
Coq.Reals.RIneq.IZR_ge	40
Coq.Reals.RIneq.IZR_le	40
Coq.Reals.RIneq.IZR_lt	40
Coq.Reals.RIneq.IZR_neq	40	0.13.1.0.3	synth with cache (only 1: red; only 1: intros r1 r2 H H0; only 1: apply H; only 1: apply eq_IZR; only 1: trivial).	19.1331210136	2685
Coq.Reals.RIneq.one_IZR_lt1	40
Coq.Reals.RIneq.one_IZR_r_R1	40
Coq.Reals.RIneq.single_z_r_R1	40
Coq.Reals.RIneq.tech_single_z_r_R1	40
Coq.Reals.RIneq.Rmult_le_pos	40	0.0.0.1	synth with cache (only 1: intros; only 1: replace 0 with (0 * r2); only 1: auto with real; only 1: auto with real).	1.64011383057	103
Coq.Reals.RIneq.Rinv_le_contravar	40
Coq.Reals.RIneq.Rle_Rinv	40
Coq.Reals.RIneq.Ropp_div	40
Coq.Reals.RIneq.double	40	0.0	synth with cache (only 1: intros; only 1: ring).	0.156457185745	2
Coq.Reals.RIneq.double_var	40	17.1	synth with cache (only 1: intros; only 1: field).	9.71120619774	889
Coq.Reals.RIneq.R_rm	40
Coq.Reals.RIneq.Zeq_bool_IZR	40
Coq.Reals.RIneq.Rmult_ge_0_gt_0_lt_compat	40	0.0.2.0	synth with cache (only 1: intros; only 1: apply Rle_lt_trans with (r2 * r3); only 1: auto with real; only 1: auto with real).	1.05015397072	30
Coq.Reals.RIneq.le_epsilon	40
Coq.Reals.RIneq.completeness_weak	40
Coq.Reals.RIneq.Rdiv_lt_0_compat	40
Coq.Reals.RIneq.Rdiv_plus_distr	40
Coq.Reals.RIneq.Rdiv_minus_distr	40	1.5.8.7	synth with cache (only 1: intros x n; only 1: unfold Rdiv; only 1: intro; only 1: ring).	13.5047090054	1705
Coq.Reals.RIneq.Req_EM_T	40	0.0.1.2	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), Rlt_dichotomy_converse; only 1: unfold not; only 1: intuition eauto  3).	0.233114004135	7
Coq.Reals.ClassicalDedekindReals.isLowerCut_hprop	40
Coq.Reals.ClassicalDedekindReals.lowerCutBelow	40
Coq.Reals.ClassicalDedekindReals.lowerCutAbove	40
Coq.Reals.ClassicalDedekindReals.DRealQlim_rec	40
Coq.Reals.ClassicalDedekindReals.DRealQlim	40
Coq.Reals.ClassicalDedekindReals.DRealAbstr	40
Coq.Reals.ClassicalDedekindReals.UpperAboveLower	40
Coq.Reals.ClassicalDedekindReals.DRealRepr	40
Coq.Reals.ClassicalDedekindReals.Rle_antisym	40
Coq.Reals.ClassicalDedekindReals.lowerUpper	40
Coq.Reals.ClassicalDedekindReals.DRealOpen	40
Coq.Reals.ClassicalDedekindReals.DRealReprQ	40
Coq.Reals.ClassicalDedekindReals.DRealReprQup	40
Coq.Reals.ClassicalDedekindReals.DRealQuot1	40
Coq.Reals.ClassicalDedekindReals.DRealAbstrFalse	40
Coq.Reals.ClassicalDedekindReals.DRealQuot2	40
Coq.Reals.ArithProp.minus_neq_O	40
Coq.Reals.ArithProp.le_minusni_n	40
Coq.Reals.ArithProp.lt_minus_O_lt	40
Coq.Reals.ArithProp.even_odd_cor	40	2.4.5	synth with cache (only 1: simpl; only 1: fix even_odd_double 1; only 1: trivial).	3.9782679081	430
Coq.Reals.ArithProp.le_double	40
Coq.Reals.ArithProp.euclidian_division	40
Coq.Reals.ArithProp.tech8	40	3.1.0	synth with cache (only 1: intro n; only 1: intro H; only 1: auto with arith).	0.200776100159	7
Coq.Reals.R_Ifp.tech_up	40
Coq.Reals.R_Ifp.up_tech	40
Coq.Reals.R_Ifp.fp_R0	40
Coq.Reals.R_Ifp.for_base_fp	40
Coq.Reals.R_Ifp.base_fp	40
Coq.Reals.R_Ifp.base_Int_part	40
Coq.Reals.R_Ifp.Int_part_INR	40
Coq.Reals.R_Ifp.fp_nat	40
Coq.Reals.R_Ifp.R0_fp_O	40
Coq.Reals.R_Ifp.Rminus_Int_part1	40
Coq.Reals.R_Ifp.Rminus_Int_part2	40
Coq.Reals.R_Ifp.Rminus_fp1	40
Coq.Reals.R_Ifp.Rminus_fp2	40
Coq.Reals.R_Ifp.plus_Int_part1	40
Coq.Reals.R_Ifp.plus_Int_part2	40
Coq.Reals.R_Ifp.plus_frac_part1	40
Coq.Reals.R_Ifp.plus_frac_part2	40
Coq.Reals.Machin.atan_sub_correct	40
Coq.Reals.Machin.tech	40
Coq.Reals.Machin.Machin_2_3	40
Coq.Reals.Machin.Machin_4_5_239	40
Coq.Reals.Machin.Machin_2_3_7	40
Coq.Reals.Machin.PI_2_3_7_ineq	40
Coq.Reals.RiemannInt.phi_sequence_prop	40
Coq.Reals.RiemannInt.RiemannInt_P1	40
Coq.Reals.RiemannInt.RiemannInt_P2	40
Coq.Reals.RiemannInt.RiemannInt_P3	40
Coq.Reals.RiemannInt.RiemannInt_exists	40
Coq.Reals.RiemannInt.RiemannInt_P4	40
Coq.Reals.RiemannInt.RinvN_pos	40	0.1.1.0.0	synth with cache (only 1: intros n; only 1: apply Rinv_0_lt_compat; only 1: case n; only 1: auto with real; only 1: auto with arith real).	0.397486925125	7
Coq.Reals.RiemannInt.RinvN_cv	40
Coq.Reals.RiemannInt.Riemann_integrable_ext	40
Coq.Reals.RiemannInt.RiemannInt_P5	40
Coq.Reals.RiemannInt.maxN	40
Coq.Reals.RiemannInt.Heine_cor1	40
Coq.Reals.RiemannInt.Heine_cor2	40
Coq.Reals.RiemannInt.SubEqui_P1	40	0	synth with cache (only 1: reflexivity).	0.172638893127	1
Coq.Reals.RiemannInt.SubEqui_P2	40
Coq.Reals.RiemannInt.SubEqui_P3	40
Coq.Reals.RiemannInt.SubEqui_P4	40
Coq.Reals.RiemannInt.SubEqui_P5	40
Coq.Reals.RiemannInt.SubEqui_P6	40
Coq.Reals.RiemannInt.SubEqui_P7	40
Coq.Reals.RiemannInt.SubEqui_P8	40
Coq.Reals.RiemannInt.SubEqui_P9	40
Coq.Reals.RiemannInt.RiemannInt_P6	40
Coq.Reals.RiemannInt.RiemannInt_P7	40
Coq.Reals.RiemannInt.continuity_implies_RiemannInt	40
Coq.Reals.RiemannInt.RiemannInt_P8	40
Coq.Reals.RiemannInt.RiemannInt_P9	40
Coq.Reals.RiemannInt.RiemannInt_P10	40
Coq.Reals.RiemannInt.RiemannInt_P11	40
Coq.Reals.RiemannInt.RiemannInt_P12	40
Coq.Reals.RiemannInt.RiemannInt_P13	40
Coq.Reals.RiemannInt.RiemannInt_P14	40
Coq.Reals.RiemannInt.RiemannInt_P15	40
Coq.Reals.RiemannInt.RiemannInt_P16	40
Coq.Reals.RiemannInt.Rle_cv_lim	40
Coq.Reals.RiemannInt.RiemannInt_P17	40
Coq.Reals.RiemannInt.RiemannInt_P18	40
Coq.Reals.RiemannInt.RiemannInt_P19	40
Coq.Reals.RiemannInt.FTC_P1	40
Coq.Reals.RiemannInt.RiemannInt_P20	40
Coq.Reals.RiemannInt.RiemannInt_P21	40
Coq.Reals.RiemannInt.RiemannInt_P22	40
Coq.Reals.RiemannInt.RiemannInt_P23	40
Coq.Reals.RiemannInt.RiemannInt_P24	40
Coq.Reals.RiemannInt.RiemannInt_P25	40
Coq.Reals.RiemannInt.RiemannInt_P26	40
Coq.Reals.RiemannInt.RiemannInt_P27	40
Coq.Reals.Ranalysis2.formule	40
Coq.Reals.Ranalysis2.maj_term1	40
Coq.Reals.Ranalysis2.maj_term2	40
Coq.Reals.Ranalysis2.maj_term3	40
Coq.Reals.Ranalysis2.maj_term4	40
Coq.Reals.Ranalysis2.D_x_no_cond	40
Coq.Reals.Ranalysis2.Rabs_4	40
Coq.Reals.Ranalysis2.Rlt_4	40
Coq.Reals.Ranalysis2.quadruple	40	1.1	synth with cache (only 1: intro; only 1: ring).	0.229004144669	4
Coq.Reals.Ranalysis2.quadruple_var	40	2.3	synth with cache (only 1: intro; only 1: field).	0.24475312233	7
Coq.Reals.Ranalysis2.continuous_neq_0	40
Coq.Reals.Rtopology.interior_P1	40
Coq.Reals.Rtopology.interior_P2	40	1.0.0.1.3	synth with cache (only 1: intros a Ha; only 1: unfold included; only 1: unfold interior; only 1: intros; only 1: auto).	0.342771053314	10
Coq.Reals.Rtopology.adherence_P1	40
Coq.Reals.Rtopology.included_trans	40	1.2.5.4.2	synth with cache (only 1: intros; only 1: revert H; only 1: unfold included; only 1: intros f X x; only 1: auto).	9.76398491859	683
Coq.Reals.Rtopology.interior_P3	40
Coq.Reals.Rtopology.complementary_P1	40
Coq.Reals.Rtopology.adherence_P2	40
Coq.Reals.Rtopology.adherence_P3	40
Coq.Reals.Rtopology.open_set_P1	40
Coq.Reals.Rtopology.closed_set_P1	40
Coq.Reals.Rtopology.neighbourhood_P1	40	7.16.2	synth with cache (only 1: unfold included; only 1: intros P Q H l; only 1: firstorder).	29.3333289623	4111
Coq.Reals.Rtopology.open_set_P2	40	7.1.2.1.5	synth with cache (only 1: intros P exnot allP; only 1: red; only 1: intros Ext A a; only 1: red; only 1: firstorder).	20.2574121952	1557
Coq.Reals.Rtopology.open_set_P3	40
Coq.Reals.Rtopology.open_set_P4	40	3.1	synth with cache (only 1: intros P H; only 1: elim H).	0.213184118271	6
Coq.Reals.Rtopology.open_set_P5	40
Coq.Reals.Rtopology.disc_P1	40
Coq.Reals.Rtopology.continuity_P1	40
Coq.Reals.Rtopology.continuity_P2	40
Coq.Reals.Rtopology.continuity_P3	40
Coq.Reals.Rtopology.Rsepare	40
Coq.Reals.Rtopology.restriction_family	40
Coq.Reals.Rtopology.family_P1	40
Coq.Reals.Rtopology.open_set_P6	40	8.2.8	synth with cache (only 1: intros P H n; only 1: unfold open_set; only 1: firstorder).	19.2977330685	1816
Coq.Reals.Rtopology.compact_P1	40
Coq.Reals.Rtopology.compact_P2	40
Coq.Reals.Rtopology.compact_EMP	40
Coq.Reals.Rtopology.compact_eqDom	40
Coq.Reals.Rtopology.compact_P3	40
Coq.Reals.Rtopology.compact_P4	40
Coq.Reals.Rtopology.compact_P5	40
Coq.Reals.Rtopology.compact_carac	40
Coq.Reals.Rtopology.continuity_compact	40
Coq.Reals.Rtopology.prolongement_C0	40
Coq.Reals.Rtopology.continuity_ab_maj	40
Coq.Reals.Rtopology.continuity_ab_min	40
Coq.Reals.Rtopology.ValAdh_un_exists	40
Coq.Reals.Rtopology.ValAdh_un_prop	40
Coq.Reals.Rtopology.adherence_P4	40	5.2.4.17	synth with cache (only 1: red; only 1: unfold included, neighbourhood; only 1: intros P Q H l; only 1: firstorder).	33.5840718746	3750
Coq.Reals.Rtopology.compact_P6	40
Coq.Reals.Rtopology.Bolzano_Weierstrass	40
Coq.Reals.Rtopology.is_lub_u	40
Coq.Reals.Rtopology.domain_P1	40
Coq.Reals.Rtopology.Heine	40
Coq.Reals.Raxioms.Rrepr_0	40
Coq.Reals.Raxioms.Rrepr_1	40
Coq.Reals.Raxioms.Rrepr_plus	40
Coq.Reals.Raxioms.Rrepr_opp	40
Coq.Reals.Raxioms.Rrepr_minus	40
Coq.Reals.Raxioms.Rrepr_mult	40
Coq.Reals.Raxioms.Rrepr_inv	40
Coq.Reals.Raxioms.Rrepr_le	40
Coq.Reals.Raxioms.Rrepr_appart	40
Coq.Reals.Raxioms.Rappart_repr	40
Coq.Reals.Raxioms.Rplus_comm	40
Coq.Reals.Raxioms.Rplus_assoc	40
Coq.Reals.Raxioms.Rplus_opp_r	40
Coq.Reals.Raxioms.Rplus_0_l	40
Coq.Reals.Raxioms.Rmult_comm	40
Coq.Reals.Raxioms.Rmult_assoc	40
Coq.Reals.Raxioms.Rinv_l	40
Coq.Reals.Raxioms.Rmult_1_l	40
Coq.Reals.Raxioms.R1_neq_R0	40
Coq.Reals.Raxioms.Rmult_plus_distr_l	40
Coq.Reals.Raxioms.Rlt_asym	40
Coq.Reals.Raxioms.Rlt_trans	40
Coq.Reals.Raxioms.Rplus_lt_compat_l	40
Coq.Reals.Raxioms.Rmult_lt_compat_l	40
Coq.Reals.Raxioms.Rrepr_INR	40
Coq.Reals.Raxioms.Rrepr_IPR2	40
Coq.Reals.Raxioms.Rrepr_IPR	40
Coq.Reals.Raxioms.Rrepr_IZR	40
Coq.Reals.Raxioms.archimed	40
Coq.Reals.Raxioms.completeness	40
Coq.Reals.Rseries.sequence.EUn_noempty	40
Coq.Reals.Rseries.sequence.Un_in_EUn	40	0.5.2	synth with cache (only 1: unfold EUn; only 1: intro; only 1: now exists n).	0.200778007507	10
Coq.Reals.Rseries.sequence.Un_bound_imp	40
Coq.Reals.Rseries.sequence.growing_prop	40
Coq.Reals.Rseries.sequence.Un_cv_crit_lub	40
Coq.Reals.Rseries.sequence.Un_cv_crit	40
Coq.Reals.Rseries.sequence.finite_greater	40
Coq.Reals.Rseries.sequence.cauchy_bound	40
Coq.Reals.Rseries.GP_infinite	40
Coq.Reals.Rseries.CV_shift	40
Coq.Reals.Rseries.CV_shift'	40	1.1.2.2.1	synth with cache (only 1: intros f' k l cvfk eps ep; only 1: destruct (cvfk eps ep) as [N Pn]; only 1: exists N; only 1: intros n nN; only 1: auto with arith).	5.89720892906	192
Coq.Reals.Rseries.Un_growing_shift	40	1.0.0.0.3	synth with cache (only 1: intros n m; only 1: intro; only 1: intro; only 1: simpl; only 1: auto).	0.310766935349	9
Coq.Reals.Binomial.pascal_step1	40
Coq.Reals.Binomial.pascal_step2	40
Coq.Reals.Binomial.pascal_step3	40
Coq.Reals.Binomial.pascal	40
Coq.Reals.Binomial.binomial	40
Coq.Reals.PSeries_reg.Boule_convex	40
Coq.Reals.PSeries_reg.boule_of_interval	40
Coq.Reals.PSeries_reg.boule_in_interval	40
Coq.Reals.PSeries_reg.Ball_in_inter	40
Coq.Reals.PSeries_reg.Boule_center	40
Coq.Reals.PSeries_reg.CVN_CVU	40
Coq.Reals.PSeries_reg.CVU_continuity	40
Coq.Reals.PSeries_reg.continuity_pt_finite_SF	40
Coq.Reals.PSeries_reg.SFL_continuity_pt	40
Coq.Reals.PSeries_reg.SFL_continuity	40
Coq.Reals.PSeries_reg.CVN_R_CVS	40
Coq.Reals.PSeries_reg.CVU_cv	40
Coq.Reals.PSeries_reg.CVU_ext_lim	40
Coq.Reals.PSeries_reg.CVU_derivable	40
Coq.Reals.Ranalysis_reg.AppVar	40
Coq.Reals.MVT.MVT	40
Coq.Reals.MVT.MVT_cor1	40
Coq.Reals.MVT.MVT_cor2	40
Coq.Reals.MVT.MVT_cor3	40
Coq.Reals.MVT.Rolle	40
Coq.Reals.MVT.nonneg_derivative_1	40
Coq.Reals.MVT.nonpos_derivative_0	40
Coq.Reals.MVT.increasing_decreasing_opp	40
Coq.Reals.MVT.nonpos_derivative_1	40
Coq.Reals.MVT.positive_derivative	40
Coq.Reals.MVT.strictincreasing_strictdecreasing_opp	40	0.0.0.2.7.1.2	synth with cache (only 1: unfold increasing, decreasing, opp_fct; only 1: intros; only 1: intro; only 1: intros; only 1: generalize (H x y H0); only 1: intro; only 1: auto).	12.5237460136	742
Coq.Reals.MVT.negative_derivative	40
Coq.Reals.MVT.null_derivative_0	40
Coq.Reals.MVT.increasing_decreasing	40
Coq.Reals.MVT.null_derivative_1	40
Coq.Reals.MVT.derive_increasing_interv_ax	40
Coq.Reals.MVT.derive_increasing_interv	40
Coq.Reals.MVT.derive_increasing_interv_var	40
Coq.Reals.MVT.IAF	40
Coq.Reals.MVT.IAF_var	40
Coq.Reals.MVT.null_derivative_loc	40
Coq.Reals.MVT.antiderivative_Ucte	40
Coq.Reals.MVT.MVT_abs	40
Coq.Reals.Ranalysis1.continuity_pt_locally_ext	40
Coq.Reals.Ranalysis1.continuity_pt_plus	40
Coq.Reals.Ranalysis1.continuity_pt_opp	40
Coq.Reals.Ranalysis1.continuity_pt_minus	40	0.1.0.1.0.2.0	synth with cache (only 1: unfold continuity_pt, plus_fct; only 1: unfold continue_in; only 1: intros; only 1: apply limit_plus; only 1: assumption; only 1: apply limit_Ropp; only 1: assumption).	2.30747485161	105
Coq.Reals.Ranalysis1.continuity_pt_mult	40
Coq.Reals.Ranalysis1.continuity_pt_const	40
Coq.Reals.Ranalysis1.continuity_pt_scal	40
Coq.Reals.Ranalysis1.continuity_pt_inv	40
Coq.Reals.Ranalysis1.div_eq_inv	40	0	synth with cache (only 1: reflexivity).	0.140856027603	1
Coq.Reals.Ranalysis1.continuity_pt_div	40
Coq.Reals.Ranalysis1.continuity_pt_comp	40
Coq.Reals.Ranalysis1.continuity_plus	40
Coq.Reals.Ranalysis1.continuity_opp	40
Coq.Reals.Ranalysis1.continuity_minus	40
Coq.Reals.Ranalysis1.continuity_mult	40
Coq.Reals.Ranalysis1.continuity_const	40
Coq.Reals.Ranalysis1.continuity_scal	40
Coq.Reals.Ranalysis1.continuity_inv	40	1.0.4.1.10	synth with cache (only 1: red; only 1: intros; only 1: apply continuity_pt_inv; only 1: trivial; only 1: auto).	6.48293495178	595
Coq.Reals.Ranalysis1.continuity_div	40	2.0.1.0.0.1.1.7	synth with cache (only 1: unfold continuity; only 1: intros; only 1: rewrite (div_eq_inv f1 f2); only 1: apply continuity_pt_mult; only 1: trivial; only 1: apply continuity_pt_inv; only 1: trivial; only 1: trivial).	9.52629208565	651
Coq.Reals.Ranalysis1.continuity_comp	40
Coq.Reals.Ranalysis1.uniqueness_step1	40
Coq.Reals.Ranalysis1.uniqueness_step2	40
Coq.Reals.Ranalysis1.uniqueness_step3	40
Coq.Reals.Ranalysis1.uniqueness_limite	40
Coq.Reals.Ranalysis1.derive_pt_eq	40
Coq.Reals.Ranalysis1.derive_pt_eq_0	40	0.1.0.0.0.0.0.1	synth with cache (only 1: intros; only 1: pose proof (proj2_sig pr) as H1; only 1: unfold derivable_pt_abs in H1; only 1: pose proof (uniqueness_limite _ _ _ _ H H1) as H2; only 1: unfold derive_pt; only 1: unfold derivable_pt_abs; only 1: symmetry; only 1: assumption).	0.482355117798	10
Coq.Reals.Ranalysis1.derive_pt_eq_1	40	0.0.0.0.1	synth with cache (only 1: intros; only 1: pose proof (proj2_sig pr) as H1; only 1: unfold derive_pt in H; only 1: rewrite H in H1; only 1: assumption).	0.353579044342	6
Coq.Reals.Ranalysis1.derive_pt_D_in	40
Coq.Reals.Ranalysis1.derivable_pt_lim_D_in	40
Coq.Reals.Ranalysis1.derivable_pt_lim_ext	40
Coq.Reals.Ranalysis1.derivable_pt_lim_locally_ext	40
Coq.Reals.Ranalysis1.derivable_derive	40	3.9.5	synth with cache (only 1: intros r1 r2 H; only 1: inversion H; only 1: eauto).	6.54171395302	675
Coq.Reals.Ranalysis1.derivable_continuous_pt	40
Coq.Reals.Ranalysis1.derivable_continuous	40
Coq.Reals.Ranalysis1.derivable_pt_lim_plus	40
Coq.Reals.Ranalysis1.derivable_pt_lim_opp	40
Coq.Reals.Ranalysis1.derivable_pt_lim_minus	40
Coq.Reals.Ranalysis1.derivable_pt_lim_mult	40
Coq.Reals.Ranalysis1.derivable_pt_lim_const	40
Coq.Reals.Ranalysis1.derivable_pt_lim_scal	40
Coq.Reals.Ranalysis1.derivable_pt_lim_div_scal	40
Coq.Reals.Ranalysis1.derivable_pt_lim_scal_right	40
Coq.Reals.Ranalysis1.derivable_pt_lim_id	40
Coq.Reals.Ranalysis1.derivable_pt_lim_Rsqr	40
Coq.Reals.Ranalysis1.derivable_pt_lim_comp	40
Coq.Reals.Ranalysis1.derivable_pt_plus	40
Coq.Reals.Ranalysis1.derivable_pt_opp	40
Coq.Reals.Ranalysis1.derivable_pt_minus	40
Coq.Reals.Ranalysis1.derivable_pt_mult	40
Coq.Reals.Ranalysis1.derivable_pt_const	40
Coq.Reals.Ranalysis1.derivable_pt_scal	40
Coq.Reals.Ranalysis1.derivable_pt_id	40
Coq.Reals.Ranalysis1.derivable_pt_Rsqr	40
Coq.Reals.Ranalysis1.derivable_pt_comp	40
Coq.Reals.Ranalysis1.derivable_plus	40
Coq.Reals.Ranalysis1.derivable_opp	40
Coq.Reals.Ranalysis1.derivable_minus	40
Coq.Reals.Ranalysis1.derivable_mult	40
Coq.Reals.Ranalysis1.derivable_const	40	0.0.0.6.3	synth with cache (only 1: intros; only 1: intro; only 1: unfold derivable_pt; only 1: exists 0; only 1: apply derivable_pt_lim_const).	4.04445099831	169
Coq.Reals.Ranalysis1.derivable_scal	40
Coq.Reals.Ranalysis1.derivable_id	40	1.0.0.0.10	synth with cache (only 1: unfold derivable; only 1: unfold derivable_pt; only 1: intro; only 1: exists 1; only 1: apply derivable_pt_lim_id).	2.15013003349	234
Coq.Reals.Ranalysis1.derivable_Rsqr	40	0.1.0.0.1	synth with cache (only 1: unfold derivable; only 1: unfold derivable_pt; only 1: intro; only 1: exists (2 * x); only 1: apply derivable_pt_lim_Rsqr).	0.445317983627	12
Coq.Reals.Ranalysis1.derivable_comp	40
Coq.Reals.Ranalysis1.derive_pt_plus	40
Coq.Reals.Ranalysis1.derive_pt_opp	40
Coq.Reals.Ranalysis1.derive_pt_minus	40
Coq.Reals.Ranalysis1.derive_pt_mult	40
Coq.Reals.Ranalysis1.derive_pt_const	40	1.28.1	synth with cache (only 1: intros; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_const).	28.1132440567	3806
Coq.Reals.Ranalysis1.derive_pt_scal	40
Coq.Reals.Ranalysis1.derive_pt_id	40
Coq.Reals.Ranalysis1.derive_pt_Rsqr	40
Coq.Reals.Ranalysis1.derive_pt_comp	40
Coq.Reals.Ranalysis1.derivable_pt_lim_pow_pos	40
Coq.Reals.Ranalysis1.derivable_pt_lim_pow	40
Coq.Reals.Ranalysis1.derivable_pt_pow	40
Coq.Reals.Ranalysis1.derivable_pow	40	0.0.0.1.3	synth with cache (only 1: unfold derivable, continuity; only 1: intros; only 1: unfold derivable_pt; only 1: exists (INR n * x ^ Init.Nat.pred n); only 1: apply derivable_pt_lim_pow).	0.649324893951	28
Coq.Reals.Ranalysis1.derive_pt_pow	40
Coq.Reals.Ranalysis1.pr_nu	40
Coq.Reals.Ranalysis1.deriv_maximum	40
Coq.Reals.Ranalysis1.deriv_minimum	40
Coq.Reals.Ranalysis1.deriv_constant2	40
Coq.Reals.Ranalysis1.nonneg_derivative_0	40
Coq.Reals.SeqProp.growing_cv	40
Coq.Reals.SeqProp.decreasing_growing	40
Coq.Reals.SeqProp.decreasing_cv	40
Coq.Reals.SeqProp.ub_to_lub	40
Coq.Reals.SeqProp.lb_to_glb	40
Coq.Reals.SeqProp.maj_ss	40
Coq.Reals.SeqProp.min_ss	40
Coq.Reals.SeqProp.Wn_decreasing	40	3.9.5.1	synth with cache (only 1: intros; only 1: unfold Un_growing, opp_seq, Un_decreasing; only 1: fix le_div2 1; only 1: auto).	19.8233959675	2049
Coq.Reals.SeqProp.Vn_growing	40	3.8.4.1	synth with cache (only 1: intros; only 1: unfold Un_growing, opp_seq, Un_decreasing; only 1: fix le_div2 1; only 1: auto).	24.1301469803	1744
Coq.Reals.SeqProp.Vn_Un_Wn_order	40
Coq.Reals.SeqProp.min_maj	40
Coq.Reals.SeqProp.maj_min	40
Coq.Reals.SeqProp.cauchy_maj	40
Coq.Reals.SeqProp.cauchy_opp	40
Coq.Reals.SeqProp.cauchy_min	40
Coq.Reals.SeqProp.maj_cv	40
Coq.Reals.SeqProp.min_cv	40
Coq.Reals.SeqProp.cond_eq	40
Coq.Reals.SeqProp.not_Rlt	40	1	synth with cache (only 1: eauto using Rnot_gt_ge with rorders).	0.351698875427	22
Coq.Reals.SeqProp.approx_maj	40
Coq.Reals.SeqProp.approx_min	40
Coq.Reals.SeqProp.UL_sequence	40
Coq.Reals.SeqProp.CV_plus	40
Coq.Reals.SeqProp.cv_cvabs	40
Coq.Reals.SeqProp.CV_Cauchy	40
Coq.Reals.SeqProp.maj_by_pos	40
Coq.Reals.SeqProp.CV_mult	40
Coq.Reals.SeqProp.tech9	40
Coq.Reals.SeqProp.tech13	40
Coq.Reals.SeqProp.growing_ineq	40
Coq.Reals.SeqProp.CV_opp	40
Coq.Reals.SeqProp.decreasing_ineq	40
Coq.Reals.SeqProp.CV_minus	40
Coq.Reals.SeqProp.cv_infty_cv_R0	40
Coq.Reals.SeqProp.decreasing_prop	40
Coq.Reals.SeqProp.cv_speed_pow_fact	40
Coq.Reals.Rcomplete.R_complete	40
Coq.Reals.Rtrigo_calc.tan_PI	40
Coq.Reals.Rtrigo_calc.sin_3PI2	40
Coq.Reals.Rtrigo_calc.tan_2PI	40
Coq.Reals.Rtrigo_calc.sin_cos_PI4	40
Coq.Reals.Rtrigo_calc.sin_PI3_cos_PI6	40
Coq.Reals.Rtrigo_calc.sin_PI6_cos_PI3	40
Coq.Reals.Rtrigo_calc.PI6_RGT_0	40	1.0.0.0.0	synth with cache (only 1: unfold Rdiv; only 1: apply Rmult_lt_0_compat; only 1: apply PI_RGT_0; only 1: apply Rinv_0_lt_compat; only 1: prove_sup).	0.401994943619	6
Coq.Reals.Rtrigo_calc.PI6_RLT_PI2	40	0.0	synth with cache (only 1: pose proof PI_RGT_0 as H; only 1: Lra.lra).	0.246922016144	2
Coq.Reals.Rtrigo_calc.sin_PI6	40
Coq.Reals.Rtrigo_calc.sqrt2_neq_0	40
Coq.Reals.Rtrigo_calc.R1_sqrt2_neq_0	40
Coq.Reals.Rtrigo_calc.sqrt3_2_neq_0	40
Coq.Reals.Rtrigo_calc.Rlt_sqrt2_0	40
Coq.Reals.Rtrigo_calc.Rlt_sqrt3_0	40
Coq.Reals.Rtrigo_calc.PI4_RGT_0	40	3.0.0.0.0	synth with cache (only 1: unfold Rdiv; only 1: apply Rmult_lt_0_compat; only 1: apply PI_RGT_0; only 1: apply Rinv_0_lt_compat; only 1: prove_sup).	0.666390895844	19
Coq.Reals.Rtrigo_calc.cos_PI4	40
Coq.Reals.Rtrigo_calc.sin_PI4	40
Coq.Reals.Rtrigo_calc.tan_PI4	40
Coq.Reals.Rtrigo_calc.cos_3PI4	40
Coq.Reals.Rtrigo_calc.sin_3PI4	40
Coq.Reals.Rtrigo_calc.cos_PI6	40
Coq.Reals.Rtrigo_calc.tan_PI6	40
Coq.Reals.Rtrigo_calc.sin_PI3	40
Coq.Reals.Rtrigo_calc.cos_PI3	40
Coq.Reals.Rtrigo_calc.tan_PI3	40
Coq.Reals.Rtrigo_calc.sin_2PI3	40
Coq.Reals.Rtrigo_calc.cos_2PI3	40
Coq.Reals.Rtrigo_calc.tan_2PI3	40
Coq.Reals.Rtrigo_calc.cos_5PI4	40
Coq.Reals.Rtrigo_calc.sin_5PI4	40
Coq.Reals.Rtrigo_calc.sin_cos5PI4	40
Coq.Reals.Rtrigo_calc.Rgt_3PI2_0	40	1.1.0.0.9	synth with cache (only 1: apply Rmult_lt_0_compat; only 1: prove_sup0; only 1: unfold Rdiv; only 1: pose proof PI_RGT_0 as H; only 1: Lra.lra).	37.9095931053	1336
Coq.Reals.Rtrigo_calc.Rgt_2PI_0	40	0.1.5	synth with cache (only 1: apply Rmult_lt_0_compat; only 1: prove_sup; only 1: apply PI_RGT_0).	2.10569000244	68
Coq.Reals.Rtrigo_calc.Rlt_PI_3PI2	40	1.12	synth with cache (only 1: pose proof PI_RGT_0 as H; only 1: Lra.lra).	1.06352090836	109
Coq.Reals.Rtrigo_calc.Rlt_3PI2_2PI	40	1.7	synth with cache (only 1: pose proof PI_RGT_0 as H; only 1: Lra.lra).	0.595057964325	24
Coq.Reals.Rtrigo_calc.rad_deg	40
Coq.Reals.Rtrigo_calc.toRad_inj	40
Coq.Reals.Rtrigo_calc.deg_rad	40
Coq.Reals.Rtrigo_calc.Rsqr_sin_cos_d_one	40
Coq.Reals.Rtrigo_calc.sin_lb_ge_0	40
Coq.Reals.Ranalysis4.derivable_pt_inv	40
Coq.Reals.Ranalysis4.pr_nu_var	40
Coq.Reals.Ranalysis4.pr_nu_var2	40
Coq.Reals.Ranalysis4.derivable_inv	40
Coq.Reals.Ranalysis4.derive_pt_inv	40
Coq.Reals.Ranalysis4.Rabs_derive_1	40
Coq.Reals.Ranalysis4.Rabs_derive_2	40
Coq.Reals.Ranalysis4.Rderivable_pt_abs	40
Coq.Reals.Ranalysis4.Rcontinuity_abs	40
Coq.Reals.Ranalysis4.continuity_finite_sum	40
Coq.Reals.Ranalysis4.derivable_pt_lim_fs	40
Coq.Reals.Ranalysis4.derivable_pt_lim_finite_sum	40
Coq.Reals.Ranalysis4.derivable_pt_finite_sum	40
Coq.Reals.Ranalysis4.derivable_finite_sum	40	0.0.0.0.0.0.0.1.0	synth with cache (only 1: intros; only 1: intro; only 1: unfold derivable_pt; only 1: pose proof (derivable_pt_lim_finite_sum An x N) as H; only 1: induction N as [| N HrecN]; only 1: exists 0; only 1: apply H; only 1: exists (sum_f_R0 (fun k : nat => INR (S k) * An (S k) * x ^ k) (Init.Nat.pred (S N))); only 1: apply H).	0.664095163345	10
Coq.Reals.Ranalysis4.derivable_pt_lim_cosh	40
Coq.Reals.Ranalysis4.derivable_pt_lim_sinh	40
Coq.Reals.Ranalysis4.derivable_pt_exp	40
Coq.Reals.Ranalysis4.derivable_pt_cosh	40
Coq.Reals.Ranalysis4.derivable_pt_sinh	40
Coq.Reals.Ranalysis4.derivable_exp	40	0.2.0.0.0	synth with cache (only 1: unfold derivable; only 1: intro; only 1: unfold derivable_pt; only 1: exists (exp x); only 1: apply derivable_pt_lim_exp).	0.759840011597	21
Coq.Reals.Ranalysis4.derivable_cosh	40	0.2.0.0.0	synth with cache (only 1: unfold derivable; only 1: intro; only 1: unfold derivable_pt; only 1: exists (sinh x); only 1: apply derivable_pt_lim_cosh).	0.741640090942	21
Coq.Reals.Ranalysis4.derivable_sinh	40	0.2.0.0.0	synth with cache (only 1: unfold derivable; only 1: unfold derivable_pt; only 1: intro; only 1: exists (cosh x); only 1: apply derivable_pt_lim_sinh).	0.83224105835	21
Coq.Reals.Ranalysis4.derive_pt_exp	40	0.6.1	synth with cache (only 1: intros; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_exp).	0.353888988495	10
Coq.Reals.Ranalysis4.derive_pt_cosh	40	2.1.1	synth with cache (only 1: intro; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_cosh).	2.49401497841	36
Coq.Reals.Ranalysis4.derive_pt_sinh	40	4.1.1	synth with cache (only 1: intro; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_sinh).	3.76189208031	41
Coq.Reals.Ranalysis4.sinh_lt	40
Coq.Reals.Ranalysis3.derivable_pt_lim_div	40
Coq.Reals.Ranalysis3.derivable_pt_div	40
Coq.Reals.Ranalysis3.derivable_div	40
Coq.Reals.Ranalysis3.derive_pt_div	40
Coq.Reals.DiscrR.Rlt_R0_R2	40	1.0.0.1.0.0.0	synth with cache (only 1: apply Rlt_trans with (0 + 1); only 1: apply Rlt_n_Sn; only 1: rewrite Rplus_comm; only 1: apply Rplus_lt_compat_l; only 1: replace R1 with (0 + 1); only 1: apply Rlt_n_Sn; only 1: apply Rplus_0_l).	1.81866598129	44
Coq.Reals.DiscrR.IZR_eq	40	0.5.2	synth with cache (only 1: intros; only 1: subst; only 1: reflexivity).	0.485738039017	10
Coq.Reals.ConstructiveReals.CRlt_asym	40
Coq.Reals.ConstructiveReals.CRlt_proper	40
Coq.Reals.ConstructiveReals.CRle_refl	40
Coq.Reals.ConstructiveReals.CRle_lt_trans	40
Coq.Reals.ConstructiveReals.CRlt_le_trans	40
Coq.Reals.ConstructiveReals.CRle_trans	40
Coq.Reals.ConstructiveReals.CRlt_trans	40
Coq.Reals.ConstructiveReals.CRlt_trans_flip	40
Coq.Reals.ConstructiveReals.CReq_refl	40	0.0.0.0.4.1	synth with cache (only 1: intros; only 1: firstorder; only 1: destruct (CRltLinear R), p; only 1: exact (f x x H H); only 1: destruct (CRltLinear R), p; only 1: exact (f x x H H)).	2.44756817818	50
Coq.Reals.ConstructiveReals.CReq_sym	40	0.5.3	synth with cache (only 1: intros n m Hm (q, Hq); only 1: red; only 1: auto).	2.03806400299	83
Coq.Reals.ConstructiveReals.CReq_trans	40
Coq.Reals.ConstructiveReals.CR_setoid	40
Coq.Reals.ConstructiveReals.CRplus_0_r	40
Coq.Reals.ConstructiveReals.CRmult_1_r	40
Coq.Reals.ConstructiveReals.CRplus_opp_l	40
Coq.Reals.ConstructiveReals.CRplus_lt_compat_r	40
Coq.Reals.ConstructiveReals.CRplus_lt_reg_r	40
Coq.Reals.ConstructiveReals.CRplus_le_compat_l	40
Coq.Reals.ConstructiveReals.CRplus_le_compat_r	40
Coq.Reals.ConstructiveReals.CRplus_le_reg_l	40	0.3.0.0.0	synth with cache (only 1: intros; only 1: intros abs; only 1: apply H; only 1: apply CRplus_lt_compat_l; only 1: exact abs).	0.913192987442	31
Coq.Reals.ConstructiveReals.CRplus_le_reg_r	40
Coq.Reals.ConstructiveReals.CRplus_lt_le_compat	40
Coq.Reals.ConstructiveReals.CRplus_eq_reg_l	40
Coq.Reals.ConstructiveReals.CRplus_eq_reg_r	40
Coq.Reals.ConstructiveReals.CRopp_involutive	40
Coq.Reals.ConstructiveReals.CRopp_gt_lt_contravar	40
Coq.Reals.ConstructiveReals.CRopp_lt_cancel	40
Coq.Reals.ConstructiveReals.CRopp_plus_distr	40
Coq.Reals.ConstructiveReals.CRmult_plus_distr_l	40
Coq.Reals.ConstructiveReals.CRzero_double	40
Coq.Reals.ConstructiveReals.CRmult_0_r	40
Coq.Reals.ConstructiveReals.CRopp_mult_distr_r	40
Coq.Reals.ConstructiveReals.CRopp_mult_distr_l	40
Coq.Reals.ConstructiveReals.CRmult_lt_compat_r	40
Coq.Reals.ConstructiveReals.CRinv_r	40
Coq.Reals.ConstructiveReals.CRmult_lt_reg_r	40
Coq.Reals.ConstructiveReals.CRmult_lt_reg_l	40
Coq.Reals.ConstructiveReals.CRmult_le_compat_l	40
Coq.Reals.ConstructiveReals.CRmult_le_compat_r	40
Coq.Reals.ConstructiveReals.CRmult_eq_reg_r	40
Coq.Reals.ConstructiveReals.CR_of_Q_proper	40
Coq.Reals.ConstructiveReals.CR_of_Q_zero	40
Coq.Reals.ConstructiveReals.CR_of_Q_opp	40
Coq.Reals.ConstructiveReals.CR_of_Q_le	40	11.6.0.1.3	synth with cache (only 1: intros; only 1: intro abs; only 1: apply lt_CR_of_Q in abs; only 1: contradict H; only 1: auto with *).	28.3780639172	3179
Coq.Reals.ConstructiveReals.CR_of_Q_pos	40
Coq.Reals.ConstructiveReals.CR_cv_above_rat	40
Coq.Reals.ConstructiveReals.CR_cv_below_rat	40
Coq.Reals.ConstructiveReals.CR_cv_const	40
Coq.Reals.ConstructiveCauchyRealsMult.BoundFromZero	40	5.8	synth with cache (only 1: intro n; only 1: firstorder).	1.02802014351	93
Coq.Reals.ConstructiveCauchyRealsMult.QCauchySeq_bounded	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_cauchy	40
Coq.Reals.ConstructiveCauchyRealsMult.linear_max	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult	40	12	synth with cache (only 1: trivial).	4.73532605171	256
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_unfold	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_assoc_bounded_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_assoc	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_comm	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_proper_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_0_compat	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_plus_distr_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_plus_distr_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_1_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_isRingExt	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_isRing	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_morph_Proper	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_morph_T	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_opp_morph_Proper	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_opp_morph_T	40	1	synth with cache (only 1: apply CReal_isRingExt).	7.38036203384	104
Coq.Reals.ConstructiveCauchyRealsMult.CReal_minus_morph_Proper	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_minus_morph_T	40	0.0.0.2	synth with cache (only 1: intros x y H x0 y0 H0; only 1: unfold CReal_minus; only 1: rewrite H, H0; only 1: reflexivity).	28.2551820278	158
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_0_l	40	1.4.0	synth with cache (only 1: intros; only 1: ring_simplify; only 1: easy || now destruct 1).	6.40520310402	86
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_0_r	40	0.0	synth with cache (only 1: intro; only 1: ring).	0.167612075806	2
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_1_r	40	4.2	synth with cache (only 1: intro; only 1: ring).	5.81371378899	124
Coq.Reals.ConstructiveCauchyRealsMult.CReal_opp_mult_distr_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_opp_mult_distr_r	40	0.0	synth with cache (only 1: intros; only 1: ring).	0.347023010254	2
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_compat_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_compat_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_reg_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_abs_appart_zero	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealArchimedean	40
Coq.Reals.ConstructiveCauchyRealsMult.Rup_pos	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealLtDisjunctEpsilon	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealShiftReal	40	1.7.8	synth with cache (only 1: intros [xn limx]; only 1: intros k p q H H0; only 1: auto with arith).	30.4712359905	2442
Coq.Reals.ConstructiveCauchyRealsMult.CRealShiftEqual	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealNegShift	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealPosShift	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_neg	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_pos	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv	40	4	synth with cache (only 1: auto).	0.240281105042	17
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_0_lt_compat	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_linear_shift	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_linear_shift_eq	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_1	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_mult_distr	40
Coq.Reals.ConstructiveCauchyRealsMult.Rinv_eq_compat	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_reg_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_reg_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_reg_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_compat_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_compat_r	40	0.0.0	synth with cache (only 1: intros; only 1: rewrite H; only 1: reflexivity).	0.209177017212	3
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_pos_appart_zero	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_le_compat_l_half	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_invQ	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealQ_dense	40
Coq.Reals.ConstructiveCauchyRealsMult.inject_Q_mult	40
Coq.Reals.Rtrigo_fun.Alembert_exp	40
Coq.Reals.Alembert.Alembert_C1	40
Coq.Reals.Alembert.Alembert_C2	40
Coq.Reals.Alembert.AlembertC3_step1	40
Coq.Reals.Alembert.AlembertC3_step2	40
Coq.Reals.Alembert.Alembert_C3	40
Coq.Reals.Alembert.Alembert_C4	40
Coq.Reals.Alembert.Alembert_C5	40
Coq.Reals.Alembert.Alembert_C6	40
Coq.Reals.RiemannInt_SF.IZN_var	40	1.0.0.12	synth with cache (only 1: intros x H1; only 1: exists (Z.to_nat x); only 1: symmetry; only 1: now apply Z2Nat.id).	6.38898015022	642
Coq.Reals.RiemannInt_SF.Nzorn	40
Coq.Reals.RiemannInt_SF.StepFun_P1	40
Coq.Reals.RiemannInt_SF.StepFun_P2	40
Coq.Reals.RiemannInt_SF.StepFun_P3	40
Coq.Reals.RiemannInt_SF.StepFun_P4	40
Coq.Reals.RiemannInt_SF.StepFun_P5	40
Coq.Reals.RiemannInt_SF.StepFun_P6	40
Coq.Reals.RiemannInt_SF.StepFun_P7	40
Coq.Reals.RiemannInt_SF.StepFun_P8	40
Coq.Reals.RiemannInt_SF.StepFun_P9	40
Coq.Reals.RiemannInt_SF.StepFun_P10	40
Coq.Reals.RiemannInt_SF.StepFun_P11	40
Coq.Reals.RiemannInt_SF.StepFun_P12	40
Coq.Reals.RiemannInt_SF.StepFun_P13	40
Coq.Reals.RiemannInt_SF.StepFun_P14	40
Coq.Reals.RiemannInt_SF.StepFun_P15	40
Coq.Reals.RiemannInt_SF.StepFun_P16	40
Coq.Reals.RiemannInt_SF.StepFun_P17	40
Coq.Reals.RiemannInt_SF.StepFun_P18	40
Coq.Reals.RiemannInt_SF.StepFun_P19	40
Coq.Reals.RiemannInt_SF.StepFun_P20	40
Coq.Reals.RiemannInt_SF.StepFun_P21	40
Coq.Reals.RiemannInt_SF.StepFun_P22	40
Coq.Reals.RiemannInt_SF.StepFun_P23	40
Coq.Reals.RiemannInt_SF.StepFun_P24	40
Coq.Reals.RiemannInt_SF.StepFun_P25	40
Coq.Reals.RiemannInt_SF.StepFun_P26	40
Coq.Reals.RiemannInt_SF.StepFun_P27	40
Coq.Reals.RiemannInt_SF.StepFun_P28	40
Coq.Reals.RiemannInt_SF.StepFun_P29	40	0.3.1.0	synth with cache (only 1: intros a b f; only 1: destruct (projT2 (pre f)) as (x, H); only 1: apply existT with x; only 1: apply H).	0.442312002182	8
Coq.Reals.RiemannInt_SF.StepFun_P30	40
Coq.Reals.RiemannInt_SF.StepFun_P31	40
Coq.Reals.RiemannInt_SF.StepFun_P32	40
Coq.Reals.RiemannInt_SF.StepFun_P33	40
Coq.Reals.RiemannInt_SF.StepFun_P34	40
Coq.Reals.RiemannInt_SF.StepFun_P35	40
Coq.Reals.RiemannInt_SF.StepFun_P36	40
Coq.Reals.RiemannInt_SF.StepFun_P37	40
Coq.Reals.RiemannInt_SF.StepFun_P38	40
Coq.Reals.RiemannInt_SF.StepFun_P39	40
Coq.Reals.RiemannInt_SF.StepFun_P40	40
Coq.Reals.RiemannInt_SF.StepFun_P41	40
Coq.Reals.RiemannInt_SF.StepFun_P42	40
Coq.Reals.RiemannInt_SF.StepFun_P43	40
Coq.Reals.RiemannInt_SF.StepFun_P44	40
Coq.Reals.Cos_rel.cos_plus_form	40
Coq.Reals.Cos_rel.pow_sqr	40	0.0.0.0.0.0.0.0.0.2.5	synth with cache (only 1: intro; only 1: intro n; only 1: induction n as [| n Hrecn]; only 1: reflexivity; only 1: replace (2 * S n)%nat with (S (S (2 * n))); only 1: replace (x ^ S (S (2 * n))) with (x * x * x ^ (2 * n)); only 1: rewrite Hrecn; only 1: reflexivity; only 1: simpl; only 1: ring; only 1: ring).	28.4262740612	1519
Coq.Reals.Cos_rel.A1_cvg	40
Coq.Reals.Cos_rel.C1_cvg	40
Coq.Reals.Cos_rel.B1_cvg	40
Coq.Reals.Ranalysis5.f_incr_implies_g_incr_interv	40
Coq.Reals.Ranalysis5.derivable_pt_id_interv	40	10.0	synth with cache (only 1: intros; only 1: apply derivable_pt_id).	5.70073699951	244
Coq.Reals.Ranalysis5.pr_nu_var2_interv	40
Coq.Reals.Ranalysis5.leftinv_is_rightinv	40
Coq.Reals.Ranalysis5.leftinv_is_rightinv_interv	40
Coq.Reals.Ranalysis5.IVT_interv_prelim0	40
Coq.Reals.Ranalysis5.IVT_interv_prelim1	40
Coq.Reals.Ranalysis5.IVT_interv	40
Coq.Reals.Ranalysis5.f_interv_is_interv	40
Coq.Reals.Ranalysis5.continuity_pt_recip_prelim	40
Coq.Reals.Ranalysis5.continuity_pt_recip_interv	40
Coq.Reals.Ranalysis5.derivable_pt_lim_recip_interv	40
Coq.Reals.Ranalysis5.derivable_pt_recip_interv_prelim0	40
Coq.Reals.Ranalysis5.derivable_pt_recip_interv_prelim1	40	5.3	synth with cache (only 1: intros f g x a b l axb fg df e ep; only 1: intuition).	3.20134806633	103
Coq.Reals.Ranalysis5.derivable_pt_recip_interv	40
Coq.Reals.Ranalysis5.derive_pt_recip_interv_prelim0	40
Coq.Reals.Ranalysis5.derive_pt_recip_interv_prelim1_0	40
Coq.Reals.Ranalysis5.derive_pt_recip_interv_prelim1_1	40
Coq.Reals.Ranalysis5.derive_pt_recip_interv	40
Coq.Reals.Ranalysis5.ub_lt_2_pos	40
Coq.Reals.Ranalysis5.mkposreal_lb_ub	40
Coq.Reals.Ranalysis5.derivable_pt_lim_CVU	40
Coq.Reals.AltSeries.CV_ALT_step0	40
Coq.Reals.AltSeries.CV_ALT_step1	40
Coq.Reals.AltSeries.CV_ALT_step2	40
Coq.Reals.AltSeries.CV_ALT_step3	40
Coq.Reals.AltSeries.CV_ALT_step4	40
Coq.Reals.AltSeries.CV_ALT	40
Coq.Reals.AltSeries.alternated_series	40
Coq.Reals.AltSeries.alternated_series_ineq	40
Coq.Reals.AltSeries.PI_tg_pos	40
Coq.Reals.AltSeries.PI_tg_decreasing	40
Coq.Reals.AltSeries.PI_tg_cv	40
Coq.Reals.AltSeries.exist_PI	40
Coq.Reals.AltSeries.Alt_PI_ineq	40
Coq.Reals.AltSeries.Alt_PI_RGT_0	40
Coq.Reals.R_sqrt.sqrt_pos	40
Coq.Reals.R_sqrt.sqrt_positivity	40	0.0.1.3.0	synth with cache (only 1: intros; only 1: unfold sqrt; only 1: destruct (Rcase_abs x) as [Hlt| Hge]; only 1: auto with real; only 1: apply Rsqrt_positivity).	0.861852884293	22
Coq.Reals.R_sqrt.sqrt_sqrt	40
Coq.Reals.R_sqrt.sqrt_0	40
Coq.Reals.R_sqrt.sqrt_1	40
Coq.Reals.R_sqrt.sqrt_eq_0	40
Coq.Reals.R_sqrt.sqrt_lem_0	40
Coq.Reals.R_sqrt.sqrt_lem_1	40
Coq.Reals.R_sqrt.sqrt_def	40	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold sqrt; only 1: destruct (Rcase_abs x) as [Hlt| Hge]; only 1: elim (Rlt_irrefl _ (Rlt_le_trans _ _ _ Hlt H)); only 1: rewrite Rsqrt_Rsqrt; only 1: reflexivity).	0.437940120697	6
Coq.Reals.R_sqrt.sqrt_square	40
Coq.Reals.R_sqrt.sqrt_Rsqr	40	0.0.0.3.1	synth with cache (only 1: intros; only 1: unfold Rsqr; only 1: apply (Rsqr_inj (sqrt x²) x (sqrt_positivity x² (Rle_0_sqr x)) H); only 1: unfold Rsqr; only 1: apply (sqrt_sqrt x² (Rle_0_sqr x))).	0.546553850174	9
Coq.Reals.R_sqrt.sqrt_pow2	40	0.0.0.4.0.3	synth with cache (only 1: simpl; only 1: intros; only 1: rewrite Rmult_1_r; only 1: apply (Rsqr_inj (sqrt x²) x (sqrt_positivity x² (Rle_0_sqr x)) H); only 1: unfold Rsqr; only 1: apply (sqrt_sqrt x² (Rle_0_sqr x))).	5.18217992783	289
Coq.Reals.R_sqrt.sqrt_Rsqr_abs	40
Coq.Reals.R_sqrt.Rsqr_sqrt	40	0.0.0.0.0.0.1	synth with cache (only 1: intros; only 1: unfold Rsqr; only 1: unfold sqrt; only 1: destruct (Rcase_abs x) as [Hlt| Hge]; only 1: elim (Rlt_irrefl _ (Rlt_le_trans _ _ _ Hlt H)); only 1: rewrite Rsqrt_Rsqrt; only 1: reflexivity).	0.475131988525	8
Coq.Reals.R_sqrt.sqrt_mult_alt	40
Coq.Reals.R_sqrt.sqrt_mult	40
Coq.Reals.R_sqrt.sqrt_lt_R0	40
Coq.Reals.R_sqrt.Rlt_mult_inv_pos	40	0.0.0.2.3	synth with cache (only 1: intros a b Ha Hb; only 1: apply Rmult_lt_0_compat; only 1: assumption; only 1: apply Rinv_0_lt_compat; only 1: assumption).	3.92862391472	143
Coq.Reals.R_sqrt.Rle_mult_inv_pos	40	1.0.2.0	synth with cache (only 1: intros x y H H0; only 1: apply Rmult_le_pos; only 1: assumption; only 1: auto with real).	0.446001052856	18
Coq.Reals.R_sqrt.sqrt_div_alt	40
Coq.Reals.R_sqrt.sqrt_div	40
Coq.Reals.R_sqrt.sqrt_lt_0_alt	40
Coq.Reals.R_sqrt.sqrt_lt_0	40
Coq.Reals.R_sqrt.sqrt_lt_1_alt	40
Coq.Reals.R_sqrt.sqrt_lt_1	40
Coq.Reals.R_sqrt.sqrt_le_0	40
Coq.Reals.R_sqrt.sqrt_le_1_alt	40
Coq.Reals.R_sqrt.sqrt_le_1	40
Coq.Reals.R_sqrt.sqrt_inj	40
Coq.Reals.R_sqrt.sqrt_less_alt	40
Coq.Reals.R_sqrt.sqrt_less	40
Coq.Reals.R_sqrt.sqrt_more	40
Coq.Reals.R_sqrt.sqrt_cauchy	40
Coq.Reals.R_sqrt.Rsqr_sol_eq_0_1	40
Coq.Reals.R_sqrt.Rsqr_sol_eq_0_0	40
Coq.Reals.ConstructiveRealsLUB.is_upper_bound_dec	40
Coq.Reals.ConstructiveRealsLUB.is_upper_bound_epsilon	40
Coq.Reals.ConstructiveRealsLUB.is_upper_bound_not_epsilon	40
Coq.Reals.ConstructiveRealsLUB.DDlow_below_up	40
Coq.Reals.ConstructiveRealsLUB.DDcut_limit_fix	40
Coq.Reals.ConstructiveRealsLUB.DDcut_limit	40
Coq.Reals.ConstructiveRealsLUB.glb_dec_Q	40
Coq.Reals.ConstructiveRealsLUB.is_upper_bound_glb	40
Coq.Reals.ConstructiveRealsLUB.is_upper_bound_closed	40
Coq.Reals.ConstructiveRealsLUB.sig_lub	40
Coq.Reals.ConstructiveRealsLUB.CR_sig_lub	40
Coq.Reals.Rderiv.cont_deriv	40
Coq.Reals.Rderiv.Dconst	40
Coq.Reals.Rderiv.Dx	40
Coq.Reals.Rderiv.Dadd	40
Coq.Reals.Rderiv.Dmult	40
Coq.Reals.Rderiv.Dmult_const	40
Coq.Reals.Rderiv.Dopp	40
Coq.Reals.Rderiv.Dminus	40
Coq.Reals.Rderiv.Dx_pow_n	40
Coq.Reals.Rderiv.Dcomp	40
Coq.Reals.Rderiv.D_pow_n	40
Coq.Reals.Cauchy_prod.sum_N_predN	40	0.1.2.0	synth with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: elim (Nat.lt_irrefl _ H); only 1: trivial).	0.22624206543	7
Coq.Reals.Cauchy_prod.sum_plus	40	0.0.0.0.0.1	synth with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: reflexivity; only 1: do 3 rewrite tech5; only 1: rewrite HrecN; only 1: ring).	0.321875095367	7
Coq.Reals.Cauchy_prod.cauchy_finite	40
Coq.Reals.Rlogic.Arithmetical_dec.sig_forall_dec	40
Coq.Reals.Rlogic.not_not_archimedean	40
Coq.Reals.Rlogic.sig_not_dec	40
Coq.Reals.Rtrigo1.CVN_R_cos	40
Coq.Reals.Rtrigo1.continuity_cos	40
Coq.Reals.Rtrigo1.sin_gt_cos_7_8	40
Coq.Reals.Rtrigo1.PI_2_aux	40
Coq.Reals.Rtrigo1.cos_pi2	40
Coq.Reals.Rtrigo1.pi2_int	40
Coq.Reals.Rtrigo1.cos_minus	40
Coq.Reals.Rtrigo1.sin2_cos2	40
Coq.Reals.Rtrigo1.cos2	40
Coq.Reals.Rtrigo1.sin2	40	1.0.0	synth with cache (only 1: intros x; only 1: rewrite <- (sin2_cos2 x); only 1: ring).	0.261305093765	4
Coq.Reals.Rtrigo1.cos_PI2	40
Coq.Reals.Rtrigo1.sin_pos_tech	40
Coq.Reals.Rtrigo1.sin_PI2	40
Coq.Reals.Rtrigo1.PI_RGT_0	40
Coq.Reals.Rtrigo1.PI_4	40
Coq.Reals.Rtrigo1.PI_neq0	40
Coq.Reals.Rtrigo1.cos_PI	40
Coq.Reals.Rtrigo1.sin_PI	40
Coq.Reals.Rtrigo1.sin_bound	40
Coq.Reals.Rtrigo1.cos_bound	40
Coq.Reals.Rtrigo1.neg_cos	40
Coq.Reals.Rtrigo1.sin_cos	40
Coq.Reals.Rtrigo1.sin_plus	40
Coq.Reals.Rtrigo1.sin_minus	40
Coq.Reals.Rtrigo1.tan_plus	40
Coq.Reals.Rtrigo1.sin_2a	40
Coq.Reals.Rtrigo1.cos_2a	40
Coq.Reals.Rtrigo1.cos_2a_cos	40
Coq.Reals.Rtrigo1.cos_2a_sin	40
Coq.Reals.Rtrigo1.tan_2a	40
Coq.Reals.Rtrigo1.sin_neg	40	0.0.0.0.0.0.0	synth with cache (only 1: intro; only 1: unfold sin; only 1: replace (- x)² with x²; only 1: case (exist_sin x²); only 1: intros; only 1: ring; only 1: ring_Rsqr).	0.532748937607	7
Coq.Reals.Rtrigo1.cos_neg	40	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold cos; only 1: replace (- x)² with x²; only 1: reflexivity; only 1: ring_Rsqr).	0.388179063797	5
Coq.Reals.Rtrigo1.tan_0	40
Coq.Reals.Rtrigo1.tan_neg	40
Coq.Reals.Rtrigo1.tan_minus	40
Coq.Reals.Rtrigo1.cos_3PI2	40
Coq.Reals.Rtrigo1.sin_2PI	40
Coq.Reals.Rtrigo1.cos_2PI	40
Coq.Reals.Rtrigo1.neg_sin	40
Coq.Reals.Rtrigo1.sin_PI_x	40
Coq.Reals.Rtrigo1.sin_period	40
Coq.Reals.Rtrigo1.cos_period	40
Coq.Reals.Rtrigo1.sin_shift	40	1.0.0.4.1	synth with cache (only 1: intro x; only 1: rewrite sin_minus; only 1: rewrite sin_PI2; only 1: rewrite cos_PI2; only 1: ring).	1.63436985016	60
Coq.Reals.Rtrigo1.cos_shift	40
Coq.Reals.Rtrigo1.cos_sin	40	0.0.0.17.0	synth with cache (only 1: intro x; only 1: rewrite sin_plus; only 1: rewrite sin_PI2; only 1: rewrite cos_PI2; only 1: ring).	11.061316967	1012
Coq.Reals.Rtrigo1.PI2_RGT_0	40	0.7.0	synth with cache (only 1: destruct pi2_int; only 1: unfold PI; only 1: lra).	3.45129394531	65
Coq.Reals.Rtrigo1.SIN_bound	40
Coq.Reals.Rtrigo1.COS_bound	40
Coq.Reals.Rtrigo1.cos_sin_0	40
Coq.Reals.Rtrigo1.cos_sin_0_var	40
Coq.Reals.Rtrigo1.sin_lb_gt_0	40
Coq.Reals.Rtrigo1.SIN	40
Coq.Reals.Rtrigo1.COS	40
Coq.Reals.Rtrigo1._PI2_RLT_0	40
Coq.Reals.Rtrigo1.PI4_RLT_PI2	40
Coq.Reals.Rtrigo1.PI2_Rlt_PI	40	1.5.0	synth with cache (only 1: unfold Rdiv; only 1: pose proof PI_RGT_0 as H; only 1: lra).	1.22780299187	29
Coq.Reals.Rtrigo1.sin_gt_0	40
Coq.Reals.Rtrigo1.cos_gt_0	40
Coq.Reals.Rtrigo1.sin_ge_0	40
Coq.Reals.Rtrigo1.cos_ge_0	40
Coq.Reals.Rtrigo1.sin_le_0	40
Coq.Reals.Rtrigo1.cos_le_0	40
Coq.Reals.Rtrigo1.sin_lt_0	40
Coq.Reals.Rtrigo1.sin_lt_0_var	40
Coq.Reals.Rtrigo1.cos_lt_0	40
Coq.Reals.Rtrigo1.tan_gt_0	40
Coq.Reals.Rtrigo1.tan_lt_0	40
Coq.Reals.Rtrigo1.cos_ge_0_3PI2	40
Coq.Reals.Rtrigo1.form1	40
Coq.Reals.Rtrigo1.form2	40	1.1.1.0.0.1.0.1	synth with cache (only 1: intros; only 1: pattern p at 1; only 1: replace p with ((p - q) / 2 + (p + q) / 2) by field; only 1: rewrite <- (cos_neg q); only 1: replace (- q) with ((p - q) / 2 - (p + q) / 2) by field; only 1: rewrite cos_plus; only 1: rewrite cos_minus; only 1: ring).	12.045404911	386
Coq.Reals.Rtrigo1.form3	40
Coq.Reals.Rtrigo1.form4	40
Coq.Reals.Rtrigo1.sin_increasing_0	40
Coq.Reals.Rtrigo1.sin_increasing_1	40
Coq.Reals.Rtrigo1.sin_decreasing_0	40
Coq.Reals.Rtrigo1.sin_decreasing_1	40
Coq.Reals.Rtrigo1.cos_increasing_0	40
Coq.Reals.Rtrigo1.cos_increasing_1	40
Coq.Reals.Rtrigo1.cos_decreasing_0	40
Coq.Reals.Rtrigo1.cos_decreasing_1	40
Coq.Reals.Rtrigo1.tan_diff	40
Coq.Reals.Rtrigo1.tan_increasing_0	40
Coq.Reals.Rtrigo1.tan_increasing_1	40
Coq.Reals.Rtrigo1.sin_incr_0	40
Coq.Reals.Rtrigo1.sin_incr_1	40
Coq.Reals.Rtrigo1.sin_decr_0	40
Coq.Reals.Rtrigo1.sin_decr_1	40
Coq.Reals.Rtrigo1.cos_incr_0	40
Coq.Reals.Rtrigo1.cos_incr_1	40
Coq.Reals.Rtrigo1.cos_decr_0	40
Coq.Reals.Rtrigo1.cos_decr_1	40
Coq.Reals.Rtrigo1.tan_incr_0	40
Coq.Reals.Rtrigo1.tan_incr_1	40
Coq.Reals.Rtrigo1.sin_eq_0_1	40
Coq.Reals.Rtrigo1.sin_eq_0_0	40
Coq.Reals.Rtrigo1.cos_eq_0_0	40
Coq.Reals.Rtrigo1.cos_eq_0_1	40
Coq.Reals.Rtrigo1.sin_eq_O_2PI_0	40
Coq.Reals.Rtrigo1.sin_eq_O_2PI_1	40
Coq.Reals.Rtrigo1.cos_eq_0_2PI_0	40
Coq.Reals.Rtrigo1.cos_eq_0_2PI_1	40
Coq.Reals.PartSum.tech1	40
Coq.Reals.PartSum.tech2	40
Coq.Reals.PartSum.tech3	40
Coq.Reals.PartSum.tech4	40
Coq.Reals.PartSum.tech5	40	0	synth with cache (only 1: reflexivity).	0.109845161438	1
Coq.Reals.PartSum.tech6	40
Coq.Reals.PartSum.tech7	40
Coq.Reals.PartSum.tech11	40	1.11.2.2.4	synth with cache (only 1: intro; only 1: intro; only 1: intro; only 1: fix even_odd_double 1; only 1: auto).	19.7147929668	2562
Coq.Reals.PartSum.tech12	40	0.2.1.1	synth with cache (only 1: intros Un pr; only 1: unfold Un_cv; only 1: intros; only 1: auto).	0.29439496994	8
Coq.Reals.PartSum.scal_sum	40
Coq.Reals.PartSum.decomp_sum	40
Coq.Reals.PartSum.plus_sum	40
Coq.Reals.PartSum.sum_eq	40
Coq.Reals.PartSum.uniqueness_sum	40
Coq.Reals.PartSum.minus_sum	40	0.0.0.0.0.1	synth with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: reflexivity; only 1: do 3 rewrite tech5; only 1: rewrite HrecN; only 1: ring).	0.448520898819	7
Coq.Reals.PartSum.sum_decomposition	40
Coq.Reals.PartSum.sum_Rle	40
Coq.Reals.PartSum.Rsum_abs	40
Coq.Reals.PartSum.sum_cte	40
Coq.Reals.PartSum.sum_growing	40	1.4.0.0.0.0.1.0.0.0.1	synth with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: apply H; only 1: do 2 rewrite tech5; only 1: apply Rle_trans with (sum_f_R0 An N + Bn (S N)); only 1: apply Rplus_le_compat_l; only 1: apply H; only 1: do 2 rewrite <- (Rplus_comm (Bn (S N))); only 1: apply Rplus_le_compat_l; only 1: apply HrecN).	21.4990699291	1507
Coq.Reals.PartSum.Rabs_triang_gen	40	0.2.0.0.0.0.0.0.0.0.1	synth with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: right; only 1: reflexivity; only 1: do 2 rewrite tech5; only 1: apply Rle_trans with (Rabs (sum_f_R0 An N) + Rabs (An (S N))); only 1: apply Rabs_triang; only 1: do 2 rewrite <- (Rplus_comm (Rabs (An (S N)))); only 1: apply Rplus_le_compat_l; only 1: apply HrecN).	15.3035721779	770
Coq.Reals.PartSum.cond_pos_sum	40
Coq.Reals.PartSum.cauchy_abs	40
Coq.Reals.PartSum.cv_cauchy_1	40
Coq.Reals.PartSum.cv_cauchy_2	40
Coq.Reals.PartSum.sum_eq_R0	40
Coq.Reals.PartSum.sum_incr	40
Coq.Reals.PartSum.sum_cv_maj	40
Coq.Reals.Rtrigo_reg.continuity_sin	40
Coq.Reals.Rtrigo_reg.CVN_R_sin	40
Coq.Reals.Rtrigo_reg.derivable_pt_lim_sin_0	40
Coq.Reals.Rtrigo_reg.derivable_pt_lim_cos_0	40
Coq.Reals.Rtrigo_reg.derivable_pt_lim_sin	40
Coq.Reals.Rtrigo_reg.derivable_pt_lim_cos	40
Coq.Reals.Rtrigo_reg.derivable_pt_sin	40
Coq.Reals.Rtrigo_reg.derivable_pt_cos	40
Coq.Reals.Rtrigo_reg.derivable_sin	40	0.2.0.0.1	synth with cache (only 1: unfold derivable; only 1: unfold derivable_pt; only 1: intro; only 1: exists (cos x); only 1: apply derivable_pt_lim_sin).	2.81041002274	19
Coq.Reals.Rtrigo_reg.derivable_cos	40	0.2.0.0.0	synth with cache (only 1: unfold derivable; only 1: unfold derivable_pt; only 1: intro; only 1: exists (- sin x); only 1: apply derivable_pt_lim_cos).	0.649370908737	23
Coq.Reals.Rtrigo_reg.derive_pt_sin	40	1.14.1	synth with cache (only 1: intros; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_sin).	7.44159889221	635
Coq.Reals.Rtrigo_reg.derive_pt_cos	40	1.3.1	synth with cache (only 1: intros; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_cos).	0.942456007004	31
Coq.Reals.Cos_plus.Majxy_cv_R0	40
Coq.Reals.Cos_plus.reste1_maj	40
Coq.Reals.Cos_plus.reste2_maj	40
Coq.Reals.Cos_plus.reste1_cv_R0	40
Coq.Reals.Cos_plus.reste2_cv_R0	40
Coq.Reals.Cos_plus.reste_cv_R0	40
Coq.Reals.Cos_plus.cos_plus	40
Coq.Reals.Rgeom.distance_refl	40
Coq.Reals.Rgeom.distance_symm	40
Coq.Reals.Rgeom.law_cosines	40
Coq.Reals.Rgeom.triangle	40
Coq.Reals.Rgeom.translation_0	40	1.1.0.0	synth with cache (only 1: intros; only 1: split; only 1: eauto with real; only 1: eauto with real).	0.31399512291	6
Coq.Reals.Rgeom.isometric_translation	40
Coq.Reals.Rgeom.rotation_0	40
Coq.Reals.Rgeom.rotation_PI2	40
Coq.Reals.Rgeom.isometric_rotation_0	40
Coq.Reals.Rgeom.isometric_rotation	40
Coq.Reals.Rgeom.isometric_rot_trans	40
Coq.Reals.Rgeom.isometric_trans_rot	40
Coq.Reals.Rsqrt_def.dicho_comp	40
Coq.Reals.Rsqrt_def.dicho_lb_growing	40
Coq.Reals.Rsqrt_def.dicho_up_decreasing	40
Coq.Reals.Rsqrt_def.dicho_lb_maj_y	40
Coq.Reals.Rsqrt_def.dicho_lb_maj	40
Coq.Reals.Rsqrt_def.dicho_up_min_x	40
Coq.Reals.Rsqrt_def.dicho_up_min	40
Coq.Reals.Rsqrt_def.dicho_lb_cv	40
Coq.Reals.Rsqrt_def.dicho_up_cv	40
Coq.Reals.Rsqrt_def.dicho_lb_dicho_up	40
Coq.Reals.Rsqrt_def.pow_2_n_neq_R0	40	0.15.1	synth with cache (only 1: intro; only 1: apply pow_nonzero; only 1: now apply not_0_IZR).	31.5987439156	2966
Coq.Reals.Rsqrt_def.pow_2_n_growing	40	1.6.9.11.4	synth with cache (only 1: constructor; only 1: revert n; only 1: fix le_div2 1; only 1: intros a; only 1: trivial).	23.3938789368	3547
Coq.Reals.Rsqrt_def.pow_2_n_infty	40
Coq.Reals.Rsqrt_def.cv_dicho	40
Coq.Reals.Rsqrt_def.continuity_seq	40
Coq.Reals.Rsqrt_def.dicho_lb_car	40
Coq.Reals.Rsqrt_def.dicho_up_car	40	0.0.2.1.2.2.2.1.0	synth with cache (only 1: intros; only 1: induction n as [| n Hrecn]; only 1: assumption; only 1: simpl; only 1: destruct (sumbool_of_bool (P ((Dichotomy_lb x y P n + Dichotomy_ub x y P n) / 2))) as [Heq| Heq]; only 1: rewrite Heq; only 1: assumption; only 1: rewrite Heq; only 1: assumption).	18.2623949051	1634
Coq.Reals.Rsqrt_def.cv_pow_half	40
Coq.Reals.Rsqrt_def.IVT	40
Coq.Reals.Rsqrt_def.IVT_cor	40
Coq.Reals.Rsqrt_def.Rsqrt_exists	40
Coq.Reals.Rsqrt_def.Rsqrt_positivity	40
Coq.Reals.Rsqrt_def.Rsqrt_Rsqrt	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.MapsTo_In	40	0.0.0.3.19	synth with cache (only 1: intros A B H; only 1: induction 1; only 1: auto; only 1: auto; only 1: auto).	28.6358959675	3376
Coq.FSets.FMapAVL.Raw.Proofs.Elt.In_MapsTo	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.In_alt	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.MapsTo_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.In_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.In_node_iff	40	2.4.4	synth with cache (only 1: split; only 1: intuition_in; only 1: intuition).	2.33162808418	142
Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_leaf	40	16	synth with cache (only 1: inversion_clear 1).	3.11674284935	334
Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_leaf	40	16	synth with cache (only 1: inversion_clear 1).	3.40139913559	335
Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_tree_node	40	0.0.5.20.2	synth with cache (only 1: intuition; only 1: inversion_clear 1; only 1: L.MX.order; only 1: auto; only 1: auto).	26.7385289669	2914
Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_tree_node	40	2.2.14	synth with cache (only 1: unfold gt_tree; only 1: intuition_in; only 1: order).	25.9891040325	633
Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_left	40	0	synth with cache (only 1: auto).	0.107563018799	1
Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_right	40	0	synth with cache (only 1: auto).	0.1064889431	1
Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_left	40	0	synth with cache (only 1: auto).	0.105444908142	1
Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_right	40	0	synth with cache (only 1: auto).	0.103909015656	1
Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_tree_not_in	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_tree_trans	40	3	synth with cache (only 1: eauto with ordered_type).	0.368495941162	24
Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_tree_not_in	40	1.2.1.0	synth with cache (only 1: intros; only 1: intro; only 1: generalize (H _ H0); only 1: order).	0.260818958282	14
Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_tree_trans	40	3	synth with cache (only 1: eauto with ordered_type).	0.505238771439	24
Coq.FSets.FMapAVL.Raw.Proofs.Elt.empty_bst	40	0	synth with cache (only 1: auto).	0.107836961746	1
Coq.FSets.FMapAVL.Raw.Proofs.Elt.empty_1	40	23	synth with cache (only 1: inversion_clear 1).	5.35831594467	691
Coq.FSets.FMapAVL.Raw.Proofs.Elt.is_empty_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.is_empty_2	40	4.8.1.4	synth with cache (only 1: destruct m as [| r x e l h]; only 1: simpl; only 1: easy; only 1: discriminate).	12.0745699406	1336
Coq.FSets.FMapAVL.Raw.Proofs.Elt.mem_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.mem_2	40	0.0.0.2.3.4	synth with cache (only 1: intros m x; only 1: functional induction (mem x m); only 1: easy; only 1: auto; only 1: auto; only 1: auto).	2.83248186111	213
Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_2	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_iff	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_in	40	0.0.0.3.7.10	synth with cache (only 1: intros m x; only 1: functional induction (find x m); only 1: now destruct 1; only 1: auto; only 1: auto; only 1: auto).	16.2672321796	2104
Coq.FSets.FMapAVL.Raw.Proofs.Elt.in_find	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_in_iff	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.not_find_iff	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_find	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_mapsto_equiv	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_in_equiv	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.create_bst	40	5.10	synth with cache (only 1: intros n m p q H1 H2 H3 H4; only 1: now right).	8.71259093285	553
Coq.FSets.FMapAVL.Raw.Proofs.Elt.create_in	40	7.9	synth with cache (only 1: compute; only 1: intuition_in).	11.6240010262	793
Coq.FSets.FMapAVL.Raw.Proofs.Elt.bal_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.bal_in	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.bal_mapsto	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.bal_find	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_in	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_2	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_3	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_find	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_min_in	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_min_mapsto	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_min_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_min_gt_tree	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_min_find	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.merge_in	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.merge_mapsto	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.merge_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_in	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_2	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_3	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.join_in	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.join_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.join_find	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_in_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_in_2	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_in_3	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_lt_tree	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_gt_tree	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_find	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.concat_in	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.concat_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.concat_find	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_aux_mapsto	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_mapsto	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_in	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_aux_sort	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_sort	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_nodup	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_aux_cardinal	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_cardinal	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_app	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_node	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.fold_equiv_aux	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.fold_equiv	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.fold_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.flatten_e_elements	40	0.2.2.1.2	synth with cache (only 1: unfold elements; only 1: simpl; only 1: intros; only 1: rewrite !elements_app, !app_nil_r, !app_assoc_reverse; only 1: auto).	4.46921992302	228
Coq.FSets.FMapAVL.Raw.Proofs.Elt.cons_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.cons_IfEq	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.equal_end_IfEq	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.equal_more_IfEq	40	4.7.1	synth with cache (only 1: simpl; only 1: inversion_clear 1; only 1: constructor).	6.50509285927	414
Coq.FSets.FMapAVL.Raw.Proofs.Elt.equal_cont_IfEq	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.equal_IfEq	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.Equivb_elements	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.equal_Equivb	40	0.2.8	synth with cache (only 1: intros n m Hn; only 1: fix even_spec 1; only 1: auto).	2.30588412285	239
Coq.FSets.FMapAVL.Raw.Proofs.Map.map_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Map.map_2	40	3.1.6.1.13	synth with cache (only 1: induction m; only 1: simpl; only 1: intuition_in; only 1: simpl; only 1: intuition_in).	22.5642778873	3510
Coq.FSets.FMapAVL.Raw.Proofs.Map.map_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Mapi.mapi_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Mapi.mapi_2	40	0.0.0.2.2.2	synth with cache (only 1: induction m; only 1: inversion_clear 1; only 1: inversion_clear 1; only 1: auto; only 1: auto; only 1: auto).	3.6015329361	144
Coq.FSets.FMapAVL.Raw.Proofs.Mapi.mapi_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Map_option.map_option_2	40
Coq.FSets.FMapAVL.Raw.Proofs.Map_option.map_option_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Map_option.map_option_find	40
Coq.FSets.FMapAVL.Raw.Proofs.Map2_opt.map2_opt_2	40
Coq.FSets.FMapAVL.Raw.Proofs.Map2_opt.map2_opt_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Map2_opt.map2_opt_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Map2.map2_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Map2.map2_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Map2.map2_2	40
Coq.FSets.FMapAVL.IntMake.Elt.MapsTo_1	40
Coq.FSets.FMapAVL.IntMake.Elt.mem_1	40
Coq.FSets.FMapAVL.IntMake.Elt.mem_2	40
Coq.FSets.FMapAVL.IntMake.Elt.empty_1	40	8	synth with cache (only 1: inversion_clear 1).	0.176506996155	9
Coq.FSets.FMapAVL.IntMake.Elt.is_empty_1	40
Coq.FSets.FMapAVL.IntMake.Elt.is_empty_2	40
Coq.FSets.FMapAVL.IntMake.Elt.add_1	40
Coq.FSets.FMapAVL.IntMake.Elt.add_2	40
Coq.FSets.FMapAVL.IntMake.Elt.add_3	40
Coq.FSets.FMapAVL.IntMake.Elt.remove_1	40
Coq.FSets.FMapAVL.IntMake.Elt.remove_2	40
Coq.FSets.FMapAVL.IntMake.Elt.remove_3	40
Coq.FSets.FMapAVL.IntMake.Elt.find_1	40
Coq.FSets.FMapAVL.IntMake.Elt.find_2	40	0.17.6	synth with cache (only 1: intuition; only 1: apply find_2; only 1: auto).	14.1218760014	2458
Coq.FSets.FMapAVL.IntMake.Elt.fold_1	40
Coq.FSets.FMapAVL.IntMake.Elt.elements_1	40
Coq.FSets.FMapAVL.IntMake.Elt.elements_2	40
Coq.FSets.FMapAVL.IntMake.Elt.elements_3	40
Coq.FSets.FMapAVL.IntMake.Elt.elements_3w	40
Coq.FSets.FMapAVL.IntMake.Elt.cardinal_1	40	2	synth with cache (only 1: exact (fun m : Raw.tree elt => elements_aux_cardinal nil)).	0.158254861832	3
Coq.FSets.FMapAVL.IntMake.Elt.Equivb_Equivb	40
Coq.FSets.FMapAVL.IntMake.Elt.equal_1	40
Coq.FSets.FMapAVL.IntMake.Elt.equal_2	40
Coq.FSets.FMapAVL.IntMake.map_1	40
Coq.FSets.FMapAVL.IntMake.map_2	40
Coq.FSets.FMapAVL.IntMake.mapi_1	40
Coq.FSets.FMapAVL.IntMake.mapi_2	40
Coq.FSets.FMapAVL.IntMake.map2_1	40
Coq.FSets.FMapAVL.IntMake.map2_2	40
Coq.FSets.FMapAVL.IntMake_ord.cons_Cmp	40
Coq.FSets.FMapAVL.IntMake_ord.compare_end_Cmp	40	0.1.0.1.6	synth with cache (only 1: destruct e2; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	1.91807293892	124
Coq.FSets.FMapAVL.IntMake_ord.compare_more_Cmp	40
Coq.FSets.FMapAVL.IntMake_ord.compare_cont_Cmp	40
Coq.FSets.FMapAVL.IntMake_ord.compare_Cmp	40
Coq.FSets.FMapAVL.IntMake_ord.compare	40
Coq.FSets.FMapAVL.IntMake_ord.eq_seq	40	1.0	synth with cache (only 1: intros; only 1: intuition).	0.229257106781	3
Coq.FSets.FMapAVL.IntMake_ord.lt_slt	40	1.0	synth with cache (only 1: intros; only 1: intuition).	0.228168010712	3
Coq.FSets.FMapAVL.IntMake_ord.eq_1	40
Coq.FSets.FMapAVL.IntMake_ord.eq_2	40
Coq.FSets.FMapAVL.IntMake_ord.eq_refl	40
Coq.FSets.FMapAVL.IntMake_ord.eq_sym	40
Coq.FSets.FMapAVL.IntMake_ord.eq_trans	40
Coq.FSets.FMapAVL.IntMake_ord.lt_trans	40
Coq.FSets.FMapAVL.IntMake_ord.lt_not_eq	40
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.In_eq_iff	40
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.mem_iff	40	3.1.1.1	synth with cache (only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: intuition).	0.373827934265	12
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.not_mem_iff	40
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.equal_iff	40	2	synth with cache (only 1: intuition).	0.100970983505	3
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.subset_iff	40	2.5	synth with cache (only 1: symmetry; only 1: intuition).	1.90332698822	17
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.empty_iff	40
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.is_empty_iff	40	2	synth with cache (only 1: intuition).	0.0976049900055	3
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.singleton_iff	40	1	synth with cache (only 1: intuition).	0.180175065994	14
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.add_iff	40
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.add_neq_iff	40	4.1.4.6.7	synth with cache (only 1: destruct (eq_dec x y) as [E| E]; only 1: intuition; only 1: intro n; only 1: intuition; only 1: exact (add_3 E H)).	36.0163428783	5971
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.remove_iff	40
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.remove_neq_iff	40	0.4.4.2	synth with cache (only 1: intro n; only 1: intuition; only 1: apply remove_3 with x; only 1: auto).	3.77380919456	395
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.union_iff	40	0	synth with cache (only 1: intuition).	0.285683870316	1
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.inter_iff	40
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.diff_iff	40
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.filter_iff	40
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.for_all_iff	40	1.1	synth with cache (only 1: intro n; only 1: intuition).	0.144128799438	4
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.exists_iff	40	1.2	synth with cache (only 1: intro n; only 1: intuition).	0.436916828156	14
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.elements_iff	40	3	synth with cache (only 1: intuition).	0.146242141724	11
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.mem_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.empty_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.add_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.add_neq_b	40	2.3.0.11	synth with cache (only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_iff s x y); only 1: intuition; only 1: apply eq_true_iff_eq; only 1: intuition).	10.0795459747	765
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.remove_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.remove_neq_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.singleton_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.union_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.inter_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.diff_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.elements_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.filter_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.for_all_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.exists_b	40
Coq.FSets.FSetFacts.WFacts_fun.E_ST	40
Coq.FSets.FSetFacts.WFacts_fun.Equal_ST	40
Coq.FSets.FSetFacts.WFacts_fun.In_m	40
Coq.FSets.FSetFacts.WFacts_fun.is_empty_m	40
Coq.FSets.FSetFacts.WFacts_fun.Empty_m	40
Coq.FSets.FSetFacts.WFacts_fun.mem_m	40
Coq.FSets.FSetFacts.WFacts_fun.singleton_m	40
Coq.FSets.FSetFacts.WFacts_fun.add_m	40
Coq.FSets.FSetFacts.WFacts_fun.remove_m	40
Coq.FSets.FSetFacts.WFacts_fun.union_m	40
Coq.FSets.FSetFacts.WFacts_fun.inter_m	40
Coq.FSets.FSetFacts.WFacts_fun.diff_m	40
Coq.FSets.FSetFacts.WFacts_fun.Subset_m	40
Coq.FSets.FSetFacts.WFacts_fun.subset_m	40
Coq.FSets.FSetFacts.WFacts_fun.equal_m	40
Coq.FSets.FSetFacts.WFacts_fun.Subset_refl	40	3.4.0	synth with cache (only 1: intros; only 1: red; only 1: eauto).	0.222886800766	12
Coq.FSets.FSetFacts.WFacts_fun.Subset_trans	40	1.2.9	synth with cache (only 1: intros; only 1: red; only 1: auto).	3.72083306313	317
Coq.FSets.FSetFacts.WFacts_fun.In_s_m	40	0.11.4	synth with cache (only 1: intros x y H s s' H0 a; only 1: rewrite <- H; only 1: auto).	16.4409000874	680
Coq.FSets.FSetFacts.WFacts_fun.Empty_s_m_Proper	40	17.0	synth with cache (only 1: intros a b H; only 1: firstorder).	5.40021800995	554
Coq.FSets.FSetFacts.WFacts_fun.add_s_m_Proper	40
Coq.FSets.FSetFacts.WFacts_fun.remove_s_m_Proper	40	1.2.6.1.0	synth with cache (only 1: unfold Subset; only 1: intros x y H s s' H0 a; only 1: do 2 rewrite remove_iff; only 1: rewrite H; only 1: intuition).	8.07209205627	529
Coq.FSets.FSetFacts.WFacts_fun.union_s_m_Proper	40	2.3.15.1	synth with cache (only 1: unfold Subset; only 1: intros s s' H s'' s''' H0 a; only 1: do 2 rewrite union_iff; only 1: intuition).	32.7455480099	3684
Coq.FSets.FSetFacts.WFacts_fun.inter_s_m_Proper	40	2.8.1	synth with cache (only 1: intros s s' H s'' s''' H0 a; only 1: do 2 rewrite inter_iff; only 1: intuition).	5.48300385475	271
Coq.FSets.FSetFacts.WFacts_fun.diff_s_m_Proper	40	2.11.1	synth with cache (only 1: intros s s' H s'' s''' H0 a; only 1: do 2 rewrite diff_iff; only 1: intuition).	8.71609115601	602
Coq.FSets.FSetFacts.WFacts_fun.filter_equal	40
Coq.FSets.FSetFacts.WFacts_fun.filter_ext	40
Coq.FSets.FSetFacts.WFacts_fun.filter_subset	40
Coq.FSets.FSetPositive.PositiveSet.In_1	40	1.4.0.11	synth with cache (only 1: vm_compute; only 1: intros x y z; only 1: intuition auto; Pos.Private_Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: auto).	11.6533918381	1259
Coq.FSets.FSetPositive.PositiveSet.eq_refl	40	0.10	synth with cache (only 1: intros y LT; only 1: intuition).	0.721491098404	117
Coq.FSets.FSetPositive.PositiveSet.eq_sym	40	2.10	synth with cache (only 1: intros n m H; only 1: now rewrite <- ?BinInt.Z.pred_le_mono).	3.5589299202	208
Coq.FSets.FSetPositive.PositiveSet.eq_trans	40
Coq.FSets.FSetPositive.PositiveSet.mem_1	40	1.1	synth with cache (only 1: intros; only 1: trivial).	0.144242048264	4
Coq.FSets.FSetPositive.PositiveSet.mem_2	40	0.2	synth with cache (only 1: unfold In; only 1: trivial).	0.138987064362	4
Coq.FSets.FSetPositive.PositiveSet.mem_Leaf	40	0.0	synth with cache (only 1: intros n; only 1: reflexivity).	0.13947892189	2
Coq.FSets.FSetPositive.PositiveSet.empty_1	40	1.1	synth with cache (only 1: vm_compute; only 1: intuition).	0.143965005875	4
Coq.FSets.FSetPositive.PositiveSet.mem_node	40
Coq.FSets.FSetPositive.PositiveSet.is_empty_spec	40	3.3.6.2	synth with cache (only 1: fix even_spec 1; only 1: intro n; only 1: rewrite even_spec; only 1: intuition).	12.2736849785	1017
Coq.FSets.FSetPositive.PositiveSet.is_empty_1	40
Coq.FSets.FSetPositive.PositiveSet.is_empty_2	40	2.7.2	synth with cache (only 1: intro; only 1: rewrite is_empty_spec; only 1: trivial).	1.50371813774	159
Coq.FSets.FSetPositive.PositiveSet.subset_Leaf_s	40	2.5	synth with cache (only 1: vm_compute; only 1: auto with *).	0.228315830231	23
Coq.FSets.FSetPositive.PositiveSet.subset_spec	40
Coq.FSets.FSetPositive.PositiveSet.subset_1	40
Coq.FSets.FSetPositive.PositiveSet.subset_2	40
Coq.FSets.FSetPositive.PositiveSet.equal_subset	40
Coq.FSets.FSetPositive.PositiveSet.equal_spec	40
Coq.FSets.FSetPositive.PositiveSet.equal_1	40	0.0.10.18.1	synth with cache (only 1: intros s s'; only 1: rewrite equal_subset; only 1: rewrite andb_true_iff; only 1: rewrite <- 2!subset_spec; only 1: firstorder).	31.5131211281	6380
Coq.FSets.FSetPositive.PositiveSet.equal_2	40	0.0.6.14.2	synth with cache (only 1: intros s s'; only 1: rewrite equal_subset; only 1: rewrite andb_true_iff; only 1: rewrite <- 2!subset_spec; only 1: firstorder).	11.4413080215	1549
Coq.FSets.FSetPositive.PositiveSet.eq_dec	40
Coq.FSets.FSetPositive.PositiveSet.lex_Opp	40
Coq.FSets.FSetPositive.PositiveSet.compare_bool_inv	40	0.0.0.0.0.4	synth with cache (only 1: intros n m; only 1: destruct n, m; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	0.297139167786	16
Coq.FSets.FSetPositive.PositiveSet.compare_inv	40
Coq.FSets.FSetPositive.PositiveSet.lex_Eq	40
Coq.FSets.FSetPositive.PositiveSet.compare_bool_Eq	40	0.0.0.0.3	synth with cache (only 1: destr_bool; only 1: easy'; only 1: easy'; only 1: easy'; only 1: easy').	0.461741924286	21
Coq.FSets.FSetPositive.PositiveSet.compare_equal	40
Coq.FSets.FSetPositive.PositiveSet.compare_gt	40
Coq.FSets.FSetPositive.PositiveSet.compare_eq	40
Coq.FSets.FSetPositive.PositiveSet.compare	40
Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_cxe	40	0.0.14	synth with cache (only 1: fix sqrtrem_spec 1; only 1: intro n; only 1: auto).	4.76798796654	486
Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_xce	40	0.0.0.1	synth with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.303144931793	14
Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_lxl	40	1.0.1.12	synth with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	2.45186090469	320
Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_gxg	40	0.0.0.1	synth with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.215143918991	5
Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_xll	40	0.0.0.0	synth with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.525796890259	4
Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_xgg	40	0.0.0.0	synth with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.233380794525	4
Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_lex	40
Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_compare_bool	40
Coq.FSets.FSetPositive.PositiveSet.lt_spec.compare_x_Leaf	40	0.0.11	synth with cache (only 1: intros [| l' o' r']; only 1: reflexivity; only 1: reflexivity).	1.04435300827	121
Coq.FSets.FSetPositive.PositiveSet.lt_spec.compare_empty_x	40
Coq.FSets.FSetPositive.PositiveSet.lt_spec.compare_x_empty	40
Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_compare_fun	40
Coq.FSets.FSetPositive.PositiveSet.lt_trans	40
Coq.FSets.FSetPositive.PositiveSet.lt_not_eq	40
Coq.FSets.FSetPositive.PositiveSet.add_spec	40
Coq.FSets.FSetPositive.PositiveSet.add_1	40
Coq.FSets.FSetPositive.PositiveSet.add_2	40	0.6.10	synth with cache (only 1: intros; only 1: apply <- add_spec; only 1: auto).	2.5962600708	387
Coq.FSets.FSetPositive.PositiveSet.add_3	40
Coq.FSets.FSetPositive.PositiveSet.remove_spec	40
Coq.FSets.FSetPositive.PositiveSet.remove_1	40
Coq.FSets.FSetPositive.PositiveSet.remove_2	40	1.12.2	synth with cache (only 1: intros s x y H; only 1: rewrite remove_spec; only 1: auto).	7.6851439476	804
Coq.FSets.FSetPositive.PositiveSet.remove_3	40
Coq.FSets.FSetPositive.PositiveSet.singleton_1	40
Coq.FSets.FSetPositive.PositiveSet.singleton_2	40	0.4.7	synth with cache (only 1: intros; only 1: apply <- add_spec; only 1: auto).	3.88064599037	254
Coq.FSets.FSetPositive.PositiveSet.union_spec	40
Coq.FSets.FSetPositive.PositiveSet.union_1	40
Coq.FSets.FSetPositive.PositiveSet.union_2	40
Coq.FSets.FSetPositive.PositiveSet.union_3	40	2.0.3	synth with cache (only 1: intros; only 1: apply <- union_spec; only 1: auto).	0.221021175385	12
Coq.FSets.FSetPositive.PositiveSet.inter_spec	40
Coq.FSets.FSetPositive.PositiveSet.inter_1	40
Coq.FSets.FSetPositive.PositiveSet.inter_2	40	1.1.2	synth with cache (only 1: intros s s' x; only 1: rewrite inter_spec; only 1: tauto).	0.195972204208	7
Coq.FSets.FSetPositive.PositiveSet.inter_3	40	1.5.11	synth with cache (only 1: fix gcd_greatest 1; only 1: intros a b c Ha Hb; only 1: auto).	5.57570099831	683
Coq.FSets.FSetPositive.PositiveSet.diff_spec	40
Coq.FSets.FSetPositive.PositiveSet.diff_1	40
Coq.FSets.FSetPositive.PositiveSet.diff_2	40	1.1.2	synth with cache (only 1: intros s s' x; only 1: rewrite diff_spec; only 1: tauto).	0.189471006393	7
Coq.FSets.FSetPositive.PositiveSet.diff_3	40	1.1.8	synth with cache (only 1: intros s s' x; only 1: rewrite diff_spec; only 1: tauto).	1.07606005669	100
Coq.FSets.FSetPositive.PositiveSet.fold_1	40
Coq.FSets.FSetPositive.PositiveSet.cardinal_1	40
Coq.FSets.FSetPositive.PositiveSet.xfilter_spec	40
Coq.FSets.FSetPositive.PositiveSet.filter_1	40
Coq.FSets.FSetPositive.PositiveSet.filter_2	40
Coq.FSets.FSetPositive.PositiveSet.filter_3	40	1.7.1.1	synth with cache (only 1: unfold filter; only 1: intros s x f _; only 1: rewrite xfilter_spec; only 1: auto).	4.0498650074	373
Coq.FSets.FSetPositive.PositiveSet.xforall_spec	40
Coq.FSets.FSetPositive.PositiveSet.for_all_1	40
Coq.FSets.FSetPositive.PositiveSet.for_all_2	40	0.2.2.1	synth with cache (only 1: intros s f _; only 1: unfold for_all; only 1: rewrite xforall_spec; only 1: trivial).	0.395206928253	20
Coq.FSets.FSetPositive.PositiveSet.xexists_spec	40
Coq.FSets.FSetPositive.PositiveSet.exists_1	40
Coq.FSets.FSetPositive.PositiveSet.exists_2	40	0.7.6.0	synth with cache (only 1: intros s f _; only 1: unfold exists_; only 1: rewrite xexists_spec; only 1: trivial).	4.10420608521	599
Coq.FSets.FSetPositive.PositiveSet.partition_filter	40
Coq.FSets.FSetPositive.PositiveSet.partition_1	40
Coq.FSets.FSetPositive.PositiveSet.partition_2	40	2.2.4	synth with cache (only 1: intros; only 1: rewrite partition_filter; only 1: apply eq_refl).	0.514423847198	44
Coq.FSets.FSetPositive.PositiveSet.xelements_spec	40
Coq.FSets.FSetPositive.PositiveSet.elements_1	40
Coq.FSets.FSetPositive.PositiveSet.elements_2	40
Coq.FSets.FSetPositive.PositiveSet.lt_rev_append	40
Coq.FSets.FSetPositive.PositiveSet.elements_3	40	6.35	synth with cache (only 1: fix sqrtrem_spec 1; only 1: trivial).	13.1674790382	3591
Coq.FSets.FSetPositive.PositiveSet.elements_3w	40
Coq.FSets.FSetPositive.PositiveSet.choose_1	40
Coq.FSets.FSetPositive.PositiveSet.choose_2	40
Coq.FSets.FSetPositive.PositiveSet.choose_empty	40
Coq.FSets.FSetPositive.PositiveSet.choose_3'	40
Coq.FSets.FSetPositive.PositiveSet.choose_3	40
Coq.FSets.FSetPositive.PositiveSet.min_elt_1	40
Coq.FSets.FSetPositive.PositiveSet.min_elt_3	40
Coq.FSets.FSetPositive.PositiveSet.min_elt_2	40
Coq.FSets.FSetPositive.PositiveSet.max_elt_1	40
Coq.FSets.FSetPositive.PositiveSet.max_elt_3	40
Coq.FSets.FSetPositive.PositiveSet.max_elt_2	40
Coq.FSets.FMapPositive.append_assoc_0	40	1.0.3.1.0.4.1.6.5	synth with cache (only 1: intros a b; only 1: induction a as [a IH| a IH| ]; only 1: simpl; only 1: f_equal; only 1: trivial; only 1: simpl; only 1: f_equal; only 1: trivial; only 1: reflexivity).	32.4185860157	3269
Coq.FSets.FMapPositive.append_assoc_1	40
Coq.FSets.FMapPositive.append_neutral_r	40
Coq.FSets.FMapPositive.append_neutral_l	40	0.0.0.0.0.0	synth with cache (only 1: induction i; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: reflexivity).	0.277974128723	6
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.gempty	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.gss	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.gleaf	40	0.0.0.2	synth with cache (only 1: destruct i; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	0.232169151306	6
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.gso	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.rleaf	40	0.0.0.3	synth with cache (only 1: destruct i; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	0.232550144196	7
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.grs	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.gro	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_correct	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.elements_correct	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xfind_left	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_ii	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_io	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_oo	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_oi	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_ih	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_oh	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_hi	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_ho	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.find_xfind_h	40	0.1.1.1.4	synth with cache (only 1: intros n m; only 1: destruct m; only 1: auto; only 1: auto; only 1: reflexivity).	2.62522983551	123
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_complete	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.elements_complete	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.cardinal_1	40
Coq.FSets.FMapPositive.PositiveMap.A.mem_find	40
Coq.FSets.FMapPositive.PositiveMap.A.Empty_alt	40
Coq.FSets.FMapPositive.PositiveMap.A.Empty_Node	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.mem_1	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.mem_2	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.MapsTo_1	40	8	synth with cache (only 1: congruence).	0.184398174286	16
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.find_1	40	0	synth with cache (only 1: auto).	0.0967931747437	1
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.find_2	40	1	synth with cache (only 1: auto).	0.0958139896393	2
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.empty_1	40	5.8	synth with cache (only 1: rewrite Empty_alt; only 1: exact gempty).	1.34295797348	152
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.is_empty_1	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.is_empty_2	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.add_1	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.add_2	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.add_3	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.remove_1	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.remove_2	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.remove_3	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.elements_1	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.elements_2	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.xelements_bits_lt_1	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.xelements_bits_lt_2	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.xelements_sort	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.elements_3	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.elements_3w	40
Coq.FSets.FMapPositive.PositiveMap.xgmapi	40
Coq.FSets.FMapPositive.PositiveMap.gmapi	40
Coq.FSets.FMapPositive.PositiveMap.mapi_1	40
Coq.FSets.FMapPositive.PositiveMap.mapi_2	40
Coq.FSets.FMapPositive.PositiveMap.map_1	40
Coq.FSets.FMapPositive.PositiveMap.map_2	40
Coq.FSets.FMapPositive.PositiveMap.map2.xgmap2_l	40
Coq.FSets.FMapPositive.PositiveMap.map2.xgmap2_r	40
Coq.FSets.FMapPositive.PositiveMap.map2.gmap2	40
Coq.FSets.FMapPositive.PositiveMap.map2_1	40
Coq.FSets.FMapPositive.PositiveMap.map2_2	40
Coq.FSets.FMapPositive.PositiveMap.Fold.xfoldi_1	40
Coq.FSets.FMapPositive.PositiveMap.fold_1	40
Coq.FSets.FMapPositive.PositiveMap.equal_1	40
Coq.FSets.FMapPositive.PositiveMap.equal_2	40
Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.gsspec	40
Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.gsident	40
Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.xmap2_lr	40
Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.map2_commut	40
Coq.FSets.FMapFacts.WFacts_fun.eq_bool_alt	40	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.237926959991	5
Coq.FSets.FMapFacts.WFacts_fun.eq_option_alt	40
Coq.FSets.FMapFacts.WFacts_fun.MapsTo_fun	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.In_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.MapsTo_iff	40	2.3.21	synth with cache (only 1: intuition; only 1: apply (MapsTo_1 H H0); only 1: apply (MapsTo_1 (E.eq_sym H) H0)).	33.9405770302	5117
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.mem_in_iff	40	1.1	synth with cache (only 1: intros; only 1: intuition).	0.14601111412	4
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.not_mem_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.In_dec	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.find_mapsto_iff	40	6	synth with cache (only 1: intuition).	0.369298934937	28
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.not_find_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.in_find_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.equal_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.empty_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.empty_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.is_empty_iff	40	2.2	synth with cache (only 1: intro n; only 1: intuition).	0.144106864929	6
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.add_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.add_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.add_neq_mapsto_iff	40	0.0.1.2.4	synth with cache (only 1: intros; only 1: intuition; only 1: apply add_3 with x e; only 1: auto; only 1: auto).	3.79813694954	169
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.add_neq_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.remove_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.remove_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.remove_neq_mapsto_iff	40	0.1.9	synth with cache (only 1: intuition; only 1: apply remove_3 with x; only 1: auto).	4.57549285889	249
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.remove_neq_in_iff	40	0.0.0.2.0.0.1.1.2.0.0	synth with cache (only 1: split; only 1: intros (e', H0); only 1: exists e'; only 1: intuition; only 1: apply remove_3 with x; only 1: auto; only 1: intros (e', H0); only 1: exists e'; only 1: apply remove_2; only 1: auto; only 1: auto).	28.7197759151	1990
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.elements_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.elements_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.map_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.map_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.mapi_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.mapi_inv	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.mapi_1bis	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.mapi_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.mem_find_b	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.mem_b	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.find_o	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.empty_o	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.empty_a	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_eq_o	40	5.2	synth with cache (only 1: intros x y z; only 1: intuition).	0.173682928085	9
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_neq_o	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_o	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_eq_b	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_neq_b	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_b	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_eq_o	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_neq_o	40	2.6.2.4.2	synth with cache (only 1: intros; only 1: rewrite eq_option_alt; only 1: intro e'; only 1: rewrite <- find_mapsto_iff, remove_mapsto_iff; only 1: now intuition).	20.1579048634	1670
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_o	40	0.0.0.0.0.5.2.6	synth with cache (only 1: intros; only 1: destruct (eq_dec x y); only 1: auto with map; only 1: rewrite eq_option_alt; only 1: intro e; only 1: rewrite <- find_mapsto_iff, remove_neq_mapsto_iff; only 1: now intuition; only 1: auto).	22.8318400383	1901
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_eq_b	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_neq_b	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_b	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.map_o	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.map_b	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.mapi_b	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.mapi_o	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.map2_1bis	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.elements_o	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.elements_b	40
Coq.FSets.FMapFacts.WFacts_fun.Equalities.Equal_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.Equalities.Equal_Equiv	40
Coq.FSets.FMapFacts.WFacts_fun.Equalities.Cmp.Equiv_Equivb	40
Coq.FSets.FMapFacts.WFacts_fun.Equalities.Equal_Equivb	40
Coq.FSets.FMapFacts.WFacts_fun.Equalities.Equal_Equivb_eqdec	40
Coq.FSets.FMapFacts.WFacts_fun.Equal_refl	40	1	synth with cache (only 1: split).	0.110918045044	2
Coq.FSets.FMapFacts.WFacts_fun.Equal_sym	40	1.2	synth with cache (only 1: vm_compute; only 1: auto).	0.160601139069	5
Coq.FSets.FMapFacts.WFacts_fun.Equal_trans	40	1.14.6.1	synth with cache (only 1: unfold Equal; only 1: intuition; only 1: rewrite H; only 1: auto).	18.7455079556	2164
Coq.FSets.FMapFacts.WFacts_fun.Equal_ST	40	1.3	synth with cache (only 1: intro; only 1: auto).	0.618741989136	28
Coq.FSets.FMapFacts.WFacts_fun.In_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.MapsTo_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.Empty_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.is_empty_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.mem_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.find_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.add_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.remove_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.map_m_Proper	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.eqk_equiv	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.eqke_equiv	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.InA_eqke_eqk	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.NoDupA_eqk_eqke	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.findA_rev	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.elements_Empty	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.elements_empty	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.of_list_1	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.of_list_1b	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.of_list_2	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.of_list_3	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_spec_right	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_rec	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_rec_bis	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_rec_nodep	40	0.0.7.4	synth with cache (only 1: intros A P f i m Hempty Hstep; only 1: apply fold_rec; only 1: auto; only 1: auto).	1.57247591019	164
Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_rec_weak	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_rel	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.map_induction	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.map_induction_bis	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_identity	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_init	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_Empty	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_commutes	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_Equal	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_Equal2	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_Add	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_add	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_fold	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_Empty	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Equal_cardinal	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_1	40	4.7.7	synth with cache (only 1: intro; only 1: rewrite cardinal_1, elements_Empty; only 1: now intros ->).	3.52329993248	599
Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_2	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_inv_1	40	0.7.6	synth with cache (only 1: intro; only 1: rewrite <- cardinal_Empty; only 1: auto).	2.01257395744	222
Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_inv_2	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_inv_2b	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Specs.filter_iff	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Specs.for_all_iff	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Specs.exists_iff	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Disjoint_alt	40	8.15	synth with cache (only 1: vm_compute; only 1: firstorder).	28.9837589264	4238
Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition.partition_iff_1	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition.partition_iff_2	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition.partition_Partition	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_In	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Disjoint_sym	40	15	synth with cache (only 1: firstorder).	2.28797292709	254
Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_sym	40	11	synth with cache (only 1: firstorder).	2.00166916847	132
Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_Empty	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_Add	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_fold	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_cardinal	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_partition	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.update_mapsto_iff	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.update_dec	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.update_in_iff	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.diff_mapsto_iff	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.diff_in_iff	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.restrict_mapsto_iff	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.restrict_in_iff	40
Coq.FSets.FMapFacts.WProperties_fun.cardinal_m_Proper	40	0.0.1.0.1.0.1.2.3	synth with cache (only 1: intros m m' Hm; only 1: do 2 rewrite cardinal_fold; only 1: apply fold_Equal with (eqA := eq); only 1: auto; only 1: compute; only 1: auto; only 1: compute; only 1: auto; only 1: auto).	5.11347818375	430
Coq.FSets.FMapFacts.WProperties_fun.Disjoint_m_Proper	40
Coq.FSets.FMapFacts.WProperties_fun.Partition_m_Proper	40
Coq.FSets.FMapFacts.WProperties_fun.update_m_Proper	40
Coq.FSets.FMapFacts.WProperties_fun.restrict_m_Proper	40
Coq.FSets.FMapFacts.WProperties_fun.diff_m_Proper	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.sort_equivlistA_eqlistA	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.gtb_1	40	0.7.13	synth with cache (only 1: intro m; only 1: fix even_spec 1; only 1: auto).	27.3116190434	3379
Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.leb_1	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.gtb_compat	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.leb_compat	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.elements_split	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.elements_Add	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.elements_Add_Above	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.elements_Add_Below	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.elements_Equal_eqlistA	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.max_elt_Above	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.max_elt_MapsTo	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.max_elt_Empty	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.min_elt_Below	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.min_elt_MapsTo	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.min_elt_Empty	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Induction_Principles.map_induction_max	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Induction_Principles.map_induction_min	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Fold_properties.fold_Equal	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Fold_properties.fold_Add_Above	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Fold_properties.fold_Add_Below	40
Coq.FSets.FMapWeakList.Raw.Elt.empty_1	40	6	synth with cache (only 1: inversion_clear 1).	0.0550909042358	7
Coq.FSets.FMapWeakList.Raw.Elt.empty_NoDup	40	0.6	synth with cache (only 1: unfold Empty, empty; only 1: eauto).	0.086658000946	8
Coq.FSets.FMapWeakList.Raw.Elt.is_empty_1	40
Coq.FSets.FMapWeakList.Raw.Elt.is_empty_2	40	5.3.8.2	synth with cache (only 1: intuition; only 1: induction 1; only 1: intuition; only 1: intuition).	10.9277889729	1465
Coq.FSets.FMapWeakList.Raw.Elt.mem_1	40
Coq.FSets.FMapWeakList.Raw.Elt.mem_2	40
Coq.FSets.FMapWeakList.Raw.Elt.find_2	40
Coq.FSets.FMapWeakList.Raw.Elt.find_1	40
Coq.FSets.FMapWeakList.Raw.Elt.find_eq	40
Coq.FSets.FMapWeakList.Raw.Elt.add_1	40
Coq.FSets.FMapWeakList.Raw.Elt.add_2	40
Coq.FSets.FMapWeakList.Raw.Elt.add_3	40
Coq.FSets.FMapWeakList.Raw.Elt.add_3'	40
Coq.FSets.FMapWeakList.Raw.Elt.add_NoDup	40
Coq.FSets.FMapWeakList.Raw.Elt.add_eq	40
Coq.FSets.FMapWeakList.Raw.Elt.add_not_eq	40
Coq.FSets.FMapWeakList.Raw.Elt.remove_1	40
Coq.FSets.FMapWeakList.Raw.Elt.remove_2	40
Coq.FSets.FMapWeakList.Raw.Elt.remove_3	40
Coq.FSets.FMapWeakList.Raw.Elt.remove_3'	40	0.0.2.0.0.1.1.2	synth with cache (only 1: intros m Hm x y e; only 1: generalize Hm; only 1: functional induction (remove x m); only 1: auto; only 1: auto; only 1: do 2 inversion_clear 1; only 1: auto; only 1: auto).	16.4443938732	555
Coq.FSets.FMapWeakList.Raw.Elt.remove_NoDup	40
Coq.FSets.FMapWeakList.Raw.Elt.elements_1	40	0	synth with cache (only 1: auto).	0.0605869293213	1
Coq.FSets.FMapWeakList.Raw.Elt.elements_2	40	0	synth with cache (only 1: auto).	0.0616199970245	1
Coq.FSets.FMapWeakList.Raw.Elt.elements_3w	40	0	synth with cache (only 1: auto).	0.0578169822693	1
Coq.FSets.FMapWeakList.Raw.Elt.fold_1	40
Coq.FSets.FMapWeakList.Raw.Elt.submap_1	40
Coq.FSets.FMapWeakList.Raw.Elt.submap_2	40
Coq.FSets.FMapWeakList.Raw.Elt.equal_1	40
Coq.FSets.FMapWeakList.Raw.Elt.equal_2	40
Coq.FSets.FMapWeakList.Raw.Elt2.map_1	40
Coq.FSets.FMapWeakList.Raw.Elt2.map_2	40
Coq.FSets.FMapWeakList.Raw.Elt2.map_NoDup	40
Coq.FSets.FMapWeakList.Raw.Elt2.mapi_1	40
Coq.FSets.FMapWeakList.Raw.Elt2.mapi_2	40
Coq.FSets.FMapWeakList.Raw.Elt2.mapi_NoDup	40
Coq.FSets.FMapWeakList.Raw.Elt3.fold_right_pair_NoDup	40
Coq.FSets.FMapWeakList.Raw.Elt3.combine_NoDup	40
Coq.FSets.FMapWeakList.Raw.Elt3.combine_l_1	40
Coq.FSets.FMapWeakList.Raw.Elt3.combine_r_1	40
Coq.FSets.FMapWeakList.Raw.Elt3.combine_1	40
Coq.FSets.FMapWeakList.Raw.Elt3.map2_NoDup	40
Coq.FSets.FMapWeakList.Raw.Elt3.map2_0	40
Coq.FSets.FMapWeakList.Raw.Elt3.map2_1	40
Coq.FSets.FMapWeakList.Raw.Elt3.map2_2	40
Coq.FSets.FMapWeakList.Make.Elt.MapsTo_1	40	0.0.8.19.3	synth with cache (only 1: intros; only 1: apply InA_eqA with (x, e); only 1: intuition; only 1: auto; only 1: auto).	19.8505749702	5381
Coq.FSets.FMapWeakList.Make.Elt.mem_1	40
Coq.FSets.FMapWeakList.Make.Elt.mem_2	40
Coq.FSets.FMapWeakList.Make.Elt.empty_1	40	4.5	synth with cache (only 1: repeat red; only 1: inversion 1).	0.477307081223	36
Coq.FSets.FMapWeakList.Make.Elt.is_empty_1	40
Coq.FSets.FMapWeakList.Make.Elt.is_empty_2	40
Coq.FSets.FMapWeakList.Make.Elt.add_1	40
Coq.FSets.FMapWeakList.Make.Elt.add_2	40
Coq.FSets.FMapWeakList.Make.Elt.add_3	40
Coq.FSets.FMapWeakList.Make.Elt.remove_1	40
Coq.FSets.FMapWeakList.Make.Elt.remove_2	40
Coq.FSets.FMapWeakList.Make.Elt.remove_3	40	0.33	synth with cache (only 1: fix gcd_greatest 1; only 1: auto).	13.6122400761	4045
Coq.FSets.FMapWeakList.Make.Elt.find_1	40
Coq.FSets.FMapWeakList.Make.Elt.find_2	40
Coq.FSets.FMapWeakList.Make.Elt.elements_1	40	0	synth with cache (only 1: auto).	0.0825278759003	1
Coq.FSets.FMapWeakList.Make.Elt.elements_2	40	0	synth with cache (only 1: auto).	0.0819289684296	1
Coq.FSets.FMapWeakList.Make.Elt.elements_3w	40	46	synth with cache (only 1: now intros []).	10.74593997	5087
Coq.FSets.FMapWeakList.Make.Elt.cardinal_1	40	1	synth with cache (only 1: auto).	0.161499023438	2
Coq.FSets.FMapWeakList.Make.Elt.fold_1	40
Coq.FSets.FMapWeakList.Make.Elt.equal_1	40
Coq.FSets.FMapWeakList.Make.Elt.equal_2	40
Coq.FSets.FMapWeakList.Make.map_1	40
Coq.FSets.FMapWeakList.Make.map_2	40
Coq.FSets.FMapWeakList.Make.mapi_1	40
Coq.FSets.FMapWeakList.Make.mapi_2	40
Coq.FSets.FMapWeakList.Make.map2_1	40
Coq.FSets.FMapWeakList.Make.map2_2	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.In_In	40	3.0	synth with cache (only 1: intro n; only 1: intuition).	0.134799003601	5
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Subset_Included	40	0.1	synth with cache (only 1: compute; only 1: Dec.fsetdec).	0.193583011627	12
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Equal_Same_set	40	15.4	synth with cache (only 1: compute; only 1: firstorder).	31.0498609543	2959
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.empty_Empty_Set	40	0.8.2.5	synth with cache (only 1: red; only 1: intuition; only 1: vm_compute; only 1: Dec.fsetdec).	4.00795793533	393
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Empty_Empty_set	40	0.1.13.1.2	synth with cache (only 1: red; only 1: intuition; only 1: unfold Same_set, Included, mkEns, In; only 1: intro; only 1: Dec.fsetdec).	15.2121050358	1713
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.singleton_Singleton	40	3.2.9	synth with cache (only 1: unfold Same_set, Included, mkEns, In; only 1: intuition; only 1: Dec.fsetdec).	6.40982198715	604
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.union_Union	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.inter_Intersection	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.add_Add	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Add_Add	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.remove_Subtract	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.mkEns_Finite	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.mkEns_cardinal	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Ens_to_FSet	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.mem_eq	40	7	synth with cache (only 1: Dec.fsetdec).	0.972786903381	42
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_mem_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_mem_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_mem_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_mem_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.empty_mem	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.is_empty_equal_empty	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.choose_mem_1	40	5.5	synth with cache (only 1: intro; only 1: intuition).	0.551301002502	42
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.choose_mem_2	40	2	synth with cache (only 1: auto with set).	0.0919170379639	3
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.add_mem_1	40	1.4	synth with cache (only 1: apply eq_true_iff_eq; only 1: intuition).	0.31843495369	15
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.add_mem_2	40	0.4.0.2.1	synth with cache (only 1: intros; only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_neq_iff s H); only 1: intuition; only 1: apply eq_true_iff_eq; only 1: intuition).	3.70110702515	140
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_mem_1	40	0.2	synth with cache (only 1: rewrite <- not_mem_iff; only 1: Dec.fsetdec).	0.195369005203	4
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_mem_2	40	0.4.0.2.1	synth with cache (only 1: intros; only 1: generalize (mem_iff (remove x s) y), (mem_iff s y), (remove_neq_iff s H); only 1: intuition; only 1: apply eq_true_iff_eq; only 1: intuition).	3.1677339077	121
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.singleton_equal_add	40	2	synth with cache (only 1: auto with set).	0.0922269821167	3
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_mem	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_mem	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.diff_mem	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.mem_3	40	0.2.2	synth with cache (only 1: intuition; only 1: rewrite <- not_mem_iff; only 1: auto).	0.184184074402	7
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.mem_4	40	0.6	synth with cache (only 1: rewrite <- not_mem_iff; only 1: Dec.fsetdec).	0.576663017273	28
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_refl	40	5	synth with cache (only 1: intuition).	0.112076044083	6
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_sym	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_trans	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_equal	40	0.1.1	synth with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: reflexivity).	0.195144891739	5
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_cardinal	40	0.7.1	synth with cache (only 1: intro; only 1: rewrite (equal_2 H); only 1: reflexivity).	0.329622983932	30
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_refl	40	2	synth with cache (only 1: auto with set).	0.0969698429108	3
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_antisym	40	2	synth with cache (only 1: intuition).	0.143422842026	3
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_trans	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_equal	40	3.0	synth with cache (only 1: intros; only 1: auto with set).	0.140036821365	5
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.choose_mem_3	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.choose_mem_4	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.add_mem_3	40	1.5.0	synth with cache (only 1: intros; only 1: apply eq_true_iff_eq; only 1: intuition).	0.195609092712	9
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.add_equal	40	3.0	synth with cache (only 1: intros; only 1: auto with set).	0.142813920975	5
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_mem_3	40	0.10	synth with cache (only 1: do 2 rewrite <- mem_iff; only 1: Dec.fsetdec).	1.18589806557	102
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_equal	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.add_remove	40	0.4.3.3.5.0	synth with cache (only 1: intros; only 1: apply equal_1; only 1: split; only 1: apply subset_2; only 1: intuition; only 1: Dec.fsetdec).	12.2084171772	885
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_add	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.is_empty_cardinal	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.singleton_mem_1	40	1	synth with cache (only 1: auto with set).	0.107532024384	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.singleton_mem_2	40	1.6.0	synth with cache (only 1: intros; only 1: rewrite <- not_mem_iff; only 1: intuition).	0.544727087021	27
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.singleton_mem_3	40	0.14	synth with cache (only 1: generalize (mem_iff (singleton x) y), (singleton_iff x y); only 1: intuition).	0.970659971237	122
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_sym	40	4	synth with cache (only 1: auto with set).	0.107392787933	5
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_subset_equal	40	7.0	synth with cache (only 1: intros; only 1: auto with set).	0.155753135681	9
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_equal_1	40	6.0	synth with cache (only 1: intros; only 1: auto with set).	0.194895029068	13
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_equal_2	40	3.0	synth with cache (only 1: intros; only 1: auto with set).	0.146016836166	5
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_assoc	40	1	synth with cache (only 1: auto with set).	0.10368013382	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.add_union_singleton	40	2	synth with cache (only 1: auto with set).	0.112503051758	3
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_add	40	1	synth with cache (only 1: auto with set).	0.110286951065	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_subset_1	40	2	synth with cache (only 1: auto with set).	0.111139059067	3
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_subset_2	40	1	synth with cache (only 1: auto with set).	0.108894109726	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_subset_3	40	0.1	synth with cache (only 1: do 3 rewrite <- subset_iff; only 1: Dec.fsetdec).	0.37033200264	3
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_sym	40	1	synth with cache (only 1: auto with set).	0.105458021164	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_subset_equal	40	7.0	synth with cache (only 1: intros; only 1: auto with set).	0.154661178589	9
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_equal_1	40	5.0	synth with cache (only 1: intros; only 1: auto with set).	0.331457138062	12
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_equal_2	40	5.0	synth with cache (only 1: intros; only 1: auto with set).	0.238713979721	12
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_assoc	40	1	synth with cache (only 1: auto with set).	0.117569208145	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_inter_1	40	1	synth with cache (only 1: auto with set).	0.116698980331	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_inter_2	40	1	synth with cache (only 1: auto with set).	0.115002155304	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_add_1	40	3.1.0	synth with cache (only 1: intros; only 1: apply equal_1; only 1: intuition).	0.441387891769	7
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_add_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_subset_1	40	1	synth with cache (only 1: auto with set).	0.108870029449	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_subset_2	40	1	synth with cache (only 1: auto with set).	0.106137990952	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_subset_3	40	0.1	synth with cache (only 1: do 3 rewrite <- subset_iff; only 1: Dec.fsetdec).	0.400748968124	3
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.diff_subset	40	1	synth with cache (only 1: auto with set).	0.114587068558	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.diff_subset_equal	40	3.0	synth with cache (only 1: intros; only 1: auto with set).	0.164170026779	5
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_inter_singleton	40	1	synth with cache (only 1: auto with set).	0.111135005951	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.diff_inter_empty	40	1	synth with cache (only 1: auto with set).	0.11269402504	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.diff_inter_all	40	1	synth with cache (only 1: auto with set).	0.110950946808	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.set_rec	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.exclusive_set	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.fold_empty	40	0.3	synth with cache (only 1: apply fold_1b; only 1: auto with set).	0.150276899338	5
Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.fold_equal	40	1.0.0.0.8.5	synth with cache (only 1: intuition; only 1: apply fold_equal; only 1: auto; only 1: auto; only 1: auto; only 1: auto with set).	6.10609793663	481
Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.fold_add	40	0.0.3.0.0.0.2.4	synth with cache (only 1: intuition; only 1: apply fold_2 with (eqA := eqA); only 1: auto; only 1: auto with set; only 1: auto with set; only 1: rewrite not_mem_iff; only 1: auto; only 1: auto with set).	15.5243928432	759
Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.add_fold	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.remove_fold_1	40	0.0.0.0.0.4.3.4	synth with cache (only 1: intros; only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set).	9.05255103111	617
Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.remove_fold_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.fold_union	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_cardinal_1	40	4	synth with cache (only 1: auto with set fset).	0.152931213379	11
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_cardinal_2	40	0.0.0.0.2.1.3.1.0.3	synth with cache (only 1: intro; only 1: intro; only 1: intro; only 1: do 2 rewrite cardinal_fold; only 1: change S with ((fun _ => S) x); only 1: apply MP.fold_add with (eqA := Logic.eq); only 1: auto with fset; only 1: auto with fset; only 1: auto with fset; only 1: auto).	11.6325929165	1047
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_cardinal_1	40	0.0.0.0.3.1.6.2	synth with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: change S with ((fun _ => S) x); only 1: apply MP.remove_fold_1 with (eqA := Logic.eq); only 1: auto with fset; only 1: auto with fset; only 1: auto with fset; only 1: auto).	6.49857091904	716
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_cardinal_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_cardinal	40	1.0.0.0.5.3.3.2	synth with cache (only 1: intuition; only 1: do 3 rewrite cardinal_fold; only 1: rewrite <- fold_plus; only 1: apply MP.fold_union; only 1: auto with fset; only 1: auto with fset; only 1: auto with fset; only 1: auto).	16.1081771851	1593
Coq.FSets.FSetEqProperties.WEqProperties_fun.subset_cardinal	40	6	synth with cache (only 1: intuition).	0.274304866791	16
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.Comp'	40	9	synth with cache (only 1: solve_proper).	0.351442098618	15
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.filter_mem	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_filter	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.exists_filter	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.partition_filter_1	40	1	synth with cache (only 1: auto with set).	0.104213953018	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.partition_filter_2	40	1	synth with cache (only 1: auto with set).	0.105695009232	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.filter_add_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.filter_add_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.add_filter_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.add_filter_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.union_filter	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.filter_union	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_mem_1	40	4.2.0.3.3	synth with cache (only 1: intuition; only 1: apply for_all_1; only 1: auto; only 1: red; only 1: auto with set).	6.6743619442	343
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_mem_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_mem_3	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_mem_4	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_exists	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.Comp'	40	0.4.4.3.10	synth with cache (only 1: red; only 1: repeat red; only 1: intuition; only 1: f_equal; only 1: auto).	6.05822181702	625
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.exists_mem_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.exists_mem_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.exists_mem_3	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.exists_mem_4	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Sum.sum_plus	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Sum.sum_filter	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Sum.fold_compat	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Sum.sum_compat	40
Coq.FSets.FSetBridge.DepOfNodep.empty	40	82	synth with cache (only 1: eauto with *).	4.02197813988	4569
Coq.FSets.FSetBridge.DepOfNodep.is_empty	40
Coq.FSets.FSetBridge.DepOfNodep.mem	40
Coq.FSets.FSetBridge.DepOfNodep.add	40
Coq.FSets.FSetBridge.DepOfNodep.singleton	40
Coq.FSets.FSetBridge.DepOfNodep.remove	40
Coq.FSets.FSetBridge.DepOfNodep.union	40
Coq.FSets.FSetBridge.DepOfNodep.inter	40
Coq.FSets.FSetBridge.DepOfNodep.diff	40
Coq.FSets.FSetBridge.DepOfNodep.equal	40
Coq.FSets.FSetBridge.DepOfNodep.subset	40
Coq.FSets.FSetBridge.DepOfNodep.elements	40
Coq.FSets.FSetBridge.DepOfNodep.fold	40	14.1.3	synth with cache (only 1: intuition; only 1: simpl; only 1: eauto).	5.89786505699	985
Coq.FSets.FSetBridge.DepOfNodep.cardinal	40
Coq.FSets.FSetBridge.DepOfNodep.compat_P_aux	40
Coq.FSets.FSetBridge.DepOfNodep.filter	40
Coq.FSets.FSetBridge.DepOfNodep.for_all	40
Coq.FSets.FSetBridge.DepOfNodep.exists_	40
Coq.FSets.FSetBridge.DepOfNodep.partition	40
Coq.FSets.FSetBridge.DepOfNodep.choose_aux	40
Coq.FSets.FSetBridge.DepOfNodep.choose	40
Coq.FSets.FSetBridge.DepOfNodep.choose_ok1	40
Coq.FSets.FSetBridge.DepOfNodep.choose_ok2	40
Coq.FSets.FSetBridge.DepOfNodep.choose_equal	40
Coq.FSets.FSetBridge.DepOfNodep.min_elt	40
Coq.FSets.FSetBridge.DepOfNodep.max_elt	40
Coq.FSets.FSetBridge.NodepOfDep.empty_1	40
Coq.FSets.FSetBridge.NodepOfDep.is_empty_1	40
Coq.FSets.FSetBridge.NodepOfDep.is_empty_2	40
Coq.FSets.FSetBridge.NodepOfDep.mem_1	40
Coq.FSets.FSetBridge.NodepOfDep.mem_2	40
Coq.FSets.FSetBridge.NodepOfDep.equal_1	40
Coq.FSets.FSetBridge.NodepOfDep.equal_2	40	1.2.0.3.6.2	synth with cache (only 1: intros s x; only 1: unfold equal; only 1: case M.equal; only 1: auto; only 1: intros; only 1: discriminate H).	7.68907403946	1130
Coq.FSets.FSetBridge.NodepOfDep.subset_1	40
Coq.FSets.FSetBridge.NodepOfDep.subset_2	40	1.1.0.4.5.2	synth with cache (only 1: intros s s'; only 1: unfold subset; only 1: case M.subset; only 1: auto; only 1: intuition; only 1: inversion H).	9.56896996498	1158
Coq.FSets.FSetBridge.NodepOfDep.choose_1	40
Coq.FSets.FSetBridge.NodepOfDep.choose_2	40
Coq.FSets.FSetBridge.NodepOfDep.choose_3	40
Coq.FSets.FSetBridge.NodepOfDep.elements_1	40
Coq.FSets.FSetBridge.NodepOfDep.elements_2	40	4.4.5.13	synth with cache (only 1: intros s s'; only 1: unfold elements; only 1: case (M.elements s); only 1: firstorder).	19.124505043	3548
Coq.FSets.FSetBridge.NodepOfDep.elements_3	40	3.3.6.4.11	synth with cache (only 1: case M.empty; only 1: firstorder; only 1: unfold elements; only 1: case (M.elements s); only 1: intuition).	9.23326706886	1784
Coq.FSets.FSetBridge.NodepOfDep.elements_3w	40	5.2	synth with cache (only 1: intros; only 1: auto with *).	0.187555074692	18
Coq.FSets.FSetBridge.NodepOfDep.min_elt_1	40
Coq.FSets.FSetBridge.NodepOfDep.min_elt_2	40
Coq.FSets.FSetBridge.NodepOfDep.min_elt_3	40
Coq.FSets.FSetBridge.NodepOfDep.max_elt_1	40
Coq.FSets.FSetBridge.NodepOfDep.max_elt_2	40
Coq.FSets.FSetBridge.NodepOfDep.max_elt_3	40
Coq.FSets.FSetBridge.NodepOfDep.add_1	40
Coq.FSets.FSetBridge.NodepOfDep.add_2	40	1.1.1.1.2	synth with cache (only 1: intros; only 1: unfold add; only 1: case (M.add x s); only 1: unfold Add; only 1: firstorder).	0.561612844467	52
Coq.FSets.FSetBridge.NodepOfDep.add_3	40
Coq.FSets.FSetBridge.NodepOfDep.remove_1	40
Coq.FSets.FSetBridge.NodepOfDep.remove_2	40	3.1.3.4.4	synth with cache (only 1: intros; only 1: intuition; only 1: unfold remove; only 1: case (M.remove x s); only 1: firstorder).	8.57327508926	1250
Coq.FSets.FSetBridge.NodepOfDep.remove_3	40
Coq.FSets.FSetBridge.NodepOfDep.singleton_1	40
Coq.FSets.FSetBridge.NodepOfDep.singleton_2	40	3.1.2.4	synth with cache (only 1: intros x y; only 1: unfold singleton; only 1: case (M.singleton x); only 1: firstorder).	1.98781108856	195
Coq.FSets.FSetBridge.NodepOfDep.union_1	40
Coq.FSets.FSetBridge.NodepOfDep.union_2	40	4.3.4.6	synth with cache (only 1: intros s s' x; only 1: unfold union; only 1: case (M.union s s'); only 1: firstorder).	8.99058699608	1349
Coq.FSets.FSetBridge.NodepOfDep.union_3	40	0.2.1.1	synth with cache (only 1: intros s s' x; only 1: unfold union; only 1: case (M.union s s'); only 1: firstorder).	0.146377801895	8
Coq.FSets.FSetBridge.NodepOfDep.inter_1	40
Coq.FSets.FSetBridge.NodepOfDep.inter_2	40	0.0.0.0	synth with cache (only 1: intros s s' x; only 1: unfold inter; only 1: case (M.inter s s'); only 1: firstorder).	0.144059896469	4
Coq.FSets.FSetBridge.NodepOfDep.inter_3	40	3.4.4.3	synth with cache (only 1: intros s s' x; only 1: unfold inter; only 1: case (M.inter s s'); only 1: firstorder).	6.30473899841	923
Coq.FSets.FSetBridge.NodepOfDep.diff_1	40
Coq.FSets.FSetBridge.NodepOfDep.diff_2	40	0.0.3.0	synth with cache (only 1: intros s s' x; only 1: unfold diff; only 1: case (M.diff s s'); only 1: firstorder).	0.140542984009	7
Coq.FSets.FSetBridge.NodepOfDep.diff_3	40	1.7.4.2	synth with cache (only 1: intros s s' x; only 1: unfold diff; only 1: case (M.diff s s'); only 1: firstorder).	7.44839501381	895
Coq.FSets.FSetBridge.NodepOfDep.cardinal_1	40
Coq.FSets.FSetBridge.NodepOfDep.fold_1	40
Coq.FSets.FSetBridge.NodepOfDep.f_dec	40	3	synth with cache (only 1: decide equality).	0.0502490997314	4
Coq.FSets.FSetBridge.NodepOfDep.compat_P_aux	40
Coq.FSets.FSetBridge.NodepOfDep.filter_1	40
Coq.FSets.FSetBridge.NodepOfDep.filter_2	40
Coq.FSets.FSetBridge.NodepOfDep.filter_3	40	2.2.2.2.2.1	synth with cache (only 1: intros s x f; only 1: unfold filter; only 1: destruct M.filter as (x0, Hiff); only 1: intuition; only 1: generalize (Hiff (compat_P_aux H)); only 1: firstorder).	7.39823389053	873
Coq.FSets.FSetBridge.NodepOfDep.for_all_1	40
Coq.FSets.FSetBridge.NodepOfDep.for_all_2	40	6.0.0.3.2.2	synth with cache (only 1: intros s f; only 1: unfold for_all; only 1: case M.for_all; only 1: auto; only 1: intuition; only 1: firstorder).	12.2712049484	1386
Coq.FSets.FSetBridge.NodepOfDep.exists_1	40
Coq.FSets.FSetBridge.NodepOfDep.exists_2	40	1.0.0.3.3.0	synth with cache (only 1: intros s f; only 1: unfold exists_; only 1: case M.exists_; only 1: intuition; only 1: intuition; only 1: inversion H0).	1.63923311234	178
Coq.FSets.FSetBridge.NodepOfDep.partition_1	40
Coq.FSets.FSetBridge.NodepOfDep.partition_2	40
Coq.FSets.FSetCompat.Backport_Sets.lt_not_eq	40
Coq.FSets.FSetCompat.Backport_Sets.compare	40
Coq.FSets.FSetCompat.Update_WSets.In_compat	40
Coq.FSets.FSetCompat.Update_WSets.Spec.mem_spec	40	3.2.4	synth with cache (only 1: intuition; only 1: red; only 1: intuition).	2.05902695656	200
Coq.FSets.FSetCompat.Update_WSets.Spec.equal_spec	40
Coq.FSets.FSetCompat.Update_WSets.Spec.subset_spec	40
Coq.FSets.FSetCompat.Update_WSets.Spec.is_empty_spec	40
Coq.FSets.FSetCompat.Update_WSets.Spec.add_spec	40
Coq.FSets.FSetCompat.Update_WSets.Spec.remove_spec	40
Coq.FSets.FSetCompat.Update_WSets.Spec.singleton_spec	40
Coq.FSets.FSetCompat.Update_WSets.Spec.elements_spec1	40	4.2.1	synth with cache (only 1: intuition; only 1: red; only 1: intuition).	0.365751981735	32
Coq.FSets.FSetCompat.Update_WSets.Spec.for_all_spec	40
Coq.FSets.FSetCompat.Update_WSets.Spec.exists_spec	40
Coq.FSets.FSetCompat.Update_Sets.lt_strorder	40
Coq.FSets.FSetCompat.Update_Sets.lt_compat	40
Coq.FSets.FSetCompat.Update_Sets.compare_spec	40
Coq.FSets.FSetDecide.WDecide_fun.FSetLogicalFacts.test_push	40	1	synth with cache (only 1: reflexivity).	2.01139211655	2
Coq.FSets.FSetDecide.WDecide_fun.FSetLogicalFacts.test_pull	40	0.0	synth with cache (only 1: intros; only 1: auto).	0.158518075943	2
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideAuxiliary.eq_refl_iff	40	0.0.0	synth with cache (only 1: split; only 1: reflexivity; only 1: reflexivity).	0.178462982178	3
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideAuxiliary.dec_In	40
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideAuxiliary.dec_eq	40
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_trans_1	40
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_trans_2	40	17	synth with cache (only 1: fsetdec).	10.4488520622	601
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_neq_trans_1	40	5	synth with cache (only 1: fsetdec).	0.415158987045	13
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_neq_trans_2	40	8	synth with cache (only 1: fsetdec).	0.767832994461	20
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_In_singleton	40	5.1	synth with cache (only 1: intro; only 1: intuition).	0.335756063461	17
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_add_In	40	6	synth with cache (only 1: fsetdec).	0.307364940643	23
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_Subset_add_remove	40	27	synth with cache (only 1: fsetdec).	32.1086549759	4123
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_disjunction	40	6	synth with cache (only 1: fsetdec).	0.408157110214	23
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_not_In_disj	40	7	synth with cache (only 1: fsetdec).	0.725875854492	22
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_not_In_conj	40	4	synth with cache (only 1: fsetdec).	0.589538812637	12
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_iff_conj	40	9	synth with cache (only 1: fsetdec).	0.944093942642	36
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_set_ops_1	40	7	synth with cache (only 1: fsetdec).	0.530959844589	17
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.eq_chain_test	40	5	synth with cache (only 1: fsetdec).	0.61708688736	22
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_too_complex	40	2.2	synth with cache (only 1: unfold Subset; only 1: intuition).	0.176764011383	6
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.function_test_1	40	6	synth with cache (only 1: fsetdec).	0.589829921722	34
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.function_test_2	40	12	synth with cache (only 1: fsetdec).	6.7029979229	397
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_baydemir	40	5.0	synth with cache (only 1: intuition; only 1: fsetdec).	0.232328891754	7
Coq.FSets.FMapList.Raw.Elt.empty_1	40	6	synth with cache (only 1: inversion_clear 1).	0.0624129772186	7
Coq.FSets.FMapList.Raw.Elt.empty_sorted	40	2	synth with cache (only 1: constructor).	0.0632820129395	3
Coq.FSets.FMapList.Raw.Elt.is_empty_1	40
Coq.FSets.FMapList.Raw.Elt.is_empty_2	40	3.6.11.2	synth with cache (only 1: intuition; only 1: induction 1; only 1: intuition; only 1: intuition).	25.8102560043	2897
Coq.FSets.FMapList.Raw.Elt.mem_1	40
Coq.FSets.FMapList.Raw.Elt.mem_2	40
Coq.FSets.FMapList.Raw.Elt.find_2	40
Coq.FSets.FMapList.Raw.Elt.find_1	40
Coq.FSets.FMapList.Raw.Elt.add_1	40
Coq.FSets.FMapList.Raw.Elt.add_2	40
Coq.FSets.FMapList.Raw.Elt.add_3	40
Coq.FSets.FMapList.Raw.Elt.add_Inf	40
Coq.FSets.FMapList.Raw.Elt.add_sorted	40
Coq.FSets.FMapList.Raw.Elt.remove_1	40
Coq.FSets.FMapList.Raw.Elt.remove_2	40
Coq.FSets.FMapList.Raw.Elt.remove_3	40
Coq.FSets.FMapList.Raw.Elt.remove_Inf	40
Coq.FSets.FMapList.Raw.Elt.remove_sorted	40
Coq.FSets.FMapList.Raw.Elt.elements_1	40	0	synth with cache (only 1: auto).	0.0763368606567	1
Coq.FSets.FMapList.Raw.Elt.elements_2	40	0	synth with cache (only 1: eauto with ordered_type).	0.0765738487244	1
Coq.FSets.FMapList.Raw.Elt.elements_3	40	1	synth with cache (only 1: auto).	0.0687980651855	2
Coq.FSets.FMapList.Raw.Elt.elements_3w	40
Coq.FSets.FMapList.Raw.Elt.fold_1	40	2.1.0.20	synth with cache (only 1: induction m; only 1: auto; only 1: simpl; only 1: intuition).	9.79349899292	1894
Coq.FSets.FMapList.Raw.Elt.equal_1	40
Coq.FSets.FMapList.Raw.Elt.equal_2	40
Coq.FSets.FMapList.Raw.Elt.equal_cons	40
Coq.FSets.FMapList.Raw.Elt2.map_1	40
Coq.FSets.FMapList.Raw.Elt2.map_2	40
Coq.FSets.FMapList.Raw.Elt2.map_lelistA	40	0.4.2.1.0.1.6	synth with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: simpl; only 1: intuition; only 1: inversion_clear H; only 1: auto).	36.7885658741	2959
Coq.FSets.FMapList.Raw.Elt2.map_sorted	40
Coq.FSets.FMapList.Raw.Elt2.mapi_1	40
Coq.FSets.FMapList.Raw.Elt2.mapi_2	40
Coq.FSets.FMapList.Raw.Elt2.mapi_lelistA	40
Coq.FSets.FMapList.Raw.Elt2.mapi_sorted	40	0.3.3.2.1.0.0.2	synth with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: destruct a as (x', e'); only 1: inversion_clear Hm; only 1: auto).	22.8731632233	1995
Coq.FSets.FMapList.Raw.Elt3.map2_alt_equiv	40
Coq.FSets.FMapList.Raw.Elt3.combine_lelistA	40
Coq.FSets.FMapList.Raw.Elt3.combine_sorted	40
Coq.FSets.FMapList.Raw.Elt3.map2_sorted	40
Coq.FSets.FMapList.Raw.Elt3.combine_1	40
Coq.FSets.FMapList.Raw.Elt3.map2_0	40
Coq.FSets.FMapList.Raw.Elt3.map2_1	40
Coq.FSets.FMapList.Raw.Elt3.map2_2	40
Coq.FSets.FMapList.Make.Elt.MapsTo_1	40
Coq.FSets.FMapList.Make.Elt.mem_1	40
Coq.FSets.FMapList.Make.Elt.mem_2	40
Coq.FSets.FMapList.Make.Elt.empty_1	40	7.12	synth with cache (only 1: repeat red; only 1: inversion 1).	6.46056294441	741
Coq.FSets.FMapList.Make.Elt.is_empty_1	40
Coq.FSets.FMapList.Make.Elt.is_empty_2	40
Coq.FSets.FMapList.Make.Elt.add_1	40
Coq.FSets.FMapList.Make.Elt.add_2	40
Coq.FSets.FMapList.Make.Elt.add_3	40
Coq.FSets.FMapList.Make.Elt.remove_1	40
Coq.FSets.FMapList.Make.Elt.remove_2	40
Coq.FSets.FMapList.Make.Elt.remove_3	40
Coq.FSets.FMapList.Make.Elt.find_1	40
Coq.FSets.FMapList.Make.Elt.find_2	40
Coq.FSets.FMapList.Make.Elt.elements_1	40	0	synth with cache (only 1: auto).	0.0911169052124	1
Coq.FSets.FMapList.Make.Elt.elements_2	40	0	synth with cache (only 1: auto).	0.0911040306091	1
Coq.FSets.FMapList.Make.Elt.elements_3	40	0.11	synth with cache (only 1: induction m; only 1: auto).	0.550093889236	110
Coq.FSets.FMapList.Make.Elt.elements_3w	40
Coq.FSets.FMapList.Make.Elt.cardinal_1	40	1	synth with cache (only 1: auto).	0.0808491706848	2
Coq.FSets.FMapList.Make.Elt.fold_1	40
Coq.FSets.FMapList.Make.Elt.equal_1	40
Coq.FSets.FMapList.Make.Elt.equal_2	40
Coq.FSets.FMapList.Make.map_1	40
Coq.FSets.FMapList.Make.map_2	40
Coq.FSets.FMapList.Make.mapi_1	40
Coq.FSets.FMapList.Make.mapi_2	40
Coq.FSets.FMapList.Make.map2_1	40
Coq.FSets.FMapList.Make.map2_2	40
Coq.FSets.FMapList.Make_ord.eq_equal	40	0.3.8	synth with cache (only 1: intros m; only 1: fix even_spec 1; only 1: auto).	2.93231296539	269
Coq.FSets.FMapList.Make_ord.eq_1	40
Coq.FSets.FMapList.Make_ord.eq_2	40
Coq.FSets.FMapList.Make_ord.eq_refl	40
Coq.FSets.FMapList.Make_ord.eq_sym	40
Coq.FSets.FMapList.Make_ord.eq_trans	40
Coq.FSets.FMapList.Make_ord.lt_trans	40
Coq.FSets.FMapList.Make_ord.lt_not_eq	40
Coq.FSets.FMapList.Make_ord.compare	40
Coq.Wellfounded.Inclusion.WfInclusion.Acc_incl	40	0.11.13.5	synth with cache (only 1: intro x; only 1: apply Acc_rect; only 1: constructor; only 1: auto).	1.15834498405	1813
Coq.Wellfounded.Inclusion.WfInclusion.wf_incl	40	0.2.12	synth with cache (only 1: intros; only 1: constructor; only 1: auto).	0.147113084793	129
Coq.Wellfounded.Well_Ordering.WellOrdering.wf_WO	40
Coq.Wellfounded.Well_Ordering.Characterisation_wf_relations.wof	40
Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.left_prefix	40
Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.right_prefix	40
Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.desc_prefix	40
Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.desc_tail	40
Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.dist_aux	40
Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.dist_Desc_concat	40
Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.desc_end	40
Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.ltl_unit	40
Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.acc_app	40	1.10	synth with cache (only 1: inversion 1; only 1: auto).	2.49019479752	206
Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.wf_lex_exp	40
Coq.Wellfounded.Inverse_Image.Inverse_Image.Acc_lemma	40
Coq.Wellfounded.Inverse_Image.Inverse_Image.Acc_inverse_image	40
Coq.Wellfounded.Inverse_Image.Inverse_Image.wf_inverse_image	40	0.0.2.23.4	synth with cache (only 1: intros; only 1: intro x; only 1: apply (Acc_lemma (f x)); only 1: trivial; only 1: exact eq_refl).	2.0482339859	2632
Coq.Wellfounded.Inverse_Image.Inverse_Image.Acc_inverse_rel	40
Coq.Wellfounded.Inverse_Image.Inverse_Image.wf_inverse_rel	40
Coq.Wellfounded.Disjoint_Union.Wf_Disjoint_Union.acc_A_sum	40
Coq.Wellfounded.Disjoint_Union.Wf_Disjoint_Union.acc_B_sum	40
Coq.Wellfounded.Disjoint_Union.Wf_Disjoint_Union.wf_disjoint_sum	40
Coq.Wellfounded.Union.WfUnion.strip_commut	40
Coq.Wellfounded.Union.WfUnion.Acc_union	40
Coq.Wellfounded.Union.WfUnion.wf_union	40
Coq.Wellfounded.Lexicographic_Product.WfLexicographic_Product.acc_A_B_lexprod	40
Coq.Wellfounded.Lexicographic_Product.WfLexicographic_Product.wf_lexprod	40
Coq.Wellfounded.Lexicographic_Product.Wf_Symmetric_Product.Acc_symprod	40
Coq.Wellfounded.Lexicographic_Product.Wf_Symmetric_Product.wf_symprod	40
Coq.Wellfounded.Lexicographic_Product.Swap.swap_Acc	40
Coq.Wellfounded.Lexicographic_Product.Swap.Acc_swapprod	40
Coq.Wellfounded.Lexicographic_Product.Swap.wf_swapprod	40
Coq.Wellfounded.Transitive_Closure.Wf_Transitive_Closure.incl_clos_trans	40	1.11	synth with cache (only 1: constructor; only 1: auto).	0.0889189243317	71
Coq.Wellfounded.Transitive_Closure.Wf_Transitive_Closure.Acc_clos_trans	40
Coq.Wellfounded.Transitive_Closure.Wf_Transitive_Closure.Acc_inv_trans	40	1.0.6.7	synth with cache (only 1: induction 1; only 1: destruct 1; only 1: auto; only 1: auto).	0.468996047974	339
Coq.Wellfounded.Transitive_Closure.Wf_Transitive_Closure.wf_clos_trans	40	1.3	synth with cache (only 1: red; only 1: auto).	0.0226399898529	6
Coq.Numbers.DecimalFacts.uint_dec	40
Coq.Numbers.DecimalFacts.rev_revapp	40
Coq.Numbers.DecimalFacts.rev_rev	40
Coq.Numbers.DecimalFacts.nzhead_revapp_0	40
Coq.Numbers.DecimalFacts.nzhead_revapp	40
Coq.Numbers.DecimalFacts.nzhead_rev	40
Coq.Numbers.DecimalFacts.rev_nztail_rev	40
Coq.Numbers.DecimalFacts.revapp_nil_inv	40
Coq.Numbers.DecimalFacts.rev_nil_inv	40	0.17.8.1	synth with cache (only 1: intros; only 1: rewrite <- (rev_rev d); only 1: rewrite H; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd).	4.92880582809	2605
Coq.Numbers.DecimalFacts.rev_lnorm_rev	40
Coq.Numbers.DecimalFacts.nzhead_nonzero	40
Coq.Numbers.DecimalFacts.unorm_0	40
Coq.Numbers.DecimalFacts.unorm_nonnil	40	1.1.1.1.1.1.1.1.1.0.1.16	synth with cache (only 1: induction d; only 1: easy; only 1: trivial; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	32.8819460869	11328
Coq.Numbers.DecimalFacts.nzhead_invol	40	0.0.0.0.0.0.0.0.0.0.0.17	synth with cache (only 1: induction d; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial).	8.54089212418	1938
Coq.Numbers.DecimalFacts.unorm_invol	40	8	synth with cache (only 1: now induction d).	0.0281109809875	9
Coq.Numbers.DecimalFacts.norm_invol	40	8.8.17	synth with cache (only 1: induction d; only 1: now induction d; only 1: now induction d).	1.13711714745	921
Coq.Numbers.DecimalPos.Unsigned.of_lu_eqn	40	10	synth with cache (only 1: now induction d).	0.255914926529	26
Coq.Numbers.DecimalPos.Unsigned.of_lu_revapp	40
Coq.Numbers.DecimalPos.Unsigned.Nadd_simpl	40	8	synth with cache (only 1: now destruct n).	3.48781991005	60
Coq.Numbers.DecimalPos.Unsigned.of_uint_acc_eqn	40	18.3.2	synth with cache (only 1: intro H; only 1: simpl; only 1: now induction d).	16.3698790073	2389
Coq.Numbers.DecimalPos.Unsigned.of_uint_acc_rev	40
Coq.Numbers.DecimalPos.Unsigned.of_uint_alt	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_rev	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_double_gen	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_double	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_succ_double	40	5	synth with cache (only 1: apply of_lu_double_gen).	0.129108905792	6
Coq.Numbers.DecimalPos.Unsigned.of_to	40
Coq.Numbers.DecimalPos.Unsigned.succ_double_alt	40	5	synth with cache (only 1: now induction d).	0.125020027161	6
Coq.Numbers.DecimalPos.Unsigned.double_succ	40
Coq.Numbers.DecimalPos.Unsigned.to_lu_succ	40
Coq.Numbers.DecimalPos.Unsigned.nat_iter_S	40	1.0	synth with cache (only 1: simpl; only 1: auto).	0.143157958984	3
Coq.Numbers.DecimalPos.Unsigned.nat_iter_0	40	0.0	synth with cache (only 1: simpl; only 1: auto).	0.147966146469	2
Coq.Numbers.DecimalPos.Unsigned.to_ldec_tenfold	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_0	40
Coq.Numbers.DecimalPos.Unsigned.to_of_lu_tenfold	40
Coq.Numbers.DecimalPos.Unsigned.Nadd_alt	40
Coq.Numbers.DecimalPos.Unsigned.to_of_lu	40
Coq.Numbers.DecimalPos.Unsigned.to_of	40
Coq.Numbers.DecimalPos.Unsigned.to_uint_nonzero	40
Coq.Numbers.DecimalPos.Unsigned.to_uint_nonnil	40	3.0.0	synth with cache (only 1: intro E; only 1: generalize (of_to p); only 1: now rewrite E).	1.02074599266	14
Coq.Numbers.DecimalPos.Unsigned.to_uint_inj	40
Coq.Numbers.DecimalPos.Unsigned.to_uint_pos_surj	40
Coq.Numbers.DecimalPos.Unsigned.of_uint_norm	40
Coq.Numbers.DecimalPos.Unsigned.of_inj	40
Coq.Numbers.DecimalPos.Unsigned.of_iff	40
Coq.Numbers.DecimalPos.Signed.of_to	40
Coq.Numbers.DecimalPos.Signed.to_of	40
Coq.Numbers.DecimalPos.Signed.to_int_inj	40
Coq.Numbers.DecimalPos.Signed.to_int_pos_surj	40
Coq.Numbers.DecimalPos.Signed.of_int_norm	40
Coq.Numbers.DecimalPos.Signed.of_inj_pos	40
Coq.Numbers.DecimalNat.Unsigned.to_lu_succ	40	1.0	synth with cache (only 1: simpl; only 1: trivial).	0.119736909866	3
Coq.Numbers.DecimalNat.Unsigned.to_little_uint_succ	40
Coq.Numbers.DecimalNat.Unsigned.to_lu_equiv	40
Coq.Numbers.DecimalNat.Unsigned.to_uint_alt	40
Coq.Numbers.DecimalNat.Unsigned.of_lu_eqn	40	9.0	synth with cache (only 1: simpl; only 1: now induction d).	1.51425790787	30
Coq.Numbers.DecimalNat.Unsigned.of_lu_succ	40
Coq.Numbers.DecimalNat.Unsigned.of_to_lu	40
Coq.Numbers.DecimalNat.Unsigned.of_lu_revapp	40
Coq.Numbers.DecimalNat.Unsigned.of_uint_acc_spec	40
Coq.Numbers.DecimalNat.Unsigned.of_uint_alt	40
Coq.Numbers.DecimalNat.Unsigned.of_to	40
Coq.Numbers.DecimalNat.Unsigned.to_lu_tenfold	40
Coq.Numbers.DecimalNat.Unsigned.of_lu_0	40
Coq.Numbers.DecimalNat.Unsigned.to_of_lu_tenfold	40
Coq.Numbers.DecimalNat.Unsigned.to_of_lu	40
Coq.Numbers.DecimalNat.Unsigned.to_of	40
Coq.Numbers.DecimalNat.Unsigned.to_uint_inj	40
Coq.Numbers.DecimalNat.Unsigned.to_uint_surj	40
Coq.Numbers.DecimalNat.Unsigned.of_uint_norm	40	15	synth with cache (only 1: now induction d).	2.14848685265	209
Coq.Numbers.DecimalNat.Unsigned.of_inj	40
Coq.Numbers.DecimalNat.Unsigned.of_iff	40
Coq.Numbers.DecimalNat.Signed.of_to	40
Coq.Numbers.DecimalNat.Signed.to_of	40
Coq.Numbers.DecimalNat.Signed.to_int_inj	40
Coq.Numbers.DecimalNat.Signed.to_int_pos_surj	40	15.6.0	synth with cache (only 1: exists (Nat.of_uint d); only 1: apply Unsigned.to_of; only 1: now induction d).	39.3497409821	2620
Coq.Numbers.DecimalNat.Signed.of_int_norm	40	10.10.12	synth with cache (only 1: induction d; only 1: now induction d; only 1: now induction d).	12.5607709885	2002
Coq.Numbers.DecimalNat.Signed.of_inj_pos	40
Coq.Numbers.DecimalN.Unsigned.of_to	40
Coq.Numbers.DecimalN.Unsigned.to_of	40
Coq.Numbers.DecimalN.Unsigned.to_uint_inj	40
Coq.Numbers.DecimalN.Unsigned.to_uint_surj	40
Coq.Numbers.DecimalN.Unsigned.of_uint_norm	40	2	synth with cache (only 1: now induction d).	0.131799936295	3
Coq.Numbers.DecimalN.Unsigned.of_inj	40	3.1.0	synth with cache (only 1: intros; only 1: rewrite <- !DecimalPos.Unsigned.to_of; only 1: now f_equal).	0.228332996368	7
Coq.Numbers.DecimalN.Unsigned.of_iff	40	2.2.1.1.0	synth with cache (only 1: split; only 1: apply DecimalPos.Unsigned.of_inj; only 1: intros E; only 1: rewrite <- DecimalPos.Unsigned.of_uint_norm, E; only 1: apply DecimalPos.Unsigned.of_uint_norm).	2.61147809029	142
Coq.Numbers.DecimalN.Signed.of_to	40
Coq.Numbers.DecimalN.Signed.to_of	40
Coq.Numbers.DecimalN.Signed.to_int_inj	40
Coq.Numbers.DecimalN.Signed.to_int_pos_surj	40
Coq.Numbers.DecimalN.Signed.of_int_norm	40
Coq.Numbers.DecimalN.Signed.of_inj_pos	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_add_opp	40	6.1	synth with cache (only 1: intros; only 1: trivial).	0.187480926514	9
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.eq_equiv	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.pair_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.succ_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.pred_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.add_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.opp_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_comm	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.Induction.bi_induction	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.pred_succ	40	3.0.12	synth with cache (only 1: fix le_div2 1; only 1: intro n; only 1: auto).	5.63990688324	532
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.succ_pred	40	1.1.0.2	synth with cache (only 1: unfold Z.pred, Z.succ, Z.eq; only 1: intro n; only 1: simpl; only 1: now nzsimpl).	0.682327032089	25
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.one_succ	40	3.6	synth with cache (only 1: compute; only 1: now nzsimpl).	0.398536205292	24
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.two_succ	40	0.0.0	synth with cache (only 1: unfold Z.eq; only 1: simpl; only 1: now nzsimpl').	0.340277910233	3
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.opp_0	40	2.0.0	synth with cache (only 1: unfold Z.eq; only 1: simpl; only 1: now nzsimpl').	0.452953100204	5
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.opp_succ	40	1.1.1.0	synth with cache (only 1: intro n; only 1: unfold Z.succ, Z.pred, Z.eq; only 1: simpl; only 1: now nzsimpl).	0.940335035324	7
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.add_0_l	40	1.2.5.0	synth with cache (only 1: intro n; only 1: unfold Z.succ, Z.pred, Z.eq; only 1: simpl; only 1: now nzsimpl).	3.27849388123	113
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.add_succ_l	40	6.1.0	synth with cache (only 1: intros (n1, n2) (m1, m2); only 1: compute; only 1: now nzsimpl').	0.61280798912	16
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_0_r	40	1.2.1.0	synth with cache (only 1: intro n; only 1: unfold Z.add, Z.eq; only 1: simpl; only 1: now nzsimpl).	0.53672003746	8
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_succ_r	40	8.1.1	synth with cache (only 1: intros (n1, n2) (m1, m2); only 1: compute; only 1: now nzsimpl').	6.22177004814	325
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_0_l	40	1.1.0.4	synth with cache (only 1: unfold Z.mul, Z.eq; only 1: simpl; only 1: intro n; only 1: now nzsimpl).	4.47104310989	111
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_succ_l	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_eq_cases	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_irrefl	40	0.5.0.0	synth with cache (only 1: intros; only 1: intro H; only 1: apply BinInt.Z.lt_nge in H; only 1: now apply H).	0.229197025299	9
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_succ_r	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.min_l	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.min_r	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.max_l	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.max_r	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_nge	40	5.12.0	synth with cache (only 1: intros n m; only 1: unfold Z.lt, Z.le, Z.eq; only 1: intuition order).	26.1508669853	2105
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_wd	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_neg_neg	40	0.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_lt_mono).	0.0936560630798	3
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_neg_nonpos	40	0.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_lt_le_mono).	0.0916290283203	3
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_nonpos_neg	40	0.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_le_lt_mono).	0.0901739597321	3
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_nonpos_nonpos	40	0.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_le_mono).	0.0993220806122	3
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_0_sub	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_0_sub	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_0	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_0	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_lt_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_le_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_pos_neg	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_neg_pos	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_nonneg_nonpos	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_nonpos_nonneg	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_m1_0	40	3.20.9	synth with cache (only 1: rewrite succ_lt_mono, <- one_succ; only 1: apply le_succ_l; only 1: now rewrite one_succ, opp_succ, opp_0, succ_pred).	11.3465359211	3300
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_mono_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_mono_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_mono_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_mono_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_le_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_lt_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_lt_sub_lt	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_le_sub_lt	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_le_sub_lt	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_add_lt_sub_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_add_le_sub_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_add_lt_sub_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_add_le_sub_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_lt_add_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_le_add_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_lt_add_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_le_add_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_lt_add	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_le_add	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_pos	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_nonneg	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_neg_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_pos_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_nonpos_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_nonneg_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.PosNeg.zero_pos_neg	40
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.odd_pred	40	1.6.0	synth with cache (only 1: intro n; only 1: rewrite <- (succ_pred n)  at 2; only 1: now rewrite <- negb_odd, odd_succ, negb_even).	1.39679694176	104
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_pred	40	2.1.1.0.0.0	synth with cache (only 1: intro n; only 1: rewrite <- (succ_pred n)  at 2; only 1: symmetry; only 1: apply eq_iff_eq_true; only 1: rewrite even_spec, odd_spec; only 1: apply Odd_succ).	0.82511305809	55
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_opp	40
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.odd_opp	40
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_sub	40
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.odd_sub	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_pred_r	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_pred_l	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_l	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_r	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_opp	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_comm	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_sub_distr_l	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_sub_distr_r	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_lt_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_le_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_nonpos_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_nonneg_nonpos	40	2.0.0	synth with cache (only 1: intros; only 1: rewrite <- (mul_0_l m); only 1: now apply mul_le_mono_nonpos_r).	0.783773899078	47
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_nonpos_nonneg	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_0	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_0_mul	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_mul_0	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.nlt_square_0	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_lt_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_le_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_lt_simpl_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_le_simpl_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_1_mul_neg	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_m1_neg	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_m1_pos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_1_mul_l	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_m1_mul_r	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.eq_mul_1	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_diag_l	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_diag_r	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_mul_diag_l	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_mul_diag_r	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow_sub_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow_div_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.exists_div2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_0_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_succ_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_spec'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_spec	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_true	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_false	40	0.0.0.0.0.1.3.2.0	synth with cache (only 1: intros a n Hn; only 1: rewrite <- testbit_spec' by trivial; only 1: destruct a.[n]; only 1: split; only 1: simpl; only 1: now try order'; only 1: simpl; only 1: now try order'; only 1: now try order').	5.95566987991	721
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.b2z_inj	40	6.6.0	synth with cache (only 1: destr_bool; only 1: now try order'; only 1: now try order').	1.12933301926	198
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_b2z_double_div2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_b2z_double_bit0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.b2z_div2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.b2z_bit0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_unique	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_opp	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_m1	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit0_odd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit0_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit0_mod	40	3.12.4	synth with cache (only 1: intros a0; only 1: rewrite testbit_spec' by order; only 1: now nzsimpl).	10.336263895	1476
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_odd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit_log2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_above_log2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit_log2_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_above_log2_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_nonneg'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_nonneg_ex	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_neg'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_neg_ex	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div_pow2_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.double_bits_succ	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.double_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mul_pow2_bits_add	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mul_pow2_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mul_pow2_bits_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mod_pow2_bits_high	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mod_pow2_bits_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.eqf_equiv	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_eqf	40	5.8.3	synth with cache (only 1: intros x x' EQ; only 1: intro H; only 1: now f_equiv).	3.5602850914	701
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj_0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj_iff'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.are_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_spec	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_opp_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_opp_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_div_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_mul_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_mul_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_div_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_spec_alt	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_shiftl	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_shiftl_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_shiftl_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_shiftr	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_1_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_0_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_0_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_0_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_0_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_eq_0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_div	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_odd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_wd	40	0.0.1	synth with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.622773885727	36
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_wd	40	0.0.1	synth with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.334614038467	37
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_wd	40	0.0.1	synth with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.380054950714	37
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_eq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_nilpotent	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_0_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_0_r	40	0.1.0	synth with cache (only 1: intro n; only 1: bitwise; only 1: apply xorb_false_l).	0.105662822723	4
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_comm	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_assoc	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_0_l	40	5.2.0	synth with cache (only 1: intro n; only 1: bitwise; only 1: reflexivity).	0.108642101288	10
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_0_r	40	1.2.0	synth with cache (only 1: intro n; only 1: bitwise; only 1: apply xorb_false_r).	0.105096101761	6
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_comm	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_assoc	40	2.4.2	synth with cache (only 1: intros x y z; only 1: bitwise; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	1.20183300972	121
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_eq_0_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_0_l	40	1.2.2	synth with cache (only 1: intros; only 1: bitwise; only 1: now try order').	0.195605993271	25
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_0_r	40	0.21.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply andb_false_iff; only 1: intuition).	14.8777658939	3864
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_comm	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_assoc	40	3.4.2	synth with cache (only 1: intros x y z; only 1: bitwise; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	1.76007390022	237
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_0_l	40	0.3.1	synth with cache (only 1: intro n; only 1: bitwise; only 1: trivial).	0.134219884872	14
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_0_r	40	0.2.0	synth with cache (only 1: intro n; only 1: bitwise; only 1: apply orb_false_r).	0.108396053314	5
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_land_distr_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_land_distr_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_lor_distr_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_lor_distr_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ldiff_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_ldiff_and	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_spec'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_spec'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow2_bits_true	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow2_bits_false	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow2_bits_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_eq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_neq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_eq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_neq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_spec	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_involutive	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_m1	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_m1_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_m1_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_m1_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_m1_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_m1_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_m1_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_lnot_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_lnot_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_lnot_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_lnot_lnot	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lxor_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lxor_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_m1_r	40	0.0.0.3.1.0	synth with cache (only 1: intro n; only 1: bitwise; only 1: rewrite lnot_spec, bits_m1; only 1: trivial; only 1: trivial; only 1: trivial).	0.18847322464	10
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_m1_l	40	4.2.0	synth with cache (only 1: intro n; only 1: bitwise; only 1: now rewrite lnot_spec, bits_m1).	0.189924001694	12
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_shiftr	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_equiv	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_add	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_div_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_mod_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_spec_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_spec_high	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_spec_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_ones_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ones	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ones_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_r_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_l_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_neg	40	0.1.0	synth with cache (only 1: intros a n; only 1: rewrite <- shiftl_opp_r; only 1: now rewrite 2!lt_nge, shiftl_nonneg).	0.124961137772	4
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_neg	40	11.0.1	synth with cache (only 1: intro; only 1: rewrite div2_spec; only 1: now rewrite 2!lt_nge, shiftr_nonneg).	3.25157380104	547
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_bits_unique	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_shiftr	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_shiftl	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_shiftl'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_bit0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add3_bit0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add3_bits_div2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_carry_div2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_carry_bits_aux	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_carry_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_bit1	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.nocarry_equiv	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_le	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.sub_nocarry_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_lt_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_mod_lt_pow2	40
Coq.Numbers.Integer.Abstract.ZBase.ZBaseProp.pred_inj	40
Coq.Numbers.Integer.Abstract.ZBase.ZBaseProp.pred_inj_wd	40	2.0.3.4.0.1.1.2	synth with cache (only 1: intro n; only 1: intro; only 1: split; only 1: intro H; only 1: apply succ_wd in H; only 1: now rewrite 2!succ_pred in H; only 1: intro H; only 1: now f_equiv).	32.2682278156	5728
Coq.Numbers.Integer.Abstract.ZBase.ZBaseProp.succ_m1	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_twice_r	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.even_pow	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.odd_pow	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_opp_even	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_opp_odd	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_even_abs	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_even_nonneg	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_odd_abs_sgn	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_odd_sgn	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.abs_pow	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_opp_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_opp_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_abs_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_abs_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_1_r_abs	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_1_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_antisym_abs	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_antisym	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_sub_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_add_cancel_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_opp_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_opp_r	40	1.3.0.0.0.0	synth with cache (only 1: intros; only 1: apply gcd_unique_alt; only 1: apply gcd_nonneg; only 1: intros; only 1: rewrite divide_opp_r; only 1: apply gcd_divide_iff).	0.742339849472	37
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_abs_l	40	1.0.0.0.0.0.2.0.1.0	synth with cache (only 1: intros; only 1: destruct (abs_eq_or_opp n) as [H| H]; only 1: rewrite H; only 1: easy; only 1: rewrite H; only 1: apply gcd_unique_alt; only 1: apply gcd_nonneg; only 1: intros; only 1: rewrite divide_opp_r; only 1: apply gcd_divide_iff).	26.5648829937	2413
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_abs_r	40	0.0.2.0.2.0	synth with cache (only 1: intros; only 1: destruct (abs_eq_or_opp m) as [H| H]; only 1: rewrite H; only 1: easy; only 1: rewrite H; only 1: now rewrite gcd_comm, gcd_opp_l, gcd_comm).	1.49783086777	92
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_0_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_0_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_diag	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_add_mult_diag_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_add_diag_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_sub_diag_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.Bezout_wd	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.bezout_1_gcd	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_bezout	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_l_nonneg	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_r_nonneg	40	0.4.0.0	synth with cache (only 1: intros; only 1: rewrite <- (abs_eq p)  at 3; only 1: now rewrite !(mul_comm _ p), gcd_mul_mono_l, mul_comm; only 1: trivial).	0.347512960434	22
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gauss	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_mul_split	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.quot_div_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_mod_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.quot_div	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_mod	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.mod_divide	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_divide	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_mod_eq_0	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.quot_div_exact	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_div_mul_exact	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_quot_mul_exact	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_div_factor	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_quot_factor	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_div_gcd	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_quot_gcd	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_mod	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_rem	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_wd	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_equiv1	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_equiv2	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_div_swap	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_l	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_r	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_div	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_least	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_nonneg	40	2.2.0	synth with cache (only 1: intro; only 1: intro n; only 1: apply abs_nonneg).	0.1674451828	15
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_comm	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_divide_iff	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_unique	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_unique_alt	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_assoc	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_0_l	40	0.0.2.0.16	synth with cache (only 1: unfold lcm; only 1: intro n; only 1: nzsimpl; only 1: apply abs_eq; only 1: order || apply lt_0_1).	6.54812383652	1492
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_0_r	40	0.2.0.2.1.0.0	synth with cache (only 1: intro n; only 1: apply lcm_unique; only 1: order || apply lt_0_1; only 1: exists 0; only 1: now nzsimpl; only 1: apply divide_refl; only 1: trivial).	2.61436104774	245
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_l_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_r_nonneg	40	0.2.0.0.2.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: auto; only 1: trivial using divide_refl; only 1: trivial using divide_1_l, le_0_1, divide_refl; only 1: trivial).	0.153859853745	10
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_diag_nonneg	40	0.0.0.0.11.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: auto; only 1: trivial using divide_refl; only 1: trivial using divide_refl; only 1: trivial).	3.27412009239	624
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_eq_0	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_eq_r	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_iff	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_opp_l	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_opp_r	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_abs_l	40	3.1.0.2.2.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct (abs_eq_or_opp n) as [H| H]; only 1: rewrite H; only 1: easy; only 1: rewrite H; only 1: apply lcm_unique_alt; only 1: apply lcm_nonneg; only 1: intros; only 1: rewrite divide_opp_l; only 1: apply lcm_divide_iff).	35.3694310188	4194
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_abs_r	40	0.0.1.0.3.0	synth with cache (only 1: intros; only 1: destruct (abs_eq_or_opp m) as [H| H]; only 1: rewrite H; only 1: easy; only 1: rewrite H; only 1: now rewrite lcm_comm, lcm_opp_l, lcm_comm).	0.349869966507	16
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_l	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_r	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_diag	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_l	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_l_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_r	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_r_nonneg	40	0.7.1.0	synth with cache (only 1: intros; only 1: rewrite <- (abs_eq p)  at 3; only 1: now rewrite !(mul_comm _ p), lcm_mul_mono_l, mul_comm; only 1: trivial).	2.01622700691	145
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_1_lcm_mul	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.succ_max_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.succ_min_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.pred_max_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.pred_min_distr	40	0.0.0.5.0.0.0.4.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?pred_le_mono; only 1: now rewrite <- ?pred_le_mono; only 1: now rewrite <- ?succ_le_mono; only 1: rewrite 2!min_r; only 1: now rewrite <- ?pred_le_mono; only 1: now rewrite <- ?pred_le_mono; only 1: now rewrite <- ?succ_le_mono).	30.3874430656	3551
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_max_distr_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_max_distr_r	40	1.0.0.1.1.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply add_le_mono_r; only 1: rewrite 2!max_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply add_le_mono_r).	12.1348631382	927
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_min_distr_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_min_distr_r	40	1.0.0.0.1.0.0.1.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_r; only 1: rewrite 2!min_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_r).	13.3685748577	1061
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.opp_max_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.opp_min_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_max_distr_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_max_distr_r	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_min_distr_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_min_distr_r	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonneg_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonneg_r	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonneg_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonneg_r	40	1.0.0.1.1.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: order; only 1: now apply mul_le_mono_nonneg_r; only 1: rewrite 2!min_r; only 1: order; only 1: order; only 1: now apply mul_le_mono_nonneg_r).	12.0519771576	1033
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonpos_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonpos_r	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonpos_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonpos_r	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neg_pos_cases	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.nonpos_pos_cases	40	2.1.0.2.0.3	synth with cache (only 1: nzinduct n; only 1: left; only 1: order; only 1: intro n; only 1: rewrite lt_succ_r, le_succ_l, !lt_eq_cases; only 1: intuition).	4.04014897346	679
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neg_nonneg_cases	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.nonpos_nonneg_cases	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_l	40	1.9.0	synth with cache (only 1: intro n; only 1: rewrite <- (succ_pred n)  at 2; only 1: apply lt_succ_diag_r).	1.12021803856	198
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_pred_l	40	0.0.0.0	synth with cache (only 1: intro n; only 1: apply lt_le_incl; only 1: rewrite <- (succ_pred n)  at 2; only 1: apply lt_succ_diag_r).	0.102637052536	4
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_le_pred	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.nle_pred_r	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_le	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_lt_pred	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_le_pred	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_lt	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_pred_lt	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.pred_lt_mono	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.pred_le_mono	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_succ_lt_pred	40	4.0.0.1.0	synth with cache (only 1: intros n m; only 1: rewrite lt_le_pred; only 1: symmetry; only 1: symmetry; only 1: apply le_succ_l).	2.4954931736	120
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_succ_le_pred	40	0.0.2.0.1.1	synth with cache (only 1: intros n m; only 1: rewrite <- lt_pred_le; only 1: rewrite <- (succ_pred m); only 1: rewrite pred_succ; only 1: rewrite pred_succ; only 1: apply lt_succ_r).	1.50694608688	77
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_lt_succ	40	0.1.4.0.0	synth with cache (only 1: intros n m; only 1: rewrite <- le_succ_l; only 1: rewrite <- (succ_pred n)  at 2; only 1: symmetry; only 1: apply lt_succ_r).	0.68508887291	32
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_pred_lt_succ	40	0.2.4	synth with cache (only 1: symmetry; only 1: rewrite <- lt_pred_le; only 1: apply lt_succ_r).	1.92343211174	106
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neq_pred_l	40	0.2.0	synth with cache (only 1: intro n; only 1: rewrite <- (succ_pred n)  at 2; only 1: apply neq_sym, neq_succ_diag_l).	0.0936019420624	5
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_m1_r	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericAbs.abs_eq	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericAbs.abs_neq	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_null	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_pos	40	0.0.0.2.2.3	synth with cache (only 1: unfold sgn; only 1: intros; only 1: destruct (compare_spec 0 n); only 1: order; only 1: order; only 1: order).	7.5977768898	394
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_neg	40	0.0.0.0.1.2	synth with cache (only 1: unfold sgn; only 1: intros; only 1: destruct (compare_spec 0 n); only 1: order; only 1: order; only 1: order).	1.11674594879	55
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_wd	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_max	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_neq'	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_nonneg	40	0.2.0.15.0	synth with cache (only 1: intro; only 1: destruct_max n; only 1: auto; only 1: rewrite opp_nonneg_nonpos; only 1: auto).	6.48957014084	1703
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_eq_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_neq_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_opp	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_0	40	3.3.21	synth with cache (only 1: rewrite abs_eq; only 1: now nzsimpl; only 1: order).	1.38211417198	454
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_0_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_pos	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_eq_or_opp	40	2.2.12.0	synth with cache (only 1: intro n; only 1: destruct_max n; only 1: auto with relations; only 1: auto with relations).	6.79119706154	1324
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_or_opp_abs	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_involutive	40	0.2.0.0.0.0.14.0.0	synth with cache (only 1: intro n; only 1: destruct_max n; only 1: rewrite abs_eq; only 1: auto with relations; only 1: auto; only 1: rewrite (abs_eq (- n)); only 1: auto with relations; only 1: rewrite opp_nonneg_nonpos; only 1: auto).	10.6565020084	2631
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_spec	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_case_strong	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_case	40	0.0.1.1	synth with cache (only 1: intros; only 1: destruct_max n; only 1: auto; only 1: auto).	0.253581047058	31
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_eq_cases	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_lt	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_le	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_triangle	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_sub_triangle	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_mul	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_square	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_wd	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_spec	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_0	40	5.5.10	synth with cache (only 1: rewrite sgn_null; only 1: auto using eq_refl, le_refl; only 1: auto using eq_refl, le_refl).	1.73681306839	347
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_pos_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_null_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_neg_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_opp	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_nonneg	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_nonpos	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_mul	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_abs	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_sgn	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_sgn	40	1.0.1.0.1.3.5.0	synth with cache (only 1: intro n; only 1: destruct_sgn n; only 1: apply sgn_pos; only 1: apply lt_0_1; only 1: apply sgn_0; only 1: apply sgn_neg; only 1: rewrite opp_neg_pos; only 1: apply lt_0_1).	4.95146298409	966
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_eq	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_opp_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_opp_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_rem_unique	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_unique	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_unique	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_same	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_same	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_small	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_small	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_0_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_0_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_1_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_1_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_1_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_1_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_mul	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_unique_exact	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_nonneg	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_nonpos	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_sign_mul	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_sign_nz	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_sign	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_abs_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_abs_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_abs	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_abs_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_abs_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_abs	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_bound_abs	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_le	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_pos	40	0.0.5.0.0.3.0	synth with cache (only 1: intros; only 1: destruct (Quot2Div.mod_bound_pos a b); only 1: auto; only 1: auto; only 1: apply NZQuot.div_pos; only 1: auto; only 1: auto).	11.0043210983	1103
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_str_pos	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_lt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_mono	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_quot_le	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_quot_ge	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_succ_quot_gt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_pred_quot_lt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_pred_quot_gt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_succ_quot_lt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_exact	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_lt_upper_bound	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_upper_bound	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_lower_bound	40	2.0.1.1.0	synth with cache (only 1: intros; only 1: rewrite <- (quot_mul q b) by order; only 1: apply quot_le_mono; only 1: auto; only 1: now rewrite mul_comm).	0.162930011749	9
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_compat_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_add	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_add	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_add_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul_cancel_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul_cancel_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_distr_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_distr_l	40	1.1.1.1.5.0	synth with cache (only 1: intros; only 1: rewrite !(mul_comm c); only 1: assert (b * c ~= 0) by (rewrite <- neq_mul_0; tauto); only 1: rewrite !rem_eq by trivial; only 1: rewrite quot_mul_cancel_r by order; only 1: now rewrite mul_sub_distr_r, <- !mul_assoc, (mul_comm (a ÷ b) c)).	18.8504951	1725
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_rem	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_idemp_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.add_rem_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.add_rem_idemp_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.add_rem	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_quot	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mod_mul_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_quot	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul_le	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_eq	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_bound_abs	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mod_unique	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique_pos	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique_neg	40	0.0.1.0	synth with cache (only 1: intros; only 1: apply div_unique with r; only 1: auto; only 1: auto).	0.123112916946	5
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique_pos	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique_neg	40	0.0.1.0	synth with cache (only 1: intros; only 1: apply mod_unique with q; only 1: auto; only 1: auto).	0.120448827744	5
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_bound_or	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.opp_mod_bound_or	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_r_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_r_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_r_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_r_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign_mul	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_same	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_same	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_small	40	0.5.0.0	synth with cache (only 1: intros; only 1: intuition; only 1: apply div_small; only 1: auto).	0.230859994888	14
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_small	40	5.0.0	synth with cache (only 1: intros; only 1: intuition; only 1: auto using mod_small).	0.206831932068	16
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_0_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_0_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_1_r	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_1_r	40	0.1.1.1.0.2.3.3	synth with cache (only 1: intro; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: left; only 1: split; only 1: order || apply lt_0_1; only 1: order || apply lt_0_1; only 1: now nzsimpl).	7.49976015091	1276
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_1_l	40	0.1.1.1.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.125408887863	8
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_1_l	40	0.1.1.1.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.434015035629	8
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_mul	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique_exact	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_le	40	0.0.2.0	synth with cache (only 1: intros; only 1: apply mod_le; only 1: auto; only 1: auto).	0.588063955307	35
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_pos	40	0.9.0	synth with cache (only 1: intros; only 1: assert (LE : 0 <= a / b) by (apply div_pos; order); only 1: auto).	4.09301590919	339
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_str_pos	40	0.3.1.0	synth with cache (only 1: intros a b (Hb, Hab); only 1: assert (LE : 0 <= a / b) by (apply Private_NZDiv.div_pos; order); only 1: apply div_str_pos; only 1: auto).	0.314959049225	19
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_lt	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_mono	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_div_le	40	0.0.2.3.3.3.2	synth with cache (only 1: intros; only 1: rewrite (add_le_mono_r _ _ (a mod b)), <- div_mod by order; only 1: rewrite <- (add_0_r a)  at 1; only 1: rewrite <- add_le_mono_l; only 1: destruct (mod_pos_bound a b); only 1: auto; only 1: auto).	7.05369997025	1254
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_div_ge	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_succ_div_gt	40	4.1.1.1.0	synth with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite mul_succ_r; only 1: rewrite <- add_lt_mono_l; only 1: now destruct (mod_pos_bound a b)).	1.93114495277	198
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_succ_div_lt	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_exact	40	2.0.1.3	synth with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite <- (add_0_r (b * (a / b)))  at 2; only 1: apply add_cancel_l).	0.779803991318	75
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_lt_upper_bound	40	0.0.1.1.1.1	synth with cache (only 1: intros; only 1: rewrite (mul_lt_mono_pos_l b) by order; only 1: apply le_lt_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: auto; only 1: auto).	0.253938913345	25
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_upper_bound	40	0.0.2.1.2.3	synth with cache (only 1: intros; only 1: rewrite (mul_le_mono_pos_l _ _ b) by order; only 1: apply le_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: auto; only 1: auto).	4.74338889122	530
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_lower_bound	40	2.0.1.1.0	synth with cache (only 1: intros; only 1: rewrite <- (div_mul q b) by order; only 1: apply div_le_mono; only 1: auto; only 1: now rewrite mul_comm).	0.158107995987	9
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_compat_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_add	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_add	40	1.2.3.2.0.3.0	synth with cache (only 1: intros; only 1: apply (mul_cancel_l _ _ c); only 1: auto; only 1: apply (add_cancel_r _ _ ((a + b * c) mod c)); only 1: rewrite <- div_mod, Private_NZDiv.mod_add by order; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	21.3274450302	2416
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_add_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul_cancel_r	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul_cancel_l	40	0.0.5.4.0	synth with cache (only 1: intros; only 1: rewrite !(mul_comm c); only 1: apply Private_NZDiv.div_mul_cancel_r; only 1: auto; only 1: auto).	10.7820260525	970
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_distr_l	40	0.1.0.0.0.1.2.1.1.1.0	synth with cache (only 1: intros; only 1: rewrite <- (add_cancel_l _ _ (c * b * (c * a / (c * b)))); only 1: rewrite <- div_mod; only 1: rewrite Private_NZDiv.div_mul_cancel_l; only 1: rewrite <- mul_assoc, <- mul_add_distr_l, mul_cancel_l by order; only 1: apply div_mod; only 1: auto; only 1: auto; only 1: auto; only 1: rewrite <- neq_mul_0; only 1: auto).	21.7170791626	2204
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_distr_r	40	3.2.0	synth with cache (only 1: intros; only 1: rewrite !(mul_comm _ c); only 1: now rewrite Private_NZDiv.mul_mod_distr_l).	0.346977949142	23
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_mod	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_idemp_r	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod	40	0.0.3.6.0	synth with cache (only 1: intros; only 1: rewrite Private_NZDiv.mul_mod_idemp_l, Private_NZDiv.mul_mod_idemp_r; only 1: now rewrite mul_comm; only 1: auto; only 1: auto).	15.6828229427	1192
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod_idemp_r	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_div	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.rem_mul_r	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_div	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul_le	40	0.1.0.1.1.0.1.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite mul_assoc, (mul_comm b c), <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: auto; only 1: apply Private_NZDiv.mul_div_le; only 1: auto).	3.60292601585	296
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_pred_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_pred_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_0_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_succ_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_pred_l	40	1.0.1.0	synth with cache (only 1: intros n m; only 1: rewrite <- 2!add_opp_r; only 1: rewrite <- (succ_pred n)  at 2; only 1: now rewrite add_succ_l, pred_succ).	0.725496053696	22
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_pred_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_pred	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_diag	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_diag_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_diag_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_sub_assoc	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_involutive	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_add_distr	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_sub_distr	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_inj	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_inj_wd	40	6.0.0.0.0.7.0	synth with cache (only 1: intros; only 1: split; only 1: intro H; only 1: apply opp_wd in H; only 1: now rewrite 2!opp_involutive in H; only 1: intro H; only 1: now f_equiv).	24.873183012	3760
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.eq_opp_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.eq_opp_r	40	0.0	synth with cache (only 1: intros n m; only 1: now rewrite <- (opp_inj_wd (- n) m), opp_involutive).	0.0559079647064	2
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add_distr	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_sub_distr	40	0.0.0.3.0.2.2.1	synth with cache (only 1: intros n m p; only 1: rewrite <- 2!add_opp_r; only 1: rewrite <- add_opp_r, opp_add_distr, add_assoc; only 1: nzinduct n; only 1: now rewrite opp_involutive; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	16.7077541351	1457
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_opp_l	40	1.7.0	synth with cache (only 1: intros n m; only 1: rewrite <- 2!add_opp_r; only 1: now rewrite add_comm).	3.16839385033	184
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_opp_r	40	1.0.1	synth with cache (only 1: intros n m; only 1: rewrite <- add_opp_r; only 1: now rewrite opp_involutive).	1.79182291031	111
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_sub_swap	40	0.0.3.1	synth with cache (only 1: intros n m p; only 1: rewrite <- 2!add_opp_r; only 1: rewrite <- 2!add_assoc, add_cancel_l; only 1: apply add_comm).	0.931363105774	52
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_cancel_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_cancel_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_0_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_0_r	40	4.7.0	synth with cache (only 1: intros n m; only 1: rewrite add_comm; only 1: now rewrite add_move_l, sub_0_l).	11.9860918522	1019
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_0_l	40	0.11.0	synth with cache (only 1: intros; only 1: rewrite <- (add_opp_r n m); only 1: now rewrite add_move_l, sub_0_l).	6.57864689827	646
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_0_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_simpl_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_simpl_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_simpl_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_simpl_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add	40	2.0	synth with cache (only 1: intros; only 1: now rewrite <- sub_sub_distr, sub_diag, sub_0_r).	0.560791015625	44
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_l_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_l_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_r_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_r_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add_simpl_r_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add_simpl_r_r	40	1.10.0	synth with cache (only 1: intros n m p; only 1: rewrite (add_comm p m); only 1: now rewrite <- sub_sub_distr, sub_add_distr, sub_diag, sub_0_l, sub_opp_r).	4.32584905624	382
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_eq	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mod_unique	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_unique	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_unique	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_opp_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_opp_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_opp_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_opp_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_same	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_same	40	0.4.4.3.2	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 1; only 1: now rewrite abs_pos; only 1: now nzsimpl).	11.1028449535	1339
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_small	40	0.6.0.0	synth with cache (only 1: intros; only 1: intuition; only 1: apply div_small; only 1: auto).	0.274723052979	17
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_small	40	0.5.0.0	synth with cache (only 1: intros; only 1: intuition; only 1: apply mod_small; only 1: auto).	0.238384962082	14
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_0_l	40	1.4.3.1.2	synth with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique with 0; only 1: now rewrite abs_pos; only 1: now nzsimpl).	12.8633720875	1344
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_0_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_1_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_1_r	40	0.1.0.2.1.3.2.3	synth with cache (only 1: intro; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: pose proof lt_0_1 as H; only 1: rewrite abs_pos; only 1: intuition; only 1: order; only 1: now nzsimpl).	11.6106729507	1687
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_1_l	40	0.2.1.1.1	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.209506034851	20
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_1_l	40	0.2.1.1.1	synth with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.227699995041	22
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mul	40	0.0.1.1.1.6.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: split; only 1: order; only 1: now rewrite abs_pos; only 1: nzsimpl; only 1: apply mul_comm).	17.9719510078	2039
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_unique_exact	40	0.1.8.2.5.2.3.4	synth with cache (only 1: intro H; only 1: intro n; only 1: apply Private_NZDiv.div_unique with 0; only 1: split; only 1: apply le_refl; only 1: now rewrite abs_pos; only 1: nzsimpl; only 1: auto).	31.5626208782	5817
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_le	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_pos	40	0.11.0	synth with cache (only 1: intros; only 1: assert (LE : 0 <= a / b) by (apply div_pos; order); only 1: auto).	10.5287108421	936
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_str_pos	40	0.3.1.0	synth with cache (only 1: intros a b (Hb, Hab); only 1: assert (LE : 0 <= a / b) by (apply Private_NZDiv.div_pos; order); only 1: apply div_str_pos; only 1: auto).	0.338459014893	19
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_lt	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_mono	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_div_le	40	6.3.3.4.1.1	synth with cache (only 1: intros; only 1: intuition; only 1: rewrite (add_le_mono_r _ _ (a mod b)), <- div_mod by order; only 1: rewrite <- (add_0_r a)  at 1; only 1: rewrite <- add_le_mono_l; only 1: now apply mod_always_pos).	24.0819549561	4292
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_succ_div_gt	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_pred_div_gt	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_exact	40	0.1.2.3	synth with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite <- (add_0_r (b * (a / b)))  at 2; only 1: apply add_cancel_l).	1.25964784622	96
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_lt_upper_bound	40	0.1.1.1.1.1	synth with cache (only 1: intros; only 1: rewrite (mul_lt_mono_pos_l b) by order; only 1: apply le_lt_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: order; only 1: auto).	1.10657405853	112
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_upper_bound	40	0.1.2.2.2.1	synth with cache (only 1: intros a b c Hc Hab; only 1: rewrite (mul_le_mono_pos_l _ _ b) by order; only 1: apply le_trans with a; only 1: apply mul_div_le; only 1: order; only 1: auto).	3.89607405663	492
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_lower_bound	40	2.0.1.1.0	synth with cache (only 1: intros; only 1: rewrite <- (div_mul q b) by order; only 1: apply div_le_mono; only 1: auto; only 1: now rewrite mul_comm).	0.155296087265	9
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_compat_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_add	40	2.1.4.3.2.4	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with (a / c + b); only 1: now apply mod_always_pos; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	29.7232019901	4505
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_add	40	0.2.2.2.0.3.0	synth with cache (only 1: intros; only 1: apply (mul_cancel_l _ _ c); only 1: auto; only 1: apply (add_cancel_r _ _ ((a + b * c) mod c)); only 1: rewrite <- div_mod, Private_NZDiv.mod_add by order; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	11.7496628761	1311
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_add_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_cancel_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_cancel_l	40	0.0.5.8.0	synth with cache (only 1: intros; only 1: rewrite !(mul_comm c); only 1: apply Private_NZDiv.div_mul_cancel_r; only 1: auto; only 1: auto).	25.1541888714	2929
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_distr_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_distr_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mod	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_idemp_r	40	0.5.6.0	synth with cache (only 1: intros a b n Hn; only 1: rewrite !(mul_comm a); only 1: apply Private_NZDiv.mul_mod_idemp_l; only 1: auto).	33.4662768841	2512
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod	40	0.0.1.7.0	synth with cache (only 1: intros a b n Hn; only 1: rewrite Private_NZDiv.mul_mod_idemp_l, Private_NZDiv.mul_mod_idemp_r; only 1: now rewrite mul_comm; only 1: auto; only 1: auto).	5.28951907158	503
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.add_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.add_mod_idemp_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.add_mod	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_div	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mul_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_div	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_le	40	2.1.0.1.1.0.1.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite mul_assoc, (mul_comm b c), <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: auto; only 1: apply Private_NZDiv.mul_div_le; only 1: order).	7.39538502693	755
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_divides	40
Coq.Numbers.Integer.Binary.ZBinary.TestOrder.test	40	2	synth with cache (only 1: BinInt.Z.order).	1.01087498665	59
Coq.Numbers.Cyclic.Int63.Ring63.ring_theory_switch_eq	40	14.8	synth with cache (only 1: intros; only 1: firstorder).	11.0331091881	1419
Coq.Numbers.Cyclic.Int63.Ring63.Int63Ring	40
Coq.Numbers.Cyclic.Int63.Ring63.eq31_correct	40	0.15	synth with cache (only 1: intros x y; only 1: auto using eqb_correct, eqb_complete).	2.4832110405	343
Coq.Numbers.Cyclic.Int63.Ring63.TestRing.test	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.WW.spec_WO	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.WW.spec_OW	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.WW.spec_WW	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.Of_Z.of_pos_correct	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.Of_Z.of_Z_correct	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_0_l	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_comm	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_assoc	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_1_l	40	0.0.8.0.0	synth with cache (only 1: intro; only 1: zify; only 1: Z.nzsimpl; only 1: apply Zmod_small; only 1: apply ZnZ.spec_to_Z).	2.97578406334	222
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_comm	40	4.16.0.1	synth with cache (only 1: intros; only 1: zify; only 1: f_equal; only 1: intuition).	5.20781898499	1049
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_assoc	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_add_distr_r	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_opp_r	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_opp_diag_r	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.CyclicRing	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.eqb_eq	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.eqb_correct	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.eq_equiv	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.gt_wB_1	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.gt_wB_0	40	14.22	synth with cache (only 1: unfold base; only 1: auto with zarith).	15.635504961	2925
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.one_mod_wB	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.succ_mod_wB	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.pred_mod_wB	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.NZ_to_Z_mod	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.pred_succ	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.one_succ	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.two_succ	40	0	synth with cache (only 1: reflexivity).	0.12358880043	1
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.Induction.B0	40	0	synth with cache (only 1: auto).	0.112260103226	1
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.Induction.BS	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.Induction.Zbounded_induction	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.Induction.B_holds	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.Induction.bi_induction	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.add_0_l	40	1.2.0	synth with cache (only 1: intro; only 1: zify; only 1: apply NZ_to_Z_mod).	0.304259777069	19
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.add_succ_l	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.sub_0_r	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.sub_succ_r	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.mul_0_l	40	0.2.2	synth with cache (only 1: intro; only 1: zify; only 1: reflexivity).	0.242495059967	7
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.mul_succ_l	40
Coq.Numbers.DecimalString.uint_of_char_spec	40
Coq.Numbers.DecimalString.NilEmpty.usu	40
Coq.Numbers.DecimalString.NilEmpty.sus	40
Coq.Numbers.DecimalString.NilEmpty.isi	40
Coq.Numbers.DecimalString.NilEmpty.sis	40
Coq.Numbers.DecimalString.NilZero.uint_of_string_nonnil	40
Coq.Numbers.DecimalString.NilZero.sus	40
Coq.Numbers.DecimalString.NilZero.usu	40
Coq.Numbers.DecimalString.NilZero.usu_nil	40	0	synth with cache (only 1: reflexivity).	0.110539913177	1
Coq.Numbers.DecimalString.NilZero.usu_gen	40
Coq.Numbers.DecimalString.NilZero.isi	40
Coq.Numbers.DecimalString.NilZero.isi_posnil	40	0	synth with cache (only 1: reflexivity).	0.117047071457	1
Coq.Numbers.DecimalString.NilZero.isi_negnil	40	0	synth with cache (only 1: reflexivity).	0.110815048218	1
Coq.Numbers.DecimalString.NilZero.sis	40
Coq.Numbers.Natural.Peano.NPeano.Even_equiv	40
Coq.Numbers.Natural.Peano.NPeano.Odd_equiv	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_wf_0	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.nlt_0_r	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.nle_succ_0	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_0_r	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_0_succ	40	0.1.0	synth with cache (only 1: intro n; only 1: rewrite lt_succ_r; only 1: apply le_0_l).	0.0729999542236	4
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.neq_0_lt_0	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.eq_0_gt_0_cases	40	0.2.1.0.8.7	synth with cache (only 1: cases ltac:(n); only 1: auto with relations; only 1: intro n; only 1: right; only 1: rewrite lt_succ_r; only 1: apply le_0_l).	27.7784090042	5087
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.zero_one	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_1_r	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_1_r	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_lt_0	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_1_l'	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.RelElim.le_ind_rel	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.RelElim.lt_ind_rel	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.succ_pred_pos	40	0.0.0.0.0	synth with cache (only 1: intro n; only 1: intro H; only 1: destruct (lt_exists_pred _ _ H) as (n', (EQ, LE)); only 1: rewrite EQ; only 1: now rewrite pred_succ).	0.139486074448	5
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_pred_l	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_l	40	1.4.0.0.1.0.2	synth with cache (only 1: cases ltac:(n); only 1: intro H; only 1: now elim H; only 1: intro n; only 1: intro H; only 1: rewrite lt_succ_r; only 1: now rewrite pred_succ).	7.00312781334	1036
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_le_pred	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_lt_pred	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_le_pred	40	0.2.13.1	synth with cache (only 1: intros z n H; only 1: destruct (lt_exists_pred _ _ H) as (n', (EQ, LE)); only 1: rewrite EQ; only 1: now rewrite pred_succ).	16.8331959248	2599
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_le	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_lt	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_pred_le	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.pred_le_mono	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.pred_lt_mono	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_succ_lt_pred	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_succ_le_pred	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_lt_succ	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_pred_le_succ	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_upper_bound	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_eq	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mod_unique	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_unique	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_unique	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_unique_exact	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_same	40	0.0.1.2.1.4	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique_exact; only 1: intro H1; only 1: now apply H; only 1: now nzsimpl').	4.5723900795	652
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_same	40	1.1.3.2.2	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 1; only 1: auto'; only 1: now nzsimpl).	3.72877717018	635
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_small	40	3.4.6	synth with cache (only 1: intros; only 1: apply div_small; only 1: auto').	12.4117221832	1578
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_small	40	2.0.1.2.3	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 0; only 1: auto; only 1: now nzsimpl).	3.32185292244	456
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_0_l	40	1.3.1.1	synth with cache (only 1: intro H; only 1: intro; only 1: apply Private_NZDiv.div_small; only 1: auto').	0.41675901413	36
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_0_l	40	1.3.1	synth with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: auto').	0.423592090607	36
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_1_r	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_1_r	40	1.2.3.2.5	synth with cache (only 1: intro; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: apply lt_0_1; only 1: now nzsimpl).	7.10811495781	1103
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_1_l	40	0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: auto).	0.0772979259491	3
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_1_l	40	0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: auto).	0.0781772136688	3
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul	40	3.0.2.3.1.2	synth with cache (only 1: intros; only 1: symmetry; only 1: intuition; only 1: apply Private_NZDiv.div_unique_exact; only 1: auto; only 1: apply mul_comm).	27.5573539734	3119
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_mul	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_le	40	1.1.9.1	synth with cache (only 1: intros; only 1: apply mod_le; only 1: auto'; only 1: auto').	13.451821804	1626
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_str_pos	40	0.2.1.0	synth with cache (only 1: intros a b (Hb, Hab); only 1: assert (LE : 0 <= a / b) by (apply div_pos; order); only 1: apply div_str_pos; only 1: auto).	0.290217876434	18
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_small_iff	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_small_iff	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_str_pos_iff	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_lt	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_mono	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_div_le	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_succ_div_gt	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_exact	40	0.0.1.4	synth with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite <- (add_0_r (b * (a / b)))  at 2; only 1: apply add_cancel_l).	1.17093992233	115
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_lt_upper_bound	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_upper_bound	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_lower_bound	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_compat_l	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_add	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_add	40	1.1.1.6.1	synth with cache (only 1: intros; only 1: apply div_add; only 1: auto'; only 1: auto'; only 1: auto').	12.5718929768	1319
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_add_l	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_cancel_r	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_cancel_l	40	0.0.1.2.0	synth with cache (only 1: intros; only 1: rewrite !(mul_comm c); only 1: apply Private_NZDiv.div_mul_cancel_r; only 1: auto; only 1: auto).	0.150876045227	8
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_distr_r	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_distr_l	40	0.1.0.0.0.1.2.1.1.2.0	synth with cache (only 1: intros; only 1: rewrite <- (add_cancel_l _ _ (c * b * (c * a / (c * b)))); only 1: rewrite <- div_mod; only 1: rewrite Private_NZDiv.div_mul_cancel_l; only 1: rewrite <- mul_assoc, <- mul_add_distr_l, mul_cancel_l by order; only 1: apply div_mod; only 1: auto; only 1: auto; only 1: auto; only 1: rewrite <- neq_mul_0; only 1: auto).	20.6293389797	2618
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_mod	40	3.1.1.4.2	synth with cache (only 1: intros; only 1: destruct (mod_bound_pos a n); only 1: auto'; only 1: auto'; only 1: now rewrite Private_NZDiv.mod_small_iff).	11.8912370205	1879
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_idemp_l	40	2.2.2.4.1.2	synth with cache (only 1: intro H; only 1: intros; only 1: apply mul_mod_idemp_l; only 1: auto'; only 1: auto'; only 1: auto').	22.3217070103	3256
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_idemp_r	40	0.0.0.4.0	synth with cache (only 1: intros; only 1: rewrite !(mul_comm a); only 1: apply Private_NZDiv.mul_mod_idemp_l; only 1: intro H1; only 1: auto).	0.141752004623	9
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod	40	0.0.0.0.6.5.0	synth with cache (only 1: intros; only 1: rewrite Private_NZDiv.mul_mod_idemp_l, Private_NZDiv.mul_mod_idemp_r; only 1: reflexivity; only 1: intro H1; only 1: auto; only 1: intro H1; only 1: auto).	12.6071639061	1760
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.add_mod_idemp_l	40	1.0.0.15.0	synth with cache (only 1: intros; only 1: apply add_mod_idemp_l; only 1: auto'; only 1: auto'; only 1: auto').	32.3518981934	4548
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.add_mod_idemp_r	40	0.0.1.7.0	synth with cache (only 1: intros; only 1: rewrite !(add_comm a); only 1: apply Private_NZDiv.add_mod_idemp_l; only 1: intro H1; only 1: auto).	3.4024450779	379
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.add_mod	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_div	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_mul_r	40	0.1.2.3.2.1.1.0	synth with cache (only 1: intros; only 1: apply add_cancel_l with (b * c * (a / (b * c))); only 1: rewrite <- div_mod by (apply neq_mul_0; split; order); only 1: rewrite <- Private_NZDiv.div_div by trivial; only 1: rewrite add_assoc, add_shuffle0, <- mul_assoc, <- mul_add_distr_l; only 1: rewrite <- div_mod by order; only 1: apply div_mod; only 1: auto).	18.4957029819	2285
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_le	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_divides	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_succ_0	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_0_succ	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.le_0_l	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.induction	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.case_analysis	40	1.1.1.0.0.1.0	synth with cache (only 1: intros A A_wd A0 AS n; only 1: apply right_induction with 0; only 1: assumption; only 1: assumption; only 1: intro; only 1: auto; only 1: apply le_0_l).	1.8252620697	142
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_0	40	9.0	synth with cache (only 1: intro n; only 1: now apply (neq_succ_diag_l 0)).	0.275218009949	62
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_0_r	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.zero_or_succ	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.eq_pred_0	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.succ_pred	40	4.1.0.0.0.1.3	synth with cache (only 1: cases ltac:(n); only 1: intro H; only 1: now elim H; only 1: intro n; only 1: intro H; only 1: pose proof (pred_succ n) as EQ'; only 1: now nzsimpl').	5.36577701569	1032
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.pred_inj	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.PairInduction.pair_induction	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.TwoDimensionalInduction.two_dim_induction	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.DoubleInduction.double_induction	40	2.0.1.3.0.1.1	synth with cache (only 1: intros H1 H2 H3; only 1: induct ltac:(n); only 1: auto; only 1: intros n IH; only 1: induct ltac:(m); only 1: auto; only 1: auto).	9.36381196976	841
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.if_zero_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.if_zero_0	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.if_zero_succ	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_0_l	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_succ_l	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_add	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_0_r	40	4.0.18	synth with cache (only 1: unfold def_mul; only 1: intro n; only 1: now rewrite recursion_0).	6.21676588058	1283
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_succ_r	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_mul	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_base	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_step	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_0	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_0_succ	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.succ_ltb_mono	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_lt	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_ge	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.even_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.even_0	40	4.17	synth with cache (only 1: unfold even; only 1: now rewrite recursion_0).	0.971436023712	241
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.even_succ	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_0	40	8.21	synth with cache (only 1: compute in *; only 1: now rewrite recursion_0).	16.6588280201	487
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_succ	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_spec	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_spec2	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_0	40	0.3.4.16	synth with cache (only 1: unfold half; only 1: rewrite half_aux_0; only 1: simpl; only 1: auto with *).	5.54233288765	782
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_1	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_double	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_upper_bound	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_lower_bound	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_nz	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_decrease	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow_0	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow_succ	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_prewd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_good_step	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_init	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_step	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow2_log	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.square_lt_mono	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.square_le_mono	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_le_mono_l	40	3.14.0	synth with cache (only 1: intros x y z; only 1: apply mul_le_mono_nonneg_l; only 1: apply le_0_l).	19.1359541416	2866
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_le_mono_r	40	0.0.0.5.2	synth with cache (only 1: intros; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: apply mul_le_mono_nonneg_l; only 1: apply le_0_l; only 1: assumption).	1.41736102104	211
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_lt_mono	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_le_mono	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.lt_0_mul'	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.eq_mul_1	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow_sub_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow_div_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_proper	40	4.0	synth with cache (only 1: intros x x' EQ; only 1: now f_equiv).	0.0774891376495	6
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.exists_div2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_0_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_succ_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_spec'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_spec	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_true	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_false	40	0.0.1.0.1.1.1.0	synth with cache (only 1: intros a n; only 1: rewrite <- testbit_spec'; only 1: destruct a.[n]; only 1: split; only 1: now try order'; only 1: simpl; only 1: now try order'; only 1: now try order').	2.47435212135	205
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_inj	40	2.2.2	synth with cache (only 1: destr_bool; only 1: now try order'; only 1: now try order').	0.0910410881042	9
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_b2n_double_div2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_b2n_double_bit0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_div2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_bit0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_unique	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit0_odd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit0_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit0_mod	40	0.0.0.1.0.0.0.0.1	synth with cache (only 1: intros a; only 1: destruct (exists_div2 a) as (a', (b, H)); only 1: rewrite H  at 1; only 1: rewrite testbit_0_r; only 1: apply mod_unique with a'; only 1: destruct b; only 1: order'; only 1: order'; only 1: trivial).	1.94905900955	125
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_odd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit_log2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_above_log2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_bits	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div_pow2_bits	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.double_bits_succ	40	1.0	synth with cache (only 1: intros; only 1: apply testbit_even_succ, le_0_l).	0.0717530250549	3
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mul_pow2_bits_add	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mul_pow2_bits_high	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mul_pow2_bits_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mod_pow2_bits_high	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mod_pow2_bits_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.eqf_equiv	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_eqf	40	10.7.3	synth with cache (only 1: intros x x' EQ; only 1: intro H; only 1: now f_equiv).	30.4038808346	4139
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_inj_0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_inj	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_inj_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.are_bits	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_spec'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_spec_high'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_div_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_mul_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_spec_alt	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_shiftl	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_shiftr	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_shiftl_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_shiftl_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_1_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_0_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_0_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_0_l	40	3.3.2	synth with cache (only 1: intro n; only 1: rewrite shiftl_mul_pow2; only 1: now nzsimpl).	0.683144807816	87
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_0_l	40	0.0.3.4.2	synth with cache (only 1: intros; only 1: rewrite shiftr_div_pow2; only 1: nzsimpl; only 1: order_nz; only 1: order_nz).	2.04399204254	320
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_eq_0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_div	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_odd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_wd	40	0.3.0	synth with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.149833917618	6
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_wd	40	0.0.0	synth with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.148373842239	3
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_wd	40	0.2.0	synth with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.246334075928	5
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_eq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_nilpotent	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_0_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_0_r	40	0.1.0	synth with cache (only 1: intro n; only 1: bitwise; only 1: apply xorb_false_l).	0.100265026093	4
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_comm	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_assoc	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_0_l	40	5.2.0	synth with cache (only 1: intro n; only 1: bitwise; only 1: now try order').	0.127604007721	12
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_0_r	40	1.1.0	synth with cache (only 1: intro n; only 1: bitwise; only 1: apply xorb_false_r).	0.0987770557404	5
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_comm	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_assoc	40	3.4.4	synth with cache (only 1: intros x y z; only 1: bitwise; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	3.74426913261	439
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_diag	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_eq_0_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_0_l	40	0.0.5.2	synth with cache (only 1: intros; only 1: bitwise; only 1: simpl; only 1: now try order').	0.423588991165	44
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_0_r	40	0.9.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply andb_false_iff; only 1: intuition).	1.77082395554	233
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_comm	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_assoc	40	4.4.4	synth with cache (only 1: intros x y z; only 1: bitwise; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	5.4673511982	611
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_diag	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_0_l	40	0.0.2	synth with cache (only 1: intros; only 1: bitwise; only 1: trivial).	0.110857009888	5
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_0_r	40	0.5.0	synth with cache (only 1: intro n; only 1: bitwise; only 1: apply xorb_false_r).	0.114830970764	8
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_diag	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_land_distr_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_land_distr_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lor_distr_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lor_distr_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ldiff_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_ldiff_and	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_ldiff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_spec'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_spec'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_true	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_false	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_eq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_neq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_eq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_neq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_lxor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_lxor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_land	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_land	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_lor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_lor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_ldiff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_ldiff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_equiv	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_add	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_div_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_mod_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_spec_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_spec_high	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_spec_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_spec_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_spec_high	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_involutive	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_0_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_ones	40	0.1.2.0	synth with cache (only 1: intro n; only 1: unfold lnot; only 1: bitwise; only 1: apply xorb_nilpotent).	0.12831902504	7
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_ones_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_ones	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_ones_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ones_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ones_r_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ones_l_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_lnot_diag	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_lnot_diag_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lnot_diag	40	0.0.1.0.0.0.1.0.0.0.0	synth with cache (only 1: intros a n; only 1: bitwise; only 1: destruct (le_gt_cases n m); only 1: rewrite lnot_spec_high, ones_spec_high; only 1: now destruct a.[m]; only 1: trivial; only 1: trivial; only 1: rewrite lnot_spec_low, ones_spec_low; only 1: now destruct a.[m]; only 1: trivial; only 1: trivial).	7.18626618385	665
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lnot_diag_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_lor_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_land_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_land_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_ldiff_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_lnot_lnot	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_lxor_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_lxor_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_lor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_bits_unique	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_shiftr	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_shiftl	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_lor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_land	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_lxor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_bit0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add3_bit0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add3_bits_div2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_carry_div2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_carry_bits	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_bit1	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.nocarry_equiv	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_nocarry_lxor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_le	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.sub_nocarry_ldiff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_lnot_diag_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_sub_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_nocarry_lt_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_nocarry_mod_lt_pow2	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.divide_add_cancel_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.divide_sub_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_add_mult_diag_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_add_diag_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_sub_diag_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.Bezout_wd	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.bezout_1_gcd	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout_pos_pos	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout_pos	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_mul_mono_l	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_mul_mono_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gauss	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.divide_mul_split	40
Coq.Numbers.Natural.Abstract.NIso.Homomorphism.natural_isomorphism_wd	40
Coq.Numbers.Natural.Abstract.NIso.Homomorphism.natural_isomorphism_0	40
Coq.Numbers.Natural.Abstract.NIso.Homomorphism.natural_isomorphism_succ	40
Coq.Numbers.Natural.Abstract.NIso.Homomorphism.hom_nat_iso	40	1.1.1.0.0.1.3.0.0.2	synth with cache (only 1: firstorder; only 1: unfold natural_isomorphism; only 1: now rewrite N1.recursion_0; only 1: unfold natural_isomorphism; only 1: rewrite N1.recursion_succ; only 1: auto with *; only 1: auto with *; only 1: repeat red; only 1: intros; only 1: now f_equiv).	4.7737159729	1161
Coq.Numbers.Natural.Abstract.NIso.Inverse.inverse_nat_iso	40
Coq.Numbers.Natural.Abstract.NIso.Isomorphism.iso_nat_iso	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_spec'	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_square	40	0.4.0	synth with cache (only 1: intro n; only 1: apply sqrt_square; only 1: apply le_0_l).	0.355040073395	18
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_le_square	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_lt_square	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_le_lin	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_mul_above	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_succ_le	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_succ_or	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.add_sqrt_le	40
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.eq_add_0	40
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.eq_add_succ	40
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.eq_add_1	40
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.succ_add_discr	40	1.4.0.1.2.1.0.1	synth with cache (only 1: intro H; only 1: intro n; only 1: nzinduct n; only 1: apply neq_sym; only 1: apply neq_succ_0; only 1: intro n; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	30.9306509495	4623
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.add_pred_l	40
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.add_pred_r	40
Coq.Numbers.Natural.Abstract.NParity.NParityProp.odd_pred	40	0.1.0.0.0.0.0.2	synth with cache (only 1: cases ltac:(n); only 1: intro H; only 1: exfalso; only 1: now apply H; only 1: intro n; only 1: intro H; only 1: rewrite pred_succ; only 1: now rewrite <- negb_odd, odd_succ, negb_even).	6.84957695007	562
Coq.Numbers.Natural.Abstract.NParity.NParityProp.even_pred	40	2.1.2.1.0.0.0	synth with cache (only 1: intro n; only 1: intro H; only 1: rewrite <- (succ_pred n)  at 2 by trivial; only 1: symmetry; only 1: apply eq_iff_eq_true; only 1: rewrite even_spec, odd_spec; only 1: apply Odd_succ).	23.0937399864	1760
Coq.Numbers.Natural.Abstract.NParity.NParityProp.even_sub	40
Coq.Numbers.Natural.Abstract.NParity.NParityProp.odd_sub	40
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.le_add_r	40	1.1.0.5.1.0.0	synth with cache (only 1: intro n; only 1: intro H; only 1: nzinduct n; only 1: apply le_0_l; only 1: intro n; only 1: nzsimpl; only 1: now rewrite 2!lt_eq_cases, <- succ_lt_mono, succ_inj_wd).	15.1077508926	1564
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.lt_lt_add_r	40
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.lt_lt_add_l	40
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.add_pos_l	40
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.add_pos_r	40	6.0.3.1.0	synth with cache (only 1: intros; only 1: rewrite add_comm; only 1: apply add_pos_nonneg; only 1: order; only 1: apply le_0_l).	18.4700078964	1952
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_succ_r'	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_0_l	40	1.0.0.0.0	synth with cache (only 1: intros a Ha; only 1: destruct (lt_trichotomy a 0) as [LT| [EQ| GT]]; only 1: now rewrite pow_neg_r; only 1: order; only 1: now apply pow_0_l).	0.157200813293	6
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_1_l	40	0.2.7.0	synth with cache (only 1: intro n; only 1: nzsimpl; only 1: order'; only 1: apply le_0_l).	1.21861505508	133
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_mul_l	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_mul_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_eq_0	40	0.4.2.5.0	synth with cache (only 1: intro H; only 1: intuition; only 1: apply pow_eq_0 with b; only 1: apply le_0_l; only 1: trivial).	12.0330579281	1398
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_nonzero	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_l	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_l	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_gt_1	40	0.2.1.2.5	synth with cache (only 1: intros a b Ha Hb; only 1: rewrite <- (Private_NZPow.pow_1_l b) by order; only 1: apply Private_NZPow.pow_lt_mono_l; only 1: trivial; only 1: trivial).	26.5436768532	2324
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono	40	0.1.0.0.1.1.6	synth with cache (only 1: intros; only 1: transitivity (a ^ d); only 1: apply Private_NZPow.pow_le_mono_r; only 1: trivial; only 1: trivial; only 1: apply Private_NZPow.pow_le_mono_l; only 1: trivial).	27.1873209476	2159
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_inj_l	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_inj_r	40	1.2.0.1.3.1.4	synth with cache (only 1: intros a b c Ha Hc; only 1: destruct (lt_trichotomy b c) as [LT| [EQ'| GT]]; only 1: assert (a ^ b < a ^ c) by (apply Private_NZPow.pow_lt_mono_r; try split; trivial); only 1: order; only 1: trivial; only 1: assert (a ^ c < a ^ b) by (apply Private_NZPow.pow_lt_mono_r; try split; trivial); only 1: order).	19.3749859333	1760
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_l_iff	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_l_iff	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_r_iff	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_r_iff	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_gt_lin_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_lower	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_upper	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.even_pow	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.odd_pow	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.max_0_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.max_0_r	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.min_0_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.min_0_r	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.succ_max_distr	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.succ_min_distr	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_max_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_max_distr_r	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_min_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_min_distr_r	40	1.0.0.1.1.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_r; only 1: rewrite 2!min_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_r).	16.455851078	1274
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_max_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_max_distr_r	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_min_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_min_distr_r	40	1.0.0.0.1.0.0.1.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply mul_le_mono_r; only 1: rewrite 2!min_r; only 1: order; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply mul_le_mono_r).	14.2870559692	1079
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_max_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_max_distr_r	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_min_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_min_distr_r	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.strong_rec_alt	40	0	synth with cache (only 1: auto).	0.0355308055878	1
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.strong_rec0_wd	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.strong_rec_wd	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec0_0	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec0_succ	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec_0	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec0_more_steps	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec0_fixpoint	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec_fixpoint	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec_0_any	40	2.1.5.0.1	synth with cache (only 1: intros; only 1: rewrite strong_rec_alt, strong_rec0_succ; only 1: apply step_good; only 1: intros m Hm; only 1: destruct (nlt_0_r _ Hm)).	11.8227169514	168
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec_any_fst_arg	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.mod_divide	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_div_mul_exact	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_div_factor	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_div_gcd	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_mod	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_wd	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_equiv1	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_equiv2	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_div_swap	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_l	40	3.0.0	synth with cache (only 1: intro n; only 1: intro H; only 1: apply divide_mul_l, divide_refl).	0.0946719646454	6
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_r	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_div	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_least	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_comm	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_divide_iff	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_unique	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_unique_alt	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_assoc	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_0_l	40	1.0.18	synth with cache (only 1: unfold lcm; only 1: intro n; only 1: now nzsimpl).	7.54046010971	1526
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_0_r	40	0.2.0.2.1.0.1	synth with cache (only 1: intro n; only 1: apply lcm_unique; only 1: order; only 1: exists 0; only 1: now nzsimpl; only 1: apply divide_refl; only 1: trivial).	3.19306111336	356
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_1_l	40	0.0.0.0.0.9.0	synth with cache (only 1: intro n; only 1: apply lcm_unique; only 1: apply le_0_l; only 1: trivial using divide_1_l, le_0_1; only 1: exists 1; only 1: now nzsimpl'; only 1: trivial using divide_1_l, le_0_1).	3.95610809326	503
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_1_r	40	0.0.0.0.0.0	synth with cache (only 1: intro n; only 1: apply lcm_unique; only 1: apply le_0_l; only 1: trivial using divide_1_l, le_0_l, divide_refl; only 1: trivial using divide_1_l, le_0_1; only 1: trivial using divide_1_l, le_0_l, divide_refl).	0.160002231598	6
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_diag	40	0.0.0.0.3.0	synth with cache (only 1: intro n; only 1: apply lcm_unique; only 1: apply le_0_l; only 1: trivial using divide_1_l, le_0_l, divide_refl; only 1: trivial using divide_1_l, le_0_l, divide_refl; only 1: trivial using divide_1_l, le_0_1).	0.161504983902	9
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_eq_0	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_eq_r	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_iff	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_mul_mono_l	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_mul_mono_r	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_1_lcm_mul	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_0_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_succ	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_diag	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_gt	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_assoc	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_succ_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_add	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_eq_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_eq_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_eq_nz	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_add_distr	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_swap	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_sub_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_0_le	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_add_le	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_sub_le_add_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_sub_le_add_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_sub_lt_add_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_sub_lt_add_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_add_le_sub_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_add_le_sub_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_add_lt_sub_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_add_lt_sub_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_lt	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_le_mono_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_le_mono_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.mul_pred_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.mul_sub_distr_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.mul_sub_distr_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_equiv	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_equiv	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_alt_wd	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_alt_wd	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_alt_dichotomy	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_dichotomy	40
Coq.Numbers.DecimalZ.of_to	40
Coq.Numbers.DecimalZ.to_of	40
Coq.Numbers.DecimalZ.to_int_inj	40	2.1.1.1	synth with cache (only 1: intro E; only 1: assert (E' : Some n = Some n'); only 1: now rewrite <- (Signed.of_to n), <- (Signed.of_to n'), E; only 1: now injection E').	0.290441036224	9
Coq.Numbers.DecimalZ.to_int_surj	40
Coq.Numbers.DecimalZ.of_int_norm	40
Coq.Numbers.DecimalZ.of_inj	40	3.6.2	synth with cache (only 1: intros; only 1: rewrite <- !DecimalPos.Unsigned.to_of; only 1: now rewrite H).	4.24815583229	246
Coq.Numbers.DecimalZ.of_iff	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_spec_nonneg	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_nonneg	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_unique	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_wd	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_spec_alt	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_unique'	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_pred_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_le_mono	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_lt_cancel	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_le_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_lt_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_0	40	0.2.1.0.6	synth with cache (only 1: apply sqrt_unique' with 0; only 1: split; only 1: order; only 1: now nzsimpl; only 1: now nzsimpl).	0.724123001099	101
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_1	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_2	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_pos	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_lt_lin	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_le_lin	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_mul_below	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_mul_above	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_succ_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_succ_or	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_eq_succ_iff_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_add_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.add_sqrt_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_eqn0	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_eqn	40	0.0.0.4.5.1	synth with cache (only 1: intros a Ha; only 1: unfold sqrt_up; only 1: case compare_spec; only 1: order; only 1: order; only 1: order).	2.5325422287	523
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_spec	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_nonneg	40	0.1.3.0.0.2.11.0	synth with cache (only 1: intros; only 1: unfold sqrt_up; only 1: case compare_spec; only 1: order; only 1: intros Ha; only 1: apply le_le_succ_r, sqrt_nonneg; only 1: intros Ha; only 1: order).	39.8211920261	5290
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_wd	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_unique	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_succ_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_0	40	1.1.18.0	synth with cache (only 1: rewrite <- (mul_0_l 0)  at 1; only 1: rewrite sqrt_up_eqn0; only 1: order'; only 1: now nzsimpl).	5.74000000954	1042
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_1	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_2	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.le_sqrt_sqrt_up	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.le_sqrt_up_succ_sqrt	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_sqrt_up_spec	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_sqrt_up_exact	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_mono	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_lt_cancel	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_lt_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_pos	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_lt_lin	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_lin	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_mul_above	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_mul_below	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_succ_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_succ_or	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_eq_succ_iff_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_add_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.add_sqrt_up_le	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mod_unique	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_unique	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_unique	40	0.0.0.1.0.0.1.0.2.0	synth with cache (only 1: intros a b q r Ha (Hb, Hr) EQ; only 1: destruct (div_mod_unique b q (a / b) r (a mod b)); only 1: auto; only 1: apply mod_bound_pos; only 1: order; only 1: order; only 1: rewrite <- div_mod; only 1: order; only 1: order; only 1: auto).	7.33558487892	829
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_unique_exact	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_same	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_same	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_small	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_small	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_0_l	40	0.0.0.0.2.0.0	synth with cache (only 1: intro n; only 1: intro H; only 1: symmetry; only 1: apply div_unique_exact; only 1: order; only 1: order; only 1: now nzsimpl').	0.16085100174	9
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_0_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_1_r	40	0.0.3.0.2.0.1	synth with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique_exact; only 1: order; only 1: apply lt_0_1; only 1: nzsimpl; only 1: order).	9.25013995171	881
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_1_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_1_l	40	3.0.1.1	synth with cache (only 1: intros; only 1: apply div_small; only 1: intuition; only 1: order').	0.947468996048	73
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_1_l	40	3.0.1.1	synth with cache (only 1: intros; only 1: apply mod_small; only 1: intuition; only 1: apply le_0_1).	0.487049102783	47
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_mul	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_le	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_pos	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_str_pos	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_small_iff	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_small_iff	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_str_pos_iff	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_lt	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_mono	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_div_le	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_succ_div_gt	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_exact	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_lt_upper_bound	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_upper_bound	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_lower_bound	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_compat_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_add	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_add	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_add_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul_cancel_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul_cancel_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_distr_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_distr_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_mod	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_idemp_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_idemp_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.add_mod_idemp_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.add_mod_idemp_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.add_mod	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_div	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_mul_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul_le	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_divides	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_0_r	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_succ_r	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_succ_comm	40	0.2.0.1.1.1	synth with cache (only 1: intros; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.802993774414	74
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_comm	40	3.2.0.1.2.1	synth with cache (only 1: intros; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	4.87296509743	645
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_1_l	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_1_r	40	0.0	synth with cache (only 1: intro n; only 1: now nzsimpl').	0.0590260028839	2
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_assoc	40	1.1.2.4.1.3.2	synth with cache (only 1: intros n m; only 1: symmetry; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	13.1400439739	2063
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_cancel_l	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_cancel_r	40	0.0.0.0.0.0	synth with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.164327859879	6
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle0	40	0.0.0.2.6.0	synth with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	3.84784197807	463
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle1	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle2	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle3	40	0.0.0.0.0.0	synth with cache (only 1: intros n m p; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.330543994904	6
Coq.Numbers.NatInt.NZAdd.NZAddProp.sub_1_r	40	0.0	synth with cache (only 1: intro n; only 1: now nzsimpl').	0.0594789981842	2
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_wd	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_le_incl	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_refl	40	4.2.3	synth with cache (only 1: intros; only 1: apply lt_eq_cases; only 1: firstorder).	0.23165678978	61
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_succ_diag_r	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_diag_r	40	0.0.0.14.1.0	synth with cache (only 1: intro n; only 1: apply lt_eq_cases; only 1: constructor; only 1: rewrite lt_succ_r; only 1: apply lt_eq_cases; only 1: now right).	5.88526511192	1939
Coq.Numbers.NatInt.NZOrder.NZOrderProp.neq_succ_diag_l	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.neq_succ_diag_r	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nlt_succ_diag_l	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nle_succ_diag_l	40	12.0.2.2	synth with cache (only 1: intros n H; only 1: apply (lt_irrefl (S n)); only 1: rewrite lt_succ_r; only 1: auto).	7.25166296959	1583
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_l	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_gt_cases	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_trichotomy	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_asymm	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_trans	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_trans	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_strorder	40	0.0.2.9.0.0.2.23.35	synth with cache (only 1: split; only 1: intros n H; only 1: apply (lt_irrefl (S n)); only 1: rewrite lt_succ_r; only 1: false_hyp H lt_irrefl; only 1: intros n m p; only 1: generalize (lt_trans n m p); only 1: intros H H1 H2; only 1: now apply H).	12.9499390125	7711
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_preorder	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_partialorder	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_neq	40	0.0.0.1	synth with cache (only 1: intros n m; only 1: intros LT EQ; only 1: rewrite EQ in LT; only 1: false_hyp LT lt_irrefl).	0.204568862915	41
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_neq	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.eq_le_incl	40	1.1.1	synth with cache (only 1: intros; only 1: apply lt_eq_cases; only 1: auto).	0.0824749469757	15
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_stepl	40	1.0	synth with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0525708198547	3
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_stepr	40	1.0	synth with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0545721054077	3
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_stepl	40	1.0	synth with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.05189204216	3
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_stepr	40	1.0	synth with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0534760951996	3
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_lt_trans	40	4	synth with cache (only 1: order).	0.283689022064	42
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_le_trans	40	3	synth with cache (only 1: order).	0.285356998444	35
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_antisymm	40	5	synth with cache (only 1: order).	0.485517978668	66
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_r	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_succ_l	40	0.0.3.3.4	synth with cache (only 1: intros n m; only 1: intro H; only 1: apply le_succ_l; only 1: apply lt_eq_cases; only 1: now left).	1.91171503067	355
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_le_succ_r	40	0.5.8.4	synth with cache (only 1: intros; only 1: apply lt_le_incl; only 1: rewrite lt_succ_r; only 1: auto).	4.68418121338	1186
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_lt_succ_r	40	0.0.7.1	synth with cache (only 1: intros n m LE; only 1: rewrite lt_succ_r; only 1: apply lt_eq_cases; only 1: now left).	0.767776012421	127
Coq.Numbers.NatInt.NZOrder.NZOrderProp.succ_lt_mono	40	1.2.11.0	synth with cache (only 1: intros; only 1: generalize (le_gt_cases n m); only 1: rewrite lt_succ_r, le_succ_l, !lt_eq_cases; only 1: intuition).	8.56112980843	1635
Coq.Numbers.NatInt.NZOrder.NZOrderProp.succ_le_mono	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_0_1	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_0_1	40	2.5.6	synth with cache (only 1: rewrite one_succ; only 1: apply lt_le_incl; only 1: apply lt_succ_diag_r).	0.346762895584	127
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_1_2	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_0_2	40	0.5.2	synth with cache (only 1: rewrite two_succ; only 1: rewrite lt_succ_r; only 1: apply lt_le_incl, lt_0_1).	0.0674149990082	10
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_0_2	40	0.6.8.0.3	synth with cache (only 1: transitivity 1; only 1: apply lt_le_incl, lt_0_1; only 1: rewrite two_succ; only 1: apply lt_le_incl; only 1: apply lt_succ_diag_r).	2.37034201622	799
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_1_l	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_ge_cases	40	0.0.1.0.0.4	synth with cache (only 1: intro n; only 1: nzinduct m n; only 1: now right; only 1: intro m; only 1: rewrite lt_succ_r, le_succ_l, !lt_eq_cases; only 1: intuition).	1.09538388252	184
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_ge_cases	40	0.0.4.2	synth with cache (only 1: intros n m; only 1: destruct (le_gt_cases m n); only 1: intuition order; only 1: intuition order).	0.36109495163	29
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_gt_cases	40	1.2.6.2	synth with cache (only 1: intros n m; only 1: destruct (le_gt_cases n m); only 1: intuition order; only 1: intuition order).	5.26172089577	599
Coq.Numbers.NatInt.NZOrder.NZOrderProp.eq_decidable	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.eq_dne	40	0.1.7.0	synth with cache (only 1: intros; only 1: destruct (lt_trichotomy n m); only 1: intuition order; only 1: intuition order).	0.615200042725	99
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_ngt	40	0.3.0	synth with cache (only 1: intro n; only 1: intro H; only 1: intuition order).	0.345659017563	46
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nlt_ge	40	0	synth with cache (only 1: intuition order).	0.0330829620361	1
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_decidable	40	0.0.0.1.0	synth with cache (only 1: intros n m; only 1: destruct (lt_trichotomy n m) as [| [| ]]; only 1: (right; order) || (left; order); only 1: (right; order) || (left; order); only 1: (right; order) || (left; order)).	0.101058006287	6
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_dne	40	2.0.6.0	synth with cache (only 1: intros n m; only 1: generalize (le_gt_cases n m); only 1: rewrite lt_eq_cases; only 1: intuition order).	2.39640307426	370
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nle_gt	40	0	synth with cache (only 1: intuition order).	0.0337150096893	1
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_nge	40	0	synth with cache (only 1: intuition order).	0.0336949825287	1
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_decidable	40	0.0.0.1.1	synth with cache (only 1: intros n m; only 1: destruct (lt_trichotomy n m) as [| [| ]]; only 1: (right; order) || (left; order); only 1: (right; order) || (left; order); only 1: (right; order) || (left; order)).	0.101819038391	7
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_dne	40	0.0.0.0.2.0.0	synth with cache (only 1: intros n m; only 1: split; only 1: destruct (le_gt_cases n m); only 1: intuition order; only 1: intuition order; only 1: intro H; only 1: order).	0.283930063248	28
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nlt_succ_r	40	0.3.1.0.0.0.0.0	synth with cache (only 1: intros n m; only 1: split; only 1: intro H; only 1: apply le_succ_l; only 1: order; only 1: intro H; only 1: rewrite lt_succ_r; only 1: order).	5.85934591293	625
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_exists_pred_strong	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_exists_pred	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_succ_pred	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.rs_rs'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.rs'_rs''	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.rbase	40	29.0	synth with cache (only 1: intros RS' n; only 1: order).	21.8907029629	3301
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.A'A_right	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.strong_right_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.right_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.right_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.strong_right_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.ls_ls'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.ls'_ls''	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.lbase	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.A'A_left	40	1.5	synth with cache (only 1: intros L R n; only 1: firstorder).	0.337283849716	64
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.strong_left_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.left_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.left_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.strong_left_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.order_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.order_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.lt_ind	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.le_ind	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.WF.Rlt_wd	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.WF.Rgt_wd	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.WF.lt_wf	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.WF.gt_wf	40
Coq.Numbers.NatInt.NZDomain.nat_rect_wd	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.itersucc_or_itersucc	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.succ_swap_pred	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.itersucc_or_iterpred	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.itersucc0_or_iterpred0	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.initial_alt	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.initial_alt2	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.InitialExists.initial_unique	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.InitialExists.initial_ancestor	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.InitialExists.SuccPred.succ_pred_approx	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.InitialDontExists.succ_onto_gives_succ_pred	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.InitialDontExists.succ_onto_pred_injective	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.bi_induction_pred	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.central_induction_pred	40
Coq.Numbers.NatInt.NZDomain.NZOfNat.ofnat_zero	40	3.12	synth with cache (only 1: simpl; only 1: intuition).	0.459680080414	114
Coq.Numbers.NatInt.NZDomain.NZOfNat.ofnat_succ	40	0.8	synth with cache (only 1: fix le_div2 1; only 1: trivial).	0.227610826492	34
Coq.Numbers.NatInt.NZDomain.NZOfNat.ofnat_pred	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_S_gt_0	40	0.0.5	synth with cache (only 1: fix le_div2 1; only 1: intro n; only 1: trivial).	0.423681020737	46
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_S_neq_0	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_injective	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_eq	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_lt	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_le	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_add_l	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_add	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_mul	40	0.0.27	synth with cache (only 1: fix gcd_divide 1; only 1: intros; only 1: trivial).	14.0149700642	3365
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_sub_r	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_sub	40	0.14	synth with cache (only 1: fix gcd_divide 1; only 1: trivial).	5.63814878464	660
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_0_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_0_l'	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_1_r	40	0.0	synth with cache (only 1: intro n; only 1: now nzsimpl').	0.100116014481	2
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_1_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_2_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_eq_0	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_nonzero	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_eq_0_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_add_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_mul_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_mul_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_nonneg	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_pos_nonneg	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_gt_1	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_inj_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_inj_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_l_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_l_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_r_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_r_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_gt_lin_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_add_lower	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_add_upper	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_wd	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_1_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_0_r	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_0_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.eq_mul_1_nonneg	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.eq_mul_1_nonneg'	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_1_r_nonneg	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_refl	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_trans	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_antisym_nonneg	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_mono_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_mono_r	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_cancel_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_cancel_r	40	1.0.0.1.0.3.0.1	synth with cache (only 1: intros n m p; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: intro H; only 1: split; only 1: intros (q, Hq); only 1: exists q; only 1: now rewrite mul_shuffle3, mul_cancel_l in Hq; only 1: apply mul_divide_mono_l).	16.6312799454	1566
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_add_r	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_mul_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_mul_r	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_factor_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_factor_r	40	0.17.0	synth with cache (only 1: intros; only 1: rewrite mul_comm; only 1: apply divide_mul_l, divide_refl).	29.1813058853	2739
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_pos_le	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_unique	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_wd	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_divide_iff	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_unique_alt	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_comm	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_assoc	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_0_l_nonneg	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_0_r_nonneg	40	0.1.1.0.0.0	synth with cache (only 1: intros; only 1: apply gcd_unique; only 1: trivial; only 1: apply divide_refl; only 1: apply divide_0_r; only 1: trivial).	0.125664949417	8
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_1_l	40	0.0.0.0.1.1.3.0	synth with cache (only 1: intro n; only 1: apply gcd_unique; only 1: apply lt_le_incl, lt_0_1; only 1: exists 1; only 1: now nzsimpl; only 1: exists n; only 1: now nzsimpl'; only 1: trivial).	1.76933813095	230
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_1_r	40	0.0.0.0.0.0	synth with cache (only 1: intro n; only 1: apply gcd_unique; only 1: trivial using divide_1_l, le_0_1; only 1: trivial using divide_1_l, le_0_1; only 1: trivial using divide_1_l, le_0_1; only 1: trivial using divide_1_l, le_0_1).	0.123506784439	6
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_diag_nonneg	40	0.1.1.0.1.0.0	synth with cache (only 1: intro n; only 1: intro H; only 1: apply gcd_unique; only 1: trivial; only 1: apply divide_refl; only 1: apply divide_refl; only 1: trivial).	0.143733978271	10
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_eq_0_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_eq_0_r	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_eq_0	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_mul_diag_l	40	2.1.1.0.20.5	synth with cache (only 1: intros; only 1: apply gcd_unique; only 1: order; only 1: trivial using divide_refl; only 1: apply divide_mul_l, divide_refl; only 1: trivial using divide_refl).	37.4530589581	6652
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_gcd_iff	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_wd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Odd_wd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_wd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_wd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_or_Odd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.double_below	40
Coq.Numbers.NatInt.NZParity.NZParityProp.double_above	40	0.0.1.1.1.0	synth with cache (only 1: intros n m; only 1: rewrite <- le_succ_l, (mul_le_mono_pos_l (S n) m 2); only 1: rewrite two_succ; only 1: nzsimpl; only 1: now rewrite le_succ_l; only 1: order').	0.741496086121	33
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_Odd_False	40
Coq.Numbers.NatInt.NZParity.NZParityProp.orb_even_odd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.negb_odd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.negb_even	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_0	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_0	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_1	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_1	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_2	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_2	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Odd_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_succ_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Odd_succ_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_succ_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_succ_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_add	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_mul	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_mul	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_even	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add_even	40	0.0.0.5.0	synth with cache (only 1: intros n m Hm; only 1: rewrite <- !negb_even; only 1: apply even_spec in Hm; only 1: rewrite even_add, Hm; only 1: now destruct (even n)).	0.3266248703	34
Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_mul_even	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add_mul_even	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_mul_2	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add_mul_2	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_mono_l	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_mono_r	40	1.0.0.0.0.1	synth with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite <- succ_lt_mono).	0.468264818192	36
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_mono	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_mono_l	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_mono_r	40	2.0.0.0.0.1	synth with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite <- succ_le_mono).	0.387200117111	33
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_mono	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_le_mono	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_lt_mono	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_pos_pos	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_pos_nonneg	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonneg_pos	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonneg_nonneg	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_add_pos_l	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_add_pos_r	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_lt_add_lt	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_le_add_lt	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_le_add_le	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_cases	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_cases	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_neg_cases	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_pos_cases	40	0.0.0	synth with cache (only 1: intros n m H; only 1: apply add_lt_cases; only 1: now nzsimpl).	0.0907120704651	3
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonpos_cases	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonneg_cases	40	0.0.0	synth with cache (only 1: intros n m H; only 1: apply add_le_cases; only 1: now nzsimpl).	0.0897510051727	3
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_exists_sub	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_0_r	40	3.2.0.0.0	synth with cache (only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now nzsimpl').	0.171291828156	11
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_succ_r	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_comm	40	5.0.0.0.0.0	synth with cache (only 1: intros n m; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite add_cancel_r).	2.42393088341	205
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_add_distr_r	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_add_distr_l	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_assoc	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_1_l	40	3.0	synth with cache (only 1: intro n; only 1: now nzsimpl').	0.0673429965973	5
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_1_r	40	0.0	synth with cache (only 1: intro n; only 1: now nzsimpl').	0.0636301040649	2
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle0	40	0.0.0.0.1.6.0	synth with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: rewrite mul_add_distr_r; only 1: now rewrite add_cancel_r).	15.19698596	1523
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle1	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle2	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle3	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_nonneg	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_unique	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_wd	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_spec_alt	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_unique'	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pred_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_1	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pos	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_null	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_le_mono	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_lt_cancel	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_le_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_lt_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_lt_lin	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_le_lin	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_mul_below	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_mul_above	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_mul_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_double	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_same	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_succ_le	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_succ_or	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_eq_succ_is_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_eq_succ_iff_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_succ_double	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_add_le	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.add_log2_lt	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eqn0	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eqn	40	0.0.0.4.9.2	synth with cache (only 1: intros a Ha; only 1: unfold log2_up; only 1: case compare_spec; only 1: order; only 1: order; only 1: order).	5.89749097824	1182
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_spec	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_nonpos	40	0.4.0.1.1.0	synth with cache (only 1: intros a Ha; only 1: unfold log2_up; only 1: case compare_spec; only 1: order; only 1: order_pos; only 1: order).	2.47692203522	265
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_wd	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_nonneg	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_unique	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_1	40	1.17	synth with cache (only 1: apply log2_up_eqn0; only 1: order').	2.66144394875	477
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.le_log2_log2_up	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.le_log2_up_succ_log2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_log2_up_spec	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_log2_up_exact	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_pos	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_null	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_le_mono	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_lt_cancel	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_lt_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_le_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_lt_lin	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_le_lin	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_mul_above	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_mul_below	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_mul_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_double	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_same	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_le	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_or	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eq_succ_is_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eq_succ_iff_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_double	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_add_le	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.add_log2_up_lt	40
Coq.Numbers.NatInt.NZBase.NZBaseProp.eq_sym_iff	40	2.2.0	synth with cache (only 1: split; only 1: firstorder; only 1: firstorder).	0.0522589683533	7
Coq.Numbers.NatInt.NZBase.NZBaseProp.neq_sym	40	7	synth with cache (only 1: firstorder).	0.161730051041	42
Coq.Numbers.NatInt.NZBase.NZBaseProp.eq_stepl	40	0.3.25.1	synth with cache (only 1: symmetry; only 1: transitivity x; only 1: firstorder; only 1: auto).	8.6673309803	5341
Coq.Numbers.NatInt.NZBase.NZBaseProp.succ_inj	40
Coq.Numbers.NatInt.NZBase.NZBaseProp.succ_inj_wd	40
Coq.Numbers.NatInt.NZBase.NZBaseProp.succ_inj_wd_neg	40
Coq.Numbers.NatInt.NZBase.NZBaseProp.CentralInduction.central_induction	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_pred	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_pos_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_pos_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_neg_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_neg_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonneg_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonpos_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonneg_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonpos_r	40	0.1.0.0.0.1.0.0.0.1.1	synth with cache (only 1: intros n m p H1 H2; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: le_elim H1; only 1: le_elim H2; only 1: apply lt_le_incl; only 1: now apply mul_lt_mono_neg_l; only 1: apply eq_le_incl; only 1: now rewrite H2; only 1: apply eq_le_incl; only 1: rewrite H1; only 1: now do 2 rewrite mul_0_l).	21.718310833	1938
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_cancel_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_cancel_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_id_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_id_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_pos_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_pos_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_neg_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_neg_r	40	0.0.0.1.0.6.0.1	synth with cache (only 1: intros n m p; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: intro H; only 1: do 2 rewrite lt_eq_cases; only 1: rewrite (mul_lt_mono_neg_l p n m); only 1: rewrite (mul_cancel_l m n p) by (intro H1; rewrite H1 in H; false_hyp H lt_irrefl); only 1: now setoid_replace (n == m) with (m == n) by split; now intro; only 1: assumption).	23.4961910248	2431
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_pos	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_neg_neg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_neg	40	1.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (mul_0_l m); only 1: now apply mul_lt_mono_neg_r).	0.106255054474	4
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_neg_pos	40	0.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (mul_0_l m); only 1: now apply mul_lt_mono_pos_r).	0.0830681324005	3
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_cancel_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_cancel_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_cancel_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_cancel_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.lt_1_mul_pos	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_mul_0	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.neq_mul_0	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_square_0	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_mul_0_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_mul_0_r	40	0.2.2.2.0	synth with cache (only 1: intros n m H1 H2; only 1: apply eq_mul_0 in H1; only 1: destruct H1 as [H1| H1]; only 1: order; only 1: auto).	1.24151587486	115
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.lt_0_mul	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_lt_mono_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_le_mono_nonneg	40	0.0.0.0.6.1	synth with cache (only 1: intros n m H1 H2; only 1: apply mul_le_mono_nonneg; only 1: order; only 1: order; only 1: order; only 1: order).	3.064027071	324
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_lt_simpl_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_le_simpl_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_2_mono_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.add_le_mul	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.crossmul_le_addsquare	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.add_square_le	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_add_le	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.quadmul_le_squareadd	40
Coq.Structures.OrdersTac.OrderFacts.eq_refl	40	11	synth with cache (only 1: reflexivity).	0.110275030136	43
Coq.Structures.OrdersTac.OrderFacts.le_refl	40
Coq.Structures.OrdersTac.OrderFacts.lt_irrefl	40
Coq.Structures.OrdersTac.OrderFacts.eq_sym	40	6.6	synth with cache (only 1: intros; only 1: firstorder).	0.147970199585	78
Coq.Structures.OrdersTac.OrderFacts.le_antisym	40
Coq.Structures.OrdersTac.OrderFacts.neq_sym	40	1	synth with cache (only 1: auto with *).	0.0265481472015	2
Coq.Structures.OrdersTac.OrderFacts.trans	40
Coq.Structures.OrdersTac.OrderFacts.eq_neq	40
Coq.Structures.OrdersTac.OrderFacts.neq_eq	40	4	synth with cache (only 1: eauto using eq_trans, eq_sym).	3.64029979706	25
Coq.Structures.OrdersTac.OrderFacts.not_neq_eq	40
Coq.Structures.OrdersTac.OrderFacts.not_ge_lt	40
Coq.Structures.OrdersTac.OrderFacts.not_gt_le	40	1.4.0.3.2.1	synth with cache (only 1: intros x y z; only 1: destruct (P.lt_total x y); only 1: rewrite P.le_lteq; only 1: auto; only 1: rewrite ?P.le_lteq; only 1: intuition auto; subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	6.07152891159	1098
Coq.Structures.OrdersTac.OrderFacts.le_neq_lt	40	0.0.4	synth with cache (only 1: intros x y; only 1: rewrite ?P.le_lteq; only 1: intuition auto; subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.278402805328	44
Coq.Structures.OrdersEx.PairOrderedType.lt_strorder	40
Coq.Structures.OrdersEx.PairOrderedType.lt_compat	40
Coq.Structures.OrdersEx.PairOrderedType.compare_spec	40
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.bits_lt_antirefl	40	1.13	synth with cache (only 1: fix sqrtrem_spec 1; only 1: auto).	3.71012496948	461
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.bits_lt_trans	40
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.lt_compat	40	7	synth with cache (only 1: intuition).	1.99975395203	58
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.lt_strorder	40
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.compare_spec	40
Coq.Structures.OrderedTypeEx.Nat_as_OT.lt_trans	40	2.2.2	synth with cache (only 1: intros n m p; only 1: intros; only 1: now transitivity m).	0.359040975571	24
Coq.Structures.OrderedTypeEx.Nat_as_OT.lt_not_eq	40	15.1.0	synth with cache (only 1: intros n m; only 1: intro H; only 1: Nat.order).	9.42981314659	959
Coq.Structures.OrderedTypeEx.Nat_as_OT.compare	40
Coq.Structures.OrderedTypeEx.Z_as_OT.lt_trans	40	2.0	synth with cache (only 1: intros x y z; only 1: intuition auto; Z.Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.312174081802	4
Coq.Structures.OrderedTypeEx.Z_as_OT.lt_not_eq	40	0	synth with cache (only 1: Z.order).	0.0950350761414	1
Coq.Structures.OrderedTypeEx.Z_as_OT.compare	40
Coq.Structures.OrderedTypeEx.Positive_as_OT.lt_not_eq	40
Coq.Structures.OrderedTypeEx.Positive_as_OT.compare	40
Coq.Structures.OrderedTypeEx.N_as_OT.compare	40
Coq.Structures.OrderedTypeEx.PairOrderedType.eq_refl	40	3.7	synth with cache (only 1: vm_compute; only 1: auto with *).	0.740247011185	113
Coq.Structures.OrderedTypeEx.PairOrderedType.eq_sym	40	4.7.9	synth with cache (only 1: vm_compute; only 1: intros x y z; only 1: intuition).	11.2787139416	1287
Coq.Structures.OrderedTypeEx.PairOrderedType.eq_trans	40
Coq.Structures.OrderedTypeEx.PairOrderedType.lt_trans	40	6.2.3	synth with cache (only 1: intros (x1, x2) (y1, y2) (z1, z2); only 1: vm_compute; only 1: intuition eauto with ordered_type).	4.46663808823	363
Coq.Structures.OrderedTypeEx.PairOrderedType.lt_not_eq	40
Coq.Structures.OrderedTypeEx.PairOrderedType.compare	40
Coq.Structures.OrderedTypeEx.PairOrderedType.eq_dec	40
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.bits_lt_trans	40
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.lt_trans	40
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.bits_lt_antirefl	40	5.0.16	synth with cache (only 1: fix sqrtrem_spec 1; only 1: intros; only 1: eauto).	10.8543579578	1679
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.lt_not_eq	40
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.compare	40
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.eq_dec	40	1	synth with cache (only 1: decide equality).	0.132344961166	2
Coq.Structures.OrderedTypeEx.String_as_OT.nat_of_ascii_inverse	40
Coq.Structures.OrderedTypeEx.String_as_OT.lts_tail_unique	40
Coq.Structures.OrderedTypeEx.String_as_OT.lt_trans	40
Coq.Structures.OrderedTypeEx.String_as_OT.lt_not_eq	40
Coq.Structures.OrderedTypeEx.String_as_OT.compare	40
Coq.Structures.Orders.Compare2EqBool.eqb_eq	40
Coq.Structures.Orders.OT_to_Full.le_lteq	40	1.1.1	synth with cache (only 1: intuition; only 1: firstorder; only 1: firstorder).	0.0625	6
Coq.Structures.Orders.OTF_LtIsTotal.lt_total	40
Coq.Structures.Orders.OTF_to_TTLB.leb_le	40
Coq.Structures.Orders.OTF_to_TTLB.leb_total	40
Coq.Structures.Orders.OTF_to_TTLB.leb_trans	40
Coq.Structures.Orders.TTLB_to_OTF.compare_spec	40
Coq.Structures.Orders.TTLB_to_OTF.eqb_eq	40
Coq.Structures.Orders.TTLB_to_OTF.eq_equiv	40
Coq.Structures.Orders.TTLB_to_OTF.lt_strorder	40
Coq.Structures.Orders.TTLB_to_OTF.lt_compat	40
Coq.Structures.Orders.TTLB_to_OTF.le_lteq	40
Coq.Structures.DecidableTypeEx.PairDecidableType.eq_refl	40	2.6	synth with cache (only 1: vm_compute; only 1: auto).	0.35052895546	34
Coq.Structures.DecidableTypeEx.PairDecidableType.eq_sym	40	0.6.1.7	synth with cache (only 1: induction x; only 1: red; only 1: destruct 1; only 1: auto).	6.3597779274	753
Coq.Structures.DecidableTypeEx.PairDecidableType.eq_trans	40
Coq.Structures.DecidableTypeEx.PairDecidableType.eq_dec	40
Coq.Structures.DecidableTypeEx.PairUsualDecidableType.eq_dec	40
Coq.Structures.Equalities.UpdateEq.eq_equiv	40	16.0.14.0.0.7	synth with cache (only 1: constructor; only 1: firstorder; only 1: firstorder; only 1: red; only 1: firstorder; only 1: eauto).	36.677229166	19532
Coq.Structures.Equalities.HasEqDec2Bool.eqb_eq	40
Coq.Structures.Equalities.HasEqBool2Dec.eq_dec	40
Coq.Structures.Equalities.BoolEqualityFacts.eqb_compat	40
Coq.Structures.Equalities.BoolEqualityFacts.eqb_spec	40
Coq.Structures.Equalities.BoolEqualityFacts.eqb_neq	40
Coq.Structures.Equalities.BoolEqualityFacts.eqb_refl	40	0.5	synth with cache (only 1: apply eqb_eq; only 1: firstorder).	0.0672671794891	15
Coq.Structures.Equalities.BoolEqualityFacts.eqb_sym	40
Coq.Structures.OrderedType.MOT_to_OT.eq_dec	40
Coq.Structures.OrderedType.OrderedTypeFacts.eq_equiv	40
Coq.Structures.OrderedType.OrderedTypeFacts.lt_antirefl	40
Coq.Structures.OrderedType.OrderedTypeFacts.lt_strorder	40	10.1.1.1.2.11.3	synth with cache (only 1: split; only 1: repeat red; only 1: intros; only 1: absurd (eq x x); only 1: auto with ordered_type; only 1: auto with ordered_type; only 1: exact PeanoNat.Nat.lt_trans).	12.2056820393	2881
Coq.Structures.OrderedType.OrderedTypeFacts.lt_eq	40
Coq.Structures.OrderedType.OrderedTypeFacts.eq_lt	40
Coq.Structures.OrderedType.OrderedTypeFacts.lt_compat	40
Coq.Structures.OrderedType.OrderedTypeFacts.lt_total	40
Coq.Structures.OrderedType.OrderedTypeFacts.IsTO.le_lteq	40	0.0.2	synth with cache (only 1: split; only 1: auto; only 1: auto).	0.115550041199	5
Coq.Structures.OrderedType.OrderedTypeFacts.le_eq	40
Coq.Structures.OrderedType.OrderedTypeFacts.eq_le	40	6	synth with cache (only 1: order).	1.05732584	7
Coq.Structures.OrderedType.OrderedTypeFacts.neq_eq	40	1	synth with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0610611438751	2
Coq.Structures.OrderedType.OrderedTypeFacts.eq_neq	40	1	synth with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0637681484222	2
Coq.Structures.OrderedType.OrderedTypeFacts.le_lt_trans	40	6	synth with cache (only 1: order).	0.17923784256	26
Coq.Structures.OrderedType.OrderedTypeFacts.lt_le_trans	40	5	synth with cache (only 1: order).	0.305188894272	27
Coq.Structures.OrderedType.OrderedTypeFacts.le_neq	40	0.1.1.3	synth with cache (only 1: destruct (compare x y); only 1: intuition; only 1: intuition; only 1: auto).	0.259080171585	25
Coq.Structures.OrderedType.OrderedTypeFacts.le_trans	40	4	synth with cache (only 1: order).	1.05865311623	5
Coq.Structures.OrderedType.OrderedTypeFacts.le_antisym	40	1	synth with cache (only 1: order).	0.0606849193573	2
Coq.Structures.OrderedType.OrderedTypeFacts.neq_sym	40	2	synth with cache (only 1: intuition).	0.0573360919952	3
Coq.Structures.OrderedType.OrderedTypeFacts.lt_le	40	6	synth with cache (only 1: order).	0.16768693924	16
Coq.Structures.OrderedType.OrderedTypeFacts.gt_not_eq	40	3	synth with cache (only 1: order).	0.0564560890198	4
Coq.Structures.OrderedType.OrderedTypeFacts.eq_not_lt	40	1	synth with cache (only 1: order).	0.0558030605316	2
Coq.Structures.OrderedType.OrderedTypeFacts.eq_not_gt	40	1	synth with cache (only 1: order).	0.0554699897766	2
Coq.Structures.OrderedType.OrderedTypeFacts.lt_not_gt	40	1	synth with cache (only 1: order).	0.0539588928223	2
Coq.Structures.OrderedType.OrderedTypeFacts.elim_compare_eq	40
Coq.Structures.OrderedType.OrderedTypeFacts.elim_compare_lt	40	2.1.0.0.1.0.0.3.0.3.2	synth with cache (only 1: intros; only 1: case (compare x y); only 1: intros H'; only 1: exists H'; only 1: auto; only 1: intros H'; only 1: exfalso; only 1: order; only 1: intros H'; only 1: exfalso; only 1: order).	30.062087059	3163
Coq.Structures.OrderedType.OrderedTypeFacts.elim_compare_gt	40	0.2.0.0.1.0.2.1.0.1.2	synth with cache (only 1: intros; only 1: case (compare x y); only 1: intros H'; only 1: exfalso; only 1: order; only 1: intros H'; only 1: exfalso; only 1: order; only 1: intros H'; only 1: exists H'; only 1: auto).	23.3690330982	2280
Coq.Structures.OrderedType.OrderedTypeFacts.lt_dec	40
Coq.Structures.OrderedType.OrderedTypeFacts.eqb_alt	40
Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.In_eq	40	0.9.3	synth with cache (only 1: intros; only 1: rewrite <- H; only 1: auto).	2.51897001266	354
Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.ListIn_In	40	2.1.2.0.2.7	synth with cache (only 1: simple induction l; only 1: firstorder; only 1: simpl; only 1: intuition; only 1: subst; only 1: auto with ordered_type).	10.9363358021	1005
Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Inf_lt	40
Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Inf_eq	40	21.3.0	synth with cache (only 1: intros x y z; only 1: intuition; only 1: now rewrite H).	19.6766340733	3044
Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Sort_Inf_In	40
Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.ListIn_Inf	40	0.0.1.7	synth with cache (only 1: simple induction l; only 1: auto; only 1: simpl; only 1: auto).	0.796205997467	73
Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.In_Inf	40	4.1.11	synth with cache (only 1: simple induction l; only 1: auto; only 1: intuition).	2.21540188789	393
Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Inf_alt	40
Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Sort_NoDup	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_eqk	40	0.2	synth with cache (only 1: induction 1; only 1: auto).	0.0967428684235	4
Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_right_r	40	0	synth with cache (only 1: auto).	0.0643808841705	1
Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_right_l	40	0	synth with cache (only 1: auto).	0.063175201416	1
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_refl	40	3.2	synth with cache (only 1: intros; only 1: auto with ordered_type).	0.0921928882599	7
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_refl	40	2	synth with cache (only 1: auto with ordered_type).	0.0601840019226	3
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_sym	40	3.2	synth with cache (only 1: unfold eqk, eqke; only 1: auto using OrderTac.eq_sym).	0.0909440517426	7
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_sym	40	2.3.2	synth with cache (only 1: unfold eqk, eqke; only 1: intros x y z; only 1: intuition).	0.25058889389	14
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_trans	40	4.8	synth with cache (only 1: unfold eqk, eqke; only 1: eauto using OrderTac.eq_trans, OrderTac.eq_sym).	1.95631194115	256
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_trans	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_trans	40	4	synth with cache (only 1: eauto with ordered_type).	0.348783016205	23
Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_not_eqk	40	4.2	synth with cache (only 1: unfold eqk, eqke; only 1: auto with ordered_type).	0.0978848934174	8
Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_not_eqke	40	4.2.5.1	synth with cache (only 1: unfold eqk, ltk; only 1: unfold eqke; only 1: intuition; only 1: order).	6.83681797981	597
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_equiv	40	10.2.2.6	synth with cache (only 1: constructor; only 1: auto with ordered_type; only 1: auto with *; only 1: eauto with ordered_type).	13.0987021923	1359
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_equiv	40	0.0.0.2	synth with cache (only 1: constructor; only 1: eauto with ordered_type; only 1: eauto with ordered_type; only 1: eauto with ordered_type).	0.185281991959	6
Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_strorder	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_compat	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_compat'	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_not_ltk	40	1.1	synth with cache (only 1: unfold eqk, ltk; only 1: auto with ordered_type).	0.769894123077	4
Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_eqk	40	1.0	synth with cache (only 1: intros x y z; only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0973138809204	3
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_ltk	40	1.0	synth with cache (only 1: intros x y z; only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0960669517517	3
Coq.Structures.OrderedType.KeyOrderedType.Elt.InA_eqke_eqk	40	0.4.2.3	synth with cache (only 1: unfold eqk, eqke; only 1: induction 1; only 1: firstorder; only 1: auto).	2.07266902924	160
Coq.Structures.OrderedType.KeyOrderedType.Elt.In_alt	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.MapsTo_eq	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.In_eq	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.Inf_eq	40	3.0.5.13	synth with cache (only 1: intros x y z H; only 1: induction 1; only 1: auto; only 1: eauto with ordered_type).	11.6021819115	1684
Coq.Structures.OrderedType.KeyOrderedType.Elt.Inf_lt	40	3.0.5.12.0	synth with cache (only 1: intros x y z; only 1: intro; only 1: induction 1; only 1: auto; only 1: eauto with ordered_type).	10.1942448616	1596
Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_Inf_In	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_Inf_NotIn	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_NoDupA	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_In_cons_1	40	0.0.1.7.3.13	synth with cache (only 1: intros; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: eapply Sort_Inf_In; only 1: eauto with ordered_type; only 1: auto; only 1: auto).	28.5445718765	3862
Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_In_cons_2	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_In_cons_3	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.In_inv	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.In_inv_2	40	0.13.3	synth with cache (only 1: inversion 1; only 1: intuition; only 1: auto).	5.21241211891	612
Coq.Structures.OrderedType.KeyOrderedType.Elt.In_inv_3	40	0.2.3.4	synth with cache (only 1: inversion_clear 1; only 1: compute in H0; only 1: intuition; only 1: auto).	2.1015920639	167
Coq.Structures.OrdersFacts.CompareFacts.compare_eq_iff	40
Coq.Structures.OrdersFacts.CompareFacts.compare_eq	40	0.0.0.0.0.0.4	synth with cache (only 1: case compare_spec; only 1: intro H; only 1: easy; only 1: intro H; only 1: easy; only 1: intro H; only 1: easy).	0.588097810745	69
Coq.Structures.OrdersFacts.CompareFacts.compare_lt_iff	40
Coq.Structures.OrdersFacts.CompareFacts.compare_gt_iff	40
Coq.Structures.OrdersFacts.CompareFacts.compare_nlt_iff	40	0.0.0.2.1.0.0.0.0.0.1.2.1.0.3	synth with cache (only 1: case compare_spec; only 1: intro H; only 1: split; only 1: intro LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: easy; only 1: intro H; only 1: easy; only 1: intro H; only 1: split; only 1: intro LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: easy).	31.7287099361	5162
Coq.Structures.OrdersFacts.CompareFacts.compare_ngt_iff	40	0.0.0.0.0.2.1.0.0.0.1.2.1.0.2	synth with cache (only 1: case compare_spec; only 1: intro H; only 1: split; only 1: intro LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: easy; only 1: intro H; only 1: split; only 1: intro LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: easy; only 1: intro H; only 1: easy).	22.5136618614	4204
Coq.Structures.OrdersFacts.CompareFacts.compare_compat	40
Coq.Structures.OrdersFacts.CompareFacts.compare_refl	40	9.6	synth with cache (only 1: apply compare_eq_iff; only 1: firstorder).	0.559387922287	189
Coq.Structures.OrdersFacts.CompareFacts.compare_antisym	40
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_compat	40
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_preorder	40	18.2.10.11.27	synth with cache (only 1: split; only 1: repeat red; only 1: iorder; only 1: intros x y z; only 1: iorder).	8.69456410408	7616
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_order	40
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_antisym	40	7.4	synth with cache (only 1: red; only 1: order).	1.44879198074	315
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_not_gt_iff	40	15	synth with cache (only 1: iorder).	1.27986598015	323
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.lt_not_ge_iff	40	1	synth with cache (only 1: iorder).	0.0290081501007	2
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_or_gt	40
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.lt_or_ge	40	0.0.4.1.3.2	synth with cache (only 1: intros; only 1: rewrite le_lteq; only 1: destruct (OrderTac.TO.compare_spec x y); only 1: intuition; only 1: auto; only 1: auto).	2.08092093468	239
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.eq_is_le_ge	40	3.5	synth with cache (only 1: intros x y; only 1: iorder).	0.07452917099	10
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.compare_le_iff	40	17.1	synth with cache (only 1: autorewrite with order; only 1: iorder).	5.86497807503	1334
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.compare_ge_iff	40	0.1.1	synth with cache (only 1: rewrite le_not_gt_iff; only 1: rewrite compare_lt_iff; only 1: intuition).	0.0636739730835	5
Coq.Structures.OrdersFacts.OrderedTypeFacts.lt_dec	40
Coq.Structures.OrdersFacts.OrderedTypeFacts.if_eq_dec	40
Coq.Structures.OrdersFacts.OrderedTypeFacts.eqb_alt	40
Coq.Structures.OrdersFacts.OrderedTypeFacts.eqb_compat	40
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_not_eq	40	3.0	synth with cache (only 1: intro H; only 1: order).	0.0744678974152	5
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_eq	40	1	synth with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0390830039978	2
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_lt	40	1	synth with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0360560417175	2
Coq.Structures.OrdersFacts.OrderedTypeTest.le_eq	40	4.4	synth with cache (only 1: intro H; only 1: order).	2.73799800873	18
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_le	40	4.2	synth with cache (only 1: intro H; only 1: order).	2.71021103859	12
Coq.Structures.OrdersFacts.OrderedTypeTest.neq_eq	40	5	synth with cache (only 1: order).	1.03139400482	6
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_neq	40	6	synth with cache (only 1: order).	2.72053098679	17
Coq.Structures.OrdersFacts.OrderedTypeTest.le_lt_trans	40	3.1	synth with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: order).	0.0526850223541	6
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_le_trans	40	3.1	synth with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: order).	0.0541050434113	6
Coq.Structures.OrdersFacts.OrderedTypeTest.le_trans	40	5	synth with cache (only 1: order).	1.90401005745	11
Coq.Structures.OrdersFacts.OrderedTypeTest.le_antisym	40	4.1	synth with cache (only 1: intuition; only 1: order).	0.161547899246	25
Coq.Structures.OrdersFacts.OrderedTypeTest.le_neq	40	3.1	synth with cache (only 1: intuition; only 1: order).	0.0713670253754	12
Coq.Structures.OrdersFacts.OrderedTypeTest.neq_sym	40	4.1	synth with cache (only 1: intro H; only 1: order).	0.183471918106	7
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_le	40	0.0.0	synth with cache (only 1: intro H; only 1: rewrite H; only 1: apply irreflexivity).	0.0723721981049	3
Coq.Structures.OrdersFacts.OrderedTypeTest.gt_not_eq	40	4.0	synth with cache (only 1: intro H; only 1: order).	0.239272117615	6
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_not_lt	40	0.1.0	synth with cache (only 1: intro H; only 1: rewrite H; only 1: apply irreflexivity).	0.0616900920868	4
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_not_gt	40	0.1.0	synth with cache (only 1: intro H; only 1: rewrite H; only 1: apply irreflexivity).	0.0634291172028	4
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_not_gt	40	0.0.0	synth with cache (only 1: intro H; only 1: rewrite H; only 1: apply irreflexivity).	0.0721158981323	3
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_is_nlt_ngt	40	4.7.7.2	synth with cache (only 1: intuition; only 1: order; only 1: order; only 1: order).	17.0936839581	4033
Coq.Structures.OrdersFacts.OrderedTypeRev.lt_strorder	40
Coq.Structures.OrdersFacts.OrderedTypeRev.lt_compat	40	3.5	synth with cache (only 1: unfold lt; only 1: auto with *).	0.276114940643	51
Coq.Structures.OrdersFacts.OrderedTypeRev.le_lteq	40
Coq.Structures.OrdersFacts.OrderedTypeRev.compare_spec	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_spec	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_eq	40	2.0	synth with cache (only 1: intros H; only 1: now apply compare_eq_iff).	0.040990114212	4
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_refl	40	10.6	synth with cache (only 1: apply compare_eq_iff; only 1: firstorder).	0.270583152771	178
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_gt_iff	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_ge_iff	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_ngt_iff	40	3	synth with cache (only 1: now rewrite <- compare_lt_iff, compare_antisym, CompOpp_iff).	0.031585931778	4
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_nlt_iff	40	4	synth with cache (only 1: now rewrite <- compare_lt_iff, compare_antisym, CompOpp_iff).	0.0355598926544	5
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_nle_iff	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_nge_iff	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.lt_irrefl	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.lt_eq_cases	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_spec0	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_spec	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_spec0	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_spec	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_nle	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_gt	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_nlt	40	0.0.26	synth with cache (only 1: case ltb_spec0; only 1: intuition; only 1: intuition).	31.6341588497	7115
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_ge	40	0.5.14	synth with cache (only 1: rewrite <- compare_le_iff; only 1: rewrite compare_gt_iff; only 1: now rewrite <- not_true_iff_false, ltb_lt).	13.922216177	2728
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_refl	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_antisym	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_irrefl	40	0.3.27	synth with cache (only 1: case ltb_spec0; only 1: now rewrite <- compare_lt_iff, compare_refl; only 1: now rewrite <- compare_lt_iff, compare_refl).	4.45632410049	1610
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_antisym	40
Coq.Structures.OrdersFacts.BoolOrderFacts.eqb_compare	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_compare	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_compare	40
Coq.Structures.OrdersLists.OrderedTypeLists.In_eq	40	0.5	synth with cache (only 1: induction 1; only 1: auto).	0.382595062256	24
Coq.Structures.OrdersLists.OrderedTypeLists.ListIn_In	40	2.2.2.2.7	synth with cache (only 1: simple induction l; only 1: firstorder; only 1: firstorder; only 1: subst; only 1: firstorder).	13.2995419502	945
Coq.Structures.OrdersLists.OrderedTypeLists.Inf_lt	40
Coq.Structures.OrdersLists.OrderedTypeLists.Inf_eq	40	0.13.11.2	synth with cache (only 1: intros x y z; only 1: intro; only 1: rewrite <- H; only 1: auto).	36.4758689404	4879
Coq.Structures.OrdersLists.OrderedTypeLists.Sort_Inf_In	40
Coq.Structures.OrdersLists.OrderedTypeLists.ListIn_Inf	40	0.0.0.9	synth with cache (only 1: simple induction l; only 1: auto; only 1: simpl; only 1: auto).	0.764516115189	106
Coq.Structures.OrdersLists.OrderedTypeLists.In_Inf	40	2.0.11	synth with cache (only 1: simple induction l; only 1: auto; only 1: firstorder).	1.53703284264	208
Coq.Structures.OrdersLists.OrderedTypeLists.Inf_alt	40
Coq.Structures.OrdersLists.OrderedTypeLists.Sort_NoDup	40
Coq.Structures.OrdersLists.KeyOrderedType.ltk_compat	40
Coq.Structures.OrdersLists.KeyOrderedType.ltk_compat'	40
Coq.Structures.OrdersLists.KeyOrderedType.pair_compat	40	2	synth with cache (only 1: firstorder).	0.0690748691559	3
Coq.Structures.OrdersLists.KeyOrderedType.Elt.ltk_not_eqk	40
Coq.Structures.OrdersLists.KeyOrderedType.Elt.ltk_not_eqke	40	1.1.3	synth with cache (only 1: intros LT EQ; only 1: rewrite EQ in LT; only 1: elim (StrictOrder_Irreflexive _ LT)).	1.31576299667	19
Coq.Structures.OrdersLists.KeyOrderedType.Elt.Inf_eq	40	5	synth with cache (only 1: now intros <-).	0.120633125305	14
Coq.Structures.OrdersLists.KeyOrderedType.Elt.Inf_lt	40
Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_Inf_In	40
Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_Inf_NotIn	40
Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_NoDupA	40
Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_In_cons_1	40
Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_In_cons_2	40
Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_In_cons_3	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_eqk	40	2	synth with cache (only 1: firstorder).	0.0711691379547	3
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_def	40	0	synth with cache (only 1: auto).	0.0678579807281	1
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_def'	40	0	synth with cache (only 1: auto).	0.0778779983521	1
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_1	40	2	synth with cache (only 1: firstorder).	0.0866980552673	3
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_2	40	3	synth with cache (only 1: now destruct 1).	0.0802071094513	4
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqk_def	40	0	synth with cache (only 1: auto).	0.078351020813	1
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqk_def'	40	0	synth with cache (only 1: auto).	0.0743169784546	1
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqk_1	40	0	synth with cache (only 1: auto).	0.0753560066223	1
Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqke_eqk	40	0.4.8	synth with cache (only 1: induction 1; only 1: firstorder; only 1: auto).	1.67950487137	213
Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqk_eqke	40	2.2.3	synth with cache (only 1: induction 1; only 1: firstorder; only 1: firstorder).	0.184919118881	17
Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqk	40	0.0.14.4.4.19	synth with cache (only 1: intro; only 1: induction 1; only 1: constructor; only 1: rewrite <- H; only 1: auto; only 1: auto).	26.2691230774	6126
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_alt	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_alt'	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_alt2	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_nil	40	4.7	synth with cache (only 1: firstorder; only 1: inversion_clear H).	3.88458800316	291
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_cons	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.MapsTo_compat	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_compat	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.MapsTo_eq	40	23	synth with cache (only 1: now intros <-).	3.10229206085	444
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_eq	40	2	synth with cache (only 1: now intros <-).	0.198356866837	3
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_inv	40	0.19	synth with cache (only 1: rewrite !In_alt2, Exists_cons; only 1: auto).	5.62332296371	510
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_inv_2	40	0.2.18.4	synth with cache (only 1: firstorder; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: firstorder; only 1: auto).	9.93439006805	1542
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_inv_3	40	0.3.3.2	synth with cache (only 1: firstorder; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: firstorder; only 1: auto).	0.685288906097	69
Coq.Structures.EqualitiesFacts.PairDecidableType.eq_dec	40
Coq.Structures.EqualitiesFacts.PairUsualDecidableType.eq_dec	40
Coq.Structures.DecidableType.KeyDecidableType.Elt.eqke_eqk	40	0.2	synth with cache (only 1: induction 1; only 1: auto).	0.0853111743927	4
Coq.Structures.DecidableType.KeyDecidableType.Elt.eqk_refl	40	0	synth with cache (only 1: auto).	0.0516729354858	1
Coq.Structures.DecidableType.KeyDecidableType.Elt.eqke_refl	40	0	synth with cache (only 1: auto).	0.0518419742584	1
Coq.Structures.DecidableType.KeyDecidableType.Elt.eqk_sym	40	0	synth with cache (only 1: auto).	0.0526950359344	1
Coq.Structures.DecidableType.KeyDecidableType.Elt.eqke_sym	40	0.2	synth with cache (only 1: induction 1; only 1: auto).	0.0875220298767	4
Coq.Structures.DecidableType.KeyDecidableType.Elt.eqk_trans	40	9	synth with cache (only 1: eauto).	0.180063962936	21
Coq.Structures.DecidableType.KeyDecidableType.Elt.eqke_trans	40
Coq.Structures.DecidableType.KeyDecidableType.Elt.eqk_equiv	40	8.0.0.2	synth with cache (only 1: constructor; only 1: auto; only 1: auto; only 1: eauto).	1.56513094902	193
Coq.Structures.DecidableType.KeyDecidableType.Elt.eqke_equiv	40	1.0.0.3	synth with cache (only 1: split; only 1: auto; only 1: auto; only 1: eauto).	0.152770996094	8
Coq.Structures.DecidableType.KeyDecidableType.Elt.InA_eqke_eqk	40	0.3.2.4	synth with cache (only 1: unfold eqke; only 1: induction 1; only 1: intuition; only 1: auto).	2.25403594971	157
Coq.Structures.DecidableType.KeyDecidableType.Elt.InA_eqk	40	0.17.4.2	synth with cache (only 1: intros x y z; only 1: intuition auto; PeanoNat.Nat.Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: rewrite <- H; only 1: auto).	7.67172908783	1739
Coq.Structures.DecidableType.KeyDecidableType.Elt.In_alt	40
Coq.Structures.DecidableType.KeyDecidableType.Elt.MapsTo_eq	40
Coq.Structures.DecidableType.KeyDecidableType.Elt.In_eq	40
Coq.Structures.DecidableType.KeyDecidableType.Elt.In_inv	40
Coq.Structures.DecidableType.KeyDecidableType.Elt.In_inv_2	40	0.7.5	synth with cache (only 1: inversion 1; only 1: intuition; only 1: auto).	1.87208604813	193
Coq.Structures.DecidableType.KeyDecidableType.Elt.In_inv_3	40	0.4.5.3	synth with cache (only 1: inversion_clear 1; only 1: compute in H0; only 1: intuition; only 1: auto).	2.92915081978	307
Coq.Structures.OrdersAlt.Update_OT.lt_strorder	40
Coq.Structures.OrdersAlt.Update_OT.lt_compat	40
Coq.Structures.OrdersAlt.Update_OT.compare_spec	40
Coq.Structures.OrdersAlt.Backport_OT.lt_not_eq	40
Coq.Structures.OrdersAlt.Backport_OT.lt_trans	40	10	synth with cache (only 1: intuition).	0.170953989029	26
Coq.Structures.OrdersAlt.Backport_OT.compare	40
Coq.Structures.OrdersAlt.OT_from_Alt.eq_equiv	40
Coq.Structures.OrdersAlt.OT_from_Alt.lt_strorder	40
Coq.Structures.OrdersAlt.OT_from_Alt.lt_eq	40
Coq.Structures.OrdersAlt.OT_from_Alt.eq_lt	40
Coq.Structures.OrdersAlt.OT_from_Alt.lt_compat	40
Coq.Structures.OrdersAlt.OT_from_Alt.compare_spec	40
Coq.Structures.OrdersAlt.OT_from_Alt.eq_dec	40	3.2	synth with cache (only 1: unfold eq, lt, compare; only 1: decide equality).	0.0929579734802	7
Coq.Structures.OrdersAlt.OT_to_Alt.compare_sym	40
Coq.Structures.OrdersAlt.OT_to_Alt.compare_Eq	40
Coq.Structures.OrdersAlt.OT_to_Alt.compare_Lt	40
Coq.Structures.OrdersAlt.OT_to_Alt.compare_Gt	40
Coq.Structures.OrdersAlt.OT_to_Alt.compare_trans	40
Coq.Structures.GenericMinMax.GenericMinMax.ge_not_lt	40
Coq.Structures.GenericMinMax.GenericMinMax.max_l	40
Coq.Structures.GenericMinMax.GenericMinMax.max_r	40
Coq.Structures.GenericMinMax.GenericMinMax.min_l	40
Coq.Structures.GenericMinMax.GenericMinMax.min_r	40	0.0.0.1.1.0.1.2.0	synth with cache (only 1: intros; only 1: unfold min, gmin; only 1: case compare_spec; only 1: auto with relations; only 1: intros; only 1: elim (ge_not_lt x y); only 1: auto; only 1: auto; only 1: auto with relations).	1.75980591774	307
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_spec	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_spec_le	40	1.0.0.0.0.0.1.1.0.1.0.0.2	synth with cache (only 1: destruct (lt_total n m); only 1: left; only 1: split; only 1: rewrite le_lteq; only 1: auto; only 1: apply max_r; only 1: rewrite le_lteq; only 1: auto; only 1: right; only 1: assert (m <= n) by (rewrite le_lteq; intuition); only 1: split; only 1: auto; only 1: now apply max_l).	8.77795505524	1509
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.Proper_instance_0	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_compat	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_unicity	40	11.11.18	synth with cache (only 1: destruct (max_spec n m); only 1: intuition order; only 1: intuition order).	21.1888151169	8174
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_unicity_ext	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_mono	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_id	40	2.15	synth with cache (only 1: apply max_r; only 1: order).	0.236065864563	148
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_assoc	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_comm	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_max_l	40	0.1.0.1.16	synth with cache (only 1: destruct (max_spec n m); only 1: intuition; only 1: order; only 1: intuition; only 1: order).	2.49839615822	711
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_max_r	40	2	synth with cache (only 1: solve_max).	0.0345849990845	3
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_l_iff	40	5	synth with cache (only 1: solve_max).	0.149526119232	28
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_r_iff	40	2	synth with cache (only 1: solve_max).	0.0843720436096	18
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_iff	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lt_iff	40	3.0.1.2.0.1.2.3.2	synth with cache (only 1: split; only 1: destruct (max_spec n m); only 1: right; only 1: intuition; only 1: order; only 1: left; only 1: intuition; only 1: order; only 1: solve_max).	11.2507638931	1720
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_l	40	7	synth with cache (only 1: solve_max).	0.110393047333	16
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_r	40	4	synth with cache (only 1: solve_max).	0.0378930568695	5
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub	40	6	synth with cache (only 1: solve_max).	0.157541036606	16
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_iff	40	1.5.1	synth with cache (only 1: split; only 1: solve_max; only 1: solve_max).	0.191068172455	20
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_lt	40	5	synth with cache (only 1: solve_max).	0.040824174881	6
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_lt_iff	40	3	synth with cache (only 1: solve_max).	0.670372009277	66
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_compat_l	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_compat_r	40	2.2.0	synth with cache (only 1: intros; only 1: apply max_lub_iff; only 1: solve_max).	0.160588026047	7
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_compat	40	3.3.1	synth with cache (only 1: intros; only 1: apply max_lub_iff; only 1: solve_max).	0.114637136459	10
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_spec	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_spec_le	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_compat	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_unicity	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_unicity_ext	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_mono	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_id	40	0.19	synth with cache (only 1: apply min_l; only 1: order).	0.262709140778	186
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_assoc	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_comm	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_min_r	40	0.1.0.1.20	synth with cache (only 1: destruct (min_spec n m); only 1: intuition; only 1: order; only 1: intuition; only 1: order).	3.57536315918	1093
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_min_l	40	2	synth with cache (only 1: solve_min).	0.036600112915	3
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_l_iff	40	2	synth with cache (only 1: solve_min).	0.0900011062622	17
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_r_iff	40	2	synth with cache (only 1: solve_min).	0.0840458869934	17
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le	40	0.0.3.11	synth with cache (only 1: pose proof (min_spec n m) as Hm; only 1: intuition; only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order)).	12.1721880436	2191
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_iff	40	0.0.0.0.0.0.0.0.5	synth with cache (only 1: destruct (min_spec n m); only 1: intuition; only 1: order || (right; order) || (left; order); only 1: order; only 1: order; only 1: intuition; only 1: order || (right; order) || (left; order); only 1: order; only 1: order).	10.8430249691	1483
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_lt_iff	40	0.0.2.0.1.3.3	synth with cache (only 1: split; only 1: destruct (min_spec n m); only 1: intuition; only 1: order || (right; order) || (left; order); only 1: intuition; only 1: order || (right; order) || (left; order); only 1: solve_min).	19.2640550137	1695
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_l	40	8	synth with cache (only 1: solve_min).	0.138407945633	23
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_r	40	2	synth with cache (only 1: solve_min).	0.0388531684875	3
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb	40	4	synth with cache (only 1: solve_min).	0.1167781353	5
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_iff	40	0.4.1	synth with cache (only 1: split; only 1: solve_min; only 1: solve_min).	0.233131885529	25
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_lt	40	4	synth with cache (only 1: solve_min).	0.0420911312103	5
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_lt_iff	40	0.0.0.0.0.0.0.0.1	synth with cache (only 1: destruct (min_spec n m); only 1: intuition; only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order); only 1: order; only 1: intuition; only 1: order || (right; order) || (left; order); only 1: order; only 1: order).	0.181010007858	10
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_compat_l	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_compat_r	40	0.3.0	synth with cache (only 1: intros; only 1: apply min_glb_iff; only 1: solve_min).	0.118546962738	6
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_compat	40	4.4.0	synth with cache (only 1: intros Hnm Hpq; only 1: apply min_glb_iff; only 1: solve_min).	0.705440998077	100
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_absorption	40	0.2	synth with cache (only 1: apply max_r || apply max_l; only 1: solve_min).	0.0531890392303	4
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_absorption	40	0.8	synth with cache (only 1: apply min_r || apply min_l; only 1: solve_max).	0.162723064423	27
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_distr	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_distr	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_modular	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_modular	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_disassoc	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_antimono	40	1.1.0.1.0.0.1.1.1.0.2.0	synth with cache (only 1: intros Eqf Lef x y; only 1: destruct (min_spec x y) as [(H, E)| (H, E)]; only 1: rewrite E; only 1: destruct (max_spec (f x) (f y)) as [(H', E')| (H', E')]; only 1: assert (f y <= f x) by (apply Lef; order); only 1: order; only 1: auto; only 1: rewrite E; only 1: destruct (max_spec (f x) (f y)) as [(H', E')| (H', E')]; only 1: auto; only 1: assert (f x <= f y) by (apply Lef; order); only 1: order).	14.8120160103	2758
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_antimono	40	1.2.0.2.0.0.1.2.2.0.0.0	synth with cache (only 1: intros Eqf Lef x y; only 1: destruct (max_spec x y) as [(H, E)| (H, E)]; only 1: rewrite E; only 1: destruct (min_spec (f x) (f y)) as [(H', E')| (H', E')]; only 1: assert (f y <= f x) by (apply Lef; order); only 1: order; only 1: auto; only 1: rewrite E; only 1: destruct (min_spec (f x) (f y)) as [(H', E')| (H', E')]; only 1: auto; only 1: assert (f x <= f y) by (apply Lef; order); only 1: order).	34.2138438225	6162
Coq.Structures.GenericMinMax.MinMaxDecProperties.max_case_strong	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.max_case	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.max_dec	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.min_case_strong	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.min_case	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.min_dec	40	0.0.0.0.0.0.0.0.1.19	synth with cache (only 1: apply min_case_strong; only 1: intros x y H [E| E]; only 1: left; only 1: rewrite <- H; only 1: auto; only 1: right; only 1: rewrite <- H; only 1: auto; only 1: auto with relations; only 1: auto with relations).	5.31086397171	2182
Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.max_monotone	40	0.2.18.1	synth with cache (only 1: intros x y z; only 1: apply max_mono; only 1: eauto with *; only 1: auto).	3.2346971035	1081
Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.min_monotone	40	0.1.30.2	synth with cache (only 1: intros; only 1: apply min_mono; only 1: congruence; only 1: auto).	8.34781694412	4008
Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.min_max_antimonotone	40
Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.max_min_antimonotone	40
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.max_case_strong	40	0.0.0.3.3.7.7	synth with cache (only 1: intuition; only 1: apply max_case_strong; only 1: intros; only 1: rewrite <- H; only 1: auto; only 1: auto; only 1: auto).	6.77876591682	1854
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.max_case	40	0.0.2.2	synth with cache (only 1: intros; only 1: apply Private_Dec.max_case_strong; only 1: auto; only 1: auto).	0.0748219490051	8
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.max_dec	40	0.0.1.6	synth with cache (only 1: intros; only 1: apply Private_Dec.max_case; only 1: auto with relations; only 1: auto with relations).	0.262615919113	49
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_case_strong	40	0.0.1.9.2	synth with cache (only 1: intros; only 1: apply min_case_strong; only 1: congruence; only 1: auto; only 1: auto).	1.04388999939	285
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_case	40	0.0.3.2	synth with cache (only 1: intros; only 1: apply Private_Dec.min_case_strong; only 1: auto; only 1: auto).	0.0741989612579	9
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_dec	40	0.0.2.5	synth with cache (only 1: intros; only 1: apply Private_Dec.min_case; only 1: auto with relations; only 1: auto with relations).	0.204190015793	40
Coq.Structures.GenericMinMax.TOMaxEqDec_to_Compare.compare_spec	40
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.eq_refl	40
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.eq_sym	40
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.lt_not_eq	40
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.compare	40
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.eq_dec	40	4.2	synth with cache (only 1: unfold eq; only 1: decide equality).	0.108771085739	8
Coq.Structures.OrderedTypeAlt.OrderedType_to_Alt.compare_sym	40
Coq.Structures.OrderedTypeAlt.OrderedType_to_Alt.compare_trans	40
Coq.ZArith.Znat.nat_N_Z	40	1.0.0.2.0.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: destruct n as [| [| n]]; only 1: trivial; only 1: trivial; only 1: trivial).	0.336320877075	11
Coq.ZArith.Znat.N_nat_Z	40	0.1.0.0.0.0.2.1.0.13	synth with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: apply Pos2Nat.inj; only 1: rewrite H; only 1: apply SuccNat2Pos.id_succ).	6.77907896042	707
Coq.ZArith.Znat.positive_nat_Z	40	0.0.0.0.0	synth with cache (only 1: destruct (Pos2Nat.is_succ p) as (m, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv).	0.216611146927	5
Coq.ZArith.Znat.positive_N_Z	40	0	synth with cache (only 1: reflexivity).	0.0814108848572	1
Coq.ZArith.Znat.positive_N_nat	40	0	synth with cache (only 1: trivial).	0.0774641036987	1
Coq.ZArith.Znat.positive_nat_N	40	0.1.0.0.0.0.0	synth with cache (only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: apply Pos2Nat.inj; only 1: rewrite H; only 1: apply SuccNat2Pos.id_succ).	0.262099027634	8
Coq.ZArith.Znat.Z_N_nat	40	0.0.0.3	synth with cache (only 1: induction n; only 1: trivial; only 1: trivial; only 1: trivial).	0.183293819427	7
Coq.ZArith.Znat.Z_nat_N	40	0.0.1.0.0.0.1.0.0.11	synth with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv; only 1: simpl; only 1: trivial).	10.0100209713	743
Coq.ZArith.Znat.Zabs_N_nat	40	0	synth with cache (only 1: now destruct n).	0.0836219787598	1
Coq.ZArith.Znat.Zabs_nat_N	40	2.0.2.0.0.0.0	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply positive_nat_N; only 1: simpl; only 1: apply positive_nat_N).	4.9501490593	231
Coq.ZArith.Znat.N2Z.id	40	0	synth with cache (only 1: now destruct n).	0.0853228569031	1
Coq.ZArith.Znat.N2Z.inj	40	1.0.0.0.0.0.0.0.1.2	synth with cache (only 1: destruct n, m; only 1: trivial; only 1: simpl; only 1: intros H; only 1: destr_eq H; only 1: simpl; only 1: intros H; only 1: destr_eq H; only 1: simpl; only 1: congruence).	26.6468188763	1267
Coq.ZArith.Znat.N2Z.inj_iff	40	0.0.9.0	synth with cache (only 1: split; only 1: apply SuccNat2Pos.inj; only 1: intro H; only 1: now Morphisms.f_equiv).	34.8976070881	1712
Coq.ZArith.Znat.N2Z.is_nonneg	40	14.81	synth with cache (only 1: repeat red; only 1: now destruct n).	15.2437880039	8254
Coq.ZArith.Znat.N2Z.inj_0	40	0	synth with cache (only 1: trivial).	0.0998868942261	1
Coq.ZArith.Znat.N2Z.inj_pos	40	0	synth with cache (only 1: reflexivity).	0.0805242061615	1
Coq.ZArith.Znat.N2Z.inj_compare	40	0.0.0.0.2.0.0.0	synth with cache (only 1: destruct n, m; only 1: simpl; only 1: trivial; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	0.516430854797	22
Coq.ZArith.Znat.N2Z.inj_le	40
Coq.ZArith.Znat.N2Z.inj_lt	40
Coq.ZArith.Znat.N2Z.inj_ge	40	27	synth with cache (only 1: now destruct n, m).	13.8453860283	1649
Coq.ZArith.Znat.N2Z.inj_gt	40	33	synth with cache (only 1: now destruct n, m).	19.65280509	2639
Coq.ZArith.Znat.N2Z.inj_abs_N	40
Coq.ZArith.Znat.N2Z.inj_add	40	0	synth with cache (only 1: now destruct n, m).	0.0968339443207	1
Coq.ZArith.Znat.N2Z.inj_mul	40	0	synth with cache (only 1: now destruct n, m).	0.0958271026611	1
Coq.ZArith.Znat.N2Z.inj_sub_max	40
Coq.ZArith.Znat.N2Z.inj_sub	40
Coq.ZArith.Znat.N2Z.inj_succ	40	0.1.0.5	synth with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: now rewrite Pos.add_1_r).	1.88890218735	15
Coq.ZArith.Znat.N2Z.inj_pred_max	40	4.1.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: now destruct p).	0.217809915543	9
Coq.ZArith.Znat.N2Z.inj_pred	40	10.5.0	synth with cache (only 1: intro H; only 1: unfold Z.succ, Z.pred; only 1: now destruct n as [| [p| p| ]]).	15.1472058296	1289
Coq.ZArith.Znat.N2Z.inj_min	40
Coq.ZArith.Znat.N2Z.inj_max	40
Coq.ZArith.Znat.N2Z.inj_div	40
Coq.ZArith.Znat.N2Z.inj_mod	40
Coq.ZArith.Znat.N2Z.inj_quot	40
Coq.ZArith.Znat.N2Z.inj_rem	40
Coq.ZArith.Znat.N2Z.inj_div2	40	12.0.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: now destruct p).	8.06738090515	937
Coq.ZArith.Znat.N2Z.inj_quot2	40	1.0.0	synth with cache (only 1: destruct n as [| p]; only 1: trivial; only 1: now destruct p).	0.176400899887	4
Coq.ZArith.Znat.N2Z.inj_pow	40
Coq.ZArith.Znat.N2Z.inj_testbit	40	0.0.1.0.0.0.0.0.0	synth with cache (only 1: destruct a as [| a], n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now destruct a; only 1: simpl; only 1: trivial).	0.354816913605	10
Coq.ZArith.Znat.Z2N.id	40	1.0.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: trivial; only 1: now destruct 1).	0.206533908844	5
Coq.ZArith.Znat.Z2N.inj	40
Coq.ZArith.Znat.Z2N.inj_iff	40	2.1.1.7	synth with cache (only 1: intuition; only 1: rewrite <- (id n), <- (id m) by trivial; only 1: now f_equal; only 1: now Morphisms.f_equiv).	19.4092428684	1059
Coq.ZArith.Znat.Z2N.inj_0	40	0	synth with cache (only 1: trivial).	0.096451997757	1
Coq.ZArith.Znat.Z2N.inj_pos	40	0	synth with cache (only 1: now destruct n).	0.0894658565521	1
Coq.ZArith.Znat.Z2N.inj_neg	40	0	synth with cache (only 1: trivial).	0.0860631465912	1
Coq.ZArith.Znat.Z2N.inj_add	40	5.4	synth with cache (only 1: intuition; only 1: now destruct n, m).	0.599696874619	70
Coq.ZArith.Znat.Z2N.inj_mul	40	1.0.0.0.0.0.0.0.0.1	synth with cache (only 1: destruct n, m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: now destruct 1 || now destruct 2).	30.4816770554	693
Coq.ZArith.Znat.Z2N.inj_succ	40	1.2.0.3.0.0.1	synth with cache (only 1: destruct n; only 1: intro n; only 1: trivial; only 1: intro H; only 1: simpl; only 1: now rewrite Pos.add_1_r; only 1: now destruct 1 || trivial).	19.226031065	947
Coq.ZArith.Znat.Z2N.inj_sub	40
Coq.ZArith.Znat.Z2N.inj_pred	40	0.0.1.0.0.0.3	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now destruct p; only 1: simpl; only 1: trivial).	1.84265494347	66
Coq.ZArith.Znat.Z2N.inj_compare	40	3.10	synth with cache (only 1: intuition; only 1: now destruct n, m).	29.4146139622	1095
Coq.ZArith.Znat.Z2N.inj_le	40
Coq.ZArith.Znat.Z2N.inj_lt	40
Coq.ZArith.Znat.Z2N.inj_min	40
Coq.ZArith.Znat.Z2N.inj_max	40
Coq.ZArith.Znat.Z2N.inj_div	40
Coq.ZArith.Znat.Z2N.inj_mod	40
Coq.ZArith.Znat.Z2N.inj_quot	40
Coq.ZArith.Znat.Z2N.inj_rem	40
Coq.ZArith.Znat.Z2N.inj_div2	40	0.0.0.0.0.0.0.2.0.0.6	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: destruct p; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: trivial; only 1: simpl; only 1: trivial).	31.6643309593	1100
Coq.ZArith.Znat.Z2N.inj_quot2	40	2.2.0.0	synth with cache (only 1: destruct n as [| p| p]; only 1: trivial; only 1: now destruct p; only 1: now destruct p).	0.366940975189	19
Coq.ZArith.Znat.Z2N.inj_pow	40
Coq.ZArith.Znat.Z2N.inj_testbit	40
Coq.ZArith.Znat.Zabs2N.abs_N_spec	40	0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.291605949402	7
Coq.ZArith.Znat.Zabs2N.abs_N_nonneg	40	1.0.0.3	synth with cache (only 1: destruct n; only 1: trivial; only 1: trivial; only 1: now destruct 1 || trivial).	0.243447065353	15
Coq.ZArith.Znat.Zabs2N.id_abs	40	4	synth with cache (only 1: now destruct n).	0.152652025223	14
Coq.ZArith.Znat.Zabs2N.id	40	0	synth with cache (only 1: now destruct n).	0.0875809192657	1
Coq.ZArith.Znat.Zabs2N.inj_0	40	0	synth with cache (only 1: reflexivity).	0.0942449569702	1
Coq.ZArith.Znat.Zabs2N.inj_pos	40	0	synth with cache (only 1: trivial).	0.0816400051117	1
Coq.ZArith.Znat.Zabs2N.inj_neg	40	0	synth with cache (only 1: trivial).	0.0801410675049	1
Coq.ZArith.Znat.Zabs2N.inj_opp	40	0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.28063416481	7
Coq.ZArith.Znat.Zabs2N.inj_succ	40	1.2.4.0.1	synth with cache (only 1: destruct n; only 1: trivial; only 1: intro H; only 1: now destruct p; only 1: now destruct 1).	18.9161479473	957
Coq.ZArith.Znat.Zabs2N.inj_add	40
Coq.ZArith.Znat.Zabs2N.inj_mul	40	9	synth with cache (only 1: now destruct n, m).	18.3009672165	501
Coq.ZArith.Znat.Zabs2N.inj_sub	40
Coq.ZArith.Znat.Zabs2N.inj_pred	40
Coq.ZArith.Znat.Zabs2N.inj_compare	40	3.0	synth with cache (only 1: intros Hn Hm; only 1: now destruct n, m).	0.907299041748	40
Coq.ZArith.Znat.Zabs2N.inj_le	40	0.0.0	synth with cache (only 1: intros Hn Hm; only 1: unfold Z.le, N.le; only 1: now rewrite Z2N.inj_compare).	0.17321896553	3
Coq.ZArith.Znat.Zabs2N.inj_lt	40	0.0.0	synth with cache (only 1: intros Hn Hm; only 1: unfold Z.lt, N.lt; only 1: now rewrite Z2N.inj_compare).	0.39573597908	3
Coq.ZArith.Znat.Zabs2N.inj_min	40
Coq.ZArith.Znat.Zabs2N.inj_max	40
Coq.ZArith.Znat.Zabs2N.inj_quot	40
Coq.ZArith.Znat.Zabs2N.inj_rem	40
Coq.ZArith.Znat.Zabs2N.inj_pow	40
Coq.ZArith.Znat.Zabs2N.inj_succ_abs	40	1.2.0.0.0.1	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite Pos.add_1_r; only 1: now destruct p).	0.504820823669	11
Coq.ZArith.Znat.Zabs2N.inj_add_abs	40	15	synth with cache (only 1: now destruct n, m).	5.76100611687	205
Coq.ZArith.Znat.Zabs2N.inj_mul_abs	40	0	synth with cache (only 1: now destruct n, m).	0.104916095734	1
Coq.ZArith.Znat.Nat2Z.inj_0	40	0	synth with cache (only 1: trivial).	0.0946137905121	1
Coq.ZArith.Znat.Nat2Z.inj_succ	40
Coq.ZArith.Znat.Nat2Z.is_nonneg	40	6	synth with cache (only 1: now destruct n).	0.149530887604	14
Coq.ZArith.Znat.Nat2Z.id	40	1.0.0.0.0	synth with cache (only 1: induction n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply SuccNat2Pos.id_succ).	0.195479869843	6
Coq.ZArith.Znat.Nat2Z.inj	40
Coq.ZArith.Znat.Nat2Z.inj_iff	40	0.0.0.0.0	synth with cache (only 1: split; only 1: intros H; only 1: now rewrite <- (id n), <- (id m), H; only 1: intros; only 1: now subst).	0.202623844147	5
Coq.ZArith.Znat.Nat2Z.inj_compare	40
Coq.ZArith.Znat.Nat2Z.inj_le	40
Coq.ZArith.Znat.Nat2Z.inj_lt	40
Coq.ZArith.Znat.Nat2Z.inj_ge	40	11.1	synth with cache (only 1: unfold Z.ge; only 1: now rewrite Pos2Nat.inj_compare, Nat.compare_ge_iff).	3.44467377663	210
Coq.ZArith.Znat.Nat2Z.inj_gt	40	8.3	synth with cache (only 1: unfold Z.gt; only 1: now rewrite Pos2Nat.inj_compare, Nat.compare_gt_iff).	4.07334184647	206
Coq.ZArith.Znat.Nat2Z.inj_abs_nat	40
Coq.ZArith.Znat.Nat2Z.inj_add	40
Coq.ZArith.Znat.Nat2Z.inj_mul	40
Coq.ZArith.Znat.Nat2Z.inj_sub_max	40
Coq.ZArith.Znat.Nat2Z.inj_sub	40
Coq.ZArith.Znat.Nat2Z.inj_pred_max	40
Coq.ZArith.Znat.Nat2Z.inj_pred	40
Coq.ZArith.Znat.Nat2Z.inj_min	40
Coq.ZArith.Znat.Nat2Z.inj_max	40
Coq.ZArith.Znat.Z2Nat.id	40
Coq.ZArith.Znat.Z2Nat.inj	40	1.1.0	synth with cache (only 1: intros; only 1: rewrite <- (Z2N.id n), <- (Z2N.id m) by trivial; only 1: now f_equal).	0.169090032578	5
Coq.ZArith.Znat.Z2Nat.inj_iff	40	1.0.2.0.0	synth with cache (only 1: intros; only 1: split; only 1: now apply Z2N.inj; only 1: intros; only 1: now subst).	0.217859983444	8
Coq.ZArith.Znat.Z2Nat.inj_0	40	0	synth with cache (only 1: trivial).	0.0831360816956	1
Coq.ZArith.Znat.Z2Nat.inj_pos	40	0	synth with cache (only 1: now destruct n).	0.0872180461884	1
Coq.ZArith.Znat.Z2Nat.inj_neg	40	0	synth with cache (only 1: trivial).	0.0829780101776	1
Coq.ZArith.Znat.Z2Nat.inj_add	40
Coq.ZArith.Znat.Z2Nat.inj_mul	40
Coq.ZArith.Znat.Z2Nat.inj_succ	40
Coq.ZArith.Znat.Z2Nat.inj_sub	40
Coq.ZArith.Znat.Z2Nat.inj_pred	40
Coq.ZArith.Znat.Z2Nat.inj_compare	40
Coq.ZArith.Znat.Z2Nat.inj_le	40
Coq.ZArith.Znat.Z2Nat.inj_lt	40
Coq.ZArith.Znat.Z2Nat.inj_min	40
Coq.ZArith.Znat.Z2Nat.inj_max	40
Coq.ZArith.Znat.Zabs2Nat.abs_nat_spec	40	0	synth with cache (only 1: now destruct n).	0.0865919589996	1
Coq.ZArith.Znat.Zabs2Nat.abs_nat_nonneg	40	5.0	synth with cache (only 1: intros; only 1: now destruct n).	0.124475955963	7
Coq.ZArith.Znat.Zabs2Nat.id_abs	40	0.0.0.0.1.0.0.0.0.0.1.0.0.0.4	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv).	32.9575610161	3006
Coq.ZArith.Znat.Zabs2Nat.id	40	1.0.0.0.1	synth with cache (only 1: induction n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply SuccNat2Pos.id_succ).	0.316861867905	7
Coq.ZArith.Znat.Zabs2Nat.inj_0	40	0	synth with cache (only 1: reflexivity).	0.200119972229	1
Coq.ZArith.Znat.Zabs2Nat.inj_pos	40	0	synth with cache (only 1: reflexivity).	0.080589056015	1
Coq.ZArith.Znat.Zabs2Nat.inj_neg	40	0	synth with cache (only 1: reflexivity).	0.0801639556885	1
Coq.ZArith.Znat.Zabs2Nat.inj_succ	40
Coq.ZArith.Znat.Zabs2Nat.inj_add	40
Coq.ZArith.Znat.Zabs2Nat.inj_mul	40
Coq.ZArith.Znat.Zabs2Nat.inj_sub	40
Coq.ZArith.Znat.Zabs2Nat.inj_pred	40
Coq.ZArith.Znat.Zabs2Nat.inj_compare	40
Coq.ZArith.Znat.Zabs2Nat.inj_le	40	0.0.0	synth with cache (only 1: intros Hn Hm; only 1: unfold Z.le; only 1: now rewrite nat_compare_le, Z2Nat.inj_compare).	0.160613059998	3
Coq.ZArith.Znat.Zabs2Nat.inj_lt	40	0.0.0	synth with cache (only 1: intros Hn Hm; only 1: unfold Z.lt; only 1: now rewrite nat_compare_lt, Z2Nat.inj_compare).	0.162572145462	3
Coq.ZArith.Znat.Zabs2Nat.inj_min	40
Coq.ZArith.Znat.Zabs2Nat.inj_max	40
Coq.ZArith.Znat.Zabs2Nat.inj_succ_abs	40	8.8.0.0.13	synth with cache (only 1: induction n; only 1: simpl; only 1: reflexivity; only 1: now rewrite <- !Zabs_N_nat, Zabs2N.inj_succ, N2Nat.inj_succ; only 1: now rewrite <- !Zabs_N_nat, Zabs2N.inj_succ, N2Nat.inj_succ).	23.3405110836	4606
Coq.ZArith.Znat.Zabs2Nat.inj_add_abs	40
Coq.ZArith.Znat.Zabs2Nat.inj_mul_abs	40
Coq.ZArith.Znat.inj_neq	40
Coq.ZArith.Znat.inj_minus2	40
Coq.ZArith.Wf_Z.Z_of_nat_complete	40
Coq.ZArith.Wf_Z.Z_of_nat_complete_inf	40	0.1.0.1	synth with cache (only 1: intros H; only 1: exists (Z.to_nat x); only 1: symmetry; only 1: now apply Z2Nat.id).	0.21474313736	6
Coq.ZArith.Wf_Z.Z_of_nat_prop	40
Coq.ZArith.Wf_Z.Z_of_nat_set	40
Coq.ZArith.Wf_Z.natlike_ind	40
Coq.ZArith.Wf_Z.natlike_rec	40
Coq.ZArith.Wf_Z.Efficient_Rec.R_wf	40
Coq.ZArith.Wf_Z.Efficient_Rec.natlike_rec2	40
Coq.ZArith.Wf_Z.Efficient_Rec.natlike_rec3	40
Coq.ZArith.Wf_Z.Efficient_Rec.Zlt_0_rec	40
Coq.ZArith.Wf_Z.Efficient_Rec.Zlt_0_ind	40
Coq.ZArith.Wf_Z.Efficient_Rec.Z_lt_rec	40
Coq.ZArith.Wf_Z.Efficient_Rec.Z_lt_induction	40	0.0.0	synth with cache (only 1: intros P Hrec; only 1: apply Zlt_0_rec; only 1: auto).	0.173700809479	3
Coq.ZArith.Wf_Z.Efficient_Rec.Zlt_lower_bound_rec	40
Coq.ZArith.Wf_Z.Efficient_Rec.Zlt_lower_bound_ind	40
Coq.ZArith.Zpow_facts.Zpower_pos_1_l	40
Coq.ZArith.Zpow_facts.Zpower_pos_0_l	40
Coq.ZArith.Zpow_facts.Zpower_pos_pos	40
Coq.ZArith.Zpow_facts.Zpower_le_monotone	40
Coq.ZArith.Zpow_facts.Zpower_lt_monotone	40
Coq.ZArith.Zpow_facts.Zpower_gt_1	40
Coq.ZArith.Zpow_facts.Zmult_power	40
Coq.ZArith.Zpow_facts.Zpower_le_monotone3	40
Coq.ZArith.Zpow_facts.Zpower_le_monotone_inv	40
Coq.ZArith.Zpow_facts.Zpower2_lt_lin	40
Coq.ZArith.Zpow_facts.Zpower2_le_lin	40
Coq.ZArith.Zpow_facts.Zpower2_Psize	40
Coq.ZArith.Zpow_facts.Zpower_mod	40
Coq.ZArith.Zpow_facts.Zpow_mod_pos_correct	40
Coq.ZArith.Zpow_facts.Zpow_mod_correct	40
Coq.ZArith.Zpow_facts.Zpower_divide	40
Coq.ZArith.Zpow_facts.rel_prime_Zpower_r	40
Coq.ZArith.Zpow_facts.rel_prime_Zpower	40
Coq.ZArith.Zpow_facts.prime_power_prime	40
Coq.ZArith.Zpow_facts.Zdivide_power_2	40
Coq.ZArith.Zpow_def.Zpower_theory	40
Coq.ZArith.Zcompare.Zcompare_Gt_trans	40
Coq.ZArith.Zcompare.Zcompare_opp	40
Coq.ZArith.Zcompare.Zcompare_Gt_spec	40
Coq.ZArith.Zcompare.Zcompare_plus_compat	40
Coq.ZArith.Zcompare.Zplus_compare_compat	40
Coq.ZArith.Zcompare.Zcompare_succ_Gt	40
Coq.ZArith.Zcompare.Zcompare_Gt_not_Lt	40
Coq.ZArith.Zcompare.Zcompare_succ_compat	40
Coq.ZArith.Zcompare.Zcompare_mult_compat	40
Coq.ZArith.Zcompare.Zmult_compare_compat_l	40
Coq.ZArith.Zcompare.Zmult_compare_compat_r	40
Coq.ZArith.Zcompare.Zcompare_elim	40
Coq.ZArith.Zcompare.Zcompare_eq_case	40
Coq.ZArith.Zcompare.Zle_compare	40
Coq.ZArith.Zcompare.Zlt_compare	40	2.0.6.2.0	synth with cache (only 1: intros; only 1: case Z.compare_spec; only 1: Z.order; only 1: auto; only 1: Z.order).	4.0310921669	288
Coq.ZArith.Zcompare.Zge_compare	40	0.0.0.0.0	synth with cache (only 1: intros; only 1: case Z.compare_spec; only 1: trivial; only 1: trivial; only 1: auto).	0.223633050919	5
Coq.ZArith.Zcompare.Zgt_compare	40	2.0	synth with cache (only 1: intros x y H; only 1: now rewrite H).	0.127232074738	4
Coq.ZArith.Zquot.Zquot_0_r	40
Coq.ZArith.Zquot.Zrem_0_r	40	10	synth with cache (only 1: now destruct a).	0.625969171524	61
Coq.ZArith.Zquot.Zrem_0_l	40	0.0	synth with cache (only 1: Z.bitwise; only 1: trivial).	0.187363147736	2
Coq.ZArith.Zquot.Zquot_0_l	40	0	synth with cache (only 1: now destruct a).	0.12301492691	1
Coq.ZArith.Zquot.Z_rem_same	40
Coq.ZArith.Zquot.Z_rem_mult	40
Coq.ZArith.Zquot.Zquot_opp_l	40
Coq.ZArith.Zquot.Zquot_opp_r	40
Coq.ZArith.Zquot.Zrem_opp_l	40
Coq.ZArith.Zquot.Zrem_opp_r	40
Coq.ZArith.Zquot.Zquot_opp_opp	40
Coq.ZArith.Zquot.Zrem_opp_opp	40
Coq.ZArith.Zquot.Zrem_sgn	40
Coq.ZArith.Zquot.Zrem_sgn2	40
Coq.ZArith.Zquot.Zrem_lt_pos	40
Coq.ZArith.Zquot.Zrem_lt_neg	40
Coq.ZArith.Zquot.Zrem_lt_pos_pos	40
Coq.ZArith.Zquot.Zrem_lt_pos_neg	40	1.5.0	synth with cache (only 1: intros Ha Hb; only 1: generalize (Zrem_lt_pos a b); only 1: lia).	2.82288384438	82
Coq.ZArith.Zquot.Zrem_lt_neg_pos	40
Coq.ZArith.Zquot.Zrem_lt_neg_neg	40	0.5.0	synth with cache (only 1: intros Ha Hb; only 1: generalize (Zrem_lt_neg a b); only 1: lia).	4.12963891029	99
Coq.ZArith.Zquot.Remainder_equiv	40
Coq.ZArith.Zquot.Zquot_mod_unique_full	40
Coq.ZArith.Zquot.Zquot_unique_full	40
Coq.ZArith.Zquot.Zrem_unique_full	40	0.0.0.2.1	synth with cache (only 1: intros; only 1: destruct (Zquot_mod_unique_full a b q r); only 1: auto; only 1: auto; only 1: auto).	0.313201189041	8
Coq.ZArith.Zquot.Z_quot_pos	40
Coq.ZArith.Zquot.Z_quot_lt	40
Coq.ZArith.Zquot.Z_quot_monotone	40
Coq.ZArith.Zquot.Z_mult_quot_le	40
Coq.ZArith.Zquot.Z_mult_quot_ge	40
Coq.ZArith.Zquot.Z_quot_exact_full	40
Coq.ZArith.Zquot.Zrem_le	40
Coq.ZArith.Zquot.Zquot_le_upper_bound	40
Coq.ZArith.Zquot.Zquot_lt_upper_bound	40
Coq.ZArith.Zquot.Zquot_le_lower_bound	40
Coq.ZArith.Zquot.Zquot_sgn	40
Coq.ZArith.Zquot.Z_rem_plus	40
Coq.ZArith.Zquot.Z_quot_plus	40
Coq.ZArith.Zquot.Z_quot_plus_l	40
Coq.ZArith.Zquot.Zquot_mult_cancel_r	40
Coq.ZArith.Zquot.Zquot_mult_cancel_l	40
Coq.ZArith.Zquot.Zmult_rem_distr_l	40
Coq.ZArith.Zquot.Zmult_rem_distr_r	40
Coq.ZArith.Zquot.Zrem_rem	40
Coq.ZArith.Zquot.Zmult_rem	40
Coq.ZArith.Zquot.Zplus_rem	40
Coq.ZArith.Zquot.Zplus_rem_idemp_l	40
Coq.ZArith.Zquot.Zplus_rem_idemp_r	40
Coq.ZArith.Zquot.Zmult_rem_idemp_l	40
Coq.ZArith.Zquot.Zmult_rem_idemp_r	40
Coq.ZArith.Zquot.Zquot_Zquot	40
Coq.ZArith.Zquot.Zquot_mult_le	40
Coq.ZArith.Zquot.Zrem_divides	40
Coq.ZArith.Zquot.Zquot2_odd_remainder	40
Coq.ZArith.Zquot.Zrem_odd	40
Coq.ZArith.Zquot.Zrem_even	40
Coq.ZArith.Zquot.Zeven_rem	40
Coq.ZArith.Zquot.Zodd_rem	40	1.1.0.0.3.0	synth with cache (only 1: intros; only 1: rewrite Zrem_even; only 1: destruct a as [| p| p]; only 1: reflexivity; only 1: now destruct p; only 1: now destruct p).	4.54813814163	147
Coq.ZArith.Zquot.Zquotrem_Zdiv_eucl_pos	40
Coq.ZArith.Zquot.Zquot_Zdiv_pos	40
Coq.ZArith.Zquot.Zrem_Zmod_pos	40	0.4.2	synth with cache (only 1: intros a b Ha Hb; only 1: generalize (Zquotrem_Zdiv_eucl_pos a b Ha Hb); only 1: intuition).	0.331216096878	26
Coq.ZArith.Zquot.Zrem_Zmod_zero	40
Coq.ZArith.Zdigits.VALUE_OF_BOOLEAN_VECTORS.binary_value	40	10	synth with cache (only 1: constructor).	0.541543006897	52
Coq.ZArith.Zdigits.VALUE_OF_BOOLEAN_VECTORS.two_compl_value	40	1.2.2.2.2.2	synth with cache (only 1: refine (nat_rect _ _ _); only 1: intros; only 1: exact 0%Z; only 1: intros; only 1: inversion H0; only 1: auto).	4.31998300552	602
Coq.ZArith.Zdigits.ENCODING_VALUE.Zmod2_twice	40
Coq.ZArith.Zdigits.ENCODING_VALUE.Z_to_binary	40	2.14.10.0.1	synth with cache (only 1: refine (nat_rect _ _ _); only 1: intros; only 1: constructor; only 1: fix le_div2 1; only 1: auto).	37.7435531616	8401
Coq.ZArith.Zdigits.ENCODING_VALUE.Z_to_two_compl	40	3.20	synth with cache (only 1: fix le_div2 1; only 1: auto).	14.6984100342	3510
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.binary_value_Sn	40	0	synth with cache (only 1: reflexivity).	0.115411043167	1
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Z_to_binary_Sn	40
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.binary_value_pos	40
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.two_compl_value_Sn	40	0	synth with cache (only 1: reflexivity).	0.12144613266	1
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Z_to_two_compl_Sn	40
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Z_to_binary_Sn_z	40	0	synth with cache (only 1: reflexivity).	0.117218017578	1
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Z_div2_value	40	9.3.4	synth with cache (only 1: intros n m; only 1: simpl; only 1: now destruct n as [| [p| p| ]| [p| p| ]]).	18.7045049667	1576
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Pdiv2	40
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Zdiv2_two_power_nat	40	1.23.5	synth with cache (only 1: intro; only 1: fix le_div2 1; only 1: auto).	27.0203769207	5148
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Z_to_two_compl_Sn_z	40	0	synth with cache (only 1: reflexivity).	0.127259016037	1
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Zeven_bit_value	40	4.11.8	synth with cache (only 1: intros n Hn; only 1: apply Zeven_bool_iff in Hn; only 1: now destruct n as [| [| | ]| [| | ]]).	29.5644221306	2508
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Zodd_bit_value	40
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Zge_minus_two_power_nat_S	40
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Zlt_two_power_nat_S	40	2.0.0.2.0.0.0.0.0.3	synth with cache (only 1: intros n z; only 1: rewrite (two_power_nat_S n); only 1: generalize (Zmod2_twice z); only 1: destruct (Zeven_odd_dec z) as [H| H]; only 1: rewrite (Zeven_bit_value z H); only 1: intros; only 1: lia; only 1: rewrite (Zodd_bit_value z H); only 1: intros; only 1: lia).	16.2336080074	1294
Coq.ZArith.Zdigits.COHERENT_VALUE.binary_to_Z_to_binary	40
Coq.ZArith.Zdigits.COHERENT_VALUE.two_compl_to_Z_to_two_compl	40
Coq.ZArith.Zdigits.COHERENT_VALUE.Z_to_binary_to_Z	40
Coq.ZArith.Zdigits.COHERENT_VALUE.Z_to_two_compl_to_Z	40
Coq.ZArith.BinInt.Z.eq_dec	40	0.0.15	synth with cache (only 1: decide equality; only 1: apply Pos.eq_dec; only 1: apply Pos.eq_dec).	11.8559679985	941
Coq.ZArith.BinInt.Z.pos_sub_spec	40
Coq.ZArith.BinInt.Z.pos_sub_discr	40
Coq.ZArith.BinInt.Z.pos_sub_diag	40	0.0.0.0.0.0	synth with cache (only 1: induction p; only 1: simpl; only 1: now rewrite ?IHp; only 1: simpl; only 1: now rewrite ?IHp; only 1: trivial).	0.874140024185	6
Coq.ZArith.BinInt.Z.pos_sub_lt	40
Coq.ZArith.BinInt.Z.pos_sub_gt	40
Coq.ZArith.BinInt.Z.pos_sub_opp	40
Coq.ZArith.BinInt.Z.Private_BootStrap.add_0_r	40	4	synth with cache (only 1: now destruct n).	0.0778839588165	5
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_0_r	40	1	synth with cache (only 1: now destruct n).	0.0786228179932	2
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_1_l	40	2	synth with cache (only 1: now destruct n).	0.0931711196899	3
Coq.ZArith.BinInt.Z.Private_BootStrap.add_comm	40
Coq.ZArith.BinInt.Z.Private_BootStrap.opp_add_distr	40
Coq.ZArith.BinInt.Z.Private_BootStrap.opp_inj	40
Coq.ZArith.BinInt.Z.Private_BootStrap.pos_sub_add	40
Coq.ZArith.BinInt.Z.Private_BootStrap.add_assoc_pos	40
Coq.ZArith.BinInt.Z.Private_BootStrap.add_assoc	40
Coq.ZArith.BinInt.Z.Private_BootStrap.add_opp_diag_r	40	2.0.2.0.0.0.3	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite pos_sub_spec, Pos.compare_refl; only 1: simpl; only 1: now rewrite pos_sub_spec, Pos.compare_refl).	4.13514184952	354
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_opp_r	40
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_add_distr_pos	40
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_add_distr_r	40
Coq.ZArith.BinInt.Z.one_succ	40	0.0	synth with cache (only 1: simpl; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l).	0.12680721283	2
Coq.ZArith.BinInt.Z.two_succ	40	0	synth with cache (only 1: reflexivity).	0.0885119438171	1
Coq.ZArith.BinInt.Z.add_0_l	40	0	synth with cache (only 1: now destruct n).	0.0839710235596	1
Coq.ZArith.BinInt.Z.add_succ_l	40
Coq.ZArith.BinInt.Z.opp_0	40	0.0	synth with cache (only 1: simpl; only 1: trivial).	0.121531009674	2
Coq.ZArith.BinInt.Z.opp_succ	40
Coq.ZArith.BinInt.Z.succ_pred	40
Coq.ZArith.BinInt.Z.pred_succ	40	0.0	synth with cache (only 1: unfold succ, pred; only 1: now rewrite <- add_assoc, add_opp_diag_r, add_0_r).	0.116366863251	2
Coq.ZArith.BinInt.Z.sub_0_r	40	0	synth with cache (only 1: now destruct n).	0.0787448883057	1
Coq.ZArith.BinInt.Z.sub_succ_r	40
Coq.ZArith.BinInt.Z.mul_0_l	40	0	synth with cache (only 1: now destruct n).	0.0968780517578	1
Coq.ZArith.BinInt.Z.mul_succ_l	40
Coq.ZArith.BinInt.Z.eqb_eq	40
Coq.ZArith.BinInt.Z.ltb_lt	40	9.2.5	synth with cache (only 1: revert m; only 1: fix even_spec 1; only 1: trivial).	30.942180872	2268
Coq.ZArith.BinInt.Z.leb_le	40	9.2.6	synth with cache (only 1: revert m; only 1: fix even_spec 1; only 1: trivial).	36.2065310478	2577
Coq.ZArith.BinInt.Z.compare_eq_iff	40
Coq.ZArith.BinInt.Z.compare_sub	40
Coq.ZArith.BinInt.Z.compare_antisym	40
Coq.ZArith.BinInt.Z.compare_lt_iff	40	0	synth with cache (only 1: reflexivity).	0.0686070919037	1
Coq.ZArith.BinInt.Z.compare_le_iff	40	0	synth with cache (only 1: reflexivity).	0.0699889659882	1
Coq.ZArith.BinInt.Z.lt_succ_r	40
Coq.ZArith.BinInt.Z.max_l	40
Coq.ZArith.BinInt.Z.max_r	40	0.2.1.1.0.7	synth with cache (only 1: unfold le, max; only 1: rewrite N.compare_antisym; only 1: case N.compare_spec; only 1: auto; only 1: now destruct 2; only 1: trivial).	5.82355809212	468
Coq.ZArith.BinInt.Z.min_l	40
Coq.ZArith.BinInt.Z.min_r	40	0.2.0.0.1.6	synth with cache (only 1: unfold le, min; only 1: rewrite N.compare_antisym; only 1: case N.compare_spec; only 1: trivial; only 1: now destruct 2; only 1: trivial).	8.88445401192	747
Coq.ZArith.BinInt.Z.peano_ind	40
Coq.ZArith.BinInt.Z.bi_induction	40
Coq.ZArith.BinInt.Z.abs_eq	40	1.0	synth with cache (only 1: intro H; only 1: now destruct n).	0.127225160599	3
Coq.ZArith.BinInt.Z.abs_neq	40	0.1.0.0.1	synth with cache (only 1: destruct n; only 1: intro n; only 1: now nzsimpl; only 1: now destruct 1; only 1: trivial).	0.27065205574	7
Coq.ZArith.BinInt.Z.sgn_null	40	7.0	synth with cache (only 1: intros H; only 1: now destruct n).	0.126012086868	9
Coq.ZArith.BinInt.Z.sgn_pos	40	3.0	synth with cache (only 1: intro H; only 1: now destruct n).	0.129380941391	5
Coq.ZArith.BinInt.Z.sgn_neg	40	0	synth with cache (only 1: now destruct n).	0.091490983963	1
Coq.ZArith.BinInt.Z.pow_0_r	40	0	synth with cache (only 1: reflexivity).	0.0882458686829	1
Coq.ZArith.BinInt.Z.pow_succ_r	40
Coq.ZArith.BinInt.Z.pow_neg_r	40	0.0.6.0.0.3.10	synth with cache (only 1: destruct m as [| m| m]; only 1: intro H; only 1: now destruct n; only 1: intro H; only 1: now f_equiv; only 1: intro H; only 1: trivial).	17.6460249424	2696
Coq.ZArith.BinInt.Z.pow_pos_fold	40	0.0	synth with cache (only 1: simpl; only 1: trivial).	0.122964143753	2
Coq.ZArith.BinInt.Z.square_spec	40	1.2.2.1.2.2.0.2	synth with cache (only 1: destruct n; only 1: now nzsimpl; only 1: simpl; only 1: f_equal; only 1: apply Pos.square_spec; only 1: simpl; only 1: f_equal; only 1: apply Pos.square_spec).	16.9825129509	1724
Coq.ZArith.BinInt.Z.sqrtrem_spec	40
Coq.ZArith.BinInt.Z.sqrt_spec	40
Coq.ZArith.BinInt.Z.sqrt_neg	40	4.0	synth with cache (only 1: intro H; only 1: now destruct n).	0.131217002869	6
Coq.ZArith.BinInt.Z.sqrtrem_sqrt	40	0.0.0.0.5.0.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: unfold N.sqrtrem, N.sqrt, Pos.sqrt; only 1: destruct (Pos.sqrtrem p) as (s, r); only 1: now destruct r; only 1: simpl; only 1: trivial).	4.4766330719	376
Coq.ZArith.BinInt.Z.log2_spec	40
Coq.ZArith.BinInt.Z.log2_nonpos	40	3.0	synth with cache (only 1: intro H; only 1: now destruct n).	0.130051136017	5
Coq.ZArith.BinInt.Z.even_spec	40
Coq.ZArith.BinInt.Z.odd_spec	40
Coq.ZArith.BinInt.Z.double_spec	40	1	synth with cache (only 1: now destruct n).	0.235157012939	2
Coq.ZArith.BinInt.Z.succ_double_spec	40	0	synth with cache (only 1: now destruct n).	0.0906958580017	1
Coq.ZArith.BinInt.Z.pred_double_spec	40	0	synth with cache (only 1: now destruct n).	0.0902788639069	1
Coq.ZArith.BinInt.Z.pos_div_eucl_eq	40
Coq.ZArith.BinInt.Z.div_eucl_eq	40
Coq.ZArith.BinInt.Z.div_mod	40
Coq.ZArith.BinInt.Z.pos_div_eucl_bound	40
Coq.ZArith.BinInt.Z.mod_pos_bound	40
Coq.ZArith.BinInt.Z.mod_neg_bound	40
Coq.ZArith.BinInt.Z.quotrem_eq	40
Coq.ZArith.BinInt.Z.quot_rem'	40
Coq.ZArith.BinInt.Z.quot_rem	40	0.0.1.0.3	synth with cache (only 1: now destruct 1 || intros _; only 1: rewrite mul_comm; only 1: generalize (quotrem_eq a b); only 1: unfold quot, rem; only 1: now destruct quotrem).	1.43571686745	55
Coq.ZArith.BinInt.Z.rem_bound_pos	40
Coq.ZArith.BinInt.Z.rem_opp_l'	40
Coq.ZArith.BinInt.Z.rem_opp_r'	40
Coq.ZArith.BinInt.Z.rem_opp_l	40
Coq.ZArith.BinInt.Z.rem_opp_r	40
Coq.ZArith.BinInt.Z.divide_Zpos	40
Coq.ZArith.BinInt.Z.divide_Zpos_Zneg_r	40
Coq.ZArith.BinInt.Z.divide_Zpos_Zneg_l	40
Coq.ZArith.BinInt.Z.ggcd_gcd	40
Coq.ZArith.BinInt.Z.ggcd_correct_divisors	40
Coq.ZArith.BinInt.Z.gcd_divide_l	40	0.2.0.0.1.1.2	synth with cache (only 1: rewrite <- N.ggcd_gcd; only 1: generalize (Pos.ggcd_correct_divisors a b); only 1: destruct ggcd as (g, (aa, bb)); only 1: simpl; only 1: intros (H, _); only 1: exists aa; only 1: now rewrite Pos.mul_comm).	4.92874503136	255
Coq.ZArith.BinInt.Z.gcd_divide_r	40	0.2.0.0.0.1.2	synth with cache (only 1: rewrite <- ggcd_gcd; only 1: generalize (ggcd_correct_divisors a b); only 1: destruct ggcd as (g, (aa, bb)); only 1: simpl; only 1: intros (_, H); only 1: exists bb; only 1: now rewrite N.mul_comm).	5.33022212982	229
Coq.ZArith.BinInt.Z.gcd_greatest	40
Coq.ZArith.BinInt.Z.gcd_nonneg	40
Coq.ZArith.BinInt.Z.ggcd_opp	40
Coq.ZArith.BinInt.Z.testbit_of_N	40
Coq.ZArith.BinInt.Z.testbit_of_N'	40
Coq.ZArith.BinInt.Z.testbit_Zpos	40	2.0.0.0.0.0.0	synth with cache (only 1: intro Hn; only 1: rewrite <- testbit_of_N; only 1: f_equal; only 1: destruct n; only 1: trivial; only 1: trivial; only 1: now destruct Hn).	0.315046072006	9
Coq.ZArith.BinInt.Z.testbit_Zneg	40
Coq.ZArith.BinInt.Z.div2_spec	40	0	synth with cache (only 1: trivial).	0.0968399047852	1
Coq.ZArith.BinInt.Z.testbit_0_l	40	5	synth with cache (only 1: now destruct n).	0.0920639038086	6
Coq.ZArith.BinInt.Z.testbit_neg_r	40	0	synth with cache (only 1: now destruct n).	0.098256111145	1
Coq.ZArith.BinInt.Z.testbit_odd_0	40
Coq.ZArith.BinInt.Z.testbit_even_0	40	0	synth with cache (only 1: now destruct a).	0.0943698883057	1
Coq.ZArith.BinInt.Z.testbit_odd_succ	40
Coq.ZArith.BinInt.Z.testbit_even_succ	40
Coq.ZArith.BinInt.Z.shiftr_spec_aux	40
Coq.ZArith.BinInt.Z.shiftl_spec_low	40
Coq.ZArith.BinInt.Z.shiftl_spec_high	40
Coq.ZArith.BinInt.Z.shiftr_spec	40
Coq.ZArith.BinInt.Z.lor_spec	40
Coq.ZArith.BinInt.Z.land_spec	40
Coq.ZArith.BinInt.Z.ldiff_spec	40
Coq.ZArith.BinInt.Z.lxor_spec	40
Coq.ZArith.BinInt.Z.gt_lt_iff	40
Coq.ZArith.BinInt.Z.gt_lt	40	5	synth with cache (only 1: apply N.gt_lt_iff).	0.196043968201	15
Coq.ZArith.BinInt.Z.lt_gt	40	1	synth with cache (only 1: apply gt_lt_iff).	0.194550991058	11
Coq.ZArith.BinInt.Z.ge_le_iff	40
Coq.ZArith.BinInt.Z.ge_le	40	7	synth with cache (only 1: apply N.ge_le_iff).	0.282872200012	20
Coq.ZArith.BinInt.Z.le_ge	40	1	synth with cache (only 1: apply ge_le_iff).	0.192594051361	11
Coq.ZArith.BinInt.Z.gtb_ltb	40
Coq.ZArith.BinInt.Z.geb_leb	40
Coq.ZArith.BinInt.Z.gtb_lt	40	5.2.8	synth with cache (only 1: revert m; only 1: fix even_spec 1; only 1: trivial).	15.5880880356	1409
Coq.ZArith.BinInt.Z.geb_le	40	5.2.9	synth with cache (only 1: revert m; only 1: fix even_spec 1; only 1: trivial).	20.0458819866	1930
Coq.ZArith.BinInt.Z.gtb_spec	40
Coq.ZArith.BinInt.Z.geb_spec	40
Coq.ZArith.BinInt.Z.add_reg_l	40
Coq.ZArith.BinInt.Z.mul_reg_l	40	3	synth with cache (only 1: apply mul_cancel_l).	0.218018054962	14
Coq.ZArith.BinInt.Z.mul_reg_r	40	0.3	synth with cache (only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: exact (fun Hp => proj1 (mul_cancel_l n m p Hp))).	0.210739135742	13
Coq.ZArith.BinInt.Z.opp_eq_mul_m1	40
Coq.ZArith.BinInt.Z.add_diag	40	0.0.0	synth with cache (only 1: rewrite two_succ; only 1: nzsimpl; only 1: now nzsimpl).	0.456393957138	3
Coq.ZArith.BinInt.Z.compare_opp	40
Coq.ZArith.BinInt.Z.add_compare_mono_l	40
Coq.ZArith.BinInt.Z.testbit_mod_pow2	40
Coq.ZArith.BinInt.Z.testbit_ones	40
Coq.ZArith.BinInt.Z.testbit_ones_nonneg	40
Coq.ZArith.BinInt.Pos2Z.id	40	1	synth with cache (only 1: auto).	0.135338068008	2
Coq.ZArith.BinInt.Pos2Z.inj	40	0	synth with cache (only 1: congruence).	0.133274078369	1
Coq.ZArith.BinInt.Pos2Z.inj_iff	40	0.0.0	synth with cache (only 1: split; only 1: congruence; only 1: congruence).	0.205986022949	3
Coq.ZArith.BinInt.Pos2Z.is_pos	40	5	synth with cache (only 1: now destruct p).	0.151480913162	6
Coq.ZArith.BinInt.Pos2Z.is_nonneg	40	5	synth with cache (only 1: now destruct p).	0.16045999527	6
Coq.ZArith.BinInt.Pos2Z.inj_1	40	0	synth with cache (only 1: easy).	0.143675804138	1
Coq.ZArith.BinInt.Pos2Z.inj_xO	40	0.0	synth with cache (only 1: simpl; only 1: trivial).	0.17769408226	2
Coq.ZArith.BinInt.Pos2Z.inj_xI	40	1.0	synth with cache (only 1: simpl; only 1: trivial).	0.178349018097	3
Coq.ZArith.BinInt.Pos2Z.inj_succ	40	5.0	synth with cache (only 1: simpl; only 1: now destruct p).	0.181220054626	7
Coq.ZArith.BinInt.Pos2Z.inj_add	40	0.0	synth with cache (only 1: simpl; only 1: now rewrite Pos.add_comm).	0.181913852692	2
Coq.ZArith.BinInt.Pos2Z.inj_sub	40
Coq.ZArith.BinInt.Pos2Z.inj_sub_max	40
Coq.ZArith.BinInt.Pos2Z.inj_pred	40	2.0.1.0.0.2	synth with cache (only 1: destruct p; only 1: intros H; only 1: trivial; only 1: trivial; only 1: intros H; only 1: now destruct H).	4.406427145	200
Coq.ZArith.BinInt.Pos2Z.inj_mul	40	0.0	synth with cache (only 1: simpl; only 1: trivial).	0.18035197258	2
Coq.ZArith.BinInt.Pos2Z.inj_pow_pos	40	10	synth with cache (only 1: now apply Pos.iter_swap_gen).	0.515066146851	31
Coq.ZArith.BinInt.Pos2Z.inj_pow	40	0.0	synth with cache (only 1: simpl; only 1: now apply Pos.iter_swap_gen).	0.184136867523	2
Coq.ZArith.BinInt.Pos2Z.inj_square	40	0.0	synth with cache (only 1: simpl; only 1: auto).	0.175431013107	2
Coq.ZArith.BinInt.Pos2Z.inj_compare	40	1.5.0	synth with cache (only 1: revert q; only 1: intros q; only 1: reflexivity).	7.47712993622	308
Coq.ZArith.BinInt.Pos2Z.inj_leb	40	1	synth with cache (only 1: auto).	0.142342090607	2
Coq.ZArith.BinInt.Pos2Z.inj_ltb	40	0	synth with cache (only 1: reflexivity).	0.139791965485	1
Coq.ZArith.BinInt.Pos2Z.inj_eqb	40	0	synth with cache (only 1: reflexivity).	0.137586116791	1
Coq.ZArith.BinInt.Pos2Z.inj_max	40
Coq.ZArith.BinInt.Pos2Z.inj_min	40
Coq.ZArith.BinInt.Pos2Z.inj_sqrt	40	0.0	synth with cache (only 1: simpl; only 1: auto).	0.176513910294	2
Coq.ZArith.BinInt.Pos2Z.inj_gcd	40	1	synth with cache (only 1: reflexivity).	0.13974404335	2
Coq.ZArith.BinInt.Pos2Z.inj_divide	40
Coq.ZArith.BinInt.Pos2Z.inj_testbit	40	1.0.0.0.0.0.0.6	synth with cache (only 1: destruct n as [| n| n]; only 1: now destruct 1 || intros _; only 1: simpl; only 1: now destruct a; only 1: intro Hn; only 1: simpl; only 1: now destruct n; only 1: now destruct 1 || intros _).	12.4701769352	795
Coq.ZArith.BinInt.Pos2Z.inj_neg	40	0	synth with cache (only 1: congruence).	0.132338047028	1
Coq.ZArith.BinInt.Pos2Z.inj_neg_iff	40	0.0.0	synth with cache (only 1: split; only 1: congruence; only 1: congruence).	0.204169988632	3
Coq.ZArith.BinInt.Pos2Z.inj_pos	40	0	synth with cache (only 1: now injection 1 || (intros; now f_equal)).	0.13144493103	1
Coq.ZArith.BinInt.Pos2Z.inj_pos_iff	40	0.0.0	synth with cache (only 1: split; only 1: now injection 1 || (intros; now f_equal); only 1: now injection 1 || (intros; now f_equal)).	0.199509859085	3
Coq.ZArith.BinInt.Pos2Z.neg_is_neg	40	0	synth with cache (only 1: reflexivity).	0.143970966339	1
Coq.ZArith.BinInt.Pos2Z.neg_is_nonpos	40	0	synth with cache (only 1: easy).	0.14809513092	1
Coq.ZArith.BinInt.Pos2Z.pos_is_pos	40	0	synth with cache (only 1: reflexivity).	0.141674995422	1
Coq.ZArith.BinInt.Pos2Z.pos_is_nonneg	40	0	synth with cache (only 1: easy).	0.14563703537	1
Coq.ZArith.BinInt.Pos2Z.neg_le_pos	40	3.0.0.2	synth with cache (only 1: destruct Pos.ggcd as (g, (aa, bb)); only 1: trivial; only 1: trivial; only 1: easy).	0.284845113754	9
Coq.ZArith.BinInt.Pos2Z.neg_lt_pos	40	0	synth with cache (only 1: easy).	0.149435997009	1
Coq.ZArith.BinInt.Pos2Z.neg_le_neg	40
Coq.ZArith.BinInt.Pos2Z.neg_lt_neg	40
Coq.ZArith.BinInt.Pos2Z.pos_le_pos	40	1.0.0.0	synth with cache (only 1: intros; only 1: unfold Z.le; only 1: simpl; only 1: trivial).	0.26220202446	5
Coq.ZArith.BinInt.Pos2Z.pos_lt_pos	40	0.0.0.0	synth with cache (only 1: intros; only 1: unfold Z.lt; only 1: simpl; only 1: trivial).	0.263118028641	4
Coq.ZArith.BinInt.Pos2Z.neg_xO	40	1.0	synth with cache (only 1: simpl; only 1: trivial).	0.179005861282	3
Coq.ZArith.BinInt.Pos2Z.neg_xI	40	0	synth with cache (only 1: trivial).	0.143798828125	1
Coq.ZArith.BinInt.Pos2Z.pos_xO	40	0	synth with cache (only 1: reflexivity).	0.140693187714	1
Coq.ZArith.BinInt.Pos2Z.pos_xI	40	0	synth with cache (only 1: reflexivity).	0.140242099762	1
Coq.ZArith.BinInt.Pos2Z.opp_neg	40	0	synth with cache (only 1: trivial).	0.138453960419	1
Coq.ZArith.BinInt.Pos2Z.opp_pos	40	0	synth with cache (only 1: trivial).	0.137073040009	1
Coq.ZArith.BinInt.Pos2Z.add_neg_neg	40	0	synth with cache (only 1: reflexivity).	0.140130996704	1
Coq.ZArith.BinInt.Pos2Z.add_pos_neg	40	0.0	synth with cache (only 1: simpl; only 1: trivial).	0.182104825974	2
Coq.ZArith.BinInt.Pos2Z.add_neg_pos	40	0	synth with cache (only 1: reflexivity).	0.140220880508	1
Coq.ZArith.BinInt.Pos2Z.add_pos_pos	40	0	synth with cache (only 1: reflexivity).	0.137520074844	1
Coq.ZArith.BinInt.Pos2Z.divide_pos_neg_r	40
Coq.ZArith.BinInt.Pos2Z.divide_pos_neg_l	40
Coq.ZArith.BinInt.Pos2Z.testbit_neg	40	0.0.0.0.0.1.0	synth with cache (only 1: intro Hn; only 1: destruct n as [| n| n]; only 1: unfold Z.testbit; only 1: now destruct a as [| [| | ]| ]; only 1: simpl; only 1: now destruct n; only 1: now destruct Hn).	0.379307031631	8
Coq.ZArith.BinInt.Pos2Z.testbit_pos	40	1	synth with cache (only 1: apply Z.testbit_Zpos).	0.278390884399	12
Coq.ZArith.BinInt.Z2Pos.id	40
Coq.ZArith.BinInt.Z2Pos.inj	40
Coq.ZArith.BinInt.Z2Pos.inj_iff	40
Coq.ZArith.BinInt.Z2Pos.to_pos_nonpos	40	11	synth with cache (only 1: now destruct x).	0.346472024918	51
Coq.ZArith.BinInt.Z2Pos.inj_1	40	0	synth with cache (only 1: trivial).	0.145370006561	1
Coq.ZArith.BinInt.Z2Pos.inj_double	40	3	synth with cache (only 1: now destruct x).	0.740770101547	37
Coq.ZArith.BinInt.Z2Pos.inj_succ_double	40	0	synth with cache (only 1: now destruct x).	0.149668931961	1
Coq.ZArith.BinInt.Z2Pos.inj_succ	40	2.6.1.5.1.1.2	synth with cache (only 1: destruct x; only 1: simpl; only 1: easy; only 1: simpl; only 1: now destruct p; only 1: intros; only 1: now destruct p).	26.0902359486	2905
Coq.ZArith.BinInt.Z2Pos.inj_add	40
Coq.ZArith.BinInt.Z2Pos.inj_sub	40
Coq.ZArith.BinInt.Z2Pos.inj_pred	40	0.0.0.0.8.0.2	synth with cache (only 1: destruct x; only 1: easy; only 1: destruct p; only 1: trivial; only 1: trivial; only 1: easy; only 1: trivial).	13.9801359177	1112
Coq.ZArith.BinInt.Z2Pos.inj_mul	40	0.0.0.1	synth with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.418941020966	5
Coq.ZArith.BinInt.Z2Pos.inj_pow	40
Coq.ZArith.BinInt.Z2Pos.inj_pow_pos	40
Coq.ZArith.BinInt.Z2Pos.inj_compare	40	0.0.2.4	synth with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.48514509201	21
Coq.ZArith.BinInt.Z2Pos.inj_leb	40	0.0.1.2	synth with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.310438156128	7
Coq.ZArith.BinInt.Z2Pos.inj_ltb	40	0.0.0.1	synth with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.328966856003	5
Coq.ZArith.BinInt.Z2Pos.inj_eqb	40	0.0.0.0	synth with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.300657987595	4
Coq.ZArith.BinInt.Z2Pos.inj_max	40
Coq.ZArith.BinInt.Z2Pos.inj_min	40
Coq.ZArith.BinInt.Z2Pos.inj_sqrt	40	1.0.0.0.0.3	synth with cache (only 1: destruct x; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: trivial).	0.359221935272	11
Coq.ZArith.BinInt.Z2Pos.inj_gcd	40	0.0.0.1	synth with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).	1.01674795151	37
Coq.ZArith.BinInt.Zplus_minus_eq	40
Coq.ZArith.BinInt.Zpos_eq	40	0.1	synth with cache (only 1: intros n1 n2 H; only 1: now f_equiv).	0.216732978821	3
Coq.ZArith.BinInt.ZL0	40	0	synth with cache (only 1: trivial).	0.137225866318	1
Coq.ZArith.BinInt.Zplus_diag_eq_mult_2	40	11.0	synth with cache (only 1: change 2 with (1 + 1); only 1: now Z.nzsimpl).	15.0748980045	835
Coq.ZArith.BinInt.Z_eq_mult	40	10	synth with cache (only 1: now destruct m).	0.413603782654	60
Coq.ZArith.Zcomplements.floor_gt0	40	0	synth with cache (only 1: easy).	0.097510099411	1
Coq.ZArith.Zcomplements.floor_ok	40
Coq.ZArith.Zcomplements.Z_lt_abs_rec	40	0.33.3	synth with cache (only 1: intros P F; only 1: fix sqrtrem_spec 1; only 1: auto).	25.8833441734	6107
Coq.ZArith.Zcomplements.Z_lt_abs_induction	40
Coq.ZArith.Zcomplements.Zcase_sign	40
Coq.ZArith.Zcomplements.sqr_pos	40
Coq.ZArith.Zcomplements.Zlength_properties.Zlength_correct	40
Coq.ZArith.Zcomplements.Zlength_properties.Zlength_nil	40	1	synth with cache (only 1: auto).	0.0899169445038	2
Coq.ZArith.Zcomplements.Zlength_properties.Zlength_cons	40
Coq.ZArith.Zcomplements.Zlength_properties.Zlength_nil_inv	40
Coq.ZArith.Zeven.Zeven_equiv	40
Coq.ZArith.Zeven.Zodd_equiv	40
Coq.ZArith.Zeven.Zeven_bool_iff	40
Coq.ZArith.Zeven.Zodd_bool_iff	40
Coq.ZArith.Zeven.Zodd_even_bool	40
Coq.ZArith.Zeven.Zeven_odd_bool	40
Coq.ZArith.Zeven.Zeven_odd_dec	40
Coq.ZArith.Zeven.Zeven_dec	40
Coq.ZArith.Zeven.Zodd_dec	40
Coq.ZArith.Zeven.Zeven_not_Zodd	40
Coq.ZArith.Zeven.Zodd_not_Zeven	40	0.0.0.0.0	synth with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd; only 1: destruct Z.odd; only 1: intuition; only 1: intuition).	0.322296857834	5
Coq.ZArith.Zeven.Zeven_Sn	40
Coq.ZArith.Zeven.Zodd_Sn	40
Coq.ZArith.Zeven.Zeven_pred	40
Coq.ZArith.Zeven.Zodd_pred	40
Coq.ZArith.Zeven.Zeven_div2	40	1.0	synth with cache (only 1: intro H; only 1: now destruct n as [| [| | ]| [| | ]]).	0.146118879318	3
Coq.ZArith.Zeven.Zodd_div2	40
Coq.ZArith.Zeven.Zquot2_odd_eqn	40
Coq.ZArith.Zeven.Zeven_quot2	40	1.4.0.0	synth with cache (only 1: boolify_even_odd; only 1: simpl; only 1: intros Hn; only 1: now destruct n as [| [| | ]| [| | ]]).	0.27093911171	13
Coq.ZArith.Zeven.Zodd_quot2	40	3	synth with cache (only 1: now destruct n as [| [p| p| ]| [p| p| ]]).	1.05291700363	68
Coq.ZArith.Zeven.Zodd_quot2_neg	40	7	synth with cache (only 1: now destruct n as [| [p| p| ]| [p| p| ]]).	3.35234999657	167
Coq.ZArith.Zeven.Zquot2_opp	40
Coq.ZArith.Zeven.Zquot2_quot	40
Coq.ZArith.Zeven.Z_modulo_2	40
Coq.ZArith.Zeven.Zsplit2	40
Coq.ZArith.Zeven.Zeven_ex	40	3.0.0	synth with cache (only 1: intro H; only 1: exists (Z.div2 n); only 1: now destruct n as [| [| | ]| [| | ]]).	0.193686008453	6
Coq.ZArith.Zeven.Zodd_ex	40	8.2.0	synth with cache (only 1: exists (Z.div2 n); only 1: rewrite (Zdiv2_odd_eqn n)  at 1; only 1: now destruct n as [| [p| p| ]| [p| p| ]]).	16.7216320038	730
Coq.ZArith.Zeven.Zeven_2p	40	4	synth with cache (only 1: now destruct p).	0.0986340045929	5
Coq.ZArith.Zeven.Zodd_2p_plus_1	40	8.3.1.0.17	synth with cache (only 1: destruct p; only 1: simpl; only 1: trivial; only 1: reflexivity; only 1: now destruct p).	25.218474865	2230
Coq.ZArith.Zeven.Zeven_plus_Zodd	40
Coq.ZArith.Zeven.Zeven_plus_Zeven	40	1.1.2.3.1.0	synth with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: intros Ha Hb; only 1: now rewrite Z.odd_add, Ha, Hb).	2.92957901955	234
Coq.ZArith.Zeven.Zodd_plus_Zeven	40	0.1.0.0	synth with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: intros Ha Hb; only 1: now rewrite Z.odd_add, Ha, Hb).	0.258717775345	5
Coq.ZArith.Zeven.Zodd_plus_Zodd	40	1.1.0.0	synth with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: intros Ha Hb; only 1: now rewrite Z.odd_add, Ha, Hb).	0.256077051163	6
Coq.ZArith.Zeven.Zeven_mult_Zeven_l	40
Coq.ZArith.Zeven.Zeven_mult_Zeven_r	40
Coq.ZArith.Zeven.Zodd_mult_Zodd	40
Coq.ZArith.Zmisc.iter_nat_of_Z	40
Coq.ZArith.Znumtheory.Zdivide_opp_r	40
Coq.ZArith.Znumtheory.Zdivide_opp_r_rev	40	0	synth with cache (only 1: apply Z.divide_opp_r).	0.102125883102	1
Coq.ZArith.Znumtheory.Zdivide_opp_l	40
Coq.ZArith.Znumtheory.Zdivide_opp_l_rev	40	1	synth with cache (only 1: apply Z.divide_opp_l).	0.10215306282	2
Coq.ZArith.Znumtheory.Zdivide_Zabs_l	40
Coq.ZArith.Znumtheory.Zdivide_Zabs_inv_l	40	1	synth with cache (only 1: apply Z.divide_abs_l).	0.100104093552	2
Coq.ZArith.Znumtheory.Zmult_one	40
Coq.ZArith.Znumtheory.Zdivide_bounds	40
Coq.ZArith.Znumtheory.Zmod_divide	40
Coq.ZArith.Znumtheory.Zdivide_mod	40
Coq.ZArith.Znumtheory.Zdivide_dec	40
Coq.ZArith.Znumtheory.Z_lt_neq	40	9.0	synth with cache (only 1: intro H; only 1: Z.order).	0.493052959442	53
Coq.ZArith.Znumtheory.Zdivide_Zdiv_eq	40
Coq.ZArith.Znumtheory.Zdivide_Zdiv_eq_2	40
Coq.ZArith.Znumtheory.Zdivide_le	40
Coq.ZArith.Znumtheory.Zdivide_Zdiv_lt_pos	40
Coq.ZArith.Znumtheory.Zmod_div_mod	40
Coq.ZArith.Znumtheory.Zmod_divide_minus	40
Coq.ZArith.Znumtheory.Zdivide_mod_minus	40
Coq.ZArith.Znumtheory.Zis_gcd_sym	40	16.4	synth with cache (only 1: intros l; only 1: firstorder).	7.80054402351	1183
Coq.ZArith.Znumtheory.Zis_gcd_0	40	8	synth with cache (only 1: firstorder).	0.238731145859	30
Coq.ZArith.Znumtheory.Zis_gcd_1	40	2.23	synth with cache (only 1: fix sqrtrem_spec 1; only 1: auto).	12.062869072	2128
Coq.ZArith.Znumtheory.Zis_gcd_refl	40	0.1.1.2	synth with cache (only 1: constructor; only 1: auto with zarith; only 1: auto with zarith; only 1: trivial).	0.192935943604	8
Coq.ZArith.Znumtheory.Zis_gcd_minus	40	2.0.2.2.2	synth with cache (only 1: induction 1; only 1: constructor; only 1: intuition; only 1: trivial; only 1: intuition).	2.07531499863	165
Coq.ZArith.Znumtheory.Zis_gcd_opp	40	1.2.1.3.1	synth with cache (only 1: induction 1; only 1: constructor; only 1: intuition; only 1: intuition; only 1: intuition).	2.21477103233	177
Coq.ZArith.Znumtheory.Zis_gcd_0_abs	40
Coq.ZArith.Znumtheory.Zis_gcd_unique	40
Coq.ZArith.Znumtheory.Zis_gcd_for_euclid	40
Coq.ZArith.Znumtheory.Zis_gcd_for_euclid2	40
Coq.ZArith.Znumtheory.extended_euclid_algorithm.euclid_rec	40
Coq.ZArith.Znumtheory.extended_euclid_algorithm.euclid	40
Coq.ZArith.Znumtheory.Zis_gcd_uniqueness_apart_sign	40	0.0.2.0.0.0.0.0	synth with cache (only 1: intros a b c d [Hc1 Hc2 Hc3] [Hd1 Hd2 Hd3]; only 1: assert (c | d) by auto; only 1: assert (d | c) by auto; only 1: assert (c | d) by auto; only 1: assert (c | d) by auto; only 1: apply Z.divide_antisym; only 1: trivial; only 1: trivial).	1.92673110962	32
Coq.ZArith.Znumtheory.Zis_gcd_bezout	40
Coq.ZArith.Znumtheory.Zis_gcd_mult	40
Coq.ZArith.Znumtheory.rel_prime_bezout	40
Coq.ZArith.Znumtheory.bezout_rel_prime	40
Coq.ZArith.Znumtheory.Gauss	40
Coq.ZArith.Znumtheory.rel_prime_mult	40	0.4.10	synth with cache (only 1: fix gcd_greatest 1; only 1: intros a b c Ha Hb; only 1: auto).	5.64432811737	498
Coq.ZArith.Znumtheory.rel_prime_cross_prod	40
Coq.ZArith.Znumtheory.Zis_gcd_rel_prime	40
Coq.ZArith.Znumtheory.rel_prime_sym	40	1.0.0.5.2	synth with cache (only 1: simple induction 1; only 1: constructor; only 1: trivial; only 1: trivial; only 1: auto).	4.56248092651	221
Coq.ZArith.Znumtheory.rel_prime_div	40
Coq.ZArith.Znumtheory.rel_prime_1	40	1.1.1.1.6	synth with cache (only 1: constructor; only 1: auto with zarith; only 1: exists n; only 1: now Z.nzsimpl'; only 1: trivial).	5.43488407135	353
Coq.ZArith.Znumtheory.not_rel_prime_0	40
Coq.ZArith.Znumtheory.rel_prime_mod	40
Coq.ZArith.Znumtheory.rel_prime_mod_rev	40
Coq.ZArith.Znumtheory.Zrel_prime_neq_mod_0	40
Coq.ZArith.Znumtheory.prime_divisors	40
Coq.ZArith.Znumtheory.prime_rel_prime	40
Coq.ZArith.Znumtheory.rel_prime_le_prime	40	1.4	synth with cache (only 1: induction 1; only 1: auto).	0.241014957428	16
Coq.ZArith.Znumtheory.prime_mult	40
Coq.ZArith.Znumtheory.not_prime_0	40	2.0.3.24	synth with cache (only 1: simple induction 1; only 1: intuition; only 1: contradict H; only 1: discriminate).	7.98331999779	1377
Coq.ZArith.Znumtheory.not_prime_1	40	4.18	synth with cache (only 1: simple induction 1; only 1: discriminate).	6.44408988953	881
Coq.ZArith.Znumtheory.prime_2	40
Coq.ZArith.Znumtheory.prime_3	40
Coq.ZArith.Znumtheory.prime_ge_2	40
Coq.ZArith.Znumtheory.Z_0_1_more	40
Coq.ZArith.Znumtheory.prime_alt	40
Coq.ZArith.Znumtheory.square_not_prime	40
Coq.ZArith.Znumtheory.prime_div_prime	40
Coq.ZArith.Znumtheory.Zgcd_is_gcd	40
Coq.ZArith.Znumtheory.Zgcd_spec	40
Coq.ZArith.Znumtheory.Zdivide_Zgcd	40	0.3.8	synth with cache (only 1: fix gcd_greatest 1; only 1: intros a b c Ha Hb; only 1: auto).	3.82255315781	459
Coq.ZArith.Znumtheory.Zis_gcd_gcd	40
Coq.ZArith.Znumtheory.Zgcd_div_swap0	40
Coq.ZArith.Znumtheory.Zgcd_div_swap	40
Coq.ZArith.Znumtheory.Zgcd_ass	40
Coq.ZArith.Znumtheory.Zgcd_1_rel_prime	40
Coq.ZArith.Znumtheory.rel_prime_dec	40
Coq.ZArith.Znumtheory.prime_dec_aux	40
Coq.ZArith.Znumtheory.prime_dec	40
Coq.ZArith.Znumtheory.not_prime_divide	40
Coq.ZArith.Zdiv.Z_div_mod_POS	40
Coq.ZArith.Zdiv.Z_div_mod	40
Coq.ZArith.Zdiv.Remainder_equiv	40
Coq.ZArith.Zdiv.Z_div_mod_full	40
Coq.ZArith.Zdiv.Z_mod_remainder	40
Coq.ZArith.Zdiv.Z_div_mod_eq	40
Coq.ZArith.Zdiv.Zmod_eq_full	40
Coq.ZArith.Zdiv.Zmod_eq	40
Coq.ZArith.Zdiv.Zdiv_eucl_exist	40
Coq.ZArith.Zdiv.Zdiv_mod_unique	40
Coq.ZArith.Zdiv.Zdiv_unique	40
Coq.ZArith.Zdiv.Zmod_unique	40
Coq.ZArith.Zdiv.Zmod_0_l	40	0.0.1	synth with cache (only 1: intros; only 1: Z.bitwise; only 1: trivial).	0.208570957184	4
Coq.ZArith.Zdiv.Zmod_0_r	40	1.1.1.1	synth with cache (only 1: destruct a; only 1: auto; only 1: auto; only 1: auto).	0.227568149567	8
Coq.ZArith.Zdiv.Zdiv_0_l	40	0.0.1	synth with cache (only 1: intros; only 1: Z.bitwise; only 1: trivial).	0.19115114212	4
Coq.ZArith.Zdiv.Zdiv_0_r	40	1.1.0.0	synth with cache (only 1: destruct a; only 1: auto; only 1: auto; only 1: auto).	0.510660886765	6
Coq.ZArith.Zdiv.Zmod_1_r	40	6.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: now Z.nzsimpl').	0.367729902267	19
Coq.ZArith.Zdiv.Zdiv_1_r	40	1.0	synth with cache (only 1: intro n; only 1: now Z.nzsimpl').	0.185616970062	3
Coq.ZArith.Zdiv.Z_mod_same_full	40
Coq.ZArith.Zdiv.Z_mod_mult	40
Coq.ZArith.Zdiv.Z_div_pos	40
Coq.ZArith.Zdiv.Z_div_ge0	40
Coq.ZArith.Zdiv.Z_div_lt	40
Coq.ZArith.Zdiv.Z_div_ge	40
Coq.ZArith.Zdiv.Z_div_le	40	0.2.5.0	synth with cache (only 1: intros a b c Hc Hab; only 1: apply Z.div_le_mono; only 1: auto using Z.gt_lt, Z.ge_le; only 1: trivial).	2.89857983589	80
Coq.ZArith.Zdiv.Z_mult_div_ge	40
Coq.ZArith.Zdiv.Z_mult_div_ge_neg	40
Coq.ZArith.Zdiv.Z_div_exact_full_1	40
Coq.ZArith.Zdiv.Z_div_exact_full_2	40	0.0.1.6.4	synth with cache (only 1: intros x y z; only 1: rewrite Z.div_exact; only 1: symmetry; only 1: auto; only 1: trivial).	8.25017118454	621
Coq.ZArith.Zdiv.Zmod_le	40
Coq.ZArith.Zdiv.Zdiv_lt_upper_bound	40
Coq.ZArith.Zdiv.Zdiv_le_upper_bound	40
Coq.ZArith.Zdiv.Zdiv_le_lower_bound	40
Coq.ZArith.Zdiv.Zdiv_le_compat_l	40
Coq.ZArith.Zdiv.Zdiv_sgn	40
Coq.ZArith.Zdiv.Z_mod_plus_full	40
Coq.ZArith.Zdiv.Zdiv_opp_opp	40
Coq.ZArith.Zdiv.Zmod_opp_opp	40
Coq.ZArith.Zdiv.Z_mod_zero_opp_full	40
Coq.ZArith.Zdiv.Z_mod_nz_opp_full	40
Coq.ZArith.Zdiv.Z_mod_zero_opp_r	40
Coq.ZArith.Zdiv.Z_mod_nz_opp_r	40
Coq.ZArith.Zdiv.Z_div_zero_opp_full	40
Coq.ZArith.Zdiv.Z_div_nz_opp_full	40
Coq.ZArith.Zdiv.Z_div_zero_opp_r	40
Coq.ZArith.Zdiv.Z_div_nz_opp_r	40
Coq.ZArith.Zdiv.Zdiv_mult_cancel_r	40
Coq.ZArith.Zdiv.Zdiv_mult_cancel_l	40
Coq.ZArith.Zdiv.Zmult_mod_distr_l	40
Coq.ZArith.Zdiv.Zmult_mod_distr_r	40
Coq.ZArith.Zdiv.Zmod_mod	40
Coq.ZArith.Zdiv.Zmult_mod	40
Coq.ZArith.Zdiv.Zplus_mod	40
Coq.ZArith.Zdiv.Zminus_mod	40
Coq.ZArith.Zdiv.Zplus_mod_idemp_l	40
Coq.ZArith.Zdiv.Zplus_mod_idemp_r	40	0.0.0	synth with cache (only 1: intros; only 1: rewrite Zplus_mod, Zmod_mod, <- Zplus_mod; only 1: trivial).	0.182713985443	3
Coq.ZArith.Zdiv.Zminus_mod_idemp_l	40
Coq.ZArith.Zdiv.Zminus_mod_idemp_r	40	0.6.0	synth with cache (only 1: intros; only 1: rewrite Zminus_mod, Zmod_mod, <- Zminus_mod; only 1: trivial).	0.281815052032	16
Coq.ZArith.Zdiv.Zmult_mod_idemp_l	40
Coq.ZArith.Zdiv.Zmult_mod_idemp_r	40	0.0.0	synth with cache (only 1: intros; only 1: rewrite Zmult_mod, Zmod_mod, <- Zmult_mod; only 1: trivial).	0.177504062653	3
Coq.ZArith.Zdiv.EqualityModulo.eqm_refl	40	3.0	synth with cache (only 1: intros; only 1: reflexivity).	0.137084960938	5
Coq.ZArith.Zdiv.EqualityModulo.eqm_sym	40	3.0	synth with cache (only 1: intros; only 1: intuition).	0.138792991638	5
Coq.ZArith.Zdiv.EqualityModulo.eqm_trans	40	5.0.7	synth with cache (only 1: unfold eqm; only 1: intros x y z; only 1: intuition auto; Z.Private_Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	3.34967803955	360
Coq.ZArith.Zdiv.EqualityModulo.eqm_setoid	40
Coq.ZArith.Zdiv.EqualityModulo.Zplus_eqm	40
Coq.ZArith.Zdiv.EqualityModulo.Zminus_eqm	40
Coq.ZArith.Zdiv.EqualityModulo.Zmult_eqm	40
Coq.ZArith.Zdiv.EqualityModulo.Zopp_eqm	40
Coq.ZArith.Zdiv.EqualityModulo.Zmod_eqm	40
Coq.ZArith.Zdiv.Zdiv_Zdiv	40
Coq.ZArith.Zdiv.Zmod_div	40
Coq.ZArith.Zdiv.Zdiv_mult_le	40
Coq.ZArith.Zdiv.Zmod_divides	40
Coq.ZArith.Zdiv.Zmod_odd	40
Coq.ZArith.Zdiv.Zmod_even	40
Coq.ZArith.Zdiv.Zodd_mod	40	5.5.0	synth with cache (only 1: intros a; only 1: rewrite Zmod_odd, Zodd_even_bool; only 1: now destruct Z.even).	7.25270295143	470
Coq.ZArith.Zdiv.Zeven_mod	40
Coq.ZArith.Zdiv.Z_mod_same	40	0.2.4.0	synth with cache (only 1: intros; only 1: zero_or_not a; only 1: apply Z.mod_same; only 1: trivial).	1.25883603096	55
Coq.ZArith.Zdiv.Z_div_same	40
Coq.ZArith.Zdiv.Z_div_plus	40
Coq.ZArith.Zdiv.Z_div_mult	40
Coq.ZArith.Zdiv.Z_mod_plus	40	0.3.1.0	synth with cache (only 1: intros; only 1: zero_or_not c; only 1: apply Z.mod_add; only 1: trivial).	0.434165000916	17
Coq.ZArith.Zdiv.Z_div_exact_1	40	0.0.1.1.0	synth with cache (only 1: intros a b Hb; only 1: zero_or_not b; only 1: rewrite Z.div_exact; only 1: trivial; only 1: trivial).	0.274024009705	7
Coq.ZArith.Zdiv.Z_div_exact_2	40	0.0.2.4.2.5.0	synth with cache (only 1: intros a b Hb; only 1: zero_or_not b; only 1: intros H; only 1: now Z.nzsimpl; only 1: rewrite Z.div_exact; only 1: trivial; only 1: trivial).	18.1377670765	1310
Coq.ZArith.Zdiv.Z_mod_zero_opp	40	0.0.4.3.5	synth with cache (only 1: intros; only 1: zero_or_not b; only 1: apply Z.mod_opp_l_z; only 1: trivial; only 1: trivial).	9.41696405411	528
Coq.ZArith.Zdiv.Zmod_POS_correct	40
Coq.ZArith.Zdiv.Zmod'_correct	40
Coq.ZArith.Zdiv.Zdiv_eucl_extended	40
Coq.ZArith.Zdiv.div_Zdiv	40
Coq.ZArith.Zdiv.mod_Zmod	40
Coq.ZArith.Zeuclid.ZEuclid.mod_wd	40	1.0.1	synth with cache (only 1: intros a a' Ha b b' Hb; only 1: Z.bitwise; only 1: now rewrite Ha, Hb).	0.21043586731	14
Coq.ZArith.Zeuclid.ZEuclid.div_wd	40	1.0.2	synth with cache (only 1: intros a a' Ha b b' Hb; only 1: Z.bitwise; only 1: now rewrite Ha, Hb).	0.20970916748	15
Coq.ZArith.Zeuclid.ZEuclid.div_mod	40
Coq.ZArith.Zeuclid.ZEuclid.mod_always_pos	40
Coq.ZArith.Zeuclid.ZEuclid.mod_bound_pos	40
Coq.ZArith.Zabs.Zabs_ind	40
Coq.ZArith.Zabs.Zabs_intro	40	18.7	synth with cache (only 1: intros x y; only 1: easy || now destruct y).	13.6593580246	2264
Coq.ZArith.Zabs.Zabs_dec	40
Coq.ZArith.Zabs.Zabs_spec	40
Coq.ZArith.Zabs.Zsgn_spec	40
Coq.ZArith.Zabs.Zabs_nat_le	40
Coq.ZArith.Zabs.Zabs_nat_lt	40
Coq.ZArith.Int.MoreInt.eqb_eq	40
Coq.ZArith.Int.MoreInt.eqb_neq	40
Coq.ZArith.Int.MoreInt.ltb_lt	40
Coq.ZArith.Int.MoreInt.ltb_nlt	40
Coq.ZArith.Int.MoreInt.leb_le	40
Coq.ZArith.Int.MoreInt.leb_nle	40
Coq.ZArith.Int.MoreInt.norm_ei_correct	40
Coq.ZArith.Int.MoreInt.norm_ez_correct	40
Coq.ZArith.Int.MoreInt.norm_ep_correct	40
Coq.ZArith.Int.MoreInt.norm_ep_correct2	40
Coq.ZArith.Int.Z_as_Int.gt_le_dec	40
Coq.ZArith.Int.Z_as_Int.ge_lt_dec	40
Coq.ZArith.Int.Z_as_Int.i2z_eq	40	2	synth with cache (only 1: now injection 1 || (intros; now f_equal)).	0.0915820598602	3
Coq.ZArith.Int.Z_as_Int.i2z_0	40	0	synth with cache (only 1: trivial).	0.118716955185	1
Coq.ZArith.Int.Z_as_Int.i2z_1	40	0	synth with cache (only 1: reflexivity).	0.111668109894	1
Coq.ZArith.Int.Z_as_Int.i2z_2	40	2	synth with cache (only 1: trivial).	0.114141941071	3
Coq.ZArith.Int.Z_as_Int.i2z_3	40	0	synth with cache (only 1: reflexivity).	0.11324095726	1
Coq.ZArith.Int.Z_as_Int.i2z_add	40	0	synth with cache (only 1: trivial).	0.104630947113	1
Coq.ZArith.Int.Z_as_Int.i2z_opp	40	7	synth with cache (only 1: auto).	0.107371091843	8
Coq.ZArith.Int.Z_as_Int.i2z_sub	40	0	synth with cache (only 1: reflexivity).	0.101686000824	1
Coq.ZArith.Int.Z_as_Int.i2z_mul	40	0	synth with cache (only 1: reflexivity).	0.0998020172119	1
Coq.ZArith.Int.Z_as_Int.i2z_max	40	0	synth with cache (only 1: reflexivity).	0.0979430675507	1
Coq.ZArith.Int.Z_as_Int.i2z_eqb	40	1	synth with cache (only 1: trivial).	0.0956828594208	2
Coq.ZArith.Int.Z_as_Int.i2z_leb	40	0	synth with cache (only 1: reflexivity).	0.0924980640411	1
Coq.ZArith.Int.Z_as_Int.i2z_ltb	40	0	synth with cache (only 1: reflexivity).	0.0905220508575	1
Coq.ZArith.Zpower.Zpower_nat_0_r	40	0.0	synth with cache (only 1: simpl; only 1: trivial).	0.129014015198	2
Coq.ZArith.Zpower.Zpower_nat_succ_r	40	1.0	synth with cache (only 1: simpl; only 1: auto).	0.13019323349	3
Coq.ZArith.Zpower.Zpower_nat_is_exp	40
Coq.ZArith.Zpower.Zpower_pos_nat	40	11.5.4	synth with cache (only 1: generalize 1; only 1: intros; only 1: apply Pos2Nat.inj_iter).	21.8501079082	2585
Coq.ZArith.Zpower.Zpower_nat_Z	40
Coq.ZArith.Zpower.Zpower_nat_Zpower	40
Coq.ZArith.Zpower.Zpower_pos_is_exp	40
Coq.ZArith.Zpower.Zpower_exp	40
Coq.ZArith.Zpower.Powers_of_2.shift_nat_equiv	40	1	synth with cache (only 1: auto).	0.0843307971954	2
Coq.ZArith.Zpower.Powers_of_2.shift_pos_equiv	40	0.1	synth with cache (only 1: simpl; only 1: auto).	0.126884937286	3
Coq.ZArith.Zpower.Powers_of_2.shift_equiv	40
Coq.ZArith.Zpower.Powers_of_2.two_power_nat_equiv	40
Coq.ZArith.Zpower.Powers_of_2.two_power_pos_equiv	40
Coq.ZArith.Zpower.Powers_of_2.two_p_equiv	40
Coq.ZArith.Zpower.Powers_of_2.two_power_nat_S	40	2.0.1.0.1.0	synth with cache (only 1: simpl; only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: auto).	0.244307994843	10
Coq.ZArith.Zpower.Powers_of_2.shift_nat_plus	40
Coq.ZArith.Zpower.Powers_of_2.shift_nat_correct	40
Coq.ZArith.Zpower.Powers_of_2.two_power_nat_correct	40
Coq.ZArith.Zpower.Powers_of_2.shift_pos_nat	40	19	synth with cache (only 1: apply Pos2Nat.inj_iter).	0.81067109108	165
Coq.ZArith.Zpower.Powers_of_2.two_power_pos_nat	40
Coq.ZArith.Zpower.Powers_of_2.shift_pos_correct	40
Coq.ZArith.Zpower.Powers_of_2.two_power_pos_correct	40	6	synth with cache (only 1: now apply Pos.iter_swap_gen).	0.16646695137	13
Coq.ZArith.Zpower.Powers_of_2.two_power_pos_is_exp	40
Coq.ZArith.Zpower.Powers_of_2.two_p_is_exp	40
Coq.ZArith.Zpower.Powers_of_2.two_p_gt_ZERO	40	19	synth with cache (only 1: now destruct x).	4.93781900406	631
Coq.ZArith.Zpower.Powers_of_2.two_p_S	40
Coq.ZArith.Zpower.Powers_of_2.two_p_pred	40
Coq.ZArith.Zpower.power_div_with_rest.Zdiv_rest_correct1	40
Coq.ZArith.Zpower.power_div_with_rest.Zdiv_rest_correct2	40
Coq.ZArith.Zpower.power_div_with_rest.Zdiv_rest_correct	40
Coq.ZArith.Zpower.power_div_with_rest.Zdiv_rest_ok	40
Coq.ZArith.Zpower.power_div_with_rest.Zdiv_rest_shiftr	40
Coq.ZArith.Zwf.wf_proof.Zwf_well_founded	40
Coq.ZArith.Zwf.wf_proof_up.Zwf_up_well_founded	40
Coq.ZArith.auxiliary.Zne_left	40
Coq.ZArith.auxiliary.Zegal_left	40
Coq.ZArith.auxiliary.Zle_left	40	3	synth with cache (only 1: apply Z.le_0_sub).	0.196533918381	18
Coq.ZArith.auxiliary.Zle_left_rev	40	2	synth with cache (only 1: apply Z.le_0_sub).	0.137957811356	12
Coq.ZArith.auxiliary.Zlt_left_rev	40	3	synth with cache (only 1: apply Z.lt_0_sub).	0.125431060791	13
Coq.ZArith.auxiliary.Zlt_left_lt	40	20	synth with cache (only 1: apply Z.lt_0_sub).	4.34339523315	467
Coq.ZArith.auxiliary.Zlt_left	40
Coq.ZArith.auxiliary.Zge_left	40	4.7	synth with cache (only 1: Z.swap_greater; only 1: apply Z.le_0_sub).	1.86671805382	148
Coq.ZArith.auxiliary.Zgt_left	40	1.1.0.0.2	synth with cache (only 1: Z.swap_greater; only 1: intro H; only 1: rewrite Z.add_shuffle0; only 1: change (-1) with (- Z.succ 0); only 1: now apply Z.le_0_sub, Z.le_succ_l, Z.lt_0_sub).	1.52132081985	86
Coq.ZArith.auxiliary.Zgt_left_gt	40	4.2	synth with cache (only 1: Z.swap_greater; only 1: apply Z.lt_0_sub).	0.241608858109	23
Coq.ZArith.auxiliary.Zgt_left_rev	40	2.1	synth with cache (only 1: Z.swap_greater; only 1: apply Z.lt_0_sub).	0.270649909973	26
Coq.ZArith.auxiliary.Zle_mult_approx	40
Coq.ZArith.auxiliary.Zmult_le_approx	40
Coq.ZArith.Zmax.Zmax_spec	40
Coq.ZArith.Zmax.Zmax_left	40
Coq.ZArith.Zmax.Zpos_max_1	40	3.0.0.9	synth with cache (only 1: destruct p; only 1: trivial; only 1: trivial; only 1: now Z.nzsimpl').	2.0300090313	127
Coq.ZArith.Zmin.Zmin_spec	40
Coq.ZArith.Zmin.Zmin_irreducible	40
Coq.ZArith.Zmin.Zmin_le_prime_inf	40
Coq.ZArith.Zmin.Zpos_min_1	40	18	synth with cache (only 1: now destruct p).	0.611801147461	145
Coq.ZArith.Zgcd_alt.Zgcdn_pos	40
Coq.ZArith.Zgcd_alt.Zgcd_alt_pos	40
Coq.ZArith.Zgcd_alt.Zgcdn_linear_bound	40
Coq.ZArith.Zgcd_alt.fibonacci_pos	40
Coq.ZArith.Zgcd_alt.fibonacci_incr	40
Coq.ZArith.Zgcd_alt.Zgcdn_worst_is_fibonacci	40
Coq.ZArith.Zgcd_alt.Zgcdn_ok_before_fibonacci	40
Coq.ZArith.Zgcd_alt.Zgcd_bound_fibonacci	40
Coq.ZArith.Zgcd_alt.Zgcd_bound_opp	40	0.0.0.17	synth with cache (only 1: destruct a; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	1.18010592461	190
Coq.ZArith.Zgcd_alt.Zgcdn_opp	40
Coq.ZArith.Zgcd_alt.Zgcdn_is_gcd_pos	40	1.10.8	synth with cache (only 1: revert n; only 1: fix le_div2 1; only 1: auto).	12.159416914	1320
Coq.ZArith.Zgcd_alt.Zgcdn_is_gcd	40	1.10.13	synth with cache (only 1: revert n; only 1: fix le_div2 1; only 1: auto).	12.6780171394	1542
Coq.ZArith.Zgcd_alt.Zgcd_is_gcd	40
Coq.ZArith.Zorder.Ztrichotomy_inf	40
Coq.ZArith.Zorder.Ztrichotomy	40	0.0.0.0.0.0.0.1.2	synth with cache (only 1: unfold Z.gt, Z.lt; only 1: generalize (Z.compare_eq n m); only 1: destruct (n ?= m); only 1: intro H; only 1: auto; only 1: intro H; only 1: auto; only 1: intro H; only 1: auto).	1.65553212166	91
Coq.ZArith.Zorder.dec_Zne	40
Coq.ZArith.Zorder.dec_Zgt	40
Coq.ZArith.Zorder.dec_Zge	40
Coq.ZArith.Zorder.not_Zeq	40
Coq.ZArith.Zorder.Zle_not_lt	40	0.0	synth with cache (only 1: intro H; only 1: Z.order).	0.117035865784	2
Coq.ZArith.Zorder.Zlt_not_le	40	0.0	synth with cache (only 1: intro H; only 1: Z.order).	0.116463899612	2
Coq.ZArith.Zorder.Zle_not_gt	40	1.0	synth with cache (only 1: intro H; only 1: now rewrite <- ?Z.pred_le_mono).	0.116533041	3
Coq.ZArith.Zorder.Zgt_not_le	40	2.0	synth with cache (only 1: intro H; only 1: now rewrite <- ?Z.pred_le_mono).	0.124341964722	4
Coq.ZArith.Zorder.Znot_ge_lt	40	8.12.0	synth with cache (only 1: intro H; only 1: Z.swap_greater; only 1: Z.order).	2.20877885818	491
Coq.ZArith.Zorder.Znot_lt_ge	40	0.0	synth with cache (only 1: intro H; only 1: trivial).	0.118906974792	2
Coq.ZArith.Zorder.Znot_gt_le	40	0.0	synth with cache (only 1: intro H; only 1: trivial).	0.118559122086	2
Coq.ZArith.Zorder.Znot_le_gt	40	1.3	synth with cache (only 1: Z.swap_greater; only 1: apply Z.nle_gt).	0.237594842911	21
Coq.ZArith.Zorder.not_Zne	40
Coq.ZArith.Zorder.Zgt_asym	40	0.5.0	synth with cache (only 1: intro H; only 1: Z.swap_greater; only 1: Z.order).	0.168396949768	8
Coq.ZArith.Zorder.Zgt_irrefl	40	52	synth with cache (only 1: easy || now destruct 1).	6.01762104034	3619
Coq.ZArith.Zorder.Zle_lt_or_eq	40
Coq.ZArith.Zorder.Zgt_trans	40	2.1.0	synth with cache (only 1: Z.swap_greater; only 1: intros; only 1: now transitivity m).	1.74457097054	74
Coq.ZArith.Zorder.Zle_gt_trans	40	4.2.1	synth with cache (only 1: Z.swap_greater; only 1: intros; only 1: Z.order).	0.450131177902	27
Coq.ZArith.Zorder.Zgt_le_trans	40	4.2.1	synth with cache (only 1: Z.swap_greater; only 1: intros; only 1: Z.order).	1.55029702187	63
Coq.ZArith.Zorder.Zge_trans	40	2.1.1	synth with cache (only 1: Z.swap_greater; only 1: intros; only 1: now transitivity m).	0.168464183807	7
Coq.ZArith.Zorder.Zsucc_le_compat	40
Coq.ZArith.Zorder.Zsucc_lt_compat	40
Coq.ZArith.Zorder.Zsucc_gt_compat	40	0.5	synth with cache (only 1: Z.swap_greater; only 1: apply Z.succ_lt_mono).	0.18417096138	14
Coq.ZArith.Zorder.Zsucc_gt_reg	40	8.5	synth with cache (only 1: Z.swap_greater; only 1: apply Z.succ_lt_mono).	1.80602502823	217
Coq.ZArith.Zorder.Zsucc_le_reg	40	13	synth with cache (only 1: apply Z.succ_le_mono).	0.780366897583	118
Coq.ZArith.Zorder.Zsucc_lt_reg	40	1	synth with cache (only 1: apply Z.succ_lt_mono).	0.130858898163	11
Coq.ZArith.Zorder.Zgt_succ	40	2.11	synth with cache (only 1: Z.swap_greater; only 1: apply Z.lt_succ_diag_r).	0.402518033981	78
Coq.ZArith.Zorder.Znot_le_succ	40	3.0.8.6	synth with cache (only 1: intro H; only 1: apply H; only 1: apply Z.lt_gt; only 1: apply Z.lt_succ_diag_r).	3.17636799812	532
Coq.ZArith.Zorder.Zgt_le_succ	40
Coq.ZArith.Zorder.Zle_gt_succ	40
Coq.ZArith.Zorder.Zle_lt_succ	40	0	synth with cache (only 1: apply Z.lt_succ_r).	0.0809850692749	1
Coq.ZArith.Zorder.Zlt_le_succ	40	0	synth with cache (only 1: apply Z.le_succ_l).	0.0816328525543	1
Coq.ZArith.Zorder.Zgt_succ_le	40	9.4	synth with cache (only 1: Z.swap_greater; only 1: apply Z.lt_succ_r).	1.58139801025	218
Coq.ZArith.Zorder.Zlt_succ_le	40	0	synth with cache (only 1: apply Z.lt_succ_r).	0.0816118717194	1
Coq.ZArith.Zorder.Zle_succ_gt	40	6.5	synth with cache (only 1: Z.swap_greater; only 1: apply Z.le_succ_l).	1.09938097	124
Coq.ZArith.Zorder.Zle_succ_le	40
Coq.ZArith.Zorder.Zgt_succ_pred	40
Coq.ZArith.Zorder.Zlt_succ_pred	40	0	synth with cache (only 1: apply Z.lt_succ_lt_pred).	0.0917251110077	1
Coq.ZArith.Zorder.Zlt_0_le_0_pred	40
Coq.ZArith.Zorder.Zgt_0_le_0_pred	40	0.21	synth with cache (only 1: Z.swap_greater; only 1: apply Z.lt_le_pred).	4.87671089172	872
Coq.ZArith.Zorder.Zle_neg_pos	40	1.0	synth with cache (only 1: intro; only 1: easy).	0.142498016357	3
Coq.ZArith.Zorder.Zgt_pos_0	40	1.0	synth with cache (only 1: intros a; only 1: reflexivity).	0.137807846069	3
Coq.ZArith.Zorder.Zle_0_pos	40	1.0	synth with cache (only 1: intros a; only 1: easy).	0.139156103134	3
Coq.ZArith.Zorder.Zlt_neg_0	40	2.0	synth with cache (only 1: intro n; only 1: reflexivity).	0.361239910126	4
Coq.ZArith.Zorder.Zle_0_nat	40	14.1.3.4.1	synth with cache (only 1: intros; only 1: induction n; only 1: intuition; only 1: simpl; only 1: easy).	29.0732030869	4294
Coq.ZArith.Zorder.Zgt_succ_gt_or_eq	40
Coq.ZArith.Zorder.Zplus_gt_compat_l	40
Coq.ZArith.Zorder.Zplus_gt_compat_r	40
Coq.ZArith.Zorder.Zplus_le_compat_l	40
Coq.ZArith.Zorder.Zplus_le_compat_r	40
Coq.ZArith.Zorder.Zplus_lt_compat_l	40	0	synth with cache (only 1: apply Z.add_lt_mono_l).	0.0932128429413	1
Coq.ZArith.Zorder.Zplus_lt_compat_r	40	2	synth with cache (only 1: apply Z.add_lt_mono_r).	0.154298067093	11
Coq.ZArith.Zorder.Zplus_le_reg_l	40	7	synth with cache (only 1: apply Z.add_le_mono_l).	0.312188148499	33
Coq.ZArith.Zorder.Zplus_le_reg_r	40	10	synth with cache (only 1: apply Z.add_le_mono_r).	0.778568983078	67
Coq.ZArith.Zorder.Zplus_lt_reg_l	40	8	synth with cache (only 1: apply Z.add_lt_mono_l).	0.237550020218	26
Coq.ZArith.Zorder.Zplus_lt_reg_r	40	8	synth with cache (only 1: apply Z.add_lt_mono_r).	0.225755929947	23
Coq.ZArith.Zorder.Zplus_gt_reg_l	40	0.7	synth with cache (only 1: Z.swap_greater; only 1: apply Z.add_lt_mono_l).	0.230301856995	16
Coq.ZArith.Zorder.Zplus_gt_reg_r	40	1.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.add_lt_mono_r).	0.363432884216	3
Coq.ZArith.Zorder.Zmult_le_compat_r	40
Coq.ZArith.Zorder.Zmult_le_compat_l	40
Coq.ZArith.Zorder.Zmult_lt_compat_r	40
Coq.ZArith.Zorder.Zmult_gt_compat_r	40	0.18	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).	1.36447381973	275
Coq.ZArith.Zorder.Zmult_gt_0_lt_compat_r	40	0.1	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).	0.138899803162	3
Coq.ZArith.Zorder.Zmult_gt_0_le_compat_r	40
Coq.ZArith.Zorder.Zmult_lt_0_le_compat_r	40	0	synth with cache (only 1: apply Z.mul_le_mono_pos_r).	0.112742185593	1
Coq.ZArith.Zorder.Zmult_gt_0_lt_compat_l	40
Coq.ZArith.Zorder.Zmult_lt_compat_l	40	1	synth with cache (only 1: apply Z.mul_lt_mono_pos_l).	0.106976032257	2
Coq.ZArith.Zorder.Zmult_gt_compat_l	40	1.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_l).	0.174335956573	3
Coq.ZArith.Zorder.Zmult_ge_compat_r	40	6.0.2	synth with cache (only 1: Z.swap_greater; only 1: intros; only 1: now apply Z.mul_le_mono_nonneg_r).	0.739651918411	73
Coq.ZArith.Zorder.Zmult_ge_compat_l	40	7.0.0	synth with cache (only 1: Z.swap_greater; only 1: intros; only 1: now apply Z.mul_le_mono_nonneg_l).	0.199497938156	10
Coq.ZArith.Zorder.Zmult_ge_compat	40
Coq.ZArith.Zorder.Zmult_le_compat	40	29.4	synth with cache (only 1: intros; only 1: now apply Z.mul_le_mono_nonneg).	34.304254055	6257
Coq.ZArith.Zorder.Zmult_gt_0_lt_reg_r	40	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).	0.181145191193	2
Coq.ZArith.Zorder.Zmult_lt_reg_r	40	0	synth with cache (only 1: apply Z.mul_lt_mono_pos_r).	0.111680984497	1
Coq.ZArith.Zorder.Zmult_le_reg_r	40	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_le_mono_pos_r).	0.167186021805	2
Coq.ZArith.Zorder.Zmult_lt_0_le_reg_r	40	0	synth with cache (only 1: apply Z.mul_le_mono_pos_r).	0.106081008911	1
Coq.ZArith.Zorder.Zmult_ge_reg_r	40	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_le_mono_pos_r).	0.173098087311	2
Coq.ZArith.Zorder.Zmult_gt_reg_r	40	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).	0.346590995789	2
Coq.ZArith.Zorder.Zmult_lt_compat	40
Coq.ZArith.Zorder.Zmult_lt_compat2	40
Coq.ZArith.Zorder.Zmult_gt_0_compat	40	36.1.4	synth with cache (only 1: Z.swap_greater; only 1: intro H; only 1: Z.order_pos).	30.7789750099	6842
Coq.ZArith.Zorder.Zmult_gt_0_le_0_compat	40	24.1	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_le_mono_pos_r).	11.1941001415	1728
Coq.ZArith.Zorder.Zmult_le_0_reg_r	40
Coq.ZArith.Zorder.Zmult_lt_0_reg_r	40
Coq.ZArith.Zorder.Zmult_gt_0_lt_0_reg_r	40	0.2	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_pos_cancel_r).	0.158836126328	4
Coq.ZArith.Zorder.Zmult_gt_0_reg_l	40
Coq.ZArith.Zorder.Zlt_square_simpl	40
Coq.ZArith.Zorder.Zgt_square_simpl	40	0.11	synth with cache (only 1: Z.swap_greater; only 1: apply Z.square_lt_simpl_nonneg).	2.18287396431	163
Coq.ZArith.Zorder.Zeq_plus_swap	40
Coq.ZArith.Zorder.Zlt_0_minus_lt	40
Coq.ZArith.Zorder.Zle_0_minus_le	40
Coq.ZArith.Zorder.Zle_minus_le_0	40	24	synth with cache (only 1: apply Z.le_0_sub).	4.23333001137	608
Coq.ZArith.Zbool.Zle_cases	40
Coq.ZArith.Zbool.Zlt_cases	40
Coq.ZArith.Zbool.Zge_cases	40
Coq.ZArith.Zbool.Zgt_cases	40
Coq.ZArith.Zbool.Zle_bool_imp_le	40
Coq.ZArith.Zbool.Zle_imp_le_bool	40	5	synth with cache (only 1: apply Z.leb_le).	0.0912439823151	6
Coq.ZArith.Zbool.Zle_bool_antisym	40
Coq.ZArith.Zbool.Zle_bool_trans	40	1.26	synth with cache (only 1: rewrite !Z.leb_le; only 1: Z.order).	7.41484093666	1268
Coq.ZArith.Zbool.Zle_bool_total	40
Coq.ZArith.Zbool.Zle_bool_plus_mono	40
Coq.ZArith.Zbool.Zone_pos	40	0	synth with cache (only 1: trivial).	0.10356593132	1
Coq.ZArith.Zbool.Zone_min_pos	40	15.17	synth with cache (only 1: intro H; only 1: now destruct n as [| [| | ]| [| | ]]).	4.36047101021	801
Coq.ZArith.Zbool.Zle_is_le_bool	40	0.0.9	synth with cache (only 1: split; only 1: apply Z.leb_le; only 1: apply Z.leb_le).	1.26234078407	100
Coq.ZArith.Zbool.Zge_is_le_bool	40
Coq.ZArith.Zbool.Zlt_is_lt_bool	40
Coq.ZArith.Zbool.Zgt_is_gt_bool	40
Coq.ZArith.Zbool.Zlt_is_le_bool	40
Coq.ZArith.Zbool.Zgt_is_le_bool	40
Coq.ZArith.Zbool.Zeq_is_eq_bool	40
Coq.ZArith.Zbool.Zeq_bool_eq	40
Coq.ZArith.Zbool.Zeq_bool_neq	40
Coq.ZArith.Zbool.Zeq_bool_if	40
Coq.ZArith.ZArith_dec.Dcompare_inf	40	0.0.0.0	synth with cache (only 1: destruct r; only 1: auto; only 1: auto; only 1: auto).	0.18238401413	4
Coq.ZArith.ZArith_dec.Zcompare_rect	40	0.0.0.5	synth with cache (only 1: destruct (n ?= m); only 1: now intuition; only 1: now intuition; only 1: now intuition).	0.280303001404	14
Coq.ZArith.ZArith_dec.Zcompare_rec	40	0.0.0.1.0	synth with cache (only 1: intros H1 H2 H3; only 1: destruct (n ?= m); only 1: auto; only 1: auto; only 1: auto).	0.237181186676	6
Coq.ZArith.ZArith_dec.decidability.Z_lt_dec	40	0.49	synth with cache (only 1: unfold Z.gt, Z.lt; only 1: decide equality).	26.0696210861	8956
Coq.ZArith.ZArith_dec.decidability.Z_le_dec	40
Coq.ZArith.ZArith_dec.decidability.Z_gt_dec	40
Coq.ZArith.ZArith_dec.decidability.Z_ge_dec	40
Coq.ZArith.ZArith_dec.decidability.Z_lt_ge_dec	40	2.13.10	synth with cache (only 1: unfold Z.ge; only 1: unfold Z.lt; only 1: decide equality).	33.0735309124	3608
Coq.ZArith.ZArith_dec.decidability.Z_lt_le_dec	40
Coq.ZArith.ZArith_dec.decidability.Z_le_gt_dec	40	0.0.0.1.8.10	synth with cache (only 1: unfold Z.le; only 1: unfold Z.gt; only 1: case Z.compare; only 1: now left || now right; only 1: now left || now right; only 1: now left || now right).	25.9415609837	3339
Coq.ZArith.ZArith_dec.decidability.Z_gt_le_dec	40	5.2.0.1.1	synth with cache (only 1: elim Z_le_dec; only 1: auto with arith; only 1: constructor; only 1: Z.swap_greater; only 1: now apply Z.nle_gt).	7.92905092239	595
Coq.ZArith.ZArith_dec.decidability.Z_ge_lt_dec	40	0.0.1.2	synth with cache (only 1: elim Z_lt_ge_dec; only 1: auto with arith; only 1: constructor; only 1: trivial).	0.248996973038	16
Coq.ZArith.ZArith_dec.decidability.Z_le_lt_eq_dec	40
Coq.ZArith.ZArith_dec.Zlt_cotrans	40
Coq.ZArith.ZArith_dec.Zlt_cotrans_pos	40
Coq.ZArith.ZArith_dec.Zlt_cotrans_neg	40
Coq.ZArith.ZArith_dec.not_Zeq_inf	40
Coq.ZArith.ZArith_dec.Z_dec	40	0.1.0.0.0.1.0.0.0.1	synth with cache (only 1: intros n m; only 1: unfold Z.gt, Z.lt; only 1: generalize (Z.compare_eq n m); only 1: destruct (n ?= m); only 1: right; only 1: auto; only 1: left; only 1: auto with relations; only 1: left; only 1: auto with relations).	5.35390710831	343
Coq.ZArith.ZArith_dec.Z_dec'	40
Coq.ZArith.ZArith_dec.Z_zerop	40	0.0.5.0	synth with cache (only 1: intro n; only 1: decide equality; only 1: apply Pos.eq_dec; only 1: apply Pos.eq_dec).	0.195129871368	9
Coq.ZArith.Zpow_alt.Piter_mul_acc	40
Coq.ZArith.Zpow_alt.Piter_op_square	40
Coq.ZArith.Zpow_alt.Zpower_equiv	40
Coq.ZArith.Zpow_alt.Zpower_alt_0_r	40	0	synth with cache (only 1: reflexivity).	0.0968511104584	1
Coq.ZArith.Zpow_alt.Zpower_alt_succ_r	40
Coq.ZArith.Zpow_alt.Zpower_alt_neg_r	40	0.0.3.0.0.5	synth with cache (only 1: destruct b as [| b| b]; only 1: Z.order; only 1: intros Hb; only 1: now elim Hb; only 1: intros Hb; only 1: trivial).	6.82407784462	416
Coq.ZArith.Zpow_alt.Zpower_alt_Ppow	40
Coq.Program.Wf.Well_founded.Fix_F_eq	40	0.2	synth with cache (only 1: destruct r using Acc_inv_dep; only 1: auto).	0.0660889148712	16
Coq.Program.Wf.Well_founded.Fix_F_inv	40
Coq.Program.Wf.Well_founded.Fix_eq	40
Coq.Program.Wf.Well_founded.fix_sub_eq	40	0.0.0.0.2.0	synth with cache (only 1: intro x; only 1: unfold Fix_sub; only 1: rewrite <- Fix_F_eq; only 1: apply F_ext; only 1: intros; only 1: apply Fix_F_inv).	0.0648539066315	8
Coq.Program.Wf.Measure_well_founded.measure_wf	40
Coq.Program.Wf.Fix_rects.F_unfold	40	0.2	synth with cache (only 1: rewrite <- Fix_F_eq; only 1: auto).	0.031082868576	4
Coq.Program.Wf.Fix_rects.Fix_F_sub_rect	40	0.16.6.4.1	synth with cache (only 1: intro x; only 1: induction (Rwf x); only 1: intros; only 1: rewrite <- Fix_F_eq; only 1: auto).	3.6325070858	2762
Coq.Program.Wf.Fix_rects.eq_Fix_F_sub	40	0.4	synth with cache (only 1: apply Fix_F_inv; only 1: auto).	0.0585219860077	15
Coq.Program.Wf.Fix_rects.Fix_sub_rect	40
Coq.Program.Wf.WfExtensionality.fix_sub_eq_ext	40
Coq.Program.Subset.subset_eq	40
Coq.Program.Subset.match_eq_rewrite	40	0.2.32.64	synth with cache (only 1: intros A C h1 h2; only 1: intros [x y]; only 1: subst; only 1: auto).	30.9583790302	66767
Coq.Program.Equality.JMeq_eq_refl	40	0	synth with cache (only 1: apply UIP_refl).	0.0176451206207	1
Coq.Program.Equality.UIP_refl_refl	40	3	synth with cache (only 1: apply UIP).	0.0192241668701	4
Coq.Program.Equality.inj_pairT2_refl	40	3	synth with cache (only 1: apply UIP_refl).	0.0188498497009	4
Coq.Program.Equality.solution_left	40	1.5.10	synth with cache (only 1: intros; only 1: destruct H; only 1: auto).	0.218418836594	180
Coq.Program.Equality.solution_right	40	1.0.0	synth with cache (only 1: intros; only 1: subst; only 1: assumption).	0.0312848091125	4
Coq.Program.Equality.deletion	40	0.0	synth with cache (only 1: intros; only 1: trivial).	0.0237438678741	2
Coq.Program.Equality.simplification_heq	40	3.5.4	synth with cache (only 1: intros; only 1: subst; only 1: auto).	0.156419038773	116
Coq.Program.Equality.simplification_existT2	40	0.2.2.1.6	synth with cache (only 1: intros H J; only 1: apply H; only 1: apply eq_dep_eq; only 1: apply eq_sigT_eq_dep; only 1: assumption).	0.41074514389	216
Coq.Program.Equality.simplification_existT1	40	0.0.8.20.16.21	synth with cache (only 1: intro eq_dep_eq; only 1: intro H; only 1: apply eq_dep_eq; only 1: dependent rewrite H; only 1: trivial; only 1: trivial).	13.2321338654	29007
Coq.Program.Equality.simplification_K	40	1.2.0	synth with cache (only 1: intros; only 1: rewrite UIP_refl; only 1: assumption).	0.032543182373	6
Coq.Program.Combinators.compose_id_left	40	1	synth with cache (only 1: auto).	0.0171549320221	2
Coq.Program.Combinators.compose_id_right	40	0.1	synth with cache (only 1: intros; only 1: exact eq_refl).	0.0230729579926	3
Coq.Program.Combinators.compose_assoc	40	1	synth with cache (only 1: auto).	0.0170829296112	2
Coq.Program.Combinators.flip_flip	40	1	synth with cache (only 1: reflexivity).	0.016811132431	2
Coq.Program.Combinators.prod_uncurry_curry	40	0.1	synth with cache (only 1: intros; only 1: exact eq_refl).	0.0233900547028	3
Coq.Program.Combinators.prod_curry_uncurry	40	0.12.17.25.3.16.1	synth with cache (only 1: intros; only 1: apply functional_extensionality_dep_good; only 1: intros; only 1: apply functional_extensionality_dep_good; only 1: intro H'; only 1: destruct H'; only 1: auto).	23.0036051273	51051
Coq.Sorting.PermutEq.Perm.multiplicity_In	40
Coq.Sorting.PermutEq.Perm.multiplicity_In_O	40
Coq.Sorting.PermutEq.Perm.multiplicity_In_S	40	4.4.2.3.3	synth with cache (only 1: intros; only 1: eapply In_InA, multiplicity_InA in H; only 1: eauto with typeclass_instances; only 1: eauto with typeclass_instances; only 1: eauto with typeclass_instances).	7.86239600182	843
Coq.Sorting.PermutEq.Perm.multiplicity_NoDup	40
Coq.Sorting.PermutEq.Perm.NoDup_permut	40
Coq.Sorting.PermutEq.Perm.permut_In_In	40
Coq.Sorting.PermutEq.Perm.permut_cons_In	40
Coq.Sorting.PermutEq.Perm.permut_nil	40
Coq.Sorting.PermutEq.Perm.permutation_Permutation	40
Coq.Sorting.PermutEq.Perm.permut_length_1	40
Coq.Sorting.PermutEq.Perm.permut_length_2	40
Coq.Sorting.PermutEq.Perm.permut_length	40
Coq.Sorting.PermutEq.Perm.permutation_map	40
Coq.Sorting.Mergesort.Sort.Sorted_merge	40
Coq.Sorting.Mergesort.Sort.Permuted_merge	40
Coq.Sorting.Mergesort.Sort.Sorted_merge_list_to_stack	40
Coq.Sorting.Mergesort.Sort.Permuted_merge_list_to_stack	40
Coq.Sorting.Mergesort.Sort.Sorted_merge_stack	40	1.0.0.2.3.0.5.0.3	synth with cache (only 1: induction stack as [| []]; only 1: simpl; only 1: constructor; only 1: simpl; only 1: induction 1; only 1: apply Sorted_merge; only 1: auto; only 1: auto; only 1: auto).	27.9467511177	2701
Coq.Sorting.Mergesort.Sort.Permuted_merge_stack	40
Coq.Sorting.Mergesort.Sort.Sorted_iter_merge	40
Coq.Sorting.Mergesort.Sort.Permuted_iter_merge	40
Coq.Sorting.Mergesort.Sort.Sorted_sort	40
Coq.Sorting.Mergesort.Sort.LocallySorted_sort	40
Coq.Sorting.Mergesort.Sort.Permuted_sort	40
Coq.Sorting.Mergesort.Sort.StronglySorted_sort	40
Coq.Sorting.Mergesort.NatOrder.leb_total	40	0.21	synth with cache (only 1: fix gcd_divide 1; only 1: auto).	8.72962903976	774
Coq.Sorting.Permutation.Permutation.Permutation_nil	40
Coq.Sorting.Permutation.Permutation.Permutation_nil_cons	40
Coq.Sorting.Permutation.Permutation.Permutation_refl	40	1.0.8	synth with cache (only 1: induction l; only 1: auto; only 1: auto).	0.5368039608	94
Coq.Sorting.Permutation.Permutation.Permutation_sym	40
Coq.Sorting.Permutation.Permutation.Permutation_trans	40	15.3.2	synth with cache (only 1: intros x y z; only 1: intuition auto; PeanoNat.Nat.Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: eauto).	13.91031003	1996
Coq.Sorting.Permutation.Permutation_cons	40	0.3.9	synth with cache (only 1: reduce; only 1: subst; only 1: auto).	0.685671806335	94
Coq.Sorting.Permutation.Permutation_properties.Permutation_in	40	0.4.3.1.0.0.5	synth with cache (only 1: induction 1; only 1: simpl; only 1: auto; only 1: simpl; only 1: intuition; only 1: firstorder; only 1: auto).	21.5724010468	2296
Coq.Sorting.Permutation.Permutation_properties.Permutation_in'	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_app_tail	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_app_head	40	1.0.0.0.9	synth with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	2.0752491951	248
Coq.Sorting.Permutation.Permutation_properties.Permutation_app	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_app'	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_add_inside	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_cons_append	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_app_comm	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_cons_app	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_Add	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_middle	40	0	synth with cache (only 1: auto).	0.0639479160309	1
Coq.Sorting.Permutation.Permutation_properties.Permutation_rev	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_rev'	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_length	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_length'	40	2.0.0.0.0.0.0.3.10	synth with cache (only 1: repeat red; only 1: induction 1; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: now transitivity (length l')).	15.542522192	1095
Coq.Sorting.Permutation.Permutation_properties.Permutation_ind_bis	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_nil_app_cons	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_Add_inv	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_app_inv	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_cons_inv	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_cons_app_inv	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_app_inv_l	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_app_inv_r	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_length_1_inv	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_length_1	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_length_2_inv	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_length_2	40
Coq.Sorting.Permutation.Permutation_properties.NoDup_Permutation	40
Coq.Sorting.Permutation.Permutation_properties.NoDup_Permutation_bis	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_NoDup	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_NoDup'	40
Coq.Sorting.Permutation.Permutation_map.Permutation_map	40
Coq.Sorting.Permutation.Permutation_map.Permutation_map'	40
Coq.Sorting.Permutation.nat_bijection_Permutation	40
Coq.Sorting.Permutation.Permutation_alt.adapt_injective	40
Coq.Sorting.Permutation.Permutation_alt.adapt_ok	40
Coq.Sorting.Permutation.Permutation_alt.Permutation_nth_error	40
Coq.Sorting.Permutation.Permutation_alt.Permutation_nth_error_bis	40
Coq.Sorting.Permutation.Permutation_alt.Permutation_nth	40
Coq.Sorting.PermutSetoid.Permut.list_contents_app	40
Coq.Sorting.PermutSetoid.Permut.permut_refl	40	5	synth with cache (only 1: constructor).	0.186467885971	17
Coq.Sorting.PermutSetoid.Permut.permut_sym	40	3.8	synth with cache (only 1: unfold permutation; only 1: auto with datatypes).	0.307760000229	52
Coq.Sorting.PermutSetoid.Permut.permut_trans	40	0.3.7.5	synth with cache (only 1: unfold permutation, meq; only 1: intros; only 1: rewrite H; only 1: auto).	6.7211329937	837
Coq.Sorting.PermutSetoid.Permut.permut_cons_eq	40
Coq.Sorting.PermutSetoid.Permut.permut_cons	40	3.1.2	synth with cache (only 1: unfold permutation; only 1: simpl; only 1: auto with datatypes).	0.189166069031	11
Coq.Sorting.PermutSetoid.Permut.permut_app	40
Coq.Sorting.PermutSetoid.Permut.permut_add_inside_eq	40
Coq.Sorting.PermutSetoid.Permut.permut_add_inside	40
Coq.Sorting.PermutSetoid.Permut.permut_add_cons_inside_eq	40
Coq.Sorting.PermutSetoid.Permut.permut_add_cons_inside	40
Coq.Sorting.PermutSetoid.Permut.permut_middle	40
Coq.Sorting.PermutSetoid.Permut.permut_sym_app	40
Coq.Sorting.PermutSetoid.Permut.permut_rev	40
Coq.Sorting.PermutSetoid.Permut.permut_conv_inv	40
Coq.Sorting.PermutSetoid.Permut.permut_app_inv1	40
Coq.Sorting.PermutSetoid.Permut.if_eqA_then	40
Coq.Sorting.PermutSetoid.Permut.permut_app_inv2	40	0.1.0.0.0.0.1.2.0.0	synth with cache (only 1: intros l l1 l2; only 1: unfold permutation, meq; only 1: intros H a; only 1: generalize (H a); only 1: clear H; only 1: do 2 rewrite list_contents_app; only 1: simpl; only 1: intros; only 1: apply plus_reg_l with (multiplicity (list_contents l) a); only 1: auto).	8.73017501831	603
Coq.Sorting.PermutSetoid.Permut.permut_remove_hd_eq	40
Coq.Sorting.PermutSetoid.Permut.permut_remove_hd	40
Coq.Sorting.PermutSetoid.Permut.if_eqA_else	40
Coq.Sorting.PermutSetoid.Permut.if_eqA_refl	40	3.3.0.3.2	synth with cache (only 1: intros; only 1: destruct eqA_dec as [_| NEQ]; only 1: auto; only 1: contradict NEQ; only 1: intuition).	3.75300598145	310
Coq.Sorting.PermutSetoid.Permut.if_eqA	40
Coq.Sorting.PermutSetoid.Permut.if_eqA_rewrite_l	40
Coq.Sorting.PermutSetoid.Permut.if_eqA_rewrite_r	40
Coq.Sorting.PermutSetoid.Permut.multiplicity_eqA	40
Coq.Sorting.PermutSetoid.Permut.multiplicity_InA	40
Coq.Sorting.PermutSetoid.Permut.multiplicity_InA_O	40
Coq.Sorting.PermutSetoid.Permut.multiplicity_InA_S	40	0.5.5	synth with cache (only 1: intros l a; only 1: rewrite multiplicity_InA; only 1: auto).	2.66197299957	257
Coq.Sorting.PermutSetoid.Permut.multiplicity_NoDupA	40
Coq.Sorting.PermutSetoid.Permut.permut_InA_InA	40
Coq.Sorting.PermutSetoid.Permut.permut_cons_InA	40
Coq.Sorting.PermutSetoid.Permut.permut_nil	40
Coq.Sorting.PermutSetoid.Permut.permut_length_1	40
Coq.Sorting.PermutSetoid.Permut.permut_length_2	40
Coq.Sorting.PermutSetoid.Permut.permut_length	40
Coq.Sorting.PermutSetoid.Permut.NoDupA_equivlistA_permut	40
Coq.Sorting.PermutSetoid.Permut_map.permut_map	40
Coq.Sorting.PermutSetoid.Permut_permut.Permutation_impl_permutation	40
Coq.Sorting.PermutSetoid.Permut_permut.permut_eqA	40
Coq.Sorting.PermutSetoid.Permut_permut.permutation_Permutation	40
Coq.Sorting.Sorted.defs.HdRel_inv	40	0.6	synth with cache (only 1: inversion 1; only 1: auto).	0.161699056625	25
Coq.Sorting.Sorted.defs.Sorted_inv	40	0.3.4	synth with cache (only 1: intros; only 1: inversion H; only 1: auto).	0.411991119385	33
Coq.Sorting.Sorted.defs.Sorted_rect	40
Coq.Sorting.Sorted.defs.Sorted_LocallySorted_iff	40
Coq.Sorting.Sorted.defs.StronglySorted_inv	40	0.4.2	synth with cache (only 1: intros a l H; only 1: inversion H; only 1: auto).	0.18363904953	14
Coq.Sorting.Sorted.defs.StronglySorted_rect	40
Coq.Sorting.Sorted.defs.StronglySorted_rec	40	2.0.2	synth with cache (only 1: induction l; only 1: auto; only 1: firstorder using StronglySorted_inv).	0.106357097626	7
Coq.Sorting.Sorted.defs.StronglySorted_Sorted	40
Coq.Sorting.Sorted.defs.Sorted_extends	40
Coq.Sorting.Sorted.defs.Sorted_StronglySorted	40
Coq.Sorting.Heap.defs.leA_Tree_Leaf	40	0.1	synth with cache (only 1: simpl; only 1: auto).	0.135769128799	3
Coq.Sorting.Heap.defs.leA_Tree_Node	40	0	synth with cache (only 1: auto).	0.0956501960754	1
Coq.Sorting.Heap.defs.invert_heap	40
Coq.Sorting.Heap.defs.is_heap_rect	40
Coq.Sorting.Heap.defs.is_heap_rec	40	0.0.1.1.1.1.1.2.0.1	synth with cache (only 1: simple induction T; only 1: auto with datatypes; only 1: intros a G PG D PD PN; only 1: elim (invert_heap a G D); only 1: intros H1 H2; only 1: elim H2; only 1: intros H3 H4; only 1: elim H4; only 1: auto with datatypes; only 1: auto with datatypes).	12.9825110435	1155
Coq.Sorting.Heap.defs.low_trans	40	5.4.2.0.7	synth with cache (only 1: simple induction T; only 1: auto; only 1: simpl; only 1: intros; only 1: eauto with *).	23.3132200241	1990
Coq.Sorting.Heap.defs.Equivalence_instance_0	40
Coq.Sorting.Heap.defs.Proper_instance_0	40	0.1.3	synth with cache (only 1: repeat red; only 1: simpl; only 1: auto).	0.187007904053	7
Coq.Sorting.Heap.defs.merge	40
Coq.Sorting.Heap.defs.insert	40	0.10	synth with cache (only 1: fix merge 1; only 1: auto).	0.844859838486	78
Coq.Sorting.Heap.defs.list_to_heap	40	0.11	synth with cache (only 1: fix merge 1; only 1: auto).	1.96040701866	76
Coq.Sorting.Heap.defs.heap_to_list	40	1.15	synth with cache (only 1: fix merge 1; only 1: auto with datatypes).	1.49675393105	262
Coq.Sorting.Heap.defs.treesort	40	0.13	synth with cache (only 1: fix merge 1; only 1: auto).	1.88302397728	147
Coq.Init.Wf.Well_founded.Acc_inv	40	1.2.6	synth with cache (only 1: intros; only 1: inversion_clear H; only 1: auto).	0.0580780506134	105
Coq.Init.Wf.Well_founded.well_founded_induction_type	40
Coq.Init.Wf.Well_founded.well_founded_induction	40	0.0.1.1	synth with cache (only 1: intros; only 1: apply Acc_rect; only 1: auto; only 1: auto).	0.0173850059509	6
Coq.Init.Wf.Well_founded.well_founded_ind	40	0.0.1.1	synth with cache (only 1: intros; only 1: apply Acc_rect; only 1: auto; only 1: auto).	0.0176591873169	6
Coq.Init.Wf.Well_founded.FixPoint.Fix_F_eq	40	0.28	synth with cache (only 1: intros f [x]; only 1: auto).	0.379969120026	923
Coq.Init.Wf.Well_founded.FixPoint.Fix_F_inv	40
Coq.Init.Wf.Well_founded.FixPoint.Fix_eq	40
Coq.Init.Wf.Well_founded_2.well_founded_induction_type_2	40
Coq.Init.Tactics.decide_left	40	3.10.3.7.10.3.3	synth with cache (only 1: intro z; only 1: intro H; only 1: reflexivity || destruct H; only 1: auto; only 1: intro H; only 1: induction n; only 1: auto).	8.03561806679	26399
Coq.Init.Tactics.decide_right	40	1.1.1.1	synth with cache (only 1: intros; only 1: destruct decide; only 1: contradiction; only 1: apply H0).	0.0217990875244	8
Coq.Init.Peano.pred_Sn	40	1	synth with cache (only 1: auto).	0.00844597816467	2
Coq.Init.Peano.not_eq_S	40	1.0	synth with cache (only 1: intro H; only 1: auto).	0.0109369754791	3
Coq.Init.Peano.O_S	40	0	synth with cache (only 1: discriminate).	0.00872206687927	1
Coq.Init.Peano.n_Sn	40
Coq.Init.Peano.plus_n_O	40	1.14.0.9	synth with cache (only 1: induction n; only 1: reflexivity || destruct H; only 1: simpl; only 1: auto).	8.5043900013	12713
Coq.Init.Peano.plus_O_n	40	1.0.0.0.0	synth with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0171439647675	6
Coq.Init.Peano.plus_n_Sm	40	0.0.0.6	synth with cache (only 1: induction n; only 1: auto; only 1: simpl; only 1: auto).	0.0178880691528	10
Coq.Init.Peano.plus_Sn_m	40	0.0.0	synth with cache (only 1: intros n m; only 1: simpl; only 1: auto).	0.01380610466	3
Coq.Init.Peano.mult_n_O	40	0.0.2	synth with cache (only 1: induction n; only 1: auto; only 1: auto).	0.0151479244232	5
Coq.Init.Peano.mult_n_Sm	40
Coq.Init.Peano.le_pred	40
Coq.Init.Peano.le_S_n	40
Coq.Init.Peano.le_0_n	40	0.0.8	synth with cache (only 1: induction n; only 1: auto; only 1: auto).	0.0248329639435	22
Coq.Init.Peano.le_n_S	40	0.0.1	synth with cache (only 1: induction 1; only 1: auto; only 1: auto).	0.0397610664368	26
Coq.Init.Peano.nat_case	40	1.2.2	synth with cache (only 1: induction n; only 1: auto; only 1: auto).	0.0183100700378	8
Coq.Init.Peano.nat_double_ind	40	1.1.8.2.2	synth with cache (only 1: induction n; only 1: auto; only 1: destruct m; only 1: auto; only 1: auto).	0.417076826096	621
Coq.Init.Peano.max_l	40
Coq.Init.Peano.max_r	40	0.3.0.5.2.0.0.0.2.2	synth with cache (only 1: revert m; only 1: induction n; only 1: trivial; only 1: destruct m; only 1: simpl; only 1: inversion 1; only 1: intros; only 1: simpl; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	24.9590270519	24498
Coq.Init.Peano.min_l	40	1.1.2.0.2.0.1.1.1	synth with cache (only 1: revert m; only 1: induction n; only 1: trivial; only 1: destruct m; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	9.24984502792	7664
Coq.Init.Peano.min_r	40	0.2.2.0.0.0.0.2.0.0.0.0.2	synth with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: inversion 1; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	13.5594110489	11811
Coq.Init.Peano.nat_rect_succ_r	40
Coq.Init.Peano.nat_rect_plus	40	0.1.2.0.0.7	synth with cache (only 1: induction n; only 1: trivial; only 1: simpl; only 1: intros; only 1: rewrite <- ?IHn; only 1: trivial).	2.64197993279	2383
Coq.Init.Byte.of_bits_to_bits	40
Coq.Init.Byte.to_bits_of_bits	40
Coq.Init.Datatypes.andb_prop	40
Coq.Init.Datatypes.andb_true_intro	40
Coq.Init.Datatypes.eq_true_ind_r	40	0.24.38	synth with cache (only 1: intros A P H; only 1: destruct 1; only 1: assumption).	0.610191822052	6277
Coq.Init.Datatypes.eq_true_rec_r	40	0.3.3	synth with cache (only 1: intros P b H H0; only 1: destruct H0 in H; only 1: assumption).	0.0103168487549	9
Coq.Init.Datatypes.eq_true_rect_r	40	0.1.2	synth with cache (only 1: intros P b H H0; only 1: destruct H0 in H; only 1: assumption).	0.0102968215942	6
Coq.Init.Datatypes.surjective_pairing	40	1.19	synth with cache (only 1: intros A B []; only 1: reflexivity).	0.0681569576263	273
Coq.Init.Datatypes.injective_projections	40	0.10.11.4.2.13	synth with cache (only 1: intros A B []; only 1: intros [? ?]; only 1: simpl; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	3.11856412888	15331
Coq.Init.Datatypes.pair_equal_spec	40
Coq.Init.Datatypes.rew_pair	40	0.18	synth with cache (only 1: destruct H; only 1: reflexivity).	0.0870831012726	266
Coq.Init.Datatypes.comparison_eq_stable	40
Coq.Init.Datatypes.CompOpp_involutive	40	0.0.0.0.1	synth with cache (only 1: intro H; only 1: reflexivity || destruct H; only 1: reflexivity || destruct H; only 1: reflexivity || destruct H; only 1: reflexivity || destruct H).	0.0166549682617	6
Coq.Init.Datatypes.CompOpp_inj	40
Coq.Init.Datatypes.CompOpp_iff	40
Coq.Init.Datatypes.CompareSpec2Type	40
Coq.Init.Datatypes.CompSpec2Type	40	1.1.3.1.2.4.1.2.3.10	synth with cache (only 1: destruct c; only 1: constructor; only 1: inversion_clear H; only 1: auto; only 1: constructor; only 1: inversion_clear H; only 1: auto; only 1: constructor; only 1: inversion_clear H; only 1: auto).	2.87135887146	8380
Coq.Init.Logic.Conjunction.proj1	40
Coq.Init.Logic.Conjunction.proj2	40	0.1	synth with cache (only 1: destruct 1; only 1: trivial).	0.00229096412659	3
Coq.Init.Logic.Equivalence.iff_refl	40
Coq.Init.Logic.Equivalence.iff_trans	40	2.2.3.1.1	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: split; only 1: auto; only 1: auto).	0.0221450328827	110
Coq.Init.Logic.Equivalence.iff_sym	40	0.0.4.3	synth with cache (only 1: destruct 1; only 1: split; only 1: trivial; only 1: trivial).	0.00590705871582	27
Coq.Init.Logic.and_iff_compat_l	40
Coq.Init.Logic.and_iff_compat_r	40	0.0.1.1.0.0.2.1.4.8	synth with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: intros [? ?]; only 1: split; only 1: auto; only 1: auto; only 1: intros [? ?]; only 1: split; only 1: auto; only 1: auto).	0.111346960068	1192
Coq.Init.Logic.or_iff_compat_l	40
Coq.Init.Logic.or_iff_compat_r	40	2.1.1.4.2.1.2.1.1.4.1.2.5.5	synth with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: intros [?| ?]; only 1: left; only 1: apply Hl; only 1: assumption; only 1: right; only 1: assumption; only 1: intros [?| ?]; only 1: left; only 1: apply Hr; only 1: assumption; only 1: right; only 1: assumption).	0.566788911819	9177
Coq.Init.Logic.imp_iff_compat_l	40	9.9.6.2	synth with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: auto; only 1: auto).	0.0763258934021	830
Coq.Init.Logic.imp_iff_compat_r	40	7.0.7.0.6.0	synth with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: intros H ?; only 1: auto; only 1: intros H ?; only 1: auto).	0.0999088287354	1166
Coq.Init.Logic.not_iff_compat	40	4.4.5.8	synth with cache (only 1: intros A B [H1 H2]; only 1: split; only 1: auto; only 1: auto).	0.115399837494	1126
Coq.Init.Logic.neg_false	40
Coq.Init.Logic.and_cancel_l	40
Coq.Init.Logic.and_cancel_r	40
Coq.Init.Logic.and_comm	40	0.2.2.7.2.0.2.7.1	synth with cache (only 1: split; only 1: intros [HypL HypR]; only 1: split; only 1: assumption; only 1: assumption; only 1: intros [HypL HypR]; only 1: split; only 1: assumption; only 1: assumption).	1.27737092972	15643
Coq.Init.Logic.and_assoc	40
Coq.Init.Logic.or_cancel_l	40
Coq.Init.Logic.or_cancel_r	40
Coq.Init.Logic.or_comm	40	0.5.0.4.5.0.3.0.2.5.2.2	synth with cache (only 1: intros; only 1: split; only 1: intros [?| ?]; only 1: right; only 1: assumption; only 1: left; only 1: assumption; only 1: intros [?| ?]; only 1: right; only 1: assumption; only 1: left; only 1: assumption).	1.39580106735	13068
Coq.Init.Logic.or_assoc	40
Coq.Init.Logic.iff_and	40	0.2	synth with cache (only 1: intros; only 1: assumption).	0.00604915618896	4
Coq.Init.Logic.iff_to_and	40	3.2.8	synth with cache (only 1: split; only 1: trivial; only 1: trivial).	0.0453019142151	199
Coq.Init.Logic.universal_quantification.inst	40	8.0	synth with cache (only 1: intros; only 1: trivial).	0.00693297386169	10
Coq.Init.Logic.universal_quantification.gen	40	1.0	synth with cache (only 1: unfold all; only 1: auto).	0.0069100856781	3
Coq.Init.Logic.Logic_lemmas.absurd	40	1.4.26.19	synth with cache (only 1: unfold not; only 1: intro H1; only 1: intros A B []; only 1: assumption).	0.416395902634	4023
Coq.Init.Logic.Logic_lemmas.equality.eq_sym	40
Coq.Init.Logic.Logic_lemmas.equality.eq_trans	40	1.2.3	synth with cache (only 1: destruct 1; only 1: intros; only 1: trivial).	0.01025390625	18
Coq.Init.Logic.Logic_lemmas.equality.eq_trans_r	40	1.2	synth with cache (only 1: destruct 2; only 1: trivial).	0.00944590568542	14
Coq.Init.Logic.Logic_lemmas.equality.f_equal	40	4.5	synth with cache (only 1: destruct 1; only 1: trivial).	0.0130379199982	44
Coq.Init.Logic.Logic_lemmas.equality.not_eq_sym	40	14.0	synth with cache (only 1: destruct 2; only 1: auto).	0.0630769729614	319
Coq.Init.Logic.Logic_lemmas.eq_sind_r	40	0.4	synth with cache (only 1: destruct 2; only 1: trivial).	0.0103039741516	14
Coq.Init.Logic.Logic_lemmas.eq_ind_r	40	0.1.1	synth with cache (only 1: intros A x P H y H0; only 1: elim eq_sym with (1 := H0); only 1: trivial).	0.0093080997467	5
Coq.Init.Logic.Logic_lemmas.eq_rec_r	40	0.1.0	synth with cache (only 1: intros A x P H y H0; only 1: elim eq_sym with (1 := H0); only 1: trivial).	0.00919079780579	4
Coq.Init.Logic.Logic_lemmas.eq_rect_r	40	0.1.0	synth with cache (only 1: intros A x P H y H0; only 1: elim eq_sym with (1 := H0); only 1: trivial).	0.00900292396545	4
Coq.Init.Logic.equality_dep.f_equal_dep	40
Coq.Init.Logic.equality_dep2.f_equal_dep2	40	0.4.2.4	synth with cache (only 1: destruct H; only 1: intros; only 1: destruct H; only 1: trivial).	0.0742428302765	171
Coq.Init.Logic.rew_opp_r	40	1.7	synth with cache (only 1: destruct H; only 1: reflexivity).	0.0139009952545	21
Coq.Init.Logic.rew_opp_l	40	1.2.2	synth with cache (only 1: intros; only 1: destruct H; only 1: reflexivity).	0.0113821029663	8
Coq.Init.Logic.f_equal2	40	0.4.4	synth with cache (only 1: destruct 2; only 1: destruct H; only 1: trivial).	0.0310728549957	69
Coq.Init.Logic.f_equal3	40	0.4.4.2	synth with cache (only 1: destruct 1; only 1: destruct 2; only 1: destruct H; only 1: trivial).	0.0756180286407	197
Coq.Init.Logic.f_equal4	40	0.3.2.2.2	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: trivial).	0.177363157272	199
Coq.Init.Logic.f_equal5	40	0.3.3.2.2.2	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: trivial).	0.376609802246	702
Coq.Init.Logic.f_equal_compose	40	0.16.21.4	synth with cache (only 1: intros A x P H y H0; only 1: intros h1 h2; only 1: destruct h2; only 1: reflexivity).	0.705966949463	4969
Coq.Init.Logic.eq_trans_refl_l	40	1.8	synth with cache (only 1: destruct e; only 1: trivial).	0.0174579620361	27
Coq.Init.Logic.eq_trans_refl_r	40	0.0	synth with cache (only 1: destruct e; only 1: reflexivity).	0.0101351737976	2
Coq.Init.Logic.eq_sym_involutive	40	0.0	synth with cache (only 1: destruct e; only 1: reflexivity).	0.0102360248566	2
Coq.Init.Logic.eq_trans_sym_inv_l	40	0.0	synth with cache (only 1: destruct e; only 1: reflexivity).	0.010390996933	2
Coq.Init.Logic.eq_trans_sym_inv_r	40	0.0	synth with cache (only 1: destruct e; only 1: reflexivity).	0.0104548931122	2
Coq.Init.Logic.eq_trans_assoc	40	1.16.18.0	synth with cache (only 1: destruct e; only 1: intros h1 h2; only 1: destruct h2; only 1: trivial).	0.934233903885	5988
Coq.Init.Logic.rew_map	40	1.15	synth with cache (only 1: destruct H; only 1: trivial).	0.162072181702	227
Coq.Init.Logic.eq_trans_map	40	1.33.5.20.18	synth with cache (only 1: intros A B C Hl Hr; only 1: intros ? ? ? Fl Fr; only 1: destruct 1; only 1: destruct Fr; only 1: trivial).	16.0274882317	151516
Coq.Init.Logic.map_subst	40	2.0	synth with cache (only 1: destruct H; only 1: trivial).	0.01158618927	4
Coq.Init.Logic.map_subst_map	40	0.1	synth with cache (only 1: destruct H; only 1: reflexivity).	0.011871099472	3
Coq.Init.Logic.rew_swap	40	0.5.0	synth with cache (only 1: intros; only 1: destruct H; only 1: assumption).	0.013356924057	8
Coq.Init.Logic.rew_compose	40	1.3.3	synth with cache (only 1: intros; only 1: destruct H2; only 1: trivial).	0.0134410858154	10
Coq.Init.Logic.eq_id_comm_l	40
Coq.Init.Logic.eq_id_comm_r	40
Coq.Init.Logic.eq_refl_map_distr	40	0.0	synth with cache (only 1: intros; only 1: trivial).	0.0105822086334	2
Coq.Init.Logic.eq_trans_map_distr	40	0.6.6.8	synth with cache (only 1: intros A x P H y H0; only 1: intros h1 h2; only 1: destruct h2; only 1: trivial).	0.328105926514	1010
Coq.Init.Logic.eq_sym_map_distr	40	0.3	synth with cache (only 1: destruct e; only 1: trivial).	0.0128500461578	5
Coq.Init.Logic.eq_trans_sym_distr	40	0.1.2	synth with cache (only 1: destruct e; only 1: destruct e'; only 1: reflexivity).	0.0181949138641	14
Coq.Init.Logic.eq_trans_rew_distr	40	1.2	synth with cache (only 1: destruct e'; only 1: trivial).	0.012640953064	5
Coq.Init.Logic.rew_const	40	1.6	synth with cache (only 1: destruct e; only 1: reflexivity).	0.0168387889862	18
Coq.Init.Logic.unique_existence	40
Coq.Init.Logic.forall_exists_unique_domain_coincide	40
Coq.Init.Logic.forall_exists_coincide_unique_domain	40
Coq.Init.Logic.exists_inhabited	40	0.1.10.0	synth with cache (only 1: intros A P H; only 1: destruct H; only 1: split; only 1: assumption).	0.0766770839691	304
Coq.Init.Logic.inhabited_covariant	40	2.9.9	synth with cache (only 1: intros; only 1: destruct H; only 1: auto).	0.0988018512726	469
Coq.Init.Logic.eq_stepl	40	3.0.0.0	synth with cache (only 1: intros A P H; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	0.0155820846558	7
Coq.Init.Logic.iff_stepl	40	12.19.7.0.1	synth with cache (only 1: intros A P H; only 1: destruct 1; only 1: destruct 1; only 1: red; only 1: auto).	2.43877720833	19844
Coq.Init.Logic.ex.eq_ex_uncurried	40
Coq.Init.Logic.ex.rew_ex	40
Coq.Init.Logic.ex2.eq_ex2_uncurried	40	0.5.18.0.0	synth with cache (only 1: destruct pq as [p q]; only 1: destruct q; only 1: destruct H; only 1: destruct p; only 1: reflexivity).	0.504558086395	1529
Coq.Init.Logic.ex2.rew_ex2	40	0.1	synth with cache (only 1: destruct H, u; only 1: reflexivity).	0.0166561603546	3
Coq.Init.Logic_Type.identity_is_a_congruence.identity_sym	40	0.4	synth with cache (only 1: destruct 1; only 1: trivial).	0.011332988739	6
Coq.Init.Logic_Type.identity_is_a_congruence.identity_trans	40	0.0	synth with cache (only 1: destruct 2; only 1: trivial).	0.0107650756836	2
Coq.Init.Logic_Type.identity_is_a_congruence.identity_congr	40	0.2	synth with cache (only 1: destruct 1; only 1: auto).	0.0113780498505	4
Coq.Init.Logic_Type.identity_is_a_congruence.not_identity_sym	40	1.9	synth with cache (only 1: destruct 2; only 1: auto).	0.0518832206726	94
Coq.Init.Logic_Type.identity_ind_r	40	0.15	synth with cache (only 1: destruct 2; only 1: trivial).	0.122497081757	322
Coq.Init.Logic_Type.identity_rec_r	40	0.1.0	synth with cache (only 1: intros A x P H y H0; only 1: case identity_sym with (1 := H0); only 1: assumption).	0.0127580165863	4
Coq.Init.Logic_Type.identity_rect_r	40	0.1.1	synth with cache (only 1: intros A x P H y H0; only 1: case identity_sym with (1 := H0); only 1: assumption).	0.0137050151825	5
Coq.Init.Specif.sigT_eta	40	0.21	synth with cache (only 1: destruct p; only 1: auto).	0.0555899143219	231
Coq.Init.Specif.sig_eta	40	0.0	synth with cache (only 1: destruct p; only 1: auto).	0.0109610557556	2
Coq.Init.Specif.sigT2_eta	40	0.3	synth with cache (only 1: destruct p; only 1: auto).	0.0119018554688	5
Coq.Init.Specif.sig2_eta	40	0.0	synth with cache (only 1: destruct p; only 1: auto).	0.0119459629059	2
Coq.Init.Specif.exists_to_inhabited_sig	40	0.6.3.4.0	synth with cache (only 1: intros H; only 1: inversion_clear H; only 1: constructor; only 1: exists x; only 1: auto).	0.270124912262	617
Coq.Init.Specif.inhabited_sig_to_exists	40
Coq.Init.Specif.sigT.eq_existT_uncurried	40	0.2.0.0	synth with cache (only 1: destruct pq as [p q]; only 1: destruct q; only 1: destruct p; only 1: reflexivity).	0.0169761180878	6
Coq.Init.Specif.sigT.eq_sigT_uncurried	40
Coq.Init.Specif.sigT.eq_existT_curried	40	0.1.0	synth with cache (only 1: destruct q; only 1: destruct p; only 1: reflexivity).	0.0157198905945	4
Coq.Init.Specif.sigT.eq_existT_curried_map	40	0.6	synth with cache (only 1: destruct p, q; only 1: auto).	0.0215899944305	8
Coq.Init.Specif.sigT.eq_existT_curried_trans	40	0.39.4	synth with cache (only 1: destruct p; only 1: subst; only 1: reflexivity).	1.4762198925	5368
Coq.Init.Specif.sigT.eq_existT_curried_congr	40	1.23.13.0	synth with cache (only 1: intro H; only 1: reflexivity || destruct H; only 1: destruct r, q, p; only 1: reflexivity).	10.5082678795	23318
Coq.Init.Specif.sigT.eq_sigT_uncurried_iff	40
Coq.Init.Specif.sigT.eq_sigT_rect	40
Coq.Init.Specif.sigT.rew_sigT	40	0.1	synth with cache (only 1: destruct H, u; only 1: reflexivity).	0.0166380405426	3
Coq.Init.Specif.sig.eq_exist_uncurried	40	0.1.2	synth with cache (only 1: destruct pq as [p q]; only 1: destruct p, q; only 1: reflexivity).	0.018504858017	6
Coq.Init.Specif.sig.eq_sig_uncurried	40	0.2.3.0.1	synth with cache (only 1: destruct u as [u1 u2], v as [v1 v2]; only 1: simpl in *; only 1: destruct pq as [p q]; only 1: destruct p, q; only 1: reflexivity).	0.0721731185913	52
Coq.Init.Specif.sig.eq_sig_rect	40
Coq.Init.Specif.sig.eq_sig_uncurried_iff	40	14.0.0.1.3.0.1.1.2.0	synth with cache (only 1: split; only 1: intro; only 1: subst; only 1: exists eq_refl; only 1: reflexivity; only 1: intro; only 1: destruct u as [u1 u2], v as [v1 v2]; only 1: simpl in *; only 1: apply eq_exist_uncurried; only 1: assumption).	10.8789818287	18093
Coq.Init.Specif.sig.rew_sig	40	0.1	synth with cache (only 1: destruct H, u; only 1: reflexivity).	0.0178060531616	3
Coq.Init.Specif.sigT2.eq_existT2_uncurried	40
Coq.Init.Specif.sigT2.eq_sigT2_uncurried	40	0.2.0.4.2.8	synth with cache (only 1: destruct pqr as [p q r]; only 1: simpl in *; only 1: destruct u as [u1 u2], v as [v1 v2]; only 1: simpl in *; only 1: destruct r, q, p; only 1: reflexivity).	0.921539783478	1046
Coq.Init.Specif.sigT2.eq_sigT2_uncurried_iff	40	10.2.1.1.0.0.9.1.2.1	synth with cache (only 1: split; only 1: intro; only 1: subst; only 1: exists eq_refl; only 1: reflexivity; only 1: reflexivity; only 1: intro; only 1: destruct u as [u1 u2 u3], v as [v1 v2 v3]; only 1: apply eq_existT2_uncurried; only 1: auto).	26.677850008	33784
Coq.Init.Specif.sigT2.eq_sigT2_rect	40
Coq.Init.Specif.sigT2.rew_sigT2	40	0.1	synth with cache (only 1: destruct H, u; only 1: reflexivity).	0.0201649665833	3
Coq.Init.Specif.sig2.eq_exist2_uncurried	40	0.2.4	synth with cache (only 1: destruct pqr as [p q r]; only 1: destruct r, q, p; only 1: reflexivity).	0.0222461223602	9
Coq.Init.Specif.sig2.eq_sig2_uncurried	40	0.2.4.0.1	synth with cache (only 1: destruct u as [u1 u2 u3], v as [v1 v2 v3]; only 1: simpl in *; only 1: destruct pqr as [p q r]; only 1: destruct r, q, p; only 1: reflexivity).	0.243795156479	103
Coq.Init.Specif.sig2.eq_sig2_uncurried_iff	40
Coq.Init.Specif.sig2.eq_sig2_rect	40
Coq.Init.Specif.sig2.rew_sig2	40	0.1	synth with cache (only 1: destruct H, u; only 1: reflexivity).	0.0206050872803	3
Coq.Init.Specif.Choice_lemmas.Choice	40
Coq.Init.Specif.Choice_lemmas.Choice2	40
Coq.Init.Specif.Choice_lemmas.bool_choice	40
Coq.Init.Specif.Dependent_choice_lemmas.dependent_choice	40
Coq.Init.Specif.absurd_set	40	4.6.5	synth with cache (only 1: unfold not; only 1: intros A C h1 h2; only 1: destruct (h2 h1)).	0.458673000336	810
Coq.QArith.QOrderedType.Q_as_OT.lt_strorder	40	0.0.2.2.2.1.8.0.6.1.2	synth with cache (only 1: split; only 1: red; only 1: red; only 1: intros; only 1: apply Z.lt_irrefl; only 1: red; only 1: intros; only 1: apply Qle_lt_trans with y; only 1: apply Qlt_le_weak; only 1: auto; only 1: trivial).	31.8008310795	4289
Coq.QArith.QOrderedType.Q_as_OT.lt_compat	40	0.0.0	synth with cache (only 1: intros p q H r s H'; only 1: rewrite 2!Qlt_alt, H, H'; only 1: auto with *).	0.185563087463	3
Coq.QArith.Qreduction.Qred_correct	40	0.0.11	synth with cache (only 1: fix sqrtrem_spec 1; only 1: intro n; only 1: auto).	12.8677229881	623
Coq.QArith.Qreduction.Qred_complete	40
Coq.QArith.Qreduction.Qred_eq_iff	40
Coq.QArith.Qreduction.Qred_comp_Proper	40
Coq.QArith.Qreduction.Qplus'_correct	40
Coq.QArith.Qreduction.Qmult'_correct	40	2.1	synth with cache (only 1: intros; only 1: apply Qred_correct).	1.58248710632	69
Coq.QArith.Qreduction.Qminus'_correct	40	4.1	synth with cache (only 1: intros; only 1: apply Qred_correct).	2.04506707191	77
Coq.QArith.Qreduction.Qplus'_comp_Proper	40
Coq.QArith.Qreduction.Qmult'_comp_Proper	40
Coq.QArith.Qreduction.Qminus'_comp_Proper	40
Coq.QArith.Qreduction.Qred_opp	40
Coq.QArith.Qreduction.Qred_compare	40
Coq.QArith.Qreduction.Qred_le	40	17.1.2.0	synth with cache (only 1: intuition; only 1: rewrite <- (Qred_correct q), <- (Qred_correct q'); only 1: auto; only 1: now rewrite !Qred_correct).	11.9708280563	1459
Coq.QArith.Qreduction.Qred_lt	40	16.1.2.1	synth with cache (only 1: intuition; only 1: rewrite <- (Qred_correct q), <- (Qred_correct q'); only 1: auto; only 1: now rewrite !Qred_correct).	13.107872963	1464
Coq.QArith.Qcabs.Qred_abs	40
Coq.QArith.Qcabs.Qcabs_canon	40
Coq.QArith.Qcabs.Qcabs_case	40
Coq.QArith.Qcabs.Qcabs_pos	40
Coq.QArith.Qcabs.Qcabs_neg	40
Coq.QArith.Qcabs.Qcabs_nonneg	40	0.0.0.9.9	synth with cache (only 1: red; only 1: simpl; only 1: apply Qabs_case; only 1: auto; only 1: apply (Qopp_le_compat x 0)).	17.4056100845	858
Coq.QArith.Qcabs.Qcabs_opp	40
Coq.QArith.Qcabs.Qcabs_triangle	40
Coq.QArith.Qcabs.Qcabs_Qcmult	40
Coq.QArith.Qcabs.Qcabs_Qcminus	40
Coq.QArith.Qcabs.Qcle_Qcabs	40
Coq.QArith.Qcabs.Qcabs_triangle_reverse	40
Coq.QArith.Qcabs.Qcabs_Qcle_condition	40
Coq.QArith.Qcabs.Qcabs_diff_Qcle_condition	40
Coq.QArith.Qcabs.Qcabs_null	40
Coq.QArith.Qpower.Qpower_positive_1	40
Coq.QArith.Qpower.Qpower_1	40
Coq.QArith.Qpower.Qpower_positive_0	40	0.0.0.0.0.0.0.2	synth with cache (only 1: induction n; only 1: simpl; only 1: rewrite IHn; only 1: reflexivity; only 1: simpl; only 1: rewrite IHn; only 1: reflexivity; only 1: reflexivity).	0.602446079254	24
Coq.QArith.Qpower.Qpower_0	40
Coq.QArith.Qpower.Qpower_not_0_positive	40
Coq.QArith.Qpower.Qpower_pos_positive	40
Coq.QArith.Qpower.Qpower_pos	40
Coq.QArith.Qpower.Qmult_power_positive	40
Coq.QArith.Qpower.Qmult_power	40
Coq.QArith.Qpower.Qinv_power_positive	40
Coq.QArith.Qpower.Qinv_power	40
Coq.QArith.Qpower.Qdiv_power	40
Coq.QArith.Qpower.Qinv_power_n	40
Coq.QArith.Qpower.Qpower_plus_positive	40
Coq.QArith.Qpower.Qpower_opp	40
Coq.QArith.Qpower.Qpower_minus_positive	40
Coq.QArith.Qpower.Qpower_plus	40
Coq.QArith.Qpower.Qpower_plus'	40
Coq.QArith.Qpower.Qpower_mult_positive	40
Coq.QArith.Qpower.Qpower_mult	40
Coq.QArith.Qpower.Zpower_Qpower	40
Coq.QArith.Qpower.Qsqr_nonneg	40	0.0.0.16.0	synth with cache (only 1: simpl; only 1: intros [[| n| n] d] Ha; only 1: discriminate; only 1: discriminate; only 1: discriminate).	38.4895730019	3079
Coq.QArith.Qpower.Qpower_decomp	40
Coq.QArith.Qfield.Qsrt	40
Coq.QArith.Qfield.Qsft	40
Coq.QArith.Qfield.Qpower_theory	40	2.1.2.5.2	synth with cache (only 1: constructor; only 1: intros; only 1: destruct n; only 1: now try destruct p; only 1: easy).	9.92679095268	403
Coq.QArith.Qfield.Examples.ex1	40	0.0.0.0.0	synth with cache (only 1: intros (x1, x2) (y1, y2) (z1, z2); only 1: unfold Qeq, Qmult, Qplus; only 1: simpl; only 1: simpl_mult; only 1: ring).	0.774781942368	5
Coq.QArith.Qfield.Examples.ex2	40	1.0.0.0.0.0.0.0.0	synth with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: intros; only 1: rewrite Pos.mul_comm; only 1: rewrite Pos.mul_comm; only 1: rewrite Pos.mul_comm; only 1: rewrite Pos.mul_comm; only 1: ring).	1.11784100533	11
Coq.QArith.Qfield.Examples.ex3	40	0.0.0.0.0	synth with cache (only 1: intros (x1, x2) (y1, y2) (z1, z2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: simpl_mult; only 1: ring).	0.516561985016	5
Coq.QArith.Qfield.Examples.ex4	40	0	synth with cache (only 1: split).	0.152837991714	1
Coq.QArith.Qfield.Examples.ex5	40	0	synth with cache (only 1: ring).	0.153406858444	1
Coq.QArith.Qfield.Examples.ex6	40	0	synth with cache (only 1: ring).	0.151031970978	1
Coq.QArith.Qfield.Examples.ex7	40	0.0.0.2	synth with cache (only 1: red; only 1: simpl; only 1: intro; only 1: ring).	0.390892982483	14
Coq.QArith.Qfield.Examples.ex8	40	0.0.0.0	synth with cache (only 1: intro n; only 1: red; only 1: simpl; only 1: trivial).	0.308303117752	4
Coq.QArith.Qfield.Examples.ex9	40	0.1.0	synth with cache (only 1: intros; only 1: compute; only 1: trivial).	0.248389959335	4
Coq.QArith.Qfield.Examples.ex10	40
Coq.QArith.Qfield.Qopp_plus	40	3.0	synth with cache (only 1: intros (x1, x2) (y1, y2); only 1: ring).	1.69272685051	54
Coq.QArith.Qfield.Qopp_opp	40	0.0.0.0	synth with cache (only 1: red; only 1: simpl; only 1: intros; only 1: ring).	0.292876005173	4
Coq.QArith.Qcanon.Qred_identity	40
Coq.QArith.Qcanon.Qred_identity2	40
Coq.QArith.Qcanon.Qred_iff	40
Coq.QArith.Qcanon.Qc_is_canon	40
Coq.QArith.Qcanon.Qc_decomp	40	0.0.0.0.0.0.11	synth with cache (only 1: intros (q, hq) (q', hq') H; only 1: simpl in *; only 1: subst q'; only 1: f_equal; only 1: apply eq_proofs_unicity; only 1: intros; only 1: repeat decide equality).	5.29318881035	535
Coq.QArith.Qcanon.Qred_involutive	40	0.11.0.2	synth with cache (only 1: intro n; only 1: destruct n; only 1: apply Qred_complete; only 1: apply Qred_correct).	20.748290062	1088
Coq.QArith.Qcanon.Q2Qc_eq_iff	40
Coq.QArith.Qcanon.Qceq_alt	40
Coq.QArith.Qcanon.Qclt_alt	40	0.0.0	synth with cache (only 1: split; only 1: trivial; only 1: auto).	0.171094894409	3
Coq.QArith.Qcanon.Qcgt_alt	40	1.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Z.gt_lt_iff).	0.162467002869	5
Coq.QArith.Qcanon.Qcle_alt	40	0.0	synth with cache (only 1: intros n m; only 1: reflexivity).	0.122802019119	2
Coq.QArith.Qcanon.Qcge_alt	40	0.1.1	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Z.ge_le_iff).	0.915434837341	37
Coq.QArith.Qcanon.Qc_eq_dec	40
Coq.QArith.Qcanon.Q_apart_0_1	40	1	synth with cache (only 1: auto with qarith).	0.116454839706	2
Coq.QArith.Qcanon.Qcplus_assoc	40
Coq.QArith.Qcanon.Qcplus_0_l	40	2.11.2	synth with cache (only 1: intros; only 1: qc; only 1: ring).	4.74711894989	419
Coq.QArith.Qcanon.Qcplus_0_r	40	3.0.0	synth with cache (only 1: intros; only 1: qc; only 1: ring).	0.417522907257	6
Coq.QArith.Qcanon.Qcplus_comm	40
Coq.QArith.Qcanon.Qcopp_involutive	40	1.5.2	synth with cache (only 1: intros a; only 1: qc; only 1: ring).	0.685257911682	65
Coq.QArith.Qcanon.Qcplus_opp_r	40	5.1.3	synth with cache (only 1: intros; only 1: qc; only 1: ring).	2.3546628952	133
Coq.QArith.Qcanon.Qcmult_assoc	40	1.1.12	synth with cache (only 1: intros (x1, x2) (y1, y2) (z1, z2); only 1: qc; only 1: ring).	4.33730816841	339
Coq.QArith.Qcanon.Qcmult_0_l	40	0.1.9.0	synth with cache (only 1: intros; only 1: qc; only 1: compute; only 1: trivial).	2.31646299362	148
Coq.QArith.Qcanon.Qcmult_0_r	40	0.0.3.0.0	synth with cache (only 1: intros; only 1: qc; only 1: red; only 1: simpl; only 1: ring).	0.426145076752	14
Coq.QArith.Qcanon.Qcmult_1_l	40	11.8.0	synth with cache (only 1: intro n; only 1: qc; only 1: ring).	12.3558108807	905
Coq.QArith.Qcanon.Qcmult_1_r	40	0.6.0.0	synth with cache (only 1: intros; only 1: qc; only 1: rewrite Qmult_comm; only 1: apply Qmult_1_l).	0.270112991333	10
Coq.QArith.Qcanon.Qcmult_comm	40	0.1.0.4.0.1	synth with cache (only 1: intros; only 1: qc; only 1: red; only 1: simpl; only 1: rewrite Pos.mul_comm; only 1: ring).	3.8242251873	134
Coq.QArith.Qcanon.Qcmult_plus_distr_r	40	2.0.0	synth with cache (only 1: intros; only 1: qc; only 1: ring).	0.293355941772	5
Coq.QArith.Qcanon.Qcmult_plus_distr_l	40	3.0.0	synth with cache (only 1: intros; only 1: qc; only 1: ring).	0.551800966263	6
Coq.QArith.Qcanon.Qcmult_integral	40
Coq.QArith.Qcanon.Qcmult_integral_l	40
Coq.QArith.Qcanon.Qcmult_inv_r	40	2.3.5.1	synth with cache (only 1: intros; only 1: qc; only 1: apply Qmult_inv_r; only 1: auto).	5.31920790672	317
Coq.QArith.Qcanon.Qcmult_inv_l	40	0.0.3.0.0	synth with cache (only 1: intros; only 1: qc; only 1: rewrite Qmult_comm; only 1: apply Qmult_inv_r; only 1: auto).	0.589851856232	8
Coq.QArith.Qcanon.Qcinv_mult_distr	40
Coq.QArith.Qcanon.Qcdiv_mult_l	40
Coq.QArith.Qcanon.Qcmult_div_r	40
Coq.QArith.Qcanon.Qcle_refl	40	1.15.0	synth with cache (only 1: intros; only 1: red; only 1: auto with qarith).	3.12418103218	514
Coq.QArith.Qcanon.Qcle_antisym	40	6.1	synth with cache (only 1: intros x y z; only 1: auto with qarith).	0.724876880646	36
Coq.QArith.Qcanon.Qcle_trans	40
Coq.QArith.Qcanon.Qclt_not_eq	40
Coq.QArith.Qcanon.Qclt_le_weak	40	8.2.2	synth with cache (only 1: intros a b H; only 1: red; only 1: intuition).	4.54331803322	345
Coq.QArith.Qcanon.Qcle_lt_trans	40	0.0.2.5.0	synth with cache (only 1: intros x y z; only 1: intuition auto; Z.Private_Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: apply Qle_lt_trans with y; only 1: auto; only 1: auto).	2.33225488663	138
Coq.QArith.Qcanon.Qclt_le_trans	40
Coq.QArith.Qcanon.Qclt_trans	40	0.0.4.2.5.0	synth with cache (only 1: intros x y z; only 1: intuition auto; Z.Private_Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: apply Qle_lt_trans with y; only 1: apply Qlt_le_weak; only 1: auto; only 1: auto).	16.6845419407	1089
Coq.QArith.Qcanon.Qcnot_lt_le	40	4.3.1	synth with cache (only 1: unfold Qcle, Qclt; only 1: intros (a1, a2) (b1, b2); only 1: apply Z.nlt_ge).	1.79966115952	153
Coq.QArith.Qcanon.Qcnot_le_lt	40	5.0	synth with cache (only 1: intros x y H; only 1: now apply Z.nle_gt).	0.13335108757	7
Coq.QArith.Qcanon.Qclt_not_le	40	7.0	synth with cache (only 1: intros n m; only 1: apply Z.lt_nge).	0.184391021729	12
Coq.QArith.Qcanon.Qcle_not_lt	40	6.0	synth with cache (only 1: intros n m; only 1: apply Z.le_ngt).	0.178429841995	11
Coq.QArith.Qcanon.Qcle_lt_or_eq	40
Coq.QArith.Qcanon.Qc_dec	40
Coq.QArith.Qcanon.Qclt_le_dec	40	0.0.0.6	synth with cache (only 1: unfold Qcle, Qclt; only 1: unfold Qlt, Qle; only 1: intros; only 1: exact (Z_lt_le_dec (Qnum x * QDen y) (Qnum y * QDen x))).	0.478962898254	31
Coq.QArith.Qcanon.Qcopp_le_compat	40
Coq.QArith.Qcanon.Qcle_minus_iff	40
Coq.QArith.Qcanon.Qclt_minus_iff	40
Coq.QArith.Qcanon.Qcplus_le_compat	40
Coq.QArith.Qcanon.Qcmult_le_compat_r	40
Coq.QArith.Qcanon.Qcmult_lt_0_le_reg_r	40
Coq.QArith.Qcanon.Qcmult_lt_compat_r	40
Coq.QArith.Qcanon.Qcpower_1	40
Coq.QArith.Qcanon.Qcpower_0	40	0.0.0.0.3.0.4.0.2	synth with cache (only 1: Nat.cases ltac:(n); only 1: intro H; only 1: now elim H; only 1: intro n; only 1: destruct n; only 1: intro H; only 1: trivial; only 1: intro H; only 1: trivial).	37.6560909748	2606
Coq.QArith.Qcanon.Qcpower_pos	40
Coq.QArith.Qcanon.Qc_eq_bool_correct	40
Coq.QArith.Qcanon.Qcrt	40
Coq.QArith.Qcanon.Qcft	40
Coq.QArith.Qcanon.test_field	40	1.1.1.1.0.0	synth with cache (only 1: unfold Qcdiv; only 1: intros; only 1: rewrite <- Qcmult_assoc; only 1: rewrite Qcmult_inv_l; only 1: apply Qcmult_1_r; only 1: auto).	0.290843963623	10
Coq.QArith.Qreals.IZR_nz	40	1.0	synth with cache (only 1: intro H; only 1: auto with real).	0.311147928238	16
Coq.QArith.Qreals.eqR_Qeq	40
Coq.QArith.Qreals.Qeq_eqR	40
Coq.QArith.Qreals.Rle_Qle	40
Coq.QArith.Qreals.Qle_Rle	40
Coq.QArith.Qreals.Rlt_Qlt	40
Coq.QArith.Qreals.Qlt_Rlt	40
Coq.QArith.Qreals.Q2R_plus	40
Coq.QArith.Qreals.Q2R_mult	40
Coq.QArith.Qreals.Q2R_opp	40
Coq.QArith.Qreals.Q2R_minus	40
Coq.QArith.Qreals.Q2R_inv	40
Coq.QArith.Qreals.Q2R_div	40
Coq.QArith.QArith_base.inject_Z_injective	40
Coq.QArith.QArith_base.Qeq_alt	40
Coq.QArith.QArith_base.Qlt_alt	40	0	synth with cache (only 1: reflexivity).	0.0857999324799	1
Coq.QArith.QArith_base.Qgt_alt	40
Coq.QArith.QArith_base.Qle_alt	40	0	synth with cache (only 1: reflexivity).	0.0849561691284	1
Coq.QArith.QArith_base.Qge_alt	40
Coq.QArith.QArith_base.Qcompare_antisym	40
Coq.QArith.QArith_base.Qcompare_spec	40
Coq.QArith.QArith_base.Qeq_refl	40	13	synth with cache (only 1: reflexivity).	0.255380153656	60
Coq.QArith.QArith_base.Qeq_sym	40	1.1	synth with cache (only 1: symmetry; only 1: auto).	0.161113977432	4
Coq.QArith.QArith_base.Qeq_trans	40
Coq.QArith.QArith_base.Q_Setoid	40
Coq.QArith.QArith_base.Qeq_dec	40	0.0.1.16	synth with cache (only 1: unfold Qeq, Qlt, Qcompare; only 1: decide equality; only 1: apply Pos.eq_dec; only 1: apply Pos.eq_dec).	5.4790430069	379
Coq.QArith.QArith_base.Qeq_bool_iff	40
Coq.QArith.QArith_base.Qeq_bool_eq	40	7	synth with cache (only 1: apply Zeq_is_eq_bool).	0.14030790329	15
Coq.QArith.QArith_base.Qeq_eq_bool	40	3	synth with cache (only 1: apply Qeq_bool_iff).	0.0921630859375	4
Coq.QArith.QArith_base.Qeq_bool_neq	40
Coq.QArith.QArith_base.Qle_bool_iff	40
Coq.QArith.QArith_base.Qle_bool_imp_le	40	11	synth with cache (only 1: apply Z.leb_le).	0.369827985764	36
Coq.QArith.QArith_base.Qnot_eq_sym	40	1	synth with cache (only 1: intuition).	0.122117996216	2
Coq.QArith.QArith_base.Qeq_bool_comm	40
Coq.QArith.QArith_base.Qeq_bool_refl	40	1.17	synth with cache (only 1: apply Qeq_bool_iff; only 1: auto with qarith).	1.25285410881	172
Coq.QArith.QArith_base.Qeq_bool_sym	40	0.1.17	synth with cache (only 1: rewrite !Qeq_bool_iff; only 1: symmetry; only 1: trivial).	5.34756302834	740
Coq.QArith.QArith_base.Qeq_bool_trans	40
Coq.QArith.QArith_base.Qmake_Qdiv	40
Coq.QArith.QArith_base.Qplus_comp	40
Coq.QArith.QArith_base.Qopp_comp	40
Coq.QArith.QArith_base.Qminus_comp	40
Coq.QArith.QArith_base.Qmult_comp	40
Coq.QArith.QArith_base.Qinv_comp	40
Coq.QArith.QArith_base.Qdiv_comp	40
Coq.QArith.QArith_base.Qcompare_comp	40
Coq.QArith.QArith_base.Qle_comp	40
Coq.QArith.QArith_base.Qlt_compat	40
Coq.QArith.QArith_base.Qeqb_comp	40
Coq.QArith.QArith_base.Qleb_comp	40
Coq.QArith.QArith_base.Q_apart_0_1	40	2.6	synth with cache (only 1: intro; only 1: destr_eq H).	0.163336992264	10
Coq.QArith.QArith_base.Qplus_assoc	40
Coq.QArith.QArith_base.Qplus_0_l	40	0.1.10	synth with cache (only 1: fix sqrtrem_spec 1; only 1: intro n; only 1: auto).	4.15458893776	159
Coq.QArith.QArith_base.Qplus_0_r	40	0.1.12	synth with cache (only 1: fix sqrtrem_spec 1; only 1: intro n; only 1: auto).	7.86653900146	476
Coq.QArith.QArith_base.Qplus_comm	40
Coq.QArith.QArith_base.Qopp_involutive	40	1.0.2.5	synth with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: ring).	3.48012185097	100
Coq.QArith.QArith_base.Qplus_opp_r	40	0.0.1.2	synth with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: ring).	0.326367139816	15
Coq.QArith.QArith_base.Qplus_inj_r	40
Coq.QArith.QArith_base.Qplus_inj_l	40
Coq.QArith.QArith_base.Qmult_assoc	40	1.0.0.1.1	synth with cache (only 1: intros (x1, x2) (y1, y2) (z1, z2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: simpl_mult; only 1: ring).	0.370751142502	8
Coq.QArith.QArith_base.Qmult_0_l	40	3.4	synth with cache (only 1: intros; only 1: firstorder).	0.203809022903	16
Coq.QArith.QArith_base.Qmult_0_r	40	3.0.0.7	synth with cache (only 1: unfold Qeq, Qplus; only 1: simpl; only 1: intro n; only 1: ring).	6.82667398453	292
Coq.QArith.QArith_base.Qmult_1_l	40	1.1.16	synth with cache (only 1: fix sqrtrem_spec 1; only 1: intro n; only 1: auto).	26.3579030037	2524
Coq.QArith.QArith_base.Qmult_1_r	40	0.2.1.0.1.3	synth with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: rewrite Pos.mul_comm; only 1: simpl; only 1: ring).	9.52351999283	455
Coq.QArith.QArith_base.Qmult_comm	40	1.0.0.0.0.1.1	synth with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: intros; only 1: rewrite Pos.mul_comm; only 1: rewrite Pos.mul_comm; only 1: ring).	0.505803823471	11
Coq.QArith.QArith_base.Qmult_plus_distr_r	40	1.0.0.1.9	synth with cache (only 1: intros (x1, x2) (y1, y2) (z1, z2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: simpl_mult; only 1: ring).	14.5226619244	590
Coq.QArith.QArith_base.Qmult_plus_distr_l	40	0.0.0.1.1	synth with cache (only 1: intros (x1, x2) (y1, y2) (z1, z2); only 1: unfold Qeq, Qmult, Qplus; only 1: simpl; only 1: simpl_mult; only 1: ring).	0.496256113052	7
Coq.QArith.QArith_base.Qmult_integral	40
Coq.QArith.QArith_base.Qmult_integral_l	40
Coq.QArith.QArith_base.inject_Z_plus	40
Coq.QArith.QArith_base.inject_Z_mult	40	2.1	synth with cache (only 1: unfold Qplus, inject_Z; only 1: auto).	0.144845962524	5
Coq.QArith.QArith_base.inject_Z_opp	40	1	synth with cache (only 1: reflexivity).	0.218394041061	2
Coq.QArith.QArith_base.Qinv_involutive	40
Coq.QArith.QArith_base.Qmult_inv_r	40
Coq.QArith.QArith_base.Qinv_mult_distr	40
Coq.QArith.QArith_base.Qdiv_mult_l	40
Coq.QArith.QArith_base.Qmult_div_r	40
Coq.QArith.QArith_base.Qinv_plus_distr	40
Coq.QArith.QArith_base.Qinv_minus_distr	40	0.0.0.3.1	synth with cache (only 1: intros; only 1: unfold Qeq; only 1: simpl; only 1: rewrite Pos2Z.inj_mul; only 1: ring).	0.324263095856	9
Coq.QArith.QArith_base.Qmult_inj_r	40
Coq.QArith.QArith_base.Qmult_inj_l	40
Coq.QArith.QArith_base.Qle_refl	40	16	synth with cache (only 1: intuition).	0.383430957794	108
Coq.QArith.QArith_base.Qle_antisym	40	26.6	synth with cache (only 1: unfold Qeq, Qlt, Qcompare; only 1: apply Z.le_antisymm).	34.3714699745	5458
Coq.QArith.QArith_base.Qle_trans	40
Coq.QArith.QArith_base.Qlt_irrefl	40	54	synth with cache (only 1: apply Z.lt_irrefl).	11.916533947	3165
Coq.QArith.QArith_base.Qlt_not_eq	40	5.2.0.22	synth with cache (only 1: unfold Qeq, Qlt, Qcompare; only 1: intro H; only 1: intuition; only 1: Z.order).	13.9605820179	2600
Coq.QArith.QArith_base.Zle_Qle	40
Coq.QArith.QArith_base.Zlt_Qlt	40
Coq.QArith.QArith_base.Qle_lteq	40
Coq.QArith.QArith_base.Qlt_le_weak	40
Coq.QArith.QArith_base.Qle_lt_trans	40
Coq.QArith.QArith_base.Qlt_le_trans	40
Coq.QArith.QArith_base.Qlt_trans	40
Coq.QArith.QArith_base.Qnot_lt_le	40	5.6	synth with cache (only 1: intuition; only 1: Z.order).	0.564440011978	59
Coq.QArith.QArith_base.Qnot_le_lt	40	6.8	synth with cache (only 1: intuition; only 1: Z.order).	1.84624695778	185
Coq.QArith.QArith_base.Qlt_not_le	40	4	synth with cache (only 1: apply Z.nle_gt).	0.0934998989105	5
Coq.QArith.QArith_base.Qle_not_lt	40	5	synth with cache (only 1: apply Z.nlt_ge).	0.21720290184	6
Coq.QArith.QArith_base.Qle_lt_or_eq	40
Coq.QArith.QArith_base.Q_dec	40	1.14	synth with cache (only 1: fix gcd_divide 1; only 1: auto).	9.21666502953	662
Coq.QArith.QArith_base.Qlt_le_dec	40
Coq.QArith.QArith_base.Qarchimedean	40
Coq.QArith.QArith_base.Qopp_le_compat	40
Coq.QArith.QArith_base.Qle_minus_iff	40
Coq.QArith.QArith_base.Qlt_minus_iff	40
Coq.QArith.QArith_base.Qplus_le_compat	40
Coq.QArith.QArith_base.Qplus_lt_le_compat	40
Coq.QArith.QArith_base.Qplus_le_l	40
Coq.QArith.QArith_base.Qplus_le_r	40
Coq.QArith.QArith_base.Qplus_lt_l	40
Coq.QArith.QArith_base.Qplus_lt_r	40
Coq.QArith.QArith_base.Qmult_le_compat_r	40
Coq.QArith.QArith_base.Qmult_lt_0_le_reg_r	40
Coq.QArith.QArith_base.Qmult_le_r	40
Coq.QArith.QArith_base.Qmult_le_l	40	0.0.0.0.2.0.0.3	synth with cache (only 1: rewrite (Qmult_comm z x), (Qmult_comm z y); only 1: split; only 1: intro; only 1: now apply Qmult_lt_0_le_reg_r with z; only 1: intro; only 1: apply Qmult_le_compat_r; only 1: auto; only 1: auto with qarith).	20.0016829967	885
Coq.QArith.QArith_base.Qmult_lt_compat_r	40
Coq.QArith.QArith_base.Qmult_lt_r	40
Coq.QArith.QArith_base.Qmult_lt_l	40
Coq.QArith.QArith_base.Qmult_le_0_compat	40
Coq.QArith.QArith_base.Qinv_le_0_compat	40	0.0.0.0.0.0.2.3	synth with cache (only 1: intros [[| n| n] d]; only 1: now try destruct p; only 1: red; only 1: simpl; only 1: trivial; only 1: red; only 1: simpl; only 1: trivial).	14.6804139614	366
Coq.QArith.QArith_base.Qle_shift_div_l	40
Coq.QArith.QArith_base.Qle_shift_inv_l	40
Coq.QArith.QArith_base.Qle_shift_div_r	40
Coq.QArith.QArith_base.Qle_shift_inv_r	40
Coq.QArith.QArith_base.Qinv_lt_0_compat	40	0.0.0.1	synth with cache (only 1: intros [[| n| n] d] Ha; only 1: assumption; only 1: assumption; only 1: assumption).	0.267300128937	5
Coq.QArith.QArith_base.Qlt_shift_div_l	40
Coq.QArith.QArith_base.Qlt_shift_inv_l	40
Coq.QArith.QArith_base.Qlt_shift_div_r	40
Coq.QArith.QArith_base.Qlt_shift_inv_r	40
Coq.QArith.QArith_base.Qinv_lt_contravar	40
Coq.QArith.QArith_base.Qpower_positive_comp	40
Coq.QArith.QArith_base.Qpower_comp	40
Coq.QArith.Qround.Qopp_lt_compat	40
Coq.QArith.Qround.Qfloor_Z	40	0.2.2.2	synth with cache (only 1: intros a; only 1: simpl; only 1: zero_or_not a; only 1: apply Z.div_1_r).	0.594451904297	33
Coq.QArith.Qround.Qceiling_Z	40
Coq.QArith.Qround.Qfloor_le	40
Coq.QArith.Qround.Qle_ceiling	40
Coq.QArith.Qround.Qle_floor_ceiling	40	0.0.2.1.1.1	synth with cache (only 1: intros x; only 1: apply Qle_trans with (- - x); only 1: rewrite Qopp_involutive; only 1: auto with *; only 1: change (Qceiling x : Q) with (- Qfloor (- x)); only 1: auto with *).	6.152987957	174
Coq.QArith.Qround.Qlt_floor	40
Coq.QArith.Qround.Qceiling_lt	40
Coq.QArith.Qround.Qfloor_resp_le	40
Coq.QArith.Qround.Qceiling_resp_le	40
Coq.QArith.Qround.Qfloor_comp_Proper	40
Coq.QArith.Qround.Qceiling_comp_Proper	40	3.1.3.2.0	synth with cache (only 1: intros x y H; only 1: apply Z.le_antisymm; only 1: auto with *; only 1: symmetry in H; only 1: auto with *).	8.78298807144	579
Coq.QArith.Qround.Zdiv_Qdiv	40
Coq.QArith.Qabs.Qabs_case	40
Coq.QArith.Qabs.Qabs_wd_Proper	40
Coq.QArith.Qabs.Qabs_pos	40	3.0.0.0.0.0.0.0.0.5	synth with cache (only 1: intros [[| n| n] d] Ha; only 1: red; only 1: simpl; only 1: trivial; only 1: red; only 1: simpl; only 1: reflexivity; only 1: red; only 1: simpl; only 1: now destruct n).	37.9311759472	1672
Coq.QArith.Qabs.Qabs_neg	40	0.0.0.1.0.0.0.0.0	synth with cache (only 1: intros x H; only 1: apply Qabs_case; only 1: intros H0; only 1: setoid_replace x with 0; only 1: reflexivity; only 1: apply Qle_antisym; only 1: assumption; only 1: assumption; only 1: reflexivity).	0.411381959915	10
Coq.QArith.Qabs.Qabs_nonneg	40	0.0.2.4.4	synth with cache (only 1: red; only 1: intros [[| n| n] d] Ha; only 1: discriminate; only 1: discriminate; only 1: discriminate).	8.79350399971	602
Coq.QArith.Qabs.Zabs_Qabs	40	1.1.1.0	synth with cache (only 1: simpl; only 1: intros n m; only 1: red; only 1: auto).	0.438178062439	15
Coq.QArith.Qabs.Qabs_opp	40
Coq.QArith.Qabs.Qabs_triangle	40
Coq.QArith.Qabs.Qabs_Qmult	40	0.5.0.0.0	synth with cache (only 1: intros (x1, x2) (y1, y2); only 1: unfold Qeq, Qinv, Qmult; only 1: simpl; only 1: repeat rewrite <- Z.abs_mul; only 1: auto).	0.296164035797	10
Coq.QArith.Qabs.Qabs_Qinv	40	0.0.0.0.0.0.0.0.0.1	synth with cache (only 1: intros [[| n| n] d]; only 1: red; only 1: simpl; only 1: trivial; only 1: red; only 1: simpl; only 1: reflexivity; only 1: red; only 1: simpl; only 1: reflexivity).	7.3134829998	194
Coq.QArith.Qabs.Qabs_Qminus	40
Coq.QArith.Qabs.Qle_Qabs	40	1.0.8	synth with cache (only 1: fix sqrtrem_spec 1; only 1: intro; only 1: trivial).	1.05885601044	142
Coq.QArith.Qabs.Qabs_triangle_reverse	40
Coq.QArith.Qabs.Qabs_Qle_condition	40
Coq.QArith.Qabs.Qabs_diff_Qle_condition	40
Coq.Classes.CMorphisms.Proper.eq_proper_proxy	40	0	synth with cache (only 1: firstorder).	0.0156779289246	1
Coq.Classes.CMorphisms.Proper.reflexive_proper_proxy	40	0	synth with cache (only 1: firstorder).	0.0152449607849	1
Coq.Classes.CMorphisms.Proper.proper_proper_proxy	40	0	synth with cache (only 1: firstorder).	0.0153150558472	1
Coq.Classes.CMorphisms.Relations.pointwise_pointwise	40	0.0.21.1.9	synth with cache (only 1: constructor; only 1: red; only 1: destruct 2; only 1: firstorder; only 1: firstorder).	13.4279339314	14498
Coq.Classes.CMorphisms.Relations.subrelation_id_proper	40	0	synth with cache (only 1: firstorder).	0.0160539150238	1
Coq.Classes.CMorphisms.Relations.subrelation_respectful	40	0	synth with cache (only 1: firstorder).	0.0191740989685	1
Coq.Classes.CMorphisms.Relations.subrelation_refl	40	0	synth with cache (only 1: firstorder).	0.0153210163116	1
Coq.Classes.CMorphisms.Relations.subrelation_proper	40	0	synth with cache (only 1: firstorder).	0.0167508125305	1
Coq.Classes.CMorphisms.Relations.proper_subrelation_proper_arrow	40	6	synth with cache (only 1: simpl_crelation).	0.125550985336	17
Coq.Classes.CMorphisms.Relations.pointwise_subrelation	40	0	synth with cache (only 1: firstorder).	0.0173740386963	1
Coq.Classes.CMorphisms.Relations.forall_subrelation	40	0	synth with cache (only 1: firstorder).	0.0189139842987	1
Coq.Classes.CMorphisms.iff_impl_subrelation	40	0	synth with cache (only 1: firstorder).	0.0168030261993	1
Coq.Classes.CMorphisms.iff_flip_impl_subrelation	40	0	synth with cache (only 1: firstorder).	0.0168669223785	1
Coq.Classes.CMorphisms.iffT_arrow_subrelation	40	0	synth with cache (only 1: firstorder).	0.0169048309326	1
Coq.Classes.CMorphisms.iffT_flip_arrow_subrelation	40	0	synth with cache (only 1: firstorder).	0.0172219276428	1
Coq.Classes.CMorphisms.GenericInstances.respectful_per_obligation_2	40
Coq.Classes.CMorphisms.GenericInstances.flip_proper_obligation_1	40	0	synth with cache (only 1: firstorder).	0.0200901031494	1
Coq.Classes.CMorphisms.GenericInstances.trans_contra_co_type_morphism_obligation_1	40	0	synth with cache (only 1: firstorder).	0.122982978821	1
Coq.Classes.CMorphisms.GenericInstances.trans_contra_inv_impl_type_morphism_obligation_1	40	0	synth with cache (only 1: firstorder).	0.0314288139343	1
Coq.Classes.CMorphisms.GenericInstances.trans_co_impl_type_morphism_obligation_1	40	0	synth with cache (only 1: firstorder).	0.0311810970306	1
Coq.Classes.CMorphisms.GenericInstances.trans_sym_co_inv_impl_type_morphism_obligation_1	40	0	synth with cache (only 1: firstorder).	0.020644903183	1
Coq.Classes.CMorphisms.GenericInstances.trans_sym_contra_arrow_morphism_obligation_1	40	0	synth with cache (only 1: firstorder).	0.0774409770966	1
Coq.Classes.CMorphisms.GenericInstances.per_partial_app_type_morphism_obligation_1	40	0	synth with cache (only 1: firstorder).	0.123235940933	1
Coq.Classes.CMorphisms.GenericInstances.trans_co_eq_inv_arrow_morphism_obligation_1	40	0	synth with cache (only 1: firstorder).	0.0307309627533	1
Coq.Classes.CMorphisms.GenericInstances.PER_type_morphism_obligation_1	40	0.0.2	synth with cache (only 1: split; only 1: firstorder; only 1: firstorder).	2.0885848999	5
Coq.Classes.CMorphisms.GenericInstances.symmetric_equiv_flip	40	0	synth with cache (only 1: firstorder).	0.0188729763031	1
Coq.Classes.CMorphisms.GenericInstances.compose_proper_obligation_1	40	0	synth with cache (only 1: firstorder).	0.019275188446	1
Coq.Classes.CMorphisms.GenericInstances.reflexive_eq_dom_reflexive	40	4.2	synth with cache (only 1: red; only 1: simpl_crelation).	0.0527460575104	18
Coq.Classes.CMorphisms.GenericInstances.respectful_morphism	40
Coq.Classes.CMorphisms.GenericInstances.Reflexive_partial_app_morphism	40	0	synth with cache (only 1: firstorder).	0.0177719593048	1
Coq.Classes.CMorphisms.GenericInstances.flip_respectful	40	0	synth with cache (only 1: firstorder).	0.0205929279327	1
Coq.Classes.CMorphisms.GenericInstances.flip1	40	0	synth with cache (only 1: firstorder).	0.0174040794373	1
Coq.Classes.CMorphisms.GenericInstances.flip2	40	0	synth with cache (only 1: firstorder).	0.0169978141785	1
Coq.Classes.CMorphisms.GenericInstances.eq_subrelation	40	1	synth with cache (only 1: simpl_crelation).	0.021674156189	2
Coq.Classes.CMorphisms.GenericInstances.reflexive_proper	40	0	synth with cache (only 1: firstorder).	0.017030954361	1
Coq.Classes.CMorphisms.GenericInstances.proper_eq	40	0	synth with cache (only 1: firstorder).	0.0173439979553	1
Coq.Classes.CMorphisms.proper_proper	40	0.2	synth with cache (only 1: simpl_crelation; only 1: firstorder).	0.060604095459	4
Coq.Classes.CMorphisms.Normalize.proper_normalizes_proper	40	0	synth with cache (only 1: firstorder).	0.0179731845856	1
Coq.Classes.CMorphisms.Normalize.flip_atom	40	0	synth with cache (only 1: firstorder).	0.018158197403	1
Coq.Classes.CMorphisms.flip_arrow	40
Coq.Classes.CMorphisms.proper_sym_flip	40	1	synth with cache (only 1: simpl_crelation).	0.145334005356	2
Coq.Classes.CMorphisms.proper_sym_flip_2	40
Coq.Classes.CMorphisms.proper_sym_impl_iff	40	0.2.1.1.1	synth with cache (only 1: red; only 1: red; only 1: red; only 1: simpl_crelation; only 1: firstorder).	0.381297111511	18
Coq.Classes.CMorphisms.proper_sym_arrow_iffT	40	0.3.1.1	synth with cache (only 1: red; only 1: red; only 1: simpl_crelation; only 1: firstorder).	0.501762151718	28
Coq.Classes.CMorphisms.proper_sym_impl_iff_2	40
Coq.Classes.CMorphisms.proper_sym_arrow_iffT_2	40	0.1.2.1	synth with cache (only 1: intros A R Sym B R' Sym' f Hf x x' Hxx' y y' Hyy'; only 1: repeat red in Hf; only 1: firstorder; only 1: eauto).	0.623075962067	18
Coq.Classes.CMorphisms.PartialOrder_proper_type	40
Coq.Classes.CMorphisms.PartialOrder_StrictOrder	40
Coq.Classes.CMorphisms.StrictOrder_PreOrder	40
Coq.Classes.CMorphisms.StrictOrder_PartialOrder	40
Coq.Classes.Morphisms_Prop.Acc_pt_morphism	40
Coq.Classes.Morphisms_Prop.Acc_rel_morphism	40
Coq.Classes.Morphisms_Prop.well_founded_morphism	40
Coq.Classes.CEquivalence.equiv_transitive_obligation_1	40	0.0.5.0	synth with cache (only 1: firstorder; only 1: transitivity y; only 1: firstorder; only 1: firstorder).	0.296607017517	49
Coq.Classes.CEquivalence.Respecting.respecting_equiv_obligation_3	40
Coq.Classes.CEquivalence.pointwise_reflexive	40	0	synth with cache (only 1: firstorder).	0.0176100730896	1
Coq.Classes.CEquivalence.pointwise_symmetric	40	0	synth with cache (only 1: firstorder).	0.018483877182	1
Coq.Classes.CEquivalence.pointwise_transitive	40	0	synth with cache (only 1: firstorder).	0.019926071167	1
Coq.Classes.CEquivalence.pointwise_equivalence	40	0	synth with cache (only 1: firstorder).	0.41415309906	1
Coq.Classes.CRelationClasses.Defs.complement_inverse	40	0	synth with cache (only 1: exact eq_refl).	0.0160629749298	1
Coq.Classes.CRelationClasses.Defs.StrictOrder_Asymmetric	40
Coq.Classes.CRelationClasses.Defs.subrelation_symmetric	40	2	synth with cache (only 1: firstorder).	0.0172519683838	3
Coq.Classes.CRelationClasses.Defs.flip.flip_Reflexive	40	0	synth with cache (only 1: auto).	0.0153110027313	1
Coq.Classes.CRelationClasses.Defs.flip.flip_Antisymmetric	40	1.2	synth with cache (only 1: hnf; only 1: auto).	0.0236368179321	5
Coq.Classes.CRelationClasses.Defs.flip.flip_PreOrder	40	4	synth with cache (only 1: firstorder).	0.0298318862915	5
Coq.Classes.CRelationClasses.Defs.flip.flip_StrictOrder	40	2	synth with cache (only 1: firstorder).	0.0296738147736	3
Coq.Classes.CRelationClasses.Defs.flip.flip_PER	40	2	synth with cache (only 1: firstorder).	0.0399889945984	3
Coq.Classes.CRelationClasses.Defs.flip.flip_Equivalence	40	2	synth with cache (only 1: firstorder).	0.0481250286102	3
Coq.Classes.CRelationClasses.Defs.complement.complement_Irreflexive	40	0	synth with cache (only 1: firstorder).	0.0158371925354	1
Coq.Classes.CRelationClasses.Defs.complement.complement_Symmetric	40	0	synth with cache (only 1: firstorder).	0.0167469978333	1
Coq.Classes.CRelationClasses.iffT_Reflexive	40	0	synth with cache (only 1: firstorder).	0.015692949295	1
Coq.Classes.CRelationClasses.iffT_Symmetric	40	0	synth with cache (only 1: firstorder).	0.0165979862213	1
Coq.Classes.CRelationClasses.iffT_Transitive	40	0	synth with cache (only 1: firstorder).	0.0188579559326	1
Coq.Classes.CRelationClasses.Binary.relation_equivalence_equivalence	40
Coq.Classes.CRelationClasses.Binary.relation_implication_preorder	40	0	synth with cache (only 1: firstorder).	0.0193619728088	1
Coq.Classes.CRelationClasses.Binary.partial_order_antisym	40	0	synth with cache (only 1: firstorder).	0.0229840278625	1
Coq.Classes.CRelationClasses.Binary.PartialOrder_inverse	40	0	synth with cache (only 1: firstorder).	0.0515940189362	1
Coq.Classes.Equivalence.equiv_transitive_obligation_1	40	0.0.6.0	synth with cache (only 1: firstorder; only 1: transitivity y; only 1: firstorder; only 1: firstorder).	0.166056871414	40
Coq.Classes.Equivalence.Respecting.respecting_equiv_obligation_3	40
Coq.Classes.Equivalence.pointwise_reflexive	40	0	synth with cache (only 1: firstorder).	0.0177388191223	1
Coq.Classes.Equivalence.pointwise_symmetric	40	0	synth with cache (only 1: firstorder).	0.0185589790344	1
Coq.Classes.Equivalence.pointwise_transitive	40	0	synth with cache (only 1: firstorder).	0.0200610160828	1
Coq.Classes.Equivalence.pointwise_equivalence	40	0	synth with cache (only 1: firstorder).	0.418847084045	1
Coq.Classes.EquivDec.unit_eqdec_obligation_1	40
Coq.Classes.EquivDec.bool_function_eqdec_obligation_1	40
Coq.Classes.EquivDec.list_eqdec_obligation_5	40
Coq.Classes.RelationClasses.Defs.complement_inverse	40	0	synth with cache (only 1: exact eq_refl).	0.0140759944916	1
Coq.Classes.RelationClasses.Defs.StrictOrder_Asymmetric	40
Coq.Classes.RelationClasses.Defs.subrelation_symmetric	40	2	synth with cache (only 1: firstorder).	0.0155370235443	3
Coq.Classes.RelationClasses.Defs.flip.flip_Reflexive	40	1	synth with cache (only 1: auto).	0.0141618251801	2
Coq.Classes.RelationClasses.Defs.flip.flip_Antisymmetric	40	1.2	synth with cache (only 1: hnf; only 1: auto).	0.0213620662689	5
Coq.Classes.RelationClasses.Defs.flip.flip_PreOrder	40	5	synth with cache (only 1: firstorder).	0.03178191185	6
Coq.Classes.RelationClasses.Defs.flip.flip_StrictOrder	40	2	synth with cache (only 1: firstorder).	0.0313980579376	3
Coq.Classes.RelationClasses.Defs.flip.flip_PER	40	2	synth with cache (only 1: firstorder).	0.0457789897919	3
Coq.Classes.RelationClasses.Defs.flip.flip_Equivalence	40	2	synth with cache (only 1: firstorder).	0.0433440208435	3
Coq.Classes.RelationClasses.Defs.complement.complement_Irreflexive	40	0	synth with cache (only 1: firstorder).	0.0143649578094	1
Coq.Classes.RelationClasses.Defs.complement.complement_Symmetric	40	0	synth with cache (only 1: firstorder).	0.0152840614319	1
Coq.Classes.RelationClasses.predicate_equivalence_equivalence_obligation_1	40
Coq.Classes.RelationClasses.predicate_equivalence_equivalence_obligation_2	40	0.0.2	synth with cache (only 1: induction l; only 1: firstorder; only 1: firstorder).	0.0761499404907	5
Coq.Classes.RelationClasses.predicate_equivalence_equivalence_obligation_3	40
Coq.Classes.RelationClasses.predicate_implication_preorder_obligation_1	40	0.1.2	synth with cache (only 1: induction l; only 1: firstorder; only 1: firstorder).	0.0325269699097	6
Coq.Classes.RelationClasses.predicate_implication_preorder_obligation_2	40	0.3.1.0.0.3	synth with cache (only 1: induction l; only 1: firstorder; only 1: firstorder; only 1: simpl in *; only 1: pose (IHl (x x0) (y x0) (z x0)); only 1: firstorder).	5.26756596565	133
Coq.Classes.RelationClasses.Binary.relation_equivalence_equivalence	40
Coq.Classes.RelationClasses.Binary.relation_implication_preorder	40	0	synth with cache (only 1: firstorder).	0.017657995224	1
Coq.Classes.RelationClasses.Binary.partial_order_antisym	40	0	synth with cache (only 1: firstorder).	0.022155046463	1
Coq.Classes.RelationClasses.Binary.PartialOrder_inverse	40	0	synth with cache (only 1: firstorder).	0.05198097229	1
Coq.Classes.RelationClasses.subrelation_partial_order_obligation_1	40	0	synth with cache (only 1: firstorder).	0.0231649875641	1
Coq.Classes.Morphisms.Proper.eq_proper_proxy	40	0	synth with cache (only 1: firstorder).	0.0153670310974	1
Coq.Classes.Morphisms.Proper.reflexive_proper_proxy	40	0	synth with cache (only 1: firstorder).	0.0153830051422	1
Coq.Classes.Morphisms.Proper.proper_proper_proxy	40	0	synth with cache (only 1: firstorder).	0.014867067337	1
Coq.Classes.Morphisms.Relations.pointwise_pointwise	40
Coq.Classes.Morphisms.Relations.subrelation_id_proper	40	0	synth with cache (only 1: firstorder).	0.0153980255127	1
Coq.Classes.Morphisms.Relations.subrelation_respectful	40	0	synth with cache (only 1: firstorder).	0.0187208652496	1
Coq.Classes.Morphisms.Relations.subrelation_refl	40	0	synth with cache (only 1: firstorder).	0.0155920982361	1
Coq.Classes.Morphisms.Relations.subrelation_proper	40	0	synth with cache (only 1: firstorder).	0.0162570476532	1
Coq.Classes.Morphisms.Relations.proper_subrelation_proper	40	0.1.8	synth with cache (only 1: reduce; only 1: subst; only 1: firstorder).	0.513460159302	63
Coq.Classes.Morphisms.Relations.pointwise_subrelation	40	0	synth with cache (only 1: firstorder).	0.0166928768158	1
Coq.Classes.Morphisms.Relations.forall_subrelation	40	0	synth with cache (only 1: firstorder).	0.0181949138641	1
Coq.Classes.Morphisms.iff_impl_subrelation	40	0	synth with cache (only 1: firstorder).	0.0163469314575	1
Coq.Classes.Morphisms.iff_flip_impl_subrelation	40	0	synth with cache (only 1: firstorder).	0.0164659023285	1
Coq.Classes.Morphisms.GenericInstances.respectful_per_obligation_2	40
Coq.Classes.Morphisms.GenericInstances.complement_proper_obligation_1	40
Coq.Classes.Morphisms.GenericInstances.flip_proper_obligation_1	40	0	synth with cache (only 1: firstorder).	0.0183131694794	1
Coq.Classes.Morphisms.GenericInstances.trans_contra_co_morphism_obligation_1	40	0	synth with cache (only 1: firstorder).	0.121235847473	1
Coq.Classes.Morphisms.GenericInstances.trans_contra_inv_impl_morphism_obligation_1	40	0	synth with cache (only 1: firstorder).	0.0305740833282	1
Coq.Classes.Morphisms.GenericInstances.trans_co_impl_morphism_obligation_1	40	0	synth with cache (only 1: firstorder).	0.0309669971466	1
Coq.Classes.Morphisms.GenericInstances.trans_sym_co_inv_impl_morphism_obligation_1	40	0	synth with cache (only 1: firstorder).	0.0196211338043	1
Coq.Classes.Morphisms.GenericInstances.trans_sym_contra_impl_morphism_obligation_1	40	0	synth with cache (only 1: firstorder).	0.0679819583893	1
Coq.Classes.Morphisms.GenericInstances.per_partial_app_morphism_obligation_1	40	0	synth with cache (only 1: firstorder).	0.0602600574493	1
Coq.Classes.Morphisms.GenericInstances.trans_co_eq_inv_impl_morphism_obligation_1	40	0	synth with cache (only 1: firstorder).	0.0311548709869	1
Coq.Classes.Morphisms.GenericInstances.PER_morphism_obligation_1	40	0.0.3	synth with cache (only 1: intuition; only 1: firstorder; only 1: firstorder).	2.36536693573	6
Coq.Classes.Morphisms.GenericInstances.symmetric_equiv_flip	40	0	synth with cache (only 1: firstorder).	0.0197908878326	1
Coq.Classes.Morphisms.GenericInstances.compose_proper_obligation_1	40	0	synth with cache (only 1: firstorder).	0.0198330879211	1
Coq.Classes.Morphisms.GenericInstances.reflexive_eq_dom_reflexive	40	0.1.1	synth with cache (only 1: reduce; only 1: subst; only 1: firstorder).	0.0328130722046	5
Coq.Classes.Morphisms.GenericInstances.respectful_morphism	40	0.3.1.0.4.1.9.1	synth with cache (only 1: reduce; only 1: split; only 1: reduce; only 1: apply H0; only 1: firstorder; only 1: reduce; only 1: apply H0; only 1: firstorder).	23.595001936	1574
Coq.Classes.Morphisms.GenericInstances.Reflexive_partial_app_morphism	40	0	synth with cache (only 1: firstorder).	0.0172510147095	1
Coq.Classes.Morphisms.GenericInstances.flip_respectful	40	0	synth with cache (only 1: firstorder).	0.0208280086517	1
Coq.Classes.Morphisms.GenericInstances.flip1	40	0	synth with cache (only 1: firstorder).	0.0163369178772	1
Coq.Classes.Morphisms.GenericInstances.flip2	40	0	synth with cache (only 1: firstorder).	0.016254901886	1
Coq.Classes.Morphisms.GenericInstances.eq_subrelation	40	0.1.1	synth with cache (only 1: reduce; only 1: subst; only 1: firstorder).	0.0304758548737	5
Coq.Classes.Morphisms.GenericInstances.reflexive_proper	40	0	synth with cache (only 1: firstorder).	0.0162649154663	1
Coq.Classes.Morphisms.GenericInstances.proper_eq	40	0	synth with cache (only 1: firstorder).	0.016783952713	1
Coq.Classes.Morphisms.proper_proper	40	0.1.0.0.1.0.1	synth with cache (only 1: split; only 1: firstorder; only 1: subst; only 1: firstorder; only 1: firstorder; only 1: subst; only 1: firstorder).	0.152158975601	10
Coq.Classes.Morphisms.Normalize.proper_normalizes_proper	40	0	synth with cache (only 1: firstorder).	0.0187358856201	1
Coq.Classes.Morphisms.Normalize.flip_atom	40	0	synth with cache (only 1: firstorder).	0.0194571018219	1
Coq.Classes.Morphisms.flip_arrow	40
Coq.Classes.Morphisms.proper_sym_flip	40	0.1	synth with cache (only 1: reduce; only 1: firstorder).	0.0829679965973	3
Coq.Classes.Morphisms.proper_sym_flip_2	40	0.0.8.2	synth with cache (only 1: reduce; only 1: apply H1; only 1: auto; only 1: auto).	2.73126220703	227
Coq.Classes.Morphisms.proper_sym_impl_iff	40	0.9	synth with cache (only 1: simpl_relation; only 1: firstorder).	2.08501601219	206
Coq.Classes.Morphisms.proper_sym_impl_iff_2	40
Coq.Classes.Morphisms.PartialOrder_proper	40
Coq.Classes.Morphisms.PartialOrder_StrictOrder	40
Coq.Classes.Morphisms.StrictOrder_PreOrder	40
Coq.Classes.Morphisms.StrictOrder_PartialOrder	40
Coq.Classes.RelationPairs.RelCompFun_Instances.RelCompFun_Reflexive	40	1	synth with cache (only 1: firstorder).	0.0587809085846	2
Coq.Classes.RelationPairs.RelCompFun_Instances.RelCompFun_Symmetric	40	1	synth with cache (only 1: firstorder).	0.0583760738373	2
Coq.Classes.RelationPairs.RelCompFun_Instances.RelCompFun_Transitive	40	1	synth with cache (only 1: firstorder).	0.0864579677582	2
Coq.Classes.RelationPairs.RelCompFun_Instances.RelCompFun_Irreflexive	40	1	synth with cache (only 1: firstorder).	0.0566461086273	2
Coq.Classes.RelationPairs.RelProd_Instances.RelProd_Reflexive	40	2	synth with cache (only 1: firstorder).	0.0632009506226	3
Coq.Classes.RelationPairs.RelProd_Instances.RelProd_Symmetric	40	2	synth with cache (only 1: firstorder).	0.0694990158081	3
Coq.Classes.RelationPairs.RelProd_Instances.RelProd_Transitive	40	2	synth with cache (only 1: firstorder).	0.501765966415	3
Coq.Classes.RelationPairs.RelProd_Instances.FstRel_ProdRel	40	2	synth with cache (only 1: firstorder).	0.0690369606018	3
Coq.Classes.RelationPairs.RelProd_Instances.SndRel_ProdRel	40	2	synth with cache (only 1: firstorder).	0.0672869682312	3
Coq.Classes.RelationPairs.RelProd_Instances.FstRel_sub	40	2	synth with cache (only 1: firstorder).	0.0653800964355	3
Coq.Classes.RelationPairs.RelProd_Instances.SndRel_sub	40	2	synth with cache (only 1: firstorder).	0.0640590190887	3
Coq.Classes.RelationPairs.RelProd_Instances.pair_compat	40	2	synth with cache (only 1: firstorder).	0.0629119873047	3
Coq.Classes.RelationPairs.RelProd_Instances.fst_compat	40	2	synth with cache (only 1: firstorder).	0.061506986618	3
Coq.Classes.RelationPairs.RelProd_Instances.snd_compat	40	2	synth with cache (only 1: firstorder).	0.0608189105988	3
Coq.Classes.RelationPairs.RelProd_Instances.RelCompFun_compat	40	0.26.2	synth with cache (only 1: repeat red; only 1: compute in *; only 1: auto).	11.5661859512	1632
Coq.Classes.DecidableClass.Decidable_sound	40	1.28.9.4	synth with cache (only 1: intro x; only 1: intros; only 1: apply H; only 1: auto).	2.32430505753	4868
Coq.Classes.DecidableClass.Decidable_complete	40	1.19.8.55	synth with cache (only 1: intro H; only 1: intros; only 1: apply H0; only 1: auto).	16.9218089581	48579
Coq.Classes.DecidableClass.Decidable_sound_alt	40
Coq.Classes.DecidableClass.Decidable_complete_alt	40
Coq.Classes.DecidableClass.Decidable_eq_bool_obligation_1	40
Coq.Classes.DecidableClass.Decidable_eq_nat_obligation_1	40	11.8.5	synth with cache (only 1: split; only 1: apply Nat.eqb_eq; only 1: apply Nat.eqb_eq).	40.0673191547	7381
Coq.Classes.DecidableClass.Decidable_le_nat_obligation_1	40	11	synth with cache (only 1: apply Nat.leb_le).	0.915000915527	199
Coq.Classes.DecidableClass.Decidable_eq_Z_obligation_1	40
Coq.Classes.SetoidDec.unit_eqdec_obligation_1	40	46.30	synth with cache (only 1: destruct y; only 1: now destruct x).	13.7054390907	7392
Coq.Classes.SetoidDec.bool_function_eqdec_obligation_1	40
Coq.Classes.SetoidClass.setoid_refl	40	5	synth with cache (only 1: firstorder).	0.0560441017151	6
Coq.Classes.SetoidClass.setoid_sym	40	1	synth with cache (only 1: typeclasses eauto).	0.0540571212769	2
Coq.Classes.SetoidClass.setoid_trans	40	1	synth with cache (only 1: typeclasses eauto).	0.0541670322418	2
Coq.Classes.SetoidClass.nequiv_equiv_trans	40
Coq.Classes.SetoidClass.equiv_nequiv_trans	40
Coq.Classes.Morphisms_Relations.relation_conjunction_morphism	40	0.6.4	synth with cache (only 1: intro n; only 1: intros R R' EQ a a' Ha WF; only 1: firstorder).	2.21879005432	124
Coq.Classes.Morphisms_Relations.relation_disjunction_morphism	40	0	synth with cache (only 1: firstorder).	0.977205038071	1
Coq.Classes.Morphisms_Relations.predicate_equivalence_pointwise	40	7	synth with cache (only 1: firstorder).	0.167330026627	8
Coq.Classes.Morphisms_Relations.predicate_implication_pointwise	40	0.3	synth with cache (only 1: do 2 red; only 1: auto).	0.0983889102936	5
Coq.Classes.Morphisms_Relations.relation_equivalence_pointwise	40	2.4	synth with cache (only 1: do 2 red; only 1: auto).	0.270457029343	21
Coq.Classes.Morphisms_Relations.subrelation_pointwise	40	0.4.1	synth with cache (only 1: intro; only 1: do 2 red; only 1: auto).	0.12991309166	8
Coq.Classes.Morphisms_Relations.flip_pointwise_relation	40	0	synth with cache (only 1: firstorder).	0.0549972057343	1
Coq.PArith.Pnat.Pos2Nat.inj_succ	40
Coq.PArith.Pnat.Pos2Nat.inj_add	40
Coq.PArith.Pnat.Pos2Nat.inj_mul	40
Coq.PArith.Pnat.Pos2Nat.inj_1	40	0	synth with cache (only 1: trivial).	0.0490229129791	1
Coq.PArith.Pnat.Pos2Nat.inj_xO	40
Coq.PArith.Pnat.Pos2Nat.inj_xI	40
Coq.PArith.Pnat.Pos2Nat.is_succ	40	1.18	synth with cache (only 1: fix sqrtrem_spec 1; only 1: trivial).	7.19301199913	1668
Coq.PArith.Pnat.Pos2Nat.is_pos	40	0.5.4	synth with cache (only 1: revert p; only 1: fix sqrtrem_spec 1; only 1: trivial).	0.909694910049	56
Coq.PArith.Pnat.Pos2Nat.id	40
Coq.PArith.Pnat.Pos2Nat.inj	40
Coq.PArith.Pnat.Pos2Nat.inj_iff	40	1.0.1.0	synth with cache (only 1: split; only 1: intros H; only 1: now rewrite <- (id p), <- (id q), H; only 1: congruence).	0.131199836731	6
Coq.PArith.Pnat.Pos2Nat.inj_compare	40
Coq.PArith.Pnat.Pos2Nat.inj_lt	40
Coq.PArith.Pnat.Pos2Nat.inj_le	40
Coq.PArith.Pnat.Pos2Nat.inj_gt	40
Coq.PArith.Pnat.Pos2Nat.inj_ge	40
Coq.PArith.Pnat.Pos2Nat.inj_sub	40
Coq.PArith.Pnat.Pos2Nat.inj_sub_max	40
Coq.PArith.Pnat.Pos2Nat.inj_pred	40
Coq.PArith.Pnat.Pos2Nat.inj_pred_max	40
Coq.PArith.Pnat.Pos2Nat.inj_min	40
Coq.PArith.Pnat.Pos2Nat.inj_max	40
Coq.PArith.Pnat.Pos2Nat.inj_iter	40
Coq.PArith.Pnat.Nat2Pos.id	40
Coq.PArith.Pnat.Nat2Pos.id_max	40	0.2.3.0.1.4.0.12	synth with cache (only 1: induction n; only 1: trivial; only 1: simpl; only 1: destruct n; only 1: trivial; only 1: rewrite Pos2Nat.inj_succ; only 1: f_equal; only 1: trivial).	12.7133328915	1453
Coq.PArith.Pnat.Nat2Pos.inj	40
Coq.PArith.Pnat.Nat2Pos.inj_iff	40
Coq.PArith.Pnat.Nat2Pos.inj_succ	40	0.2.0.0	synth with cache (only 1: destruct n; only 1: intro H; only 1: now elim H; only 1: trivial).	0.13441991806	6
Coq.PArith.Pnat.Nat2Pos.inj_pred	40
Coq.PArith.Pnat.Nat2Pos.inj_add	40
Coq.PArith.Pnat.Nat2Pos.inj_mul	40
Coq.PArith.Pnat.Nat2Pos.inj_compare	40
Coq.PArith.Pnat.Nat2Pos.inj_sub	40
Coq.PArith.Pnat.Nat2Pos.inj_min	40
Coq.PArith.Pnat.Nat2Pos.inj_max	40
Coq.PArith.Pnat.Pos2SuccNat.id_succ	40
Coq.PArith.Pnat.Pos2SuccNat.pred_id	40
Coq.PArith.Pnat.SuccNat2Pos.id_succ	40
Coq.PArith.Pnat.SuccNat2Pos.pred_id	40
Coq.PArith.Pnat.SuccNat2Pos.inj	40
Coq.PArith.Pnat.SuccNat2Pos.inj_iff	40	0.0.0.6	synth with cache (only 1: intuition; only 1: apply (f_equal Pos.to_nat) in H; only 1: rewrite !id_succ in H; only 1: now injection H).	2.70524096489	163
Coq.PArith.Pnat.SuccNat2Pos.inv	40
Coq.PArith.Pnat.SuccNat2Pos.inj_succ	40	1.0.0.2	synth with cache (only 1: induction n; only 1: trivial; only 1: simpl; only 1: auto).	0.14787197113	7
Coq.PArith.Pnat.SuccNat2Pos.inj_compare	40
Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_mult	40
Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_succ_morphism	40
Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_l_plus_morphism	40
Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_plus_carry_morphism	40
Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_r_plus_morphism	40
Coq.PArith.Pnat.ObsoletePmultNat.ZL6	40	3.1.9.1	synth with cache (only 1: intros; only 1: unfold Pos.to_nat; only 1: rewrite !Pmult_nat_mult; only 1: now Nat.nzsimpl).	4.24055099487	614
Coq.PArith.Pnat.ObsoletePmultNat.le_Pmult_nat	40	0.16.0	synth with cache (only 1: intro n; only 1: fix sqrtrem_spec 1; only 1: auto).	4.19430017471	732
Coq.PArith.BinPos.Pos.eq_dec	40	1	synth with cache (only 1: decide equality).	0.0622520446777	2
Coq.PArith.BinPos.Pos.xI_succ_xO	40	0	synth with cache (only 1: trivial).	0.0625298023224	1
Coq.PArith.BinPos.Pos.succ_discr	40
Coq.PArith.BinPos.Pos.pred_double_spec	40	0	synth with cache (only 1: trivial).	0.0608170032501	1
Coq.PArith.BinPos.Pos.succ_pred_double	40
Coq.PArith.BinPos.Pos.pred_double_succ	40	0.0.1.0.1.0.3	synth with cache (only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal).	1.15532493591	76
Coq.PArith.BinPos.Pos.double_succ	40	0.0	synth with cache (only 1: simpl; only 1: now f_equal).	0.0800278186798	2
Coq.PArith.BinPos.Pos.pred_double_xO_discr	40	1	synth with cache (only 1: now destruct p).	0.0647192001343	2
Coq.PArith.BinPos.Pos.succ_not_1	40	0	synth with cache (only 1: now destruct p).	0.0635001659393	1
Coq.PArith.BinPos.Pos.pred_succ	40	0.0.0.0.0.0.0.0.0.2.0.3	synth with cache (only 1: induction p; only 1: simpl; only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: now f_equal).	7.00845098495	483
Coq.PArith.BinPos.Pos.succ_pred_or	40
Coq.PArith.BinPos.Pos.succ_pred	40	2.4.0.0.0.3.0	synth with cache (only 1: intro H; only 1: destruct p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: apply succ_pred_double; only 1: now f_equal).	30.4314079285	1848
Coq.PArith.BinPos.Pos.succ_inj	40
Coq.PArith.BinPos.Pos.pred_N_succ	40	3.0.0.5.7.0.3	synth with cache (only 1: induction p; only 1: simpl; only 1: f_equal; only 1: apply pred_double_succ; only 1: simpl; only 1: now f_equal; only 1: trivial).	28.517565012	3262
Coq.PArith.BinPos.Pos.add_1_r	40	7	synth with cache (only 1: now destruct p).	0.69838809967	46
Coq.PArith.BinPos.Pos.add_1_l	40	1	synth with cache (only 1: now destruct p).	0.0488159656525	2
Coq.PArith.BinPos.Pos.add_carry_spec	40
Coq.PArith.BinPos.Pos.add_comm	40
Coq.PArith.BinPos.Pos.add_succ_r	40
Coq.PArith.BinPos.Pos.add_succ_l	40
Coq.PArith.BinPos.Pos.add_no_neutral	40
Coq.PArith.BinPos.Pos.add_carry_add	40
Coq.PArith.BinPos.Pos.add_reg_r	40
Coq.PArith.BinPos.Pos.add_reg_l	40
Coq.PArith.BinPos.Pos.add_cancel_r	40
Coq.PArith.BinPos.Pos.add_cancel_l	40
Coq.PArith.BinPos.Pos.add_carry_reg_r	40
Coq.PArith.BinPos.Pos.add_carry_reg_l	40
Coq.PArith.BinPos.Pos.add_assoc	40
Coq.PArith.BinPos.Pos.add_xO	40	0.0	synth with cache (only 1: simpl; only 1: f_equal).	0.104303121567	2
Coq.PArith.BinPos.Pos.add_xI_pred_double	40
Coq.PArith.BinPos.Pos.add_xO_pred_double	40
Coq.PArith.BinPos.Pos.add_diag	40
Coq.PArith.BinPos.Pos.peano_rect_succ	40
Coq.PArith.BinPos.Pos.peano_rect_base	40	0	synth with cache (only 1: auto).	0.054407119751	1
Coq.PArith.BinPos.Pos.peano_case	40
Coq.PArith.BinPos.Pos.eq_dep_eq_positive	40
Coq.PArith.BinPos.Pos.PeanoViewUnique	40
Coq.PArith.BinPos.Pos.peano_equiv	40
Coq.PArith.BinPos.Pos.mul_1_l	40	0	synth with cache (only 1: reflexivity).	0.0520801544189	1
Coq.PArith.BinPos.Pos.mul_1_r	40	0.1.0.0.0.9	synth with cache (only 1: induction p as [p IHp| p IHp| ]; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: reflexivity).	2.08704590797	227
Coq.PArith.BinPos.Pos.mul_xO_r	40
Coq.PArith.BinPos.Pos.mul_xI_r	40
Coq.PArith.BinPos.Pos.mul_comm	40
Coq.PArith.BinPos.Pos.mul_add_distr_l	40
Coq.PArith.BinPos.Pos.mul_add_distr_r	40
Coq.PArith.BinPos.Pos.mul_assoc	40
Coq.PArith.BinPos.Pos.mul_succ_l	40
Coq.PArith.BinPos.Pos.mul_succ_r	40
Coq.PArith.BinPos.Pos.mul_xI_mul_xO_discr	40
Coq.PArith.BinPos.Pos.mul_xO_discr	40
Coq.PArith.BinPos.Pos.mul_reg_r	40
Coq.PArith.BinPos.Pos.mul_reg_l	40
Coq.PArith.BinPos.Pos.mul_cancel_r	40	0.2.0	synth with cache (only 1: split; only 1: apply mul_reg_r; only 1: congruence).	2.06502103806	138
Coq.PArith.BinPos.Pos.mul_cancel_l	40	0.1.3.0	synth with cache (only 1: split; only 1: rewrite 2!(mul_comm r); only 1: apply mul_reg_r; only 1: congruence).	1.72556805611	124
Coq.PArith.BinPos.Pos.mul_eq_1_l	40
Coq.PArith.BinPos.Pos.mul_eq_1_r	40	1	synth with cache (only 1: now destruct p, q).	1.80736112595	117
Coq.PArith.BinPos.Pos.square_xO	40	6.0.1	synth with cache (only 1: simpl; only 1: f_equal; only 1: auto using mul_xI_r, mul_xO_r, mul_1_r).	0.17738699913	15
Coq.PArith.BinPos.Pos.square_xI	40
Coq.PArith.BinPos.Pos.iter_swap_gen	40
Coq.PArith.BinPos.Pos.iter_swap	40
Coq.PArith.BinPos.Pos.iter_succ	40
Coq.PArith.BinPos.Pos.iter_add	40
Coq.PArith.BinPos.Pos.iter_invariant	40
Coq.PArith.BinPos.Pos.pow_1_r	40
Coq.PArith.BinPos.Pos.pow_succ_r	40
Coq.PArith.BinPos.Pos.square_spec	40
Coq.PArith.BinPos.Pos.sub_mask_succ_r	40
Coq.PArith.BinPos.Pos.sub_mask_carry_spec	40
Coq.PArith.BinPos.Pos.sub_mask_spec	40
Coq.PArith.BinPos.Pos.sub_mask_nul_iff	40
Coq.PArith.BinPos.Pos.sub_mask_diag	40	1.0.0.0.0.0.0	synth with cache (only 1: induction p; only 1: simpl; only 1: now rewrite ?IHp; only 1: simpl; only 1: now rewrite ?IHp; only 1: simpl; only 1: trivial).	0.216827869415	8
Coq.PArith.BinPos.Pos.sub_mask_add	40
Coq.PArith.BinPos.Pos.sub_mask_add_diag_l	40
Coq.PArith.BinPos.Pos.sub_mask_pos_iff	40
Coq.PArith.BinPos.Pos.sub_mask_add_diag_r	40
Coq.PArith.BinPos.Pos.sub_mask_neg_iff	40
Coq.PArith.BinPos.Pos.eqb_eq	40
Coq.PArith.BinPos.Pos.ltb_lt	40	14.1.3	synth with cache (only 1: revert q; only 1: fix even_spec 1; only 1: trivial).	12.109607935	1996
Coq.PArith.BinPos.Pos.leb_le	40	13.1.6	synth with cache (only 1: revert q; only 1: fix even_spec 1; only 1: trivial).	11.5154898167	1992
Coq.PArith.BinPos.Pos.compare_cont_spec	40
Coq.PArith.BinPos.Pos.compare_cont_Eq	40
Coq.PArith.BinPos.Pos.compare_cont_Lt_Gt	40	1.13.10	synth with cache (only 1: revert q; only 1: fix odd_spec 1; only 1: easy).	16.8032200336	2637
Coq.PArith.BinPos.Pos.compare_cont_Lt_Lt	40	1.1.1.4.7.0	synth with cache (only 1: rewrite compare_cont_spec; only 1: unfold leb, le; only 1: destruct compare; only 1: easy'; only 1: easy'; only 1: easy').	14.2232220173	1719
Coq.PArith.BinPos.Pos.compare_cont_Gt_Lt	40	0.0.0.1.10.0	synth with cache (only 1: rewrite compare_cont_spec; only 1: unfold ltb, lt; only 1: destruct (p ?= q); only 1: now split; only 1: now split; only 1: now split).	4.49406909943	523
Coq.PArith.BinPos.Pos.compare_cont_Gt_Gt	40	2.10.16	synth with cache (only 1: revert q; only 1: fix even_spec 1; only 1: trivial).	27.2310061455	4606
Coq.PArith.BinPos.Pos.compare_cont_Lt_not_Lt	40	0.0.0.2.7.6	synth with cache (only 1: rewrite compare_cont_spec; only 1: unfold gt; only 1: destruct (p ?= q); only 1: easy'; only 1: easy'; only 1: easy').	3.5284049511	366
Coq.PArith.BinPos.Pos.compare_cont_Lt_not_Gt	40	0.0.0.2.11.12	synth with cache (only 1: rewrite compare_cont_spec; only 1: unfold le; only 1: destruct (p ?= q); only 1: now split; only 1: now split; only 1: now split).	34.2127730846	5214
Coq.PArith.BinPos.Pos.compare_cont_Gt_not_Lt	40	0.0.0.2.17.9	synth with cache (only 1: rewrite compare_cont_spec; only 1: unfold ge; only 1: destruct (p ?= q); only 1: now split; only 1: now split; only 1: now split).	15.570152998	2458
Coq.PArith.BinPos.Pos.compare_cont_Gt_not_Gt	40	0.0.0.2.10.10	synth with cache (only 1: rewrite compare_cont_spec; only 1: unfold lt; only 1: destruct (p ?= q); only 1: easy'; only 1: easy'; only 1: easy').	13.0703859329	1704
Coq.PArith.BinPos.Pos.compare_xO_xO	40	1.1.1.0	synth with cache (only 1: induction p; only 1: trivial; only 1: trivial; only 1: trivial).	0.139543056488	7
Coq.PArith.BinPos.Pos.compare_xI_xI	40	0	synth with cache (only 1: reflexivity).	0.0572760105133	1
Coq.PArith.BinPos.Pos.compare_xI_xO	40	1.6.1.5	synth with cache (only 1: unfold compare; only 1: simpl; only 1: rewrite compare_cont_spec; only 1: trivial).	9.87637686729	1076
Coq.PArith.BinPos.Pos.compare_xO_xI	40	2.8.2.6	synth with cache (only 1: unfold compare; only 1: simpl; only 1: rewrite compare_cont_spec; only 1: trivial).	5.66873812675	817
Coq.PArith.BinPos.Pos.compare_sub_mask	40
Coq.PArith.BinPos.Pos.lt_iff_add	40
Coq.PArith.BinPos.Pos.gt_iff_add	40
Coq.PArith.BinPos.Pos.compare_cont_refl	40	0.0.0.0.20	synth with cache (only 1: induction p; only 1: simpl; only 1: trivial; only 1: trivial; only 1: trivial).	1.43978309631	292
Coq.PArith.BinPos.Pos.compare_cont_antisym	40
Coq.PArith.BinPos.Pos.compare_eq_iff	40
Coq.PArith.BinPos.Pos.compare_antisym	40
Coq.PArith.BinPos.Pos.compare_lt_iff	40	0.1	synth with cache (only 1: unfold lt; only 1: now split).	0.0812609195709	3
Coq.PArith.BinPos.Pos.compare_le_iff	40	6	synth with cache (only 1: now split).	0.0626521110535	7
Coq.PArith.BinPos.Pos.gt_lt_iff	40	6.0	synth with cache (only 1: unfold gt, le, compare; only 1: now rewrite <- compare_lt_iff, compare_antisym, CompOpp_iff).	0.617624044418	44
Coq.PArith.BinPos.Pos.gt_lt	40	0.8.3.9	synth with cache (only 1: unfold gt, le, compare; only 1: intros H; only 1: rewrite compare_antisym, CompOpp_iff in H; only 1: trivial).	11.7908630371	1857
Coq.PArith.BinPos.Pos.lt_gt	40	0	synth with cache (only 1: apply gt_lt_iff).	0.0626001358032	1
Coq.PArith.BinPos.Pos.ge_le_iff	40	7.6	synth with cache (only 1: unfold ge, lt, compare; only 1: now rewrite <- compare_le_iff, compare_antisym, CompOpp_iff).	1.99282503128	275
Coq.PArith.BinPos.Pos.ge_le	40	2.3	synth with cache (only 1: unfold le, ge; only 1: now rewrite compare_antisym, CompOpp_iff).	0.133101940155	11
Coq.PArith.BinPos.Pos.le_ge	40	0	synth with cache (only 1: apply ge_le_iff).	0.061408996582	1
Coq.PArith.BinPos.Pos.compare_succ_r	40
Coq.PArith.BinPos.Pos.compare_succ_l	40
Coq.PArith.BinPos.Pos.lt_succ_r	40
Coq.PArith.BinPos.Pos.lt_succ_diag_r	40
Coq.PArith.BinPos.Pos.compare_succ_succ	40
Coq.PArith.BinPos.Pos.le_1_l	40	27	synth with cache (only 1: apply compare_succ_l || apply compare_succ_r || now destruct p || now destruct q).	5.02344799042	1512
Coq.PArith.BinPos.Pos.nlt_1_r	40	5	synth with cache (only 1: now destruct p).	0.1762778759	22
Coq.PArith.BinPos.Pos.lt_1_succ	40	1	synth with cache (only 1: now destruct p).	0.593518018723	55
Coq.PArith.BinPos.Pos.le_nlt	40	0.1.0	synth with cache (only 1: unfold gt, le, compare; only 1: rewrite PeanoNat.Nat.compare_gt_iff; only 1: intuition).	0.119431018829	4
Coq.PArith.BinPos.Pos.lt_nle	40	4.1	synth with cache (only 1: unfold ge, lt, compare; only 1: now rewrite <- compare_nle_iff, compare_antisym, CompOpp_iff).	1.08962893486	86
Coq.PArith.BinPos.Pos.lt_le_incl	40	7	synth with cache (only 1: congruence).	0.152065992355	17
Coq.PArith.BinPos.Pos.lt_lt_succ	40	0.5.24.0	synth with cache (only 1: intro H; only 1: rewrite PeanoNat.Nat.lt_succ_r; only 1: apply le_lteq; only 1: auto).	6.70587611198	2004
Coq.PArith.BinPos.Pos.succ_lt_mono	40
Coq.PArith.BinPos.Pos.succ_le_mono	40	4.15	synth with cache (only 1: unfold lt, le; only 1: now rewrite compare_succ_succ).	3.11538314819	752
Coq.PArith.BinPos.Pos.lt_trans	40
Coq.PArith.BinPos.Pos.lt_ind	40	0.35.28	synth with cache (only 1: intros H; only 1: fix gcd_greatest 1; only 1: trivial).	32.5706710815	12757
Coq.PArith.BinPos.Pos.lt_strorder	40	2.2.2	synth with cache (only 1: split; only 1: exact PeanoNat.Nat.lt_irrefl; only 1: exact PeanoNat.Nat.lt_trans).	0.113452911377	9
Coq.PArith.BinPos.Pos.lt_compat	40	1.3.7.1	synth with cache (only 1: intros x x' Hx y y' Hy; only 1: rewrite Hy; only 1: rewrite Hx; only 1: auto with *).	4.7767469883	670
Coq.PArith.BinPos.Pos.lt_total	40
Coq.PArith.BinPos.Pos.le_refl	40	0.1	synth with cache (only 1: apply lt_eq_cases; only 1: now right).	0.0882000923157	3
Coq.PArith.BinPos.Pos.le_lt_trans	40
Coq.PArith.BinPos.Pos.lt_le_trans	40
Coq.PArith.BinPos.Pos.le_trans	40	0.0.0.0.0.0.0.0.2.0.0.0.1	synth with cache (only 1: rewrite 3!PeanoNat.Nat.lt_eq_cases; only 1: intros [LT| EQ] [LT'| EQ']; only 1: generalize (PeanoNat.Nat.lt_trans n m p); only 1: auto with relations; only 1: rewrite <- EQ'; only 1: generalize (PeanoNat.Nat.lt_trans n m p); only 1: auto with relations; only 1: rewrite EQ; only 1: generalize (PeanoNat.Nat.lt_trans n m p); only 1: auto with relations; only 1: rewrite EQ; only 1: generalize (PeanoNat.Nat.lt_trans n m p); only 1: auto with relations).	14.8464500904	1469
Coq.PArith.BinPos.Pos.le_succ_l	40
Coq.PArith.BinPos.Pos.le_antisym	40
Coq.PArith.BinPos.Pos.le_preorder	40	6.5.1	synth with cache (only 1: split; only 1: exact PeanoNat.Nat.le_refl; only 1: exact PeanoNat.Nat.le_trans).	0.767508983612	157
Coq.PArith.BinPos.Pos.le_partorder	40
Coq.PArith.BinPos.Pos.add_compare_mono_l	40
Coq.PArith.BinPos.Pos.add_compare_mono_r	40
Coq.PArith.BinPos.Pos.lt_add_diag_r	40
Coq.PArith.BinPos.Pos.add_lt_mono_l	40
Coq.PArith.BinPos.Pos.add_lt_mono_r	40	0.0.0.7	synth with cache (only 1: rewrite 2!(add_comm _ p); only 1: unfold lt; only 1: rewrite add_compare_mono_l; only 1: apply iff_refl).	1.89364004135	144
Coq.PArith.BinPos.Pos.add_lt_mono	40
Coq.PArith.BinPos.Pos.add_le_mono_l	40	0.3.9	synth with cache (only 1: unfold lt, le; only 1: rewrite add_compare_mono_l; only 1: easy || now destruct 1).	5.17990517616	403
Coq.PArith.BinPos.Pos.add_le_mono_r	40	0.3.0	synth with cache (only 1: unfold le; only 1: rewrite add_compare_mono_r; only 1: apply iff_refl).	0.135389089584	6
Coq.PArith.BinPos.Pos.add_le_mono	40
Coq.PArith.BinPos.Pos.mul_compare_mono_l	40
Coq.PArith.BinPos.Pos.mul_compare_mono_r	40
Coq.PArith.BinPos.Pos.mul_lt_mono_l	40
Coq.PArith.BinPos.Pos.mul_lt_mono_r	40	0.0.0.6	synth with cache (only 1: rewrite 2!(mul_comm _ p); only 1: unfold lt; only 1: rewrite mul_compare_mono_l; only 1: apply iff_refl).	0.448266983032	46
Coq.PArith.BinPos.Pos.mul_lt_mono	40
Coq.PArith.BinPos.Pos.mul_le_mono_l	40	0.4.0	synth with cache (only 1: unfold le; only 1: rewrite mul_compare_mono_l; only 1: apply iff_refl).	0.224443912506	7
Coq.PArith.BinPos.Pos.mul_le_mono_r	40	0.5.0	synth with cache (only 1: unfold le; only 1: rewrite mul_compare_mono_r; only 1: apply iff_refl).	0.134637832642	8
Coq.PArith.BinPos.Pos.mul_le_mono	40
Coq.PArith.BinPos.Pos.lt_add_r	40	0.0	synth with cache (only 1: rewrite lt_iff_add; only 1: now exists q).	0.09827709198	2
Coq.PArith.BinPos.Pos.lt_not_add_l	40
Coq.PArith.BinPos.Pos.pow_gt_1	40
Coq.PArith.BinPos.Pos.sub_1_r	40	1.0.0.0.0.0.1	synth with cache (only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: trivial).	0.227998018265	9
Coq.PArith.BinPos.Pos.pred_sub	40	0	synth with cache (only 1: now destruct p).	0.0651478767395	1
Coq.PArith.BinPos.Pos.sub_succ_r	40
Coq.PArith.BinPos.Pos.sub_mask_pos'	40
Coq.PArith.BinPos.Pos.sub_mask_pos	40
Coq.PArith.BinPos.Pos.sub_add	40
Coq.PArith.BinPos.Pos.add_sub	40
Coq.PArith.BinPos.Pos.mul_sub_distr_l	40
Coq.PArith.BinPos.Pos.mul_sub_distr_r	40
Coq.PArith.BinPos.Pos.sub_lt_mono_l	40
Coq.PArith.BinPos.Pos.sub_compare_mono_l	40
Coq.PArith.BinPos.Pos.sub_compare_mono_r	40
Coq.PArith.BinPos.Pos.sub_lt_mono_r	40
Coq.PArith.BinPos.Pos.sub_decr	40
Coq.PArith.BinPos.Pos.add_sub_assoc	40
Coq.PArith.BinPos.Pos.sub_add_distr	40
Coq.PArith.BinPos.Pos.sub_sub_distr	40
Coq.PArith.BinPos.Pos.sub_xO_xO	40
Coq.PArith.BinPos.Pos.sub_xI_xI	40	0.0.0.0	synth with cache (only 1: intros H; only 1: unfold sub; only 1: simpl; only 1: now destruct (sub_mask_pos n m H) as (p, ->)).	0.164194107056	4
Coq.PArith.BinPos.Pos.sub_xI_xO	40	0.0.0.0	synth with cache (only 1: intros H; only 1: unfold sub; only 1: simpl; only 1: now destruct (sub_mask_pos n m H) as (p, ->)).	0.161051988602	4
Coq.PArith.BinPos.Pos.sub_xO_xI	40
Coq.PArith.BinPos.Pos.sub_mask_neg_iff'	40
Coq.PArith.BinPos.Pos.sub_mask_neg	40	0.0.14	synth with cache (only 1: rewrite lt_iff_add; only 1: intros (r, <-); only 1: apply sub_mask_add_diag_r).	5.3120059967	608
Coq.PArith.BinPos.Pos.sub_le	40
Coq.PArith.BinPos.Pos.sub_lt	40
Coq.PArith.BinPos.Pos.sub_diag	40
Coq.PArith.BinPos.Pos.size_nat_monotone	40
Coq.PArith.BinPos.Pos.size_gt	40
Coq.PArith.BinPos.Pos.size_le	40
Coq.PArith.BinPos.Pos.max_l	40
Coq.PArith.BinPos.Pos.max_r	40	1.1.1.0.0.2.3.0	synth with cache (only 1: intros x y H; only 1: unfold max; only 1: case compare_spec; only 1: trivial; only 1: auto; only 1: intros H'; only 1: apply le_nlt in H; only 1: now elim H).	5.54022502899	507
Coq.PArith.BinPos.Pos.min_l	40
Coq.PArith.BinPos.Pos.min_r	40
Coq.PArith.BinPos.Pos.max_1_l	40	24	synth with cache (only 1: now destruct n).	1.179240942	330
Coq.PArith.BinPos.Pos.max_1_r	40	0.1.0.0.1.0.0.0	synth with cache (only 1: unfold max; only 1: case compare_spec; only 1: congruence; only 1: intros H; only 1: apply lt_nle in H; only 1: elim H; only 1: apply le_1_l; only 1: auto).	0.258318901062	10
Coq.PArith.BinPos.Pos.min_1_l	40	8.0	synth with cache (only 1: apply min_l; only 1: apply le_1_l).	0.182483911514	20
Coq.PArith.BinPos.Pos.min_1_r	40	0.1.0.0.1.0.0.0	synth with cache (only 1: unfold min; only 1: case compare_spec; only 1: congruence; only 1: intros H; only 1: apply lt_nle in H; only 1: elim H; only 1: apply le_1_l; only 1: auto).	0.254310131073	10
Coq.PArith.BinPos.Pos.succ_max_distr	40
Coq.PArith.BinPos.Pos.succ_min_distr	40	0.1.1.10.2	synth with cache (only 1: symmetry; only 1: apply min_mono; only 1: congruence; only 1: intros x x'; only 1: apply succ_le_mono).	7.71165800095	981
Coq.PArith.BinPos.Pos.add_max_distr_l	40
Coq.PArith.BinPos.Pos.add_max_distr_r	40
Coq.PArith.BinPos.Pos.add_min_distr_l	40	0.1.0.5	synth with cache (only 1: apply min_mono; only 1: eauto with *; only 1: intros x x'; only 1: apply add_le_mono_l).	0.305473089218	20
Coq.PArith.BinPos.Pos.add_min_distr_r	40	0.1.0.2	synth with cache (only 1: rewrite 3!(add_comm _ p); only 1: apply min_monotone; only 1: intros x x'; only 1: apply add_le_mono_l).	0.259882926941	16
Coq.PArith.BinPos.Pos.mul_max_distr_l	40	14.1.1	synth with cache (only 1: apply max_monotone; only 1: intros x x'; only 1: now apply mul_le_mono_l).	11.5034499168	1517
Coq.PArith.BinPos.Pos.mul_max_distr_r	40
Coq.PArith.BinPos.Pos.mul_min_distr_l	40	0.1.2	synth with cache (only 1: apply min_monotone; only 1: intros x x'; only 1: apply mul_le_mono_l).	0.254205942154	16
Coq.PArith.BinPos.Pos.mul_min_distr_r	40	0.1.0.1	synth with cache (only 1: rewrite 3!(mul_comm _ p); only 1: apply min_monotone; only 1: intros x x'; only 1: apply mul_le_mono_l).	0.279866933823	16
Coq.PArith.BinPos.Pos.iter_op_succ	40	1.1.2.1.5.1	synth with cache (only 1: induction p; only 1: firstorder; only 1: simpl; only 1: congruence; only 1: auto; only 1: auto).	3.83798003197	502
Coq.PArith.BinPos.Pos.of_nat_succ	40	0.0.10.2	synth with cache (only 1: revert n; only 1: fix le_div2 1; only 1: intro n; only 1: auto).	4.14162302017	583
Coq.PArith.BinPos.Pos.pred_of_succ_nat	40
Coq.PArith.BinPos.Pos.succ_of_nat	40
Coq.PArith.BinPos.Pos.sqrtrem_step_spec	40
Coq.PArith.BinPos.Pos.sqrtrem_spec	40
Coq.PArith.BinPos.Pos.sqrt_spec	40	0.17.3	synth with cache (only 1: revert p; only 1: fix sqrtrem_spec 1; only 1: auto).	13.2488000393	1918
Coq.PArith.BinPos.Pos.divide_add_cancel_l	40
Coq.PArith.BinPos.Pos.divide_xO_xI	40
Coq.PArith.BinPos.Pos.divide_xO_xO	40	0.10.22	synth with cache (only 1: revert q; only 1: fix sqrtrem_spec 1; only 1: auto).	17.3160979748	3348
Coq.PArith.BinPos.Pos.divide_mul_l	40
Coq.PArith.BinPos.Pos.divide_mul_r	40
Coq.PArith.BinPos.Pos.ggcdn_gcdn	40
Coq.PArith.BinPos.Pos.ggcd_gcd	40
Coq.PArith.BinPos.Pos.ggcdn_correct_divisors	40
Coq.PArith.BinPos.Pos.ggcd_correct_divisors	40	0.25	synth with cache (only 1: fix sqrtrem_spec 1; only 1: auto).	2.53403091431	562
Coq.PArith.BinPos.Pos.gcd_divide_l	40	0.13.0.7.0	synth with cache (only 1: intro n; only 1: destruct sqrtrem as (s, rm); only 1: auto; only 1: fix sqrtrem_spec 1; only 1: auto).	9.88972711563	1885
Coq.PArith.BinPos.Pos.gcd_divide_r	40	0.3.1	synth with cache (only 1: intro n; only 1: fix sqrtrem_spec 1; only 1: auto).	0.412660837173	37
Coq.PArith.BinPos.Pos.gcdn_greatest	40	0.20	synth with cache (only 1: fix le_div2 1; only 1: trivial).	17.5610589981	2068
Coq.PArith.BinPos.Pos.gcd_greatest	40	3.0.4	synth with cache (only 1: fix gcd_greatest 1; only 1: intros x y z; only 1: intuition auto; Private_Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.694901943207	54
Coq.PArith.BinPos.Pos.ggcd_greatest	40
Coq.PArith.BinPos.Peqb_true_eq	40
Coq.PArith.BinPos.Pcompare_eq_Gt	40	0.1	synth with cache (only 1: unfold Pos.gt; only 1: now split).	0.121722221375	3
Coq.PArith.BinPos.Pminus_mask_Gt	40
Coq.PArith.BinPos.Pplus_minus	40
Coq.PArith.BinPos.Dcompare	40	0.18	synth with cache (only 1: fix sqrtrem_spec 1; only 1: intuition).	3.80859994888	643
Coq.Arith.Le.le_n_0_eq	40	0.1	synth with cache (only 1: inversion 1; only 1: trivial).	0.125434875488	20
Coq.Arith.Le.le_elim_rel	40
Coq.Arith.Even.even_equiv	40	0.10	synth with cache (only 1: fix even_spec 1; only 1: trivial).	0.799202919006	115
Coq.Arith.Even.odd_equiv	40	2.0	synth with cache (only 1: fix even_equiv 1; only 1: trivial).	0.64222407341	37
Coq.Arith.Even.even_or_odd	40	1.2.12	synth with cache (only 1: revert n; only 1: fix odd_equiv 1; only 1: trivial).	0.810259819031	140
Coq.Arith.Even.even_odd_dec	40	0.0.0.1.0	synth with cache (only 1: induction n; only 1: auto with arith; only 1: elim IHn; only 1: auto with arith; only 1: auto with arith).	0.164535999298	6
Coq.Arith.Even.not_even_and_odd	40
Coq.Arith.Even.even_plus_split	40
Coq.Arith.Even.odd_plus_split	40	1	synth with cache (only 1: parity_binop).	0.405957937241	12
Coq.Arith.Even.even_even_plus	40	8	synth with cache (only 1: parity_binop).	0.17761516571	17
Coq.Arith.Even.odd_plus_l	40	1	synth with cache (only 1: parity_binop).	0.198559999466	2
Coq.Arith.Even.odd_plus_r	40	1	synth with cache (only 1: parity_binop).	0.114590167999	2
Coq.Arith.Even.odd_even_plus	40	1	synth with cache (only 1: parity_binop).	0.201257944107	13
Coq.Arith.Even.even_plus_aux	40	4	synth with cache (only 1: parity_binop).	0.428046941757	12
Coq.Arith.Even.even_plus_even_inv_r	40	3	synth with cache (only 1: parity_binop).	0.175163030624	11
Coq.Arith.Even.even_plus_even_inv_l	40	1	synth with cache (only 1: parity_binop).	0.137105941772	2
Coq.Arith.Even.even_plus_odd_inv_r	40	1	synth with cache (only 1: parity_binop).	0.112350940704	2
Coq.Arith.Even.even_plus_odd_inv_l	40	1	synth with cache (only 1: parity_binop).	0.110821962357	2
Coq.Arith.Even.odd_plus_even_inv_l	40	1	synth with cache (only 1: parity_binop).	0.273660182953	11
Coq.Arith.Even.odd_plus_even_inv_r	40	1	synth with cache (only 1: parity_binop).	0.163503885269	11
Coq.Arith.Even.odd_plus_odd_inv_l	40	1	synth with cache (only 1: parity_binop).	0.141603946686	2
Coq.Arith.Even.odd_plus_odd_inv_r	40	1	synth with cache (only 1: parity_binop).	0.112915992737	2
Coq.Arith.Even.even_mult_aux	40	3	synth with cache (only 1: parity_binop).	0.278989076614	4
Coq.Arith.Even.even_mult_l	40	9	synth with cache (only 1: parity_binop).	0.208161830902	18
Coq.Arith.Even.even_mult_r	40	5	synth with cache (only 1: parity_binop).	0.143122911453	14
Coq.Arith.Even.even_mult_inv_r	40	2	synth with cache (only 1: parity_binop).	0.190752029419	12
Coq.Arith.Even.even_mult_inv_l	40	1	synth with cache (only 1: parity_binop).	0.189059019089	11
Coq.Arith.Even.odd_mult	40	2	synth with cache (only 1: parity_binop).	0.442089796066	25
Coq.Arith.Even.odd_mult_inv_l	40	2	synth with cache (only 1: parity_binop).	0.186177015305	17
Coq.Arith.Even.odd_mult_inv_r	40	4	synth with cache (only 1: parity_binop).	0.147354125977	14
Coq.Arith.Minus.minus_n_O	40	0	synth with cache (only 1: now destruct n).	0.0502789020538	1
Coq.Arith.Minus.minus_Sn_m	40
Coq.Arith.Minus.pred_of_minus	40	0	synth with cache (only 1: now Nat.nzsimpl').	0.0672378540039	1
Coq.Arith.Minus.minus_diag_reverse	40	2.1.38	synth with cache (only 1: induction n; only 1: trivial; only 1: trivial).	6.65882897377	2941
Coq.Arith.Minus.minus_plus_simpl_l_reverse	40	0.0.0.0.11.2.0	synth with cache (only 1: nzinduct p; only 1: now Nat.nzsimpl; only 1: split; only 1: intro H; only 1: trivial; only 1: intro H; only 1: trivial).	20.9727139473	2152
Coq.Arith.Minus.plus_minus	40	2.1.1.0.1.0.4.0.0.1	synth with cache (only 1: Nat.double_induct n m; only 1: intro n; only 1: intro H; only 1: now destruct n; only 1: intro n; only 1: simpl; only 1: intro H; only 1: auto; only 1: intros n m IH H1; only 1: auto).	28.2749140263	3875
Coq.Arith.Minus.minus_plus	40	3.5.4	synth with cache (only 1: nzinduct n; only 1: now Nat.nzsimpl; only 1: Morphisms.solve_proper).	1.51520991325	138
Coq.Arith.Minus.le_plus_minus_r	40
Coq.Arith.Minus.le_plus_minus	40
Coq.Arith.Minus.lt_O_minus_lt	40
Coq.Arith.Minus.not_le_minus_0	40
Coq.Arith.Between.Between.bet_eq	40	13.6	synth with cache (only 1: induction 1; only 1: intuition).	5.65547609329	949
Coq.Arith.Between.Between.between_le	40	1.0.12	synth with cache (only 1: induction 1; only 1: trivial; only 1: auto).	4.55751609802	754
Coq.Arith.Between.Between.between_Sk_l	40
Coq.Arith.Between.Between.between_restr	40	3.9	synth with cache (only 1: fix gcd_greatest 1; only 1: trivial).	3.63525891304	389
Coq.Arith.Between.Between.exists_le_S	40	2.1.4	synth with cache (only 1: induction 1; only 1: auto with arith; only 1: auto with arith).	0.298592090607	43
Coq.Arith.Between.Between.exists_S_le	40	0.14.5	synth with cache (only 1: intro n; only 1: fix le_div2 1; only 1: trivial).	24.1653690338	4294
Coq.Arith.Between.Between.in_int_intro	40	0.0.4.7	synth with cache (only 1: intros n m p H H'; only 1: constructor; only 1: trivial; only 1: trivial).	2.88616108894	312
Coq.Arith.Between.Between.in_int_lt	40	4.5	synth with cache (only 1: induction 1; only 1: PeanoNat.Nat.order).	0.531770944595	48
Coq.Arith.Between.Between.in_int_p_Sq	40
Coq.Arith.Between.Between.in_int_S	40	5.2	synth with cache (only 1: intros * []; only 1: auto with arith).	0.147394895554	18
Coq.Arith.Between.Between.in_int_Sp_q	40	2.2	synth with cache (only 1: intros * []; only 1: auto with arith).	0.146346092224	14
Coq.Arith.Between.Between.between_in_int	40
Coq.Arith.Between.Between.in_int_between	40	2.2.2.2	synth with cache (only 1: induction 1; only 1: auto with arith; only 1: intros; only 1: auto with arith).	1.97543001175	169
Coq.Arith.Between.Between.exists_in_int	40	1.19	synth with cache (only 1: fix gcd_divide 1; only 1: trivial).	14.0027630329	1800
Coq.Arith.Between.Between.in_int_exists	40
Coq.Arith.Between.Between.between_or_exists	40
Coq.Arith.Between.Between.between_not_exists	40
Coq.Arith.Between.Between.nth_le	40
Coq.Arith.Between.Between.event_O	40
Coq.Arith.Peano_dec.O_or_S	40
Coq.Arith.Peano_dec.dec_eq_nat	40	0.0.0.0.0.0.0.0.0.0.11.16.29	synth with cache (only 1: unfold decidable; only 1: revert m; only 1: induction n; only 1: destruct m; only 1: now left; only 1: now right; only 1: destruct m; only 1: now right; only 1: destruct (IHn m); only 1: left; only 1: auto; only 1: right; only 1: auto).	36.8218491077	10161
Coq.Arith.Peano_dec.le_unique	40
Coq.Arith.Mult.mult_assoc_reverse	40
Coq.Arith.Mult.mult_is_O	40
Coq.Arith.Mult.mult_is_one	40
Coq.Arith.Mult.mult_O_le	40
Coq.Arith.Mult.mult_le_compat_l	40
Coq.Arith.Mult.mult_le_compat_r	40
Coq.Arith.Mult.mult_le_compat	40
Coq.Arith.Mult.mult_S_lt_compat_l	40
Coq.Arith.Mult.mult_lt_compat_l	40
Coq.Arith.Mult.mult_lt_compat_r	40
Coq.Arith.Mult.mult_S_le_reg_l	40
Coq.Arith.Mult.odd_even_lem	40
Coq.Arith.Mult.mult_acc_aux	40
Coq.Arith.Mult.mult_tail_mult	40
Coq.Arith.Div2.ind_0_1_SS	40	0.12.0.2.3	synth with cache (only 1: intros A A_wd A0 AS; only 1: apply nat_ind; only 1: auto; only 1: fix odd_equiv 1; only 1: auto).	23.3989069462	3096
Coq.Arith.Div2.lt_div2	40
Coq.Arith.Div2.even_div2	40
Coq.Arith.Div2.odd_div2	40
Coq.Arith.Div2.div2_even	40
Coq.Arith.Div2.div2_odd	40
Coq.Arith.Div2.even_odd_div2	40	2	synth with cache (only 1: intuition).	0.0541548728943	3
Coq.Arith.Div2.double_S	40
Coq.Arith.Div2.double_plus	40
Coq.Arith.Div2.even_odd_double	40
Coq.Arith.Div2.even_2n	40
Coq.Arith.Div2.odd_S2n	40	0.0.0	synth with cache (only 1: intros n H; only 1: exists (Nat.div2 n); only 1: auto with arith).	0.106969118118	3
Coq.Arith.Div2.div2_double	40	1	synth with cache (only 1: apply Nat.div2_double).	0.900604963303	58
Coq.Arith.Div2.div2_double_plus_one	40
Coq.Arith.Plus.plus_assoc_reverse	40
Coq.Arith.Plus.plus_reg_l	40
Coq.Arith.Plus.plus_le_reg_l	40
Coq.Arith.Plus.plus_lt_reg_l	40
Coq.Arith.Plus.plus_le_compat_l	40	3	synth with cache (only 1: apply Nat.add_le_mono_l).	0.12766289711	21
Coq.Arith.Plus.plus_le_compat_r	40
Coq.Arith.Plus.plus_lt_compat_l	40	1	synth with cache (only 1: apply Nat.add_lt_mono_l).	0.0531640052795	2
Coq.Arith.Plus.plus_lt_compat_r	40
Coq.Arith.Plus.plus_le_compat	40
Coq.Arith.Plus.plus_le_lt_compat	40
Coq.Arith.Plus.plus_lt_le_compat	40	3	synth with cache (only 1: apply Nat.add_le_mono).	0.0862181186676	11
Coq.Arith.Plus.plus_lt_compat	40
Coq.Arith.Plus.le_plus_l	40	1.15.6.51	synth with cache (only 1: revert m; only 1: revert n; only 1: fix gcd_divide 1; only 1: trivial).	11.8724648952	4998
Coq.Arith.Plus.le_plus_r	40	0.6.0.0.0.4.40	synth with cache (only 1: revert m; only 1: Nat.cases ltac:(n); only 1: intro; only 1: trivial; only 1: intro n; only 1: fix le_div2 1; only 1: trivial).	8.61774706841	2379
Coq.Arith.Plus.le_plus_trans	40
Coq.Arith.Plus.lt_plus_trans	40
Coq.Arith.Plus.plus_is_O	40	8.0.1.1.0.7	synth with cache (only 1: Nat.induct n; only 1: intro H; only 1: auto with relations; only 1: intros n IH; only 1: intro H; only 1: now split).	27.513092041	2967
Coq.Arith.Plus.plus_is_one	40
Coq.Arith.Plus.plus_tail_plus	40
Coq.Arith.Plus.succ_plus_discr	40
Coq.Arith.Lt.lt_le_S	40	2.0	synth with cache (only 1: intro H; only 1: trivial).	0.0750589370728	4
Coq.Arith.Lt.lt_n_Sm_le	40	0	synth with cache (only 1: apply le_S_n).	0.0463929176331	1
Coq.Arith.Lt.le_lt_n_Sm	40	0.2.0	synth with cache (only 1: induction 1; only 1: auto; only 1: auto).	0.100867986679	5
Coq.Arith.Lt.le_not_lt	40	0.0	synth with cache (only 1: intro H; only 1: Nat.order).	0.0722939968109	2
Coq.Arith.Lt.lt_not_le	40	0.0	synth with cache (only 1: intro H; only 1: Nat.order).	0.0718538761139	2
Coq.Arith.Lt.neq_0_lt	40	2.0	synth with cache (only 1: intro H; only 1: Nat.auto').	0.0728268623352	4
Coq.Arith.Lt.lt_0_neq	40	0.0.0.0	synth with cache (only 1: intro H; only 1: intro H1; only 1: rewrite H1 in H; only 1: false_hyp H Nat.lt_irrefl).	0.118758916855	4
Coq.Arith.Lt.lt_n_S	40	9	synth with cache (only 1: apply le_n_S).	0.515183925629	43
Coq.Arith.Lt.lt_S_n	40	1	synth with cache (only 1: apply Nat.succ_lt_mono).	0.0850989818573	11
Coq.Arith.Lt.S_pred	40	0.0.7	synth with cache (only 1: induction 1; only 1: trivial; only 1: trivial).	0.202485799789	25
Coq.Arith.Lt.S_pred_pos	40	0.0.5	synth with cache (only 1: inversion 1; only 1: trivial; only 1: trivial).	0.167176008224	23
Coq.Arith.Lt.lt_pred	40
Coq.Arith.Lt.lt_pred_n_n	40	8.0.0.1	synth with cache (only 1: destruct n; only 1: inversion 1; only 1: intros _; only 1: auto).	6.25564599037	503
Coq.Arith.Lt.le_lt_or_eq	40	1.0.15	synth with cache (only 1: induction 1; only 1: now right; only 1: intuition).	5.72983980179	607
Coq.Arith.Lt.nat_total_order	40
Coq.Arith.Wf_nat.Well_founded_Nat.well_founded_ltof	40
Coq.Arith.Wf_nat.Well_founded_Nat.well_founded_gtof	40
Coq.Arith.Wf_nat.Well_founded_Nat.induction_ltof1	40
Coq.Arith.Wf_nat.Well_founded_Nat.induction_gtof1	40
Coq.Arith.Wf_nat.Well_founded_Nat.induction_ltof2	40	1	synth with cache (only 1: exact induction_ltof1).	0.83950304985	72
Coq.Arith.Wf_nat.Well_founded_Nat.induction_gtof2	40	0	synth with cache (only 1: exact induction_ltof1).	0.0545790195465	1
Coq.Arith.Wf_nat.Well_founded_Nat.well_founded_lt_compat	40
Coq.Arith.Wf_nat.lt_wf	40
Coq.Arith.Wf_nat.lt_wf_rec1	40
Coq.Arith.Wf_nat.lt_wf_rec	40	0	synth with cache (only 1: exact (fun (p : nat) P F => induction_ltof1 nat (fun m : nat => m) P F p)).	0.0598261356354	1
Coq.Arith.Wf_nat.lt_wf_ind	40	0	synth with cache (only 1: exact (fun (p : nat) P F => induction_ltof2 nat (fun m : nat => m) P F p)).	0.0587928295135	1
Coq.Arith.Wf_nat.gt_wf_rec	40	1	synth with cache (only 1: exact (fun (p : nat) P F => induction_ltof2 nat (fun m : nat => m) P F p)).	0.0579741001129	2
Coq.Arith.Wf_nat.lt_wf_double_rec	40
Coq.Arith.Wf_nat.lt_wf_double_ind	40	0.0.2.0.0.0.0	synth with cache (only 1: intros P Hrec p; only 1: pattern p; only 1: apply lt_wf_rec; only 1: intros n H q; only 1: pattern q; only 1: apply lt_wf_rec; only 1: auto with arith).	0.238378047943	9
Coq.Arith.Wf_nat.LT_WF_REL.acc_lt_rel	40
Coq.Arith.Wf_nat.LT_WF_REL.well_founded_inv_lt_rel_compat	40
Coq.Arith.Wf_nat.well_founded_inv_rel_inv_lt_rel	40
Coq.Arith.Wf_nat.dec_inh_nat_subset_has_unique_least_element	40
Coq.Arith.Factorial.lt_O_fact	40	0.11.6.3.78	synth with cache (only 1: destruct n; only 1: auto; only 1: revert n; only 1: fix le_div2 1; only 1: trivial).	26.1017940044	8521
Coq.Arith.Factorial.fact_neq_0	40
Coq.Arith.Factorial.fact_le	40
Coq.Arith.Compare_dec.zerop	40	5.0.0.4	synth with cache (only 1: destruct n; only 1: now left; only 1: right; only 1: apply Nat.lt_0_succ).	0.817863941193	136
Coq.Arith.Compare_dec.lt_eq_lt_dec	40
Coq.Arith.Compare_dec.gt_eq_gt_dec	40	0.0.0.1.1.0.0.0.0.0.0	synth with cache (only 1: induction n in m |- *; only 1: destruct m; only 1: auto with arith; only 1: auto with arith; only 1: destruct m; only 1: auto with arith; only 1: destruct (IHn m) as [H| H]; only 1: destruct H; only 1: auto with arith; only 1: auto with arith; only 1: auto with arith).	3.37852787971	231
Coq.Arith.Compare_dec.le_lt_dec	40
Coq.Arith.Compare_dec.le_le_S_dec	40
Coq.Arith.Compare_dec.le_ge_dec	40	1.2.1.1.1.1.1.1.1.2.1	synth with cache (only 1: induction n in m |- *; only 1: left; only 1: auto with arith; only 1: destruct m; only 1: right; only 1: auto with arith; only 1: elim (IHn m); only 1: left; only 1: auto with arith; only 1: right; only 1: auto with arith).	20.9595179558	2192
Coq.Arith.Compare_dec.le_gt_dec	40	0.0.0.0.0	synth with cache (only 1: elim (le_lt_dec n m); only 1: intro; only 1: intuition Nat.order; only 1: intro; only 1: intuition Nat.order).	0.177785158157	5
Coq.Arith.Compare_dec.le_lt_eq_dec	40
Coq.Arith.Compare_dec.le_dec	40	0.0.0.0.43	synth with cache (only 1: elim (le_lt_dec n m); only 1: intro H; only 1: intuition Nat.order; only 1: intro H; only 1: intuition Nat.order).	5.64432501793	1377
Coq.Arith.Compare_dec.lt_dec	40
Coq.Arith.Compare_dec.gt_dec	40	1	synth with cache (only 1: apply le_dec).	0.523596048355	24
Coq.Arith.Compare_dec.ge_dec	40	2	synth with cache (only 1: apply le_dec).	0.194639921188	18
Coq.Arith.Compare_dec.dec_le	40	4.2.0.2.11	synth with cache (only 1: unfold decidable, not; only 1: destruct (le_gt_dec n m); only 1: intuition Nat.order; only 1: right; only 1: now apply gt_not_le).	6.77386403084	946
Coq.Arith.Compare_dec.dec_lt	40	8	synth with cache (only 1: apply Nat.le_decidable).	0.111346960068	22
Coq.Arith.Compare_dec.dec_gt	40	3	synth with cache (only 1: apply Nat.le_decidable).	0.0554609298706	4
Coq.Arith.Compare_dec.dec_ge	40	4	synth with cache (only 1: apply Nat.le_decidable).	0.0547330379486	5
Coq.Arith.Compare_dec.not_eq	40	0	synth with cache (only 1: apply Nat.lt_gt_cases).	0.0541789531708	1
Coq.Arith.Compare_dec.not_le	40	4.0	synth with cache (only 1: intro H; only 1: Nat.order).	0.326951026917	6
Coq.Arith.Compare_dec.not_gt	40	6.0	synth with cache (only 1: intro H; only 1: Nat.order).	0.09632396698	8
Coq.Arith.Compare_dec.not_ge	40	7.0	synth with cache (only 1: intro H; only 1: Nat.order).	0.0938098430634	9
Coq.Arith.Compare_dec.not_lt	40	6	synth with cache (only 1: apply Nat.nlt_ge).	0.0951769351959	16
Coq.Arith.Compare_dec.nat_compare_lt	40
Coq.Arith.Compare_dec.nat_compare_gt	40	4.8.0	synth with cache (only 1: revert m; only 1: fix even_spec 1; only 1: easy).	34.1147119999	2385
Coq.Arith.Compare_dec.nat_compare_le	40
Coq.Arith.Compare_dec.nat_compare_ge	40
Coq.Arith.Compare_dec.nat_compare_eq	40	0.1.2.2.0.1.1.8	synth with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: auto; only 1: easy; only 1: destruct m; only 1: easy; only 1: auto).	12.3905320168	1467
Coq.Arith.Compare_dec.nat_compare_Lt_lt	40	19	synth with cache (only 1: apply Nat.compare_lt_iff).	11.1627919674	1124
Coq.Arith.Compare_dec.nat_compare_Gt_gt	40	9	synth with cache (only 1: apply Nat.compare_gt_iff).	0.274152994156	26
Coq.Arith.Compare_dec.nat_compare_equiv	40
Coq.Arith.Compare_dec.leb_iff_conv	40	3.6.1	synth with cache (only 1: revert m; only 1: fix even_spec 1; only 1: trivial).	8.41516017914	548
Coq.Arith.Compare_dec.leb_correct	40
Coq.Arith.Compare_dec.leb_complete	40	4	synth with cache (only 1: apply Nat.leb_le).	0.409219026566	36
Coq.Arith.Compare_dec.leb_correct_conv	40	0.27	synth with cache (only 1: rewrite Nat.leb_nle; only 1: apply Nat.lt_nge).	12.5150010586	2352
Coq.Arith.Compare_dec.leb_complete_conv	40	4	synth with cache (only 1: apply leb_iff_conv).	0.115370035172	18
Coq.Arith.Compare_dec.leb_compare	40	5.7.2	synth with cache (only 1: revert m; only 1: fix odd_spec 1; only 1: trivial).	27.2456400394	1870
Coq.Arith.EqNat.eq_nat_refl	40	0.3.18	synth with cache (only 1: Nat.induct n; only 1: intuition; only 1: trivial).	0.891613960266	265
Coq.Arith.EqNat.eq_nat_is_eq	40
Coq.Arith.EqNat.eq_eq_nat	40	0.0.1.2.1	synth with cache (only 1: intros <-; only 1: induction n; only 1: simpl; only 1: auto; only 1: trivial).	0.195500850677	18
Coq.Arith.EqNat.eq_nat_eq	40	2	synth with cache (only 1: apply eq_nat_is_eq).	2.24384379387	148
Coq.Arith.EqNat.eq_nat_elim	40	0.19	synth with cache (only 1: fix gcd_greatest 1; only 1: trivial).	5.70247793198	1046
Coq.Arith.EqNat.eq_nat_decide	40	0.6.1.0.2.2.2.0	synth with cache (only 1: induction n; only 1: destruct m; only 1: now left; only 1: now right; only 1: destruct m; only 1: now right; only 1: simpl; only 1: trivial).	25.0813679695	2940
Coq.Arith.EqNat.beq_nat_refl	40	0.0.21	synth with cache (only 1: Nat.induct n; only 1: trivial; only 1: trivial).	0.836789131165	256
Coq.Arith.EqNat.beq_nat_true	40	4.0.0.0.0.0.0.1.2.6	synth with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: easy; only 1: easy; only 1: destruct m; only 1: easy; only 1: simpl; only 1: auto).	20.3104958534	2114
Coq.Arith.EqNat.beq_nat_false	40
Coq.Arith.EqNat.beq_nat_eq	40
Coq.Arith.Euclid.eucl_dev	40
Coq.Arith.Euclid.quotient	40
Coq.Arith.Euclid.modulo	40
Coq.Arith.PeanoNat.Nat.bi_induction	40	2.0.0	synth with cache (only 1: induction n; only 1: auto; only 1: firstorder).	0.0559260845184	5
Coq.Arith.PeanoNat.Nat.recursion_wd	40
Coq.Arith.PeanoNat.Nat.recursion_0	40	2	synth with cache (only 1: auto).	0.0274450778961	3
Coq.Arith.PeanoNat.Nat.recursion_succ	40	4.2.7.0	synth with cache (only 1: firstorder; only 1: induction n; only 1: firstorder; only 1: firstorder).	2.54865098	595
Coq.Arith.PeanoNat.Nat.pred_succ	40	0	synth with cache (only 1: exact eq_refl).	0.0266411304474	1
Coq.Arith.PeanoNat.Nat.pred_0	40	0	synth with cache (only 1: reflexivity).	0.0273830890656	1
Coq.Arith.PeanoNat.Nat.one_succ	40	0	synth with cache (only 1: exact eq_refl).	0.0270149707794	1
Coq.Arith.PeanoNat.Nat.two_succ	40	0	synth with cache (only 1: reflexivity).	0.0272500514984	1
Coq.Arith.PeanoNat.Nat.add_0_l	40	0	synth with cache (only 1: reflexivity).	0.0261659622192	1
Coq.Arith.PeanoNat.Nat.add_succ_l	40	0.0.0.0	synth with cache (only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: auto).	0.0655071735382	4
Coq.Arith.PeanoNat.Nat.sub_0_r	40	0.0.8	synth with cache (only 1: induction n; only 1: reflexivity; only 1: reflexivity).	0.0969262123108	22
Coq.Arith.PeanoNat.Nat.sub_succ_r	40
Coq.Arith.PeanoNat.Nat.mul_0_l	40	0	synth with cache (only 1: auto).	0.0250191688538	1
Coq.Arith.PeanoNat.Nat.mul_succ_l	40
Coq.Arith.PeanoNat.Nat.lt_succ_r	40
Coq.Arith.PeanoNat.Nat.eqb_eq	40
Coq.Arith.PeanoNat.Nat.leb_le	40
Coq.Arith.PeanoNat.Nat.ltb_lt	40
Coq.Arith.PeanoNat.Nat.eq_dec	40	1	synth with cache (only 1: decide equality).	0.0429549217224	2
Coq.Arith.PeanoNat.Nat.compare_eq_iff	40
Coq.Arith.PeanoNat.Nat.compare_lt_iff	40
Coq.Arith.PeanoNat.Nat.compare_le_iff	40
Coq.Arith.PeanoNat.Nat.compare_antisym	40	0.1.0.0.2.0.0.0.2.2.1	synth with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: easy; only 1: simpl; only 1: auto; only 1: destruct m; only 1: simpl; only 1: easy; only 1: simpl; only 1: auto).	8.77867007256	1379
Coq.Arith.PeanoNat.Nat.compare_succ	40	0	synth with cache (only 1: trivial).	0.0286140441895	1
Coq.Arith.PeanoNat.Nat.max_l	40	0.0.1.0.0.0.0.2.0.0.11	synth with cache (only 1: induction n; only 1: destruct m; only 1: auto; only 1: easy; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	26.820841074	4415
Coq.Arith.PeanoNat.Nat.max_r	40
Coq.Arith.PeanoNat.Nat.min_l	40
Coq.Arith.PeanoNat.Nat.min_r	40	0.0.1.0.0.0.0.2.0.0.0.0.14	synth with cache (only 1: intros n m; only 1: revert m; only 1: induction n; only 1: destruct m; only 1: auto; only 1: easy; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	32.9869999886	5792
Coq.Arith.PeanoNat.Nat.pow_neg_r	40	3.0	synth with cache (only 1: intro H; only 1: now rewrite <- ?succ_le_mono).	0.0704019069672	5
Coq.Arith.PeanoNat.Nat.pow_0_r	40	1	synth with cache (only 1: reflexivity).	0.04132604599	2
Coq.Arith.PeanoNat.Nat.pow_succ_r	40	0	synth with cache (only 1: auto).	0.0426621437073	1
Coq.Arith.PeanoNat.Nat.square_spec	40	1	synth with cache (only 1: reflexivity).	0.041524887085	2
Coq.Arith.PeanoNat.Nat.Private_Parity.Even_1	40
Coq.Arith.PeanoNat.Nat.Private_Parity.Even_2	40
Coq.Arith.PeanoNat.Nat.Private_Parity.Odd_0	40	1.0.0.3	synth with cache (only 1: intros ([| ], H); only 1: discriminate; only 1: pose proof (pred_succ n) as EQ'; only 1: now apply (neq_succ_diag_l 0)).	0.326069831848	34
Coq.Arith.PeanoNat.Nat.Private_Parity.Odd_2	40
Coq.Arith.PeanoNat.Nat.even_spec	40
Coq.Arith.PeanoNat.Nat.odd_spec	40	5.1.0.1	synth with cache (only 1: fix even_spec 1; only 1: intro n; only 1: rewrite even_spec; only 1: tauto).	0.728843927383	98
Coq.Arith.PeanoNat.Nat.divmod_spec	40
Coq.Arith.PeanoNat.Nat.div_mod	40
Coq.Arith.PeanoNat.Nat.mod_bound_pos	40
Coq.Arith.PeanoNat.Nat.sqrt_iter_spec	40
Coq.Arith.PeanoNat.Nat.sqrt_specif	40
Coq.Arith.PeanoNat.Nat.sqrt_neg	40	1.0	synth with cache (only 1: intro H; only 1: false_hyp H nlt_0_r).	0.0663321018219	3
Coq.Arith.PeanoNat.Nat.log2_iter_spec	40
Coq.Arith.PeanoNat.Nat.log2_spec	40
Coq.Arith.PeanoNat.Nat.log2_nonpos	40	1.2	synth with cache (only 1: inversion 1; only 1: now apply pred_0).	0.258229017258	61
Coq.Arith.PeanoNat.Nat.gcd_divide	40
Coq.Arith.PeanoNat.Nat.gcd_divide_l	40	0.0.0.2	synth with cache (only 1: fix gcd_divide 1; only 1: intro n; only 1: intro H; only 1: auto).	0.194711208344	25
Coq.Arith.PeanoNat.Nat.gcd_divide_r	40	2.1.0	synth with cache (only 1: intro n; only 1: intro H; only 1: apply gcd_divide).	0.0930061340332	6
Coq.Arith.PeanoNat.Nat.gcd_greatest	40	2.12	synth with cache (only 1: fix gcd_divide 1; only 1: auto).	5.23401379585	739
Coq.Arith.PeanoNat.Nat.gcd_nonneg	40	8	synth with cache (only 1: apply le_0_l).	0.0497739315033	9
Coq.Arith.PeanoNat.Nat.div2_double	40	0.3.0.3.0.9.21	synth with cache (only 1: simpl; only 1: nzinduct n; only 1: auto; only 1: simpl; only 1: intro n; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	9.68235397339	1902
Coq.Arith.PeanoNat.Nat.div2_succ_double	40	0.0.1.1.0.2	synth with cache (only 1: induction n; only 1: trivial; only 1: simpl mul; only 1: rewrite add_succ_r; only 1: simpl; only 1: now f_equal).	0.253926992416	14
Coq.Arith.PeanoNat.Nat.le_div2	40
Coq.Arith.PeanoNat.Nat.lt_div2	40
Coq.Arith.PeanoNat.Nat.div2_decr	40
Coq.Arith.PeanoNat.Nat.double_twice	40	0.0	synth with cache (only 1: intro n; only 1: now nzsimpl').	0.419862031937	2
Coq.Arith.PeanoNat.Nat.testbit_0_l	40	1.0.0.2	synth with cache (only 1: nzinduct n; only 1: auto; only 1: intro n; only 1: intuition).	0.138993024826	15
Coq.Arith.PeanoNat.Nat.testbit_odd_0	40
Coq.Arith.PeanoNat.Nat.testbit_even_0	40
Coq.Arith.PeanoNat.Nat.testbit_odd_succ'	40
Coq.Arith.PeanoNat.Nat.testbit_even_succ'	40
Coq.Arith.PeanoNat.Nat.shiftr_specif	40	2.0.10	synth with cache (only 1: fix even_spec 1; only 1: intros x y z; only 1: auto).	26.5301268101	1134
Coq.Arith.PeanoNat.Nat.shiftl_specif_high	40
Coq.Arith.PeanoNat.Nat.shiftl_spec_low	40	0.0.13	synth with cache (only 1: fix gcd_greatest 1; only 1: intros x y z; only 1: auto).	25.7888360023	1628
Coq.Arith.PeanoNat.Nat.div2_bitwise	40
Coq.Arith.PeanoNat.Nat.odd_bitwise	40
Coq.Arith.PeanoNat.Nat.testbit_bitwise_1	40
Coq.Arith.PeanoNat.Nat.testbit_bitwise_2	40
Coq.Arith.PeanoNat.Nat.land_spec	40
Coq.Arith.PeanoNat.Nat.ldiff_spec	40	0.0.1	synth with cache (only 1: apply testbit_bitwise_1; only 1: trivial; only 1: auto).	0.090959072113	4
Coq.Arith.PeanoNat.Nat.lor_spec	40
Coq.Arith.PeanoNat.Nat.lxor_spec	40
Coq.Arith.PeanoNat.Nat.div2_spec	40	1	synth with cache (only 1: reflexivity).	0.0458130836487	2
Coq.Arith.PeanoNat.Nat.testbit_neg_r	40	1	synth with cache (only 1: inversion H).	0.0491290092468	2
Coq.Arith.PeanoNat.Nat.tail_add_spec	40
Coq.Arith.PeanoNat.Nat.tail_addmul_spec	40
Coq.Arith.PeanoNat.Nat.tail_mul_spec	40
Coq.Arith.PeanoNat.TestOrder.test	40	1	synth with cache (only 1: Nat.order).	0.184064865112	16
Coq.Arith.Compare.discrete_nat	40
Coq.Arith.Gt.gt_n_S	40	2	synth with cache (only 1: apply Nat.succ_lt_mono).	0.09397315979	12
Coq.Arith.Gt.gt_S_n	40	1	synth with cache (only 1: apply Nat.succ_lt_mono).	0.0971801280975	11
Coq.Arith.Gt.gt_S	40
Coq.Arith.Gt.gt_pred	40	2	synth with cache (only 1: apply Nat.lt_succ_lt_pred).	0.0878529548645	12
Coq.Arith.Gt.le_not_gt	40	3	synth with cache (only 1: apply Nat.le_ngt).	0.203517913818	30
Coq.Arith.Gt.gt_not_le	40	3	synth with cache (only 1: apply Nat.lt_nge).	0.122733831406	14
Coq.Arith.Gt.le_S_gt	40	0.0	synth with cache (only 1: intro H; only 1: trivial).	0.0826010704041	2
Coq.Arith.Gt.gt_S_le	40	2	synth with cache (only 1: apply Peano.le_S_n).	0.0893998146057	12
Coq.Arith.Gt.gt_le_S	40	1.0	synth with cache (only 1: intro H; only 1: trivial).	0.081741809845	3
Coq.Arith.Gt.le_gt_S	40	3	synth with cache (only 1: apply Nat.lt_succ_r).	0.293334007263	21
Coq.Arith.Gt.le_gt_trans	40
Coq.Arith.Gt.gt_le_trans	40
Coq.Arith.Gt.gt_trans	40
Coq.Arith.Gt.gt_trans_S	40
Coq.Arith.Gt.gt_0_eq	40	3.0.7.28	synth with cache (only 1: induction n; only 1: right; only 1: auto; only 1: intuition).	13.6171600819	5170
Coq.Arith.Gt.plus_gt_reg_l	40	1	synth with cache (only 1: apply Nat.add_lt_mono_l).	0.059583902359	2
Coq.Arith.Gt.plus_gt_compat_l	40	2	synth with cache (only 1: apply Nat.add_lt_mono_l).	0.0579390525818	3
Coq.Logic.SetoidChoice.setoid_choice	40
Coq.Logic.SetoidChoice.representative_choice	40
Coq.Logic.PropFacts.injection_is_involution_in_Prop	40
Coq.Logic.JMeq.JMeq_sym	40	0.14	synth with cache (only 1: destruct 1; only 1: auto).	0.173123121262	164
Coq.Logic.JMeq.JMeq_trans	40	0.2.2	synth with cache (only 1: intros; only 1: destruct H; only 1: auto).	0.0278718471527	7
Coq.Logic.JMeq.JMeq_ind	40
Coq.Logic.JMeq.JMeq_rec	40	1.0.1	synth with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := H'); only 1: trivial).	0.0271439552307	5
Coq.Logic.JMeq.JMeq_rect	40	1.0.1	synth with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := H'); only 1: trivial).	0.0276439189911	5
Coq.Logic.JMeq.JMeq_ind_r	40
Coq.Logic.JMeq.JMeq_rec_r	40	0.1.1	synth with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := JMeq_sym H'); only 1: trivial).	0.0275309085846	5
Coq.Logic.JMeq.JMeq_rect_r	40	0.2.0	synth with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := JMeq_sym H'); only 1: trivial).	0.0277891159058	5
Coq.Logic.JMeq.JMeq_congr	40	0.3.2	synth with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := H'); only 1: exact eq_refl).	0.029727935791	8
Coq.Logic.JMeq.JMeq_eq_dep_id	40	0.0.0	synth with cache (only 1: intros; only 1: destruct H; only 1: auto).	0.0310060977936	3
Coq.Logic.JMeq.eq_dep_id_JMeq	40	0.0.0	synth with cache (only 1: intros; only 1: destruct H; only 1: trivial).	0.0310389995575	3
Coq.Logic.JMeq.eq_dep_JMeq	40	1.2.0	synth with cache (only 1: intros A x P H y H'; only 1: destruct 1; only 1: auto).	0.0324578285217	6
Coq.Logic.JMeq.eq_dep_strictly_stronger_JMeq	40
Coq.Logic.JMeq.JMeq_eq_dep	40	1.5.7.3	synth with cache (only 1: destruct 1; only 1: intros; only 1: rewrite H; only 1: auto).	1.12900996208	729
Coq.Logic.ExtensionalityFacts.diagonal_projs_same_behavior	40	1.12.31	synth with cache (only 1: intros n m; only 1: destruct m; only 1: auto).	1.36288094521	3663
Coq.Logic.ExtensionalityFacts.diagonal_inverse1	40
Coq.Logic.ExtensionalityFacts.diagonal_inverse2	40	0.1.1.2	synth with cache (only 1: split; only 1: trivial; only 1: destruct b as (a1, a2, []); only 1: exact eq_refl).	0.0336649417877	8
Coq.Logic.ExtensionalityFacts.FunctExt_iff_EqDeltaProjs	40
Coq.Logic.ExtensionalityFacts.FunctExt_UniqInverse	40
Coq.Logic.ExtensionalityFacts.UniqInverse_EqDeltaProjs	40
Coq.Logic.ExtensionalityFacts.FunctExt_iff_UniqInverse	40
Coq.Logic.ExtensionalityFacts.FunctExt_BijComp	40
Coq.Logic.ExtensionalityFacts.BijComp_FunctExt	40
Coq.Logic.Classical_Prop.NNPP	40
Coq.Logic.Classical_Prop.Peirce	40	13.0	synth with cache (only 1: intros; only 1: tauto).	1.8625869751	229
Coq.Logic.Classical_Prop.not_imply_elim	40	8.2	synth with cache (only 1: intros P H; only 1: tauto).	1.53116893768	141
Coq.Logic.Classical_Prop.not_imply_elim2	40	0.4.1.0.0	synth with cache (only 1: intros; only 1: red; only 1: intro; only 1: apply H; only 1: trivial).	0.303144931793	21
Coq.Logic.Classical_Prop.imply_to_or	40	0.5.1	synth with cache (only 1: intros A; only 1: intro NP; only 1: tauto).	0.737001895905	32
Coq.Logic.Classical_Prop.imply_to_and	40	1.0.1.1	synth with cache (only 1: intros Ext A a; only 1: firstorder; only 1: apply NNPP; only 1: firstorder).	0.421522140503	16
Coq.Logic.Classical_Prop.or_to_imply	40	6.0	synth with cache (only 1: intros; only 1: tauto).	0.371047973633	33
Coq.Logic.Classical_Prop.not_and_or	40	0.0.2.2	synth with cache (only 1: intros; only 1: elim (classic P); only 1: auto; only 1: auto).	0.14218211174	8
Coq.Logic.Classical_Prop.or_not_and	40	0	synth with cache (only 1: tauto).	0.0529780387878	1
Coq.Logic.Classical_Prop.not_or_and	40	0	synth with cache (only 1: tauto).	0.0523760318756	1
Coq.Logic.Classical_Prop.and_not_or	40	0	synth with cache (only 1: tauto).	0.0509741306305	1
Coq.Logic.Classical_Prop.imply_and_or	40	1	synth with cache (only 1: tauto).	0.0513741970062	2
Coq.Logic.Classical_Prop.imply_and_or2	40	2.1	synth with cache (only 1: intros x y z; only 1: intuition auto; PeanoNat.Nat.Private_OrderTac.Tac.subst_eqns; eauto using (RelationClasses.StrictOrder_Transitive x y z) with *).	0.0824680328369	5
Coq.Logic.Classical_Prop.Eq_rect_eq.eq_rect_eq	40
Coq.Logic.Hurkens.Generic.Paradox.Omega	40
Coq.Logic.Hurkens.Generic.Paradox.lemma1	40
Coq.Logic.Hurkens.Generic.Paradox.lemma2	40
Coq.Logic.Hurkens.Generic.Paradox.paradox	40
Coq.Logic.Hurkens.NoRetractToImpredicativeUniverse.Paradox.paradox	40
Coq.Logic.Hurkens.NoRetractToModalProposition.Paradox.strength	40
Coq.Logic.Hurkens.NoRetractToModalProposition.Paradox.modal	40	2.0.30.53	synth with cache (only 1: intros n m; only 1: induction n; only 1: cbn; only 1: eauto).	8.41858792305	22881
Coq.Logic.Hurkens.NoRetractToModalProposition.Paradox.Forall	40
Coq.Logic.Hurkens.NoRetractToModalProposition.Paradox.paradox	40
Coq.Logic.Hurkens.NoRetractToNegativeProp.Paradox.paradox	40
Coq.Logic.Hurkens.NoRetractFromSmallPropositionToProp.MParadox.mparadox	40
Coq.Logic.Hurkens.NoRetractFromSmallPropositionToProp.Paradox.paradox	40
Coq.Logic.Hurkens.NoRetractFromTypeToProp.Paradox.paradox	40
Coq.Logic.Hurkens.TypeNeqSmallType.Paradox.up_down	40	1.55.19	synth with cache (only 1: intros P; only 1: subst; only 1: exact eq_refl).	35.2892348766	28152
Coq.Logic.Hurkens.TypeNeqSmallType.Paradox.paradox	40
Coq.Logic.Hurkens.PropNeqType.paradox	40
Coq.Logic.ClassicalChoice.singleton_choice	40
Coq.Logic.ClassicalChoice.choice	40
Coq.Logic.Eqdep_dec.EqdepDec.trans_sym_eq	40	0.44.2	synth with cache (only 1: intros; only 1: subst; only 1: auto).	1.49365377426	4006
Coq.Logic.Eqdep_dec.EqdepDec.nu_constant	40
Coq.Logic.Eqdep_dec.EqdepDec.nu_left_inv_on	40
Coq.Logic.Eqdep_dec.EqdepDec.eq_proofs_unicity_on	40
Coq.Logic.Eqdep_dec.EqdepDec.K_dec_on	40
Coq.Logic.Eqdep_dec.EqdepDec.inj_right_pair_on	40
Coq.Logic.Eqdep_dec.K_dec_type	40
Coq.Logic.Eqdep_dec.eq_rect_eq_dec	40	0.0.3.1.1.1.1.9.1	synth with cache (only 1: intros A eq_dec x P H p; only 1: elim p using K_dec; only 1: intros; only 1: case (eq_dec x0 y); only 1: left; only 1: assumption; only 1: right; only 1: assumption; only 1: reflexivity).	2.60479688644	1749
Coq.Logic.Eqdep_dec.DecidableEqDep.inj_pairP2	40
Coq.Logic.Eqdep_dec.inj_pair2_eq_dec	40
Coq.Logic.Eqdep_dec.UIP_refl_unit	40
Coq.Logic.Eqdep_dec.UIP_refl_bool	40
Coq.Logic.Eqdep_dec.UIP_refl_nat	40
Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Direct.linear_search_smallest	40	12	synth with cache (only 1: firstorder).	1.55405187607	112
Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Direct.epsilon_smallest	40
Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Acc.P_implies_acc	40	7.4	synth with cache (only 1: constructor; only 1: firstorder).	0.639112949371	94
Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Acc.P_eventually_implies_acc	40
Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Acc.P_eventually_implies_acc_ex	40
Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Acc.acc_implies_P_eventually	40
Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Acc.constructive_indefinite_ground_description_nat_Acc	40
Coq.Logic.ConstructiveEpsilon.ConstructiveGroundEpsilon.P'_decidable	40	14	synth with cache (only 1: firstorder).	1.58389186859	182
Coq.Logic.ConstructiveEpsilon.ConstructiveGroundEpsilon.constructive_indefinite_ground_description	40
Coq.Logic.ConstructiveEpsilon.ConstructiveGroundEpsilon.constructive_definite_ground_description	40
Coq.Logic.ChoiceFacts.functional_rel_reification_and_rel_choice_imp_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_imp_rel_choice	40
Coq.Logic.ChoiceFacts.fun_choice_imp_functional_rel_reification	40
Coq.Logic.ChoiceFacts.fun_choice_iff_rel_choice_and_functional_rel_reification	40
Coq.Logic.ChoiceFacts.rel_choice_and_proof_irrel_imp_guarded_rel_choice	40
Coq.Logic.ChoiceFacts.rel_choice_indep_of_general_premises_imp_guarded_rel_choice	40
Coq.Logic.ChoiceFacts.guarded_rel_choice_imp_rel_choice	40
Coq.Logic.ChoiceFacts.subset_types_imp_guarded_rel_choice_iff_rel_choice	40
Coq.Logic.ChoiceFacts.guarded_iff_omniscient_rel_choice	40
Coq.Logic.ChoiceFacts.guarded_fun_choice_imp_indep_of_general_premises	40
Coq.Logic.ChoiceFacts.guarded_fun_choice_imp_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_indep_general_prem_imp_guarded_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_indep_general_prem_iff_guarded_fun_choice	40
Coq.Logic.ChoiceFacts.omniscient_fun_choice_imp_small_drinker	40
Coq.Logic.ChoiceFacts.omniscient_fun_choice_imp_fun_choice	40	1.1.0.26.15	synth with cache (only 1: intros OAC_rel A B P R H; only 1: destruct (OAC_rel A B R) as (f, Hf); only 1: firstorder; only 1: exists f; only 1: auto).	37.6940140724	31701
Coq.Logic.ChoiceFacts.fun_choice_and_small_drinker_imp_omniscient_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_small_drinker_iff_omniscient_fun_choice	40
Coq.Logic.ChoiceFacts.guarded_iff_omniscient_fun_choice	40
Coq.Logic.ChoiceFacts.iota_imp_constructive_definite_description	40
Coq.Logic.ChoiceFacts.epsilon_imp_constructive_indefinite_description	40	0.0.0.1.1.0.0	synth with cache (only 1: intros D_iota A P H; only 1: destruct D_iota with (P := P) as (x, H1); only 1: destruct H; only 1: auto; only 1: exists x; only 1: apply H1; only 1: assumption).	0.0663390159607	9
Coq.Logic.ChoiceFacts.constructive_indefinite_description_and_small_drinker_imp_epsilon	40	0.36	synth with cache (only 1: compute; only 1: firstorder).	13.270419836	9914
Coq.Logic.ChoiceFacts.epsilon_imp_small_drinker	40	1.6.0.14.0	synth with cache (only 1: intros D_epsilon A P H; only 1: destruct D_epsilon with (P := P) as (x, H1); only 1: auto; only 1: exists x; only 1: firstorder).	2.44736099243	2085
Coq.Logic.ChoiceFacts.constructive_indefinite_description_and_small_drinker_iff_epsilon	40
Coq.Logic.ChoiceFacts.classical_denumerable_description_imp_fun_choice	40
Coq.Logic.ChoiceFacts.dep_non_dep_functional_choice	40
Coq.Logic.ChoiceFacts.non_dep_dep_functional_choice	40
Coq.Logic.ChoiceFacts.functional_choice_to_inhabited_forall_commute	40
Coq.Logic.ChoiceFacts.inhabited_forall_commute_to_functional_choice	40
Coq.Logic.ChoiceFacts.dep_non_dep_functional_rel_reification	40	0.0.0.0	synth with cache (only 1: intros AC_depfun A B R H; only 1: destruct (AC_depfun A (fun _ => B) R H) as (f, Hf); only 1: exists f; only 1: trivial).	0.120212078094	4
Coq.Logic.ChoiceFacts.non_dep_dep_functional_rel_reification	40
Coq.Logic.ChoiceFacts.dep_iff_non_dep_functional_rel_reification	40
Coq.Logic.ChoiceFacts.relative_non_contradiction_of_indefinite_descr	40
Coq.Logic.ChoiceFacts.constructive_indefinite_descr_fun_choice	40
Coq.Logic.ChoiceFacts.relative_non_contradiction_of_definite_descr	40
Coq.Logic.ChoiceFacts.constructive_definite_descr_fun_reification	40	0.0.3.0	synth with cache (only 1: intros IndefDescr A B R H; only 1: exists (fun x => proj1_sig (IndefDescr B (R x) (H x))); only 1: intro x; only 1: apply (proj2_sig (IndefDescr B (R x) (H x)))).	0.650567054749	33
Coq.Logic.ChoiceFacts.constructive_definite_descr_excluded_middle	40
Coq.Logic.ChoiceFacts.fun_reification_descr_computational_excluded_middle_in_prop_context	40
Coq.Logic.ChoiceFacts.functional_choice_imp_functional_dependent_choice	40
Coq.Logic.ChoiceFacts.functional_dependent_choice_imp_functional_countable_choice	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_prop_repr	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_pred_repr	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_function_repr	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_excluded_middle	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_relational_choice	40
Coq.Logic.ChoiceFacts.gen_setoid_fun_choice_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_gen_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_iff_gen_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_simple_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.simple_setoid_fun_choice_imp_setoid_fun_choice	40	4.5.0.0.1.0	synth with cache (only 1: intros A B GenSetoidFunChoice R T Hequiv Hcompat Hex; only 1: pose (T' := fun x y => forall x', R x x' -> T x' y); only 1: apply GenSetoidFunChoice; only 1: trivial; only 1: intros; only 1: firstorder).	9.26485514641	1025
Coq.Logic.ChoiceFacts.setoid_fun_choice_iff_simple_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_functional_rel_reification	40	0.0.8.3.0.0.4	synth with cache (only 1: intros A B SetoidFunChoice T Hexists; only 1: destruct SetoidFunChoice with (R := eq) (T := T) as (f, Hf); only 1: apply eq_equivalence; only 1: now intros * ->; only 1: firstorder; only 1: exists f; only 1: firstorder).	12.6567931175	1417
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_repr_fun_choice	40
Coq.Logic.ChoiceFacts.functional_rel_reification_and_repr_fun_choice_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.functional_rel_reification_and_repr_fun_choice_iff_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_ext_functions_repr_and_excluded_middle_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_functional_choice_first_characterization	40
Coq.Logic.ChoiceFacts.fun_choice_and_ext_pred_ext_and_proof_irrel_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_functional_choice_second_characterization	40
Coq.Logic.PropExtensionality.proof_irrelevance	40
Coq.Logic.StrictProp.Spr1_inj	40	0.40.38.45	synth with cache (only 1: destruct b; only 1: simpl in *; only 1: subst; only 1: exact eq_refl).	3.9894900322	20723
Coq.Logic.ClassicalFacts.prop_degen_ext	40
Coq.Logic.ClassicalFacts.prop_degen_em	40
Coq.Logic.ClassicalFacts.prop_ext_em_degen	40
Coq.Logic.ClassicalFacts.provable_prop_ext	40	4	synth with cache (only 1: firstorder using PredExt_imp_PropExt, PredExt_imp_PropFunExt, PropExt_and_PropFunExt_imp_PredExt).	0.632550001144	11
Coq.Logic.ClassicalFacts.prop_ext_A_eq_A_imp_A	40	3.2	synth with cache (only 1: intros Ext EM A; only 1: firstorder using PredExt_imp_PropExt, PredExt_imp_PropFunExt, PropExt_and_PropFunExt_imp_PredExt).	0.647414922714	11
Coq.Logic.ClassicalFacts.prop_ext_retract_A_A_imp_A	40
Coq.Logic.ClassicalFacts.ext_prop_fixpoint	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_gen.aux	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_gen.ext_prop_dep_proof_irrel_gen	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_Prop_Ext_CC.ext_prop_dep_proof_irrel_cc	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_CIC.ext_prop_dep_proof_irrel_cic	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_EM_CC.p2p1	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_EM_CC.p2p2	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_EM_CC.proof_irrelevance_cc	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_WEM_CC.wp2p1	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_WEM_CC.wp2p2	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_WEM_CC.wproof_irrelevance_cc	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_CCI.proof_irrelevance_cci	40
Coq.Logic.ClassicalFacts.Weak_proof_irrelevance_CCI.wem_proof_irrelevance_cci	40
Coq.Logic.ClassicalFacts.excluded_middle_Godel_Dummett	40	1.12.1.22.1	synth with cache (only 1: intros H A; only 1: destruct (H A); only 1: auto; only 1: left; only 1: easy).	12.0538461208	9753
Coq.Logic.ClassicalFacts.Godel_Dummett_iff_right_distr_implication_over_disjunction	40
Coq.Logic.ClassicalFacts.Godel_Dummett_weak_excluded_middle	40
Coq.Logic.ClassicalFacts.weak_excluded_middle_iff_classical_de_morgan_law	40
Coq.Logic.ClassicalFacts.independence_general_premises_right_distr_implication_over_disjunction	40
Coq.Logic.ClassicalFacts.independence_general_premises_Godel_Dummett	40
Coq.Logic.ClassicalFacts.independence_general_premises_drinker	40
Coq.Logic.ClassicalFacts.excluded_middle_independence_general_premises	40
Coq.Logic.ClassicalFacts.Unrestricted_minimization_entails_excluded_middle.unrestricted_minimization_entails_excluded_middle	40
Coq.Logic.ClassicalFacts.Excluded_middle_entails_unrestricted_minimization.excluded_middle_entails_unrestricted_minimization	40
Coq.Logic.ClassicalFacts.Example_of_undecidable_predicate_with_the_minimization_property.undecidable_predicate_with_the_minimization_property	40	24.3	synth with cache (only 1: exists 0; only 1: firstorder).	3.05345082283	850
Coq.Logic.ClassicalFacts.representative_boolean_partition_imp_excluded_middle	40
Coq.Logic.ClassicalFacts.excluded_middle_imp_representative_boolean_partition	40
Coq.Logic.ClassicalFacts.excluded_middle_iff_representative_boolean_partition	40
Coq.Logic.Classical_Pred_Type.Generic.not_all_not_ex	40
Coq.Logic.Classical_Pred_Type.Generic.not_all_ex_not	40
Coq.Logic.Classical_Pred_Type.Generic.not_ex_all_not	40	1.1.5.2.0	synth with cache (only 1: intros P notall; only 1: intros n H; only 1: apply notall; only 1: exists n; only 1: exact H).	14.673568964	822
Coq.Logic.Classical_Pred_Type.Generic.not_ex_not_all	40	0.0.0.1.0.0.0.0.0.0	synth with cache (only 1: intros P notall; only 1: apply NNPP; only 1: intro abs; only 1: apply notall; only 1: apply not_all_not_ex with (P := fun x => ~ P x); only 1: intro all; only 1: apply abs; only 1: intro n; only 1: apply NNPP; only 1: apply all).	5.97421598434	260
Coq.Logic.Classical_Pred_Type.Generic.ex_not_not_all	40	1.3.0	synth with cache (only 1: unfold not; only 1: destruct 1; only 1: auto).	0.312798976898	33
Coq.Logic.Classical_Pred_Type.Generic.all_not_not_ex	40
Coq.Logic.ProofIrrelevanceFacts.ProofIrrelevanceTheory.Eq_rect_eq.eq_rect_eq	40
Coq.Logic.ProofIrrelevanceFacts.ProofIrrelevanceTheory.subset_eq_compat	40
Coq.Logic.ProofIrrelevanceFacts.ProofIrrelevanceTheory.subsetT_eq_compat	40	0.2.1.0	synth with cache (only 1: intros; only 1: rewrite M.proof_irrelevance with (p1 := q) (p2 := (eq_rect x P p y H)); only 1: elim H using eq_indd; only 1: reflexivity).	0.0436210632324	7
Coq.Logic.FinFun.Finite_alt	40
Coq.Logic.FinFun.Injective_map_NoDup	40
Coq.Logic.FinFun.Injective_list_carac	40
Coq.Logic.FinFun.Injective_carac	40
Coq.Logic.FinFun.Surjective_list_carac	40
Coq.Logic.FinFun.Surjective_carac	40
Coq.Logic.FinFun.Endo_Injective_Surjective	40
Coq.Logic.FinFun.Finite_Empty_or_not	40
Coq.Logic.FinFun.Surjective_inverse	40
Coq.Logic.FinFun.Injective_Surjective_Bijective	40
Coq.Logic.FinFun.Fin_Finite	40
Coq.Logic.FinFun.Fin2Restrict.extend_ok	40
Coq.Logic.FinFun.Fin2Restrict.extend_f2n	40
Coq.Logic.FinFun.Fin2Restrict.extend_n2f	40
Coq.Logic.FinFun.Fin2Restrict.restrict_f2n	40
Coq.Logic.FinFun.Fin2Restrict.restrict_n2f	40
Coq.Logic.FinFun.Fin2Restrict.extend_surjective	40
Coq.Logic.FinFun.Fin2Restrict.extend_injective	40
Coq.Logic.FinFun.Fin2Restrict.restrict_surjective	40
Coq.Logic.FinFun.Fin2Restrict.restrict_injective	40
Coq.Logic.FinFun.bInjective_bSurjective	40
Coq.Logic.FinFun.bSurjective_bBijective	40
Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.prop_ext	40
Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.proof_irrel	40
Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.guarded_rel_choice	40
Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.AC_bool_subset_to_bool	40
Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.pred_ext_and_rel_choice_imp_EM	40
Coq.Logic.Diaconescu.ProofIrrel_RelChoice_imp_EqEM.a1'	40
Coq.Logic.Diaconescu.ProofIrrel_RelChoice_imp_EqEM.a2'	40	0.0	synth with cache (only 1: exists a1; only 1: auto).	0.137629032135	2
Coq.Logic.Diaconescu.ProofIrrel_RelChoice_imp_EqEM.projT1_injective	40
Coq.Logic.Diaconescu.ProofIrrel_RelChoice_imp_EqEM.decide	40
Coq.Logic.Diaconescu.ProofIrrel_RelChoice_imp_EqEM.proof_irrel_rel_choice_imp_eq_dec	40
Coq.Logic.Diaconescu.ProofIrrel_RelChoice_imp_EqEM.proof_irrel_rel_choice_imp_eq_dec'	40
Coq.Logic.Diaconescu.ExtensionalEpsilon_imp_EM.extensional_epsilon_imp_EM	40
Coq.Logic.FunctionalExtensionality.equal_f	40	1.5.4	synth with cache (only 1: intro x; only 1: destruct 1; only 1: auto).	0.18331694603	116
Coq.Logic.FunctionalExtensionality.equal_f_dep	40	0.4.2	synth with cache (only 1: intros; only 1: rewrite H; only 1: exact eq_refl).	0.0285069942474	9
Coq.Logic.FunctionalExtensionality.functional_extensionality	40
Coq.Logic.FunctionalExtensionality.forall_extensionality	40
Coq.Logic.FunctionalExtensionality.forall_extensionalityP	40	0.1.3	synth with cache (only 1: apply functional_extensionality in H; only 1: destruct H; only 1: exact eq_refl).	0.028037071228	7
Coq.Logic.FunctionalExtensionality.forall_extensionalityS	40	0.1.1	synth with cache (only 1: apply functional_extensionality in H; only 1: destruct H; only 1: exact eq_refl).	0.0270159244537	5
Coq.Logic.FunctionalExtensionality.functional_extensionality_dep_good_refl	40
Coq.Logic.FunctionalExtensionality.forall_sig_eq_rect	40
Coq.Logic.FunctionalExtensionality.forall_eq_rect_comp	40
Coq.Logic.FunctionalExtensionality.f_equal__functional_extensionality_dep_good	40
Coq.Logic.FunctionalExtensionality.f_equal__functional_extensionality_dep_good__fun	40	0.14.1	synth with cache (only 1: apply forall_eq_rect with (H := H); only 1: rewrite functional_extensionality_dep_good_refl; only 1: exact eq_refl).	0.497954845428	342
Coq.Logic.FunctionalExtensionality.eta_expansion_dep	40	0	synth with cache (only 1: exact eq_refl).	0.0156288146973	1
Coq.Logic.FunctionalExtensionality.eta_expansion	40	0	synth with cache (only 1: exact eq_refl).	0.0154571533203	1
Coq.Logic.HLevels.forall_hprop	40
Coq.Logic.HLevels.and_hprop	40
Coq.Logic.HLevels.impl_hprop	40	1.3.1	synth with cache (only 1: intros A P H p q; only 1: apply functional_extensionality_dep; only 1: auto).	0.0290360450745	8
Coq.Logic.HLevels.false_hprop	40	4.2	synth with cache (only 1: intros p q; only 1: destruct p, q).	0.0224781036377	8
Coq.Logic.HLevels.true_hprop	40	0.4.1	synth with cache (only 1: intros p q; only 1: destruct p, q; only 1: exact eq_refl).	0.0286018848419	8
Coq.Logic.HLevels.not_hprop	40	3.1.2.1.10	synth with cache (only 1: intros; only 1: intros p q; only 1: apply functional_extensionality; only 1: intros; only 1: destruct p, q).	0.605035066605	555
Coq.Logic.HLevels.hset_hprop	40
Coq.Logic.HLevels.eq_trans_cancel	40
Coq.Logic.HLevels.hset_hOneType	40
Coq.Logic.HLevels.hprop_hprop	40
Coq.Logic.HLevels.hprop_hset	40
Coq.Logic.ClassicalUniqueChoice.unique_choice	40
Coq.Logic.ClassicalUniqueChoice.classic_set_in_prop_context	40
Coq.Logic.ClassicalUniqueChoice.not_not_classic_set	40
Coq.Logic.WKL.is_path_from_characterization	40
Coq.Logic.WKL.is_path_from_restrict	40
Coq.Logic.WKL.inductively_barred_at_monotone	40
Coq.Logic.WKL.inductively_barred_at_imp_is_path_from	40
Coq.Logic.WKL.is_path_from_imp_inductively_barred_at	40
Coq.Logic.WKL.find_left_path	40
Coq.Logic.WKL.Y_unique	40
Coq.Logic.WKL.Y_approx	40
Coq.Logic.WKL.PreWeakKonigsLemma	40
Coq.Logic.WKL.inductively_barred_at_decidable	40
Coq.Logic.WKL.inductively_barred_at_is_path_from_decidable	40
Coq.Logic.WKL.WeakKonigsLemma	40
Coq.Logic.Epsilon.constructive_indefinite_description	40
Coq.Logic.Epsilon.small_drinkers'_paradox	40
Coq.Logic.Epsilon.iota_statement	40
Coq.Logic.Epsilon.constructive_definite_description	40	3.0.0.0.19.1	synth with cache (only 1: intros; only 1: destruct epsilon_statement with (P := P); only 1: destruct H; only 1: auto; only 1: exists x; only 1: firstorder).	9.07971692085	1188
Coq.Logic.ClassicalDescription.excluded_middle_informative	40
Coq.Logic.ClassicalDescription.classical_definite_description	40
Coq.Logic.ClassicalDescription.dependent_unique_choice	40
Coq.Logic.ClassicalDescription.unique_choice	40
Coq.Logic.EqdepFacts.Dependent_Equality.eq_dep_sym	40	0.7	synth with cache (only 1: destruct 1; only 1: auto).	0.0287489891052	12
Coq.Logic.EqdepFacts.Dependent_Equality.eq_dep_trans	40	0.2	synth with cache (only 1: destruct 1; only 1: auto).	0.0223059654236	4
Coq.Logic.EqdepFacts.Dependent_Equality.eq_dep1_dep	40	0.49.2	synth with cache (only 1: destruct 1; only 1: subst; only 1: reflexivity).	3.18523383141	7976
Coq.Logic.EqdepFacts.Dependent_Equality.eq_dep_dep1	40	0.53.2	synth with cache (only 1: destruct 1; only 1: exists eq_refl; only 1: reflexivity).	3.35906600952	8277
Coq.Logic.EqdepFacts.eq_sigT_eq_dep	40	6.43	synth with cache (only 1: inversion 1; only 1: apply eq_dep_intro).	3.1559920311	7252
Coq.Logic.EqdepFacts.eq_dep_eq_sigT	40	0.1	synth with cache (only 1: destruct 1; only 1: auto).	0.0227620601654	3
Coq.Logic.EqdepFacts.eq_sigT_iff_eq_dep	40	0.2.2.1.9.12	synth with cache (only 1: constructor; only 1: intros; only 1: dependent rewrite H; only 1: apply eq_dep_intro; only 1: destruct 1; only 1: auto).	1.19563579559	1804
Coq.Logic.EqdepFacts.eq_sig_eq_dep	40	2.2.3	synth with cache (only 1: intros; only 1: dependent rewrite H; only 1: apply eq_dep_intro).	0.0381808280945	17
Coq.Logic.EqdepFacts.eq_dep_eq_sig	40	0.2	synth with cache (only 1: destruct 1; only 1: auto).	0.0234780311584	4
Coq.Logic.EqdepFacts.eq_sig_iff_eq_dep	40	0.3.1.1.7.3	synth with cache (only 1: split; only 1: intros; only 1: dependent rewrite H; only 1: apply eq_dep_intro; only 1: destruct 1; only 1: auto).	0.894477844238	688
Coq.Logic.EqdepFacts.eq_sigT_sig_eq	40
Coq.Logic.EqdepFacts.eq_sigT_fst	40	0.12.3	synth with cache (only 1: intros; only 1: dependent rewrite H; only 1: auto).	0.691804885864	504
Coq.Logic.EqdepFacts.eq_sigT_snd	40
Coq.Logic.EqdepFacts.eq_sig_fst	40	0.13.3	synth with cache (only 1: intros; only 1: dependent rewrite H; only 1: auto).	0.884646177292	708
Coq.Logic.EqdepFacts.eq_sig_snd	40
Coq.Logic.EqdepFacts.Equivalences.eq_rect_eq_on__eq_dep1_eq_on	40	0.3.3.7	synth with cache (only 1: intro x; only 1: destruct 1; only 1: rewrite H; only 1: auto).	0.2331199646	153
Coq.Logic.EqdepFacts.Equivalences.eq_rect_eq_on__eq_dep_eq_on	40
Coq.Logic.EqdepFacts.Equivalences.eq_dep_eq_on__UIP_on	40
Coq.Logic.EqdepFacts.Equivalences.UIP_on__UIP_refl_on	40	0.2.4	synth with cache (only 1: intro; only 1: red; only 1: auto).	0.0305600166321	9
Coq.Logic.EqdepFacts.Equivalences.UIP_refl_on__Streicher_K_on	40	0.29.7.6	synth with cache (only 1: red; only 1: intros; only 1: rewrite H; only 1: auto).	20.3100659847	30493
Coq.Logic.EqdepFacts.Equivalences.Streicher_K_on__eq_rect_eq_on	40	0.2.2	synth with cache (only 1: intros eq_rect_eq; only 1: red; only 1: auto).	0.0310599803925	7
Coq.Logic.EqdepFacts.UIP_shift_on	40
Coq.Logic.EqdepFacts.Corollaries.eq_dep_eq_on__inj_pair2_on	40	10.1	synth with cache (only 1: red; only 1: auto using eq_sigT_eq_dep, eq_dep_eq_sigT).	0.591929912567	237
Coq.Logic.EqdepFacts.f_eq_dep	40	0.4	synth with cache (only 1: destruct 1; only 1: auto).	0.0263609886169	6
Coq.Logic.EqdepFacts.eq_dep_non_dep	40	1.4	synth with cache (only 1: destruct 1; only 1: auto).	0.0765719413757	7
Coq.Logic.EqdepFacts.f_eq_dep_non_dep	40	0.3	synth with cache (only 1: intros * []; only 1: auto).	0.026319026947	5
Coq.Logic.PropExtensionalityFacts.PredExt_imp_PropExt	40
Coq.Logic.PropExtensionalityFacts.PredExt_imp_PropFunExt	40
Coq.Logic.PropExtensionalityFacts.PropExt_and_PropFunExt_imp_PredExt	40	1	synth with cache (only 1: auto).	0.0165550708771	2
Coq.Logic.PropExtensionalityFacts.PropExt_and_PropFunExt_iff_PredExt	40
Coq.Logic.PropExtensionalityFacts.PropExt_imp_ProvPropExt	40	9	synth with cache (only 1: firstorder using PredExt_imp_PropExt, PredExt_imp_PropFunExt, PropExt_and_PropFunExt_imp_PredExt).	0.648994922638	23
Coq.Logic.PropExtensionalityFacts.PropExt_imp_RefutPropExt	40	18	synth with cache (only 1: firstorder using PredExt_imp_PropExt, PredExt_imp_PropFunExt, PropExt_and_PropFunExt_imp_PredExt).	1.54739618301	753
Coq.Logic.IndefiniteDescription.constructive_definite_description	40
Coq.Logic.IndefiniteDescription.functional_choice	40
Coq.Logic.Berardi.Berardis_paradox.AC_IF	40
Coq.Logic.Berardi.Berardis_paradox.Retracts.AC	40	0.13.31	synth with cache (only 1: intros n m; only 1: induction n; only 1: auto).	23.1927521229	29644
Coq.Logic.Berardi.Berardis_paradox.L1	40
Coq.Logic.Berardi.Berardis_paradox.retract_pow_U_U	40
Coq.Logic.Berardi.Berardis_paradox.not_has_fixpoint	40
Coq.Logic.Berardi.Berardis_paradox.classical_proof_irrelevance	40
Coq.Logic.ClassicalEpsilon.constructive_definite_description	40
Coq.Logic.ClassicalEpsilon.excluded_middle_informative	40
Coq.Logic.ClassicalEpsilon.classical_indefinite_description	40
Coq.Logic.ClassicalEpsilon.epsilon_inh_irrelevance	40
Coq.Logic.ClassicalEpsilon.choice	40
Coq.Logic.Decidable.dec_not_not	40	6.1.8	synth with cache (only 1: destruct 1; only 1: auto; only 1: contradiction).	0.544708013535	492
Coq.Logic.Decidable.dec_True	40	1.5	synth with cache (only 1: unfold decidable; only 1: auto).	0.0193560123444	8
Coq.Logic.Decidable.dec_False	40	1.2	synth with cache (only 1: unfold decidable; only 1: auto).	0.0186951160431	5
Coq.Logic.Decidable.dec_or	40	2.6	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0448820590973	16
Coq.Logic.Decidable.dec_and	40	2.2	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0387439727783	6
Coq.Logic.Decidable.dec_not	40	2.2	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0246319770813	6
Coq.Logic.Decidable.dec_imp	40	2.2	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0315470695496	6
Coq.Logic.Decidable.dec_iff	40	2.2	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0414831638336	6
Coq.Logic.Decidable.not_not	40	1.2	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0217559337616	5
Coq.Logic.Decidable.not_or	40	1	synth with cache (only 1: auto).	0.0145020484924	2
Coq.Logic.Decidable.not_and	40	2.2	synth with cache (only 1: unfold decidable; only 1: tauto).	0.030415058136	6
Coq.Logic.Decidable.not_imp	40	2.2	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0562489032745	6
Coq.Logic.Decidable.imp_simp	40	1.2	synth with cache (only 1: unfold decidable; only 1: tauto).	0.026095867157	5
Coq.Logic.Decidable.not_iff	40	1.2	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0614418983459	5
Coq.Logic.Decidable.not_true_iff	40	3	synth with cache (only 1: tauto).	0.0151579380035	4
Coq.Logic.Decidable.not_false_iff	40	2	synth with cache (only 1: tauto).	0.0146780014038	3
Coq.Logic.Decidable.not_not_iff	40	1.1	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0248408317566	4
Coq.Logic.Decidable.contrapositive	40	1.1	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0282151699066	4
Coq.Logic.Decidable.or_not_l_iff_1	40	1.1	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0315790176392	4
Coq.Logic.Decidable.or_not_l_iff_2	40	1.1	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0317378044128	4
Coq.Logic.Decidable.or_not_r_iff_1	40	0.1	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0310819149017	3
Coq.Logic.Decidable.or_not_r_iff_2	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0314831733704	2
Coq.Logic.Decidable.imp_not_l	40	1.1	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0567860603333	4
Coq.Logic.Decidable.not_or_iff	40	2	synth with cache (only 1: tauto).	0.0221481323242	3
Coq.Logic.Decidable.not_and_iff	40	1	synth with cache (only 1: tauto).	0.0190901756287	2
Coq.Logic.Decidable.not_imp_iff	40	1.1	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0377728939056	4
Coq.Logic.Decidable.not_imp_rev_iff	40	0.1	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0377180576324	3
Coq.Logic.Decidable.dec_functional_relation	40
Coq.Logic.WeakFan.Y_unique	40
Coq.Logic.WeakFan.Y_approx	40
Coq.Logic.WeakFan.WeakFanTheorem	40
Coq.MSets.MSetRBT.MakeRaw.singleton_spec	40
Coq.MSets.MSetRBT.MakeRaw.singleton_ok	40	0.0.0.0.2	synth with cache (only 1: constructor; only 1: auto; only 1: auto; only 1: auto; only 1: auto).	0.183964014053	7
Coq.MSets.MSetRBT.MakeRaw.makeBlack_spec	40
Coq.MSets.MSetRBT.MakeRaw.makeRed_spec	40	2.1.2.2	synth with cache (only 1: destruct s; only 1: intuition_in; only 1: simpl; only 1: intuition_in).	2.30425810814	90
Coq.MSets.MSetRBT.MakeRaw.makeBlack_ok	40	11.1.0.6	synth with cache (only 1: induction s as [| c l IHl x r IHr]; only 1: auto; only 1: simpl; only 1: intuition_in).	27.2507791519	1907
Coq.MSets.MSetRBT.MakeRaw.makeRed_ok	40	2.1.0.2	synth with cache (only 1: destruct s; only 1: auto; only 1: simpl; only 1: ok).	1.11044621468	9
Coq.MSets.MSetRBT.MakeRaw.rmatch	40
Coq.MSets.MSetRBT.MakeRaw.rrmatch	40
Coq.MSets.MSetRBT.MakeRaw.rrmatch'	40	0.0.0.0.0.0.0.0.0.0.0.3.0.1.1.1	synth with cache (only 1: destruct t as [| [| ] l x r]; only 1: simpl; only 1: now constructor; only 1: simpl; only 1: destruct l as [| [| ] ll lx lr], r as [| [| ] rl rx rr]; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: simpl; only 1: now constructor).	18.3870339394	1913
Coq.MSets.MSetRBT.MakeRaw.lbal_match	40
Coq.MSets.MSetRBT.MakeRaw.rbal_match	40	3	synth with cache (only 1: exact (rrmatch _ _ _)).	0.0787169933319	4
Coq.MSets.MSetRBT.MakeRaw.rbal'_match	40
Coq.MSets.MSetRBT.MakeRaw.lbalS_match	40
Coq.MSets.MSetRBT.MakeRaw.rbalS_match	40	1	synth with cache (only 1: exact (rmatch _ _ _)).	0.0812709331512	2
Coq.MSets.MSetRBT.MakeRaw.lbal_spec	40
Coq.MSets.MSetRBT.MakeRaw.lbal_ok	40
Coq.MSets.MSetRBT.MakeRaw.rbal_spec	40
Coq.MSets.MSetRBT.MakeRaw.rbal_ok	40
Coq.MSets.MSetRBT.MakeRaw.rbal'_spec	40
Coq.MSets.MSetRBT.MakeRaw.rbal'_ok	40
Coq.MSets.MSetRBT.MakeRaw.ins_spec	40
Coq.MSets.MSetRBT.MakeRaw.ins_ok	40
Coq.MSets.MSetRBT.MakeRaw.add_spec'	40
Coq.MSets.MSetRBT.MakeRaw.add_spec	40	2.2	synth with cache (only 1: unfold add; only 1: now autorew).	0.269626140594	21
Coq.MSets.MSetRBT.MakeRaw.add_ok	40	1.1.1.3.1	synth with cache (only 1: induct s x; only 1: eauto with *; only 1: apply lbal_ok || apply rbal_ok || ok; only 1: apply lbal_ok || apply rbal_ok || ok; only 1: apply lbal_ok || apply rbal_ok || ok).	1.68486094475	76
Coq.MSets.MSetRBT.MakeRaw.lbalS_spec	40
Coq.MSets.MSetRBT.MakeRaw.lbalS_ok	40
Coq.MSets.MSetRBT.MakeRaw.rbalS_spec	40
Coq.MSets.MSetRBT.MakeRaw.rbalS_ok	40
Coq.MSets.MSetRBT.MakeRaw.append_rr_match	40	21.1	synth with cache (only 1: simpl; only 1: exact (rmatch _ _ _)).	10.3462600708	1327
Coq.MSets.MSetRBT.MakeRaw.append_bb_match	40	1	synth with cache (only 1: exact (rmatch _ _ _)).	0.0848278999329	2
Coq.MSets.MSetRBT.MakeRaw.append_spec	40
Coq.MSets.MSetRBT.MakeRaw.append_ok	40
Coq.MSets.MSetRBT.MakeRaw.del_spec	40
Coq.MSets.MSetRBT.MakeRaw.del_ok	40
Coq.MSets.MSetRBT.MakeRaw.remove_spec	40
Coq.MSets.MSetRBT.MakeRaw.remove_ok	40	1.1.1.0.1	synth with cache (only 1: induct s x; only 1: auto; only 1: apply lbal_ok || apply rbal_ok || ok; only 1: apply lbal_ok || apply rbal_ok || ok; only 1: apply lbal_ok || apply rbal_ok || ok).	0.443503141403	9
Coq.MSets.MSetRBT.MakeRaw.delmin_spec	40
Coq.MSets.MSetRBT.MakeRaw.remove_min_spec1	40
Coq.MSets.MSetRBT.MakeRaw.remove_min_spec2	40
Coq.MSets.MSetRBT.MakeRaw.remove_min_ok	40
Coq.MSets.MSetRBT.MakeRaw.treeify_zero_spec	40	7	synth with cache (only 1: firstorder).	0.0815811157227	8
Coq.MSets.MSetRBT.MakeRaw.treeify_one_spec	40	0.0.4.11.3.19	synth with cache (only 1: intros n; only 1: intro; only 1: induction n; only 1: easy; only 1: simpl; only 1: auto).	15.1761381626	2444
Coq.MSets.MSetRBT.MakeRaw.treeify_cont_spec	40
Coq.MSets.MSetRBT.MakeRaw.treeify_aux_spec	40	1.18.13	synth with cache (only 1: revert p; only 1: fix sqrtrem_spec 1; only 1: auto).	16.2526681423	2662
Coq.MSets.MSetRBT.MakeRaw.plength_aux_spec	40
Coq.MSets.MSetRBT.MakeRaw.plength_spec	40
Coq.MSets.MSetRBT.MakeRaw.treeify_elements	40
Coq.MSets.MSetRBT.MakeRaw.treeify_spec	40
Coq.MSets.MSetRBT.MakeRaw.treeify_ok	40
Coq.MSets.MSetRBT.MakeRaw.filter_aux_elements	40
Coq.MSets.MSetRBT.MakeRaw.filter_elements	40
Coq.MSets.MSetRBT.MakeRaw.filter_spec	40
Coq.MSets.MSetRBT.MakeRaw.filter_ok	40
Coq.MSets.MSetRBT.MakeRaw.partition_aux_spec	40
Coq.MSets.MSetRBT.MakeRaw.partition_spec	40
Coq.MSets.MSetRBT.MakeRaw.partition_spec1	40	3.4	synth with cache (only 1: unfold partition, filter; only 1: now rewrite partition_aux_spec).	0.114969968796	9
Coq.MSets.MSetRBT.MakeRaw.partition_spec2	40	1	synth with cache (only 1: now rewrite partition_spec).	0.0785739421844	2
Coq.MSets.MSetRBT.MakeRaw.partition_ok1	40
Coq.MSets.MSetRBT.MakeRaw.partition_ok2	40	2.3	synth with cache (only 1: rewrite partition_spec; only 1: now apply filter_ok).	1.13077402115	7
Coq.MSets.MSetRBT.MakeRaw.INV_init	40
Coq.MSets.MSetRBT.MakeRaw.INV_sym	40	0.0.0.0.0.3.23	synth with cache (only 1: destruct 1; only 1: constructor; only 1: auto; only 1: auto; only 1: auto; only 1: auto; only 1: auto).	8.91395711899	1428
Coq.MSets.MSetRBT.MakeRaw.INV_drop	40
Coq.MSets.MSetRBT.MakeRaw.INV_eq	40
Coq.MSets.MSetRBT.MakeRaw.INV_lt	40
Coq.MSets.MSetRBT.MakeRaw.INV_rev	40
Coq.MSets.MSetRBT.MakeRaw.union_list_ok	40
Coq.MSets.MSetRBT.MakeRaw.linear_union_ok	40
Coq.MSets.MSetRBT.MakeRaw.fold_add_ok	40
Coq.MSets.MSetRBT.MakeRaw.union_ok	40
Coq.MSets.MSetRBT.MakeRaw.union_list_spec	40
Coq.MSets.MSetRBT.MakeRaw.linear_union_spec	40
Coq.MSets.MSetRBT.MakeRaw.fold_add_spec	40
Coq.MSets.MSetRBT.MakeRaw.union_spec'	40
Coq.MSets.MSetRBT.MakeRaw.union_spec	40
Coq.MSets.MSetRBT.MakeRaw.inter_list_ok	40
Coq.MSets.MSetRBT.MakeRaw.linear_inter_ok	40
Coq.MSets.MSetRBT.MakeRaw.inter_ok	40
Coq.MSets.MSetRBT.MakeRaw.inter_list_spec	40
Coq.MSets.MSetRBT.MakeRaw.linear_inter_spec	40
Coq.MSets.MSetRBT.MakeRaw.mem_proper	40
Coq.MSets.MSetRBT.MakeRaw.inter_spec	40
Coq.MSets.MSetRBT.MakeRaw.diff_list_ok	40
Coq.MSets.MSetRBT.MakeRaw.diff_inter_ok	40
Coq.MSets.MSetRBT.MakeRaw.fold_remove_ok	40	1.2.1.0.1.1.2	synth with cache (only 1: rewrite fold_spec, <- fold_left_rev_right; only 1: unfold elt in *; only 1: induction (rev (elements s1)); only 1: auto; only 1: simpl; only 1: unfold flip in *; only 1: auto_tc).	6.20818996429	392
Coq.MSets.MSetRBT.MakeRaw.diff_ok	40
Coq.MSets.MSetRBT.MakeRaw.diff_list_spec	40
Coq.MSets.MSetRBT.MakeRaw.linear_diff_spec	40
Coq.MSets.MSetRBT.MakeRaw.fold_remove_spec	40
Coq.MSets.MSetRBT.MakeRaw.diff_spec	40
Coq.MSets.MSetRBT.BalanceProps.rr_nrr_rb	40
Coq.MSets.MSetRBT.BalanceProps.arb_nrr_rb	40	0.0.16.2	synth with cache (only 1: invrb; only 1: destruct H; only 1: auto; only 1: auto).	3.32768297195	717
Coq.MSets.MSetRBT.BalanceProps.arb_nr_rb	40	1.19.1.0.2	synth with cache (only 1: destruct 1; only 1: auto; only 1: invrb; only 1: destruct H; only 1: invrb).	28.2524900436	6789
Coq.MSets.MSetRBT.BalanceProps.rb_maxdepth	40
Coq.MSets.MSetRBT.BalanceProps.rb_mindepth	40
Coq.MSets.MSetRBT.BalanceProps.maxdepth_upperbound	40
Coq.MSets.MSetRBT.BalanceProps.maxdepth_lowerbound	40	0.0.0.1.0.0.0.0	synth with cache (only 1: intros H; only 1: apply Nat.log2_lt_pow2; only 1: destruct s; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: apply maxdepth_cardinal).	0.405191898346	9
Coq.MSets.MSetRBT.BalanceProps.singleton_rb	40	2.10.1	synth with cache (only 1: unfold singleton; only 1: red; only 1: eauto).	0.902230024338	168
Coq.MSets.MSetRBT.BalanceProps.makeBlack_rb	40
Coq.MSets.MSetRBT.BalanceProps.makeRed_rr	40	1.0.3.0.1.5	synth with cache (only 1: intro H; only 1: destruct t; only 1: invrb; only 1: simpl; only 1: invrb; only 1: auto).	5.57284617424	554
Coq.MSets.MSetRBT.BalanceProps.lbal_rb	40
Coq.MSets.MSetRBT.BalanceProps.rbal_rb	40
Coq.MSets.MSetRBT.BalanceProps.rbal'_rb	40
Coq.MSets.MSetRBT.BalanceProps.lbalS_rb	40
Coq.MSets.MSetRBT.BalanceProps.lbalS_arb	40
Coq.MSets.MSetRBT.BalanceProps.rbalS_rb	40
Coq.MSets.MSetRBT.BalanceProps.rbalS_arb	40
Coq.MSets.MSetRBT.BalanceProps.ifred_notred	40
Coq.MSets.MSetRBT.BalanceProps.ifred_or	40	0.0.6.0.5	synth with cache (only 1: destruct s; only 1: auto; only 1: descolor; only 1: auto; only 1: auto).	5.87047314644	538
Coq.MSets.MSetRBT.BalanceProps.ins_rr_rb	40
Coq.MSets.MSetRBT.BalanceProps.ins_arb	40
Coq.MSets.MSetRBT.BalanceProps.add_rb	40
Coq.MSets.MSetRBT.BalanceProps.append_arb_rb	40
Coq.MSets.MSetRBT.BalanceProps.del_arb	40	0	synth with cache (only 1: auto).	0.0984199047089	1
Coq.MSets.MSetRBT.BalanceProps.remove_rb	40
Coq.MSets.MSetRBT.BalanceProps.treeify_zero_rb	40	0.0.0.5	synth with cache (only 1: constructor; only 1: auto; only 1: simpl; only 1: auto).	0.215939044952	9
Coq.MSets.MSetRBT.BalanceProps.treeify_one_rb	40	0.0.4.0.3	synth with cache (only 1: intros [| x acc]; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: auto).	1.97938084602	106
Coq.MSets.MSetRBT.BalanceProps.treeify_cont_rb	40
Coq.MSets.MSetRBT.BalanceProps.treeify_aux_rb	40
Coq.MSets.MSetRBT.BalanceProps.treeify_rb	40
Coq.MSets.MSetRBT.BalanceProps.filter_rb	40	12	synth with cache (only 1: eauto with *).	0.213581085205	46
Coq.MSets.MSetRBT.BalanceProps.partition_rb1	40	1.1.1.1	synth with cache (only 1: rewrite partition_spec; only 1: simpl; only 1: unfold filter; only 1: auto_tc).	0.211287021637	8
Coq.MSets.MSetRBT.BalanceProps.partition_rb2	40	1.1.2.1	synth with cache (only 1: unfold partition; only 1: destruct partition_aux; only 1: simpl; only 1: auto_tc).	0.210871934891	9
Coq.MSets.MSetRBT.BalanceProps.fold_add_rb	40	3.2.0.0.0.3.2.4	synth with cache (only 1: rewrite fold_spec, <- fold_left_rev_right; only 1: unfold elt in *; only 1: induction (rev (elements s1)); only 1: simpl; only 1: auto; only 1: simpl; only 1: unfold flip in *; only 1: auto_tc).	22.2846438885	1765
Coq.MSets.MSetRBT.BalanceProps.fold_remove_rb	40	2.1.0.0.0.3.0.1.1	synth with cache (only 1: intros; only 1: rewrite fold_spec, <- fold_left_rev_right; only 1: unfold elt in *; only 1: induction (rev (elements s1)); only 1: simpl; only 1: auto; only 1: simpl; only 1: unfold flip in *; only 1: auto_tc).	12.0555150509	918
Coq.MSets.MSetRBT.BalanceProps.union_rb	40	1.1.3.3.1.2.1	synth with cache (only 1: intros; only 1: unfold union; only 1: destruct compare_height; only 1: unfold linear_union; only 1: auto_tc; only 1: auto_tc; only 1: auto_tc).	5.89893817902	669
Coq.MSets.MSetRBT.BalanceProps.inter_rb	40	0.0.1.1.1.2.1	synth with cache (only 1: intros; only 1: unfold inter; only 1: destruct compare_height; only 1: unfold linear_inter; only 1: auto_tc; only 1: auto_tc; only 1: auto_tc).	1.49371504784	133
Coq.MSets.MSetRBT.BalanceProps.diff_rb	40
Coq.MSets.MSetRBT.Make.remove_min_spec1	40
Coq.MSets.MSetRBT.Make.remove_min_spec2	40
Coq.MSets.MSetPositive.PositiveSet.In_compat	40	4.6	synth with cache (only 1: intros x x' Hx y y' Hy; only 1: now f_equiv).	2.20279312134	157
Coq.MSets.MSetPositive.PositiveSet.eq_equiv	40	6	synth with cache (only 1: firstorder).	0.119966983795	7
Coq.MSets.MSetPositive.PositiveSet.mem_spec	40	1.1.2	synth with cache (only 1: split; only 1: auto; only 1: auto).	0.542382001877	52
Coq.MSets.MSetPositive.PositiveSet.mem_Leaf	40	0.0	synth with cache (only 1: intros n; only 1: now destruct n).	0.125833034515	2
Coq.MSets.MSetPositive.PositiveSet.empty_spec	40	3	synth with cache (only 1: firstorder).	0.0974040031433	4
Coq.MSets.MSetPositive.PositiveSet.mem_node	40
Coq.MSets.MSetPositive.PositiveSet.is_empty_spec	40	4.4.2	synth with cache (only 1: fix even_spec 1; only 1: intro n; only 1: auto).	9.04277682304	501
Coq.MSets.MSetPositive.PositiveSet.subset_Leaf_s	40	2.9.1	synth with cache (only 1: intros n; only 1: repeat red; only 1: intuition).	3.07282710075	190
Coq.MSets.MSetPositive.PositiveSet.subset_spec	40
Coq.MSets.MSetPositive.PositiveSet.equal_subset	40
Coq.MSets.MSetPositive.PositiveSet.equal_spec	40
Coq.MSets.MSetPositive.PositiveSet.eq_dec	40
Coq.MSets.MSetPositive.PositiveSet.lex_Opp	40
Coq.MSets.MSetPositive.PositiveSet.compare_bool_inv	40	0.0.1.0.0.0.0.0.9	synth with cache (only 1: intros n m; only 1: destruct n, m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: auto; only 1: simpl; only 1: trivial).	9.17367315292	718
Coq.MSets.MSetPositive.PositiveSet.compare_inv	40
Coq.MSets.MSetPositive.PositiveSet.lex_Eq	40
Coq.MSets.MSetPositive.PositiveSet.compare_bool_Eq	40	0.0.0.0.3	synth with cache (only 1: destr_bool; only 1: easy'; only 1: easy'; only 1: easy'; only 1: easy').	0.38382101059	34
Coq.MSets.MSetPositive.PositiveSet.compare_equal	40
Coq.MSets.MSetPositive.PositiveSet.compare_gt	40
Coq.MSets.MSetPositive.PositiveSet.compare_eq	40
Coq.MSets.MSetPositive.PositiveSet.compare_spec	40
Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_cxe	40	0.0.17	synth with cache (only 1: fix sqrtrem_spec 1; only 1: intro n; only 1: auto).	3.49583601952	705
Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_xce	40	0.0.0.1	synth with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.26255106926	14
Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_lxl	40	1.1.1.8	synth with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	2.20097899437	209
Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_gxg	40	0.0.0.0	synth with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.512730836868	4
Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_xll	40	0.0.0.0	synth with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.230195045471	4
Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_xgg	40	0.0.0.0	synth with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.208345890045	4
Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_lex	40
Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_compare_bool	40	0.0.0.0.0.0.0.0.27	synth with cache (only 1: destr_bool; only 1: ct; only 1: ct; only 1: ct; only 1: ct; only 1: ct; only 1: ct; only 1: ct; only 1: ct).	22.0479459763	2816
Coq.MSets.MSetPositive.PositiveSet.lt_spec.compare_x_Leaf	40	0.0.13	synth with cache (only 1: intros [| l' o' r']; only 1: auto; only 1: trivial).	2.15862894058	246
Coq.MSets.MSetPositive.PositiveSet.lt_spec.compare_empty_x	40
Coq.MSets.MSetPositive.PositiveSet.lt_spec.compare_x_empty	40
Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_compare	40
Coq.MSets.MSetPositive.PositiveSet.lt_strorder	40
Coq.MSets.MSetPositive.PositiveSet.compare_compat_1	40
Coq.MSets.MSetPositive.PositiveSet.compare_compat	40
Coq.MSets.MSetPositive.PositiveSet.lt_compat	40
Coq.MSets.MSetPositive.PositiveSet.add_spec	40
Coq.MSets.MSetPositive.PositiveSet.remove_spec	40
Coq.MSets.MSetPositive.PositiveSet.singleton_spec	40
Coq.MSets.MSetPositive.PositiveSet.union_spec	40
Coq.MSets.MSetPositive.PositiveSet.inter_spec	40
Coq.MSets.MSetPositive.PositiveSet.diff_spec	40
Coq.MSets.MSetPositive.PositiveSet.fold_spec	40
Coq.MSets.MSetPositive.PositiveSet.cardinal_spec	40
Coq.MSets.MSetPositive.PositiveSet.xfilter_spec	40
Coq.MSets.MSetPositive.PositiveSet.filter_spec	40
Coq.MSets.MSetPositive.PositiveSet.xforall_spec	40
Coq.MSets.MSetPositive.PositiveSet.for_all_spec	40
Coq.MSets.MSetPositive.PositiveSet.xexists_spec	40
Coq.MSets.MSetPositive.PositiveSet.exists_spec	40
Coq.MSets.MSetPositive.PositiveSet.partition_filter	40
Coq.MSets.MSetPositive.PositiveSet.partition_spec1	40
Coq.MSets.MSetPositive.PositiveSet.partition_spec2	40	3.2.4	synth with cache (only 1: intros; only 1: rewrite partition_filter; only 1: reflexivity).	1.14483594894	87
Coq.MSets.MSetPositive.PositiveSet.xelements_spec	40
Coq.MSets.MSetPositive.PositiveSet.elements_spec1	40
Coq.MSets.MSetPositive.PositiveSet.lt_rev_append	40
Coq.MSets.MSetPositive.PositiveSet.elements_spec2	40	0.3.15	synth with cache (only 1: fix sqrtrem_spec 1; only 1: intro n; only 1: auto).	3.57641100883	637
Coq.MSets.MSetPositive.PositiveSet.elements_spec2w	40
Coq.MSets.MSetPositive.PositiveSet.choose_spec1	40
Coq.MSets.MSetPositive.PositiveSet.choose_spec2	40
Coq.MSets.MSetPositive.PositiveSet.choose_empty	40
Coq.MSets.MSetPositive.PositiveSet.choose_spec3'	40
Coq.MSets.MSetPositive.PositiveSet.choose_spec3	40
Coq.MSets.MSetPositive.PositiveSet.min_elt_spec1	40
Coq.MSets.MSetPositive.PositiveSet.min_elt_spec3	40
Coq.MSets.MSetPositive.PositiveSet.min_elt_spec2	40
Coq.MSets.MSetPositive.PositiveSet.max_elt_spec1	40
Coq.MSets.MSetPositive.PositiveSet.max_elt_spec3	40
Coq.MSets.MSetPositive.PositiveSet.max_elt_spec2	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.In_1	40	6.10	synth with cache (only 1: intro; only 1: now rewrite H).	0.839066028595	148
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.mem_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.mem_2	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.equal_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.equal_2	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.subset_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.subset_2	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.is_empty_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.is_empty_2	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.add_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.add_2	40	0.1.2	synth with cache (only 1: intros; only 1: apply <- add_spec; only 1: auto).	0.17889380455	6
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.add_3	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.remove_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.remove_2	40	3.6.6	synth with cache (only 1: intros; only 1: rewrite remove_spec; only 1: intuition).	5.32577681541	337
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.remove_3	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.singleton_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.singleton_2	40	0.2	synth with cache (only 1: rewrite singleton_spec; only 1: auto with relations).	0.257922887802	21
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.union_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.union_2	40	2.6	synth with cache (only 1: rewrite union_spec; only 1: auto).	0.354696989059	25
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.union_3	40	0.0	synth with cache (only 1: rewrite union_spec; only 1: auto).	0.151596069336	2
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.inter_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.inter_2	40	1.0	synth with cache (only 1: rewrite inter_spec; only 1: intuition).	0.149452924728	3
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.inter_3	40	1.4	synth with cache (only 1: rewrite inter_spec; only 1: intuition).	0.161450862885	7
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.diff_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.diff_2	40	1.3	synth with cache (only 1: rewrite diff_spec; only 1: intuition).	0.273205041885	18
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.diff_3	40	0.2	synth with cache (only 1: rewrite diff_spec; only 1: intuition).	0.15532708168	4
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.filter_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.filter_2	40	0.4.6.7	synth with cache (only 1: intros P; only 1: rewrite filter_spec; only 1: intuition; only 1: auto).	13.2933709621	567
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.filter_3	40	0.0.4.1	synth with cache (only 1: intros P; only 1: rewrite filter_spec; only 1: auto; only 1: auto).	0.262633085251	15
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.for_all_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.for_all_2	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.exists_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.exists_2	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.elements_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.elements_2	40
Coq.MSets.MSetFacts.WFactsOn.IffSpec.In_eq_iff	40	1.4.4	synth with cache (only 1: intros E; only 1: rewrite E; only 1: intuition).	2.63880515099	127
Coq.MSets.MSetFacts.WFactsOn.IffSpec.mem_iff	40	3.2.2	synth with cache (only 1: symmetry; only 1: symmetry; only 1: intuition).	0.183009147644	11
Coq.MSets.MSetFacts.WFactsOn.IffSpec.not_mem_iff	40
Coq.MSets.MSetFacts.WFactsOn.IffSpec.equal_iff	40	2	synth with cache (only 1: intuition).	0.102575063705	3
Coq.MSets.MSetFacts.WFactsOn.IffSpec.subset_iff	40	2	synth with cache (only 1: intuition).	0.102762937546	3
Coq.MSets.MSetFacts.WFactsOn.IffSpec.empty_iff	40
Coq.MSets.MSetFacts.WFactsOn.IffSpec.is_empty_iff	40	2	synth with cache (only 1: intuition).	0.101094961166	3
Coq.MSets.MSetFacts.WFactsOn.IffSpec.singleton_iff	40	0	synth with cache (only 1: intuition).	0.101501941681	1
Coq.MSets.MSetFacts.WFactsOn.IffSpec.add_iff	40	0.23	synth with cache (only 1: rewrite add_spec; only 1: intuition).	7.09621810913	1139
Coq.MSets.MSetFacts.WFactsOn.IffSpec.add_neq_iff	40	2.3.1.3	synth with cache (only 1: rewrite add_spec; only 1: intuition; only 1: elim H; only 1: intuition).	4.11709904671	403
Coq.MSets.MSetFacts.WFactsOn.IffSpec.remove_iff	40
Coq.MSets.MSetFacts.WFactsOn.IffSpec.remove_neq_iff	40	0.6	synth with cache (only 1: rewrite remove_spec; only 1: intuition).	0.853912115097	60
Coq.MSets.MSetFacts.WFactsOn.IffSpec.for_all_iff	40	0.0	synth with cache (only 1: intro n; only 1: intuition).	0.146749019623	2
Coq.MSets.MSetFacts.WFactsOn.IffSpec.exists_iff	40	0.0	synth with cache (only 1: intros; only 1: intuition).	0.145484924316	2
Coq.MSets.MSetFacts.WFactsOn.IffSpec.elements_iff	40	2	synth with cache (only 1: intuition).	0.102550029755	3
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.mem_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.empty_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.add_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.add_neq_b	40	0.3.0.13	synth with cache (only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_iff s x y); only 1: intuition; only 1: apply eq_true_iff_eq; only 1: intuition).	14.1808109283	1332
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.remove_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.remove_neq_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.singleton_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.union_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.inter_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.diff_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.elements_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.filter_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.for_all_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.exists_b	40
Coq.MSets.MSetFacts.WFactsOn.In_m	40	1.11.3	synth with cache (only 1: intros x x' Hx y y' Hy; only 1: rewrite Hx; only 1: auto).	18.7261941433	1003
Coq.MSets.MSetFacts.WFactsOn.Empty_m	40	5.7.4	synth with cache (only 1: repeat red; only 1: vm_compute; only 1: firstorder).	7.20002388954	575
Coq.MSets.MSetFacts.WFactsOn.is_empty_m	40
Coq.MSets.MSetFacts.WFactsOn.mem_m	40
Coq.MSets.MSetFacts.WFactsOn.singleton_m	40
Coq.MSets.MSetFacts.WFactsOn.add_m	40
Coq.MSets.MSetFacts.WFactsOn.remove_m	40
Coq.MSets.MSetFacts.WFactsOn.union_m	40
Coq.MSets.MSetFacts.WFactsOn.inter_m	40
Coq.MSets.MSetFacts.WFactsOn.diff_m	40
Coq.MSets.MSetFacts.WFactsOn.Subset_m	40	9.0	synth with cache (only 1: unfold Equal; only 1: firstorder).	2.23590612411	123
Coq.MSets.MSetFacts.WFactsOn.subset_m	40
Coq.MSets.MSetFacts.WFactsOn.equal_m	40
Coq.MSets.MSetFacts.WFactsOn.SubsetSetoid	40	25	synth with cache (only 1: firstorder).	8.56116008759	1206
Coq.MSets.MSetFacts.WFactsOn.In_s_m	40	0.7.0.5	synth with cache (only 1: repeat red; only 1: intuition; only 1: rewrite <- H; only 1: auto).	10.875795126	428
Coq.MSets.MSetFacts.WFactsOn.Empty_s_m	40	5	synth with cache (only 1: firstorder).	0.300197124481	21
Coq.MSets.MSetFacts.WFactsOn.add_s_m	40	0.2.0	synth with cache (only 1: intros x x' Hx s s' Hs a; only 1: rewrite !add_iff, Hx, Hs; only 1: intuition).	0.883270978928	12
Coq.MSets.MSetFacts.WFactsOn.remove_s_m	40	0.5.0	synth with cache (only 1: intros x x' Hx s s' Hs a; only 1: rewrite !remove_iff, Hx, Hs; only 1: intuition).	0.35257101059	14
Coq.MSets.MSetFacts.WFactsOn.union_s_m	40	0.10.0	synth with cache (only 1: intros s1 s1' Hs1 s2 s2' Hs2 a; only 1: rewrite !union_spec, Hs1, Hs2; only 1: intuition).	4.79874897003	201
Coq.MSets.MSetFacts.WFactsOn.inter_s_m	40	0.5.0	synth with cache (only 1: intros s1 s1' Hs1 s2 s2' Hs2 a; only 1: rewrite !inter_spec, Hs1, Hs2; only 1: intuition).	1.19908094406	16
Coq.MSets.MSetFacts.WFactsOn.diff_s_m	40	0.15.0	synth with cache (only 1: intros s1 s1' Hs1 s2 s2' Hs2 a; only 1: rewrite !diff_spec, Hs1, Hs2; only 1: intuition).	12.3065519333	837
Coq.MSets.MSetFacts.WFactsOn.filter_equal	40
Coq.MSets.MSetFacts.WFactsOn.filter_subset	40	0.3.1	synth with cache (only 1: intros f Hf s s' Hs a; only 1: rewrite !filter_spec, Hs by auto; only 1: intuition).	1.38627099991	13
Coq.MSets.MSetFacts.WFactsOn.filter_ext	40
Coq.MSets.MSetProperties.WPropertiesOn.In_dec	40	0.0.2.0.0	synth with cache (only 1: intros; only 1: generalize (F.mem_iff s x); only 1: case (mem x s); only 1: intuition; only 1: intuition).	1.4265999794	7
Coq.MSets.MSetProperties.WPropertiesOn.Add_Equal	40
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.equal_refl	40	2	synth with cache (only 1: intuition).	0.098384141922	3
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.equal_sym	40	0	synth with cache (only 1: intuition).	0.108871936798	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.equal_trans	40	3.0	synth with cache (only 1: intuition; only 1: fsetdec).	0.206274986267	5
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_refl	40	2	synth with cache (only 1: fsetdec).	0.106785058975	3
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_trans	40	4.0	synth with cache (only 1: intuition; only 1: fsetdec).	0.194751977921	6
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_antisym	40	3.0	synth with cache (only 1: intuition; only 1: fsetdec).	0.247685909271	5
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_equal	40	3.0	synth with cache (only 1: intuition; only 1: fsetdec).	0.180938005447	5
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_empty	40	2	synth with cache (only 1: fsetdec).	0.111746072769	3
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_remove_3	40	3	synth with cache (only 1: fsetdec).	0.213490009308	13
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_diff	40	5.0	synth with cache (only 1: intuition; only 1: fsetdec).	0.208061933517	7
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_add_3	40	6.0	synth with cache (only 1: intuition; only 1: fsetdec).	0.375508069992	13
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_add_2	40	3	synth with cache (only 1: fsetdec).	0.198693037033	13
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.in_subset	40	0	synth with cache (only 1: intuition).	0.103464841843	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.double_inclusion	40	3.3.3.0	synth with cache (only 1: intuition; only 1: fsetdec; only 1: fsetdec; only 1: fsetdec).	1.80995988846	134
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_is_empty_1	40	2.1	synth with cache (only 1: intuition; only 1: fsetdec).	0.193124055862	5
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_is_empty_2	40	7.1	synth with cache (only 1: intuition; only 1: fsetdec).	0.213099956512	10
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.add_equal	40	2	synth with cache (only 1: fsetdec).	0.259607076645	12
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.add_add	40	4	synth with cache (only 1: fsetdec).	0.295896053314	5
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.remove_equal	40	4.0	synth with cache (only 1: intuition; only 1: fsetdec).	0.267477989197	6
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.Equal_remove	40	5.0	synth with cache (only 1: intuition; only 1: fsetdec).	0.26624083519	7
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.add_remove	40	4.0	synth with cache (only 1: intuition; only 1: fsetdec).	0.322712898254	6
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.remove_add	40	4.0	synth with cache (only 1: intuition; only 1: fsetdec).	0.315635919571	6
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.singleton_equal_add	40	2	synth with cache (only 1: fsetdec).	0.219371080399	3
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.remove_singleton_empty	40	3	synth with cache (only 1: fsetdec).	0.473505020142	12
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_sym	40	3	synth with cache (only 1: fsetdec).	0.243973970413	4
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_equal	40	6.1	synth with cache (only 1: intuition; only 1: fsetdec).	0.233600854874	9
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_equal_1	40	4.1	synth with cache (only 1: intuition; only 1: fsetdec).	0.273774147034	7
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_equal_2	40	4.1	synth with cache (only 1: intuition; only 1: fsetdec).	0.343317985535	7
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_assoc	40	2	synth with cache (only 1: fsetdec).	0.321504116058	3
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.add_union_singleton	40	2	synth with cache (only 1: fsetdec).	0.295628070831	3
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_add	40	2	synth with cache (only 1: fsetdec).	0.337901115417	3
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_remove_add_1	40	2	synth with cache (only 1: fsetdec).	0.476289987564	3
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_remove_add_2	40	4.1	synth with cache (only 1: intuition; only 1: fsetdec).	0.465646982193	7
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_1	40	3	synth with cache (only 1: fsetdec).	0.150996923447	4
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_2	40	3	synth with cache (only 1: fsetdec).	0.147782087326	4
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_3	40	3.1	synth with cache (only 1: intuition; only 1: fsetdec).	0.236788988113	6
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_4	40	4.1	synth with cache (only 1: intuition; only 1: fsetdec).	0.234166145325	7
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_5	40	4.1	synth with cache (only 1: intuition; only 1: fsetdec).	0.233261108398	7
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_union_1	40	2.1	synth with cache (only 1: intuition; only 1: fsetdec).	0.31223320961	5
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_union_2	40	1	synth with cache (only 1: fsetdec).	0.179098129272	2
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.not_in_union	40	3	synth with cache (only 1: fsetdec).	0.545211076736	13
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_sym	40	2	synth with cache (only 1: fsetdec).	0.19123506546	3
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_subset_equal	40	5.1	synth with cache (only 1: intuition; only 1: fsetdec).	0.340975046158	8
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_equal_1	40	1	synth with cache (only 1: fsetdec).	0.211930990219	2
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_equal_2	40	3.1	synth with cache (only 1: intuition; only 1: fsetdec).	0.281401157379	6
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_assoc	40	1	synth with cache (only 1: fsetdec).	0.317870140076	2
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_inter_1	40	2	synth with cache (only 1: fsetdec).	0.364367008209	3
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_inter_2	40	1	synth with cache (only 1: fsetdec).	0.403246879578	2
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_add_1	40	3.1	synth with cache (only 1: intuition; only 1: fsetdec).	0.400161027908	6
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_add_2	40	3.0	synth with cache (only 1: intuition; only 1: fsetdec).	0.341090202332	5
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_inter_1	40	7.1	synth with cache (only 1: intuition; only 1: fsetdec).	0.270176887512	10
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_inter_2	40	7.1	synth with cache (only 1: intuition; only 1: fsetdec).	0.325319051743	10
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_subset_1	40	1	synth with cache (only 1: fsetdec).	0.156746149063	2
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_subset_2	40	1	synth with cache (only 1: fsetdec).	0.153896093369	2
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_subset_3	40	1	synth with cache (only 1: fsetdec).	0.174452066422	2
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_diff_1	40	1	synth with cache (only 1: fsetdec).	0.217458963394	2
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_diff_2	40	1	synth with cache (only 1: fsetdec).	0.187970161438	2
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.diff_subset	40	1	synth with cache (only 1: fsetdec).	0.262679815292	2
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.diff_subset_equal	40	1	synth with cache (only 1: fsetdec).	0.226416110992	2
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.remove_diff_singleton	40	2	synth with cache (only 1: fsetdec).	0.348740100861	3
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.diff_inter_empty	40	1	synth with cache (only 1: fsetdec).	0.382440090179	2
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.diff_inter_all	40	1	synth with cache (only 1: fsetdec).	0.327544927597	2
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.Add_add	40	5.0.6	synth with cache (only 1: vm_compute; only 1: intuition; only 1: fsetdec).	1.52382183075	92
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.Add_remove	40	4.4.1	synth with cache (only 1: intuition; only 1: expAdd; only 1: fsetdec).	1.82972884178	86
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_Add	40	2.6	synth with cache (only 1: expAdd; only 1: fsetdec).	0.641896009445	19
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_Add	40	2.5	synth with cache (only 1: expAdd; only 1: fsetdec).	0.778944015503	19
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_Equal	40	2.2	synth with cache (only 1: expAdd; only 1: fsetdec).	0.795523881912	19
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_Add_2	40	1.5	synth with cache (only 1: expAdd; only 1: fsetdec).	0.946287155151	28
Coq.MSets.MSetProperties.WPropertiesOn.elements_Empty	40
Coq.MSets.MSetProperties.WPropertiesOn.elements_empty	40
Coq.MSets.MSetProperties.WPropertiesOn.of_list_1	40
Coq.MSets.MSetProperties.WPropertiesOn.of_list_2	40
Coq.MSets.MSetProperties.WPropertiesOn.of_list_3	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_spec_right	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rec	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rec_bis	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rec_nodep	40	0.0.13.2	synth with cache (only 1: intuition; only 1: apply fold_rec; only 1: auto; only 1: auto).	4.75624704361	403
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rec_weak	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rel	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.set_induction	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.set_induction_bis	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_identity	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_0	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_1	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_2	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_1b	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_commutes	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_init	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_equal	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_empty	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_add	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.add_fold	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.remove_fold_1	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.remove_fold_2	40	0.2.2	synth with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set).	0.314400196075	7
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_union_inter	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_diff_inter	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_union	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_plus	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_fold	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_0	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_1	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_2	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_Empty	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_inv_1	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_inv_2	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_inv_2b	40
Coq.MSets.MSetProperties.WPropertiesOn.Equal_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_m	40
Coq.MSets.MSetProperties.WPropertiesOn.empty_cardinal	40	0.10	synth with cache (only 1: apply cardinal_1; only 1: fsetdec).	0.483166217804	51
Coq.MSets.MSetProperties.WPropertiesOn.singleton_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.diff_inter_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.union_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.subset_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.subset_cardinal_lt	40
Coq.MSets.MSetProperties.WPropertiesOn.union_inter_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.union_cardinal_inter	40
Coq.MSets.MSetProperties.WPropertiesOn.union_cardinal_le	40
Coq.MSets.MSetProperties.WPropertiesOn.add_cardinal_1	40	5.2	synth with cache (only 1: intros a b H; only 1: intuition).	0.147789001465	9
Coq.MSets.MSetProperties.WPropertiesOn.add_cardinal_2	40	0.0.7.4	synth with cache (only 1: intros; only 1: apply cardinal_2 with x; only 1: auto; only 1: intuition).	4.6921608448	310
Coq.MSets.MSetProperties.WPropertiesOn.remove_cardinal_1	40
Coq.MSets.MSetProperties.WPropertiesOn.remove_cardinal_2	40	1	synth with cache (only 1: auto with set).	0.0927720069885	2
Coq.MSets.MSetProperties.OrdProperties.sort_equivlistA_eqlistA	40
Coq.MSets.MSetProperties.OrdProperties.gtb_1	40
Coq.MSets.MSetProperties.OrdProperties.leb_1	40
Coq.MSets.MSetProperties.OrdProperties.gtb_compat	40
Coq.MSets.MSetProperties.OrdProperties.leb_compat	40
Coq.MSets.MSetProperties.OrdProperties.elements_split	40
Coq.MSets.MSetProperties.OrdProperties.elements_Add	40
Coq.MSets.MSetProperties.OrdProperties.elements_Add_Above	40
Coq.MSets.MSetProperties.OrdProperties.elements_Add_Below	40
Coq.MSets.MSetProperties.OrdProperties.set_induction_max	40
Coq.MSets.MSetProperties.OrdProperties.set_induction_min	40
Coq.MSets.MSetProperties.OrdProperties.fold_3	40
Coq.MSets.MSetProperties.OrdProperties.fold_4	40
Coq.MSets.MSetProperties.OrdProperties.FoldOpt.fold_equal	40
Coq.MSets.MSetProperties.OrdProperties.FoldOpt.add_fold	40	0.2.1	synth with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).	0.179143190384	6
Coq.MSets.MSetProperties.OrdProperties.FoldOpt.remove_fold_2	40	0.2.1	synth with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).	0.177619934082	6
Coq.MSets.MSetProperties.OrdProperties.choose_equal	40
Coq.MSets.MSetAVL.MakeRaw.singleton_spec	40
Coq.MSets.MSetAVL.MakeRaw.singleton_ok	40	0.0.0.0.3	synth with cache (only 1: right; only 1: auto; only 1: auto; only 1: auto; only 1: auto).	0.367972135544	8
Coq.MSets.MSetAVL.MakeRaw.create_spec	40
Coq.MSets.MSetAVL.MakeRaw.create_ok	40	0.0.0.0.6	synth with cache (only 1: constructor; only 1: auto; only 1: auto; only 1: auto; only 1: auto).	1.17784190178	28
Coq.MSets.MSetAVL.MakeRaw.bal_spec	40
Coq.MSets.MSetAVL.MakeRaw.bal_ok	40
Coq.MSets.MSetAVL.MakeRaw.add_spec'	40
Coq.MSets.MSetAVL.MakeRaw.add_spec	40	0.1.0.0.1.0.1.2.3.3	synth with cache (only 1: induct ltac:(s) ltac:(x); only 1: intuition_in; only 1: intuition_in; only 1: eauto; only 1: rewrite ?bal_spec, ?IHl, ?IHr; only 1: intuition_in; only 1: auto; only 1: rewrite ?bal_spec, ?IHl, ?IHr; only 1: intuition_in; only 1: auto).	30.4232680798	1531
Coq.MSets.MSetAVL.MakeRaw.add_ok	40
Coq.MSets.MSetAVL.MakeRaw.join_spec	40
Coq.MSets.MSetAVL.MakeRaw.join_ok	40
Coq.MSets.MSetAVL.MakeRaw.remove_min_spec	40
Coq.MSets.MSetAVL.MakeRaw.remove_min_ok	40
Coq.MSets.MSetAVL.MakeRaw.remove_min_gt_tree	40
Coq.MSets.MSetAVL.MakeRaw.merge_spec	40
Coq.MSets.MSetAVL.MakeRaw.merge_ok	40
Coq.MSets.MSetAVL.MakeRaw.remove_spec	40
Coq.MSets.MSetAVL.MakeRaw.remove_ok	40
Coq.MSets.MSetAVL.MakeRaw.concat_spec	40
Coq.MSets.MSetAVL.MakeRaw.concat_ok	40
Coq.MSets.MSetAVL.MakeRaw.split_spec1	40
Coq.MSets.MSetAVL.MakeRaw.split_spec2	40
Coq.MSets.MSetAVL.MakeRaw.split_spec3	40
Coq.MSets.MSetAVL.MakeRaw.split_ok	40
Coq.MSets.MSetAVL.MakeRaw.split_ok1	40
Coq.MSets.MSetAVL.MakeRaw.split_ok2	40	0.0.2	synth with cache (only 1: destruct (@split_ok s x); only 1: auto; only 1: auto).	0.213387966156	5
Coq.MSets.MSetAVL.MakeRaw.inter_spec_ok	40
Coq.MSets.MSetAVL.MakeRaw.inter_spec	40
Coq.MSets.MSetAVL.MakeRaw.inter_ok	40
Coq.MSets.MSetAVL.MakeRaw.diff_spec_ok	40
Coq.MSets.MSetAVL.MakeRaw.diff_spec	40
Coq.MSets.MSetAVL.MakeRaw.diff_ok	40
Coq.MSets.MSetAVL.MakeRaw.union_spec	40
Coq.MSets.MSetAVL.MakeRaw.union_ok	40
Coq.MSets.MSetAVL.MakeRaw.filter_spec	40
Coq.MSets.MSetAVL.MakeRaw.filter_weak_spec	40
Coq.MSets.MSetAVL.MakeRaw.filter_ok	40
Coq.MSets.MSetAVL.MakeRaw.partition_spec1'	40
Coq.MSets.MSetAVL.MakeRaw.partition_spec2'	40	3.2.0.0.1	synth with cache (only 1: induction s as [| h l Hl x r Hr]; only 1: auto; only 1: simpl; only 1: rewrite <- Hl, <- Hr; only 1: now destruct (partition f l), (partition f r), (f x)).	3.63423895836	94
Coq.MSets.MSetAVL.MakeRaw.partition_spec1	40
Coq.MSets.MSetAVL.MakeRaw.partition_spec2	40
Coq.MSets.MSetAVL.MakeRaw.partition_ok1	40
Coq.MSets.MSetAVL.MakeRaw.partition_ok2	40
Coq.MSets.MSetDecide.WDecideOn.MSetLogicalFacts.test_push	40	0	synth with cache (only 1: intuition).	0.84054017067	1
Coq.MSets.MSetDecide.WDecideOn.MSetLogicalFacts.test_pull	40	0	synth with cache (only 1: intuition).	0.931151866913	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideAuxiliary.eq_refl_iff	40	0	synth with cache (only 1: intuition).	0.116328001022	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideAuxiliary.dec_In	40
Coq.MSets.MSetDecide.WDecideOn.MSetDecideAuxiliary.dec_eq	40
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_trans_1	40
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_trans_2	40	10	synth with cache (only 1: fsetdec).	2.81353092194	114
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_neq_trans_1	40	2	synth with cache (only 1: fsetdec).	0.623099088669	12
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_neq_trans_2	40	6	synth with cache (only 1: fsetdec).	1.08584594727	37
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_In_singleton	40	1.0	synth with cache (only 1: intro; only 1: intuition).	0.181309938431	3
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_add_In	40	4	synth with cache (only 1: fsetdec).	0.38405585289	27
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_Subset_add_remove	40	13	synth with cache (only 1: fsetdec).	5.04782295227	344
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_disjunction	40	5.3	synth with cache (only 1: vm_compute; only 1: fsetdec).	0.68385887146	33
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_not_In_disj	40	5.3	synth with cache (only 1: vm_compute; only 1: fsetdec).	1.48102092743	25
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_not_In_conj	40	5.2	synth with cache (only 1: vm_compute; only 1: fsetdec).	1.0247490406	27
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_iff_conj	40	8	synth with cache (only 1: fsetdec).	0.848783969879	36
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_set_ops_1	40	4	synth with cache (only 1: fsetdec).	0.465836048126	14
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.eq_chain_test	40	7.0	synth with cache (only 1: intuition; only 1: fsetdec).	0.590132951736	9
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_too_complex	40	0.2	synth with cache (only 1: vm_compute; only 1: intuition).	0.318130970001	13
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.function_test_1	40	3	synth with cache (only 1: fsetdec).	0.799708127975	26
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.function_test_2	40	10.5	synth with cache (only 1: intros n m; only 1: fsetdec).	15.6469020844	1094
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_baydemir	40	8.0	synth with cache (only 1: intuition; only 1: fsetdec).	0.261575937271	10
Coq.MSets.MSetGenTree.Props.ltb_tree_iff	40	2.3.7	synth with cache (only 1: intro H; only 1: fix even_spec 1; only 1: auto).	4.67935299873	502
Coq.MSets.MSetGenTree.Props.gtb_tree_iff	40	2.3.8	synth with cache (only 1: intro H; only 1: fix even_spec 1; only 1: auto).	15.2988657951	1465
Coq.MSets.MSetGenTree.Props.isok_iff	40	3.0	synth with cache (only 1: fix even_spec 1; only 1: auto).	0.07288813591	5
Coq.MSets.MSetGenTree.Props.isok_Ok	40
Coq.MSets.MSetGenTree.Props.In_1	40
Coq.MSets.MSetGenTree.Props.In_compat	40
Coq.MSets.MSetGenTree.Props.In_node_iff	40	13	synth with cache (only 1: intuition_in).	4.24647593498	317
Coq.MSets.MSetGenTree.Props.In_leaf_iff	40	8	synth with cache (only 1: intuition_in).	0.412535190582	44
Coq.MSets.MSetGenTree.Props.lt_leaf	40	7.2	synth with cache (only 1: intros x y z; only 1: easy).	0.217898845673	34
Coq.MSets.MSetGenTree.Props.gt_leaf	40	2.2	synth with cache (only 1: red; only 1: inversion 1).	0.0909798145294	6
Coq.MSets.MSetGenTree.Props.lt_tree_node	40	2.12.8	synth with cache (only 1: red; only 1: intuition_in; only 1: order).	12.1987328529	1614
Coq.MSets.MSetGenTree.Props.gt_tree_node	40	2.3.10	synth with cache (only 1: red; only 1: intuition_in; only 1: order).	4.70213508606	420
Coq.MSets.MSetGenTree.Props.lt_tree_not_in	40	0.2.2	synth with cache (only 1: intuition_in; only 1: eapply OrderTac.lt_irrefl; only 1: auto).	0.139530897141	7
Coq.MSets.MSetGenTree.Props.lt_tree_trans	40	2.5	synth with cache (only 1: intuition_in; only 1: eauto).	0.901559114456	32
Coq.MSets.MSetGenTree.Props.gt_tree_not_in	40	2.1.1	synth with cache (only 1: intros; only 1: intro; only 1: order).	0.114182949066	7
Coq.MSets.MSetGenTree.Props.gt_tree_trans	40	2	synth with cache (only 1: eauto).	0.81152510643	22
Coq.MSets.MSetGenTree.Props.lt_tree_compat	40
Coq.MSets.MSetGenTree.Props.gt_tree_compat	40	0.2.1.3.0.0.0	synth with cache (only 1: apply proper_sym_impl_iff_2; only 1: auto; only 1: auto; only 1: intros x x' Hx s s' Hs H y Hy; only 1: subst; only 1: setoid_rewrite  <- Hx; only 1: auto).	6.93400406837	537
Coq.MSets.MSetGenTree.Props.empty_spec	40	7	synth with cache (only 1: firstorder).	0.0607469081879	8
Coq.MSets.MSetGenTree.Props.empty_ok	40	0	synth with cache (only 1: auto).	0.0518019199371	1
Coq.MSets.MSetGenTree.Props.is_empty_spec	40	5.0	synth with cache (only 1: fix even_spec 1; only 1: auto).	0.072662115097	7
Coq.MSets.MSetGenTree.Props.mem_spec	40	1.14	synth with cache (only 1: fix odd_spec 1; only 1: auto).	11.6474270821	1513
Coq.MSets.MSetGenTree.Props.min_elt_spec1	40
Coq.MSets.MSetGenTree.Props.min_elt_spec2	40
Coq.MSets.MSetGenTree.Props.min_elt_spec3	40
Coq.MSets.MSetGenTree.Props.max_elt_spec1	40
Coq.MSets.MSetGenTree.Props.max_elt_spec2	40
Coq.MSets.MSetGenTree.Props.max_elt_spec3	40
Coq.MSets.MSetGenTree.Props.choose_spec1	40
Coq.MSets.MSetGenTree.Props.choose_spec2	40
Coq.MSets.MSetGenTree.Props.choose_spec3	40
Coq.MSets.MSetGenTree.Props.elements_spec1'	40
Coq.MSets.MSetGenTree.Props.elements_spec1	40
Coq.MSets.MSetGenTree.Props.elements_spec2'	40
Coq.MSets.MSetGenTree.Props.elements_spec2	40
Coq.MSets.MSetGenTree.Props.elements_spec2w	40
Coq.MSets.MSetGenTree.Props.elements_aux_cardinal	40
Coq.MSets.MSetGenTree.Props.elements_cardinal	40	1.21	synth with cache (only 1: fix even_spec 1; only 1: auto).	25.5609931946	2916
Coq.MSets.MSetGenTree.Props.elements_app	40
Coq.MSets.MSetGenTree.Props.elements_node	40
Coq.MSets.MSetGenTree.Props.rev_elements_app	40
Coq.MSets.MSetGenTree.Props.rev_elements_node	40
Coq.MSets.MSetGenTree.Props.rev_elements_rev	40
Coq.MSets.MSetGenTree.Props.sorted_app_inv	40
Coq.MSets.MSetGenTree.Props.elements_sort_ok	40
Coq.MSets.MSetGenTree.Props.for_all_spec	40
Coq.MSets.MSetGenTree.Props.exists_spec	40
Coq.MSets.MSetGenTree.Props.fold_spec'	40
Coq.MSets.MSetGenTree.Props.fold_spec	40
Coq.MSets.MSetGenTree.Props.subsetl_spec	40
Coq.MSets.MSetGenTree.Props.subsetr_spec	40
Coq.MSets.MSetGenTree.Props.subset_spec	40	0.1.11.9	synth with cache (only 1: intros x y z; only 1: fix even_spec 1; only 1: intro H; only 1: auto).	15.0544960499	2848
Coq.MSets.MSetGenTree.Props.eq_equiv	40
Coq.MSets.MSetGenTree.Props.eq_Leq	40
Coq.MSets.MSetGenTree.Props.lt_strorder	40
Coq.MSets.MSetGenTree.Props.lt_compat	40
Coq.MSets.MSetGenTree.Props.flatten_e_elements	40
Coq.MSets.MSetGenTree.Props.cons_1	40
Coq.MSets.MSetGenTree.Props.compare_end_Cmp	40
Coq.MSets.MSetGenTree.Props.compare_more_Cmp	40
Coq.MSets.MSetGenTree.Props.compare_cont_Cmp	40
Coq.MSets.MSetGenTree.Props.compare_Cmp	40
Coq.MSets.MSetGenTree.Props.compare_spec	40
Coq.MSets.MSetGenTree.Props.equal_spec	40
Coq.MSets.MSetGenTree.Props.mindepth_maxdepth	40
Coq.MSets.MSetGenTree.Props.maxdepth_cardinal	40
Coq.MSets.MSetGenTree.Props.mindepth_cardinal	40
Coq.MSets.MSetGenTree.Props.maxdepth_log_cardinal	40
Coq.MSets.MSetGenTree.Props.mindepth_log_cardinal	40
Coq.MSets.MSetInterface.WRaw2SetsOn.In_compat	40
Coq.MSets.MSetInterface.WRaw2SetsOn.eq_equiv	40	3	synth with cache (only 1: firstorder).	0.0658621788025	4
Coq.MSets.MSetInterface.WRaw2SetsOn.eq_dec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.mem_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.equal_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.subset_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.empty_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.is_empty_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.add_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.remove_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.singleton_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.union_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.inter_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.diff_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.fold_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.cardinal_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.filter_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.for_all_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.exists_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.partition_spec1	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.partition_spec2	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.elements_spec1	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.elements_spec2w	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.choose_spec1	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.choose_spec2	40
Coq.MSets.MSetInterface.Raw2SetsOn.lt_strorder	40
Coq.MSets.MSetInterface.Raw2SetsOn.lt_compat	40
Coq.MSets.MSetInterface.Raw2SetsOn.Spec.compare_spec	40
Coq.MSets.MSetInterface.Raw2SetsOn.Spec.elements_spec2	40
Coq.MSets.MSetInterface.Raw2SetsOn.Spec.min_elt_spec1	40
Coq.MSets.MSetInterface.Raw2SetsOn.Spec.min_elt_spec2	40
Coq.MSets.MSetInterface.Raw2SetsOn.Spec.min_elt_spec3	40
Coq.MSets.MSetInterface.Raw2SetsOn.Spec.max_elt_spec1	40
Coq.MSets.MSetInterface.Raw2SetsOn.Spec.max_elt_spec2	40
Coq.MSets.MSetInterface.Raw2SetsOn.Spec.max_elt_spec3	40
Coq.MSets.MSetInterface.Raw2SetsOn.Spec.choose_spec3	40
Coq.MSets.MSetInterface.MakeSetOrdering.eq_equiv	40	8	synth with cache (only 1: firstorder).	0.0681960582733	9
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_0	40
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_1	40
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_2	40
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_3	40
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_4	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_compat	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_strorder	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_empty_r	40	4	synth with cache (only 1: firstorder).	0.0688261985779	5
Coq.MSets.MSetInterface.MakeSetOrdering.lt_empty_l	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_add_lt	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_add_eq	40
Coq.MSets.MSetInterface.MakeListOrdering.lt_strorder	40
Coq.MSets.MSetInterface.MakeListOrdering.lt_compat'	40
Coq.MSets.MSetInterface.MakeListOrdering.eq_cons	40
Coq.MSets.MSetInterface.MakeListOrdering.cons_CompSpec	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.In_In	40	0	synth with cache (only 1: intuition).	0.104828119278	1
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Subset_Included	40	0	synth with cache (only 1: intuition).	0.099907875061	1
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Equal_Same_set	40	10.4	synth with cache (only 1: compute; only 1: firstorder).	10.8135240078	791
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.empty_Empty_Set	40	0.11.1.4	synth with cache (only 1: red; only 1: intuition; only 1: vm_compute; only 1: Dec.fsetdec).	4.6959900856	452
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Empty_Empty_set	40	14.2	synth with cache (only 1: red; only 1: firstorder).	7.94873404503	756
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.singleton_Singleton	40	3.1.12	synth with cache (only 1: unfold Same_set, Included, mkEns, In; only 1: intuition; only 1: Dec.fsetdec).	9.48997879028	906
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.union_Union	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.inter_Intersection	40	0.0.0.0.0.0.2.1.0.0.3.1	synth with cache (only 1: unfold Same_set, Included, mkEns, In; only 1: split; only 1: intro; only 1: set_iff; only 1: inversion 1; only 1: constructor 1; only 1: auto; only 1: auto; only 1: intro; only 1: set_iff; only 1: inversion 1; only 1: intuition).	17.8440759182	1211
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.add_Add	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Add_Add	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.remove_Subtract	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.mkEns_Finite	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.mkEns_cardinal	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Ens_to_MSet	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.In_compat	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.mem_spec	40	1.11	synth with cache (only 1: fix odd_spec 1; only 1: auto).	4.98732089996	314
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.isok_iff	40	1.3	synth with cache (only 1: fix even_spec 1; only 1: auto).	0.068941116333	6
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.isok_Ok	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.add_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.add_ok	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.remove_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.remove_ok	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.singleton_ok	40	2	synth with cache (only 1: firstorder).	0.0687968730927	3
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.singleton_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.empty_ok	40	5	synth with cache (only 1: constructors).	0.109929084778	13
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.empty_spec	40	1.1.9.1	synth with cache (only 1: unfold empty; only 1: intro; only 1: intro; only 1: inv).	11.9637739658	186
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.is_empty_spec	40	4.3	synth with cache (only 1: fix even_spec 1; only 1: auto).	0.0736598968506	9
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.elements_spec1	40	0.0.0	synth with cache (only 1: split; only 1: auto; only 1: auto).	0.147907018661	3
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.elements_spec2w	40	0	synth with cache (only 1: auto).	0.067615032196	1
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.fold_spec	40	0	synth with cache (only 1: auto).	0.0646150112152	1
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.union_ok	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.union_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.inter_ok	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.inter_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.diff_ok	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.diff_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.subset_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.equal_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.choose_spec1	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.choose_spec2	40	4.6.6	synth with cache (only 1: destruct s; only 1: easy; only 1: easy).	21.6719889641	1458
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.cardinal_spec	40	1	synth with cache (only 1: auto).	0.0571839809418	2
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.filter_spec'	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.filter_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.filter_ok	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.for_all_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.exists_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_spec1	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_spec2	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_ok1'	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_ok2'	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_ok1	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_ok2	40
Coq.MSets.MSetList.MakeRaw.ForNotations.inf_iff	40	1.2.5	synth with cache (only 1: intro H; only 1: fix even_spec 1; only 1: auto).	1.00058603287	90
Coq.MSets.MSetList.MakeRaw.ForNotations.isok_iff	40
Coq.MSets.MSetList.MakeRaw.ForNotations.isok_Ok	40	0	synth with cache (only 1: auto).	0.053475856781	1
Coq.MSets.MSetList.MakeRaw.ForNotations.mem_spec	40	1.12	synth with cache (only 1: fix odd_spec 1; only 1: auto).	3.44518399239	401
Coq.MSets.MSetList.MakeRaw.ForNotations.add_inf	40	1.22	synth with cache (only 1: fix gcd_greatest 1; only 1: auto).	10.3075990677	1860
Coq.MSets.MSetList.MakeRaw.ForNotations.add_ok	40
Coq.MSets.MSetList.MakeRaw.ForNotations.add_spec	40
Coq.MSets.MSetList.MakeRaw.ForNotations.remove_inf	40
Coq.MSets.MSetList.MakeRaw.ForNotations.remove_ok	40
Coq.MSets.MSetList.MakeRaw.ForNotations.remove_spec	40
Coq.MSets.MSetList.MakeRaw.ForNotations.singleton_ok	40	0	synth with cache (only 1: auto).	0.0654890537262	1
Coq.MSets.MSetList.MakeRaw.ForNotations.singleton_spec	40
Coq.MSets.MSetList.MakeRaw.ForNotations.union_inf	40
Coq.MSets.MSetList.MakeRaw.ForNotations.union_ok	40
Coq.MSets.MSetList.MakeRaw.ForNotations.union_spec	40
Coq.MSets.MSetList.MakeRaw.ForNotations.inter_inf	40
Coq.MSets.MSetList.MakeRaw.ForNotations.inter_ok	40
Coq.MSets.MSetList.MakeRaw.ForNotations.inter_spec	40
Coq.MSets.MSetList.MakeRaw.ForNotations.diff_inf	40
Coq.MSets.MSetList.MakeRaw.ForNotations.diff_ok	40	0.1.1	synth with cache (only 1: repeat rewrite <- isok_iff; only 1: revert s s'; only 1: induction2).	0.802115917206	5
Coq.MSets.MSetList.MakeRaw.ForNotations.diff_spec	40
Coq.MSets.MSetList.MakeRaw.ForNotations.equal_spec	40	1.4.2.2	synth with cache (only 1: intros x Hs; only 1: intro H; only 1: fix odd_spec 1; only 1: auto).	3.28913283348	232
Coq.MSets.MSetList.MakeRaw.ForNotations.subset_spec	40	1.4.2.5	synth with cache (only 1: intros x Hs; only 1: intro H; only 1: fix odd_spec 1; only 1: auto).	15.6961839199	1721
Coq.MSets.MSetList.MakeRaw.ForNotations.empty_ok	40	0	synth with cache (only 1: auto).	0.0587141513824	1
Coq.MSets.MSetList.MakeRaw.ForNotations.empty_spec	40	10.10	synth with cache (only 1: repeat red; only 1: inversion 1).	2.64016509056	420
Coq.MSets.MSetList.MakeRaw.ForNotations.is_empty_spec	40	5.1	synth with cache (only 1: fix even_spec 1; only 1: auto).	0.0722329616547	8
Coq.MSets.MSetList.MakeRaw.ForNotations.elements_spec1	40	0.0.0	synth with cache (only 1: split; only 1: trivial; only 1: trivial).	0.133902072906	3
Coq.MSets.MSetList.MakeRaw.ForNotations.elements_spec2	40	0.15.3	synth with cache (only 1: firstorder; only 1: inv; only 1: auto).	5.27431917191	814
Coq.MSets.MSetList.MakeRaw.ForNotations.elements_spec2w	40	0.1.2	synth with cache (only 1: intro s; only 1: repeat rewrite <- isok_iff; only 1: auto).	0.142755031586	6
Coq.MSets.MSetList.MakeRaw.ForNotations.min_elt_spec1	40
Coq.MSets.MSetList.MakeRaw.ForNotations.min_elt_spec2	40
Coq.MSets.MSetList.MakeRaw.ForNotations.min_elt_spec3	40	2.0.6.7	synth with cache (only 1: destruct s; only 1: easy; only 1: simpl; only 1: inversion 1).	15.8466739655	1258
Coq.MSets.MSetList.MakeRaw.ForNotations.max_elt_spec1	40
Coq.MSets.MSetList.MakeRaw.ForNotations.max_elt_spec2	40
Coq.MSets.MSetList.MakeRaw.ForNotations.max_elt_spec3	40
Coq.MSets.MSetList.MakeRaw.ForNotations.choose_spec3	40
Coq.MSets.MSetList.MakeRaw.ForNotations.fold_spec	40	0	synth with cache (only 1: auto).	0.0643870830536	1
Coq.MSets.MSetList.MakeRaw.ForNotations.cardinal_spec	40	1	synth with cache (only 1: auto).	0.0620429515839	2
Coq.MSets.MSetList.MakeRaw.ForNotations.filter_inf	40
Coq.MSets.MSetList.MakeRaw.ForNotations.filter_ok	40
Coq.MSets.MSetList.MakeRaw.ForNotations.filter_spec	40
Coq.MSets.MSetList.MakeRaw.ForNotations.for_all_spec	40
Coq.MSets.MSetList.MakeRaw.ForNotations.exists_spec	40
Coq.MSets.MSetList.MakeRaw.ForNotations.partition_inf1	40
Coq.MSets.MSetList.MakeRaw.ForNotations.partition_inf2	40
Coq.MSets.MSetList.MakeRaw.ForNotations.partition_ok1	40
Coq.MSets.MSetList.MakeRaw.ForNotations.partition_ok2	40
Coq.MSets.MSetList.MakeRaw.ForNotations.partition_spec1	40
Coq.MSets.MSetList.MakeRaw.ForNotations.partition_spec2	40
Coq.MSets.MSetList.MakeRaw.In_compat	40	14.4	synth with cache (only 1: intros x x' Hxx' y y' Hyy'; only 1: now rewrite Hxx', Hyy').	8.6208820343	1264
Coq.MSets.MSetList.MakeRaw.lt_strorder	40
Coq.MSets.MSetList.MakeRaw.lt_compat	40
Coq.MSets.MSetList.MakeRaw.compare_spec_aux	40	0.2.17.4.2	synth with cache (only 1: let rec induction2 := let rec inv := let rec inv_ok := match goal with | H:Sorted X.lt (_ :: _) |- _ => inversion_clear H; inv_ok | H:Sorted X.lt nil |- _ => clear H; inv_ok | H:Sorted X.lt ?l |- _ => change (Ok l) in H; inv_ok | H:Ok _ |- _ => rewrite <- isok_iff in H; inv_ok | |- Ok _ => rewrite <- isok_iff | _ => idtac end in invlist InA; inv_ok; invlist HdRel in simple induction s; [ simpl; auto; try (solve [ intros; inv ]) | intros x l Hrec; simple induction s'; [ simpl; auto; try (solve [ intros; inv ]) | intros x' l' Hrec'; simpl; elim_compare x x'; intros; inv; auto ] ] in induction2; only 1: intro H; only 1: elim H; only 1: intuition; only 1: auto).	31.4630150795	4973
Coq.MSets.MSetList.MakeRaw.compare_spec	40
Coq.MSets.MSetList.MakeWithLeibniz.eq_leibniz_list	40
Coq.MSets.MSetList.MakeWithLeibniz.eq_leibniz	40
Coq.Floats.FloatAxioms.Prim2SF_inj	40
Coq.Floats.FloatAxioms.SF2Prim_inj	40
Coq.Floats.FloatLemmas.shift_value	40	0	synth with cache (only 1: reflexivity).	0.140537023544	1
Coq.Floats.FloatLemmas.frexp_spec	40
Coq.Floats.FloatLemmas.ldexp_spec	40
Coq.Relations.Operators_Properties.Properties.Clos_Refl_Trans.clos_rt_is_preorder	40
Coq.Relations.Operators_Properties.Properties.Clos_Refl_Trans.clos_rt_idempotent	40
Coq.Relations.Operators_Properties.Properties.Clos_Refl_Sym_Trans.clos_rt_clos_rst	40
Coq.Relations.Operators_Properties.Properties.Clos_Refl_Sym_Trans.clos_r_clos_rt	40	0.0.2.2	synth with cache (only 1: red; only 1: induction 1; only 1: auto with sets; only 1: auto with sets).	0.0265009403229	8
Coq.Relations.Operators_Properties.Properties.Clos_Refl_Sym_Trans.clos_rt_t	40
Coq.Relations.Operators_Properties.Properties.Clos_Refl_Sym_Trans.clos_rst_is_equiv	40	0.0.0.3.14.6.0.12	synth with cache (only 1: constructor; only 1: auto with sets; only 1: red; only 1: intros; only 1: apply rst_trans with y; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets).	30.2982740402	16662
Coq.Relations.Operators_Properties.Properties.Clos_Refl_Sym_Trans.clos_rst_idempotent	40	0.0.3.0.0.0.1.0	synth with cache (only 1: red; only 1: induction 1; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets; only 1: apply rst_trans with y; only 1: auto with sets; only 1: auto with sets).	0.524513959885	214
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_t1n_trans	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_trans_t1n	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_trans_t1n_iff	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_tn1_trans	40	0.0.4.0.0	synth with cache (only 1: induction 1; only 1: auto with sets; only 1: right with y; only 1: auto with sets; only 1: auto with sets).	0.0509071350098	18
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_trans_tn1	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_trans_tn1_iff	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt1n_step	40	2.0.8.11	synth with cache (only 1: intros; only 1: right with y; only 1: auto with sets; only 1: left).	0.306096076965	369
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rtn1_step	40	2.0.19.17.23	synth with cache (only 1: intro y0; only 1: intro H; only 1: right with y0; only 1: auto; only 1: constructor).	5.37638092041	12598
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt1n_rt	40	0.0.5.0.0	synth with cache (only 1: induction 1; only 1: auto with sets; only 1: apply rt_trans with y; only 1: auto with sets; only 1: auto with sets).	0.0402059555054	15
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt_rt1n	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt_rt1n_iff	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rtn1_rt	40	0.0.3.0.0	synth with cache (only 1: induction 1; only 1: auto with sets; only 1: constructor 3 with y; only 1: auto with sets; only 1: auto with sets).	0.0349509716034	8
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt_rtn1	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt_rtn1_iff	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_refl_trans_ind_left	40
Coq.Relations.Operators_Properties.Properties.Equivalences.rt1n_ind_right	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_refl_trans_ind_right	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst1n_rst	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst1n_trans	40	0.0.5.0.2	synth with cache (only 1: induction 1; only 1: auto; only 1: right with y; only 1: auto with sets; only 1: auto with sets).	0.237178087234	72
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst1n_sym	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst_rst1n	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst_rst1n_iff	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rstn1_rst	40	0.1.0.3.0.2.0.0	synth with cache (only 1: induction 1; only 1: auto with sets; only 1: constructor 4 with y; only 1: auto with sets; only 1: case H; only 1: auto with sets; only 1: constructor 3; only 1: auto with sets).	2.77988409996	816
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rstn1_trans	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rstn1_sym	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst_rstn1	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst_rstn1_iff	40
Coq.Relations.Operators_Properties.Properties.clos_trans_transp_permute	40
Coq.Relations.Relations.inverse_image_of_equivalence	40	7.4.10.7.2.1	synth with cache (only 1: induction 1; only 1: split; only 1: auto with sets; only 1: red; only 1: eauto; only 1: auto with sets).	9.22610712051	7860
Coq.Relations.Relations.inverse_image_of_eq	40	0.0.2.0.3.0.2.4	synth with cache (only 1: constructor 1; only 1: red; only 1: auto; only 1: induction 1; only 1: auto; only 1: red; only 1: induction 1; only 1: auto).	2.02669715881	651
Coq.Sets.Uniset.defs.leb_refl	40	3	synth with cache (only 1: destr_bool).	0.0199768543243	4
Coq.Sets.Uniset.defs.incl_left	40
Coq.Sets.Uniset.defs.incl_right	40	1.2.3	synth with cache (only 1: intros s1 s2 E a; only 1: elim (E a); only 1: auto).	0.0627150535583	21
Coq.Sets.Uniset.defs.seq_refl	40	1	synth with cache (only 1: auto).	0.017749786377	2
Coq.Sets.Uniset.defs.seq_trans	40
Coq.Sets.Uniset.defs.seq_sym	40	2	synth with cache (only 1: auto).	0.0182747840881	3
Coq.Sets.Uniset.defs.union_empty_left	40	0	synth with cache (only 1: auto).	0.0181229114532	1
Coq.Sets.Uniset.defs.union_empty_right	40	9.5.0	synth with cache (only 1: unfold seq; only 1: destr_bool; only 1: intuition).	2.02771711349	1031
Coq.Sets.Uniset.defs.union_comm	40	11.5.3	synth with cache (only 1: unfold seq; only 1: destr_bool; only 1: intuition).	7.55927109718	3464
Coq.Sets.Uniset.defs.union_ass	40	2.0.0.0.0.0.4	synth with cache (only 1: destruct x; only 1: unfold seq; only 1: unfold charac; only 1: unfold union; only 1: unfold charac; only 1: destr_bool; only 1: auto with bool).	2.02039289474	515
Coq.Sets.Uniset.defs.seq_left	40	0.1.3.0.3.2.0.0	synth with cache (only 1: unfold seq; only 1: destruct x; only 1: destruct y; only 1: destruct z; only 1: simpl; only 1: intros; only 1: rewrite H; only 1: auto).	7.10017299652	2160
Coq.Sets.Uniset.defs.seq_right	40	1.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold seq; only 1: unfold union; only 1: unfold charac; only 1: destruct x; only 1: destruct y; only 1: destruct z; only 1: intros; only 1: elim H; only 1: auto).	0.091500043869	10
Coq.Sets.Uniset.defs.union_rotate	40
Coq.Sets.Uniset.defs.seq_congr	40
Coq.Sets.Uniset.defs.union_perm_left	40
Coq.Sets.Uniset.defs.uniset_twist1	40
Coq.Sets.Uniset.defs.uniset_twist2	40
Coq.Sets.Uniset.defs.treesort_twist1	40
Coq.Sets.Uniset.defs.treesort_twist2	40	6.1.0.1.1.0.2.1	synth with cache (only 1: intros; only 1: apply seq_trans with (union x (union (union y z) t)); only 1: auto; only 1: apply seq_trans with (union (union x (union y z)) t); only 1: apply seq_sym; only 1: auto; only 1: apply seq_left; only 1: apply union_perm_left).	27.6452960968	6169
Coq.Sets.Multiset.multiset_defs.meq_refl	40	4	synth with cache (only 1: congruence).	0.169810056686	25
Coq.Sets.Multiset.multiset_defs.meq_trans	40	11	synth with cache (only 1: congruence).	1.75792789459	179
Coq.Sets.Multiset.multiset_defs.meq_sym	40	0.2.3	synth with cache (only 1: destruct x; only 1: unfold meq; only 1: auto).	0.102161884308	8
Coq.Sets.Multiset.multiset_defs.munion_empty_left	40	0.1.0	synth with cache (only 1: destruct x; only 1: unfold meq; only 1: reflexivity).	0.100071907043	4
Coq.Sets.Multiset.multiset_defs.munion_empty_right	40	1.0.0.0	synth with cache (only 1: unfold meq; only 1: unfold munion; only 1: simpl; only 1: auto).	0.119875907898	5
Coq.Sets.Multiset.multiset_defs.munion_comm	40	12.3.0	synth with cache (only 1: unfold meq; only 1: simpl; only 1: intuition).	16.8220458031	1890
Coq.Sets.Multiset.multiset_defs.munion_ass	40	0.2.0.3.0.0	synth with cache (only 1: unfold meq; only 1: unfold munion; only 1: simpl; only 1: destruct x; only 1: destruct y; only 1: auto with arith).	1.73319506645	146
Coq.Sets.Multiset.multiset_defs.meq_left	40	0.0.7.0	synth with cache (only 1: unfold meq; only 1: simpl; only 1: destruct x; only 1: auto).	2.83196592331	141
Coq.Sets.Multiset.multiset_defs.meq_right	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold meq; only 1: unfold munion; only 1: unfold multiplicity; only 1: destruct x; only 1: destruct y; only 1: destruct z; only 1: intros; only 1: elim H; only 1: auto with arith).	0.26673913002	9
Coq.Sets.Multiset.multiset_defs.munion_rotate	40
Coq.Sets.Multiset.multiset_defs.meq_congr	40	2.0.1.4.0	synth with cache (only 1: unfold meq; only 1: unfold munion; only 1: unfold multiplicity; only 1: destruct x; only 1: auto).	4.38081598282	283
Coq.Sets.Multiset.multiset_defs.munion_perm_left	40
Coq.Sets.Multiset.multiset_defs.multiset_twist1	40
Coq.Sets.Multiset.multiset_defs.multiset_twist2	40
Coq.Sets.Multiset.multiset_defs.treesort_twist1	40
Coq.Sets.Multiset.multiset_defs.treesort_twist2	40
Coq.Sets.Multiset.multiset_defs.meq_singleton	40
Coq.Sets.Integers.Integers_sect.le_reflexive	40	1	synth with cache (only 1: auto with sets).	0.0840308666229	2
Coq.Sets.Integers.Integers_sect.le_antisym	40	1.2	synth with cache (only 1: red; only 1: PeanoNat.Nat.order).	0.202097892761	13
Coq.Sets.Integers.Integers_sect.le_trans	40	4.2	synth with cache (only 1: red; only 1: PeanoNat.Nat.order).	0.306546926498	21
Coq.Sets.Integers.Integers_sect.le_Order	40	1.1.5.2.6	synth with cache (only 1: split; only 1: auto with sets; only 1: exact PeanoNat.Nat.le_trans; only 1: red; only 1: PeanoNat.Nat.order).	10.5616409779	955
Coq.Sets.Integers.Integers_sect.triv_nat	40	3.1	synth with cache (only 1: red; only 1: split).	0.146764993668	11
Coq.Sets.Integers.Integers_sect.nat_po	40
Coq.Sets.Integers.Integers_sect.le_total_order	40
Coq.Sets.Integers.Integers_sect.Finite_subset_has_lub	40
Coq.Sets.Integers.Integers_sect.Integers_has_no_ub	40
Coq.Sets.Integers.Integers_sect.Integers_infinite	40
Coq.Sets.Relations_1_facts.Rsym_imp_notRsym	40	0.39.3.4	synth with cache (only 1: intros; only 1: intro x; only 1: red; only 1: auto).	3.41926503181	8089
Coq.Sets.Relations_1_facts.Equiv_from_preorder	40
Coq.Sets.Relations_1_facts.Equiv_from_order	40	1.0.0.0.0.0.0.1	synth with cache (only 1: intros U R H'; only 1: elim H'; only 1: elim H'; only 1: elim H'; only 1: elim H'; only 1: elim H'; only 1: elim H'; only 1: auto  10 with sets).	0.0755569934845	11
Coq.Sets.Relations_1_facts.contains_is_preorder	40	1	synth with cache (only 1: auto  10 with sets).	0.0174119472504	2
Coq.Sets.Relations_1_facts.same_relation_is_equivalence	40
Coq.Sets.Relations_1_facts.cong_reflexive_same_relation	40	1.4.9	synth with cache (only 1: intro x; only 1: destruct 1; only 1: auto  10 with sets).	0.664432048798	371
Coq.Sets.Relations_1_facts.cong_symmetric_same_relation	40	1.1	synth with cache (only 1: unfold same_relation; only 1: intuition).	0.025319814682	4
Coq.Sets.Relations_1_facts.cong_antisymmetric_same_relation	40	1.3.0.1	synth with cache (only 1: compute; only 1: intros; only 1: elim H; only 1: auto  10 with sets).	0.0362920761108	9
Coq.Sets.Relations_1_facts.cong_transitive_same_relation	40
Coq.Sets.Relations_2_facts.Rstar_reflexive	40	1	synth with cache (only 1: auto  10 with sets).	0.0147609710693	2
Coq.Sets.Relations_2_facts.Rplus_contains_R	40	1	synth with cache (only 1: auto  10 with sets).	0.0152249336243	2
Coq.Sets.Relations_2_facts.Rstar_contains_R	40
Coq.Sets.Relations_2_facts.Rstar_contains_Rplus	40	0.0.3.0.0.1.14.0.2	synth with cache (only 1: intros U R; only 1: red; only 1: induction 1; only 1: apply Rstar_n with y; only 1: auto with sets; only 1: auto with sets; only 1: apply Rstar_n with y; only 1: auto  10 with sets; only 1: auto  10 with sets).	6.20811390877	6417
Coq.Sets.Relations_2_facts.Rstar_transitive	40
Coq.Sets.Relations_2_facts.Rstar_cases	40
Coq.Sets.Relations_2_facts.Rstar_equiv_Rstar1	40
Coq.Sets.Relations_2_facts.Rsym_imp_Rstarsym	40
Coq.Sets.Relations_2_facts.Sstar_contains_Rstar	40
Coq.Sets.Relations_2_facts.star_monotone	40	0.0.3.2.0.2.1.0	synth with cache (only 1: compute; only 1: intros U R S H' x y H'0; only 1: elim H'0; only 1: auto with sets; only 1: intros x0 y0 z H'1 H'2 H'3; only 1: apply Rstar_n with y0; only 1: auto with sets; only 1: auto with sets).	5.37518692017	1925
Coq.Sets.Relations_2_facts.RstarRplus_RRstar	40
Coq.Sets.Relations_2_facts.Lemma1	40
Coq.Sets.Permut.Axiomatisation.cong_congr	40
Coq.Sets.Permut.Axiomatisation.comm_right	40	1	synth with cache (only 1: auto).	0.0165481567383	2
Coq.Sets.Permut.Axiomatisation.comm_left	40	1.1	synth with cache (only 1: intros; only 1: auto).	0.0224809646606	4
Coq.Sets.Permut.Axiomatisation.perm_right	40
Coq.Sets.Permut.Axiomatisation.perm_left	40
Coq.Sets.Permut.Axiomatisation.op_rotate	40	1.7.3.0.1	synth with cache (only 1: intros; only 1: apply cong_sym; only 1: apply cong_trans with (op (op x y) z); only 1: apply op_comm; only 1: apply op_ass).	10.2538030148	3200
Coq.Sets.Permut.Axiomatisation.twist	40
Coq.Sets.Image.Image.Im_def	40	0.0.24.1.1	synth with cache (only 1: intuition; only 1: red; only 1: exists x; only 1: auto with sets; only 1: auto with sets).	26.8607978821	6855
Coq.Sets.Image.Image.Im_add	40
Coq.Sets.Image.Image.image_empty	40	0.6.2.6.1.4.1	synth with cache (only 1: intuition; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x H; only 1: inversion H; only 1: inversion H0; only 1: auto with sets).	32.1569218636	4128
Coq.Sets.Image.Image.finite_image	40
Coq.Sets.Image.Image.Im_inv	40	7.9.8	synth with cache (only 1: intros EM R H; only 1: induction 1; only 1: firstorder).	12.4692680836	2611
Coq.Sets.Image.Image.not_injective_elim	40
Coq.Sets.Image.Image.cardinal_Im_intro	40
Coq.Sets.Image.Image.In_Image_elim	40
Coq.Sets.Image.Image.injective_preserves_cardinal	40
Coq.Sets.Image.Image.cardinal_decreases	40
Coq.Sets.Image.Image.Pigeonhole	40
Coq.Sets.Image.Image.Pigeonhole_principle	40
Coq.Sets.Infinite_sets.Infinite_sets.make_new_approximant	40
Coq.Sets.Infinite_sets.Infinite_sets.approximants_grow	40
Coq.Sets.Infinite_sets.Infinite_sets.approximants_grow'	40
Coq.Sets.Infinite_sets.Infinite_sets.approximant_can_be_any_size	40
Coq.Sets.Infinite_sets.Infinite_sets.Image_set_continuous	40
Coq.Sets.Infinite_sets.Infinite_sets.Image_set_continuous'	40
Coq.Sets.Infinite_sets.Infinite_sets.Pigeonhole_bis	40
Coq.Sets.Infinite_sets.Infinite_sets.Pigeonhole_ter	40
Coq.Sets.Powerset.The_power_set_partial_order.Empty_set_minimal	40	15.4.0	synth with cache (only 1: red; only 1: intuition; only 1: elim H).	1.20804691315	1477
Coq.Sets.Powerset.The_power_set_partial_order.Power_set_Inhabited	40	3.121.49.18	synth with cache (only 1: compute; only 1: intro x; only 1: exists x; only 1: intuition).	38.7024738789	278838
Coq.Sets.Powerset.The_power_set_partial_order.Inclusion_is_an_order	40	21	synth with cache (only 1: auto  10 with sets).	1.46450209618	416
Coq.Sets.Powerset.The_power_set_partial_order.Inclusion_is_transitive	40	2.1.0.0	synth with cache (only 1: red; only 1: red; only 1: intro X; only 1: auto).	0.0929119586945	27
Coq.Sets.Powerset.The_power_set_partial_order.Power_set_PO	40
Coq.Sets.Powerset.The_power_set_partial_order.Strict_Rel_is_Strict_Included	40	1.0	synth with cache (only 1: red; only 1: auto with sets).	0.023766040802	3
Coq.Sets.Powerset.The_power_set_partial_order.Strict_inclusion_is_transitive_with_inclusion	40
Coq.Sets.Powerset.The_power_set_partial_order.Strict_inclusion_is_transitive_with_inclusion_left	40
Coq.Sets.Powerset.The_power_set_partial_order.Strict_inclusion_is_transitive	40
Coq.Sets.Powerset.The_power_set_partial_order.Empty_set_is_Bottom	40
Coq.Sets.Powerset.The_power_set_partial_order.Union_minimal	40	1.1.0.0.2.10	synth with cache (only 1: intuition; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: auto with sets; only 1: auto with sets).	31.0713629723	8371
Coq.Sets.Powerset.The_power_set_partial_order.Intersection_maximal	40	0.1.0.0	synth with cache (only 1: intros a b X H' H'0; only 1: red; only 1: intros x H'1; only 1: auto with sets).	0.0392510890961	5
Coq.Sets.Powerset.The_power_set_partial_order.Union_increases_l	40	0	synth with cache (only 1: auto with sets).	0.0182769298553	1
Coq.Sets.Powerset.The_power_set_partial_order.Union_increases_r	40	0	synth with cache (only 1: auto with sets).	0.0175611972809	1
Coq.Sets.Powerset.The_power_set_partial_order.Intersection_decreases_l	40	0.0.0.1.1.3	synth with cache (only 1: intro A; only 1: intro X; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: auto with sets).	0.355630874634	83
Coq.Sets.Powerset.The_power_set_partial_order.Intersection_decreases_r	40	0.0.0.0.1	synth with cache (only 1: intros a b; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: auto with sets).	0.0503940582275	6
Coq.Sets.Powerset.The_power_set_partial_order.Union_is_Lub	40
Coq.Sets.Powerset.The_power_set_partial_order.Intersection_is_Glb	40
Coq.Sets.Classical_sets.Ensembles_classical.not_included_empty_Inhabited	40
Coq.Sets.Classical_sets.Ensembles_classical.not_empty_Inhabited	40
Coq.Sets.Classical_sets.Ensembles_classical.Inhabited_Setminus	40
Coq.Sets.Classical_sets.Ensembles_classical.Strict_super_set_contains_new_element	40
Coq.Sets.Classical_sets.Ensembles_classical.Subtract_intro	40	1.4	synth with cache (only 1: red; only 1: auto  7 using Inhabited_Setminus with sets).	0.386350154877	7
Coq.Sets.Classical_sets.Ensembles_classical.Subtract_inv	40	0.8.2	synth with cache (only 1: intros A x y H'; only 1: elim H'; only 1: auto with sets).	1.00989699364	163
Coq.Sets.Classical_sets.Ensembles_classical.Included_Strict_Included	40
Coq.Sets.Classical_sets.Ensembles_classical.Strict_Included_inv	40
Coq.Sets.Classical_sets.Ensembles_classical.not_SIncl_empty	40	0.0.0	synth with cache (only 1: red; only 1: destruct 1; only 1: auto with sets).	0.300446987152	3
Coq.Sets.Classical_sets.Ensembles_classical.Complement_Complement	40
Coq.Sets.Relations_3_facts.Rstar_imp_coherent	40	0.1.3.7.0	synth with cache (only 1: intros U R; only 1: red; only 1: intros x0 a H'1; only 1: exists a; only 1: auto with sets).	11.0070672035	4287
Coq.Sets.Relations_3_facts.coherent_symmetric	40
Coq.Sets.Relations_3_facts.Strong_confluence	40
Coq.Sets.Relations_3_facts.Strong_confluence_direct	40
Coq.Sets.Relations_3_facts.Noetherian_contains_Noetherian	40
Coq.Sets.Relations_3_facts.Newman	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.sincl_add_x	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.incl_soustr_in	40	4.4.1.1	synth with cache (only 1: red; only 1: red; only 1: intros A x y H'; only 1: firstorder).	7.51788902283	647
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.incl_soustr	40	3.2.0.1	synth with cache (only 1: intros A B x H'; only 1: red; only 1: red; only 1: firstorder).	1.20876789093	24
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.incl_soustr_add_l	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.incl_soustr_add_r	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.add_soustr_2	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.add_soustr_1	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.add_soustr_xy	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.incl_st_add_soustr	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.Sub_Add_new	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.Simplify_add	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.Included_Add	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.setcover_inv	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.Add_covers	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.covers_Add	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.covers_is_Add	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.Singleton_atomic	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.less_than_singleton	40
Coq.Sets.Partial_Order.Partial_order_facts.Strict_Rel_Transitive_with_Rel	40
Coq.Sets.Partial_Order.Partial_order_facts.Strict_Rel_Transitive_with_Rel_left	40
Coq.Sets.Partial_Order.Partial_order_facts.Strict_Rel_Transitive	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Empty_set_zero	40	25	synth with cache (only 1: auto  10 with sets).	1.08185601234	1014
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Empty_set_zero_right	40	3	synth with cache (only 1: auto  6 with sets).	0.0260148048401	4
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Empty_set_zero'	40	4.16.6	synth with cache (only 1: intro A; only 1: unfold Add at 1; only 1: auto  6 with sets).	1.91144800186	1432
Coq.Sets.Powerset_facts.Sets_as_an_algebra.less_than_empty	40	0	synth with cache (only 1: auto with sets).	0.0202069282532	1
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_commutative	40	0	synth with cache (only 1: auto with sets).	0.0218801498413	1
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_associative	40	28.3.4	synth with cache (only 1: intro X; only 1: intro H'; only 1: auto  10 with sets).	14.1161859035	8428
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_idempotent	40	4	synth with cache (only 1: auto  6 with sets).	0.0420517921448	12
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_absorbs	40	3	synth with cache (only 1: auto  9 with sets).	0.0744190216064	4
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Couple_as_union	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Triple_as_union	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Triple_as_Couple	40	0.0.0.2.2.1.0.0.2.2.1.3.3.3	synth with cache (only 1: intros x y; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: auto with sets; only 1: auto with sets; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets).	22.8138480186	10321
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Triple_as_Couple_Singleton	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Intersection_commutative	40	0.2.3.0.2.3.3.7.7	synth with cache (only 1: intros x2 H'1; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x H'; only 1: elim H'; only 1: auto with sets; only 1: intros x H'; only 1: elim H'; only 1: auto with sets).	16.502393961	8321
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Distributivity	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Distributivity_l	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Distributivity'	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_add	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Non_disjoint_union	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Non_disjoint_union'	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.singlx	40	0.2.1.1	synth with cache (only 1: intros x y H'; only 1: elim H'; only 1: destruct 1; only 1: auto with sets).	0.0541560649872	8
Coq.Sets.Powerset_facts.Sets_as_an_algebra.incl_add	40	0.10	synth with cache (only 1: unfold Add; only 1: auto with sets).	1.44713997841	275
Coq.Sets.Powerset_facts.Sets_as_an_algebra.incl_add_x	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Add_commutative	40	1.4	synth with cache (only 1: unfold Add; only 1: auto  9 with sets).	0.198562145233	17
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Add_commutative'	40	12.2.5.1.4.3	synth with cache (only 1: intro A; only 1: intros x y z; only 1: unfold Add; only 1: apply Extensionality_Ensembles; only 1: red; only 1: auto  10 with sets).	38.647206068	14444
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Add_distributes	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.setcover_intro	40	0	synth with cache (only 1: auto with sets).	0.0214140415192	1
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Disjoint_Intersection	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Intersection_Empty_set_l	40	0	synth with cache (only 1: auto with sets).	0.0239131450653	1
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Intersection_Empty_set_r	40	0	synth with cache (only 1: auto with sets).	0.0236420631409	1
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Seminus_Empty_set_l	40	0.0.7.2.1.3.2.1	synth with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: auto with sets; only 1: auto with sets).	9.35372591019	3424
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Seminus_Empty_set_r	40	0.0.1.1.1.1.1	synth with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x H1; only 1: destruct H1; only 1: auto with sets; only 1: auto with sets).	0.575886964798	95
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Setminus_Union_l	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Setminus_Union_r	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Setminus_Disjoint_noop	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Setminus_Included_empty	40	1.0.0.3.1.5.0.0.0	synth with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x H1; only 1: unfold In in *; only 1: inversion_clear H1; only 1: exfalso; only 1: intuition; only 1: intuition).	5.75440502167	1890
Coq.Sets.Constructive_sets.Ensembles_facts.Extension	40	0.4.0.4.14.6	synth with cache (only 1: destruct 1; only 1: constructor; only 1: intro x; only 1: auto; only 1: intro x; only 1: auto).	2.77480387688	4143
Coq.Sets.Constructive_sets.Ensembles_facts.Noone_in_empty	40	15	synth with cache (only 1: destruct 1).	0.150674104691	154
Coq.Sets.Constructive_sets.Ensembles_facts.Included_Empty	40	2.2.2	synth with cache (only 1: red; only 1: red; only 1: destruct 1).	0.0269861221313	9
Coq.Sets.Constructive_sets.Ensembles_facts.Add_intro1	40	0.24.3	synth with cache (only 1: intros x H; only 1: constructor; only 1: auto).	10.06813097	10084
Coq.Sets.Constructive_sets.Ensembles_facts.Add_intro2	40	2.2	synth with cache (only 1: unfold Add at 1; only 1: auto with sets).	0.0221788883209	6
Coq.Sets.Constructive_sets.Ensembles_facts.Inhabited_add	40
Coq.Sets.Constructive_sets.Ensembles_facts.Inhabited_not_empty	40
Coq.Sets.Constructive_sets.Ensembles_facts.Add_not_Empty	40
Coq.Sets.Constructive_sets.Ensembles_facts.not_Empty_Add	40	1.5.5.9.2.1	synth with cache (only 1: intros A x; only 1: red; only 1: intro H'1; only 1: elim (Noone_in_empty x); only 1: rewrite H'1; only 1: auto using Add_intro2 with sets).	6.87500905991	7442
Coq.Sets.Constructive_sets.Ensembles_facts.Singleton_inv	40	0.4.4	synth with cache (only 1: intros B C H'; only 1: rewrite H'; only 1: exact eq_refl).	0.125068902969	53
Coq.Sets.Constructive_sets.Ensembles_facts.Singleton_intro	40	1.0.4	synth with cache (only 1: intros B C H'; only 1: rewrite H'; only 1: auto with sets).	0.0359580516815	16
Coq.Sets.Constructive_sets.Ensembles_facts.Union_inv	40	0.0.5.7	synth with cache (only 1: intros A x; only 1: destruct 1; only 1: auto with sets; only 1: auto with sets).	0.52738404274	321
Coq.Sets.Constructive_sets.Ensembles_facts.Add_inv	40	1.14.0.5.5	synth with cache (only 1: intros B C x H'; only 1: elim H'; only 1: auto with sets; only 1: destruct 1; only 1: auto with sets).	15.7407360077	13070
Coq.Sets.Constructive_sets.Ensembles_facts.Intersection_inv	40	0.0.0	synth with cache (only 1: intros B C x H'; only 1: elim H'; only 1: auto with sets).	0.066771030426	3
Coq.Sets.Constructive_sets.Ensembles_facts.Couple_inv	40	0.0.0.1	synth with cache (only 1: intros B C x H'; only 1: elim H'; only 1: auto with sets; only 1: auto with sets).	0.0346689224243	5
Coq.Sets.Constructive_sets.Ensembles_facts.Setminus_intro	40	0.0	synth with cache (only 1: intros B C x H'; only 1: auto with sets).	0.0224099159241	2
Coq.Sets.Constructive_sets.Ensembles_facts.Strict_Included_intro	40	1.1	synth with cache (only 1: intros B C H'; only 1: auto with sets).	0.0222311019897	4
Coq.Sets.Constructive_sets.Ensembles_facts.Strict_Included_strict	40	3.19.8	synth with cache (only 1: red; only 1: destruct 1; only 1: auto with sets).	1.87847113609	3266
Coq.Sets.Finite_sets_facts.Finite_sets_facts.finite_cardinal	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.cardinal_finite	40	0.0.29	synth with cache (only 1: induction 1; only 1: auto with sets; only 1: auto with sets).	14.71920681	3419
Coq.Sets.Finite_sets_facts.Finite_sets_facts.Add_preserves_Finite	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.Singleton_is_finite	40	0.26.6	synth with cache (only 1: intuition; only 1: rewrite <- (Empty_set_zero' U x); only 1: auto with sets).	18.2982239723	4224
Coq.Sets.Finite_sets_facts.Finite_sets_facts.Union_preserves_Finite	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.Finite_downward_closed	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.Intersection_preserves_finite	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.cardinalO_empty	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.inh_card_gt_O	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.card_soustr_1	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.cardinal_is_functional	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.cardinal_Empty	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.cardinal_unicity	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.card_Add_gen	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.incl_st_card_lt	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.incl_card_le	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.G_aux	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.Generalized_induction_on_finite_sets	40
Coq.Sets.Finite_sets.Ensembles_finis_facts.cardinal_invert	40
Coq.Sets.Finite_sets.Ensembles_finis_facts.cardinal_elim	40	0.0.9	synth with cache (only 1: induction 1; only 1: auto with sets; only 1: auto with sets).	0.175567150116	101