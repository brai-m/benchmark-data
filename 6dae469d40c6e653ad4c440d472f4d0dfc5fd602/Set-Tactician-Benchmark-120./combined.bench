coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.phi_sequence_prop	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P1	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P2	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Machin.atan_sub_correct	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P3	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_exists	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Machin.tech	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Machin.Machin_2_3	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P4	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RinvN_pos	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: apply Rinv_0_lt_compat; only 1: apply Rplus_le_lt_0_compat; only 1: apply pos_INR; only 1: apply Rlt_0_1).	0.042480	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.Machin.Machin_4_5_239	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis5.f_incr_implies_g_incr_interv	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Machin.Machin_2_3_7	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RinvN_cv	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis5.derivable_pt_id_interv	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.Riemann_integrable_ext	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P5	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold RiemannInt; only 1: destruct RiemannInt_exists; only 1: destruct RiemannInt_exists; only 1: eapply UL_sequence; only 1: apply u; only 1: apply RiemannInt_P4 with pr2 RinvN; only 1: apply RinvN_cv; only 1: apply RinvN_cv; only 1: assumption).	0.060875	10
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Ropp_div	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: unfold Rdiv; only 1: rewrite <- Ropp_mult_distr_l_reverse; only 1: reflexivity).	0.050283	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.NewtonInt.FTCN_step1	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.NewtonInt.FTC_Newton	120	0.0.0	synth with cache (only 1: intros; only 1: unfold NewtonInt; only 1: reflexivity).	0.053054	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.pos_half_prf	120	0	synth with cache (only 1: lra).	0.049419	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis5.pr_nu_var2_interv	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.NewtonInt.NewtonInt_P1	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.maxN	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Machin.PI_2_3_7_ineq	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.NewtonInt.NewtonInt_P2	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold NewtonInt; only 1: destruct NewtonInt_P1; only 1: clear o; only 1: apply Rminus_diag_eq; only 1: easy).	0.048835	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis5.leftinv_is_rightinv	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Boule_half_to_interval	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Boule; only 1: unfold pos_half; only 1: simpl; only 1: intros ?; only 1: intros ?; only 1: apply Rabs_def2 in H; only 1: destruct H; only 1: split; only 1: lra; only 1: lra).	0.143073	10
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.Heine_cor1	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.NewtonInt.NewtonInt_P3	120	0.0.0.0.0.0.0	synth with cache (only 1: unfold Newton_integrable; only 1: intros; only 1: elim X; only 1: intros ?; only 1: intros ?; only 1: exists x; only 1: tauto).	0.075704	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis5.leftinv_is_rightinv_interv	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.Heine_cor2	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.NewtonInt.NewtonInt_P4	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct pr; only 1: unfold NewtonInt; only 1: unfold NewtonInt_P3; only 1: simpl; only 1: ring).	0.144140	9
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.SubEqui_P1	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Boule_lt	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis5.IVT_interv_prelim0	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.SubEqui_P2	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Un_cv_ext	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.SubEqui_P3	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis5.IVT_interv_prelim1	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.SubEqui_P4	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.SubEqui_P5	120	0.0.0	synth with cache (only 1: intros; only 1: unfold SubEqui; only 1: apply SubEqui_P3).	0.046528	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.SubEqui_P6	120	0.0.0.0	synth with cache (only 1: intros; only 1: unfold SubEqui; only 1: apply SubEqui_P4; only 1: assumption).	0.049823	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis5.IVT_interv	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.SubEqui_P7	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.SubEqui_P8	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.SubEqui_P9	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply StepFun_P38; only 1: apply SubEqui_P7; only 1: apply SubEqui_P1; only 1: apply SubEqui_P2).	0.063807	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis5.f_interv_is_interv	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Alt_first_term_bound	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Alt_CVU	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P6	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.pow2_ge_0	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P7	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.pow2_abs	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.continuity_implies_RiemannInt	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.derivable_pt_tan	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: unfold derivable_pt; only 1: unfold tan; only 1: apply derivable_pt_div; only 1: reg; only 1: reg; only 1: apply Rgt_not_eq; only 1: apply cos_gt_0; only 1: rewrite <- Ropp_div; only 1: tauto; only 1: tauto).	0.096074	12
coq-tactician-stdlib.8.11.dev	Coq.Reals.NewtonInt.NewtonInt_P5	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.NewtonInt.antiderivative_P1	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.derive_pt_tan	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P8	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.derive_increasing_interv	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P9	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.NewtonInt.NewtonInt_P6	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis5.continuity_pt_recip_prelim	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis5.continuity_pt_recip_interv	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.plus_Rsqr_gt_0	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P10	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.NewtonInt.antiderivative_P2	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.PI2_lower_bound	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.NewtonInt.antiderivative_P3	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.NewtonInt.antiderivative_P4	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P11	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.NewtonInt.NewtonInt_P7	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.PI2_3_2	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.NewtonInt.NewtonInt_P8	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.PI2_1	120	0.0	synth with cache (only 1: pose proof PI2_3_2; only 1: lra).	0.048031	2
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.nsatz1.psos_r1b	120
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.nsatz1.psos_r1	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: setoid_rewrite H; only 1: cring).	0.093892	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.tan_increasing	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P12	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.tan_is_inj	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P13	120
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.nsatz1.nsatzR_diff	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P14	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis5.derivable_pt_lim_recip_interv	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.exists_atan_in_frame	120
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.nsatz1.P0Z_correct	120	0	synth with cache (only 1: trivial).	0.042996	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P15	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis5.derivable_pt_recip_interv_prelim0	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.NewtonInt.NewtonInt_P9	120
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.nsatz1.Rext	120	0.0.0.0	synth with cache (only 1: constructor; only 1: solve_proper; only 1: solve_proper; only 1: solve_proper).	0.108952	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P16	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.tan_1_gt_1	120
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.nsatz1.Rset	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.Rle_cv_lim	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis5.derivable_pt_recip_interv_prelim1	120
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.nsatz1.Rtheory	120
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.nsatz1.PolZadd_correct	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P17	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.frame_tan	120
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.nsatz1.PolZmul_correct	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.ub_opp	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite Ropp_div; only 1: apply Ropp_lt_contravar; only 1: assumption).	0.050424	5
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.nsatz1.R_power_theory	120	0.0.0.0.0	synth with cache (only 1: apply mkpow_th; only 1: unfold pow; only 1: intros; only 1: rewrite Nnat.N2Nat.id; only 1: reflexivity).	0.057553	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.pos_opp_lt	120	0.0	synth with cache (only 1: intros; only 1: lra).	0.050425	2
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.nsatz1.norm_correct	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.tech_opp_tan	120	0.0.0	synth with cache (only 1: intros; only 1: rewrite tan_neg; only 1: assumption).	0.044030	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P18	120
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.nsatz1.PolZeq_correct	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Rings_R.Rsth	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: constructor; only 1: constructor; only 1: unfold Symmetric; only 1: intros; only 1: subst; only 1: trivial; only 1: unfold Transitive; only 1: intros; only 1: subst; only 1: trivial).	0.052062	10
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis5.derivable_pt_recip_interv	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P19	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.pre_atan	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.atan_bound	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: unfold atan; only 1: destruct pre_atan; only 1: destruct a; only 1: clear H0; only 1: exact H).	0.059362	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.FTC_P1	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply continuity_implies_RiemannInt; only 1: assumption; only 1: intros; only 1: apply H0; only 1: elim H3; only 1: intros; only 1: split; only 1: assumption; only 1: apply Rle_trans with x; only 1: assumption; only 1: assumption).	0.069763	12
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis5.derive_pt_recip_interv_prelim0	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.atan_right_inv	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: unfold atan; only 1: destruct pre_atan; only 1: destruct a; only 1: clear H; only 1: exact H0).	0.091189	6
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Rings_R.Rri	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: constructor; only 1: apply Rsth; only 1: unfold respectful; only 1: unfold Proper; only 1: unfold equality; only 1: unfold eq_notation in *; only 1: intros; only 1: rewrite H; only 1: rewrite H0; only 1: reflexivity; only 1: unfold respectful; only 1: unfold Proper; only 1: unfold equality; only 1: unfold eq_notation in *; only 1: intros; only 1: rewrite H; only 1: rewrite H0; only 1: reflexivity; only 1: unfold respectful; only 1: unfold Proper; only 1: unfold equality; only 1: unfold eq_notation in *; only 1: intros; only 1: rewrite H; only 1: rewrite H0; only 1: reflexivity; only 1: unfold respectful; only 1: unfold Proper; only 1: unfold equality; only 1: unfold eq_notation in *; only 1: intros; only 1: rewrite H; only 1: reflexivity; only 1: exact Rplus_0_l; only 1: exact Rplus_comm; only 1: symmetry; only 1: apply Rplus_assoc; only 1: exact Rmult_1_l; only 1: exact Rmult_1_r; only 1: symmetry; only 1: apply Rmult_assoc; only 1: exact Rmult_plus_distr_r; only 1: intros; only 1: apply Rmult_plus_distr_l; only 1: unfold equality; only 1: unfold eq_notation in *; only 1: intros; only 1: reflexivity; only 1: exact Rplus_opp_r).	0.189205	49
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P20	120
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.nsatz1.mult_l_correct	120
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.nsatz1.compute_list_correct	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Rings_R.Rcri	120	0.0	synth with cache (only 1: red; only 1: exact Rmult_comm).	0.051321	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis5.derive_pt_recip_interv_prelim1_0	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.atan_opp	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Rings_R.R_one_zero	120	1	synth with cache (only 1: exact R1_neq_R0).	0.048273	3
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Rings_R.Rdi	120	0.0.0	synth with cache (only 1: constructor; only 1: exact Rmult_integral; only 1: exact R_one_zero).	0.047378	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis5.derive_pt_recip_interv_prelim1_1	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.derivable_pt_atan	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.atan_increasing	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis5.derive_pt_recip_interv	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.atan_0	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: apply tan_is_inj; only 1: apply atan_bound; only 1: pose proof PI_RGT_0; only 1: rewrite Ropp_div; only 1: split; only 1: lra; only 1: lra; only 1: rewrite atan_right_inv; only 1: rewrite tan_0; only 1: easy).	0.057122	10
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis5.ub_lt_2_pos	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: lra).	0.048848	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P21	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.atan_1	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis5.mkposreal_lb_ub	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.derive_pt_atan	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P22	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.derivable_pt_lim_atan	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Ratan_seq_decreasing	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P23	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P24	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Ratan_seq_converging	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.ps_atan_exists_01	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis5.derivable_pt_lim_CVU	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P25	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P26	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P27	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P28	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P29	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P30	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P31	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P32	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_P33	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.FTC_Riemann	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.RiemannInt_const_bound	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.Riemann_integrable_scal	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt.Riemann_integrable_Ropp	120
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.nsatz1.check_correct	120
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.Rsth	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: constructor; only 1: constructor; only 1: unfold Symmetric; only 1: intros; only 1: subst; only 1: trivial; only 1: unfold Transitive; only 1: intros; only 1: subst; only 1: trivial).	0.054382	10
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.Rri	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: constructor; only 1: apply Rsth; only 1: unfold respectful; only 1: unfold Proper; only 1: unfold equality; only 1: unfold eq_notation in *; only 1: intros; only 1: rewrite H; only 1: rewrite H0; only 1: reflexivity; only 1: unfold respectful; only 1: unfold Proper; only 1: unfold equality; only 1: unfold eq_notation in *; only 1: intros; only 1: rewrite H; only 1: rewrite H0; only 1: reflexivity; only 1: unfold respectful; only 1: unfold Proper; only 1: unfold equality; only 1: unfold eq_notation in *; only 1: intros; only 1: rewrite H; only 1: rewrite H0; only 1: reflexivity; only 1: unfold respectful; only 1: unfold Proper; only 1: unfold equality; only 1: unfold eq_notation in *; only 1: intros; only 1: rewrite H; only 1: reflexivity; only 1: exact Rplus_0_l; only 1: exact Rplus_comm; only 1: symmetry; only 1: apply Rplus_assoc; only 1: exact Rmult_1_l; only 1: exact Rmult_1_r; only 1: symmetry; only 1: apply Rmult_assoc; only 1: exact Rmult_plus_distr_r; only 1: intros; only 1: apply Rmult_plus_distr_l; only 1: unfold equality; only 1: unfold eq_notation in *; only 1: intros; only 1: reflexivity; only 1: exact Rplus_opp_r).	0.183848	49
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.R_one_zero	120	1	synth with cache (only 1: exact R1_neq_R0).	0.039634	3
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.Rcri	120	0.0	synth with cache (only 1: red; only 1: exact Rmult_comm).	0.052005	2
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.Rdi	120	0.0.0	synth with cache (only 1: constructor; only 1: exact Rmult_integral; only 1: exact R_one_zero).	0.049205	3
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.Qri	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: constructor; only 1: apply Q_Setoid; only 1: apply Qplus_comp; only 1: apply Qmult_comp; only 1: apply Qminus_comp; only 1: apply Qopp_comp; only 1: exact Qplus_0_l; only 1: exact Qplus_comm; only 1: apply Qplus_assoc; only 1: exact Qmult_1_l; only 1: exact Qmult_1_r; only 1: apply Qmult_assoc; only 1: apply Qmult_plus_distr_l; only 1: intros; only 1: apply Qmult_plus_distr_r; only 1: reflexivity; only 1: exact Qplus_opp_r).	0.098081	17
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.Q_one_zero	120	0	synth with cache (only 1: discriminate).	0.045953	1
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.Qcri	120	0.0	synth with cache (only 1: red; only 1: exact Qmult_comm).	0.038988	2
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.Qdi	120	0.0.0	synth with cache (only 1: constructor; only 1: exact Qmult_integral; only 1: exact Q_one_zero).	0.043903	3
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.Z_one_zero	120
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.Zcri	120	0.0	synth with cache (only 1: red; only 1: exact Z.mul_comm).	0.050308	2
coq-tactician-stdlib.8.11.dev	Coq.nsatz.Nsatz.Zdi	120	0.0.0	synth with cache (only 1: constructor; only 1: exact Zmult_integral; only 1: exact Z_one_zero).	0.052648	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.IZN_var	120	0.0.0	synth with cache (only 1: intros; only 1: apply Z_of_nat_complete_inf; only 1: Lia.lia).	0.052977	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.Nzorn	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P1	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold subdivision_val; only 1: destruct projT2; only 1: apply a0).	0.046224	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P2	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold adapted_couple; only 1: intros; only 1: decompose [ and ] H; only 1: clear H; only 1: split; only 1: assumption; only 1: split; only 1: rewrite H2; only 1: unfold Rmin; only 1: case Rle_dec; only 1: intros ?; only 1: case Rle_dec; only 1: intros ?; only 1: apply Rle_antisym; only 1: assumption; only 1: assumption; only 1: intros ?; only 1: reflexivity; only 1: intros ?; only 1: case Rle_dec; only 1: intros ?; only 1: reflexivity; only 1: intros ?; only 1: apply Rle_antisym; only 1: auto with real; only 1: auto with real; only 1: split; only 1: rewrite H1; only 1: unfold Rmax; only 1: case Rle_dec; only 1: intros ?; only 1: case Rle_dec; only 1: intros ?; only 1: apply Rle_antisym; only 1: assumption; only 1: assumption; only 1: intros ?; only 1: reflexivity; only 1: intros ?; only 1: case Rle_dec; only 1: intros ?; only 1: reflexivity; only 1: intros ?; only 1: apply Rle_antisym; only 1: auto with real; only 1: auto with real; only 1: split; only 1: assumption; only 1: assumption).	0.240181	49
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P3	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P4	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P5	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct a0; only 1: destruct H0; only 1: destruct H1; only 1: destruct H2; only 1: exists x; only 1: split; only 1: assumption; only 1: split; only 1: rewrite H0; only 1: unfold Rmin; only 1: case Rle_dec; only 1: intros ?; only 1: case Rle_dec; only 1: intros ?; only 1: apply Rle_antisym; only 1: assumption; only 1: assumption; only 1: intros ?; only 1: reflexivity; only 1: intros ?; only 1: case Rle_dec; only 1: intros ?; only 1: reflexivity; only 1: intros ?; only 1: apply Rle_antisym; only 1: auto with real; only 1: auto with real; only 1: split; only 1: rewrite H1; only 1: unfold Rmax; only 1: case Rle_dec; only 1: intros ?; only 1: case Rle_dec; only 1: intros ?; only 1: apply Rle_antisym; only 1: assumption; only 1: assumption; only 1: intros ?; only 1: reflexivity; only 1: intros ?; only 1: case Rle_dec; only 1: intros ?; only 1: reflexivity; only 1: intros ?; only 1: apply Rle_antisym; only 1: auto with real; only 1: auto with real; only 1: split; only 1: assumption; only 1: assumption).	0.225278	51
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P6	120	0.0.0.0.0.0.0	synth with cache (only 1: unfold IsStepFun; only 1: intros; only 1: elim X; only 1: intros; only 1: apply existT with x; only 1: apply StepFun_P5; only 1: assumption).	0.061894	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P7	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P8	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P9	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold adapted_couple in H; only 1: decompose [ and ] H; only 1: clear H; only 1: induction l; only 1: simpl in H4; only 1: discriminate; only 1: induction l; only 1: simpl in H3; only 1: simpl in H2; only 1: generalize H3; only 1: generalize H2; only 1: unfold Rmin; only 1: unfold Rmax; only 1: case Rle_dec; only 1: intros; only 1: elim H0; only 1: rewrite <- H5; only 1: rewrite <- H7; only 1: reflexivity; only 1: intros; only 1: elim H0; only 1: rewrite <- H5; only 1: rewrite <- H7; only 1: reflexivity; only 1: simpl; only 1: apply le_n_S; only 1: apply le_n_S; only 1: apply Nat.le_0_l).	0.206800	29
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P10	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P11	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P12	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold adapted_couple_opt; only 1: unfold adapted_couple; only 1: intros; only 1: decompose [ and ] H; only 1: clear H; only 1: split; only 1: split; only 1: assumption; only 1: split; only 1: rewrite H0; only 1: unfold Rmin; only 1: case Rle_dec; only 1: intros ?; only 1: case Rle_dec; only 1: intros ?; only 1: apply Rle_antisym; only 1: assumption; only 1: assumption; only 1: intros ?; only 1: reflexivity; only 1: intros ?; only 1: case Rle_dec; only 1: intros ?; only 1: reflexivity; only 1: intros ?; only 1: apply Rle_antisym; only 1: auto with real; only 1: auto with real; only 1: split; only 1: rewrite H3; only 1: unfold Rmax; only 1: case Rle_dec; only 1: intros ?; only 1: case Rle_dec; only 1: intros ?; only 1: apply Rle_antisym; only 1: assumption; only 1: assumption; only 1: intros ?; only 1: reflexivity; only 1: intros ?; only 1: case Rle_dec; only 1: intros ?; only 1: reflexivity; only 1: intros ?; only 1: apply Rle_antisym; only 1: auto with real; only 1: auto with real; only 1: split; only 1: assumption; only 1: assumption; only 1: split; only 1: assumption; only 1: assumption).	0.346206	54
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P13	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P14	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis_reg.AppVar	120	0	synth with cache (only 1: exact R0).	0.041026	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P15	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P16	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P17	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.P_Rmin	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold Rmin; only 1: case Rle_dec; only 1: intros ?; only 1: assumption; only 1: intros ?; only 1: assumption).	0.052187	11
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.exp_le_3	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.exp_increasing	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.exp_lt_inv	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.exp_ineq1	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.ln_exists1	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.ln_exists	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.exp_ln	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.exp_inv	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.exp_Ropp	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.ln_increasing	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply exp_lt_inv; only 1: rewrite exp_ln; only 1: rewrite exp_ln; only 1: apply H0; only 1: apply Rlt_trans with x; only 1: assumption; only 1: apply H0; only 1: assumption).	0.050627	12
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.ln_exp	120	0.0.0.0	synth with cache (only 1: intros ?; only 1: apply exp_inv; only 1: apply exp_ln; only 1: apply exp_pos).	0.041550	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.ln_1	120	0.0.0	synth with cache (only 1: rewrite <- exp_0; only 1: rewrite ln_exp; only 1: easy).	0.038686	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.ln_lt_inv	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.derivable_pt_inv	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.ln_inv	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.pr_nu_var	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold derivable_pt; only 1: unfold derive_pt; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct pr1; only 1: intros ?; only 1: destruct pr2; only 1: intros ?; only 1: intropattern subst -> H; only 1: apply uniqueness_limite with g x; only 1: assumption; only 1: assumption).	0.081405	14
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.ln_mult	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply exp_inv; only 1: rewrite exp_plus; only 1: rewrite exp_ln; only 1: rewrite exp_ln; only 1: rewrite exp_ln; only 1: reflexivity; only 1: assumption; only 1: assumption; only 1: apply Rmult_lt_0_compat; only 1: assumption; only 1: assumption).	0.054382	15
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.ln_Rinv	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply exp_inv; only 1: rewrite exp_ln; only 1: rewrite exp_Ropp; only 1: rewrite exp_ln; only 1: reflexivity; only 1: assumption; only 1: apply Rinv_0_lt_compat; only 1: assumption).	0.042657	10
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.ln_continue	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.Rpower_plus	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold Rpower; only 1: rewrite Rmult_plus_distr_r; only 1: rewrite exp_plus; only 1: auto).	0.066685	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.pr_nu_var2	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.derivable_inv	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold derivable; only 1: intros ?; only 1: apply derivable_pt_inv; only 1: apply H; only 1: apply H0).	0.049419	8
coq-tactician-stdlib.8.11.dev	Coq.Reals.Exp_prop.E1_cvg	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: unfold exp; only 1: case exist_exp; only 1: intros ?; only 1: unfold exp_in; only 1: unfold Un_cv; only 1: unfold infinite_sum; only 1: unfold E1; only 1: trivial).	0.063054	9
coq-tactician-stdlib.8.11.dev	Coq.Reals.Exp_prop.exp_form	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Exp_prop.div2_double	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: induction N; only 1: trivial; only 1: simpl Init.Nat.mul; only 1: rewrite Nat.add_succ_r; only 1: simpl; only 1: simpl in IHN; only 1: rewrite IHN; only 1: reflexivity).	0.043518	9
coq-tactician-stdlib.8.11.dev	Coq.Reals.Exp_prop.div2_S_double	120	0.0	synth with cache (only 1: intros ?; only 1: apply Nat.div2_succ_double).	0.033018	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.Exp_prop.div2_not_R0	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Exp_prop.Reste_E_maj	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Exp_prop.maj_Reste_cv_R0	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Exp_prop.Reste_E_cv	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Exp_prop.exp_plus	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Exp_prop.exp_pos_pos	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Exp_prop.exp_pos	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Exp_prop.derivable_pt_lim_exp_0	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Exp_prop.derivable_pt_lim_exp	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.tan_PI	120	0.0.0.0.0	synth with cache (only 1: unfold tan; only 1: rewrite sin_PI; only 1: rewrite cos_PI; only 1: unfold Rdiv; only 1: apply Rmult_0_l).	0.054480	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.sin_3PI2	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.tan_2PI	120	0.0.0.0	synth with cache (only 1: unfold tan; only 1: rewrite sin_2PI; only 1: unfold Rdiv; only 1: apply Rmult_0_l).	0.099229	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_reg.continuity_sin	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_reg.CVN_R_sin	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_reg.derivable_pt_lim_sin_0	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_reg.derivable_pt_lim_cos_0	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_reg.derivable_pt_lim_sin	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_reg.derivable_pt_lim_cos	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_reg.derivable_pt_sin	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_reg.derivable_pt_cos	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_reg.derivable_sin	120	0.0.0	synth with cache (only 1: unfold derivable; only 1: intros ?; only 1: apply derivable_pt_sin).	0.039877	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_reg.derivable_cos	120	0.0.0	synth with cache (only 1: unfold derivable; only 1: intros ?; only 1: apply derivable_pt_cos).	0.042714	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_reg.derive_pt_sin	120	1.0.0	synth with cache (only 1: intros; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_sin).	0.084067	9
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_reg.derive_pt_cos	120	0.0.0	synth with cache (only 1: intros; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_cos).	0.041718	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rgeom.distance_refl	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: unfold dist_euc; only 1: apply Rsqr_inj; only 1: apply sqrt_positivity; only 1: apply Rplus_le_le_0_compat; only 1: apply Rle_0_sqr; only 1: apply Rle_0_sqr; only 1: right; only 1: reflexivity; only 1: rewrite Rsqr_0; only 1: rewrite Rsqr_sqrt; only 1: unfold Rsqr; only 1: ring; only 1: apply Rplus_le_le_0_compat; only 1: apply Rle_0_sqr; only 1: apply Rle_0_sqr).	0.070118	17
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rgeom.distance_symm	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold dist_euc; only 1: apply Rsqr_inj; only 1: apply sqrt_positivity; only 1: apply Rplus_le_le_0_compat; only 1: apply Rle_0_sqr; only 1: apply Rle_0_sqr; only 1: apply sqrt_positivity; only 1: apply Rplus_le_le_0_compat; only 1: apply Rle_0_sqr; only 1: apply Rle_0_sqr; only 1: rewrite Rsqr_sqrt; only 1: rewrite Rsqr_sqrt; only 1: unfold Rsqr; only 1: ring; only 1: apply Rplus_le_le_0_compat; only 1: apply Rle_0_sqr; only 1: apply Rle_0_sqr; only 1: apply Rplus_le_le_0_compat; only 1: apply Rle_0_sqr; only 1: apply Rle_0_sqr).	0.145792	24
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rgeom.law_cosines	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold dist_euc; only 1: intros; only 1: rewrite Rsqr_sqrt; only 1: rewrite Rsqr_sqrt; only 1: rewrite Rsqr_sqrt; only 1: rewrite H; only 1: unfold Rsqr; only 1: ring; only 1: apply Rplus_le_le_0_compat; only 1: apply Rle_0_sqr; only 1: apply Rle_0_sqr; only 1: apply Rplus_le_le_0_compat; only 1: apply Rle_0_sqr; only 1: apply Rle_0_sqr; only 1: apply Rplus_le_le_0_compat; only 1: apply Rle_0_sqr; only 1: apply Rle_0_sqr).	0.171847	17
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rgeom.triangle	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rgeom.translation_0	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: split; only 1: unfold xt; only 1: eauto with real; only 1: unfold yt; only 1: ring).	0.051215	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rgeom.isometric_translation	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rsqr; only 1: unfold xt; only 1: unfold yt; only 1: ring).	0.095635	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rgeom.rotation_0	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: unfold xr; only 1: unfold yr; only 1: split; only 1: rewrite cos_0; only 1: rewrite sin_0; only 1: ring; only 1: rewrite cos_0; only 1: rewrite sin_0; only 1: ring).	0.062170	11
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rgeom.rotation_PI2	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: unfold xr; only 1: unfold yr; only 1: split; only 1: rewrite cos_PI2; only 1: rewrite sin_PI2; only 1: ring; only 1: rewrite cos_PI2; only 1: rewrite sin_PI2; only 1: ring).	0.080195	11
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rgeom.isometric_rotation_0	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rgeom.isometric_rotation	120	0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold dist_euc; only 1: intros; only 1: apply Rsqr_inj; only 1: apply sqrt_positivity; only 1: apply Rplus_le_le_0_compat; only 1: apply Rle_0_sqr; only 1: apply Rle_0_sqr; only 1: apply sqrt_positivity; only 1: apply Rplus_le_le_0_compat; only 1: apply Rle_0_sqr; only 1: apply Rle_0_sqr; only 1: rewrite Rsqr_sqrt; only 1: rewrite Rsqr_sqrt; only 1: apply isometric_rotation_0; only 1: apply Rplus_le_le_0_compat; only 1: apply Rle_0_sqr; only 1: apply Rle_0_sqr; only 1: apply Rplus_le_le_0_compat; only 1: apply Rle_0_sqr; only 1: apply Rle_0_sqr).	0.082585	23
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rgeom.isometric_rot_trans	120	0.0.0	synth with cache (only 1: intros; only 1: rewrite <- isometric_rotation_0; only 1: apply isometric_translation).	0.048037	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rgeom.isometric_trans_rot	120	0.0.0	synth with cache (only 1: intros; only 1: rewrite <- isometric_translation; only 1: apply isometric_rotation_0).	0.048248	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.CVN_R_cos	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.continuity_cos	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_gt_cos_7_8	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.PI_2_aux	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_pi2	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.pi2_int	120	0.0.0.0	synth with cache (only 1: unfold PI2; only 1: case PI_2_aux; only 1: simpl; only 1: tauto).	0.067933	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_minus	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rminus; only 1: rewrite cos_plus; only 1: rewrite <- cos_sym; only 1: rewrite sin_antisym; only 1: ring).	0.065194	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin2_cos2	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: unfold Rsqr; only 1: rewrite Rplus_comm; only 1: rewrite <- cos_minus; only 1: unfold Rminus; only 1: rewrite Rplus_opp_r; only 1: apply cos_0).	0.049666	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos2	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin2	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_PI2	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_pos_tech	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_PI2	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.PI_RGT_0	120	0.0.0	synth with cache (only 1: unfold PI; only 1: destruct pi2_int; only 1: lra).	0.050573	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.PI_4	120	0.0.0	synth with cache (only 1: unfold PI; only 1: destruct pi2_int; only 1: lra).	0.052024	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.PI_neq0	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_PI	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_PI	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_bound	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply pre_sin_bound; only 1: assumption; only 1: apply Rle_trans with (1 := H0) (2 := PI_4)).	0.060875	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_bound	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.neg_cos	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite cos_plus; only 1: rewrite sin_PI; only 1: rewrite cos_PI; only 1: ring).	0.065612	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_cos	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite cos_plus; only 1: rewrite sin_PI2; only 1: rewrite cos_PI2; only 1: ring).	0.063778	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.Cos_plus.Majxy_cv_R0	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Cos_plus.reste1_maj	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Cos_plus.reste2_maj	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Cos_plus.reste1_cv_R0	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Cos_plus.reste2_cv_R0	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Cos_plus.reste_cv_R0	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Cos_plus.cos_plus	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_alt.pre_sin_bound	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_alt.pre_cos_bound	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Ratan_seq_opp	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.sum_Ratan_seq_opp	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.ps_atan_exists_1	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.in_int	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.ps_atan0_0	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.ps_atan_exists_1_opp	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.ps_atan_opp	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.ps_atanSeq_continuity_pt_1	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.pow_lt_1_compat	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: induction 1; only 1: simpl; only 1: rewrite Rmult_1_r; only 1: tauto; only 1: simpl; only 1: split; only 1: apply Rmult_le_pos; only 1: intuition; only 1: intuition; only 1: rewrite <- Rmult_1_r; only 1: apply Rmult_le_0_lt_compat; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.091311	18
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Datan_seq_Rabs	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: unfold Datan_seq; only 1: rewrite pow_mult; only 1: rewrite pow_mult; only 1: rewrite pow2_abs; only 1: reflexivity).	0.050403	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Datan_seq_pos	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Datan_sum_eq	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Datan_seq_increasing	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Datan_seq_decreasing	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Datan_seq_CV_0	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Datan_lim	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Datan_CVU_prelim	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Datan_is_datan	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Ratan_CVU'	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Ratan_CVU	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Alt_PI_tg	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: unfold PI_tg; only 1: unfold Ratan_seq; only 1: unfold Rdiv; only 1: rewrite pow1; only 1: rewrite Rmult_1_l; only 1: reflexivity).	0.044830	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Ratan_is_ps_atan	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Datan_continuity	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.derivable_pt_lim_ps_atan	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.derivable_pt_ps_atan	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.ps_atan_continuity_pt_1	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Datan_eq_DatanSeq_interv	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.atan_eq_ps_atan	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.Alt_PI_eq	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ratan.PI_ineq	120	1.0.0	synth with cache (only 1: intros; only 1: rewrite <- Alt_PI_eq; only 1: apply Alt_PI_ineq).	0.058124	10
coq-tactician-stdlib.8.11.dev	Coq.Reals.Sqrt_reg.sqrt_var_maj	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Sqrt_reg.sqrt_continuity_pt_R1	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Sqrt_reg.sqrt_continuity_pt	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Sqrt_reg.derivable_pt_lim_sqrt	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Sqrt_reg.derivable_pt_sqrt	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Sqrt_reg.derive_pt_sqrt	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_sqrt; only 1: assumption).	0.040267	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Sqrt_reg.continuity_pt_sqrt	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P18	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P19	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: induction l1; only 1: simpl; only 1: ring; only 1: induction l1; only 1: simpl; only 1: ring; only 1: simpl; only 1: simpl in IHl1; only 1: rewrite IHl1; only 1: ring).	0.139526	11
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P20	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P21	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P22	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P23	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P24	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P25	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P26	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P27	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply StepFun_P26; only 1: apply StepFun_P23 with g; only 1: assumption; only 1: assumption; only 1: apply StepFun_P25 with f; only 1: assumption; only 1: assumption).	0.064726	16
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P28	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P29	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.Rpower_mult	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.Rpower_O	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: clear H; only 1: unfold Rpower; only 1: rewrite Rmult_0_l; only 1: apply exp_0).	0.042854	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.derive_pt_inv	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.Rpower_1	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: unfold Rpower; only 1: rewrite Rmult_1_l; only 1: apply exp_ln; only 1: assumption).	0.045534	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.Rabs_derive_1	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.Rpower_pow	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: elim n; only 1: simpl; only 1: intros ?; only 1: intros ?; only 1: apply Rpower_O; only 1: auto; only 1: simpl; only 1: intros ?; only 1: case n0; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: simpl; only 1: rewrite Rmult_1_r; only 1: apply Rpower_1; only 1: auto; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite Rpower_plus; only 1: rewrite H; only 1: rewrite Rpower_1; only 1: apply Rmult_comm; only 1: assumption; only 1: assumption).	0.082074	27
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.Rabs_derive_2	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.Rpower_lt	120	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold Rpower; only 1: apply exp_increasing; only 1: apply Rmult_lt_compat_r; only 1: rewrite <- ln_1; only 1: apply ln_increasing; only 1: apply Rlt_0_1; only 1: apply H; only 1: apply H0).	0.047522	13
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.Rderivable_pt_abs	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.Rpower_sqrt	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.Rpower_Ropp	120	0.0.0.0.0	synth with cache (only 1: unfold Rpower; only 1: intros ?; only 1: intros ?; only 1: rewrite Ropp_mult_distr_l_reverse; only 1: apply exp_Ropp).	0.039485	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.Rcontinuity_abs	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.powerRZ_Rpower	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.continuity_finite_sum	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.Rle_Rpower	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: intros ?; only 1: case H0; only 1: intros ?; only 1: left; only 1: apply Rpower_lt; only 1: assumption; only 1: assumption; only 1: intros ?; only 1: rewrite H1; only 1: right; only 1: reflexivity; only 1: intros ?; only 1: rewrite <- H; only 1: unfold Rpower; only 1: rewrite ln_1; only 1: rewrite Rmult_0_r; only 1: rewrite Rmult_0_r; only 1: apply Rle_refl).	0.087321	23
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.derivable_pt_lim_fs	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.ln_lt_2	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.derivable_pt_lim_finite_sum	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.limit1_ext	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.derivable_pt_finite_sum	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.derivable_finite_sum	120	0.0.0.0	synth with cache (only 1: intros; only 1: unfold derivable; only 1: intros ?; only 1: apply derivable_pt_finite_sum).	0.040402	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.limit1_imp	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.Rinv_Rdiv	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold Rdiv; only 1: rewrite Rinv_mult_distr; only 1: rewrite Rinv_involutive; only 1: apply Rmult_comm; only 1: assumption; only 1: assumption; only 1: apply Rinv_neq_0_compat; only 1: assumption).	0.047975	12
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.derivable_pt_lim_cosh	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.derivable_pt_lim_sinh	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.Dln	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.derivable_pt_exp	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.derivable_pt_lim_ln	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.derivable_pt_cosh	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.D_in_imp	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.derivable_pt_sinh	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.derivable_exp	120	0.0	synth with cache (only 1: unfold derivable; only 1: apply derivable_pt_exp).	0.041738	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.D_in_ext	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold D_in; only 1: rewrite H; only 1: auto).	0.053554	9
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.derivable_cosh	120	1.0	synth with cache (only 1: unfold derivable; only 1: apply derivable_pt_cosh).	0.038450	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.Dpower	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.derivable_sinh	120	0.0	synth with cache (only 1: unfold derivable; only 1: apply derivable_pt_sinh).	0.043380	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.derivable_pt_lim_power	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.derive_pt_exp	120	1.0.0	synth with cache (only 1: intros ?; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_exp).	0.053147	8
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.Rpower_mult_distr	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold Rpower; only 1: rewrite <- exp_plus; only 1: rewrite ln_mult; only 1: rewrite Rmult_plus_distr_l; only 1: auto; only 1: auto; only 1: auto).	0.080193	12
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.derive_pt_cosh	120	1.0.0	synth with cache (only 1: intros ?; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_cosh).	0.045182	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.Rlt_Rpower_l	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: destruct H0; only 1: apply exp_increasing; only 1: apply Rmult_lt_compat_l; only 1: auto; only 1: apply ln_increasing; only 1: lra; only 1: lra).	0.086729	9
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.derive_pt_sinh	120	1.0.0	synth with cache (only 1: intros ?; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_sinh).	0.042433	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.Rle_Rpower_l	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct H; only 1: intros ?; only 1: destruct H0; only 1: destruct H1; only 1: apply Rlt_le; only 1: apply exp_increasing; only 1: apply Rmult_lt_compat_l; only 1: auto; only 1: apply ln_increasing; only 1: lra; only 1: lra; only 1: rewrite H1; only 1: apply Rle_refl; only 1: intros; only 1: rewrite <- H; only 1: rewrite Rpower_O; only 1: rewrite Rpower_O; only 1: apply Rle_refl; only 1: apply Rlt_le_trans with a; only 1: tauto; only 1: tauto; only 1: tauto).	0.072749	23
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis4.sinh_lt	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Cos_rel.cos_plus_form	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.arcsinh_sinh	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Cos_rel.pow_sqr	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Cos_rel.A1_cvg	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.sinh_arcsinh	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Cos_rel.C1_cvg	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.derivable_pt_lim_arcsinh	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Cos_rel.B1_cvg	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.arcsinh_lt	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.arcsinh_le	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: apply Rlt_le; only 1: apply arcsinh_lt; only 1: assumption; only 1: rewrite H; only 1: apply Rle_refl).	0.039925	9
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rpower.arcsinh_0	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold arcsinh; only 1: rewrite pow_ne_zero; only 1: rewrite Rplus_0_l; only 1: rewrite Rplus_0_l; only 1: rewrite sqrt_1; only 1: rewrite <- exp_0; only 1: rewrite ln_exp; only 1: easy; only 1: discriminate).	0.056158	9
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.sin_cos_PI4	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.sin_PI3_cos_PI6	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.sin_PI6_cos_PI3	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.PI6_RGT_0	120	0.0.0.0.0	synth with cache (only 1: unfold Rdiv; only 1: apply Rmult_lt_0_compat; only 1: apply PI_RGT_0; only 1: apply Rinv_0_lt_compat; only 1: prove_sup0).	0.042917	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.PI6_RLT_PI2	120	0.0.0.0.0.0	synth with cache (only 1: unfold Rdiv; only 1: apply Rmult_lt_compat_l; only 1: apply PI_RGT_0; only 1: apply Rinv_lt_contravar; only 1: prove_sup; only 1: prove_sup).	0.093709	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.sin_PI6	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.sqrt2_neq_0	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.R1_sqrt2_neq_0	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.sqrt3_2_neq_0	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.Rlt_sqrt2_0	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.Rlt_sqrt3_0	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.PI4_RGT_0	120	0.0.0.0.0	synth with cache (only 1: unfold Rdiv; only 1: apply Rmult_lt_0_compat; only 1: apply PI_RGT_0; only 1: apply Rinv_0_lt_compat; only 1: prove_sup0).	0.051544	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.cos_PI4	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.sin_PI4	120	1.0	synth with cache (only 1: rewrite sin_cos_PI4; only 1: apply cos_PI4).	0.048895	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.tan_PI4	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.cos_3PI4	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.sin_3PI4	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.cos_PI6	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.tan_PI6	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.sin_PI3	120	1.0	synth with cache (only 1: rewrite sin_PI3_cos_PI6; only 1: apply cos_PI6).	0.047944	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.cos_PI3	120	0.0	synth with cache (only 1: rewrite sin_PI6_cos_PI3; only 1: apply sin_PI6).	0.044810	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.tan_PI3	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold tan; only 1: rewrite sin_PI3; only 1: rewrite cos_PI3; only 1: unfold Rdiv; only 1: rewrite Rmult_1_l; only 1: rewrite Rinv_involutive; only 1: rewrite Rmult_assoc; only 1: rewrite <- Rinv_l_sym; only 1: apply Rmult_1_r; only 1: discrR; only 1: discrR).	0.071199	11
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.sin_2PI3	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.PSeries_reg.Boule_convex	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.PSeries_reg.boule_of_interval	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.cos_2PI3	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.tan_2PI3	120	0.0.0.0	synth with cache (only 1: unfold tan; only 1: rewrite sin_2PI3; only 1: rewrite cos_2PI3; only 1: field).	0.067253	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.PSeries_reg.boule_in_interval	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.cos_5PI4	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.PSeries_reg.Ball_in_inter	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.sin_5PI4	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.PSeries_reg.Boule_center	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: destruct r; only 1: unfold Boule; only 1: unfold Rminus; only 1: simpl; only 1: rewrite Rplus_opp_r; only 1: rewrite Rabs_pos_eq; only 1: assumption; only 1: apply Rle_refl).	0.044234	10
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.sin_cos5PI4	120	0.0.0	synth with cache (only 1: rewrite cos_5PI4; only 1: rewrite sin_5PI4; only 1: reflexivity).	0.042707	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.Rgt_3PI2_0	120	0.0.0	synth with cache (only 1: apply Rmult_lt_0_compat; only 1: prove_sup0; only 1: apply PI2_RGT_0).	0.045105	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.Rgt_2PI_0	120	0.0.0	synth with cache (only 1: apply Rmult_lt_0_compat; only 1: prove_sup0; only 1: apply PI_RGT_0).	0.039582	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.PSeries_reg.CVN_CVU	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.Rlt_PI_3PI2	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.Rlt_3PI2_2PI	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.PSeries_reg.CVU_continuity	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.PSeries_reg.continuity_pt_finite_SF	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.PSeries_reg.SFL_continuity_pt	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: eapply CVU_continuity; only 1: apply CVN_CVU; only 1: apply X; only 1: intros; only 1: unfold SP; only 1: apply continuity_pt_finite_SF; only 1: intros; only 1: apply H; only 1: apply H1; only 1: apply H0).	0.078614	11
coq-tactician-stdlib.8.11.dev	Coq.Reals.PSeries_reg.SFL_continuity	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.PSeries_reg.CVN_R_CVS	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.PSeries_reg.CVU_cv	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.PSeries_reg.CVU_ext_lim	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.PSeries_reg.CVU_derivable	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_pos	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: unfold sqrt; only 1: destruct Rcase_abs; only 1: apply Rle_refl; only 1: apply Rsqrt_positivity).	0.106099	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_positivity	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: clear H; only 1: unfold sqrt; only 1: destruct Rcase_abs; only 1: apply Rle_refl; only 1: apply Rsqrt_positivity).	0.105093	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_sqrt	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_0	120	0.0.0.0.0	synth with cache (only 1: apply Rsqr_eq_0; only 1: unfold Rsqr; only 1: apply sqrt_sqrt; only 1: right; only 1: easy).	0.028586	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_1	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: apply Rsqr_inj; only 1: apply sqrt_positivity; only 1: left; only 1: exact Rlt_0_1; only 1: left; only 1: exact Rlt_0_1; only 1: unfold Rsqr; only 1: rewrite sqrt_sqrt; only 1: ring; only 1: left; only 1: exact Rlt_0_1).	0.037913	11
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_eq_0	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_lem_0	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_lem_1	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_def	120	0.1.0	synth with cache (only 1: intros; only 1: apply sqrt_sqrt; only 1: assumption).	0.028291	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_square	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_Rsqr	120	0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rsqr; only 1: apply sqrt_square; only 1: assumption).	0.026206	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_pow2	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: simpl; only 1: rewrite Rmult_1_r; only 1: apply sqrt_square; only 1: assumption).	0.034361	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.exp_cof_no_R0	120	0.0.0	synth with cache (only 1: intros ?; only 1: apply Rinv_neq_0_compat; only 1: apply INR_fact_neq_0).	0.032561	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_Rsqr_abs	120	0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite Rsqr_abs; only 1: apply sqrt_Rsqr; only 1: apply Rabs_pos).	0.025621	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.Rsqr_sqrt	120	0.1.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: unfold Rsqr; only 1: apply sqrt_sqrt; only 1: assumption).	0.038040	8
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.exist_exp	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.pow_i	120	0.1.0.0	synth with cache (only 1: intros; only 1: apply pow_ne_zero; only 1: apply Nat.neq_0_lt_0; only 1: easy).	0.042232	8
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_mult_alt	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_mult	120	0.1.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: clear H0; only 1: apply sqrt_mult_alt; only 1: easy).	0.049148	16
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.exist_exp0	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_lt_R0	120	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply Rsqr_incrst_0; only 1: rewrite Rsqr_0; only 1: rewrite Rsqr_sqrt; only 1: assumption; only 1: red; only 1: auto with real; only 1: right; only 1: reflexivity; only 1: apply sqrt_positivity; only 1: red; only 1: auto with real).	0.059477	13
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.exp_0	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.Rlt_mult_inv_pos	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.cosh_0	120	0.0.0.0.0.0.0	synth with cache (only 1: unfold cosh; only 1: rewrite Ropp_0; only 1: rewrite exp_0; only 1: unfold Rdiv; only 1: rewrite <- Rinv_r_sym; only 1: easy; only 1: discrR).	0.035853	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.MVT	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.sinh_0	120	0.0.0.0.0.0.0	synth with cache (only 1: unfold sinh; only 1: rewrite Ropp_0; only 1: rewrite exp_0; only 1: unfold Rminus; only 1: unfold Rdiv; only 1: rewrite Rplus_opp_r; only 1: apply Rmult_0_l).	0.033439	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.Rle_mult_inv_pos	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: case H; only 1: intros; only 1: red; only 1: left; only 1: apply Rlt_mult_inv_pos; only 1: auto with real; only 1: auto with real; only 1: intros; only 1: rewrite <- H1; only 1: red; only 1: right; only 1: ring).	0.103551	16
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.MVT_cor1	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.MVT_cor2	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_div_alt	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.MVT_cor3	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_div	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: clear H; only 1: apply sqrt_div_alt; only 1: assumption).	0.037146	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.simpl_cos_n	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_lt_0_alt	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.archimed_cor1	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.Rolle	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_lt_0	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: clear H0; only 1: clear H; only 1: apply sqrt_lt_0_alt).	0.032892	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_lt_1_alt	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: apply Rsqr_incrst_0; only 1: rewrite Rsqr_sqrt; only 1: rewrite Rsqr_sqrt; only 1: easy; only 1: apply Rlt_le; only 1: apply Rle_lt_trans with x; only 1: exact H; only 1: easy; only 1: exact H; only 1: apply sqrt_pos; only 1: apply sqrt_pos).	0.036339	15
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.nonneg_derivative_1	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_lt_1	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: clear H0; only 1: apply sqrt_lt_1_alt; only 1: split; only 1: exact H; only 1: easy).	0.036021	10
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.Alembert_cos	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_le_0	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.cosn_no_R0	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: unfold cos_n; only 1: unfold Rdiv; only 1: apply Rmult_integral_contrapositive_currified; only 1: apply pow_nonzero; only 1: discrR; only 1: apply Rinv_neq_0_compat; only 1: apply INR_fact_neq_0).	0.033907	8
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_le_1_alt	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_le_1	120	0.1.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: clear H0; only 1: clear H; only 1: apply sqrt_le_1_alt; only 1: assumption).	0.033307	11
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.exist_cos	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.nonpos_derivative_0	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_inj	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.increasing_decreasing_opp	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_less_alt	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_less	120	1.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: clear H; only 1: apply sqrt_less_alt).	0.031290	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.nonpos_derivative_1	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_more	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.simpl_sin_n	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.positive_derivative	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.strictincreasing_strictdecreasing_opp	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.negative_derivative	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.Alembert_sin	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.sin_no_R0	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: unfold sin_n; only 1: unfold Rdiv; only 1: apply Rmult_integral_contrapositive_currified; only 1: apply pow_nonzero; only 1: discrR; only 1: apply Rinv_neq_0_compat; only 1: apply INR_fact_neq_0).	0.033149	8
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.null_derivative_0	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.sqrt_cauchy	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.increasing_decreasing	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.exist_sin	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.null_derivative_1	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.Rsqr_sol_eq_0_1	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.derive_increasing_interv_ax	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.derive_increasing_interv	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqrt.Rsqr_sol_eq_0_0	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.derive_increasing_interv_var	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.IAF	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.IAF_var	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.null_derivative_loc	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.antiderivative_Ucte	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.MVT.MVT_abs	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.dicho_comp	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.dicho_lb_growing	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.dicho_up_decreasing	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.dicho_lb_maj_y	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.dicho_lb_maj	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.dicho_up_min_x	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.dicho_up_min	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.dicho_lb_cv	120	0.0.0.1.0.0	synth with cache (only 1: intros; only 1: apply growing_cv; only 1: apply dicho_lb_growing; only 1: assumption; only 1: apply dicho_lb_maj; only 1: assumption).	0.031581	10
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.dicho_up_cv	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply decreasing_cv; only 1: apply dicho_up_decreasing; only 1: assumption; only 1: apply dicho_up_min; only 1: assumption).	0.035734	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.dicho_lb_dicho_up	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.pow_2_n_neq_R0	120	0.0.0.0	synth with cache (only 1: intros ?; only 1: unfold pow_2_n; only 1: apply pow_nonzero; only 1: discrR).	0.026975	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.pow_2_n_growing	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.pow_2_n_infty	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.cv_dicho	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.continuity_seq	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.dicho_lb_car	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.dicho_up_car	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.cv_pow_half	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.IVT	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.IVT_cor	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.Rsqrt_exists	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.Rsqrt_positivity	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsqrt_def.Rsqrt_Rsqrt	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis3.derivable_pt_lim_div	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis3.derivable_pt_div	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis3.derivable_div	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis3.derive_pt_div	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_fun.Alembert_exp	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_plus	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_minus	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rminus; only 1: rewrite sin_plus; only 1: rewrite <- cos_sym; only 1: rewrite sin_antisym; only 1: ring).	0.070856	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.tan_plus	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_2a	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_2a	120	0.0.0	synth with cache (only 1: intros ?; only 1: rewrite double; only 1: apply cos_plus).	0.049926	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_2a_cos	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_2a_sin	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.tan_2a	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite double; only 1: rewrite double; only 1: rewrite double in H0; only 1: apply tan_plus; only 1: assumption; only 1: assumption; only 1: assumption; only 1: assumption).	0.078308	9
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_neg	120	1	synth with cache (only 1: apply sin_antisym).	0.082018	16
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_neg	120	1.0.0	synth with cache (only 1: intros ?; only 1: symmetry in  |- *; only 1: apply cos_sym).	0.077112	17
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.tan_0	120	0.0.0.0.0	synth with cache (only 1: unfold tan; only 1: rewrite sin_0; only 1: rewrite cos_0; only 1: unfold Rdiv; only 1: apply Rmult_0_l).	0.052492	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.tan_neg	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: unfold tan; only 1: rewrite sin_neg; only 1: rewrite cos_neg; only 1: unfold Rdiv; only 1: apply Ropp_mult_distr_l_reverse).	0.054443	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.tan_minus	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rminus; only 1: rewrite tan_plus; only 1: rewrite tan_neg; only 1: unfold Rminus; only 1: rewrite <- Ropp_mult_distr_l_reverse; only 1: rewrite Rmult_opp_opp; only 1: reflexivity; only 1: assumption; only 1: rewrite cos_neg; only 1: assumption; only 1: assumption; only 1: rewrite tan_neg; only 1: unfold Rminus; only 1: rewrite <- Ropp_mult_distr_l_reverse; only 1: rewrite Rmult_opp_opp; only 1: assumption).	0.093082	17
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_3PI2	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_2PI	120	0.0.0	synth with cache (only 1: rewrite sin_2a; only 1: rewrite sin_PI; only 1: ring).	0.053412	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_2PI	120	0.0.0.0	synth with cache (only 1: rewrite cos_2a; only 1: rewrite sin_PI; only 1: rewrite cos_PI; only 1: ring).	0.054305	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.neg_sin	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite sin_plus; only 1: rewrite sin_PI; only 1: rewrite cos_PI; only 1: ring).	0.088704	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_PI_x	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite sin_minus; only 1: rewrite sin_PI; only 1: rewrite cos_PI; only 1: ring).	0.067520	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_period	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_period	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_shift	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite sin_minus; only 1: rewrite sin_PI2; only 1: rewrite cos_PI2; only 1: ring).	0.067520	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_shift	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite cos_minus; only 1: rewrite sin_PI2; only 1: rewrite cos_PI2; only 1: ring).	0.077265	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_sin	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite sin_plus; only 1: rewrite sin_PI2; only 1: rewrite cos_PI2; only 1: ring).	0.069734	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.PI2_RGT_0	120	0.0.0.0	synth with cache (only 1: unfold Rdiv; only 1: apply Rmult_lt_0_compat; only 1: apply PI_RGT_0; only 1: lra).	0.054961	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.SIN_bound	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.COS_bound	120	0.0.0	synth with cache (only 1: intros ?; only 1: rewrite <- sin_shift; only 1: apply SIN_bound).	0.057189	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_sin_0	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_sin_0_var	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_lb_gt_0	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.SIN	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.COS	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1._PI2_RLT_0	120	0.0	synth with cache (only 1: pose proof PI_RGT_0; only 1: lra).	0.064087	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.PI4_RLT_PI2	120	0.0	synth with cache (only 1: pose proof PI_RGT_0; only 1: lra).	0.053533	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.PI2_Rlt_PI	120	0.0	synth with cache (only 1: pose proof PI_RGT_0; only 1: lra).	0.062284	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_gt_0	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_gt_0	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_ge_0	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_ge_0	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.interior_P1	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold included; only 1: unfold interior; only 1: intros; only 1: unfold neighbourhood in H; only 1: elim H; only 1: intros; only 1: unfold included in H0; only 1: apply H0; only 1: unfold disc; only 1: unfold Rminus; only 1: rewrite Rplus_opp_r; only 1: rewrite Rabs_R0; only 1: apply cond_pos).	0.052963	14
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.interior_P2	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.adherence_P1	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: unfold included; only 1: intros; only 1: unfold adherence; only 1: unfold point_adherent; only 1: intros; only 1: exists x; only 1: unfold intersection_domain; only 1: split; only 1: unfold neighbourhood in H0; only 1: elim H0; only 1: intros; only 1: unfold included in H1; only 1: apply H1; only 1: unfold disc; only 1: unfold Rminus; only 1: rewrite Rplus_opp_r; only 1: rewrite Rabs_R0; only 1: apply cond_pos; only 1: apply H).	0.096097	20
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.included_trans	120	0.0.0.0.0	synth with cache (only 1: unfold included; only 1: intros; only 1: apply H0; only 1: apply H; only 1: apply H1).	0.077483	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.interior_P3	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.complementary_P1	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: red; only 1: intros ?; only 1: elim H; only 1: intros; only 1: unfold intersection_domain in H0; only 1: unfold complementary in H0; only 1: elim H0; only 1: intros; only 1: elim H2; only 1: assumption).	0.039073	11
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.adherence_P2	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.adherence_P3	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.open_set_P1	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.closed_set_P1	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.neighbourhood_P1	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.open_set_P2	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold open_set; only 1: intros; only 1: unfold union_domain in H1; only 1: elim H1; only 1: intros ?; only 1: apply neighbourhood_P1 with D1; only 1: unfold included; only 1: unfold union_domain; only 1: tauto; only 1: apply H; only 1: assumption; only 1: intros ?; only 1: apply neighbourhood_P1 with D2; only 1: unfold included; only 1: unfold union_domain; only 1: tauto; only 1: apply H0; only 1: assumption).	0.135882	18
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.open_set_P3	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.open_set_P4	120	0.0.0	synth with cache (only 1: unfold open_set; only 1: intros; only 1: elim H).	0.033740	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.open_set_P5	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.disc_P1	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.continuity_P1	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.continuity_P2	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.continuity_P3	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.Rsepare	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.restriction_family	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: elim H; only 1: intros; only 1: unfold intersection_domain; only 1: elim H0; only 1: intros; only 1: split; only 1: apply cond_fam; only 1: exists x0; only 1: assumption; only 1: assumption).	0.118465	11
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.family_P1	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.open_set_P6	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.compact_P1	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.compact_P2	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.compact_EMP	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.compact_eqDom	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.compact_P3	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.compact_P4	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.compact_P5	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.compact_carac	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.continuity_compact	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.prolongement_C0	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.continuity_ab_maj	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.continuity_ab_min	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.ValAdh_un_exists	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.ValAdh_un_prop	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.adherence_P4	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.compact_P6	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.Bolzano_Weierstrass	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.is_lub_u	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.domain_P1	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtopology.Heine	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqSeries.sum_maj1	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqSeries.Rseries_CV_comp	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqSeries.Cesaro	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqSeries.Cesaro_1	120
coq-tactician-stdlib.8.11.dev	Coq.Floats.FloatLemmas.shift_value	120	0	synth with cache (only 1: reflexivity).	0.032461	1
coq-tactician-stdlib.8.11.dev	Coq.Floats.FloatLemmas.frexp_spec	120
coq-tactician-stdlib.8.11.dev	Coq.Floats.FloatLemmas.ldexp_spec	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rprod.prod_SO_split	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rprod.prod_SO_pos	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: induction N; only 1: simpl; only 1: apply H; only 1: trivial; only 1: simpl; only 1: apply Rmult_le_pos; only 1: apply IHN; only 1: intros; only 1: apply H; only 1: apply Nat.le_trans with N; only 1: assumption; only 1: apply Nat.le_succ_diag_r; only 1: apply H; only 1: apply le_n).	0.051983	15
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rprod.prod_SO_Rle	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rprod.fact_prodSO	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: rewrite <- IHn; only 1: case n; only 1: auto with real; only 1: intros; only 1: rewrite plus_INR; only 1: rewrite mult_INR; only 1: ring).	0.071335	11
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rprod.le_n_2n	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rprod.RfactN_fact2N_factk	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rprod.INR_fact_lt_0	120	0.0.0	synth with cache (only 1: intros ?; only 1: apply lt_0_INR; only 1: apply lt_O_fact).	0.029596	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rprod.C_maj	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_pt_locally_ext	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_pt_plus	120	0.0.0.0.0.0.0	synth with cache (only 1: unfold continuity_pt; only 1: unfold plus_fct; only 1: unfold continue_in; only 1: intros; only 1: apply limit_plus; only 1: assumption; only 1: assumption).	0.039162	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_pt_opp	120	0.0.0.0.0.0	synth with cache (only 1: unfold continuity_pt; only 1: unfold opp_fct; only 1: unfold continue_in; only 1: intros; only 1: apply limit_Ropp; only 1: assumption).	0.037245	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_pt_minus	120	0.0.0.0.0.0.0	synth with cache (only 1: unfold continuity_pt; only 1: unfold minus_fct; only 1: unfold continue_in; only 1: intros; only 1: apply limit_minus; only 1: assumption; only 1: assumption).	0.040632	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_pt_mult	120	0.0.0.0.0.0.0	synth with cache (only 1: unfold continuity_pt; only 1: unfold mult_fct; only 1: unfold continue_in; only 1: intros; only 1: apply limit_mul; only 1: assumption; only 1: assumption).	0.040692	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_pt_const	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_pt_scal	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_pt_inv	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.div_eq_inv	120	0.0	synth with cache (only 1: intros; only 1: reflexivity).	0.030992	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_pt_div	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite div_eq_inv; only 1: apply continuity_pt_mult; only 1: assumption; only 1: apply continuity_pt_inv; only 1: assumption; only 1: assumption).	0.037876	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_pt_comp	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_plus	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_opp	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_minus	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_mult	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_const	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_scal	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_inv	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_div	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.continuity_comp	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.uniqueness_step1	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.uniqueness_step2	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.uniqueness_step3	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.uniqueness_limite	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derive_pt_eq	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derive_pt_eq_0	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derive_pt_eq_1	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derive_pt_D_in	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P30	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_D_in	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_ext	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P31	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P32	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_locally_ext	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_derive	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P33	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_continuous_pt	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_continuous	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P34	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_plus	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P35	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_opp	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_minus	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P36	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P37	120	0.0.0.0.0.0.1.0.0.0	synth with cache (only 1: intros; only 1: eapply StepFun_P36; only 1: assumption; only 1: eapply StepFun_P25; only 1: apply StepFun_P29; only 1: apply StepFun_P29; only 1: eapply StepFun_P23; only 1: apply StepFun_P29; only 1: apply StepFun_P29; only 1: assumption).	0.098657	11
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_mult	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_const	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_scal	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_div_scal	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_scal_right	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P38	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_id	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_Rsqr	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P39	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_comp	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_plus	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Alembert.Alembert_C1	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_opp	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_minus	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_mult	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_const	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_scal	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_id	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P40	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_Rsqr	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P41	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_comp	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P42	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: induction l1; only 1: intros ?; only 1: simpl; only 1: ring; only 1: intros ?; only 1: destruct l1; only 1: simpl in H; only 1: simpl; only 1: destruct l2; only 1: simpl; only 1: ring; only 1: simpl; only 1: simpl in H; only 1: rewrite H; only 1: ring; only 1: simpl; only 1: rewrite Rplus_assoc; only 1: apply Rplus_eq_compat_l; only 1: apply IHl1; only 1: rewrite <- H; only 1: reflexivity).	0.154729	24
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_plus	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_opp	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_minus	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Alembert.Alembert_C2	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_mult	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_const	120	0.0.0	synth with cache (only 1: unfold derivable; only 1: intros; only 1: apply derivable_pt_const).	0.081168	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P43	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Alembert.AlembertC3_step1	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_scal	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_id	120	0.0.0	synth with cache (only 1: unfold derivable; only 1: intros ?; only 1: apply derivable_pt_id).	0.053594	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Alembert.AlembertC3_step2	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_Rsqr	120	0.0.0	synth with cache (only 1: unfold derivable; only 1: intros ?; only 1: apply derivable_pt_Rsqr).	0.047767	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Alembert.Alembert_C3	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_comp	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P44	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derive_pt_plus	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derive_pt_opp	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Alembert.Alembert_C4	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P45	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derive_pt_minus	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Alembert.Alembert_C5	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derive_pt_mult	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derive_pt_const	120	0.0.0	synth with cache (only 1: intros; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_const).	0.046134	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derive_pt_scal	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derive_pt_id	120	0.0.0	synth with cache (only 1: intros; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_id).	0.047299	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.RiemannInt_SF.StepFun_P46	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derive_pt_Rsqr	120	1.0.0	synth with cache (only 1: intros; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_Rsqr).	0.062962	8
coq-tactician-stdlib.8.11.dev	Coq.Reals.Alembert.Alembert_C6	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derive_pt_comp	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_pow_pos	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_lim_pow	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pt_pow	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derivable_pow	120	0.0.0.0	synth with cache (only 1: intros ?; only 1: unfold derivable; only 1: intros ?; only 1: apply derivable_pt_pow).	0.056651	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.derive_pt_pow	120	0.0.0	synth with cache (only 1: intros; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_pow).	0.050568	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.pr_nu	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.deriv_maximum	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.deriv_minimum	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.deriv_constant2	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis1.nonneg_derivative_0	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.rad_deg	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.AltSeries.CV_ALT_step0	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.AltSeries.CV_ALT_step1	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.AltSeries.CV_ALT_step2	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.AltSeries.CV_ALT_step3	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.AltSeries.CV_ALT_step4	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Cauchy_prod.sum_N_predN	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Cauchy_prod.sum_plus	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: induction N; only 1: simpl; only 1: ring; only 1: rewrite tech5; only 1: rewrite tech5; only 1: rewrite tech5; only 1: rewrite IHN; only 1: ring).	0.098465	9
coq-tactician-stdlib.8.11.dev	Coq.Reals.AltSeries.CV_ALT	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.AltSeries.alternated_series	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply CV_ALT; only 1: assumption; only 1: unfold positivity_seq; only 1: apply decreasing_ineq; only 1: assumption; only 1: assumption; only 1: assumption).	0.033254	8
coq-tactician-stdlib.8.11.dev	Coq.Reals.AltSeries.alternated_series_ineq	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.AltSeries.PI_tg_pos	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.AltSeries.PI_tg_decreasing	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.AltSeries.PI_tg_cv	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.AltSeries.exist_PI	120	0.0.0	synth with cache (only 1: apply alternated_series; only 1: apply PI_tg_decreasing; only 1: apply PI_tg_cv).	0.030089	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.AltSeries.Alt_PI_ineq	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.AltSeries.Alt_PI_RGT_0	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Cauchy_prod.cauchy_finite	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Binomial.pascal_step1	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Binomial.pascal_step2	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Binomial.pascal_step3	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.cos_sym	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Binomial.pascal	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Binomial.binomial	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsigma.Sigma.sigma_split	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rderiv.cont_deriv	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsigma.Sigma.sigma_diff	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsigma.Sigma.sigma_diff_neg	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rderiv.Dconst	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsigma.Sigma.sigma_first	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsigma.Sigma.sigma_last	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rderiv.Dx	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rsigma.Sigma.sigma_eq_arg	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rderiv.Dadd	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rderiv.Dmult	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rderiv.Dmult_const	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rderiv.Dopp	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rderiv.Dminus	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rderiv.Dx_pow_n	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rderiv.Dcomp	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rderiv.D_pow_n	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.tech1	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: induction N; only 1: simpl; only 1: apply H; only 1: apply le_n; only 1: simpl; only 1: apply Rplus_lt_0_compat; only 1: apply IHN; only 1: intros; only 1: apply H; only 1: apply le_S; only 1: assumption; only 1: apply H; only 1: apply le_n).	0.059845	14
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.tech2	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.tech3	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.tech4	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.tech5	120	0.0	synth with cache (only 1: intros; only 1: reflexivity).	0.036716	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.tech6	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.tech7	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.tech11	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.tech12	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Pser; only 1: unfold infinite_sum; only 1: unfold Un_cv in H; only 1: assumption).	0.046504	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.scal_sum	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: induction N; only 1: simpl; only 1: ring; only 1: rewrite tech5; only 1: rewrite tech5; only 1: rewrite Rmult_plus_distr_l; only 1: rewrite <- IHN; only 1: ring).	0.063473	9
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.decomp_sum	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.plus_sum	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: induction N; only 1: simpl; only 1: ring; only 1: rewrite tech5; only 1: rewrite tech5; only 1: rewrite tech5; only 1: rewrite IHN; only 1: ring).	0.077867	9
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.sum_eq	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.uniqueness_sum	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.minus_sum	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: induction N; only 1: simpl; only 1: ring; only 1: rewrite tech5; only 1: rewrite tech5; only 1: rewrite tech5; only 1: rewrite IHN; only 1: ring).	0.072953	9
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.sum_decomposition	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.sum_Rle	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.Rsum_abs	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.sum_cte	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: induction N; only 1: simpl; only 1: ring; only 1: rewrite tech5; only 1: rewrite IHN; only 1: rewrite S_INR; only 1: rewrite S_INR; only 1: rewrite S_INR; only 1: ring).	0.067005	10
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.sum_growing	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.Rabs_triang_gen	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.cond_pos_sum	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: induction N; only 1: simpl; only 1: apply H; only 1: rewrite tech5; only 1: apply Rplus_le_le_0_compat; only 1: apply IHN; only 1: apply H).	0.036571	8
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.cauchy_abs	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.cv_cauchy_1	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.cv_cauchy_2	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply R_complete; only 1: unfold Cauchy_crit_series in H; only 1: exact H).	0.034182	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.sum_eq_R0	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: induction N; only 1: simpl; only 1: apply H; only 1: apply le_n; only 1: rewrite tech5; only 1: rewrite IHN; only 1: rewrite Rplus_0_l; only 1: apply H; only 1: apply le_n; only 1: intros; only 1: apply H; only 1: apply Nat.le_trans with N; only 1: assumption; only 1: apply Nat.le_succ_diag_r).	0.055286	15
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.sum_incr	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.PartSum.sum_cv_maj	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_le_0	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.eps2_Rgt_R0	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.eps2	120	0.0.0	synth with cache (only 1: intros ?; only 1: apply eq_sym; only 1: apply double_var).	0.031697	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.eps4	120	0.0	synth with cache (only 1: intros ?; only 1: field).	0.057354	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.Rlt_eps2_eps	120	0.0	synth with cache (only 1: intros; only 1: lra).	0.030886	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.Rlt_eps4_eps	120	0.0	synth with cache (only 1: intros; only 1: lra).	0.032459	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.prop_eps	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.mul_factor_wd	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.mul_factor_gt	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.mul_factor_gt_f	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.tech_limit	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.Fourier_util.Rlt_mult_inv_pos	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.tech_limit_contr	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.Fourier_util.Rlt_zero_pos_plus1	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite Rplus_comm; only 1: apply Rle_lt_0_plus_1; only 1: red; only 1: auto with real).	0.042134	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.lim_x	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold limit1_in; only 1: unfold limit_in; only 1: simpl; only 1: intros; only 1: split with eps; only 1: split; only 1: auto; only 1: intros; only 1: elim H0; only 1: intros; only 1: auto).	0.044042	11
coq-tactician-stdlib.8.11.dev	Coq.micromega.Fourier_util.Rle_zero_pos_plus1	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.limit_plus	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.Fourier_util.Rle_mult_inv_pos	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: case H; only 1: intros; only 1: red; only 1: left; only 1: apply Rlt_mult_inv_pos; only 1: auto with real; only 1: auto with real; only 1: intros; only 1: rewrite <- H1; only 1: red; only 1: right; only 1: ring).	0.068268	16
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.limit_Ropp	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.limit_minus	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.limit_free	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.limit_mul	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.single_limit	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.limit_comp	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlimit.limit_inv	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis2.formule	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis2.maj_term1	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis2.maj_term2	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis2.maj_term3	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis2.maj_term4	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis2.D_x_no_cond	120	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold D_x; only 1: unfold no_cond; only 1: split; only 1: trivial; only 1: apply Rminus_not_eq; only 1: unfold Rminus; only 1: rewrite Ropp_plus_distr; only 1: rewrite <- Rplus_assoc; only 1: rewrite Rplus_opp_r; only 1: rewrite Rplus_0_l; only 1: apply Ropp_neq_0_compat; only 1: assumption).	0.068393	13
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis2.Rabs_4	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis2.Rlt_4	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis2.quadruple	120	0.0	synth with cache (only 1: intros ?; only 1: ring).	0.038526	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis2.quadruple_var	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite <- quadruple; only 1: unfold Rdiv; only 1: rewrite <- Rmult_assoc; only 1: rewrite Rinv_r_simpl_m; only 1: trivial; only 1: discrR).	0.044595	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.Ranalysis2.continuous_neq_0	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rcomplete.R_complete	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.growing_cv	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.decreasing_growing	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: unfold Un_growing; only 1: unfold opp_seq; only 1: unfold Un_decreasing; only 1: intros; only 1: apply Ropp_le_contravar; only 1: apply H).	0.032232	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.decreasing_cv	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.ub_to_lub	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.lb_to_glb	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.maj_ss	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.min_ss	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.Wn_decreasing	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.Vn_growing	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.Vn_Un_Wn_order	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.min_maj	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.maj_min	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.cauchy_maj	120	0.0.0.0	synth with cache (only 1: intros; only 1: unfold has_ub; only 1: apply cauchy_bound; only 1: assumption).	0.028218	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.cauchy_opp	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.cauchy_min	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.in_holed_interval_dec	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.maj_cv	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply decreasing_cv; only 1: apply Wn_decreasing; only 1: apply maj_min; only 1: apply cauchy_min; only 1: assumption).	0.062683	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.middle_in_interval	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.min_cv	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply growing_cv; only 1: apply Vn_growing; only 1: apply min_maj; only 1: apply cauchy_maj; only 1: assumption).	0.060925	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.point_in_holed_interval_works	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.first_in_holed_interval	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.cond_eq	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.not_Rlt	120	1	synth with cache (only 1: eauto using Rnot_gt_ge with rorders).	0.031849	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.first_in_holed_interval_works	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.split_couple_eq	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: injection H; only 1: intros; only 1: split; only 1: subst; only 1: reflexivity; only 1: subst; only 1: reflexivity).	0.037768	8
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.approx_maj	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.first_two_in_interval_works	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.approx_min	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.tearing_sequences	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.UL_sequence	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.CV_plus	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.tearing_sequences_projsig	120	0.0.0.0.0	synth with cache (only 1: simpl; only 1: destruct tearing_sequences; only 1: destruct x; only 1: simpl; only 1: reflexivity).	0.205773	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.cv_cvabs	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.CV_Cauchy	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.maj_by_pos	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.CV_mult	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Rsrt	120	0.0.1.1.0.1.0.1.0.1.0.1.0.1.0.1.0.1.0.1.0.1.0.1.0.1.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: constructor; only 1: exact Rplus_0_l; only 1: exact Rplus_comm; only 1: intros; only 1: rewrite Rplus_assoc; only 1: auto; only 1: exact Rmult_1_l; only 1: intros; only 1: apply Rquot1; only 1: rewrite Rrepr_mult; only 1: rewrite Rrepr_mult; only 1: apply ConstructiveCauchyRealsMult.CReal_mult_comm; only 1: intros; only 1: rewrite Rmult_assoc; only 1: auto; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: ring; only 1: reflexivity; only 1: exact Rplus_opp_r).	0.165096	87
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.tearing_sequences_inc_dec	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.tech9	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.split_lt_succ	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.increase_seq_transit	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.tech13	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.decrease_seq_transit	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.growing_ineq	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Rsor	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.MaxRlist_P1	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Rinv_1	120	0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite Rinv_1; only 1: rewrite Rmult_comm; only 1: apply Rmult_1_l).	0.031372	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.CV_opp	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Qeq_true	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply Qeq_eqR; only 1: apply Qeq_bool_eq; only 1: auto).	0.033218	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.MinRlist_P1	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.decreasing_ineq	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.tearing_sequences_ordered_forall	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Qeq_false	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Qeq_bool_neq in H; only 1: contradict H; only 1: apply eqR_Qeq; only 1: easy).	0.034775	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.AbsList_P1	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: induction l; only 1: elim H; only 1: simpl; only 1: simpl in H; only 1: elim H; only 1: intros ?; only 1: left; only 1: rewrite H0; only 1: reflexivity; only 1: intros ?; only 1: right; only 1: apply IHl; only 1: assumption).	0.054974	14
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.torn_number	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Qle_true	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply Qle_Rle; only 1: apply Qle_bool_imp_le; only 1: easy).	0.031553	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.torn_number_above_first_sequence	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Q2R_0	120	0	synth with cache (only 1: apply Rmult_0_l).	0.027311	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.MinRlist_P2	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Q2R_1	120	0.0	synth with cache (only 1: compute; only 1: apply Rinv_1).	0.027202	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.torn_number_below_second_sequence	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.AbsList_P2	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Q2R_inv_ext	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.MaxRlist_P2	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.pos_Rl_P1	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.QSORaddon	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: constructor; only 1: constructor; only 1: apply Q2R_0; only 1: apply Q2R_1; only 1: intros; only 1: apply Q2R_plus; only 1: intros; only 1: apply Q2R_minus; only 1: unfold Qmult; only 1: unfold Q2R; only 1: intros ?; only 1: destruct x; only 1: intros ?; only 1: destruct y; only 1: unfold Qden; only 1: unfold Qnum; only 1: simpl_mult; only 1: rewrite mult_IZR; only 1: rewrite mult_IZR; only 1: field; only 1: auto; only 1: intros; only 1: apply Q2R_opp; only 1: intros; only 1: apply Qeq_true; only 1: auto; only 1: apply R_power_theory; only 1: intros; only 1: apply Qeq_bool_neq in H; only 1: contradict H; only 1: apply eqR_Qeq; only 1: easy; only 1: intros; only 1: apply Qle_Rle; only 1: apply Qle_bool_imp_le; only 1: easy).	0.125651	36
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.limit_index_above_all_indices	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.pos_Rl_P2	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.is_neg_true	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.first_indices_increasing	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.Rlist_P1	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P0	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: induction l; only 1: left; only 1: reflexivity; only 1: simpl; only 1: case Rle_dec; only 1: intros ?; only 1: right; only 1: reflexivity; only 1: intros ?; only 1: left; only 1: reflexivity).	0.039964	12
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.is_neg_false	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Q2R_m_Proper	120	1	synth with cache (only 1: exact Qeq_eqR).	0.047669	10
coq-tactician-stdlib.8.11.dev	Coq.Reals.Runcountable.R_uncountable	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P1	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P2	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Q2R_pow_pos	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Q2R_pow_N	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P3	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Qmult_integral	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct q; only 1: intros ?; only 1: destruct r; only 1: unfold Qeq; only 1: unfold Qmult; only 1: simpl; only 1: rewrite <- Z.mul_eq_0; only 1: rewrite Z.mul_1_r; only 1: rewrite Z.mul_1_r; only 1: rewrite Z.mul_1_r; only 1: easy).	0.072553	12
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P4	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P5	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Qpower_positive_eq_zero	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P6	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Qpower_positive_zero	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P7	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Q2RpowerRZ	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P8	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Qpower0	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct z; only 1: intros ?; only 1: elim H; only 1: reflexivity; only 1: intros ?; only 1: simpl; only 1: apply Qpower_positive_zero; only 1: intros ?; only 1: simpl; only 1: rewrite Qpower_positive_zero; only 1: reflexivity).	0.046369	12
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P9	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P10	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: induction l; only 1: reflexivity; only 1: simpl; only 1: case Rle_dec; only 1: intros ?; only 1: simpl; only 1: rewrite IHl; only 1: reflexivity; only 1: intros ?; only 1: reflexivity).	0.043779	11
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P11	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P12	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Q_of_RcstR	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P13	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P14	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Reval_formula_compat	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Reval_formula; only 1: destruct f; only 1: unfold Reval_formula'; only 1: unfold Reval_expr; only 1: split; only 1: destruct Fop; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: apply Rge_le; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: destruct Fop; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: apply Rle_ge; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.097787	32
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P15	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.Reval_nformula_dec	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P16	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P17	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.RWeakChecker_sound	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P18	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P19	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: induction l; only 1: elim H; only 1: reflexivity; only 1: exists r; only 1: exists l; only 1: reflexivity).	0.060391	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P20	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.RMicromega.RTautoChecker_sound	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P21	120	0.0.0	synth with cache (only 1: intros; only 1: rewrite H; only 1: reflexivity).	0.035833	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P22	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P23	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P24	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P25	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P26	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P27	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P28	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RList.RList_P29	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.INR_fact_neq_0	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.fact_simpl	120	0.0	synth with cache (only 1: intros ?; only 1: reflexivity).	0.022556	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.simpl_fact	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite Rinv_involutive; only 1: unfold fact at 1; only 1: fold fact; only 1: rewrite mult_INR; only 1: rewrite Rinv_mult_distr; only 1: rewrite Rmult_assoc; only 1: rewrite Rinv_l; only 1: apply Rmult_ne; only 1: apply INR_fact_neq_0; only 1: apply not_0_INR; only 1: discriminate; only 1: apply INR_fact_neq_0; only 1: apply INR_fact_neq_0).	0.039802	14
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_O	120	0	synth with cache (only 1: reflexivity).	0.022313	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_1	120	0.0.0.0	synth with cache (only 1: simpl; only 1: intros ?; only 1: rewrite Rmult_comm; only 1: apply Rmult_1_l).	0.026025	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_add	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: elim n; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite H; only 1: auto with real).	0.039783	11
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.Rpow_mult_distr	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: induction n; only 1: field; only 1: simpl; only 1: rewrite Rmult_assoc; only 1: rewrite Rmult_assoc; only 1: apply Rmult_eq_compat_l; only 1: rewrite IHn; only 1: field).	0.072247	11
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_nonzero	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_RN_plus	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: elim n; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite Rmult_assoc; only 1: rewrite <- H; only 1: auto; only 1: auto).	0.105776	14
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_lt	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.Rlt_pow_R1	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.Rlt_pow	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.tech_pow_Rmult	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.tech_pow_Rplus	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.poly	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.Power_monotonic	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.RPow_abs	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.Pow_x_infinity	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_ne_zero	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.Rinv_pow	120	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: elim n; only 1: simpl; only 1: apply Rinv_1; only 1: simpl; only 1: intros ?; only 1: intros ?; only 1: rewrite Rinv_mult_distr; only 1: rewrite H0; only 1: reflexivity; only 1: assumption; only 1: apply pow_nonzero; only 1: assumption).	0.042753	13
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_lt_1_zero	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_R1	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_Rsqr	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_le	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: induction n; only 1: simpl; only 1: left; only 1: auto with real; only 1: simpl; only 1: apply Rmult_le_pos; only 1: assumption; only 1: assumption).	0.036670	9
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_1_even	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_1_odd	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_1_abs	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_mult	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_incr	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_R1_Rle	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.Rle_pow	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow1	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: rewrite IHn; only 1: rewrite Rmult_1_r; only 1: reflexivity).	0.038796	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_Rabs	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.pow_maj_Rabs	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.Rsqr_pow2	120	0.0.0	synth with cache (only 1: intros; only 1: unfold Rsqr; only 1: field).	0.038571	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rseries.sequence.EUn_noempty	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rseries.sequence.Un_in_EUn	120	0.0.0.0	synth with cache (only 1: intros ?; only 1: unfold EUn; only 1: split with n; only 1: trivial).	0.028592	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rseries.sequence.Un_bound_imp	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rseries.sequence.growing_prop	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.PowerRZ.Z_compl.intP	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.PowerRZ.Zpower_NR0	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_O	120	0	synth with cache (only 1: reflexivity).	0.027356	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_1	120	0.0.0.0	synth with cache (only 1: simpl; only 1: intros ?; only 1: rewrite Rmult_comm; only 1: apply Rmult_1_l).	0.029114	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rseries.sequence.Un_cv_crit_lub	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rseries.sequence.Un_cv_crit	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_NOR	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rseries.sequence.finite_greater	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rseries.sequence.cauchy_bound	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_pos_sub	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rseries.GP_infinite	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_add	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: destruct n; only 1: intros ?; only 1: destruct m; only 1: simpl; only 1: intros; only 1: auto with real; only 1: simpl; only 1: intros; only 1: auto with real; only 1: simpl; only 1: intros; only 1: auto with real; only 1: intros ?; only 1: destruct m; only 1: simpl; only 1: intros; only 1: auto with real; only 1: simpl; only 1: intros; only 1: rewrite Pos2Nat.inj_add; only 1: auto with real; only 1: simpl; only 1: intros ?; only 1: apply powerRZ_pos_sub; only 1: auto; only 1: intros ?; only 1: destruct m; only 1: simpl; only 1: intros; only 1: auto with real; only 1: simpl; only 1: intros; only 1: rewrite Rmult_comm; only 1: apply powerRZ_pos_sub; only 1: auto; only 1: simpl; only 1: intros; only 1: rewrite Pos2Nat.inj_add; only 1: rewrite pow_add; only 1: apply Rinv_mult_distr; only 1: apply pow_nonzero; only 1: auto; only 1: apply pow_nonzero; only 1: auto).	0.094499	46
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rseries.CV_shift	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rseries.CV_shift'	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rseries.Un_growing_shift	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply H).	0.031879	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.PowerRZ.Zpower_nat_powerRZ	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: elim m; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: intros ?; only 1: intros ?; only 1: rewrite SuccNat2Pos.id_succ; only 1: simpl; only 1: rewrite mult_IZR; only 1: rewrite <- INR_IZR_INZ; only 1: rewrite H; only 1: case n0; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: intros ?; only 1: rewrite SuccNat2Pos.id_succ; only 1: auto).	0.057041	20
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.PowerRZ.Zpower_pos_powerRZ	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Zpower_pos_nat; only 1: simpl; only 1: induction BinPosDef.Pos.to_nat; only 1: easy; only 1: unfold Zpower_nat; only 1: simpl; only 1: rewrite mult_IZR; only 1: rewrite <- IHn0; only 1: easy).	0.039571	10
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_lt	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: case z; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: auto with real).	0.039953	9
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_le	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply Rlt_le; only 1: auto with real).	0.034559	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.PowerRZ.Zpower_nat_powerRZ_absolu	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rminmax.Rmax_l	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmax_case_strong; only 1: auto using Rle_antisym; only 1: intros ?; only 1: apply Rle_antisym; only 1: assumption; only 1: assumption).	0.034563	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_R1	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: case n; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros ?; only 1: elim BinPosDef.Pos.to_nat; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros ?; only 1: intros ?; only 1: rewrite H; only 1: ring; only 1: simpl; only 1: intros ?; only 1: elim BinPosDef.Pos.to_nat; only 1: simpl; only 1: exact Rinv_1; only 1: simpl; only 1: intros ?; only 1: intros ?; only 1: rewrite Rinv_mult_distr; only 1: rewrite Rinv_1; only 1: rewrite H; only 1: auto with real; only 1: auto with real; only 1: auto with real).	0.084782	28
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rminmax.Rmax_r	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmax_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	0.033717	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.PowerRZ.pow_powerRZ	120	0.0.0.0.0	synth with cache (only 1: induction n; only 1: easy; only 1: simpl; only 1: rewrite SuccNat2Pos.id_succ; only 1: easy).	0.032120	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_ind	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_inv	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rminmax.Rmin_l	120	0.0.0.1	synth with cache (only 1: intros; only 1: apply Rmin_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	0.173861	12
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_neg	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct alpha; only 1: intros ?; only 1: simpl; only 1: easy; only 1: intros ?; only 1: simpl; only 1: rewrite Rinv_pow; only 1: easy; only 1: easy; only 1: intros ?; only 1: simpl; only 1: rewrite Rinv_pow; only 1: rewrite Rinv_involutive; only 1: easy; only 1: easy; only 1: apply Rinv_neq_0_compat; only 1: easy).	0.039437	18
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rminmax.Rmin_r	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Rmin; only 1: intros; only 1: destruct Rle_dec; only 1: apply Rle_antisym; only 1: assumption; only 1: assumption; only 1: apply Rnot_le_lt in n; only 1: unfold Rle in *; only 1: intuition).	0.037942	9
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.PowerRZ.powerRZ_mult_distr	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rminmax.R.plus_max_distr_l	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply max_monotone; only 1: intros ?; only 1: intros ?; only 1: apply Rplus_le_compat_l).	0.032274	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.GP_finite	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.sum_f_R0_triangle	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.R_dist_pos	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.R_dist_sym	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold R_dist; only 1: intros; only 1: unfold Rabs; only 1: destruct Rcase_abs; only 1: destruct Rcase_abs; only 1: apply Rminus_lt in r; only 1: apply Rlt_asym in r; only 1: apply Rminus_lt in r0; only 1: contradiction; only 1: ring; only 1: destruct Rcase_abs; only 1: ring; only 1: destruct r; only 1: destruct r0; only 1: apply Ropp_lt_gt_0_contravar in H; only 1: rewrite Ropp_minus_distr in H; only 1: apply Rlt_asym in H0; only 1: contradiction; only 1: apply Rminus_diag_uniq in H0; only 1: intropattern subst -> H0; only 1: trivial; only 1: destruct r0; only 1: apply Rminus_diag_uniq in H; only 1: intropattern subst -> H; only 1: trivial; only 1: apply Rminus_diag_uniq in H0; only 1: intropattern subst -> H0; only 1: trivial).	0.123499	28
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.R_dist_refl	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.R_dist_eq	120	0.0.0.0.0	synth with cache (only 1: unfold R_dist; only 1: intros; only 1: split_Rabs; only 1: ring; only 1: ring).	0.041976	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.R_dist_tri	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.R_dist_plus	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rfunctions.R_dist_mult_l	120	0.0.0.0.0.0.0	synth with cache (only 1: unfold R_dist; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite <- Rmult_minus_distr_l; only 1: rewrite Rabs_mult; only 1: reflexivity).	0.034887	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.toRad_inj	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.deg_rad	120	0.0.0.0	synth with cache (only 1: intros ?; only 1: apply toRad_inj; only 1: rewrite rad_deg; only 1: reflexivity).	0.048437	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.Rsqr_sin_cos_d_one	120	0.0.0.0	synth with cache (only 1: intros ?; only 1: unfold sind; only 1: unfold cosd; only 1: apply sin2_cos2).	0.041935	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_calc.sin_lb_ge_0	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ArithProp.minus_neq_O	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ArithProp.le_minusni_n	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ArithProp.lt_minus_O_lt	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ArithProp.even_odd_cor	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ArithProp.le_double	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ArithProp.euclidian_division	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ArithProp.tech8	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ROrderedType.Req_dec	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ROrderedType.Reqb_eq	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Reqb; only 1: destruct Req_dec; only 1: auto with *; only 1: split; only 1: discriminate; only 1: intros ?; only 1: elim n; only 1: auto).	0.035322	9
coq-tactician-stdlib.8.11.dev	Coq.Reals.ROrderedType.Rcompare_spec	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rcompare; only 1: destruct total_order_T; only 1: destruct s; only 1: auto; only 1: auto; only 1: auto).	0.039315	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.ROrderedType.R_as_OT.lt_strorder	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ROrderedType.R_as_OT.lt_compat	120	0.0.0.1.0.0.0	synth with cache (only 1: red; only 1: red; only 1: red; only 1: red; only 1: intros; only 1: subst; only 1: auto).	0.037902	9
coq-tactician-stdlib.8.11.dev	Coq.Reals.ROrderedType.R_as_OT.le_lteq	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.sin_antisym	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.sin_0	120	0.0.0.0	synth with cache (only 1: unfold sin; only 1: case exist_sin; only 1: intros; only 1: ring).	0.036639	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.exist_cos0	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo_def.cos_0	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_neg	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_mult	120	0.0	synth with cache (only 1: intros; only 1: ring_Rsqr).	0.035922	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_plus	120	0.0	synth with cache (only 1: intros; only 1: ring_Rsqr).	0.037480	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_minus	120	0.0	synth with cache (only 1: intros; only 1: ring_Rsqr).	0.038578	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_neg_minus	120	0.0	synth with cache (only 1: intros; only 1: ring_Rsqr).	0.031709	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_1	120	0	synth with cache (only 1: ring_Rsqr).	0.030107	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_gt_0_0	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_pos_lt	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_div	120	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rsqr; only 1: unfold Rdiv; only 1: rewrite Rinv_mult_distr; only 1: rewrite Rmult_assoc; only 1: rewrite Rmult_assoc; only 1: apply Rmult_eq_compat_l; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_assoc; only 1: apply Rmult_eq_compat_l; only 1: reflexivity; only 1: assumption; only 1: assumption).	0.042416	13
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_eq_0	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_minus_plus	120	0.0	synth with cache (only 1: intros; only 1: ring_Rsqr).	0.033318	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_plus_minus	120	0.0	synth with cache (only 1: intros; only 1: ring_Rsqr).	0.034611	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_incr_0	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_incr_0_var	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_incr_1	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rsqr; only 1: apply Rmult_le_compat; only 1: assumption; only 1: assumption; only 1: assumption; only 1: assumption).	0.024946	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_incrst_0	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_incrst_1	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rsqr; only 1: apply Rmult_le_0_lt_compat; only 1: assumption; only 1: assumption; only 1: assumption; only 1: assumption).	0.027410	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_neg_pos_le_0	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_neg_pos_le_1	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.neg_pos_Rsqr_le	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_abs	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: unfold Rabs; only 1: case Rcase_abs; only 1: intros ?; only 1: apply Rsqr_neg; only 1: intros ?; only 1: reflexivity).	0.025585	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_le_abs_0	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Rsqr_incr_0; only 1: rewrite <- Rsqr_abs; only 1: rewrite <- Rsqr_abs; only 1: assumption; only 1: apply Rabs_pos; only 1: apply Rabs_pos).	0.029923	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_le_abs_1	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_lt_abs_0	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Rsqr_incrst_0; only 1: rewrite <- Rsqr_abs; only 1: rewrite <- Rsqr_abs; only 1: assumption; only 1: apply Rabs_pos; only 1: apply Rabs_pos).	0.030260	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_lt_abs_1	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_inj	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_eq_abs_0	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_eq_asb_1	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.triangle_rectangle	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.triangle_rectangle_lt	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.triangle_rectangle_le	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_inv	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rsqr; only 1: rewrite Rinv_mult_distr; only 1: reflexivity; only 1: assumption; only 1: assumption).	0.030272	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.canonical_Rsqr	120	0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rsqr; only 1: field; only 1: apply a).	0.095887	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_sqr.Rsqr_eq	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmin_case	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold Rmin; only 1: case Rle_dec; only 1: auto; only 1: auto).	0.031494	9
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmin_case_strong	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold Rmin; only 1: destruct Rle_dec; only 1: auto with real; only 1: auto with real).	0.034999	9
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmin_Rgt_l	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmin_Rgt_r	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rmin; only 1: case Rle_dec; only 1: elim H; only 1: clear H; only 1: intros; only 1: assumption; only 1: elim H; only 1: clear H; only 1: intros; only 1: assumption).	0.033077	11
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmin_Rgt	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmin_l	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rmin; only 1: case Rle_dec; only 1: intros ?; only 1: right; only 1: reflexivity; only 1: intros ?; only 1: auto with real).	0.028082	8
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmin_r	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rmin; only 1: case Rle_dec; only 1: intros ?; only 1: assumption; only 1: intros ?; only 1: auto with real).	0.025212	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmin_left	120	0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Rmin; only 1: intros; only 1: destruct Rle_dec; only 1: unfold Rle in *; only 1: intuition; only 1: apply Rnot_le_lt in n; only 1: unfold Rle in *; only 1: intuition).	0.085668	8
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmin_right	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Rmin; only 1: intros; only 1: destruct Rle_dec; only 1: apply Rle_antisym; only 1: assumption; only 1: assumption; only 1: apply Rnot_le_lt in n; only 1: unfold Rle in *; only 1: intuition).	0.033777	9
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rle_min_compat_r	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmin_case_strong; only 1: intros ?; only 1: apply Rmin_case_strong; only 1: intros ?; only 1: eauto using Rle_trans, Rle_refl; only 1: intros ?; only 1: eauto using Rle_trans, Rle_refl; only 1: intros ?; only 1: apply Rmin_case_strong; only 1: intros ?; only 1: eauto using Rle_trans, Rle_refl; only 1: intros ?; only 1: eauto using Rle_trans, Rle_refl).	0.048930	14
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rle_min_compat_l	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmin_case_strong; only 1: intros ?; only 1: apply Rmin_case_strong; only 1: intros ?; only 1: eauto using Rle_trans, Rle_refl; only 1: intros ?; only 1: eauto using Rle_trans, Rle_refl; only 1: intros ?; only 1: apply Rmin_case_strong; only 1: intros ?; only 1: eauto using Rle_trans, Rle_refl; only 1: intros ?; only 1: eauto using Rle_trans, Rle_refl).	0.053399	14
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmin_comm	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rmin; only 1: case Rle_dec; only 1: case Rle_dec; only 1: intros; only 1: apply Rle_antisym; only 1: assumption; only 1: assumption; only 1: intros; only 1: reflexivity; only 1: case Rle_dec; only 1: intros; only 1: apply Rnot_le_lt in n; only 1: unfold Rle in *; only 1: intuition; only 1: intros; only 1: apply Rle_antisym; only 1: auto with real; only 1: auto with real).	0.051727	19
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmin_stable_in_posreal	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmin_Rgt_r; only 1: split; only 1: apply cond_pos; only 1: apply cond_pos).	0.026601	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmin_pos	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rmin; only 1: case Rle_dec; only 1: intros ?; only 1: assumption; only 1: intros ?; only 1: assumption).	0.029670	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmin_glb	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rmin; only 1: case Rle_dec; only 1: intros ?; only 1: assumption; only 1: intros ?; only 1: assumption).	0.026390	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmin_glb_lt	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rmin; only 1: case Rle_dec; only 1: intros ?; only 1: assumption; only 1: intros ?; only 1: assumption).	0.026828	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmax_case	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold Rmax; only 1: case Rle_dec; only 1: auto; only 1: auto).	0.030857	9
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmax_case_strong	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold Rmax; only 1: case Rle_dec; only 1: auto with real; only 1: auto with real).	0.033661	9
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmax_Rle	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmax_comm	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: unfold Rmax; only 1: case Rle_dec; only 1: case Rle_dec; only 1: intros ?; only 1: intros ?; only 1: apply Rle_antisym; only 1: assumption; only 1: assumption; only 1: auto; only 1: case Rle_dec; only 1: auto; only 1: intros ?; only 1: intros ?; only 1: apply Rle_antisym; only 1: auto with real; only 1: auto with real).	0.055193	18
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmax_l	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rmax; only 1: case Rle_dec; only 1: intros ?; only 1: assumption; only 1: intros ?; only 1: auto with real).	0.028254	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmax_r	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rmax; only 1: case Rle_dec; only 1: intros ?; only 1: right; only 1: reflexivity; only 1: intros ?; only 1: auto with real).	0.032288	8
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmax_left	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmax_case_strong; only 1: auto using Rle_antisym; only 1: intros ?; only 1: apply Rle_antisym; only 1: assumption; only 1: assumption).	0.032879	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmax_right	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmax_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	0.030164	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rle_max_compat_r	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmax_case_strong; only 1: intros ?; only 1: apply Rmax_case_strong; only 1: intros ?; only 1: eauto using Rle_trans, Rle_refl; only 1: intros ?; only 1: eauto using Rle_trans, Rle_refl; only 1: intros ?; only 1: apply Rmax_case_strong; only 1: intros ?; only 1: eauto using Rle_trans, Rle_refl; only 1: intros ?; only 1: eauto using Rle_trans, Rle_refl).	0.337528	14
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rle_max_compat_l	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmax_case_strong; only 1: intros ?; only 1: apply Rmax_case_strong; only 1: intros ?; only 1: eauto using Rle_trans, Rle_refl; only 1: intros ?; only 1: eauto using Rle_trans, Rle_refl; only 1: intros ?; only 1: apply Rmax_case_strong; only 1: intros ?; only 1: eauto using Rle_trans, Rle_refl; only 1: intros ?; only 1: eauto using Rle_trans, Rle_refl).	0.268570	14
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.RmaxRmult	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmax_stable_in_negreal	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rmax; only 1: case Rle_dec; only 1: intros ?; only 1: apply cond_neg; only 1: intros ?; only 1: apply cond_neg).	0.029565	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmax_lub	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rmax; only 1: case Rle_dec; only 1: intros ?; only 1: assumption; only 1: intros ?; only 1: assumption).	0.030203	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmax_lub_lt	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rmax; only 1: case Rle_dec; only 1: intros ?; only 1: assumption; only 1: intros ?; only 1: assumption).	0.036431	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmax_Rlt	120	0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: split; only 1: unfold Rmax; only 1: case Rle_dec; only 1: intros ?; only 1: intros ?; only 1: split; only 1: apply Rle_lt_trans with y; only 1: assumption; only 1: assumption; only 1: assumption; only 1: intros ?; only 1: intros ?; only 1: split; only 1: assumption; only 1: apply Rlt_trans with x; only 1: apply Rnot_le_gt; only 1: assumption; only 1: assumption; only 1: intros ?; only 1: destruct H; only 1: apply Rmax_lub_lt; only 1: assumption; only 1: assumption).	0.049515	30
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmax_neg	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rmax; only 1: case Rle_dec; only 1: intros ?; only 1: assumption; only 1: intros ?; only 1: assumption).	0.031960	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rcase_abs	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_R0	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_R1	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_no_R0	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rabs; only 1: case Rcase_abs; only 1: intros ?; only 1: apply Ropp_neq_0_compat; only 1: auto; only 1: intros ?; only 1: auto).	0.032867	8
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_left	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_right	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_left1	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: case H; only 1: intros ?; only 1: apply Rabs_left; only 1: auto; only 1: intros ?; only 1: rewrite H0; only 1: rewrite Rabs_right; only 1: auto with real; only 1: auto with real).	0.037483	11
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_pos	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rle_abs	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: unfold Rabs; only 1: case Rcase_abs; only 1: intros; only 1: apply Rminus_le; only 1: rewrite <- Rplus_0_r; only 1: unfold Rminus; only 1: rewrite Ropp_involutive; only 1: auto with real; only 1: intros; only 1: auto with real).	0.041209	11
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_le	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: unfold Rabs; only 1: case Rcase_abs; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: clear H0; only 1: clear r; only 1: apply Ropp_le_cancel; only 1: rewrite Ropp_involutive; only 1: exact H; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: clear H; only 1: clear r; only 1: assumption).	0.043723	18
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_pos_eq	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_Rabsolu	120	0.0.0	synth with cache (only 1: intros ?; only 1: apply Rabs_pos_eq; only 1: apply Rabs_pos).	0.027171	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_pos_lt	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreals.IZR_nz	120	0.0.0	synth with cache (only 1: intros; only 1: apply not_0_IZR; only 1: easy).	0.039632	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_minus_sym	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rabs; only 1: destruct Rcase_abs; only 1: destruct Rcase_abs; only 1: apply Rminus_lt in r; only 1: apply Rlt_asym in r; only 1: apply Rminus_lt in r0; only 1: contradiction; only 1: ring; only 1: destruct Rcase_abs; only 1: ring; only 1: destruct r; only 1: destruct r0; only 1: apply Ropp_lt_gt_0_contravar in H; only 1: rewrite Ropp_minus_distr in H; only 1: apply Rlt_asym in H0; only 1: contradiction; only 1: apply Rminus_diag_uniq in H0; only 1: intropattern subst -> H0; only 1: trivial; only 1: destruct r0; only 1: apply Rminus_diag_uniq in H; only 1: intropattern subst -> H; only 1: trivial; only 1: apply Rminus_diag_uniq in H0; only 1: intropattern subst -> H0; only 1: trivial).	0.106160	27
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreals.eqR_Qeq	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_mult	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreals.Qeq_eqR	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_Rinv	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreals.Rle_Qle	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_Ropp	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreals.Qle_Rle	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_triang	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_triang_inv	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreals.Rlt_Qlt	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_triang_inv2	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreals.Qlt_Rlt	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_def1	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreals.Q2R_plus	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.1	synth with cache (only 1: unfold Qplus; only 1: unfold Q2R; only 1: intros ?; only 1: destruct x; only 1: intros ?; only 1: destruct y; only 1: unfold Qden; only 1: unfold Qnum; only 1: simpl_mult; only 1: rewrite plus_IZR; only 1: rewrite mult_IZR; only 1: rewrite mult_IZR; only 1: rewrite mult_IZR; only 1: field; only 1: auto).	0.091498	16
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_def2	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreals.Q2R_mult	120	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Qmult; only 1: unfold Q2R; only 1: intros ?; only 1: destruct x; only 1: intros ?; only 1: destruct y; only 1: unfold Qden; only 1: unfold Qnum; only 1: simpl_mult; only 1: rewrite mult_IZR; only 1: rewrite mult_IZR; only 1: field; only 1: auto).	0.091793	13
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.RmaxAbs	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rabs_Zabs	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: case z; only 1: unfold BinIntDef.Z.abs; only 1: apply Rabs_R0; only 1: unfold BinIntDef.Z.abs; only 1: intros ?; only 1: apply Rabs_pos_eq; only 1: apply IZR_le; only 1: easy; only 1: unfold BinIntDef.Z.abs; only 1: unfold IZR at 1; only 1: intros ?; only 1: rewrite Rabs_Ropp; only 1: apply Rabs_pos_eq; only 1: apply IZR_le; only 1: easy).	0.054390	16
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreals.Q2R_opp	120	0.0.0.0.0.0.0.0.1	synth with cache (only 1: unfold Qopp; only 1: unfold Q2R; only 1: intros ?; only 1: destruct x; only 1: unfold Qden; only 1: unfold Qnum; only 1: rewrite Ropp_Ropp_IZR; only 1: field; only 1: auto).	0.060495	10
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.abs_IZR	120	0.0.0	synth with cache (only 1: intros; only 1: rewrite Rabs_Zabs; only 1: easy).	0.029658	3
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreals.Q2R_minus	120	0.0.0.0.1	synth with cache (only 1: unfold Qminus; only 1: intros; only 1: rewrite Q2R_plus; only 1: rewrite Q2R_opp; only 1: auto).	0.027884	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Ropp_Rmax	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply Rmax_case_strong; only 1: intros ?; only 1: rewrite Rmin_left; only 1: easy; only 1: elim H; only 1: auto with real; only 1: auto with real; only 1: intros ?; only 1: rewrite Rmin_right; only 1: easy; only 1: apply Rge_le; only 1: apply Ropp_le_ge_contravar; only 1: assumption).	0.041790	15
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Ropp_Rmin	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply Rmin_case_strong; only 1: intros ?; only 1: rewrite Rmax_left; only 1: easy; only 1: apply Rge_le; only 1: apply Ropp_le_ge_contravar; only 1: assumption; only 1: intros ?; only 1: rewrite Rmax_right; only 1: easy; only 1: elim H; only 1: auto with real; only 1: auto with real).	0.045124	15
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreals.Q2R_inv	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreals.Q2R_div	120	0.0.0.0.0.0.0	synth with cache (only 1: unfold Qdiv; only 1: unfold Rdiv; only 1: intros; only 1: rewrite Q2R_mult; only 1: rewrite Q2R_inv; only 1: auto; only 1: auto).	0.030100	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_Ifp.tech_up	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_Ifp.up_tech	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply tech_up with (1 := H0); only 1: rewrite plus_IZR; only 1: apply Rplus_le_compat_r; only 1: easy).	0.031592	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmax_assoc	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rminmax	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_Ifp.fp_R0	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_Ifp.for_base_fp	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_Ifp.base_fp	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rbasic_fun.Rmin_assoc	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_Ifp.base_Int_part	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_Ifp.Int_part_INR	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_Ifp.fp_nat	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_Ifp.R0_fp_O	120	0.0.0.0.0.0	synth with cache (only 1: red; only 1: intros; only 1: rewrite <- H0 in H; only 1: generalize fp_R0; only 1: intros ?; only 1: auto with zarith real).	0.036000	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_Ifp.Rminus_Int_part1	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_Ifp.Rminus_Int_part2	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_Ifp.Rminus_fp1	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_Ifp.Rminus_fp2	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_Ifp.plus_Int_part1	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_Ifp.plus_Int_part2	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_Ifp.plus_frac_part1	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.R_Ifp.plus_frac_part2	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlogic.Arithmetical_dec.sig_forall_dec	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlogic.not_not_archimedean	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rlogic.sig_not_dec	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_le_0	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_lt_0	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_lt_0_var	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_lt_0	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.tan_gt_0	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.tan_lt_0	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_ge_0_3PI2	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.form1	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.form2	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.form3	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.form4	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_increasing_0	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_increasing_1	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_decreasing_0	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_decreasing_1	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_increasing_0	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_increasing_1	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_decreasing_0	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rle_refl	120	0.0.0	synth with cache (only 1: intros ?; only 1: right; only 1: trivial).	0.021040	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rge_refl	120	0.0.0	synth with cache (only 1: intros ?; only 1: right; only 1: trivial).	0.017786	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rlt_irrefl	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: eapply Rlt_asym; only 1: eauto; only 1: auto).	0.022351	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rgt_irrefl	120	0	synth with cache (only 1: exact Rlt_irrefl).	0.020292	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rlt_not_eq	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: red; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intropattern subst -> H0; only 1: eapply Rlt_asym; only 1: eauto; only 1: auto).	0.025381	9
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rgt_not_eq	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply not_eq_sym; only 1: apply Rlt_not_eq; only 1: easy).	0.021386	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rlt_dichotomy_converse	120	0.0.0.0.0	synth with cache (only 1: intuition; only 1: apply Rlt_not_eq in H1; only 1: eauto; only 1: apply Rgt_not_eq in H1; only 1: eauto).	0.123944	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Req_dec	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rtotal_order	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rdichotomy	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rlt_le	120	0.0.0	synth with cache (only 1: intros; only 1: red; only 1: tauto).	0.045656	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rgt_ge	120	0.0.0	synth with cache (only 1: intros; only 1: red; only 1: tauto).	0.023476	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rle_ge	120	0.0.0.0.0	synth with cache (only 1: destruct 1; only 1: red; only 1: auto with real; only 1: red; only 1: auto with real).	0.030070	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rge_le	120	0.0.0.0.0	synth with cache (only 1: destruct 1; only 1: red; only 1: auto with real; only 1: red; only 1: auto with real).	0.030282	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rlt_gt	120	0	synth with cache (only 1: trivial).	0.023420	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rgt_lt	120	0	synth with cache (only 1: trivial).	0.022240	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rnot_le_lt	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rnot_ge_gt	120	0.0.0.0	synth with cache (only 1: intros; only 1: red; only 1: apply Rnot_le_lt; only 1: auto with real).	0.029592	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rnot_le_gt	120	0.0.0.0	synth with cache (only 1: intros; only 1: red; only 1: apply Rnot_le_lt; only 1: easy).	0.021993	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rnot_ge_lt	120	0.0.0	synth with cache (only 1: intros; only 1: apply Rnot_le_lt; only 1: auto with real).	0.022250	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rnot_lt_le	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rnot_gt_le	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rnot_gt_ge	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rnot_lt_ge	120	1	synth with cache (only 1: eauto using Rnot_gt_ge with rorders).	0.026421	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rlt_not_le	120	0.0.0.0	synth with cache (only 1: generalize Rlt_asym, Rlt_dichotomy_converse; only 1: unfold Rle; only 1: unfold not; only 1: intuition eauto  3).	0.034208	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rgt_not_le	120	0	synth with cache (only 1: exact Rlt_not_le).	0.021586	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rlt_not_ge	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rgt_not_ge	120	0	synth with cache (only 1: exact Rlt_not_ge).	0.023425	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rle_not_lt	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rge_not_lt	120	0.0.0	synth with cache (only 1: intros; only 1: apply Rle_not_lt; only 1: auto with real).	0.029803	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rle_not_gt	120	0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply Rle_not_lt).	0.027351	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rge_not_gt	120	0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply Rge_not_lt).	0.032410	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Req_le	120	0.0	synth with cache (only 1: unfold Rle; only 1: tauto).	0.031601	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Req_ge	120	0.0	synth with cache (only 1: unfold Rge; only 1: tauto).	0.053217	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Req_le_sym	120	0.0	synth with cache (only 1: unfold Rle; only 1: auto).	0.047135	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Req_ge_sym	120	0.0	synth with cache (only 1: unfold Rge; only 1: auto).	0.048569	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rgt_asym	120	0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply Rlt_asym).	0.025576	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rle_antisym	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rge_antisym	120	0	synth with cache (only 1: auto with real).	0.025750	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rle_le_eq	120	0	synth with cache (only 1: intuition).	0.031290	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rge_ge_eq	120	0	synth with cache (only 1: intuition).	0.036126	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rlt_eq_compat	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros; only 1: replace r1 with r2; only 1: replace r3 with r4; only 1: assumption).	0.034456	8
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rgt_eq_compat	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: red; only 1: apply Rlt_eq_compat with (r2 := r4) (r4 := r2); only 1: auto; only 1: auto; only 1: auto).	0.029920	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rle_trans	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rge_trans	120	0	synth with cache (only 1: eauto using Rle_trans with rorders).	0.027874	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rgt_trans	120	0	synth with cache (only 1: eauto using Rlt_trans with rorders).	0.032372	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rle_lt_trans	120	0.0.0	synth with cache (only 1: generalize Rlt_trans, Rlt_eq_compat; only 1: unfold Rle; only 1: intuition eauto  2).	0.044933	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.DiscrR.Rlt_R0_R2	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.DiscrR.IZR_eq	120	0.0.0	synth with cache (only 1: intros; only 1: rewrite H; only 1: reflexivity).	0.026909	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rlt_le_trans	120	0.0.0	synth with cache (only 1: generalize Rlt_trans, Rlt_eq_compat; only 1: unfold Rle; only 1: intuition eauto  2).	0.047613	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rge_gt_trans	120	0	synth with cache (only 1: eauto using Rlt_le_trans with rorders).	0.028261	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rgt_ge_trans	120	0	synth with cache (only 1: eauto using Rle_lt_trans with rorders).	0.026064	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rlt_dec	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rle_dec	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rgt_dec	120	0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply Rlt_dec).	0.028595	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rge_dec	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rlt_le_dec	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rgt_ge_dec	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rle_lt_dec	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rge_gt_dec	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rlt_or_le	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rgt_or_ge	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rle_or_lt	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rge_or_gt	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rle_lt_or_eq_dec	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.inser_trans_R	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_0_r	120	1.0	synth with cache (only 1: intros ?; only 1: ring).	0.039343	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_ne	120	0.0.0.0.0.0	synth with cache (only 1: split; only 1: auto with real; only 1: apply Rquot1; only 1: rewrite Rrepr_plus; only 1: rewrite Rrepr_0; only 1: apply CReal_plus_0_l).	0.044512	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_opp_l	120	0.0	synth with cache (only 1: intros ?; only 1: ring).	0.031569	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_opp_r_uniq	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_eq_compat_l	120	0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply f_equal).	0.036358	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_eq_compat_r	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_eq_reg_l	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rrepr_0	120	0.0.0.0	synth with cache (only 1: unfold IZR; only 1: rewrite R0_def; only 1: rewrite Rquot2; only 1: reflexivity).	0.045480	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rrepr_1	120	0.0.0.0.0	synth with cache (only 1: unfold IZR; only 1: unfold IPR; only 1: rewrite R1_def; only 1: rewrite Rquot2; only 1: reflexivity).	0.034334	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rrepr_plus	120	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Rplus_def; only 1: rewrite Rquot2; only 1: reflexivity).	0.033265	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rrepr_opp	120	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Ropp_def; only 1: rewrite Rquot2; only 1: reflexivity).	0.033717	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rrepr_minus	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rminus; only 1: unfold CReal_minus; only 1: rewrite Rrepr_plus; only 1: rewrite Rrepr_opp; only 1: reflexivity).	0.041256	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rrepr_mult	120	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Rmult_def; only 1: rewrite Rquot2; only 1: reflexivity).	0.033044	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rrepr_inv	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rrepr_le	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rrepr_appart	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rappart_repr	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rplus_comm	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Rquot1; only 1: rewrite Rrepr_plus; only 1: rewrite Rrepr_plus; only 1: apply CReal_plus_comm).	0.037236	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rplus_assoc	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Rquot1; only 1: rewrite Rrepr_plus; only 1: rewrite Rrepr_plus; only 1: rewrite Rrepr_plus; only 1: rewrite Rrepr_plus; only 1: apply CReal_plus_assoc).	0.068416	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rplus_opp_r	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Rquot1; only 1: rewrite Rrepr_plus; only 1: rewrite Rrepr_opp; only 1: rewrite Rrepr_0; only 1: apply CReal_plus_opp_r).	0.044949	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rplus_0_l	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: apply Rquot1; only 1: rewrite Rrepr_plus; only 1: rewrite Rrepr_0; only 1: apply CReal_plus_0_l).	0.040498	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rmult_comm	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Rquot1; only 1: rewrite Rrepr_mult; only 1: rewrite Rrepr_mult; only 1: apply CReal_mult_comm).	0.033867	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rmult_assoc	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Rquot1; only 1: rewrite Rrepr_mult; only 1: rewrite Rrepr_mult; only 1: rewrite Rrepr_mult; only 1: rewrite Rrepr_mult; only 1: apply CReal_mult_assoc).	0.049251	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rinv_l	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite RinvImpl.Rinv_def; only 1: destruct Req_appart_dec; only 1: contradiction; only 1: apply Rquot1; only 1: rewrite Rrepr_mult; only 1: rewrite Rquot2; only 1: rewrite Rrepr_1; only 1: apply CReal_inv_l).	0.049703	9
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rmult_1_l	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: apply Rquot1; only 1: rewrite Rrepr_mult; only 1: rewrite Rrepr_1; only 1: apply CReal_mult_1_l).	0.052849	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.R1_neq_R0	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rmult_plus_distr_l	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Rquot1; only 1: rewrite Rrepr_mult; only 1: rewrite Rrepr_plus; only 1: rewrite Rrepr_plus; only 1: rewrite Rrepr_mult; only 1: rewrite Rrepr_mult; only 1: apply CReal_mult_plus_distr_l).	0.065040	8
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rlt_asym	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rlt_trans	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rplus_lt_compat_l	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Rlt_def; only 1: rewrite Rlt_def in H; only 1: rewrite Rrepr_plus; only 1: rewrite Rrepr_plus; only 1: apply CRealLtForget; only 1: apply CReal_plus_lt_compat_l; only 1: apply CRealLtEpsilon; only 1: exact H).	0.050983	9
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rmult_lt_compat_l	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rrepr_INR	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rrepr_IPR2	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rrepr_IPR	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.Rrepr_IZR	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.archimed	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Raxioms.completeness	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsLUB.is_upper_bound_dec	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsLUB.is_upper_bound_epsilon	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsLUB.is_upper_bound_not_epsilon	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsLUB.DDlow_below_up	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsLUB.DDcut_limit_fix	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsLUB.DDcut_limit	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsLUB.glb_dec_Q	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsLUB.is_upper_bound_glb	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsLUB.is_upper_bound_closed	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsLUB.sig_lub	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsLUB.CR_sig_lub	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rdefinitions.total_order_T	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rdefinitions.Req_appart_dec	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rdefinitions.Rrepr_appart_0	120	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply CRealLtDisjunctEpsilon; only 1: destruct H; only 1: left; only 1: rewrite Rlt_def in H; only 1: rewrite R0_def in H; only 1: rewrite Rquot2 in H; only 1: exact H; only 1: right; only 1: rewrite Rlt_def in H; only 1: rewrite R0_def in H; only 1: rewrite Rquot2 in H; only 1: exact H).	0.038621	13
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rdefinitions.up	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.CV_minus	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.cv_infty_cv_R0	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.decreasing_prop	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.SeqProp.cv_speed_pow_fact	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ClassicalDedekindReals.isLowerCut_hprop	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: apply and_hprop; only 1: apply forall_hprop; only 1: intros ?; only 1: apply forall_hprop; only 1: intros ?; only 1: apply impl_hprop; only 1: apply impl_hprop; only 1: intros ?; only 1: intros ?; only 1: apply eq_proofs_unicity_on; only 1: intros ?; only 1: destruct f; only 1: destruct y; only 1: left; only 1: reflexivity; only 1: right; only 1: discriminate; only 1: destruct y; only 1: right; only 1: discriminate; only 1: left; only 1: reflexivity; only 1: apply and_hprop; only 1: apply not_hprop; only 1: apply and_hprop; only 1: apply not_hprop; only 1: apply forall_hprop; only 1: intros ?; only 1: apply impl_hprop; only 1: apply not_hprop).	0.056318	31
coq-tactician-stdlib.8.11.dev	Coq.Reals.ClassicalDedekindReals.lowerCutBelow	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ClassicalDedekindReals.lowerCutAbove	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ClassicalDedekindReals.DRealQlim_rec	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ClassicalDedekindReals.DRealQlim	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ClassicalDedekindReals.DRealAbstr	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ClassicalDedekindReals.UpperAboveLower	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ClassicalDedekindReals.DRealRepr	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ClassicalDedekindReals.Rle_antisym	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ClassicalDedekindReals.lowerUpper	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ClassicalDedekindReals.DRealOpen	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ClassicalDedekindReals.DRealReprQ	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ClassicalDedekindReals.DRealReprQup	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ClassicalDedekindReals.DRealQuot1	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ClassicalDedekindReals.DRealAbstrFalse	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct x; only 1: unfold DRealAbstr in H; only 1: unfold proj1_sig in H; only 1: destruct sig_forall_dec; only 1: discriminate; only 1: apply q1).	0.757094	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.ClassicalDedekindReals.DRealQuot2	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_increasing_inv	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_unique	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.Endomorph_id	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_proper	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intros ?; only 1: apply CRmorph_increasing_inv in H0; only 1: destruct H; only 1: contradiction; only 1: intros ?; only 1: apply CRmorph_increasing_inv in H0; only 1: destruct H; only 1: contradiction).	0.042121	9
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_compose	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_le	120	0.0.0.0	synth with cache (only 1: intros; only 1: intros ?; only 1: apply CRmorph_increasing_inv in H0; only 1: contradiction).	0.030518	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_le_inv	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_zero	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_one	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_opp	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRplus_pos_rat_lt	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRplus_neg_rat_lt	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_plus_rat	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_plus	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_pos	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.NatOfZ	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_int	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_inv	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_rat	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_pos_pos_le	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_pos_pos	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_appart	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct app; only 1: left; only 1: apply CRmorph_increasing; only 1: exact c; only 1: right; only 1: apply CRmorph_increasing; only 1: exact c).	0.052149	8
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_appart_zero	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CRmorph_inv	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_rat	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_increasing_Ql	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_increasing_Qr	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_increasing	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CauchyMorphism	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.RightBound	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inv	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inv_rat	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inv_increasing_Qr	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inv_increasing	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CauchyMorphismInv	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_surject	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inject	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Rings_Z.Zcri	120	0.0	synth with cache (only 1: red; only 1: exact Z.mul_comm).	0.024116	2
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Rings_Z.Z_one_zero	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Rings_Z.Zdi	120	0.0.0	synth with cache (only 1: constructor; only 1: exact Zmult_integral; only 1: exact Z_one_zero).	0.024040	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rminmax.R.plus_max_distr_r	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rminmax.R.plus_min_distr_l	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply min_monotone; only 1: intros ?; only 1: intros ?; only 1: apply Rplus_le_compat_l).	0.029276	5
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Rings_Q.Qri	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: constructor; only 1: apply Q_Setoid; only 1: apply Qplus_comp; only 1: apply Qmult_comp; only 1: apply Qminus_comp; only 1: apply Qopp_comp; only 1: exact Qplus_0_l; only 1: exact Qplus_comm; only 1: apply Qplus_assoc; only 1: exact Qmult_1_l; only 1: exact Qmult_1_r; only 1: apply Qmult_assoc; only 1: apply Qmult_plus_distr_l; only 1: intros; only 1: apply Qmult_plus_distr_r; only 1: reflexivity; only 1: exact Qplus_opp_r).	0.062224	17
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Rings_Q.Qcri	120	0.0	synth with cache (only 1: red; only 1: exact Qmult_comm).	0.030360	2
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Rings_Q.Q_one_zero	120	0	synth with cache (only 1: discriminate).	0.027854	1
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Rings_Q.Qdi	120	0.0.0	synth with cache (only 1: constructor; only 1: exact Qmult_integral; only 1: exact Q_one_zero).	0.077453	3
coq-tactician-stdlib.8.11.dev	Coq.Floats.FloatAxioms.Prim2SF_inj	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- SF2Prim_Prim2SF; only 1: symmetry; only 1: rewrite <- SF2Prim_Prim2SF; only 1: rewrite H; only 1: easy).	0.026455	6
coq-tactician-stdlib.8.11.dev	Coq.Floats.FloatAxioms.SF2Prim_inj	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- Prim2SF_SF2Prim; only 1: symmetry; only 1: rewrite <- Prim2SF_SF2Prim; only 1: rewrite H; only 1: reflexivity; only 1: assumption; only 1: assumption).	0.030292	8
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Ring63.ring_theory_switch_eq	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: constructor; only 1: intros; only 1: apply H; only 1: apply H0; only 1: intros; only 1: apply H; only 1: apply H0; only 1: intros; only 1: apply H; only 1: apply H0; only 1: intros; only 1: apply H; only 1: apply H0; only 1: intros; only 1: apply H; only 1: apply H0; only 1: intros; only 1: apply H; only 1: apply H0; only 1: intros; only 1: apply H; only 1: apply H0; only 1: intros; only 1: apply H; only 1: apply H0; only 1: intros; only 1: apply H; only 1: apply H0).	0.097055	39
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Ring63.Int63Ring	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Ring63.eq31_correct	120	0	synth with cache (only 1: apply eqb_spec).	0.028752	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Ring63.TestRing.test	120	0.0	synth with cache (only 1: intros; only 1: ring).	0.044658	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRcomplete.CReal_absSmall	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRcomplete.Un_cv_mod_eq	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRcomplete.Rfloor	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRcomplete.FQ_dense	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRcomplete.RQ_limit	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRcomplete.Rdiag_cauchy_sequence	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRcomplete.doubleLeCovariant	120	0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: rewrite <- H; only 1: rewrite <- H0; only 1: apply H2; only 1: rewrite <- H0; only 1: rewrite <- H1; only 1: apply H2).	0.070157	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRcomplete.CReal_cv_self	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRcomplete.Un_cv_extens	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Ring31.Int31_canonic	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRcomplete.R_has_all_rational_limits	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Ring31.ring_theory_switch_eq	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: constructor; only 1: intros; only 1: apply H; only 1: apply H0; only 1: intros; only 1: apply H; only 1: apply H0; only 1: intros; only 1: apply H; only 1: apply H0; only 1: intros; only 1: apply H; only 1: apply H0; only 1: intros; only 1: apply H; only 1: apply H0; only 1: intros; only 1: apply H; only 1: apply H0; only 1: intros; only 1: apply H; only 1: apply H0; only 1: intros; only 1: apply H; only 1: apply H0; only 1: intros; only 1: apply H; only 1: apply H0).	0.090306	39
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Ring31.Int31Ring	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRcomplete.Rcauchy_complete	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Ring31.eqb31_eq	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Ring31.eqb31_correct	120	0	synth with cache (only 1: apply eqb31_eq).	0.024556	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveRcomplete.CRealImplem	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Ring31.TestRing.test	120	0.0	synth with cache (only 1: intros; only 1: ring).	0.110309	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Cyclic63.is_zero_spec_aux	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite is_zero_spec; only 1: intros ?; only 1: rewrite H; only 1: trivial).	0.039542	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Cyclic63.positive_to_int_spec	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Cyclic63.mulc_WW_spec	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Cyclic63.diveucl_spec_aux	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Cyclic63.shift_unshift_mod_2	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Cyclic63.div_le_0	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Cyclic63.div_lt	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Cyclic63.P	120	0	synth with cache (only 1: tauto).	0.033989	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Cyclic63.shift_unshift_mod_3	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Cyclic63.pos_mod_spec	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Integral_domain.integral_domain.integral_domain_minus_one_zero	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Integral_domain.integral_domain.pow_not_zero	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Integral_domain.integral_domain.Rintegral_domain_pow	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.iszero_eq0	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.iszero_not_eq0	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite H0 in H; only 1: simpl in *; only 1: discriminate).	0.035476	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.sneakl_shiftr	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.sneakr_shiftl	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.twice_zero	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.twice_or_twice_plus_one	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_S	120	0	synth with cache (only 1: reflexivity).	0.030405	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_S_tail	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: elim n; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: f_equal; only 1: easy).	0.044190	8
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_n_0	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_size	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_above_size	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftl_S	120	0	synth with cache (only 1: reflexivity).	0.027569	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftl_S_tail	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: elim n; only 1: simpl; only 1: intros; only 1: f_equal; only 1: simpl; only 1: intros; only 1: f_equal; only 1: easy).	0.041250	9
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftl_n_0	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftl_size	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftl_above_size	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.firstr_firstl	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.firstl_firstr	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_predsize_0_firstl	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_0_propagates	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_0_firstl	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply nshiftr_predsize_0_firstl; only 1: apply nshiftr_0_propagates with n; only 1: lia; only 1: auto).	0.053342	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.int31_ind_sneakl	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.int31_ind_twice	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recr_aux_eqn	120	0.0.0.0	synth with cache (only 1: intros; only 1: simpl; only 1: rewrite H; only 1: auto).	0.034800	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recr_aux_converges	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recr_eqn	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recrbis_aux_equiv	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recrbis_equiv	120	0.0	synth with cache (only 1: intros; only 1: apply recrbis_aux_equiv).	0.030324	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Incr.incrbis_aux_equiv	120	0.0.0.0.0.0.0	synth with cache (only 1: unfold incr; only 1: unfold recr; only 1: unfold incrbis_aux; only 1: fold Incr; only 1: intros; only 1: apply recrbis_aux_equiv; only 1: auto).	0.033497	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Incr.incr_eqn1	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Incr.incr_eqn2	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Incr.incr_twice	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite incr_eqn1; only 1: destruct x; only 1: simpl; only 1: auto; only 1: destruct x; only 1: simpl; only 1: auto).	0.049797	8
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Incr.incr_twice_plus_one_firstl	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite incr_eqn2; only 1: f_equal; only 1: f_equal; only 1: destruct x; only 1: simpl in *; only 1: rewrite H; only 1: auto; only 1: destruct x; only 1: auto).	0.056845	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Phi.phibis_aux_equiv	120	0.0.0.0.0.0.0	synth with cache (only 1: unfold phi; only 1: unfold recr; only 1: unfold phibis_aux; only 1: fold Phi; only 1: intros; only 1: apply recrbis_aux_equiv; only 1: auto).	0.035100	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Phi.phi_eqn1	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Phi.phi_eqn2	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Phi.phi_twice_firstl	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite phi_eqn1; only 1: f_equal; only 1: f_equal; only 1: destruct x; only 1: simpl in *; only 1: rewrite H; only 1: auto; only 1: destruct x; only 1: auto).	0.058201	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Phi.phi_twice_plus_one_firstl	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite phi_eqn2; only 1: f_equal; only 1: f_equal; only 1: destruct x; only 1: simpl in *; only 1: rewrite H; only 1: auto; only 1: destruct x; only 1: auto).	0.052527	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phibis_aux_pos	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phibis_aux_bounded	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_nonneg	120	0.1.0	synth with cache (only 1: intros; only 1: rewrite <- phibis_aux_equiv; only 1: apply phibis_aux_pos).	0.029415	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_bounded	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phibis_aux_lowerbound	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_lowerbound	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_zero	120	0.0.0.0.0.0.0	synth with cache (only 1: unfold EqShiftL; only 1: intros; only 1: unfold nshiftl; only 1: simpl; only 1: split; only 1: auto; only 1: auto).	0.029959	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_size	120	0.0.0.0.0.0.0	synth with cache (only 1: red; only 1: intros; only 1: rewrite nshiftl_above_size; only 1: rewrite nshiftl_above_size; only 1: auto; only 1: auto; only 1: auto).	0.037461	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_le	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_firstr	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite firstr_firstl; only 1: rewrite firstr_firstl; only 1: f_equal; only 1: apply EqShiftL_le with k; only 1: unfold size; only 1: auto with arith; only 1: auto).	0.040111	8
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_twice	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold EqShiftL; only 1: rewrite nshiftl_S_tail; only 1: rewrite nshiftl_S_tail; only 1: split; only 1: auto; only 1: auto).	0.033638	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.i2l_length	120	0.0	synth with cache (only 1: intros; only 1: reflexivity).	0.032577	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.to_Z_rec_bounded	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.to_Z_bounded	120	0	synth with cache (only 1: apply to_Z_rec_bounded).	0.030686	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.l2i_i2l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.Z_lt_div2	120	0.0	synth with cache (only 1: apply Z.div_lt_upper_bound; only 1: reflexivity).	0.026386	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.i2l_sneakr	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.i2l_sneakl	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.Zmod_le_first	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.i2l_l2i	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.Zmod_distr	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.pow2_pos	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: apply Z.lt_gt; only 1: apply Z.pow_pos_nonneg; only 1: lia; only 1: lia).	0.035162	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.i2l_nshiftl	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.pow2_nz	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.wB_diff_0	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_i2l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.wB_pos	120	0	synth with cache (only 1: reflexivity).	0.032034	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.to_Z_0	120	0	synth with cache (only 1: reflexivity).	0.033163	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_twice_plus_one	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.to_Z_1	120	0	synth with cache (only 1: reflexivity).	0.034665	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_shiftr	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.can_inj	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_incrbis	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_incr	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- incrbis_aux_equiv; only 1: rewrite <- incrbis_aux_equiv; only 1: apply EqShiftL_incrbis; only 1: auto; only 1: auto; only 1: auto).	0.033992	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.incr_twice_plus_one	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite incr_eqn2; only 1: apply EqShiftL_incr; only 1: red; only 1: destruct x; only 1: simpl; only 1: auto; only 1: destruct x; only 1: simpl; only 1: auto).	0.049457	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.incr_firstr	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.incr_inv	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.to_Z_inj	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_inv_double_plus_one	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.eqb_complete	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite H; only 1: rewrite eqb_refl; only 1: trivial).	0.037709	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_inv_double	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.eqb_spec	120	0.0.0.0.0.0	synth with cache (only 1: split; only 1: auto using eqb_correct, eqb_complete; only 1: intros ?; only 1: rewrite H; only 1: rewrite eqb_refl; only 1: trivial).	0.059846	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_inv_incr	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.eqb_false_spec	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- not_true_iff_false; only 1: rewrite eqb_spec; only 1: split; only 1: trivial; only 1: trivial).	0.068048	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_inv_phi_aux	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.eqb_false_complete	120	0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite eqb_false_spec; only 1: trivial).	0.064334	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_inv_phi	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.eqb_false_correct	120	0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite eqb_false_spec; only 1: trivial).	0.050460	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.p2ibis_bounded	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.eq_dec	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.p2ibis_spec	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.cast_refl	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.cast_diff	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_inv_positive_p2ibis	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.eqo_refl	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_phi_inv_positive	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.double_twice_firstl	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold mul31; only 1: rewrite <- Z.double_spec; only 1: rewrite <- phi_twice_firstl; only 1: rewrite phi_inv_phi; only 1: auto; only 1: auto).	0.031753	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.eqo_diff	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.eqbP	120	0.0.0.0.0	synth with cache (only 1: apply iff_reflect; only 1: rewrite eqb_spec; only 1: split; only 1: apply to_Z_inj; only 1: apply f_equal).	0.049754	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.double_twice_plus_one_firstl	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite double_twice_firstl; only 1: unfold add31; only 1: rewrite phi_twice_firstl; only 1: rewrite <- Z.succ_double_spec; only 1: rewrite <- phi_twice_plus_one_firstl; only 1: rewrite phi_inv_phi; only 1: auto; only 1: auto; only 1: auto; only 1: auto).	0.038193	11
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.ltbP	120	0.0.0	synth with cache (only 1: apply iff_reflect; only 1: symmetry; only 1: apply ltb_spec).	0.049666	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.p2i_p2ibis	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lebP	120	0.0.0	synth with cache (only 1: apply iff_reflect; only 1: symmetry; only 1: apply leb_spec).	0.040989	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.positive_to_int31_phi_inv_positive	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.compare_spec	120	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: rewrite compare_def_spec; only 1: unfold compare_def; only 1: case ltbP; only 1: auto using Z.compare_lt_iff; only 1: intros ?; only 1: case eqbP; only 1: symmetry; only 1: apply Z.compare_eq_iff; only 1: easy; only 1: intros ?; only 1: symmetry; only 1: apply Z.compare_gt_iff; only 1: lia).	0.051576	13
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.positive_to_int31_spec	120	0.0.0.0.0.0	synth with cache (only 1: unfold positive_to_int31; only 1: intros; only 1: rewrite p2i_p2ibis; only 1: apply p2ibis_spec; only 1: auto; only 1: auto).	0.038665	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.is_zero_spec	120	0	synth with cache (only 1: apply eqb_spec).	0.038889	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_twice	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.diveucl_spec	120	0.0.0.0.0.0.0.0	synth with cache (only 1: rewrite diveucl_def_spec; only 1: unfold diveucl_def; only 1: rewrite div_spec; only 1: rewrite mod_spec; only 1: unfold BinIntDef.Z.div; only 1: unfold BinIntDef.Z.modulo; only 1: destruct BinIntDef.Z.div_eucl; only 1: trivial).	0.048216	8
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_twice_plus_one	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_incr	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.addc_spec	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.succ_spec	120	0	synth with cache (only 1: apply add_spec).	0.044838	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_phi_inv_negative	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.succc_spec	120	0	synth with cache (only 1: apply addc_spec).	0.042695	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.addcarry_spec	120	0.0.0.0.0	synth with cache (only 1: unfold addcarry; only 1: rewrite add_spec; only 1: rewrite add_spec; only 1: rewrite Zplus_mod_idemp_l; only 1: trivial).	0.042310	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_phi_inv	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.wB_pos	120	0	synth with cache (only 1: auto with zarith).	0.028818	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.addcarryc_spec	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_zdigits	120	0	synth with cache (only 1: reflexivity).	0.029538	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_more_than_1_digit	120	0	synth with cache (only 1: reflexivity).	0.028152	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.subc_spec	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.pred_spec	120	0	synth with cache (only 1: apply sub_spec).	0.046498	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_0	120	0	synth with cache (only 1: reflexivity).	0.029983	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_1	120	0	synth with cache (only 1: reflexivity).	0.027189	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.predc_spec	120	0	synth with cache (only 1: apply subc_spec).	0.042282	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_m1	120	0	synth with cache (only 1: reflexivity).	0.032916	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.oppc_spec	120	0.0.0.0	synth with cache (only 1: unfold oppc; only 1: rewrite subc_spec; only 1: rewrite to_Z_0; only 1: trivial).	0.049785	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_compare	120	0	synth with cache (only 1: reflexivity).	0.067715	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.opp_spec	120	0.0.0.0	synth with cache (only 1: unfold opp; only 1: rewrite sub_spec; only 1: rewrite to_Z_0; only 1: trivial).	0.039943	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.oppcarry_spec	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.subcarry_spec	120	0.0.0.0.0	synth with cache (only 1: unfold subcarry; only 1: rewrite sub_spec; only 1: rewrite sub_spec; only 1: rewrite Zminus_mod_idemp_l; only 1: trivial).	0.063416	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_add_c	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_succ_c	120	0.0	synth with cache (only 1: intros; only 1: apply spec_add_c).	0.035245	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.subcarryc_spec	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.to_Z_gcd	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.gcd_spec	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_add_carry_c	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_add	120	0.0	synth with cache (only 1: intros; only 1: apply phi_phi_inv).	0.033250	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.head00_spec	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_add_carry	120	0.0.0.0.0	synth with cache (only 1: unfold add31; only 1: intros; only 1: rewrite phi_phi_inv; only 1: rewrite phi_phi_inv; only 1: apply Zplus_mod_idemp_l).	0.038964	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.tail00_spec	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_succ	120	0.0.0	synth with cache (only 1: intros; only 1: rewrite <- spec_1; only 1: apply spec_add).	0.034259	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.eqm_mod	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.eqm_sub	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: unfold eqm; only 1: rewrite Zminus_mod; only 1: rewrite H; only 1: rewrite Z.sub_diag; only 1: reflexivity).	0.057978	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.eqmE	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_sub_c	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.eqm_subE	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.int_eqm	120	0.0.0.0	synth with cache (only 1: unfold eqm; only 1: intros ?; only 1: intropattern subst -> H; only 1: reflexivity).	0.042332	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.eqmI	120	0.0.0.0.0.0	synth with cache (only 1: unfold eqm; only 1: rewrite Zmod_small; only 1: rewrite Zmod_small; only 1: apply to_Z_inj; only 1: apply to_Z_bounded; only 1: apply to_Z_bounded).	0.051517	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.add_assoc	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: apply to_Z_inj; only 1: rewrite add_spec; only 1: rewrite add_spec; only 1: rewrite add_spec; only 1: rewrite add_spec; only 1: rewrite Zplus_mod_idemp_l; only 1: rewrite Zplus_mod_idemp_r; only 1: rewrite Z.add_assoc; only 1: auto).	0.069059	9
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_sub_carry_c	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.add_comm	120	0.0.0.0.0	synth with cache (only 1: apply to_Z_inj; only 1: rewrite add_spec; only 1: rewrite add_spec; only 1: rewrite Z.add_comm; only 1: auto).	0.049367	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_sub	120	0.0	synth with cache (only 1: intros; only 1: apply phi_phi_inv).	0.032640	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_sub_carry	120	0.0.0.0.0	synth with cache (only 1: unfold sub31; only 1: intros; only 1: rewrite phi_phi_inv; only 1: rewrite phi_phi_inv; only 1: apply Zminus_mod_idemp_l).	0.043743	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_decreasing_1	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_opp_c	120	0.0	synth with cache (only 1: intros; only 1: apply spec_sub_c).	0.033804	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.tan_diff	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold tan; only 1: rewrite sin_minus; only 1: field; only 1: split; only 1: easy; only 1: easy).	0.084657	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_opp	120	0.0	synth with cache (only 1: intros; only 1: apply phi_phi_inv).	0.032419	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.add_le_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_opp_carry	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_pred_c	120	0.0	synth with cache (only 1: intros; only 1: apply spec_sub_c).	0.032997	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_pred	120	0.0	synth with cache (only 1: intros; only 1: apply spec_sub).	0.033222	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.tan_increasing_0	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.tan_increasing_1	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.phi2_phi_inv2	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_incr_0	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_mul_c	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_mul	120	0.0	synth with cache (only 1: intros; only 1: apply phi_phi_inv).	0.027500	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_incr_1	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_square_c	120	0.0	synth with cache (only 1: intros; only 1: apply spec_mul_c).	0.030223	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_decr_0	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_div21	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_decr_1	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_div	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_incr_0	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_mod	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_incr_1	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.phi_gcd	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_decr_0	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_gcd	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_decr_1	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.iter_int31_iter_nat	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.tan_incr_0	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.addmuldiv31_equiv	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.tan_incr_1	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_eq_0_1	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_eq_0_0	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_add_mul_div	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_eq_0_0	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.shift_unshift_mod_2	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.RealField.RTheory	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.RealField.Rfield	120	0.0.1.0.0	synth with cache (only 1: constructor; only 1: exact RTheory; only 1: exact R1_neq_R0; only 1: reflexivity; only 1: exact Rinv_l).	0.025448	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_pos_mod	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.RealField.Rlt_n_Sn	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.RealField.Rlt_0_2	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_head00	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.RealField.Rgen_phiPOS	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.RealField.Rgen_phiPOS_not_0	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.RealField.Rdef_pow_add	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.RealField.R_power_theory	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Cring.cring.cring_eq_ext	120	0.0.0.0	synth with cache (only 1: apply mk_reqe; only 1: solve_proper; only 1: solve_proper; only 1: solve_proper).	0.071028	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.head031_equiv	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.phi_nz	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Cring.cring.cring_almost_ring_theory	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_head0	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_tail00	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Cring.cring.cring_morph	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Cring.cring.cring_power_theory	120	0.0	synth with cache (only 1: apply Ring_theory.mkpow_th; only 1: reflexivity).	0.031859	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.tail031_equiv	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Cring.cring.cring_div_theory	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Cring.Zcri	120	0.0	synth with cache (only 1: red; only 1: exact Z.mul_comm).	0.024412	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_tail0	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.quotient_by_2	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_eq_reg_r	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_0_r_uniq	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_eq_0_l	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_eq_R0	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: split; only 1: apply Rplus_eq_0_l with r2; only 1: auto with real; only 1: auto with real; only 1: auto with real; only 1: apply Rplus_eq_0_l with r1; only 1: auto with real; only 1: auto with real; only 1: rewrite Rplus_comm; only 1: auto with real).	0.039626	12
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt_main_trick	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rinv_r	120	0.0.0	synth with cache (only 1: intros; only 1: field; only 1: assumption).	0.051580	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt_main	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rinv_l_sym	120	0.0.0	synth with cache (only 1: intros; only 1: field; only 1: assumption).	0.059743	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rinv_r_sym	120	0.0.0	synth with cache (only 1: intros; only 1: field; only 1: assumption).	0.039013	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt_init	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_0_r	120	0.0	synth with cache (only 1: intros ?; only 1: ring).	0.043901	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt_test_true	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_0_l	120	0.0	synth with cache (only 1: intros ?; only 1: ring).	0.033786	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_ne	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: split; only 1: rewrite Rmult_comm; only 1: apply Rmult_1_l; only 1: apply Rmult_1_l).	0.032266	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt_test_false	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt31_step_def	120	0.0.0.0.0.0.0.0	synth with cache (only 1: unfold sqrt31_step; only 1: case div31; only 1: intros; only 1: simpl; only 1: case compare31; only 1: auto; only 1: auto; only 1: auto).	0.058389	8
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_1_r	120	0.0.0	synth with cache (only 1: intros ?; only 1: rewrite Rmult_comm; only 1: apply Rmult_1_l).	0.032863	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_eq_compat_l	120	0	synth with cache (only 1: auto with real).	0.029095	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.div31_phi	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt31_step_correct	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.iter31_sqrt_correct	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_sqrt	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt312_step_def	120	0.0.0.0.0.0.0.0	synth with cache (only 1: unfold sqrt312_step; only 1: case div3121; only 1: intros; only 1: simpl; only 1: case compare31; only 1: auto; only 1: auto; only 1: auto).	0.081871	8
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt312_lower_bound	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.div312_phi	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt312_step_correct	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.iter312_sqrt_correct	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: revert rec ih il j; only 1: elim n; only 1: unfold iter312_sqrt; only 1: clear n; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply sqrt312_step_correct; only 1: auto with zarith; only 1: auto with zarith; only 1: auto with zarith; only 1: intros; only 1: apply H2; only 1: lia; only 1: rewrite Z.pow_0_r; only 1: lia; only 1: lia; only 1: unfold iter312_sqrt; only 1: fold iter312_sqrt; only 1: clear n; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply sqrt312_step_correct; only 1: auto; only 1: auto; only 1: auto; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply H; only 1: lia; only 1: lia; only 1: lia; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply H; only 1: auto with zarith; only 1: auto with zarith; only 1: auto with zarith; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply H3; only 1: auto; only 1: rewrite Nat2Z.inj_succ; only 1: rewrite Z.pow_succ_r; only 1: lia; only 1: lia).	0.428176	63
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_sqrt2	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_eq0	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_is_even	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.log2_phi_bounded	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_lor	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold ZnZ.lor; only 1: unfold int31_ops; only 1: unfold lor31; only 1: rewrite phi_phi_inv; only 1: apply Z.mod_small; only 1: split; only 1: apply Z.lor_nonneg; only 1: split; only 1: apply phi_bounded; only 1: apply phi_bounded; only 1: apply Z.log2_lt_cancel; only 1: rewrite Z.log2_pow2; only 1: rewrite Z.log2_lor; only 1: apply Z.max_lub_lt; only 1: apply log2_phi_bounded; only 1: apply log2_phi_bounded; only 1: apply phi_bounded; only 1: apply phi_bounded; only 1: easy).	0.065313	19
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_land	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold ZnZ.land; only 1: unfold int31_ops; only 1: unfold land31; only 1: rewrite phi_phi_inv; only 1: apply Z.mod_small; only 1: split; only 1: apply Z.land_nonneg; only 1: left; only 1: apply phi_bounded; only 1: apply Z.log2_lt_cancel; only 1: rewrite Z.log2_pow2; only 1: eapply Z.le_lt_trans; only 1: apply Z.log2_land; only 1: apply phi_bounded; only 1: apply phi_bounded; only 1: apply Z.min_lt_iff; only 1: left; only 1: apply log2_phi_bounded; only 1: easy).	0.066548	19
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_lxor	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold ZnZ.lxor; only 1: unfold int31_ops; only 1: unfold lxor31; only 1: rewrite phi_phi_inv; only 1: apply Z.mod_small; only 1: split; only 1: apply Z.lxor_nonneg; only 1: split; only 1: intros; only 1: apply phi_bounded; only 1: intros; only 1: apply phi_bounded; only 1: apply Z.log2_lt_cancel; only 1: rewrite Z.log2_pow2; only 1: eapply Z.le_lt_trans; only 1: apply Z.log2_lxor; only 1: apply phi_bounded; only 1: apply phi_bounded; only 1: apply Z.max_lub_lt; only 1: apply log2_phi_bounded; only 1: apply log2_phi_bounded; only 1: easy).	0.064753	22
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_more_than_1_digit	120	0.0.0.0.0.0.0.0.1	synth with cache (only 1: generalize digits_ne_1; only 1: destruct digits; only 1: red; only 1: auto; only 1: red; only 1: auto; only 1: red; only 1: destruct 1; only 1: auto).	0.031935	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.wB_pos	120	0.0.0.0	synth with cache (only 1: apply Z.lt_gt; only 1: unfold wB; only 1: unfold base; only 1: auto with zarith).	0.023877	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_to_Z_1	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_to_Z_2	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_to_Z	120	0	synth with cache (only 1: auto).	0.044371	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_of_pos	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_zdigits	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold to_Z; only 1: unfold zdigits; only 1: apply Zmod_small; only 1: unfold wB; only 1: unfold base; only 1: split; only 1: auto with zarith; only 1: apply Zpower2_lt_lin; only 1: auto with zarith).	0.026090	9
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_0	120	0.0.0.0.0	synth with cache (only 1: unfold to_Z; only 1: unfold zero; only 1: apply Zmod_small; only 1: generalize wB_pos; only 1: lia).	0.034786	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_1	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_Bm1	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_compare	120	0	synth with cache (only 1: reflexivity).	0.022789	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_eq0	120	0.0.0.0.0.0	synth with cache (only 1: unfold eq0; only 1: intros; only 1: destruct to_Z; only 1: easy; only 1: easy; only 1: easy).	0.034310	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_opp_c	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_opp	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.BoundFromZero	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.QCauchySeq_bounded	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_cauchy	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.linear_max	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite max_l; only 1: rewrite Pos2Nat.inj_mul; only 1: apply Nat.mul_le_mono_nonneg; only 1: apply Nat.le_0_l; only 1: apply Nat.le_refl; only 1: apply Nat.le_0_l; only 1: apply H; only 1: apply Nat.le_refl).	0.031082	9
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_unfold	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_assoc_bounded_r	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_assoc	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_comm	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_proper_l	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_0_compat	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_plus_distr_l	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_plus_distr_r	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_1_l	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_isRingExt	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_isRing	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_morph_Proper	120	0	synth with cache (only 1: apply CReal_isRingExt).	0.031263	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_morph_T	120	0	synth with cache (only 1: apply CReal_isRingExt).	0.048983	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_opp_morph_Proper	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_opp_morph_T	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_minus_morph_Proper	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold CReal_minus; only 1: rewrite H; only 1: rewrite H0; only 1: reflexivity).	0.046711	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_minus_morph_T	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold CReal_minus; only 1: rewrite H; only 1: rewrite H0; only 1: reflexivity).	0.048049	10
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_0_l	120	0.0	synth with cache (only 1: intros ?; only 1: ring).	0.027293	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_0_r	120	0.0	synth with cache (only 1: intros ?; only 1: ring).	0.026930	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_1_r	120	0.0	synth with cache (only 1: intros ?; only 1: ring).	0.024977	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_opp_mult_distr_l	120	0.0	synth with cache (only 1: intros; only 1: ring).	0.032927	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_opp_mult_distr_r	120	0.0	synth with cache (only 1: intros; only 1: ring).	0.034252	2
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.height_non_negative	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.avl_node	120	0.0	synth with cache (only 1: intros; only 1: auto).	0.028444	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_compat_l	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.height_0	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.empty_avl	120	0.0	synth with cache (only 1: unfold empty; only 1: auto).	0.022397	2
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.create_avl	120	0.0	synth with cache (only 1: unfold create; only 1: auto).	0.026412	2
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.create_height	120	0.0.0	synth with cache (only 1: unfold create; only 1: intros; only 1: auto).	0.034558	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.bal_avl	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.bal_height_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.bal_height_2	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.add_avl_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.add_avl	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.remove_min_avl_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.remove_min_avl	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.merge_avl_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.merge_avl	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.remove_avl_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.remove_avl	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.join_avl_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.join_avl	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.concat_avl	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Elt.split_avl	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Map.map_height	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Map.map_avl	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Mapi.mapi_height	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Mapi.mapi_avl	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Map_option.map_option_avl	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Map2_opt.map2_opt_avl	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.AvlProofs.Map2.map2_avl	120	0.0	synth with cache (only 1: unfold map2; only 1: auto using map2_opt_avl, map_option_avl).	0.032490	2
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.MapsTo_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.mem_1	120	0.0.0.0.0.0.0	synth with cache (only 1: unfold In; only 1: unfold mem; only 1: intros ?; only 1: intros ?; only 1: rewrite In_alt; only 1: apply mem_1; only 1: apply is_bst).	0.037542	7
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.mem_2	120	0.0.0.0.0.0	synth with cache (only 1: unfold In; only 1: unfold mem; only 1: intros ?; only 1: intros ?; only 1: rewrite In_alt; only 1: apply mem_2).	0.035398	6
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.empty_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.is_empty_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.is_empty_2	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.add_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.add_2	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.add_3	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.remove_1	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold In; only 1: unfold remove; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite In_alt; only 1: simpl; only 1: apply remove_1; only 1: apply is_bst).	0.068998	9
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.remove_2	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.remove_3	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.find_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.find_2	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.fold_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.elements_1	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold elements; only 1: unfold eq_key_elt; only 1: rewrite elements_mapsto; only 1: auto).	0.031279	5
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.elements_2	120	0.0.0.0	synth with cache (only 1: intros; only 1: unfold MapsTo; only 1: rewrite <- elements_mapsto; only 1: auto).	0.030483	4
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.elements_3	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.elements_3w	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.cardinal_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.Equivb_Equivb	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.equal_1	120	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold equal; only 1: intros ?; only 1: destruct m; only 1: intros ?; only 1: destruct m'; only 1: intros ?; only 1: rewrite Equivb_Equivb; only 1: intros; only 1: simpl in *; only 1: rewrite equal_Equivb; only 1: auto; only 1: auto; only 1: auto).	0.056574	13
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.Elt.equal_2	120	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold equal; only 1: intros ?; only 1: destruct m; only 1: intros ?; only 1: destruct m'; only 1: intros ?; only 1: rewrite Equivb_Equivb; only 1: intros; only 1: simpl in *; only 1: rewrite <- equal_Equivb; only 1: auto; only 1: auto; only 1: auto).	0.061615	13
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.map_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.map_2	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold In in *; only 1: rewrite In_alt; only 1: rewrite In_alt; only 1: simpl; only 1: apply map_2).	0.050363	10
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.mapi_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.mapi_2	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold In in *; only 1: rewrite In_alt; only 1: rewrite In_alt; only 1: simpl; only 1: apply mapi_2).	0.041522	10
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.map2_1	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold find; only 1: unfold map2; only 1: unfold In; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite In_alt; only 1: rewrite In_alt; only 1: intros; only 1: simpl; only 1: apply map2_1; only 1: apply is_bst; only 1: apply is_bst; only 1: auto).	0.122195	18
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake.map2_2	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold In; only 1: unfold map2; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite In_alt; only 1: rewrite In_alt; only 1: rewrite In_alt; only 1: intros; only 1: simpl in *; only 1: eapply map2_2; only 1: apply is_bst; only 1: apply is_bst; only 1: eauto).	0.085575	18
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_compat_r	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake_ord.cons_cardinal_e	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_reg_l	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_abs_appart_zero	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rminmax.R.plus_min_distr_r	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rminmax.R.opp_max_distr	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply Rmax_case_strong; only 1: intros ?; only 1: rewrite Rmin_left; only 1: easy; only 1: elim H; only 1: auto with real; only 1: auto with real; only 1: intros ?; only 1: rewrite Rmin_right; only 1: easy; only 1: apply Rge_le; only 1: apply Ropp_le_ge_contravar; only 1: assumption).	0.040645	15
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rminmax.R.opp_min_distr	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply Rmin_case_strong; only 1: intros ?; only 1: rewrite Rmax_left; only 1: easy; only 1: apply Rge_le; only 1: apply Ropp_le_ge_contravar; only 1: assumption; only 1: intros ?; only 1: rewrite Rmax_right; only 1: easy; only 1: elim H; only 1: auto with real; only 1: auto with real).	0.039264	15
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rminmax.R.minus_max_distr_l	120	0.0.0.0	synth with cache (only 1: unfold Rminus; only 1: intros; only 1: rewrite opp_min_distr; only 1: apply plus_max_distr_l).	0.030269	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rminmax.R.minus_max_distr_r	120	0.0.0	synth with cache (only 1: unfold Rminus; only 1: intros; only 1: apply plus_max_distr_r).	0.029745	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rminmax.R.minus_min_distr_l	120	0.0.0.0	synth with cache (only 1: unfold Rminus; only 1: intros; only 1: rewrite opp_max_distr; only 1: apply plus_min_distr_l).	0.030512	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rminmax.R.minus_min_distr_r	120	0.0.0	synth with cache (only 1: unfold Rminus; only 1: intros; only 1: apply plus_min_distr_r).	0.028738	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CRealArchimedean	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.Rup_pos	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CRealLtDisjunctEpsilon	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CRealShiftReal	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CRealShiftEqual	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CRealNegShift	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake_ord.compare_aux_tcc	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CRealPosShift	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake_ord.cons_Cmp	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake_ord.compare_aux_Cmp	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake_ord.compare_Cmp	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake_ord.compare	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_neg	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake_ord.eq_seq	120	0.0.0.0.0	synth with cache (only 1: unfold eq; only 1: unfold seq; only 1: unfold selements; only 1: unfold LO.eq; only 1: intuition).	0.041215	5
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake_ord.lt_slt	120	0.0.0.0.0	synth with cache (only 1: unfold lt; only 1: unfold slt; only 1: unfold selements; only 1: unfold LO.lt; only 1: intuition).	0.070365	5
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake_ord.eq_1	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite eq_seq; only 1: unfold seq; only 1: rewrite Equivb_Equivb; only 1: rewrite Equivb_elements; only 1: auto using LO.eq_1).	0.083779	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_pos	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake_ord.eq_2	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake_ord.eq_refl	120	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite eq_seq; only 1: unfold seq; only 1: apply LO.eq_refl).	0.031576	4
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake_ord.eq_sym	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite eq_seq; only 1: rewrite eq_seq; only 1: unfold seq; only 1: intros; only 1: apply LO.eq_sym; only 1: auto).	0.041875	8
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_0_lt_compat	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake_ord.eq_trans	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_linear_shift	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_linear_shift_eq	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake_ord.lt_trans	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFullAVL.IntMake_ord.lt_not_eq	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite lt_slt; only 1: rewrite eq_seq; only 1: unfold slt; only 1: unfold seq; only 1: intros; only 1: apply LO.lt_not_eq; only 1: auto).	0.045026	9
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_l	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_r	120	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite CReal_mult_comm; only 1: rewrite CReal_inv_l; only 1: reflexivity).	0.030823	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_1	120	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- CReal_mult_1_l; only 1: rewrite CReal_inv_r; only 1: reflexivity).	0.032079	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_mult_distr	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.Rinv_eq_compat	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_reg_l	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_reg_r	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_reg_r	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_compat_l	120	0.1.0	synth with cache (only 1: intros; only 1: rewrite H; only 1: reflexivity).	0.046159	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_compat_r	120	0.0.0	synth with cache (only 1: intros; only 1: rewrite H; only 1: reflexivity).	0.035837	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_pos_appart_zero	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_le_compat_l_half	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: intros ?; only 1: apply CReal_mult_lt_reg_l in H1; only 1: contradiction; only 1: apply H).	0.027822	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CReal_invQ	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.CRealQ_dense	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyRealsMult.inject_Q_mult	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intros ?; only 1: destruct H; only 1: simpl in q0; only 1: destruct QCauchySeq_bounded; only 1: destruct QCauchySeq_bounded; only 1: simpl in q0; only 1: ring_simplify in q0; only 1: discriminate q0; only 1: intros ?; only 1: destruct H; only 1: simpl in q0; only 1: destruct QCauchySeq_bounded; only 1: destruct QCauchySeq_bounded; only 1: simpl in q0; only 1: ring_simplify in q0; only 1: discriminate q0).	0.132622	17
coq-tactician-stdlib.8.11.dev	Coq.btauto.Reflect.Translation.poly_of_formula_eval_compat	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: induction f; only 1: simpl poly_of_formula; only 1: simpl formula_eval; only 1: simpl; only 1: destruct @list_nth; only 1: reflexivity; only 1: reflexivity; only 1: simpl poly_of_formula; only 1: simpl formula_eval; only 1: auto; only 1: simpl poly_of_formula; only 1: simpl formula_eval; only 1: auto; only 1: simpl poly_of_formula; only 1: simpl formula_eval; only 1: rewrite poly_mul_compat; only 1: rewrite IHf1; only 1: rewrite IHf2; only 1: ring; only 1: simpl poly_of_formula; only 1: simpl formula_eval; only 1: rewrite poly_add_compat; only 1: rewrite poly_add_compat; only 1: rewrite poly_mul_compat; only 1: try_rewrite; only 1: destruct formula_eval; only 1: destruct formula_eval; only 1: reflexivity; only 1: reflexivity; only 1: destruct formula_eval; only 1: reflexivity; only 1: reflexivity; only 1: simpl poly_of_formula; only 1: simpl formula_eval; only 1: rewrite poly_add_compat; only 1: try_rewrite; only 1: destruct formula_eval; only 1: reflexivity; only 1: reflexivity; only 1: simpl poly_of_formula; only 1: simpl formula_eval; only 1: rewrite poly_add_compat; only 1: congruence; only 1: simpl poly_of_formula; only 1: simpl formula_eval; only 1: rewrite poly_add_compat; only 1: rewrite poly_add_compat; only 1: rewrite poly_mul_compat; only 1: rewrite poly_mul_compat; only 1: try_rewrite; only 1: destruct formula_eval; only 1: destruct formula_eval; only 1: destruct formula_eval; only 1: reflexivity; only 1: reflexivity; only 1: destruct formula_eval; only 1: reflexivity; only 1: reflexivity; only 1: destruct formula_eval; only 1: destruct formula_eval; only 1: reflexivity; only 1: reflexivity; only 1: destruct formula_eval; only 1: reflexivity; only 1: reflexivity).	0.128475	67
coq-tactician-stdlib.8.11.dev	Coq.btauto.Reflect.Translation.poly_of_formula_valid_compat	120
coq-tactician-stdlib.8.11.dev	Coq.btauto.Reflect.Translation.poly_of_formula_sound	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite <- poly_of_formula_eval_compat; only 1: rewrite <- poly_of_formula_eval_compat; only 1: rewrite H; only 1: reflexivity).	0.031379	8
coq-tactician-stdlib.8.11.dev	Coq.btauto.Reflect.Completeness.reduce_poly_of_formula_sound	120
coq-tactician-stdlib.8.11.dev	Coq.btauto.Reflect.Completeness.list_nth_base	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold list_nth; only 1: rewrite Pos.peano_rect_base; only 1: reflexivity).	0.025679	6
coq-tactician-stdlib.8.11.dev	Coq.btauto.Reflect.Completeness.list_nth_succ	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold list_nth; only 1: rewrite Pos.peano_rect_succ; only 1: reflexivity).	0.027330	6
coq-tactician-stdlib.8.11.dev	Coq.btauto.Reflect.Completeness.list_nth_nil	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: induction n using Pos.peano_rect; only 1: rewrite list_nth_base; only 1: easy; only 1: rewrite list_nth_succ; only 1: reflexivity).	0.025814	8
coq-tactician-stdlib.8.11.dev	Coq.btauto.Reflect.Completeness.make_last_nth_1	120
coq-tactician-stdlib.8.11.dev	Coq.btauto.Reflect.Completeness.make_last_nth_2	120
coq-tactician-stdlib.8.11.dev	Coq.btauto.Reflect.Completeness.list_replace_nth_1	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: induction var; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: simpl; only 1: rewrite make_last_nth_1; only 1: rewrite list_nth_nil; only 1: auto; only 1: auto; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: simpl; only 1: induction j using Pos.peano_rect; only 1: rewrite Pos.peano_rect_base; only 1: induction i using Pos.peano_rect; only 1: elim H; only 1: auto; only 1: rewrite list_nth_succ; only 1: rewrite list_nth_succ; only 1: reflexivity; only 1: rewrite Pos.peano_rect_succ; only 1: induction i using Pos.peano_rect; only 1: rewrite list_nth_base; only 1: rewrite list_nth_base; only 1: reflexivity; only 1: rewrite list_nth_succ; only 1: rewrite list_nth_succ; only 1: apply IHvar; only 1: zify; only 1: omega).	0.198913	34
coq-tactician-stdlib.8.11.dev	Coq.btauto.Reflect.Completeness.list_replace_nth_2	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: induction var; only 1: intros ?; only 1: intros ?; only 1: simpl; only 1: apply make_last_nth_2; only 1: intros ?; only 1: intros ?; only 1: simpl; only 1: induction i using Pos.peano_rect; only 1: rewrite Pos.peano_rect_base; only 1: rewrite list_nth_base; only 1: reflexivity; only 1: rewrite Pos.peano_rect_succ; only 1: rewrite list_nth_succ; only 1: auto).	0.044886	16
coq-tactician-stdlib.8.11.dev	Coq.btauto.Reflect.Completeness.boolean_witness_nonzero	120
coq-tactician-stdlib.8.11.dev	Coq.btauto.Reflect.Completeness.reduce_poly_of_formula_sound_alt	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.eq_equiv	120	0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: firstorder; only 1: firstorder; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply eq_trans).	0.033162	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.gt_wB_1	120	0.0.0.0.0.0	synth with cache (only 1: unfold base; only 1: apply Zpower_gt_1; only 1: red; only 1: auto; only 1: unfold Z.lt; only 1: auto with zarith).	0.025779	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.gt_wB_0	120	0.0	synth with cache (only 1: pose proof gt_wB_1; only 1: lia).	0.025662	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.one_mod_wB	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: rewrite Zmod_small; only 1: auto; only 1: split; only 1: auto with zarith; only 1: unfold base; only 1: apply Zpower_gt_1; only 1: red; only 1: auto; only 1: unfold Z.lt; only 1: auto with zarith).	0.032063	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.succ_mod_wB	120	0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite <- one_mod_wB  at 2; only 1: rewrite <- Zplus_mod; only 1: easy).	0.047711	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.pred_mod_wB	120	0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite <- one_mod_wB  at 2; only 1: rewrite Zminus_mod; only 1: easy).	0.047880	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.NZ_to_Z_mod	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.pred_succ	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.one_succ	120	0.0.0.0	synth with cache (only 1: zify; only 1: simpl BinIntDef.Z.add; only 1: rewrite one_mod_wB; only 1: auto).	0.028352	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.two_succ	120	0	synth with cache (only 1: reflexivity).	0.022783	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.Induction.B0	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.Induction.BS	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.Induction.Zbounded_induction	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.Induction.B_holds	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.Induction.bi_induction	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.add_0_l	120	1.0.0.0	synth with cache (only 1: intros ?; only 1: zify; only 1: rewrite Z.add_0_l; only 1: apply NZ_to_Z_mod).	0.034964	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.add_succ_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.sub_0_r	120	1.0.0.0	synth with cache (only 1: intros ?; only 1: zify; only 1: rewrite Z.sub_0_r; only 1: apply NZ_to_Z_mod).	0.033567	7
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_tac.Zeqb_ok	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_tac.comm	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Qpower_positive_1	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Qpower_1	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct n; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: induction p; only 1: simpl; only 1: rewrite IHp; only 1: reflexivity; only 1: simpl; only 1: rewrite IHp; only 1: reflexivity; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: rewrite Qpower_positive_1; only 1: reflexivity).	0.044510	17
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Qpower_positive_0	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Qpower_0	120	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct n; only 1: intros ?; only 1: elim H; only 1: reflexivity; only 1: intros ?; only 1: simpl; only 1: rewrite Qpower_positive_0; only 1: reflexivity; only 1: intros ?; only 1: simpl; only 1: rewrite Qpower_positive_0; only 1: reflexivity).	0.038294	13
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Qpower_not_0_positive	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Qpower_pos_positive	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: induction n; only 1: simpl; only 1: apply Qmult_le_0_compat; only 1: assumption; only 1: apply Qmult_le_0_compat; only 1: assumption; only 1: assumption; only 1: simpl; only 1: apply Qmult_le_0_compat; only 1: assumption; only 1: assumption; only 1: simpl; only 1: assumption).	0.034528	16
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Qpower_pos	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: destruct n; only 1: intros ?; only 1: simpl; only 1: discriminate; only 1: intros ?; only 1: simpl; only 1: apply Qpower_pos_positive; only 1: assumption; only 1: intros ?; only 1: simpl; only 1: apply Qinv_le_0_compat; only 1: apply Qpower_pos_positive; only 1: assumption).	0.032837	15
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Qmult_power_positive	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Qmult_power	120	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct n; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: rewrite Qmult_power_positive; only 1: reflexivity; only 1: simpl; only 1: rewrite Qmult_power_positive; only 1: rewrite Qinv_mult_distr; only 1: reflexivity).	0.049574	13
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Qinv_power_positive	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Qinv_power	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: destruct n; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: rewrite Qinv_power_positive; only 1: reflexivity; only 1: simpl; only 1: rewrite Qinv_power_positive; only 1: reflexivity).	0.032137	11
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Qdiv_power	120	0.0.0.0.0.0.0	synth with cache (only 1: unfold Qdiv; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite Qmult_power; only 1: rewrite Qinv_power; only 1: reflexivity).	0.035471	7
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Qinv_power_n	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite Qmake_Qdiv; only 1: rewrite Qdiv_power; only 1: rewrite Qpower_1; only 1: unfold Qdiv; only 1: ring).	0.040909	7
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Qpower_plus_positive	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold Qpower_positive; only 1: apply pow_pos_add; only 1: apply Q_Setoid; only 1: apply Qmult_comp; only 1: apply Qmult_assoc).	0.030102	8
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Qpower_opp	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: destruct n; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: symmetry; only 1: apply Qinv_involutive).	0.028768	10
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Qpower_minus_positive	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Qpower_plus	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Qpower_plus'	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Qpower_mult_positive	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: induction n using Pos.peano_ind; only 1: reflexivity; only 1: rewrite Pos.mul_succ_l; only 1: rewrite <- Pos.add_1_l; only 1: rewrite Qpower_plus_positive; only 1: rewrite Qpower_plus_positive; only 1: rewrite IHn; only 1: rewrite Qmult_power_positive; only 1: reflexivity).	0.046874	12
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Qpower_mult	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: destruct n; only 1: intros ?; only 1: destruct m; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: rewrite Qpower_positive_1; only 1: reflexivity; only 1: simpl; only 1: rewrite Qpower_positive_1; only 1: reflexivity; only 1: intros ?; only 1: destruct m; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: rewrite Qpower_mult_positive; only 1: reflexivity; only 1: simpl; only 1: rewrite Qpower_mult_positive; only 1: reflexivity; only 1: intros ?; only 1: destruct m; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: rewrite Qpower_mult_positive; only 1: rewrite Qinv_power_positive; only 1: reflexivity; only 1: simpl; only 1: rewrite Qpower_mult_positive; only 1: rewrite Qinv_power_positive; only 1: rewrite Qinv_involutive; only 1: reflexivity).	0.077232	36
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Zpower_Qpower	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Qsqr_nonneg	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qpower.Qpower_decomp	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction p; only 1: simpl Qpower_positive; only 1: rewrite IHp; only 1: unfold Qmult; only 1: unfold Qnum; only 1: unfold Qden; only 1: f_equal; only 1: rewrite <- Z.pow_twice_r; only 1: rewrite <- Z.pow_succ_r; only 1: easy; only 1: easy; only 1: apply Pos2Z.inj; only 1: rewrite Pos2Z.inj_mul; only 1: rewrite Pos2Z.inj_mul; only 1: rewrite Pos2Z.inj_pow; only 1: rewrite Pos2Z.inj_pow; only 1: rewrite <- Z.pow_twice_r; only 1: rewrite <- Z.pow_succ_r; only 1: easy; only 1: easy; only 1: simpl Qpower_positive; only 1: rewrite IHp; only 1: unfold Qmult; only 1: unfold Qnum; only 1: unfold Qden; only 1: f_equal; only 1: rewrite <- Z.pow_twice_r; only 1: easy; only 1: apply Pos2Z.inj; only 1: rewrite Pos2Z.inj_mul; only 1: rewrite Pos2Z.inj_pow; only 1: rewrite Pos2Z.inj_pow; only 1: rewrite <- Z.pow_twice_r; only 1: easy; only 1: simpl Qpower_positive; only 1: rewrite Z.pow_1_r; only 1: rewrite Pos.pow_1_r; only 1: easy).	0.103824	38
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.WW.spec_WO	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.WW.spec_OW	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.WW.spec_WW	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.Of_Z.of_pos_correct	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.Of_Z.of_Z_correct	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_0_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_comm	120	0.0.0.0	synth with cache (only 1: intros; only 1: zify; only 1: rewrite Z.add_comm; only 1: easy).	0.056027	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_assoc	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: zify; only 1: rewrite Zplus_mod_idemp_r; only 1: rewrite Zplus_mod_idemp_l; only 1: rewrite Z.add_assoc; only 1: easy).	0.051896	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_1_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_comm	120	0.0.0.0	synth with cache (only 1: intros; only 1: zify; only 1: rewrite Z.mul_comm; only 1: easy).	0.039428	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_assoc	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: zify; only 1: rewrite Zmult_mod_idemp_r; only 1: rewrite Zmult_mod_idemp_l; only 1: rewrite Z.mul_assoc; only 1: easy).	0.082367	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_add_distr_r	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: zify; only 1: rewrite <- Zplus_mod; only 1: rewrite Zmult_mod_idemp_l; only 1: rewrite Z.mul_add_distr_r; only 1: easy).	0.054861	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_opp_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_opp_diag_r	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: red; only 1: rewrite add_opp_r; only 1: zify; only 1: rewrite Z.sub_diag; only 1: rewrite Zmod_0_l; only 1: easy).	0.075609	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.CyclicRing	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.1.0	synth with cache (only 1: constructor; only 1: exact add_0_l; only 1: intros; only 1: zify; only 1: rewrite Z.add_comm; only 1: easy; only 1: intros; only 1: zify; only 1: rewrite Zplus_mod_idemp_r; only 1: rewrite Zplus_mod_idemp_l; only 1: rewrite Z.add_assoc; only 1: easy; only 1: exact mul_1_l; only 1: intros; only 1: zify; only 1: rewrite Z.mul_comm; only 1: easy; only 1: intros; only 1: zify; only 1: rewrite Zmult_mod_idemp_r; only 1: rewrite Zmult_mod_idemp_l; only 1: rewrite Z.mul_assoc; only 1: easy; only 1: intros; only 1: zify; only 1: rewrite <- Zplus_mod; only 1: rewrite Zmult_mod_idemp_l; only 1: rewrite Z.mul_add_distr_r; only 1: easy; only 1: symmetry; only 1: apply add_opp_r; only 1: intros; only 1: red; only 1: rewrite add_opp_r; only 1: zify; only 1: rewrite Z.sub_diag; only 1: rewrite Zmod_0_l; only 1: easy).	0.240280	54
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Decidable_sound	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply -> @Decidable_spec; only 1: assumption).	0.029591	5
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Decidable_complete	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply <- @Decidable_spec; only 1: assumption).	0.027051	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.eqb_eq	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.eqb_correct	120	0	synth with cache (only 1: apply eqb_eq).	0.026478	1
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Decidable_sound_alt	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: intros ?; only 1: destruct Decidable_witness; only 1: simpl; only 1: tauto; only 1: simpl; only 1: tauto).	0.032323	9
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Decidable_complete_alt	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: intros ?; only 1: intros ?; only 1: simpl in *; only 1: intuition congruence).	0.030540	7
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Computational.Decidable_PosEq_obligation_1	120	0	synth with cache (only 1: apply Pos.eqb_eq).	0.024325	1
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Computational.Decidable_PosLt_obligation_1	120	0	synth with cache (only 1: apply Pos.ltb_lt).	0.023689	1
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Computational.Decidable_PosLe_obligation_1	120	0.0.0.0.0.0	synth with cache (only 1: unfold BinPosDef.Pos.leb; only 1: unfold Pos.le; only 1: destruct BinPosDef.Pos.compare; only 1: easy'; only 1: easy'; only 1: easy').	0.048024	6
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Computational.Decidable_eq_poly_obligation_1	120
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Computational.Decidable_null_obligation_3	120	0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: destruct p; only 1: destruct b; only 1: discriminate; only 1: constructor; only 1: discriminate; only 1: inversion 1; only 1: trivial).	0.044126	8
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Computational.Decidable_valid_obligation_1	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: revert n; only 1: induction p; only 1: unfold valid_dec in *; only 1: intuition; only 1: unfold valid_dec in *; only 1: intuition; only 1: bool; only 1: try_decide; only 1: auto; only 1: intros ?; only 1: induction H; only 1: unfold valid_dec in *; only 1: auto; only 1: unfold valid_dec in *; only 1: bool; only 1: try_decide; only 1: auto; only 1: try_decide; only 1: auto; only 1: auto; only 1: auto).	0.162500	22
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Validity.valid_le_compat	120
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Validity.linear_le_compat	120
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Validity.linear_valid_incl	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: induction H; only 1: constructor; only 1: constructor; only 1: auto; only 1: auto; only 1: auto; only 1: eapply valid_le_compat; only 1: eauto; only 1: lia).	0.040405	12
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Evaluation.eval_null_zero	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: auto).	0.027455	5
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Evaluation.eval_extensional_eq_compat	120
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Evaluation.eval_suffix_compat	120
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Algebra.poly_add_compat	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.add_cancel_l	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_eq_0_1	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_eq_O_2PI_0	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.sin_eq_O_2PI_1	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H1; only 1: intropattern subst -> H1; only 1: clear H0; only 1: clear H; only 1: unfold sin; only 1: case exist_sin; only 1: intros; only 1: ring; only 1: destruct H1; only 1: intropattern subst -> H1; only 1: clear H0; only 1: clear H; only 1: rewrite sin_PI; only 1: easy; only 1: intropattern subst -> H1; only 1: clear H0; only 1: clear H; only 1: rewrite sin_2a; only 1: rewrite sin_PI; only 1: ring).	0.098322	23
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_eq_0_2PI_0	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.Rtrigo1.cos_eq_0_2PI_1	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H1; only 1: intropattern subst -> H1; only 1: rewrite cos_PI2; only 1: easy; only 1: intropattern subst -> H1; only 1: rewrite cos_3PI2; only 1: easy).	0.059259	10
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_eq_compat_r	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_eq_reg_l	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.In_In	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Subset_Included	120	0.0.0.0.0	synth with cache (only 1: unfold Subset; only 1: unfold Included; only 1: unfold In; only 1: unfold mkEns; only 1: intuition).	0.030584	5
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Equal_Same_set	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite double_inclusion; only 1: unfold Subset; only 1: unfold Same_set; only 1: unfold mkEns; only 1: intuition).	0.034313	6
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.empty_Empty_Set	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Same_set; only 1: unfold Included; only 1: unfold mkEns; only 1: unfold In; only 1: split; only 1: intros ?; only 1: set_iff; only 1: inversion 1; only 1: intros ?; only 1: set_iff; only 1: inversion 1).	0.050118	11
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Empty_Empty_set	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.singleton_Singleton	120	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Same_set; only 1: unfold Included; only 1: unfold mkEns; only 1: unfold In; only 1: split; only 1: intros ?; only 1: set_iff; only 1: inversion 1; only 1: constructor; only 1: intros ?; only 1: set_iff; only 1: inversion 1; only 1: constructor).	0.112053	13
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.union_Union	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Same_set; only 1: unfold Included; only 1: unfold mkEns; only 1: unfold In; only 1: split; only 1: intros ?; only 1: set_iff; only 1: inversion 1; only 1: constructor 1; only 1: auto; only 1: constructor 2; only 1: auto; only 1: intros ?; only 1: set_iff; only 1: inversion 1; only 1: auto; only 1: auto).	0.081071	17
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.inter_Intersection	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Same_set; only 1: unfold Included; only 1: unfold mkEns; only 1: unfold In; only 1: split; only 1: intros ?; only 1: set_iff; only 1: inversion 1; only 1: constructor; only 1: auto; only 1: auto; only 1: intros ?; only 1: set_iff; only 1: inversion 1; only 1: constructor; only 1: auto; only 1: auto).	0.096948	17
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.add_Add	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Same_set; only 1: unfold Included; only 1: unfold mkEns; only 1: unfold In; only 1: split; only 1: intros ?; only 1: set_iff; only 1: inversion 1; only 1: inversion H0; only 1: constructor 2; only 1: constructor; only 1: constructor 1; only 1: auto; only 1: intros ?; only 1: set_iff; only 1: inversion 1; only 1: auto with sets; only 1: auto with sets).	0.064766	18
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Add_Add	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Same_set; only 1: unfold Included; only 1: unfold mkEns; only 1: unfold In; only 1: split; only 1: intros; only 1: red in H; only 1: rewrite H in H0; only 1: destruct H0; only 1: inversion H0; only 1: constructor 2; only 1: constructor; only 1: constructor 1; only 1: auto; only 1: intros; only 1: red in H; only 1: rewrite H; only 1: inversion H0; only 1: auto; only 1: inversion H1; only 1: auto).	0.059955	21
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.remove_Subtract	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Same_set; only 1: unfold Included; only 1: unfold mkEns; only 1: unfold In; only 1: split; only 1: intros ?; only 1: set_iff; only 1: inversion 1; only 1: split; only 1: auto; only 1: contradict H1; only 1: inversion H1; only 1: auto; only 1: intros ?; only 1: set_iff; only 1: inversion 1; only 1: auto with sets).	0.086114	17
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.mkEns_Finite	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.mkEns_cardinal	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Ens_to_MSet	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.mem_eq	120	0.0.0	synth with cache (only 1: intros ?; only 1: rewrite H; only 1: auto).	0.034625	3
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_mem_1	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply equal_1; only 1: unfold Equal; only 1: intros; only 1: rewrite mem_iff; only 1: rewrite mem_iff; only 1: rewrite H; only 1: tauto).	0.037931	8
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_mem_2	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.subset_mem_1	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply subset_1; only 1: unfold Subset; only 1: intros ?; only 1: rewrite mem_iff; only 1: rewrite mem_iff; only 1: auto).	0.041085	7
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.subset_mem_2	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite <- mem_iff; only 1: rewrite <- mem_iff; only 1: apply subset_2; only 1: auto).	0.038051	6
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.empty_mem	120	0.0	synth with cache (only 1: rewrite <- not_mem_iff; only 1: auto with set).	0.024333	2
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.is_empty_equal_empty	120	0.0.0.0.0.0.0	synth with cache (only 1: apply eq_true_iff_eq; only 1: split; only 1: intros; only 1: auto with set; only 1: intros; only 1: rewrite <- is_empty_iff; only 1: auto with set).	0.039581	7
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.choose_mem_1	120	0	synth with cache (only 1: auto with set).	0.025666	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.choose_mem_2	120	0	synth with cache (only 1: auto with set).	0.030630	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_mem_1	120	1	synth with cache (only 1: auto with set relations).	0.077207	2
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_mem_2	120	1	synth with cache (only 1: apply add_neq_b).	0.057152	2
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.remove_mem_1	120	1.0	synth with cache (only 1: rewrite <- not_mem_iff; only 1: auto with set relations).	0.060031	3
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.remove_mem_2	120	1	synth with cache (only 1: apply remove_neq_b).	0.022700	2
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.singleton_equal_add	120	0.0	synth with cache (only 1: rewrite singleton_equal_add; only 1: auto with set).	0.032487	2
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_mem	120	0	synth with cache (only 1: apply union_b).	0.023749	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_mem	120	0	synth with cache (only 1: apply inter_b).	0.024540	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.diff_mem	120	0	synth with cache (only 1: apply diff_b).	0.024487	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.mem_3	120	0.0.0	synth with cache (only 1: intros; only 1: rewrite <- not_mem_iff; only 1: auto).	0.025302	3
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.mem_4	120	0.0.0	synth with cache (only 1: intros; only 1: rewrite not_mem_iff; only 1: auto).	0.025141	3
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_refl	120	0	synth with cache (only 1: auto with set).	0.023167	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_sym	120	0.0.0.0	synth with cache (only 1: apply eq_true_iff_eq; only 1: rewrite <- equal_iff; only 1: rewrite <- equal_iff; only 1: intuition).	0.032136	4
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_trans	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_equal	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_cardinal	120	0	synth with cache (only 1: auto with set).	0.023250	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.subset_refl	120	0	synth with cache (only 1: auto with set).	0.024145	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.subset_antisym	120	0	synth with cache (only 1: auto with set).	0.028999	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.subset_trans	120	0.0.0.0.0.0.0	synth with cache (only 1: rewrite <- subset_iff; only 1: rewrite <- subset_iff; only 1: rewrite <- subset_iff; only 1: intros; only 1: apply subset_trans with s'; only 1: auto; only 1: auto).	0.050629	7
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.subset_equal	120	0	synth with cache (only 1: auto with set).	0.038442	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.choose_mem_3	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.choose_mem_4	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_mem_3	120	0	synth with cache (only 1: auto with set).	0.025561	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_equal	120	0	synth with cache (only 1: auto with set).	0.025126	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.remove_mem_3	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.remove_equal	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply equal_1; only 1: apply remove_equal; only 1: rewrite not_mem_iff; only 1: auto).	0.028907	5
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_remove	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply equal_1; only 1: apply add_remove; only 1: auto with set).	0.028032	4
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.remove_add	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply equal_1; only 1: apply remove_add; only 1: rewrite not_mem_iff; only 1: auto).	0.027296	5
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.is_empty_cardinal	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.singleton_mem_1	120	1	synth with cache (only 1: auto with set relations).	0.034748	2
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.singleton_mem_2	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite singleton_b; only 1: unfold eqb; only 1: destruct FM.eq_dec; only 1: intuition; only 1: intuition).	0.030168	6
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.singleton_mem_3	120	0.0.0	synth with cache (only 1: intros; only 1: apply singleton_1; only 1: auto with set).	0.022967	3
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_sym	120	0	synth with cache (only 1: auto with set).	0.026502	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_subset_equal	120	0	synth with cache (only 1: auto with set).	0.038823	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_equal_1	120	0	synth with cache (only 1: auto with set).	0.045525	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_equal_2	120	0	synth with cache (only 1: auto with set).	0.046050	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_assoc	120	0	synth with cache (only 1: auto with set).	0.024755	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_union_singleton	120	0	synth with cache (only 1: auto with set).	0.026496	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_add	120	0	synth with cache (only 1: auto with set).	0.023863	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_subset_1	120	0	synth with cache (only 1: auto with set).	0.026459	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_subset_2	120	0	synth with cache (only 1: auto with set).	0.024729	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_subset_3	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply subset_1; only 1: apply union_subset_3; only 1: auto with set; only 1: auto with set).	0.042566	5
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_sym	120	0	synth with cache (only 1: auto with set).	0.024892	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_subset_equal	120	0	synth with cache (only 1: auto with set).	0.029091	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_equal_1	120	0	synth with cache (only 1: auto with set).	0.028411	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_equal_2	120	0	synth with cache (only 1: auto with set).	0.028122	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_assoc	120	0	synth with cache (only 1: auto with set).	0.023232	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_inter_1	120	0	synth with cache (only 1: auto with set).	0.025674	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_inter_2	120	0	synth with cache (only 1: auto with set).	0.025622	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_add_1	120	0	synth with cache (only 1: auto with set).	0.024768	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_add_2	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply equal_1; only 1: apply inter_add_2; only 1: rewrite not_mem_iff; only 1: auto).	0.027579	5
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_subset_1	120	0	synth with cache (only 1: auto with set).	0.025111	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_subset_2	120	0	synth with cache (only 1: auto with set).	0.023685	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_subset_3	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply subset_1; only 1: apply inter_subset_3; only 1: auto with set; only 1: auto with set).	0.068572	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_opp_carry	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.Zmod_equal	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.diff_subset	120	0	synth with cache (only 1: auto with set).	0.031885	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.diff_subset_equal	120	0	synth with cache (only 1: auto with set).	0.032892	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_succ_c	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.remove_inter_singleton	120	0	synth with cache (only 1: auto with set).	0.031536	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.diff_inter_empty	120	0	synth with cache (only 1: auto with set).	0.025467	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_add_c	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.diff_inter_all	120	0	synth with cache (only 1: auto with set).	0.030753	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_add_carry_c	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_succ	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold succ; only 1: unfold to_Z; only 1: unfold BinIntDef.Z.succ; only 1: symmetry; only 1: apply Zplus_mod_idemp_l).	0.034833	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_add	120	0.0.0.0	synth with cache (only 1: intros; only 1: unfold add; only 1: unfold to_Z; only 1: apply Zplus_mod).	0.027166	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_add_carry	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.set_rec	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.exclusive_set	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite mem_iff; only 1: rewrite mem_iff; only 1: destruct mem; only 1: destruct mem; only 1: intuition; only 1: intuition; only 1: destruct mem; only 1: intuition; only 1: intuition).	0.074048	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_pred_c	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.fold_empty	120	0	synth with cache (only 1: apply fold_empty).	0.023371	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_sub_c	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.fold_equal	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_sub_carry_c	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.fold_add	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_pred	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold pred; only 1: unfold to_Z; only 1: unfold BinIntDef.Z.pred; only 1: rewrite <- Zplus_mod_idemp_l; only 1: auto).	0.032818	6
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.add_fold	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_sub	120	0.0.0.0	synth with cache (only 1: intros; only 1: unfold sub; only 1: unfold to_Z; only 1: apply Zminus_mod).	0.033147	4
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.remove_fold_1	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.remove_fold_2	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_sub_carry	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.fold_union	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_cardinal_1	120	0	synth with cache (only 1: auto with set).	0.031372	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_mul_c	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_cardinal_2	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply add_cardinal_2; only 1: rewrite not_mem_iff; only 1: auto).	0.029471	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_mul	120	0.0.0.0	synth with cache (only 1: intros; only 1: unfold mul; only 1: unfold to_Z; only 1: apply Zmult_mod).	0.029590	4
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_cardinal_1	120	0.0.0	synth with cache (only 1: intros; only 1: apply remove_cardinal_1; only 1: auto with set).	0.032921	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_square_c	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_cardinal_2	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply Equal_cardinal; only 1: apply equal_2; only 1: auto with set).	0.032099	4
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_cardinal	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply union_cardinal; only 1: intros; only 1: rewrite exclusive_set; only 1: auto).	0.040356	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_div	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_div_gt	120	0.0.0	synth with cache (only 1: intros; only 1: apply spec_div; only 1: auto).	0.033866	3
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.subset_cardinal	120	0.0.0	synth with cache (only 1: intros; only 1: apply subset_cardinal; only 1: auto with set).	0.035505	3
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.Comp'	120	0.0.0.0.0	synth with cache (only 1: unfold Proper in *; only 1: red; only 1: intros; only 1: f_equal; only 1: auto).	0.041605	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_modulo	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_modulo_gt	120	0.0.0	synth with cache (only 1: intros; only 1: apply spec_modulo; only 1: auto).	0.029910	3
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.filter_mem	120	0.0.0	synth with cache (only 1: intros; only 1: apply filter_b; only 1: auto).	0.036940	3
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_filter	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.Zgcd_bound	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.exists_filter	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.partition_filter_1	120	0	synth with cache (only 1: auto with set).	0.034419	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_gcd	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_gcd_gt	120	0.0	synth with cache (only 1: intros; only 1: apply spec_gcd).	0.033693	2
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.partition_filter_2	120	0	synth with cache (only 1: auto with set).	0.058149	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_div21	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_add_mul_div	120	0.0.0	synth with cache (only 1: intros; only 1: unfold add_mul_div; only 1: auto).	0.031272	3
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.filter_add_1	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_pos_mod	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.filter_add_2	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_is_even	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.add_filter_1	120	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Add; only 1: unfold MP.Add; only 1: intros; only 1: rewrite filter_spec; only 1: rewrite filter_spec; only 1: rewrite H0; only 1: clear H0; only 1: intuition; only 1: setoid_replace y with x; only 1: auto with relations; only 1: auto with relations; only 1: auto; only 1: auto).	0.127623	13
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_sqrt	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.add_filter_2	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Add; only 1: unfold MP.Add; only 1: unfold Equal; only 1: intros; only 1: rewrite filter_spec; only 1: rewrite filter_spec; only 1: rewrite H0; only 1: clear H0; only 1: intuition; only 1: setoid_replace x with a in H; only 1: congruence; only 1: auto; only 1: auto; only 1: auto).	0.111636	14
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_sqrt2	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.two_p_power2	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold two_p; only 1: destruct x; only 1: simpl; only 1: auto; only 1: simpl; only 1: apply two_power_pos_correct; only 1: simpl; only 1: auto).	0.044501	9
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_head00	120	0.0.0.0.0	synth with cache (only 1: unfold head0; only 1: intros ?; only 1: intros ?; only 1: intropattern subst -> H; only 1: apply spec_zdigits).	0.037187	5
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.union_filter	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.filter_union	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Equal; only 1: intros; only 1: set_iff; only 1: rewrite filter_spec; only 1: rewrite filter_spec; only 1: rewrite filter_spec; only 1: set_iff; only 1: tauto; only 1: auto; only 1: auto; only 1: auto).	0.104509	11
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_head0	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_mem_1	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.Ptail_pos	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_mem_2	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_mem_3	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.Ptail_bounded	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_tail00	120	0.0.0.0	synth with cache (only 1: unfold tail0; only 1: intros; only 1: rewrite H; only 1: apply spec_zdigits).	0.038715	4
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_mem_4	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_exists	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite for_all_b; only 1: rewrite exists_b; only 1: induction elements; only 1: simpl; only 1: auto; only 1: simpl; only 1: destruct f; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: auto; only 1: auto).	0.043901	14
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_tail0	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool'.Comp'	120	0.0.0.0.0	synth with cache (only 1: unfold Proper in *; only 1: red; only 1: intros; only 1: f_equal; only 1: auto).	0.032674	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_lor	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool'.exists_mem_1	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool'.exists_mem_2	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_land	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool'.exists_mem_3	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite for_all_exists; only 1: rewrite negb_true_iff; only 1: apply for_all_mem_3 with x; only 1: auto; only 1: auto; only 1: rewrite negb_false_iff; only 1: auto; only 1: auto).	0.034224	9
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool'.exists_mem_4	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_lxor	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Sum.sum_plus	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Sum.sum_filter	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Sum.fold_compat	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetEqProperties.WEqPropertiesOn.Sum.sum_compat	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zgcd_alt.Zgcdn_pos	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zgcd_alt.Zgcd_alt_pos	120	0.0	synth with cache (only 1: intros; only 1: apply Zgcdn_pos).	0.024562	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zgcd_alt.Zgcdn_linear_bound	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zgcd_alt.fibonacci_pos	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zgcd_alt.fibonacci_incr	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zgcd_alt.Zgcdn_worst_is_fibonacci	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zgcd_alt.Zgcdn_ok_before_fibonacci	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zgcd_alt.Zgcd_bound_fibonacci	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zgcd_alt.Zgcd_bound_opp	120	0.0.0.0	synth with cache (only 1: destruct a; only 1: easy; only 1: easy; only 1: easy).	0.026177	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zgcd_alt.Zgcdn_opp	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: destruct a; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.049602	11
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zgcd_alt.Zgcdn_is_gcd_pos	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zgcd_alt.Zgcdn_is_gcd	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zgcd_alt.Zgcd_is_gcd	120	0.0.0.0	synth with cache (only 1: unfold Zgcd_alt; only 1: intros; only 1: apply Zgcdn_is_gcd; only 1: auto).	0.025780	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zquot_0_r	120	0.0.0.0	synth with cache (only 1: destruct a; only 1: easy; only 1: easy; only 1: easy).	0.032088	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zrem_0_r	120	0.0.0.0	synth with cache (only 1: destruct a; only 1: easy; only 1: easy; only 1: easy).	0.030428	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zrem_0_l	120	0.0.0.0	synth with cache (only 1: destruct a; only 1: easy; only 1: easy; only 1: easy).	0.197723	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_facts.Zpower_pos_1_l	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zquot_0_l	120	0.0.0.0	synth with cache (only 1: destruct a; only 1: easy; only 1: easy; only 1: easy).	0.207734	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_facts.Zpower_pos_0_l	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_facts.Zpower_pos_pos	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_facts.Zpower_le_monotone	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply Z.pow_le_mono_r; only 1: easy; only 1: easy).	0.032028	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_facts.Zpower_lt_monotone	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_facts.Zpower_gt_1	120	0	synth with cache (only 1: apply Z.pow_gt_1).	0.027716	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_facts.Zmult_power	120	0.0	synth with cache (only 1: intros; only 1: apply Z.pow_mul_l).	0.022557	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_facts.Zpower_le_monotone3	120	0.0.0	synth with cache (only 1: intros; only 1: apply Z.pow_le_mono_l; only 1: easy).	0.026844	3
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Z_rem_same	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Z_rem_mult	120	0.0.0	synth with cache (only 1: zero_or_not b; only 1: apply Z.rem_mul; only 1: auto).	0.034172	3
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_facts.Zpower_le_monotone_inv	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zquot_opp_l	120	0.0.0	synth with cache (only 1: zero_or_not b; only 1: apply Z.quot_opp_l; only 1: auto).	0.038177	3
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_facts.Zpower2_lt_lin	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply Z.pow_gt_lin_r; only 1: easy; only 1: lia).	0.032258	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zquot_opp_r	120	0.0.0	synth with cache (only 1: zero_or_not b; only 1: apply Z.quot_opp_r; only 1: auto).	0.036592	3
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_facts.Zpower2_le_lin	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Z.lt_le_incl; only 1: apply Z.pow_gt_lin_r; only 1: easy; only 1: lia).	0.034423	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zrem_opp_l	120	0	synth with cache (only 1: apply Z.rem_opp_l').	0.029257	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zrem_opp_r	120	0	synth with cache (only 1: apply Z.rem_opp_r').	0.027703	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zquot_opp_opp	120	0.0.0	synth with cache (only 1: zero_or_not b; only 1: apply Z.quot_opp_opp; only 1: auto).	0.035310	3
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_facts.Zpower2_Psize	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zrem_opp_opp	120	0.0.0	synth with cache (only 1: zero_or_not b; only 1: apply Z.rem_opp_opp; only 1: auto).	0.033352	3
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_facts.Zpower_mod	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zrem_sgn	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zrem_sgn2	120	0.0.0.0	synth with cache (only 1: zero_or_not b; only 1: apply Z.square_nonneg; only 1: apply Z.rem_sign_mul; only 1: auto).	0.036603	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_facts.Zpow_mod_pos_correct	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_facts.Zpow_mod_correct	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply Zpow_mod_pos_correct; only 1: auto with zarith; only 1: simpl; only 1: trivial).	0.033942	9
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zrem_lt_pos	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_facts.Zpower_divide	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_facts.rel_prime_Zpower_r	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: pattern i; only 1: apply natlike_ind; only 1: simpl; only 1: apply rel_prime_sym; only 1: apply rel_prime_1; only 1: clear i H; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite Z.pow_succ_r; only 1: apply rel_prime_mult; only 1: auto; only 1: auto; only 1: auto; only 1: auto with zarith).	0.039928	17
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zrem_lt_neg	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_facts.rel_prime_Zpower	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply rel_prime_Zpower_r; only 1: trivial; only 1: apply rel_prime_sym; only 1: apply rel_prime_Zpower_r; only 1: trivial; only 1: apply rel_prime_sym; only 1: easy).	0.043554	10
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zrem_lt_pos_pos	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zrem_lt_pos_neg	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_facts.prime_power_prime	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zrem_lt_neg_pos	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zrem_lt_neg_neg	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_facts.Zdivide_power_2	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Remainder_equiv	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zquot_mod_unique_full	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zquot_unique_full	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zrem_unique_full	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Z_quot_pos	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: zero_or_not b; only 1: apply Z.quot_pos; only 1: lia; only 1: lia).	0.052613	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Z_quot_lt	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply Z.quot_lt; only 1: lia; only 1: lia).	0.047416	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Z_quot_monotone	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: zero_or_not c; only 1: apply Z.quot_le_mono; only 1: lia; only 1: lia).	0.045827	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Z_mult_quot_le	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: zero_or_not b; only 1: apply Z.mul_quot_le; only 1: auto with zarith; only 1: auto with zarith).	0.045941	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Z_mult_quot_ge	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: zero_or_not b; only 1: apply Z.mul_quot_ge; only 1: auto with zarith; only 1: auto with zarith).	0.043453	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Z_quot_exact_full	120	0.0.0	synth with cache (only 1: zero_or_not b; only 1: apply Z.quot_exact; only 1: auto).	0.066023	3
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zrem_le	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: zero_or_not b; only 1: apply Z.rem_le; only 1: lia; only 1: lia).	0.042485	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zquot_le_upper_bound	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite Z.mul_comm; only 1: apply Z.quot_le_upper_bound).	0.032465	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zquot_lt_upper_bound	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite Z.mul_comm; only 1: apply Z.quot_lt_upper_bound).	0.029066	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zquot_le_lower_bound	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite Z.mul_comm; only 1: apply Z.quot_le_lower_bound).	0.038878	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zquot_sgn	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Z_rem_plus	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: zero_or_not c; only 1: apply Z.rem_add; only 1: auto with zarith; only 1: auto with zarith).	0.042741	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.VALUE_OF_BOOLEAN_VECTORS.binary_value	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Z_quot_plus	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply Z.quot_add; only 1: auto with zarith; only 1: auto with zarith).	0.036956	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.VALUE_OF_BOOLEAN_VECTORS.two_compl_value	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Z_quot_plus_l	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply Z.quot_add_l; only 1: auto with zarith; only 1: auto with zarith).	0.043644	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.ENCODING_VALUE.Zmod2_twice	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zquot_mult_cancel_r	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: zero_or_not b; only 1: apply Z.quot_mul_cancel_r; only 1: auto; only 1: auto).	0.061655	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.ENCODING_VALUE.Z_to_binary	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.ENCODING_VALUE.Z_to_two_compl	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.binary_value_Sn	120	0.0	synth with cache (only 1: intros; only 1: auto).	0.033335	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zquot_mult_cancel_l	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Z_to_binary_Sn	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zmult_rem_distr_l	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.binary_value_pos	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zmult_rem_distr_r	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zrem_rem	120	0.0.0.0	synth with cache (only 1: intros; only 1: zero_or_not n; only 1: apply Z.rem_rem; only 1: auto).	0.038589	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.two_compl_value_Sn	120	0.0	synth with cache (only 1: intros; only 1: auto).	0.066506	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zmult_rem	120	0.0.0.0	synth with cache (only 1: intros; only 1: zero_or_not n; only 1: apply Z.mul_rem; only 1: auto).	0.044746	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Z_to_two_compl_Sn	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Z_to_binary_Sn_z	120	0.0	synth with cache (only 1: intros; only 1: auto).	0.030588	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zplus_rem	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: zero_or_not n; only 1: apply Z.add_rem; only 1: auto; only 1: auto).	0.042630	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Z_div2_value	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zplus_rem_idemp_l	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: zero_or_not n; only 1: apply Z.add_rem_idemp_l; only 1: auto; only 1: auto).	0.044154	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Pdiv2	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zplus_rem_idemp_r	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: zero_or_not n; only 1: apply Z.add_rem_idemp_r; only 1: auto; only 1: rewrite Z.mul_comm; only 1: auto).	0.067821	6
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Zdiv2_two_power_nat	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Z_to_two_compl_Sn_z	120	0.0	synth with cache (only 1: intros; only 1: auto).	0.031224	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zmult_rem_idemp_l	120	0.0.0.0	synth with cache (only 1: intros; only 1: zero_or_not n; only 1: apply Z.mul_rem_idemp_l; only 1: auto).	0.041912	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zmult_rem_idemp_r	120	0.0.0.0	synth with cache (only 1: intros; only 1: zero_or_not n; only 1: apply Z.mul_rem_idemp_r; only 1: auto).	0.040977	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Zeven_bit_value	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Zodd_bit_value	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zquot_Zquot	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: zero_or_not b; only 1: rewrite Z.mul_comm; only 1: zero_or_not c; only 1: rewrite Z.mul_comm; only 1: apply Z.quot_quot; only 1: auto; only 1: auto).	0.051753	8
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Zge_minus_two_power_nat_S	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zquot_mult_le	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: zero_or_not b; only 1: apply Z.quot_mul_le; only 1: auto; only 1: apply Z.le_neq; only 1: auto; only 1: auto).	0.049030	7
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zrem_divides	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: zero_or_not b; only 1: firstorder; only 1: rewrite Z.rem_divide; only 1: split; only 1: intros ?; only 1: destruct H0; only 1: exists x; only 1: subst; only 1: auto with zarith; only 1: intros ?; only 1: destruct H0; only 1: exists x; only 1: subst; only 1: auto with zarith; only 1: auto).	0.054470	16
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Zlt_two_power_nat_S	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.COHERENT_VALUE.binary_to_Z_to_binary	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.COHERENT_VALUE.two_compl_to_Z_to_two_compl	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zquot2_odd_remainder	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct a; only 1: simpl; only 1: left; only 1: simpl; only 1: auto with zarith; only 1: left; only 1: destruct p; only 1: simpl; only 1: lia; only 1: simpl; only 1: lia; only 1: simpl; only 1: lia; only 1: right; only 1: destruct p; only 1: simpl; only 1: split; only 1: easy; only 1: easy; only 1: simpl; only 1: split; only 1: easy; only 1: easy; only 1: simpl; only 1: split; only 1: easy; only 1: easy).	0.119566	28
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.COHERENT_VALUE.Z_to_binary_to_Z	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zrem_odd	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdigits.COHERENT_VALUE.Z_to_two_compl_to_Z	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zrem_even	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite Zrem_odd; only 1: rewrite Zodd_even_bool; only 1: destruct BinIntDef.Z.even; only 1: easy; only 1: easy).	0.034717	6
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zeven_rem	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite Zrem_even; only 1: destruct a; only 1: trivial; only 1: destruct p; only 1: easy; only 1: easy; only 1: easy; only 1: destruct p; only 1: easy; only 1: easy; only 1: easy).	0.042208	12
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zodd_rem	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite Zrem_odd; only 1: destruct a; only 1: trivial; only 1: destruct p; only 1: easy; only 1: easy; only 1: easy; only 1: destruct p; only 1: easy; only 1: easy; only 1: easy).	0.045296	12
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zquotrem_Zdiv_eucl_pos	120	1.0.0.0.0.0.1.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Zdiv_mod_unique with b; only 1: apply Zrem_lt_pos; only 1: auto with zarith; only 1: lia; only 1: rewrite Z.abs_eq; only 1: apply Z_mod_lt; only 1: lia; only 1: lia; only 1: rewrite <- Z_div_mod_eq; only 1: symmetry; only 1: apply Z.quot_rem; only 1: lia; only 1: lia).	0.086722	16
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zquot_Zdiv_pos	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zrem_Zmod_pos	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zquot.Zrem_Zmod_zero	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Zrem_divides; only 1: rewrite Zmod_divides; only 1: intuition; only 1: auto).	0.048209	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zwf.wf_proof.Zwf_well_founded	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zwf.wf_proof_up.Zwf_up_well_founded	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.mem_eq	120	0.0.0	synth with cache (only 1: intros ?; only 1: rewrite H; only 1: auto).	0.031877	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_mem_1	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply equal_1; only 1: unfold Equal; only 1: intros; only 1: rewrite mem_iff; only 1: rewrite mem_iff; only 1: rewrite H; only 1: tauto).	0.040353	8
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_mem_2	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_mem_1	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply subset_1; only 1: unfold Subset; only 1: intros ?; only 1: rewrite mem_iff; only 1: rewrite mem_iff; only 1: auto).	0.041664	7
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_mem_2	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite <- mem_iff; only 1: rewrite <- mem_iff; only 1: apply subset_2; only 1: auto).	0.105618	6
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.empty_mem	120	0.0	synth with cache (only 1: rewrite <- not_mem_iff; only 1: auto with set).	0.027081	2
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.is_empty_equal_empty	120	0.0.0.0.0.0.0	synth with cache (only 1: apply eq_true_iff_eq; only 1: split; only 1: intros; only 1: auto with set; only 1: intros; only 1: rewrite <- is_empty_iff; only 1: auto with set).	0.031411	7
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.choose_mem_1	120	0	synth with cache (only 1: auto with set).	0.026374	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.choose_mem_2	120	0	synth with cache (only 1: auto with set).	0.026613	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.add_mem_1	120	0	synth with cache (only 1: auto with set).	0.026241	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.add_mem_2	120	1	synth with cache (only 1: apply add_neq_b).	0.029361	2
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_mem_1	120	0.0	synth with cache (only 1: rewrite <- not_mem_iff; only 1: auto with set).	0.029587	2
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_mem_2	120	1	synth with cache (only 1: apply remove_neq_b).	0.030603	2
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.singleton_equal_add	120	0.0	synth with cache (only 1: rewrite singleton_equal_add; only 1: auto with set).	0.029956	2
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_mem	120	0	synth with cache (only 1: apply union_b).	0.031837	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_mem	120	0	synth with cache (only 1: apply inter_b).	0.025630	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.diff_mem	120	0	synth with cache (only 1: apply diff_b).	0.026414	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.mem_3	120	0.0.0	synth with cache (only 1: intros; only 1: rewrite <- not_mem_iff; only 1: auto).	0.025516	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.mem_4	120	0.0.0	synth with cache (only 1: intros; only 1: rewrite not_mem_iff; only 1: auto).	0.033291	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_refl	120	0	synth with cache (only 1: auto with set).	0.025503	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.QSeqEquiv_sym	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite Qabs_Qminus; only 1: apply H; only 1: assumption; only 1: assumption).	0.031437	10
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_sym	120	0.0.0.0	synth with cache (only 1: apply eq_true_iff_eq; only 1: rewrite <- equal_iff; only 1: rewrite <- equal_iff; only 1: intuition).	0.038005	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.factorDenom	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Qeq; only 1: simpl; only 1: destruct a; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	0.026333	7
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_trans	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_equal	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.QSeqEquiv_trans	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_cardinal	120	0	synth with cache (only 1: auto with set fset).	0.024589	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.QSeqEquivEx_sym	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct H; only 1: exists x; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite Qabs_Qminus; only 1: apply H; only 1: assumption; only 1: assumption).	0.034391	12
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_refl	120	0	synth with cache (only 1: auto with set).	0.026233	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.QSeqEquivEx_trans	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_antisym	120	0	synth with cache (only 1: auto with set).	0.065282	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.QSeqEquiv_cau_r	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_trans	120	0.0.0.0.0.0.0	synth with cache (only 1: rewrite <- subset_iff; only 1: rewrite <- subset_iff; only 1: rewrite <- subset_iff; only 1: intros; only 1: apply subset_trans with s'; only 1: auto; only 1: auto).	0.052285	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.increasing_modulus_inc	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_equal	120	0	synth with cache (only 1: auto with set).	0.026363	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.increasing_modulus_max	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.choose_mem_3	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.choose_mem_4	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.standard_modulus	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.add_mem_3	120	0	synth with cache (only 1: auto with set).	0.028590	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.add_equal	120	0	synth with cache (only 1: auto with set).	0.028996	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLtEpsilon	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLtForget	120	0.0.0.0	synth with cache (only 1: intros; only 1: destruct H; only 1: exists x0; only 1: apply q).	0.027172	4
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_mem_3	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_equal	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply equal_1; only 1: apply remove_equal; only 1: rewrite not_mem_iff; only 1: auto).	0.030645	5
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.add_remove	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply equal_1; only 1: apply add_remove; only 1: auto with set).	0.024863	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLt_lpo_dec	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_add	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply equal_1; only 1: apply remove_add; only 1: rewrite not_mem_iff; only 1: auto).	0.027918	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLe_not_lt	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.is_empty_cardinal	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.singleton_mem_1	120	0	synth with cache (only 1: auto with set).	0.025646	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealEq_diff	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.singleton_mem_2	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite singleton_b; only 1: unfold eqb; only 1: destruct FM.eq_dec; only 1: intuition; only 1: intuition).	0.049459	6
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.singleton_mem_3	120	0.0.0	synth with cache (only 1: intros; only 1: apply singleton_1; only 1: auto with set).	0.030071	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_sym	120	0	synth with cache (only 1: auto with set).	0.027309	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_subset_equal	120	0	synth with cache (only 1: auto with set).	0.033741	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_equal_1	120	0	synth with cache (only 1: auto with set).	0.025512	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealEq_modindep	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_equal_2	120	0	synth with cache (only 1: auto with set).	0.026996	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_assoc	120	0	synth with cache (only 1: auto with set).	0.026834	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.add_union_singleton	120	0	synth with cache (only 1: auto with set).	0.026174	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_add	120	0	synth with cache (only 1: auto with set).	0.027907	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_subset_1	120	0	synth with cache (only 1: auto with set).	0.026541	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_subset_2	120	0	synth with cache (only 1: auto with set).	0.025487	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_subset_3	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply subset_1; only 1: apply union_subset_3; only 1: auto with set; only 1: auto with set).	0.040156	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLt_aboveSig	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_sym	120	0	synth with cache (only 1: auto with set).	0.025534	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLt_above	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_subset_equal	120	0	synth with cache (only 1: auto with set).	0.026496	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_equal_1	120	0	synth with cache (only 1: auto with set).	0.026371	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_equal_2	120	0	synth with cache (only 1: auto with set).	0.032661	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_assoc	120	0	synth with cache (only 1: auto with set).	0.028011	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_inter_1	120	0	synth with cache (only 1: auto with set).	0.028421	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLt_above_same	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_inter_2	120	0	synth with cache (only 1: auto with set).	0.029144	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_add_1	120	0	synth with cache (only 1: auto with set).	0.030769	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLt_asym	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_add_2	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply equal_1; only 1: apply inter_add_2; only 1: rewrite not_mem_iff; only 1: auto).	0.030202	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLt_irrefl	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLe_refl	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_subset_1	120	0	synth with cache (only 1: auto with set).	0.029682	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealEq_refl	120	1.1.0.0	synth with cache (only 1: intros; only 1: split; only 1: apply CRealLe_refl; only 1: apply CRealLe_refl).	0.024391	10
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_subset_2	120	0	synth with cache (only 1: auto with set).	0.024630	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealEq_sym	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct H; only 1: split; only 1: intros ?; only 1: contradiction; only 1: intros ?; only 1: contradiction).	0.029808	7
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_subset_3	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply subset_1; only 1: apply inter_subset_3; only 1: auto with set; only 1: auto with set).	0.046764	5
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.diff_subset	120	0	synth with cache (only 1: auto with set).	0.028542	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.diff_subset_equal	120	0	synth with cache (only 1: auto with set).	0.027424	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_inter_singleton	120	0	synth with cache (only 1: auto with set).	0.031753	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.diff_inter_empty	120	0	synth with cache (only 1: auto with set).	0.025963	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.diff_inter_all	120	0	synth with cache (only 1: auto with set).	0.029940	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.set_rec	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.exclusive_set	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite mem_iff; only 1: rewrite mem_iff; only 1: destruct mem; only 1: destruct mem; only 1: intuition; only 1: intuition; only 1: destruct mem; only 1: intuition; only 1: intuition).	0.069619	10
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.fold_empty	120	0	synth with cache (only 1: apply fold_empty).	0.024532	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.fold_equal	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.fold_add	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.add_fold	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.remove_fold_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.remove_fold_2	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.fold_union	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLt_dec	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.add_cardinal_1	120	0	synth with cache (only 1: auto with set fset).	0.042176	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_le_lt_trans	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.add_cardinal_2	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply add_cardinal_2; only 1: rewrite not_mem_iff; only 1: auto).	0.030126	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_lt_le_trans	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_cardinal_1	120	0.0.0	synth with cache (only 1: intros; only 1: apply remove_cardinal_1; only 1: auto with set).	0.027094	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_le_trans	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_cardinal_2	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply Equal_cardinal; only 1: apply equal_2; only 1: auto with set).	0.034410	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_lt_trans	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.union_cardinal	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply union_cardinal; only 1: intros; only 1: rewrite exclusive_set; only 1: auto).	0.033249	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealEq_trans	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealEq_relT	120	0.0.0.0	synth with cache (only 1: split; only 1: exact CRealEq_refl; only 1: exact CRealEq_sym; only 1: exact CRealEq_trans).	0.030059	4
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.subset_cardinal	120	0.0.0	synth with cache (only 1: intros; only 1: apply subset_cardinal; only 1: auto with set).	0.032850	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLt_morph	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.Comp'	120	0.0.0.0.0	synth with cache (only 1: unfold Proper in *; only 1: red; only 1: intros; only 1: f_equal; only 1: auto).	0.029491	5
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.filter_mem	120	0.0.0	synth with cache (only 1: intros; only 1: apply filter_b; only 1: auto).	0.030088	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealGt_morph	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply CRealLt_morph; only 1: assumption; only 1: assumption).	0.124862	9
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_filter	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.exists_filter	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.partition_filter_1	120	0	synth with cache (only 1: auto with set).	0.032163	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.partition_filter_2	120	0	synth with cache (only 1: auto with set).	0.030301	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_appart_morph	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intros; only 1: destruct H1; only 1: left; only 1: rewrite <- H0; only 1: rewrite <- H; only 1: exact c; only 1: right; only 1: rewrite <- H0; only 1: rewrite <- H; only 1: exact c; only 1: intros; only 1: destruct H1; only 1: left; only 1: rewrite H0; only 1: rewrite H; only 1: exact c; only 1: right; only 1: rewrite H0; only 1: rewrite H; only 1: exact c).	0.479081	21
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.filter_add_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.filter_add_2	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.add_filter_1	120	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Add; only 1: unfold MP.Add; only 1: intros; only 1: rewrite filter_iff; only 1: rewrite filter_iff; only 1: rewrite H0; only 1: clear H0; only 1: intuition; only 1: setoid_replace y with x; only 1: auto with relations; only 1: auto with relations; only 1: auto; only 1: auto).	0.116309	13
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.add_filter_2	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Add; only 1: unfold MP.Add; only 1: unfold Equal; only 1: intros; only 1: rewrite filter_iff; only 1: rewrite filter_iff; only 1: rewrite H0; only 1: clear H0; only 1: intuition; only 1: setoid_replace x with a in H; only 1: congruence; only 1: auto; only 1: auto; only 1: auto).	0.095920	14
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.union_filter	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.filter_union	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Equal; only 1: intros; only 1: set_iff; only 1: rewrite filter_iff; only 1: rewrite filter_iff; only 1: rewrite filter_iff; only 1: set_iff; only 1: tauto; only 1: auto; only 1: auto; only 1: auto).	0.107635	11
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLtProp_morph_Proper	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: split; only 1: intros ?; only 1: apply CRealLtForget; only 1: apply CRealLtEpsilon in H1; only 1: rewrite <- H0; only 1: rewrite <- H; only 1: exact H1; only 1: intros ?; only 1: apply CRealLtForget; only 1: apply CRealLtEpsilon in H1; only 1: rewrite H0; only 1: rewrite H; only 1: exact H1).	0.330248	19
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_mem_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_mem_2	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_mem_3	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_mem_4	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_exists	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite for_all_b; only 1: rewrite exists_b; only 1: induction elements; only 1: simpl; only 1: auto; only 1: simpl; only 1: destruct f; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: auto; only 1: auto).	0.044382	14
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.Comp'	120	0.0.0.0.0.0	synth with cache (only 1: unfold compat_bool in *; only 1: unfold Proper in *; only 1: red; only 1: intros; only 1: f_equal; only 1: auto).	0.031739	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLe_morph_Proper	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros ?; only 1: intros ?; only 1: unfold CRealLe in H1; only 1: rewrite <- H0 in H2; only 1: rewrite <- H in H2; only 1: contradiction; only 1: intros ?; only 1: intros ?; only 1: unfold CRealLe in H1; only 1: rewrite H0 in H2; only 1: rewrite H in H2; only 1: contradiction).	0.327663	14
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.exists_mem_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.exists_mem_2	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.exists_mem_3	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite for_all_exists; only 1: rewrite negb_true_iff; only 1: apply for_all_mem_3 with x; only 1: auto; only 1: auto; only 1: rewrite negb_false_iff; only 1: auto; only 1: auto).	0.037044	9
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.exists_mem_4	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealGe_morph_Proper	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold CRealGe; only 1: apply CRealLe_morph; only 1: assumption; only 1: assumption).	0.029427	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLt_proper_l	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Sum.sum_plus	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLt_proper_r	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLe_proper_l	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Sum.sum_filter	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLe_proper_r	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.ConstCauchy	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold Qminus; only 1: rewrite Qplus_opp_r; only 1: unfold Qlt; only 1: simpl; only 1: unfold Z.lt; only 1: auto).	0.042738	12
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Sum.fold_compat	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.inject_Q	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLt_0_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetEqProperties.WEqProperties_fun.Sum.sum_compat	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold sum; only 1: apply fold_compat; only 1: auto with fset; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite H2; only 1: rewrite H3; only 1: auto; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite PeanoNat.Nat.add_assoc; only 1: rewrite PeanoNat.Nat.add_assoc; only 1: f_equal; only 1: apply PeanoNat.Nat.add_comm; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite H2; only 1: rewrite H3; only 1: auto; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite PeanoNat.Nat.add_assoc; only 1: rewrite PeanoNat.Nat.add_assoc; only 1: f_equal; only 1: apply PeanoNat.Nat.add_comm; only 1: auto with fset).	0.109299	37
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_injectQPos	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLtQ	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CRealLtQopp	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.inject_Q_compare	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.inject_Q_morph_Proper	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intros ?; only 1: destruct H0; only 1: simpl in q; only 1: rewrite H in q; only 1: unfold Qminus in q; only 1: rewrite Qplus_opp_r in q; only 1: discriminate q; only 1: intros ?; only 1: destruct H0; only 1: simpl in q; only 1: rewrite H in q; only 1: unfold Qminus in q; only 1: rewrite Qplus_opp_r in q; only 1: discriminate q).	0.102000	15
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.inject_Q_morph_T	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intros ?; only 1: destruct H0; only 1: simpl in q; only 1: rewrite H in q; only 1: unfold Qminus in q; only 1: rewrite Qplus_opp_r in q; only 1: discriminate q; only 1: intros ?; only 1: destruct H0; only 1: simpl in q; only 1: rewrite H in q; only 1: unfold Qminus in q; only 1: rewrite Qplus_opp_r in q; only 1: discriminate q).	0.083844	15
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_cauchy	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_nth	120	0.0.0.0	synth with cache (only 1: intros; only 1: destruct x; only 1: destruct y; only 1: reflexivity).	0.048489	4
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.In_In	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Subset_Included	120	0.0.0.0.0	synth with cache (only 1: unfold Subset; only 1: unfold Included; only 1: unfold In; only 1: unfold mkEns; only 1: intuition).	0.032895	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_unfold	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Equal_Same_set	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite double_inclusion; only 1: unfold Subset; only 1: unfold Same_set; only 1: unfold mkEns; only 1: intuition).	0.039470	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_opp	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.empty_Empty_Set	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Same_set; only 1: unfold Included; only 1: unfold mkEns; only 1: unfold In; only 1: split; only 1: intros ?; only 1: set_iff; only 1: inversion 1; only 1: intros ?; only 1: set_iff; only 1: inversion 1).	0.057145	11
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.belowMultiple	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Empty_Empty_set	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.singleton_Singleton	120	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Same_set; only 1: unfold Included; only 1: unfold mkEns; only 1: unfold In; only 1: split; only 1: intros ?; only 1: set_iff; only 1: inversion 1; only 1: constructor; only 1: intros ?; only 1: set_iff; only 1: inversion 1; only 1: constructor).	0.107260	13
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_assoc	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.union_Union	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Same_set; only 1: unfold Included; only 1: unfold mkEns; only 1: unfold In; only 1: split; only 1: intros ?; only 1: set_iff; only 1: inversion 1; only 1: constructor 1; only 1: auto; only 1: constructor 2; only 1: auto; only 1: intros ?; only 1: set_iff; only 1: inversion 1; only 1: auto; only 1: auto).	0.079065	17
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_comm	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.inter_Intersection	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Same_set; only 1: unfold Included; only 1: unfold mkEns; only 1: unfold In; only 1: split; only 1: intros ?; only 1: set_iff; only 1: inversion 1; only 1: constructor; only 1: auto; only 1: auto; only 1: intros ?; only 1: set_iff; only 1: inversion 1; only 1: constructor; only 1: auto; only 1: auto).	0.087545	17
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_0_l	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_0_r	120	0.0.0	synth with cache (only 1: intros ?; only 1: rewrite CReal_plus_comm; only 1: apply CReal_plus_0_l).	0.029964	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.add_Add	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Same_set; only 1: unfold Included; only 1: unfold mkEns; only 1: unfold In; only 1: split; only 1: intros ?; only 1: set_iff; only 1: inversion 1; only 1: inversion H0; only 1: constructor 2; only 1: constructor; only 1: constructor 1; only 1: auto; only 1: intros ?; only 1: set_iff; only 1: inversion 1; only 1: auto with sets; only 1: auto with sets).	0.067882	18
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_lt_compat_l	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Add_Add	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Same_set; only 1: unfold Included; only 1: unfold mkEns; only 1: unfold In; only 1: split; only 1: intros; only 1: red in H; only 1: rewrite H in H0; only 1: destruct H0; only 1: inversion H0; only 1: constructor 2; only 1: constructor; only 1: constructor 1; only 1: auto; only 1: intros; only 1: red in H; only 1: rewrite H; only 1: inversion H0; only 1: auto; only 1: inversion H1; only 1: auto).	0.063221	21
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.remove_Subtract	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Same_set; only 1: unfold Included; only 1: unfold mkEns; only 1: unfold In; only 1: split; only 1: intros ?; only 1: set_iff; only 1: inversion 1; only 1: split; only 1: auto; only 1: contradict H1; only 1: inversion H1; only 1: auto; only 1: intros ?; only 1: set_iff; only 1: inversion 1; only 1: auto with sets).	0.066714	17
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.mkEns_Finite	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.mkEns_cardinal	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Ens_to_FSet	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.sub_succ_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.mul_0_l	120	0.0.0	synth with cache (only 1: intros ?; only 1: zify; only 1: easy).	0.032072	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.mul_succ_l	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: zify; only 1: rewrite Zplus_mod_idemp_l; only 1: rewrite Zmult_mod_idemp_l; only 1: rewrite Z.mul_add_distr_r; only 1: rewrite Z.mul_1_l; only 1: easy).	0.058207	8
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.In_dec	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Add_Equal	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Add; only 1: split; only 1: intros; only 1: red; only 1: intros; only 1: rewrite H; only 1: clear H; only 1: fsetdec; only 1: intros; only 1: fsetdec).	0.138829	10
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.equal_refl	120	0	synth with cache (only 1: fsetdec).	0.036317	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.equal_sym	120	0	synth with cache (only 1: fsetdec).	0.048164	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.equal_trans	120	0	synth with cache (only 1: fsetdec).	0.052047	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_refl	120	0	synth with cache (only 1: fsetdec).	0.029944	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_trans	120	0	synth with cache (only 1: fsetdec).	0.044895	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_antisym	120	0	synth with cache (only 1: fsetdec).	0.041808	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_equal	120	0	synth with cache (only 1: fsetdec).	0.038109	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_empty	120	0	synth with cache (only 1: fsetdec).	0.037281	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_remove_3	120	0	synth with cache (only 1: fsetdec).	0.044250	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_diff	120	0	synth with cache (only 1: fsetdec).	0.044866	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_add_3	120	0	synth with cache (only 1: fsetdec).	0.076016	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_add_2	120	0	synth with cache (only 1: fsetdec).	0.039461	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.in_subset	120	0	synth with cache (only 1: fsetdec).	0.045844	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.double_inclusion	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_is_empty_1	120	0	synth with cache (only 1: fsetdec).	0.048718	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_is_empty_2	120	0	synth with cache (only 1: fsetdec).	0.042910	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.add_equal	120	0	synth with cache (only 1: fsetdec).	0.059337	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.add_add	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.remove_equal	120	0	synth with cache (only 1: fsetdec).	0.083141	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.Equal_remove	120	0	synth with cache (only 1: fsetdec).	0.108341	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.add_remove	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.remove_add	120	0	synth with cache (only 1: fsetdec).	0.106159	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.singleton_equal_add	120	0	synth with cache (only 1: fsetdec).	0.088750	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.remove_singleton_empty	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_sym	120	0	synth with cache (only 1: fsetdec).	0.075969	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_equal	120	0	synth with cache (only 1: fsetdec).	0.063963	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_equal_1	120	0	synth with cache (only 1: fsetdec).	0.095064	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_equal_2	120	0	synth with cache (only 1: fsetdec).	0.086565	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_assoc	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.add_union_singleton	120	0	synth with cache (only 1: fsetdec).	0.082971	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_add	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_remove_add_1	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_remove_add_2	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_1	120	0	synth with cache (only 1: fsetdec).	0.039449	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_2	120	0	synth with cache (only 1: fsetdec).	0.037417	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_3	120	0	synth with cache (only 1: fsetdec).	0.053552	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_4	120	0	synth with cache (only 1: fsetdec).	0.065058	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_5	120	0	synth with cache (only 1: fsetdec).	0.066108	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_union_1	120	0	synth with cache (only 1: fsetdec).	0.065446	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_union_2	120	0	synth with cache (only 1: fsetdec).	0.058371	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.not_in_union	120	0	synth with cache (only 1: fsetdec).	0.052427	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_sym	120	0	synth with cache (only 1: fsetdec).	0.073497	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_subset_equal	120	0	synth with cache (only 1: fsetdec).	0.063237	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_equal_1	120	0	synth with cache (only 1: fsetdec).	0.102927	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_equal_2	120	0	synth with cache (only 1: fsetdec).	0.082759	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_assoc	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_inter_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.In_dec	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Add_Equal	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Add; only 1: split; only 1: intros; only 1: red; only 1: intros; only 1: rewrite H; only 1: clear H; only 1: fsetdec; only 1: intros; only 1: fsetdec).	0.094075	10
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_inter_2	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.equal_refl	120	0	synth with cache (only 1: fsetdec).	0.024623	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.equal_sym	120	0	synth with cache (only 1: fsetdec).	0.032852	1
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_initial.Zsth	120	0	synth with cache (only 1: exact Z.eq_equiv).	0.020759	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.equal_trans	120	0	synth with cache (only 1: fsetdec).	0.116817	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_add_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_refl	120	0	synth with cache (only 1: fsetdec).	0.021955	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_trans	120	0	synth with cache (only 1: fsetdec).	0.038394	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_antisym	120	0	synth with cache (only 1: fsetdec).	0.035592	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_add_2	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_equal	120	0	synth with cache (only 1: fsetdec).	0.031855	1
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_initial.Zr	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: constructor; only 1: apply Zsth; only 1: solve_proper; only 1: solve_proper; only 1: solve_proper; only 1: solve_proper; only 1: apply Zsth; only 1: exact Z.add_comm; only 1: exact Z.add_assoc; only 1: exact Z.mul_1_l; only 1: exact Z.mul_1_r; only 1: exact Z.mul_assoc; only 1: exact Z.mul_add_distr_r; only 1: intros; only 1: apply Z.mul_add_distr_l; only 1: solve_proper; only 1: exact Z.sub_diag).	0.311539	17
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_inter_1	120	0	synth with cache (only 1: fsetdec).	0.049220	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_empty	120	0	synth with cache (only 1: fsetdec).	0.022532	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_remove_3	120	0	synth with cache (only 1: fsetdec).	0.038878	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_inter_2	120	0	synth with cache (only 1: fsetdec).	0.045417	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_diff	120	0	synth with cache (only 1: fsetdec).	0.047965	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_subset_1	120	0	synth with cache (only 1: fsetdec).	0.034361	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_add_3	120	0	synth with cache (only 1: fsetdec).	0.061462	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_subset_2	120	0	synth with cache (only 1: fsetdec).	0.040729	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_add_2	120	0	synth with cache (only 1: fsetdec).	0.046859	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_subset_3	120	0	synth with cache (only 1: fsetdec).	0.051159	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.in_subset	120	0	synth with cache (only 1: fsetdec).	0.040329	1
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.same_gen	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_diff_1	120	0	synth with cache (only 1: fsetdec).	0.053848	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.double_inclusion	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_is_empty_1	120	0	synth with cache (only 1: fsetdec).	0.047309	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_diff_2	120	0	synth with cache (only 1: fsetdec).	0.080484	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_is_empty_2	120	0	synth with cache (only 1: fsetdec).	0.048113	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.diff_subset	120	0	synth with cache (only 1: fsetdec).	0.044068	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.add_equal	120	0	synth with cache (only 1: fsetdec).	0.057142	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.diff_subset_equal	120	0	synth with cache (only 1: fsetdec).	0.097843	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.add_add	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.remove_diff_singleton	120	0	synth with cache (only 1: fsetdec).	0.089150	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.remove_equal	120	0	synth with cache (only 1: fsetdec).	0.094984	1
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.ARgen_phiPOS_Psucc	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.Equal_remove	120	0	synth with cache (only 1: fsetdec).	0.102067	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.diff_inter_empty	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.add_remove	120	0	synth with cache (only 1: fsetdec).	0.099349	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.diff_inter_all	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.remove_add	120	0	synth with cache (only 1: fsetdec).	0.117288	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.Add_add	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.Add_remove	120	0.0	synth with cache (only 1: expAdd; only 1: fsetdec).	0.124791	2
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.singleton_equal_add	120	0	synth with cache (only 1: fsetdec).	0.074667	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.remove_singleton_empty	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_Add	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_sym	120	0	synth with cache (only 1: fsetdec).	0.075627	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_equal	120	0	synth with cache (only 1: fsetdec).	0.066603	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_equal_1	120	0	synth with cache (only 1: fsetdec).	0.080778	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_Add	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_equal_2	120	0	synth with cache (only 1: fsetdec).	0.081503	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_Equal	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_assoc	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.add_union_singleton	120	0	synth with cache (only 1: fsetdec).	0.078902	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_Add_2	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_add	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.elements_Empty	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.elements_empty	120	0.0	synth with cache (only 1: rewrite <- elements_Empty; only 1: auto with *).	0.023833	2
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.of_list_1	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.of_list_2	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.of_list_3	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_remove_add_1	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_spec_right	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rec	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_remove_add_2	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rec_bis	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_1	120	0	synth with cache (only 1: fsetdec).	0.027855	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rec_nodep	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_2	120	0	synth with cache (only 1: fsetdec).	0.034173	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rec_weak	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply fold_rec_bis; only 1: auto; only 1: auto; only 1: auto).	0.040575	5
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_3	120	0	synth with cache (only 1: fsetdec).	0.049137	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rel	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_4	120	0	synth with cache (only 1: fsetdec).	0.056335	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.set_induction	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_5	120	0	synth with cache (only 1: fsetdec).	0.051827	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.set_induction_bis	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_identity	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_union_1	120	0	synth with cache (only 1: fsetdec).	0.055740	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_0	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_union_2	120	0	synth with cache (only 1: fsetdec).	0.057159	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.not_in_union	120	0	synth with cache (only 1: fsetdec).	0.043198	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_2	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_sym	120	0	synth with cache (only 1: fsetdec).	0.086944	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_1b	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_commutes	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_subset_equal	120	0	synth with cache (only 1: fsetdec).	0.068942	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_init	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_equal	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_equal_1	120	0	synth with cache (only 1: fsetdec).	0.078752	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_empty	120	0.0.0	synth with cache (only 1: intros ?; only 1: apply fold_1b; only 1: auto with set).	0.024374	3
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_add	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.add_fold	120	0.0.0	synth with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set).	0.026472	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_equal_2	120	0	synth with cache (only 1: fsetdec).	0.080391	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.remove_fold_1	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.remove_fold_2	120	0.0.0	synth with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set).	0.026690	3
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_union_inter	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_assoc	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_diff_inter	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_union	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_inter_1	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_plus	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.cardinal_fold	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.cardinal_0	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_inter_2	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.cardinal_1	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite cardinal_fold; only 1: apply fold_1; only 1: auto with *; only 1: auto with *).	0.031287	5
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.cardinal_2	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.cardinal_Empty	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.cardinal_inv_1	120	0.0.0	synth with cache (only 1: intros; only 1: rewrite cardinal_Empty; only 1: auto).	0.023008	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_add_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_add_2	120	0	synth with cache (only 1: fsetdec).	0.100803	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.cardinal_inv_2	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.cardinal_inv_2b	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_inter_1	120	0	synth with cache (only 1: fsetdec).	0.042691	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.Equal_cardinal	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.cardinal_m	120	0	synth with cache (only 1: exact Equal_cardinal).	0.027712	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_inter_2	120	0	synth with cache (only 1: fsetdec).	0.049799	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.empty_cardinal	120	0.0.0.0	synth with cache (only 1: rewrite cardinal_fold; only 1: apply fold_1; only 1: auto with *; only 1: auto with set).	0.025619	4
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_subset_1	120	0	synth with cache (only 1: fsetdec).	0.034676	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.singleton_cardinal	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_subset_2	120	0	synth with cache (only 1: fsetdec).	0.035387	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_subset_3	120	0	synth with cache (only 1: fsetdec).	0.038928	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.diff_inter_cardinal	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.union_cardinal	120	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite cardinal_fold; only 1: rewrite cardinal_fold; only 1: rewrite cardinal_fold; only 1: rewrite <- fold_plus; only 1: apply fold_union; only 1: split; only 1: congruence; only 1: congruence; only 1: congruence; only 1: congruence; only 1: auto; only 1: auto).	0.042706	13
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_diff_1	120	0	synth with cache (only 1: fsetdec).	0.049181	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.subset_cardinal	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_diff_2	120	0	synth with cache (only 1: fsetdec).	0.057759	1
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.ARgen_phiPOS_add	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.diff_subset	120	0	synth with cache (only 1: fsetdec).	0.039399	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.subset_cardinal_lt	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.union_inter_cardinal	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.diff_subset_equal	120	0	synth with cache (only 1: fsetdec).	0.088389	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.union_cardinal_inter	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.union_cardinal_le	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.add_cardinal_1	120	0	synth with cache (only 1: auto with set).	0.027755	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.remove_diff_singleton	120	0	synth with cache (only 1: fsetdec).	0.086941	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.add_cardinal_2	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.remove_cardinal_1	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.WPropertiesOn.remove_cardinal_2	120	0	synth with cache (only 1: auto with set).	0.026118	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.diff_inter_empty	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.ARgen_phiPOS_mult	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.diff_inter_all	120	0	synth with cache (only 1: fsetdec).	0.114474	1
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.same_genZ	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_Zeqb_ok	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.OrdProperties.sort_equivlistA_eqlistA	120	0.0.0.0	synth with cache (only 1: apply SortA_equivlistA_eqlistA; only 1: eauto with *; only 1: eauto with *; only 1: eauto with *).	0.031122	4
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.Add_add	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.Add_remove	120	0.0	synth with cache (only 1: expAdd; only 1: fsetdec).	0.113463	2
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ1_add_pos_neg	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.match_compOpp	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.OrdProperties.gtb_1	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.OrdProperties.leb_1	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- compare_gt_iff; only 1: unfold leb; only 1: unfold gtb; only 1: destruct E.compare; only 1: intuition; only 1: discriminate; only 1: intuition; only 1: discriminate; only 1: intuition).	0.110547	10
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_Add	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.OrdProperties.gtb_compat	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold gtb; only 1: rewrite H; only 1: auto).	0.037987	6
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ_add	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.OrdProperties.leb_compat	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold leb; only 1: rewrite H; only 1: auto).	0.038348	6
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ_opp	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.OrdProperties.elements_split	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_Add	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.OrdProperties.elements_Add	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_Equal	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.OrdProperties.elements_Add_Above	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.OrdProperties.elements_Add_Below	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.OrdProperties.set_induction_max	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ_mul	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_Add_2	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ_ext	120	0.0.0	synth with cache (only 1: intros; only 1: subst; only 1: reflexivity).	0.022359	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.elements_Empty	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.elements_empty	120	0.0	synth with cache (only 1: rewrite <- elements_Empty; only 1: auto with *).	0.024079	2
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.OrdProperties.set_induction_min	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.OrdProperties.fold_3	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.of_list_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.of_list_2	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.OrdProperties.fold_4	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.of_list_3	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_spec_right	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.OrdProperties.FoldOpt.fold_equal	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.OrdProperties.FoldOpt.add_fold	120	0.0.0	synth with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set).	0.024847	3
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.OrdProperties.FoldOpt.remove_fold_2	120	0.0.0	synth with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set).	0.034880	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rec	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rec_bis	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rec_nodep	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rec_weak	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply fold_rec_bis; only 1: auto; only 1: auto; only 1: auto).	0.034319	5
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetProperties.OrdProperties.choose_equal	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rel	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.set_induction	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.set_induction_bis	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_identity	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_0	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_2	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_1b	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_commutes	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_init	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_equal	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_empty	120	0.0.0	synth with cache (only 1: intros ?; only 1: apply fold_1b; only 1: auto with set).	0.021904	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_add	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.add_fold	120	0.0.0	synth with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set).	0.025322	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.remove_fold_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.remove_fold_2	120	0.0.0	synth with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set).	0.023186	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_union_inter	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_diff_inter	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_union	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_plus	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.cardinal_fold	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.cardinal_0	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.cardinal_1	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite cardinal_fold; only 1: apply fold_1; only 1: auto with *; only 1: auto with *).	0.068764	5
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.cardinal_2	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.cardinal_Empty	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.cardinal_inv_1	120	0.0.0	synth with cache (only 1: intros; only 1: rewrite cardinal_Empty; only 1: auto).	0.021562	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.cardinal_inv_2	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.cardinal_inv_2b	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.Equal_cardinal	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.cardinal_m_Proper	120	1	synth with cache (only 1: exact Equal_cardinal).	0.019562	2
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.empty_cardinal	120	0.0.0.0	synth with cache (only 1: rewrite cardinal_fold; only 1: apply fold_1; only 1: auto with *; only 1: auto with set).	0.020793	4
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.singleton_cardinal	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.diff_inter_cardinal	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.union_cardinal	120	0.1.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite cardinal_fold; only 1: rewrite cardinal_fold; only 1: rewrite cardinal_fold; only 1: rewrite <- fold_plus; only 1: apply fold_union; only 1: auto with fset; only 1: auto with fset; only 1: auto with fset; only 1: auto).	0.041422	11
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.subset_cardinal	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.subset_cardinal_lt	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.union_inter_cardinal	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.union_cardinal_inter	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.union_cardinal_le	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.add_cardinal_1	120	0	synth with cache (only 1: auto with set fset).	0.024178	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.add_cardinal_2	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.remove_cardinal_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.WProperties_fun.remove_cardinal_2	120	0	synth with cache (only 1: auto with set fset).	0.028931	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.OrdProperties.sort_equivlistA_eqlistA	120	0.0.0.0	synth with cache (only 1: apply SortA_equivlistA_eqlistA; only 1: eauto with *; only 1: eauto with *; only 1: eauto with *).	0.029371	4
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.OrdProperties.gtb_1	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold gtb; only 1: destruct E.compare; only 1: intuition; only 1: discriminate; only 1: ME.order; only 1: intuition; only 1: discriminate; only 1: ME.order; only 1: intuition).	0.143565	10
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.OrdProperties.leb_1	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold leb; only 1: unfold gtb; only 1: destruct E.compare; only 1: intuition; only 1: ME.order; only 1: intuition; only 1: ME.order; only 1: intuition).	0.098466	9
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.OrdProperties.gtb_compat	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.OrdProperties.leb_compat	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: red; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold leb; only 1: f_equal; only 1: apply gtb_compat; only 1: auto).	0.029067	9
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.OrdProperties.elements_split	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.OrdProperties.elements_Add	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.OrdProperties.elements_Add_Above	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.OrdProperties.elements_Add_Below	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.OrdProperties.set_induction_max	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.OrdProperties.set_induction_min	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.OrdProperties.fold_3	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.OrdProperties.fold_4	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.OrdProperties.FoldOpt.fold_equal	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.OrdProperties.FoldOpt.add_fold	120	0.0.0	synth with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set).	0.028454	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.OrdProperties.FoldOpt.remove_fold_2	120	0.0.0	synth with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set).	0.023753	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetProperties.OrdProperties.choose_equal	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_lt_compat_r	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_lt_reg_l	120
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Algebra.poly_mul_cst_compat	120
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Algebra.poly_mul_mon_compat	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.add_cancel_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lsr0	120	0.0.0	synth with cache (only 1: apply to_Z_inj; only 1: rewrite lsr_spec; only 1: reflexivity).	0.056100	3
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.eq_le_iff	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros; only 1: subst; only 1: compute; only 1: intuition congruence; only 1: intros; only 1: destruct H; only 1: apply Z.le_antisymm; only 1: auto; only 1: auto).	0.028228	11
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lsr_0_r	120	0.0.0.0	synth with cache (only 1: apply to_Z_inj; only 1: rewrite lsr_spec; only 1: rewrite Zdiv_1_r; only 1: auto).	0.051273	4
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.lt_le_iff	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.le_0_iff	120	0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intros; only 1: apply Zle_minus_le_0; only 1: auto; only 1: intros; only 1: apply Zle_0_minus_le; only 1: auto).	0.026932	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lsr_1	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.le_neg	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lsr_add	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.eq_cnf	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lsl0	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lsl0_r	120	0.0.0.0.0.0	synth with cache (only 1: apply to_Z_inj; only 1: rewrite lsl_spec; only 1: rewrite to_Z_0; only 1: rewrite Z.mul_1_r; only 1: apply Zmod_small; only 1: apply to_Z_bounded).	0.049944	6
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.Zsor	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lsl_add_distr	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.ZSORaddon	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: constructor; only 1: constructor; only 1: trivial; only 1: auto; only 1: intros; only 1: reflexivity; only 1: intros; only 1: reflexivity; only 1: intros; only 1: trivial; only 1: intros; only 1: reflexivity; only 1: intros; only 1: apply Zeq_bool_eq; only 1: auto; only 1: constructor; only 1: reflexivity; only 1: intros ?; only 1: intros ?; only 1: rewrite Zeq_is_eq_bool; only 1: destruct Zeq_bool; only 1: easy; only 1: easy; only 1: apply Zle_bool_imp_le).	0.055775	24
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lsr_M_r	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.ZNpower	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.Zeval_expr_compat	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.Zeval_formula_compat'	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.Zeval_nformula_dec	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.bit_0_spec	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.ZWeakChecker_sound	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.eval_pol_sub	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.bit_split	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.eval_pol_add	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.eval_pol_mul	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.bit_lsr	120	0.0.0.0.0	synth with cache (only 1: unfold bit; only 1: rewrite lsr_add; only 1: case Int63.leb; only 1: auto; only 1: auto).	0.056690	5
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.eval_pol_norm	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.bit_b2i	120	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: case b; only 1: unfold bit; only 1: simpl b2i; only 1: rewrite lsr_1; only 1: case Int63.eqb; only 1: auto; only 1: auto; only 1: unfold bit; only 1: simpl b2i; only 1: rewrite lsr0; only 1: rewrite lsl0; only 1: rewrite andb_false_r; only 1: auto).	0.061832	13
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.Zunsat_sound	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.bit_1	120	0.0.0.0.0.0.0	synth with cache (only 1: unfold bit; only 1: rewrite lsr_1; only 1: case Int63.eqb; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.055351	7
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.xnnormalise_correct	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.eval_pol_Pc	120	0	synth with cache (only 1: reflexivity).	0.021661	1
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.xnormalise_correct	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.cnf_of_list_correct	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.normalise_correct	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.to_Z_split	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.bit_M	120	0.0.0.0	synth with cache (only 1: unfold bit; only 1: rewrite lsr_M_r; only 1: auto; only 1: auto).	0.064958	4
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.xnegate_correct	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.bit_half	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.bit_ext	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.bit_lsl	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lor_lsr	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: apply bit_ext; only 1: intros ?; only 1: rewrite lor_spec; only 1: rewrite bit_lsr; only 1: rewrite bit_lsr; only 1: rewrite bit_lsr; only 1: rewrite lor_spec; only 1: case Int63.leb; only 1: auto; only 1: auto).	0.075292	10
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.negate_correct	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.Zdivide_ceiling	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lor_le	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.bit_0	120	0.0.0	synth with cache (only 1: unfold bit; only 1: rewrite lsr0; only 1: auto).	0.068041	3
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcabs.Qred_abs	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct x; only 1: destruct Qnum; only 1: simpl; only 1: auto; only 1: simpl; only 1: destruct BinPosDef.Pos.ggcd; only 1: destruct p1; only 1: simpl; only 1: auto; only 1: simpl; only 1: destruct BinPosDef.Pos.ggcd; only 1: destruct p1; only 1: simpl; only 1: auto).	0.059558	14
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcabs.Qcabs_canon	120	0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite Qred_abs; only 1: rewrite H; only 1: easy).	0.024244	4
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcabs.Qcabs_case	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcabs.Qcabs_pos	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcabs.Qcabs_neg	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcabs.Qcabs_nonneg	120	0	synth with cache (only 1: apply Qabs_nonneg).	0.019152	1
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcabs.Qcabs_opp	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcabs.Qcabs_triangle	120	0.0.0.0	synth with cache (only 1: Qc_unfolds; only 1: case Qred_abs; only 1: rewrite Qred_le; only 1: apply Qabs_triangle).	0.027485	4
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcabs.Qcabs_Qcmult	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcabs.Qcabs_Qcminus	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcabs.Qcle_Qcabs	120	0	synth with cache (only 1: apply Qle_Qabs).	0.014937	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_eq_reg_r	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcabs.Qcabs_triangle_reverse	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_integral	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcabs.Qcabs_Qcle_condition	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_eq_0_compat	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: rewrite H; only 1: auto with real; only 1: rewrite H; only 1: auto with real).	0.037778	8
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_eq_0_compat_r	120	0	synth with cache (only 1: auto with real).	0.036197	1
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcabs.Qcabs_diff_Qcle_condition	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcabs.Qcabs_null	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_eq_0_compat_l	120	0	synth with cache (only 1: auto with real).	0.039272	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_neq_0_reg	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: split; only 1: red; only 1: intros ?; only 1: apply H; only 1: auto with real; only 1: red; only 1: intros ?; only 1: apply H; only 1: auto with real).	0.045469	12
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_integral_contrapositive	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_integral_contrapositive_currified	120	0	synth with cache (only 1: auto using Rmult_integral_contrapositive).	0.043476	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_plus_distr_r	120	1.1.0.1.0.1.0.1.0.1.0.1.0.1.0.1.0.1.0.1.0.1.0.1.0.1.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: ring).	0.158086	70
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rsqr_0	120	0.0	synth with cache (only 1: unfold Rsqr; only 1: auto with real).	0.046191	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rsqr_0_uniq	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_eq_compat	120	1	synth with cache (only 1: auto with real).	0.032687	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_0	120	0	synth with cache (only 1: ring).	0.035686	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_eq_0_compat	120	0.0.0	synth with cache (only 1: intros; only 1: rewrite H; only 1: auto with real).	0.036049	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_involutive	120	0.0	synth with cache (only 1: intros ?; only 1: ring).	0.035620	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_neq_0_compat	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_plus_distr	120	0.0	synth with cache (only 1: intros; only 1: ring).	0.045379	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_mult_distr_l	120	0.0	synth with cache (only 1: intros; only 1: ring).	0.041272	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_mult_distr_l_reverse	120	0.0	synth with cache (only 1: intros; only 1: ring).	0.056738	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_opp_opp	120	0.0	synth with cache (only 1: intros; only 1: ring).	0.057069	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.bit_add_or	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.narrow_interval_lower_bound	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_mult_distr_r	120	0.0	synth with cache (only 1: intros; only 1: ring).	0.068750	2
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.isZ0_0	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_mult_distr_r_reverse	120	0.0	synth with cache (only 1: intros; only 1: ring).	0.042020	2
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.isZ0_n0	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rminus_0_r	120	0.0	synth with cache (only 1: intros ?; only 1: ring).	0.037370	2
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.Zdiv_pol_correct	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rminus_0_l	120	0.0	synth with cache (only 1: intros ?; only 1: ring).	0.040921	2
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.Zgcd_pol_ge	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.Zdivide_pol_Zdivide	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: induction H; only 1: constructor; only 1: apply Z.divide_trans with (1 := H0); only 1: assumption; only 1: constructor; only 1: auto; only 1: constructor; only 1: auto; only 1: auto).	0.031005	10
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_minus_distr	120	0.0	synth with cache (only 1: intros; only 1: ring).	0.044315	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.addmuldiv_spec	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.Zdivide_pol_one	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_minus_distr'	120	0.0	synth with cache (only 1: intros; only 1: ring).	0.046310	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.is_even_bit	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.Zgcd_minus	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rminus_diag_eq	120	0.0.0	synth with cache (only 1: intros; only 1: rewrite H; only 1: ring).	0.040535	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.is_even_spec	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.Zdivide_pol_sub	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rminus_diag_uniq	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.is_even_0	120	0	synth with cache (only 1: apply @eq_refl).	0.058077	1
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.Zdivide_pol_sub_0	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rminus_diag_uniq_sym	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_minus	120	0.0	synth with cache (only 1: intros; only 1: ring).	0.056434	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.is_even_lsl_1	120	0.0.0	synth with cache (only 1: rewrite is_even_bit; only 1: rewrite bit_lsl; only 1: auto).	0.055196	3
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.Zgcd_pol_div	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rminus_eq_contra	120	0.0.0.0.0.0.0	synth with cache (only 1: red; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply H; only 1: auto with real).	0.056946	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.quotient_by_2	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rminus_not_eq	120	0.0.0.0.0	synth with cache (only 1: red; only 1: intros; only 1: elim H; only 1: apply Rminus_diag_eq; only 1: auto).	0.047596	5
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.Zgcd_pol_correct_lt	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rminus_not_eq_right	120	0.0.0.0.0	synth with cache (only 1: red; only 1: intros; only 1: elim H; only 1: rewrite H0; only 1: ring).	0.058229	5
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.is_pol_Z0_eval_pol	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_minus_distr_l	120	0.0	synth with cache (only 1: intros; only 1: ring).	0.057758	2
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.pos_le_add	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rinv_1	120	0	synth with cache (only 1: field).	0.061723	1
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.max_var_le	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.sqrt_main_trick	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.max_var_correct	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rinv_neq_0_compat	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.MaxVar.max_var_nformulae_mono_aux	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rinv_involutive	120	0.0.0	synth with cache (only 1: intros; only 1: field; only 1: assumption).	0.058302	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.sqrt_main	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.MaxVar.max_var_nformulae_mono_aux'	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rinv_mult_distr	120	0.0.0	synth with cache (only 1: intros; only 1: field; only 1: auto).	0.071775	3
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.MaxVar.max_var_nformulae_correct_aux	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.sqrt_test_false	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.max_var_nformalae_correct	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply max_var_nformulae_correct_aux).	0.032425	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_inv_permute	120	0.0.0	synth with cache (only 1: intros; only 1: field; only 1: assumption).	0.064959	3
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.in_bdepth	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.sqrt_test_true	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rinv_r_simpl_r	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.eval_Psatz_sound	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rinv_r_simpl_l	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.makeCuttingPlane_ns_sound	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rinv_r_simpl_m	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rinv_mult_simpl	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_gt_compat_l	120	0	synth with cache (only 1: eauto using Rplus_lt_compat_l with rorders).	0.041175	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.sqrt_step_correct	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.cutting_plane_sound	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.genCuttingPlaneNone	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.eval_nformula_mk_eq_pos	120	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite xnnormalise_correct; only 1: simpl; only 1: auto).	0.046017	4
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.eval_nformula_bound_var	120	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite xnnormalise_correct; only 1: simpl; only 1: auto).	0.034680	4
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.agree_env_subset	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.agree_env_jump	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold agree_env; only 1: intros ?; only 1: intros; only 1: unfold Env.jump; only 1: apply H; only 1: apply Pos.add_le_mono_r; only 1: auto).	0.042004	8
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.agree_env_tail	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Env.tail; only 1: apply agree_env_jump; only 1: rewrite <- Pos.add_1_r in H; only 1: apply H).	0.035508	5
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.max_var_acc	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.agree_env_eval_nformula	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.iter_sqrt_correct	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.agree_env_eval_nformulae	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.eq_true_iff_eq	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.sqrt_init	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.sqrt_spec	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.sqrt2_step_def	120	0.0.0.0.0.0.0	synth with cache (only 1: unfold sqrt2_step; only 1: case diveucl_21; only 1: intros; only 1: simpl; only 1: case addc; only 1: trivial; only 1: trivial).	0.095940	7
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.ZChecker_sound	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.sqrt2_lower_bound	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.diveucl_21_spec_aux	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZMicromega.ZTautoChecker_sound	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.div2_phi	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.sqrt2_step_correct	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.iter2_sqrt_correct	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.sqrt2_spec	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.of_pos_rec_spec	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.is_int	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: reflexivity; only 1: intros ?; only 1: destruct H; only 1: clear H; only 1: simpl; only 1: unfold of_pos; only 1: rewrite of_pos_rec_spec; only 1: symmetry; only 1: apply Z.mod_small; only 1: split; only 1: lia; only 1: exact H0; only 1: lia; only 1: lia).	0.091641	15
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.of_Z_spec	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: reflexivity; only 1: simpl; only 1: unfold of_pos; only 1: rewrite of_pos_rec_spec; only 1: easy; only 1: auto; only 1: simpl; only 1: unfold of_pos; only 1: rewrite opp_spec; only 1: rewrite of_pos_rec_spec; only 1: fold wB; only 1: rewrite <- Z.sub_0_l; only 1: rewrite Zminus_mod_idemp_r; only 1: easy; only 1: auto).	0.083204	16
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.negbE	120	0.0.0	synth with cache (only 1: intros ?; only 1: intropattern subst -> H; only 1: apply negb_involutive).	0.058350	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.Z_oddE	120	0.0.0.0	synth with cache (only 1: rewrite Zmod_odd; only 1: case BinIntDef.Z.odd; only 1: reflexivity; only 1: reflexivity).	0.064167	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.Z_evenE	120	0.0.0.0	synth with cache (only 1: rewrite Zmod_even; only 1: case BinIntDef.Z.even; only 1: reflexivity; only 1: reflexivity).	0.060616	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.is_zeroE	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.bitE	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lt_pow_lt_log	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.land_spec'	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lor_spec'	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lxor_spec'	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.landC	120	0.0.0.0.0.0	synth with cache (only 1: apply bit_ext; only 1: intros ?; only 1: rewrite land_spec; only 1: rewrite land_spec; only 1: rewrite andb_comm; only 1: auto).	0.072049	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.landA	120	0.0.0.0.0.0.0.0	synth with cache (only 1: apply bit_ext; only 1: intros ?; only 1: rewrite land_spec; only 1: rewrite land_spec; only 1: rewrite land_spec; only 1: rewrite land_spec; only 1: rewrite andb_assoc; only 1: auto).	0.080130	8
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.land0	120	0.0.0.0.0	synth with cache (only 1: apply bit_ext; only 1: intros ?; only 1: rewrite land_spec; only 1: rewrite bit_0; only 1: auto).	0.069969	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.land0_r	120	0.0.0.0.0.0	synth with cache (only 1: rewrite landC; only 1: apply bit_ext; only 1: intros ?; only 1: rewrite land_spec; only 1: rewrite bit_0; only 1: auto).	0.072901	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lorC	120	0.0.0.0.0.0	synth with cache (only 1: apply bit_ext; only 1: intros ?; only 1: rewrite lor_spec; only 1: rewrite lor_spec; only 1: rewrite orb_comm; only 1: auto).	0.067717	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lorA	120	0.0.0.0.0.0.0.0	synth with cache (only 1: apply bit_ext; only 1: intros ?; only 1: rewrite lor_spec; only 1: rewrite lor_spec; only 1: rewrite lor_spec; only 1: rewrite lor_spec; only 1: rewrite orb_assoc; only 1: auto).	0.080669	8
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lor0	120	0.0.0.0.0	synth with cache (only 1: apply bit_ext; only 1: intros ?; only 1: rewrite lor_spec; only 1: rewrite bit_0; only 1: auto).	0.068775	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lor0_r	120	0.0.0.0.0.0	synth with cache (only 1: rewrite lorC; only 1: apply bit_ext; only 1: intros ?; only 1: rewrite lor_spec; only 1: rewrite bit_0; only 1: auto).	0.068027	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lxorC	120	0.0.0.0.0.0	synth with cache (only 1: apply bit_ext; only 1: intros ?; only 1: rewrite lxor_spec; only 1: rewrite lxor_spec; only 1: rewrite xorb_comm; only 1: auto).	0.094280	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lxorA	120	0.0.0.0.0.0.0.0	synth with cache (only 1: apply bit_ext; only 1: intros ?; only 1: rewrite lxor_spec; only 1: rewrite lxor_spec; only 1: rewrite lxor_spec; only 1: rewrite lxor_spec; only 1: rewrite xorb_assoc_reverse; only 1: auto).	0.099816	8
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lxor0	120	0.0.0.0.0.0	synth with cache (only 1: apply bit_ext; only 1: intros ?; only 1: rewrite lxor_spec; only 1: rewrite bit_0; only 1: rewrite xorb_false_l; only 1: auto).	0.077248	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Cyclic.Int63.Int63.lxor0_r	120	0.0.0.0.0.0.0	synth with cache (only 1: rewrite lxorC; only 1: apply bit_ext; only 1: intros ?; only 1: rewrite lxor_spec; only 1: rewrite bit_0; only 1: rewrite xorb_false_l; only 1: auto).	0.089786	7
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qabs.Qabs_case	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qabs.Qabs_wd_Proper	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qabs.Qabs_pos	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qabs.Qabs_neg	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qabs.Qabs_nonneg	120	0.0.0.0	synth with cache (only 1: intros ?; only 1: apply Qabs_case; only 1: auto; only 1: apply Qopp_le_compat).	0.018747	4
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qabs.Zabs_Qabs	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct n; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	0.022422	5
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qabs.Qabs_opp	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qabs.Qabs_triangle	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qabs.Qabs_Qmult	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct a; only 1: intros ?; only 1: destruct b; only 1: simpl; only 1: rewrite Z.abs_mul; only 1: reflexivity).	0.028500	7
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qabs.Qabs_Qinv	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct q; only 1: simpl; only 1: unfold Qinv; only 1: case_eq Qnum; only 1: intros; only 1: simpl in *; only 1: apply Qeq_refl; only 1: intros; only 1: simpl in *; only 1: apply Qeq_refl; only 1: intros; only 1: simpl in *; only 1: apply Qeq_refl).	0.040833	14
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qabs.Qabs_Qminus	120	0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Qminus; only 1: unfold Qopp; only 1: simpl; only 1: rewrite Pos.mul_comm; only 1: rewrite <- Z.abs_opp; only 1: f_equal; only 1: f_equal; only 1: ring).	0.049910	8
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qabs.Qle_Qabs	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qabs.Qabs_triangle_reverse	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qabs.Qabs_Qle_condition	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qabs.Qabs_diff_Qle_condition	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.MapsTo_In	120	0.0.0.0	synth with cache (only 1: induction 1; only 1: auto; only 1: auto; only 1: auto).	0.027117	4
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.In_MapsTo	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction 1; only 1: exists e; only 1: auto; only 1: destruct IHIn; only 1: exists x; only 1: auto; only 1: destruct IHIn; only 1: exists x; only 1: auto).	0.033251	9
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.In_alt	120	0.0.0.0.0.0	synth with cache (only 1: split; only 1: intros ?; only 1: destruct H; only 1: eauto; only 1: unfold In0; only 1: apply In_MapsTo).	0.022965	6
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.MapsTo_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.In_1	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: induction m; only 1: intuition_in; only 1: intuition_in; only 1: eauto with ordered_type).	0.089503	7
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.In_node_iff	120	0	synth with cache (only 1: intuition_in).	0.095263	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_leaf	120	0.0.0	synth with cache (only 1: unfold lt_tree; only 1: intros; only 1: intuition_in).	0.028637	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_leaf	120	0.0.0	synth with cache (only 1: unfold gt_tree; only 1: intros; only 1: intuition_in).	0.029114	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_tree_node	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_tree_node	120	0.0.0	synth with cache (only 1: unfold gt_tree in *; only 1: intuition_in; only 1: order).	0.075522	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_left	120	0	synth with cache (only 1: intuition_in).	0.038745	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_right	120	0	synth with cache (only 1: intuition_in).	0.026937	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_left	120	0	synth with cache (only 1: intuition_in).	0.032229	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_right	120	0	synth with cache (only 1: intuition_in).	0.023169	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_tree_not_in	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_tree_trans	120	0	synth with cache (only 1: eauto with ordered_type).	0.032303	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_tree_not_in	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_tree_trans	120	0	synth with cache (only 1: eauto with ordered_type).	0.031959	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.empty_bst	120	0.0	synth with cache (only 1: unfold empty; only 1: auto).	0.022845	2
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.empty_1	120	0.0.0	synth with cache (only 1: unfold empty; only 1: unfold Empty; only 1: intuition_in).	0.051645	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.is_empty_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.is_empty_2	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.mem_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.mem_2	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_2	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_iff	120	0.0.0	synth with cache (only 1: split; only 1: auto using find_1, find_2; only 1: auto using find_1, find_2).	0.024225	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_in	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.in_find	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_in_iff	120	0.0.0	synth with cache (only 1: split; only 1: auto using find_in, in_find; only 1: auto using find_in, in_find).	0.030161	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.not_find_iff	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_find	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct find; only 1: destruct find; only 1: split; only 1: intros; only 1: split; only 1: congruence; only 1: congruence; only 1: intros; only 1: rewrite H; only 1: auto; only 1: split; only 1: intros; only 1: split; only 1: congruence; only 1: congruence; only 1: intros; only 1: symmetry; only 1: rewrite <- H; only 1: auto; only 1: destruct find; only 1: split; only 1: intros; only 1: split; only 1: congruence; only 1: congruence; only 1: intros; only 1: rewrite H; only 1: auto; only 1: split; only 1: intros; only 1: split; only 1: congruence; only 1: congruence; only 1: intros; only 1: split).	0.080119	36
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_mapsto_equiv	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite find_find; only 1: split; only 1: intros ?; only 1: intros ?; only 1: specialize H1 with d; only 1: rewrite <- find_iff; only 1: rewrite <- find_iff; only 1: auto; only 1: auto; only 1: auto; only 1: intros ?; only 1: intros ?; only 1: specialize H1 with d; only 1: rewrite find_iff; only 1: rewrite find_iff; only 1: auto; only 1: auto; only 1: auto).	0.064835	23
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_in_equiv	120	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intros; only 1: apply find_in; only 1: rewrite <- H1; only 1: apply in_find; only 1: auto; only 1: auto; only 1: intros; only 1: apply find_in; only 1: rewrite H1; only 1: apply in_find; only 1: auto; only 1: auto).	0.044105	13
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.create_bst	120	0.0	synth with cache (only 1: unfold create; only 1: auto).	0.027727	2
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.create_in	120	0.0.0.0.0.0.0	synth with cache (only 1: unfold create; only 1: split; only 1: inversion_clear 1; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.074315	7
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.bal_bst	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.bal_in	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.bal_mapsto	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.bal_find	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite find_mapsto_equiv; only 1: intros; only 1: apply bal_mapsto; only 1: auto; only 1: auto).	0.042266	6
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_in	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_bst	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_2	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: induction m; only 1: simpl; only 1: auto; only 1: simpl; only 1: destruct X.compare; only 1: intros; only 1: rewrite bal_mapsto; only 1: unfold create; only 1: inv MapsTo; only 1: auto; only 1: auto; only 1: auto; only 1: intros; only 1: inv MapsTo; only 1: order; only 1: auto; only 1: auto; only 1: intros; only 1: rewrite bal_mapsto; only 1: unfold create; only 1: inv MapsTo; only 1: auto; only 1: auto; only 1: auto).	0.195884	29
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_3	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: induction m; only 1: simpl; only 1: intros; only 1: inv MapsTo; only 1: order; only 1: simpl; only 1: destruct X.compare; only 1: intros ?; only 1: rewrite bal_mapsto; only 1: unfold create; only 1: intros; only 1: inv MapsTo; only 1: auto; only 1: auto; only 1: auto; only 1: intros ?; only 1: intros; only 1: inv MapsTo; only 1: order; only 1: auto; only 1: auto; only 1: intros ?; only 1: rewrite bal_mapsto; only 1: unfold create; only 1: intros; only 1: inv MapsTo; only 1: auto; only 1: auto; only 1: auto).	0.263542	34
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_find	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_min_in	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_min_mapsto	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_min_bst	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_min_gt_tree	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_min_find	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.merge_in	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.merge_mapsto	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.merge_bst	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_in	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_bst	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_1	120	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite remove_in; only 1: intuition; only 1: intuition).	0.039471	4
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_2	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_3	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: induction m; only 1: simpl; only 1: auto; only 1: simpl; only 1: destruct X.compare; only 1: intros ?; only 1: inv bst; only 1: rewrite bal_mapsto; only 1: unfold create; only 1: intros; only 1: inv MapsTo; only 1: auto; only 1: auto; only 1: auto; only 1: intros ?; only 1: inv bst; only 1: rewrite merge_mapsto; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intros ?; only 1: inv bst; only 1: rewrite bal_mapsto; only 1: unfold create; only 1: intros; only 1: inv MapsTo; only 1: auto; only 1: auto; only 1: auto).	0.272432	33
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.join_in	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.join_bst	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: join_tac; only 1: simpl; only 1: auto; only 1: auto; only 1: inv bst; only 1: apply bal_bst; only 1: auto; only 1: auto; only 1: auto; only 1: clear Hrl Hlr; only 1: intros ?; only 1: intros; only 1: rewrite join_in in *; only 1: intuition; only 1: apply MX.lt_eq with x; only 1: eauto with ordered_type; only 1: eauto with ordered_type; only 1: eauto with ordered_type; only 1: inv bst; only 1: apply bal_bst; only 1: auto; only 1: auto; only 1: clear Hrl Hlr; only 1: intros ?; only 1: intros; only 1: rewrite join_in in *; only 1: intuition; only 1: apply MX.eq_lt with x; only 1: eauto with ordered_type; only 1: eauto with ordered_type; only 1: eauto with ordered_type; only 1: auto; only 1: auto).	0.348155	33
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRlt_asym	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.join_find	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRlt_proper	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.QMicromega.Qsor	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRle_refl	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.QMicromega.QSORaddon	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: constructor; only 1: constructor; only 1: reflexivity; only 1: reflexivity; only 1: intros; only 1: reflexivity; only 1: intros; only 1: reflexivity; only 1: intros; only 1: ring; only 1: intros; only 1: reflexivity; only 1: intros; only 1: apply Qeq_bool_eq; only 1: auto; only 1: constructor; only 1: reflexivity; only 1: intros ?; only 1: intros ?; only 1: rewrite <- Qeq_bool_iff; only 1: intros ?; only 1: intropattern subst -> H; only 1: easy; only 1: apply Qle_bool_imp_le).	0.068531	24
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRle_lt_trans	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRlt_le_trans	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.QMicromega.Qeval_expr_simpl	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRle_trans	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_in_1	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRlt_trans	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.QMicromega.QNpower	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRlt_trans_flip	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CReq_refl	120	0.0.0	synth with cache (only 1: split; only 1: apply CRle_refl; only 1: apply CRle_refl).	0.019951	3
coq-tactician-stdlib.8.11.dev	Coq.micromega.QMicromega.Qeval_expr_compat	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CReq_sym	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct H; only 1: split; only 1: intros ?; only 1: contradiction; only 1: intros ?; only 1: contradiction).	0.034920	7
coq-tactician-stdlib.8.11.dev	Coq.micromega.QMicromega.Qeval_formula_compat	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Qeval_formula; only 1: destruct f; only 1: rewrite Qeval_expr_compat; only 1: rewrite Qeval_expr_compat; only 1: unfold Qeval_formula'; only 1: unfold Qeval_expr'; only 1: split; only 1: destruct Fop; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: destruct Fop; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.103944	34
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CReq_trans	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CR_setoid	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intros ?; only 1: apply CReq_refl; only 1: intros ?; only 1: intros ?; only 1: apply CReq_sym; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply CReq_trans).	0.031297	10
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRplus_0_r	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.QMicromega.Qeval_nformula_dec	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_in_2	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRmult_1_r	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRplus_opp_l	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRplus_lt_compat_r	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.QMicromega.QWeakChecker_sound	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_in_3	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRplus_lt_reg_r	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRplus_le_compat_l	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: intros ?; only 1: apply CRplus_lt_reg_l in H0; only 1: apply H; only 1: exact H0).	0.029137	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRplus_le_compat_r	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: intros ?; only 1: apply CRplus_lt_reg_r in H0; only 1: apply H; only 1: exact H0).	0.027310	5
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_bst	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRplus_le_reg_l	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: intros ?; only 1: apply H; only 1: clear H; only 1: apply CRplus_lt_compat_l; only 1: exact H0).	0.030254	6
coq-tactician-stdlib.8.11.dev	Coq.micromega.QMicromega.QTautoChecker_sound	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_lt_tree	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite split_in_1 in H0; only 1: intuition; only 1: intuition).	0.037283	8
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRplus_le_reg_r	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: intros ?; only 1: apply H; only 1: clear H; only 1: apply CRplus_lt_compat_r; only 1: exact H0).	0.028083	6
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_gt_tree	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite split_in_2 in H0; only 1: intuition; only 1: intuition).	0.050476	8
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRplus_lt_le_compat	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRplus_eq_reg_l	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRplus_eq_reg_r	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_find	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRopp_involutive	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.concat_in	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRopp_gt_lt_contravar	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRopp_lt_cancel	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.concat_bst	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRopp_plus_distr	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRmult_plus_distr_l	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.concat_find	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRzero_double	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRmult_0_r	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRopp_mult_distr_r	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_aux_mapsto	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRopp_mult_distr_l	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_mapsto	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRmult_lt_compat_r	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_in	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold L.PX.In; only 1: rewrite <- In_alt; only 1: unfold In0; only 1: firstorder; only 1: exists x0; only 1: rewrite <- elements_mapsto; only 1: auto; only 1: exists x0; only 1: unfold L.PX.MapsTo; only 1: rewrite elements_mapsto; only 1: auto).	0.052061	12
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRinv_r	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRmult_lt_reg_r	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRmult_lt_reg_l	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRmult_le_compat_l	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: intros ?; only 1: apply CRmult_lt_reg_l in H1; only 1: contradiction; only 1: exact H).	0.062590	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRmult_le_compat_r	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: intros ?; only 1: apply CRmult_lt_reg_r in H1; only 1: contradiction; only 1: exact H).	0.066677	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CRmult_eq_reg_r	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CR_of_Q_proper	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CR_of_Q_zero	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_aux_sort	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_sort	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold elements; only 1: apply elements_aux_sort; only 1: auto; only 1: auto; only 1: intros; only 1: inversion H0).	0.046936	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CR_of_Q_opp	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_nodup	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply PX.Sort_NoDupA; only 1: unfold elements; only 1: apply elements_aux_sort; only 1: auto; only 1: auto; only 1: intros; only 1: inversion H0).	0.053235	8
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CR_of_Q_le	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CR_of_Q_pos	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_aux_cardinal	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_cardinal	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_app	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_node	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold elements; only 1: simpl; only 1: intros; only 1: rewrite elements_app; only 1: rewrite elements_app; only 1: rewrite elements_app; only 1: rewrite app_nil_r; only 1: rewrite app_nil_r; only 1: rewrite app_assoc_reverse; only 1: auto).	0.061452	10
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CR_cv_above_rat	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.fold_equiv_aux	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.fold_equiv	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.fold_1	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite fold_equiv; only 1: unfold fold'; only 1: rewrite L.fold_1; only 1: unfold L.elements; only 1: auto).	0.052098	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CR_cv_below_rat	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.flatten_e_elements	120	0.0	synth with cache (only 1: intros; only 1: apply elements_node).	0.035017	2
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.cons_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.cons_IfEq	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.equal_end_IfEq	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveReals.CR_cv_const	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.equal_more_IfEq	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold IfEq; only 1: simpl; only 1: intros; only 1: destruct X.compare; only 1: auto; only 1: rewrite <- andb_lazy_alt; only 1: f_equal; only 1: auto; only 1: auto).	0.077131	9
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.equal_cont_IfEq	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.equal_IfEq	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.Equivb_elements	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Elt.equal_Equivb	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Map.map_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Map.map_2	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Map.map_bst	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Mapi.mapi_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Mapi.mapi_2	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Mapi.mapi_bst	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Map_option.map_option_2	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Map_option.map_option_bst	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Map_option.map_option_find	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Map2_opt.map2_opt_2	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Map2_opt.map2_opt_bst	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Map2_opt.map2_opt_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Map2.map2_bst	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Map2.map2_1	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qround.Qopp_lt_compat	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct p; only 1: intros ?; only 1: destruct q; only 1: unfold Qlt; only 1: simpl; only 1: rewrite Z.mul_opp_l; only 1: rewrite Z.mul_opp_l; only 1: apply Z.opp_lt_mono).	0.035225	9
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qround.Qfloor_Z	120	0.0.0.0	synth with cache (only 1: intros ?; only 1: simpl; only 1: zero_or_not z; only 1: apply Z.div_1_r).	0.027932	4
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qround.Qceiling_Z	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: unfold Qceiling; only 1: simpl; only 1: rewrite Z.div_1_r; only 1: apply Z.opp_involutive).	0.026772	5
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qround.Qfloor_le	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qround.Qle_ceiling	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qround.Qle_floor_ceiling	120	0	synth with cache (only 1: eauto with qarith).	0.027524	1
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qround.Qlt_floor	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qround.Qceiling_lt	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qround.Qfloor_resp_le	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qround.Qceiling_resp_le	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold Qceiling; only 1: rewrite <- Z.opp_le_mono; only 1: auto with qarith).	0.026023	6
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qround.Qfloor_comp_Proper	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply Z.le_antisymm; only 1: auto with *; only 1: symmetry in H; only 1: auto with *).	0.047647	7
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qround.Qceiling_comp_Proper	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply Z.le_antisymm; only 1: auto with *; only 1: symmetry in H; only 1: auto with *).	0.063149	7
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qround.Zdiv_Qdiv	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qred_identity	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qred_identity2	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qred_iff	120	0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intros; only 1: apply Qred_identity2; only 1: auto; only 1: intros; only 1: apply Qred_identity; only 1: auto).	0.036221	7
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qc_is_canon	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qc_decomp	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply Qc_is_canon; only 1: rewrite H; only 1: easy).	0.029224	4
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qred_involutive	120	0.0.0	synth with cache (only 1: intros; only 1: apply Qred_complete; only 1: apply Qred_correct).	0.029183	3
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Q2Qc_eq_iff	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qceq_alt	120	0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Qccompare; only 1: intros; only 1: rewrite <- Qeq_alt; only 1: split; only 1: intros ?; only 1: intropattern subst <- H; only 1: auto with qarith; only 1: auto).	0.035111	8
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qclt_alt	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcgt_alt	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcle_alt	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcge_alt	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qc_eq_dec	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Q_apart_0_1	120	0.0.0	synth with cache (only 1: unfold Q2Qc; only 1: intros ?; only 1: discriminate H).	0.079035	3
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcplus_assoc	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcplus_0_l	120	0.0.0	synth with cache (only 1: intros; only 1: qc; only 1: apply Qplus_0_l).	0.040848	3
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcplus_0_r	120	0.0.0	synth with cache (only 1: intros; only 1: qc; only 1: apply Qplus_0_r).	0.038207	3
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcplus_comm	120	0.0.0	synth with cache (only 1: intros; only 1: qc; only 1: apply Qplus_comm).	0.038190	3
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcopp_involutive	120	0.0.0	synth with cache (only 1: intros; only 1: qc; only 1: apply Qopp_involutive).	0.038029	3
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcplus_opp_r	120	0.0.0	synth with cache (only 1: intros; only 1: qc; only 1: apply Qplus_opp_r).	0.041109	3
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcmult_assoc	120	0.0.0	synth with cache (only 1: intros; only 1: qc; only 1: apply Qmult_assoc).	0.041134	3
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcmult_0_l	120	0.0.0	synth with cache (only 1: intros; only 1: qc; only 1: split).	0.047684	3
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcmult_0_r	120	0.0.0.0	synth with cache (only 1: intros; only 1: qc; only 1: rewrite Qmult_comm; only 1: split).	0.074903	4
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcmult_1_l	120	0.0.0	synth with cache (only 1: intros; only 1: qc; only 1: apply Qmult_1_l).	0.034463	3
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcmult_1_r	120	0.0.0	synth with cache (only 1: intros; only 1: qc; only 1: apply Qmult_1_r).	0.038997	3
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcmult_comm	120	0.0.0	synth with cache (only 1: intros; only 1: qc; only 1: apply Qmult_comm).	0.038460	3
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcmult_plus_distr_r	120	0.0.0	synth with cache (only 1: intros; only 1: qc; only 1: apply Qmult_plus_distr_r).	0.055089	3
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcmult_plus_distr_l	120	0.0.0	synth with cache (only 1: intros; only 1: qc; only 1: apply Qmult_plus_distr_l).	0.050077	3
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcmult_integral	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcmult_integral_l	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcmult_inv_r	120	0.0.0.0	synth with cache (only 1: intros; only 1: qc; only 1: apply Qmult_inv_r; only 1: auto).	0.042180	4
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcmult_inv_l	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Qcmult_comm; only 1: qc; only 1: apply Qmult_inv_r; only 1: auto).	0.044104	5
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcinv_mult_distr	120	0.0.0	synth with cache (only 1: intros; only 1: qc; only 1: apply Qinv_mult_distr).	0.047102	3
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcdiv_mult_l	120	0.0.0.0.0.0	synth with cache (only 1: unfold Qcdiv; only 1: intros; only 1: rewrite <- Qcmult_assoc; only 1: rewrite Qcmult_inv_r; only 1: apply Qcmult_1_r; only 1: auto).	0.040832	6
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcmult_div_r	120	0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Qcdiv; only 1: intros; only 1: rewrite Qcmult_assoc; only 1: rewrite Qcmult_comm; only 1: rewrite Qcmult_assoc; only 1: rewrite Qcmult_inv_l; only 1: apply Qcmult_1_l; only 1: auto).	0.032082	8
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcle_refl	120	0.0.0	synth with cache (only 1: unfold Qcle; only 1: intros; only 1: apply Qle_refl).	0.030259	3
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcle_antisym	120	0.0.0.0.0.0	synth with cache (only 1: unfold Qcle; only 1: intros; only 1: apply Qc_is_canon; only 1: apply Qle_antisym; only 1: auto; only 1: auto).	0.035110	6
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcle_trans	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qclt_not_eq	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qclt_le_weak	120	0.0.0.0.0	synth with cache (only 1: unfold Qcle; only 1: unfold Qclt; only 1: intros; only 1: apply Qlt_le_weak; only 1: auto).	0.032313	5
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcle_lt_trans	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qclt_le_trans	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qclt_trans	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcnot_lt_le	120	0.0.0.0.0	synth with cache (only 1: unfold Qcle; only 1: unfold Qclt; only 1: intros; only 1: apply Qnot_lt_le; only 1: auto).	0.053426	5
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcnot_le_lt	120	0.0.0.0.0	synth with cache (only 1: unfold Qcle; only 1: unfold Qclt; only 1: intros; only 1: apply Qnot_le_lt; only 1: auto).	0.051470	5
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qclt_not_le	120	0.0.0.0.0	synth with cache (only 1: unfold Qcle; only 1: unfold Qclt; only 1: intros; only 1: apply Qlt_not_le; only 1: auto).	0.053495	5
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcle_not_lt	120	0.0.0.0.0	synth with cache (only 1: unfold Qcle; only 1: unfold Qclt; only 1: intros; only 1: apply Qle_not_lt; only 1: auto).	0.033085	5
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcle_lt_or_eq	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qc_dec	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qclt_le_dec	120	0.0.0.0	synth with cache (only 1: unfold Qclt; only 1: unfold Qcle; only 1: intros; only 1: apply Qlt_le_dec).	0.028040	4
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcopp_le_compat	120	0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Qcle; only 1: unfold Qcopp; only 1: intros; only 1: simpl in *; only 1: rewrite Qred_correct; only 1: rewrite Qred_correct; only 1: apply Qopp_le_compat; only 1: auto).	0.046429	8
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcle_minus_iff	120	0.0.0.0.0.0.0	synth with cache (only 1: unfold Qcle; only 1: intros; only 1: simpl in *; only 1: rewrite Qred_correct; only 1: rewrite Qred_correct; only 1: rewrite Qred_correct; only 1: apply Qle_minus_iff).	0.056124	7
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qclt_minus_iff	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Qclt; only 1: unfold Qcplus; only 1: unfold Qcopp; only 1: intros; only 1: simpl in *; only 1: rewrite Qred_correct; only 1: rewrite Qred_correct; only 1: rewrite Qred_correct; only 1: apply Qlt_minus_iff).	0.053783	9
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcplus_le_compat	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Qcplus; only 1: unfold Qcle; only 1: intros; only 1: simpl in *; only 1: rewrite Qred_correct; only 1: rewrite Qred_correct; only 1: apply Qplus_le_compat; only 1: auto; only 1: auto).	0.075218	9
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcmult_le_compat_r	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Qcmult; only 1: unfold Qcle; only 1: intros; only 1: simpl in *; only 1: rewrite Qred_correct; only 1: rewrite Qred_correct; only 1: apply Qmult_le_compat_r; only 1: auto; only 1: auto).	0.054300	9
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcmult_lt_0_le_reg_r	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcmult_lt_compat_r	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Qcmult; only 1: unfold Qclt; only 1: intros; only 1: simpl in *; only 1: rewrite Qred_correct in *; only 1: rewrite Qred_correct in *; only 1: eapply Qmult_lt_compat_r; only 1: eauto; only 1: eauto).	0.060089	9
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcpower_1	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcpower_0	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcpower_pos	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qc_eq_bool_correct	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: unfold Qc_eq_bool; only 1: case Qc_eq_dec; only 1: auto; only 1: intros ?; only 1: intros ?; only 1: clear n; only 1: inversion H).	0.043500	9
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcrt	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: constructor; only 1: intros; only 1: qc; only 1: apply Qplus_0_l; only 1: intros; only 1: qc; only 1: apply Qplus_comm; only 1: intros; only 1: qc; only 1: apply Qplus_assoc; only 1: intros; only 1: qc; only 1: apply Qmult_1_l; only 1: exact Qcmult_comm; only 1: intros; only 1: qc; only 1: apply Qmult_assoc; only 1: intros; only 1: qc; only 1: apply Qmult_plus_distr_l; only 1: reflexivity; only 1: intros; only 1: qc; only 1: apply Qplus_opp_r).	0.115207	24
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.Qcft	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: constructor; only 1: exact Qcrt; only 1: exact Q_apart_0_1; only 1: reflexivity; only 1: intros; only 1: rewrite Qcmult_comm; only 1: qc; only 1: apply Qmult_inv_r; only 1: auto).	0.046827	9
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qcanon.test_field	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.Raw.Proofs.Map2.map2_2	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.MapsTo_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.mem_1	120	0.0.0.0.0.0.0	synth with cache (only 1: unfold In; only 1: unfold mem; only 1: intros ?; only 1: intros ?; only 1: rewrite In_alt; only 1: apply mem_1; only 1: apply is_bst).	0.112456	7
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.eq_bool_alt	120	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.060578	5
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.mem_2	120	0.0.0.0.0.0	synth with cache (only 1: unfold In; only 1: unfold mem; only 1: intros ?; only 1: intros ?; only 1: rewrite In_alt; only 1: apply mem_2).	0.034795	6
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.eq_option_alt	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intros; only 1: subst; only 1: split; only 1: auto; only 1: auto; only 1: intros; only 1: destruct o; only 1: destruct o'; only 1: rewrite H; only 1: auto; only 1: symmetry; only 1: rewrite <- H; only 1: auto; only 1: destruct o'; only 1: rewrite H; only 1: auto; only 1: auto).	0.043868	18
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.empty_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.is_empty_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.MapsTo_fun	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.In_iff	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.is_empty_2	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.MapsTo_iff	120	0.0.0.0.0	synth with cache (only 1: split; only 1: apply MapsTo_1; only 1: auto; only 1: apply MapsTo_1; only 1: auto).	0.023291	5
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.add_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.mem_in_iff	120	0.0.0	synth with cache (only 1: split; only 1: apply mem_1; only 1: apply mem_2).	0.022700	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.not_mem_in_iff	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite mem_in_iff; only 1: destruct mem; only 1: intuition; only 1: intuition).	0.032825	5
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.add_2	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.In_dec	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.add_3	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.find_mapsto_iff	120	0.0.0	synth with cache (only 1: split; only 1: apply find_1; only 1: apply find_2).	0.021838	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.remove_1	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold In; only 1: unfold remove; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite In_alt; only 1: simpl; only 1: apply remove_1; only 1: apply is_bst).	0.038570	9
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.not_find_in_iff	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intros; only 1: rewrite eq_option_alt; only 1: intros ?; only 1: rewrite <- find_mapsto_iff; only 1: split; only 1: intros ?; only 1: elim H; only 1: exists e; only 1: auto; only 1: discriminate; only 1: intros; only 1: intros ?; only 1: destruct H0; only 1: rewrite find_mapsto_iff in H0; only 1: rewrite H in H0; only 1: discriminate).	0.043163	17
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.remove_2	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.in_find_iff	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- not_find_in_iff; only 1: rewrite mem_in_iff; only 1: destruct mem; only 1: intuition; only 1: intuition).	0.106241	6
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.remove_3	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.find_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.equal_iff	120	0.0.0	synth with cache (only 1: split; only 1: apply equal_1; only 1: apply equal_2).	0.025448	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.find_2	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.empty_mapsto_iff	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.fold_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.empty_in_iff	120	0.0.0.0.0.0.0	synth with cache (only 1: unfold In; only 1: split; only 1: intros ?; only 1: destruct H; only 1: rewrite empty_mapsto_iff in H; only 1: intuition; only 1: intuition).	0.028402	7
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.elements_1	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold elements; only 1: unfold eq_key_elt; only 1: rewrite elements_mapsto; only 1: auto).	0.034436	5
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.is_empty_iff	120	0.0.0	synth with cache (only 1: split; only 1: apply is_empty_1; only 1: apply is_empty_2).	0.021910	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.elements_2	120	0.0.0.0	synth with cache (only 1: intros; only 1: unfold MapsTo; only 1: rewrite <- elements_mapsto; only 1: auto).	0.033386	4
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.elements_3	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.elements_3w	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.add_mapsto_iff	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.cardinal_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.add_in_iff	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.add_neq_mapsto_iff	120	0.0.0.0.0	synth with cache (only 1: split; only 1: apply add_3; only 1: auto; only 1: apply add_2; only 1: auto).	0.024735	5
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.add_neq_in_iff	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.remove_mapsto_iff	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.Equivb_Equivb	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.remove_in_iff	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.remove_neq_mapsto_iff	120	0.0.0.0	synth with cache (only 1: split; only 1: apply remove_3; only 1: apply remove_2; only 1: auto).	0.024224	4
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.equal_1	120	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold equal; only 1: intros ?; only 1: destruct m; only 1: intros ?; only 1: destruct m'; only 1: intros ?; only 1: rewrite Equivb_Equivb; only 1: intros; only 1: simpl in *; only 1: rewrite equal_Equivb; only 1: auto; only 1: auto; only 1: auto).	0.085102	13
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.remove_neq_in_iff	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.elements_mapsto_iff	120	0.0.0	synth with cache (only 1: split; only 1: apply elements_1; only 1: apply elements_2).	0.021834	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.elements_in_iff	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold In; only 1: split; only 1: intros ?; only 1: destruct H; only 1: exists x0; only 1: apply elements_1; only 1: auto; only 1: intros ?; only 1: destruct H; only 1: exists x0; only 1: apply elements_2; only 1: auto).	0.032256	12
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.Elt.equal_2	120	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold equal; only 1: intros ?; only 1: destruct m; only 1: intros ?; only 1: destruct m'; only 1: intros ?; only 1: rewrite Equivb_Equivb; only 1: intros; only 1: simpl in *; only 1: rewrite <- equal_Equivb; only 1: auto; only 1: auto; only 1: auto).	0.051932	13
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.map_mapsto_iff	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.map_in_iff	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.map_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.map_2	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold In in *; only 1: rewrite In_alt; only 1: rewrite In_alt; only 1: simpl; only 1: apply map_2).	0.041216	10
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.mapi_in_iff	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.mapi_inv	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.mapi_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.mapi_1bis	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.mapi_2	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold In in *; only 1: rewrite In_alt; only 1: rewrite In_alt; only 1: simpl; only 1: apply mapi_2).	0.068723	10
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.IffSpec.mapi_mapsto_iff	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.mem_find_b	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.map2_1	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold find; only 1: unfold map2; only 1: unfold In; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite In_alt; only 1: rewrite In_alt; only 1: intros; only 1: simpl; only 1: apply map2_1; only 1: apply is_bst; only 1: apply is_bst; only 1: auto).	0.103489	18
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.mem_b	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.find_o	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite eq_option_alt; only 1: intros ?; only 1: rewrite <- find_mapsto_iff; only 1: rewrite <- find_mapsto_iff; only 1: apply MapsTo_iff; only 1: auto).	0.032239	7
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake.map2_2	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold In; only 1: unfold map2; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite In_alt; only 1: rewrite In_alt; only 1: rewrite In_alt; only 1: intros; only 1: simpl in *; only 1: eapply map2_2; only 1: apply is_bst; only 1: apply is_bst; only 1: eauto).	0.097838	18
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.empty_o	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite eq_option_alt; only 1: intros ?; only 1: rewrite <- find_mapsto_iff; only 1: rewrite empty_mapsto_iff; only 1: intuition; only 1: easy).	0.081225	7
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.empty_a	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_eq_o	120	0	synth with cache (only 1: auto with map).	0.025028	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_neq_o	120	0.0.0.0.0.1.0	synth with cache (only 1: intros; only 1: rewrite eq_option_alt; only 1: intros ?; only 1: rewrite <- find_mapsto_iff; only 1: rewrite <- find_mapsto_iff; only 1: apply add_neq_mapsto_iff; only 1: auto).	0.035357	8
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_o	120	0.0.0.0	synth with cache (only 1: intros; only 1: destruct eq_dec; only 1: auto with map; only 1: auto with map).	0.030714	4
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_eq_b	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite mem_find_b; only 1: rewrite add_eq_o; only 1: auto; only 1: auto).	0.028317	5
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_neq_b	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite mem_find_b; only 1: rewrite mem_find_b; only 1: rewrite add_neq_o; only 1: auto; only 1: auto).	0.029291	6
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_b	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite mem_find_b; only 1: rewrite mem_find_b; only 1: rewrite add_o; only 1: unfold eqb; only 1: destruct eq_dec; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.036898	10
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_eq_o	120	0.0.0.0.0.0.1.0	synth with cache (only 1: intros; only 1: rewrite eq_option_alt; only 1: intros ?; only 1: rewrite <- find_mapsto_iff; only 1: rewrite remove_mapsto_iff; only 1: intuition; only 1: easy; only 1: easy).	0.075237	9
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_neq_o	120	0.0.0.0.0.1.0	synth with cache (only 1: intros; only 1: rewrite eq_option_alt; only 1: intros ?; only 1: rewrite <- find_mapsto_iff; only 1: rewrite remove_neq_mapsto_iff; only 1: intuition; only 1: intuition).	0.041332	8
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_o	120	0.0.0.0	synth with cache (only 1: intros; only 1: destruct eq_dec; only 1: auto with map; only 1: auto with map).	0.029254	4
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_eq_b	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite mem_find_b; only 1: rewrite remove_eq_o; only 1: auto; only 1: auto).	0.028511	5
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_neq_b	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite mem_find_b; only 1: rewrite mem_find_b; only 1: rewrite remove_neq_o; only 1: auto; only 1: auto).	0.028645	6
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_b	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite mem_find_b; only 1: rewrite mem_find_b; only 1: rewrite remove_o; only 1: unfold eqb; only 1: destruct eq_dec; only 1: auto; only 1: auto).	0.036003	8
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.map_o	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.map_b	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite mem_find_b; only 1: rewrite mem_find_b; only 1: rewrite map_o; only 1: destruct find; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.031113	9
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.mapi_b	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.mapi_o	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.map2_1bis	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.elements_o	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.elements_b	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.Equalities.Equal_mapsto_iff	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: split; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite find_mapsto_iff; only 1: rewrite find_mapsto_iff; only 1: rewrite H; only 1: split; only 1: auto; only 1: auto; only 1: intros ?; only 1: intros ?; only 1: rewrite eq_option_alt; only 1: intros ?; only 1: rewrite <- find_mapsto_iff; only 1: rewrite <- find_mapsto_iff; only 1: auto).	0.120187	19
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.Equalities.Equal_Equiv	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.Equalities.Cmp.Equiv_Equivb	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Equivb; only 1: unfold Equiv; only 1: unfold Cmp; only 1: intuition; only 1: red in H; only 1: rewrite H; only 1: eauto; only 1: red in H; only 1: rewrite <- H; only 1: eauto).	0.092128	10
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.Equalities.Equal_Equivb	120	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Equal_Equiv; only 1: apply Equiv_Equivb; only 1: auto).	0.027038	4
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.Equalities.Equal_Equivb_eqdec	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Equal_Equivb; only 1: unfold cmp; only 1: clear cmp; only 1: intros; only 1: destruct eq_elt_dec; only 1: intuition; only 1: intuition; only 1: easy).	0.071060	9
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.Equal_refl	120	0.0	synth with cache (only 1: red; only 1: reflexivity).	0.022480	2
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.Equal_sym	120	0.0	synth with cache (only 1: unfold Equal; only 1: auto).	0.027660	2
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.Equal_trans	120	0.0	synth with cache (only 1: unfold Equal; only 1: congruence).	0.024530	2
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.Equal_ST	120	0.0.0.0.0.0.0	synth with cache (only 1: constructor; only 1: red; only 1: apply Equal_refl; only 1: red; only 1: apply Equal_sym; only 1: red; only 1: apply Equal_trans).	0.025202	7
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.In_m_Proper	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.MapsTo_m_Proper	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.Empty_m_Proper	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Empty; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: split; only 1: intros; only 1: intros ?; only 1: rewrite <- H in H1; only 1: eapply H0; only 1: eapply H1; only 1: intros; only 1: intros ?; only 1: rewrite H in H1; only 1: eapply H0; only 1: eapply H1).	0.079332	15
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.is_empty_m_Proper	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite eq_bool_alt; only 1: rewrite <- is_empty_iff; only 1: rewrite <- is_empty_iff; only 1: rewrite H; only 1: intuition).	0.035510	8
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.mem_m_Proper	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite eq_bool_alt; only 1: rewrite <- mem_in_iff; only 1: rewrite <- mem_in_iff; only 1: rewrite H; only 1: rewrite H0; only 1: intuition).	0.054956	12
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.find_m_Proper	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite eq_option_alt; only 1: intros ?; only 1: rewrite <- find_mapsto_iff; only 1: rewrite <- find_mapsto_iff; only 1: rewrite H; only 1: rewrite H0; only 1: split; only 1: auto; only 1: auto).	0.058696	15
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.add_m_Proper	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite add_o; only 1: rewrite add_o; only 1: destruct eq_dec; only 1: destruct eq_dec; only 1: auto; only 1: elim n; only 1: rewrite <- H; only 1: auto; only 1: destruct eq_dec; only 1: elim n; only 1: rewrite H; only 1: auto; only 1: auto).	0.063448	21
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.remove_m_Proper	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite remove_o; only 1: rewrite remove_o; only 1: destruct eq_dec; only 1: destruct eq_dec; only 1: auto; only 1: elim n; only 1: rewrite <- H; only 1: auto; only 1: destruct eq_dec; only 1: elim n; only 1: rewrite H; only 1: auto; only 1: auto).	0.086919	20
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WFacts_fun.map_m_Proper	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite map_o; only 1: rewrite map_o; only 1: rewrite H; only 1: auto).	0.056635	9
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.eqk_equiv	120	0.0.0.0.0	synth with cache (only 1: unfold eq_key; only 1: split; only 1: eauto; only 1: eauto; only 1: eauto).	0.033098	5
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.eqke_equiv	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold eq_key_elt; only 1: split; only 1: red; only 1: firstorder; only 1: red; only 1: firstorder; only 1: red; only 1: firstorder; only 1: eauto with *; only 1: congruence).	0.050208	10
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.InA_eqke_eqk	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.NoDupA_eqk_eqke	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.findA_rev	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.elements_Empty	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.elements_empty	120	0.0	synth with cache (only 1: rewrite <- elements_Empty; only 1: apply empty_1).	0.029989	2
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.of_list_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.of_list_1b	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.of_list_2	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct x; only 1: rewrite <- elements_mapsto_iff; only 1: rewrite of_list_1; only 1: intuition; only 1: intuition).	0.042300	8
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.of_list_3	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite of_list_1b; only 1: rewrite elements_o; only 1: auto; only 1: apply elements_3w).	0.029771	6
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_spec_right	120	0.0.0	synth with cache (only 1: rewrite fold_1; only 1: symmetry; only 1: apply fold_left_rev_right).	0.031114	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_rec	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_rec_bis	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_rec_nodep	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_rec_weak	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply fold_rec_bis; only 1: auto; only 1: auto; only 1: auto).	0.037514	5
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetLogicalFacts.test_push	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_rel	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.map_induction	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.map_induction_bis	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetLogicalFacts.test_pull	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideAuxiliary.eq_refl_iff	120	0.0.0	synth with cache (only 1: split; only 1: easy; only 1: easy).	0.025076	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_identity	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_init	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_Empty	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideAuxiliary.dec_In	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_commutes	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideAuxiliary.dec_eq	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_trans_1	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_trans_2	120	0	synth with cache (only 1: fsetdec).	0.070734	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_Equal	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_neq_trans_1	120	0	synth with cache (only 1: fsetdec).	0.083463	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_Equal2	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_neq_trans_2	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_In_singleton	120	0	synth with cache (only 1: fsetdec).	0.031596	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_add_In	120	0	synth with cache (only 1: fsetdec).	0.071857	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_Subset_add_remove	120	0	synth with cache (only 1: fsetdec).	0.069008	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_Add	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_add	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply fold_Add; only 1: red; only 1: auto; only 1: red; only 1: auto).	0.032712	6
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_disjunction	120	0	synth with cache (only 1: fsetdec).	0.081449	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_fold	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite cardinal_1; only 1: rewrite fold_1; only 1: symmetry; only 1: apply fold_left_length).	0.028563	5
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_Empty	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite cardinal_1; only 1: rewrite elements_Empty; only 1: destruct elements; only 1: intuition; only 1: intuition; only 1: discriminate; only 1: discriminate).	0.079238	8
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_not_In_disj	120	0	synth with cache (only 1: fsetdec).	0.120240	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Equal_cardinal	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_1	120	0.0.0	synth with cache (only 1: intros; only 1: rewrite <- cardinal_Empty; only 1: auto).	0.029623	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_2	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_inv_1	120	0.0.0	synth with cache (only 1: intros; only 1: rewrite cardinal_Empty; only 1: auto).	0.024538	3
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_not_In_conj	120	0	synth with cache (only 1: fsetdec).	0.113662	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_inv_2	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_iff_conj	120	0	synth with cache (only 1: fsetdec).	0.072532	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_inv_2b	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Specs.filter_iff	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_set_ops_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Specs.for_all_iff	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Specs.exists_iff	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.eq_chain_test	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Disjoint_alt	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition.partition_iff_1	120	0.0.0.0.0.0	synth with cache (only 1: unfold partition; only 1: simpl; only 1: intros; only 1: subst m1; only 1: apply filter_iff; only 1: auto).	0.036982	6
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_too_complex	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.function_test_1	120	0	synth with cache (only 1: fsetdec).	0.081909	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition.partition_iff_2	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold partition; only 1: simpl; only 1: intros; only 1: subst m2; only 1: rewrite filter_iff; only 1: split; only 1: intros ?; only 1: destruct H; only 1: split; only 1: auto; only 1: destruct f; only 1: simpl in *; only 1: auto; only 1: simpl in *; only 1: auto; only 1: intros ?; only 1: destruct H; only 1: split; only 1: auto; only 1: rewrite H0; only 1: auto; only 1: red; only 1: red; only 1: red; only 1: intros; only 1: f_equal; only 1: apply Hf; only 1: auto; only 1: auto).	0.059242	29
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.function_test_2	120	0.0.0.0	synth with cache (only 1: intros until 3; only 1: intros ?; only 1: rewrite <- H2; only 1: fsetdec).	0.083696	4
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition.partition_Partition	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_baydemir	120	0	synth with cache (only 1: fsetdec).	0.072085	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_In	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Disjoint_sym	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_sym	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: split; only 1: apply Disjoint_sym; only 1: auto; only 1: intros; only 1: rewrite H0; only 1: intuition).	0.055279	11
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_Empty	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_Add	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_fold	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_cardinal	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_partition	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.update_mapsto_iff	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.update_dec	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.update_in_iff	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.diff_mapsto_iff	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold diff; only 1: rewrite filter_iff; only 1: intuition; only 1: rewrite mem_1 in *; only 1: discriminate; only 1: auto; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: clear H0; only 1: clear y0; only 1: clear x0; only 1: rewrite H; only 1: auto).	0.086920	21
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.diff_in_iff	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: split; only 1: intros ?; only 1: destruct H; only 1: rewrite diff_mapsto_iff in H; only 1: destruct H; only 1: split; only 1: exists x; only 1: auto; only 1: auto; only 1: intros ?; only 1: destruct H; only 1: destruct H; only 1: exists x; only 1: rewrite diff_mapsto_iff; only 1: auto).	0.053982	18
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.restrict_mapsto_iff	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold restrict; only 1: rewrite filter_iff; only 1: intuition; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: clear H0; only 1: clear y0; only 1: clear x0; only 1: rewrite H; only 1: auto).	0.085376	18
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Elt.restrict_in_iff	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: split; only 1: intros ?; only 1: destruct H; only 1: rewrite restrict_mapsto_iff in H; only 1: destruct H; only 1: split; only 1: exists x; only 1: auto; only 1: auto; only 1: intros ?; only 1: destruct H; only 1: destruct H; only 1: exists x; only 1: rewrite restrict_mapsto_iff; only 1: auto).	0.046972	18
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.cardinal_m_Proper	120	0.0.0	synth with cache (only 1: intros; only 1: apply Equal_cardinal; only 1: auto).	0.026162	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Disjoint_m_Proper	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold Disjoint; only 1: split; only 1: intros; only 1: rewrite <- H; only 1: rewrite <- H0; only 1: auto; only 1: intros; only 1: rewrite H; only 1: rewrite H0; only 1: auto).	0.143577	16
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.Partition_m_Proper	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold Partition; only 1: rewrite <- H0; only 1: rewrite <- H1; only 1: split; only 1: intros ?; only 1: destruct H2; only 1: split; only 1: auto; only 1: intros; only 1: rewrite <- H; only 1: rewrite <- H0; only 1: rewrite <- H1; only 1: auto; only 1: intros ?; only 1: destruct H2; only 1: split; only 1: auto; only 1: intros; only 1: rewrite H; only 1: rewrite H0; only 1: rewrite H1; only 1: auto).	0.187757	31
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.update_m_Proper	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.restrict_m_Proper	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake_ord.cons_Cmp	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake_ord.compare_end_Cmp	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.WProperties_fun.diff_m_Proper	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.sort_equivlistA_eqlistA	120	0.0.0.0	synth with cache (only 1: apply SortA_equivlistA_eqlistA; only 1: eauto with *; only 1: eauto with *; only 1: eauto with *).	0.035342	4
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake_ord.compare_more_Cmp	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake_ord.compare_cont_Cmp	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.gtb_1	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct p; only 1: intros ?; only 1: destruct p'; only 1: unfold gtb; only 1: unfold O.ltk; only 1: simpl; only 1: destruct E.compare; only 1: intuition; only 1: discriminate; only 1: order; only 1: intuition; only 1: discriminate; only 1: order; only 1: intuition).	0.085891	15
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake_ord.compare_Cmp	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake_ord.compare	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.leb_1	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct p; only 1: intros ?; only 1: destruct p'; only 1: unfold leb; only 1: unfold gtb; only 1: unfold O.ltk; only 1: simpl; only 1: destruct E.compare; only 1: intuition; only 1: order; only 1: intuition; only 1: order; only 1: intuition).	0.093747	14
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake_ord.eq_seq	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake_ord.lt_slt	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.gtb_compat	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.leb_compat	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: red; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold leb; only 1: f_equal; only 1: apply gtb_compat; only 1: auto).	0.030156	9
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake_ord.eq_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake_ord.eq_2	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.elements_split	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake_ord.eq_refl	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake_ord.eq_sym	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake_ord.eq_trans	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake_ord.lt_trans	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.elements_Add	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.elements_Add_Above	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.elements_Add_Below	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.elements_Equal_eqlistA	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply sort_equivlistA_eqlistA; only 1: auto with *; only 1: auto with *; only 1: red; only 1: intros; only 1: destruct x; only 1: rewrite <- elements_mapsto_iff; only 1: rewrite <- elements_mapsto_iff; only 1: rewrite find_mapsto_iff; only 1: rewrite find_mapsto_iff; only 1: rewrite H; only 1: split; only 1: auto; only 1: auto).	0.055437	15
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.max_elt_Above	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapAVL.IntMake_ord.lt_not_eq	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.max_elt_MapsTo	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold max_elt in *; only 1: rewrite elements_mapsto_iff; only 1: induction elements; only 1: discriminate; only 1: destruct a; only 1: destruct l; only 1: simpl in *; only 1: injection H; only 1: intros; only 1: subst; only 1: constructor; only 1: red; only 1: auto with ordered_type; only 1: simpl in *; only 1: constructor 2; only 1: auto).	0.071562	17
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.max_elt_Empty	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.min_elt_Below	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.min_elt_MapsTo	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold min_elt in *; only 1: rewrite elements_mapsto_iff; only 1: destruct elements; only 1: discriminate; only 1: destruct p; only 1: injection H; only 1: intros; only 1: subst; only 1: constructor; only 1: red; only 1: auto with ordered_type).	0.073175	12
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.min_elt_Empty	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold min_elt in *; only 1: rewrite elements_Empty; only 1: destruct elements; only 1: auto; only 1: destruct p; only 1: discriminate).	0.043071	7
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Induction_Principles.map_induction_max	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Induction_Principles.map_induction_min	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Fold_properties.fold_Equal	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Fold_properties.fold_Add_Above	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapFacts.OrdProperties.Elt.Fold_properties.fold_Add_Below	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetLogicalFacts.test_push	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetLogicalFacts.test_pull	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideAuxiliary.eq_refl_iff	120	0.0.0	synth with cache (only 1: split; only 1: easy; only 1: easy).	0.022393	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideAuxiliary.dec_In	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideAuxiliary.dec_eq	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_trans_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_trans_2	120	0	synth with cache (only 1: fsetdec).	0.089605	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_neq_trans_1	120	0	synth with cache (only 1: fsetdec).	0.092123	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_neq_trans_2	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_In_singleton	120	0	synth with cache (only 1: fsetdec).	0.028326	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_add_In	120	0	synth with cache (only 1: fsetdec).	0.051720	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_Subset_add_remove	120	0	synth with cache (only 1: fsetdec).	0.056937	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_disjunction	120	0	synth with cache (only 1: fsetdec).	0.079853	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_not_In_disj	120	0	synth with cache (only 1: fsetdec).	0.097975	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_not_In_conj	120	0	synth with cache (only 1: fsetdec).	0.116440	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_iff_conj	120	0	synth with cache (only 1: fsetdec).	0.082698	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_set_ops_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.eq_chain_test	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_too_complex	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.function_test_1	120	0	synth with cache (only 1: fsetdec).	0.070248	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.function_test_2	120	0.0.0.0	synth with cache (only 1: intros until 3; only 1: intros ?; only 1: rewrite <- H2; only 1: fsetdec).	0.088095	4
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_baydemir	120	0	synth with cache (only 1: fsetdec).	0.066179	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetCompat.Backport_Sets.lt_not_eq	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetCompat.Backport_Sets.compare	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetCompat.Update_WSets.In_compat	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: subst; only 1: apply MF.In_eq_iff; only 1: auto).	0.025839	9
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetCompat.Update_WSets.Spec.mem_spec	120	0.0	synth with cache (only 1: symmetry; only 1: apply MF.mem_iff).	0.019842	2
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetCompat.Update_WSets.Spec.equal_spec	120	0.0	synth with cache (only 1: symmetry; only 1: apply MF.equal_iff).	0.018664	2
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetCompat.Update_WSets.Spec.subset_spec	120	0.0	synth with cache (only 1: symmetry; only 1: apply MF.subset_iff).	0.018011	2
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetCompat.Update_WSets.Spec.is_empty_spec	120	0.0	synth with cache (only 1: symmetry; only 1: apply MF.is_empty_iff).	0.021349	2
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetCompat.Update_WSets.Spec.add_spec	120	0.0	synth with cache (only 1: rewrite MF.add_iff; only 1: intuition).	0.114120	2
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetCompat.Update_WSets.Spec.remove_spec	120	0.0	synth with cache (only 1: rewrite MF.remove_iff; only 1: intuition).	0.026820	2
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.In_1	120	0.0.0	synth with cache (only 1: intros ?; only 1: rewrite H; only 1: auto).	0.024527	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetCompat.Update_WSets.Spec.singleton_spec	120	0.0	synth with cache (only 1: rewrite MF.singleton_iff; only 1: intuition).	0.029582	2
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.mem_1	120	0.0.0	synth with cache (only 1: intros; only 1: apply <- mem_spec; only 1: auto).	0.042341	3
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.mem_2	120	0.0.0	synth with cache (only 1: intros; only 1: apply -> mem_spec; only 1: auto).	0.024613	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetCompat.Update_WSets.Spec.elements_spec1	120	0.0	synth with cache (only 1: symmetry; only 1: apply MF.elements_iff).	0.022452	2
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.equal_1	120	0.0.0	synth with cache (only 1: intros; only 1: apply <- equal_spec; only 1: auto).	0.022593	3
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.equal_2	120	0.0.0	synth with cache (only 1: intros; only 1: apply -> equal_spec; only 1: auto).	0.026934	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetCompat.Update_WSets.Spec.for_all_spec	120	0.0.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply MF.for_all_iff; only 1: auto).	0.028303	4
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.subset_1	120	0.0.0	synth with cache (only 1: intros; only 1: apply <- subset_spec; only 1: auto).	0.024357	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetCompat.Update_WSets.Spec.exists_spec	120	0.0.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply MF.exists_iff; only 1: auto).	0.027108	4
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.subset_2	120	0.0.0	synth with cache (only 1: intros; only 1: apply -> subset_spec; only 1: auto).	0.023053	3
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.is_empty_1	120	0.0.0	synth with cache (only 1: intros; only 1: apply <- is_empty_spec; only 1: auto).	0.022441	3
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.is_empty_2	120	0.0.0	synth with cache (only 1: intros; only 1: apply -> is_empty_spec; only 1: auto).	0.022900	3
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.add_1	120	0.0.0	synth with cache (only 1: intros; only 1: apply <- add_spec; only 1: auto with relations).	0.027118	3
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.add_2	120	0.0.0	synth with cache (only 1: intros; only 1: apply <- add_spec; only 1: auto).	0.020227	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetCompat.Update_Sets.lt_strorder	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.add_3	120	0.0.0.0.0.0.0	synth with cache (only 1: rewrite add_spec; only 1: intros ?; only 1: intros ?; only 1: destruct H0; only 1: elim H; only 1: auto with relations; only 1: auto).	0.033401	7
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.remove_1	120	0.0.0	synth with cache (only 1: intros; only 1: rewrite remove_spec; only 1: intuition).	0.026436	3
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.remove_2	120	0.0.0	synth with cache (only 1: intros; only 1: apply <- remove_spec; only 1: auto with relations).	0.027594	3
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.remove_3	120	0.0	synth with cache (only 1: rewrite remove_spec; only 1: intuition).	0.025388	2
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetCompat.Update_Sets.lt_compat	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetCompat.Update_Sets.compare_spec	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold compare; only 1: destruct M.compare; only 1: auto; only 1: auto; only 1: auto).	0.024948	6
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.singleton_1	120	0.0	synth with cache (only 1: rewrite singleton_spec; only 1: auto with relations).	0.023509	2
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.singleton_2	120	0.0	synth with cache (only 1: rewrite singleton_spec; only 1: auto with relations).	0.025693	2
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.union_1	120	0.0	synth with cache (only 1: rewrite union_spec; only 1: auto).	0.106039	2
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.union_2	120	0.0	synth with cache (only 1: rewrite union_spec; only 1: auto).	0.026982	2
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.union_3	120	0.0	synth with cache (only 1: rewrite union_spec; only 1: auto).	0.029633	2
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.inter_1	120	0.0	synth with cache (only 1: rewrite inter_spec; only 1: intuition).	0.027227	2
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.inter_2	120	0.0	synth with cache (only 1: rewrite inter_spec; only 1: intuition).	0.023494	2
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.inter_3	120	0.0	synth with cache (only 1: rewrite inter_spec; only 1: intuition).	0.028878	2
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.diff_1	120	0.0	synth with cache (only 1: rewrite diff_spec; only 1: intuition).	0.027097	2
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.diff_2	120	0.0	synth with cache (only 1: rewrite diff_spec; only 1: intuition).	0.025430	2
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.diff_3	120	0.0	synth with cache (only 1: rewrite diff_spec; only 1: auto).	0.028779	2
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.filter_1	120	0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite filter_spec; only 1: intuition; only 1: intuition).	0.029807	4
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.filter_2	120	0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite filter_spec; only 1: intuition; only 1: intuition).	0.054006	4
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.filter_3	120	0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite filter_spec; only 1: intuition; only 1: intuition).	0.036507	4
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.for_all_1	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply <- for_all_spec; only 1: auto; only 1: auto).	0.028033	4
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.for_all_2	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply -> for_all_spec; only 1: auto; only 1: auto).	0.029832	4
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.exists_1	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply <- exists_spec; only 1: auto; only 1: auto).	0.029740	4
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.exists_2	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply -> exists_spec; only 1: auto; only 1: auto).	0.030220	4
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.elements_1	120	0.0.0	synth with cache (only 1: intros; only 1: apply <- elements_spec1; only 1: auto).	0.023962	3
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.ImplSpec.elements_2	120	0.0.0	synth with cache (only 1: intros; only 1: apply -> elements_spec1; only 1: auto).	0.023878	3
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ_morph	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.In_eq_iff	120	0.0.0	synth with cache (only 1: intros ?; only 1: rewrite H; only 1: intuition).	0.034246	3
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.mem_iff	120	0.0	synth with cache (only 1: apply iff_sym; only 1: apply mem_spec).	0.029642	2
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.not_mem_iff	120	0.0.0.0	synth with cache (only 1: rewrite <- mem_spec; only 1: destruct mem; only 1: intuition; only 1: intuition).	0.030685	4
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.equal_iff	120	0.0	synth with cache (only 1: apply iff_sym; only 1: apply equal_spec).	0.019012	2
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.subset_iff	120	0.0	synth with cache (only 1: apply iff_sym; only 1: apply subset_spec).	0.018971	2
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.empty_iff	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.is_empty_iff	120	0.0	synth with cache (only 1: apply iff_sym; only 1: apply is_empty_spec).	0.018684	2
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.singleton_iff	120	0.0	synth with cache (only 1: rewrite singleton_spec; only 1: intuition).	0.026760	2
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.add_iff	120	0.0	synth with cache (only 1: rewrite add_spec; only 1: intuition).	0.036218	2
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.add_neq_iff	120	0.0.0.0	synth with cache (only 1: rewrite add_spec; only 1: intuition; only 1: elim H; only 1: auto with relations).	0.061687	4
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.remove_iff	120	0.0	synth with cache (only 1: rewrite remove_spec; only 1: intuition).	0.036728	2
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.remove_neq_iff	120	0.0	synth with cache (only 1: rewrite remove_spec; only 1: intuition).	0.046065	2
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.for_all_iff	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply iff_sym; only 1: apply for_all_spec; only 1: auto).	0.027905	4
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.exists_iff	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply iff_sym; only 1: apply exists_spec; only 1: auto).	0.027347	4
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.IffSpec.elements_iff	120	0.0	synth with cache (only 1: apply iff_sym; only 1: apply elements_spec1).	0.026465	2
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.mem_b	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.empty_b	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.add_b	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.add_neq_b	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.remove_b	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.remove_neq_b	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.singleton_b	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.union_b	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.inter_b	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.diff_b	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.elements_b	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.filter_b	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.for_all_b	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.BoolSpec.exists_b	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.In_m	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.Empty_m	120	0.0.0.0.0.1.0.0.0	synth with cache (only 1: red; only 1: red; only 1: red; only 1: unfold Empty; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: setoid_rewrite H; only 1: auto).	0.047813	10
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.is_empty_m	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.mem_m	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.singleton_m	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite singleton_iff; only 1: rewrite singleton_iff; only 1: rewrite H; only 1: intuition).	0.037447	8
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.add_m	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite add_iff; only 1: rewrite add_iff; only 1: rewrite H; only 1: rewrite H0; only 1: intuition).	0.063050	12
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.remove_m	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite remove_iff; only 1: rewrite remove_iff; only 1: rewrite H; only 1: rewrite H0; only 1: intuition).	0.074846	12
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.union_m	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite union_spec; only 1: rewrite union_spec; only 1: rewrite H; only 1: rewrite H0; only 1: intuition).	0.073042	12
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.inter_m	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite inter_spec; only 1: rewrite inter_spec; only 1: rewrite H; only 1: rewrite H0; only 1: intuition).	0.055521	12
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.diff_m	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite diff_spec; only 1: rewrite diff_spec; only 1: rewrite H; only 1: rewrite H0; only 1: intuition).	0.055273	12
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.Subset_m	120	0.0.0	synth with cache (only 1: unfold Equal; only 1: unfold Subset; only 1: firstorder).	0.033583	3
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.subset_m	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.equal_m	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.SubsetSetoid	120	0	synth with cache (only 1: firstorder).	0.025467	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.In_s_m	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.Empty_s_m	120	0	synth with cache (only 1: firstorder).	0.024342	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.add_s_m	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite add_iff; only 1: rewrite add_iff; only 1: rewrite H; only 1: intuition).	0.055126	11
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.In_eq_iff	120	0.0.0.0.1	synth with cache (only 1: split; only 1: apply In_1; only 1: auto; only 1: apply In_1; only 1: auto).	0.041396	7
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.mem_iff	120	0.1.1	synth with cache (only 1: split; only 1: apply mem_1; only 1: apply mem_2).	0.025321	5
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.remove_s_m	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite remove_iff; only 1: rewrite remove_iff; only 1: rewrite H; only 1: intuition).	0.064531	11
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.not_mem_iff	120	0.0.0.0	synth with cache (only 1: rewrite mem_iff; only 1: destruct mem; only 1: intuition; only 1: intuition).	0.033335	4
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.equal_iff	120	1.1.1	synth with cache (only 1: split; only 1: apply equal_1; only 1: apply equal_2).	0.029508	6
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.union_s_m	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite union_spec; only 1: rewrite union_spec; only 1: intuition).	0.063091	10
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.subset_iff	120	1.1.1	synth with cache (only 1: split; only 1: apply subset_1; only 1: apply subset_2).	0.042403	6
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.inter_s_m	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite inter_spec; only 1: rewrite inter_spec; only 1: intuition).	0.048962	10
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.empty_iff	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.is_empty_iff	120	0.1.1	synth with cache (only 1: split; only 1: apply is_empty_1; only 1: apply is_empty_2).	0.027900	5
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.diff_s_m	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite diff_spec; only 1: rewrite diff_spec; only 1: rewrite H; only 1: rewrite H0; only 1: intuition).	0.114497	12
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.singleton_iff	120	0.0.0	synth with cache (only 1: split; only 1: apply singleton_1; only 1: apply singleton_2).	0.025906	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.add_iff	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.add_neq_iff	120	0.0.0.0	synth with cache (only 1: split; only 1: apply add_3; only 1: auto; only 1: apply add_2).	0.024813	4
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.filter_equal	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite filter_spec; only 1: rewrite filter_spec; only 1: rewrite H0; only 1: intuition; only 1: auto; only 1: auto).	0.050008	12
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.remove_iff	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.remove_neq_iff	120	0.0.0.0	synth with cache (only 1: split; only 1: apply remove_3; only 1: apply remove_2; only 1: auto).	0.025558	4
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.filter_subset	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite filter_spec; only 1: rewrite filter_spec; only 1: rewrite H0; only 1: intuition; only 1: auto; only 1: auto).	0.062773	12
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.union_iff	120	0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: apply union_1; only 1: destruct 1; only 1: apply union_2; only 1: auto; only 1: apply union_3; only 1: auto).	0.025140	7
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.inter_iff	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: split; only 1: apply inter_1 with s'; only 1: auto; only 1: apply inter_2 with s; only 1: auto; only 1: destruct 1; only 1: apply inter_3; only 1: auto; only 1: auto).	0.028500	10
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetFacts.WFactsOn.filter_ext	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite filter_spec; only 1: rewrite filter_spec; only 1: rewrite H0; only 1: rewrite H1; only 1: intuition; only 1: red; only 1: red; only 1: intros; only 1: rewrite <- H0; only 1: rewrite <- H0; only 1: auto; only 1: auto).	0.074302	20
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.diff_iff	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: split; only 1: apply diff_1 with s'; only 1: auto; only 1: apply diff_2 with s; only 1: auto; only 1: destruct 1; only 1: apply diff_3; only 1: auto; only 1: auto).	0.027522	10
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.filter_iff	120	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: split; only 1: apply filter_1 with f; only 1: auto; only 1: auto; only 1: apply filter_2 with s; only 1: auto; only 1: auto; only 1: destruct 1; only 1: apply filter_3; only 1: auto; only 1: auto; only 1: auto).	0.031832	13
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.for_all_iff	120	0.0.0.0.0	synth with cache (only 1: split; only 1: apply for_all_1; only 1: auto; only 1: apply for_all_2; only 1: auto).	0.028084	5
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.exists_iff	120	0.0.0.0.0	synth with cache (only 1: split; only 1: apply exists_1; only 1: auto; only 1: apply exists_2; only 1: auto).	0.031734	5
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.IffSpec.elements_iff	120	1.1.1	synth with cache (only 1: split; only 1: apply elements_1; only 1: apply elements_2).	0.029760	6
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.mem_b	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.empty_b	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.add_b	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.add_neq_b	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.remove_b	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.remove_neq_b	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.singleton_b	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.union_b	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.inter_b	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.diff_b	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.elements_b	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_lt_reg_r	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.filter_b	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_reg_l	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: intros ?; only 1: apply H; only 1: clear H; only 1: apply CReal_plus_lt_compat_l; only 1: exact H0).	0.039731	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_reg_r	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: intros ?; only 1: apply H; only 1: clear H; only 1: apply CReal_plus_lt_compat_r; only 1: exact H0).	0.029395	6
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.for_all_b	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_compat_l	120	0.0.0.0	synth with cache (only 1: intros; only 1: intros ?; only 1: apply CReal_plus_lt_reg_l in H0; only 1: contradiction).	0.034669	4
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.exists_b	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.E_ST	120	0.0.0.0.0.0.0	synth with cache (only 1: constructor; only 1: red; only 1: apply E.eq_refl; only 1: red; only 1: apply E.eq_sym; only 1: red; only 1: apply E.eq_trans).	0.031632	7
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.Equal_ST	120	0.0.0.0.0.0.0	synth with cache (only 1: constructor; only 1: red; only 1: apply eq_refl; only 1: red; only 1: apply eq_sym; only 1: red; only 1: apply eq_trans).	0.034351	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_lt_compat	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.In_m	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.is_empty_m	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.Empty_m	120	0.0.0.0.0.0.0.0	synth with cache (only 1: red; only 1: red; only 1: red; only 1: intros; only 1: rewrite is_empty_iff; only 1: rewrite is_empty_iff; only 1: rewrite H; only 1: intuition).	0.068091	8
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_compat	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.mem_m	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.singleton_m	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite singleton_iff; only 1: rewrite singleton_iff; only 1: rewrite H; only 1: intuition).	0.041761	8
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_opp_r	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_opp_l	120	0.0.0	synth with cache (only 1: intros ?; only 1: rewrite CReal_plus_comm; only 1: apply CReal_plus_opp_r).	0.029825	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.add_m	120	0.0.0.0.0.0.0.0.0.0.0.0.1	synth with cache (only 1: unfold Equal; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite add_iff; only 1: rewrite add_iff; only 1: rewrite H; only 1: rewrite H0; only 1: intuition).	0.112599	20
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_proper_r	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_proper_l	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros ?; only 1: apply CReal_plus_lt_reg_l in H0; only 1: destruct H; only 1: contradiction; only 1: intros ?; only 1: apply CReal_plus_lt_reg_l in H0; only 1: destruct H; only 1: contradiction).	0.038145	10
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.remove_m	120	0.0.0.0.0.0.0.0.0.0.0.0.1	synth with cache (only 1: unfold Equal; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite remove_iff; only 1: rewrite remove_iff; only 1: rewrite H; only 1: rewrite H0; only 1: intuition).	0.078998	20
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_morph_Proper	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_morph_T	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply CReal_plus_morph; only 1: assumption; only 1: assumption).	0.031883	9
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_plus_eq_reg_l	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.union_m	120	0.0.0.0.0.0.0.0.0.0.0.0.1	synth with cache (only 1: unfold Equal; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite union_iff; only 1: rewrite union_iff; only 1: rewrite H; only 1: rewrite H0; only 1: intuition).	0.100201	20
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_opp_0	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.inter_m	120	0.0.0.0.0.0.0.0.0.0.0.0.1	synth with cache (only 1: unfold Equal; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite inter_iff; only 1: rewrite inter_iff; only 1: rewrite H; only 1: rewrite H0; only 1: intuition).	0.084513	20
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_opp_plus_distr	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_opp_involutive	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.diff_m	120	0.0.0.0.0.0.0.0.0.0.0.0.1	synth with cache (only 1: unfold Equal; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite diff_iff; only 1: rewrite diff_iff; only 1: rewrite H; only 1: rewrite H0; only 1: intuition).	0.083476	20
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.Subset_m	120	0.0.0	synth with cache (only 1: unfold Equal; only 1: unfold Subset; only 1: firstorder).	0.048451	3
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Algebra.poly_mul_compat	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.subset_m	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.equal_m	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.Subset_refl	120	0.0	synth with cache (only 1: red; only 1: auto).	0.028310	2
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.Subset_trans	120	0.0	synth with cache (only 1: unfold Subset; only 1: eauto).	0.032331	2
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Algebra.poly_add_valid_compat	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.In_s_m	120
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Algebra.poly_mul_cst_valid_compat	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_opp_gt_lt_contravar	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.Empty_s_m_Proper	120	0.0.0.0	synth with cache (only 1: unfold Subset; only 1: unfold Empty; only 1: unfold impl; only 1: firstorder).	0.035788	4
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Algebra.poly_mul_mon_null_compat	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: induction p; only 1: simpl; only 1: case_decide; only 1: inversion 1; only 1: intuition; only 1: inversion 1; only 1: simpl; only 1: case_decide; only 1: inversion 1; only 1: inversion 1).	0.045796	12
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.add_s_m_Proper	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Subset; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite add_iff; only 1: rewrite add_iff; only 1: rewrite H; only 1: intuition).	0.070887	12
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.remove_s_m_Proper	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Subset; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite remove_iff; only 1: rewrite remove_iff; only 1: rewrite H; only 1: intuition).	0.064123	12
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.union_s_m_Proper	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite union_iff; only 1: rewrite union_iff; only 1: intuition).	0.063678	10
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.inter_s_m_Proper	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite inter_iff; only 1: rewrite inter_iff; only 1: intuition).	0.058092	10
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.diff_s_m_Proper	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Subset; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite diff_iff; only 1: rewrite diff_iff; only 1: intuition).	0.067575	11
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.CReal_opp_ge_le_contravar	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.filter_equal	120	0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Equal; only 1: intros; only 1: rewrite filter_iff; only 1: rewrite filter_iff; only 1: rewrite H0; only 1: tauto; only 1: auto; only 1: auto).	0.055293	8
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.inject_Q_plus	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intros ?; only 1: destruct H; only 1: simpl in q0; only 1: ring_simplify in q0; only 1: discriminate; only 1: intros ?; only 1: destruct H; only 1: simpl in q0; only 1: ring_simplify in q0; only 1: discriminate).	0.104493	11
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.inject_Q_one	120	0	synth with cache (only 1: reflexivity).	0.035689	1
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Algebra.poly_mul_mon_valid_compat	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.filter_ext	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite filter_iff; only 1: rewrite filter_iff; only 1: rewrite H0; only 1: rewrite H1; only 1: intuition; only 1: red; only 1: red; only 1: red; only 1: intros; only 1: rewrite <- H0; only 1: rewrite <- H0; only 1: auto; only 1: auto).	0.134251	21
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetFacts.WFacts_fun.filter_subset	120	0.0.0.0.0.0	synth with cache (only 1: unfold Subset; only 1: intros; only 1: rewrite filter_iff in *; only 1: intuition; only 1: intuition; only 1: intuition).	0.038446	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.inject_Q_lt	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.opp_inject_Q	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intros ?; only 1: destruct H; only 1: simpl in q0; only 1: ring_simplify in q0; only 1: discriminate; only 1: intros ?; only 1: destruct H; only 1: simpl in q0; only 1: ring_simplify in q0; only 1: discriminate).	0.101974	11
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.lt_inject_Q	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.le_inject_Q	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.inject_Q_le	120
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Algebra.poly_mul_valid_compat	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.inject_Z_plus	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalZ.of_to	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct z; only 1: simpl; only 1: trivial; only 1: simpl; only 1: unfold BinIntDef.Z.of_uint; only 1: rewrite DecimalPos.Unsigned.of_to; only 1: destruct p; only 1: easy; only 1: easy; only 1: easy; only 1: simpl; only 1: unfold BinIntDef.Z.of_uint; only 1: rewrite DecimalPos.Unsigned.of_to; only 1: destruct p; only 1: auto; only 1: auto; only 1: auto).	0.034220	17
coq-tactician-stdlib.8.11.dev	Coq.Reals.ConstructiveCauchyReals.opp_inject_Z	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalZ.to_of	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalZ.to_int_inj	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalZ.to_int_surj	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalZ.of_int_norm	120
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Algebra.poly_add_linear_compat	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalZ.of_inj	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- to_of; only 1: rewrite <- to_of; only 1: f_equal; only 1: easy).	0.019880	5
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.cO	120	0	synth with cache (only 1: exact ring0).	0.080611	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalZ.of_iff	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intros; only 1: rewrite <- to_of; only 1: rewrite <- to_of; only 1: f_equal; only 1: easy; only 1: intros ?; only 1: rewrite <- of_int_norm; only 1: rewrite H; only 1: apply of_int_norm).	0.025977	10
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.cI	120	0	synth with cache (only 1: exact ring0).	0.066464	1
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Reduce.reduce_aux_eval_compat	120
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Reduce.reduce_eval_compat	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: induction H; only 1: simpl; only 1: auto; only 1: simpl; only 1: case_decide; only 1: try_rewrite; only 1: rewrite <- reduce_aux_eval_compat; only 1: inversion H3; only 1: simpl; only 1: ring; only 1: auto; only 1: simpl; only 1: rewrite reduce_aux_eval_compat; only 1: try_rewrite; only 1: auto; only 1: auto).	0.121104	20
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.Peq_ok	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.Pphi0	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.Pphi1	120
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Reduce.reduce_aux_le_compat	120
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Reduce.linear_reduce_aux	120
coq-tactician-stdlib.8.11.dev	Coq.btauto.Algebra.Reduce.linear_reduce	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: induction H; only 1: simpl; only 1: constructor; only 1: simpl; only 1: case_decide; only 1: eapply linear_le_compat; only 1: eauto; only 1: zify; only 1: omega; only 1: constructor; only 1: auto; only 1: auto; only 1: auto; only 1: apply linear_reduce_aux; only 1: auto).	0.056983	18
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.mkPX_ok	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.PaddCl_ok	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.PmulC_aux_ok	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.PmulC_ok	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.Popp_ok	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.PaddXPX	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.append_assoc_0	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.append_assoc_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.append_neutral_r	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.append_neutral_l	120	0.0	synth with cache (only 1: simpl; only 1: auto).	0.017354	2
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.gempty	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.gss	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.gleaf	120	0	synth with cache (only 1: exact gempty).	0.016454	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.gso	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.rleaf	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.grs	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.gro	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_correct	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.elements_correct	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xfind_left	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_ii	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_io	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_oo	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_oi	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_ih	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_oh	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_hi	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_ho	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.find_xfind_h	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_complete	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.elements_complete	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.cardinal_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.mem_find	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.Empty_alt	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.Empty_Node	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.mem_1	120	0.0.0.0.0.0.0.0	synth with cache (only 1: unfold In; only 1: unfold MapsTo; only 1: intros ?; only 1: intros ?; only 1: rewrite mem_find; only 1: destruct 1; only 1: rewrite H; only 1: auto).	0.027775	8
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.mem_2	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold In; only 1: unfold MapsTo; only 1: intros ?; only 1: intros ?; only 1: rewrite mem_find; only 1: destruct find; only 1: exists a; only 1: auto; only 1: intros; only 1: discriminate).	0.029888	10
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.MapsTo_1	120	0.0.0	synth with cache (only 1: intros; only 1: rewrite <- H; only 1: auto).	0.034328	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.find_1	120	0.0	synth with cache (only 1: unfold MapsTo; only 1: auto).	0.019512	2
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.find_2	120	0.0	synth with cache (only 1: red; only 1: auto).	0.019629	2
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.empty_1	120	0.0	synth with cache (only 1: rewrite Empty_alt; only 1: apply gempty).	0.020013	2
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.is_empty_1	120	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite Empty_Node; only 1: intros ?; only 1: destruct H; only 1: destruct H0; only 1: subst; only 1: rewrite IHt0_1; only 1: simpl; only 1: auto; only 1: auto).	0.056603	13
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.is_empty_2	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.add_1	120	0.0.0.0.0	synth with cache (only 1: unfold MapsTo; only 1: intros ?; only 1: rewrite H; only 1: clear H; only 1: apply gss).	0.045328	5
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.add_2	120	0.0.0.0.0	synth with cache (only 1: unfold MapsTo; only 1: intros; only 1: rewrite gso; only 1: auto; only 1: auto).	0.023640	5
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.add_3	120	0.0.0.0.0	synth with cache (only 1: unfold MapsTo; only 1: intros ?; only 1: rewrite gso; only 1: auto; only 1: auto).	0.023180	5
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.remove_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.remove_2	120	0.0.0.0.0	synth with cache (only 1: unfold MapsTo; only 1: intros ?; only 1: rewrite gro; only 1: auto; only 1: auto).	0.023201	5
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.remove_3	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.elements_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.elements_2	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.xelements_bits_lt_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.xelements_bits_lt_2	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.xelements_sort	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.elements_3	120	0.0	synth with cache (only 1: unfold elements; only 1: apply xelements_sort).	0.021238	2
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.elements_3w	120	0.0	synth with cache (only 1: apply ME.Sort_NoDupA; only 1: apply elements_3).	0.018986	2
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.xgmapi	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.gmapi	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.mapi_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.mapi_2	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.map_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.map_2	120	0.0.0.0	synth with cache (only 1: intros; only 1: unfold map in *; only 1: eapply mapi_2; only 1: eauto).	0.025267	4
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.map2.xgmap2_l	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyComparison.Z_of_comparison_bound	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.map2.xgmap2_r	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.map2.gmap2	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.map2_1	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyComparison.Zcompare_spec	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.map2_2	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.Fold.xfoldi_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.fold_1	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold fold; only 1: unfold elements; only 1: rewrite xfoldi_1; only 1: reflexivity).	0.061322	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_lt_compat_r	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_gt_compat_r	120	0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply Rplus_lt_compat_r).	0.060690	4
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.equal_1	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_le_compat_l	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_ge_compat_l	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyBool.Z_of_bool_bound	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_le_compat_r	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_ge_compat_r	120	0	synth with cache (only 1: auto using Rplus_le_compat_r with rorders).	0.038136	1
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyBool.Z_eqb_isZero	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMap.equal_2	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyBool.Z_leb_sub	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_lt_compat	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.gsspec	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct PositiveOrderedTypeBits.eq_dec; only 1: intropattern subst -> e; only 1: apply gss; only 1: apply gso; only 1: auto).	0.035172	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_le_compat	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyBool.Z_ltb_leb	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyBool.Z_of_nat_eqb_iff	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Nat.eqb_compare; only 1: rewrite Z.eqb_compare; only 1: rewrite Nat2Z.inj_compare; only 1: reflexivity).	0.028823	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_gt_compat	120	0	synth with cache (only 1: auto using Rplus_lt_compat with rorders).	0.049279	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.gsident	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyBool.Z_of_nat_leb_iff	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Nat.leb_compare; only 1: rewrite Z.leb_compare; only 1: rewrite Nat2Z.inj_compare; only 1: reflexivity).	0.025313	5
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.xmap2_lr	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_ge_compat	120	0	synth with cache (only 1: auto using Rplus_le_compat with rorders).	0.041482	1
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyBool.Z_of_nat_ltb_iff	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Nat.ltb_compare; only 1: rewrite Z.ltb_compare; only 1: rewrite Nat2Z.inj_compare; only 1: reflexivity).	0.026272	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_lt_le_compat	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyBool.Z_eqb_ZSpec_ok	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_le_lt_compat	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyBool.leZeroSpec_ok	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.map2_commut	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_gt_ge_compat	120	0	synth with cache (only 1: auto using Rplus_lt_le_compat with rorders).	0.055881	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_ge_gt_compat	120	0	synth with cache (only 1: auto using Rplus_le_lt_compat with rorders).	0.055382	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_lt_0_compat	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros; only 1: apply Rlt_trans with r1; only 1: assumption; only 1: pattern r1 at 1; only 1: rewrite <- Rplus_0_r; only 1: apply Rplus_lt_compat_l; only 1: assumption).	0.063000	9
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_le_lt_0_compat	120	0.0.0.0.0.1.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros; only 1: apply Rle_lt_trans with r1; only 1: assumption; only 1: pattern r1 at 1; only 1: rewrite <- Rplus_0_r; only 1: apply Rplus_lt_compat_l; only 1: assumption).	0.050429	11
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_lt_le_0_compat	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros; only 1: rewrite <- Rplus_comm; only 1: apply Rplus_le_lt_0_compat; only 1: assumption; only 1: assumption).	0.044629	7
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutEq.Perm.multiplicity_In	120
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutEq.Perm.multiplicity_In_O	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite multiplicity_In; only 1: destruct multiplicity; only 1: auto; only 1: destruct 1; only 1: auto with arith).	0.036008	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_le_le_0_compat	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros; only 1: apply Rle_trans with r1; only 1: assumption; only 1: pattern r1 at 1; only 1: rewrite <- Rplus_0_r; only 1: apply Rplus_le_compat_l; only 1: assumption).	0.048846	9
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutEq.Perm.multiplicity_In_S	120	0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite multiplicity_In; only 1: auto).	0.028360	4
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutEq.Perm.multiplicity_NoDup	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.sum_inequa_Rle_lt	120
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutEq.Perm.NoDup_permut	120
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutEq.Perm.permut_In_In	120
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutEq.Perm.permut_cons_In	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: eapply permut_In_In; only 1: eauto; only 1: red; only 1: auto).	0.048627	5
coq-tactician-stdlib.8.11.dev	Coq.Classes.DecidableClass.Decidable_sound	120
coq-tactician-stdlib.8.11.dev	Coq.Classes.DecidableClass.Decidable_complete	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_lt_reg_l	120
coq-tactician-stdlib.8.11.dev	Coq.Classes.DecidableClass.Decidable_sound_alt	120
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutEq.Perm.permut_nil	120
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutEq.Perm.permutation_Permutation	120
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutEq.Perm.permut_length_1	120
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutEq.Perm.permut_length_2	120
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutEq.Perm.permut_length	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_lt_reg_r	120
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutEq.Perm.permutation_map	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_le_reg_l	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.In_1	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_le_reg_r	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.eq_refl	120	0.0.0	synth with cache (only 1: unfold eq; only 1: unfold Equal; only 1: reflexivity).	0.018654	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.eq_sym	120	0.0.0.0.0	synth with cache (only 1: unfold eq; only 1: unfold Equal; only 1: intros; only 1: symmetry; only 1: trivial).	0.019458	5
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.eq_trans	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold eq; only 1: unfold Equal; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite H; only 1: trivial).	0.029694	10
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_gt_reg_l	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.mem_1	120	0.0	synth with cache (only 1: unfold In; only 1: trivial).	0.017811	2
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.mem_2	120	0.0	synth with cache (only 1: unfold In; only 1: trivial).	0.018158	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_ge_reg_l	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply Rle_ge; only 1: apply Rplus_le_reg_l with r; only 1: auto with real).	0.074146	4
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.mem_Leaf	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.empty_1	120	0.0.0.0.0	synth with cache (only 1: unfold Empty; only 1: unfold In; only 1: intros ?; only 1: rewrite mem_Leaf; only 1: discriminate).	0.020499	5
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.mem_node	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: case o; only 1: trivial; only 1: destruct l; only 1: destruct r; only 1: destruct x; only 1: easy; only 1: easy; only 1: easy; only 1: trivial; only 1: trivial).	0.028962	14
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_le_reg_pos_r	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.is_empty_spec	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.is_empty_1	120	0.0.0	synth with cache (only 1: intros ?; only 1: rewrite is_empty_spec; only 1: trivial).	0.024978	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_lt_reg_pos_r	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.is_empty_2	120	0.0.0	synth with cache (only 1: intros ?; only 1: rewrite is_empty_spec; only 1: trivial).	0.024182	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_ge_reg_neg_r	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.subset_Leaf_s	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_gt_reg_neg_r	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_gt_lt_contravar	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Rlt_def; only 1: rewrite Rrepr_opp; only 1: rewrite Rrepr_opp; only 1: apply CRealLtForget; only 1: apply CReal_opp_gt_lt_contravar; only 1: unfold Rgt in H; only 1: rewrite Rlt_def in H; only 1: apply CRealLtEpsilon; only 1: exact H).	0.061069	10
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.subset_spec	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.subset_1	120	0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply -> subset_spec).	0.020367	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.subset_2	120	0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply <- subset_spec).	0.021380	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_lt_gt_contravar	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rgt; only 1: rewrite Rlt_def; only 1: rewrite Rrepr_opp; only 1: rewrite Rrepr_opp; only 1: apply CRealLtForget; only 1: apply CReal_opp_gt_lt_contravar; only 1: rewrite Rlt_def in H; only 1: apply CRealLtEpsilon; only 1: exact H).	0.087997	10
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.equal_subset	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.equal_spec	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_lt_contravar	120	0	synth with cache (only 1: auto with real).	0.063700	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.equal_1	120	0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply -> equal_spec).	0.020887	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.equal_2	120	0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply <- equal_spec).	0.018488	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_gt_contravar	120	0	synth with cache (only 1: auto with real).	0.059953	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.eq_dec	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.lex_Opp	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intropattern subst -> H; only 1: intros ?; only 1: intropattern subst -> H; only 1: case u'; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	0.038290	12
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.compare_bool_inv	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct b; only 1: intros ?; only 1: destruct b'; only 1: reflexivity; only 1: reflexivity; only 1: intros ?; only 1: destruct b'; only 1: reflexivity; only 1: reflexivity).	0.031592	10
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_le_ge_contravar	120	0.0.0.0.0.0.0	synth with cache (only 1: unfold Rge; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: auto with real; only 1: auto with real).	0.090944	7
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.compare_inv	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.lex_Eq	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: destruct u; only 1: intuition discriminate; only 1: intuition discriminate; only 1: intuition discriminate).	0.035203	6
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.compare_bool_Eq	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct b1; only 1: intros ?; only 1: destruct b2; only 1: intuition discriminate; only 1: intuition discriminate; only 1: intros ?; only 1: destruct b2; only 1: intuition discriminate; only 1: intuition discriminate).	0.031654	10
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_ge_le_contravar	120	0.0.0.0.0.0.0	synth with cache (only 1: unfold Rle; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: auto with real; only 1: auto with real).	0.087555	7
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.compare_equal	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.compare_gt	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold lt; only 1: intros ?; only 1: intros ?; only 1: rewrite compare_inv; only 1: case compare_fun; only 1: intros; only 1: discriminate; only 1: trivial; only 1: intros; only 1: discriminate).	0.023533	10
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_le_contravar	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: elim H; only 1: auto with real; only 1: auto with real).	0.059967	6
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.compare_eq	120	0.0.0.0.0	synth with cache (only 1: unfold eq; only 1: intros ?; only 1: intros ?; only 1: rewrite compare_equal; only 1: apply <- equal_spec).	0.029022	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_ge_contravar	120	0	synth with cache (only 1: auto using Ropp_le_contravar with real).	0.051872	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.compare	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_cxe	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_xce	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_0_lt_gt_contravar	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_lxl	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_gxg	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_xll	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_0_gt_lt_contravar	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_xgg	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_lt_gt_0_contravar	120	0.0.0	synth with cache (only 1: intros; only 1: rewrite <- Ropp_0; only 1: auto with real).	0.048055	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_gt_lt_0_contravar	120	0.0.0	synth with cache (only 1: intros; only 1: rewrite <- Ropp_0; only 1: auto with real).	0.046702	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_lex	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_0_le_ge_contravar	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_compare_bool	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct a; only 1: intros ?; only 1: destruct b; only 1: intros ?; only 1: destruct c; only 1: constructor; only 1: constructor; only 1: intros ?; only 1: destruct c; only 1: constructor; only 1: constructor; only 1: intros ?; only 1: destruct b; only 1: intros ?; only 1: destruct c; only 1: constructor; only 1: constructor; only 1: intros ?; only 1: destruct c; only 1: constructor; only 1: constructor).	0.056350	22
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.lt_spec.compare_x_Leaf	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite compare_inv; only 1: simpl; only 1: case is_empty; only 1: reflexivity; only 1: reflexivity).	0.024698	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_0_ge_le_contravar	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.lt_spec.compare_empty_x	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_lt_cancel	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.lt_spec.compare_x_empty	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_gt_cancel	120	0	synth with cache (only 1: auto using Ropp_lt_cancel with rorders).	0.054987	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_compare_fun	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.lt_trans	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_le_cancel	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.lt_not_eq	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold lt; only 1: unfold eq; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite equal_spec in H0; only 1: rewrite <- compare_equal in H0; only 1: congruence).	0.024477	9
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_ge_cancel	120	0	synth with cache (only 1: auto using Ropp_le_cancel with rorders).	0.052609	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.add_spec	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.add_1	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply <- add_spec; only 1: left; only 1: assumption).	0.027083	4
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.add_2	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply <- add_spec; only 1: right; only 1: assumption).	0.023837	4
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.add_3	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite add_spec; only 1: intros ?; only 1: destruct H0; only 1: intropattern subst -> H0; only 1: elim H; only 1: trivial; only 1: assumption).	0.041919	11
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.remove_spec	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.remove_1	120	0.0.0	synth with cache (only 1: intros; only 1: rewrite remove_spec; only 1: tauto).	0.023267	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.remove_2	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite remove_spec; only 1: split; only 1: assumption; only 1: assumption).	0.021414	5
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.remove_3	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite remove_spec; only 1: tauto).	0.024120	5
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.singleton_1	120	0.0.0.0.0.0.0	synth with cache (only 1: unfold singleton; only 1: intros ?; only 1: intros ?; only 1: rewrite add_spec; only 1: unfold In; only 1: rewrite mem_Leaf; only 1: intuition discriminate).	0.025217	7
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.singleton_2	120	0.0.0.0	synth with cache (only 1: unfold singleton; only 1: intros; only 1: apply add_1; only 1: assumption).	0.016039	4
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.union_spec	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.union_1	120	0.0.0	synth with cache (only 1: intros; only 1: apply -> union_spec; only 1: assumption).	0.034310	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.union_2	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply <- union_spec; only 1: left; only 1: assumption).	0.022742	4
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.union_3	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply <- union_spec; only 1: right; only 1: assumption).	0.023104	4
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.inter_spec	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.inter_1	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite inter_spec; only 1: tauto).	0.027426	5
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.inter_2	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite inter_spec; only 1: tauto).	0.027131	5
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.inter_3	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite inter_spec; only 1: split; only 1: assumption; only 1: assumption).	0.020769	5
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.diff_spec	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.diff_1	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite diff_spec; only 1: tauto).	0.026867	5
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.diff_2	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite diff_spec; only 1: tauto).	0.024716	5
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.diff_3	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite diff_spec; only 1: split; only 1: assumption; only 1: assumption).	0.020090	5
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.fold_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.cardinal_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.xfilter_spec	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.filter_1	120	0.0.0.0.0.0.0.0	synth with cache (only 1: unfold filter; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: clear H; only 1: rewrite xfilter_spec; only 1: tauto).	0.032215	8
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.filter_2	120	0.0.0.0.0.0.0.0	synth with cache (only 1: unfold filter; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: clear H; only 1: rewrite xfilter_spec; only 1: tauto).	0.032286	8
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.filter_3	120	0.0.0.0.0.0.0.0	synth with cache (only 1: unfold filter; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: clear H; only 1: rewrite xfilter_spec; only 1: tauto).	0.038881	8
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.xforall_spec	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.for_all_1	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: clear H; only 1: unfold for_all; only 1: rewrite xforall_spec; only 1: trivial).	0.040666	7
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.for_all_2	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: clear H; only 1: unfold for_all; only 1: rewrite xforall_spec; only 1: trivial).	0.040156	7
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.xexists_spec	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.exists_1	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: clear H; only 1: unfold exists_; only 1: rewrite xexists_spec; only 1: trivial).	0.034773	7
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.exists_2	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: clear H; only 1: unfold exists_; only 1: rewrite xexists_spec; only 1: trivial).	0.034093	7
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.partition_filter	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.partition_1	120	0.0.0	synth with cache (only 1: intros; only 1: rewrite partition_filter; only 1: apply eq_refl).	0.022749	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.partition_2	120	0.0.0	synth with cache (only 1: intros; only 1: rewrite partition_filter; only 1: apply eq_refl).	0.024344	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.xelements_spec	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.elements_1	120	0.0.0.0.0.0.0	synth with cache (only 1: unfold elements; only 1: unfold In; only 1: intros; only 1: rewrite xelements_spec; only 1: right; only 1: exists x; only 1: auto).	0.026287	7
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.elements_2	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold elements; only 1: unfold In; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite xelements_spec in H; only 1: destruct H; only 1: inversion_clear H; only 1: destruct H; only 1: destruct H; only 1: rewrite H; only 1: assumption).	0.051942	12
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.lt_rev_append	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.elements_3	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.elements_3w	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.choose_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.choose_2	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Empty; only 1: unfold In; only 1: intros ?; only 1: intros ?; only 1: induction s; only 1: intros ?; only 1: apply empty_1; only 1: destruct b; only 1: discriminate; only 1: simpl in H; only 1: destruct choose; only 1: discriminate; only 1: destruct choose; only 1: discriminate; only 1: intros ?; only 1: destruct a; only 1: apply IHs2; only 1: reflexivity; only 1: apply IHs1; only 1: reflexivity; only 1: discriminate).	0.087213	21
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.choose_empty	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.choose_3'	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.choose_3	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply choose_3' in H1; only 1: congruence).	0.059532	9
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.min_elt_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.min_elt_3	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.min_elt_2	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.max_elt_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.max_elt_3	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetPositive.PositiveSet.max_elt_2	120
coq-tactician-stdlib.8.11.dev	Coq.Classes.DecidableClass.Decidable_complete_alt	120
coq-tactician-stdlib.8.11.dev	Coq.Classes.DecidableClass.Decidable_eq_bool_obligation_1	120	0	synth with cache (only 1: apply eqb_true_iff).	0.018434	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.DecidableClass.Decidable_eq_nat_obligation_1	120	0	synth with cache (only 1: apply Nat.eqb_eq).	0.018042	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.DecidableClass.Decidable_le_nat_obligation_1	120	0	synth with cache (only 1: apply Nat.leb_le).	0.015948	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.DecidableClass.Decidable_eq_Z_obligation_1	120	0	synth with cache (only 1: apply Z.eqb_eq).	0.015260	1
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Heap.defs.leA_Tree_Leaf	120	0.0	synth with cache (only 1: simpl; only 1: auto with datatypes).	0.017932	2
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Heap.defs.leA_Tree_Node	120	0.0	synth with cache (only 1: simpl; only 1: auto with datatypes).	0.021195	2
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Heap.defs.invert_heap	120	0.0.0	synth with cache (only 1: intros; only 1: inversion H; only 1: auto with datatypes).	0.035703	3
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Heap.defs.is_heap_rect	120
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Heap.defs.is_heap_rec	120
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Heap.defs.low_trans	120
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Heap.defs.Equivalence_instance_0	120	0.0.0.0.0	synth with cache (only 1: constructor; only 1: auto with datatypes; only 1: auto with datatypes; only 1: red; only 1: apply meq_trans).	0.023281	5
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Heap.defs.Proper_instance_0	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply meq_congr; only 1: easy; only 1: easy).	0.027106	9
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Heap.defs.merge	120
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Heap.defs.insert	120
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Heap.defs.list_to_heap	120
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Heap.defs.heap_to_list	120
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Heap.defs.treesort	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableTypeEx.PairDecidableType.eq_refl	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct x; only 1: red; only 1: simpl; only 1: auto).	0.019206	5
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableTypeEx.PairDecidableType.eq_sym	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct x; only 1: intros ?; only 1: destruct y; only 1: unfold eq; only 1: simpl; only 1: intuition).	0.024856	7
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableTypeEx.PairDecidableType.eq_trans	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableTypeEx.PairDecidableType.eq_dec	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableTypeEx.PairUsualDecidableType.eq_dec	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZCoeff.InitialMorphism.req_refl	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZCoeff.InitialMorphism.req_sym	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZCoeff.InitialMorphism.req_trans	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZCoeff.InitialMorphism.rplus_morph_Proper	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZCoeff.InitialMorphism.rtimes_morph_Proper	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZCoeff.InitialMorphism.ropp_morph_Proper	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZCoeff.InitialMorphism.rle_morph_Proper	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZCoeff.InitialMorphism.rlt_morph_Proper	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZCoeff.InitialMorphism.rminus_morph_Proper	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZCoeff.InitialMorphism.ring_ops_wd	120	0.0.0.0	synth with cache (only 1: constructor; only 1: exact rplus_morph; only 1: exact rtimes_morph; only 1: exact ropp_morph).	0.019606	4
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZCoeff.InitialMorphism.Zring_morph	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZCoeff.InitialMorphism.phi_pos1_pos	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZCoeff.InitialMorphism.phi_pos1_succ	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZCoeff.InitialMorphism.clt_pos_morph	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZCoeff.InitialMorphism.clt_morph	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZCoeff.InitialMorphism.Zcleb_morph	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZCoeff.InitialMorphism.Zcneqb_morph	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.PaddX_ok2	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.Padd_ok	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.PaddX_ok	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.Psub_ok	120	0.0.0.0.0	synth with cache (only 1: unfold Psub; only 1: intros; only 1: rewrite Padd_ok; only 1: rewrite Popp_ok; only 1: rsimpl).	0.107147	5
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.Pmul_ok	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.Psquare_ok	120	0.0.0	synth with cache (only 1: intros; only 1: unfold Psquare; only 1: apply Pmul_ok).	0.023264	3
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.mkX_ok	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.POWER2.Ppow_pos_ok	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.POWER2.Ppow_N_ok	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalN.Unsigned.of_to	120	0.0.0	synth with cache (only 1: destruct n; only 1: reflexivity; only 1: apply Unsigned.of_to).	0.016732	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalN.Unsigned.to_of	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalN.Unsigned.to_uint_inj	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalN.Unsigned.to_uint_surj	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalN.Unsigned.of_uint_norm	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction d; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.025617	12
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalN.Unsigned.of_inj	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- to_of; only 1: rewrite <- to_of; only 1: f_equal; only 1: easy).	0.018609	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalN.Unsigned.of_iff	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intros; only 1: rewrite <- to_of; only 1: rewrite <- to_of; only 1: f_equal; only 1: easy; only 1: intros ?; only 1: rewrite <- of_uint_norm; only 1: rewrite H; only 1: apply of_uint_norm).	0.022153	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalN.Signed.of_to	120	0.0.0.0.0.0.0.0	synth with cache (only 1: unfold BinNatDef.N.to_int; only 1: unfold BinNatDef.N.of_int; only 1: unfold norm; only 1: f_equal; only 1: rewrite Unsigned.of_uint_norm; only 1: destruct n; only 1: reflexivity; only 1: apply DecimalPos.Unsigned.of_to).	0.019579	8
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalN.Signed.to_of	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalN.Signed.to_int_inj	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalN.Signed.to_int_pos_surj	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalN.Signed.of_int_norm	120	0.0.0	synth with cache (only 1: unfold BinNatDef.N.of_int; only 1: rewrite norm_invol; only 1: easy).	0.020087	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalN.Signed.of_inj_pos	120
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.list_contents_app	120
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_refl	120	0.0	synth with cache (only 1: unfold permutation; only 1: auto with datatypes).	0.020992	2
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_sym	120	0.0.0.0.0	synth with cache (only 1: unfold permutation; only 1: unfold meq; only 1: intros; only 1: symmetry; only 1: trivial).	0.022753	5
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_trans	120
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_cons_eq	120
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_cons	120	0.0.0	synth with cache (only 1: unfold permutation; only 1: simpl; only 1: auto with datatypes).	0.021720	3
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_app	120
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_add_inside_eq	120
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_add_inside	120
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_add_cons_inside_eq	120
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_add_cons_inside	120
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_middle	120	0.0.0	synth with cache (only 1: intros; only 1: apply permut_add_cons_inside; only 1: auto using permut_sym, permut_refl).	0.022409	3
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreduction.Qred_correct	120
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_sym_app	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: unfold permutation; only 1: unfold meq; only 1: intros ?; only 1: rewrite list_contents_app; only 1: rewrite list_contents_app; only 1: simpl; only 1: auto with arith).	0.058768	9
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_rev	120
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_conv_inv	120
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_app_inv1	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreduction.Qred_complete	120
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.if_eqA_then	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct eqA_dec; only 1: clear e; only 1: auto; only 1: contradict n; only 1: auto).	0.027165	6
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreduction.Qred_eq_iff	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreduction.Qred_comp_Proper	120	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Qred_correct; only 1: rewrite Qred_correct; only 1: easy).	0.020206	4
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreduction.Qplus'_correct	120	0.0.0	synth with cache (only 1: intros; only 1: unfold Qplus'; only 1: apply Qred_correct).	0.015958	3
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_app_inv2	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreduction.Qmult'_correct	120	0.0.0	synth with cache (only 1: intros; only 1: unfold Qmult'; only 1: apply Qred_correct).	0.018148	3
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreduction.Qminus'_correct	120	0.0.0	synth with cache (only 1: intros; only 1: unfold Qminus'; only 1: apply Qred_correct).	0.014815	3
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreduction.Qplus'_comp_Proper	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Qplus'; only 1: rewrite H; only 1: rewrite H0; only 1: auto with qarith).	0.023739	5
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreduction.Qmult'_comp_Proper	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Qmult'; only 1: rewrite H; only 1: rewrite H0; only 1: auto with qarith).	0.024407	5
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_remove_hd_eq	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreduction.Qminus'_comp_Proper	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Qminus'; only 1: rewrite H; only 1: rewrite H0; only 1: auto with qarith).	0.031283	5
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_remove_hd	120
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.if_eqA_else	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreduction.Qred_opp	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct q; only 1: unfold Qred; only 1: simpl; only 1: rewrite Z.ggcd_opp; only 1: case BinIntDef.Z.ggcd; only 1: intros ?; only 1: intros ?; only 1: destruct p; only 1: simpl; only 1: unfold Qopp; only 1: auto).	0.046705	12
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.if_eqA_refl	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreduction.Qred_compare	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply Qcompare_comp; only 1: apply Qeq_sym; only 1: apply Qred_correct; only 1: apply Qeq_sym; only 1: apply Qred_correct).	0.021043	7
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.if_eqA	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct eqA_dec; only 1: destruct eqA_dec; only 1: auto; only 1: contradict n; only 1: transitivity x; only 1: auto with *; only 1: transitivity x0; only 1: auto with *; only 1: auto with *; only 1: destruct eqA_dec; only 1: contradict n; only 1: transitivity y; only 1: auto with *; only 1: transitivity y0; only 1: auto with *; only 1: auto with *; only 1: auto).	0.052246	23
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreduction.Qred_le	120	0.0.0.0	synth with cache (only 1: rewrite Qle_alt; only 1: rewrite Qle_alt; only 1: rewrite <- Qred_compare; only 1: easy).	0.035203	4
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.if_eqA_rewrite_l	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct eqA_dec; only 1: destruct eqA_dec; only 1: auto; only 1: contradict n; only 1: transitivity a1; only 1: eauto with *; only 1: eauto with *; only 1: destruct eqA_dec; only 1: contradict n; only 1: transitivity a1'; only 1: eauto with *; only 1: eauto with *; only 1: auto).	0.042832	14
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qreduction.Qred_lt	120	0.0.0.0	synth with cache (only 1: rewrite Qlt_alt; only 1: rewrite Qlt_alt; only 1: rewrite <- Qred_compare; only 1: easy).	0.035858	4
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.if_eqA_rewrite_r	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct eqA_dec; only 1: destruct eqA_dec; only 1: auto; only 1: contradict n; only 1: transitivity a2; only 1: eauto with *; only 1: eauto with *; only 1: destruct eqA_dec; only 1: contradict n; only 1: transitivity a2'; only 1: eauto with *; only 1: eauto with *; only 1: auto).	0.051130	14
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.multiplicity_eqA	120
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.multiplicity_InA	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.WKL.is_path_from_characterization	120
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.multiplicity_InA_O	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite multiplicity_InA; only 1: destruct multiplicity; only 1: auto with arith; only 1: destruct 1; only 1: auto with arith).	0.053972	7
coq-tactician-stdlib.8.11.dev	Coq.Logic.WKL.is_path_from_restrict	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros *; only 1: intros ?; only 1: intros ?; only 1: induction H0 in n, H, H0 |- *; only 1: apply le_n_0_eq in H; only 1: intropattern subst <- H; only 1: apply here; only 1: assumption; only 1: destruct n; only 1: apply here; only 1: assumption; only 1: apply next_left; only 1: auto using le_S_n; only 1: auto using le_S_n; only 1: destruct n; only 1: apply here; only 1: assumption; only 1: apply next_right; only 1: auto using le_S_n; only 1: auto using le_S_n).	0.045984	20
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.multiplicity_InA_S	120	0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite multiplicity_InA; only 1: auto with arith).	0.029276	4
coq-tactician-stdlib.8.11.dev	Coq.Logic.WKL.inductively_barred_at_monotone	120
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.multiplicity_NoDupA	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.WKL.inductively_barred_at_imp_is_path_from	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.NORM_SUBST_REC.norm_aux_spec	120
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_InA_InA	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite multiplicity_InA; only 1: rewrite multiplicity_InA; only 1: unfold permutation; only 1: unfold meq; only 1: intros ?; only 1: rewrite H; only 1: auto).	0.050285	10
coq-tactician-stdlib.8.11.dev	Coq.Logic.WKL.is_path_from_imp_inductively_barred_at	120
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_cons_InA	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.NORM_SUBST_REC.norm_subst_spec	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.WKL.find_left_path	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.norm_subst_ok	120	0.0	synth with cache (only 1: intros; only 1: apply norm_subst_spec).	0.021747	2
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_nil	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.WKL.Y_unique	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring_polynom.MakeRingPol.ring_correct	120	0.0.0.0.0.0	synth with cache (only 1: simpl; only 1: intros; only 1: rewrite norm_subst_ok; only 1: rewrite norm_subst_ok; only 1: apply Peq_ok; only 1: trivial).	0.030964	6
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_length_1	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.WKL.Y_approx	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.WKL.PreWeakKonigsLemma	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.WKL.inductively_barred_at_decidable	120
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_length_2	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.WKL.inductively_barred_at_is_path_from_decidable	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.WKL.WeakKonigsLemma	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply inductively_barred_at_is_path_from_decidable in H; only 1: apply PreWeakKonigsLemma; only 1: assumption; only 1: assumption).	0.052616	7
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.permut_length	120
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut.NoDupA_equivlistA_permut	120
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut_map.permut_map	120
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut_permut.Permutation_impl_permutation	120
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut_permut.permut_eqA	120	0.0.0.0.0.0	synth with cache (only 1: induction 1; only 1: apply permut_refl; only 1: apply permut_cons_eq; only 1: trivial; only 1: trivial; only 1: trivial).	0.023401	6
coq-tactician-stdlib.8.11.dev	Coq.Sorting.PermutSetoid.Permut_permut.permutation_Permutation	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.rplus_morph_Proper	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.rtimes_morph_Proper	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.ropp_morph_Proper	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.rle_morph_Proper	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.rlt_morph_Proper	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.rminus_morph_Proper	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.cleb_sound	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.cneqb_sound	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.cltb_sound	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.OpMult_sound	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.OpAdd_sound	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.pexpr_times_nformula_correct	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.nformula_times_nformula_correct	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.nformula_plus_nformula_correct	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.eval_Psatz_Sound	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.ge_bool_cases	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.extract_hyps_app	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.nhyps_of_psatz_correct	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.check_inconsistent_sound	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.checker_nf_sound	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.eval_pol_sub	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.eval_pol_add	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.eval_pol_mul	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.eval_pol_opp	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.eval_pol_norm	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.normalise_sound	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.negate_correct	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.cnf_of_list_correct	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.eq0_cnf	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.xnormalise_correct	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.xnegate_correct	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.cnf_normalise_correct	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.cnf_negate_correct	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.eval_nformula_dec	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.xdenorm_correct	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.denorm_correct	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.eval_pexprSC	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.RingMicromega.Micromega.eval_formulaSC	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.Nat_as_OT.lt_trans	120	0.0.0.0.0	synth with cache (only 1: unfold lt; only 1: intros; only 1: apply Nat.lt_trans with y; only 1: auto; only 1: auto).	0.022204	5
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.Nat_as_OT.lt_not_eq	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold lt; only 1: unfold eq; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intropattern subst -> H0; only 1: revert H; only 1: apply Nat.lt_irrefl).	0.022965	9
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.Nat_as_OT.compare	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.Z_as_OT.lt_trans	120	0	synth with cache (only 1: exact Z.lt_trans).	0.020199	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.Z_as_OT.lt_not_eq	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intropattern subst -> H0; only 1: revert H; only 1: apply Z.lt_irrefl).	0.023460	7
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.Z_as_OT.compare	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.Positive_as_OT.lt_not_eq	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: contradict H; only 1: rewrite H; only 1: apply Pos.lt_irrefl).	0.033072	6
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.Positive_as_OT.compare	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.N_as_OT.compare	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.PairOrderedType.eq_refl	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct x; only 1: red; only 1: simpl; only 1: auto with ordered_type).	0.022824	5
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.PairOrderedType.eq_sym	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct x; only 1: intros ?; only 1: destruct y; only 1: unfold eq; only 1: simpl; only 1: intuition).	0.084171	7
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.PairOrderedType.eq_trans	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.PairOrderedType.lt_trans	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.PairOrderedType.lt_not_eq	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.PairOrderedType.compare	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.PairOrderedType.eq_dec	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.bits_lt_trans	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.lt_trans	120	0	synth with cache (only 1: exact bits_lt_trans).	0.018064	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.bits_lt_antirefl	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.lt_not_eq	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.compare	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.eq_dec	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.String_as_OT.nat_of_ascii_inverse	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.String_as_OT.lts_tail_unique	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.String_as_OT.lt_trans	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.String_as_OT.lt_not_eq	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeEx.String_as_OT.compare	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qfield.Qsrt	120	0.0.2.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: constructor; only 1: intros ?; only 1: destruct x; only 1: unfold Qeq; only 1: unfold Qplus; only 1: simpl; only 1: ring; only 1: intros ?; only 1: destruct x; only 1: unfold Qeq; only 1: unfold Qplus; only 1: simpl; only 1: intros; only 1: rewrite Pos.mul_comm; only 1: ring; only 1: intros ?; only 1: destruct x; only 1: intros ?; only 1: destruct y; only 1: intros ?; only 1: destruct z; only 1: unfold Qeq; only 1: unfold Qplus; only 1: simpl; only 1: simpl_mult; only 1: ring; only 1: intros ?; only 1: red; only 1: simpl; only 1: destruct Qnum; only 1: auto; only 1: auto; only 1: auto; only 1: exact Qmult_comm; only 1: intros; only 1: red; only 1: simpl; only 1: rewrite Pos.mul_assoc; only 1: ring; only 1: exact Qmult_plus_distr_l; only 1: reflexivity; only 1: exact Qplus_opp_r).	0.361709	56
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qfield.Qsft	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: constructor; only 1: apply Qsrt; only 1: discriminate; only 1: reflexivity; only 1: intros ?; only 1: intros ?; only 1: rewrite Qmult_comm; only 1: apply Qmult_inv_r; only 1: exact H).	0.026828	9
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qfield.Qpower_theory	120	0.0.0.0.0.0	synth with cache (only 1: constructor; only 1: intros ?; only 1: intros ?; only 1: destruct n; only 1: reflexivity; only 1: reflexivity).	0.025437	6
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Peqb_complete	120	0.0	synth with cache (only 1: rewrite <- Pos.eqb_eq; only 1: easy).	0.023292	2
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qfield.Examples.ex1	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct x; only 1: intros ?; only 1: destruct y; only 1: intros ?; only 1: destruct z; only 1: unfold Qeq; only 1: unfold Qmult; only 1: unfold Qplus; only 1: simpl; only 1: simpl_mult; only 1: ring).	0.085035	12
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Peqb_Pcompare	120	0.0.0	synth with cache (only 1: rewrite Pos.compare_eq_iff; only 1: rewrite <- Pos.eqb_eq; only 1: easy).	0.026460	3
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qfield.Examples.ex2	120	0.1	synth with cache (only 1: intros; only 1: ring).	0.025607	3
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Pcompare_Peqb	120	0.0.0	synth with cache (only 1: rewrite Pos.eqb_eq; only 1: rewrite <- Pos.compare_eq_iff; only 1: easy).	0.029253	3
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qfield.Examples.ex3	120	0.0	synth with cache (only 1: intros; only 1: ring).	0.026461	2
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Neqb_Ncompare	120	0.0	synth with cache (only 1: rewrite N.compare_eq_iff; only 1: apply N.eqb_eq).	0.022592	2
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Ncompare_Neqb	120	0.0.0	synth with cache (only 1: rewrite N.eqb_eq; only 1: rewrite <- N.compare_eq_iff; only 1: easy).	0.027905	3
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qfield.Examples.ex4	120	0	synth with cache (only 1: ring).	0.097159	1
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Neqb_complete	120	0	synth with cache (only 1: apply N.eqb_eq).	0.014335	1
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nxor_eq_true	120	0.0.0.0	synth with cache (only 1: intros ?; only 1: apply N.lxor_eq in H; only 1: subst; only 1: apply N.eqb_refl).	0.016625	4
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nxor_eq_false	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qfield.Examples.ex5	120	0	synth with cache (only 1: ring).	0.021788	1
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nodd_not_double	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: eqb2eq; only 1: intros ?; only 1: intropattern subst <- H0; only 1: unfold Nodd in *; only 1: rewrite Ndouble_bit0 in *; only 1: easy).	0.024250	7
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qfield.Examples.ex6	120	0	synth with cache (only 1: ring).	0.019022	1
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nnot_div2_not_double	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: eqb2eq; only 1: contradict H; only 1: subst; only 1: apply N.div2_double).	0.029395	5
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qfield.Examples.ex7	120	0.0	synth with cache (only 1: intros ?; only 1: ring).	0.019237	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.of_lu_eqn	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qfield.Examples.ex8	120	0.0	synth with cache (only 1: intros ?; only 1: ring).	0.020684	2
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Neven_not_double_plus_one	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: eqb2eq; only 1: intros ?; only 1: intropattern subst <- H0; only 1: unfold Neven in *; only 1: rewrite Ndouble_plus_one_bit0 in *; only 1: easy).	0.024780	7
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qfield.Examples.ex9	120	0.0	synth with cache (only 1: intros ?; only 1: ring).	0.022202	2
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nnot_div2_not_double_plus_one	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: eqb2eq; only 1: contradict H; only 1: subst; only 1: destruct a0; only 1: easy; only 1: easy).	0.027844	7
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nbit0_neq	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: eqb2eq; only 1: intros ?; only 1: intropattern subst <- H1; only 1: easy).	0.026094	5
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qfield.Examples.ex10	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qfield.Qopp_plus	120	0.0	synth with cache (only 1: intros; only 1: ring).	0.041062	2
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Ndiv2_eq	120	0.0.0.0	synth with cache (only 1: intros; only 1: eqb2eq; only 1: subst; only 1: trivial).	0.021666	4
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qfield.Qopp_opp	120	0.0	synth with cache (only 1: intros; only 1: ring).	0.021683	2
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Ndiv2_neq	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: eqb2eq; only 1: contradict H; only 1: subst; only 1: trivial).	0.040139	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zdivide_opp_r	120	0	synth with cache (only 1: apply Z.divide_opp_r).	0.015851	1
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Ndiv2_bit_eq	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.of_lu_revapp	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zdivide_opp_r_rev	120	0	synth with cache (only 1: apply Z.divide_opp_r).	0.014707	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.Nadd_simpl	120	0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: easy).	0.016407	3
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Ndiv2_bit_neq	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: eqb2eq; only 1: contradict H; only 1: apply Ndiv2_bit_eq; only 1: easy; only 1: easy).	0.031976	7
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zdivide_opp_l	120	0	synth with cache (only 1: apply Z.divide_opp_l).	0.012965	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zdivide_opp_l_rev	120	0	synth with cache (only 1: apply Z.divide_opp_l).	0.013249	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zdivide_Zabs_l	120	0	synth with cache (only 1: apply Z.divide_abs_l).	0.018907	1
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nneq_elim	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zdivide_Zabs_inv_l	120	0	synth with cache (only 1: apply Z.divide_abs_l).	0.015726	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.of_uint_acc_eqn	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct d; only 1: simpl; only 1: destruct 1; only 1: easy; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	0.092535	24
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Ndouble_or_double_plus_un	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zmult_one	120	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.eq_mul_1_nonneg).	0.022314	2
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nleb_alt	120	0.0.0.0.0.0	synth with cache (only 1: unfold Nleb; only 1: rewrite eq_iff_eq_true; only 1: rewrite N.leb_le; only 1: rewrite leb_compare; only 1: rewrite <- N2Nat.inj_compare; only 1: easy).	0.026209	6
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nleb_Nle	120	0.0.0	synth with cache (only 1: rewrite Nleb_alt; only 1: rewrite N.leb_le; only 1: easy).	0.019328	3
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zdivide_bounds	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite <- Z.divide_abs_l in H; only 1: rewrite <- Z.divide_abs_r in H; only 1: apply Z.abs_pos in H0; only 1: apply Z.divide_pos_le; only 1: easy; only 1: easy).	0.069150	8
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nleb_refl	120	0.0	synth with cache (only 1: rewrite Nleb_Nle; only 1: apply N.le_refl).	0.016863	2
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nleb_antisym	120	0.0.0	synth with cache (only 1: rewrite Nleb_Nle; only 1: rewrite Nleb_Nle; only 1: apply N.le_antisymm).	0.032556	3
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zmod_divide	120	0	synth with cache (only 1: apply Z.mod_divide).	0.020431	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zdivide_mod	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: intropattern subst -> H; only 1: apply Z_mod_mult).	0.022467	6
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nleb_trans	120	0.0.0.0	synth with cache (only 1: rewrite Nleb_Nle; only 1: rewrite Nleb_Nle; only 1: rewrite Nleb_Nle; only 1: apply N.le_trans).	0.036684	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zdivide_dec	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Z_lt_neq	120	0	synth with cache (only 1: auto using Z.lt_neq, Z.neq_sym).	0.015251	1
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nleb_ltb_trans	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zdivide_Zdiv_eq	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nltb_leb_trans	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zdivide_Zdiv_eq_2	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Z.divide_div_mul_exact; only 1: apply @Z_lt_neq; only 1: easy; only 1: auto with zarith).	0.021110	5
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nltb_trans	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zdivide_le	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply Z.divide_pos_le; only 1: easy; only 1: easy).	0.019142	4
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nltb_leb_weak	120	0.0.0.0.0.0	synth with cache (only 1: unfold Nleb; only 1: intros; only 1: apply leb_correct; only 1: apply Nat.lt_le_incl; only 1: apply leb_complete_conv; only 1: assumption).	0.019401	6
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nleb_double_mono	120	0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Nleb; only 1: intros; only 1: rewrite N2Nat.inj_double; only 1: rewrite N2Nat.inj_double; only 1: apply leb_correct; only 1: apply mult_le_compat_l; only 1: apply leb_complete; only 1: easy).	0.021121	8
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zdivide_Zdiv_lt_pos	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nleb_double_plus_one_mono	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Nleb; only 1: intros; only 1: rewrite N2Nat.inj_succ_double; only 1: rewrite N2Nat.inj_succ_double; only 1: apply leb_correct; only 1: apply le_n_S; only 1: apply mult_le_compat_l; only 1: apply leb_complete; only 1: easy).	0.027898	9
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.of_uint_acc_rev	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: revert acc; only 1: induction d; only 1: intros; only 1: simpl usize; only 1: simpl; only 1: rewrite Pos.mul_1_r; only 1: auto; only 1: intros; only 1: simpl usize; only 1: rewrite N.pow_succ_r'; only 1: unfold rev; only 1: simpl revapp; only 1: rewrite of_lu_revapp; only 1: simpl of_lu; only 1: rewrite of_uint_acc_eqn; only 1: simpl tl; only 1: simpl hd; only 1: rewrite IHd; only 1: rewrite Nadd_simpl; only 1: ring; only 1: easy; only 1: intros; only 1: simpl usize; only 1: rewrite N.pow_succ_r'; only 1: unfold rev; only 1: simpl revapp; only 1: rewrite of_lu_revapp; only 1: simpl of_lu; only 1: rewrite of_uint_acc_eqn; only 1: simpl tl; only 1: simpl hd; only 1: rewrite IHd; only 1: rewrite Nadd_simpl; only 1: ring; only 1: easy; only 1: intros; only 1: simpl usize; only 1: rewrite N.pow_succ_r'; only 1: unfold rev; only 1: simpl revapp; only 1: rewrite of_lu_revapp; only 1: simpl of_lu; only 1: rewrite of_uint_acc_eqn; only 1: simpl tl; only 1: simpl hd; only 1: rewrite IHd; only 1: rewrite Nadd_simpl; only 1: ring; only 1: easy; only 1: intros; only 1: simpl usize; only 1: rewrite N.pow_succ_r'; only 1: unfold rev; only 1: simpl revapp; only 1: rewrite of_lu_revapp; only 1: simpl of_lu; only 1: rewrite of_uint_acc_eqn; only 1: simpl tl; only 1: simpl hd; only 1: rewrite IHd; only 1: rewrite Nadd_simpl; only 1: ring; only 1: easy; only 1: intros; only 1: simpl usize; only 1: rewrite N.pow_succ_r'; only 1: unfold rev; only 1: simpl revapp; only 1: rewrite of_lu_revapp; only 1: simpl of_lu; only 1: rewrite of_uint_acc_eqn; only 1: simpl tl; only 1: simpl hd; only 1: rewrite IHd; only 1: rewrite Nadd_simpl; only 1: ring; only 1: easy; only 1: intros; only 1: simpl usize; only 1: rewrite N.pow_succ_r'; only 1: unfold rev; only 1: simpl revapp; only 1: rewrite of_lu_revapp; only 1: simpl of_lu; only 1: rewrite of_uint_acc_eqn; only 1: simpl tl; only 1: simpl hd; only 1: rewrite IHd; only 1: rewrite Nadd_simpl; only 1: ring; only 1: easy; only 1: intros; only 1: simpl usize; only 1: rewrite N.pow_succ_r'; only 1: unfold rev; only 1: simpl revapp; only 1: rewrite of_lu_revapp; only 1: simpl of_lu; only 1: rewrite of_uint_acc_eqn; only 1: simpl tl; only 1: simpl hd; only 1: rewrite IHd; only 1: rewrite Nadd_simpl; only 1: ring; only 1: easy; only 1: intros; only 1: simpl usize; only 1: rewrite N.pow_succ_r'; only 1: unfold rev; only 1: simpl revapp; only 1: rewrite of_lu_revapp; only 1: simpl of_lu; only 1: rewrite of_uint_acc_eqn; only 1: simpl tl; only 1: simpl hd; only 1: rewrite IHd; only 1: rewrite Nadd_simpl; only 1: ring; only 1: easy; only 1: intros; only 1: simpl usize; only 1: rewrite N.pow_succ_r'; only 1: unfold rev; only 1: simpl revapp; only 1: rewrite of_lu_revapp; only 1: simpl of_lu; only 1: rewrite of_uint_acc_eqn; only 1: simpl tl; only 1: simpl hd; only 1: rewrite IHd; only 1: rewrite Nadd_simpl; only 1: ring; only 1: easy; only 1: intros; only 1: simpl usize; only 1: rewrite N.pow_succ_r'; only 1: unfold rev; only 1: simpl revapp; only 1: rewrite of_lu_revapp; only 1: simpl of_lu; only 1: rewrite of_uint_acc_eqn; only 1: simpl tl; only 1: simpl hd; only 1: rewrite IHd; only 1: rewrite Nadd_simpl; only 1: ring; only 1: easy).	0.445188	147
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nleb_double_mono_conv	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zmod_div_mod	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nleb_double_plus_one_mono_conv	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zmod_divide_minus	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nltb_double_mono	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nltb_double_plus_one_mono	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zdivide_mod_minus	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nltb_double_mono_conv	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zis_gcd_sym	120	0.0.0.0.0	synth with cache (only 1: induction 1; only 1: constructor; only 1: intuition; only 1: intuition; only 1: intuition).	0.024298	5
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nltb_double_plus_one_mono_conv	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zis_gcd_0	120	0.0.0.0	synth with cache (only 1: constructor; only 1: auto with zarith; only 1: auto with zarith; only 1: auto with zarith).	0.017441	4
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nltb_Ncompare	120	0.0.0.0	synth with cache (only 1: rewrite N.compare_nle_iff; only 1: rewrite <- Nleb_Nle; only 1: rewrite not_true_iff_false; only 1: easy).	0.024891	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zis_gcd_1	120	0.0.0.0.0.0	synth with cache (only 1: constructor; only 1: exists a; only 1: rewrite Z.mul_1_r; only 1: auto; only 1: auto with zarith; only 1: auto with zarith).	0.020627	6
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Ncompare_Gt_Nltb	120	0	synth with cache (only 1: apply <- Nltb_Ncompare).	0.018175	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zis_gcd_refl	120	0.0.0.0	synth with cache (only 1: constructor; only 1: auto with zarith; only 1: auto with zarith; only 1: auto with zarith).	0.018146	4
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Ncompare_Lt_Nltb	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite Nltb_Ncompare; only 1: rewrite N.compare_antisym; only 1: rewrite H; only 1: auto).	0.021695	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.of_uint_alt	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction d; only 1: simpl; only 1: auto; only 1: simpl; only 1: unfold rev; only 1: simpl revapp; only 1: rewrite of_lu_revapp; only 1: simpl of_lu; only 1: rewrite IHd; only 1: ring; only 1: simpl; only 1: unfold rev; only 1: simpl revapp; only 1: rewrite of_lu_revapp; only 1: simpl of_lu; only 1: apply of_uint_acc_rev; only 1: simpl; only 1: unfold rev; only 1: simpl revapp; only 1: rewrite of_lu_revapp; only 1: simpl of_lu; only 1: apply of_uint_acc_rev; only 1: simpl; only 1: unfold rev; only 1: simpl revapp; only 1: rewrite of_lu_revapp; only 1: simpl of_lu; only 1: apply of_uint_acc_rev; only 1: simpl; only 1: unfold rev; only 1: simpl revapp; only 1: rewrite of_lu_revapp; only 1: simpl of_lu; only 1: apply of_uint_acc_rev; only 1: simpl; only 1: unfold rev; only 1: simpl revapp; only 1: rewrite of_lu_revapp; only 1: simpl of_lu; only 1: apply of_uint_acc_rev; only 1: simpl; only 1: unfold rev; only 1: simpl revapp; only 1: rewrite of_lu_revapp; only 1: simpl of_lu; only 1: apply of_uint_acc_rev; only 1: simpl; only 1: unfold rev; only 1: simpl revapp; only 1: rewrite of_lu_revapp; only 1: simpl of_lu; only 1: apply of_uint_acc_rev; only 1: simpl; only 1: unfold rev; only 1: simpl revapp; only 1: rewrite of_lu_revapp; only 1: simpl of_lu; only 1: apply of_uint_acc_rev; only 1: simpl; only 1: unfold rev; only 1: simpl revapp; only 1: rewrite of_lu_revapp; only 1: simpl of_lu; only 1: apply of_uint_acc_rev).	0.087539	64
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zis_gcd_minus	120	0.0.0.0.0	synth with cache (only 1: induction 1; only 1: constructor; only 1: intuition; only 1: intuition; only 1: intuition).	0.041018	5
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nmin_le_1	120	0.0	synth with cache (only 1: rewrite Nleb_Nle; only 1: apply N.le_min_l).	0.024925	2
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nmin_le_2	120	0.0	synth with cache (only 1: rewrite Nleb_Nle; only 1: apply N.le_min_r).	0.024514	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.of_lu_rev	120	0.0.0	synth with cache (only 1: rewrite of_uint_alt; only 1: rewrite rev_rev; only 1: easy).	0.017442	3
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nmin_le_3	120	0.0.0	synth with cache (only 1: rewrite Nleb_Nle; only 1: rewrite Nleb_Nle; only 1: apply N.min_glb_l).	0.029863	3
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zis_gcd_opp	120	0.0.0.0.0	synth with cache (only 1: induction 1; only 1: constructor; only 1: intuition; only 1: intuition; only 1: intuition).	0.069287	5
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nmin_le_4	120	0.0.0	synth with cache (only 1: rewrite Nleb_Nle; only 1: rewrite Nleb_Nle; only 1: apply N.min_glb_r).	0.029479	3
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zis_gcd_0_abs	120	0.0.0.0.0.0.0	synth with cache (only 1: apply Zabs_ind; only 1: intros; only 1: apply Zis_gcd_sym; only 1: apply Zis_gcd_0; only 1: intros; only 1: apply Zis_gcd_opp; only 1: apply Zis_gcd_0).	0.022326	7
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nmin_le_5	120	0.0.0.0	synth with cache (only 1: rewrite Nleb_Nle; only 1: rewrite Nleb_Nle; only 1: rewrite Nleb_Nle; only 1: apply N.min_glb).	0.038700	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zis_gcd_unique	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nmin_lt_3	120	0.0.0.0.0.0	synth with cache (only 1: rewrite <- not_true_iff_false; only 1: rewrite <- not_true_iff_false; only 1: rewrite Nleb_Nle; only 1: rewrite Nleb_Nle; only 1: rewrite N.min_le_iff; only 1: auto).	0.049386	6
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndec.Nmin_lt_4	120	0.0.0.0.0.0	synth with cache (only 1: rewrite <- not_true_iff_false; only 1: rewrite <- not_true_iff_false; only 1: rewrite Nleb_Nle; only 1: rewrite Nleb_Nle; only 1: rewrite N.min_le_iff; only 1: auto).	0.071340	6
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zis_gcd_for_euclid	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.of_lu_double_gen	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: rewrite N.double_spec; only 1: rewrite N.succ_double_spec; only 1: induction d; only 1: simpl Little.double; only 1: simpl Little.succ_double; only 1: simpl_of_lu; only 1: split; only 1: reflexivity; only 1: reflexivity; only 1: destruct IHd; only 1: simpl Little.double; only 1: simpl Little.succ_double; only 1: simpl_of_lu; only 1: rewrite H; only 1: simpl_of_lu; only 1: simpl_of_lu; only 1: rewrite H; only 1: split; only 1: ring; only 1: ring; only 1: destruct IHd; only 1: simpl Little.double; only 1: simpl Little.succ_double; only 1: simpl_of_lu; only 1: rewrite H; only 1: simpl_of_lu; only 1: simpl_of_lu; only 1: rewrite H; only 1: split; only 1: ring; only 1: ring; only 1: destruct IHd; only 1: simpl Little.double; only 1: simpl Little.succ_double; only 1: simpl_of_lu; only 1: rewrite H; only 1: simpl_of_lu; only 1: simpl_of_lu; only 1: rewrite H; only 1: split; only 1: ring; only 1: ring; only 1: destruct IHd; only 1: simpl Little.double; only 1: simpl Little.succ_double; only 1: simpl_of_lu; only 1: rewrite H; only 1: simpl_of_lu; only 1: simpl_of_lu; only 1: rewrite H; only 1: split; only 1: ring; only 1: ring; only 1: destruct IHd; only 1: simpl Little.double; only 1: simpl Little.succ_double; only 1: simpl_of_lu; only 1: rewrite H; only 1: simpl_of_lu; only 1: simpl_of_lu; only 1: rewrite H; only 1: split; only 1: ring; only 1: ring; only 1: destruct IHd; only 1: simpl Little.double; only 1: simpl Little.succ_double; only 1: simpl_of_lu; only 1: rewrite H0; only 1: simpl_of_lu; only 1: simpl_of_lu; only 1: rewrite H0; only 1: split; only 1: ring; only 1: ring; only 1: destruct IHd; only 1: simpl Little.double; only 1: simpl Little.succ_double; only 1: simpl_of_lu; only 1: rewrite H0; only 1: simpl_of_lu; only 1: simpl_of_lu; only 1: rewrite H0; only 1: split; only 1: ring; only 1: ring; only 1: destruct IHd; only 1: simpl Little.double; only 1: simpl Little.succ_double; only 1: simpl_of_lu; only 1: rewrite H0; only 1: simpl_of_lu; only 1: simpl_of_lu; only 1: rewrite H0; only 1: split; only 1: ring; only 1: ring; only 1: destruct IHd; only 1: simpl Little.double; only 1: simpl Little.succ_double; only 1: simpl_of_lu; only 1: rewrite H0; only 1: simpl_of_lu; only 1: simpl_of_lu; only 1: rewrite H0; only 1: split; only 1: ring; only 1: ring; only 1: destruct IHd; only 1: simpl Little.double; only 1: simpl Little.succ_double; only 1: simpl_of_lu; only 1: rewrite H0; only 1: simpl_of_lu; only 1: simpl_of_lu; only 1: rewrite H0; only 1: split; only 1: ring; only 1: ring).	0.395253	119
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.of_lu_double	120	0	synth with cache (only 1: apply of_lu_double_gen).	0.020073	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zis_gcd_for_euclid2	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.of_lu_succ_double	120	0	synth with cache (only 1: apply of_lu_double_gen).	0.019817	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.of_to	120	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold BinPosDef.Pos.to_uint; only 1: rewrite of_lu_rev; only 1: induction p; only 1: simpl; only 1: rewrite of_lu_succ_double; only 1: rewrite IHp; only 1: easy; only 1: simpl; only 1: rewrite of_lu_double; only 1: rewrite IHp; only 1: easy; only 1: simpl; only 1: auto).	0.029593	13
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.succ_double_alt	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction d; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.028725	12
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.extended_euclid_algorithm.euclid_rec	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.double_succ	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction d; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: f_equal; only 1: auto using succ_double_alt; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: f_equal; only 1: auto using succ_double_alt).	0.043472	25
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.extended_euclid_algorithm.euclid	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.to_lu_succ	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: induction p; only 1: simpl; only 1: rewrite IHp; only 1: auto using succ_double_alt, double_succ; only 1: simpl; only 1: auto using succ_double_alt, double_succ; only 1: simpl; only 1: auto using succ_double_alt, double_succ).	0.025748	12
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.nat_iter_S	120	0	synth with cache (only 1: reflexivity).	0.015156	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.nat_iter_0	120	0	synth with cache (only 1: reflexivity).	0.014234	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zis_gcd_uniqueness_apart_sign	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.to_ldec_tenfold	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zis_gcd_bezout	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.of_lu_0	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction d; only 1: split; only 1: trivial; only 1: trivial; only 1: simpl_of_lu; only 1: split; only 1: rewrite N.add_0_l; only 1: intros ?; only 1: apply N.eq_mul_0_r in H; only 1: rewrite IHd in H; only 1: simpl; only 1: rewrite H; only 1: easy; only 1: easy; only 1: simpl; only 1: destruct nztail; only 1: destruct IHd; only 1: intropattern subst -> H0; only 1: clear H; only 1: easy; only 1: clear H; only 1: easy; only 1: discriminate; only 1: discriminate; only 1: discriminate; only 1: discriminate; only 1: discriminate; only 1: discriminate; only 1: discriminate; only 1: discriminate; only 1: discriminate; only 1: discriminate; only 1: simpl_of_lu; only 1: split; only 1: intros ?; only 1: apply N.eq_add_0 in H; only 1: easy; only 1: discriminate; only 1: simpl_of_lu; only 1: split; only 1: intros ?; only 1: apply N.eq_add_0 in H; only 1: easy; only 1: discriminate; only 1: simpl_of_lu; only 1: split; only 1: intros ?; only 1: apply N.eq_add_0 in H; only 1: easy; only 1: discriminate; only 1: simpl_of_lu; only 1: split; only 1: intros ?; only 1: apply N.eq_add_0 in H; only 1: easy; only 1: discriminate; only 1: simpl_of_lu; only 1: split; only 1: intros ?; only 1: apply N.eq_add_0 in H; only 1: easy; only 1: discriminate; only 1: simpl_of_lu; only 1: split; only 1: intros ?; only 1: apply N.eq_add_0 in H; only 1: easy; only 1: discriminate; only 1: simpl_of_lu; only 1: split; only 1: intros ?; only 1: apply N.eq_add_0 in H; only 1: easy; only 1: discriminate; only 1: simpl_of_lu; only 1: split; only 1: intros ?; only 1: apply N.eq_add_0 in H; only 1: easy; only 1: discriminate; only 1: simpl_of_lu; only 1: split; only 1: intros ?; only 1: apply N.eq_add_0 in H; only 1: easy; only 1: discriminate).	0.200838	86
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.to_of_lu_tenfold	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.Nadd_alt	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zis_gcd_mult	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.rel_prime_bezout	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.bezout_rel_prime	120	0.0.0.0.0.0.0	synth with cache (only 1: simple induction 1; only 1: constructor; only 1: auto with zarith; only 1: auto with zarith; only 1: intros; only 1: rewrite <- H0; only 1: auto with zarith).	0.049652	7
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Gauss	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.rel_prime_mult	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.to_of_lu	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.to_of	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.rel_prime_cross_prod	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.to_uint_nonzero	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.to_uint_nonnil	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.to_uint_inj	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zis_gcd_rel_prime	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.to_uint_pos_surj	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.rel_prime_sym	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: red; only 1: apply Zis_gcd_sym; only 1: auto with zarith).	0.021534	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.of_uint_norm	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction d; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.043214	12
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.rel_prime_div	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.rel_prime_1	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: red; only 1: apply Zis_gcd_intro; only 1: auto with zarith; only 1: exists n; only 1: rewrite Z.mul_1_r; only 1: auto; only 1: auto).	0.028317	8
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.of_inj	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- to_of; only 1: rewrite <- to_of; only 1: f_equal; only 1: easy).	0.019460	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Unsigned.of_iff	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intros; only 1: rewrite <- to_of; only 1: rewrite <- to_of; only 1: f_equal; only 1: easy; only 1: intros ?; only 1: rewrite <- of_uint_norm; only 1: rewrite H; only 1: apply of_uint_norm).	0.023951	10
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.not_rel_prime_0	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Signed.of_to	120	0.0.0.0	synth with cache (only 1: unfold BinPosDef.Pos.to_int; only 1: unfold BinPosDef.Pos.of_int; only 1: rewrite Unsigned.of_to; only 1: easy).	0.022221	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.rel_prime_mod	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Signed.to_of	120	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold BinPosDef.Pos.of_int; only 1: destruct d; only 1: simpl norm; only 1: rewrite <- Unsigned.to_of; only 1: destruct BinPosDef.Pos.of_uint; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: injection H as; only 1: intropattern subst <- H; only 1: easy; only 1: intros ?; only 1: discriminate H).	0.034367	13
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.rel_prime_mod_rev	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Signed.to_int_inj	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zrel_prime_neq_mod_0	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Signed.to_int_pos_surj	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Signed.of_int_norm	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalPos.Signed.of_inj_pos	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.prime_divisors	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.prime_rel_prime	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.rel_prime_le_prime	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.prime_mult	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.not_prime_0	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.not_prime_1	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.prime_2	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.prime_3	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.prime_ge_2	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Z_0_1_more	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.prime_alt	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.square_not_prime	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.prime_div_prime	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zgcd_is_gcd	120	0.0.0.0	synth with cache (only 1: constructor; only 1: apply Z.gcd_divide_l; only 1: apply Z.gcd_divide_r; only 1: apply Z.gcd_greatest).	0.021381	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zgcd_spec	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zdivide_Zgcd	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply Z.gcd_greatest; only 1: easy; only 1: easy).	0.024038	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zis_gcd_gcd	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zgcd_div_swap0	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zgcd_div_swap	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zgcd_ass	120	0.0	synth with cache (only 1: symmetry; only 1: apply Z.gcd_assoc).	0.021261	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.Zgcd_1_rel_prime	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.rel_prime_dec	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.prime_dec_aux	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.prime_dec	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znumtheory.not_prime_divide	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qminmax.Q.plus_max_distr_l	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.Nplength_infty	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.Nplength_zeros	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.Nplength_one	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.Nplength_first_one	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.ni_min_idemp	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.ni_min_comm	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.ni_min_assoc	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.ni_min_O_l	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.ni_min_O_r	120	0.0.0	synth with cache (only 1: intros; only 1: rewrite ni_min_comm; only 1: apply ni_min_O_l).	0.019576	3
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.ni_min_inf_l	120	0	synth with cache (only 1: trivial).	0.016460	1
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.ni_min_inf_r	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.ni_le_refl	120	0	synth with cache (only 1: exact ni_min_idemp).	0.017184	1
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.ni_le_antisym	120	0.0.0.0.0.0.0	synth with cache (only 1: unfold ni_le; only 1: intros ?; only 1: intros ?; only 1: rewrite ni_min_comm; only 1: intros ?; only 1: rewrite H; only 1: trivial).	0.026514	7
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.ni_le_trans	120	0.0.0.0.0.0	synth with cache (only 1: unfold ni_le; only 1: intros; only 1: rewrite <- H; only 1: rewrite ni_min_assoc; only 1: rewrite H0; only 1: reflexivity).	0.044540	6
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.ni_le_min_1	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.ni_le_min_2	120	0.0.0.0.0	synth with cache (only 1: unfold ni_le; only 1: intros; only 1: rewrite ni_min_assoc; only 1: rewrite ni_min_idemp; only 1: reflexivity).	0.024477	5
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.ni_min_case	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.ni_le_total	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.ni_le_min_induc	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.NArith.TestOrder.test	120	0	synth with cache (only 1: N.order).	0.018481	1
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.le_ni_le	120	0.0.0.0.0.0.0	synth with cache (only 1: intros *; only 1: intros ?; only 1: unfold ni_le; only 1: unfold ni_min; only 1: rewrite Peano.min_l; only 1: reflexivity; only 1: trivial).	0.022277	7
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.ni_le_le	120	0.0.0.0.0	synth with cache (only 1: unfold ni_le; only 1: unfold ni_min; only 1: intros; only 1: inversion H; only 1: apply le_min_r).	0.021888	5
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.Nplength_lb	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.Nplength_ub	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.Npdist_eq_1	120	0.0.0.0	synth with cache (only 1: intros; only 1: unfold Npdist; only 1: rewrite N.lxor_nilpotent; only 1: reflexivity).	0.022790	4
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.Npdist_eq_2	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply N.lxor_eq; only 1: apply Nplength_infty; only 1: exact H).	0.023328	4
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.Npdist_comm	120	0.0.0.0	synth with cache (only 1: unfold Npdist; only 1: intros; only 1: rewrite N.lxor_comm; only 1: reflexivity).	0.025011	4
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.Nplength_ultra_1	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.Nplength_ultra	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndist.Npdist_ultra	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.SetoidChoice.setoid_choice	120	0.0.0.0.0.0	synth with cache (only 1: apply setoid_functional_choice_first_characterization; only 1: split; only 1: exact choice; only 1: split; only 1: exact extensional_function_representative; only 1: exact classic).	0.064210	6
coq-tactician-stdlib.8.11.dev	Coq.Logic.SetoidChoice.representative_choice	120	0.0	synth with cache (only 1: apply setoid_fun_choice_imp_repr_fun_choice; only 1: exact setoid_choice).	0.020573	2
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalDescription.excluded_middle_informative	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalDescription.classical_definite_description	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalDescription.dependent_unique_choice	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalDescription.unique_choice	120
coq-tactician-stdlib.8.11.dev	Coq.omega.PreOmega.Z.mod_0_r_ext	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: subst; only 1: destruct x; only 1: auto; only 1: auto; only 1: auto).	0.021246	6
coq-tactician-stdlib.8.11.dev	Coq.omega.PreOmega.Z.div_0_r_ext	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: subst; only 1: destruct x; only 1: auto; only 1: auto; only 1: auto).	0.019231	6
coq-tactician-stdlib.8.11.dev	Coq.omega.PreOmega.Z.rem_0_r_ext	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: subst; only 1: destruct x; only 1: easy; only 1: easy; only 1: easy).	0.016593	6
coq-tactician-stdlib.8.11.dev	Coq.omega.PreOmega.Z.quot_0_r_ext	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: subst; only 1: destruct x; only 1: easy; only 1: easy; only 1: easy).	0.018545	6
coq-tactician-stdlib.8.11.dev	Coq.omega.PreOmega.Z.rem_bound_pos_pos	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply Z.rem_bound_pos; only 1: assumption; only 1: assumption).	0.019293	4
coq-tactician-stdlib.8.11.dev	Coq.omega.PreOmega.Z.rem_bound_neg_pos	120	0.0.0.0.0.0	synth with cache (only 1: rewrite <- Z.rem_opp_r'; only 1: intros; only 1: apply Z.rem_bound_pos; only 1: assumption; only 1: rewrite Z.opp_pos_neg; only 1: assumption).	0.109355	6
coq-tactician-stdlib.8.11.dev	Coq.omega.PreOmega.Z.rem_bound_pos_neg	120
coq-tactician-stdlib.8.11.dev	Coq.omega.PreOmega.Z.rem_bound_neg_neg	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.prop_ext	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.proof_irrel	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.guarded_rel_choice	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.AC_bool_subset_to_bool	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.pred_ext_and_rel_choice_imp_EM	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.Diaconescu.ProofIrrel_RelChoice_imp_EqEM.a1'	120	0.0	synth with cache (only 1: exists a1; only 1: auto).	0.017204	2
coq-tactician-stdlib.8.11.dev	Coq.Logic.Diaconescu.ProofIrrel_RelChoice_imp_EqEM.a2'	120	0.0	synth with cache (only 1: exists a1; only 1: auto).	0.017149	2
coq-tactician-stdlib.8.11.dev	Coq.Logic.Diaconescu.ProofIrrel_RelChoice_imp_EqEM.projT1_injective	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.Diaconescu.ProofIrrel_RelChoice_imp_EqEM.decide	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct x; only 1: destruct o; only 1: exists true; only 1: auto; only 1: exists false; only 1: auto).	0.041228	7
coq-tactician-stdlib.8.11.dev	Coq.Logic.Diaconescu.ProofIrrel_RelChoice_imp_EqEM.proof_irrel_rel_choice_imp_eq_dec	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.Diaconescu.ProofIrrel_RelChoice_imp_EqEM.proof_irrel_rel_choice_imp_eq_dec'	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.Diaconescu.ExtensionalEpsilon_imp_EM.extensional_epsilon_imp_EM	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.radd_ext_Proper	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rmul_ext_Proper	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.ropp_ext_Proper	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rsub_ext_Proper	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rinv_ext_Proper	120	0	synth with cache (only 1: exact SRinv_ext).	0.016240	1
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.ceqb_spec	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Ptestbit_Pbit	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Ntestbit_Nbit	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Pbit_Ptestbit	120	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- Ptestbit_Pbit; only 1: rewrite N2Nat.id; only 1: trivial).	0.022423	4
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nbit_Ntestbit	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nshiftr_nat_S	120	0	synth with cache (only 1: reflexivity).	0.017896	1
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nshiftl_nat_S	120	0	synth with cache (only 1: reflexivity).	0.016768	1
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nshiftr_nat_equiv	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: symmetry; only 1: apply Pos2Nat.inj_iter).	0.021440	8
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nshiftr_equiv_nat	120	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- Nshiftr_nat_equiv; only 1: rewrite Nat2N.id; only 1: easy).	0.019760	4
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalChoice.singleton_choice	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nshiftl_nat_equiv	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct a; only 1: intros ?; only 1: destruct n; only 1: simpl; only 1: auto; only 1: simpl; only 1: unfold BinNatDef.N.shiftl_nat; only 1: induction BinPosDef.Pos.to_nat; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite IHn; only 1: easy; only 1: intros ?; only 1: destruct n; only 1: simpl; only 1: auto; only 1: simpl; only 1: unfold BinNatDef.N.shiftl_nat; only 1: rewrite <- Pos2Nat.inj_iter; only 1: symmetry; only 1: apply Pos.iter_swap_gen; only 1: easy).	0.040161	24
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nshiftl_equiv_nat	120	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- Nshiftl_nat_equiv; only 1: rewrite Nat2N.id; only 1: easy).	0.020418	4
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalChoice.choice	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nshiftr_nat_spec	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nshiftl_nat_spec_high	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nshiftl_nat_spec_low	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Pshiftl_nat_0	120	0	synth with cache (only 1: reflexivity).	0.014542	1
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Pshiftl_nat_S	120	0	synth with cache (only 1: reflexivity).	0.015342	1
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Pshiftl_nat_N	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Pshiftl_nat_plus	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Pxor_semantics	120	0.0.0.0	synth with cache (only 1: rewrite <- Ntestbit_Nbit; only 1: rewrite <- Ptestbit_Pbit; only 1: rewrite <- Ptestbit_Pbit; only 1: apply N.pos_lxor_spec).	0.047711	4
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nxor_semantics	120	0.0.0.0	synth with cache (only 1: rewrite <- Ntestbit_Nbit; only 1: rewrite <- Ntestbit_Nbit; only 1: rewrite <- Ntestbit_Nbit; only 1: apply N.lxor_spec).	0.023933	4
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Por_semantics	120	0.0.0.0	synth with cache (only 1: rewrite <- Ptestbit_Pbit; only 1: rewrite <- Ptestbit_Pbit; only 1: rewrite <- Ptestbit_Pbit; only 1: apply N.pos_lor_spec).	0.022797	4
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nor_semantics	120	0.0.0.0	synth with cache (only 1: rewrite <- Ntestbit_Nbit; only 1: rewrite <- Ntestbit_Nbit; only 1: rewrite <- Ntestbit_Nbit; only 1: apply N.lor_spec).	0.023256	4
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Pand_semantics	120	0.0.0.0	synth with cache (only 1: rewrite <- Ntestbit_Nbit; only 1: rewrite <- Ptestbit_Pbit; only 1: rewrite <- Ptestbit_Pbit; only 1: apply N.pos_land_spec).	0.022044	4
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nand_semantics	120	0.0.0.0	synth with cache (only 1: rewrite <- Ntestbit_Nbit; only 1: rewrite <- Ntestbit_Nbit; only 1: rewrite <- Ntestbit_Nbit; only 1: apply N.land_spec).	0.021864	4
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Pdiff_semantics	120	0.0.0.0	synth with cache (only 1: rewrite <- Ntestbit_Nbit; only 1: rewrite <- Ptestbit_Pbit; only 1: rewrite <- Ptestbit_Pbit; only 1: apply N.pos_ldiff_spec).	0.021996	4
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Ndiff_semantics	120	0.0.0.0	synth with cache (only 1: rewrite <- Ntestbit_Nbit; only 1: rewrite <- Ntestbit_Nbit; only 1: rewrite <- Ntestbit_Nbit; only 1: apply N.ldiff_spec).	0.021971	4
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Pbit_faithful_0	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Pbit_faithful	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nbit_faithful	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nbit_faithful_iff	120	0.0.0.0.0	synth with cache (only 1: split; only 1: apply Nbit_faithful; only 1: intros; only 1: subst; only 1: easy).	0.024452	5
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nbit0_correct	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Ndouble_bit0	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Ndouble_plus_one_bit0	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Ndiv2_double	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Ndiv2_double_plus_one	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Ndiv2_correct	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nxor_bit0	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- Nbit0_correct; only 1: rewrite Nxor_semantics; only 1: rewrite Nbit0_correct; only 1: rewrite Nbit0_correct; only 1: reflexivity).	0.022910	6
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nxor_div2	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Nbit_faithful; only 1: unfold eqf; only 1: intros ?; only 1: rewrite Nxor_semantics; only 1: rewrite Ndiv2_correct; only 1: rewrite Nxor_semantics; only 1: rewrite Ndiv2_correct; only 1: rewrite Ndiv2_correct; only 1: reflexivity).	0.030192	10
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nneg_bit0	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- xorb_true_l; only 1: rewrite <- H; only 1: rewrite Nxor_bit0; only 1: rewrite xorb_assoc_reverse; only 1: rewrite xorb_nilpotent; only 1: rewrite xorb_false_r; only 1: reflexivity).	0.030440	8
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nneg_bit0_1	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply Nneg_bit0; only 1: rewrite H; only 1: reflexivity).	0.026203	4
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nneg_bit0_2	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply Nneg_bit0; only 1: rewrite H; only 1: reflexivity).	0.022284	4
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nsame_bit0	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nbit0_less	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nbit0_gt	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nless_not_refl	120	0.0.0.0	synth with cache (only 1: intros ?; only 1: unfold Nless; only 1: rewrite N.lxor_nilpotent; only 1: trivial).	0.025085	4
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nless_def_1	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nless_def_2	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nless_def_3	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply Nbit0_less; only 1: apply Ndouble_bit0; only 1: apply Ndouble_plus_one_bit0).	0.019478	4
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nless_def_4	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply Nbit0_gt; only 1: apply Ndouble_plus_one_bit0; only 1: apply Ndouble_bit0).	0.018720	4
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nless_z	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.N0_less_1	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.N0_less_2	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nless_trans	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nless_total	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Bv2N_N2Bv	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Bv2N_Nsize	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Bv2N_Nsize_1	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: apply @VectorDef.rectS; only 1: intros; only 1: simpl; only 1: destruct a; only 1: compute; only 1: split; only 1: intros ?; only 1: easy; only 1: intros ?; only 1: easy; only 1: compute; only 1: split; only 1: intros ?; only 1: inversion H; only 1: intros ?; only 1: inversion H; only 1: intros; only 1: simpl; only 1: destruct a; only 1: destruct @Bv2N; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: destruct @Bv2N; only 1: simpl; only 1: intuition; only 1: discriminate; only 1: discriminate; only 1: simpl; only 1: intuition).	0.158487	31
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Bv2N_upper_bound	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.ByteV2N_upper_bound	120	0.0.0	synth with cache (only 1: unfold ByteV2N; only 1: unfold compose; only 1: apply Bv2N_upper_bound).	0.032287	3
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.N2Bv_N2Bv_gen	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.N2Bv_N2Bv_gen_above	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.N2Bv_Bv2N	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nbit0_Blow	120	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: apply @VectorDef.caseS; only 1: intros; only 1: unfold Blow; only 1: simpl; only 1: destruct @Bv2N; only 1: simpl; only 1: destruct h; only 1: auto; only 1: auto; only 1: simpl; only 1: destruct h; only 1: auto; only 1: auto).	0.053712	13
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Bnth_Nbit	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nbit_Nsize	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nbit_Bth	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nxor_BVxor	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.Nand_BVand	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.N2Bv_sized_Nsize	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.N2Bv_sized_Bv2N	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndigits.N2Bv_N2Bv_sized_above	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.IndefiniteDescription.constructive_definite_description	120	0.0.0	synth with cache (only 1: intros; only 1: apply constructive_indefinite_description; only 1: firstorder).	0.021291	3
coq-tactician-stdlib.8.11.dev	Coq.Logic.IndefiniteDescription.functional_choice	120	0.1	synth with cache (only 1: apply constructive_indefinite_descr_fun_choice; only 1: exact constructive_indefinite_description).	0.025552	8
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalEpsilon.constructive_definite_description	120	0.0.0	synth with cache (only 1: intros; only 1: apply constructive_indefinite_description; only 1: firstorder).	0.023053	3
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalEpsilon.excluded_middle_informative	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalEpsilon.classical_indefinite_description	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalEpsilon.epsilon_inh_irrelevance	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold epsilon; only 1: unfold classical_indefinite_description; only 1: destruct excluded_middle_informative; only 1: trivial; only 1: destruct n; only 1: trivial).	0.049862	7
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalEpsilon.choice	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.Epsilon.constructive_indefinite_description	120	0.0	synth with cache (only 1: apply epsilon_imp_constructive_indefinite_description; only 1: exact epsilon_statement).	0.020248	2
coq-tactician-stdlib.8.11.dev	Coq.Logic.Epsilon.small_drinkers'_paradox	120	0.0	synth with cache (only 1: apply epsilon_imp_small_drinker; only 1: exact epsilon_statement).	0.019501	2
coq-tactician-stdlib.8.11.dev	Coq.Logic.Epsilon.iota_statement	120	0.0.0.0	synth with cache (only 1: intros; only 1: destruct epsilon_statement with (P := P); only 1: firstorder; only 1: firstorder).	0.024567	4
coq-tactician-stdlib.8.11.dev	Coq.Logic.Epsilon.constructive_definite_description	120	0.1	synth with cache (only 1: apply iota_imp_constructive_definite_description; only 1: exact iota_statement).	0.021341	3
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.functional_rel_reification_and_rel_choice_imp_fun_choice	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.fun_choice_imp_rel_choice	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.fun_choice_imp_functional_rel_reification	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.fun_choice_iff_rel_choice_and_functional_rel_reification	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.rel_choice_and_proof_irrel_imp_guarded_rel_choice	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.rel_choice_indep_of_general_premises_imp_guarded_rel_choice	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.guarded_rel_choice_imp_rel_choice	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.subset_types_imp_guarded_rel_choice_iff_rel_choice	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.guarded_iff_omniscient_rel_choice	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.guarded_fun_choice_imp_indep_of_general_premises	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.guarded_fun_choice_imp_fun_choice	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.fun_choice_and_indep_general_prem_imp_guarded_fun_choice	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.fun_choice_and_indep_general_prem_iff_guarded_fun_choice	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.omniscient_fun_choice_imp_small_drinker	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.omniscient_fun_choice_imp_fun_choice	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.fun_choice_and_small_drinker_imp_omniscient_fun_choice	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.fun_choice_and_small_drinker_iff_omniscient_fun_choice	120	0	synth with cache (only 1: intuition auto using omniscient_fun_choice_imp_small_drinker, omniscient_fun_choice_imp_fun_choice, fun_choice_and_small_drinker_imp_omniscient_fun_choice).	0.014949	1
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.guarded_iff_omniscient_fun_choice	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.iota_imp_constructive_definite_description	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct X with (P := P); only 1: destruct H; only 1: red in H; only 1: auto; only 1: exists x; only 1: apply p; only 1: assumption).	0.069728	11
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.epsilon_imp_constructive_indefinite_description	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct X with (P := P); only 1: destruct H; only 1: auto; only 1: exists x; only 1: apply p; only 1: assumption).	0.017613	10
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.constructive_indefinite_description_and_small_drinker_imp_epsilon	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply X; only 1: apply H; only 1: assumption).	0.014201	8
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.epsilon_imp_small_drinker	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.constructive_indefinite_description_and_small_drinker_iff_epsilon	120	0	synth with cache (only 1: intuition auto using epsilon_imp_constructive_indefinite_description, constructive_indefinite_description_and_small_drinker_imp_epsilon, epsilon_imp_small_drinker).	0.011274	1
coq-tactician-stdlib.8.11.dev	Coq.QArith.QOrderedType.Q_as_OT.lt_strorder	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.QOrderedType.Q_as_OT.lt_compat	120	1	synth with cache (only 1: auto with *).	0.019744	7
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.classical_denumerable_description_imp_fun_choice	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.dep_non_dep_functional_choice	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.non_dep_dep_functional_choice	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.functional_choice_to_inhabited_forall_commute	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.inhabited_forall_commute_to_functional_choice	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.dep_non_dep_functional_rel_reification	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.non_dep_dep_functional_rel_reification	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.dep_iff_non_dep_functional_rel_reification	120	0	synth with cache (only 1: intuition auto using non_dep_dep_functional_rel_reification, dep_non_dep_functional_rel_reification).	0.014118	1
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.relative_non_contradiction_of_indefinite_descr	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.constructive_indefinite_descr_fun_choice	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.relative_non_contradiction_of_definite_descr	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.constructive_definite_descr_fun_reification	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.constructive_definite_descr_excluded_middle	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_div_mod_POS	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_div_mod	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Remainder_equiv	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_div_mod_full	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_mod_remainder	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_div_mod_eq	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: apply Z.div_mod; only 1: intros ?; only 1: intropattern subst -> H0; only 1: easy).	0.022361	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zmod_eq_full	120	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Z.mul_comm; only 1: apply Z.mod_eq; only 1: auto).	0.020267	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zmod_eq	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Zmod_eq_full; only 1: intros ?; only 1: intropattern subst -> H0; only 1: easy).	0.022396	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zdiv_eucl_exist	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalString.uint_of_char_spec	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct c; only 1: destruct b; only 1: destruct b0; only 1: destruct b1; only 1: destruct b2; only 1: destruct b3; only 1: destruct b4; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b4; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b3; only 1: destruct b4; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: injection H as; only 1: intropattern subst <- H; only 1: intuition; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b4; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b2; only 1: destruct b3; only 1: destruct b4; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b4; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b3; only 1: destruct b4; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: injection H as; only 1: intropattern subst <- H; only 1: intuition; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b4; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b1; only 1: destruct b2; only 1: destruct b3; only 1: destruct b4; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b4; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b3; only 1: destruct b4; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: injection H as; only 1: intropattern subst <- H; only 1: intuition; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b4; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b2; only 1: destruct b3; only 1: destruct b4; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: injection H as; only 1: intropattern subst <- H; only 1: intuition; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b4; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b3; only 1: destruct b4; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: injection H as; only 1: intropattern subst <- H; only 1: intuition; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b4; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b0; only 1: destruct b1; only 1: destruct b2; only 1: destruct b3; only 1: destruct b4; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b4; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b3; only 1: destruct b4; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: injection H as; only 1: intropattern subst <- H; only 1: intuition; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b4; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b2; only 1: destruct b3; only 1: destruct b4; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b4; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b3; only 1: destruct b4; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: injection H as; only 1: intropattern subst <- H; only 1: intuition; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b4; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b1; only 1: destruct b2; only 1: destruct b3; only 1: destruct b4; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b4; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b3; only 1: destruct b4; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: injection H as; only 1: intropattern subst <- H; only 1: intuition; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b4; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b2; only 1: destruct b3; only 1: destruct b4; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: injection H as; only 1: intropattern subst <- H; only 1: intuition; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b4; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b3; only 1: destruct b4; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: injection H as; only 1: intropattern subst <- H; only 1: intuition; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b4; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b5; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H; only 1: destruct b6; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: discriminate H).	3.761156	788
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zdiv_mod_unique	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zdiv_unique	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zmod_unique	120	0.0.0.0	synth with cache (only 1: intros; only 1: eapply Zmod_unique_full; only 1: eauto; only 1: eauto).	0.047435	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zmod_0_l	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zmod_0_r	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zdiv_0_l	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zdiv_0_r	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zmod_1_r	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zdiv_1_r	120	0.0.0	synth with cache (only 1: intros; only 1: zero_or_not a; only 1: apply Z.div_1_r).	0.019978	3
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_mod_same_full	120	0.0.0.0	synth with cache (only 1: intros; only 1: zero_or_not a; only 1: apply Z.mod_same; only 1: auto).	0.022974	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_mod_mult	120	0.0.0.0	synth with cache (only 1: intros; only 1: zero_or_not b; only 1: apply Z.mod_mul; only 1: auto).	0.024523	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_div_pos	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply Z.div_pos; only 1: auto using Z.gt_lt; only 1: auto using Z.gt_lt).	0.023086	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_div_ge0	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Z.le_ge; only 1: apply Z_div_pos; only 1: auto using Z.ge_le; only 1: auto using Z.ge_le).	0.020726	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_div_lt	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_div_ge	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Z.le_ge; only 1: apply Z.div_le_mono; only 1: auto using Z.gt_lt, Z.ge_le; only 1: auto using Z.gt_lt, Z.ge_le).	0.020486	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_div_le	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply Z.div_le_mono; only 1: auto using Z.gt_lt; only 1: auto using Z.gt_lt).	0.021742	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_mult_div_ge	120	0.0.0	synth with cache (only 1: intros; only 1: apply Z.mul_div_le; only 1: auto using Z.gt_lt).	0.024408	3
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_mult_div_ge_neg	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply Z.le_ge; only 1: apply Z.mul_div_ge; only 1: auto with zarith).	0.023866	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_div_exact_full_1	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: zero_or_not b; only 1: rewrite Z.div_exact; only 1: auto; only 1: auto).	0.036174	6
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_div_exact_full_2	120	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Z.div_exact; only 1: auto; only 1: auto).	0.021454	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zmod_le	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply Z.mod_le; only 1: assumption; only 1: assumption).	0.025593	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zdiv_lt_upper_bound	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite Z.mul_comm; only 1: apply Z.div_lt_upper_bound).	0.021290	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zdiv_le_upper_bound	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite Z.mul_comm; only 1: apply Z.div_le_upper_bound).	0.022630	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zdiv_le_lower_bound	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite Z.mul_comm; only 1: apply Z.div_le_lower_bound).	0.021783	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zdiv_le_compat_l	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zdiv_sgn	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_mod_plus_full	120	0.0.0.0	synth with cache (only 1: intros; only 1: zero_or_not c; only 1: apply Z.mod_add; only 1: auto).	0.031395	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zdiv_opp_opp	120	0.0.0.0	synth with cache (only 1: intros; only 1: zero_or_not b; only 1: apply Z.div_opp_opp; only 1: auto).	0.027131	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zmod_opp_opp	120	0.0.0.0	synth with cache (only 1: intros; only 1: zero_or_not b; only 1: apply Z.mod_opp_opp; only 1: auto).	0.032571	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_mod_zero_opp_full	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: zero_or_not b; only 1: apply Z.mod_opp_l_z; only 1: auto; only 1: auto).	0.030874	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_mod_nz_opp_full	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: zero_or_not b; only 1: apply Z.mod_opp_l_nz; only 1: auto; only 1: auto).	0.025724	5
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.fun_reification_descr_computational_excluded_middle_in_prop_context	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_mod_zero_opp_r	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: zero_or_not b; only 1: apply Z.mod_opp_r_z; only 1: auto; only 1: auto).	0.045833	5
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.functional_choice_imp_functional_dependent_choice	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalString.NilEmpty.usu	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction d; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite IHd; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite IHd; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite IHd; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite IHd; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite IHd; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite IHd; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite IHd; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite IHd; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite IHd; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite IHd; only 1: simpl; only 1: auto).	0.075553	43
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_mod_nz_opp_r	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: zero_or_not b; only 1: apply Z.mod_opp_r_nz; only 1: auto; only 1: auto).	0.033569	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_div_zero_opp_full	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: zero_or_not b; only 1: apply Z.div_opp_l_z; only 1: auto; only 1: auto).	0.032527	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalString.NilEmpty.sus	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_div_nz_opp_full	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: zero_or_not b; only 1: easy; only 1: intros; only 1: rewrite Z.div_opp_l_nz; only 1: auto; only 1: auto; only 1: auto).	0.035159	9
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_div_zero_opp_r	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: zero_or_not b; only 1: apply Z.div_opp_r_z; only 1: auto; only 1: auto).	0.025339	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalString.NilEmpty.isi	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_div_nz_opp_r	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: zero_or_not b; only 1: easy; only 1: intros; only 1: rewrite Z.div_opp_r_nz; only 1: auto; only 1: auto; only 1: auto).	0.036357	9
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zdiv_mult_cancel_r	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: zero_or_not b; only 1: apply Z.div_mul_cancel_r; only 1: auto; only 1: auto).	0.029201	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalString.NilEmpty.sis	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zdiv_mult_cancel_l	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.functional_dependent_choice_imp_functional_countable_choice	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalString.NilZero.uint_of_string_nonnil	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zmult_mod_distr_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalString.NilZero.sus	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct s; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: apply NilEmpty.sus in H; only 1: destruct d; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.031726	17
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_prop_repr	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_pred_repr	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalString.NilZero.usu	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct d; only 1: destruct 1; only 1: easy; only 1: intros ?; only 1: clear H; only 1: apply NilEmpty.usu; only 1: intros ?; only 1: clear H; only 1: apply NilEmpty.usu; only 1: intros ?; only 1: clear H; only 1: apply NilEmpty.usu; only 1: intros ?; only 1: clear H; only 1: apply NilEmpty.usu; only 1: intros ?; only 1: clear H; only 1: apply NilEmpty.usu; only 1: intros ?; only 1: clear H; only 1: apply NilEmpty.usu; only 1: intros ?; only 1: clear H; only 1: apply NilEmpty.usu; only 1: intros ?; only 1: clear H; only 1: apply NilEmpty.usu; only 1: intros ?; only 1: clear H; only 1: apply NilEmpty.usu; only 1: intros ?; only 1: clear H; only 1: apply NilEmpty.usu).	0.036903	33
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zmult_mod_distr_r	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zmod_mod	120	0.0.0.0	synth with cache (only 1: intros; only 1: zero_or_not n; only 1: apply Z.mod_mod; only 1: auto).	0.029019	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalString.NilZero.usu_nil	120	0	synth with cache (only 1: easy).	0.022010	1
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_function_repr	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.repr_fun_choice_imp_excluded_middle	120	0.0.0	synth with cache (only 1: intros ?; only 1: apply representative_boolean_partition_imp_excluded_middle; only 1: apply H).	0.020242	3
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zmult_mod	120	0.0.0.0	synth with cache (only 1: intros; only 1: zero_or_not n; only 1: apply Z.mul_mod; only 1: auto).	0.029298	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalString.NilZero.usu_gen	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct d; only 1: right; only 1: easy; only 1: left; only 1: apply NilEmpty.usu; only 1: left; only 1: apply NilEmpty.usu; only 1: left; only 1: apply NilEmpty.usu; only 1: left; only 1: apply NilEmpty.usu; only 1: left; only 1: apply NilEmpty.usu; only 1: left; only 1: apply NilEmpty.usu; only 1: left; only 1: apply NilEmpty.usu; only 1: left; only 1: apply NilEmpty.usu; only 1: left; only 1: apply NilEmpty.usu; only 1: left; only 1: apply NilEmpty.usu).	0.037254	23
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zplus_mod	120	0.0.0.0	synth with cache (only 1: intros; only 1: zero_or_not n; only 1: apply Z.add_mod; only 1: auto).	0.026266	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zminus_mod	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zplus_mod_idemp_l	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Zplus_mod; only 1: rewrite Zmod_mod; only 1: rewrite <- Zplus_mod; only 1: auto).	0.025424	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalString.NilZero.isi	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zplus_mod_idemp_r	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Zplus_mod; only 1: rewrite Zmod_mod; only 1: rewrite <- Zplus_mod; only 1: auto).	0.031876	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalString.NilZero.isi_posnil	120	0	synth with cache (only 1: reflexivity).	0.015202	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalString.NilZero.isi_negnil	120	0	synth with cache (only 1: reflexivity).	0.016762	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zminus_mod_idemp_l	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Zminus_mod; only 1: rewrite Zmod_mod; only 1: rewrite <- Zminus_mod; only 1: auto).	0.030571	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zminus_mod_idemp_r	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Zminus_mod; only 1: rewrite Zmod_mod; only 1: rewrite <- Zminus_mod; only 1: auto).	0.026524	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zmult_mod_idemp_l	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Zmult_mod; only 1: rewrite Zmod_mod; only 1: rewrite <- Zmult_mod; only 1: auto).	0.029271	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zmult_mod_idemp_r	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Zmult_mod; only 1: rewrite Zmod_mod; only 1: rewrite <- Zmult_mod; only 1: auto).	0.026067	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalString.NilZero.sis	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.EqualityModulo.eqm_refl	120	0.0	synth with cache (only 1: unfold eqm; only 1: auto).	0.025461	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.EqualityModulo.eqm_sym	120	0.0	synth with cache (only 1: unfold eqm; only 1: auto).	0.025829	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.EqualityModulo.eqm_trans	120	0.0.0.0.0.0.0	synth with cache (only 1: unfold eqm; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intropattern subst -> H; only 1: easy).	0.028180	7
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.EqualityModulo.eqm_setoid	120	0.0.0.0	synth with cache (only 1: constructor; only 1: exact eqm_refl; only 1: exact eqm_sym; only 1: exact eqm_trans).	0.022800	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.EqualityModulo.Zplus_eqm	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold eqm; only 1: red; only 1: red; only 1: red; only 1: intros; only 1: rewrite Zplus_mod; only 1: rewrite H; only 1: rewrite H0; only 1: rewrite <- Zplus_mod; only 1: auto).	0.050366	10
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.repr_fun_choice_imp_relational_choice	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.EqualityModulo.Zminus_eqm	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold eqm; only 1: red; only 1: red; only 1: red; only 1: intros; only 1: rewrite Zminus_mod; only 1: rewrite H; only 1: rewrite H0; only 1: rewrite <- Zminus_mod; only 1: auto).	0.049456	10
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.gen_setoid_fun_choice_imp_setoid_fun_choice	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply H; only 1: easy; only 1: apply @eq_equivalence; only 1: intros *; only 1: intros ?; only 1: intros ?; only 1: intropattern subst <- H4; only 1: firstorder; only 1: easy).	0.094705	17
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.EqualityModulo.Zmult_eqm	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold eqm; only 1: red; only 1: red; only 1: red; only 1: intros; only 1: rewrite Zmult_mod; only 1: rewrite H; only 1: rewrite H0; only 1: rewrite <- Zmult_mod; only 1: auto).	0.037684	10
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.EqualityModulo.Zopp_eqm	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.EqualityModulo.Zmod_eqm	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_gen_setoid_fun_choice	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zdiv_Zdiv	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: zero_or_not b; only 1: rewrite Z.mul_comm; only 1: zero_or_not c; only 1: rewrite Z.mul_comm; only 1: apply Z.div_div; only 1: auto; only 1: apply Z.le_neq; only 1: auto).	0.039684	9
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zmod_div	120	0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: zero_or_not b; only 1: auto using Z.mod_div).	0.037090	4
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.setoid_fun_choice_iff_gen_setoid_fun_choice	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0	synth with cache (only 1: split; only 1: auto using gen_setoid_fun_choice_imp_setoid_fun_choice, setoid_fun_choice_imp_gen_setoid_fun_choice; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply H; only 1: easy; only 1: apply @eq_equivalence; only 1: intros *; only 1: intros ?; only 1: intros ?; only 1: intropattern subst <- H4; only 1: firstorder; only 1: easy).	0.106910	29
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zdiv_mult_le	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: zero_or_not b; only 1: rewrite Z.mul_0_r; only 1: easy; only 1: apply Z.div_mul_le; only 1: auto; only 1: apply Z.le_neq; only 1: auto; only 1: auto).	0.039251	9
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zmod_divides	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Z.mod_divide; only 1: split; only 1: intros ?; only 1: destruct H0; only 1: exists x; only 1: subst; only 1: auto with zarith; only 1: intros ?; only 1: destruct H0; only 1: exists x; only 1: subst; only 1: auto with zarith; only 1: auto).	0.045139	14
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zmod_odd	120	0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite <- Z.bit0_odd; only 1: rewrite <- Z.bit0_mod; only 1: easy).	0.030539	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zmod_even	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite Zmod_odd; only 1: rewrite Zodd_even_bool; only 1: destruct BinIntDef.Z.even; only 1: easy; only 1: easy).	0.028312	6
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zodd_mod	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite Zmod_odd; only 1: destruct BinIntDef.Z.odd; only 1: easy; only 1: easy).	0.032497	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zeven_mod	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite Zmod_even; only 1: destruct BinIntDef.Z.even; only 1: easy; only 1: easy).	0.028899	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_mod_same	120	0.0	synth with cache (only 1: intros; only 1: apply Z_mod_same_full).	0.021054	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_div_same	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Z_div_same_full; only 1: intros ?; only 1: intropattern subst -> H0; only 1: easy).	0.030259	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_div_plus	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Z_div_plus_full; only 1: intros ?; only 1: intropattern subst -> H0; only 1: easy).	0.064525	5
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_simple_setoid_fun_choice	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_div_mult	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Z_div_mult_full; only 1: intros ?; only 1: intropattern subst -> H0; only 1: easy).	0.060548	5
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.simple_setoid_fun_choice_imp_setoid_fun_choice	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.setoid_fun_choice_iff_simple_setoid_fun_choice	120	1.1.0	synth with cache (only 1: split; only 1: auto using simple_setoid_fun_choice_imp_setoid_fun_choice, setoid_fun_choice_imp_simple_setoid_fun_choice; only 1: auto using simple_setoid_fun_choice_imp_setoid_fun_choice, setoid_fun_choice_imp_simple_setoid_fun_choice).	0.046816	15
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_mod_plus	120	0.0	synth with cache (only 1: intros; only 1: apply Z_mod_plus_full).	0.024437	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_div_exact_1	120	0.0.0	synth with cache (only 1: intros; only 1: apply Z_div_exact_full_1; only 1: auto with zarith).	0.024823	3
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_fun_choice	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_functional_rel_reification	120	0.1.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply fun_choice_imp_functional_rel_reification; only 1: apply setoid_fun_choice_imp_fun_choice; only 1: easy).	0.023723	8
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_div_exact_2	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Z_div_exact_full_2; only 1: intros ?; only 1: intropattern subst -> H1; only 1: easy; only 1: auto).	0.037753	6
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Z_mod_zero_opp	120	0.0.0	synth with cache (only 1: intros; only 1: apply Z_mod_zero_opp_full; only 1: auto).	0.024968	3
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_repr_fun_choice	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply H; only 1: firstorder; only 1: firstorder; only 1: firstorder).	0.109834	8
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zmod_POS_correct	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction a; only 1: simpl; only 1: rewrite IHa; only 1: destruct BinIntDef.Z.pos_div_eucl; only 1: simpl; only 1: case Z.ltb_spec; only 1: reflexivity; only 1: reflexivity; only 1: simpl; only 1: rewrite IHa; only 1: destruct BinIntDef.Z.pos_div_eucl; only 1: simpl; only 1: case Z.ltb_spec; only 1: reflexivity; only 1: reflexivity; only 1: simpl; only 1: case Z.leb_spec; only 1: trivial; only 1: trivial).	0.107881	19
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.functional_rel_reification_and_repr_fun_choice_imp_setoid_fun_choice	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zmod'_correct	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.functional_rel_reification_and_repr_fun_choice_iff_setoid_fun_choice	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intros; only 1: apply functional_rel_reification_and_repr_fun_choice_imp_setoid_fun_choice; only 1: easy; only 1: easy; only 1: intros; only 1: split; only 1: intros ?; only 1: intros ?; only 1: apply setoid_fun_choice_imp_functional_rel_reification; only 1: easy; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply H; only 1: firstorder; only 1: firstorder; only 1: firstorder).	0.127994	18
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.Zdiv_eucl_extended	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.div_Zdiv	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.fun_choice_and_ext_functions_repr_and_excluded_middle_imp_setoid_fun_choice	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zdiv.mod_Zmod	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.setoid_functional_choice_first_characterization	120	0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intros ?; only 1: destruct H; only 1: destruct H0; only 1: apply functional_rel_reification_and_repr_fun_choice_imp_setoid_fun_choice; only 1: intros ?; only 1: intros ?; only 1: apply fun_choice_imp_functional_rel_reification; only 1: apply H; only 1: apply fun_choice_and_ext_functions_repr_and_excluded_middle_imp_setoid_fun_choice; only 1: easy; only 1: easy; only 1: easy; only 1: intros ?; only 1: split; only 1: intros ?; only 1: intros ?; only 1: apply setoid_fun_choice_imp_fun_choice; only 1: easy; only 1: split; only 1: apply repr_fun_choice_imp_ext_function_repr; only 1: apply setoid_fun_choice_imp_repr_fun_choice; only 1: easy; only 1: apply repr_fun_choice_imp_excluded_middle; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply H; only 1: firstorder; only 1: firstorder; only 1: firstorder).	0.319331	42
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Zpower_nat_0_r	120	0	synth with cache (only 1: reflexivity).	0.017675	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Zpower_nat_succ_r	120	0	synth with cache (only 1: reflexivity).	0.017507	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Zpower_nat_is_exp	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Zpower_pos_nat	120	0	synth with cache (only 1: apply Pos2Nat.inj_iter).	0.016217	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Zpower_nat_Z	120	0.0.0.0.0.0.0.0	synth with cache (only 1: induction n; only 1: trivial; only 1: rewrite Zpower_nat_succ_r; only 1: rewrite Nat2Z.inj_succ; only 1: rewrite Z.pow_succ_r; only 1: f_equal; only 1: easy; only 1: apply Nat2Z.is_nonneg).	0.026986	8
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Zpower_nat_Zpower	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Zpower_nat_Z; only 1: rewrite Zabs2Nat.id_abs; only 1: rewrite Z.abs_eq; only 1: easy; only 1: trivial).	0.022333	6
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Zpower_pos_is_exp	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Zpower_exp	120	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.pow_add_r).	0.038210	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Powers_of_2.shift_nat_equiv	120	0	synth with cache (only 1: reflexivity).	0.016564	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Powers_of_2.shift_pos_equiv	120	0	synth with cache (only 1: reflexivity).	0.016804	1
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.fun_choice_and_ext_pred_ext_and_proof_irrel_imp_setoid_fun_choice	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Powers_of_2.shift_equiv	120	0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: intros; only 1: apply Pos.iter_swap_gen; only 1: easy; only 1: destruct 1; only 1: easy).	0.029611	8
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Powers_of_2.two_power_nat_equiv	120	0.0.0.0.0.0.0	synth with cache (only 1: induction n; only 1: trivial; only 1: rewrite Nat2Z.inj_succ; only 1: rewrite Z.pow_succ_r; only 1: rewrite <- IHn; only 1: easy; only 1: apply Nat2Z.is_nonneg).	0.043458	7
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Powers_of_2.two_power_pos_equiv	120	0.0	synth with cache (only 1: apply Pos.iter_swap_gen; only 1: easy).	0.030896	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Powers_of_2.two_p_equiv	120	0.0.0.0	synth with cache (only 1: destruct x; only 1: trivial; only 1: apply two_power_pos_equiv; only 1: trivial).	0.040525	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Powers_of_2.two_power_nat_S	120	0	synth with cache (only 1: reflexivity).	0.016064	1
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.setoid_functional_choice_second_characterization	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intros ?; only 1: destruct H; only 1: destruct H0; only 1: apply functional_rel_reification_and_repr_fun_choice_imp_setoid_fun_choice; only 1: intros ?; only 1: intros ?; only 1: apply fun_choice_imp_functional_rel_reification; only 1: easy; only 1: apply fun_choice_and_ext_pred_ext_and_proof_irrel_imp_setoid_fun_choice; only 1: easy; only 1: easy; only 1: easy; only 1: intros ?; only 1: split; only 1: intros ?; only 1: intros ?; only 1: apply setoid_fun_choice_imp_fun_choice; only 1: easy; only 1: split; only 1: apply repr_fun_choice_imp_ext_pred_repr; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply H; only 1: firstorder; only 1: firstorder; only 1: firstorder; only 1: red; only 1: apply proof_irrelevance_cci; only 1: apply repr_fun_choice_imp_excluded_middle; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply H; only 1: firstorder; only 1: firstorder; only 1: firstorder).	0.280061	42
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Powers_of_2.shift_nat_plus	120	0.0.0.0.0.0	synth with cache (only 1: induction n; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: f_equal; only 1: easy).	0.021825	6
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Powers_of_2.shift_nat_correct	120	0.0.0.0.0.0	synth with cache (only 1: induction n; only 1: trivial; only 1: rewrite Zpower_nat_succ_r; only 1: rewrite <- Z.mul_assoc; only 1: rewrite <- IHn; only 1: easy).	0.029599	6
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Powers_of_2.two_power_nat_correct	120	0.0.0	synth with cache (only 1: rewrite two_power_nat_equiv; only 1: rewrite Zpower_nat_Z; only 1: easy).	0.017887	3
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Powers_of_2.shift_pos_nat	120	0	synth with cache (only 1: apply Pos2Nat.inj_iter).	0.018440	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Powers_of_2.two_power_pos_nat	120	0.0.0	synth with cache (only 1: unfold two_power_pos; only 1: rewrite shift_pos_nat; only 1: easy).	0.016336	3
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Powers_of_2.shift_pos_correct	120	0.0.0.0	synth with cache (only 1: rewrite shift_pos_nat; only 1: rewrite Zpower_pos_nat; only 1: rewrite shift_nat_correct; only 1: easy).	0.025578	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Powers_of_2.two_power_pos_correct	120	0	synth with cache (only 1: apply two_power_pos_equiv).	0.018801	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Powers_of_2.two_power_pos_is_exp	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Powers_of_2.two_p_is_exp	120	0.0.0.0	synth with cache (only 1: rewrite two_p_equiv; only 1: rewrite two_p_equiv; only 1: rewrite two_p_equiv; only 1: apply Z.pow_add_r).	0.025324	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Powers_of_2.two_p_gt_ZERO	120	0.0.0.0	synth with cache (only 1: Z.swap_greater; only 1: rewrite two_p_equiv; only 1: apply Z.pow_pos_nonneg; only 1: easy).	0.029120	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Powers_of_2.two_p_S	120	0.0.0	synth with cache (only 1: rewrite two_p_equiv; only 1: rewrite two_p_equiv; only 1: apply Z.pow_succ_r).	0.018584	3
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.Powers_of_2.two_p_pred	120	0.0.0.0.0.0.0	synth with cache (only 1: rewrite two_p_equiv; only 1: rewrite two_p_equiv; only 1: intros; only 1: apply Z.pow_lt_mono_r; only 1: easy; only 1: assumption; only 1: auto using Z.lt_pred_l).	0.024488	7
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.power_div_with_rest.Zdiv_rest_correct1	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: rewrite Pos2Nat.inj_iter; only 1: rewrite two_power_pos_nat; only 1: induction BinPosDef.Pos.to_nat; only 1: simpl; only 1: trivial; only 1: simpl; only 1: destruct nat_rect; only 1: destruct p0; only 1: unfold Zdiv_rest_aux; only 1: rewrite two_power_nat_S; only 1: f_equal; only 1: easy).	0.121406	12
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.power_div_with_rest.Zdiv_rest_correct2	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.power_div_with_rest.Zdiv_rest_correct	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.power_div_with_rest.Zdiv_rest_ok	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpower.power_div_with_rest.Zdiv_rest_shiftr	120
coq-tactician-stdlib.8.11.dev	Coq.Strings.HexString.Raw.to_N_of_pos	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: destruct base; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: destruct base; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: destruct base; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct base; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: destruct base; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: destruct base; only 1: reflexivity; only 1: reflexivity; only 1: destruct base; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: destruct base; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: destruct base; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: destruct base; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct base; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: destruct base; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: destruct base; only 1: reflexivity; only 1: reflexivity; only 1: destruct base; only 1: reflexivity; only 1: reflexivity; only 1: destruct base; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: destruct base; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: destruct base; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: destruct base; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct base; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: destruct base; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: destruct base; only 1: reflexivity; only 1: reflexivity; only 1: destruct base; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: destruct base; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: destruct base; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: destruct base; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct base; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: destruct base; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: destruct base; only 1: reflexivity; only 1: reflexivity; only 1: destruct base; only 1: reflexivity; only 1: reflexivity; only 1: destruct base; only 1: reflexivity; only 1: reflexivity; only 1: destruct base; only 1: reflexivity; only 1: reflexivity).	0.489493	172
coq-tactician-stdlib.8.11.dev	Coq.Strings.HexString.to_N_of_N	120	0.0.0	synth with cache (only 1: destruct n; only 1: reflexivity; only 1: apply Raw.to_N_of_pos).	0.021817	3
coq-tactician-stdlib.8.11.dev	Coq.Strings.HexString.to_Z_of_Z	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: cbv[of_Z to_Z]; only 1: destruct z; only 1: cbn; only 1: trivial; only 1: cbn; only 1: rewrite Raw.to_N_of_pos; only 1: cbn; only 1: trivial using BinInt.Z.pos_sub_opp; only 1: cbn; only 1: rewrite Raw.to_N_of_pos; only 1: cbn; only 1: trivial).	0.055549	12
coq-tactician-stdlib.8.11.dev	Coq.Strings.HexString.to_nat_of_nat	120	0.0.0.0	synth with cache (only 1: cbv[to_nat of_nat]; only 1: rewrite to_N_of_N; only 1: rewrite Nnat.Nat2N.id; only 1: easy).	0.021039	4
coq-tactician-stdlib.8.11.dev	Coq.Strings.HexString.to_pos_of_pos	120
coq-tactician-stdlib.8.11.dev	Coq.Strings.OctalString.Raw.to_N_of_pos	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: destruct base; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: destruct base; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: destruct base; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct base; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: destruct base; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: destruct base; only 1: reflexivity; only 1: reflexivity; only 1: destruct base; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: destruct base; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: destruct base; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: destruct base; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct base; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: destruct base; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: destruct base; only 1: reflexivity; only 1: reflexivity; only 1: destruct base; only 1: reflexivity; only 1: reflexivity; only 1: destruct base; only 1: reflexivity; only 1: reflexivity).	0.318070	84
coq-tactician-stdlib.8.11.dev	Coq.Strings.OctalString.to_N_of_N	120	0.0.0	synth with cache (only 1: destruct n; only 1: reflexivity; only 1: apply Raw.to_N_of_pos).	0.020312	3
coq-tactician-stdlib.8.11.dev	Coq.Strings.OctalString.to_Z_of_Z	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: cbv[of_Z to_Z]; only 1: destruct z; only 1: cbn; only 1: trivial; only 1: cbn; only 1: rewrite Raw.to_N_of_pos; only 1: cbn; only 1: trivial using BinInt.Z.pos_sub_opp; only 1: cbn; only 1: rewrite Raw.to_N_of_pos; only 1: cbn; only 1: trivial).	0.121005	12
coq-tactician-stdlib.8.11.dev	Coq.Strings.OctalString.to_nat_of_nat	120	0.0.0.0	synth with cache (only 1: cbv[to_nat of_nat]; only 1: rewrite to_N_of_N; only 1: rewrite Nnat.Nat2N.id; only 1: easy).	0.019176	4
coq-tactician-stdlib.8.11.dev	Coq.Strings.OctalString.to_pos_of_pos	120
coq-tactician-stdlib.8.11.dev	Coq.Strings.BinaryString.Raw.to_N_of_pos	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct p; only 1: destruct base; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: destruct base; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: cbn; only 1: rewrite to_N_of_pos; only 1: reflexivity; only 1: destruct base; only 1: reflexivity; only 1: reflexivity).	0.061439	18
coq-tactician-stdlib.8.11.dev	Coq.Strings.BinaryString.to_N_of_N	120	0.0.0	synth with cache (only 1: destruct n; only 1: reflexivity; only 1: apply Raw.to_N_of_pos).	0.020344	3
coq-tactician-stdlib.8.11.dev	Coq.Strings.BinaryString.Z_of_of_Z	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: cbv[of_Z to_Z]; only 1: destruct z; only 1: cbn; only 1: trivial; only 1: cbn; only 1: rewrite Raw.to_N_of_pos; only 1: cbn; only 1: trivial using BinInt.Z.pos_sub_opp; only 1: cbn; only 1: rewrite Raw.to_N_of_pos; only 1: cbn; only 1: trivial).	0.083162	12
coq-tactician-stdlib.8.11.dev	Coq.Strings.BinaryString.to_nat_of_nat	120	0.0.0.0	synth with cache (only 1: cbv[to_nat of_nat]; only 1: rewrite to_N_of_N; only 1: rewrite Nnat.Nat2N.id; only 1: easy).	0.033338	4
coq-tactician-stdlib.8.11.dev	Coq.Strings.BinaryString.to_pos_of_pos	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.inject_Z_injective	120	0.0.0.0.0	synth with cache (only 1: unfold Qeq; only 1: simpl; only 1: rewrite Z.mul_1_r; only 1: rewrite Z.mul_1_r; only 1: reflexivity).	0.025013	5
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qeq_alt	120	0.0	synth with cache (only 1: symmetry; only 1: apply Z.compare_eq_iff).	0.021899	2
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qlt_alt	120	0	synth with cache (only 1: reflexivity).	0.018023	1
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qgt_alt	120	0.0	synth with cache (only 1: symmetry; only 1: apply Z.gt_lt_iff).	0.018409	2
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qle_alt	120	0	synth with cache (only 1: reflexivity).	0.018449	1
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qge_alt	120	0.0	synth with cache (only 1: symmetry; only 1: apply Z.ge_le_iff).	0.018927	2
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qcompare_antisym	120	0.0	synth with cache (only 1: symmetry; only 1: apply Z.compare_antisym).	0.018574	2
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qcompare_spec	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Qeq; only 1: unfold Qlt; only 1: unfold Qcompare; only 1: case Z.compare_spec; only 1: constructor; only 1: easy; only 1: constructor; only 1: easy; only 1: constructor; only 1: easy).	0.033611	10
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qeq_refl	120	0	synth with cache (only 1: reflexivity).	0.018708	1
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qeq_sym	120	0	synth with cache (only 1: auto with qarith).	0.017726	1
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qeq_trans	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Q_Setoid	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qeq_dec	120	0	synth with cache (only 1: apply Z.eq_dec).	0.019922	1
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qeq_bool_iff	120	0.0	synth with cache (only 1: symmetry; only 1: apply Zeq_is_eq_bool).	0.019521	2
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qeq_bool_eq	120	0	synth with cache (only 1: apply Qeq_bool_iff).	0.017571	1
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qeq_eq_bool	120	0	synth with cache (only 1: apply Qeq_bool_iff).	0.016490	1
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qeq_bool_neq	120	0.0.0.0	synth with cache (only 1: rewrite <- Qeq_bool_iff; only 1: intros ?; only 1: intropattern subst -> H; only 1: easy).	0.027395	4
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qle_bool_iff	120	0.0	synth with cache (only 1: symmetry; only 1: apply Zle_is_le_bool).	0.077015	2
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qle_bool_imp_le	120	0	synth with cache (only 1: apply Qle_bool_iff).	0.075520	1
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qnot_eq_sym	120	0	synth with cache (only 1: auto with qarith).	0.073092	1
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qeq_bool_comm	120	0.0.0.0.0	synth with cache (only 1: apply eq_true_iff_eq; only 1: rewrite Qeq_bool_iff; only 1: rewrite Qeq_bool_iff; only 1: symmetry; only 1: easy).	0.022622	5
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qeq_bool_refl	120	0.0	synth with cache (only 1: rewrite Qeq_bool_iff; only 1: auto with qarith).	0.016066	2
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qeq_bool_sym	120	0.0.0	synth with cache (only 1: rewrite Qeq_bool_iff; only 1: rewrite Qeq_bool_iff; only 1: auto with qarith).	0.029400	3
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qeq_bool_trans	120	0.0.0.0	synth with cache (only 1: rewrite Qeq_bool_iff; only 1: rewrite Qeq_bool_iff; only 1: rewrite Qeq_bool_iff; only 1: apply Qeq_trans).	0.033510	4
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmake_Qdiv	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qplus_comp	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qopp_comp	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qminus_comp	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold Qminus; only 1: rewrite H; only 1: rewrite H0; only 1: auto with qarith).	0.050461	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.to_lu_succ	120	0	synth with cache (only 1: reflexivity).	0.016343	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.to_little_uint_succ	120	0.0.0.0.0.0	synth with cache (only 1: revert d; only 1: induction n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	0.024187	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.to_lu_equiv	120	0.0.0.0.0.0.0	synth with cache (only 1: induction n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite IHn; only 1: rewrite <- to_little_uint_succ; only 1: easy).	0.025597	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.to_uint_alt	120	0.0.0.0	synth with cache (only 1: unfold Init.Nat.to_uint; only 1: f_equal; only 1: symmetry; only 1: apply to_lu_equiv).	0.018298	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.of_lu_eqn	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction d; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	0.114508	23
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.of_lu_succ	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.of_to_lu	120	0.0.0.0.0.0.0	synth with cache (only 1: induction n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite of_lu_succ; only 1: f_equal; only 1: easy).	0.025593	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.of_lu_revapp	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.of_uint_acc_spec	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: revert n; only 1: induction d; only 1: intros; only 1: simpl Init.Nat.of_uint_acc; only 1: simpl usize; only 1: simpl; only 1: rewrite Nat.mul_1_r; only 1: easy; only 1: intros; only 1: simpl Init.Nat.of_uint_acc; only 1: rewrite Nat.tail_mul_spec; only 1: rewrite IHd; only 1: simpl usize; only 1: rewrite Nat.pow_succ_r'; only 1: unfold rev at 2; only 1: simpl revapp; only 1: rewrite of_lu_revapp; only 1: simpl of_lu; only 1: ring; only 1: intros; only 1: simpl Init.Nat.of_uint_acc; only 1: rewrite Nat.tail_mul_spec; only 1: rewrite IHd; only 1: simpl usize; only 1: rewrite Nat.pow_succ_r'; only 1: unfold rev at 2; only 1: simpl revapp; only 1: rewrite of_lu_revapp; only 1: simpl of_lu; only 1: ring; only 1: intros; only 1: simpl Init.Nat.of_uint_acc; only 1: rewrite Nat.tail_mul_spec; only 1: rewrite IHd; only 1: simpl usize; only 1: rewrite Nat.pow_succ_r'; only 1: unfold rev at 2; only 1: simpl revapp; only 1: rewrite of_lu_revapp; only 1: simpl of_lu; only 1: ring; only 1: intros; only 1: simpl Init.Nat.of_uint_acc; only 1: rewrite Nat.tail_mul_spec; only 1: rewrite IHd; only 1: simpl usize; only 1: rewrite Nat.pow_succ_r'; only 1: unfold rev at 2; only 1: simpl revapp; only 1: rewrite of_lu_revapp; only 1: simpl of_lu; only 1: ring; only 1: intros; only 1: simpl Init.Nat.of_uint_acc; only 1: rewrite Nat.tail_mul_spec; only 1: rewrite IHd; only 1: simpl usize; only 1: rewrite Nat.pow_succ_r'; only 1: unfold rev at 2; only 1: simpl revapp; only 1: rewrite of_lu_revapp; only 1: simpl of_lu; only 1: ring; only 1: intros; only 1: simpl Init.Nat.of_uint_acc; only 1: rewrite Nat.tail_mul_spec; only 1: rewrite IHd; only 1: simpl usize; only 1: rewrite Nat.pow_succ_r'; only 1: unfold rev at 2; only 1: simpl revapp; only 1: rewrite of_lu_revapp; only 1: simpl of_lu; only 1: ring; only 1: intros; only 1: simpl Init.Nat.of_uint_acc; only 1: rewrite Nat.tail_mul_spec; only 1: rewrite IHd; only 1: simpl usize; only 1: rewrite Nat.pow_succ_r'; only 1: unfold rev at 2; only 1: simpl revapp; only 1: rewrite of_lu_revapp; only 1: simpl of_lu; only 1: ring; only 1: intros; only 1: simpl Init.Nat.of_uint_acc; only 1: rewrite Nat.tail_mul_spec; only 1: rewrite IHd; only 1: simpl usize; only 1: rewrite Nat.pow_succ_r'; only 1: unfold rev at 2; only 1: simpl revapp; only 1: rewrite of_lu_revapp; only 1: simpl of_lu; only 1: ring; only 1: intros; only 1: simpl Init.Nat.of_uint_acc; only 1: rewrite Nat.tail_mul_spec; only 1: rewrite IHd; only 1: simpl usize; only 1: rewrite Nat.pow_succ_r'; only 1: unfold rev at 2; only 1: simpl revapp; only 1: rewrite of_lu_revapp; only 1: simpl of_lu; only 1: ring; only 1: intros; only 1: simpl Init.Nat.of_uint_acc; only 1: rewrite Nat.tail_mul_spec; only 1: rewrite IHd; only 1: simpl usize; only 1: rewrite Nat.pow_succ_r'; only 1: unfold rev at 2; only 1: simpl revapp; only 1: rewrite of_lu_revapp; only 1: simpl of_lu; only 1: ring).	0.545344	118
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.of_uint_alt	120	0.0.0	synth with cache (only 1: unfold Init.Nat.of_uint; only 1: rewrite of_uint_acc_spec; only 1: easy).	0.022383	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.of_to	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: rewrite to_uint_alt; only 1: rewrite of_uint_alt; only 1: rewrite rev_rev; only 1: induction n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite of_lu_succ; only 1: f_equal; only 1: easy).	0.028949	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.to_lu_tenfold	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.of_lu_0	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction d; only 1: easy; only 1: simpl_of_lu; only 1: rewrite Nat.add_0_l; only 1: split; only 1: intros ?; only 1: apply Nat.eq_mul_0_r in H; only 1: rewrite IHd in H; only 1: simpl; only 1: rewrite H; only 1: easy; only 1: auto; only 1: intros ?; only 1: simpl in H; only 1: destruct nztail; only 1: destruct IHd; only 1: intropattern subst -> H1; only 1: clear H0; only 1: easy; only 1: clear H0; only 1: easy; only 1: discriminate; only 1: discriminate; only 1: discriminate; only 1: discriminate; only 1: discriminate; only 1: discriminate; only 1: discriminate; only 1: discriminate; only 1: discriminate; only 1: discriminate; only 1: simpl_of_lu; only 1: easy; only 1: simpl_of_lu; only 1: easy; only 1: simpl_of_lu; only 1: easy; only 1: simpl_of_lu; only 1: easy; only 1: simpl_of_lu; only 1: easy; only 1: simpl_of_lu; only 1: easy; only 1: simpl_of_lu; only 1: easy; only 1: simpl_of_lu; only 1: easy; only 1: simpl_of_lu; only 1: easy).	0.212967	49
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.to_of_lu_tenfold	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.to_of_lu	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction d; only 1: reflexivity; only 1: simpl_of_lu; only 1: rewrite Nat.add_0_l; only 1: rewrite to_of_lu_tenfold; only 1: unfold lnorm; only 1: simpl; only 1: destruct nztail; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: assumption; only 1: simpl_of_lu; only 1: rewrite Nat.add_succ_l; only 1: rewrite Nat.add_0_l; only 1: rewrite to_lu_succ; only 1: rewrite to_of_lu_tenfold; only 1: unfold lnorm; only 1: simpl; only 1: destruct nztail; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: assumption; only 1: simpl_of_lu; only 1: rewrite Nat.add_succ_l; only 1: rewrite Nat.add_succ_l; only 1: rewrite Nat.add_0_l; only 1: rewrite to_lu_succ; only 1: rewrite to_lu_succ; only 1: rewrite to_of_lu_tenfold; only 1: unfold lnorm; only 1: simpl; only 1: destruct nztail; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: assumption; only 1: simpl_of_lu; only 1: rewrite Nat.add_succ_l; only 1: rewrite Nat.add_succ_l; only 1: rewrite Nat.add_succ_l; only 1: rewrite Nat.add_0_l; only 1: rewrite to_lu_succ; only 1: rewrite to_lu_succ; only 1: rewrite to_lu_succ; only 1: rewrite to_of_lu_tenfold; only 1: unfold lnorm; only 1: simpl; only 1: destruct nztail; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: assumption; only 1: simpl_of_lu; only 1: rewrite Nat.add_succ_l; only 1: rewrite Nat.add_succ_l; only 1: rewrite Nat.add_succ_l; only 1: rewrite Nat.add_succ_l; only 1: rewrite Nat.add_0_l; only 1: rewrite to_lu_succ; only 1: rewrite to_lu_succ; only 1: rewrite to_lu_succ; only 1: rewrite to_lu_succ; only 1: rewrite to_of_lu_tenfold; only 1: unfold lnorm; only 1: simpl; only 1: destruct nztail; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: assumption; only 1: simpl_of_lu; only 1: rewrite Nat.add_succ_l; only 1: rewrite Nat.add_succ_l; only 1: rewrite Nat.add_succ_l; only 1: rewrite Nat.add_succ_l; only 1: rewrite Nat.add_succ_l; only 1: rewrite Nat.add_0_l; only 1: rewrite to_lu_succ; only 1: rewrite to_lu_succ; only 1: rewrite to_lu_succ; only 1: rewrite to_lu_succ; only 1: rewrite to_lu_succ; only 1: rewrite to_of_lu_tenfold; only 1: unfold lnorm; only 1: simpl; only 1: destruct nztail; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: assumption; only 1: simpl_of_lu; only 1: rewrite Nat.add_succ_l; only 1: rewrite Nat.add_succ_l; only 1: rewrite Nat.add_succ_l; only 1: rewrite Nat.add_succ_l; only 1: rewrite Nat.add_succ_l; only 1: rewrite Nat.add_succ_l; only 1: rewrite Nat.add_0_l; only 1: rewrite to_lu_succ; only 1: rewrite to_lu_succ; only 1: rewrite to_lu_succ; only 1: rewrite to_lu_succ; only 1: rewrite to_lu_succ; only 1: rewrite to_lu_succ; only 1: rewrite to_of_lu_tenfold; only 1: unfold lnorm; only 1: simpl; only 1: destruct nztail; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: assumption; only 1: simpl_of_lu; only 1: rewrite Nat.add_succ_l; only 1: rewrite Nat.add_succ_l; only 1: rewrite Nat.add_succ_l; only 1: rewrite Nat.add_succ_l; only 1: rewrite Nat.add_succ_l; only 1: rewrite Nat.add_succ_l; only 1: rewrite Nat.add_succ_l; only 1: rewrite Nat.add_0_l; only 1: rewrite to_lu_succ; only 1: rewrite to_lu_succ; only 1: rewrite to_lu_succ; only 1: rewrite to_lu_succ; only 1: rewrite to_lu_succ; only 1: rewrite to_lu_succ; only 1: rewrite to_lu_succ; only 1: rewrite to_of_lu_tenfold; only 1: unfold lnorm; only 1: simpl; only 1: destruct nztail; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: assumption; only 1: simpl_of_lu; only 1: rewrite Nat.add_succ_l; only 1: rewrite Nat.add_succ_l; only 1: rewrite Nat.add_succ_l; only 1: rewrite Nat.add_succ_l; only 1: rewrite Nat.add_succ_l; only 1: rewrite Nat.add_succ_l; only 1: rewrite Nat.add_succ_l; only 1: rewrite Nat.add_succ_l; only 1: rewrite Nat.add_0_l; only 1: rewrite to_lu_succ; only 1: rewrite to_lu_succ; only 1: rewrite to_lu_succ; only 1: rewrite to_lu_succ; only 1: rewrite to_lu_succ; only 1: rewrite to_lu_succ; only 1: rewrite to_lu_succ; only 1: rewrite to_lu_succ; only 1: rewrite to_of_lu_tenfold; only 1: unfold lnorm; only 1: simpl; only 1: destruct nztail; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: assumption; only 1: simpl_of_lu; only 1: rewrite Nat.add_succ_l; only 1: rewrite Nat.add_succ_l; only 1: rewrite Nat.add_succ_l; only 1: rewrite Nat.add_succ_l; only 1: rewrite Nat.add_succ_l; only 1: rewrite Nat.add_succ_l; only 1: rewrite Nat.add_succ_l; only 1: rewrite Nat.add_succ_l; only 1: rewrite Nat.add_succ_l; only 1: rewrite Nat.add_0_l; only 1: rewrite to_lu_succ; only 1: rewrite to_lu_succ; only 1: rewrite to_lu_succ; only 1: rewrite to_lu_succ; only 1: rewrite to_lu_succ; only 1: rewrite to_lu_succ; only 1: rewrite to_lu_succ; only 1: rewrite to_lu_succ; only 1: rewrite to_lu_succ; only 1: rewrite to_of_lu_tenfold; only 1: unfold lnorm; only 1: simpl; only 1: destruct nztail; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: assumption).	0.584453	272
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.string_dec	120	0.0	synth with cache (only 1: decide equality; only 1: apply ascii_dec).	0.027468	2
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.eqb_spec	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.to_of	120	0.0.0.0	synth with cache (only 1: rewrite to_uint_alt; only 1: rewrite of_uint_alt; only 1: rewrite to_of_lu; only 1: apply rev_lnorm_rev).	0.021743	4
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.eqb_refl	120
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.eqb_sym	120	0	synth with cache (only 1: t_eqb).	0.019972	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.to_uint_inj	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyInst.PropAnd	120	0.0	synth with cache (only 1: constructor; only 1: tauto).	0.031812	2
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.eqb_eq	120	0	synth with cache (only 1: t_eqb).	0.020304	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.to_uint_surj	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.of_uint_norm	120	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Init.Nat.of_uint; only 1: induction d; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.037783	13
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.eqb_neq	120	0	synth with cache (only 1: t_eqb).	0.021773	1
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyInst.PropOr	120	0.0	synth with cache (only 1: constructor; only 1: tauto).	0.036513	2
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.eqb_compat	120	0	synth with cache (only 1: t_eqb).	0.015730	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.of_inj	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- to_of; only 1: rewrite <- to_of; only 1: f_equal; only 1: easy).	0.023801	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.of_iff	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intros; only 1: rewrite <- to_of; only 1: rewrite <- to_of; only 1: f_equal; only 1: easy; only 1: intros ?; only 1: rewrite <- of_uint_norm; only 1: rewrite H; only 1: apply of_uint_norm).	0.029193	10
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyInst.PropArrow	120	0.0.0	synth with cache (only 1: constructor; only 1: intros; only 1: tauto).	0.025000	3
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.get_correct	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Signed.of_to	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Init.Nat.to_int; only 1: unfold Init.Nat.of_int; only 1: unfold norm; only 1: f_equal; only 1: rewrite Unsigned.of_uint_norm; only 1: rewrite Unsigned.to_uint_alt; only 1: rewrite Unsigned.of_uint_alt; only 1: rewrite rev_rev; only 1: induction n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite Unsigned.of_lu_succ; only 1: f_equal; only 1: easy).	0.037435	15
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyInst.PropIff	120	0.0.0	synth with cache (only 1: constructor; only 1: intros; only 1: tauto).	0.052536	3
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.append_correct1	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: elim s1; only 1: simpl; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: inversion H; only 1: simpl; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: case n; only 1: auto; only 1: intros ?; only 1: intros ?; only 1: apply H; only 1: apply lt_S_n; only 1: auto).	0.089103	20
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyInst.PropNot	120	0.0.0.0	synth with cache (only 1: constructor; only 1: intros; only 1: apply imp_iff_compat_r; only 1: assumption).	0.025418	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Signed.to_of	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Signed.to_int_inj	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Signed.to_int_pos_surj	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Signed.of_int_norm	120	0.0.0	synth with cache (only 1: unfold Init.Nat.of_int; only 1: rewrite norm_invol; only 1: easy).	0.017642	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Signed.of_inj_pos	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Init.Nat.of_int; only 1: simpl; only 1: intros ?; only 1: injection H as; only 1: apply Unsigned.of_inj; only 1: rewrite <- Unsigned.of_uint_norm; only 1: rewrite H; only 1: rewrite Unsigned.of_uint_norm; only 1: easy).	0.032814	9
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.append_correct2	120
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.substring_correct1	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: elim s; only 1: simpl; only 1: intros ?; only 1: case n; only 1: intros ?; only 1: case m; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: case n; only 1: intros ?; only 1: case m; only 1: simpl; only 1: intros ?; only 1: intros ?; only 1: inversion H0; only 1: simpl; only 1: intros ?; only 1: intros ?; only 1: case p; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros ?; only 1: intros ?; only 1: apply H; only 1: apply lt_S_n; only 1: auto; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite <- plus_Snm_nSm; only 1: simpl; only 1: auto).	0.121689	44
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.substring_correct2	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: elim s; only 1: simpl; only 1: intros ?; only 1: case n; only 1: intros ?; only 1: case m; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: case n; only 1: intros ?; only 1: case m; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros ?; only 1: intros ?; only 1: case p; only 1: intros ?; only 1: inversion H0; only 1: intros ?; only 1: intros ?; only 1: apply H; only 1: apply le_S_n; only 1: auto; only 1: auto).	0.074376	35
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.prefix_correct	120
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.index_correct1	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyInst.of_nat_to_nat_eq	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyInst.z_max_spec	120
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.index_correct2	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyInst.z_min_spec	120
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.index_correct3	120
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.index_correct4	120
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.string_of_list_ascii_of_string	120	0.0.0.0.0	synth with cache (only 1: induction s; only 1: reflexivity; only 1: cbn; only 1: apply f_equal; only 1: apply IHs).	0.023120	5
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.list_ascii_of_string_of_list_ascii	120	0.0.0.0.0	synth with cache (only 1: induction s; only 1: reflexivity; only 1: cbn; only 1: apply f_equal; only 1: apply IHs).	0.020987	5
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.string_of_list_byte_of_string	120
coq-tactician-stdlib.8.11.dev	Coq.Strings.String.list_byte_of_string_of_list_byte	120	0.0.0.0.0.0.0.0	synth with cache (only 1: cbv[string_of_list_byte list_byte_of_string]; only 1: erewrite list_ascii_of_string_of_list_ascii; only 1: erewrite List.map_map; only 1: erewrite List.map_ext; only 1: erewrite List.map_id; only 1: reflexivity; only 1: intros ?; only 1: apply byte_of_ascii_of_byte).	0.024744	8
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_lt_compat_r	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_gt_compat_r	120	0	synth with cache (only 1: eauto using Rmult_lt_compat_r with rorders).	0.067861	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_gt_compat_l	120	0	synth with cache (only 1: eauto using Rmult_lt_compat_l with rorders).	0.051831	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_le_compat_l	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: destruct H0; only 1: unfold Rle; only 1: auto with real; only 1: unfold Rle; only 1: auto with real; only 1: destruct H0; only 1: unfold Rle; only 1: right; only 1: rewrite <- H; only 1: rewrite Rmult_0_l; only 1: rewrite Rmult_0_l; only 1: reflexivity; only 1: unfold Rle; only 1: auto with real).	0.110382	20
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcomplements.floor_gt0	120	0	synth with cache (only 1: reflexivity).	0.017779	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.SetoidDec.unit_eqdec_obligation_1	120	0.0.0	synth with cache (only 1: destruct x; only 1: destruct y; only 1: reflexivity).	0.018203	3
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcomplements.floor_ok	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcomplements.Z_lt_abs_rec	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.Ztac.eq_incl	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: apply Z.eq_le_incl; only 1: assumption; only 1: apply Z.eq_le_incl; only 1: auto).	0.023218	6
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcomplements.Z_lt_abs_induction	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcomplements.Zcase_sign	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct n; only 1: apply H; only 1: easy; only 1: apply H0; only 1: easy; only 1: apply H1; only 1: easy).	0.027055	12
coq-tactician-stdlib.8.11.dev	Coq.micromega.Ztac.elim_concl_eq	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.Ztac.elim_concl_le	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcomplements.sqr_pos	120	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.square_nonneg).	0.015326	2
coq-tactician-stdlib.8.11.dev	Coq.micromega.Ztac.elim_concl_lt	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.Ztac.Zlt_le_add_1	120	0	synth with cache (only 1: exact Zlt_le_succ).	0.017069	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcomplements.Zlength_properties.Zlength_correct	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcomplements.Zlength_properties.Zlength_nil	120	0	synth with cache (only 1: reflexivity).	0.016601	1
coq-tactician-stdlib.8.11.dev	Coq.micromega.Ztac.add_le	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply Z.add_nonneg_nonneg; only 1: auto; only 1: auto).	0.020951	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcomplements.Zlength_properties.Zlength_cons	120	0.0.0.0	synth with cache (only 1: rewrite Zlength_correct; only 1: rewrite Zlength_correct; only 1: rewrite <- Nat2Z.inj_succ; only 1: easy).	0.018623	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcomplements.Zlength_properties.Zlength_nil_inv	120	0.0.0.0.0.0	synth with cache (only 1: rewrite Zlength_correct; only 1: destruct l; only 1: auto; only 1: rewrite <- Nat2Z.inj_0; only 1: rewrite Nat2Z.inj_iff; only 1: easy).	0.031191	6
coq-tactician-stdlib.8.11.dev	Coq.micromega.Ztac.mul_le	120
coq-tactician-stdlib.8.11.dev	Coq.Classes.SetoidDec.bool_function_eqdec_obligation_1	120
coq-tactician-stdlib.8.11.dev	Coq.Bool.Zerob.zerob_true_intro	120
coq-tactician-stdlib.8.11.dev	Coq.Bool.Zerob.zerob_true_elim	120
coq-tactician-stdlib.8.11.dev	Coq.Bool.Zerob.zerob_false_intro	120
coq-tactician-stdlib.8.11.dev	Coq.Bool.Zerob.zerob_false_elim	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Direct.linear_search_smallest	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Direct.epsilon_smallest	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Acc.P_implies_acc	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Acc.P_eventually_implies_acc	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Acc.P_eventually_implies_acc_ex	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Acc.acc_implies_P_eventually	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Acc.constructive_indefinite_ground_description_nat_Acc	120	0.1.0.0	synth with cache (only 1: intros ?; only 1: apply acc_implies_P_eventually; only 1: apply P_eventually_implies_acc_ex; only 1: assumption).	0.020393	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_add_opp	120	0	synth with cache (only 1: reflexivity).	0.015038	1
coq-tactician-stdlib.8.11.dev	Coq.Logic.ConstructiveEpsilon.ConstructiveGroundEpsilon.P'_decidable	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ConstructiveEpsilon.ConstructiveGroundEpsilon.constructive_indefinite_ground_description	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ConstructiveEpsilon.ConstructiveGroundEpsilon.constructive_definite_ground_description	120	0.0.0	synth with cache (only 1: intros; only 1: apply constructive_indefinite_ground_description; only 1: firstorder).	0.021802	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.eq_equiv	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.pair_wd	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold Z.eq; only 1: simpl; only 1: rewrite H; only 1: rewrite H0; only 1: easy).	0.034583	11
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.succ_wd	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Z.succ; only 1: unfold Z.eq; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: simpl; only 1: rewrite add_succ_l; only 1: rewrite add_succ_l; only 1: rewrite H; only 1: easy).	0.040698	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.pred_wd	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Z.pred; only 1: unfold Z.eq; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: simpl; only 1: rewrite add_succ_r; only 1: rewrite add_succ_r; only 1: rewrite H; only 1: easy).	0.041738	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.add_wd	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Z.eq; only 1: unfold Z.add; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: simpl; only 1: rewrite add_shuffle1; only 1: rewrite H; only 1: rewrite H0; only 1: rewrite add_shuffle1; only 1: easy).	0.115909	14
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring.Ring.pow_pos_comm	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.rplus_morph_Proper	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring.Ring.pow_pos_succ	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.rtimes_morph_Proper	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.ropp_morph_Proper	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.rle_morph_Proper	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.rlt_morph_Proper	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.rminus_morph_Proper	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rneq_symm	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite H0 in H; only 1: apply H; only 1: easy).	0.024179	7
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring.Ring.pow_pos_add	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring.Ring.pow_N_pow_N	120	0.0	synth with cache (only 1: intros; only 1: reflexivity).	0.020832	2
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_0_l	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_0_r	120	0.0	synth with cache (only 1: intros ?; only 1: ring).	0.022438	2
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_0_r	120	0.0	synth with cache (only 1: intros ?; only 1: ring).	0.019398	2
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_comm	120	0.0	synth with cache (only 1: intros; only 1: ring).	0.033759	2
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_0_l	120	0.0	synth with cache (only 1: intros ?; only 1: ring).	0.020399	2
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring.Ring.ring_mul_0_l	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_comm	120	0.0	synth with cache (only 1: intros; only 1: ring).	0.021595	2
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rminus_eq_0	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring.Ring.ring_mul_0_r	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_cancel_l	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Req_em	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring.Ring.ring_opp_mul_l	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Req_dne	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_lt_eq	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring.Ring.ring_opp_mul_r	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_trans	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_lt_trans	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_le_trans	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: le_elim H0; only 1: apply Rlt_trans with (m := m); only 1: easy; only 1: easy; only 1: rewrite <- H0; only 1: easy).	0.044615	11
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_gt_cases	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_neq	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite Rlt_le_neq; only 1: intros ?; only 1: destruct H; only 1: easy).	0.030473	6
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_ngt	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring.Ring.ring_opp_add	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_nge	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring.Ring.ring_opp_opp	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_le_mono_l	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring.Ring.ring_sub_ext	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring.Ring.ring_add_0_r	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring.Ring.ring_add_assoc1	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring.Ring.ring_add_assoc2	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring.Ring.ring_opp_zero	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.ArithRing.natSRth	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: constructor; only 1: exact PeanoNat.Nat.add_0_l; only 1: exact PeanoNat.Nat.add_comm; only 1: exact PeanoNat.Nat.add_assoc; only 1: exact PeanoNat.Nat.mul_1_l; only 1: exact PeanoNat.Nat.mul_0_l; only 1: exact PeanoNat.Nat.mul_comm; only 1: exact PeanoNat.Nat.mul_assoc; only 1: exact PeanoNat.Nat.mul_add_distr_r).	0.022735	9
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.ArithRing.nat_morph_N	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: constructor; only 1: trivial; only 1: trivial; only 1: exact N2Nat.inj_add; only 1: exact N2Nat.inj_mul; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply N.eqb_eq in H; only 1: subst; only 1: easy).	0.026794	11
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qminmax.Q.plus_max_distr_r	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qminmax.Q.plus_min_distr_l	120	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply min_monotone; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite H; only 1: auto with qarith; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply Qplus_le_compat; only 1: q_order; only 1: q_order).	0.032231	13
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring.BoolTheory	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring.bool_eq_ok	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEequiv_eq	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEeval_ext	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rsub_0_l	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rsub_0_r	120	0.0.0	synth with cache (only 1: rewrite rsub_def; only 1: rewrite ropp_0; only 1: ring).	0.045685	3
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv_simpl	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv_ext	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite rdiv_def; only 1: rewrite rdiv_def; only 1: rewrite H; only 1: rewrite H0; only 1: easy).	0.065393	11
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rmul_reg_l	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.field_is_integral_domain	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.ropp_neq_0	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv_r_r	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite rdiv_def; only 1: rewrite rmul_comm; only 1: apply rinv_l; only 1: trivial).	0.031967	5
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv1	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv2	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv2b	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv5	120	0.0.0.0	synth with cache (only 1: rewrite rdiv_def; only 1: rewrite rdiv_def; only 1: rewrite ropp_mul_l; only 1: easy).	0.047648	4
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv3b	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite rsub_def; only 1: rewrite rsub_def; only 1: rewrite rdiv5; only 1: rewrite ropp_mul_l; only 1: apply rdiv2b; only 1: easy; only 1: easy).	0.067012	9
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv6	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv4	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv4b	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv7	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite rdiv_def; only 1: rewrite rdiv6; only 1: apply rdiv4; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial).	0.052470	8
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv7b	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rinv_nz	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv8	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite rdiv_def; only 1: rewrite H0; only 1: rewrite rmul_0_l; only 1: easy).	0.035041	6
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.cross_product_eq	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_ext	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intropattern subst <- H0; only 1: induction x0; only 1: simpl; only 1: rewrite IHx0; only 1: rewrite H; only 1: easy; only 1: simpl; only 1: rewrite IHx0; only 1: easy; only 1: simpl; only 1: trivial).	0.072251	17
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_N_ext	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intropattern subst <- H0; only 1: destruct x0; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply pow_ext; only 1: easy; only 1: easy).	0.058989	14
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_0	120	0.0.0.0.0.0.0.0	synth with cache (only 1: induction p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite IHp; only 1: easy; only 1: simpl; only 1: reflexivity).	0.035355	8
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_1	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_cst	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_mul_l	120	0.0.0.0.0.0.0	synth with cache (only 1: induction p; only 1: simpl; only 1: ring [ IHp ]; only 1: simpl; only 1: ring [ IHp ]; only 1: simpl; only 1: trivial).	0.079687	7
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_add_r	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_mul_r	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction p1; only 1: simpl; only 1: rewrite pow_pos_mul_l; only 1: rewrite pow_pos_mul_l; only 1: rewrite pow_pos_add_r; only 1: simpl; only 1: ring [ IHp1 ]; only 1: simpl; only 1: rewrite pow_pos_mul_l; only 1: ring [ IHp1 ]; only 1: simpl; only 1: trivial).	0.090910	12
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_nz	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: induction p; only 1: simpl; only 1: apply field_is_integral_domain; only 1: trivial; only 1: apply field_is_integral_domain; only 1: trivial; only 1: trivial; only 1: simpl; only 1: apply field_is_integral_domain; only 1: trivial; only 1: trivial; only 1: simpl; only 1: trivial).	0.043218	14
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_div	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEadd_ext	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: simpl; only 1: rewrite H; only 1: rewrite H0; only 1: easy).	0.094244	11
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEsub_ext	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: simpl; only 1: rewrite H; only 1: rewrite H0; only 1: easy).	0.088774	11
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEmul_ext	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: simpl; only 1: rewrite H; only 1: rewrite H0; only 1: easy).	0.072270	11
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEopp_ext	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: simpl; only 1: rewrite H; only 1: easy).	0.042045	7
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_ext	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intropattern subst <- H0; only 1: intros ?; only 1: simpl; only 1: rewrite rpow_pow; only 1: rewrite rpow_pow; only 1: apply pow_N_ext; only 1: trivial; only 1: trivial).	0.086356	14
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PE_1_l	120	0.0.0.0	synth with cache (only 1: intros ?; only 1: simpl; only 1: rewrite phi_1; only 1: apply rmul_1_l).	0.033644	4
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PE_1_r	120	0.0.0.0	synth with cache (only 1: intros ?; only 1: simpl; only 1: rewrite phi_1; only 1: apply rmul_1_r).	0.043286	4
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_0_r	120	0.0.0.0	synth with cache (only 1: intros ?; only 1: simpl; only 1: rewrite rpow_pow; only 1: easy).	0.039068	4
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_1_r	120	0.0.0.0	synth with cache (only 1: intros ?; only 1: simpl; only 1: rewrite rpow_pow; only 1: easy).	0.032884	4
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.Zth	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: constructor; only 1: exact Z.add_0_l; only 1: exact Z.add_comm; only 1: exact Z.add_assoc; only 1: exact Z.mul_1_l; only 1: exact Z.mul_comm; only 1: exact Z.mul_assoc; only 1: exact Z.mul_add_distr_r; only 1: trivial; only 1: exact Z.sub_diag).	0.024878	10
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_1_l	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: simpl; only 1: rewrite rpow_pow; only 1: destruct n; only 1: simpl; only 1: rewrite phi_1; only 1: easy; only 1: simpl; only 1: rewrite phi_1; only 1: rewrite pow_pos_1; only 1: easy).	0.052668	11
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.radd_ext3_Proper	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.rmul_ext3_Proper	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_add_r	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: simpl; only 1: rewrite rpow_pow; only 1: rewrite rpow_pow; only 1: rewrite rpow_pow; only 1: destruct n; only 1: simpl; only 1: rewrite rmul_1_l; only 1: trivial; only 1: simpl; only 1: destruct n'; only 1: simpl; only 1: rewrite rmul_1_r; only 1: trivial; only 1: simpl; only 1: apply pow_pos_add_r).	0.108124	16
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.ropp_ext3_Proper	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.get_signZ_th	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.ALMOST_RING.rsub_ext3_Proper	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_mul_l	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: simpl; only 1: rewrite rpow_pow; only 1: rewrite rpow_pow; only 1: rewrite rpow_pow; only 1: destruct n; only 1: simpl; only 1: symmetry; only 1: apply rmul_1_l; only 1: simpl; only 1: apply pow_pos_mul_l).	0.074690	11
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.ALMOST_RING.same_gen	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_mul_r	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: simpl; only 1: rewrite rpow_pow; only 1: rewrite rpow_pow; only 1: rewrite rpow_pow; only 1: destruct n; only 1: destruct n'; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite pow_pos_1; only 1: trivial; only 1: destruct n'; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply pow_pos_mul_r).	0.069406	17
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.ALMOST_RING.ARgen_phiPOS_Psucc	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_nz	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: simpl; only 1: rewrite rpow_pow; only 1: destruct n; only 1: simpl; only 1: apply rI_neq_rO; only 1: simpl; only 1: apply pow_pos_nz; only 1: easy).	0.058379	9
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.if_true	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct a; only 1: destruct b; only 1: split; only 1: trivial; only 1: trivial; only 1: split; only 1: trivial; only 1: trivial; only 1: destruct b; only 1: split; only 1: trivial; only 1: trivial; only 1: split; only 1: trivial; only 1: trivial).	0.049098	15
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PExpr_eq_semi_ok	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PExpr_eq_spec	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.ALMOST_RING.ARgen_phiPOS_add	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.ALMOST_RING.ARgen_phiPOS_mult	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.rsub_ext4_Proper	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.same_genZ	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.gen_Zeqb_ok	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.gen_phiZ1_pos_sub	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.gen_phiZ_add	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEadd_ok	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.gen_phiZ_mul	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.gen_phiZ_ext	120	0.0.0	synth with cache (only 1: intros; only 1: subst; only 1: rrefl).	0.019308	3
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.gen_phiZ_morph	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.Nth	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: constructor; only 1: exact N.add_0_l; only 1: exact N.add_comm; only 1: exact N.add_assoc; only 1: exact N.mul_1_l; only 1: exact N.mul_0_l; only 1: exact N.mul_comm; only 1: exact N.mul_assoc; only 1: exact N.mul_add_distr_r).	0.023968	9
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.Neqb_ok	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.NMORPHISM.radd_ext4_Proper	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.NMORPHISM.rmul_ext4_Proper	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.NMORPHISM.same_genN	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.NMORPHISM.gen_phiN_add	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.NMORPHISM.gen_phiN_mult	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.NMORPHISM.gen_phiN_sub	120	0	synth with cache (only 1: exact gen_phiN_add).	0.018032	1
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.NMORPHISM.gen_phiN_morph	120	0.0.0.0.0.0.0.1.0.0.0.0.0.0.0	synth with cache (only 1: constructor; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: reflexivity; only 1: apply gen_phiN_add; only 1: apply gen_phiN_sub; only 1: apply gen_phiN_mult; only 1: reflexivity; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply N.eqb_eq in H; only 1: subst; only 1: easy).	0.093815	31
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEsub_ok	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.radd_ext5_Proper	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEopp_ok	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.rmul_ext5_Proper	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.ropp_ext5_Proper	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.rsub_ext7_Proper	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword0_ok	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEpow_ok	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: unfold NPEpow; only 1: destruct n; only 1: simpl; only 1: rewrite rpow_pow; only 1: easy; only 1: case Pos.eqb_spec; only 1: intros ?; only 1: subst; only 1: simpl; only 1: rewrite rpow_pow; only 1: easy; only 1: intros ?; only 1: clear n; only 1: destruct e; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: case ceqb_spec; only 1: intros; only 1: rewrite rpow_pow; only 1: rewrite H; only 1: simpl; only 1: rewrite phi_1; only 1: rewrite pow_pos_1; only 1: easy; only 1: case ceqb_spec; only 1: intros; only 1: rewrite rpow_pow; only 1: rewrite H; only 1: simpl; only 1: rewrite phi_0; only 1: rewrite pow_pos_0; only 1: easy; only 1: intros; only 1: rewrite rpow_pow; only 1: simpl; only 1: rewrite pow_pos_cst; only 1: easy; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	0.238526	53
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword_cons	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword_Nwcons	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword_ok	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.Nwadd_ok	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.Nwopp_ok	120	0.0.0.0	synth with cache (only 1: unfold Nwopp; only 1: intros; only 1: rewrite gen_phiNword_Nwcons; only 1: norm).	0.034619	4
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.Nwscal_ok	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.Nwmul_ok	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword_morph	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: constructor; only 1: reflexivity; only 1: reflexivity; only 1: exact Nwadd_ok; only 1: intros; only 1: unfold Nwsub; only 1: rewrite Nwadd_ok; only 1: rewrite Nwopp_ok; only 1: norm; only 1: exact Nwmul_ok; only 1: exact Nwopp_ok; only 1: exact gen_phiNword_ok).	0.045610	12
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.GEN_DIV.radd_ext_Proper	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.GEN_DIV.rmul_ext_Proper	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.GEN_DIV.ropp_ext_Proper	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.GEN_DIV.rsub_ext_Proper	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.GEN_DIV.triv_div_th	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.GEN_DIV.Ztriv_div_th	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEmul_ok	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.GEN_DIV.Ntriv_div_th	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEsimp_ok	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction e; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: intros ?; only 1: trivial; only 1: simpl; only 1: intros ?; only 1: trivial; only 1: simpl; only 1: rewrite NPEadd_ok; only 1: f_equiv; only 1: easy; only 1: easy; only 1: simpl; only 1: rewrite NPEsub_ok; only 1: f_equiv; only 1: easy; only 1: easy; only 1: simpl; only 1: rewrite NPEmul_ok; only 1: f_equiv; only 1: easy; only 1: easy; only 1: simpl; only 1: rewrite NPEopp_ok; only 1: f_equiv; only 1: easy; only 1: simpl; only 1: rewrite NPEpow_ok; only 1: f_equiv; only 1: easy).	0.289248	34
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PCond_cons	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct l1; only 1: simpl; only 1: split; only 1: split; only 1: trivial; only 1: trivial; only 1: destruct 1; only 1: trivial; only 1: reflexivity).	0.057867	9
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PCond_cons_inv_l	120	0.0.0	synth with cache (only 1: rewrite PCond_cons; only 1: destruct 1; only 1: easy).	0.045999	3
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PCond_cons_inv_r	120	0.0.0	synth with cache (only 1: rewrite PCond_cons; only 1: destruct 1; only 1: easy).	0.045038	3
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PCond_app	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction l1; only 1: simpl; only 1: split; only 1: split; only 1: trivial; only 1: trivial; only 1: destruct 1; only 1: trivial; only 1: simpl app; only 1: rewrite PCond_cons; only 1: rewrite PCond_cons; only 1: rewrite IHl1; only 1: symmetry; only 1: apply and_assoc).	0.090519	14
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.absurd_PCond_bottom	120	0.0.0.0.0.0	synth with cache (only 1: unfold absurd_PCond; only 1: simpl; only 1: red; only 1: intros; only 1: apply H; only 1: apply phi_0).	0.039403	6
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Z_pos_sub_gt	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply Z.pos_sub_gt; only 1: apply Pos.gt_lt; only 1: easy).	0.038859	4
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.default_isIn_ok	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold default_isIn; only 1: case PExpr_eq_spec; only 1: intros ?; only 1: rewrite Z.pos_sub_spec; only 1: case Pos.compare_spec; only 1: intros ?; only 1: split; only 1: simpl; only 1: rewrite PE_1_r; only 1: rewrite H0; only 1: rewrite H; only 1: easy; only 1: reflexivity; only 1: intros ?; only 1: split; only 1: rewrite NPEpow_ok; only 1: rewrite H; only 1: rewrite <- PEpow_add_r; only 1: f_equiv; only 1: simpl; only 1: f_equiv; only 1: rewrite Pos.add_comm; only 1: rewrite Pos.sub_add; only 1: easy; only 1: easy; only 1: reflexivity; only 1: intros ?; only 1: split; only 1: simpl; only 1: rewrite PE_1_r; only 1: rewrite H; only 1: f_equiv; only 1: rewrite Z.pos_sub_gt; only 1: simpl; only 1: f_equiv; only 1: rewrite Pos.sub_sub_distr; only 1: rewrite Pos.add_comm; only 1: rewrite Pos.add_sub; only 1: trivial; only 1: trivial; only 1: apply Pos.sub_decr; only 1: trivial; only 1: apply Pos.sub_decr; only 1: trivial; only 1: simpl; only 1: apply Z.lt_gt; only 1: apply Pos.sub_decr; only 1: trivial; only 1: trivial).	0.324274	49
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.isIn_ok	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_aux_ok1	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_aux_ok	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_ok_l	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_ok_r	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_nz_l	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_nz_r	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Pcond_Fnorm	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction e; only 1: simpl condition; only 1: simpl denum; only 1: intros ?; only 1: simpl; only 1: rewrite phi_1; only 1: exact rI_neq_rO; only 1: simpl condition; only 1: simpl denum; only 1: intros ?; only 1: simpl; only 1: rewrite phi_1; only 1: exact rI_neq_rO; only 1: simpl condition; only 1: simpl denum; only 1: intros ?; only 1: simpl; only 1: rewrite phi_1; only 1: exact rI_neq_rO; only 1: simpl condition; only 1: simpl denum; only 1: intros ?; only 1: simpl; only 1: rewrite phi_1; only 1: exact rI_neq_rO; only 1: simpl condition; only 1: rewrite PCond_app; only 1: simpl denum; only 1: intros ?; only 1: destruct H; only 1: rewrite NPEmul_ok; only 1: rewrite NPEmul_ok; only 1: rewrite <- split_ok_r; only 1: simpl; only 1: apply field_is_integral_domain; only 1: apply split_nz_l; only 1: apply IHe1; only 1: apply H; only 1: apply IHe2; only 1: apply H0; only 1: simpl condition; only 1: rewrite PCond_app; only 1: simpl denum; only 1: intros ?; only 1: destruct H; only 1: rewrite NPEmul_ok; only 1: rewrite NPEmul_ok; only 1: rewrite <- split_ok_r; only 1: simpl; only 1: apply field_is_integral_domain; only 1: apply split_nz_l; only 1: apply IHe1; only 1: apply H; only 1: apply IHe2; only 1: apply H0; only 1: simpl condition; only 1: rewrite PCond_app; only 1: simpl denum; only 1: intros ?; only 1: destruct H; only 1: rewrite NPEmul_ok; only 1: simpl; only 1: apply field_is_integral_domain; only 1: apply split_nz_r; only 1: apply IHe1; only 1: apply H; only 1: apply split_nz_r; only 1: apply IHe2; only 1: apply H0; only 1: simpl condition; only 1: simpl denum; only 1: intros ?; only 1: apply IHe; only 1: easy; only 1: simpl condition; only 1: rewrite PCond_cons; only 1: simpl denum; only 1: intros ?; only 1: destruct H; only 1: trivial; only 1: simpl condition; only 1: rewrite PCond_cons; only 1: rewrite PCond_app; only 1: simpl denum; only 1: intros ?; only 1: destruct H; only 1: rewrite NPEmul_ok; only 1: destruct H0; only 1: clear H1; only 1: simpl; only 1: apply field_is_integral_domain; only 1: apply split_nz_l; only 1: apply IHe1; only 1: apply H0; only 1: apply split_nz_r; only 1: apply H; only 1: simpl condition; only 1: simpl denum; only 1: intros ?; only 1: rewrite NPEpow_ok; only 1: apply PEpow_nz; only 1: apply IHe; only 1: apply H).	0.485589	103
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fnorm_FEeval_PEeval	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fnorm_crossproduct	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: simpl; only 1: rewrite PCond_app; only 1: intros ?; only 1: intros ?; only 1: destruct H0; only 1: rewrite Fnorm_FEeval_PEeval; only 1: rewrite Fnorm_FEeval_PEeval; only 1: apply cross_product_eq; only 1: apply Pcond_Fnorm; only 1: trivial; only 1: apply Pcond_Fnorm; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial).	0.104749	15
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fnorm_ok	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_rw_correct	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_rw_pow_correct	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_correct	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_simplify_eq_correct	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_simplify_eq_pow_correct	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_simplify_aux_ok	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_simplify_eq_pow_in_correct	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_simplify_eq_in_correct	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_impl.fcons_ok	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons_fcons_inv	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons0_fcons_inv	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons00_fcons_inv	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.ceqb_spec'	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons1_fcons_inv	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons2_fcons_inv	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.Complete.radd_ext3_Proper	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.Complete.rmul_ext3_Proper	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.Complete.ropp_ext3_Proper	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.Complete.AlmostField.add_inj_r	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.Complete.AlmostField.gen_phiPOS_inj	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.Complete.AlmostField.gen_phiN_inj	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.Complete.AlmostField.gen_phiN_complete	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply N.eqb_eq; only 1: apply gen_phiN_inj; only 1: easy).	0.022899	4
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.Complete.Field.ring_S_inj	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.Complete.Field.gen_phiPOS_discr_sgn	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.Complete.Field.gen_phiZ_inj	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.Complete.Field.gen_phiZ_complete	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: replace y with x; only 1: unfold Zeq_bool; only 1: rewrite Z.compare_refl; only 1: trivial; only 1: apply gen_phiZ_inj; only 1: trivial).	0.031031	7
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.In_compat	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite H; only 1: rewrite H0; only 1: intuition).	0.047164	9
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.eq_equiv	120	0	synth with cache (only 1: firstorder).	0.029504	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.mem_spec	120	0.0	synth with cache (only 1: unfold In; only 1: intuition).	0.016197	2
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.mem_Leaf	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.empty_spec	120	0.0.0.0.0	synth with cache (only 1: unfold Empty; only 1: unfold In; only 1: intros ?; only 1: rewrite mem_Leaf; only 1: discriminate).	0.015437	5
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.mem_node	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: case o; only 1: trivial; only 1: destruct l; only 1: destruct r; only 1: destruct x; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: trivial; only 1: trivial).	0.025993	14
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.is_empty_spec	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.subset_Leaf_s	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply empty_spec in H; only 1: elim H).	0.014964	5
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.subset_spec	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.equal_subset	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.equal_spec	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.eq_dec	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.lex_Opp	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intropattern subst -> H; only 1: intros ?; only 1: intropattern subst -> H; only 1: case u'; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	0.029068	12
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.compare_bool_inv	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct b; only 1: intros ?; only 1: destruct b'; only 1: reflexivity; only 1: reflexivity; only 1: intros ?; only 1: destruct b'; only 1: reflexivity; only 1: reflexivity).	0.021556	10
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.compare_inv	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.lex_Eq	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: destruct u; only 1: intuition discriminate; only 1: intuition discriminate; only 1: intuition discriminate).	0.029424	6
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.compare_bool_Eq	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct b1; only 1: intros ?; only 1: destruct b2; only 1: intuition discriminate; only 1: intuition discriminate; only 1: intros ?; only 1: destruct b2; only 1: intuition discriminate; only 1: intuition discriminate).	0.046245	10
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.compare_equal	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.compare_gt	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold lt; only 1: intros ?; only 1: intros ?; only 1: rewrite compare_inv; only 1: case compare; only 1: intros; only 1: discriminate; only 1: trivial; only 1: intros; only 1: discriminate).	0.026794	10
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.compare_eq	120	0.0.0.0.0.0	synth with cache (only 1: unfold eq; only 1: intros ?; only 1: intros ?; only 1: rewrite compare_equal; only 1: rewrite equal_spec; only 1: trivial).	0.028310	6
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.compare_spec	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_cxe	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_xce	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_lxl	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_gxg	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_xll	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_xgg	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_lex	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_compare_bool	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct a; only 1: intros ?; only 1: destruct b; only 1: intros ?; only 1: destruct c; only 1: constructor; only 1: constructor; only 1: intros ?; only 1: destruct c; only 1: constructor; only 1: constructor; only 1: intros ?; only 1: destruct b; only 1: intros ?; only 1: destruct c; only 1: constructor; only 1: constructor; only 1: intros ?; only 1: destruct c; only 1: constructor; only 1: constructor).	0.040469	22
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.compare_x_Leaf	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite compare_inv; only 1: simpl; only 1: case is_empty; only 1: reflexivity; only 1: reflexivity).	0.021745	6
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.compare_empty_x	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.compare_x_empty	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_compare	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.lt_strorder	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.compare_compat_1	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.compare_compat	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite H; only 1: rewrite compare_inv; only 1: rewrite H0; only 1: rewrite <- compare_inv; only 1: reflexivity).	0.032776	11
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.lt_compat	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold lt; only 1: rewrite H; only 1: rewrite H0; only 1: intuition).	0.032255	10
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.add_spec	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.remove_spec	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.singleton_spec	120	0.0.0.0.0.0.0.0	synth with cache (only 1: unfold singleton; only 1: intros ?; only 1: intros ?; only 1: rewrite add_spec; only 1: intuition; only 1: unfold In in *; only 1: rewrite mem_Leaf in *; only 1: discriminate).	0.032292	8
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.union_spec	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.inter_spec	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.diff_spec	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.fold_spec	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.cardinal_spec	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.xfilter_spec	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.filter_spec	120	0.0	synth with cache (only 1: intros; only 1: apply xfilter_spec).	0.018530	2
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.xforall_spec	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.for_all_spec	120	0.0	synth with cache (only 1: intros; only 1: apply xforall_spec).	0.018332	2
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.xexists_spec	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.exists_spec	120	0.0	synth with cache (only 1: intros; only 1: apply xexists_spec).	0.020744	2
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.partition_filter	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.partition_spec1	120	0.0.0	synth with cache (only 1: intros; only 1: rewrite partition_filter; only 1: reflexivity).	0.023393	3
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.partition_spec2	120	0.0.0	synth with cache (only 1: intros; only 1: rewrite partition_filter; only 1: reflexivity).	0.024694	3
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.xelements_spec	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.elements_spec1	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold elements; only 1: intros; only 1: rewrite xelements_spec; only 1: split; only 1: intros ?; only 1: destruct H; only 1: inversion H; only 1: destruct H; only 1: destruct H; only 1: simpl in *; only 1: congruence; only 1: intros ?; only 1: right; only 1: exists x; only 1: auto).	0.038228	15
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.lt_rev_append	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.elements_spec2	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.elements_spec2w	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.choose_spec1	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.choose_spec2	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Empty; only 1: unfold In; only 1: intros ?; only 1: intros ?; only 1: induction s; only 1: intros ?; only 1: apply empty_spec; only 1: destruct b; only 1: discriminate; only 1: simpl in H; only 1: destruct choose; only 1: discriminate; only 1: destruct choose; only 1: discriminate; only 1: intros ?; only 1: destruct a; only 1: apply IHs2; only 1: reflexivity; only 1: apply IHs1; only 1: reflexivity; only 1: discriminate).	0.062685	21
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.choose_empty	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.choose_spec3'	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.choose_spec3	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply choose_spec3' in H1; only 1: congruence).	0.034340	9
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.min_elt_spec1	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.min_elt_spec3	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.min_elt_spec2	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.max_elt_spec1	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.max_elt_spec3	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.max_elt_spec2	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.singleton_spec	120	0.0	synth with cache (only 1: unfold singleton; only 1: intuition_in).	0.036828	2
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.singleton_ok	120	0.0	synth with cache (only 1: unfold singleton; only 1: auto).	0.013524	2
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.makeBlack_spec	120	0.0.0.0.0	synth with cache (only 1: destruct s; only 1: simpl; only 1: intuition_in; only 1: simpl; only 1: intuition_in).	0.119281	5
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.makeRed_spec	120	0.0.0.0.0	synth with cache (only 1: destruct s; only 1: simpl; only 1: intuition_in; only 1: simpl; only 1: intuition_in).	0.079249	5
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.makeBlack_ok	120	0.0.0.0.0	synth with cache (only 1: destruct s; only 1: simpl; only 1: ok; only 1: simpl; only 1: ok).	0.028541	5
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.makeRed_ok	120	0.0.0.0.0	synth with cache (only 1: destruct s; only 1: simpl; only 1: ok; only 1: simpl; only 1: ok).	0.026917	5
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.rmatch	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct t; only 1: simpl; only 1: constructor; only 1: easy; only 1: destruct t1; only 1: simpl; only 1: constructor; only 1: simpl; only 1: constructor; only 1: easy).	0.020166	10
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.rrmatch	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct t; only 1: simpl; only 1: constructor; only 1: easy; only 1: destruct t1; only 1: simpl; only 1: destruct t2; only 1: destruct t4; only 1: constructor; only 1: easy; only 1: destruct t0; only 1: constructor; only 1: constructor; only 1: easy; only 1: destruct t0; only 1: destruct t4; only 1: constructor; only 1: destruct t0; only 1: constructor; only 1: constructor; only 1: destruct t4; only 1: constructor; only 1: easy; only 1: destruct t0; only 1: constructor; only 1: constructor; only 1: easy; only 1: simpl; only 1: constructor; only 1: easy).	0.080355	30
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.rrmatch'	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct t; only 1: simpl; only 1: constructor; only 1: easy; only 1: destruct t1; only 1: simpl; only 1: destruct t2; only 1: destruct t4; only 1: constructor; only 1: easy; only 1: destruct t0; only 1: constructor; only 1: constructor; only 1: easy; only 1: destruct t0; only 1: destruct t4; only 1: constructor; only 1: destruct t0; only 1: constructor; only 1: constructor; only 1: destruct t4; only 1: constructor; only 1: easy; only 1: destruct t0; only 1: constructor; only 1: constructor; only 1: easy; only 1: simpl; only 1: constructor; only 1: easy).	0.064209	30
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.lbal_match	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.rbal_match	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.rbal'_match	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.lbalS_match	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.rbalS_match	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.lbal_spec	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.lbal_ok	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.rbal_spec	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.rbal_ok	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.rbal'_spec	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.rbal'_ok	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.ins_spec	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.ins_ok	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induct s x; only 1: auto; only 1: auto; only 1: descolor; only 1: ok; only 1: intros ?; only 1: autorew; only 1: intuition; only 1: order; only 1: apply lbal_ok; only 1: auto; only 1: auto; only 1: intros ?; only 1: autorew; only 1: intuition; only 1: order; only 1: auto; only 1: descolor; only 1: ok; only 1: intros ?; only 1: autorew; only 1: intuition; only 1: order; only 1: apply rbal_ok; only 1: auto; only 1: auto; only 1: auto; only 1: intros ?; only 1: autorew; only 1: intuition; only 1: order).	0.243762	31
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.add_spec'	120	0.0.0	synth with cache (only 1: unfold add; only 1: autorew; only 1: easy).	0.031599	3
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.add_spec	120	0	synth with cache (only 1: apply add_spec').	0.011973	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.add_ok	120	0.0	synth with cache (only 1: unfold add; only 1: auto_tc).	0.014192	2
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.lbalS_spec	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.lbalS_ok	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.rbalS_spec	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: case rbalS_match; only 1: intros; only 1: autorew; only 1: intuition_in; only 1: intros ?; only 1: intros ?; only 1: clear H; only 1: destruct l; only 1: autorew; only 1: intuition_in; only 1: destruct t1; only 1: destruct l2; only 1: autorew; only 1: intuition_in; only 1: destruct t1; only 1: autorew; only 1: intuition_in; only 1: autorew; only 1: intuition_in; only 1: autorew; only 1: intuition_in).	0.637521	21
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.rbalS_ok	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.append_rr_match	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.append_bb_match	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zabs.Zabs_ind	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Z.abs_case_strong; only 1: Z.swap_greater; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: subst; only 1: easy; only 1: Z.swap_greater; only 1: trivial; only 1: Z.swap_greater; only 1: trivial).	0.050152	12
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zabs.Zabs_intro	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zabs.Zabs_dec	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zabs.Zabs_spec	120	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.abs_spec).	0.024393	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zabs.Zsgn_spec	120	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.sgn_spec).	0.028789	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zabs.Zabs_nat_le	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct H; only 1: apply Zabs2Nat.inj_le; only 1: trivial; only 1: transitivity n; only 1: trivial; only 1: trivial; only 1: trivial).	0.067842	8
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zabs.Zabs_nat_lt	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct H; only 1: apply Zabs2Nat.inj_lt; only 1: trivial; only 1: transitivity n; only 1: trivial; only 1: apply Z.lt_le_incl; only 1: trivial; only 1: trivial).	0.023939	9
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.append_spec	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_comp	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qinv_comp	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Qeq; only 1: unfold Qinv; only 1: intros ?; only 1: destruct x; only 1: intros ?; only 1: destruct y; only 1: intros ?; only 1: simpl in *; only 1: destruct Qnum1; only 1: simpl in *; only 1: apply Z.mul_eq_0 in H; only 1: destruct H; only 1: subst; only 1: easy; only 1: easy; only 1: simpl in *; only 1: destruct Qnum0; only 1: simpl in *; only 1: discriminate; only 1: simpl in *; only 1: rewrite Pos.mul_comm; only 1: rewrite <- H; only 1: rewrite Pos.mul_comm; only 1: easy; only 1: simpl in *; only 1: discriminate; only 1: simpl in *; only 1: destruct Qnum0; only 1: simpl in *; only 1: discriminate; only 1: simpl in *; only 1: discriminate; only 1: simpl in *; only 1: rewrite Pos.mul_comm; only 1: rewrite <- H; only 1: rewrite Pos.mul_comm; only 1: easy).	0.119900	37
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.append_ok	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qdiv_comp	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold Qdiv; only 1: rewrite H; only 1: rewrite H0; only 1: auto with qarith).	0.036593	10
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qcompare_comp	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qle_comp	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite Qle_alt; only 1: rewrite Qle_alt; only 1: rewrite H; only 1: rewrite H0; only 1: auto with *).	0.045739	11
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qlt_compat	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite Qlt_alt; only 1: rewrite Qlt_alt; only 1: rewrite H; only 1: rewrite H0; only 1: auto with *).	0.039358	11
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qeqb_comp	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply eq_true_iff_eq; only 1: rewrite Qeq_bool_iff; only 1: rewrite Qeq_bool_iff; only 1: rewrite H; only 1: rewrite H0; only 1: split; only 1: auto with qarith; only 1: auto with qarith).	0.043045	14
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qleb_comp	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply eq_true_iff_eq; only 1: rewrite Qle_bool_iff; only 1: rewrite Qle_bool_iff; only 1: rewrite Qle_alt; only 1: rewrite Qle_alt; only 1: rewrite H; only 1: rewrite H0; only 1: auto with *).	0.042890	14
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Q_apart_0_1	120	0	synth with cache (only 1: discriminate).	0.025990	1
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qplus_assoc	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct x; only 1: intros ?; only 1: destruct y; only 1: intros ?; only 1: destruct z; only 1: unfold Qeq; only 1: unfold Qplus; only 1: simpl; only 1: simpl_mult; only 1: ring).	0.123498	11
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qplus_0_l	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct x; only 1: unfold Qeq; only 1: unfold Qplus; only 1: simpl; only 1: ring).	0.038768	6
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qplus_0_r	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct x; only 1: unfold Qeq; only 1: unfold Qplus; only 1: simpl; only 1: rewrite Pos.mul_comm; only 1: simpl; only 1: ring).	0.039816	8
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qplus_comm	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct x; only 1: unfold Qeq; only 1: unfold Qplus; only 1: simpl; only 1: intros; only 1: rewrite Pos.mul_comm; only 1: ring).	0.066264	8
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qopp_involutive	120	0.0.0.1	synth with cache (only 1: red; only 1: simpl; only 1: intros; only 1: ring).	0.034167	6
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qplus_opp_r	120	0.0.0.0	synth with cache (only 1: red; only 1: simpl; only 1: intros ?; only 1: ring).	0.037536	4
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qplus_inj_r	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.del_spec	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.del_ok	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.remove_spec	120	0.0.0.0	synth with cache (only 1: unfold remove; only 1: autorew; only 1: easy; only 1: easy).	0.059698	4
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.remove_ok	120	0.0	synth with cache (only 1: unfold remove; only 1: auto_tc).	0.016908	2
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.delmin_spec	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.remove_min_spec1	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.remove_min_spec2	120	0.0.0.0.0	synth with cache (only 1: unfold remove_min; only 1: destruct s; only 1: easy; only 1: destruct delmin; only 1: easy).	0.030743	5
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.remove_min_ok	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.treeify_zero_spec	120	0.0.0	synth with cache (only 1: intros ?; only 1: simpl; only 1: auto).	0.014075	3
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.treeify_one_spec	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct acc; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: auto).	0.022405	6
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.treeify_cont_spec	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.treeify_aux_spec	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.plength_aux_spec	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: revert p; only 1: induction l; only 1: trivial; only 1: simpl plength_aux; only 1: intros; only 1: rewrite IHl; only 1: rewrite Pos2Nat.inj_succ; only 1: rewrite Nat.add_succ_r; only 1: easy).	0.027692	9
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.plength_spec	120	0.0.0	synth with cache (only 1: unfold plength; only 1: rewrite plength_aux_spec; only 1: apply Nat.add_1_r).	0.017791	3
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.treeify_elements	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.treeify_spec	120	0.0.0	synth with cache (only 1: rewrite <- elements_spec1; only 1: rewrite treeify_elements; only 1: easy).	0.018843	3
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.treeify_ok	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply elements_sort_ok; only 1: rewrite treeify_elements; only 1: auto).	0.016708	4
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.filter_aux_elements	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: revert acc; only 1: induction s; only 1: trivial; only 1: intros ?; only 1: rewrite elements_node; only 1: rewrite List.filter_app; only 1: simpl; only 1: destruct f; only 1: rewrite IHs1; only 1: rewrite IHs2; only 1: rewrite app_assoc_reverse; only 1: easy; only 1: rewrite IHs1; only 1: rewrite IHs2; only 1: rewrite app_assoc_reverse; only 1: easy).	0.062781	16
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.filter_elements	120	0.0.0.0.0	synth with cache (only 1: unfold filter; only 1: rewrite treeify_elements; only 1: rewrite filter_aux_elements; only 1: rewrite app_nil_r; only 1: easy).	0.021221	5
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.filter_spec	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite <- elements_spec1; only 1: rewrite filter_elements; only 1: rewrite filter_InA; only 1: rewrite elements_spec1; only 1: easy; only 1: auto_tc).	0.031856	7
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.filter_ok	120	0.0.0.0.0.0.0	synth with cache (only 1: apply elements_sort_ok; only 1: rewrite filter_elements; only 1: apply filter_sort with X.eq; only 1: auto_tc; only 1: auto_tc; only 1: auto_tc; only 1: auto_tc).	0.019604	7
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.partition_aux_spec	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: revert acc1 acc2; only 1: induction s; only 1: simpl; only 1: trivial; only 1: simpl; only 1: intros ?; only 1: intros ?; only 1: destruct f; only 1: simpl; only 1: rewrite IHs2; only 1: rewrite IHs1; only 1: easy; only 1: simpl; only 1: rewrite IHs2; only 1: rewrite IHs1; only 1: easy).	0.107055	16
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.partition_spec	120	0.0.0.0	synth with cache (only 1: unfold partition; only 1: unfold filter; only 1: rewrite partition_aux_spec; only 1: easy).	0.022383	4
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.partition_spec1	120	0.0	synth with cache (only 1: rewrite partition_spec; only 1: easy).	0.018135	2
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.partition_spec2	120	0.0	synth with cache (only 1: rewrite partition_spec; only 1: easy).	0.019637	2
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.partition_ok1	120	0.0.0	synth with cache (only 1: rewrite partition_spec; only 1: apply filter_ok; only 1: easy).	0.019238	3
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.partition_ok2	120	0.0.0	synth with cache (only 1: rewrite partition_spec; only 1: apply filter_ok; only 1: easy).	0.019106	3
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.INV_init	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.INV_sym	120	0.0.0.0.0.0.0	synth with cache (only 1: destruct 1; only 1: split; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.043391	7
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.INV_drop	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.INV_eq	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.INV_lt	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.INV_rev	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite rev_append_rev; only 1: apply SortA_app with X.eq; only 1: eauto with *; only 1: eauto with *; only 1: eauto with *; only 1: intros ?; only 1: intros ?; only 1: inA; only 1: eapply l1_lt_acc; only 1: eauto).	0.041491	11
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.union_list_ok	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.linear_union_ok	120	0.0.0.0.0.0	synth with cache (only 1: unfold linear_union; only 1: apply treeify_ok; only 1: apply union_list_ok; only 1: apply INV_init; only 1: easy; only 1: easy).	0.017109	6
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.fold_add_ok	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: rewrite fold_spec; only 1: rewrite <- fold_left_rev_right; only 1: unfold elt in *; only 1: induction rev; only 1: simpl; only 1: easy; only 1: simpl; only 1: unfold flip in *; only 1: auto_tc).	0.033742	9
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.union_ok	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold union; only 1: destruct compare_height; only 1: unfold linear_union; only 1: apply treeify_ok; only 1: apply union_list_ok; only 1: apply INV_init; only 1: easy; only 1: easy; only 1: rewrite fold_spec; only 1: rewrite <- fold_left_rev_right; only 1: unfold elt in *; only 1: induction rev; only 1: simpl; only 1: easy; only 1: simpl; only 1: unfold flip in *; only 1: auto_tc; only 1: auto_tc).	0.039455	18
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.union_list_spec	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.linear_union_spec	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold linear_union; only 1: rewrite treeify_spec; only 1: rewrite union_list_spec; only 1: rewrite rev_elements_rev; only 1: rewrite rev_elements_rev; only 1: rewrite InA_rev; only 1: rewrite InA_rev; only 1: rewrite InA_nil; only 1: rewrite elements_spec1; only 1: rewrite elements_spec1; only 1: tauto).	0.069982	11
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.fold_add_spec	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.union_spec'	120	0.0.0.0.0.0	synth with cache (only 1: unfold union; only 1: destruct compare_height; only 1: apply linear_union_spec; only 1: apply fold_add_spec; only 1: rewrite fold_add_spec; only 1: tauto).	0.032877	6
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.union_spec	120	0.0	synth with cache (only 1: intros; only 1: apply union_spec').	0.019674	2
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.inter_list_ok	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.linear_inter_ok	120	0.0.0.0.0.0	synth with cache (only 1: unfold linear_inter; only 1: apply treeify_ok; only 1: apply inter_list_ok; only 1: apply INV_init; only 1: easy; only 1: easy).	0.024751	6
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.inter_ok	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold inter; only 1: destruct compare_height; only 1: unfold linear_inter; only 1: apply treeify_ok; only 1: apply inter_list_ok; only 1: apply INV_init; only 1: easy; only 1: easy; only 1: auto_tc; only 1: auto_tc).	0.028465	10
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.inter_list_spec	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.linear_inter_spec	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold linear_inter; only 1: rewrite rev_elements_rev; only 1: rewrite rev_elements_rev; only 1: rewrite treeify_spec; only 1: rewrite inter_list_spec; only 1: rewrite InA_rev; only 1: rewrite InA_rev; only 1: rewrite InA_nil; only 1: rewrite elements_spec1; only 1: rewrite elements_spec1; only 1: tauto; only 1: rewrite rev_involutive; only 1: auto_tc; only 1: rewrite rev_involutive; only 1: auto_tc).	0.070438	15
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.mem_proper	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply eq_iff_eq_true; only 1: rewrite mem_spec; only 1: rewrite mem_spec; only 1: rewrite H0; only 1: easy; only 1: auto; only 1: auto).	0.032878	10
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.inter_spec	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold inter; only 1: destruct compare_height; only 1: unfold linear_inter; only 1: rewrite rev_elements_rev; only 1: rewrite rev_elements_rev; only 1: rewrite treeify_spec; only 1: rewrite inter_list_spec; only 1: rewrite InA_rev; only 1: rewrite InA_rev; only 1: rewrite InA_nil; only 1: rewrite elements_spec1; only 1: rewrite elements_spec1; only 1: tauto; only 1: rewrite rev_involutive; only 1: auto_tc; only 1: rewrite rev_involutive; only 1: auto_tc; only 1: rewrite filter_spec; only 1: rewrite mem_spec; only 1: tauto; only 1: intuition; only 1: auto_tc; only 1: rewrite filter_spec; only 1: rewrite mem_spec; only 1: tauto; only 1: easy; only 1: auto_tc).	0.109107	27
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.diff_list_ok	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.diff_inter_ok	120	0.0.0.0.0	synth with cache (only 1: apply treeify_ok; only 1: apply diff_list_ok; only 1: apply INV_init; only 1: easy; only 1: easy).	0.023064	5
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.fold_remove_ok	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: rewrite fold_spec; only 1: rewrite <- fold_left_rev_right; only 1: unfold elt in *; only 1: induction rev; only 1: simpl; only 1: auto_tc; only 1: simpl; only 1: unfold flip in *; only 1: auto_tc).	0.034479	9
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.radd_ext_Proper	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.rmul_ext_Proper	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.diff_ok	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold diff; only 1: destruct compare_height; only 1: apply treeify_ok; only 1: apply diff_list_ok; only 1: apply INV_init; only 1: easy; only 1: easy; only 1: auto_tc; only 1: auto_tc).	0.029633	9
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.ropp_ext_Proper	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.rsub_ext_Proper	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.Peq_ok	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.Peq_spec	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.Pphi0	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.Pphi1	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.env_morph	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: revert e1 e2; only 1: induction p; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply IHp; only 1: intros; only 1: apply H; only 1: simpl; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: f_equal; only 1: f_equal; only 1: apply IHp1; only 1: easy; only 1: f_equal; only 1: apply H; only 1: apply IHp2; only 1: intros; only 1: apply H).	0.085319	24
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.Pjump_add	120	0.0.0.0.0	synth with cache (only 1: apply env_morph; only 1: intros; only 1: rewrite <- jump_add; only 1: f_equal; only 1: apply Pos.add_comm).	0.026886	5
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.Pjump_xO_tail	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.Pjump_pred_double	120	0.0.0.0.0	synth with cache (only 1: apply env_morph; only 1: intros; only 1: rewrite jump_pred_double; only 1: jump_simpl; only 1: easy).	0.028842	5
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.mkPinj_ok	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.pow_pos_add	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.diff_list_spec	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.ceqb_spec	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.linear_diff_spec	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold linear_diff; only 1: rewrite rev_elements_rev; only 1: rewrite rev_elements_rev; only 1: rewrite treeify_spec; only 1: rewrite diff_list_spec; only 1: rewrite InA_rev; only 1: rewrite InA_rev; only 1: rewrite InA_nil; only 1: rewrite elements_spec1; only 1: rewrite elements_spec1; only 1: tauto; only 1: rewrite rev_involutive; only 1: auto_tc; only 1: rewrite rev_involutive; only 1: auto_tc).	0.069546	15
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.mkPX_ok	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.fold_remove_spec	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.PaddC_ok	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.diff_spec	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold diff; only 1: destruct compare_height; only 1: apply linear_diff_spec; only 1: easy; only 1: intuition; only 1: rewrite filter_spec; only 1: rewrite negb_true_iff; only 1: rewrite <- not_true_iff_false; only 1: rewrite mem_spec; only 1: intuition; only 1: intuition; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: f_equal; only 1: apply mem_proper; only 1: easy; only 1: easy; only 1: apply fold_remove_spec; only 1: easy).	0.067645	20
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.PsubC_ok	120	0.0.0.0.0.0.0.0.0.0.0.0.1	synth with cache (only 1: revert l; only 1: induction P; only 1: simpl; only 1: intros; only 1: Esimpl; only 1: simpl; only 1: intros; only 1: rewrite IHP; only 1: rsimpl; only 1: simpl; only 1: intros; only 1: rewrite IHP2; only 1: rsimpl).	0.151397	14
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.PmulC_aux_ok	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.PmulC_ok	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold PmulC; only 1: case ceqb_spec; only 1: intros ?; only 1: rewrite H; only 1: Esimpl; only 1: intros ?; only 1: case ceqb_spec; only 1: intros ?; only 1: rewrite H0; only 1: Esimpl; only 1: intros ?; only 1: apply PmulC_aux_ok).	0.070243	12
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.Popp_ok	120	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: revert l; only 1: induction P; only 1: simpl; only 1: intros; only 1: Esimpl; only 1: simpl; only 1: intros; only 1: apply IHP; only 1: simpl; only 1: intros; only 1: rewrite IHP1; only 1: rewrite IHP2; only 1: rsimpl).	0.114656	13
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.rr_nrr_rb	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.arb_nrr_rb	120	0.0.0	synth with cache (only 1: destruct 1; only 1: auto; only 1: auto).	0.018079	3
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.arb_nr_rb	120	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct t; only 1: invrb; only 1: auto; only 1: descolor; only 1: invrb; only 1: invrb; only 1: auto; only 1: destruct t; only 1: invrb; only 1: descolor; only 1: invrb; only 1: invrb).	0.064442	13
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.PaddX_ok	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.rb_maxdepth	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.rb_mindepth	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.maxdepth_upperbound	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.maxdepth_lowerbound	120	0	synth with cache (only 1: apply maxdepth_log_cardinal).	0.014316	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.singleton_rb	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.makeBlack_rb	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.makeRed_rr	120	0.0.0.0.0.0.0	synth with cache (only 1: destruct t; only 1: invrb; only 1: destruct t1; only 1: invrb; only 1: invrb; only 1: simpl; only 1: auto).	0.052539	7
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.lbal_rb	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.rbal_rb	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: case rbal_match; only 1: intros; only 1: desarb; only 1: invrb; only 1: invrb; only 1: auto; only 1: intros; only 1: desarb; only 1: invrb; only 1: invrb; only 1: auto; only 1: intros; only 1: desarb; only 1: auto; only 1: auto).	0.160106	15
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.Padd_ok	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: revert P l; only 1: induction P'; only 1: simpl; only 1: intros; only 1: Esimpl; only 1: simpl; only 1: intros; only 1: revert p l; only 1: induction P; only 1: simpl; only 1: intros; only 1: Esimpl; only 1: add_permut; only 1: simpl; only 1: intros; only 1: destr_pos_sub; only 1: intros ?; only 1: intropattern subst -> H; only 1: Esimpl; only 1: rewrite IHP'; only 1: easy; only 1: intros ?; only 1: intropattern subst -> H; only 1: Esimpl; only 1: rewrite IHP'; only 1: Esimpl; only 1: rewrite Pjump_add; only 1: easy; only 1: intros ?; only 1: intropattern subst -> H; only 1: Esimpl; only 1: rewrite IHP; only 1: rewrite Pjump_add; only 1: easy; only 1: simpl; only 1: intros; only 1: destruct p0; only 1: simpl; only 1: rewrite IHP2; only 1: rsimpl; only 1: rewrite Pjump_xO_tail; only 1: Esimpl; only 1: simpl; only 1: rewrite IHP2; only 1: rewrite Pjump_pred_double; only 1: rsimpl; only 1: simpl; only 1: rewrite IHP'; only 1: rsimpl; only 1: simpl; only 1: intros; only 1: Esimpl; only 1: destruct P; only 1: simpl; only 1: Esimpl; only 1: add_permut; only 1: simpl; only 1: destruct p0; only 1: simpl; only 1: rewrite IHP'2; only 1: simpl; only 1: rewrite Pjump_xO_tail; only 1: rsimpl; only 1: add_permut; only 1: simpl; only 1: rewrite IHP'2; only 1: simpl; only 1: rewrite Pjump_pred_double; only 1: rsimpl; only 1: add_permut; only 1: simpl; only 1: rewrite IHP'2; only 1: rsimpl; only 1: unfold tail; only 1: add_permut; only 1: simpl; only 1: destr_pos_sub; only 1: intros ?; only 1: intropattern subst -> H; only 1: Esimpl; only 1: rewrite IHP'1; only 1: rewrite IHP'2; only 1: rsimpl; only 1: add_permut; only 1: intros ?; only 1: intropattern subst -> H; only 1: Esimpl; only 1: rewrite IHP'1; only 1: rewrite IHP'2; only 1: simpl; only 1: Esimpl; only 1: rewrite pow_pos_add; only 1: rsimpl; only 1: add_permut; only 1: intros ?; only 1: intropattern subst -> H; only 1: Esimpl; only 1: rewrite PaddX_ok; only 1: rsimpl; only 1: rewrite IHP'2; only 1: rewrite pow_pos_add; only 1: rsimpl; only 1: add_permut; only 1: trivial).	1.106831	104
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.rbal'_rb	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: case rbal'_match; only 1: intros; only 1: desarb; only 1: invrb; only 1: invrb; only 1: auto; only 1: intros; only 1: desarb; only 1: invrb; only 1: invrb; only 1: auto; only 1: intros; only 1: desarb; only 1: auto; only 1: auto).	0.195840	15
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.lbalS_rb	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct r; only 1: invrb; only 1: destruct t0; only 1: invrb; only 1: invrb; only 1: clear H1; only 1: revert H; only 1: case lbalS_match; only 1: destruct 1; only 1: invrb; only 1: auto; only 1: invrb; only 1: auto; only 1: intros; only 1: apply rbal'_rb; only 1: auto; only 1: auto).	0.106970	20
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.lbalS_arb	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: case lbalS_match; only 1: destruct 1; only 1: invrb; only 1: auto; only 1: invrb; only 1: auto; only 1: clear l; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct r; only 1: invrb; only 1: destruct t1; only 1: invrb; only 1: destruct r1; only 1: invrb; only 1: destruct t1; only 1: invrb; only 1: invrb; only 1: right; only 1: auto using rbal'_rb, makeRed_rr; only 1: invrb; only 1: left; only 1: apply rbal'_rb; only 1: auto; only 1: auto).	0.179715	27
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.rbalS_rb	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct l; only 1: invrb; only 1: destruct t0; only 1: invrb; only 1: invrb; only 1: clear H0; only 1: revert H1; only 1: case rbalS_match; only 1: destruct 1; only 1: invrb; only 1: auto; only 1: invrb; only 1: auto; only 1: intros; only 1: apply lbal_rb; only 1: auto; only 1: auto).	0.117287	20
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.rbalS_arb	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: case rbalS_match; only 1: destruct 2; only 1: invrb; only 1: auto; only 1: invrb; only 1: auto; only 1: clear r; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct l; only 1: invrb; only 1: destruct t1; only 1: invrb; only 1: destruct l2; only 1: invrb; only 1: destruct t1; only 1: invrb; only 1: invrb; only 1: right; only 1: auto using lbal_rb, makeRed_rr; only 1: invrb; only 1: left; only 1: apply lbal_rb; only 1: auto; only 1: auto).	0.166280	27
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.ifred_notred	120	0.0.0.0.0.0.0.0	synth with cache (only 1: destruct s; only 1: simpl; only 1: intuition; only 1: descolor; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).	0.032197	8
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.ifred_or	120	0.0.0.0.0.0.0.0	synth with cache (only 1: destruct s; only 1: simpl; only 1: intuition; only 1: descolor; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).	0.030574	8
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.ins_rr_rb	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction 1; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite ifred_notred in *; only 1: elim_compare x k; only 1: auto; only 1: auto; only 1: auto; only 1: trivial; only 1: trivial; only 1: rewrite ifred_notred; only 1: unfold ins; only 1: fold ins; only 1: elim_compare x k; only 1: auto; only 1: apply lbal_rb; only 1: apply ifred_or in IHrbt1; only 1: intuition; only 1: trivial; only 1: apply rbal_rb; only 1: trivial; only 1: apply ifred_or in IHrbt2; only 1: intuition; only 1: trivial).	0.071421	25
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.ins_arb	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.add_rb	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.append_arb_rb	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.del_arb	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.remove_rb	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.treeify_zero_rb	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: clear H; only 1: simpl; only 1: auto).	0.017778	5
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.treeify_one_rb	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct acc; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: auto).	0.025753	6
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.treeify_cont_rb	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.treeify_aux_rb	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.treeify_rb	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.filter_rb	120	0.0	synth with cache (only 1: unfold filter; only 1: auto_tc).	0.019769	2
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.partition_rb1	120	0.0.0.0	synth with cache (only 1: unfold partition; only 1: destruct partition_aux; only 1: simpl; only 1: auto_tc).	0.018639	4
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.partition_rb2	120	0.0.0.0	synth with cache (only 1: unfold partition; only 1: destruct partition_aux; only 1: simpl; only 1: auto_tc).	0.017191	4
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.fold_add_rb	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite fold_spec; only 1: rewrite <- fold_left_rev_right; only 1: unfold elt in *; only 1: induction rev; only 1: simpl; only 1: auto_tc; only 1: simpl; only 1: unfold flip in *; only 1: auto_tc).	0.025822	10
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.fold_remove_rb	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite fold_spec; only 1: rewrite <- fold_left_rev_right; only 1: unfold elt in *; only 1: induction rev; only 1: simpl; only 1: auto_tc; only 1: simpl; only 1: unfold flip in *; only 1: auto_tc).	0.030379	10
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.union_rb	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold union; only 1: unfold linear_union; only 1: destruct compare_height; only 1: auto_tc; only 1: auto_tc; only 1: auto_tc).	0.024149	7
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.PsubX_ok	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.inter_rb	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold inter; only 1: unfold linear_inter; only 1: destruct compare_height; only 1: auto_tc; only 1: auto_tc; only 1: auto_tc).	0.024175	7
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.BalanceProps.diff_rb	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold diff; only 1: unfold linear_diff; only 1: destruct compare_height; only 1: auto_tc; only 1: auto_tc; only 1: auto_tc).	0.023298	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_le_compat_r	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_ge_compat_l	120	0	synth with cache (only 1: eauto using Rmult_le_compat_l with rorders).	0.061720	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_ge_compat_r	120	0	synth with cache (only 1: eauto using Rmult_le_compat_r with rorders).	0.054966	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.Make.remove_min_spec1	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_le_compat	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_ge_compat	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_gt_0_lt_compat	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.Make.remove_min_spec2	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_le_0_lt_compat	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_lt_0_compat	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_le_compat_neg_l	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_le_ge_compat_neg_l	120	0.0.0	synth with cache (only 1: intros; only 1: apply Rle_ge; only 1: auto with real).	0.070228	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_lt_gt_compat_neg_l	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_lt_reg_l	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.Psub_ok	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.PmulI_ok	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.Pmul_ok	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.Psquare_ok	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.Mphi_morph	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: revert e1 e2; only 1: induction M; only 1: simpl; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: trivial; only 1: simpl; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply IHM; only 1: intros; only 1: apply H; only 1: simpl; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: f_equal; only 1: apply IHM; only 1: intros; only 1: apply H; only 1: f_equal; only 1: apply H).	0.090252	24
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.Mjump_xO_tail	120	0.0.0.0	synth with cache (only 1: apply Mphi_morph; only 1: intros; only 1: jump_simpl; only 1: easy).	0.032364	4
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.Mjump_pred_double	120	0.0.0.0.0	synth with cache (only 1: apply Mphi_morph; only 1: intros; only 1: rewrite jump_pred_double; only 1: jump_simpl; only 1: easy).	0.041232	5
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.Mjump_add	120	0.0.0.0.0	synth with cache (only 1: apply Mphi_morph; only 1: intros; only 1: rewrite <- jump_add; only 1: rewrite Pos.add_comm; only 1: easy).	0.029360	5
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.mkZmon_ok	120	0.0.0.0.0.0.0	synth with cache (only 1: destruct M; only 1: simpl; only 1: rsimpl; only 1: simpl; only 1: rsimpl; only 1: simpl; only 1: rsimpl).	0.027857	7
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.zmon_pred_ok	120	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct j; only 1: simpl; only 1: rewrite mkZmon_ok; only 1: simpl; only 1: rewrite Mjump_xO_tail; only 1: easy; only 1: simpl; only 1: rewrite mkZmon_ok; only 1: simpl; only 1: rewrite Mjump_pred_double; only 1: rsimpl; only 1: simpl; only 1: rsimpl).	0.041227	13
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.mkVmon_ok	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct M; only 1: simpl; only 1: rsimpl; only 1: simpl; only 1: rewrite zmon_pred_ok; only 1: simpl; only 1: rsimpl; only 1: simpl; only 1: rewrite pow_pos_add; only 1: rsimpl).	0.084437	10
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.Mphi_ok	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.POneSubst_ok	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.PNSubst1_ok	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.PNSubst_ok	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.PSubstL1_ok	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: revert P1; only 1: induction LM1; only 1: simpl; only 1: intros; only 1: reflexivity; only 1: destruct a; only 1: simpl; only 1: intros; only 1: rewrite <- IHLM1; only 1: apply PNSubst1_ok; only 1: easy; only 1: intuition).	0.078519	12
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.PSubstL_ok	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.PNSubstL_ok	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.mkX_ok	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct p; only 1: simpl; only 1: Esimpl; only 1: simpl; only 1: Esimpl; only 1: rewrite nth_spec; only 1: unfold hd; only 1: rewrite <- nth_pred_double; only 1: rewrite nth_jump; only 1: easy; only 1: simpl; only 1: Esimpl).	0.099383	12
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.POWER.Ppow_pos_ok	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: revert res; only 1: induction p; only 1: simpl; only 1: intros; only 1: rewrite H; only 1: rewrite Pmul_ok; only 1: rewrite Pmul_ok; only 1: rewrite Pmul_ok; only 1: rewrite IHp; only 1: rewrite IHp; only 1: mul_permut; only 1: simpl; only 1: intros; only 1: rewrite Pmul_ok; only 1: rewrite IHp; only 1: rewrite IHp; only 1: mul_permut; only 1: simpl; only 1: intros; only 1: rewrite H; only 1: rewrite Pmul_ok; only 1: mul_permut).	0.255220	26
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.POWER.Ppow_N_ok	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.NORM_SUBST_REC.norm_aux_PEadd	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.NORM_SUBST_REC.norm_aux_PEopp	120	0.0.0.0.0.0.0.0	synth with cache (only 1: destruct pe; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.041012	8
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.NORM_SUBST_REC.norm_aux_spec	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Wf_Z.Z_of_nat_complete	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Wf_Z.Z_of_nat_complete_inf	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Wf_Z.Z_of_nat_prop	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Wf_Z.Z_of_nat_set	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Wf_Z.natlike_ind	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Wf_Z.natlike_rec	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Wf_Z.Efficient_Rec.R_wf	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: apply well_founded_lt_compat with BinIntDef.Z.to_nat; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: apply Z2Nat.inj_lt; only 1: Z.order; only 1: Z.order; only 1: Z.order).	0.024865	9
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Wf_Z.Efficient_Rec.natlike_rec2	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Wf_Z.Efficient_Rec.natlike_rec3	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Wf_Z.Efficient_Rec.Zlt_0_rec	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Wf_Z.Efficient_Rec.Zlt_0_ind	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply Zlt_0_rec; only 1: easy; only 1: easy).	0.025243	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Wf_Z.Efficient_Rec.Z_lt_rec	120	0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply Zlt_0_rec; only 1: auto).	0.026117	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Wf_Z.Efficient_Rec.Z_lt_induction	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply Z_lt_rec; only 1: easy; only 1: easy).	0.023086	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Wf_Z.Efficient_Rec.Zlt_lower_bound_rec	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Wf_Z.Efficient_Rec.Zlt_lower_bound_ind	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply Zlt_lower_bound_rec with z; only 1: easy; only 1: easy).	0.023358	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.opp_wd	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_wd	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite sub_add_opp; only 1: rewrite sub_add_opp; only 1: f_equiv; only 1: easy; only 1: f_equiv; only 1: easy).	0.059492	12
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_comm	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_wd	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.Induction.bi_induction	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.pred_succ	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.succ_pred	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.one_succ	120	0.0.0.0	synth with cache (only 1: unfold Z.eq; only 1: simpl; only 1: nzsimpl'; only 1: easy).	0.070666	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.two_succ	120	0.0.0.0	synth with cache (only 1: unfold Z.eq; only 1: simpl; only 1: nzsimpl'; only 1: easy).	0.078833	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.opp_0	120	0.0.0.0.0	synth with cache (only 1: unfold Z.opp; only 1: unfold Z.eq; only 1: simpl; only 1: nzsimpl; only 1: easy).	0.063950	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.opp_succ	120	0	synth with cache (only 1: reflexivity).	0.018381	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.add_0_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.add_succ_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_0_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_succ_r	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: unfold Z.sub; only 1: unfold Z.eq; only 1: simpl; only 1: symmetry; only 1: rewrite add_succ_r; only 1: easy).	0.047635	8
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_0_l	120
coq-tactician-stdlib.8.11.dev	Coq.Strings.Ascii.ascii_dec	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: decide equality; only 1: apply bool_dec; only 1: apply bool_dec; only 1: apply bool_dec; only 1: apply bool_dec; only 1: apply bool_dec; only 1: apply bool_dec; only 1: apply bool_dec; only 1: apply bool_dec).	0.113237	9
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zle_cases	120	0.0.0.0	synth with cache (only 1: case Z.leb_spec; only 1: easy; only 1: Z.swap_greater; only 1: easy).	0.026625	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zlt_cases	120	0.0.0.0	synth with cache (only 1: case Z.ltb_spec; only 1: easy; only 1: Z.swap_greater; only 1: easy).	0.026008	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zge_cases	120	0.0.0.0.0	synth with cache (only 1: rewrite Z.geb_leb; only 1: case Z.leb_spec; only 1: Z.swap_greater; only 1: easy; only 1: easy).	0.024007	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zgt_cases	120	0.0.0.0.0	synth with cache (only 1: rewrite Z.gtb_ltb; only 1: case Z.ltb_spec; only 1: Z.swap_greater; only 1: easy; only 1: easy).	0.024915	5
coq-tactician-stdlib.8.11.dev	Coq.Strings.Ascii.eqb_spec	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zle_bool_imp_le	120	0	synth with cache (only 1: apply Z.leb_le).	0.014640	1
coq-tactician-stdlib.8.11.dev	Coq.Strings.Ascii.eqb_refl	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_succ_l	120
coq-tactician-stdlib.8.11.dev	Coq.Strings.Ascii.eqb_sym	120	0	synth with cache (only 1: t_eqb).	0.017415	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_eq_cases	120	0.0	synth with cache (only 1: intros; only 1: apply lt_eq_cases).	0.018865	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zle_imp_le_bool	120	0	synth with cache (only 1: apply Z.leb_le).	0.015235	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_irrefl	120	0.0	synth with cache (only 1: intros; only 1: apply lt_irrefl).	0.019859	2
coq-tactician-stdlib.8.11.dev	Coq.Strings.Ascii.eqb_eq	120	0	synth with cache (only 1: t_eqb).	0.022049	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zle_bool_antisym	120	0.0.0	synth with cache (only 1: rewrite Z.leb_le; only 1: rewrite Z.leb_le; only 1: apply Z.le_antisymm).	0.030349	3
coq-tactician-stdlib.8.11.dev	Coq.Strings.Ascii.eqb_neq	120	0	synth with cache (only 1: t_eqb).	0.016297	1
coq-tactician-stdlib.8.11.dev	Coq.Strings.Ascii.eqb_compat	120	0	synth with cache (only 1: t_eqb).	0.013892	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zle_bool_trans	120	0.0.0.0	synth with cache (only 1: rewrite Z.leb_le; only 1: rewrite Z.leb_le; only 1: rewrite Z.leb_le; only 1: apply Z.le_trans).	0.044952	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zle_bool_total	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zle_bool_plus_mono	120	0.0.0.0	synth with cache (only 1: rewrite Z.leb_le; only 1: rewrite Z.leb_le; only 1: rewrite Z.leb_le; only 1: apply Z.add_le_mono).	0.037984	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zone_pos	120	0	synth with cache (only 1: reflexivity).	0.015968	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zone_min_pos	120	0.0.0	synth with cache (only 1: rewrite Z.leb_le; only 1: rewrite Z.leb_gt; only 1: apply Z.le_succ_l).	0.029760	3
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zle_is_le_bool	120	0.0	synth with cache (only 1: symmetry; only 1: apply Z.leb_le).	0.017035	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_succ_r	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zge_is_le_bool	120	0.0.0	synth with cache (only 1: Z.swap_greater; only 1: symmetry; only 1: apply Z.leb_le).	0.023270	3
coq-tactician-stdlib.8.11.dev	Coq.Strings.Ascii.ascii_N_embedding	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.min_l	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zlt_is_lt_bool	120	0.0.0.0.0.0.0	synth with cache (only 1: symmetry; only 1: unfold BinIntDef.Z.ltb; only 1: unfold Z.lt; only 1: destruct BinIntDef.Z.compare; only 1: easy'; only 1: easy'; only 1: easy').	0.059662	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.min_r	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Z.min; only 1: unfold Z.le; only 1: unfold Z.eq; only 1: simpl; only 1: intros ?; only 1: destruct n; only 1: intros ?; only 1: destruct m; only 1: intros ?; only 1: simpl in *; only 1: rewrite min_r; only 1: rewrite add_assoc; only 1: easy; only 1: assumption).	0.062013	14
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zgt_is_gt_bool	120	0.0.0.0	synth with cache (only 1: Z.swap_greater; only 1: rewrite Z.gtb_ltb; only 1: symmetry; only 1: apply Z.ltb_lt).	0.039552	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zlt_is_le_bool	120	0.0	synth with cache (only 1: rewrite Z.leb_le; only 1: apply Z.lt_le_pred).	0.035667	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zgt_is_le_bool	120	0.0.0	synth with cache (only 1: Z.swap_greater; only 1: rewrite Z.leb_le; only 1: apply Z.lt_le_pred).	0.020995	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.max_l	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zeq_is_eq_bool	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Zeq_bool; only 1: rewrite <- Z.compare_eq_iff; only 1: destruct BinIntDef.Z.compare; only 1: split; only 1: easy; only 1: easy; only 1: split; only 1: easy; only 1: easy; only 1: split; only 1: easy; only 1: easy).	0.043677	12
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.max_r	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Z.max; only 1: unfold Z.le; only 1: unfold Z.eq; only 1: simpl; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite max_r; only 1: rewrite add_assoc; only 1: easy; only 1: assumption).	0.046582	11
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zeq_bool_eq	120	0	synth with cache (only 1: apply Zeq_is_eq_bool).	0.014656	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_nge	120	0.0	synth with cache (only 1: intros; only 1: apply lt_nge).	0.019753	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zeq_bool_neq	120	0.0.0.0	synth with cache (only 1: rewrite Zeq_is_eq_bool; only 1: destruct Zeq_bool; only 1: easy; only 1: easy).	0.040730	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zeq_bool_if	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_wd	120
coq-tactician-stdlib.8.11.dev	Coq.Strings.Ascii.N_ascii_embedding	120
coq-tactician-stdlib.8.11.dev	Coq.Strings.Ascii.N_ascii_bounded	120
coq-tactician-stdlib.8.11.dev	Coq.Strings.Ascii.ascii_nat_embedding	120
coq-tactician-stdlib.8.11.dev	Coq.Strings.Ascii.nat_ascii_embedding	120
coq-tactician-stdlib.8.11.dev	Coq.Strings.Ascii.nat_ascii_bounded	120
coq-tactician-stdlib.8.11.dev	Coq.Strings.Ascii.ascii_of_byte_of_ascii	120
coq-tactician-stdlib.8.11.dev	Coq.Strings.Ascii.byte_of_ascii_of_byte	120
coq-tactician-stdlib.8.11.dev	Coq.Strings.Ascii.ascii_of_byte_via_N	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct x; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	0.223994	257
coq-tactician-stdlib.8.11.dev	Coq.Strings.Ascii.ascii_of_byte_via_nat	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct x; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	0.408889	257
coq-tactician-stdlib.8.11.dev	Coq.Strings.Ascii.byte_of_ascii_via_N	120
coq-tactician-stdlib.8.11.dev	Coq.Strings.Ascii.byte_of_ascii_via_nat	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_le_mono_r	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_lt_mono_l	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite Rlt_le_neq; only 1: rewrite Rlt_le_neq; only 1: rewrite Rplus_cancel_l; only 1: rewrite <- Rplus_le_mono_l; only 1: easy).	0.063491	8
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.radd_ext_Proper	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.rmul_ext_Proper	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.ropp_ext_Proper	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.rsub_ext_Proper	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Pequiv_eq	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi_ext	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intropattern subst <- H; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: easy).	0.023279	8
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Pinj_ext	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intropattern subst <- H; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: simpl; only 1: rewrite H; only 1: easy).	0.071580	11
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.PX_ext	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intropattern subst <- H0; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: simpl; only 1: rewrite H; only 1: rewrite H0; only 1: easy).	0.044602	15
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.jump_add'	120	0.0	synth with cache (only 1: rewrite Pos.add_comm; only 1: apply jump_add).	0.017774	2
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Peq_ok	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Peq_spec	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi0	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi1	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkPinj_ok	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkPinj_ext	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intropattern subst <- H; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite mkPinj_ok; only 1: rewrite mkPinj_ok; only 1: rewrite H; only 1: easy).	0.046844	12
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.pow_pos_add	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.ceqb_spec	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkPX_ok	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkPX_ext	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intropattern subst <- H0; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite mkPX_ok; only 1: rewrite mkPX_ok; only 1: rewrite H; only 1: rewrite H0; only 1: easy).	0.083593	16
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.PaddC_ok	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.singleton_spec	120	0.0	synth with cache (only 1: unfold singleton; only 1: intuition_in).	0.039431	2
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.singleton_ok	120	0.0	synth with cache (only 1: unfold singleton; only 1: auto).	0.013249	2
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.create_spec	120	0.0.0.0.0.0.0	synth with cache (only 1: unfold create; only 1: split; only 1: inversion_clear 1; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.062374	7
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.create_ok	120	0.0	synth with cache (only 1: unfold create; only 1: auto).	0.018090	2
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.PsubC_ok	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.PmulC_aux_ok	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.PmulC_ok	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold PmulC; only 1: case ceqb_spec; only 1: intros ?; only 1: rewrite H; only 1: Esimpl; only 1: intros ?; only 1: case ceqb_spec; only 1: intros ?; only 1: rewrite H0; only 1: Esimpl; only 1: intros ?; only 1: apply PmulC_aux_ok).	0.070169	12
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Popp_ok	120	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: revert l; only 1: induction P; only 1: simpl; only 1: intros; only 1: Esimpl; only 1: simpl; only 1: intros; only 1: apply IHP; only 1: simpl; only 1: intros; only 1: rewrite IHP1; only 1: rewrite IHP2; only 1: rsimpl).	0.129416	13
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.bal_spec	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zmisc.iter_nat_of_Z	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: case n; only 1: auto; only 1: intros ?; only 1: intros ?; only 1: clear H; only 1: unfold BinIntDef.Z.iter; only 1: unfold BinIntDef.Z.abs_nat; only 1: apply Pos2Nat.inj_iter; only 1: intros ?; only 1: intros ?; only 1: case H; only 1: trivial).	0.030132	16
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.bal_ok	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: functional induction bal l x r; only 1: inv; only 1: apply create_ok; only 1: auto; only 1: auto; only 1: auto; only 1: auto; only 1: inv; only 1: apply create_ok; only 1: auto; only 1: apply create_ok; only 1: auto; only 1: auto; only 1: auto; only 1: auto; only 1: auto; only 1: unfold create; only 1: apply gt_tree_node; only 1: auto; only 1: eapply gt_tree_trans; only 1: eauto; only 1: auto; only 1: auto; only 1: inv; only 1: apply create_ok; only 1: auto; only 1: auto; only 1: auto; only 1: auto; only 1: inv; only 1: apply create_ok; only 1: apply create_ok; only 1: auto; only 1: auto; only 1: auto; only 1: auto; only 1: apply create_ok; only 1: auto; only 1: auto; only 1: auto; only 1: auto; only 1: unfold create; only 1: apply lt_tree_node; only 1: eapply lt_tree_trans; only 1: eauto; only 1: auto; only 1: auto; only 1: auto; only 1: unfold create; only 1: apply gt_tree_node; only 1: auto; only 1: eapply gt_tree_trans; only 1: eauto; only 1: auto; only 1: auto; only 1: inv; only 1: apply create_ok; only 1: auto; only 1: auto; only 1: auto; only 1: auto; only 1: inv; only 1: apply create_ok; only 1: apply create_ok; only 1: auto; only 1: auto; only 1: auto; only 1: auto; only 1: auto; only 1: unfold create; only 1: apply lt_tree_node; only 1: eapply lt_tree_trans; only 1: eauto; only 1: auto; only 1: auto; only 1: auto; only 1: auto; only 1: inv; only 1: apply create_ok; only 1: auto; only 1: auto; only 1: auto; only 1: auto; only 1: inv; only 1: apply create_ok; only 1: apply create_ok; only 1: auto; only 1: auto; only 1: auto; only 1: auto; only 1: apply create_ok; only 1: auto; only 1: auto; only 1: auto; only 1: auto; only 1: unfold create; only 1: apply lt_tree_node; only 1: eapply lt_tree_trans; only 1: eauto; only 1: auto; only 1: auto; only 1: auto; only 1: unfold create; only 1: apply gt_tree_node; only 1: auto; only 1: eapply gt_tree_trans; only 1: eauto; only 1: auto; only 1: auto; only 1: apply create_ok; only 1: auto; only 1: auto; only 1: auto; only 1: auto).	0.369090	114
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.PaddX_ok	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.add_spec'	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.add_spec	120	0.0	synth with cache (only 1: intros; only 1: apply add_spec').	0.017554	2
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.add_ok	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induct s x; only 1: auto; only 1: auto; only 1: apply bal_ok; only 1: auto; only 1: auto; only 1: intros ?; only 1: rewrite add_spec'; only 1: intuition; only 1: order; only 1: auto; only 1: apply bal_ok; only 1: auto; only 1: auto; only 1: auto; only 1: intros ?; only 1: rewrite add_spec'; only 1: intuition; only 1: order).	0.108454	19
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.join_spec	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Padd_ok	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: revert P l; only 1: induction P'; only 1: simpl; only 1: intros; only 1: Esimpl; only 1: simpl; only 1: intros; only 1: revert p l; only 1: induction P; only 1: simpl; only 1: intros; only 1: Esimpl; only 1: add_permut; only 1: simpl; only 1: intros; only 1: destr_pos_sub; only 1: intros ?; only 1: intropattern subst -> H; only 1: Esimpl; only 1: rewrite IHP'; only 1: easy; only 1: intros ?; only 1: intropattern subst -> H; only 1: Esimpl; only 1: rewrite IHP'; only 1: Esimpl; only 1: rewrite jump_add'; only 1: easy; only 1: intros ?; only 1: intropattern subst -> H; only 1: Esimpl; only 1: rewrite IHP; only 1: rewrite jump_add'; only 1: easy; only 1: simpl; only 1: intros; only 1: destruct p0; only 1: simpl; only 1: rewrite IHP2; only 1: simpl; only 1: rsimpl; only 1: simpl; only 1: rewrite IHP2; only 1: rewrite jump_pred_double; only 1: rsimpl; only 1: simpl; only 1: rewrite IHP'; only 1: rsimpl; only 1: simpl; only 1: intros; only 1: Esimpl; only 1: destruct P; only 1: simpl; only 1: Esimpl; only 1: add_permut; only 1: simpl; only 1: destruct p0; only 1: simpl; only 1: rewrite IHP'2; only 1: simpl; only 1: rsimpl; only 1: add_permut; only 1: simpl; only 1: rewrite IHP'2; only 1: simpl; only 1: rewrite jump_pred_double; only 1: rsimpl; only 1: add_permut; only 1: simpl; only 1: rewrite IHP'2; only 1: rsimpl; only 1: add_permut; only 1: simpl; only 1: destr_pos_sub; only 1: intros ?; only 1: intropattern subst -> H; only 1: Esimpl; only 1: rewrite IHP'1; only 1: rewrite IHP'2; only 1: rsimpl; only 1: add_permut; only 1: intros ?; only 1: intropattern subst -> H; only 1: Esimpl; only 1: rewrite IHP'1; only 1: rewrite IHP'2; only 1: simpl; only 1: Esimpl; only 1: rewrite pow_pos_add; only 1: rsimpl; only 1: add_permut; only 1: intros ?; only 1: intropattern subst -> H; only 1: Esimpl; only 1: rewrite PaddX_ok; only 1: rsimpl; only 1: rewrite IHP'2; only 1: rewrite pow_pos_add; only 1: rsimpl; only 1: add_permut; only 1: trivial).	1.056165	101
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.join_ok	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: join_tac; only 1: auto with *; only 1: auto with *; only 1: inv; only 1: apply bal_ok; only 1: auto; only 1: auto; only 1: auto; only 1: clear Hrl Hlr; only 1: intros ?; only 1: intros; only 1: rewrite join_spec in *; only 1: intuition; only 1: setoid_replace y with x; only 1: eauto; only 1: eauto; only 1: eauto; only 1: inv; only 1: apply bal_ok; only 1: auto; only 1: auto; only 1: clear Hrl Hlr; only 1: intros ?; only 1: intros; only 1: rewrite join_spec in *; only 1: intuition; only 1: setoid_replace y with x; only 1: eauto; only 1: eauto; only 1: eauto; only 1: auto; only 1: auto with *).	0.226653	32
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.remove_min_spec	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.remove_min_ok	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.remove_min_gt_tree	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.merge_spec	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.merge_ok	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.remove_spec	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.remove_ok	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induct s x; only 1: auto; only 1: apply merge_ok; only 1: eauto; only 1: eauto; only 1: eauto; only 1: apply bal_ok; only 1: auto; only 1: auto; only 1: intros ?; only 1: rewrite remove_spec; only 1: destruct 1; only 1: eauto; only 1: auto; only 1: auto; only 1: apply bal_ok; only 1: auto; only 1: auto; only 1: auto; only 1: intros ?; only 1: rewrite remove_spec; only 1: destruct 1; only 1: eauto; only 1: auto).	0.104596	24
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.concat_spec	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.concat_ok	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Psub_opp	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: revert P; only 1: induction P'; only 1: simpl; only 1: intros; only 1: intros ?; only 1: Esimpl; only 1: simpl; only 1: intros; only 1: revert p; only 1: induction P; only 1: simpl; only 1: intros; only 1: reflexivity; only 1: simpl; only 1: intros; only 1: destr_pos_sub; only 1: intros ?; only 1: intropattern subst -> H; only 1: apply mkPinj_ext; only 1: easy; only 1: easy; only 1: intros ?; only 1: intropattern subst -> H; only 1: apply mkPinj_ext; only 1: easy; only 1: easy; only 1: intros ?; only 1: intropattern subst -> H; only 1: apply mkPinj_ext; only 1: easy; only 1: easy; only 1: simpl; only 1: intros; only 1: destruct p0; only 1: apply PX_ext; only 1: easy; only 1: easy; only 1: easy; only 1: apply PX_ext; only 1: easy; only 1: easy; only 1: easy; only 1: apply PX_ext; only 1: easy; only 1: easy; only 1: easy; only 1: simpl; only 1: intros; only 1: destruct P; only 1: reflexivity; only 1: destruct p0; only 1: apply PX_ext; only 1: easy; only 1: easy; only 1: easy; only 1: apply PX_ext; only 1: easy; only 1: easy; only 1: easy; only 1: apply PX_ext; only 1: easy; only 1: easy; only 1: easy; only 1: destr_pos_sub; only 1: intros ?; only 1: intropattern subst -> H; only 1: apply mkPX_ext; only 1: auto; only 1: auto; only 1: auto; only 1: intros ?; only 1: intropattern subst -> H; only 1: apply mkPX_ext; only 1: auto; only 1: auto; only 1: auto; only 1: intros ?; only 1: intropattern subst -> H; only 1: apply mkPX_ext; only 1: revert p1; only 1: induction P2; only 1: simpl; only 1: intros; only 1: reflexivity; only 1: simpl; only 1: intros; only 1: reflexivity; only 1: simpl; only 1: intros; only 1: destr_pos_sub; only 1: intros ?; only 1: intropattern subst -> H; only 1: apply mkPX_ext; only 1: easy; only 1: easy; only 1: easy; only 1: intros ?; only 1: intropattern subst -> H; only 1: apply mkPX_ext; only 1: easy; only 1: easy; only 1: easy; only 1: intros ?; only 1: intropattern subst -> H; only 1: apply mkPX_ext; only 1: easy; only 1: easy; only 1: easy; only 1: auto; only 1: auto).	0.385533	110
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Psub_ok	120	0.0.0.0	synth with cache (only 1: rewrite Psub_opp; only 1: rewrite Padd_ok; only 1: rewrite Popp_ok; only 1: rsimpl).	0.065746	4
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.split_spec1	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.split_spec2	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.split_spec3	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.PmulI_ok	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.split_ok	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.split_ok1	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.split_ok2	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.inter_spec_ok	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.inter_spec	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.inter_ok	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Pmul_ok	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkZmon_ok	120	0.0.0.0.0.0.0	synth with cache (only 1: destruct M; only 1: simpl; only 1: rsimpl; only 1: simpl; only 1: rsimpl; only 1: simpl; only 1: rsimpl).	0.027818	7
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.zmon_pred_ok	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct j; only 1: simpl; only 1: rewrite mkZmon_ok; only 1: simpl; only 1: rsimpl; only 1: simpl; only 1: rewrite mkZmon_ok; only 1: simpl; only 1: rewrite jump_pred_double; only 1: rsimpl; only 1: simpl; only 1: rsimpl).	0.036597	12
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkVmon_ok	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct M; only 1: simpl; only 1: rsimpl; only 1: simpl; only 1: rewrite zmon_pred_ok; only 1: simpl; only 1: rsimpl; only 1: simpl; only 1: rewrite pow_pos_add; only 1: rsimpl).	0.074907	10
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.diff_spec_ok	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.diff_spec	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.diff_ok	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Mcphi_ok	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.union_spec	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.union_ok	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.filter_spec	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.filter_weak_spec	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.filter_ok	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.partition_spec1'	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction s; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite <- IHs1; only 1: rewrite <- IHs2; only 1: destruct partition; only 1: destruct partition; only 1: destruct f; only 1: easy; only 1: easy).	0.059142	11
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.partition_spec2'	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction s; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite <- IHs1; only 1: rewrite <- IHs2; only 1: destruct partition; only 1: destruct partition; only 1: destruct f; only 1: easy; only 1: easy).	0.076113	11
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.partition_spec1	120	0.0	synth with cache (only 1: rewrite partition_spec1'; only 1: easy).	0.026797	2
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.partition_spec2	120	0.0	synth with cache (only 1: rewrite partition_spec2'; only 1: easy).	0.025187	2
coq-tactician-stdlib.8.11.dev	Coq.QArith.Qminmax.Q.plus_min_distr_r	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.partition_ok1	120	0.0.0	synth with cache (only 1: rewrite partition_spec1'; only 1: apply filter_ok; only 1: easy).	0.019353	3
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.partition_ok2	120	0.0.0	synth with cache (only 1: rewrite partition_spec2'; only 1: apply filter_ok; only 1: easy).	0.023720	3
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Mphi_ok	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.POneSubst_ok	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.PNSubst1_ok	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.PNSubst_ok	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.PSubstL1_ok	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: revert P1; only 1: induction LM1; only 1: simpl; only 1: intros; only 1: reflexivity; only 1: destruct a; only 1: simpl; only 1: intros; only 1: rewrite <- IHLM1; only 1: apply PNSubst1_ok; only 1: easy; only 1: intuition).	0.101934	12
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.PSubstL_ok	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.PNSubstL_ok	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkX_ok	120	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct p; only 1: simpl; only 1: Esimpl; only 1: rewrite <- jump_tl; only 1: rewrite nth_jump; only 1: easy; only 1: simpl; only 1: Esimpl; only 1: rewrite <- nth_jump; only 1: rewrite nth_pred_double; only 1: easy; only 1: simpl; only 1: Esimpl).	0.145422	13
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.POWER.Ppow_pos_ok	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: revert res; only 1: induction p; only 1: simpl; only 1: intros; only 1: rewrite H; only 1: rewrite Pmul_ok; only 1: rewrite Pmul_ok; only 1: rewrite Pmul_ok; only 1: rewrite IHp; only 1: rewrite IHp; only 1: mul_permut; only 1: simpl; only 1: intros; only 1: rewrite Pmul_ok; only 1: rewrite IHp; only 1: rewrite IHp; only 1: mul_permut; only 1: simpl; only 1: intros; only 1: rewrite H; only 1: rewrite Pmul_ok; only 1: mul_permut).	0.218967	26
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zmin.Zmin_spec	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zmin.Zmin_irreducible	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zmin.Zmin_le_prime_inf	120	0.0.0	synth with cache (only 1: apply Z.min_case; only 1: auto; only 1: auto).	0.053837	3
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.POWER.Ppow_N_ok	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zmin.Zpos_min_1	120	0.0.0.0	synth with cache (only 1: destruct p; only 1: easy; only 1: easy; only 1: easy).	0.016849	4
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.NORM_SUBST_REC.norm_aux_PEadd	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.NORM_SUBST_REC.norm_aux_PEopp	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct pe; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.040847	10
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.NORM_SUBST_REC.norm_aux_spec	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.NORM_SUBST_REC.norm_subst_spec	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mon_of_pol_ok	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.interp_PElist_ok	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.norm_subst_ok	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply norm_subst_spec; only 1: apply interp_PElist_ok; only 1: trivial).	0.026353	4
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.ring_correct	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkmult_rec_ok	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkmult1_ok	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkmultm1_ok	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.r_list_pow_rev	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkmult_c_pos_ok	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkmult_c_ok	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkadd_mult_ok	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.add_pow_list_ok	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.add_mult_dev_ok	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mult_dev_ok	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.Pphi_avoid_ok	120	0.0.0.0.0	synth with cache (only 1: unfold Pphi_avoid; only 1: intros; only 1: rewrite mult_dev_ok; only 1: simpl; only 1: Esimpl).	0.061679	5
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.local_mkpow_ok	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi_pow_ok	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Pphi_pow; only 1: intros; only 1: apply Pphi_avoid_ok; only 1: intros; only 1: rewrite local_mkpow_ok; only 1: easy; only 1: intros; only 1: rewrite local_mkpow_ok; only 1: easy; only 1: intros; only 1: rewrite local_mkpow_ok; only 1: easy).	0.071890	12
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.ring_rw_pow_correct	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite Pphi_pow_ok; only 1: rewrite <- H1; only 1: rewrite <- H0; only 1: apply norm_subst_ok; only 1: trivial).	0.043965	14
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkmult_pow_ok	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: revert r; only 1: induction p; only 1: intros; only 1: simpl; only 1: Esimpl; only 1: rewrite IHp; only 1: rewrite IHp; only 1: Esimpl; only 1: intros; only 1: simpl; only 1: Esimpl; only 1: rewrite IHp; only 1: rewrite IHp; only 1: Esimpl; only 1: intros; only 1: simpl; only 1: Esimpl).	0.177487	17
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkpow_ok	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.mkopp_pow_ok	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi_dev_ok	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Pphi_dev; only 1: intros; only 1: apply Pphi_avoid_ok; only 1: intros; only 1: apply mkpow_ok; only 1: intros; only 1: apply mkopp_pow_ok; only 1: intros; only 1: apply mkmult_pow_ok).	0.049201	9
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.ring_rw_correct	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite Pphi_dev_ok; only 1: rewrite <- H1; only 1: rewrite <- H0; only 1: apply norm_subst_ok; only 1: trivial).	0.071061	14
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zmax.Zmax_spec	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zmax.Zmax_left	120	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.max_l).	0.059668	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zmax.Zpos_max_1	120	0.0.0.0	synth with cache (only 1: destruct p; only 1: easy; only 1: easy; only 1: easy).	0.017357	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.auxiliary.Zne_left	120	0.0.0	synth with cache (only 1: unfold Zne; only 1: rewrite <- Z.sub_move_0_r; only 1: easy).	0.021860	3
coq-tactician-stdlib.8.11.dev	Coq.ZArith.auxiliary.Zegal_left	120	0	synth with cache (only 1: apply Z.sub_move_0_r).	0.016964	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.auxiliary.Zle_left	120	0	synth with cache (only 1: apply Z.le_0_sub).	0.016645	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.auxiliary.Zle_left_rev	120	0	synth with cache (only 1: apply Z.le_0_sub).	0.016568	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.auxiliary.Zlt_left_rev	120	0	synth with cache (only 1: apply Z.lt_0_sub).	0.016287	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.auxiliary.Zlt_left_lt	120	0	synth with cache (only 1: apply Z.lt_0_sub).	0.015625	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.auxiliary.Zlt_left	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.auxiliary.Zge_left	120	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.le_0_sub).	0.022383	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.auxiliary.Zgt_left	120	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Zlt_left).	0.021229	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.Dcompare_inf	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.Zcompare_rect	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct BinIntDef.Z.compare; only 1: auto; only 1: auto; only 1: auto).	0.025225	7
coq-tactician-stdlib.8.11.dev	Coq.ZArith.auxiliary.Zgt_left_gt	120	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.lt_0_sub).	0.024298	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.Zcompare_rec	120	0	synth with cache (only 1: apply Zcompare_rect).	0.017378	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.auxiliary.Zgt_left_rev	120	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.lt_0_sub).	0.026133	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.decidability.Z_lt_dec	120	0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Z.lt; only 1: case BinIntDef.Z.compare; only 1: right; only 1: discriminate; only 1: left; only 1: auto; only 1: right; only 1: discriminate).	0.020933	8
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.decidability.Z_le_dec	120	0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Z.le; only 1: case BinIntDef.Z.compare; only 1: left; only 1: discriminate; only 1: left; only 1: discriminate; only 1: right; only 1: tauto).	0.022320	8
coq-tactician-stdlib.8.11.dev	Coq.ZArith.auxiliary.Zle_mult_approx	120	0.0.0	synth with cache (only 1: Z.swap_greater; only 1: intros; only 1: Z.order_pos).	0.052452	3
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.decidability.Z_gt_dec	120	0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Z.gt; only 1: case BinIntDef.Z.compare; only 1: right; only 1: discriminate; only 1: right; only 1: discriminate; only 1: left; only 1: easy).	0.020126	8
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.decidability.Z_ge_dec	120	0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Z.ge; only 1: case BinIntDef.Z.compare; only 1: left; only 1: discriminate; only 1: right; only 1: tauto; only 1: left; only 1: discriminate).	0.023228	8
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.decidability.Z_lt_ge_dec	120	0	synth with cache (only 1: exact Z_lt_dec).	0.016673	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.auxiliary.Zmult_le_approx	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.decidability.Z_lt_le_dec	120	0.0.0.0.0.0	synth with cache (only 1: elim Z_lt_ge_dec; only 1: left; only 1: easy; only 1: right; only 1: apply Z.ge_le; only 1: easy).	0.016072	6
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.decidability.Z_le_gt_dec	120	0.0.0.0.0.0.0	synth with cache (only 1: elim Z_le_dec; only 1: auto with arith; only 1: intros ?; only 1: right; only 1: Z.swap_greater; only 1: apply Z.nle_gt; only 1: easy).	0.021143	7
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.decidability.Z_gt_le_dec	120	0	synth with cache (only 1: exact Z_gt_dec).	0.016131	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.decidability.Z_ge_lt_dec	120	0.0.0.0.0.0.0	synth with cache (only 1: elim Z_ge_dec; only 1: auto with arith; only 1: intros ?; only 1: right; only 1: Z.swap_greater; only 1: apply Z.lt_nge; only 1: easy).	0.025565	7
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.decidability.Z_le_lt_eq_dec	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.Zlt_cotrans	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.Zlt_cotrans_pos	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.Zlt_cotrans_neg	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.not_Zeq_inf	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.Z_dec	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.Z_dec'	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.Z_zerop	120
coq-tactician-stdlib.8.11.dev	Coq.Strings.Byte.byte_dec_lb	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: subst y; only 1: destruct x; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	0.245422	259
coq-tactician-stdlib.8.11.dev	Coq.Strings.Byte.byte_dec_bl	120
coq-tactician-stdlib.8.11.dev	Coq.Strings.Byte.eqb_false	120
coq-tactician-stdlib.8.11.dev	Coq.Strings.Byte.nat.of_to_nat	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct x; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	0.260262	257
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.Zred_factor0	120	0.0	synth with cache (only 1: rewrite Z.mul_1_r; only 1: auto).	0.015238	2
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.Zred_factor1	120	0.0	synth with cache (only 1: rewrite Z.mul_comm; only 1: apply Z.add_diag).	0.018629	2
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.Zred_factor2	120	0.0.0	synth with cache (only 1: rewrite Z.mul_add_distr_l; only 1: Z.nzsimpl; only 1: easy).	0.170658	3
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.Zred_factor3	120	0.0	synth with cache (only 1: Z.nzsimpl; only 1: easy).	0.099621	2
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.Zred_factor4	120	0.0	synth with cache (only 1: symmetry; only 1: apply Z.mul_add_distr_l).	0.016446	2
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.Zred_factor5	120	0.0	synth with cache (only 1: Z.nzsimpl; only 1: easy).	0.054512	2
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.Zred_factor6	120	0.0	synth with cache (only 1: Z.nzsimpl; only 1: auto).	0.050255	2
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.new_var	120	0.0.0	synth with cache (only 1: intros ?; only 1: exists x; only 1: auto).	0.018262	3
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.OMEGA1	120	0.0.0	synth with cache (only 1: intros ?; only 1: intropattern subst -> H; only 1: easy).	0.019139	3
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.OMEGA2	120	0	synth with cache (only 1: Z.order_pos).	0.013981	1
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.OMEGA3	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intropattern subst -> H0; only 1: intros ?; only 1: apply Z.mul_eq_0 in H0; only 1: destruct H0; only 1: subst; only 1: easy; only 1: subst; only 1: easy).	0.026608	10
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.OMEGA4	120
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.OMEGA5	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intropattern subst -> H; only 1: intros ?; only 1: intropattern subst -> H; only 1: easy).	0.018987	5
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.OMEGA6	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intropattern subst -> H0; only 1: Z.nzsimpl; only 1: auto).	0.052468	5
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.OMEGA7	120	0.0.0	synth with cache (only 1: intros; only 1: Z.swap_greater; only 1: Z.order_pos).	0.047493	3
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.OMEGA8	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite <- Z.opp_nonpos_nonneg in H0; only 1: Z.order).	0.021431	5
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.OMEGA9	120	0.0.0.0	synth with cache (only 1: intros; only 1: subst; only 1: rewrite Z.add_opp_diag_l; only 1: easy).	0.020801	4
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.OMEGA10	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: rewrite Z.mul_add_distr_r; only 1: rewrite Z.mul_add_distr_r; only 1: rewrite Z.mul_add_distr_l; only 1: rewrite Z.mul_assoc; only 1: rewrite Z.mul_assoc; only 1: rewrite <- Z.add_assoc; only 1: rewrite <- Z.add_assoc; only 1: f_equal; only 1: apply Z.add_shuffle3).	0.035241	9
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.OMEGA11	120	0.0.0.0	synth with cache (only 1: rewrite Z.mul_add_distr_r; only 1: rewrite Z.mul_assoc; only 1: rewrite Z.add_assoc; only 1: easy).	0.020538	4
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.OMEGA12	120	0.0.0	synth with cache (only 1: rewrite Z.mul_add_distr_r; only 1: rewrite Z.mul_assoc; only 1: apply Z.add_shuffle3).	0.018838	3
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.OMEGA13	120	0.0.0.0.0.0	synth with cache (only 1: rewrite Z.add_shuffle1; only 1: rewrite <- Z.mul_add_distr_l; only 1: rewrite <- Pos2Z.opp_neg; only 1: rewrite Z.add_opp_diag_r; only 1: Z.nzsimpl; only 1: easy).	0.083502	6
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.OMEGA14	120	0.0.0.0.0.0	synth with cache (only 1: rewrite Z.add_shuffle1; only 1: rewrite <- Z.mul_add_distr_l; only 1: rewrite <- Pos2Z.opp_neg; only 1: rewrite Z.add_opp_diag_r; only 1: Z.nzsimpl; only 1: easy).	0.082757	6
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.OMEGA15	120	0.0.0.0	synth with cache (only 1: rewrite Z.mul_add_distr_r; only 1: rewrite Z.mul_add_distr_l; only 1: rewrite Z.mul_assoc; only 1: apply Z.add_shuffle1).	0.028208	4
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.OMEGA16	120	0.0.0	synth with cache (only 1: rewrite Z.mul_add_distr_r; only 1: rewrite Z.mul_assoc; only 1: easy).	0.022172	3
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.OMEGA17	120	0.0.1.0.0.0.0	synth with cache (only 1: unfold Zne; only 1: unfold not; only 1: intros ?; only 1: intros ?; only 1: subst; only 1: Z.nzsimpl; only 1: easy).	0.072349	12
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.OMEGA18	120	0.0.0.0.0	synth with cache (only 1: unfold Zne; only 1: unfold not; only 1: intros; only 1: subst; only 1: auto).	0.023326	5
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.OMEGA19	120
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.OMEGA20	120	0.0.1.0.0.0.0	synth with cache (only 1: unfold Zne; only 1: unfold not; only 1: intros ?; only 1: intros ?; only 1: subst; only 1: Z.nzsimpl; only 1: easy).	0.082016	12
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.intro_Z	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Ztrichotomy_inf	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Ztrichotomy	120	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.lt_trichotomy).	0.024000	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.dec_Zne	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.dec_Zgt	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.dec_Zge	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.not_Zeq	120	0	synth with cache (only 1: apply Z.lt_gt_cases).	0.016900	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zle_not_lt	120	0	synth with cache (only 1: apply Z.le_ngt).	0.014919	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zlt_not_le	120	0	synth with cache (only 1: apply Z.lt_nge).	0.013844	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zle_not_gt	120	0	synth with cache (only 1: trivial).	0.013848	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zgt_not_le	120	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.lt_nge).	0.022384	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Znot_ge_lt	120	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.nle_gt).	0.021749	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Znot_lt_ge	120	0	synth with cache (only 1: trivial).	0.014896	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Znot_gt_le	120	0	synth with cache (only 1: trivial).	0.014889	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Znot_le_gt	120	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.nle_gt).	0.073363	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.not_Zne	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zgt_asym	120	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.lt_asymm).	0.025769	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zgt_irrefl	120	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.lt_irrefl).	0.019587	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zle_lt_or_eq	120	0	synth with cache (only 1: apply Z.lt_eq_cases).	0.018263	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zgt_trans	120	0.0.0.0.0	synth with cache (only 1: Z.swap_greater; only 1: intros; only 1: transitivity m; only 1: easy; only 1: easy).	0.036528	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zle_gt_trans	120	0.0	synth with cache (only 1: Z.swap_greater; only 1: Z.order).	0.033495	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zgt_le_trans	120	0.0	synth with cache (only 1: Z.swap_greater; only 1: Z.order).	0.030484	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zge_trans	120	0.0	synth with cache (only 1: Z.swap_greater; only 1: Z.order).	0.033788	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zsucc_le_compat	120	0	synth with cache (only 1: apply Z.succ_le_mono).	0.014913	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zsucc_lt_compat	120	0	synth with cache (only 1: apply Z.succ_lt_mono).	0.016976	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zsucc_gt_compat	120	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.succ_lt_mono).	0.030559	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zsucc_gt_reg	120	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.succ_lt_mono).	0.028918	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zsucc_le_reg	120	0	synth with cache (only 1: apply Z.succ_le_mono).	0.017610	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zsucc_lt_reg	120	0	synth with cache (only 1: apply Z.succ_lt_mono).	0.015855	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zgt_succ	120	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.lt_succ_diag_r).	0.013793	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Znot_le_succ	120	0.0	synth with cache (only 1: apply Z.lt_nge; only 1: apply Z.lt_succ_diag_r).	0.017821	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zgt_le_succ	120	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.le_succ_l).	0.022089	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zle_gt_succ	120	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.lt_succ_r).	0.023391	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zle_lt_succ	120	0	synth with cache (only 1: apply Z.lt_succ_r).	0.033496	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zlt_le_succ	120	0	synth with cache (only 1: apply Z.le_succ_l).	0.035813	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zgt_succ_le	120	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.lt_succ_r).	0.021747	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zlt_succ_le	120	0	synth with cache (only 1: apply Z.lt_succ_r).	0.017096	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zle_succ_gt	120	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.le_succ_l).	0.021804	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zle_succ_le	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply Z.lt_le_incl; only 1: apply Z.le_succ_l; only 1: easy).	0.023651	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zgt_succ_pred	120	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.lt_succ_lt_pred).	0.029403	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zlt_succ_pred	120	0	synth with cache (only 1: apply Z.lt_succ_lt_pred).	0.018997	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zlt_0_le_0_pred	120	0	synth with cache (only 1: apply Z.lt_le_pred).	0.016307	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zgt_0_le_0_pred	120	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.lt_le_pred).	0.021533	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zle_neg_pos	120	0	synth with cache (only 1: exact Pos2Z.neg_le_pos).	0.014488	1
coq-tactician-stdlib.8.11.dev	Coq.Strings.Byte.nat.to_of_nat	120
coq-tactician-stdlib.8.11.dev	Coq.Strings.Byte.nat.to_of_nat_iff	120	0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intros ?; only 1: apply to_of_nat; only 1: assumption; only 1: intros ?; only 1: subst; only 1: apply of_to_nat).	0.018842	7
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zgt_pos_0	120	0	synth with cache (only 1: easy).	0.017627	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zle_0_pos	120	0	synth with cache (only 1: exact Pos2Z.pos_is_nonneg).	0.016413	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zlt_neg_0	120	0	synth with cache (only 1: exact Pos2Z.neg_is_neg).	0.014228	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zle_0_nat	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zgt_succ_gt_or_eq	120	0.0.0.0.0	synth with cache (only 1: Z.swap_greater; only 1: intros; only 1: apply Z.lt_eq_cases; only 1: apply Z.lt_succ_r; only 1: easy).	0.039664	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zplus_gt_compat_l	120	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.add_lt_mono_l).	0.037933	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zplus_gt_compat_r	120	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.add_lt_mono_r).	0.032346	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zplus_le_compat_l	120	0	synth with cache (only 1: apply Z.add_le_mono_l).	0.019845	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zplus_le_compat_r	120	0	synth with cache (only 1: apply Z.add_le_mono_r).	0.018374	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zplus_lt_compat_l	120	0	synth with cache (only 1: apply Z.add_lt_mono_l).	0.021202	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zplus_lt_compat_r	120	0	synth with cache (only 1: apply Z.add_lt_mono_r).	0.020601	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zplus_le_reg_l	120	0	synth with cache (only 1: apply Z.add_le_mono_l).	0.021316	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zplus_le_reg_r	120	0	synth with cache (only 1: apply Z.add_le_mono_r).	0.018911	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zplus_lt_reg_l	120	0	synth with cache (only 1: apply Z.add_lt_mono_l).	0.017188	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zplus_lt_reg_r	120	0	synth with cache (only 1: apply Z.add_lt_mono_r).	0.018407	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zplus_gt_reg_l	120	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.add_lt_mono_l).	0.030396	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zplus_gt_reg_r	120	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.add_lt_mono_r).	0.033920	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_le_compat_r	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply Z.mul_le_mono_nonneg_r; only 1: easy; only 1: easy).	0.024120	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_le_compat_l	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply Z.mul_le_mono_nonneg_l; only 1: easy; only 1: easy).	0.022321	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_lt_compat_r	120	0	synth with cache (only 1: apply Z.mul_lt_mono_pos_r).	0.017729	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_gt_compat_r	120	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).	0.066757	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_gt_0_lt_compat_r	120	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).	0.027207	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_gt_0_le_compat_r	120	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_le_mono_pos_r).	0.027978	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_lt_0_le_compat_r	120	0	synth with cache (only 1: apply Z.mul_le_mono_pos_r).	0.020588	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_gt_0_lt_compat_l	120	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_l).	0.025763	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_lt_compat_l	120	0	synth with cache (only 1: apply Z.mul_lt_mono_pos_l).	0.019964	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_gt_compat_l	120	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_l).	0.037875	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_ge_compat_r	120	0.0.0.0.0	synth with cache (only 1: Z.swap_greater; only 1: intros; only 1: apply Z.mul_le_mono_nonneg_r; only 1: easy; only 1: easy).	0.066476	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_ge_compat_l	120	0.0.0.0.0	synth with cache (only 1: Z.swap_greater; only 1: intros; only 1: apply Z.mul_le_mono_nonneg_l; only 1: easy; only 1: easy).	0.050726	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_ge_compat	120	0.0.0.0.0.0.0	synth with cache (only 1: Z.swap_greater; only 1: intros; only 1: apply Z.mul_le_mono_nonneg; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.072246	7
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_le_compat	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Z.mul_le_mono_nonneg; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.028309	6
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_gt_0_lt_reg_r	120	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).	0.030796	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_lt_reg_r	120	0	synth with cache (only 1: apply Z.mul_lt_mono_pos_r).	0.026903	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_le_reg_r	120	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_le_mono_pos_r).	0.036110	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_lt_0_le_reg_r	120	0	synth with cache (only 1: apply Z.mul_le_mono_pos_r).	0.025118	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_ge_reg_r	120	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_le_mono_pos_r).	0.041166	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_gt_reg_r	120	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).	0.047041	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_lt_compat	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct H; only 1: intros ?; only 1: destruct H1; only 1: apply Z.mul_lt_mono_nonneg; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.028005	9
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_lt_compat2	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_gt_0_compat	120	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_pos_pos).	0.046075	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_gt_0_le_0_compat	120	0.0.0.0.0.0	synth with cache (only 1: Z.swap_greater; only 1: intros; only 1: apply Z.mul_nonneg_nonneg; only 1: trivial; only 1: apply Z.lt_le_incl; only 1: easy).	0.037103	6
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_le_0_reg_r	120	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_nonneg_cancel_r).	0.034447	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_lt_0_reg_r	120	0	synth with cache (only 1: apply Z.mul_pos_cancel_r).	0.022852	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_gt_0_lt_0_reg_r	120	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_pos_cancel_r).	0.032571	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_gt_0_reg_l	120	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_pos_cancel_l).	0.062714	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zlt_square_simpl	120	0	synth with cache (only 1: apply Z.square_lt_simpl_nonneg).	0.020301	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zgt_square_simpl	120	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.square_lt_simpl_nonneg).	0.040790	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zeq_plus_swap	120	0	synth with cache (only 1: apply Z.add_move_r).	0.022978	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zlt_0_minus_lt	120	0	synth with cache (only 1: apply Z.lt_0_sub).	0.023960	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersEx.PairOrderedType.lt_strorder	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zle_0_minus_le	120	0	synth with cache (only 1: apply Z.le_0_sub).	0.023834	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zle_minus_le_0	120	0	synth with cache (only 1: apply Z.le_0_sub).	0.023566	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersEx.PairOrderedType.lt_compat	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: compute; only 1: intros ?; only 1: destruct x; only 1: intros ?; only 1: destruct y; only 1: intros ?; only 1: destruct H; only 1: intros ?; only 1: destruct x; only 1: intros ?; only 1: destruct y; only 1: intros ?; only 1: destruct H1; only 1: rewrite H; only 1: rewrite H0; only 1: rewrite H1; only 1: rewrite H2; only 1: intuition).	0.268418	18
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersEx.PairOrderedType.compare_spec	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersEx.PositiveOrderedTypeBits.bits_lt_antirefl	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersEx.PositiveOrderedTypeBits.bits_lt_trans	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersEx.PositiveOrderedTypeBits.lt_compat	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite H; only 1: rewrite H0; only 1: intuition).	0.076490	9
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersEx.PositiveOrderedTypeBits.lt_strorder	120	0.0.0	synth with cache (only 1: split; only 1: exact bits_lt_antirefl; only 1: exact bits_lt_trans).	0.015462	3
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersEx.PositiveOrderedTypeBits.compare_spec	120
coq-tactician-stdlib.8.11.dev	Coq.Strings.Byte.nat.to_of_nat_option_map	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: destruct x; only 1: reflexivity; only 1: reflexivity).	7.003823	513
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.nat_N_Z	120	0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: easy).	0.019443	3
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N_nat_Z	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.positive_nat_Z	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.positive_N_Z	120	0.0.0.0	synth with cache (only 1: destruct p; only 1: easy; only 1: easy; only 1: easy).	0.015554	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.positive_N_nat	120	0	synth with cache (only 1: reflexivity).	0.013639	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.positive_nat_N	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z_N_nat	120	0.0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: easy; only 1: easy).	0.017427	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z_nat_N	120	0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: simpl; only 1: auto; only 1: simpl; only 1: apply positive_nat_N; only 1: simpl; only 1: trivial).	0.017411	7
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs_N_nat	120	0.0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: easy; only 1: easy).	0.018538	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs_nat_N	120	0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: simpl; only 1: auto; only 1: simpl; only 1: apply positive_nat_N; only 1: simpl; only 1: apply positive_nat_N).	0.020817	7
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.id	120	0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: easy).	0.019313	3
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: destruct m; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: destruct m; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence).	0.023378	11
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_iff	120	0.0.0.0.0	synth with cache (only 1: split; only 1: apply inj; only 1: intros; only 1: f_equal; only 1: easy).	0.022850	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.is_nonneg	120	0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: easy).	0.019990	3
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_0	120	0	synth with cache (only 1: reflexivity).	0.069184	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_pos	120	0.0.0.0	synth with cache (only 1: destruct p; only 1: easy; only 1: easy; only 1: easy).	0.073393	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_compare	120	0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: destruct m; only 1: easy; only 1: easy; only 1: destruct m; only 1: easy; only 1: easy).	0.020319	7
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_le	120	0.0.0	synth with cache (only 1: unfold Z.le; only 1: rewrite inj_compare; only 1: easy).	0.017385	3
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_lt	120	0.0.0	synth with cache (only 1: unfold Z.lt; only 1: rewrite inj_compare; only 1: easy).	0.021793	3
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_ge	120	0.0.0	synth with cache (only 1: unfold Z.ge; only 1: rewrite inj_compare; only 1: easy).	0.018163	3
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_gt	120	0.0.0	synth with cache (only 1: unfold Z.gt; only 1: rewrite inj_compare; only 1: easy).	0.020162	3
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_abs_N	120	0.0.0.0	synth with cache (only 1: destruct z; only 1: easy; only 1: easy; only 1: easy).	0.019491	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_add	120	0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: destruct m; only 1: easy; only 1: easy; only 1: destruct m; only 1: easy; only 1: easy).	0.023304	7
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_mul	120	0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: destruct m; only 1: easy; only 1: easy; only 1: destruct m; only 1: easy; only 1: easy).	0.020315	7
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_sub_max	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite Z.pos_sub_spec; only 1: rewrite Pos.compare_sub_mask; only 1: unfold BinPosDef.Pos.sub; only 1: destruct BinPosDef.Pos.sub_mask; only 1: easy; only 1: easy; only 1: easy).	0.034820	17
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_sub	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite inj_sub_max; only 1: unfold N.le in H; only 1: rewrite N.compare_antisym in H; only 1: rewrite <- inj_compare in H; only 1: rewrite Z.compare_sub in H; only 1: destruct BinIntDef.Z.sub; only 1: trivial; only 1: trivial; only 1: destruct H; only 1: easy).	0.026857	11
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_succ	120	0.0.0.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: rewrite Pos.add_1_r; only 1: easy).	0.017382	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_pred_max	120	0.0.0.0	synth with cache (only 1: unfold BinIntDef.Z.pred; only 1: rewrite N.pred_sub; only 1: rewrite inj_sub_max; only 1: easy).	0.018769	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_pred	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: unfold BinIntDef.Z.pred; only 1: rewrite N.pred_sub; only 1: rewrite inj_sub; only 1: trivial; only 1: apply N.le_succ_l in H; only 1: easy).	0.021723	7
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_min	120	0.0.0.0.0.0.0	synth with cache (only 1: unfold BinIntDef.Z.min; only 1: unfold BinNatDef.N.min; only 1: rewrite inj_compare; only 1: case BinNatDef.N.compare; only 1: easy; only 1: easy; only 1: easy).	0.025054	7
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_max	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold BinIntDef.Z.max; only 1: unfold BinNatDef.N.max; only 1: rewrite inj_compare; only 1: case N.compare_spec; only 1: intros; only 1: subst; only 1: trivial; only 1: intros; only 1: trivial; only 1: intros; only 1: trivial).	0.022508	11
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_div	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_mod	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_quot	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct m; only 1: destruct n; only 1: easy; only 1: easy; only 1: rewrite Z.quot_div_nonneg; only 1: rewrite inj_div; only 1: trivial; only 1: apply is_nonneg; only 1: easy).	0.026030	9
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_rem	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct m; only 1: destruct n; only 1: easy; only 1: easy; only 1: rewrite Z.rem_mod_nonneg; only 1: rewrite inj_mod; only 1: trivial; only 1: easy; only 1: apply is_nonneg; only 1: easy).	0.029506	10
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_div2	120	0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: destruct p; only 1: easy; only 1: easy; only 1: easy).	0.023107	6
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_quot2	120	0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: destruct p; only 1: easy; only 1: easy; only 1: easy).	0.022496	6
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_pow	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: destruct m; only 1: trivial; only 1: rewrite Z.pow_0_l; only 1: easy; only 1: easy; only 1: destruct m; only 1: trivial; only 1: apply Pos2Z.inj_pow).	0.026287	9
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_testbit	120	0	synth with cache (only 1: apply Z.testbit_of_N).	0.018566	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.id	120	0.0.0.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: trivial; only 1: destruct 1; only 1: easy).	0.021121	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_iff	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: apply inj; only 1: auto; only 1: auto; only 1: intros; only 1: subst; only 1: easy).	0.026883	8
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_0	120	0	synth with cache (only 1: reflexivity).	0.017367	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_pos	120	0	synth with cache (only 1: trivial).	0.017775	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_neg	120	0	synth with cache (only 1: reflexivity).	0.016943	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_add	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: destruct m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: destruct m; only 1: trivial; only 1: trivial; only 1: destruct 2; only 1: easy; only 1: destruct m; only 1: trivial; only 1: destruct 1; only 1: easy; only 1: trivial).	0.069772	15
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_mul	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: destruct m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: destruct m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: destruct m; only 1: trivial; only 1: trivial; only 1: destruct 1; only 1: easy).	0.037028	14
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_succ	120	0.0.0.0.0.0	synth with cache (only 1: unfold BinIntDef.Z.succ; only 1: intros; only 1: rewrite inj_add; only 1: apply N.add_1_r; only 1: assumption; only 1: easy).	0.023388	6
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_sub	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: destruct m; only 1: trivial; only 1: trivial; only 1: destruct 1; only 1: easy; only 1: destruct m; only 1: trivial; only 1: intros ?; only 1: clear H; only 1: simpl; only 1: rewrite Z.pos_sub_spec; only 1: rewrite Pos.compare_sub_mask; only 1: unfold BinPosDef.Pos.sub; only 1: destruct BinPosDef.Pos.sub_mask; only 1: easy; only 1: easy; only 1: easy; only 1: destruct 1; only 1: easy; only 1: destruct m; only 1: trivial; only 1: trivial; only 1: destruct 1; only 1: easy).	0.046272	25
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_pred	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_compare	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite <- N2Z.inj_compare; only 1: rewrite id; only 1: rewrite id; only 1: easy; only 1: auto; only 1: auto).	0.027281	8
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_le	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: unfold Z.le; only 1: unfold N.le; only 1: rewrite inj_compare; only 1: easy; only 1: auto; only 1: auto).	0.023150	8
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_lt	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: unfold Z.lt; only 1: unfold N.lt; only 1: rewrite inj_compare; only 1: easy; only 1: auto; only 1: auto).	0.023450	8
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_min	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: unfold BinIntDef.Z.min; only 1: unfold BinNatDef.N.min; only 1: simpl; only 1: case BinPosDef.Pos.compare; only 1: easy; only 1: easy; only 1: easy; only 1: simpl; only 1: trivial; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: unfold BinIntDef.Z.min; only 1: unfold BinNatDef.N.min; only 1: simpl; only 1: case BinPosDef.Pos.compare; only 1: easy; only 1: easy; only 1: easy).	0.047769	34
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_max	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: unfold BinIntDef.Z.max; only 1: unfold BinNatDef.N.max; only 1: simpl; only 1: case Pos.compare_spec; only 1: intros; only 1: subst; only 1: trivial; only 1: intros; only 1: trivial; only 1: intros; only 1: trivial; only 1: simpl; only 1: trivial; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: unfold BinIntDef.Z.max; only 1: unfold BinNatDef.N.max; only 1: simpl; only 1: case BinPosDef.Pos.compare; only 1: easy; only 1: easy; only 1: easy).	0.070976	38
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_div	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_mod	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: destruct m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: destruct m; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: easy; only 1: intros ?; only 1: intros ?; only 1: clear; only 1: simpl; only 1: rewrite <- N2Z.id; only 1: f_equal; only 1: rewrite N2Z.inj_mod; only 1: easy; only 1: easy; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: easy; only 1: destruct m; only 1: trivial; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: easy; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: easy).	0.071806	33
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_quot	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct m; only 1: destruct n; only 1: easy; only 1: easy; only 1: easy; only 1: intros; only 1: rewrite Z.quot_div_nonneg; only 1: rewrite inj_div; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: destruct 2; only 1: easy).	0.035446	15
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_rem	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct m; only 1: destruct n; only 1: easy; only 1: easy; only 1: easy; only 1: intros; only 1: rewrite Z.rem_mod_nonneg; only 1: rewrite inj_mod; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: destruct 2; only 1: easy).	0.041073	15
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_div2	120	0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: destruct p; only 1: easy; only 1: easy; only 1: easy; only 1: trivial).	0.050554	7
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_quot2	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: destruct p; only 1: easy; only 1: easy; only 1: easy; only 1: destruct p; only 1: easy; only 1: easy; only 1: easy).	0.062002	10
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_pow	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct m; only 1: trivial; only 1: intros; only 1: rewrite <- N2Z.id; only 1: rewrite N2Z.inj_pow; only 1: rewrite id; only 1: easy; only 1: easy; only 1: destruct 2; only 1: easy).	0.029050	10
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_testbit	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite <- Z.testbit_of_N; only 1: f_equal; only 1: destruct n; only 1: trivial; only 1: trivial; only 1: destruct H; only 1: easy).	0.027015	8
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.abs_N_spec	120	0.0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: easy; only 1: easy).	0.019522	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.abs_N_nonneg	120	0.0.0.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: trivial; only 1: destruct 1; only 1: easy).	0.020082	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.id_abs	120	0.0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: easy; only 1: easy).	0.019092	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.id	120	0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: easy).	0.018396	3
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.inj_0	120	0	synth with cache (only 1: reflexivity).	0.016763	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.inj_pos	120	0	synth with cache (only 1: reflexivity).	0.020076	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.inj_neg	120	0	synth with cache (only 1: reflexivity).	0.019332	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.inj_opp	120	0.0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: easy; only 1: easy).	0.023450	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.inj_succ	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite abs_N_nonneg; only 1: rewrite abs_N_nonneg; only 1: apply Z2N.inj_succ; only 1: assumption; only 1: assumption; only 1: apply Z.le_le_succ_r; only 1: assumption).	0.021630	8
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.inj_add	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite abs_N_nonneg; only 1: rewrite abs_N_nonneg; only 1: rewrite abs_N_nonneg; only 1: apply Z2N.inj_add; only 1: auto; only 1: auto; only 1: auto; only 1: auto; only 1: apply Z.add_nonneg_nonneg; only 1: auto; only 1: auto).	0.027454	12
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.inj_mul	120	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: destruct m; only 1: easy; only 1: easy; only 1: easy; only 1: destruct m; only 1: easy; only 1: easy; only 1: easy; only 1: destruct m; only 1: easy; only 1: easy; only 1: easy).	0.030575	13
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.inj_sub	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct H; only 1: rewrite abs_N_nonneg; only 1: rewrite abs_N_nonneg; only 1: rewrite abs_N_nonneg; only 1: apply Z2N.inj_sub; only 1: trivial; only 1: trivial; only 1: Z.order; only 1: apply Z.le_0_sub; only 1: easy).	0.023476	11
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.inj_pred	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite abs_N_nonneg; only 1: rewrite abs_N_nonneg; only 1: apply Z2N.inj_pred; only 1: Z.order; only 1: apply Z.lt_succ_r; only 1: rewrite Z.succ_pred; only 1: auto).	0.024438	8
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.inj_compare	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite abs_N_nonneg; only 1: rewrite abs_N_nonneg; only 1: apply Z2N.inj_compare; only 1: auto; only 1: auto; only 1: auto; only 1: auto).	0.023411	8
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.inj_le	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: unfold Z.le; only 1: unfold N.le; only 1: rewrite inj_compare; only 1: easy; only 1: auto; only 1: auto).	0.033369	8
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.inj_lt	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: unfold Z.lt; only 1: unfold N.lt; only 1: rewrite inj_compare; only 1: easy; only 1: auto; only 1: auto).	0.036062	8
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.inj_min	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite abs_N_nonneg; only 1: rewrite abs_N_nonneg; only 1: rewrite abs_N_nonneg; only 1: apply Z2N.inj_min; only 1: auto; only 1: auto; only 1: apply Z.min_glb; only 1: auto; only 1: auto).	0.039870	10
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.inj_max	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite abs_N_nonneg; only 1: rewrite abs_N_nonneg; only 1: rewrite abs_N_nonneg; only 1: apply Z2N.inj_max; only 1: auto; only 1: auto; only 1: transitivity n; only 1: auto; only 1: apply Z.le_max_l).	0.027422	10
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.inj_quot	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.inj_rem	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.inj_pow	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite abs_N_spec; only 1: rewrite Z.abs_pow; only 1: rewrite Z2N.inj_pow; only 1: rewrite <- abs_N_spec; only 1: f_equal; only 1: symmetry; only 1: apply abs_N_nonneg; only 1: trivial; only 1: apply Z.abs_nonneg; only 1: trivial).	0.027144	11
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.inj_succ_abs	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite Pos.add_1_r; only 1: easy; only 1: simpl; only 1: rewrite Pos.add_1_r; only 1: easy).	0.023397	9
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.inj_add_abs	120	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: destruct m; only 1: easy; only 1: easy; only 1: easy; only 1: destruct m; only 1: easy; only 1: easy; only 1: easy; only 1: destruct m; only 1: easy; only 1: easy; only 1: easy).	0.031170	13
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.inj_mul_abs	120	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: destruct m; only 1: easy; only 1: easy; only 1: easy; only 1: destruct m; only 1: easy; only 1: easy; only 1: easy; only 1: destruct m; only 1: easy; only 1: easy; only 1: easy).	0.033326	13
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Nat2Z.inj_0	120	0	synth with cache (only 1: reflexivity).	0.021366	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Nat2Z.inj_succ	120	0.0.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: apply Pos2Z.inj_succ).	0.019168	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Nat2Z.is_nonneg	120	0.0.0	synth with cache (only 1: induction n; only 1: easy; only 1: easy).	0.024017	3
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_alt.Piter_mul_acc	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_alt.Piter_op_square	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Nat2Z.id	120	0.0.0.0.0	synth with cache (only 1: rewrite <- nat_N_Z; only 1: rewrite <- Z_N_nat; only 1: rewrite N2Z.id; only 1: rewrite Nat2N.id; only 1: easy).	0.025415	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_alt.Zpower_equiv	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct b; only 1: trivial; only 1: unfold Zpower_alt; only 1: unfold BinIntDef.Z.pow; only 1: unfold BinIntDef.Z.pow_pos; only 1: revert a; only 1: induction p; only 1: simpl; only 1: intros; only 1: f_equal; only 1: rewrite Piter_mul_acc; only 1: rewrite Piter_op_square; only 1: rewrite IHp; only 1: easy; only 1: intros; only 1: symmetry; only 1: apply Z.mul_assoc; only 1: simpl; only 1: intros; only 1: rewrite Piter_mul_acc; only 1: rewrite Piter_op_square; only 1: rewrite IHp; only 1: easy; only 1: intros; only 1: symmetry; only 1: apply Z.mul_assoc; only 1: simpl; only 1: intros; only 1: rewrite Z.mul_1_r; only 1: auto; only 1: trivial).	0.056555	31
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Nat2Z.inj	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Nat2Z.inj_iff	120	0.0.0.1.0	synth with cache (only 1: split; only 1: apply inj; only 1: intros; only 1: f_equal; only 1: trivial).	0.024683	7
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_alt.Zpower_alt_0_r	120	0	synth with cache (only 1: reflexivity).	0.013487	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Nat2Z.inj_compare	120	0.0.0.0.0	synth with cache (only 1: rewrite <- nat_N_Z; only 1: rewrite <- nat_N_Z; only 1: rewrite N2Z.inj_compare; only 1: rewrite <- Nat2N.inj_compare; only 1: easy).	0.023982	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Nat2Z.inj_le	120	0.0.0.0	synth with cache (only 1: unfold Z.le; only 1: rewrite inj_compare; only 1: rewrite nat_compare_le; only 1: easy).	0.025147	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_alt.Zpower_alt_succ_r	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct b; only 1: intros ?; only 1: simpl; only 1: Z.nzsimpl; only 1: easy; only 1: intros ?; only 1: simpl; only 1: rewrite Pos.add_1_r; only 1: rewrite Pos.iter_op_succ; only 1: easy; only 1: apply Z.mul_assoc; only 1: intros ?; only 1: simpl; only 1: elim H; only 1: easy).	0.061189	15
coq-tactician-stdlib.8.11.dev	Coq.Strings.Byte.nat.to_nat_bounded	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Nat2Z.inj_lt	120	0.0.0.0	synth with cache (only 1: unfold Z.lt; only 1: rewrite inj_compare; only 1: rewrite nat_compare_lt; only 1: easy).	0.025088	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_alt.Zpower_alt_neg_r	120	0.0.0.0	synth with cache (only 1: destruct b; only 1: easy; only 1: easy; only 1: easy).	0.050044	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Nat2Z.inj_ge	120	0.0.0.0	synth with cache (only 1: unfold Z.ge; only 1: rewrite inj_compare; only 1: rewrite nat_compare_ge; only 1: easy).	0.022849	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_alt.Zpower_alt_Ppow	120	0.0.0	synth with cache (only 1: rewrite Zpower_equiv; only 1: rewrite Pos2Z.inj_pow; only 1: easy).	0.018391	3
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Nat2Z.inj_gt	120	0.0.0.0	synth with cache (only 1: unfold Z.gt; only 1: rewrite inj_compare; only 1: rewrite nat_compare_gt; only 1: easy).	0.024478	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Nat2Z.inj_abs_nat	120	0.0.0	synth with cache (only 1: rewrite <- Zabs_N_nat; only 1: rewrite N_nat_Z; only 1: apply Zabs2N.id_abs).	0.023147	3
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Nat2Z.inj_add	120	0.0.0.0.0.0	synth with cache (only 1: rewrite <- nat_N_Z; only 1: rewrite <- nat_N_Z; only 1: rewrite <- nat_N_Z; only 1: rewrite Nat2N.inj_add; only 1: rewrite N2Z.inj_add; only 1: easy).	0.024513	6
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Nat2Z.inj_mul	120	0.0.0.0.0.0	synth with cache (only 1: rewrite <- nat_N_Z; only 1: rewrite <- nat_N_Z; only 1: rewrite <- nat_N_Z; only 1: rewrite Nat2N.inj_mul; only 1: rewrite N2Z.inj_mul; only 1: easy).	0.024848	6
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Nat2Z.inj_sub_max	120	0.0.0.0.0.0	synth with cache (only 1: rewrite <- nat_N_Z; only 1: rewrite <- nat_N_Z; only 1: rewrite <- nat_N_Z; only 1: rewrite Nat2N.inj_sub; only 1: rewrite N2Z.inj_sub_max; only 1: easy).	0.024828	6
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Nat2Z.inj_sub	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: rewrite nat_compare_le; only 1: rewrite Nat2N.inj_compare; only 1: intros; only 1: rewrite <- nat_N_Z; only 1: rewrite <- nat_N_Z; only 1: rewrite <- nat_N_Z; only 1: rewrite Nat2N.inj_sub; only 1: rewrite N2Z.inj_sub; only 1: easy; only 1: easy).	0.044239	10
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Nat2Z.inj_pred_max	120	0.0.0.0.0	synth with cache (only 1: rewrite <- nat_N_Z; only 1: rewrite <- nat_N_Z; only 1: rewrite Nat2N.inj_pred; only 1: rewrite N2Z.inj_pred_max; only 1: easy).	0.023687	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeuclid.ZEuclid.mod_wd	120	0	synth with cache (only 1: congruence).	0.015267	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Nat2Z.inj_pred	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: rewrite nat_compare_lt; only 1: rewrite Nat2N.inj_compare; only 1: intros; only 1: rewrite <- nat_N_Z; only 1: rewrite <- nat_N_Z; only 1: rewrite Nat2N.inj_pred; only 1: rewrite N2Z.inj_pred; only 1: easy; only 1: easy).	0.058385	9
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeuclid.ZEuclid.div_wd	120	0	synth with cache (only 1: congruence).	0.014246	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeuclid.ZEuclid.div_mod	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: unfold div; only 1: unfold modulo; only 1: rewrite Z.mul_assoc; only 1: rewrite Z.sgn_abs; only 1: apply Z.div_mod; only 1: destruct b; only 1: easy; only 1: easy; only 1: easy).	0.027653	10
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Nat2Z.inj_min	120	0.0.0.0.0.0	synth with cache (only 1: rewrite <- nat_N_Z; only 1: rewrite <- nat_N_Z; only 1: rewrite <- nat_N_Z; only 1: rewrite Nat2N.inj_min; only 1: rewrite N2Z.inj_min; only 1: easy).	0.022444	6
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeuclid.ZEuclid.mod_always_pos	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: unfold modulo; only 1: apply Z.mod_pos_bound; only 1: destruct b; only 1: compute; only 1: destruct H; only 1: easy; only 1: compute; only 1: trivial; only 1: compute; only 1: trivial).	0.021344	11
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Nat2Z.inj_max	120	0.0.0.0.0.0	synth with cache (only 1: rewrite <- nat_N_Z; only 1: rewrite <- nat_N_Z; only 1: rewrite <- nat_N_Z; only 1: rewrite Nat2N.inj_max; only 1: rewrite N2Z.inj_max; only 1: easy).	0.021810	6
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2Nat.id	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- Z_N_nat; only 1: rewrite <- nat_N_Z; only 1: rewrite N2Nat.id; only 1: rewrite Z2N.id; only 1: easy; only 1: assumption).	0.022017	7
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2Nat.inj	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2Nat.inj_iff	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: apply inj; only 1: auto; only 1: auto; only 1: intros; only 1: subst; only 1: easy).	0.019343	8
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2Nat.inj_0	120	0	synth with cache (only 1: reflexivity).	0.015613	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2Nat.inj_pos	120	0	synth with cache (only 1: reflexivity).	0.016477	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2Nat.inj_neg	120	0	synth with cache (only 1: reflexivity).	0.019483	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2Nat.inj_add	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- Z_N_nat; only 1: rewrite <- Z_N_nat; only 1: rewrite <- Z_N_nat; only 1: rewrite Z2N.inj_add; only 1: rewrite N2Nat.inj_add; only 1: easy; only 1: auto; only 1: auto).	0.027619	9
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2Nat.inj_mul	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- Z_N_nat; only 1: rewrite <- Z_N_nat; only 1: rewrite <- Z_N_nat; only 1: rewrite Z2N.inj_mul; only 1: rewrite N2Nat.inj_mul; only 1: easy; only 1: auto; only 1: auto).	0.024229	9
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2Nat.inj_succ	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- Z_N_nat; only 1: rewrite <- Z_N_nat; only 1: rewrite Z2N.inj_succ; only 1: rewrite N2Nat.inj_succ; only 1: easy; only 1: assumption).	0.021251	7
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2Nat.inj_sub	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- Z_N_nat; only 1: rewrite <- Z_N_nat; only 1: rewrite <- Z_N_nat; only 1: rewrite Z2N.inj_sub; only 1: rewrite N2Nat.inj_sub; only 1: easy; only 1: trivial).	0.027065	8
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2Nat.inj_pred	120	0.0.0.0.0	synth with cache (only 1: rewrite <- Z_N_nat; only 1: rewrite <- Z_N_nat; only 1: rewrite Z2N.inj_pred; only 1: rewrite N2Nat.inj_pred; only 1: easy).	0.022509	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2Nat.inj_compare	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite <- Nat2Z.inj_compare; only 1: rewrite id; only 1: rewrite id; only 1: easy; only 1: auto; only 1: auto).	0.022925	8
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2Nat.inj_le	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: unfold Z.le; only 1: rewrite nat_compare_le; only 1: rewrite inj_compare; only 1: easy; only 1: auto; only 1: auto).	0.025841	8
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2Nat.inj_lt	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: unfold Z.lt; only 1: rewrite nat_compare_lt; only 1: rewrite inj_compare; only 1: easy; only 1: auto; only 1: auto).	0.024441	8
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2Nat.inj_min	120	0.0.0.0.0.0	synth with cache (only 1: rewrite <- Z_N_nat; only 1: rewrite <- Z_N_nat; only 1: rewrite <- Z_N_nat; only 1: rewrite Z2N.inj_min; only 1: rewrite N2Nat.inj_min; only 1: easy).	0.035062	6
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2Nat.inj_max	120	0.0.0.0.0.0	synth with cache (only 1: rewrite <- Z_N_nat; only 1: rewrite <- Z_N_nat; only 1: rewrite <- Z_N_nat; only 1: rewrite Z2N.inj_max; only 1: rewrite N2Nat.inj_max; only 1: easy).	0.037787	6
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2Nat.abs_nat_spec	120	0.0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: easy; only 1: easy).	0.022505	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2Nat.abs_nat_nonneg	120	0.0.0.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: trivial; only 1: destruct 1; only 1: easy).	0.024337	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2Nat.id_abs	120	0.0.0	synth with cache (only 1: rewrite <- Zabs_N_nat; only 1: rewrite N_nat_Z; only 1: apply Zabs2N.id_abs).	0.020713	3
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2Nat.id	120	0.0.0.0.0	synth with cache (only 1: rewrite <- Zabs_N_nat; only 1: rewrite <- nat_N_Z; only 1: rewrite Zabs2N.id; only 1: rewrite Nat2N.id; only 1: easy).	0.022134	5
coq-tactician-stdlib.8.11.dev	Coq.Strings.Byte.nat.of_nat_None_iff	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2Nat.inj_0	120	0	synth with cache (only 1: reflexivity).	0.018103	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeuclid.ZEuclid.mod_bound_pos	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2Nat.inj_pos	120	0	synth with cache (only 1: reflexivity).	0.019189	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2Nat.inj_neg	120	0	synth with cache (only 1: reflexivity).	0.018491	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2Nat.inj_succ	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- Zabs_N_nat; only 1: rewrite <- Zabs_N_nat; only 1: rewrite Zabs2N.inj_succ; only 1: rewrite N2Nat.inj_succ; only 1: easy; only 1: assumption).	0.022704	7
coq-tactician-stdlib.8.11.dev	Coq.Strings.Byte.N.of_to_N	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct x; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	0.217732	257
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2Nat.inj_add	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- Zabs_N_nat; only 1: rewrite <- Zabs_N_nat; only 1: rewrite <- Zabs_N_nat; only 1: rewrite Zabs2N.inj_add; only 1: rewrite N2Nat.inj_add; only 1: easy; only 1: auto; only 1: auto).	0.026256	9
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2Nat.inj_mul	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul; only 1: destruct m; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul; only 1: simpl; only 1: apply Pos2Nat.inj_mul; only 1: simpl; only 1: apply Pos2Nat.inj_mul; only 1: destruct m; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul; only 1: simpl; only 1: apply Pos2Nat.inj_mul; only 1: simpl; only 1: apply Pos2Nat.inj_mul).	0.040637	22
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2Nat.inj_sub	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- Zabs_N_nat; only 1: rewrite <- Zabs_N_nat; only 1: rewrite <- Zabs_N_nat; only 1: rewrite Zabs2N.inj_sub; only 1: rewrite N2Nat.inj_sub; only 1: easy; only 1: easy).	0.026238	8
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2Nat.inj_pred	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- Zabs_N_nat; only 1: rewrite <- Zabs_N_nat; only 1: rewrite Zabs2N.inj_pred; only 1: rewrite N2Nat.inj_pred; only 1: easy; only 1: auto).	0.025543	7
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2Nat.inj_compare	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- Zabs_N_nat; only 1: rewrite <- Zabs_N_nat; only 1: rewrite <- N2Nat.inj_compare; only 1: rewrite Zabs2N.abs_N_nonneg; only 1: rewrite Zabs2N.abs_N_nonneg; only 1: apply Z2N.inj_compare; only 1: auto; only 1: auto; only 1: auto; only 1: auto).	0.026822	11
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2Nat.inj_le	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: unfold Z.le; only 1: rewrite nat_compare_le; only 1: rewrite inj_compare; only 1: easy; only 1: auto; only 1: auto).	0.027184	8
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2Nat.inj_lt	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: unfold Z.lt; only 1: rewrite nat_compare_lt; only 1: rewrite inj_compare; only 1: easy; only 1: auto; only 1: auto).	0.028673	8
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2Nat.inj_min	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- Zabs_N_nat; only 1: rewrite <- Zabs_N_nat; only 1: rewrite <- Zabs_N_nat; only 1: rewrite Zabs2N.inj_min; only 1: rewrite N2Nat.inj_min; only 1: easy; only 1: auto; only 1: auto).	0.031629	9
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2Nat.inj_max	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- Zabs_N_nat; only 1: rewrite <- Zabs_N_nat; only 1: rewrite <- Zabs_N_nat; only 1: rewrite Zabs2N.inj_max; only 1: rewrite N2Nat.inj_max; only 1: easy; only 1: auto; only 1: auto).	0.068386	9
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2Nat.inj_succ_abs	120	0.0.0.0.0	synth with cache (only 1: rewrite <- Zabs_N_nat; only 1: rewrite <- Zabs_N_nat; only 1: rewrite Zabs2N.inj_succ_abs; only 1: rewrite N2Nat.inj_succ; only 1: easy).	0.061379	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2Nat.inj_add_abs	120	0.0.0.0.0.0	synth with cache (only 1: rewrite <- Zabs_N_nat; only 1: rewrite <- Zabs_N_nat; only 1: rewrite <- Zabs_N_nat; only 1: rewrite Zabs2N.inj_add_abs; only 1: rewrite N2Nat.inj_add; only 1: easy).	0.025331	6
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2Nat.inj_mul_abs	120	0.0.0.0.0.0	synth with cache (only 1: rewrite <- Zabs_N_nat; only 1: rewrite <- Zabs_N_nat; only 1: rewrite <- Zabs_N_nat; only 1: rewrite Zabs2N.inj_mul_abs; only 1: rewrite N2Nat.inj_mul; only 1: easy).	0.025122	6
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.inj_neq	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply H; only 1: apply Nat2Z.inj; only 1: easy).	0.019051	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.inj_minus2	120	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite not_le_minus_0; only 1: auto with arith; only 1: auto with arith).	0.021303	4
coq-tactician-stdlib.8.11.dev	Coq.Strings.Byte.N.to_of_N	120
coq-tactician-stdlib.8.11.dev	Coq.Strings.Byte.N.to_of_N_iff	120	0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intros ?; only 1: apply to_of_N; only 1: assumption; only 1: intros ?; only 1: subst; only 1: apply of_to_N).	0.020956	7
coq-tactician-stdlib.8.11.dev	Coq.Strings.Byte.N.to_of_N_option_map	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: cbv[of_N]; only 1: destruct x; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	1.462673	769
coq-tactician-stdlib.8.11.dev	Coq.Strings.Byte.N.to_N_bounded	120
coq-tactician-stdlib.8.11.dev	Coq.Strings.Byte.N.of_N_None_iff	120
coq-tactician-stdlib.8.11.dev	Coq.Strings.Byte.N.to_N_via_nat	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct x; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	0.381432	257
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.inf_iff	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.isok_iff	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.isok_Ok	120	0	synth with cache (only 1: assumption).	0.009609	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.mem_spec	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.add_inf	120
coq-tactician-stdlib.8.11.dev	Coq.Strings.Byte.N.to_nat_via_N	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct x; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	0.352965	257
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.add_ok	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.add_spec	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.remove_inf	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.remove_ok	120
coq-tactician-stdlib.8.11.dev	Coq.Strings.Byte.N.of_N_via_nat	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.remove_spec	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.singleton_ok	120	0.0	synth with cache (only 1: unfold singleton; only 1: auto).	0.012375	2
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.singleton_spec	120	0.0.0.0.0.0.0	synth with cache (only 1: unfold singleton; only 1: split; only 1: intros; only 1: inv; only 1: auto; only 1: intros; only 1: auto).	0.028945	7
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.union_inf	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.union_ok	120
coq-tactician-stdlib.8.11.dev	Coq.Strings.Byte.N.of_nat_via_N	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Binary.ZBinary.TestOrder.test	120	0.0	synth with cache (only 1: intros; only 1: auto using BinInt.Z.le_antisymm).	0.014906	2
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.union_spec	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.inter_inf	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction2; only 1: apply Inf_lt with x; only 1: auto; only 1: auto; only 1: apply Hrec'; only 1: auto; only 1: auto; only 1: auto; only 1: apply Inf_lt with x'; only 1: auto; only 1: auto).	0.175477	11
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.inter_ok	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: rewrite <- isok_iff; only 1: rewrite <- isok_iff; only 1: rewrite <- isok_iff; only 1: revert s s'; only 1: induction2; only 1: constructors; only 1: auto; only 1: apply Inf_eq with x'; only 1: auto; only 1: apply inter_inf; only 1: auto; only 1: auto; only 1: apply Inf_eq with x; only 1: auto; only 1: auto; only 1: auto).	0.158820	16
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.inter_spec	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction2; only 1: intuition; only 1: inv; only 1: intuition; only 1: inv; only 1: rewrite InA_cons; only 1: rewrite InA_cons; only 1: rewrite InA_cons; only 1: rewrite Hrec; only 1: intuition; only 1: intuition; only 1: intuition; only 1: rewrite InA_cons; only 1: rewrite InA_cons; only 1: rewrite Hrec; only 1: intuition; only 1: inv; only 1: auto; only 1: auto; only 1: sort_inf_in; only 1: order; only 1: intuition; only 1: intuition; only 1: rewrite InA_cons; only 1: rewrite InA_cons; only 1: rewrite Hrec'; only 1: intuition; only 1: inv; only 1: auto; only 1: auto; only 1: sort_inf_in; only 1: order; only 1: intuition; only 1: intuition).	0.504759	34
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.diff_inf	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite <- isok_iff; only 1: rewrite <- isok_iff; only 1: revert s s'; only 1: induction2; only 1: apply Hrec; only 1: trivial; only 1: trivial; only 1: apply Inf_lt with x; only 1: auto; only 1: auto; only 1: apply Inf_lt with x'; only 1: auto; only 1: auto; only 1: apply Hrec'; only 1: auto; only 1: auto; only 1: auto; only 1: apply Inf_lt with x'; only 1: auto; only 1: auto).	0.204181	22
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.MoreInt.eqb_eq	120	0.0.0	synth with cache (only 1: rewrite i2z_eqb; only 1: rewrite Z.eqb_eq; only 1: easy).	0.019661	3
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.diff_ok	120	0.0.0.0.0	synth with cache (only 1: rewrite <- isok_iff; only 1: rewrite <- isok_iff; only 1: rewrite <- isok_iff; only 1: revert s s'; only 1: induction2).	0.082387	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.MoreInt.eqb_neq	120	0.0.0.0	synth with cache (only 1: rewrite <- eqb_eq; only 1: destruct eqb; only 1: intuition; only 1: intuition).	0.023927	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.MoreInt.ltb_lt	120	0.0.0	synth with cache (only 1: rewrite i2z_ltb; only 1: rewrite Z.ltb_lt; only 1: easy).	0.018889	3
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.MoreInt.ltb_nlt	120	0.0.0.0	synth with cache (only 1: rewrite <- ltb_lt; only 1: destruct ltb; only 1: intuition; only 1: intuition).	0.025871	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.MoreInt.leb_le	120	0.0.0	synth with cache (only 1: rewrite i2z_leb; only 1: rewrite Z.leb_le; only 1: easy).	0.017591	3
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.MoreInt.leb_nle	120	0.0.0.0	synth with cache (only 1: rewrite <- leb_le; only 1: destruct leb; only 1: intuition; only 1: intuition).	0.023473	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.MoreInt.norm_ei_correct	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.diff_spec	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction2; only 1: intuition; only 1: inv; only 1: intuition; only 1: inv; only 1: rewrite InA_cons; only 1: rewrite InA_cons; only 1: rewrite Hrec; only 1: intuition; only 1: sort_inf_in; only 1: order; only 1: intuition; only 1: intuition; only 1: rewrite InA_cons; only 1: rewrite InA_cons; only 1: rewrite InA_cons; only 1: rewrite Hrec; only 1: intuition; only 1: sort_inf_in; only 1: order; only 1: sort_inf_in; only 1: right; only 1: intuition; only 1: inv; only 1: auto; only 1: auto; only 1: intuition; only 1: intuition; only 1: rewrite InA_cons; only 1: rewrite InA_cons; only 1: rewrite Hrec'; only 1: intuition; only 1: inv; only 1: auto; only 1: auto; only 1: inv; only 1: auto; only 1: sort_inf_in; only 1: order; only 1: intuition; only 1: intuition).	0.574615	41
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.MoreInt.norm_ez_correct	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction e; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: simpl; only 1: induction e; only 1: simpl; only 1: i2z; only 1: trivial; only 1: simpl; only 1: i2z; only 1: auto; only 1: simpl; only 1: i2z; only 1: auto; only 1: simpl; only 1: i2z; only 1: auto; only 1: simpl; only 1: i2z; only 1: congruence; only 1: simpl; only 1: i2z; only 1: congruence; only 1: simpl; only 1: i2z; only 1: congruence; only 1: simpl; only 1: i2z; only 1: congruence; only 1: simpl; only 1: i2z; only 1: congruence; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.207961	44
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.MoreInt.norm_ep_correct	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction e; only 1: simpl; only 1: rewrite norm_ez_correct; only 1: rewrite norm_ez_correct; only 1: intuition; only 1: simpl; only 1: rewrite norm_ez_correct; only 1: rewrite norm_ez_correct; only 1: intuition; only 1: simpl; only 1: rewrite norm_ez_correct; only 1: rewrite norm_ez_correct; only 1: intuition; only 1: simpl; only 1: rewrite norm_ez_correct; only 1: rewrite norm_ez_correct; only 1: intuition; only 1: simpl; only 1: rewrite norm_ez_correct; only 1: rewrite norm_ez_correct; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).	0.131841	33
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.MoreInt.norm_ep_correct2	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.Z_as_Int.gt_le_dec	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.Z_as_Int.ge_lt_dec	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.Z_as_Int.i2z_eq	120	0	synth with cache (only 1: trivial).	0.026596	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.Z_as_Int.i2z_0	120	0	synth with cache (only 1: reflexivity).	0.028385	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.Z_as_Int.i2z_1	120	0	synth with cache (only 1: reflexivity).	0.016690	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.Z_as_Int.i2z_2	120	0	synth with cache (only 1: reflexivity).	0.014985	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.Z_as_Int.i2z_3	120	0	synth with cache (only 1: reflexivity).	0.014550	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.Z_as_Int.i2z_add	120	0	synth with cache (only 1: reflexivity).	0.014239	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.Z_as_Int.i2z_opp	120	0	synth with cache (only 1: reflexivity).	0.013313	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.Z_as_Int.i2z_sub	120	0	synth with cache (only 1: reflexivity).	0.012612	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.Z_as_Int.i2z_mul	120	0	synth with cache (only 1: reflexivity).	0.014402	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.Z_as_Int.i2z_max	120	0	synth with cache (only 1: reflexivity).	0.015308	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.Z_as_Int.i2z_eqb	120	0	synth with cache (only 1: reflexivity).	0.016431	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.Z_as_Int.i2z_leb	120	0	synth with cache (only 1: reflexivity).	0.013389	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.Z_as_Int.i2z_ltb	120	0	synth with cache (only 1: reflexivity).	0.015707	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.equal_spec	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.subset_spec	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.empty_ok	120	0	synth with cache (only 1: constructors).	0.009169	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.empty_spec	120	0.0.0.0	synth with cache (only 1: unfold Empty; only 1: unfold empty; only 1: intuition; only 1: inv).	0.043724	4
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.is_empty_spec	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.elements_spec1	120	0	synth with cache (only 1: intuition).	0.012885	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.elements_spec2	120	0.0.0	synth with cache (only 1: intros ?; only 1: rewrite <- isok_iff; only 1: auto).	0.015015	3
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.elements_spec2w	120	0.0.0	synth with cache (only 1: intros ?; only 1: rewrite <- isok_iff; only 1: auto).	0.016156	3
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.min_elt_spec1	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.min_elt_spec2	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.min_elt_spec3	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.max_elt_spec1	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.max_elt_spec2	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.max_elt_spec3	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.choose_spec3	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.fold_spec	120	0	synth with cache (only 1: reflexivity).	0.012961	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.cardinal_spec	120	0	synth with cache (only 1: auto).	0.012102	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.filter_inf	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.filter_ok	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.filter_spec	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.for_all_spec	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.exists_spec	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.partition_inf1	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.partition_inf2	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.partition_ok1	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.partition_ok2	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zeven_equiv	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: rewrite <- Z.even_spec; only 1: destruct z; only 1: simpl; only 1: intuition; only 1: destruct p; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: destruct p; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).	0.039925	18
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zodd_equiv	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: rewrite <- Z.odd_spec; only 1: destruct z; only 1: simpl; only 1: intuition; only 1: destruct p; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: destruct p; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).	0.032695	18
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.partition_spec1	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zeven_bool_iff	120	0.0.0	synth with cache (only 1: rewrite Z.even_spec; only 1: rewrite Zeven_equiv; only 1: easy).	0.018707	3
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zodd_bool_iff	120	0.0.0	synth with cache (only 1: rewrite Z.odd_spec; only 1: rewrite Zodd_equiv; only 1: easy).	0.019291	3
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zodd_even_bool	120	0.0	synth with cache (only 1: symmetry; only 1: apply Z.negb_even).	0.013046	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zeven_odd_bool	120	0.0	synth with cache (only 1: symmetry; only 1: apply Z.negb_odd).	0.012264	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zeven_odd_dec	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: simpl; only 1: left; only 1: auto; only 1: destruct p; only 1: simpl; only 1: right; only 1: auto; only 1: simpl; only 1: left; only 1: auto; only 1: simpl; only 1: right; only 1: auto; only 1: destruct p; only 1: simpl; only 1: right; only 1: auto; only 1: simpl; only 1: left; only 1: auto; only 1: simpl; only 1: right; only 1: auto).	0.026624	24
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zeven_dec	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: simpl; only 1: left; only 1: auto; only 1: destruct p; only 1: simpl; only 1: right; only 1: easy; only 1: simpl; only 1: left; only 1: auto; only 1: simpl; only 1: right; only 1: auto; only 1: destruct p; only 1: simpl; only 1: right; only 1: easy; only 1: simpl; only 1: left; only 1: auto; only 1: simpl; only 1: right; only 1: auto).	0.027780	24
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.partition_spec2	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.In_compat	120	0.0.0.0.0.0.0.0	synth with cache (only 1: red; only 1: red; only 1: red; only 1: red; only 1: intros; only 1: rewrite H; only 1: rewrite H0; only 1: auto).	0.035669	8
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zodd_dec	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: simpl; only 1: right; only 1: auto; only 1: destruct p; only 1: simpl; only 1: left; only 1: auto; only 1: simpl; only 1: right; only 1: easy; only 1: simpl; only 1: left; only 1: auto; only 1: destruct p; only 1: simpl; only 1: left; only 1: auto; only 1: simpl; only 1: right; only 1: easy; only 1: simpl; only 1: left; only 1: auto).	0.028132	24
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zeven_not_Zodd	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zodd_not_Zeven	120	0.0.0.0.0	synth with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd; only 1: destruct BinIntDef.Z.odd; only 1: intuition; only 1: intuition).	0.029858	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zeven_Sn	120	0.0.0	synth with cache (only 1: boolify_even_odd; only 1: rewrite Z.even_succ; only 1: easy).	0.024606	3
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zodd_Sn	120	0.0.0	synth with cache (only 1: boolify_even_odd; only 1: rewrite Z.odd_succ; only 1: easy).	0.024381	3
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcompare.Zcompare_Gt_trans	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.lt_strorder	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zeven_pred	120	0.0.0	synth with cache (only 1: boolify_even_odd; only 1: rewrite Z.even_pred; only 1: easy).	0.025991	3
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcompare.Zcompare_opp	120	0.0	synth with cache (only 1: symmetry; only 1: apply Z.compare_opp).	0.015329	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcompare.Zcompare_Gt_spec	120	0.0.0.0.0.0.0	synth with cache (only 1: rewrite Z.compare_sub; only 1: unfold BinIntDef.Z.sub; only 1: destruct BinIntDef.Z.add; only 1: discriminate; only 1: exists p; only 1: easy; only 1: discriminate).	0.024647	7
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zodd_pred	120	0.0.0	synth with cache (only 1: boolify_even_odd; only 1: rewrite Z.odd_pred; only 1: easy).	0.029497	3
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcompare.Zcompare_plus_compat	120	0	synth with cache (only 1: apply Z.add_compare_mono_l).	0.012606	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.lt_compat	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: split; only 1: intros ?; only 1: destruct H1; only 1: destruct H1; only 1: destruct H1; only 1: destruct H2; only 1: destruct H3; only 1: destruct H4; only 1: exists x1,x2; only 1: split; only 1: trivial; only 1: split; only 1: trivial; only 1: split; only 1: transitivity x; only 1: symmetry; only 1: auto; only 1: auto; only 1: split; only 1: transitivity x0; only 1: symmetry; only 1: auto; only 1: auto; only 1: auto; only 1: intros ?; only 1: destruct H1; only 1: destruct H1; only 1: destruct H1; only 1: destruct H2; only 1: destruct H3; only 1: destruct H4; only 1: exists x1,x2; only 1: split; only 1: trivial; only 1: split; only 1: trivial; only 1: split; only 1: transitivity y; only 1: auto; only 1: auto; only 1: split; only 1: transitivity y0; only 1: auto; only 1: auto; only 1: auto).	0.085977	51
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zeven_div2	120	0.0.0.0.0.0.0.0	synth with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd; only 1: rewrite Bool.negb_true_iff; only 1: intros ?; only 1: rewrite Zdiv2_odd_eqn  at 1; only 1: rewrite H; only 1: rewrite Z.add_0_r; only 1: easy).	0.034536	8
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcompare.Zplus_compare_compat	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcompare.Zcompare_succ_Gt	120	0.0	synth with cache (only 1: apply Z.lt_gt; only 1: apply Z.lt_succ_diag_r).	0.013794	2
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.compare_spec_aux	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zodd_div2	120	0.0.0.0.0	synth with cache (only 1: boolify_even_odd; only 1: intros ?; only 1: destruct n as [| [| | ]| [| | ]]; simpl; try easy; only 1: rewrite Pos.pred_double_succ; only 1: easy).	0.037979	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcompare.Zcompare_Gt_not_Lt	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcompare.Zcompare_succ_compat	120	0.0.0	synth with cache (only 1: rewrite <- Z.add_1_l; only 1: rewrite <- Z.add_1_l; only 1: apply Z.add_compare_mono_l).	0.015671	3
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zquot2_odd_eqn	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: destruct p; only 1: easy; only 1: easy; only 1: easy; only 1: destruct p; only 1: easy; only 1: easy; only 1: easy).	0.029137	10
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcompare.Zcompare_mult_compat	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: destruct n; only 1: intros ?; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: intros ?; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply Pos.mul_compare_mono_l; only 1: simpl; only 1: trivial; only 1: intros ?; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite Pos.mul_compare_mono_l; only 1: easy).	0.035273	28
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zeven_quot2	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: apply Zeven_bool_iff in H; only 1: rewrite Zquot2_odd_eqn  at 1; only 1: rewrite Zodd_even_bool; only 1: rewrite H; only 1: rewrite Z.add_0_r; only 1: easy).	0.021782	7
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcompare.Zmult_compare_compat_l	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct p; only 1: discriminate; only 1: symmetry; only 1: apply Zcompare_mult_compat; only 1: discriminate).	0.016384	6
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zodd_quot2	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply Zodd_bool_iff in H0; only 1: rewrite Zquot2_odd_eqn  at 1; only 1: rewrite H0; only 1: f_equal; only 1: destruct n; only 1: destruct H; only 1: easy; only 1: easy; only 1: destruct H; only 1: easy).	0.111446	12
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zodd_quot2_neg	120	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply Zodd_bool_iff in H0; only 1: rewrite Zquot2_odd_eqn  at 1; only 1: rewrite H0; only 1: unfold BinIntDef.Z.sub; only 1: f_equal; only 1: destruct n; only 1: destruct H; only 1: easy; only 1: destruct H; only 1: easy; only 1: easy).	0.031992	13
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zquot2_opp	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: destruct p; only 1: easy; only 1: easy; only 1: easy; only 1: destruct p; only 1: easy; only 1: easy; only 1: easy).	0.023459	10
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zquot2_quot	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Z_modulo_2	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zsplit2	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zeven_ex	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zodd_ex	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zeven_2p	120	0.0.0.0	synth with cache (only 1: destruct p; only 1: easy; only 1: easy; only 1: easy).	0.040406	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zodd_2p_plus_1	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct p; only 1: easy; only 1: destruct p; only 1: easy; only 1: easy; only 1: easy; only 1: destruct p; only 1: easy; only 1: easy; only 1: easy).	0.030612	10
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zeven_plus_Zodd	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd; only 1: rewrite Bool.negb_true_iff; only 1: intros ?; only 1: intros ?; only 1: rewrite Z.odd_add; only 1: rewrite H; only 1: rewrite H0; only 1: easy).	0.046538	9
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.compare_spec	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zeven_plus_Zeven	120	0.0.0.0.0.0.0	synth with cache (only 1: boolify_even_odd; only 1: intros ?; only 1: intros ?; only 1: rewrite Z.even_add; only 1: rewrite H; only 1: rewrite H0; only 1: easy).	0.043195	7
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeWithLeibniz.eq_leibniz_list	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zodd_plus_Zeven	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Z.add_comm; only 1: apply Zeven_plus_Zodd; only 1: easy; only 1: easy).	0.018987	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zodd_plus_Zodd	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_even; only 1: rewrite <- Z.negb_even; only 1: rewrite Bool.negb_true_iff; only 1: rewrite Bool.negb_true_iff; only 1: intros ?; only 1: intros ?; only 1: rewrite Z.even_add; only 1: rewrite H; only 1: rewrite H0; only 1: easy).	0.073994	11
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeWithLeibniz.eq_leibniz	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zeven_mult_Zeven_l	120	0.0.0.0.0	synth with cache (only 1: boolify_even_odd; only 1: intros ?; only 1: rewrite Z.even_mul; only 1: rewrite H; only 1: easy).	0.029337	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zeven_mult_Zeven_r	120	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Z.mul_comm; only 1: apply Zeven_mult_Zeven_l; only 1: easy).	0.017850	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zodd_mult_Zodd	120	0.0.0.0.0.0.0	synth with cache (only 1: boolify_even_odd; only 1: intros ?; only 1: intros ?; only 1: rewrite Z.odd_mul; only 1: rewrite H; only 1: rewrite H0; only 1: easy).	0.041249	7
coq-tactician-stdlib.8.11.dev	Coq.micromega.Env.S.jump_add	120	0.0.0	synth with cache (only 1: unfold jump; only 1: f_equal; only 1: apply Pos.add_assoc).	0.017287	3
coq-tactician-stdlib.8.11.dev	Coq.micromega.Env.S.jump_simpl	120	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct p; only 1: unfold tail; only 1: rewrite <- jump_add; only 1: rewrite <- jump_add; only 1: f_equal; only 1: rewrite Pos.add_diag; only 1: easy; only 1: rewrite <- jump_add; only 1: f_equal; only 1: rewrite Pos.add_diag; only 1: easy; only 1: unfold tail; only 1: f_equal).	0.040393	13
coq-tactician-stdlib.8.11.dev	Coq.micromega.Env.S.jump_tl	120	0.0.0.0.0	synth with cache (only 1: unfold tail; only 1: rewrite <- jump_add; only 1: rewrite <- jump_add; only 1: f_equal; only 1: apply Pos.add_comm).	0.023807	5
coq-tactician-stdlib.8.11.dev	Coq.micromega.Env.S.jump_succ	120	0.0.0.0	synth with cache (only 1: rewrite <- jump_add; only 1: f_equal; only 1: symmetry; only 1: apply Pos.add_1_l).	0.077110	4
coq-tactician-stdlib.8.11.dev	Coq.micromega.Env.S.jump_pred_double	120	0.0.0.0.0.0.0.0	synth with cache (only 1: unfold tail; only 1: rewrite <- jump_add; only 1: rewrite <- jump_add; only 1: f_equal; only 1: rewrite Pos.add_1_r; only 1: rewrite Pos.succ_pred_double; only 1: rewrite Pos.add_diag; only 1: easy).	0.025978	8
coq-tactician-stdlib.8.11.dev	Coq.micromega.Env.S.nth_spec	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold hd; only 1: unfold nth; only 1: unfold tail; only 1: unfold jump; only 1: destruct p; only 1: f_equal; only 1: rewrite Pos.add_diag; only 1: easy; only 1: f_equal; only 1: rewrite Pos.add_diag; only 1: easy; only 1: f_equal).	0.030832	12
coq-tactician-stdlib.8.11.dev	Coq.micromega.Env.S.nth_jump	120	0.0.0.0.0.0	synth with cache (only 1: unfold hd; only 1: unfold nth; only 1: unfold tail; only 1: unfold jump; only 1: f_equal; only 1: apply Pos.add_comm).	0.021121	6
coq-tactician-stdlib.8.11.dev	Coq.micromega.Env.S.nth_pred_double	120	0.0.0.0.0.0.0.0	synth with cache (only 1: unfold nth; only 1: unfold tail; only 1: unfold jump; only 1: f_equal; only 1: rewrite Pos.add_1_r; only 1: rewrite Pos.succ_pred_double; only 1: rewrite Pos.add_diag; only 1: easy).	0.024280	8
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qplus_inj_l	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_assoc	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: red; only 1: simpl; only 1: rewrite Pos.mul_assoc; only 1: ring).	0.043532	5
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_0_l	120	0.0.0	synth with cache (only 1: intros; only 1: compute; only 1: reflexivity).	0.022484	3
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_0_r	120	0.0.0.0	synth with cache (only 1: intros; only 1: red; only 1: simpl; only 1: ring).	0.032687	4
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_1_l	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: red; only 1: simpl; only 1: destruct Qnum; only 1: auto; only 1: auto; only 1: auto).	0.027053	7
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_1_r	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_comm	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: red; only 1: simpl; only 1: rewrite Pos.mul_comm; only 1: ring).	0.036728	5
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_plus_distr_r	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct x; only 1: intros ?; only 1: destruct y; only 1: intros ?; only 1: destruct z; only 1: unfold Qeq; only 1: unfold Qmult; only 1: unfold Qplus; only 1: simpl; only 1: simpl_mult; only 1: ring).	0.108525	12
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_plus_distr_l	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct x; only 1: intros ?; only 1: destruct y; only 1: intros ?; only 1: destruct z; only 1: unfold Qeq; only 1: unfold Qmult; only 1: unfold Qplus; only 1: simpl; only 1: simpl_mult; only 1: ring).	0.103784	12
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_integral	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct x; only 1: intros ?; only 1: destruct y; only 1: unfold Qeq; only 1: unfold Qmult; only 1: simpl; only 1: rewrite <- Z.mul_eq_0; only 1: rewrite Z.mul_1_r; only 1: rewrite Z.mul_1_r; only 1: rewrite Z.mul_1_r; only 1: easy).	0.040933	12
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_integral_l	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct x; only 1: intros ?; only 1: destruct y; only 1: unfold Qeq; only 1: unfold Qmult; only 1: simpl; only 1: rewrite Z.mul_1_r; only 1: rewrite Z.mul_1_r; only 1: rewrite Z.mul_1_r; only 1: rewrite Z.mul_eq_0; only 1: intuition).	0.056477	12
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.inject_Z_plus	120	0.0.0.0.0	synth with cache (only 1: unfold Qplus; only 1: unfold inject_Z; only 1: simpl; only 1: f_equal; only 1: ring).	0.033736	5
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.inject_Z_mult	120	0	synth with cache (only 1: reflexivity).	0.026687	1
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.inject_Z_opp	120	0	synth with cache (only 1: reflexivity).	0.030302	1
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qinv_involutive	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct q; only 1: destruct Qnum0; only 1: red; only 1: simpl; only 1: trivial; only 1: red; only 1: simpl; only 1: reflexivity; only 1: red; only 1: simpl; only 1: reflexivity).	0.036346	12
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_inv_r	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct x; only 1: unfold Qeq; only 1: unfold Qmult; only 1: case Qnum0; only 1: simpl; only 1: intros; only 1: simpl_mult; only 1: elim H; only 1: auto; only 1: simpl; only 1: intros; only 1: simpl_mult; only 1: ring; only 1: simpl; only 1: intros; only 1: simpl_mult; only 1: ring).	0.075690	18
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.In_compat	120	0.0.0.0.0.0.0.0	synth with cache (only 1: red; only 1: red; only 1: red; only 1: red; only 1: intros; only 1: subst; only 1: rewrite H; only 1: auto).	0.029598	8
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qinv_mult_distr	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct p; only 1: intros ?; only 1: destruct q; only 1: unfold Qeq; only 1: unfold Qinv; only 1: unfold Qmult; only 1: simpl; only 1: destruct Qnum0; only 1: simpl; only 1: auto; only 1: simpl; only 1: destruct Qnum1; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: destruct Qnum1; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.096630	27
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.mem_spec	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.isok_iff	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qdiv_mult_l	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Qdiv; only 1: rewrite <- Qmult_assoc; only 1: rewrite Qmult_inv_r; only 1: apply Qmult_1_r; only 1: auto).	0.034407	6
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.isok_Ok	120	0.0.0	synth with cache (only 1: intros; only 1: apply <- isok_iff; only 1: auto).	0.013238	3
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_div_r	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qinv_plus_distr	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Qeq; only 1: simpl; only 1: rewrite Pos2Z.inj_mul; only 1: ring).	0.062154	5
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qinv_minus_distr	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Qeq; only 1: simpl; only 1: rewrite Pos2Z.inj_mul; only 1: ring).	0.046250	5
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.add_spec	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.add_ok	120	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction s; only 1: simpl; only 1: intuition; only 1: inv; only 1: simpl; only 1: destruct X.eq_dec; only 1: auto; only 1: constructors; only 1: intros ?; only 1: rewrite add_spec in *; only 1: intuition; only 1: intuition; only 1: auto).	0.048063	13
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_inj_r	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.remove_spec	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.remove_ok	120	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction s; only 1: simpl; only 1: auto; only 1: simpl; only 1: destruct X.eq_dec; only 1: inv; only 1: auto; only 1: inv; only 1: constructors; only 1: rewrite remove_spec; only 1: intuition; only 1: intuition; only 1: auto).	0.054069	13
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.singleton_ok	120	0.0.0.0	synth with cache (only 1: unfold singleton; only 1: constructors; only 1: intros ?; only 1: inv).	0.014314	4
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.singleton_spec	120	0.0.0.0.0.0.0.0	synth with cache (only 1: unfold singleton; only 1: split; only 1: intros; only 1: inv; only 1: auto; only 1: intros; only 1: left; only 1: auto).	0.025540	8
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.empty_ok	120	0.0	synth with cache (only 1: unfold empty; only 1: constructors).	0.010850	2
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.empty_spec	120	0.0.0.0.0	synth with cache (only 1: unfold Empty; only 1: unfold empty; only 1: red; only 1: intros; only 1: inv).	0.014666	5
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.is_empty_spec	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.elements_spec1	120	0.0	synth with cache (only 1: unfold elements; only 1: intuition).	0.011765	2
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.elements_spec2w	120	0.0	synth with cache (only 1: unfold elements; only 1: auto).	0.010295	2
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.fold_spec	120	0	synth with cache (only 1: reflexivity).	0.011661	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.union_ok	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.union_spec	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.inter_ok	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.inter_spec	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.diff_ok	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold diff; only 1: intros ?; only 1: intros ?; only 1: revert s; only 1: induction s'; only 1: simpl; only 1: auto; only 1: simpl; only 1: unfold flip; only 1: intros; only 1: inv; only 1: auto with *).	0.033362	12
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.diff_spec	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold diff; only 1: intros ?; only 1: intros ?; only 1: revert s; only 1: induction s'; only 1: simpl; only 1: intuition; only 1: inv; only 1: simpl; only 1: unfold flip; only 1: intros; only 1: inv; only 1: rewrite IHs'; only 1: rewrite remove_spec; only 1: rewrite InA_cons; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.132545	19
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.subset_spec	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.equal_spec	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.choose_spec1	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.choose_spec2	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.cardinal_spec	120	0	synth with cache (only 1: auto).	0.012422	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.filter_spec'	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.filter_spec	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.filter_ok	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction s; only 1: simpl; only 1: auto; only 1: simpl; only 1: inv; only 1: case f; only 1: constructors; only 1: contradict H0; only 1: eapply filter_spec'; only 1: eauto; only 1: auto; only 1: auto).	0.034901	12
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.for_all_spec	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.exists_spec	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_def.Zpower_theory	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.empty_1	120	0.0.0.0.0.0	synth with cache (only 1: unfold Empty; only 1: unfold empty; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: inversion H).	0.016524	6
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.empty_sorted	120	0.0	synth with cache (only 1: unfold empty; only 1: auto).	0.010294	2
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.is_empty_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.is_empty_2	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: case m; only 1: auto; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: inversion H).	0.017424	7
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.mem_1	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_spec1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.mem_2	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.find_2	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.find_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.add_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.add_2	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.add_3	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.add_Inf	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_spec2	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_ok1'	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_ok2'	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_ok1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.add_sorted	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.remove_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.remove_2	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.remove_3	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.remove_Inf	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_ok2	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.remove_sorted	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.elements_1	120	0	synth with cache (only 1: auto).	0.012469	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.elements_2	120	0	synth with cache (only 1: auto).	0.013483	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.elements_3	120	0	synth with cache (only 1: auto).	0.011592	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.elements_3w	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply Sort_NoDupA; only 1: apply elements_3; only 1: auto).	0.015357	4
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.fold_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.equal_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.equal_2	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.ltb_tree_iff	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.gtb_tree_iff	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.isok_iff	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.isok_Ok	120	0.0.0	synth with cache (only 1: intros; only 1: apply <- isok_iff; only 1: auto).	0.014436	3
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.In_1	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.In_compat	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: apply @proper_sym_impl_iff_2; only 1: auto; only 1: auto; only 1: red; only 1: red; only 1: red; only 1: red; only 1: intros; only 1: subst; only 1: apply In_1 with x; only 1: auto; only 1: auto).	0.018616	12
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.In_node_iff	120	0	synth with cache (only 1: intuition_in).	0.058835	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.In_leaf_iff	120	0	synth with cache (only 1: intuition_in).	0.024125	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.lt_leaf	120	0.0	synth with cache (only 1: red; only 1: inversion 1).	0.015830	2
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.gt_leaf	120	0.0	synth with cache (only 1: red; only 1: inversion 1).	0.014637	2
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.equal_cons	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt2.map_1	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: induction m; only 1: inversion 1; only 1: destruct a; only 1: simpl; only 1: inversion_clear 1; only 1: constructor 1; only 1: unfold eqke in *; only 1: simpl in *; only 1: intuition congruence; only 1: unfold MapsTo in *; only 1: auto).	0.057302	15
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.lt_tree_node	120	0.0.0	synth with cache (only 1: unfold lt_tree; only 1: intuition_in; only 1: order).	0.044893	3
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.gt_tree_node	120	0.0.0	synth with cache (only 1: unfold gt_tree; only 1: intuition_in; only 1: order).	0.044906	3
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.lt_tree_not_in	120	0.0.0	synth with cache (only 1: intros; only 1: intros ?; only 1: order).	0.013431	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt2.map_2	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: induction m; only 1: simpl; only 1: intros ?; only 1: destruct H; only 1: inversion H; only 1: simpl; only 1: destruct a; only 1: intros ?; only 1: inversion H; only 1: clear H; only 1: inversion H0; only 1: subst; only 1: exists e; only 1: constructor; only 1: unfold eqke in *; only 1: simpl in *; only 1: intuition; only 1: subst; only 1: destruct IHm; only 1: exists x0; only 1: auto; only 1: exists x1; only 1: constructor 2; only 1: auto).	0.100584	27
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.lt_tree_trans	120	0	synth with cache (only 1: eauto).	0.013216	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.gt_tree_not_in	120	0.0.0	synth with cache (only 1: intros; only 1: intros ?; only 1: order).	0.015381	3
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.gt_tree_trans	120	0	synth with cache (only 1: eauto).	0.013277	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt2.map_lelistA	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.lt_tree_compat	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: apply @proper_sym_impl_iff_2; only 1: auto; only 1: auto; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: subst; only 1: setoid_rewrite  <- H; only 1: auto).	0.030641	15
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt2.map_sorted	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.gt_tree_compat	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: apply @proper_sym_impl_iff_2; only 1: auto; only 1: auto; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: subst; only 1: setoid_rewrite  <- H; only 1: auto).	0.040823	15
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.empty_spec	120	0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: inversion H).	0.012876	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt2.mapi_1	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: induction m; only 1: inversion 1; only 1: destruct a; only 1: simpl; only 1: inversion_clear 1; only 1: exists t0; only 1: destruct H0; only 1: simpl in *; only 1: split; only 1: auto with ordered_type; only 1: constructor 1; only 1: unfold eqke in *; only 1: simpl in *; only 1: intuition congruence; only 1: destruct IHm; only 1: auto; only 1: exists x0; only 1: intuition).	0.113016	22
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.empty_ok	120	0	synth with cache (only 1: auto).	0.010040	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.is_empty_spec	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt2.mapi_2	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: induction m; only 1: simpl; only 1: intros ?; only 1: destruct H; only 1: inversion H; only 1: simpl; only 1: destruct a; only 1: intros ?; only 1: inversion H; only 1: clear H; only 1: inversion H0; only 1: subst; only 1: exists e; only 1: constructor; only 1: unfold eqke in *; only 1: simpl in *; only 1: intuition; only 1: subst; only 1: destruct IHm; only 1: exists x0; only 1: auto; only 1: exists x1; only 1: constructor 2; only 1: auto).	0.087727	27
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt2.mapi_lelistA	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt2.mapi_sorted	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.mem_spec	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt3.map2_alt_equiv	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.min_elt_spec1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt3.combine_lelistA	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.min_elt_spec2	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.min_elt_spec3	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.max_elt_spec1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt3.combine_sorted	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt3.map2_sorted	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.max_elt_spec2	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.max_elt_spec3	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.choose_spec1	120	0	synth with cache (only 1: exact min_elt_spec1).	0.011082	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.choose_spec2	120	0	synth with cache (only 1: exact min_elt_spec3).	0.011526	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.choose_spec3	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.elements_spec1'	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.elements_spec1	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.elements_spec2'	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.elements_spec2	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold elements; only 1: apply elements_spec2'; only 1: auto; only 1: auto; only 1: intros; only 1: inversion H0).	0.021194	7
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.elements_spec2w	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.elements_aux_cardinal	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt3.combine_1	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.elements_cardinal	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.elements_app	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.elements_node	120	0.0.0.0.0.0.0.0	synth with cache (only 1: unfold elements; only 1: simpl; only 1: rewrite elements_app; only 1: rewrite elements_app; only 1: rewrite elements_app; only 1: rewrite app_nil_r; only 1: rewrite app_nil_r; only 1: easy).	0.044282	8
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.rev_elements_app	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.rev_elements_node	120	0.0.0.0.0.0.0.0	synth with cache (only 1: unfold rev_elements; only 1: simpl; only 1: rewrite rev_elements_app; only 1: rewrite rev_elements_app; only 1: rewrite rev_elements_app; only 1: rewrite app_nil_r; only 1: rewrite app_nil_r; only 1: easy).	0.026269	8
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.rev_elements_rev	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction s; only 1: trivial; only 1: rewrite elements_node; only 1: rewrite rev_elements_node; only 1: rewrite IHs1; only 1: rewrite IHs2; only 1: rewrite rev_app_distr; only 1: simpl; only 1: rewrite app_assoc_reverse; only 1: easy).	0.033277	10
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.sorted_app_inv	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt3.map2_0	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.elements_sort_ok	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt3.map2_1	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.for_all_spec	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: unfold For_all; only 1: induction s; only 1: simpl; only 1: split; only 1: intros; only 1: inv; only 1: intros; only 1: auto; only 1: simpl; only 1: rewrite <- andb_lazy_alt; only 1: rewrite <- andb_lazy_alt; only 1: rewrite andb_true_iff; only 1: rewrite andb_true_iff; only 1: rewrite IHs1; only 1: rewrite IHs2; only 1: clear IHs1 IHs2; only 1: intuition_in; only 1: eauto).	0.188409	19
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.eq_dec	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.pos_sub_spec	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.pos_sub_discr	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.pos_sub_diag	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.pos_sub_lt	120	0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite pos_sub_spec; only 1: rewrite H; only 1: easy).	0.022003	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.pos_sub_gt	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.pos_sub_opp	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.Private_BootStrap.add_0_r	120	0.0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: easy; only 1: easy).	0.012881	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.Private_BootStrap.mul_0_r	120	0.0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: easy; only 1: easy).	0.013619	4
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.exists_spec	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: unfold Exists; only 1: induction s; only 1: simpl; only 1: split; only 1: discriminate; only 1: intros ?; only 1: destruct H0; only 1: destruct H0; only 1: clear H1; only 1: inv; only 1: simpl; only 1: rewrite <- orb_lazy_alt; only 1: rewrite <- orb_lazy_alt; only 1: rewrite orb_true_iff; only 1: rewrite orb_true_iff; only 1: rewrite IHs1; only 1: rewrite IHs2; only 1: clear IHs1 IHs2; only 1: split; only 1: intros ?; only 1: destruct H0; only 1: destruct H0; only 1: exists t0; only 1: auto; only 1: destruct H0; only 1: destruct H0; only 1: exists x; only 1: auto; only 1: destruct H0; only 1: destruct H0; only 1: exists x; only 1: auto; only 1: intros ?; only 1: destruct H0; only 1: destruct H0; only 1: inv; only 1: left; only 1: left; only 1: eauto; only 1: left; only 1: right; only 1: exists x; only 1: eauto; only 1: right; only 1: exists x; only 1: eauto).	0.219706	47
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.Private_BootStrap.mul_1_l	120	0.0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: easy; only 1: easy).	0.012784	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.Private_BootStrap.add_comm	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.Private_BootStrap.opp_add_distr	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial using pos_sub_opp; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial using pos_sub_opp; only 1: simpl; only 1: trivial using pos_sub_opp; only 1: destruct m; only 1: simpl; only 1: trivial using pos_sub_opp; only 1: simpl; only 1: trivial using pos_sub_opp; only 1: simpl; only 1: trivial).	0.029009	22
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.Private_BootStrap.opp_inj	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: destruct m; only 1: simpl; only 1: intros ?; only 1: easy; only 1: simpl; only 1: intros ?; only 1: destr_eq H; only 1: simpl; only 1: intros ?; only 1: destr_eq H; only 1: destruct m; only 1: simpl; only 1: intros ?; only 1: destr_eq H; only 1: simpl; only 1: intros ?; only 1: destr_eq H; only 1: f_equal; only 1: easy; only 1: simpl; only 1: intros ?; only 1: destr_eq H; only 1: destruct m; only 1: simpl; only 1: intros ?; only 1: destr_eq H; only 1: simpl; only 1: intros ?; only 1: destr_eq H; only 1: simpl; only 1: intros ?; only 1: destr_eq H; only 1: f_equal; only 1: easy).	0.046629	35
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.fold_spec'	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: revert i acc; only 1: induction s; only 1: simpl; only 1: intros; only 1: auto; only 1: simpl; only 1: intros; only 1: rewrite IHs1; only 1: simpl; only 1: unfold flip at 2; only 1: apply IHs2).	0.037798	11
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.fold_spec	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: revert i; only 1: unfold elements; only 1: induction s; only 1: simpl; only 1: intros; only 1: auto; only 1: simpl; only 1: intros; only 1: rewrite @fold_spec'; only 1: rewrite IHs2; only 1: simpl; only 1: auto).	0.037189	12
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.Private_BootStrap.pos_sub_add	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.Private_BootStrap.add_assoc_pos	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.Private_BootStrap.add_assoc	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: apply add_assoc_pos; only 1: apply opp_inj; only 1: rewrite opp_add_distr; only 1: rewrite opp_add_distr; only 1: rewrite opp_add_distr; only 1: rewrite opp_add_distr; only 1: simpl; only 1: apply add_assoc_pos).	0.023196	10
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.Private_BootStrap.add_opp_diag_r	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite pos_sub_diag; only 1: trivial; only 1: simpl; only 1: rewrite pos_sub_diag; only 1: trivial).	0.017196	9
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.Private_BootStrap.mul_opp_r	120	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: destruct m; only 1: easy; only 1: easy; only 1: easy; only 1: destruct m; only 1: easy; only 1: easy; only 1: easy; only 1: destruct m; only 1: easy; only 1: easy; only 1: easy).	0.023232	13
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.Private_BootStrap.mul_add_distr_pos	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.Private_BootStrap.mul_add_distr_r	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct p; only 1: rewrite mul_0_r; only 1: rewrite mul_0_r; only 1: rewrite mul_0_r; only 1: easy; only 1: apply mul_add_distr_pos; only 1: apply opp_inj; only 1: rewrite opp_add_distr; only 1: rewrite <- mul_opp_r; only 1: rewrite <- mul_opp_r; only 1: rewrite <- mul_opp_r; only 1: apply mul_add_distr_pos).	0.025450	12
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.one_succ	120	0	synth with cache (only 1: reflexivity).	0.011956	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.two_succ	120	0	synth with cache (only 1: reflexivity).	0.011534	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.add_0_l	120	0.0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: easy; only 1: easy).	0.015818	4
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.subsetl_spec	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.add_succ_l	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.opp_0	120	0	synth with cache (only 1: reflexivity).	0.010023	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.opp_succ	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.succ_pred	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.pred_succ	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.sub_0_r	120	0	synth with cache (only 1: apply add_0_r).	0.012975	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.sub_succ_r	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.mul_0_l	120	0	synth with cache (only 1: easy).	0.013894	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.mul_succ_l	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.eqb_eq	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.ltb_lt	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.leb_le	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.subsetr_spec	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.compare_eq_iff	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.compare_sub	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.compare_antisym	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.compare_lt_iff	120	0	synth with cache (only 1: reflexivity).	0.013641	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.compare_le_iff	120	0	synth with cache (only 1: reflexivity).	0.014007	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.lt_succ_r	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.max_l	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.max_r	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.min_l	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.min_r	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.peano_ind	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_lt_reg_r	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_gt_reg_l	120	1	synth with cache (only 1: eauto using Rmult_lt_reg_l with rorders).	0.082421	7
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.subset_spec	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.eq_equiv	120	0	synth with cache (only 1: firstorder).	0.026353	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.eq_Leq	120	0.0.0.0.0.0	synth with cache (only 1: unfold eq; only 1: unfold Equal; only 1: unfold L.eq; only 1: intros; only 1: setoid_rewrite elements_spec1; only 1: firstorder).	0.025727	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_le_reg_l	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.lt_strorder	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.bi_induction	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.abs_eq	120	0.0.0.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: trivial; only 1: destruct 1; only 1: easy).	0.016002	5
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.lt_compat	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: split; only 1: intros ?; only 1: destruct H1; only 1: destruct H1; only 1: destruct H1; only 1: destruct H2; only 1: destruct H3; only 1: destruct H4; only 1: exists x1,x2; only 1: split; only 1: trivial; only 1: split; only 1: trivial; only 1: split; only 1: transitivity x; only 1: symmetry; only 1: auto; only 1: auto; only 1: split; only 1: transitivity x0; only 1: symmetry; only 1: auto; only 1: auto; only 1: auto; only 1: intros ?; only 1: destruct H1; only 1: destruct H1; only 1: destruct H1; only 1: destruct H2; only 1: destruct H3; only 1: destruct H4; only 1: exists x1,x2; only 1: split; only 1: trivial; only 1: split; only 1: trivial; only 1: split; only 1: transitivity y; only 1: auto; only 1: auto; only 1: split; only 1: transitivity y0; only 1: auto; only 1: auto; only 1: auto).	0.086899	51
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.abs_neq	120	0.0.0.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: destruct 1; only 1: easy; only 1: trivial).	0.016815	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.sgn_null	120	0.0.0	synth with cache (only 1: intros; only 1: subst; only 1: easy).	0.015320	3
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.flatten_e_elements	120	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite elements_node; only 1: rewrite app_assoc_reverse; only 1: easy).	0.020949	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.sgn_pos	120	0.0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: easy; only 1: easy).	0.022985	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.sgn_neg	120	0.0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: easy; only 1: easy).	0.022207	4
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.cons_1	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.pow_0_r	120	0	synth with cache (only 1: reflexivity).	0.014377	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt3.map2_2	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.compare_end_Cmp	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.MapsTo_1	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.compare_more_Cmp	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: simpl; only 1: intros; only 1: elim_compare x1 x2; only 1: red; only 1: auto; only 1: red; only 1: auto; only 1: red; only 1: auto).	0.029401	9
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.pow_succ_r	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.mem_1	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.pow_neg_r	120	0.0.0.0	synth with cache (only 1: destruct m; only 1: easy; only 1: easy; only 1: easy).	0.022676	4
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.mem_2	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.pow_pos_fold	120	0	synth with cache (only 1: reflexivity).	0.015249	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.compare_cont_Cmp	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.empty_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.is_empty_1	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.compare_Cmp	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.square_spec	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.is_empty_2	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.compare_spec	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.add_1	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.sqrtrem_spec	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.add_2	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.equal_spec	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.sqrt_spec	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.add_3	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.sqrt_neg	120	0.0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: easy; only 1: easy).	0.019295	4
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.remove_1	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.mindepth_maxdepth	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.remove_2	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.sqrtrem_sqrt	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.maxdepth_cardinal	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Peano.lt; only 1: induction s; only 1: auto; only 1: simpl; only 1: rewrite <- Nat.add_succ_r; only 1: rewrite <- Nat.add_succ_l; only 1: rewrite Nat.add_0_r; only 1: apply Nat.add_le_mono; only 1: etransitivity; only 1: apply IHs1; only 1: apply Nat.pow_le_mono; only 1: auto; only 1: auto; only 1: apply Nat.le_max_l; only 1: etransitivity; only 1: apply IHs2; only 1: apply Nat.pow_le_mono; only 1: auto; only 1: auto; only 1: apply Nat.le_max_r).	0.043540	20
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.remove_3	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.find_1	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.log2_spec	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.mindepth_cardinal	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.find_2	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.log2_nonpos	120	0.0.0.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: destruct 1; only 1: easy; only 1: trivial).	0.019139	5
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.elements_1	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.maxdepth_log_cardinal	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: apply Nat.log2_lt_pow2; only 1: destruct s; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: apply maxdepth_cardinal).	0.041096	8
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.elements_2	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.even_spec	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.mindepth_log_cardinal	120	0.0.0	synth with cache (only 1: apply Nat.log2_le_pow2; only 1: auto with arith; only 1: apply mindepth_cardinal).	0.021518	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.elements_3	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.odd_spec	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.elements_3w	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.double_spec	120	0	synth with cache (only 1: reflexivity).	0.017331	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.cardinal_1	120	0.0	synth with cache (only 1: intros; only 1: reflexivity).	0.018506	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.succ_double_spec	120	0.0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: easy; only 1: easy).	0.018836	4
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.fold_1	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.pred_double_spec	120	0.0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: easy; only 1: easy).	0.018293	4
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.equal_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.Elt.equal_2	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.map_1	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.pos_div_eucl_eq	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.map_2	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.mapi_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.mapi_2	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.div_eucl_eq	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.map2_1	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.div_mod	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.pos_div_eucl_bound	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.mod_pos_bound	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.mod_neg_bound	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.quotrem_eq	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.quot_rem'	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.quot_rem	120	0.0.0	synth with cache (only 1: intros ?; only 1: clear H; only 1: apply quot_rem').	0.015791	3
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.rem_bound_pos	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.rem_opp_l'	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.rem_opp_r'	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.rem_opp_l	120	0.0.0	synth with cache (only 1: intros ?; only 1: clear H; only 1: apply rem_opp_l').	0.017728	3
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.rem_opp_r	120	0.0.0	synth with cache (only 1: intros ?; only 1: clear H; only 1: apply rem_opp_r').	0.017801	3
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.divide_Zpos	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.divide_Zpos_Zneg_r	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.divide_Zpos_Zneg_l	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.ggcd_gcd	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.ggcd_correct_divisors	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.gcd_divide_l	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.gcd_divide_r	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.gcd_greatest	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.gcd_nonneg	120	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct a; only 1: destruct b; only 1: easy; only 1: easy; only 1: easy; only 1: destruct b; only 1: easy; only 1: easy; only 1: easy; only 1: destruct b; only 1: easy; only 1: easy; only 1: easy).	0.081811	13
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.ggcd_opp	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.testbit_of_N	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct a; only 1: destruct n; only 1: simpl; only 1: auto; only 1: simpl; only 1: trivial; only 1: destruct n; only 1: simpl; only 1: destruct p; only 1: easy; only 1: easy; only 1: easy; only 1: simpl; only 1: trivial).	0.034064	14
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.testbit_of_N'	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite <- testbit_of_N; only 1: f_equal; only 1: destruct n; only 1: trivial; only 1: trivial; only 1: destruct H; only 1: easy).	0.029106	8
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.testbit_Zpos	120	0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite <- testbit_of_N'; only 1: easy; only 1: trivial).	0.020804	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.testbit_Zneg	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.div2_spec	120	0	synth with cache (only 1: reflexivity).	0.017761	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.testbit_0_l	120	0.0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: easy; only 1: easy).	0.018003	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.testbit_neg_r	120	0.0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: easy; only 1: easy).	0.029317	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.testbit_odd_0	120	0.0.0.0.0.0.0	synth with cache (only 1: destruct a; only 1: easy; only 1: easy; only 1: destruct p; only 1: easy; only 1: easy; only 1: easy).	0.024973	7
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.testbit_even_0	120	0.0.0.0	synth with cache (only 1: destruct a; only 1: easy; only 1: easy; only 1: easy).	0.023383	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.testbit_odd_succ	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.testbit_even_succ	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.shiftr_spec_aux	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.shiftl_spec_low	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.shiftl_spec_high	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.shiftr_spec	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.lor_spec	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.land_spec	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.ldiff_spec	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make.map2_2	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make_ord.eq_equal	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make_ord.eq_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make_ord.eq_2	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make_ord.eq_refl	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make_ord.eq_sym	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make_ord.eq_trans	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.lxor_spec	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.gt_lt_iff	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.gt_lt	120	0	synth with cache (only 1: apply gt_lt_iff).	0.017451	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.lt_gt	120	0	synth with cache (only 1: apply gt_lt_iff).	0.020567	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make_ord.lt_trans	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.ge_le_iff	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.ge_le	120	0	synth with cache (only 1: apply ge_le_iff).	0.018014	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.le_ge	120	0	synth with cache (only 1: apply ge_le_iff).	0.018899	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.empty_1	120	0.0.0.0.0.0	synth with cache (only 1: unfold Empty; only 1: unfold empty; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: inversion H).	0.016986	6
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.empty_NoDup	120	0.0	synth with cache (only 1: unfold empty; only 1: auto).	0.009935	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.gtb_ltb	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make_ord.lt_not_eq	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.geb_leb	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.gtb_lt	120	0.0	synth with cache (only 1: rewrite gtb_ltb; only 1: apply ltb_lt).	0.018347	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.geb_le	120	0.0	synth with cache (only 1: rewrite geb_leb; only 1: apply leb_le).	0.017849	2
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.is_empty_1	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.gtb_spec	120	0.0	synth with cache (only 1: rewrite gtb_ltb; only 1: apply ltb_spec).	0.017723	2
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.is_empty_2	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: case m; only 1: auto; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: inversion H).	0.016504	7
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.geb_spec	120	0.0	synth with cache (only 1: rewrite geb_leb; only 1: apply leb_spec).	0.020737	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.add_reg_l	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.mul_reg_l	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.mul_reg_r	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Make_ord.compare	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.opp_eq_mul_m1	120	0.0.0.0.0	synth with cache (only 1: rewrite mul_comm; only 1: destruct n; only 1: easy; only 1: easy; only 1: easy).	0.020449	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.add_diag	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.mem_1	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.compare_opp	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.add_compare_mono_l	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.testbit_mod_pow2	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.testbit_ones	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.mem_2	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.find_2	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.find_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.find_eq	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.add_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.add_2	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.add_3	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.add_3'	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.add_NoDup	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.add_eq	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply find_1; only 1: apply add_NoDup; only 1: auto; only 1: apply add_1; only 1: auto).	0.020174	6
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.add_not_eq	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.remove_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.remove_2	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.remove_3	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.testbit_ones_nonneg	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.remove_3'	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.id	120	0	synth with cache (only 1: reflexivity).	0.020007	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.remove_NoDup	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.elements_1	120	0	synth with cache (only 1: auto).	0.010551	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj	120	0.0	synth with cache (only 1: injection 1; only 1: easy).	0.039738	2
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.elements_2	120	0	synth with cache (only 1: auto).	0.014268	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.elements_3w	120	0	synth with cache (only 1: auto).	0.011956	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_iff	120	0.0.0.0.0.0	synth with cache (only 1: split; only 1: injection 1; only 1: easy; only 1: intros; only 1: f_equal; only 1: easy).	0.045760	6
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.is_pos	120	0	synth with cache (only 1: easy).	0.021756	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.is_nonneg	120	0.0	synth with cache (only 1: compute; only 1: congruence).	0.019624	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_1	120	0	synth with cache (only 1: auto).	0.019480	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.fold_1	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_xO	120	0	synth with cache (only 1: reflexivity).	0.015851	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_xI	120	0	synth with cache (only 1: reflexivity).	0.017758	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_succ	120	0.0.0	synth with cache (only 1: simpl; only 1: rewrite Pos.add_1_r; only 1: easy).	0.018768	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.submap_1	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_add	120	0	synth with cache (only 1: reflexivity).	0.019009	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_sub	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: simpl; only 1: rewrite Z.pos_sub_gt; only 1: easy; only 1: trivial).	0.022363	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_sub_max	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: simpl; only 1: rewrite Z.pos_sub_spec; only 1: case Pos.compare_spec; only 1: intros; only 1: subst; only 1: rewrite Pos.sub_diag; only 1: easy; only 1: intros; only 1: rewrite Pos.sub_lt; only 1: easy; only 1: trivial; only 1: intros; only 1: destruct BinPosDef.Pos.sub; only 1: easy; only 1: easy; only 1: easy).	0.031609	16
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.submap_2	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_pred	120	0.0.0.0	synth with cache (only 1: destruct p; only 1: easy; only 1: easy; only 1: easy).	0.022418	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_mul	120	0	synth with cache (only 1: reflexivity).	0.017637	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.equal_1	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Equivb; only 1: unfold equal; only 1: intuition; only 1: apply andb_true_intro; only 1: split; only 1: apply submap_1; only 1: firstorder; only 1: firstorder; only 1: unfold Submap; only 1: firstorder; only 1: apply submap_1; only 1: firstorder; only 1: firstorder; only 1: unfold Submap; only 1: firstorder).	0.122721	15
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_pow_pos	120	0.0	synth with cache (only 1: apply Pos.iter_swap_gen; only 1: easy).	0.018059	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_pow	120	0	synth with cache (only 1: apply inj_pow_pos).	0.019230	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_square	120	0	synth with cache (only 1: reflexivity).	0.015392	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_compare	120	0	synth with cache (only 1: reflexivity).	0.020409	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_leb	120	0	synth with cache (only 1: reflexivity).	0.021143	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_ltb	120	0	synth with cache (only 1: reflexivity).	0.020260	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_eqb	120	0	synth with cache (only 1: reflexivity).	0.019459	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_max	120	0.0.0.0.0.0.0	synth with cache (only 1: unfold BinIntDef.Z.max; only 1: unfold BinPosDef.Pos.max; only 1: rewrite inj_compare; only 1: case Z.compare_spec; only 1: easy; only 1: easy; only 1: easy).	0.024494	7
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_min	120	0.0.0.0.0.0.0	synth with cache (only 1: unfold BinIntDef.Z.min; only 1: unfold BinPosDef.Pos.min; only 1: rewrite inj_compare; only 1: case Z.compare_spec; only 1: easy; only 1: easy; only 1: easy).	0.027194	7
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_sqrt	120	0	synth with cache (only 1: reflexivity).	0.020567	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_gcd	120	0	synth with cache (only 1: reflexivity).	0.019984	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_divide	120	0	synth with cache (only 1: apply Z.divide_Zpos).	0.018974	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_testbit	120	0	synth with cache (only 1: apply Z.testbit_Zpos).	0.019626	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_neg	120	0.0	synth with cache (only 1: injection 1; only 1: easy).	0.019839	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_neg_iff	120	0.0.0.0.0	synth with cache (only 1: split; only 1: apply inj_neg; only 1: intros; only 1: f_equal; only 1: easy).	0.023031	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_pos	120	0.0	synth with cache (only 1: injection 1; only 1: easy).	0.021993	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.inj_pos_iff	120	0.0.0.0.0.0	synth with cache (only 1: split; only 1: injection 1; only 1: easy; only 1: intros; only 1: f_equal; only 1: easy).	0.022962	6
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.neg_is_neg	120	0	synth with cache (only 1: easy).	0.018791	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.neg_is_nonpos	120	0	synth with cache (only 1: easy).	0.020729	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.pos_is_pos	120	0	synth with cache (only 1: easy).	0.018144	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.pos_is_nonneg	120	0.0	synth with cache (only 1: compute; only 1: congruence).	0.016772	2
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.neg_le_pos	120	0	synth with cache (only 1: easy).	0.023181	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.neg_lt_pos	120	0	synth with cache (only 1: easy).	0.073792	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.neg_le_neg	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Z.le; only 1: simpl; only 1: rewrite <- Pos.compare_antisym; only 1: easy).	0.068875	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.neg_lt_neg	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Z.lt; only 1: simpl; only 1: rewrite <- Pos.compare_antisym; only 1: easy).	0.023460	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.pos_le_pos	120	0	synth with cache (only 1: easy).	0.020624	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.pos_lt_pos	120	0	synth with cache (only 1: easy).	0.017031	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.neg_xO	120	0	synth with cache (only 1: reflexivity).	0.021571	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.neg_xI	120	0	synth with cache (only 1: reflexivity).	0.020187	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.pos_xO	120	0	synth with cache (only 1: reflexivity).	0.020504	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.pos_xI	120	0	synth with cache (only 1: reflexivity).	0.018698	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.opp_neg	120	0	synth with cache (only 1: reflexivity).	0.021098	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.opp_pos	120	0	synth with cache (only 1: reflexivity).	0.017244	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.add_neg_neg	120	0	synth with cache (only 1: reflexivity).	0.019757	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.add_pos_neg	120	0	synth with cache (only 1: reflexivity).	0.020282	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.add_neg_pos	120	0	synth with cache (only 1: reflexivity).	0.019761	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.equal_2	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.add_pos_pos	120	0	synth with cache (only 1: reflexivity).	0.019250	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.divide_pos_neg_r	120	0	synth with cache (only 1: apply Z.divide_Zpos_Zneg_r).	0.019942	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt2.map_1	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: induction m; only 1: inversion 1; only 1: destruct a; only 1: simpl; only 1: inversion_clear 1; only 1: constructor 1; only 1: unfold eqke in *; only 1: simpl in *; only 1: intuition congruence; only 1: constructor 2; only 1: unfold MapsTo in *; only 1: auto).	0.118272	16
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.divide_pos_neg_l	120	0	synth with cache (only 1: apply Z.divide_Zpos_Zneg_l).	0.016859	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.testbit_neg	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite <- Z.testbit_of_N'; only 1: destruct n; only 1: unfold BinIntDef.Z.testbit; only 1: destruct a; only 1: easy; only 1: destruct a; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: simpl; only 1: destruct BinPosDef.Pos.pred_N; only 1: easy; only 1: easy; only 1: destruct H; only 1: easy; only 1: trivial).	0.035356	18
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Pos2Z.testbit_pos	120	0	synth with cache (only 1: apply Z.testbit_Zpos).	0.019464	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt2.map_2	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: induction m; only 1: simpl; only 1: intros ?; only 1: destruct H; only 1: inversion H; only 1: simpl; only 1: destruct a; only 1: intros ?; only 1: inversion H; only 1: clear H; only 1: inversion H0; only 1: subst; only 1: exists e; only 1: constructor; only 1: unfold eqke in *; only 1: simpl in *; only 1: intuition; only 1: subst; only 1: destruct IHm; only 1: exists x0; only 1: auto; only 1: exists x1; only 1: constructor 2; only 1: auto).	0.074393	27
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z2Pos.id	120	0.0.0.0	synth with cache (only 1: destruct x; only 1: easy; only 1: easy; only 1: easy).	0.029450	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z2Pos.inj	120	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct x; only 1: simpl; only 1: easy; only 1: simpl; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intropattern subst -> H1; only 1: clear H; only 1: apply id; only 1: auto; only 1: simpl; only 1: easy).	0.033643	13
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt2.map_NoDup	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z2Pos.inj_iff	120	0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: apply inj; only 1: auto; only 1: auto; only 1: intros; only 1: f_equal; only 1: easy).	0.025361	7
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z2Pos.to_pos_nonpos	120	0.0.0.0.0	synth with cache (only 1: destruct x; only 1: trivial; only 1: destruct 1; only 1: easy; only 1: trivial).	0.021057	5
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt2.mapi_1	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: induction m; only 1: inversion 1; only 1: destruct a; only 1: simpl; only 1: inversion_clear 1; only 1: exists t0; only 1: destruct H0; only 1: simpl in *; only 1: split; only 1: auto; only 1: constructor 1; only 1: unfold eqke in *; only 1: simpl in *; only 1: intuition congruence; only 1: destruct IHm; only 1: auto; only 1: exists x0; only 1: intuition).	0.093326	22
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.empty	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z2Pos.inj_1	120	0	synth with cache (only 1: reflexivity).	0.019996	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z2Pos.inj_double	120	0.0.0.0	synth with cache (only 1: destruct x; only 1: easy; only 1: easy; only 1: easy).	0.040888	4
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt2.mapi_2	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: induction m; only 1: simpl; only 1: intros ?; only 1: destruct H; only 1: inversion H; only 1: simpl; only 1: destruct a; only 1: intros ?; only 1: inversion H; only 1: clear H; only 1: inversion H0; only 1: subst; only 1: exists e; only 1: constructor; only 1: unfold eqke in *; only 1: simpl in *; only 1: intuition; only 1: subst; only 1: destruct IHm; only 1: exists x0; only 1: auto; only 1: exists x1; only 1: constructor 2; only 1: auto).	0.097793	27
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z2Pos.inj_succ_double	120	0.0.0.0	synth with cache (only 1: destruct x; only 1: easy; only 1: easy; only 1: easy).	0.026761	4
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.is_empty	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.mem	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z2Pos.inj_succ	120	0.0.0.0.0.0	synth with cache (only 1: destruct x; only 1: easy; only 1: simpl; only 1: rewrite Pos.add_1_r; only 1: easy; only 1: easy).	0.028538	6
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.add	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.singleton	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z2Pos.inj_add	120	0.0.0.0.0.0.0	synth with cache (only 1: destruct x; only 1: easy; only 1: destruct y; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.044945	7
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt2.mapi_NoDup	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.remove	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt3.fold_right_pair_NoDup	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.union	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z2Pos.inj_sub	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct x; only 1: easy; only 1: destruct y; only 1: easy; only 1: simpl; only 1: intros; only 1: rewrite Z.pos_sub_gt; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.085394	11
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt3.combine_NoDup	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.inter	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.diff	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt3.combine_l_1	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z2Pos.inj_pred	120	0.0.0.0.0.0.0	synth with cache (only 1: destruct x; only 1: easy; only 1: destruct p; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.028057	7
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.equal	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt3.combine_r_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.subset	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z2Pos.inj_mul	120	0.0.0.0.0.0.0	synth with cache (only 1: destruct x; only 1: easy; only 1: destruct y; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.043267	7
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.elements	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.fold	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z2Pos.inj_pow	120	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Pos2Z.inj; only 1: rewrite Pos2Z.inj_pow; only 1: rewrite id; only 1: rewrite id; only 1: rewrite id; only 1: trivial; only 1: auto; only 1: auto; only 1: apply Z.pow_pos_nonneg; only 1: auto; only 1: apply Z.lt_le_incl; only 1: auto).	0.029668	13
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.cardinal	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt3.combine_1	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z2Pos.inj_pow_pos	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z2Pos.inj_compare	120	0.0.0.0.0.0.0	synth with cache (only 1: destruct x; only 1: easy; only 1: destruct y; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.054329	7
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.compat_P_aux	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt3.map2_NoDup	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.filter	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z2Pos.inj_leb	120	0.0.0.0.0.0.0	synth with cache (only 1: destruct x; only 1: easy; only 1: destruct y; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.044756	7
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.for_all	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z2Pos.inj_ltb	120	0.0.0.0.0.0.0	synth with cache (only 1: destruct x; only 1: easy; only 1: destruct y; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.057986	7
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.exists_	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z2Pos.inj_eqb	120	0.0.0.0.0.0.0	synth with cache (only 1: destruct x; only 1: easy; only 1: destruct y; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.043539	7
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt3.map2_0	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z2Pos.inj_max	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct x; only 1: simpl; only 1: rewrite Pos.max_1_l; only 1: destruct y; only 1: easy; only 1: easy; only 1: easy; only 1: simpl; only 1: destruct y; only 1: simpl; only 1: rewrite Pos.max_1_r; only 1: easy; only 1: simpl; only 1: rewrite <- Pos2Z.inj_max; only 1: easy; only 1: simpl; only 1: rewrite Pos.max_1_r; only 1: easy; only 1: simpl; only 1: rewrite Pos.max_1_l; only 1: destruct y; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply to_pos_nonpos; only 1: apply Z.max_lub; only 1: easy; only 1: easy).	0.055169	30
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt3.map2_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.partition	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.choose_aux	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct choose; only 1: left; only 1: exists e; only 1: auto; only 1: right; only 1: auto).	0.019118	7
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z2Pos.inj_min	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct x; only 1: simpl; only 1: rewrite Pos.min_1_l; only 1: destruct y; only 1: easy; only 1: easy; only 1: easy; only 1: simpl; only 1: destruct y; only 1: simpl; only 1: rewrite Pos.min_1_r; only 1: trivial; only 1: simpl; only 1: rewrite <- Pos2Z.inj_min; only 1: easy; only 1: simpl; only 1: rewrite Pos.min_1_r; only 1: trivial; only 1: simpl; only 1: rewrite Pos.min_1_l; only 1: destruct y; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: apply to_pos_nonpos; only 1: apply Z.min_le_iff; only 1: left; only 1: easy).	0.049046	29
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.choose	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z2Pos.inj_sqrt	120	0.0.0.0	synth with cache (only 1: destruct x; only 1: easy; only 1: easy; only 1: easy).	0.019417	4
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.choose_ok1	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z2Pos.inj_gcd	120	0.0.0.0.0.0.0	synth with cache (only 1: destruct x; only 1: easy; only 1: destruct y; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.044814	7
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.choose_ok2	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Zplus_minus_eq	120	0.0.0	synth with cache (only 1: intros; only 1: apply Z.add_move_l; only 1: easy).	0.022617	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.choose_equal	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.min_elt	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Zpos_eq	120	0	synth with cache (only 1: congruence).	0.019478	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.ZL0	120	0	synth with cache (only 1: reflexivity).	0.017369	1
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Zplus_diag_eq_mult_2	120	0.0	synth with cache (only 1: rewrite Z.mul_comm; only 1: apply Z.add_diag).	0.018895	2
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.max_elt	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.empty_1	120	0.0.0	synth with cache (only 1: unfold empty; only 1: case M.empty; only 1: auto).	0.014543	3
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z_eq_mult	120	0.0.0	synth with cache (only 1: intros; only 1: subst; only 1: easy).	0.020648	3
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.is_empty_1	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold is_empty; only 1: case M.is_empty; only 1: auto; only 1: auto).	0.013913	5
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.is_empty_2	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: unfold is_empty; only 1: case M.is_empty; only 1: auto; only 1: intros; only 1: discriminate H).	0.016939	6
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.mem_1	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold mem; only 1: case M.mem; only 1: auto; only 1: auto).	0.016050	5
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.mem_2	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: unfold mem; only 1: case M.mem; only 1: auto; only 1: intros; only 1: discriminate H).	0.016395	7
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.equal_1	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold equal; only 1: case M.equal; only 1: intuition; only 1: intuition).	0.015325	5
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.equal_2	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: unfold equal; only 1: case M.equal; only 1: intuition; only 1: intuition; only 1: inversion H).	0.018731	7
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.subset_1	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold subset; only 1: case M.subset; only 1: intuition; only 1: intuition).	0.017978	5
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.subset_2	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: unfold subset; only 1: case M.subset; only 1: intuition; only 1: intuition; only 1: inversion H).	0.018524	7
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.choose_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.choose_2	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.choose_3	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.elements_1	120	0.0.0.0	synth with cache (only 1: intros; only 1: unfold elements; only 1: case M.elements; only 1: firstorder).	0.043952	4
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.elements_2	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: unfold elements; only 1: case M.elements; only 1: firstorder).	0.022020	5
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.elements_3	120	0.0.0.0	synth with cache (only 1: intros; only 1: unfold elements; only 1: case M.elements; only 1: firstorder).	0.017567	4
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.elements_3w	120	0	synth with cache (only 1: auto with ordered_type).	0.012244	1
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.min_elt_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.min_elt_2	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.min_elt_3	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.max_elt_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.max_elt_2	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.max_elt_3	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.add_1	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold add; only 1: case M.add; only 1: unfold Add; only 1: firstorder).	0.020258	5
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.add_2	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold add; only 1: case M.add; only 1: unfold Add; only 1: firstorder).	0.019133	5
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.add_3	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold add; only 1: case M.add; only 1: unfold Add; only 1: firstorder).	0.022537	7
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt3.map2_2	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.remove_1	120	0.0.0.0	synth with cache (only 1: intros; only 1: unfold remove; only 1: case M.remove; only 1: firstorder).	0.060226	4
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.Elt.MapsTo_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.Elt.mem_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.Elt.mem_2	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.remove_2	120	0.0.0.0	synth with cache (only 1: intros; only 1: unfold remove; only 1: case M.remove; only 1: firstorder).	0.019342	4
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.Elt.empty_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.remove_3	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold remove; only 1: case M.remove; only 1: firstorder).	0.022302	6
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.Elt.is_empty_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.Elt.is_empty_2	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.singleton_1	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: unfold singleton; only 1: case M.singleton; only 1: firstorder).	0.016992	5
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.Elt.add_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.singleton_2	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: unfold singleton; only 1: case M.singleton; only 1: firstorder).	0.018655	5
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.Elt.add_2	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.union_1	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold union; only 1: case M.union; only 1: firstorder).	0.025085	6
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.Elt.add_3	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.Elt.remove_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.union_2	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold union; only 1: case M.union; only 1: firstorder).	0.020612	6
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.Elt.remove_2	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.union_3	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold union; only 1: case M.union; only 1: firstorder).	0.020845	6
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.Elt.remove_3	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.inter_1	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold inter; only 1: case M.inter; only 1: firstorder).	0.020661	6
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.Elt.find_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.Elt.find_2	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.inter_2	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold inter; only 1: case M.inter; only 1: firstorder).	0.020504	6
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.Elt.elements_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.inter_3	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold inter; only 1: case M.inter; only 1: firstorder).	0.022068	6
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.Elt.elements_2	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.Elt.elements_3w	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.diff_1	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold diff; only 1: case M.diff; only 1: firstorder).	0.021718	6
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.Elt.cardinal_1	120	0.0	synth with cache (only 1: intros; only 1: reflexivity).	0.011985	2
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.diff_2	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold diff; only 1: case M.diff; only 1: firstorder).	0.021447	6
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.Elt.fold_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.diff_3	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold diff; only 1: case M.diff; only 1: firstorder).	0.021832	6
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.Elt.equal_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.Elt.equal_2	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.cardinal_1	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold cardinal; only 1: case M.cardinal; only 1: unfold elements in *; only 1: destruct M.elements; only 1: auto).	0.054909	6
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.map_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.map_2	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.fold_1	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold fold; only 1: case M.fold; only 1: unfold elements in *; only 1: destruct M.elements; only 1: auto).	0.033389	6
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.mapi_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.f_dec	120	0.0.0.0	synth with cache (only 1: intros; only 1: case f; only 1: auto with bool; only 1: auto with bool).	0.015215	4
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.mapi_2	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.compat_P_aux	120	0.0.0.0.0.0.0.0	synth with cache (only 1: unfold compat_bool; only 1: unfold compat_P; only 1: unfold Proper; only 1: unfold respectful; only 1: unfold impl; only 1: intros; only 1: rewrite <- H1; only 1: firstorder).	0.021112	8
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.map2_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Make.map2_2	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.filter_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.filter_2	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.filter_3	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.for_all_1	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: unfold for_all; only 1: case M.for_all; only 1: intuition; only 1: intuition).	0.032755	6
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.for_all_2	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: unfold for_all; only 1: case M.for_all; only 1: intuition; only 1: intuition; only 1: inversion H0).	0.027791	7
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.exists_1	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: unfold exists_; only 1: case M.exists_; only 1: intuition; only 1: intuition).	0.030966	6
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.exists_2	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: unfold exists_; only 1: case M.exists_; only 1: intuition; only 1: intuition; only 1: inversion H0).	0.033879	7
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.partition_1	120
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.NodepOfDep.partition_2	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.if_zero_wd	120	0.0	synth with cache (only 1: unfold if_zero; only 1: f_equiv').	0.037119	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.if_zero_0	120	0.0.0.0	synth with cache (only 1: unfold if_zero; only 1: intros; only 1: rewrite @recursion_0; only 1: easy).	0.015394	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.if_zero_succ	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold if_zero; only 1: rewrite @recursion_succ; only 1: easy; only 1: easy; only 1: easy).	0.020978	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_wd	120	0.0	synth with cache (only 1: unfold def_add; only 1: f_equiv').	0.047148	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_0_l	120	0.0.0.0	synth with cache (only 1: intros ?; only 1: unfold def_add; only 1: rewrite @recursion_0; only 1: easy).	0.012332	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_succ_l	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: unfold def_add; only 1: rewrite @recursion_succ; only 1: f_equiv'; only 1: f_equiv'; only 1: f_equiv').	0.080124	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_add	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: induct n; only 1: rewrite def_add_0_l; only 1: rewrite add_0_l; only 1: easy; only 1: intros ?; only 1: intros ?; only 1: rewrite def_add_succ_l; only 1: rewrite add_succ_l; only 1: rewrite H; only 1: easy).	0.030742	12
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_wd	120	0.0	synth with cache (only 1: unfold def_mul; only 1: f_equiv').	0.044275	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_0_r	120	0.0.0.0	synth with cache (only 1: intros ?; only 1: unfold def_mul; only 1: rewrite @recursion_0; only 1: easy).	0.011688	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_succ_r	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: unfold def_mul; only 1: rewrite @recursion_succ; only 1: auto with *; only 1: easy; only 1: f_equiv').	0.116521	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_mul	120	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: induct m; only 1: rewrite def_mul_0_r; only 1: rewrite mul_0_r; only 1: easy; only 1: intros ?; only 1: intros ?; only 1: rewrite def_mul_succ_r; only 1: rewrite mul_succ_r; only 1: rewrite def_add_add; only 1: rewrite H; only 1: easy).	0.054538	13
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_wd	120	0.0	synth with cache (only 1: unfold ltb; only 1: f_equiv').	0.073265	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_base	120	0.0.0.0	synth with cache (only 1: intros ?; only 1: unfold ltb; only 1: rewrite @recursion_0; only 1: easy).	0.013530	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_step	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_0	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_0_succ	120	0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite ltb_base; only 1: rewrite if_zero_succ; only 1: f_equiv').	0.014427	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.succ_ltb_mono	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite ltb_step; only 1: rewrite @recursion_succ; only 1: f_equiv'; only 1: f_equiv'; only 1: f_equiv').	0.041172	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_lt	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_ge	120	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- not_true_iff_false; only 1: rewrite ltb_lt; only 1: apply nlt_ge).	0.016120	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.even_wd	120	0.0	synth with cache (only 1: unfold even; only 1: f_equiv').	0.031530	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.even_0	120	0.0.0	synth with cache (only 1: unfold even; only 1: rewrite @recursion_0; only 1: auto).	0.026923	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.even_succ	120	0.0.0.0.0.0	synth with cache (only 1: unfold even; only 1: intros ?; only 1: rewrite @recursion_succ; only 1: f_equiv'; only 1: f_equiv'; only 1: f_equiv').	0.028824	6
coq-tactician-stdlib.8.11.dev	Coq.Sets.Integers.Integers_sect.le_reflexive	120	0.0	synth with cache (only 1: red; only 1: auto with arith).	0.009891	2
coq-tactician-stdlib.8.11.dev	Coq.Sets.Integers.Integers_sect.le_antisym	120	1.0	synth with cache (only 1: red; only 1: PeanoNat.Nat.order).	0.016524	7
coq-tactician-stdlib.8.11.dev	Coq.Sets.Integers.Integers_sect.le_trans	120	0.0.0.0.0	synth with cache (only 1: red; only 1: intros; only 1: apply PeanoNat.Nat.le_trans with y; only 1: auto; only 1: auto).	0.011612	5
coq-tactician-stdlib.8.11.dev	Coq.Sets.Integers.Integers_sect.le_Order	120	1.0.0.0.0.0	synth with cache (only 1: split; only 1: red; only 1: auto with arith; only 1: exact le_trans; only 1: red; only 1: PeanoNat.Nat.order).	0.014739	11
coq-tactician-stdlib.8.11.dev	Coq.Sets.Integers.Integers_sect.triv_nat	120	0	synth with cache (only 1: exact Integers_defn).	0.011118	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_wd	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold half_aux; only 1: f_equiv; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct x1; only 1: intros ?; only 1: destruct y1; only 1: intros ?; only 1: destruct H1; only 1: compute in *; only 1: rewrite H1; only 1: rewrite H2; only 1: auto with *; only 1: f_equiv').	0.079281	19
coq-tactician-stdlib.8.11.dev	Coq.Sets.Integers.Integers_sect.nat_po	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Integers.Integers_sect.le_total_order	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_wd	120	0.0	synth with cache (only 1: unfold half; only 1: f_equiv').	0.046386	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_0	120	0.0.0	synth with cache (only 1: unfold half_aux; only 1: rewrite @recursion_0; only 1: auto).	0.013935	3
coq-tactician-stdlib.8.11.dev	Coq.Sets.Integers.Integers_sect.Finite_subset_has_lub	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Integers.Integers_sect.Integers_has_no_ub	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Integers.Integers_sect.Integers_infinite	120	0.0.0.0.0.0.0	synth with cache (only 1: generalize Integers_has_no_ub; only 1: intros ?; only 1: red; only 1: intros ?; only 1: apply H; only 1: apply Finite_subset_has_lub; only 1: auto with sets arith).	0.015923	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_succ	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_spec	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: apply induction; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: setoid_rewrite H; only 1: auto with *; only 1: rewrite half_aux_0; only 1: simpl; only 1: rewrite add_0_l; only 1: easy; only 1: intros; only 1: rewrite half_aux_succ; only 1: simpl; only 1: rewrite add_succ_l; only 1: rewrite add_comm; only 1: f_equiv; only 1: easy).	0.064324	17
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_spec2	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: apply induction; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: setoid_rewrite H; only 1: auto with *; only 1: rewrite half_aux_0; only 1: simpl; only 1: auto with *; only 1: intros; only 1: rewrite half_aux_succ; only 1: simpl; only 1: destruct H; only 1: right; only 1: f_equiv; only 1: easy; only 1: auto with *).	0.061222	17
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_0	120	0.0.0.0	synth with cache (only 1: unfold half; only 1: rewrite half_aux_0; only 1: simpl; only 1: easy).	0.015280	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_1	120	0.0.0.0.0.0	synth with cache (only 1: unfold half; only 1: rewrite one_succ; only 1: rewrite half_aux_succ; only 1: rewrite half_aux_0; only 1: simpl; only 1: easy).	0.020862	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_double	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_upper_bound	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.OrderedTypeLists.In_eq	120	0.0.0	synth with cache (only 1: intros; only 1: rewrite <- H; only 1: auto).	0.013256	3
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.OrderedTypeLists.ListIn_In	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.OrderedTypeLists.Inf_lt	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_lower_bound	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.OrderedTypeLists.Inf_eq	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.OrderedTypeLists.Sort_Inf_In	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.OrderedTypeLists.ListIn_Inf	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.OrderedTypeLists.In_Inf	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_nz	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.OrderedTypeLists.Inf_alt	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.OrderedTypeLists.Sort_NoDup	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.KeyOrderedType.ltk_compat	120	0.0.0	synth with cache (only 1: unfold eqk; only 1: unfold ltk; only 1: auto with *).	0.015299	3
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.KeyOrderedType.ltk_compat'	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.KeyOrderedType.pair_compat	120	0	synth with cache (only 1: apply @pair_compat).	0.010164	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.KeyOrderedType.Elt.ltk_not_eqk	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_decrease	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow_wd	120	0.0	synth with cache (only 1: unfold pow; only 1: f_equiv').	0.057961	2
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.KeyOrderedType.Elt.ltk_not_eqke	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.KeyOrderedType.Elt.Inf_eq	120	0.0.0	synth with cache (only 1: intros ?; only 1: intropattern subst <- H; only 1: easy).	0.022664	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow_0	120	0.0.0.0	synth with cache (only 1: intros; only 1: unfold pow; only 1: rewrite @recursion_0; only 1: auto with *).	0.015810	4
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.KeyOrderedType.Elt.Inf_lt	120	0.0	synth with cache (only 1: apply InfA_ltA; only 1: auto with *).	0.012149	2
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_Inf_In	120	0.0.0.0	synth with cache (only 1: apply SortA_InfA_InA; only 1: auto with *; only 1: auto with *; only 1: auto with *).	0.013691	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow_succ	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold pow; only 1: rewrite @recursion_succ; only 1: f_equiv'; only 1: f_equiv'; only 1: f_equiv').	0.056173	6
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_Inf_NotIn	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_NoDupA	120	0.0.0.0	synth with cache (only 1: apply SortA_NoDupA; only 1: auto with *; only 1: auto with *; only 1: auto with *).	0.014164	4
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_In_cons_1	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_prewd	120	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite H0; only 1: destruct ltb; only 1: auto with *; only 1: f_equiv; only 1: apply H; only 1: f_equiv; only 1: easy).	0.075650	13
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_In_cons_2	120	0.0.1.0.0.0.0	synth with cache (only 1: intros; only 1: invlist InA; only 1: auto with relations; only 1: left; only 1: apply Sort_In_cons_1 with l; only 1: auto with relations; only 1: auto with relations).	0.045472	10
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_In_cons_3	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_wd	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold log; only 1: apply strong_rec_wd; only 1: f_equiv'; only 1: f_equiv'; only 1: f_equiv').	0.029554	8
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_good_step	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_init	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_step	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow2_log	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_lt_mono_r	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_lt_mono	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_le_mono	120
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms_Relations.relation_conjunction_morphism	120	0	synth with cache (only 1: firstorder).	0.090767	1
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_lt_le_mono	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_le_lt_mono	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_pos_pos	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite <- Rplus_0_l; only 1: apply Rplus_lt_mono; only 1: easy; only 1: easy).	0.034248	8
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_pos_nonneg	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite <- Rplus_0_l; only 1: apply Rplus_lt_le_mono; only 1: easy; only 1: easy).	0.028142	8
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_nonneg_pos	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite <- Rplus_0_l; only 1: apply Rplus_le_lt_mono; only 1: easy; only 1: easy).	0.045072	8
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_nonneg_nonneg	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite <- Rplus_0_l; only 1: apply Rplus_le_mono; only 1: easy; only 1: easy).	0.028562	8
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_le_minus	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_lt_minus	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Ropp_lt_mono	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Ropp_pos_neg	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_nonneg_nonneg	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_pos_neg	120
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms_Relations.relation_disjunction_morphism	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_neg_neg	120
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms_Relations.predicate_equivalence_pointwise	120	0.0.0.0	synth with cache (only 1: red; only 1: red; only 1: unfold predicate_equivalence; only 1: auto).	0.012446	4
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms_Relations.predicate_implication_pointwise	120	0.0.0.0	synth with cache (only 1: red; only 1: red; only 1: unfold predicate_implication; only 1: auto).	0.011140	4
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_square_nonneg	120
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms_Relations.relation_equivalence_pointwise	120
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms_Relations.subrelation_pointwise	120
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms_Relations.flip_pointwise_relation	120	0.0.0	synth with cache (only 1: split; only 1: firstorder; only 1: firstorder).	0.012187	3
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_neq_0	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Ropp_neg_pos	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_0_1	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_succ_r	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_lt_succ	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply Rlt_trans with m; only 1: assumption; only 1: apply Rlt_succ_r).	0.020614	6
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.In_compat	120	0.0.0.0.0.0.0.0	synth with cache (only 1: red; only 1: red; only 1: red; only 1: red; only 1: intros; only 1: apply M.In_compat; only 1: congruence; only 1: congruence).	0.020288	8
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.eq_equiv	120	0	synth with cache (only 1: firstorder).	0.020652	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.eq_dec	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.mem_spec	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.equal_spec	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.subset_spec	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.empty_spec	120	0	synth with cache (only 1: exact M.empty_spec).	0.010113	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.is_empty_spec	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.add_spec	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.remove_spec	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.singleton_spec	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.union_spec	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.inter_spec	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.diff_spec	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.fold_spec	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.cardinal_spec	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.filter_spec	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Infinite_sets.Infinite_sets.make_new_approximant	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: elim H0; only 1: intros ?; only 1: intros ?; only 1: apply Strict_super_set_contains_new_element; only 1: auto with sets; only 1: red; only 1: intros ?; only 1: apply H; only 1: rewrite <- H3; only 1: auto with sets).	0.024407	14
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.for_all_spec	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.exists_spec	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.partition_spec1	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.partition_spec2	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.elements_spec1	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Infinite_sets.Infinite_sets.approximants_grow	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.elements_spec2w	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.choose_spec1	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Infinite_sets.Infinite_sets.approximants_grow'	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Infinite_sets.Infinite_sets.approximant_can_be_any_size	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Infinite_sets.Infinite_sets.Image_set_continuous	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Infinite_sets.Infinite_sets.Image_set_continuous'	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Infinite_sets.Infinite_sets.Pigeonhole_bis	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.choose_spec2	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.Raw2SetsOn.lt_strorder	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Infinite_sets.Infinite_sets.Pigeonhole_ter	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.Raw2SetsOn.lt_compat	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.Raw2SetsOn.Spec.compare_spec	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.Raw2SetsOn.Spec.elements_spec2	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.Raw2SetsOn.Spec.min_elt_spec1	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.Raw2SetsOn.Spec.min_elt_spec2	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.Raw2SetsOn.Spec.min_elt_spec3	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.Raw2SetsOn.Spec.max_elt_spec1	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.Raw2SetsOn.Spec.max_elt_spec2	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.Raw2SetsOn.Spec.max_elt_spec3	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.Raw2SetsOn.Spec.choose_spec3	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.MakeSetOrdering.eq_equiv	120	0	synth with cache (only 1: firstorder).	0.021708	1
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_0	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite H; only 1: apply H0).	0.019555	8
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_1	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold EquivBefore; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: setoid_rewrite H; only 1: setoid_rewrite H0; only 1: setoid_rewrite H1; only 1: intuition).	0.059490	14
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_2	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Below; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: setoid_rewrite H; only 1: setoid_rewrite H0; only 1: intuition).	0.037634	10
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_3	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Above; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: setoid_rewrite H; only 1: setoid_rewrite H0; only 1: intuition).	0.035874	10
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_4	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold EmptyBetween; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: setoid_rewrite H; only 1: setoid_rewrite H0; only 1: setoid_rewrite H1; only 1: intuition).	0.060943	14
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.MakeSetOrdering.lt_compat	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold lt; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: setoid_rewrite H; only 1: setoid_rewrite H0; only 1: intuition).	0.100298	10
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.MakeSetOrdering.lt_strorder	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.MakeSetOrdering.lt_empty_r	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.MakeSetOrdering.lt_empty_l	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.MakeSetOrdering.lt_add_lt	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.MakeSetOrdering.lt_add_eq	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.MakeListOrdering.lt_strorder	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.MakeListOrdering.lt_compat'	120
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.MakeListOrdering.eq_cons	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold eq; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: split; only 1: inversion_clear 1; only 1: left; only 1: MO.order; only 1: right; only 1: rewrite <- H0; only 1: auto; only 1: inversion_clear 1; only 1: left; only 1: MO.order; only 1: right; only 1: rewrite H0; only 1: auto).	0.065948	21
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.MakeListOrdering.cons_CompSpec	120
coq-tactician-stdlib.8.11.dev	Coq.Classes.EquivDec.unit_eqdec_obligation_1	120	0.0.0	synth with cache (only 1: destruct x; only 1: destruct y; only 1: reflexivity).	0.013965	3
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_eqk	120	0	synth with cache (only 1: firstorder).	0.012893	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_def	120	0	synth with cache (only 1: reflexivity).	0.010839	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_def'	120	0	synth with cache (only 1: reflexivity).	0.009778	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_1	120	0.0	synth with cache (only 1: destruct 1; only 1: easy).	0.012152	2
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_2	120	0.0	synth with cache (only 1: destruct 1; only 1: easy).	0.011657	2
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.eqk_def	120	0	synth with cache (only 1: reflexivity).	0.009872	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.eqk_def'	120	0	synth with cache (only 1: reflexivity).	0.009507	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.eqk_1	120	0	synth with cache (only 1: trivial).	0.062658	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqke_eqk	120	0.0.0	synth with cache (only 1: induction 1; only 1: firstorder; only 1: firstorder).	0.060498	3
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqk_eqke	120	0.0.0	synth with cache (only 1: induction 1; only 1: firstorder; only 1: firstorder).	0.023912	3
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqk	120	0.0.0	synth with cache (only 1: intros ?; only 1: intropattern subst <- H; only 1: easy).	0.025480	3
coq-tactician-stdlib.8.11.dev	Coq.Classes.EquivDec.bool_function_eqdec_obligation_1	120
coq-tactician-stdlib.8.11.dev	Coq.Classes.EquivDec.list_eqdec_obligation_5	120	0.0.0.0.0	synth with cache (only 1: destruct y; only 1: unfold not in *; only 1: eauto; only 1: unfold not in *; only 1: eauto).	0.032735	5
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.In_alt	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold In; only 1: unfold MapsTo; only 1: split; only 1: intros ?; only 1: destruct H; only 1: exists x; only 1: auto; only 1: intros ?; only 1: destruct H; only 1: apply @InA_eqk_eqke in H; only 1: destruct H; only 1: destruct x0; only 1: destruct H; only 1: compute in H; only 1: exists e; only 1: rewrite H; only 1: easy).	0.067502	17
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.In_alt'	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.In_alt2	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.In_nil	120	0.0	synth with cache (only 1: rewrite @In_alt2; only 1: apply Exists_nil).	0.025779	2
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.In_cons	120	0.0.0.0	synth with cache (only 1: rewrite @In_alt2; only 1: rewrite @In_alt2; only 1: rewrite Exists_cons; only 1: intuition).	0.051062	4
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.MapsTo_compat	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold MapsTo; only 1: rewrite H; only 1: rewrite H0; only 1: rewrite H1; only 1: intuition).	0.064301	14
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.In_compat	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.MapsTo_eq	120	0.0.0	synth with cache (only 1: intros ?; only 1: intropattern subst <- H; only 1: easy).	0.022046	3
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.In_eq	120	0.0.0	synth with cache (only 1: intros ?; only 1: intropattern subst <- H; only 1: easy).	0.020147	3
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.In_inv	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct H; only 1: red in H; only 1: rewrite InA_cons in H; only 1: rewrite @eqke_def in H; only 1: intuition; only 1: right; only 1: exists x; only 1: easy).	0.033079	9
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersAlt.Update_OT.lt_strorder	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.In_inv_2	120	0.0.0	synth with cache (only 1: rewrite InA_cons; only 1: rewrite @eqk_def; only 1: intuition).	0.025307	3
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersAlt.Update_OT.lt_compat	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersAlt.Update_OT.compare_spec	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold compare; only 1: destruct O.compare; only 1: auto; only 1: auto; only 1: auto).	0.064364	6
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.In_inv_3	120	0.0.0.0.0	synth with cache (only 1: rewrite InA_cons; only 1: destruct 1; only 1: destruct 1; only 1: eauto with *; only 1: trivial).	0.049570	5
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersAlt.Backport_OT.lt_not_eq	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersAlt.Backport_OT.lt_trans	120	0	synth with cache (only 1: apply O.lt_strorder).	0.012143	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.PairDecidableType.eq_dec	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersAlt.Backport_OT.compare	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersAlt.OT_from_Alt.eq_equiv	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersAlt.OT_from_Alt.lt_strorder	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersAlt.OT_from_Alt.lt_eq	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersAlt.OT_from_Alt.eq_lt	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.PairUsualDecidableType.eq_dec	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersAlt.OT_from_Alt.lt_compat	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersAlt.OT_from_Alt.compare_spec	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersAlt.OT_from_Alt.eq_dec	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold eq; only 1: case O.compare; only 1: left; only 1: auto; only 1: right; only 1: discriminate; only 1: right; only 1: discriminate).	0.016293	9
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersAlt.OT_to_Alt.compare_sym	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersAlt.OT_to_Alt.compare_Eq	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersAlt.OT_to_Alt.compare_Lt	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersAlt.OT_to_Alt.compare_Gt	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite compare_sym; only 1: rewrite CompOpp_iff; only 1: apply compare_Lt).	0.014790	5
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersAlt.OT_to_Alt.compare_trans	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct c; only 1: unfold compare; only 1: rewrite compare_Eq; only 1: rewrite compare_Eq; only 1: rewrite compare_Eq; only 1: transitivity y; only 1: auto; only 1: auto; only 1: unfold compare; only 1: rewrite compare_Lt; only 1: rewrite compare_Lt; only 1: rewrite compare_Lt; only 1: transitivity y; only 1: auto; only 1: auto; only 1: unfold compare; only 1: rewrite compare_Gt; only 1: rewrite compare_Gt; only 1: rewrite compare_Gt; only 1: transitivity y; only 1: auto; only 1: auto).	0.089381	26
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.eq_refl	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.eq_sym	120	0.0.0.0.0.0.0.0	synth with cache (only 1: unfold eq; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite compare_sym; only 1: rewrite H; only 1: simpl; only 1: auto).	0.018302	8
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.lt_not_eq	120	0.0.0.0.0	synth with cache (only 1: unfold eq; only 1: unfold lt; only 1: intros; only 1: rewrite H; only 1: discriminate).	0.015468	5
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.compare	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.eq_dec	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold eq; only 1: case O.compare; only 1: left; only 1: auto; only 1: right; only 1: discriminate; only 1: right; only 1: discriminate).	0.018196	9
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeAlt.OrderedType_to_Alt.compare_sym	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: unfold compare; only 1: destruct O.compare; only 1: elim_comp; only 1: auto; only 1: elim_comp; only 1: simpl; only 1: auto; only 1: elim_comp; only 1: auto).	0.037143	11
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeAlt.OrderedType_to_Alt.compare_trans	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct c; only 1: unfold compare; only 1: destruct O.compare; only 1: intros; only 1: discriminate; only 1: intros; only 1: destruct O.compare; only 1: discriminate; only 1: elim_comp; only 1: auto; only 1: discriminate; only 1: intros; only 1: discriminate; only 1: unfold compare; only 1: destruct O.compare; only 1: intros; only 1: destruct O.compare; only 1: elim_comp; only 1: auto; only 1: discriminate; only 1: discriminate; only 1: intros; only 1: discriminate; only 1: intros; only 1: discriminate; only 1: unfold compare; only 1: destruct O.compare; only 1: intros; only 1: discriminate; only 1: intros; only 1: discriminate; only 1: intros; only 1: destruct O.compare; only 1: discriminate; only 1: discriminate; only 1: elim_comp; only 1: auto).	0.170593	41
coq-tactician-stdlib.8.11.dev	Coq.Classes.SetoidClass.setoid_refl	120
coq-tactician-stdlib.8.11.dev	Coq.Classes.SetoidClass.setoid_sym	120	0	synth with cache (only 1: typeclasses eauto).	0.009824	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.SetoidClass.setoid_trans	120	0	synth with cache (only 1: typeclasses eauto).	0.011809	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.SetoidClass.nequiv_equiv_trans	120
coq-tactician-stdlib.8.11.dev	Coq.Classes.SetoidClass.equiv_nequiv_trans	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Image.Image.Im_def	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply Im_intro with (x := x); only 1: auto with sets; only 1: auto with sets).	0.016310	7
coq-tactician-stdlib.8.11.dev	Coq.Sets.Image.Image.Im_add	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Image.Image.image_empty	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros ?; only 1: intros ?; only 1: elim H; only 1: intros ?; only 1: intros ?; only 1: elim H0; only 1: auto with sets).	0.020771	11
coq-tactician-stdlib.8.11.dev	Coq.Sets.Image.Image.finite_image	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: elim H; only 1: rewrite image_empty; only 1: auto with sets; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: clear H X; only 1: rewrite Im_add; only 1: apply Add_preserves_Finite; only 1: auto with sets).	0.024322	15
coq-tactician-stdlib.8.11.dev	Coq.Sets.Image.Image.Im_inv	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: elim H; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite H1; only 1: exists x; only 1: auto with sets).	0.025580	12
coq-tactician-stdlib.8.11.dev	Coq.Sets.Image.Image.not_injective_elim	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Image.Image.cardinal_Im_intro	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply finite_cardinal; only 1: apply finite_image; only 1: apply cardinal_finite with n; only 1: trivial with sets).	0.013791	5
coq-tactician-stdlib.8.11.dev	Coq.Sets.Image.Image.In_Image_elim	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Image.Image.injective_preserves_cardinal	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Image.Image.cardinal_decreases	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Image.Image.Pigeonhole	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Image.Image.Pigeonhole_principle	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply not_injective_elim; only 1: apply Pigeonhole with A n n'; only 1: trivial with sets; only 1: trivial with sets; only 1: trivial with sets).	0.016774	6
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.MOT_to_OT.eq_dec	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.eq_equiv	120	0.0.0.0	synth with cache (only 1: split; only 1: exact eq_refl; only 1: exact eq_sym; only 1: exact eq_trans).	0.011407	4
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.lt_antirefl	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.lt_strorder	120	0.0.0	synth with cache (only 1: split; only 1: exact lt_antirefl; only 1: exact lt_trans).	0.012362	3
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.lt_eq	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.eq_lt	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.lt_compat	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: apply @proper_sym_impl_iff_2; only 1: exact eq_sym; only 1: exact eq_sym; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply eq_lt with x; only 1: auto with ordered_type; only 1: apply lt_eq with x0; only 1: auto; only 1: auto).	0.021203	15
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.lt_total	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.IsTO.le_lteq	120	0	synth with cache (only 1: reflexivity).	0.010956	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.le_eq	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.eq_le	120	0	synth with cache (only 1: order).	0.012589	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.neq_eq	120	0	synth with cache (only 1: order).	0.015288	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.eq_neq	120	0	synth with cache (only 1: order).	0.014714	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.le_lt_trans	120	0	synth with cache (only 1: order).	0.013393	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.lt_le_trans	120	0	synth with cache (only 1: order).	0.013328	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.le_neq	120	0	synth with cache (only 1: order).	0.013199	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.le_trans	120	0	synth with cache (only 1: order).	0.013647	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.le_antisym	120	0	synth with cache (only 1: order).	0.014884	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.neq_sym	120	0	synth with cache (only 1: order).	0.016425	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.lt_le	120	0	synth with cache (only 1: order).	0.013885	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.gt_not_eq	120	0	synth with cache (only 1: order).	0.014328	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.eq_not_lt	120	0	synth with cache (only 1: order).	0.014709	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.eq_not_gt	120	0	synth with cache (only 1: order).	0.049713	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.lt_not_gt	120	0	synth with cache (only 1: order).	0.050393	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.elim_compare_eq	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: case compare; only 1: intros ?; only 1: exfalso; only 1: order; only 1: intros ?; only 1: exists e; only 1: auto; only 1: intros ?; only 1: exfalso; only 1: order).	0.031450	11
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.elim_compare_lt	120	0.0.0.1.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: case compare; only 1: intros ?; only 1: exists l; only 1: auto; only 1: intros ?; only 1: exfalso; only 1: order; only 1: intros ?; only 1: exfalso; only 1: order).	0.034122	12
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.elim_compare_gt	120	0.0.0.1.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: case compare; only 1: intros ?; only 1: exfalso; only 1: order; only 1: intros ?; only 1: exfalso; only 1: order; only 1: intros ?; only 1: exists l; only 1: auto).	0.034125	12
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.lt_dec	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.eqb_alt	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.In_eq	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.ListIn_In	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Inf_lt	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Inf_eq	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Sort_Inf_In	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.ListIn_Inf	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.In_Inf	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Inf_alt	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Sort_NoDup	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_eqk	120	0.0.0	synth with cache (only 1: unfold eqk; only 1: unfold eqke; only 1: intuition).	0.020402	3
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_right_r	120	0	synth with cache (only 1: auto).	0.014286	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_right_l	120	0	synth with cache (only 1: auto).	0.013281	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_refl	120	0	synth with cache (only 1: auto with ordered_type).	0.013206	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_refl	120	0	synth with cache (only 1: auto with ordered_type).	0.013185	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_sym	120	0	synth with cache (only 1: auto with ordered_type).	0.013861	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_sym	120	0.0	synth with cache (only 1: unfold eqke; only 1: intuition).	0.024481	2
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_trans	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_trans	120	0.0.0.0	synth with cache (only 1: unfold eqke; only 1: intuition; only 1: eauto with ordered_type; only 1: congruence).	0.040649	4
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_trans	120	0	synth with cache (only 1: eauto with ordered_type).	0.020138	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_not_eqk	120	0.0.0	synth with cache (only 1: unfold eqk; only 1: unfold ltk; only 1: auto with ordered_type).	0.018363	3
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_not_eqke	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_equiv	120	0.0.0.0	synth with cache (only 1: constructor; only 1: eauto with ordered_type; only 1: eauto with ordered_type; only 1: eauto with ordered_type).	0.019942	4
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_equiv	120	0.0.0.0	synth with cache (only 1: split; only 1: eauto with ordered_type; only 1: eauto with ordered_type; only 1: eauto with ordered_type).	0.034440	4
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidPermutation.Permutation.Equivalence_instance_0	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: constructor; only 1: intros ?; only 1: induction x; only 1: constructor; only 1: intuition; only 1: intros ?; only 1: intros ?; only 1: induction 1; only 1: constructor; only 1: apply permA_skip; only 1: intuition; only 1: intuition; only 1: eauto; only 1: eauto; only 1: exact permA_trans).	0.029202	15
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_strorder	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_cons	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply permA_skip; only 1: easy; only 1: easy).	0.016532	9
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_app_head	120	0.0.0.0.0.0	synth with cache (only 1: induction l; only 1: trivial; only 1: intros; only 1: apply permA_skip; only 1: intuition; only 1: intuition).	0.021618	6
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_compat	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct x; only 1: intros ?; only 1: destruct y; only 1: intros ?; only 1: intros ?; only 1: destruct x; only 1: intros ?; only 1: destruct y; only 1: intros ?; only 1: compute; only 1: compute in H; only 1: compute in H0; only 1: rewrite H; only 1: rewrite H0; only 1: auto).	0.129644	16
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_app	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_app_tail	120	0.0.0	synth with cache (only 1: intros ?; only 1: rewrite H; only 1: easy).	0.015268	3
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_cons_append	120	0.0.0.0.0	synth with cache (only 1: induction l; only 1: easy; only 1: simpl; only 1: rewrite <- IHl; only 1: intuition).	0.025394	5
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_compat'	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct x; only 1: intros ?; only 1: destruct y; only 1: intros ?; only 1: destruct H; only 1: intros ?; only 1: destruct x; only 1: intros ?; only 1: destruct y; only 1: intros ?; only 1: destruct H1; only 1: clear H2; only 1: clear H0; only 1: compute; only 1: compute in H; only 1: compute in H1; only 1: rewrite H; only 1: rewrite H1; only 1: auto).	0.079311	20
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_app_comm	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction l₁; only 1: rewrite app_nil_r; only 1: easy; only 1: rewrite <- app_comm_cons; only 1: rewrite IHl₁; only 1: rewrite app_comm_cons; only 1: rewrite PermutationA_cons_append; only 1: rewrite <- app_assoc; only 1: easy).	0.028261	9
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_not_ltk	120	0.0.0	synth with cache (only 1: unfold eqk; only 1: unfold ltk; only 1: auto with ordered_type).	0.016719	3
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_cons_app	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite H; only 1: rewrite app_comm_cons; only 1: rewrite PermutationA_cons_append; only 1: rewrite <- app_assoc; only 1: easy).	0.025582	6
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_eqk	120	0	synth with cache (only 1: eauto with ordered_type).	0.016879	1
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_middle	120	0.0	synth with cache (only 1: apply PermutationA_cons_app; only 1: easy).	0.014177	2
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_ltk	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct e; only 1: intros ?; only 1: destruct e'; only 1: intros ?; only 1: destruct e''; only 1: unfold ltk; only 1: unfold eqk; only 1: simpl; only 1: eauto with ordered_type).	0.027265	10
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_equivlistA	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.InA_eqke_eqk	120	0.0.0.0	synth with cache (only 1: unfold eqke; only 1: induction 1; only 1: intuition; only 1: intuition).	0.026886	4
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidPermutation.Permutation.NoDupA_equivlistA_PermutationA	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.In_alt	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.MapsTo_eq	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidPermutation.Permutation.Permutation_eqlistA_commute	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.In_eq	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_decompose	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.Inf_eq	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidPermutation.Permutation.Permutation_PermutationA	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidPermutation.Permutation.eqlistA_PermutationA	120	0.0.0.0.0	synth with cache (only 1: induction 1; only 1: constructor; only 1: constructor; only 1: easy; only 1: easy).	0.014249	5
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.Inf_lt	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidPermutation.Permutation.NoDupA_equivlistA_decompose	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply PermutationA_decompose; only 1: apply NoDupA_equivlistA_PermutationA; only 1: easy; only 1: easy; only 1: easy).	0.019021	6
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_Inf_In	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_Inf_NotIn	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_NoDupA	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_preserves_NoDupA	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction 1; only 1: trivial; only 1: inversion_clear 1; only 1: constructor; only 1: apply PermutationA_equivlistA in H0; only 1: contradict H2; only 1: rewrite H; only 1: rewrite H0; only 1: easy; only 1: auto; only 1: inversion_clear 1; only 1: inversion_clear H1; only 1: constructor; only 1: contradict H; only 1: inversion_clear H; only 1: elim H0; only 1: constructor; only 1: easy; only 1: trivial; only 1: constructor; only 1: contradict H0; only 1: apply InA_cons_tl; only 1: easy; only 1: trivial; only 1: eauto).	0.129079	25
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_In_cons_1	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_In_cons_2	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_In_cons_3	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.In_inv	120	0.0.0.0.0.0	synth with cache (only 1: inversion 1; only 1: inversion_clear H0; only 1: destruct H1; only 1: simpl in *; only 1: intuition; only 1: eauto with ordered_type).	0.134319	6
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.In_inv_2	120	0.0.0.0.0	synth with cache (only 1: inversion_clear 1; only 1: compute in H0; only 1: intuition; only 1: compute in H0; only 1: intuition).	0.035325	5
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.In_inv_3	120	0.0.0.0.0	synth with cache (only 1: inversion_clear 1; only 1: compute in H0; only 1: intuition; only 1: compute in H0; only 1: intuition).	0.039299	5
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationPairs.RelCompFun_Instances.RelCompFun_Reflexive	120	0	synth with cache (only 1: firstorder).	0.011279	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationPairs.RelCompFun_Instances.RelCompFun_Symmetric	120	0	synth with cache (only 1: firstorder).	0.013249	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationPairs.RelCompFun_Instances.RelCompFun_Transitive	120	0	synth with cache (only 1: firstorder).	0.034258	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationPairs.RelCompFun_Instances.RelCompFun_Irreflexive	120	0	synth with cache (only 1: firstorder).	0.009707	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationPairs.RelProd_Instances.RelProd_Reflexive	120	0	synth with cache (only 1: firstorder).	0.011182	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationPairs.RelProd_Instances.RelProd_Symmetric	120	0	synth with cache (only 1: firstorder).	0.019839	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationPairs.RelProd_Instances.RelProd_Transitive	120
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationPairs.RelProd_Instances.FstRel_ProdRel	120	0	synth with cache (only 1: firstorder).	0.016366	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationPairs.RelProd_Instances.SndRel_ProdRel	120	0	synth with cache (only 1: firstorder).	0.015609	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationPairs.RelProd_Instances.FstRel_sub	120	0	synth with cache (only 1: firstorder).	0.014139	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationPairs.RelProd_Instances.SndRel_sub	120	0	synth with cache (only 1: firstorder).	0.065374	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationPairs.RelProd_Instances.pair_compat	120	0	synth with cache (only 1: firstorder).	0.011617	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationPairs.RelProd_Instances.fst_compat	120
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationPairs.RelProd_Instances.snd_compat	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct x; only 1: intros ?; only 1: destruct y; only 1: intros ?; only 1: destruct H; only 1: compute in *; only 1: auto).	0.022752	8
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationPairs.RelProd_Instances.RelCompFun_compat	120	0.0	synth with cache (only 1: unfold RelCompFun; only 1: firstorder).	0.017718	2
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.eqke_eqk	120	0.0.0	synth with cache (only 1: unfold eqk; only 1: unfold eqke; only 1: intuition).	0.017679	3
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.eqk_refl	120	0	synth with cache (only 1: auto).	0.011326	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.eqke_refl	120	0	synth with cache (only 1: auto).	0.011527	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.eqk_sym	120	0	synth with cache (only 1: auto).	0.011034	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.eqke_sym	120	0.0	synth with cache (only 1: unfold eqke; only 1: intuition).	0.020444	2
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.eqk_trans	120	0	synth with cache (only 1: eauto).	0.012300	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.eqke_trans	120	0.0.0.0	synth with cache (only 1: unfold eqke; only 1: intuition; only 1: eauto; only 1: congruence).	0.035956	4
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.eqk_equiv	120	0.0.0.0	synth with cache (only 1: split; only 1: eauto; only 1: eauto; only 1: eauto).	0.017549	4
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.eqke_equiv	120	0.0.0.0	synth with cache (only 1: split; only 1: eauto; only 1: eauto; only 1: eauto).	0.027309	4
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.InA_eqke_eqk	120	0.0.0.0	synth with cache (only 1: unfold eqke; only 1: induction 1; only 1: intuition; only 1: intuition).	0.024493	4
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.InA_eqk	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply InA_eqA with p; only 1: auto using eqk_equiv; only 1: auto using eqk_equiv; only 1: auto using eqk_equiv).	0.017777	5
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.In_alt	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: firstorder; only 1: exists x; only 1: auto; only 1: induction H; only 1: destruct y; only 1: exists e; only 1: auto; only 1: destruct IHInA; only 1: exists x0; only 1: auto).	0.028252	10
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.MapsTo_eq	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.In_eq	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.In_inv	120	0.0.0.0.0.0	synth with cache (only 1: inversion 1; only 1: inversion_clear H0; only 1: destruct H1; only 1: simpl in *; only 1: intuition; only 1: eauto).	0.035306	6
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.In_inv_2	120	0.0.0.0.0	synth with cache (only 1: inversion_clear 1; only 1: compute in H0; only 1: intuition; only 1: compute in H0; only 1: intuition).	0.038711	5
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.In_inv_3	120	0.0.0.0.0	synth with cache (only 1: inversion_clear 1; only 1: compute in H0; only 1: intuition; only 1: compute in H0; only 1: intuition).	0.043167	5
coq-tactician-stdlib.8.11.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.finite_cardinal	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.cardinal_finite	120	0.0.0	synth with cache (only 1: induction 1; only 1: auto with sets; only 1: auto with sets).	0.076618	3
coq-tactician-stdlib.8.11.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.Add_preserves_Finite	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.Singleton_is_finite	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.Union_preserves_Finite	120	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: induction H; only 1: rewrite Empty_set_zero; only 1: trivial; only 1: intros; only 1: rewrite Union_commutative; only 1: rewrite <- Union_add; only 1: rewrite Union_commutative; only 1: apply Add_preserves_Finite; only 1: apply IHFinite; only 1: assumption).	0.021292	13
coq-tactician-stdlib.8.11.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.Finite_downward_closed	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.Intersection_preserves_finite	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply Finite_downward_closed with A; only 1: auto with sets; only 1: auto with sets).	0.013439	6
coq-tactician-stdlib.8.11.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.cardinalO_empty	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.inh_card_gt_O	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.card_soustr_1	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.eval_f_morph	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.cardinal_is_functional	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.cardinal_Empty	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.cardinal_unicity	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply cardinal_is_functional with X X; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets).	0.015038	5
coq-tactician-stdlib.8.11.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.card_Add_gen	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.map_simpl	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_X_inv	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.if_same	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_cnf_tt_cnf_ff	120	0	synth with cache (only 1: reflexivity).	0.010148	1
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_cnf_ff_cnf_ff	120	0	synth with cache (only 1: reflexivity).	0.008516	1
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_cnf_tt_inv	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_cnf_ff_inv	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.if_cnf_tt	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.incl_st_card_lt	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.or_cnf_opt_cnf_ff	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.incl_card_le	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.abs_and_pol	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.abs_or_pol	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.xcnf_true_mk_arrow_l	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.or_cnf_opt_cnf_ff_r	120	0.0.0.0.0.0	synth with cache (only 1: unfold or_cnf_opt; only 1: intros; only 1: rewrite is_cnf_tt_cnf_ff; only 1: rewrite orb_comm; only 1: simpl; only 1: apply if_cnf_tt).	0.016230	6
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.xcnf_true_mk_arrow_r	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.G_aux	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.Generalized_induction_on_finite_sets	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.abst_form_correct	120
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Mergesort.Sort.Sorted_merge	120
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Mergesort.Sort.Permuted_merge	120
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Mergesort.Sort.Sorted_merge_list_to_stack	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.radd_term_term	120
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Mergesort.Sort.Permuted_merge_list_to_stack	120
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Mergesort.Sort.Sorted_merge_stack	120
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Mergesort.Sort.Permuted_merge_stack	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.radd_term_term'	120
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Mergesort.Sort.Sorted_iter_merge	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InA_altdef	120	0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: induction 1; only 1: auto; only 1: auto; only 1: induction 1; only 1: auto; only 1: auto).	0.017536	7
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.xror_clause_clause	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InA_cons	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.ror_clause_clause	120
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Mergesort.Sort.Permuted_iter_merge	120
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Mergesort.Sort.Sorted_sort	120	0.0.0	synth with cache (only 1: intros ?; only 1: apply Sorted_iter_merge; only 1: constructor).	0.014323	3
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InA_nil	120	0.0	synth with cache (only 1: intuition; only 1: invlist InA).	0.026298	2
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.ror_cnf_cnf	120
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Mergesort.Sort.LocallySorted_sort	120	0.0.0.0	synth with cache (only 1: intros ?; only 1: eapply Sorted_LocallySorted_iff; only 1: apply Sorted_iter_merge; only 1: constructor).	0.014440	4
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InA_alt	120	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite InA_altdef; only 1: rewrite Exists_exists; only 1: firstorder).	0.022222	4
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Mergesort.Sort.Permuted_sort	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.ror_opt_cnf_cnf	120
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Mergesort.Sort.StronglySorted_sort	120	0	synth with cache (only 1: auto using Sorted_StronglySorted, LocallySorted_sort).	0.012424	1
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.ratom_cnf	120	0.0.0.0.0	synth with cache (only 1: unfold ratom; only 1: intros; only 1: destruct orb; only 1: auto; only 1: auto).	0.019049	5
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Mergesort.NatOrder.leb_total	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.rxcnf_xcnf	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.eval_cnf_app	120	0.0.0.0.0	synth with cache (only 1: unfold eval_cnf; only 1: intros; only 1: rewrite make_conj_rapp; only 1: rewrite make_conj_app; only 1: tauto).	0.037440	5
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.NoDupA_altdef	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.incl_nil	120	0.0.0	synth with cache (only 1: intros ?; only 1: intros; only 1: inversion H).	0.014851	3
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.eqlistA_altdef	120	0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: induction 1; only 1: auto; only 1: auto; only 1: induction 1; only 1: auto; only 1: auto).	0.021198	7
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.eval_cnf_ff	120	0.0.0.0.0	synth with cache (only 1: unfold cnf_ff; only 1: unfold eval_cnf; only 1: unfold eval_clause; only 1: simpl; only 1: tauto).	0.076684	5
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.equivlist_equiv	120	0	synth with cache (only 1: firstorder).	0.020372	1
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.eval_cnf_tt	120	0.0.0.0.0	synth with cache (only 1: unfold cnf_tt; only 1: unfold eval_cnf; only 1: unfold eval_clause; only 1: simpl; only 1: tauto).	0.018716	5
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.eqlistA_equiv	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.eval_cnf_and_opt	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.eqlistA_equivlistA	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InA_compat	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InA_eqA	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite <- H; only 1: auto).	0.027570	7
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.In_InA	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InA_split	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InA_app	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InA_app_iff	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: apply InA_app; only 1: destruct 1; only 1: generalize H; only 1: rewrite InA_alt; only 1: rewrite InA_alt; only 1: destruct 1; only 1: destruct H0; only 1: exists x0; only 1: split; only 1: auto; only 1: apply in_or_app; only 1: auto; only 1: generalize H; only 1: rewrite InA_alt; only 1: rewrite InA_alt; only 1: destruct 1; only 1: destruct H0; only 1: exists x0; only 1: split; only 1: auto; only 1: apply in_or_app; only 1: auto).	0.065515	23
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.add_term_correct	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.no_middle_eval_tt	120	0.0	synth with cache (only 1: unfold eval_tt; only 1: auto).	0.013840	2
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InA_rev	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite InA_alt; only 1: rewrite InA_alt; only 1: split; only 1: intros ?; only 1: destruct H; only 1: exists x; only 1: intuition; only 1: rewrite in_rev; only 1: auto; only 1: intros ?; only 1: destruct H; only 1: exists x; only 1: intuition; only 1: rewrite <- in_rev; only 1: auto).	0.105055	16
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InA_singleton	120	0.0.0	synth with cache (only 1: rewrite InA_cons; only 1: rewrite InA_nil; only 1: tauto).	0.024852	3
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InA_double_head	120	0.0.0	synth with cache (only 1: rewrite InA_cons; only 1: rewrite InA_cons; only 1: tauto).	0.038288	3
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InA_permute_heads	120	0.0.0.0.0	synth with cache (only 1: rewrite InA_cons; only 1: rewrite InA_cons; only 1: rewrite InA_cons; only 1: rewrite InA_cons; only 1: tauto).	0.072666	5
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InA_app_idem	120	0.0	synth with cache (only 1: rewrite InA_app_iff; only 1: tauto).	0.020193	2
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_app	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.or_clause_correct	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_rev	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_split	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_swap	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_singleton	120	0.0.0	synth with cache (only 1: constructor; only 1: inversion 1; only 1: constructor).	0.016319	3
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_cons_proper	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite InA_cons; only 1: rewrite InA_cons; only 1: rewrite H; only 1: rewrite H0; only 1: easy).	0.033671	12
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_app_proper	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite InA_app_iff; only 1: rewrite InA_app_iff; only 1: rewrite H; only 1: rewrite H0; only 1: easy).	0.033322	12
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_cons_nil	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: eapply InA_nil; only 1: eapply H; only 1: eapply InA_cons_hd; only 1: easy).	0.020060	5
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_nil_eq	120	0.0.0.0.0	synth with cache (only 1: destruct l; only 1: trivial; only 1: intros ?; only 1: apply equivlistA_cons_nil in H; only 1: easy).	0.015883	5
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_double_head	120	0.0	synth with cache (only 1: intros ?; only 1: apply InA_double_head).	0.010774	2
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_permute_heads	120	0.0	synth with cache (only 1: intros ?; only 1: apply InA_permute_heads).	0.014066	2
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_app_idem	120	0.0	synth with cache (only 1: intros ?; only 1: apply InA_app_idem).	0.010683	2
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.or_clause_cnf_correct	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.eval_cnf_cons	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold eval_cnf in *; only 1: rewrite make_conj_cons; only 1: unfold eval_clause; only 1: tauto).	0.039840	5
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.eval_cnf_cons_iff	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold eval_cnf in *; only 1: rewrite make_conj_cons; only 1: unfold eval_clause; only 1: tauto).	0.043711	5
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.or_cnf_correct	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.or_cnf_opt_correct	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_NoDupA_split	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.xcnf_correct	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Fold.fold_right_eqlistA	120	0.0.0.0.0.0.0	synth with cache (only 1: induction 1; only 1: simpl; only 1: auto with relations; only 1: simpl; only 1: apply Comp; only 1: auto; only 1: auto).	0.018185	7
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.cnf_checker_sound	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.tauto_checker_sound	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Fold.Fold_With_Restriction.ForallOrdPairs_inclA	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Fold.Fold_With_Restriction.fold_right_commutes_restr	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Fold.Fold_With_Restriction.fold_right_equivlistA_restr	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Fold.Fold_With_Restriction.fold_right_add_restr	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Fold.fold_right_commutes	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Fold.fold_right_equivlistA	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Fold.fold_right_add	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Fold2.fold_right_eqlistA2	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: induction s; only 1: intros; only 1: inversion heqss'; only 1: subst; only 1: simpl; only 1: assumption; only 1: intros; only 1: inversion heqss'; only 1: subst; only 1: simpl; only 1: apply Comp; only 1: assumption; only 1: apply IHs; only 1: assumption; only 1: assumption).	0.049287	16
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.eval_bf_map	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Fold2.Fold2_With_Restriction.fold_right_commutes_restr2	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Fold2.Fold2_With_Restriction.fold_right_equivlistA_restr2	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Fold2.Fold2_With_Restriction.fold_right_add_restr2	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Fold2.fold_right_commutes2	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Fold2.fold_right_equivlistA2	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.N2Nat.id	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.N2Nat.inj	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.N2Nat.inj_iff	120	0.0.0.1.0	synth with cache (only 1: split; only 1: apply inj; only 1: intros; only 1: subst; only 1: easy).	0.018279	7
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.N2Nat.inj_double	120	0.0.0.0.0	synth with cache (only 1: destruct a; only 1: simpl BinNatDef.N.to_nat; only 1: trivial; only 1: simpl BinNatDef.N.to_nat; only 1: apply Pos2Nat.inj_xO).	0.015081	5
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.N2Nat.inj_succ_double	120	0.0.0.0.0.0.0.0	synth with cache (only 1: destruct a; only 1: simpl BinNatDef.N.to_nat; only 1: trivial; only 1: simpl BinNatDef.N.to_nat; only 1: rewrite Pos.xI_succ_xO; only 1: rewrite Pos2Nat.inj_succ; only 1: rewrite Pos2Nat.inj_xO; only 1: easy).	0.018541	8
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.N2Nat.inj_succ	120	0.0.0.0.0	synth with cache (only 1: destruct a; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply Pos2Nat.inj_succ).	0.012502	5
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.N2Nat.inj_add	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct a; only 1: destruct a'; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: destruct a'; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply Pos2Nat.inj_add).	0.018255	11
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.Power.pow_pos_swap	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction j; only 1: simpl; only 1: rewrite <- mul_assoc; only 1: rewrite <- mul_assoc; only 1: f_equiv; only 1: rewrite IHj; only 1: rewrite mul_assoc; only 1: rewrite IHj; only 1: rewrite mul_assoc; only 1: easy; only 1: simpl; only 1: rewrite <- mul_assoc; only 1: rewrite IHj; only 1: rewrite mul_assoc; only 1: rewrite IHj; only 1: rewrite mul_assoc; only 1: easy; only 1: simpl; only 1: reflexivity).	0.069315	19
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.N2Nat.inj_mul	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct a; only 1: destruct a'; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul; only 1: destruct a'; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul; only 1: simpl; only 1: apply Pos2Nat.inj_mul).	0.022642	11
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.N2Nat.inj_sub	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.Power.pow_pos_succ	120	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction j; only 1: simpl; only 1: rewrite IHj; only 1: rewrite <- mul_assoc; only 1: f_equiv; only 1: rewrite mul_assoc; only 1: rewrite pow_pos_swap; only 1: rewrite mul_assoc; only 1: easy; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: reflexivity).	0.044934	13
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.N2Nat.inj_pred	120	0.0.0	synth with cache (only 1: rewrite <- Nat.sub_1_r; only 1: rewrite N.pred_sub; only 1: apply inj_sub).	0.012673	3
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.N2Nat.inj_div2	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct a; only 1: trivial; only 1: destruct p; only 1: unfold BinNatDef.N.div2; only 1: unfold BinNatDef.N.to_nat; only 1: rewrite Pos2Nat.inj_xI; only 1: rewrite Nat.div2_succ_double; only 1: trivial; only 1: unfold BinNatDef.N.div2; only 1: unfold BinNatDef.N.to_nat; only 1: rewrite Pos2Nat.inj_xO; only 1: rewrite Nat.div2_double; only 1: trivial; only 1: trivial).	0.023010	14
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.N2Nat.inj_compare	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.N2Nat.inj_max	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold BinNatDef.N.max; only 1: rewrite inj_compare; only 1: symmetry; only 1: case Nat.compare_spec; only 1: intros; only 1: apply Nat.max_r; only 1: apply Nat.eq_le_incl; only 1: easy; only 1: intros; only 1: apply Nat.max_r; only 1: apply Nat.lt_le_incl; only 1: easy; only 1: intros; only 1: apply Nat.max_l; only 1: apply Nat.lt_le_incl; only 1: easy).	0.022361	16
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.Power.pow_pos_add	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction i using Pos.peano_ind; only 1: rewrite Pos.add_1_l; only 1: rewrite pow_pos_succ; only 1: easy; only 1: rewrite Pos.add_succ_l; only 1: rewrite pow_pos_succ; only 1: rewrite pow_pos_succ; only 1: rewrite IHi; only 1: rewrite mul_assoc; only 1: easy).	0.036714	10
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.N2Nat.inj_min	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold BinNatDef.N.min; only 1: rewrite inj_compare; only 1: symmetry; only 1: case Nat.compare_spec; only 1: intros; only 1: apply Nat.min_l; only 1: apply Nat.eq_le_incl; only 1: easy; only 1: intros; only 1: apply Nat.min_l; only 1: apply Nat.lt_le_incl; only 1: easy; only 1: intros; only 1: apply Nat.min_r; only 1: apply Nat.lt_le_incl; only 1: easy).	0.023018	16
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.Power.pow_N_pow_N	120	0	synth with cache (only 1: reflexivity).	0.010838	1
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.N2Nat.inj_iter	120	0.0.0	synth with cache (only 1: destruct a; only 1: trivial; only 1: apply Pos2Nat.inj_iter).	0.014172	3
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.Nat2N.id	120	0.0.0.0.0	synth with cache (only 1: induction n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply SuccNat2Pos.id_succ).	0.115119	5
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.DEFINITIONS.MORPHISM.get_sign_None_th	120	0.0.0	synth with cache (only 1: constructor; only 1: intros; only 1: discriminate).	0.015492	3
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.Nat2N.inj	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.Nat2N.inj_iff	120	0.0.0.1.0	synth with cache (only 1: split; only 1: apply inj; only 1: intros; only 1: subst; only 1: easy).	0.014670	7
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.Nat2N.inj_double	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.DEFINITIONS.IDmorph	120	0.0.0.0.0.0.0.0	synth with cache (only 1: apply mkmorph; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.020439	8
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.Nat2N.inj_succ_double	120	0	synth with cache (only 1: nat2N).	0.024842	1
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.Nat2N.inj_succ	120	0	synth with cache (only 1: nat2N).	0.021163	1
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.Nat2N.inj_pred	120	0	synth with cache (only 1: nat2N).	0.024842	1
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.Nat2N.inj_add	120	0	synth with cache (only 1: nat2N).	0.060733	1
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.Nat2N.inj_sub	120	0	synth with cache (only 1: nat2N).	0.025584	1
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.Nat2N.inj_mul	120	0	synth with cache (only 1: nat2N).	0.027591	1
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.Nat2N.inj_div2	120	0	synth with cache (only 1: nat2N).	0.024157	1
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.Nat2N.inj_compare	120	0.0.0.0	synth with cache (only 1: rewrite N2Nat.inj_compare; only 1: rewrite id; only 1: rewrite id; only 1: easy).	0.016096	4
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.Eqsth	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.Nat2N.inj_min	120	0	synth with cache (only 1: nat2N).	0.027739	1
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.Eq_s_ext	120	0.0.0	synth with cache (only 1: constructor; only 1: solve_proper; only 1: solve_proper).	0.053393	3
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.Nat2N.inj_max	120	0	synth with cache (only 1: nat2N).	0.023994	1
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.Nat2N.inj_iter	120	0.0.0	synth with cache (only 1: rewrite N2Nat.inj_iter; only 1: rewrite id; only 1: easy).	0.015671	3
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.Eq_ext	120	0.0.0.0	synth with cache (only 1: constructor; only 1: solve_proper; only 1: solve_proper; only 1: solve_proper).	0.062437	4
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.radd_ext1_Proper	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.rmul_ext1_Proper	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRopp_ext	120	0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: exact H).	0.013271	4
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SReqe_Reqe	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRopp_mul_l	120	0	synth with cache (only 1: reflexivity).	0.015018	1
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRopp_add	120	0	synth with cache (only 1: reflexivity).	0.014828	1
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRsub_def	120	0	synth with cache (only 1: reflexivity).	0.013925	1
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRIDmorph	120	0.0.0.0.0.0.0.0	synth with cache (only 1: apply mkmorph; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.022931	8
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRmorph_Rmorph	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: case Smorph; only 1: constructor; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.036294	9
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.radd_ext2_Proper	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.rmul_ext2_Proper	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ropp_ext2_Proper	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Rmul_0_l	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Ropp_mul_l	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.sincl_add_x	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Ropp_add	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.incl_soustr_in	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: red; only 1: intros ?; only 1: intros ?; only 1: elim H0; only 1: auto with sets).	0.019340	8
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.incl_soustr	120	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: red; only 1: intros ?; only 1: intros ?; only 1: elim H0; only 1: intros ?; only 1: intros ?; only 1: apply Subtract_intro; only 1: auto with sets; only 1: auto with sets).	0.024110	13
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Ropp_opp	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.incl_soustr_add_l	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: red; only 1: intros ?; only 1: intros ?; only 1: elim H; only 1: intros ?; only 1: elim H0; only 1: auto with sets; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: elim H2; only 1: auto with sets).	0.027883	14
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.cadd_ext_Proper	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.cmul_ext_Proper	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.incl_soustr_add_r	120	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: red; only 1: intros ?; only 1: intros ?; only 1: apply Subtract_intro; only 1: auto with sets; only 1: red; only 1: intros ?; only 1: apply H; only 1: rewrite H1; only 1: auto with sets).	0.022514	13
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.copp_ext_Proper	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.phi_ext1_Proper	120	0	synth with cache (only 1: exact phi_ext).	0.027600	1
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.add_soustr_2	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.add_soustr_1	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Smorph_opp	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.add_soustr_xy	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.incl_st_add_soustr	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Smorph_sub	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.Sub_Add_new	120	0	synth with cache (only 1: auto using incl_soustr_add_l with sets).	0.020543	1
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARth_SRth	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: elim ARth; only 1: intros; only 1: constructor; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial).	0.073393	11
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.Simplify_add	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARsub_ext	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.Included_Add	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARadd_0_r	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARmul_1_r	120	0	synth with cache (only 1: mrewrite).	0.022421	1
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARmul_0_r	120	0	synth with cache (only 1: mrewrite).	0.022964	1
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.setcover_inv	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARdistr_r	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.Add_covers	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARadd_assoc1	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.covers_Add	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARadd_assoc2	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.covers_is_Add	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: split; only 1: intros ?; only 1: apply covers_Add with (A := A); only 1: auto with sets; only 1: auto with sets; only 1: auto with sets; only 1: intros ?; only 1: elim H1; only 1: intros ?; only 1: intros ?; only 1: elim H2; only 1: intros ?; only 1: intros ?; only 1: rewrite H3; only 1: clear H2; only 1: apply Add_covers; only 1: intuition; only 1: intuition; only 1: intuition).	0.063997	24
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARmul_assoc1	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.Singleton_atomic	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite <- Empty_set_zero'; only 1: apply Add_covers; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets).	0.017263	8
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARmul_assoc2	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.less_than_singleton	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARopp_mul_r	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARopp_zero	120
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation.Permutation_nil	120
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation.Permutation_nil_cons	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply Permutation_nil in H; only 1: discriminate).	0.012802	5
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation.Permutation_refl	120
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation.Permutation_sym	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: induction H; only 1: auto; only 1: auto; only 1: auto; only 1: apply perm_trans with (l' := l'); only 1: assumption; only 1: assumption).	0.017869	10
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation.Permutation_trans	120	0	synth with cache (only 1: exact perm_trans).	0.011009	1
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_cons	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: subst; only 1: auto using perm_skip).	0.016660	8
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_in	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: induction H; only 1: simpl; only 1: tauto; only 1: simpl; only 1: tauto; only 1: simpl; only 1: tauto; only 1: tauto).	0.045228	12
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_in'	120
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_app_tail	120
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_app_head	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: induction l; only 1: auto; only 1: rewrite <- app_comm_cons; only 1: rewrite <- app_comm_cons; only 1: constructor; only 1: assumption).	0.021158	10
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_app	120
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_app'	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply Permutation_app; only 1: easy; only 1: easy).	0.017134	9
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_add_inside	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply Permutation_app; only 1: auto; only 1: auto).	0.015807	4
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_cons_append	120
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_app_comm	120
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_cons_app	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite H; only 1: rewrite app_comm_cons; only 1: rewrite Permutation_cons_append; only 1: rewrite <- app_assoc; only 1: easy).	0.069359	10
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_Add	120	0.0.0.0.0	synth with cache (only 1: induction 1; only 1: trivial; only 1: rewrite perm_swap; only 1: apply perm_skip; only 1: easy).	0.017827	5
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_middle	120	0	synth with cache (only 1: auto).	0.012384	1
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_rev	120
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_rev'	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite <- Permutation_rev; only 1: rewrite <- Permutation_rev; only 1: easy).	0.017780	6
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_length	120
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_length'	120	0	synth with cache (only 1: exact Permutation_length).	0.010737	1
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_ind_bis	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: induction 1; only 1: auto; only 1: auto; only 1: apply H1; only 1: auto; only 1: induction l; only 1: auto; only 1: auto; only 1: eauto).	0.080204	14
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_nil_app_cons	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply Permutation_nil in H; only 1: destruct l; only 1: discriminate; only 1: discriminate).	0.017613	8
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_Add_inv	120
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_app_inv	120
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_cons_inv	120
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_cons_app_inv	120
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_app_inv_l	120
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorEq.BEQ.eqb_nat_eq	120
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorEq.BEQ.eqb_eq	120
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorEq.BEQ.eq_dec	120
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorEq.CAST.cast	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndiv_def.Pdiv_eucl_remainder	120	0.0	synth with cache (only 1: apply N.pos_div_eucl_remainder; only 1: easy).	0.020804	2
coq-tactician-stdlib.8.11.dev	Coq.Sets.Classical_sets.Ensembles_classical.not_included_empty_Inhabited	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Classical_sets.Ensembles_classical.not_empty_Inhabited	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply not_included_empty_Inhabited; only 1: red; only 1: auto with sets).	0.016111	4
coq-tactician-stdlib.8.11.dev	Coq.Sets.Classical_sets.Ensembles_classical.Inhabited_Setminus	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Classical_sets.Ensembles_classical.Strict_super_set_contains_new_element	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Classical_sets.Ensembles_classical.Subtract_intro	120	0.0	synth with cache (only 1: unfold Subtract at 1; only 1: auto with sets).	0.014179	2
coq-tactician-stdlib.8.11.dev	Coq.Sets.Classical_sets.Ensembles_classical.Subtract_inv	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: elim H; only 1: auto with sets).	0.017937	6
coq-tactician-stdlib.8.11.dev	Coq.Sets.Classical_sets.Ensembles_classical.Included_Strict_Included	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Classical_sets.Ensembles_classical.Strict_Included_inv	120	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: red in H; only 1: split; only 1: tauto; only 1: elim H; only 1: intros ?; only 1: intros ?; only 1: clear H; only 1: apply Strict_super_set_contains_new_element; only 1: auto with sets; only 1: auto with sets).	0.021237	13
coq-tactician-stdlib.8.11.dev	Coq.Sets.Classical_sets.Ensembles_classical.not_SIncl_empty	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Classical_sets.Ensembles_classical.Complement_Complement	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Complement; only 1: intros; only 1: apply Extensionality_Ensembles; only 1: red; only 1: split; only 1: red; only 1: intros; only 1: apply NNPP; only 1: auto with sets; only 1: auto with sets).	0.023495	10
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalUniqueChoice.unique_choice	120	0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply dependent_unique_choice).	0.014967	3
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalUniqueChoice.classic_set_in_prop_context	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalUniqueChoice.not_not_classic_set	120	0	synth with cache (only 1: apply classic_set_in_prop_context).	0.264568	1
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorSpec.eta	120	0.0.0	synth with cache (only 1: apply @caseS with (v := v); only 1: intros; only 1: reflexivity).	0.015818	3
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorSpec.eq_nth_iff	120
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorSpec.nth_order_last	120
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorSpec.shiftin_nth	120
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Rtauto.pos_eq_refl	120
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorSpec.shiftin_last	120	0.0.0.0.0	synth with cache (only 1: induction v; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy).	0.014195	5
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorSpec.shiftrepeat_nth	120
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Rtauto.form_eq_refl	120
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorSpec.shiftrepeat_last	120
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorSpec.const_nth	120	0.0.0	synth with cache (only 1: induction p; only 1: easy; only 1: easy).	0.013145	3
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Rtauto.with_env.compose0	120
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Rtauto.with_env.compose1	120
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorSpec.nth_map	120
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Rtauto.with_env.compose2	120
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Rtauto.with_env.compose3	120
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorSpec.nth_map2	120
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Rtauto.with_env.weaken	120
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Rtauto.with_env.project_In	120
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorSpec.fold_left_right_assoc_eq	120
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Rtauto.with_env.project	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply project_In; only 1: apply get_In with p; only 1: assumption).	0.021216	8
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorSpec.to_list_of_list_opp	120	0.0.0.0.0.0	synth with cache (only 1: induction l; only 1: reflexivity; only 1: unfold to_list; only 1: simpl; only 1: f_equal; only 1: easy).	0.028655	6
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorSpec.take_O	120	0	synth with cache (only 1: reflexivity).	0.011122	1
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorSpec.take_idem	120
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorSpec.take_app	120
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorSpec.take_prf_irr	120
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorSpec.uncons_cons	120	0	synth with cache (only 1: reflexivity).	0.009988	1
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorSpec.append_comm_cons	120	0	synth with cache (only 1: reflexivity).	0.011436	1
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorSpec.splitat_append	120
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Rtauto.with_env.interp_proof	120
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorSpec.append_splitat	120
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Rtauto.with_env.Reflect	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.eq_dec	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.discr	120	0.0.0.0.0	synth with cache (only 1: destruct n; only 1: auto; only 1: left; only 1: exists p; only 1: auto).	0.012307	5
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.peano_rect_base	120	0	synth with cache (only 1: reflexivity).	0.008992	1
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.peano_rect_succ	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.peano_rec_base	120	0	synth with cache (only 1: apply peano_rect_base).	0.009296	1
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.peano_rec_succ	120	0	synth with cache (only 1: apply peano_rect_succ).	0.008694	1
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.bi_induction	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply peano_rect; only 1: assumption; only 1: intros; only 1: apply -> H1; only 1: easy).	0.019470	9
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.recursion_wd	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: subst y1; only 1: induction x1 using peano_ind; only 1: trivial; only 1: unfold recursion in *; only 1: rewrite peano_rect_succ; only 1: rewrite peano_rect_succ; only 1: apply H0; only 1: easy; only 1: easy).	0.091443	18
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.recursion_0	120	0	synth with cache (only 1: reflexivity).	0.008843	1
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.recursion_succ	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold recursion; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: induction n using peano_ind; only 1: rewrite peano_rect_succ; only 1: apply H0; only 1: easy; only 1: easy; only 1: rewrite peano_rect_succ in *; only 1: rewrite peano_rect_succ in *; only 1: apply H0; only 1: easy; only 1: easy).	0.035129	14
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Finite_alt	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.one_succ	120	0	synth with cache (only 1: reflexivity).	0.008060	1
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Injective_map_NoDup	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: induction 1; only 1: simpl; only 1: constructor; only 1: simpl; only 1: constructor; only 1: rewrite in_map_iff; only 1: intros ?; only 1: destruct H2; only 1: destruct H2; only 1: apply H in H2; only 1: subst; only 1: easy; only 1: trivial).	0.029891	14
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.two_succ	120	0	synth with cache (only 1: reflexivity).	0.008460	1
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.pred_0	120	0	synth with cache (only 1: reflexivity).	0.007824	1
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.pos_pred_spec	120	0.0.0.0	synth with cache (only 1: destruct p; only 1: easy; only 1: easy; only 1: easy).	0.010265	4
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.succ_pos_spec	120	0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: easy).	0.010873	3
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Injective_list_carac	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.pos_pred_succ	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.succ_pos_pred	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: f_equal; only 1: induction p; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: f_equal; only 1: easy; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.020390	15
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.pred_succ	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: destruct p; only 1: simpl; only 1: f_equal; only 1: induction p; only 1: simpl; only 1: f_equal; only 1: easy; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: auto; only 1: simpl; only 1: trivial; only 1: simpl; only 1: auto).	0.027527	18
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Injective_carac	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.pred_sub	120	0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: destruct p; only 1: easy; only 1: easy; only 1: easy).	0.014154	6
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.succ_0_discr	120	0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: easy).	0.017180	3
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Surjective_list_carac	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.add_0_l	120	0	synth with cache (only 1: reflexivity).	0.009769	1
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.add_succ_l	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Surjective_carac	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.sub_0_r	120	0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: easy).	0.011196	3
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.sub_succ_r	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.mul_0_l	120	0	synth with cache (only 1: reflexivity).	0.009229	1
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Endo_Injective_Surjective	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Finite_Empty_or_not	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct H; only 1: destruct x; only 1: left; only 1: exact H; only 1: right; only 1: exists a; only 1: easy).	0.016952	8
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.mul_succ_l	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Surjective_inverse	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Injective_Surjective_Bijective	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Fin_Finite	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Fin2Restrict.extend_ok	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Fin2Restrict.extend_f2n	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Fin2Restrict.extend_n2f	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Fin2Restrict.restrict_f2n	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Fin2Restrict.restrict_n2f	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Fin2Restrict.extend_surjective	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.eqb_eq	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.ltb_lt	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.leb_le	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Fin2Restrict.extend_injective	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.compare_eq_iff	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.compare_lt_iff	120	0	synth with cache (only 1: reflexivity).	0.011671	1
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Fin2Restrict.restrict_surjective	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.compare_le_iff	120	0	synth with cache (only 1: easy).	0.012836	1
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Fin2Restrict.restrict_injective	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.compare_antisym	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.min_l	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.bInjective_bSurjective	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.min_r	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.max_l	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.max_r	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.bSurjective_bBijective	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.lt_succ_r	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.double_spec	120	0	synth with cache (only 1: reflexivity).	0.013089	1
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.succ_double_spec	120	0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: easy).	0.016405	3
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.double_add	120	0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: destruct m; only 1: easy; only 1: easy; only 1: destruct m; only 1: easy; only 1: easy).	0.018233	7
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.succ_double_add	120	0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: destruct m; only 1: easy; only 1: easy; only 1: destruct m; only 1: easy; only 1: easy).	0.020691	7
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.double_mul	120	0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: destruct m; only 1: easy; only 1: easy; only 1: destruct m; only 1: easy; only 1: easy).	0.042215	7
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.succ_double_mul	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.div2_double	120	0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: easy).	0.017099	3
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.div2_succ_double	120	0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: easy).	0.015439	3
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.double_inj	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.succ_double_inj	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.succ_double_lt	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: destruct m; only 1: intros ?; only 1: easy; only 1: intros ?; only 1: easy; only 1: destruct m; only 1: intros ?; only 1: easy; only 1: intros ?; only 1: unfold lt in *; only 1: simpl in *; only 1: Pos.simpl_compare; only 1: rewrite H; only 1: easy).	0.032337	15
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.double_lt_mono	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: destruct m; only 1: intros ?; only 1: easy; only 1: intros ?; only 1: easy; only 1: destruct m; only 1: intros ?; only 1: easy; only 1: intros ?; only 1: easy).	0.019137	11
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.double_le_mono	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: destruct m; only 1: intros ?; only 1: easy; only 1: intros ?; only 1: easy; only 1: destruct m; only 1: intros ?; only 1: easy; only 1: intros ?; only 1: easy).	0.018836	11
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.succ_double_lt_mono	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: destruct m; only 1: intros ?; only 1: easy; only 1: intros ?; only 1: easy; only 1: destruct m; only 1: intros ?; only 1: easy; only 1: intros ?; only 1: easy).	0.020729	11
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.succ_double_le_mono	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: destruct m; only 1: intros ?; only 1: easy; only 1: intros ?; only 1: easy; only 1: destruct m; only 1: intros ?; only 1: easy; only 1: intros ?; only 1: easy).	0.019657	11
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.compare_0_r	120	0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: easy).	0.023002	3
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.pow_0_r	120	0	synth with cache (only 1: reflexivity).	0.011988	1
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.pow_succ_r	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.pow_neg_r	120	0.0.0	synth with cache (only 1: destruct p; only 1: easy; only 1: easy).	0.020168	3
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.square_spec	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.size_log2	120	0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: destruct 1; only 1: auto; only 1: destruct p; only 1: trivial; only 1: trivial; only 1: trivial).	0.065500	7
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.size_gt	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.size_le	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.log2_spec	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.log2_nonpos	120	0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: intros ?; only 1: reflexivity; only 1: intros ?; only 1: destruct H; only 1: easy).	0.017659	6
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.even_spec	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.odd_spec	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.pos_div_eucl_spec	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.div_eucl_spec	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.div_mod'	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.div_mod	120	0.0.0	synth with cache (only 1: intros ?; only 1: clear H; only 1: apply div_mod').	0.016561	3
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.pos_div_eucl_remainder	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.mod_lt	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.mod_bound_pos	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: clear H; only 1: split; only 1: apply le_0_l; only 1: apply mod_lt; only 1: destruct b; only 1: easy; only 1: easy).	0.025016	9
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.sqrtrem_sqrt	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.sqrtrem_spec	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.sqrt_spec	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.sqrt_neg	120	0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: easy).	0.019742	3
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.ggcd_gcd	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.ggcd_correct_divisors	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.gcd_divide_l	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.gcd_divide_r	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.gcd_greatest	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.gcd_nonneg	120	0	synth with cache (only 1: apply le_0_l).	0.011934	1
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.testbit_even_0	120	0.0.0	synth with cache (only 1: destruct a; only 1: easy; only 1: easy).	0.019225	3
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.testbit_odd_0	120	0.0.0	synth with cache (only 1: destruct a; only 1: easy; only 1: easy).	0.015816	3
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.testbit_succ_r_div2	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.testbit_odd_succ	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite testbit_succ_r_div2; only 1: f_equal; only 1: destruct a; only 1: easy; only 1: easy; only 1: trivial).	0.020402	7
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.testbit_even_succ	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite testbit_succ_r_div2; only 1: f_equal; only 1: destruct a; only 1: easy; only 1: easy; only 1: trivial).	0.054930	7
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.testbit_neg_r	120	0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: easy).	0.022271	3
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.shiftr_succ_r	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.shiftl_succ_r	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.shiftr_spec	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: clear H; only 1: revert a m; only 1: induction n using peano_ind; only 1: intros ?; only 1: intros ?; only 1: rewrite add_0_r; only 1: easy; only 1: intros ?; only 1: intros ?; only 1: rewrite add_comm; only 1: rewrite add_succ_l; only 1: rewrite add_comm; only 1: rewrite <- add_succ_l; only 1: rewrite <- IHn; only 1: rewrite testbit_succ_r_div2; only 1: rewrite shiftr_succ_r; only 1: easy; only 1: apply le_0_l).	0.037784	19
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.shiftl_spec_high	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.shiftl_spec_low	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.div2_spec	120	0	synth with cache (only 1: reflexivity).	0.015566	1
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.pos_lxor_spec	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.lxor_spec	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.pos_lor_spec	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.lor_spec	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.pos_land_spec	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.land_spec	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.pos_ldiff_spec	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_In_dec	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_mem_ind	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_mem_ind2	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_mem_correct1	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_mem_correct2	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_mem_complete1	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_mem_complete2	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_add_intro1	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_add_intro2	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_add_intro	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: auto with datatypes; only 1: auto with datatypes).	0.014820	7
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.ldiff_spec	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.gt_lt_iff	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.gt_lt	120	0	synth with cache (only 1: apply gt_lt_iff).	0.014730	1
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.lt_gt	120	0	synth with cache (only 1: apply gt_lt_iff).	0.084594	1
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_add_elim	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_add_elim2	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_add_not_empty	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_add_iff	120	0.0.0	synth with cache (only 1: split; only 1: apply set_add_elim; only 1: apply set_add_intro).	0.011418	3
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_add_nodup	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction 1; only 1: simpl; only 1: constructor; only 1: tauto; only 1: constructor; only 1: simpl; only 1: destruct Aeq_dec; only 1: intropattern subst <- e; only 1: constructor; only 1: trivial; only 1: trivial; only 1: constructor; only 1: rewrite set_add_iff; only 1: intuition; only 1: trivial).	0.033300	15
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.ge_le_iff	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.ge_le	120	0	synth with cache (only 1: apply ge_le_iff).	0.016967	1
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_remove_1	120	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction l; only 1: intros; only 1: auto; only 1: simpl; only 1: destruct Aeq_dec; only 1: tauto; only 1: intros ?; only 1: destruct H; only 1: rewrite H; only 1: apply in_eq; only 1: apply in_cons; only 1: apply IHl; only 1: assumption).	0.029958	13
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.le_ge	120	0	synth with cache (only 1: apply ge_le_iff).	0.015290	1
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_remove_2	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction l; only 1: intros ?; only 1: simpl; only 1: tauto; only 1: intros ?; only 1: simpl; only 1: inversion_clear H; only 1: destruct Aeq_dec; only 1: intropattern subst <- e; only 1: congruence; only 1: destruct 1; only 1: subst; only 1: auto; only 1: auto).	0.037971	14
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.pos_pred_shiftl_low	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_remove_3	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: easy; only 1: simpl; only 1: destruct Aeq_dec; only 1: intropattern subst <- e; only 1: intuition; only 1: congruence; only 1: simpl; only 1: intuition).	0.067438	10
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.pos_pred_shiftl_high	120
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.pred_div2_up	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct p; only 1: simpl; only 1: destruct p; only 1: simpl; only 1: f_equal; only 1: induction p; only 1: simpl; only 1: f_equal; only 1: easy; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: auto; only 1: simpl; only 1: trivial; only 1: simpl; only 1: auto; only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: auto; only 1: trivial).	0.052690	25
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_remove_iff	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_remove_nodup	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction 1; only 1: simpl; only 1: constructor; only 1: simpl; only 1: destruct Aeq_dec; only 1: intropattern subst <- e; only 1: trivial; only 1: constructor; only 1: rewrite set_remove_iff; only 1: intuition; only 1: trivial; only 1: trivial).	0.030495	12
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_union_intro1	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_union_intro2	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_union_intro	120	0.0.0.0	synth with cache (only 1: intros; only 1: elim H; only 1: auto with datatypes; only 1: auto with datatypes).	0.013593	4
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_union_elim	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_union_iff	120	0.0.0	synth with cache (only 1: split; only 1: apply set_union_elim; only 1: apply set_union_intro).	0.014200	3
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_union_nodup	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_union_emptyL	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_union_emptyR	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_inter_intro	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_inter_elim1	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_inter_elim2	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_inter_elim	120	0	synth with cache (only 1: eauto with datatypes).	0.060015	1
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_inter_iff	120	0.0.0.0.0.0	synth with cache (only 1: split; only 1: apply set_inter_elim; only 1: destruct 1; only 1: apply set_inter_intro; only 1: easy; only 1: easy).	0.015878	6
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_inter_nodup	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction 1; only 1: intros ?; only 1: simpl; only 1: constructor; only 1: intros ?; only 1: simpl; only 1: destruct set_mem; only 1: constructor; only 1: rewrite set_inter_iff; only 1: tauto; only 1: auto; only 1: auto).	0.034219	12
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_diff_intro	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_diff_elim1	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_diff_elim2	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_diff_iff	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: split; only 1: eapply set_diff_elim1; only 1: eauto; only 1: eapply set_diff_elim2; only 1: eauto; only 1: destruct 1; only 1: apply set_diff_intro; only 1: easy; only 1: easy).	0.025857	10
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_diff_nodup	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction 1; only 1: intros ?; only 1: simpl; only 1: constructor; only 1: intros ?; only 1: simpl; only 1: destruct set_mem; only 1: auto using set_add_nodup; only 1: auto using set_add_nodup).	0.019513	9
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_diff_trivial	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcompare.Zmult_compare_compat_r	120
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcompare.Zcompare_elim	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: case Z.compare_spec; only 1: trivial; only 1: trivial; only 1: Z.swap_greater; only 1: easy).	0.031459	6
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcompare.Zcompare_eq_case	120	0.0.0.0	synth with cache (only 1: intros; only 1: subst; only 1: rewrite Z.compare_refl; only 1: easy).	0.020654	4
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcompare.Zle_compare	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: case Z.compare_spec; only 1: trivial; only 1: trivial; only 1: Z.order).	0.057553	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcompare.Zlt_compare	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite H; only 1: easy).	0.062504	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcompare.Zge_compare	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: case Z.compare_spec; only 1: easy; only 1: easy; only 1: easy).	0.022817	5
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcompare.Zgt_compare	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite H; only 1: easy).	0.029633	5
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.left_prefix	120
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.right_prefix	120
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.desc_prefix	120
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.desc_tail	120
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Gt_Psucc	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- Pos.compare_succ_succ; only 1: apply Pos.lt_gt; only 1: apply Pos.lt_lt_succ; only 1: apply Pos.gt_lt; only 1: easy).	0.016776	6
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Psucc_Gt	120	0.0.1.0.0	synth with cache (only 1: intros; only 1: apply Pos.lt_gt; only 1: rewrite Pos.lt_iff_add; only 1: exists 1; only 1: apply Pos.add_1_r).	0.016499	6
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.dist_aux	120
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.dist_Desc_concat	120
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.map_app	120
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.length_map	120
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Lget_map	120
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Lget_app	120
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.desc_end	120
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Lget_app_Some	120
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.ltl_unit	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: case x; only 1: intros; only 1: apply Lt_nil; only 1: simpl; only 1: intros; only 1: inversion_clear H0; only 1: apply Lt_hd; only 1: auto with sets; only 1: inversion_clear H1).	0.060905	10
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Store.Tget_Tempty	120
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.acc_app	120
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.wf_lex_exp	120
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Store.Tget_Tadd	120
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Store.get_empty	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: case i; only 1: unfold empty; only 1: unfold get; only 1: simpl; only 1: reflexivity; only 1: unfold empty; only 1: unfold get; only 1: simpl; only 1: reflexivity; only 1: unfold empty; only 1: unfold get; only 1: simpl; only 1: reflexivity).	0.020775	14
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Store.get_Full_Gt	120
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Store.get_Full_Eq	120
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Store.get_push_Full	120
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Store.Full_push_compat	120
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Store.Full_index_one_empty	120
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Store.push_not_empty	120
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Store.get_In	120
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Map.Tget_Tmap	120
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Map.Tmap_Tadd	120
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Map.get_map	120
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Map.map_push	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: case S; only 1: unfold push; only 1: unfold map; only 1: unfold contents; only 1: unfold index; only 1: intros; only 1: rewrite Tmap_Tadd; only 1: reflexivity).	0.032337	10
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Map.Full_map	120
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorDef.BASES.trunc	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_inj_l	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qle_refl	120	0	synth with cache (only 1: auto with *).	0.035663	1
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qle_antisym	120	0	synth with cache (only 1: apply Z.le_antisymm).	0.027702	1
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qle_trans	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qlt_irrefl	120	0	synth with cache (only 1: apply Z.lt_irrefl).	0.028077	1
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qlt_not_eq	120	0	synth with cache (only 1: apply Z.lt_neq).	0.026812	1
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Zle_Qle	120	0.0.0.0.0	synth with cache (only 1: unfold Qle; only 1: simpl; only 1: rewrite Z.mul_1_r; only 1: rewrite Z.mul_1_r; only 1: easy).	0.037962	5
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Zlt_Qlt	120	0.0.0.0.0	synth with cache (only 1: unfold Qlt; only 1: simpl; only 1: rewrite Z.mul_1_r; only 1: rewrite Z.mul_1_r; only 1: easy).	0.037705	5
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qle_lteq	120	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: rewrite Qeq_alt; only 1: rewrite Qle_alt; only 1: rewrite Qlt_alt; only 1: destruct Qcompare; only 1: intuition; only 1: discriminate; only 1: discriminate; only 1: intuition; only 1: discriminate; only 1: discriminate; only 1: intuition; only 1: discriminate; only 1: discriminate).	0.199374	13
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qlt_le_weak	120	0	synth with cache (only 1: apply Z.lt_le_incl).	0.035624	1
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qle_lt_trans	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qlt_le_trans	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qlt_trans	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Qle_lt_trans with y; only 1: apply Qlt_le_weak; only 1: auto; only 1: auto).	0.029186	5
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qnot_lt_le	120	0	synth with cache (only 1: apply Z.nlt_ge).	0.024403	1
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qnot_le_lt	120	0	synth with cache (only 1: apply Z.nle_gt).	0.036051	1
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qlt_not_le	120	0	synth with cache (only 1: apply Z.lt_nge).	0.025146	1
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qle_not_lt	120	0	synth with cache (only 1: apply Z.le_ngt).	0.027193	1
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qle_lt_or_eq	120	0.0.0.0.0.0	synth with cache (only 1: unfold Qle; only 1: unfold Qlt; only 1: unfold Qeq; only 1: intros; only 1: apply Z.lt_eq_cases; only 1: easy).	0.056337	6
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Q_dec	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qlt_le_dec	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qarchimedean	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qopp_le_compat	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct p; only 1: intros ?; only 1: destruct q; only 1: unfold Qle; only 1: simpl; only 1: rewrite Z.mul_opp_l; only 1: rewrite Z.mul_opp_l; only 1: rewrite <- Z.opp_le_mono; only 1: easy).	0.055724	10
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qle_minus_iff	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct p; only 1: intros ?; only 1: destruct q; only 1: unfold Qle; only 1: simpl; only 1: rewrite Z.mul_1_r; only 1: rewrite Z.mul_opp_l; only 1: rewrite <- Z.le_sub_le_add_r; only 1: rewrite Z.opp_involutive; only 1: reflexivity).	0.055125	11
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qlt_minus_iff	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct p; only 1: intros ?; only 1: destruct q; only 1: unfold Qlt; only 1: simpl; only 1: rewrite Z.mul_1_r; only 1: rewrite Z.mul_opp_l; only 1: rewrite <- Z.lt_sub_lt_add_r; only 1: rewrite Z.opp_involutive; only 1: reflexivity).	0.055561	11
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qplus_le_compat	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qplus_lt_le_compat	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qplus_le_l	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Pred_Type.Generic.not_all_not_ex	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply NNPP; only 1: intros ?; only 1: apply H; only 1: intros ?; only 1: intros ?; only 1: apply H0; only 1: exists n; only 1: exact H1).	0.022581	10
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Pred_Type.Generic.not_all_ex_not	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Pred_Type.Generic.not_ex_all_not	120	0.0.0.0.0.0.0.0	synth with cache (only 1: unfold not; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply H; only 1: exists n; only 1: trivial).	0.015976	8
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Pred_Type.Generic.not_ex_not_all	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply NNPP; only 1: red; only 1: intros ?; only 1: apply H; only 1: exists n; only 1: trivial).	0.015581	9
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Pred_Type.Generic.ex_not_not_all	120	0.0.0.0.0.0	synth with cache (only 1: unfold not; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: elim H; only 1: auto).	0.014193	6
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Pred_Type.Generic.all_not_not_ex	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold not; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: elim H0; only 1: intros ?; only 1: intros ?; only 1: apply H with x; only 1: auto).	0.015222	9
coq-tactician-stdlib.8.11.dev	Coq.micromega.Refl.make_impl_true	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.Refl.make_impl_map	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.Refl.make_conj_cons	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct l; only 1: simpl; only 1: tauto; only 1: simpl; only 1: tauto).	0.034621	6
coq-tactician-stdlib.8.11.dev	Coq.micromega.Refl.make_conj_impl	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.Refl.make_conj_in	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.Refl.make_conj_app	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.Refl.make_conj_rapp	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.Refl.not_make_conj_cons	120	0.0.0	synth with cache (only 1: intros; only 1: rewrite make_conj_cons; only 1: tauto).	0.042773	3
coq-tactician-stdlib.8.11.dev	Coq.micromega.Refl.not_make_conj_app	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.BinList.MakeBinList.jump_tl	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.BinList.MakeBinList.jump_succ	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.BinList.MakeBinList.jump_add	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.BinList.MakeBinList.jump_pred_double	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.BinList.MakeBinList.nth_jump	120
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.BinList.MakeBinList.nth_pred_double	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListDec.Dec_in_Prop.In_decidable	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListDec.Dec_in_Prop.incl_decidable	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListDec.Dec_in_Prop.NoDup_decidable	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListDec.Dec_in_Type.incl_dec	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListDec.Dec_in_Type.NoDup_dec	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListDec.uniquify_map	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListDec.uniquify	120
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Sorted.defs.HdRel_inv	120	0.0	synth with cache (only 1: inversion 1; only 1: auto).	0.017002	2
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Sorted.defs.Sorted_inv	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: inversion H; only 1: auto).	0.021087	5
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Sorted.defs.Sorted_rect	120
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Sorted.defs.Sorted_LocallySorted_iff	120
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Sorted.defs.StronglySorted_inv	120	0.0.0	synth with cache (only 1: intros; only 1: inversion H; only 1: auto).	0.018016	3
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Sorted.defs.StronglySorted_rect	120
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Sorted.defs.StronglySorted_rec	120	0	synth with cache (only 1: firstorder using StronglySorted_rect).	0.015028	1
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Sorted.defs.StronglySorted_Sorted	120	0.0.0.0.0.0.0.0	synth with cache (only 1: induction 1; only 1: constructor; only 1: constructor; only 1: trivial; only 1: destruct H0; only 1: constructor; only 1: constructor; only 1: trivial).	0.017339	8
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Sorted.defs.Sorted_extends	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.WeakFan.Y_unique	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.WeakFan.Y_approx	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.WeakFan.WeakFanTheorem	120
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Sorted.defs.Sorted_StronglySorted	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare.discrete_nat	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Prop.NNPP	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Prop.Peirce	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.nil_cons	120	0.0	synth with cache (only 1: intros; only 1: discriminate).	0.012156	2
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Prop.not_imply_elim	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply NNPP; only 1: red; only 1: intros ?; only 1: apply H; only 1: intros ?; only 1: absurd P; only 1: trivial; only 1: trivial).	0.015112	9
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Prop.not_imply_elim2	120	0	synth with cache (only 1: tauto).	0.013935	1
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.destruct_list	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Prop.imply_to_or	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.hd_error_tl_repr	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Prop.imply_to_and	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: apply not_imply_elim with Q; only 1: trivial; only 1: apply not_imply_elim2 with P; only 1: trivial).	0.012643	6
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Prop.or_to_imply	120	0	synth with cache (only 1: tauto).	0.010509	1
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Prop.not_and_or	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Prop.or_not_and	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Prop.not_or_and	120	0	synth with cache (only 1: tauto).	0.014370	1
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Prop.and_not_or	120	0	synth with cache (only 1: tauto).	0.013752	1
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Prop.imply_and_or	120	0	synth with cache (only 1: tauto).	0.010356	1
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Prop.imply_and_or2	120	0	synth with cache (only 1: tauto).	0.018248	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_le_reg_r	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.hd_error_some_nil	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.length_zero_iff_nil	120	0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: destruct l; only 1: easy; only 1: easy; only 1: intros ?; only 1: intropattern subst -> H; only 1: easy).	0.019408	7
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.hd_error_nil	120	0.0	synth with cache (only 1: simpl; only 1: auto).	0.008997	2
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.hd_error_cons	120	0.0.0	synth with cache (only 1: intros; only 1: simpl; only 1: reflexivity).	0.010224	3
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.in_eq	120	0.0	synth with cache (only 1: simpl; only 1: auto).	0.010410	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rlt_minus	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.in_cons	120	0.0	synth with cache (only 1: simpl; only 1: auto).	0.011685	2
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.not_in_cons	120	0.0	synth with cache (only 1: simpl; only 1: intuition).	0.022236	2
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Prop.Eq_rect_eq.eq_rect_eq	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.in_nil	120	0.0.0.0	synth with cache (only 1: unfold not; only 1: intros ?; only 1: intros ?; only 1: inversion_clear H).	0.010779	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rgt_minus	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.in_split	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.in_inv	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: inversion_clear H; only 1: auto; only 1: auto).	0.014214	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rlt_Rminus	120	0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply Rgt_minus).	0.078283	3
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.in_dec	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.app_cons_not_nil	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.app_nil_l	120	0	synth with cache (only 1: reflexivity).	0.009995	1
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.app_nil_r	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rle_minus	120	0.0.0.0.0	synth with cache (only 1: destruct 1; only 1: unfold Rle; only 1: auto with real; only 1: unfold Rle; only 1: auto with real).	0.087751	5
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.app_nil_end	120	0.0	synth with cache (only 1: symmetry; only 1: apply app_nil_r).	0.056773	2
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.app_assoc	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: induction l; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: f_equal; only 1: auto).	0.027670	9
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.app_assoc_reverse	120	0	synth with cache (only 1: auto using app_assoc).	0.012890	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rge_minus	120	0.0.0.0	synth with cache (only 1: destruct 1; only 1: auto using Rgt_minus, Rgt_ge; only 1: right; only 1: auto using Rminus_diag_eq with rorders).	0.065386	4
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.app_comm_cons	120	0	synth with cache (only 1: auto).	0.010100	1
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.app_eq_nil	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.app_eq_unit	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.app_inj_tail	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rminus_lt	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.app_length	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rminus_gt	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.in_app_or	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rminus_gt_0_lt	120	0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply Rminus_gt).	0.060630	3
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.in_or_app	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.in_app_iff	120	0.0.0	synth with cache (only 1: split; only 1: auto using in_app_or, in_or_app; only 1: auto using in_app_or, in_or_app).	0.015346	3
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.app_inv_head	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rminus_le	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.app_inv_tail	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rminus_ge	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.nth_in_or_default	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.nth_S_cons	120	0.0	synth with cache (only 1: simpl; only 1: auto).	0.017501	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.tech_Rplus	120	0.0.0.0.0.1.0.0.0	synth with cache (only 1: intros; only 1: apply not_eq_sym; only 1: apply Rlt_not_eq; only 1: apply Rle_lt_trans with r; only 1: assumption; only 1: pattern r at 1; only 1: rewrite <- Rplus_0_r; only 1: apply Rplus_lt_compat_l; only 1: assumption).	0.081260	11
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.nth_default_eq	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.nth_In	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.In_nth	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.nth_overflow	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rle_0_sqr	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.nth_indep	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.app_nth1	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.app_nth2	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rlt_0_sqr	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.nth_split	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_sqr_eq_0_l	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.nth_error_In	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: revert n; only 1: induction l; only 1: intros ?; only 1: destruct n; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy; only 1: intros ?; only 1: destruct n; only 1: simpl; only 1: injection 1; only 1: auto; only 1: simpl; only 1: eauto).	0.040721	15
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rplus_sqr_eq_0	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: split; only 1: apply Rplus_sqr_eq_0_l with r2; only 1: auto with real; only 1: apply Rplus_sqr_eq_0_l with r1; only 1: rewrite Rplus_comm; only 1: auto with real).	0.076190	8
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.In_nth_error	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.nth_error_None	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rlt_0_1	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rle_0_1	120	0.0	synth with cache (only 1: left; only 1: exact Rlt_0_1).	0.060213	2
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.nth_error_Some	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.nth_error_split	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.nth_error_app1	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.nth_error_app2	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: revert l; only 1: induction n; only 1: intros ?; only 1: destruct l; only 1: intros ?; only 1: auto; only 1: intros ?; only 1: solve [ inversion H ]; only 1: intros ?; only 1: destruct l; only 1: intros ?; only 1: auto; only 1: intros ?; only 1: simpl in *; only 1: apply IHn; only 1: auto with arith).	0.041871	16
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rinv_0_lt_compat	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.nth_error_nth	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply nth_error_split in H; only 1: destruct H; only 1: destruct H; only 1: destruct H; only 1: subst; only 1: rewrite app_nth2; only 1: rewrite Nat.sub_diag; only 1: reflexivity; only 1: auto).	0.031013	14
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.nth_error_nth'	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.remove_In	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rinv_lt_0_compat	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.app_removelast_last	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.exists_last	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.PropExtensionality.proof_irrelevance	120	0.0	synth with cache (only 1: apply ext_prop_dep_proof_irrel_cic; only 1: exact propositional_extensionality).	0.010556	2
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.removelast_app	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rinv_lt_contravar	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.count_occ_In	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: split; only 1: destruct 1; only 1: apply gt_irrefl; only 1: simpl; only 1: destruct eq_dec; only 1: intropattern subst -> e; only 1: rewrite IHl; only 1: intuition; only 1: rewrite IHl; only 1: intuition).	0.055975	12
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.count_occ_not_In	120	0.0.0.0.0	synth with cache (only 1: rewrite count_occ_In; only 1: unfold gt; only 1: rewrite Nat.nlt_ge; only 1: rewrite Nat.le_0_r; only 1: easy).	0.019782	5
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.count_occ_nil	120	0	synth with cache (only 1: reflexivity).	0.013320	1
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.count_occ_inv_nil	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.count_occ_cons_eq	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: simpl; only 1: destruct eq_dec; only 1: easy; only 1: easy).	0.022301	5
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.count_occ_cons_neq	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: simpl; only 1: destruct eq_dec; only 1: easy; only 1: easy).	0.020960	5
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rinv_1_lt_contravar	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListOps.rev_app_distr	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rle_lt_0_plus_1	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListOps.rev_unit	120	0.0	synth with cache (only 1: intros; only 1: apply rev_app_distr).	0.013342	2
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListOps.rev_involutive	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListOps.in_rev	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rlt_plus_1	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListOps.rev_length	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.tech_Rgt_minus	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.S_INR	120	0.0.0.0	synth with cache (only 1: intros ?; only 1: case n; only 1: auto with real; only 1: auto with real).	0.077570	4
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListOps.rev_nth	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListOps.rev_append_rev	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListOps.rev_alt	120	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite rev_append_rev; only 1: rewrite app_nil_r; only 1: trivial).	0.016284	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.S_O_plus_INR	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: simpl; only 1: case n; only 1: auto with real; only 1: intros; only 1: auto with real).	0.069255	6
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListOps.Reverse_Induction.rev_list_ind	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListOps.Reverse_Induction.rev_ind	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListOps.concat_nil	120	0	synth with cache (only 1: reflexivity).	0.012033	1
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListOps.concat_cons	120	0	synth with cache (only 1: reflexivity).	0.011640	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.plus_INR	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListOps.concat_app	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: induction l1; only 1: intros ?; only 1: simpl; only 1: reflexivity; only 1: intros ?; only 1: simpl; only 1: rewrite IHl1; only 1: apply app_assoc).	0.027065	9
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListOps.list_eq_dec	120	0	synth with cache (only 1: decide equality).	0.023154	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.minus_INR	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Map.map_cons	120	0	synth with cache (only 1: reflexivity).	0.014534	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.mult_INR	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: induction n; only 1: simpl; only 1: auto with real; only 1: rewrite S_INR; only 1: simpl; only 1: rewrite plus_INR; only 1: rewrite IHn; only 1: ring).	0.090165	10
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Map.in_map	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Map.in_map_iff	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Map.map_length	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.pow_INR	120	0.0.0.0.0.0	synth with cache (only 1: induction n; only 1: easy; only 1: simpl; only 1: rewrite mult_INR; only 1: rewrite IHn; only 1: easy).	0.092354	6
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Map.map_nth	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Map.map_nth_error	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Map.map_app	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.lt_0_INR	120	0.0.0.0.0	synth with cache (only 1: simple induction 1; only 1: auto with real; only 1: intros; only 1: rewrite S_INR; only 1: auto with real).	0.082680	5
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Map.map_rev	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Map.map_eq_nil	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Map.count_occ_map	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.lt_INR	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.lt_1_INR	120	0	synth with cache (only 1: apply lt_INR).	0.068416	1
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Map.in_flat_map	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.flat_map_concat_map	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: induction l; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: rewrite IHl; only 1: reflexivity).	0.030022	10
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.pos_INR_nat_of_P	120	0.0.0	synth with cache (only 1: intros ?; only 1: apply lt_0_INR; only 1: apply Pos2Nat.is_pos).	0.085626	3
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.concat_map	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: induction l; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: rewrite map_app; only 1: rewrite IHl; only 1: reflexivity).	0.039706	11
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.map_id	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.map_map	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.pos_INR	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.map_ext_in	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ext_in_map	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.INR_lt	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.map_ext_in_iff	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: induction l; only 1: intros ?; only 1: intro_equality_clear H; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: intros ?; only 1: injection H as; only 1: intros ?; only 1: intros ?; only 1: destruct H1; only 1: subst; only 1: auto; only 1: auto; only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: rewrite H; only 1: rewrite IHl; only 1: auto; only 1: auto; only 1: intuition).	0.066276	25
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.map_ext	120	0.0.0	synth with cache (only 1: intros; only 1: apply map_ext_in; only 1: auto).	0.018518	3
coq-tactician-stdlib.8.11.dev	Coq.Vectors.Fin.of_nat_ext	120
coq-tactician-stdlib.8.11.dev	Coq.Vectors.Fin.of_nat_to_nat_inv	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction p; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: destruct @to_nat; only 1: simpl in *; only 1: f_equal; only 1: subst p; only 1: apply @of_nat_ext).	0.029399	9
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Fold_Left_Recursor.fold_left_app	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.le_INR	120
coq-tactician-stdlib.8.11.dev	Coq.Vectors.Fin.to_nat_of_nat	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.fold_left_length	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.INR_not_0	120	0.0.0.0.0.0.0	synth with cache (only 1: red; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply H; only 1: rewrite H0; only 1: trivial).	0.072170	7
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.fold_right_app	120
coq-tactician-stdlib.8.11.dev	Coq.Vectors.Fin.to_nat_inj	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.fold_left_rev_right	120
coq-tactician-stdlib.8.11.dev	Coq.Vectors.Fin.L_sanity	120	0.0.0.0.0.0.0.0	synth with cache (only 1: induction p; only 1: reflexivity; only 1: simpl; only 1: destruct @to_nat; only 1: simpl in *; only 1: rewrite IHp; only 1: destruct @to_nat; only 1: easy).	0.044813	8
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.fold_symmetric	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: induction l; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: rewrite <- IHl; only 1: clear IHl; only 1: revert a; only 1: induction l; only 1: auto; only 1: simpl; only 1: intros ?; only 1: rewrite <- H; only 1: rewrite IHl; only 1: rewrite IHl; only 1: auto).	0.062398	21
coq-tactician-stdlib.8.11.dev	Coq.Vectors.Fin.L_R	120
coq-tactician-stdlib.8.11.dev	Coq.Vectors.Fin.R_sanity	120	0.0.0.0.0.0.0.0	synth with cache (only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: destruct @to_nat; only 1: simpl in *; only 1: rewrite IHn; only 1: destruct @to_nat; only 1: easy).	0.029962	8
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.not_0_INR	120
coq-tactician-stdlib.8.11.dev	Coq.Vectors.Fin.depair_sanity	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.not_INR	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Bool.existsb_exists	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Bool.existsb_nth	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.INR_eq	120
coq-tactician-stdlib.8.11.dev	Coq.Vectors.Fin.eqb_nat_eq	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Bool.existsb_app	120
coq-tactician-stdlib.8.11.dev	Coq.Vectors.Fin.eqb_eq	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: apply rect2; only 1: simpl; only 1: intros; only 1: split; only 1: intros; only 1: reflexivity; only 1: intros; only 1: apply PeanoNat.Nat.eqb_eq; only 1: easy; only 1: simpl; only 1: intros; only 1: split; only 1: easy; only 1: easy; only 1: simpl; only 1: intros; only 1: split; only 1: easy; only 1: easy; only 1: simpl; only 1: intros; only 1: eapply iff_trans; only 1: eassumption; only 1: split; only 1: intros; only 1: f_equal; only 1: easy; only 1: apply @FS_inj).	0.057725	28
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.INR_le	120
coq-tactician-stdlib.8.11.dev	Coq.Vectors.Fin.eq_dec	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.not_1_INR	120	0.0	synth with cache (only 1: intros ?; only 1: apply not_INR).	0.084945	2
coq-tactician-stdlib.8.11.dev	Coq.Vectors.Fin.cast	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Bool.forallb_forall	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Bool.forallb_app	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.IZN	120	0.0	synth with cache (only 1: intros ?; only 1: apply Z_of_nat_complete).	0.088678	2
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Bool.filter_In	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Bool.filter_app	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: trivial; only 1: simpl; only 1: destruct f; only 1: simpl; only 1: rewrite IHl; only 1: easy; only 1: rewrite IHl; only 1: easy).	0.030752	10
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Bool.concat_filter_map	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.INR_IPR	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Bool.find_some	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Bool.find_none	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.INR_IZR_INZ	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct n; only 1: easy; only 1: simpl BinIntDef.Z.of_nat; only 1: unfold IZR; only 1: rewrite <- INR_IPR; only 1: rewrite SuccNat2Pos.id_succ; only 1: easy).	0.082426	8
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Bool.partition_cons1	120	0.0.0.0.0.0	synth with cache (only 1: simpl; only 1: intros ?; only 1: intropattern subst -> H; only 1: intros ?; only 1: intropattern subst -> H; only 1: easy).	0.028801	6
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Bool.partition_cons2	120	0.0.0.0.0.0	synth with cache (only 1: simpl; only 1: intros ?; only 1: intropattern subst -> H; only 1: intros ?; only 1: intropattern subst -> H; only 1: easy).	0.028369	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.plus_IZR_NEG_POS	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: simpl; only 1: rewrite Z.pos_sub_spec; only 1: case Pos.compare_spec; only 1: intros ?; only 1: unfold IZR; only 1: subst; only 1: ring; only 1: intros ?; only 1: unfold IZR; only 1: rewrite <- INR_IPR; only 1: rewrite <- INR_IPR; only 1: rewrite <- INR_IPR; only 1: rewrite Pos2Nat.inj_sub; only 1: rewrite minus_INR; only 1: ring; only 1: apply Nat.lt_le_incl; only 1: apply Pos2Nat.inj_lt; only 1: trivial; only 1: trivial; only 1: intros ?; only 1: unfold IZR; only 1: rewrite <- INR_IPR; only 1: rewrite <- INR_IPR; only 1: rewrite <- INR_IPR; only 1: rewrite Pos2Nat.inj_sub; only 1: rewrite minus_INR; only 1: ring; only 1: apply Nat.lt_le_incl; only 1: apply Pos2Nat.inj_lt; only 1: trivial; only 1: trivial).	0.119907	33
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Bool.partition_length	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Bool.partition_inv_nil	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: destruct l; only 1: intuition; only 1: simpl; only 1: destruct f; only 1: destruct partition; only 1: intros ?; only 1: discriminate H; only 1: destruct partition; only 1: intros ?; only 1: discriminate H; only 1: intros ?; only 1: intropattern subst -> H; only 1: easy).	0.043870	14
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.plus_IZR	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct n; only 1: intros ?; only 1: destruct m; only 1: auto with real; only 1: auto with real; only 1: auto with real; only 1: intros ?; only 1: destruct m; only 1: auto with real; only 1: simpl; only 1: unfold IZR; only 1: rewrite <- INR_IPR; only 1: rewrite <- INR_IPR; only 1: rewrite <- INR_IPR; only 1: rewrite Pos2Nat.inj_add; only 1: apply plus_INR; only 1: apply plus_IZR_NEG_POS; only 1: intros ?; only 1: destruct m; only 1: auto with real; only 1: rewrite Z.add_comm; only 1: rewrite Rplus_comm; only 1: apply plus_IZR_NEG_POS; only 1: simpl; only 1: unfold IZR; only 1: rewrite <- INR_IPR; only 1: rewrite <- INR_IPR; only 1: rewrite <- INR_IPR; only 1: rewrite Pos2Nat.inj_add; only 1: rewrite plus_INR; only 1: apply Ropp_plus_distr).	0.105510	32
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Bool.elements_in_partition	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Filtering.filter_map	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.mult_IZR	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: case n; only 1: case m; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: auto with real; only 1: case m; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: unfold IZR; only 1: intros ?; only 1: intros ?; only 1: rewrite <- INR_IPR; only 1: rewrite <- INR_IPR; only 1: rewrite <- INR_IPR; only 1: rewrite Pos2Nat.inj_mul; only 1: rewrite mult_INR; only 1: ring; only 1: simpl; only 1: unfold IZR; only 1: intros ?; only 1: intros ?; only 1: rewrite <- INR_IPR; only 1: rewrite <- INR_IPR; only 1: rewrite <- INR_IPR; only 1: rewrite Pos2Nat.inj_mul; only 1: rewrite mult_INR; only 1: ring; only 1: case m; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: unfold IZR; only 1: intros ?; only 1: intros ?; only 1: rewrite <- INR_IPR; only 1: rewrite <- INR_IPR; only 1: rewrite <- INR_IPR; only 1: rewrite Pos2Nat.inj_mul; only 1: rewrite mult_INR; only 1: ring; only 1: simpl; only 1: unfold IZR; only 1: intros ?; only 1: intros ?; only 1: rewrite <- INR_IPR; only 1: rewrite <- INR_IPR; only 1: rewrite <- INR_IPR; only 1: rewrite Pos2Nat.inj_mul; only 1: rewrite mult_INR; only 1: ring).	0.222418	56
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Filtering.filter_ext_in	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite filter_map; only 1: apply map_ext_in; only 1: auto).	0.029917	7
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Filtering.ext_in_filter	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite filter_map in H; only 1: apply ext_in_map; only 1: assumption).	0.036057	7
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Filtering.filter_ext_in_iff	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intros ?; only 1: rewrite filter_map in H; only 1: apply ext_in_map; only 1: assumption; only 1: intros ?; only 1: rewrite filter_map; only 1: apply map_ext_in; only 1: auto).	0.038695	9
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Filtering.filter_ext	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite filter_map; only 1: apply map_ext; only 1: assumption).	0.028615	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.pow_IZR	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: destruct n; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite Zpower_pos_nat; only 1: rewrite SuccNat2Pos.id_succ; only 1: unfold Zpower_nat; only 1: simpl; only 1: rewrite mult_IZR; only 1: induction n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite mult_IZR; only 1: ring [ IHn ]).	0.126945	17
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListPairs.in_split_l	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListPairs.in_split_r	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.succ_IZR	120	0.0.0	synth with cache (only 1: intros ?; only 1: unfold BinIntDef.Z.succ; only 1: apply plus_IZR).	0.071121	3
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListPairs.split_nth	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.opp_IZR	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct n; only 1: unfold IZR; only 1: simpl; only 1: auto with real; only 1: unfold IZR; only 1: simpl; only 1: auto with real; only 1: unfold IZR; only 1: simpl; only 1: auto with real).	0.080034	11
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListPairs.split_length_l	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListPairs.split_length_r	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListPairs.split_combine	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListPairs.combine_split	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.minus_IZR	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold BinIntDef.Z.sub; only 1: unfold Rminus; only 1: rewrite <- opp_IZR; only 1: apply plus_IZR).	0.089104	5
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListPairs.in_combine_l	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListPairs.in_combine_r	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Z_R_minus	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: unfold Rminus; only 1: unfold BinIntDef.Z.sub; only 1: rewrite <- Ropp_Ropp_IZR; only 1: symmetry; only 1: apply plus_IZR).	0.073941	7
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListPairs.combine_length	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListPairs.combine_nth	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListPairs.in_prod_aux	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListPairs.in_prod	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.inj_succ	120	0.0.0.0	synth with cache (only 1: unfold BinPosDef.Pos.to_nat; only 1: rewrite iter_op_succ; only 1: trivial; only 1: apply Nat.add_assoc).	0.014419	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.lt_0_IZR	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.inj_add	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: revert q; only 1: induction p using peano_ind; only 1: intros ?; only 1: rewrite add_1_l; only 1: rewrite inj_succ; only 1: easy; only 1: intros ?; only 1: rewrite add_succ_l; only 1: rewrite inj_succ; only 1: rewrite inj_succ; only 1: rewrite IHp; only 1: easy).	0.022928	12
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListPairs.in_prod_iff	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.inj_mul	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: revert q; only 1: induction p using peano_ind; only 1: simpl; only 1: intros; only 1: trivial; only 1: intros; only 1: rewrite mul_succ_l; only 1: rewrite inj_add; only 1: rewrite IHp; only 1: rewrite inj_succ; only 1: easy).	0.019815	11
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.prop_degen_ext	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.inj_1	120	0	synth with cache (only 1: trivial).	0.009450	1
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.prop_degen_em	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.prop_ext_em_degen	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.inj_xO	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.provable_prop_ext	120	0	synth with cache (only 1: exact PropExt_imp_ProvPropExt).	0.005778	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.lt_IZR	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.inj_xI	120	0.0.0.0	synth with cache (only 1: rewrite xI_succ_xO; only 1: rewrite inj_succ; only 1: rewrite inj_xO; only 1: easy).	0.011851	4
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListPairs.prod_length	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.length_order.lel_refl	120	0.0	synth with cache (only 1: unfold lel; only 1: auto with arith).	0.012317	2
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.is_succ	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.length_order.lel_trans	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.is_pos	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.length_order.lel_cons_cons	120	0.0.0	synth with cache (only 1: unfold lel; only 1: simpl; only 1: auto with arith).	0.022966	3
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.prop_ext_A_eq_A_imp_A	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.eq_IZR_R0	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.id	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.length_order.lel_cons	120	0.0.0	synth with cache (only 1: unfold lel; only 1: simpl; only 1: auto with arith).	0.017389	3
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.prop_ext_retract_A_A_imp_A	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.inj	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.inj_iff	120	0.0.0.0.0	synth with cache (only 1: split; only 1: apply inj; only 1: intros; only 1: subst; only 1: trivial).	0.013503	5
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.ext_prop_fixpoint	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.length_order.lel_tail	120	0.0.0	synth with cache (only 1: unfold lel; only 1: simpl; only 1: auto with arith).	0.013953	3
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.Proof_irrelevance_gen.aux	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.Proof_irrelevance_gen.ext_prop_dep_proof_irrel_gen	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.inj_compare	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.Proof_irrelevance_Prop_Ext_CC.ext_prop_dep_proof_irrel_cc	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.inj_lt	120	0.0.0.0	synth with cache (only 1: unfold lt; only 1: rewrite inj_compare; only 1: rewrite Nat.compare_lt_iff; only 1: easy).	0.013780	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.eq_IZR	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.length_order.lel_nil	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.inj_le	120	0.0.0.0	synth with cache (only 1: unfold le; only 1: rewrite inj_compare; only 1: rewrite Nat.compare_le_iff; only 1: easy).	0.016000	4
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.SetIncl.incl_refl	120	0	synth with cache (only 1: auto).	0.014880	1
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.inj_gt	120	0.0.0.0	synth with cache (only 1: unfold gt; only 1: rewrite inj_compare; only 1: rewrite Nat.compare_gt_iff; only 1: easy).	0.013115	4
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.not_0_IZR	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: red; only 1: intros ?; only 1: case H; only 1: apply eq_IZR; only 1: auto).	0.077075	7
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.inj_ge	120	0.0.0.0	synth with cache (only 1: unfold ge; only 1: rewrite inj_compare; only 1: rewrite Nat.compare_ge_iff; only 1: easy).	0.012378	4
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.SetIncl.incl_tl	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.SetIncl.incl_tran	120	0	synth with cache (only 1: auto).	0.014884	1
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.inj_sub	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.SetIncl.incl_appl	120	0	synth with cache (only 1: auto with datatypes).	0.015927	1
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.inj_sub_max	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.inj_pred	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- sub_1_r; only 1: rewrite inj_sub; only 1: rewrite Nat.sub_1_r; only 1: easy; only 1: easy).	0.014245	6
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.SetIncl.incl_appr	120	0	synth with cache (only 1: auto with datatypes).	0.013705	1
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.inj_pred_max	120	0.0.0	synth with cache (only 1: rewrite <- sub_1_r; only 1: rewrite <- Nat.sub_1_r; only 1: apply inj_sub_max).	0.012062	3
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.le_0_IZR	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.inj_min	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold BinPosDef.Pos.min; only 1: rewrite inj_compare; only 1: case Nat.compare_spec; only 1: intros ?; only 1: symmetry; only 1: apply Nat.min_l; only 1: rewrite H; only 1: easy; only 1: intros ?; only 1: symmetry; only 1: apply Nat.min_l; only 1: apply Nat.lt_le_incl; only 1: easy; only 1: intros ?; only 1: symmetry; only 1: apply Nat.min_r; only 1: apply Nat.lt_le_incl; only 1: easy).	0.022703	18
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.SetIncl.incl_cons	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold incl; only 1: simpl; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: elim H1; only 1: elim H1; only 1: intros ?; only 1: elim H2; only 1: auto; only 1: auto; only 1: auto).	0.045656	16
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.inj_max	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold BinPosDef.Pos.max; only 1: rewrite inj_compare; only 1: case Nat.compare_spec; only 1: intros ?; only 1: symmetry; only 1: apply Nat.max_r; only 1: rewrite H; only 1: easy; only 1: intros ?; only 1: symmetry; only 1: apply Nat.max_r; only 1: apply Nat.lt_le_incl; only 1: easy; only 1: intros ?; only 1: symmetry; only 1: apply Nat.max_l; only 1: apply Nat.lt_le_incl; only 1: easy).	0.027170	18
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.Proof_irrelevance_CIC.ext_prop_dep_proof_irrel_cic	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.Proof_irrelevance_EM_CC.p2p1	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.inj_iter	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.Proof_irrelevance_EM_CC.p2p2	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.le_IZR	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.SetIncl.incl_app	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Nat2Pos.id	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction n; only 1: destruct 1; only 1: trivial; only 1: intros ?; only 1: clear H; only 1: simpl BinPosDef.Pos.of_nat; only 1: destruct n; only 1: trivial; only 1: rewrite Pos2Nat.inj_succ; only 1: f_equal; only 1: apply IHn; only 1: easy).	0.030554	12
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.firstn_nil	120	0.0.0.0.0	synth with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: easy).	0.017701	5
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Nat2Pos.id_max	120	0.0.0.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: rewrite id; only 1: easy; only 1: discriminate).	0.014774	5
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.firstn_cons	120	0.0	synth with cache (only 1: simpl; only 1: easy).	0.012381	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.le_IZR_R1	120	0.0	synth with cache (only 1: intros ?; only 1: apply le_IZR).	0.072041	2
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.Proof_irrelevance_EM_CC.proof_irrelevance_cc	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.firstn_all	120	0.0.0.0.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite IHl; only 1: easy).	0.018688	6
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.Proof_irrelevance_WEM_CC.wp2p1	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Nat2Pos.inj	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Nat2Pos.inj_iff	120	0.0.0.0.0.1.0	synth with cache (only 1: split; only 1: apply inj; only 1: trivial; only 1: trivial; only 1: intros; only 1: subst; only 1: easy).	0.016593	9
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.Proof_irrelevance_WEM_CC.wp2p2	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Nat2Pos.inj_succ	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: apply Pos2Nat.inj; only 1: rewrite Pos2Nat.inj_succ; only 1: rewrite id; only 1: rewrite id; only 1: easy; only 1: easy; only 1: easy).	0.018461	8
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.firstn_all2	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.Proof_irrelevance_WEM_CC.wproof_irrelevance_cc	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.firstn_O	120	0.0	synth with cache (only 1: simpl; only 1: easy).	0.018321	2
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.Proof_irrelevance_CCI.proof_irrelevance_cci	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.Weak_proof_irrelevance_CCI.wem_proof_irrelevance_cci	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.IZR_ge	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.excluded_middle_Godel_Dummett	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Nat2Pos.inj_pred	120	0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: destruct n; only 1: trivial; only 1: simpl; only 1: rewrite Pos.pred_succ; only 1: easy).	0.094799	7
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.firstn_le_length	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.Godel_Dummett_iff_right_distr_implication_over_disjunction	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.Godel_Dummett_weak_excluded_middle	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.firstn_length_le	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Nat2Pos.inj_add	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply Pos2Nat.inj; only 1: rewrite Pos2Nat.inj_add; only 1: rewrite id; only 1: rewrite id; only 1: rewrite id; only 1: trivial; only 1: trivial; only 1: trivial; only 1: intros ?; only 1: destruct n; only 1: destruct H; only 1: easy; only 1: simpl in H1; only 1: easy).	0.026004	16
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.weak_excluded_middle_iff_classical_de_morgan_law	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.firstn_app	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.IZR_le	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.independence_general_premises_right_distr_implication_over_disjunction	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Nat2Pos.inj_mul	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply Pos2Nat.inj; only 1: rewrite Pos2Nat.inj_mul; only 1: rewrite id; only 1: rewrite id; only 1: rewrite id; only 1: trivial; only 1: trivial; only 1: trivial; only 1: intros ?; only 1: apply Nat.mul_eq_0 in H1; only 1: destruct H1; only 1: elim H; only 1: easy; only 1: elim H0; only 1: easy).	0.031589	17
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.independence_general_premises_Godel_Dummett	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Nat2Pos.inj_compare	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite Pos2Nat.inj_compare; only 1: rewrite id; only 1: rewrite id; only 1: trivial; only 1: trivial; only 1: trivial).	0.017197	8
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.independence_general_premises_drinker	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.firstn_app_2	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Nat2Pos.inj_sub	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.firstn_firstn	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Nat2Pos.inj_min	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: simpl; only 1: symmetry; only 1: apply Pos.min_l; only 1: apply Pos.le_1_l; only 1: destruct m; only 1: simpl; only 1: symmetry; only 1: apply Pos.min_r; only 1: apply Pos.le_1_l; only 1: unfold BinPosDef.Pos.min; only 1: rewrite <- inj_compare; only 1: case Nat.compare_spec; only 1: intros ?; only 1: f_equal; only 1: apply Nat.min_l; only 1: rewrite H; only 1: auto; only 1: intros ?; only 1: f_equal; only 1: apply Nat.min_l; only 1: apply Nat.lt_le_incl; only 1: easy; only 1: intros ?; only 1: f_equal; only 1: apply Nat.min_r; only 1: apply Nat.lt_le_incl; only 1: easy; only 1: easy; only 1: easy).	0.045068	30
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.IZR_lt	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.firstn_skipn_comm	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Nat2Pos.inj_max	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: simpl; only 1: symmetry; only 1: apply Pos.max_r; only 1: apply Pos.le_1_l; only 1: destruct m; only 1: simpl; only 1: symmetry; only 1: apply Pos.max_l; only 1: apply Pos.le_1_l; only 1: unfold BinPosDef.Pos.max; only 1: rewrite <- inj_compare; only 1: case Nat.compare_spec; only 1: intros ?; only 1: f_equal; only 1: apply Nat.max_r; only 1: rewrite H; only 1: auto; only 1: intros ?; only 1: f_equal; only 1: apply Nat.max_r; only 1: apply Nat.lt_le_incl; only 1: easy; only 1: intros ?; only 1: f_equal; only 1: apply Nat.max_l; only 1: apply Nat.lt_le_incl; only 1: easy; only 1: easy; only 1: easy).	0.042049	30
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.skipn_firstn_comm	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.skipn_O	120	0	synth with cache (only 1: reflexivity).	0.014098	1
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.IZR_neq	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: red; only 1: intros ?; only 1: elim H; only 1: apply eq_IZR; only 1: assumption).	0.124534	6
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2SuccNat.id_succ	120	0.0.0	synth with cache (only 1: rewrite Pos.of_nat_succ; only 1: rewrite <- Pos2Nat.inj_succ; only 1: apply Pos2Nat.id).	0.014799	3
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.skipn_nil	120	0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct n; only 1: easy; only 1: easy).	0.018572	4
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2SuccNat.pred_id	120	0.0.0	synth with cache (only 1: rewrite id_succ; only 1: rewrite Pos.pred_succ; only 1: easy).	0.013555	3
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.SuccNat2Pos.id_succ	120	0.0.0	synth with cache (only 1: rewrite Pos.of_nat_succ; only 1: apply Nat2Pos.id; only 1: discriminate).	0.013396	3
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.skipn_cons	120	0	synth with cache (only 1: reflexivity).	0.016489	1
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.SuccNat2Pos.pred_id	120	0.0	synth with cache (only 1: rewrite id_succ; only 1: easy).	0.010919	2
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.SuccNat2Pos.inj	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.skipn_none	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.SuccNat2Pos.inj_iff	120	0.0.0.1.0	synth with cache (only 1: split; only 1: apply inj; only 1: intros; only 1: subst; only 1: easy).	0.015940	7
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.one_IZR_lt1	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.SuccNat2Pos.inv	120	0.0.0.0	synth with cache (only 1: intros ?; only 1: apply Pos2Nat.inj; only 1: rewrite id_succ; only 1: easy).	0.012803	4
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.skipn_all2	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.SuccNat2Pos.inj_succ	120	0.0.0.0.0	synth with cache (only 1: apply Pos2Nat.inj; only 1: rewrite Pos2Nat.inj_succ; only 1: rewrite id_succ; only 1: rewrite id_succ; only 1: easy).	0.016496	5
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.SuccNat2Pos.inj_compare	120	0.0.0.0	synth with cache (only 1: rewrite Pos2Nat.inj_compare; only 1: rewrite id_succ; only 1: rewrite id_succ; only 1: trivial).	0.014714	4
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.firstn_skipn	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.firstn_length	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.one_IZR_r_R1	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_mult	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_succ_morphism	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Pmult_nat_mult; only 1: rewrite Pmult_nat_mult; only 1: rewrite Pos2Nat.inj_succ; only 1: easy).	0.016509	5
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.skipn_length	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.skipn_all	120	0.0.0	synth with cache (only 1: induction l; only 1: easy; only 1: easy).	0.036821	3
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_l_plus_morphism	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Pmult_nat_mult; only 1: rewrite Pmult_nat_mult; only 1: rewrite Pmult_nat_mult; only 1: rewrite Pos2Nat.inj_add; only 1: apply Nat.mul_add_distr_r).	0.018321	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.single_z_r_R1	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply one_IZR_r_R1 with r; only 1: auto; only 1: auto).	0.083661	4
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_plus_carry_morphism	120	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Pos.add_carry_spec; only 1: rewrite Pmult_nat_succ_morphism; only 1: easy).	0.017446	4
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.skipn_app	120	0.0.0.0.0.0.0.0	synth with cache (only 1: induction n; only 1: auto; only 1: intros ?; only 1: destruct l1; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.032976	8
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_r_plus_morphism	120	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Pmult_nat_mult; only 1: rewrite Pmult_nat_mult; only 1: apply Nat.mul_add_distr_l).	0.047544	4
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.ObsoletePmultNat.ZL6	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Pmult_nat_mult; only 1: rewrite Nat.mul_comm; only 1: simpl; only 1: rewrite Nat.add_0_r; only 1: easy).	0.015355	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.tech_single_z_r_R1	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H1; only 1: destruct H1; only 1: destruct H2; only 1: apply H1; only 1: apply single_z_r_R1 with r; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial).	0.097485	14
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.firstn_skipn_rev	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.firstn_rev	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite firstn_skipn_rev; only 1: rewrite rev_involutive; only 1: rewrite rev_length; only 1: easy).	0.024263	6
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.ObsoletePmultNat.le_Pmult_nat	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_le_pos	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.skipn_rev	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.removelast_firstn	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rinv_le_contravar	120	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H0; only 1: apply Rlt_le; only 1: apply Rinv_lt_contravar with (2 := H0); only 1: apply Rmult_lt_0_compat with (1 := H); only 1: apply Rlt_trans with x; only 1: assumption; only 1: apply H0; only 1: rewrite H0; only 1: apply Rle_refl).	0.106649	13
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Cutting.firstn_removelast	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Combining.combine_nil	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: apply length_zero_iff_nil; only 1: rewrite combine_length; only 1: simpl; only 1: rewrite Nat.min_0_r; only 1: reflexivity).	0.024395	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rle_Rinv	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: clear H0; only 1: intros ?; only 1: destruct H0; only 1: apply Rlt_le; only 1: apply Rinv_lt_contravar with (2 := H0); only 1: apply Rmult_lt_0_compat with (1 := H); only 1: apply Rlt_trans with x; only 1: assumption; only 1: apply H0; only 1: rewrite H0; only 1: apply Rle_refl).	0.091512	15
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Combining.combine_firstn_l	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Combining.combine_firstn_r	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Ropp_div	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: unfold Rdiv; only 1: rewrite <- Ropp_mult_distr_l_reverse; only 1: reflexivity).	0.107916	5
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Combining.combine_firstn	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Add.Add_app	120	0.0.0.0.0.0	synth with cache (only 1: induction l1; only 1: simpl; only 1: constructor; only 1: simpl; only 1: constructor; only 1: easy).	0.021909	6
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.double	120	0.0	synth with cache (only 1: intros ?; only 1: ring).	0.104181	2
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Add.Add_split	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Add.Add_in	120	0.0.0.0.0.0.0.0	synth with cache (only 1: induction 1; only 1: intros; only 1: simpl in *; only 1: tauto; only 1: intros; only 1: simpl in *; only 1: rewrite IHAdd; only 1: tauto).	0.067957	8
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.double_var	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite <- double; only 1: unfold Rdiv; only 1: rewrite <- Rmult_assoc; only 1: symmetry; only 1: apply Rinv_r_simpl_m; only 1: apply not_0_IZR; only 1: easy).	0.103399	8
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Add.Add_length	120	0.0.0.0.0	synth with cache (only 1: induction 1; only 1: simpl; only 1: auto with arith; only 1: simpl; only 1: auto with arith).	0.025011	5
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Add.Add_inv	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Add.incl_Add_inv	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.R_rm	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: constructor; only 1: easy; only 1: easy; only 1: intros ?; only 1: destruct x; only 1: intros ?; only 1: destruct y; only 1: auto with real; only 1: auto with real; only 1: auto with real; only 1: intros ?; only 1: destruct y; only 1: auto with real; only 1: simpl; only 1: unfold IZR; only 1: rewrite <- INR_IPR; only 1: rewrite <- INR_IPR; only 1: rewrite <- INR_IPR; only 1: rewrite Pos2Nat.inj_add; only 1: apply plus_INR; only 1: apply plus_IZR_NEG_POS; only 1: intros ?; only 1: destruct y; only 1: auto with real; only 1: rewrite Z.add_comm; only 1: rewrite Rplus_comm; only 1: apply plus_IZR_NEG_POS; only 1: simpl; only 1: unfold IZR; only 1: rewrite <- INR_IPR; only 1: rewrite <- INR_IPR; only 1: rewrite <- INR_IPR; only 1: rewrite Pos2Nat.inj_add; only 1: rewrite plus_INR; only 1: apply Ropp_plus_distr; only 1: intros; only 1: unfold BinIntDef.Z.sub; only 1: unfold Rminus; only 1: rewrite <- opp_IZR; only 1: apply plus_IZR; only 1: intros ?; only 1: intros ?; only 1: case x; only 1: case y; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: auto with real; only 1: case y; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: unfold IZR; only 1: intros ?; only 1: intros ?; only 1: rewrite <- INR_IPR; only 1: rewrite <- INR_IPR; only 1: rewrite <- INR_IPR; only 1: rewrite Pos2Nat.inj_mul; only 1: rewrite mult_INR; only 1: ring; only 1: simpl; only 1: unfold IZR; only 1: intros ?; only 1: intros ?; only 1: rewrite <- INR_IPR; only 1: rewrite <- INR_IPR; only 1: rewrite <- INR_IPR; only 1: rewrite Pos2Nat.inj_mul; only 1: rewrite mult_INR; only 1: ring; only 1: case y; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: unfold IZR; only 1: intros ?; only 1: intros ?; only 1: rewrite <- INR_IPR; only 1: rewrite <- INR_IPR; only 1: rewrite <- INR_IPR; only 1: rewrite Pos2Nat.inj_mul; only 1: rewrite mult_INR; only 1: ring; only 1: simpl; only 1: unfold IZR; only 1: intros ?; only 1: intros ?; only 1: rewrite <- INR_IPR; only 1: rewrite <- INR_IPR; only 1: rewrite <- INR_IPR; only 1: rewrite Pos2Nat.inj_mul; only 1: rewrite mult_INR; only 1: ring; only 1: exact opp_IZR; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply f_equal; only 1: apply Zeq_bool_eq; only 1: auto).	0.278812	103
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ReDun.NoDup_Add	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ReDun.NoDup_remove	120	0.0	synth with cache (only 1: apply NoDup_Add; only 1: apply Add_app).	0.018236	2
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Zeq_bool_IZR	120	0.0.0.0	synth with cache (only 1: intros ?; only 1: apply Zeq_is_eq_bool; only 1: apply eq_IZR; only 1: auto with zarith real).	0.086079	4
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ReDun.NoDup_remove_1	120	0.0.0	synth with cache (only 1: intros; only 1: apply NoDup_remove with a; only 1: easy).	0.020765	3
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ReDun.NoDup_remove_2	120	0.0.0	synth with cache (only 1: intros; only 1: apply NoDup_remove; only 1: easy).	0.022169	3
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ReDun.NoDup_cons_iff	120	0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: inversion_clear 1; only 1: split; only 1: easy; only 1: easy; only 1: constructor; only 1: easy; only 1: easy).	0.035604	8
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rmult_ge_0_gt_0_lt_compat	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ReDun.nodup_fixed_point	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ReDun.nodup_In	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: destruct in_dec; only 1: rewrite IHl; only 1: intuition; only 1: subst; only 1: easy; only 1: simpl; only 1: rewrite IHl; only 1: reflexivity).	0.050039	12
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.excluded_middle_independence_general_premises	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ReDun.NoDup_nodup	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: constructor; only 1: simpl; only 1: destruct in_dec; only 1: assumption; only 1: constructor; only 1: rewrite nodup_In; only 1: easy; only 1: assumption).	0.047514	10
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.le_epsilon	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ReDun.nodup_inv	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.completeness_weak	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.Unrestricted_minimization_entails_excluded_middle.unrestricted_minimization_entails_excluded_middle	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ReDun.NoDup_count_occ	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.Excluded_middle_entails_unrestricted_minimization.excluded_middle_entails_unrestricted_minimization	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rdiv_lt_0_compat	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmult_lt_0_compat; only 1: assumption; only 1: auto with real).	0.090117	4
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.Example_of_undecidable_predicate_with_the_minimization_property.undecidable_predicate_with_the_minimization_property	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ReDun.NoDup_count_occ'	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.representative_boolean_partition_imp_excluded_middle	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rdiv_plus_distr	120	0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply Rmult_plus_distr_r).	0.081309	4
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ReDun.NoDup_nth_error	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Rdiv_minus_distr	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold Rminus; only 1: unfold Rdiv; only 1: rewrite Rmult_plus_distr_r; only 1: ring).	0.115540	7
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ReDun.NoDup_nth	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ReDun.NoDup_incl_length	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ReDun.NoDup_length_incl	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.NoDup_map_inv	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.NatSeq.seq_length	120
coq-tactician-stdlib.8.11.dev	Coq.Reals.RIneq.Req_EM_T	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.NatSeq.seq_nth	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.NatSeq.seq_shift	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.NatSeq.in_seq	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.NatSeq.seq_NoDup	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.NatSeq.seq_app	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Exists_Forall.One_predicate.Exists_exists	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: induction 1; only 1: firstorder; only 1: firstorder; only 1: induction l; only 1: firstorder; only 1: firstorder; only 1: subst; only 1: auto).	0.039141	9
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Exists_Forall.One_predicate.Exists_nil	120	0.0.0	synth with cache (only 1: split; only 1: inversion 1; only 1: inversion 1).	0.017608	3
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Exists_Forall.One_predicate.Exists_cons	120	0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: inversion 1; only 1: auto; only 1: auto; only 1: inversion 1; only 1: auto; only 1: auto).	0.028644	7
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Exists_Forall.One_predicate.Exists_dec	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Exists_Forall.One_predicate.Forall_forall	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: induction 1; only 1: firstorder; only 1: firstorder; only 1: subst; only 1: auto; only 1: induction l; only 1: firstorder; only 1: firstorder).	0.033849	9
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Exists_Forall.One_predicate.Forall_inv	120	0.0.0	synth with cache (only 1: intros; only 1: inversion H; only 1: trivial).	0.024955	3
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Exists_Forall.One_predicate.Forall_rect	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Exists_Forall.One_predicate.Forall_dec	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Exists_Forall.Forall_inv_tail	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Exists_Forall.Exists_impl	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Exists_Forall.Forall_Exists_neg	120	0.0.0	synth with cache (only 1: rewrite Forall_forall; only 1: rewrite Exists_exists; only 1: firstorder).	0.024808	3
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Exists_Forall.Exists_Forall_neg	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Exists_Forall.neg_Forall_Exists_neg	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Exists_Forall.Forall_Exists_dec	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Exists_Forall.Forall_impl	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite Forall_forall; only 1: rewrite Forall_forall; only 1: firstorder).	0.034250	7
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Forall2.Forall2_refl	120	0	synth with cache (only 1: apply Forall2_nil).	0.016275	1
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Forall2.Forall2_app_inv_l	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Forall2.Forall2_app_inv_r	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Forall2.Forall2_app	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ForallPairs.ForallOrdPairs_In	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ForallPairs.ForallPairs_ForallOrdPairs	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction l; only 1: auto; only 1: intros ?; only 1: constructor; only 1: apply <- Forall_forall; only 1: intros; only 1: apply H; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: apply IHl; only 1: red; only 1: intros; only 1: apply H; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.090439	19
coq-tactician-stdlib.8.11.dev	Coq.funind.Recdef.le_lt_SS	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply Nat.lt_succ_r; only 1: apply Nat.le_le_succ_r; only 1: trivial).	0.010754	4
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ForallPairs.ForallOrdPairs_ForallPairs	120
coq-tactician-stdlib.8.11.dev	Coq.funind.Recdef.Splus_lt	120	0.0.0	synth with cache (only 1: apply Nat.lt_succ_r; only 1: rewrite Nat.add_comm; only 1: apply Nat.le_add_r).	0.014876	3
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Repeat.repeat_length	120	0.0.0.0.0.0	synth with cache (only 1: induction n; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: rewrite IHn; only 1: reflexivity).	0.019631	6
coq-tactician-stdlib.8.11.dev	Coq.funind.Recdef.SSplus_lt	120	0.0	synth with cache (only 1: apply le_lt_SS; only 1: apply Nat.le_add_r).	0.009328	2
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Repeat.repeat_spec	120	0.0.0.0.0.0.0	synth with cache (only 1: induction n; only 1: simpl; only 1: destruct 1; only 1: simpl; only 1: destruct 1; only 1: auto; only 1: auto).	0.023785	7
coq-tactician-stdlib.8.11.dev	Coq.funind.Recdef.max	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.Euclid.eucl_dev	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.Euclid.quotient	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.Euclid.modulo	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.eq_dec	120	0	synth with cache (only 1: decide equality).	0.021663	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Wf_nat.Well_founded_Nat.well_founded_ltof	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.xI_succ_xO	120	0	synth with cache (only 1: reflexivity).	0.009417	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Wf_nat.Well_founded_Nat.well_founded_gtof	120	0	synth with cache (only 1: exact well_founded_ltof).	0.008560	1
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.succ_discr	120	0.0.0.0	synth with cache (only 1: destruct p; only 1: easy; only 1: easy; only 1: easy).	0.024247	4
coq-tactician-stdlib.8.11.dev	Coq.Arith.Wf_nat.Well_founded_Nat.induction_ltof1	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.pred_double_spec	120	0	synth with cache (only 1: reflexivity).	0.008089	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Wf_nat.Well_founded_Nat.induction_gtof1	120	0	synth with cache (only 1: exact induction_ltof1).	0.009393	1
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.succ_pred_double	120	0.0.0.0.0.0.0.0	synth with cache (only 1: induction p; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: f_equal; only 1: easy; only 1: simpl; only 1: auto).	0.018328	8
coq-tactician-stdlib.8.11.dev	Coq.Arith.Wf_nat.Well_founded_Nat.induction_ltof2	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.Wf_nat.Well_founded_Nat.induction_gtof2	120	0	synth with cache (only 1: exact induction_ltof1).	0.009938	1
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.pred_double_succ	120	0.0.0.0.0.0.0.0	synth with cache (only 1: induction p; only 1: simpl; only 1: f_equal; only 1: easy; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: auto).	0.017748	8
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.double_succ	120	0.0.0.0	synth with cache (only 1: destruct p; only 1: easy; only 1: easy; only 1: easy).	0.010690	4
coq-tactician-stdlib.8.11.dev	Coq.Arith.Wf_nat.Well_founded_Nat.well_founded_lt_compat	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.pred_double_xO_discr	120	0.0.0.0	synth with cache (only 1: destruct p; only 1: easy; only 1: easy; only 1: easy).	0.072023	4
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.succ_not_1	120	0.0.0.0	synth with cache (only 1: destruct p; only 1: easy; only 1: easy; only 1: easy).	0.021330	4
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.pred_succ	120	0.0.0.0.0.0.0	synth with cache (only 1: destruct p; only 1: simpl; only 1: apply pred_double_succ; only 1: simpl; only 1: trivial; only 1: simpl; only 1: auto).	0.012442	7
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.succ_pred_or	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct p; only 1: simpl; only 1: auto; only 1: simpl; only 1: right; only 1: induction p; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: f_equal; only 1: easy; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.018945	15
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.succ_pred	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct p; only 1: intros ?; only 1: simpl; only 1: trivial; only 1: intros ?; only 1: simpl; only 1: apply succ_pred_double; only 1: intros ?; only 1: simpl; only 1: destruct H; only 1: auto).	0.015121	11
coq-tactician-stdlib.8.11.dev	Coq.Arith.Wf_nat.lt_wf	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.succ_inj	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.pred_N_succ	120	0.0.0.0.0.0.0.0	synth with cache (only 1: destruct p; only 1: simpl; only 1: f_equal; only 1: apply pred_double_succ; only 1: simpl; only 1: trivial; only 1: simpl; only 1: auto).	0.016606	8
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_1_r	120	0.0.0.0	synth with cache (only 1: destruct p; only 1: easy; only 1: easy; only 1: easy).	0.011497	4
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_1_l	120	0.0.0.0	synth with cache (only 1: destruct p; only 1: easy; only 1: easy; only 1: easy).	0.012820	4
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_carry_spec	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_comm	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_succ_r	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.Wf_nat.lt_wf_rec1	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.Wf_nat.lt_wf_rec	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.Wf_nat.lt_wf_ind	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.Wf_nat.gt_wf_rec	120	0	synth with cache (only 1: exact lt_wf_rec).	0.010340	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Wf_nat.lt_wf_double_rec	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: pattern n; only 1: apply lt_wf_rec; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: pattern m; only 1: apply lt_wf_rec; only 1: auto with arith).	0.038576	11
coq-tactician-stdlib.8.11.dev	Coq.Arith.Wf_nat.lt_wf_double_ind	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: pattern n; only 1: apply lt_wf_ind; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: pattern m; only 1: apply lt_wf_ind; only 1: auto with arith).	0.033919	11
coq-tactician-stdlib.8.11.dev	Coq.Arith.Wf_nat.LT_WF_REL.acc_lt_rel	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.Wf_nat.LT_WF_REL.well_founded_inv_lt_rel_compat	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.Wf_nat.well_founded_inv_rel_inv_lt_rel	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.Wf_nat.dec_inh_nat_subset_has_unique_least_element	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_succ_l	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_no_neutral	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_carry_add	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: apply succ_inj; only 1: rewrite <- add_carry_spec; only 1: rewrite <- add_carry_spec; only 1: easy).	0.017040	5
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_reg_r	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.zerop	120	0.0.0	synth with cache (only 1: destruct n; only 1: auto with arith; only 1: auto with arith).	0.015863	3
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_reg_l	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.lt_eq_lt_dec	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.gt_eq_gt_dec	120	0	synth with cache (only 1: apply lt_eq_lt_dec).	0.009577	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.le_lt_dec	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.le_le_S_dec	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.le_ge_dec	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.le_gt_dec	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_cancel_r	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: revert p q; only 1: induction r; only 1: intros ?; only 1: destruct p; only 1: intros ?; only 1: destruct q; only 1: intros ?; only 1: destr_eq H; only 1: f_equal; only 1: auto using add_carry_add; only 1: intros ?; only 1: destr_eq H; only 1: intros ?; only 1: destr_eq H; only 1: contradict H; only 1: rewrite add_carry_spec; only 1: rewrite <- add_succ_r; only 1: auto using add_no_neutral; only 1: intros ?; only 1: destruct q; only 1: intros ?; only 1: destr_eq H; only 1: intros ?; only 1: destr_eq H; only 1: f_equal; only 1: auto; only 1: intros ?; only 1: destr_eq H; only 1: intros ?; only 1: destruct q; only 1: intros ?; only 1: destr_eq H; only 1: contradict H; only 1: rewrite add_carry_spec; only 1: rewrite <- add_succ_r; only 1: auto using add_no_neutral; only 1: intros ?; only 1: destr_eq H; only 1: intros ?; only 1: auto using add_carry_add; only 1: intros ?; only 1: destruct p; only 1: intros ?; only 1: destruct q; only 1: intros ?; only 1: destr_eq H; only 1: f_equal; only 1: auto; only 1: intros ?; only 1: destr_eq H; only 1: intros ?; only 1: destr_eq H; only 1: contradict H; only 1: auto using add_no_neutral; only 1: intros ?; only 1: destruct q; only 1: intros ?; only 1: destr_eq H; only 1: intros ?; only 1: destr_eq H; only 1: f_equal; only 1: auto; only 1: intros ?; only 1: destr_eq H; only 1: intros ?; only 1: destruct q; only 1: intros ?; only 1: destr_eq H; only 1: contradict H; only 1: auto using add_no_neutral; only 1: intros ?; only 1: destr_eq H; only 1: intros ?; only 1: auto; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply succ_inj; only 1: rewrite <- add_1_r; only 1: rewrite <- add_1_r; only 1: easy; only 1: congruence).	0.205227	83
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.le_lt_eq_dec	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.le_dec	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_cancel_l	120	0.0.0	synth with cache (only 1: split; only 1: apply add_reg_l; only 1: congruence).	0.015468	3
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.lt_dec	120	0	synth with cache (only 1: apply le_dec).	0.009352	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.gt_dec	120	0	synth with cache (only 1: apply lt_dec).	0.009185	1
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_carry_reg_r	120	0.0.0.0	synth with cache (only 1: intros ?; only 1: apply add_reg_r with (r := r); only 1: apply add_carry_add; only 1: easy).	0.015137	4
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.ge_dec	120	0	synth with cache (only 1: apply le_dec).	0.008280	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.dec_le	120	0	synth with cache (only 1: apply Nat.le_decidable).	0.009667	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.dec_lt	120	0	synth with cache (only 1: apply Nat.lt_decidable).	0.008484	1
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_carry_reg_l	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.dec_gt	120	0	synth with cache (only 1: apply Nat.lt_decidable).	0.009880	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.dec_ge	120	0	synth with cache (only 1: apply Nat.le_decidable).	0.008287	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.not_eq	120	0	synth with cache (only 1: apply Nat.lt_gt_cases).	0.013015	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.not_le	120	0	synth with cache (only 1: apply Nat.nle_gt).	0.012314	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.not_gt	120	0	synth with cache (only 1: apply Nat.nlt_ge).	0.010603	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.not_ge	120	0	synth with cache (only 1: apply Nat.nle_gt).	0.009988	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.not_lt	120	0	synth with cache (only 1: apply Nat.nlt_ge).	0.009281	1
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_assoc	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: revert q r; only 1: induction p; only 1: intros ?; only 1: destruct q; only 1: intros ?; only 1: destruct r; only 1: simpl; only 1: f_equal; only 1: rewrite add_carry_spec; only 1: rewrite add_carry_spec; only 1: rewrite add_succ_r; only 1: rewrite add_succ_l; only 1: f_equal; only 1: trivial; only 1: simpl; only 1: f_equal; only 1: rewrite add_carry_spec; only 1: rewrite add_carry_spec; only 1: rewrite add_succ_l; only 1: f_equal; only 1: trivial; only 1: simpl; only 1: f_equal; only 1: rewrite add_carry_spec; only 1: rewrite add_succ_r; only 1: f_equal; only 1: intros ?; only 1: destruct r; only 1: simpl; only 1: f_equal; only 1: rewrite add_carry_spec; only 1: rewrite add_carry_spec; only 1: f_equal; only 1: trivial; only 1: simpl; only 1: f_equal; only 1: trivial; only 1: simpl; only 1: f_equal; only 1: rewrite add_carry_spec; only 1: f_equal; only 1: intros ?; only 1: destruct r; only 1: simpl; only 1: f_equal; only 1: rewrite add_succ_r; only 1: rewrite add_succ_l; only 1: f_equal; only 1: simpl; only 1: f_equal; only 1: rewrite add_carry_spec; only 1: rewrite add_succ_l; only 1: f_equal; only 1: simpl; only 1: f_equal; only 1: rewrite add_1_r; only 1: f_equal; only 1: intros ?; only 1: destruct q; only 1: intros ?; only 1: destruct r; only 1: simpl; only 1: f_equal; only 1: rewrite add_carry_spec; only 1: rewrite add_carry_spec; only 1: rewrite add_succ_r; only 1: f_equal; only 1: trivial; only 1: simpl; only 1: f_equal; only 1: trivial; only 1: simpl; only 1: f_equal; only 1: rewrite add_succ_r; only 1: f_equal; only 1: intros ?; only 1: destruct r; only 1: simpl; only 1: f_equal; only 1: trivial; only 1: simpl; only 1: f_equal; only 1: trivial; only 1: simpl; only 1: f_equal; only 1: intros ?; only 1: destruct r; only 1: simpl; only 1: f_equal; only 1: rewrite add_carry_spec; only 1: rewrite add_succ_r; only 1: f_equal; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: f_equal; only 1: rewrite add_1_r; only 1: f_equal; only 1: intros ?; only 1: intros ?; only 1: rewrite add_1_l; only 1: rewrite add_1_l; only 1: rewrite add_succ_l; only 1: auto).	0.205657	104
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.nat_compare_lt	120	0.0	synth with cache (only 1: symmetry; only 1: apply Nat.compare_lt_iff).	0.011890	2
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.nat_compare_gt	120	0.0	synth with cache (only 1: symmetry; only 1: apply Nat.compare_gt_iff).	0.010213	2
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.nat_compare_le	120	0.0	synth with cache (only 1: symmetry; only 1: apply Nat.compare_le_iff).	0.011351	2
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.nat_compare_ge	120	0.0	synth with cache (only 1: symmetry; only 1: apply Nat.compare_ge_iff).	0.010860	2
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.nat_compare_eq	120	0	synth with cache (only 1: apply Nat.compare_eq_iff).	0.010277	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.nat_compare_Lt_lt	120	0	synth with cache (only 1: apply Nat.compare_lt_iff).	0.012192	1
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_xO	120	0	synth with cache (only 1: easy).	0.012171	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.nat_compare_Gt_gt	120	0	synth with cache (only 1: apply Nat.compare_gt_iff).	0.010577	1
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_xI_pred_double	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.nat_compare_equiv	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold nat_compare_alt; only 1: destruct lt_eq_lt_dec; only 1: destruct s; only 1: apply Nat.compare_lt_iff; only 1: auto with arith; only 1: apply Nat.compare_eq_iff; only 1: trivial; only 1: apply Nat.compare_gt_iff; only 1: assumption).	0.022902	9
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.leb_iff_conv	120	0.0	synth with cache (only 1: rewrite Nat.leb_nle; only 1: apply Nat.nle_gt).	0.011557	2
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_xO_pred_double	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.leb_correct	120	0	synth with cache (only 1: apply Nat.leb_le).	0.010892	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.leb_complete	120	0	synth with cache (only 1: apply Nat.leb_le).	0.010677	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.leb_correct_conv	120	0	synth with cache (only 1: apply leb_iff_conv).	0.010997	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.leb_complete_conv	120	0	synth with cache (only 1: apply leb_iff_conv).	0.010836	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.leb_compare	120	0.0	synth with cache (only 1: rewrite Nat.compare_le_iff; only 1: apply Nat.leb_le).	0.011612	2
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_diag	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.peano_rect_succ	120	0.0.0.0.0.0.0.0	synth with cache (only 1: revert P a f; only 1: induction p; only 1: intros; only 1: simpl; only 1: rewrite IHp; only 1: easy; only 1: trivial; only 1: trivial).	0.041249	8
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.peano_rect_base	120	0	synth with cache (only 1: trivial).	0.012095	1
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.peano_case	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply peano_ind; only 1: auto; only 1: auto).	0.013077	4
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.eq_dep_eq_positive	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.PeanoViewUnique	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.peano_equiv	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_1_l	120	0	synth with cache (only 1: easy).	0.011614	1
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_1_r	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction p; only 1: simpl; only 1: f_equal; only 1: easy; only 1: simpl; only 1: f_equal; only 1: easy; only 1: simpl; only 1: auto).	0.022231	9
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_xO_r	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction p; only 1: simpl; only 1: f_equal; only 1: f_equal; only 1: trivial; only 1: simpl; only 1: f_equal; only 1: trivial; only 1: simpl; only 1: trivial).	0.051722	10
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_xI_r	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_comm	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_add_distr_l	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.Factorial.lt_O_fact	120	0.0.0.0.1	synth with cache (only 1: induction n; only 1: simpl; only 1: auto with arith; only 1: simpl; only 1: auto with arith).	0.014398	8
coq-tactician-stdlib.8.11.dev	Coq.Arith.Factorial.fact_neq_0	120	0.0	synth with cache (only 1: apply Nat.neq_0_lt_0; only 1: apply lt_O_fact).	0.011732	2
coq-tactician-stdlib.8.11.dev	Coq.Arith.Factorial.fact_le	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.Mult.mult_assoc_reverse	120	0.0	synth with cache (only 1: symmetry; only 1: apply Nat.mul_assoc).	0.012837	2
coq-tactician-stdlib.8.11.dev	Coq.Arith.Mult.mult_is_O	120	0	synth with cache (only 1: apply Nat.eq_mul_0).	0.013022	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Mult.mult_is_one	120	0	synth with cache (only 1: apply Nat.eq_mul_1).	0.011956	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Mult.mult_O_le	120	0.0.0.0.0.0	synth with cache (only 1: destruct m; only 1: left; only 1: trivial using Nat.le_add_r; only 1: right; only 1: simpl; only 1: trivial using Nat.le_add_r).	0.014658	6
coq-tactician-stdlib.8.11.dev	Coq.Arith.Mult.mult_le_compat_l	120	0.0	synth with cache (only 1: apply Nat.mul_le_mono_nonneg_l; only 1: apply Nat.le_0_l).	0.009918	2
coq-tactician-stdlib.8.11.dev	Coq.Arith.Mult.mult_le_compat_r	120	0.0	synth with cache (only 1: apply Nat.mul_le_mono_nonneg_r; only 1: apply Nat.le_0_l).	0.011226	2
coq-tactician-stdlib.8.11.dev	Coq.Arith.Mult.mult_le_compat	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Nat.mul_le_mono_nonneg; only 1: apply Nat.le_0_l; only 1: trivial; only 1: apply Nat.le_0_l; only 1: trivial).	0.014601	6
coq-tactician-stdlib.8.11.dev	Coq.Arith.Mult.mult_S_lt_compat_l	120	0.0	synth with cache (only 1: apply Nat.mul_lt_mono_pos_l; only 1: apply Nat.lt_0_succ).	0.012583	2
coq-tactician-stdlib.8.11.dev	Coq.Arith.Mult.mult_lt_compat_l	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply Nat.mul_lt_mono_pos_l; only 1: easy; only 1: easy).	0.011958	4
coq-tactician-stdlib.8.11.dev	Coq.Arith.Mult.mult_lt_compat_r	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply Nat.mul_lt_mono_pos_r; only 1: easy; only 1: easy).	0.014798	4
coq-tactician-stdlib.8.11.dev	Coq.Arith.Mult.mult_S_le_reg_l	120	0.0	synth with cache (only 1: apply Nat.mul_le_mono_pos_l; only 1: apply Nat.lt_0_succ).	0.011214	2
coq-tactician-stdlib.8.11.dev	Coq.Arith.Mult.odd_even_lem	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.Mult.mult_acc_aux	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.Mult.mult_tail_mult	120	0.0.0.0	synth with cache (only 1: intros; only 1: unfold tail_mult; only 1: rewrite <- mult_acc_aux; only 1: auto).	0.013684	4
coq-tactician-stdlib.8.11.dev	Coq.Arith.Gt.gt_n_S	120	0	synth with cache (only 1: apply Nat.succ_lt_mono).	0.013553	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Gt.gt_S_n	120	0	synth with cache (only 1: apply Nat.succ_lt_mono).	0.011058	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Gt.gt_S	120	0.0.0.0	synth with cache (only 1: intros ?; only 1: apply Nat.lt_eq_cases; only 1: apply Nat.succ_le_mono; only 1: easy).	0.013219	4
coq-tactician-stdlib.8.11.dev	Coq.Arith.Gt.gt_pred	120	0	synth with cache (only 1: apply Nat.lt_succ_lt_pred).	0.009243	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Gt.le_not_gt	120	0	synth with cache (only 1: apply Nat.le_ngt).	0.011916	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Gt.gt_not_le	120	0	synth with cache (only 1: apply Nat.lt_nge).	0.011192	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Gt.le_S_gt	120	0	synth with cache (only 1: apply Nat.le_succ_l).	0.009689	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Gt.gt_S_le	120	0	synth with cache (only 1: apply Nat.succ_le_mono).	0.008933	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Gt.gt_le_S	120	0	synth with cache (only 1: apply Nat.le_succ_l).	0.009863	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Gt.le_gt_S	120	0	synth with cache (only 1: apply Nat.succ_le_mono).	0.010050	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Gt.le_gt_trans	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply Nat.lt_le_trans with m; only 1: easy; only 1: easy).	0.013247	4
coq-tactician-stdlib.8.11.dev	Coq.Arith.Gt.gt_le_trans	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply Nat.le_lt_trans with m; only 1: easy; only 1: easy).	0.011841	4
coq-tactician-stdlib.8.11.dev	Coq.Arith.Gt.gt_trans	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply Nat.lt_trans with m; only 1: easy; only 1: easy).	0.013550	4
coq-tactician-stdlib.8.11.dev	Coq.Arith.Gt.gt_trans_S	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Nat.lt_le_trans with m; only 1: trivial; only 1: apply Nat.succ_le_mono; only 1: easy).	0.016237	5
coq-tactician-stdlib.8.11.dev	Coq.Arith.Gt.gt_0_eq	120	0.0.0.0.0	synth with cache (only 1: destruct n; only 1: right; only 1: trivial; only 1: left; only 1: apply Nat.lt_0_succ).	0.014448	5
coq-tactician-stdlib.8.11.dev	Coq.Arith.Gt.plus_gt_reg_l	120	0	synth with cache (only 1: apply Nat.add_lt_mono_l).	0.012265	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Gt.plus_gt_compat_l	120	0	synth with cache (only 1: apply Nat.add_lt_mono_l).	0.012645	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.nat_rect_wd	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: induction n; only 1: assumption; only 1: apply H0; only 1: easy).	0.094311	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.itersucc_or_itersucc	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.succ_swap_pred	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.itersucc_or_iterpred	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.itersucc0_or_iterpred0	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.initial_alt	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.initial_alt2	120	0	synth with cache (only 1: firstorder).	0.012079	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.InitialExists.initial_unique	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.InitialExists.initial_ancestor	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.InitialExists.SuccPred.succ_pred_approx	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.InitialDontExists.succ_onto_gives_succ_pred	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.InitialDontExists.succ_onto_pred_injective	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply succ_wd in H; only 1: rewrite succ_onto_gives_succ_pred in H; only 1: rewrite succ_onto_gives_succ_pred in H; only 1: auto).	0.021835	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.bi_induction_pred	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply bi_induction; only 1: auto; only 1: auto; only 1: clear n; only 1: intros ?; only 1: split; only 1: auto; only 1: intros ?; only 1: apply H2 in H3; only 1: rewrite pred_succ in H3; only 1: auto).	0.029506	12
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.central_induction_pred	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZOfNat.ofnat_zero	120	0	synth with cache (only 1: reflexivity).	0.009048	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZOfNat.ofnat_succ	120	0.0	synth with cache (only 1: unfold ofnat; only 1: easy).	0.012815	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZOfNat.ofnat_pred	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_S_gt_0	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_S_neq_0	120	0.0.0	synth with cache (only 1: intros; only 1: apply lt_neq; only 1: apply ofnat_S_gt_0).	0.011403	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_injective	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_eq	120	0.0.0.0.0	synth with cache (only 1: split; only 1: apply ofnat_injective; only 1: intros; only 1: subst; only 1: easy).	0.015623	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_lt	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_le	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite lt_eq_cases; only 1: rewrite ofnat_lt; only 1: rewrite ofnat_eq; only 1: split; only 1: destruct 1; only 1: auto with arith; only 1: subst; only 1: auto with arith; only 1: apply Lt.le_lt_or_eq).	0.024062	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_add_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_add	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite ofnat_add_l; only 1: induction n; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: f_equiv; only 1: easy).	0.031696	8
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_mul	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_sub_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_sub	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite ofnat_sub_r; only 1: revert n H; only 1: induction m; only 1: intros; only 1: rewrite <- minus_n_O; only 1: simpl; only 1: easy; only 1: intros; only 1: destruct n; only 1: inversion H; only 1: rewrite @nat_rect_succ_r; only 1: simpl; only 1: etransitivity; only 1: apply IHm; only 1: auto with arith; only 1: eapply nat_rect_wd; only 1: symmetry; only 1: apply pred_succ; only 1: apply pred_wd).	0.051451	22
coq-tactician-stdlib.8.11.dev	Coq.Sets.Multiset.multiset_defs.meq_refl	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Multiset.multiset_defs.meq_trans	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Multiset.multiset_defs.meq_sym	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Multiset.multiset_defs.munion_empty_left	120	0.0.0.0	synth with cache (only 1: unfold meq; only 1: unfold munion; only 1: simpl; only 1: auto).	0.014439	4
coq-tactician-stdlib.8.11.dev	Coq.Sets.Multiset.multiset_defs.munion_empty_right	120	0.0.0.0	synth with cache (only 1: unfold meq; only 1: unfold munion; only 1: simpl; only 1: auto).	0.012065	4
coq-tactician-stdlib.8.11.dev	Coq.Sets.Multiset.multiset_defs.munion_comm	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Multiset.multiset_defs.munion_ass	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Multiset.multiset_defs.meq_left	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Multiset.multiset_defs.meq_right	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Multiset.multiset_defs.munion_rotate	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Multiset.multiset_defs.meq_congr	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply cong_congr; only 1: auto using meq_left, meq_right; only 1: auto using meq_left, meq_right; only 1: exact meq_trans; only 1: auto using meq_left, meq_right; only 1: auto using meq_left, meq_right).	0.019595	7
coq-tactician-stdlib.8.11.dev	Coq.Sets.Multiset.multiset_defs.munion_perm_left	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Multiset.multiset_defs.multiset_twist1	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply twist; only 1: auto using munion_comm, munion_ass, meq_sym, meq_left, meq_right; only 1: auto using munion_comm, munion_ass, meq_sym, meq_left, meq_right; only 1: auto using munion_comm, munion_ass, meq_sym, meq_left, meq_right; only 1: auto using munion_comm, munion_ass, meq_sym, meq_left, meq_right; only 1: exact meq_trans; only 1: auto using munion_comm, munion_ass, meq_sym, meq_left, meq_right).	0.103754	8
coq-tactician-stdlib.8.11.dev	Coq.Sets.Multiset.multiset_defs.multiset_twist2	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Multiset.multiset_defs.treesort_twist1	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Multiset.multiset_defs.treesort_twist2	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Multiset.multiset_defs.meq_singleton	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Peano.NPeano.Even_equiv	120	0.0	synth with cache (only 1: symmetry; only 1: apply even_equiv).	0.013429	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Peano.NPeano.Odd_equiv	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.Div2.ind_0_1_SS	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.Div2.lt_div2	120	0	synth with cache (only 1: apply Nat.lt_div2).	0.009769	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Div2.even_div2	120	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: rewrite even_equiv; only 1: intros ?; only 1: destruct H; only 1: intropattern subst -> H; only 1: rewrite Nat.div2_succ_double; only 1: induction x; only 1: trivial; only 1: simpl Init.Nat.mul; only 1: rewrite Nat.add_succ_r; only 1: simpl; only 1: simpl in IHx; only 1: rewrite IHx; only 1: reflexivity).	0.027425	13
coq-tactician-stdlib.8.11.dev	Coq.Arith.Div2.odd_div2	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: rewrite odd_equiv; only 1: intros ?; only 1: destruct H; only 1: intropattern subst -> H; only 1: rewrite Nat.add_1_r; only 1: rewrite Nat.div2_succ_double; only 1: simpl; only 1: f_equal; only 1: symmetry; only 1: apply Nat.div2_double).	0.022937	10
coq-tactician-stdlib.8.11.dev	Coq.Arith.Div2.div2_even	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.Div2.div2_odd	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.Div2.even_odd_div2	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.Div2.double_S	120	0	synth with cache (only 1: apply Nat.add_succ_r).	0.010081	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Div2.double_plus	120	0	synth with cache (only 1: apply Nat.add_shuffle1).	0.011185	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Div2.even_odd_double	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.Div2.even_2n	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.Div2.odd_S2n	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.Div2.div2_double	120	0.0.0.0.0.0.0.0	synth with cache (only 1: induction n; only 1: trivial; only 1: simpl Init.Nat.mul; only 1: rewrite Nat.add_succ_r; only 1: simpl; only 1: simpl in IHn; only 1: rewrite IHn; only 1: reflexivity).	0.019168	8
coq-tactician-stdlib.8.11.dev	Coq.Arith.Div2.div2_double_plus_one	120	0	synth with cache (only 1: apply Nat.div2_succ_double).	0.009474	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.plus_assoc_reverse	120	0.0	synth with cache (only 1: symmetry; only 1: apply Nat.add_assoc).	0.011728	2
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.plus_reg_l	120	0	synth with cache (only 1: apply Nat.add_cancel_l).	0.010401	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.plus_le_reg_l	120	0	synth with cache (only 1: apply Nat.add_le_mono_l).	0.008646	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.plus_lt_reg_l	120	0	synth with cache (only 1: apply Nat.add_lt_mono_l).	0.009521	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.plus_le_compat_l	120	0	synth with cache (only 1: apply Nat.add_le_mono_l).	0.009192	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.plus_le_compat_r	120	0	synth with cache (only 1: apply Nat.add_le_mono_r).	0.009546	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.plus_lt_compat_l	120	0	synth with cache (only 1: apply Nat.add_lt_mono_l).	0.010399	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.plus_lt_compat_r	120	0	synth with cache (only 1: apply Nat.add_lt_mono_r).	0.010426	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.plus_le_compat	120	0	synth with cache (only 1: apply Nat.add_le_mono).	0.009031	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.plus_le_lt_compat	120	0	synth with cache (only 1: apply Nat.add_le_lt_mono).	0.009386	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.plus_lt_le_compat	120	0	synth with cache (only 1: apply Nat.add_lt_le_mono).	0.010445	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.plus_lt_compat	120	0	synth with cache (only 1: apply Nat.add_lt_mono).	0.008902	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.le_plus_l	120	0	synth with cache (only 1: apply Nat.le_add_r).	0.010466	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.le_plus_r	120	0.0	synth with cache (only 1: rewrite Nat.add_comm; only 1: apply Nat.le_add_r).	0.011281	2
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.le_plus_trans	120	0.0.0	synth with cache (only 1: intros; only 1: rewrite <- Nat.le_add_r; only 1: easy).	0.012364	3
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.lt_plus_trans	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply Nat.lt_le_trans with m; only 1: trivial; only 1: apply Nat.le_add_r).	0.010635	4
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.plus_is_O	120	0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: split; only 1: easy; only 1: easy; only 1: split; only 1: easy; only 1: easy).	0.020506	7
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.plus_is_one	120	0.0.0.0.0	synth with cache (only 1: destruct m; only 1: auto; only 1: destruct m; only 1: auto; only 1: discriminate).	0.018204	5
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.plus_tail_plus	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.succ_plus_discr	120	0	synth with cache (only 1: apply Nat.succ_add_discr).	0.011419	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Peano_dec.O_or_S	120	0.0.0.0.0.0	synth with cache (only 1: induction n; only 1: right; only 1: trivial; only 1: left; only 1: exists n; only 1: auto).	0.017446	6
coq-tactician-stdlib.8.11.dev	Coq.Arith.Peano_dec.dec_eq_nat	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.Peano_dec.le_unique	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.Minus.minus_n_O	120	0.0.0.0	synth with cache (only 1: symmetry; only 1: destruct n; only 1: easy; only 1: easy).	0.012394	4
coq-tactician-stdlib.8.11.dev	Coq.Arith.Minus.minus_Sn_m	120	0.0.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Nat.sub_succ_l; only 1: assumption).	0.010208	4
coq-tactician-stdlib.8.11.dev	Coq.Arith.Minus.pred_of_minus	120	0.0	synth with cache (only 1: symmetry; only 1: apply Nat.sub_1_r).	0.010630	2
coq-tactician-stdlib.8.11.dev	Coq.Arith.Minus.minus_diag_reverse	120	0.0	synth with cache (only 1: symmetry; only 1: apply Nat.sub_diag).	0.008995	2
coq-tactician-stdlib.8.11.dev	Coq.Arith.Minus.minus_plus_simpl_l_reverse	120	0.0.0.0	synth with cache (only 1: rewrite Nat.sub_add_distr; only 1: rewrite Nat.add_comm; only 1: rewrite Nat.add_sub; only 1: easy).	0.013981	4
coq-tactician-stdlib.8.11.dev	Coq.Arith.Minus.plus_minus	120	0.0.0	synth with cache (only 1: symmetry; only 1: apply Nat.add_sub_eq_l; only 1: easy).	0.010406	3
coq-tactician-stdlib.8.11.dev	Coq.Arith.Minus.minus_plus	120	0.0	synth with cache (only 1: rewrite Nat.add_comm; only 1: apply Nat.add_sub).	0.009468	2
coq-tactician-stdlib.8.11.dev	Coq.Arith.Minus.le_plus_minus_r	120	0.0	synth with cache (only 1: rewrite Nat.add_comm; only 1: apply Nat.sub_add).	0.010093	2
coq-tactician-stdlib.8.11.dev	Coq.Arith.Minus.le_plus_minus	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: rewrite Nat.add_comm; only 1: apply Nat.sub_add; only 1: trivial).	0.015100	5
coq-tactician-stdlib.8.11.dev	Coq.Arith.Minus.lt_O_minus_lt	120	0	synth with cache (only 1: apply Nat.lt_add_lt_sub_r).	0.011175	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Minus.not_le_minus_0	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Nat.sub_0_le; only 1: apply Nat.lt_le_incl; only 1: apply Nat.lt_nge; only 1: easy).	0.014090	5
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.bet_eq	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.between_le	120	0.0.0	synth with cache (only 1: induction 1; only 1: auto with arith; only 1: auto with arith).	0.012044	3
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.between_Sk_l	120	0.0.0.0.0	synth with cache (only 1: induction 1; only 1: auto with arith; only 1: destruct H; only 1: auto with arith; only 1: auto with arith).	0.023667	5
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.between_restr	120	0.0.0	synth with cache (only 1: induction 1; only 1: auto with arith; only 1: auto with arith).	0.016685	3
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.exists_le_S	120	0.0.0	synth with cache (only 1: induction 1; only 1: auto with arith; only 1: auto with arith).	0.013492	3
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.exists_S_le	120	0.0.0	synth with cache (only 1: intros; only 1: apply le_S_n; only 1: auto with arith).	0.011377	3
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.in_int_intro	120	0.0.0	synth with cache (only 1: split; only 1: assumption; only 1: assumption).	0.012282	3
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.in_int_lt	120	0.0.0.0.0.0	synth with cache (only 1: intros *; only 1: intros ?; only 1: destruct H; only 1: eapply PeanoNat.Nat.le_lt_trans; only 1: eassumption; only 1: assumption).	0.013648	6
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.in_int_p_Sq	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.in_int_S	120	0.0.0.0	synth with cache (only 1: intros *; only 1: intros ?; only 1: destruct H; only 1: auto with arith).	0.014830	4
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.in_int_Sp_q	120	0.0.0.0	synth with cache (only 1: intros *; only 1: intros ?; only 1: destruct H; only 1: auto with arith).	0.013520	4
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.between_in_int	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.in_int_between	120	0.0.0	synth with cache (only 1: induction 1; only 1: auto with arith; only 1: auto with arith).	0.017549	3
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.exists_in_int	120	0.0.0.0.0.0.0.0	synth with cache (only 1: induction 1; only 1: destruct IHexists_between; only 1: exists x; only 1: auto with arith; only 1: auto with arith; only 1: exists l; only 1: auto with arith; only 1: auto with arith).	0.021028	8
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.in_int_exists	120	0.0.0.0.0.0.0	synth with cache (only 1: intros *; only 1: intros ?; only 1: destruct H; only 1: intros ?; only 1: induction H0; only 1: auto with arith; only 1: auto with arith).	0.016826	7
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.between_or_exists	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.between_not_exists	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.nth_le	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.event_O	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct H; only 1: replace 0 with x; only 1: auto with arith; only 1: auto with arith).	0.014779	5
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.even_equiv	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.odd_equiv	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.even_or_odd	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.even_odd_dec	120	0.0.0.0.0	synth with cache (only 1: induction n; only 1: auto with arith; only 1: elim IHn; only 1: auto with arith; only 1: auto with arith).	0.015203	5
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.not_even_and_odd	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction n; only 1: intros ?; only 1: intros ?; only 1: inversion H0; only 1: intros ?; only 1: intros ?; only 1: inversion H; only 1: inversion H0; only 1: auto with arith).	0.017865	9
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.even_plus_split	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.odd_plus_split	120	0	synth with cache (only 1: parity_binop).	0.104370	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.even_even_plus	120	0	synth with cache (only 1: parity_binop).	0.063926	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.odd_plus_l	120	0	synth with cache (only 1: parity_binop).	0.059130	1
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Fold2.fold_right_add2	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Remove.InA_dec	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.odd_plus_r	120	0	synth with cache (only 1: parity_binop).	0.094014	1
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Remove.removeA_filter	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Remove.removeA_InA	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.odd_even_plus	120	0	synth with cache (only 1: parity_binop).	0.068188	1
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Remove.removeA_NoDupA	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Remove.removeA_equivlistA	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold equivlistA; only 1: intros; only 1: rewrite removeA_InA; only 1: split; only 1: intros; only 1: rewrite <- H0; only 1: split; only 1: auto; only 1: contradict H; only 1: apply InA_eqA with x0; only 1: auto; only 1: auto; only 1: intros; only 1: rewrite <- H0 in H1; only 1: destruct H1; only 1: inv; only 1: elim H2; only 1: auto; only 1: auto).	0.060504	19
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InfA_ltA	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InfA_compat	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: inversion_clear H0; only 1: intuition; only 1: split; only 1: intros ?; only 1: inv; only 1: constructor; only 1: rewrite <- H; only 1: rewrite <- H1; only 1: auto; only 1: intros ?; only 1: inv; only 1: constructor; only 1: rewrite H; only 1: rewrite H1; only 1: auto).	0.092669	21
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.even_plus_aux	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InfA_eqA	120	0.0.0	synth with cache (only 1: intros ?; only 1: rewrite H; only 1: easy).	0.020940	3
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.even_plus_even_inv_r	120	0	synth with cache (only 1: parity_binop).	0.062640	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Lt.lt_le_S	120	0	synth with cache (only 1: apply Nat.le_succ_l).	0.011068	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Lt.lt_n_Sm_le	120	0	synth with cache (only 1: apply le_S_n).	0.009443	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.even_plus_even_inv_l	120	0	synth with cache (only 1: parity_binop).	0.054129	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Lt.le_lt_n_Sm	120	0.0.0	synth with cache (only 1: induction 1; only 1: auto; only 1: auto).	0.012653	3
coq-tactician-stdlib.8.11.dev	Coq.Arith.Lt.le_not_lt	120	0	synth with cache (only 1: apply Nat.le_ngt).	0.009129	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Lt.lt_not_le	120	0	synth with cache (only 1: apply Nat.lt_nge).	0.009406	1
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.SortA_InfA_InA	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.Lt.neq_0_lt	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply Nat.neq_0_lt_0; only 1: apply Nat.neq_sym; only 1: easy).	0.012492	4
coq-tactician-stdlib.8.11.dev	Coq.Arith.Lt.lt_0_neq	120	0.1.0.0	synth with cache (only 1: intros; only 1: apply Nat.neq_sym; only 1: apply Nat.neq_0_lt_0; only 1: easy).	0.011702	8
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.In_InfA	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.Lt.lt_n_S	120	0	synth with cache (only 1: apply Nat.succ_lt_mono).	0.008916	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Lt.lt_S_n	120	0	synth with cache (only 1: apply Nat.succ_lt_mono).	0.009288	1
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InA_InfA	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.Lt.S_pred	120	0.0.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Nat.lt_succ_pred with m; only 1: assumption).	0.010603	4
coq-tactician-stdlib.8.11.dev	Coq.Arith.Lt.S_pred_pos	120	0	synth with cache (only 1: apply S_pred).	0.007730	1
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InfA_alt	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.even_plus_odd_inv_r	120	0	synth with cache (only 1: parity_binop).	0.052248	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Lt.lt_pred	120	0	synth with cache (only 1: apply Nat.lt_succ_lt_pred).	0.010003	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Lt.lt_pred_n_n	120	0.1.0.0	synth with cache (only 1: intros; only 1: apply Nat.lt_pred_l; only 1: apply Nat.neq_0_lt_0; only 1: easy).	0.012444	8
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InfA_app	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.Lt.le_lt_or_eq	120	0	synth with cache (only 1: apply Nat.lt_eq_cases).	0.011948	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Lt.nat_total_order	120	0	synth with cache (only 1: apply Nat.lt_gt_cases).	0.009514	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.even_plus_odd_inv_l	120	0	synth with cache (only 1: parity_binop).	0.056839	1
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.SortA_app	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.SortA_NoDupA	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.EqlistA.eqlistA_length	120	0.0.0.0	synth with cache (only 1: induction 1; only 1: auto; only 1: simpl; only 1: congruence).	0.019431	4
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.odd_plus_even_inv_l	120	0	synth with cache (only 1: parity_binop).	0.053244	1
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.EqlistA.app_eqlistA_compat	120	0.0.0.0.0.0.0.0	synth with cache (only 1: red; only 1: red; only 1: red; only 1: induction 1; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.028996	8
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.EqlistA.eqlistA_app	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite H; only 1: rewrite H0; only 1: reflexivity).	0.030077	9
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.odd_plus_even_inv_r	120	0	synth with cache (only 1: parity_binop).	0.064401	1
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.EqlistA.eqlistA_rev_app	120	0.0.0.0.0.0.0.0	synth with cache (only 1: induction 1; only 1: auto; only 1: simpl; only 1: intros; only 1: rewrite app_assoc_reverse; only 1: rewrite app_assoc_reverse; only 1: simpl; only 1: auto).	0.034532	8
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.EqlistA.rev_eqlistA_compat	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.EqlistA.eqlistA_rev	120	0	synth with cache (only 1: apply rev_eqlistA_compat).	0.016004	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.odd_plus_odd_inv_l	120	0	synth with cache (only 1: parity_binop).	0.056952	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.odd_plus_odd_inv_r	120	0	synth with cache (only 1: parity_binop).	0.052500	1
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.EqlistA.SortA_equivlistA_eqlistA	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Filter.filter_sort	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Filter.filter_InA	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.even_mult_aux	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.even_mult_l	120	0	synth with cache (only 1: parity_binop).	0.040602	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.even_mult_r	120	0	synth with cache (only 1: parity_binop).	0.041525	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.even_mult_inv_r	120	0	synth with cache (only 1: parity_binop).	0.049885	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.even_mult_inv_l	120	0	synth with cache (only 1: parity_binop).	0.063895	1
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Filter.filter_split	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.odd_mult	120	0	synth with cache (only 1: parity_binop).	0.056328	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.odd_mult_inv_l	120	0	synth with cache (only 1: parity_binop).	0.038522	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.odd_mult_inv_r	120	0	synth with cache (only 1: parity_binop).	0.039315	1
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Find.findA_NoDupA	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow_sub_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow_div_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.exists_div2	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_0_r	120	0.0.0.0.0.0	synth with cache (only 1: destruct b; only 1: simpl; only 1: apply testbit_odd_0; only 1: simpl; only 1: rewrite add_0_r; only 1: apply testbit_even_0).	0.013809	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_succ_r	120	0.0.0.0.0.0	synth with cache (only 1: destruct b; only 1: simpl; only 1: apply testbit_odd_succ; only 1: simpl; only 1: rewrite add_0_r; only 1: apply testbit_even_succ).	0.026499	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_spec'	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_spec	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_true	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite <- testbit_spec'; only 1: destruct testbit; only 1: split; only 1: simpl; only 1: order'; only 1: simpl; only 1: easy; only 1: split; only 1: simpl; only 1: easy; only 1: simpl; only 1: order'; only 1: order').	0.032419	16
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_false	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite <- testbit_spec'; only 1: destruct testbit; only 1: split; only 1: simpl; only 1: easy; only 1: simpl; only 1: order'; only 1: split; only 1: simpl; only 1: order'; only 1: simpl; only 1: easy; only 1: order').	0.038999	16
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_eqb	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply eq_true_iff_eq; only 1: rewrite testbit_true; only 1: rewrite eqb_eq; only 1: easy; only 1: order').	0.022768	8
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.b2z_inj	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct a0; only 1: intros ?; only 1: destruct b0; only 1: simpl; only 1: trivial; only 1: simpl; only 1: order'; only 1: intros ?; only 1: destruct b0; only 1: simpl; only 1: order'; only 1: simpl; only 1: trivial).	0.021358	14
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_b2z_double_div2	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite mul_comm; only 1: rewrite div_add; only 1: rewrite div_small; only 1: rewrite add_0_l; only 1: easy; only 1: destruct a0; only 1: split; only 1: simpl; only 1: order'; only 1: simpl; only 1: order'; only 1: split; only 1: simpl; only 1: order'; only 1: simpl; only 1: order'; only 1: order').	0.087776	19
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_b2z_double_bit0	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply b2z_inj; only 1: rewrite testbit_spec'; only 1: nzsimpl; only 1: rewrite mul_comm; only 1: rewrite mod_add; only 1: rewrite mod_small; only 1: easy; only 1: destruct a0; only 1: split; only 1: simpl; only 1: order'; only 1: simpl; only 1: order'; only 1: split; only 1: simpl; only 1: order'; only 1: simpl; only 1: order'; only 1: order'; only 1: order).	0.096066	22
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.b2z_div2	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.b2z_bit0	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_unique	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_0	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_opp	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_m1	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite bits_opp; only 1: rewrite one_succ; only 1: rewrite pred_succ; only 1: rewrite bits_0; only 1: easy; only 1: trivial).	0.041639	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit0_odd	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.EqNat.eq_nat_refl	120	0.0.0.0.0	synth with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.010938	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit0_eqb	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite testbit_eqb; only 1: nzsimpl; only 1: easy; only 1: order').	0.072264	5
coq-tactician-stdlib.8.11.dev	Coq.Arith.EqNat.eq_nat_is_eq	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.EqNat.eq_eq_nat	120	0.0.0	synth with cache (only 1: intros ?; only 1: intropattern subst <- H; only 1: apply eq_nat_refl).	0.010192	3
coq-tactician-stdlib.8.11.dev	Coq.Arith.EqNat.eq_nat_eq	120	0	synth with cache (only 1: apply eq_nat_is_eq).	0.009345	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.EqNat.eq_nat_elim	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.EqNat.eq_nat_decide	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.EqNat.beq_nat_refl	120	0.0	synth with cache (only 1: symmetry; only 1: apply Nat.eqb_refl).	0.008757	2
coq-tactician-stdlib.8.11.dev	Coq.Arith.EqNat.beq_nat_true	120	0	synth with cache (only 1: apply Nat.eqb_eq).	0.008451	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit0_mod	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite testbit_spec'; only 1: nzsimpl; only 1: easy; only 1: order').	0.059413	5
coq-tactician-stdlib.8.11.dev	Coq.Arith.EqNat.beq_nat_false	120	0	synth with cache (only 1: apply Nat.eqb_neq).	0.009320	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.EqNat.beq_nat_eq	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_odd	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- bit0_odd; only 1: rewrite shiftr_spec; only 1: rewrite add_0_l; only 1: easy; only 1: easy).	0.018054	6
coq-tactician-stdlib.8.11.dev	Coq.Arith.Le.le_n_0_eq	120	0.0.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Nat.le_0_r; only 1: easy).	0.012744	4
coq-tactician-stdlib.8.11.dev	Coq.Arith.Le.le_elim_rel	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit_log2	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_above_log2	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit_log2_neg	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite <- opp_involutive  at 1; only 1: rewrite bits_opp; only 1: apply negb_false_iff; only 1: apply bit_log2; only 1: apply opp_lt_mono in H; only 1: rewrite opp_involutive in H; only 1: apply lt_succ_lt_pred; only 1: rewrite <- one_succ; only 1: easy; only 1: apply log2_nonneg).	0.041296	12
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_above_log2_neg	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_nonneg	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_nonneg'	120	0.0.0	synth with cache (only 1: intros; only 1: apply bits_iff_nonneg; only 1: apply lt_succ_diag_r).	0.062207	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_nonneg_ex	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_neg	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_neg'	120	0.0.0	synth with cache (only 1: intros; only 1: apply bits_iff_neg; only 1: apply lt_succ_diag_r).	0.013562	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_neg_ex	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_bits	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply eq_true_iff_eq; only 1: rewrite testbit_true; only 1: rewrite testbit_true; only 1: rewrite pow_succ_r; only 1: rewrite div_div; only 1: easy; only 1: order'; only 1: order_pos; only 1: order'; only 1: order_pos; only 1: order').	0.065975	14
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div_pow2_bits	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: revert a m; only 1: apply le_ind with (4 := H); only 1: solve_proper; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: nzsimpl; only 1: easy; only 1: clear n H; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: nzsimpl; only 1: rewrite <- div_div; only 1: rewrite H0; only 1: rewrite div2_bits; only 1: easy; only 1: order_pos; only 1: order_pos; only 1: order_pos; only 1: order_pos; only 1: trivial).	0.247258	29
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.double_bits_succ	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.double_bits	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mul_pow2_bits_add	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mul_pow2_bits	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mul_pow2_bits_low	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mod_pow2_bits_high	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mod_pow2_bits_low	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.eqf_equiv	120	0.0.0.0	synth with cache (only 1: split; only 1: congruence; only 1: congruence; only 1: congruence).	0.014633	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_eqf	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite H; only 1: easy).	0.018797	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj_0	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj_iff	120	0.0.0.0.0.0	synth with cache (only 1: split; only 1: apply bits_inj; only 1: intros ?; only 1: intros ?; only 1: rewrite H; only 1: easy).	0.017894	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj'	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj_iff'	120	0.0.0.0.0.1.0	synth with cache (only 1: split; only 1: apply bits_inj'; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite H; only 1: easy).	0.023618	11
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.are_bits	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_spec	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_opp_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_opp_r	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: rewrite shiftr_spec; only 1: rewrite shiftl_spec; only 1: rewrite sub_opp_r; only 1: easy; only 1: trivial; only 1: trivial).	0.024681	8
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_div_pow2	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: rewrite shiftr_spec; only 1: rewrite div_pow2_bits; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.020109	8
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.bi_induction	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_mul_pow2	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: rewrite shiftr_spec; only 1: rewrite mul_pow2_bits; only 1: rewrite sub_opp_r; only 1: easy; only 1: apply opp_nonneg_nonpos; only 1: easy; only 1: trivial).	0.031621	9
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.recursion_wd	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: subst y1; only 1: induction x1; only 1: simpl; only 1: auto; only 1: simpl; only 1: apply H0; only 1: auto; only 1: auto).	0.032569	17
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.recursion_0	120	0	synth with cache (only 1: reflexivity).	0.009279	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_mul_pow2	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: rewrite shiftl_spec; only 1: rewrite mul_pow2_bits; only 1: easy; only 1: easy; only 1: easy).	0.021152	7
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.recursion_succ	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.pred_succ	120	0	synth with cache (only 1: easy).	0.008395	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.pred_0	120	0	synth with cache (only 1: reflexivity).	0.006990	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_div_pow2	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: rewrite shiftl_spec; only 1: rewrite div_pow2_bits; only 1: rewrite add_opp_r; only 1: easy; only 1: apply opp_nonneg_nonpos; only 1: easy; only 1: trivial; only 1: trivial).	0.029986	10
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.one_succ	120	0	synth with cache (only 1: reflexivity).	0.005714	1
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_app_inv_r	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.two_succ	120	0	synth with cache (only 1: reflexivity).	0.006575	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.add_0_l	120	0	synth with cache (only 1: reflexivity).	0.006871	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.add_succ_l	120	0	synth with cache (only 1: reflexivity).	0.006721	1
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_length_1_inv	120
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_length_1	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply Permutation_length_1_inv in H; only 1: injection H as; only 1: intropattern subst -> H; only 1: auto).	0.018143	7
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.sub_0_r	120	0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: easy).	0.007613	3
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.sub_succ_r	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.mul_0_l	120	0	synth with cache (only 1: reflexivity).	0.009125	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_wd	120
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_length_2_inv	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.mul_succ_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_wd	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite <- shiftr_opp_r; only 1: rewrite <- shiftr_opp_r; only 1: rewrite H; only 1: rewrite H0; only 1: easy).	0.035402	11
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.lt_succ_r	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.eqb_eq	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_spec_alt	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite shiftl_mul_pow2; only 1: rewrite mul_pow2_bits; only 1: rewrite add_simpl_r; only 1: easy; only 1: easy; only 1: easy).	0.038335	7
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_length_2	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply Permutation_length_2_inv in H; only 1: destruct H; only 1: injection H as; only 1: intropattern subst -> H; only 1: intropattern subst -> H0; only 1: auto; only 1: injection H as; only 1: intropattern subst -> H; only 1: intropattern subst -> H0; only 1: auto).	0.105953	15
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.leb_le	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.ltb_lt	120	0	synth with cache (only 1: apply leb_le).	0.008644	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.eq_dec	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_shiftl	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.compare_eq_iff	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_shiftl_l	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- shiftl_opp_r; only 1: rewrite shiftl_shiftl; only 1: rewrite add_opp_r; only 1: easy; only 1: easy).	0.031655	6
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.NoDup_Permutation	120
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.NoDup_Permutation_bis	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply NoDup_Permutation; only 1: auto; only 1: auto; only 1: split; only 1: auto; only 1: apply NoDup_length_incl; only 1: trivial; only 1: trivial; only 1: trivial).	0.021883	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_shiftl_r	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- shiftl_opp_r; only 1: rewrite <- shiftl_opp_r; only 1: rewrite shiftl_shiftl; only 1: rewrite opp_sub_distr; only 1: rewrite add_comm; only 1: easy; only 1: easy).	0.038550	8
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.compare_lt_iff	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.compare_le_iff	120
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_NoDup	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.compare_antisym	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.compare_succ	120	0	synth with cache (only 1: reflexivity).	0.007107	1
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_NoDup'	120	0.0.0.0	synth with cache (only 1: red; only 1: red; only 1: red; only 1: eauto using Permutation_NoDup).	0.018768	4
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.max_l	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.max_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_shiftr	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.min_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_1_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_0_r	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite shiftl_mul_pow2; only 1: nzsimpl; only 1: easy; only 1: order').	0.030017	5
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_map.Permutation_map	120	0.0.0.0.0.0.0.0	synth with cache (only 1: induction 1; only 1: simpl; only 1: eauto; only 1: simpl; only 1: eauto; only 1: simpl; only 1: eauto; only 1: eauto).	0.070180	8
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_0_r	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- shiftl_opp_r; only 1: rewrite opp_0; only 1: rewrite shiftl_0_r; only 1: easy).	0.026212	5
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_map.Permutation_map'	120	0	synth with cache (only 1: exact Permutation_map).	0.011187	1
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.nat_bijection_Permutation	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply NoDup_Permutation_bis; only 1: auto using Injective_map_NoDup, seq_NoDup; only 1: auto using Injective_map_NoDup, seq_NoDup; only 1: rewrite map_length; only 1: easy; only 1: intros ?; only 1: rewrite in_map_iff; only 1: intros ?; only 1: destruct H1; only 1: destruct H1; only 1: intropattern subst <- H1; only 1: rewrite in_seq in *; only 1: simpl in *; only 1: destruct H2; only 1: clear H1; only 1: auto with arith).	0.043736	18
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_0_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_0_l	120	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- shiftl_opp_r; only 1: rewrite shiftl_0_l; only 1: easy).	0.021858	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_eq_0_iff	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite shiftl_mul_pow2; only 1: rewrite eq_mul_0; only 1: split; only 1: intros ?; only 1: destruct H0; only 1: trivial; only 1: contradict H0; only 1: order_nz; only 1: intros ?; only 1: left; only 1: trivial; only 1: order').	0.034399	15
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_alt.adapt_injective	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow_sub_r	120
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_alt.adapt_ok	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow_div_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_proper	120	0	synth with cache (only 1: solve_proper).	0.050557	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_eq_0_iff	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_eq_0	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply shiftr_eq_0_iff; only 1: le_elim H; only 1: right; only 1: split; only 1: trivial; only 1: trivial; only 1: left; only 1: easy).	0.029686	12
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.exists_div2	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.min_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_0_r	120	0.0.0.0.0.0	synth with cache (only 1: destruct b; only 1: simpl; only 1: apply testbit_odd_0; only 1: simpl; only 1: rewrite add_0_r; only 1: apply testbit_even_0).	0.017933	6
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.pow_neg_r	120	0	synth with cache (only 1: inversion 1).	0.011349	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_div	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite div2_spec; only 1: rewrite shiftr_div_pow2; only 1: nzsimpl; only 1: easy; only 1: order').	0.047399	6
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.pow_0_r	120	0	synth with cache (only 1: reflexivity).	0.008841	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_succ_r	120	0.0.0.0.0.0.0.0	synth with cache (only 1: destruct b; only 1: simpl; only 1: apply testbit_odd_succ; only 1: apply le_0_l; only 1: simpl; only 1: rewrite add_0_r; only 1: apply testbit_even_succ; only 1: apply le_0_l).	0.015837	8
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.pow_succ_r	120	0	synth with cache (only 1: reflexivity).	0.011440	1
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_alt.Permutation_nth_error	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.square_spec	120	0	synth with cache (only 1: reflexivity).	0.010319	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_wd	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite div2_div; only 1: rewrite div2_div; only 1: rewrite H; only 1: easy).	0.021676	7
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.Private_Parity.Even_1	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.Private_Parity.Even_2	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_odd	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite div2_div; only 1: rewrite <- bit0_odd; only 1: rewrite bit0_mod; only 1: apply div_mod; only 1: order').	0.032966	6
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.Private_Parity.Odd_0	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct H; only 1: destruct x; only 1: easy; only 1: easy).	0.016675	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_spec'	120
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_alt.Permutation_nth_error_bis	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_spec	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_wd	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: bitwise; only 1: rewrite H; only 1: rewrite H0; only 1: easy).	0.071018	10
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.Private_Parity.Odd_2	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.even_spec	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_true	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite <- testbit_spec'; only 1: destruct testbit; only 1: split; only 1: simpl; only 1: order'; only 1: simpl; only 1: easy; only 1: split; only 1: simpl; only 1: easy; only 1: simpl; only 1: order').	0.063665	14
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.odd_spec	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_false	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite <- testbit_spec'; only 1: destruct testbit; only 1: split; only 1: simpl; only 1: easy; only 1: simpl; only 1: order'; only 1: split; only 1: simpl; only 1: order'; only 1: simpl; only 1: easy).	0.028529	14
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_wd	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: bitwise; only 1: rewrite H; only 1: rewrite H0; only 1: easy).	0.057932	10
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.divmod_spec	120
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_alt.Permutation_nth	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_eqb	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply eq_true_iff_eq; only 1: rewrite testbit_true; only 1: rewrite eqb_eq; only 1: easy).	0.017784	6
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.div_mod	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_inj	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct a0; only 1: intros ?; only 1: destruct b0; only 1: simpl; only 1: trivial; only 1: simpl; only 1: order'; only 1: intros ?; only 1: destruct b0; only 1: simpl; only 1: order'; only 1: simpl; only 1: trivial).	0.022983	14
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.mod_bound_pos	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_wd	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: bitwise; only 1: rewrite H; only 1: rewrite H0; only 1: easy).	0.054986	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_b2n_double_div2	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite mul_comm; only 1: rewrite div_add; only 1: rewrite div_small; only 1: rewrite add_0_l; only 1: easy; only 1: destruct a0; only 1: order'; only 1: order'; only 1: order').	0.030376	11
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.sqrt_iter_spec	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_b2n_double_bit0	120	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply b2n_inj; only 1: rewrite testbit_spec'; only 1: nzsimpl; only 1: rewrite mul_comm; only 1: rewrite mod_add; only 1: rewrite mod_small; only 1: easy; only 1: destruct a0; only 1: order'; only 1: order'; only 1: order').	0.092882	13
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.sqrt_specif	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_wd	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: bitwise; only 1: rewrite H; only 1: rewrite H0; only 1: easy).	0.077866	10
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.sqrt_neg	120	0	synth with cache (only 1: inversion 1).	0.013284	1
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.log2_iter_spec	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_eq	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: bitwise; only 1: apply xorb_eq; only 1: rewrite <- lxor_spec; only 1: rewrite H; only 1: rewrite bits_0; only 1: easy).	0.026185	9
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.log2_spec	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.log2_nonpos	120	0.0.0	synth with cache (only 1: inversion 1; only 1: subst; only 1: easy).	0.013972	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_div2	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_nilpotent	120	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_nilpotent).	0.019126	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_bit0	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_eq_0_iff	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intros ?; only 1: bitwise; only 1: apply xorb_eq; only 1: rewrite <- lxor_spec; only 1: rewrite H; only 1: rewrite bits_0; only 1: easy; only 1: intros ?; only 1: rewrite H; only 1: apply lxor_nilpotent).	0.027975	11
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.gcd_divide	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.gcd_divide_l	120	0.0	synth with cache (only 1: intros; only 1: apply gcd_divide).	0.011329	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_0_l	120	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_l).	0.017665	3
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.gcd_divide_r	120	0.0	synth with cache (only 1: intros; only 1: apply gcd_divide).	0.010141	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_0_r	120	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_r).	0.018879	3
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.gcd_greatest	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_comm	120	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_comm).	0.018753	3
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.gcd_nonneg	120	0	synth with cache (only 1: apply le_0_l).	0.008615	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_assoc	120	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_assoc_reverse).	0.022060	3
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.div2_double	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.div2_succ_double	120	0.0.0.0.0.0	synth with cache (only 1: induction n; only 1: trivial; only 1: simpl; only 1: f_equal; only 1: rewrite add_succ_r; only 1: easy).	0.017261	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_0_l	120	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: trivial).	0.021228	3
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.le_div2	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.lt_div2	120	0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: inversion 1; only 1: intros ?; only 1: clear H; only 1: apply lt_succ_r; only 1: apply le_div2).	0.017082	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_0_r	120	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply orb_false_r).	0.019049	3
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.div2_decr	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct a; only 1: intros ?; only 1: simpl; only 1: apply le_0_l; only 1: intros ?; only 1: apply succ_le_mono in H; only 1: apply le_trans with a; only 1: apply le_div2; only 1: trivial).	0.017150	9
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_comm	120	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply orb_comm).	0.020011	3
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.double_twice	120	0.0.0.0	synth with cache (only 1: simpl; only 1: intros; only 1: rewrite add_0_r; only 1: easy).	0.011988	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_assoc	120	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply orb_assoc).	0.025101	3
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.testbit_0_l	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.testbit_odd_0	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_diag	120	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply orb_diag).	0.020204	3
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.testbit_even_0	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.testbit_odd_succ'	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.testbit_even_succ'	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_eq_0_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_unique	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.shiftr_specif	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_eq_0_iff	120	0.0.0.0.0.0.0.0.0.1.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: split; only 1: split; only 1: apply lor_eq_0_l in H; only 1: trivial; only 1: rewrite lor_comm in H; only 1: apply lor_eq_0_l in H; only 1: easy; only 1: intros ?; only 1: destruct H; only 1: rewrite H; only 1: rewrite lor_0_l; only 1: easy).	0.046561	16
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_0	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: apply testbit_false; only 1: nzsimpl; only 1: order_nz; only 1: order_nz; only 1: order_nz).	0.032130	6
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.shiftl_specif_high	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.shiftl_spec_low	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_0_l	120	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: trivial).	0.031839	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit0_odd	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.div2_bitwise	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_0_r	120	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply andb_false_r).	0.019189	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit0_eqb	120	0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite testbit_eqb; only 1: nzsimpl; only 1: easy).	0.069684	4
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.odd_bitwise	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_comm	120	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply andb_comm).	0.020027	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_assoc	120	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply andb_assoc).	0.023360	3
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.testbit_bitwise_1	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_diag	120	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply andb_diag).	0.018253	3
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.testbit_bitwise_2	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit0_mod	120	0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite testbit_spec'; only 1: nzsimpl; only 1: easy).	0.051430	4
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.land_spec	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_0_l	120	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: trivial).	0.020836	3
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.ldiff_spec	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_0_r	120	0.0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: rewrite andb_true_r; only 1: easy).	0.023843	4
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.lor_spec	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.lxor_spec	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_diag	120	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply andb_negb_r).	0.023017	3
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.div2_spec	120	0	synth with cache (only 1: reflexivity).	0.010750	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_odd	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- bit0_odd; only 1: rewrite shiftr_spec; only 1: rewrite add_0_l; only 1: easy; only 1: easy).	0.017764	6
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.testbit_neg_r	120	0	synth with cache (only 1: inversion H).	0.011692	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_land_distr_l	120	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply orb_andb_distrib_l).	0.030139	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit_log2	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_land_distr_r	120	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply orb_andb_distrib_r).	0.029252	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_lor_distr_l	120	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply andb_orb_distrib_l).	0.027275	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_above_log2	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_bits	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply eq_true_iff_eq; only 1: rewrite testbit_true; only 1: rewrite testbit_true; only 1: rewrite pow_succ_r; only 1: rewrite div_div; only 1: easy; only 1: order_nz; only 1: order_nz; only 1: apply le_0_l).	0.049200	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_lor_distr_r	120	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply andb_orb_distrib_r).	0.027653	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ldiff_l	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: rewrite negb_orb; only 1: rewrite andb_assoc; only 1: easy).	0.033668	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_ldiff_and	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: rewrite <- andb_orb_distrib_r; only 1: rewrite orb_comm; only 1: rewrite orb_negb_r; only 1: rewrite andb_true_r; only 1: easy).	0.035586	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div_pow2_bits	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: revert a; only 1: induct n; only 1: intros ?; only 1: intros ?; only 1: nzsimpl; only 1: easy; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: nzsimpl; only 1: rewrite <- div_div; only 1: rewrite H; only 1: rewrite div2_bits; only 1: easy; only 1: order_nz; only 1: order_nz; only 1: apply le_0_l).	0.205056	20
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ldiff	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_spec'	120	0.0.0.0	synth with cache (only 1: intros; only 1: unfold setbit; only 1: rewrite shiftl_1_l; only 1: easy).	0.026635	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_spec'	120	0.0.0.0	synth with cache (only 1: intros; only 1: unfold clearbit; only 1: rewrite shiftl_1_l; only 1: easy).	0.024183	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_wd	120	0.0	synth with cache (only 1: unfold setbit; only 1: solve_proper).	0.039182	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.double_bits_succ	120	0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply testbit_even_succ; only 1: apply le_0_l).	0.011869	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_wd	120	0.0	synth with cache (only 1: unfold clearbit; only 1: solve_proper).	0.035336	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mul_pow2_bits_add	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- div_pow2_bits; only 1: rewrite div_mul; only 1: easy; only 1: order_nz).	0.023676	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mul_pow2_bits_high	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow2_bits_true	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- mul_1_l; only 1: rewrite mul_pow2_bits; only 1: rewrite sub_diag; only 1: rewrite bit0_odd; only 1: rewrite odd_1; only 1: easy; only 1: trivial).	0.049671	8
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mul_pow2_bits_low	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mod_pow2_bits_high	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow2_bits_false	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.tail_add_spec	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: revert m; only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: rewrite IHn; only 1: rewrite add_succ_r; only 1: easy).	0.020592	9
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow2_bits_eqb	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.tail_addmul_spec	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: revert m r; only 1: induction n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: intros; only 1: rewrite IHn; only 1: rewrite tail_add_spec; only 1: rewrite add_assoc; only 1: f_equal; only 1: apply add_comm).	0.026340	11
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_eqb	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite setbit_spec'; only 1: rewrite lor_spec; only 1: rewrite pow2_bits_eqb; only 1: rewrite orb_comm; only 1: easy; only 1: easy).	0.042685	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_iff	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite setbit_eqb; only 1: rewrite orb_true_iff; only 1: rewrite eqb_eq; only 1: easy; only 1: easy).	0.027324	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_eq	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply setbit_iff; only 1: order'; only 1: left; only 1: easy).	0.020453	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mod_pow2_bits_low	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.eqf_equiv	120	0.0.0.0	synth with cache (only 1: split; only 1: congruence; only 1: congruence; only 1: congruence).	0.014796	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_eqf	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite H; only 1: easy).	0.015575	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_neq	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite setbit_eqb; only 1: rewrite <- eqb_eq in H0; only 1: apply not_true_is_false in H0; only 1: rewrite H0; only 1: easy; only 1: trivial).	0.030403	11
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_inj_0	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_eqb	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_inj	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_iff	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite clearbit_eqb; only 1: rewrite andb_true_iff; only 1: rewrite <- eqb_eq; only 1: rewrite negb_true_iff; only 1: rewrite not_true_iff_false; only 1: easy).	0.050520	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_inj_iff	120	0.0.0.0.0.0	synth with cache (only 1: split; only 1: apply bits_inj; only 1: intros ?; only 1: intros ?; only 1: rewrite H; only 1: easy).	0.014663	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_eq	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_neq	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite clearbit_eqb; only 1: rewrite <- eqb_eq in H; only 1: apply not_true_is_false in H; only 1: rewrite H; only 1: apply andb_true_r).	0.046948	9
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.are_bits	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_spec'	120	0.0.0	synth with cache (only 1: intros; only 1: apply shiftr_spec; only 1: apply le_0_l).	0.011135	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_spec_high'	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply shiftl_spec_high; only 1: apply le_0_l; only 1: trivial).	0.013412	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_lxor	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: rewrite shiftl_spec; only 1: rewrite shiftl_spec; only 1: rewrite shiftl_spec; only 1: rewrite lxor_spec; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.032661	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_div_pow2	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_mul_pow2	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_lxor	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: rewrite shiftr_spec; only 1: rewrite shiftr_spec; only 1: rewrite shiftr_spec; only 1: rewrite lxor_spec; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.029517	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_spec_alt	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite shiftl_mul_pow2; only 1: rewrite <- div_pow2_bits; only 1: rewrite div_mul; only 1: easy; only 1: order_nz).	0.021176	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_land	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: rewrite shiftl_spec; only 1: rewrite shiftl_spec; only 1: rewrite shiftl_spec; only 1: rewrite land_spec; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.036762	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_wd	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite shiftr_div_pow2; only 1: rewrite shiftr_div_pow2; only 1: rewrite H; only 1: rewrite H0; only 1: easy).	0.042964	11
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_land	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: rewrite shiftr_spec; only 1: rewrite shiftr_spec; only 1: rewrite shiftr_spec; only 1: rewrite land_spec; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.031584	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_wd	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite shiftl_mul_pow2; only 1: rewrite shiftl_mul_pow2; only 1: rewrite H; only 1: rewrite H0; only 1: easy).	0.041961	11
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_lor	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: rewrite shiftl_spec; only 1: rewrite shiftl_spec; only 1: rewrite shiftl_spec; only 1: rewrite lor_spec; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.032508	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_shiftl	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite shiftl_mul_pow2; only 1: rewrite shiftl_mul_pow2; only 1: rewrite shiftl_mul_pow2; only 1: rewrite pow_add_r; only 1: rewrite mul_assoc; only 1: easy).	0.032548	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_lor	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: rewrite shiftr_spec; only 1: rewrite shiftr_spec; only 1: rewrite shiftr_spec; only 1: rewrite lor_spec; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.045571	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_shiftr	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite shiftr_div_pow2; only 1: rewrite shiftr_div_pow2; only 1: rewrite shiftr_div_pow2; only 1: rewrite pow_add_r; only 1: rewrite div_div; only 1: easy; only 1: order_nz; only 1: order_nz).	0.036223	9
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_ldiff	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: rewrite shiftl_spec; only 1: rewrite shiftl_spec; only 1: rewrite shiftl_spec; only 1: rewrite ldiff_spec; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.032901	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_ldiff	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: rewrite shiftr_spec; only 1: rewrite shiftr_spec; only 1: rewrite shiftr_spec; only 1: rewrite ldiff_spec; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.032856	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_shiftl_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_wd	120	0.0	synth with cache (only 1: unfold lnot; only 1: solve_proper).	0.023551	2
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.tail_mul_spec	120
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.TestOrder.test	120	1	synth with cache (only 1: Nat.order).	0.017983	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_shiftl_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_1_l	120	0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite shiftl_mul_pow2; only 1: rewrite mul_1_l; only 1: easy).	0.014776	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_spec	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_involutive	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: bitwise; only 1: rewrite lnot_spec; only 1: rewrite lnot_spec; only 1: rewrite negb_involutive; only 1: easy; only 1: order'; only 1: order').	0.025721	8
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_0_r	120	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite shiftl_mul_pow2; only 1: nzsimpl; only 1: easy).	0.030260	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_0	120	0.0.0.0.0	synth with cache (only 1: unfold lnot; only 1: rewrite opp_0; only 1: rewrite <- sub_1_r; only 1: rewrite sub_0_l; only 1: easy).	0.024897	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_0_r	120	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite shiftr_div_pow2; only 1: nzsimpl; only 1: easy).	0.029170	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_m1	120	0.0.0.0.0	synth with cache (only 1: unfold lnot; only 1: rewrite opp_involutive; only 1: rewrite one_succ; only 1: rewrite pred_succ; only 1: easy).	0.052329	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_0_l	120	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite shiftl_mul_pow2; only 1: nzsimpl; only 1: order_nz).	0.033160	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.quot_div_nonneg	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_0_l	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite shiftr_div_pow2; only 1: nzsimpl; only 1: order_nz; only 1: order_nz).	0.027067	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_m1_r	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: rewrite bits_m1; only 1: rewrite orb_true_r; only 1: easy; only 1: order').	0.026186	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_mod_nonneg	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_m1_l	120	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite lor_comm; only 1: rewrite lor_m1_r; only 1: easy).	0.026837	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_eq_0_iff	120	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite shiftl_mul_pow2; only 1: rewrite eq_mul_0; only 1: split; only 1: intros ?; only 1: destruct H; only 1: trivial; only 1: contradict H; only 1: order_nz; only 1: intros ?; only 1: left; only 1: trivial).	0.030217	13
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_m1_r	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: rewrite bits_m1; only 1: rewrite andb_true_r; only 1: easy; only 1: order').	0.028686	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_eq_0_iff	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_m1_l	120	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite land_comm; only 1: rewrite land_m1_r; only 1: easy).	0.028218	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.quot_div	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_eq_0	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_m1_r	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: rewrite bits_m1; only 1: rewrite andb_false_r; only 1: easy; only 1: order').	0.030771	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_div	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite div2_spec; only 1: rewrite shiftr_div_pow2; only 1: nzsimpl; only 1: easy).	0.039907	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_mod	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_m1_l	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: rewrite lnot_spec; only 1: rewrite bits_m1; only 1: easy; only 1: order'; only 1: order').	0.030089	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_wd	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite div2_div; only 1: rewrite div2_div; only 1: rewrite H; only 1: easy).	0.020491	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.mod_divide	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_lnot_diag	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: bitwise; only 1: rewrite lnot_spec; only 1: rewrite bits_m1; only 1: destruct testbit; only 1: easy; only 1: easy; only 1: order'; only 1: order').	0.038475	9
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_odd	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite div2_div; only 1: rewrite <- bit0_odd; only 1: rewrite bit0_mod; only 1: apply div_mod; only 1: order_nz).	0.030428	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_lnot_diag	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: unfold lnot; only 1: rewrite add_pred_r; only 1: rewrite add_opp_r; only 1: rewrite sub_diag; only 1: rewrite one_succ; only 1: rewrite opp_succ; only 1: rewrite opp_0; only 1: easy).	0.038246	9
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_divide	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_mod_eq_0	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite mod_divide; only 1: rewrite rem_divide; only 1: easy; only 1: assumption; only 1: assumption).	0.019675	8
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_wd	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: bitwise; only 1: rewrite H; only 1: rewrite H0; only 1: easy).	0.071627	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_land	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: rewrite lnot_spec; only 1: easy; only 1: trivial).	0.030034	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.quot_div_exact	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply mul_cancel_l with b; only 1: trivial; only 1: pose proof H0; only 1: apply rem_divide in H0; only 1: apply quot_exact in H0; only 1: apply mod_divide in H1; only 1: apply div_exact in H1; only 1: rewrite <- H0; only 1: rewrite <- H1; only 1: easy; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial).	0.036263	18
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_lnot_diag	120	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- ldiff_land; only 1: bitwise; only 1: apply andb_negb_r).	0.025126	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_wd	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: bitwise; only 1: rewrite H; only 1: rewrite H0; only 1: easy).	0.061427	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_div_mul_exact	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lor	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: bitwise; only 1: rewrite lnot_spec; only 1: rewrite lnot_spec; only 1: rewrite lnot_spec; only 1: rewrite lor_spec; only 1: rewrite negb_orb; only 1: easy; only 1: trivial; only 1: trivial; only 1: trivial).	0.035443	12
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_quot_mul_exact	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite quot_div_exact; only 1: rewrite quot_div_exact; only 1: apply divide_div_mul_exact; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: apply divide_mul_r; only 1: trivial).	0.026428	15
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_land	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: bitwise; only 1: rewrite lnot_spec; only 1: rewrite lnot_spec; only 1: rewrite lnot_spec; only 1: rewrite land_spec; only 1: rewrite negb_andb; only 1: easy; only 1: trivial; only 1: trivial; only 1: trivial).	0.031859	12
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_wd	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: bitwise; only 1: rewrite H; only 1: rewrite H0; only 1: easy).	0.052765	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_ldiff	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: bitwise; only 1: rewrite lnot_spec; only 1: rewrite lnot_spec; only 1: rewrite ldiff_spec; only 1: rewrite negb_andb; only 1: rewrite negb_involutive; only 1: easy; only 1: trivial; only 1: trivial).	0.035115	11
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_div_factor	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_quot_factor	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite quot_div_exact; only 1: rewrite quot_div_exact; only 1: rewrite quot_div_exact; only 1: apply gcd_div_factor; only 1: easy; only 1: trivial; only 1: trivial; only 1: order; only 1: apply gcd_greatest; only 1: trivial; only 1: trivial; only 1: order; only 1: trivial; only 1: order; only 1: trivial).	0.042926	21
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_wd	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: bitwise; only 1: rewrite H; only 1: rewrite H0; only 1: easy).	0.062109	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_lnot_lnot	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: bitwise; only 1: rewrite lnot_spec; only 1: rewrite lnot_spec; only 1: rewrite xorb_negb_negb; only 1: easy; only 1: trivial; only 1: trivial).	0.036498	9
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lxor_l	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: bitwise; only 1: rewrite lnot_spec; only 1: rewrite lnot_spec; only 1: rewrite lxor_spec; only 1: rewrite negb_xorb_l; only 1: easy; only 1: trivial; only 1: trivial).	0.047449	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_eq	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: bitwise; only 1: apply xorb_eq; only 1: rewrite <- lxor_spec; only 1: rewrite H; only 1: rewrite bits_0; only 1: easy).	0.020880	9
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_nilpotent	120	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_nilpotent).	0.016990	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lxor_r	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: bitwise; only 1: rewrite lnot_spec; only 1: rewrite lnot_spec; only 1: rewrite lxor_spec; only 1: rewrite negb_xorb_r; only 1: easy; only 1: trivial; only 1: trivial).	0.037263	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_eq_0_iff	120	0.0.0.0.0	synth with cache (only 1: split; only 1: apply lxor_eq; only 1: intros ?; only 1: rewrite H; only 1: apply lxor_nilpotent).	0.016779	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_div_gcd	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_0_l	120	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_l).	0.021316	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_quot_gcd	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite quot_div_exact; only 1: rewrite quot_div_exact; only 1: apply gcd_div_gcd; only 1: trivial; only 1: easy; only 1: trivial; only 1: rewrite H0; only 1: apply gcd_divide_r; only 1: trivial; only 1: rewrite H0; only 1: apply gcd_divide_l).	0.040742	16
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_m1_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_0_r	120	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_r).	0.019180	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_m1_l	120	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite lxor_comm; only 1: rewrite lxor_m1_r; only 1: easy).	0.023614	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_mod	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite mod_eq; only 1: rewrite <- add_opp_r; only 1: rewrite mul_comm; only 1: rewrite <- mul_opp_l; only 1: rewrite gcd_comm; only 1: apply gcd_add_mult_diag_r; only 1: assumption).	0.040616	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_comm	120	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_comm).	0.016708	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_assoc	120	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_assoc_reverse).	0.020518	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_rem	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite rem_eq; only 1: rewrite <- add_opp_r; only 1: rewrite mul_comm; only 1: rewrite <- mul_opp_l; only 1: rewrite gcd_comm; only 1: apply gcd_add_mult_diag_r; only 1: assumption).	0.039840	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_lor	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_0_l	120	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: trivial).	0.020565	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_shiftr	120	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: bitwise; only 1: rewrite lnot_spec; only 1: rewrite shiftr_spec; only 1: rewrite shiftr_spec; only 1: rewrite lnot_spec; only 1: easy; only 1: order_pos; only 1: easy; only 1: easy; only 1: easy).	0.038237	13
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_wd	120	0.0	synth with cache (only 1: unfold lcm; only 1: solve_proper).	0.033123	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_0_r	120	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply orb_false_r).	0.018667	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_comm	120	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply orb_comm).	0.019658	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_equiv1	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite divide_div_mul_exact; only 1: easy; only 1: easy; only 1: apply gcd_divide_r).	0.017975	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_wd	120	0.0	synth with cache (only 1: unfold ones; only 1: solve_proper).	0.028307	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_assoc	120	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply orb_assoc).	0.023529	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_diag	120	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply orb_diag).	0.015530	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_equiv	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_eq_0_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_eq_0_iff	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: split; only 1: split; only 1: apply lor_eq_0_l in H; only 1: trivial; only 1: rewrite lor_comm in H; only 1: apply lor_eq_0_l in H; only 1: easy; only 1: intros ?; only 1: destruct H; only 1: rewrite H; only 1: rewrite lor_0_l; only 1: easy).	0.033534	14
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_add	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite ones_equiv; only 1: rewrite ones_equiv; only 1: rewrite ones_equiv; only 1: rewrite <- sub_1_r; only 1: rewrite <- sub_1_r; only 1: rewrite <- sub_1_r; only 1: rewrite mul_sub_distr_l; only 1: rewrite mul_1_r; only 1: rewrite <- pow_add_r; only 1: rewrite add_sub_assoc; only 1: rewrite sub_add; only 1: reflexivity; only 1: trivial; only 1: trivial).	0.122423	18
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_0_l	120	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: trivial).	0.018947	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_0_r	120	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply andb_false_r).	0.037425	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_comm	120	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply andb_comm).	0.021881	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_assoc	120	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply andb_assoc).	0.025101	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_diag	120	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply andb_diag).	0.018688	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_div_pow2	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_0_l	120	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: trivial).	0.022268	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_0_r	120	0.0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: rewrite andb_true_r; only 1: easy).	0.023588	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_mod_pow2	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_diag	120	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply andb_negb_r).	0.020643	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_land_distr_l	120	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply orb_andb_distrib_l).	0.029924	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_land_distr_r	120	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply orb_andb_distrib_r).	0.041246	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_spec_low	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lor_distr_l	120	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply andb_orb_distrib_l).	0.028064	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lor_distr_r	120	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply andb_orb_distrib_r).	0.026051	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_spec_high	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: le_elim H; only 1: apply bits_above_log2; only 1: rewrite ones_equiv; only 1: rewrite <- lt_succ_r; only 1: rewrite succ_pred; only 1: order_pos; only 1: rewrite ones_equiv; only 1: rewrite log2_pred_pow2; only 1: rewrite <- le_succ_l; only 1: rewrite succ_pred; only 1: easy; only 1: trivial; only 1: rewrite ones_equiv; only 1: rewrite <- H; only 1: rewrite pow_0_r; only 1: rewrite one_succ; only 1: rewrite pred_succ; only 1: rewrite bits_0; only 1: easy).	0.115297	23
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ldiff_l	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: rewrite negb_orb; only 1: rewrite andb_assoc; only 1: easy).	0.033454	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_ldiff_and	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: rewrite <- andb_orb_distrib_r; only 1: rewrite orb_comm; only 1: rewrite orb_negb_r; only 1: rewrite andb_true_r; only 1: easy).	0.030814	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_spec_iff	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_ones_low	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_ldiff	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_spec'	120	0.0.0.0	synth with cache (only 1: intros; only 1: unfold setbit; only 1: rewrite shiftl_1_l; only 1: easy).	0.022964	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ones	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_spec'	120	0.0.0.0	synth with cache (only 1: intros; only 1: unfold clearbit; only 1: rewrite shiftl_1_l; only 1: easy).	0.023124	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ones_low	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_wd	120	0.0	synth with cache (only 1: unfold setbit; only 1: solve_proper).	0.034023	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_wd	120	0.0	synth with cache (only 1: unfold clearbit; only 1: solve_proper).	0.028144	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_r_low	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_true	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_l_low	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_false	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_eqb	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_eqb	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite setbit_spec'; only 1: rewrite lor_spec; only 1: rewrite pow2_bits_eqb; only 1: rewrite orb_comm; only 1: easy).	0.020921	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_iff	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite setbit_eqb; only 1: rewrite orb_true_iff; only 1: rewrite eqb_eq; only 1: easy).	0.022531	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_nonneg	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_eq	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply setbit_iff; only 1: left; only 1: easy).	0.018885	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_neg	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite lt_nge; only 1: rewrite lt_nge; only 1: rewrite shiftl_nonneg; only 1: easy).	0.029712	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_eq	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- add_move_l; only 1: symmetry; only 1: apply quot_rem; only 1: assumption).	0.014049	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_neq	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite setbit_eqb; only 1: rewrite <- eqb_eq in H; only 1: apply not_true_is_false in H; only 1: rewrite H; only 1: easy).	0.023233	9
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_opp_opp	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite rem_opp_r; only 1: rewrite rem_opp_l; only 1: easy; only 1: assumption; only 1: assumption).	0.017545	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_nonneg	120	0.0.0	synth with cache (only 1: intros; only 1: rewrite <- shiftl_opp_r; only 1: apply shiftl_nonneg).	0.027108	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_eqb	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite clearbit_spec'; only 1: rewrite ldiff_spec; only 1: rewrite pow2_bits_eqb; only 1: easy).	0.024338	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_opp_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_neg	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite lt_nge; only 1: rewrite lt_nge; only 1: rewrite shiftr_nonneg; only 1: easy).	0.027617	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_iff	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite clearbit_eqb; only 1: rewrite andb_true_iff; only 1: rewrite <- eqb_eq; only 1: rewrite negb_true_iff; only 1: rewrite not_true_iff_false; only 1: easy).	0.057316	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_nonneg	120	0.0.0	synth with cache (only 1: intros; only 1: rewrite div2_spec; only 1: apply shiftr_nonneg).	0.026702	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_neg	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite lt_nge; only 1: rewrite lt_nge; only 1: rewrite div2_nonneg; only 1: easy).	0.028100	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_opp_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_eq	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_opp_opp	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite quot_opp_r; only 1: rewrite quot_opp_l; only 1: rewrite opp_involutive; only 1: easy; only 1: assumption; only 1: assumption).	0.020039	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_neq	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite clearbit_eqb; only 1: rewrite <- eqb_eq in H; only 1: apply not_true_is_false in H; only 1: rewrite H; only 1: apply andb_true_r).	0.024466	9
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_lxor	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_lxor	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: rewrite shiftr_spec'; only 1: rewrite shiftr_spec'; only 1: rewrite shiftr_spec'; only 1: rewrite lxor_spec; only 1: easy).	0.030222	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_nonneg	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_neg	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite lt_nge; only 1: rewrite lt_nge; only 1: rewrite lt_nge; only 1: rewrite lor_nonneg; only 1: split; only 1: apply not_and; only 1: apply le_decidable; only 1: intros ?; only 1: destruct H; only 1: intros ?; only 1: destruct H0; only 1: easy; only 1: intros ?; only 1: destruct H0; only 1: easy).	0.043638	17
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_rem_unique	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_unique	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply NZQuot.div_unique with r; only 1: easy; only 1: easy; only 1: easy).	0.014734	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_land	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_unique	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply NZQuot.mod_unique with q; only 1: easy; only 1: easy; only 1: easy).	0.012314	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_land	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: rewrite shiftr_spec'; only 1: rewrite shiftr_spec'; only 1: rewrite shiftr_spec'; only 1: rewrite land_spec; only 1: easy).	0.035840	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_nonneg	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: unfold lnot; only 1: rewrite <- opp_succ; only 1: rewrite opp_nonneg_nonpos; only 1: rewrite le_succ_l; only 1: easy).	0.033896	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_same	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_same	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite rem_eq; only 1: rewrite quot_same; only 1: nzsimpl; only 1: apply sub_diag; only 1: trivial; only 1: trivial).	0.062024	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_neg	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite le_ngt; only 1: rewrite lt_nge; only 1: rewrite lnot_nonneg; only 1: easy).	0.028273	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_lor	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_lor	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: rewrite shiftr_spec'; only 1: rewrite shiftr_spec'; only 1: rewrite shiftr_spec'; only 1: rewrite lor_spec; only 1: easy).	0.031963	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_small	120	0	synth with cache (only 1: exact NZQuot.div_small).	0.007714	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_small	120	0	synth with cache (only 1: exact NZQuot.mod_small).	0.007716	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_0_l	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: pos_or_neg a; only 1: apply NZQuot.div_0_l; only 1: order; only 1: rewrite <- quot_opp_opp; only 1: rewrite opp_0; only 1: apply NZQuot.div_0_l; only 1: easy; only 1: trivial).	0.020175	9
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_nonneg	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_0_l	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite rem_eq; only 1: rewrite quot_0_l; only 1: nzsimpl; only 1: easy; only 1: trivial; only 1: trivial).	0.039855	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_ldiff	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_neg	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite <- lnot_involutive; only 1: rewrite lnot_land; only 1: rewrite lnot_neg; only 1: rewrite lor_nonneg; only 1: rewrite lnot_nonneg; only 1: rewrite lnot_nonneg; only 1: easy).	0.048257	9
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_ldiff	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: rewrite shiftr_spec'; only 1: rewrite shiftr_spec'; only 1: rewrite shiftr_spec'; only 1: rewrite ldiff_spec; only 1: easy).	0.032236	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_1_r	120	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: pos_or_neg a; only 1: apply NZQuot.div_1_r; only 1: trivial; only 1: apply opp_inj; only 1: rewrite <- quot_opp_l; only 1: apply NZQuot.div_1_r; only 1: order; only 1: intros ?; only 1: symmetry in H; only 1: revert H; only 1: apply lt_neq; only 1: apply lt_0_1).	0.018986	13
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_nonneg	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite ldiff_land; only 1: rewrite land_nonneg; only 1: rewrite lnot_nonneg; only 1: easy).	0.051572	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_wd	120	0.0	synth with cache (only 1: unfold ones; only 1: solve_proper).	0.041444	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_1_r	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite rem_eq; only 1: rewrite quot_1_r; only 1: nzsimpl; only 1: auto using sub_diag; only 1: intros ?; only 1: symmetry in H; only 1: revert H; only 1: apply lt_neq; only 1: apply lt_0_1).	0.052340	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_wd	120	0.0	synth with cache (only 1: unfold lnot; only 1: solve_proper).	0.033454	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_1_l	120	0	synth with cache (only 1: exact NZQuot.div_1_l).	0.007862	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_neg	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite ldiff_land; only 1: rewrite land_neg; only 1: rewrite lnot_neg; only 1: easy).	0.038111	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_1_l	120	0	synth with cache (only 1: exact NZQuot.mod_1_l).	0.007755	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_equiv	120	0.0.0.0	synth with cache (only 1: intros; only 1: unfold ones; only 1: rewrite shiftl_1_l; only 1: easy).	0.021797	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: pos_or_neg a; only 1: pos_or_neg b; only 1: apply NZQuot.div_mul; only 1: order; only 1: order; only 1: rewrite <- quot_opp_opp; only 1: rewrite <- mul_opp_r; only 1: apply NZQuot.div_mul; only 1: order; only 1: order; only 1: order; only 1: pos_or_neg b; only 1: rewrite <- opp_inj_wd; only 1: rewrite <- quot_opp_l; only 1: rewrite <- mul_opp_l; only 1: apply NZQuot.div_mul; only 1: order; only 1: order; only 1: order; only 1: rewrite <- opp_inj_wd; only 1: rewrite <- quot_opp_r; only 1: rewrite <- mul_opp_opp; only 1: apply NZQuot.div_mul; only 1: order; only 1: order; only 1: order).	0.071780	27
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_mul	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite rem_eq; only 1: rewrite quot_mul; only 1: rewrite mul_comm; only 1: apply sub_diag; only 1: assumption; only 1: assumption).	0.026207	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_nonneg	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_unique_exact	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite H0; only 1: rewrite mul_comm; only 1: symmetry; only 1: apply quot_mul; only 1: easy).	0.017904	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_nonneg	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_nonpos	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply opp_nonneg_nonpos; only 1: apply opp_nonneg_nonpos in H0; only 1: rewrite <- rem_opp_l; only 1: apply rem_nonneg; only 1: trivial; only 1: easy; only 1: trivial).	0.022811	11
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_add	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_bits_unique	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_sign_mul	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_div_pow2	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_shiftr	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_sign_nz	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_shiftl	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite shiftl_mul_pow2; only 1: rewrite add_comm; only 1: apply log2_mul_pow2; only 1: easy; only 1: trivial; only 1: trivial).	0.032432	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_mod_pow2	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_sign	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_abs_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_abs_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_spec_low	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_abs	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite rem_abs_r; only 1: rewrite rem_abs_l; only 1: easy; only 1: assumption; only 1: assumption).	0.016229	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_shiftl'	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_lor	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_spec_high	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_spec_iff	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros ?; only 1: apply lt_nge; only 1: intros ?; only 1: apply ones_spec_high in H0; only 1: rewrite H in H0; only 1: discriminate; only 1: apply ones_spec_low).	0.026730	9
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_abs_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_spec_low	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold lnot; only 1: rewrite lxor_spec; only 1: rewrite ones_spec_low; only 1: easy; only 1: trivial).	0.018295	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_land	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_spec_high	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold lnot; only 1: rewrite lxor_spec; only 1: rewrite ones_spec_high; only 1: rewrite xorb_false_r; only 1: easy; only 1: trivial).	0.020658	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_abs_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_involutive	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_0_l	120	0.0.0	synth with cache (only 1: intros; only 1: unfold lnot; only 1: apply lxor_0_l).	0.016462	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_lxor	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_ones	120	0.0.0	synth with cache (only 1: intros; only 1: unfold lnot; only 1: apply lxor_nilpotent).	0.016534	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_bit0	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite bit0_odd; only 1: rewrite bit0_odd; only 1: rewrite bit0_odd; only 1: rewrite odd_add; only 1: easy).	0.027860	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add3_bit0	120	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite add_bit0; only 1: rewrite add_bit0; only 1: easy).	0.026342	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_ones_low	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_abs	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_bound_abs	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- rem_abs; only 1: apply rem_bound_pos; only 1: apply abs_nonneg; only 1: rewrite abs_pos; only 1: assumption; only 1: assumption).	0.020244	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_ones	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_le	120	0	synth with cache (only 1: exact NZQuot.mod_le).	0.009654	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_ones_low	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite land_ones; only 1: apply mod_small; only 1: apply log2_lt_cancel; only 1: rewrite log2_pow2; only 1: easy; only 1: trivial using le_0_l).	0.029957	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_pos	120	0	synth with cache (only 1: exact NZQuot.div_pos).	0.009002	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_str_pos	120	0	synth with cache (only 1: exact NZQuot.div_str_pos).	0.010003	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ones_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ones_r_low	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add3_bits_div2	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ones_l_low	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_lnot_diag	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_lnot_diag_low	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite lor_lnot_diag; only 1: rewrite lor_ones_low; only 1: easy; only 1: easy).	0.022740	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lnot_diag	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lnot_diag_low	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite land_lnot_diag; only 1: rewrite ldiff_ones_r_low; only 1: order'; only 1: easy).	0.022724	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_carry_div2	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_small_iff	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_lor_low	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_small_iff	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite rem_eq; only 1: rewrite <- quot_small_iff; only 1: rewrite sub_move_r  at 1; only 1: rewrite <- add_0_r  at 1; only 1: rewrite add_cancel_l; only 1: rewrite eq_sym_iff; only 1: rewrite eq_mul_0; only 1: tauto; only 1: assumption; only 1: assumption).	0.048256	11
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_lt	120	0	synth with cache (only 1: exact NZQuot.div_lt).	0.009350	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_land_low	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_mono	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: pos_or_neg a; only 1: apply NZQuot.div_le_mono; only 1: auto; only 1: auto; only 1: pos_or_neg b; only 1: apply le_trans with 0; only 1: rewrite <- opp_nonneg_nonpos; only 1: rewrite <- quot_opp_l; only 1: apply quot_pos; only 1: order; only 1: order; only 1: order; only 1: apply quot_pos; only 1: order; only 1: order; only 1: rewrite opp_le_mono in *; only 1: rewrite <- quot_opp_l; only 1: rewrite <- quot_opp_l; only 1: apply NZQuot.div_le_mono; only 1: intuition; only 1: intuition; only 1: order; only 1: order; only 1: order).	0.068156	25
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_land_low	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_ldiff_low	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_quot_le	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: pos_or_neg b; only 1: split; only 1: apply mul_nonneg_nonneg; only 1: order; only 1: apply quot_pos; only 1: order; only 1: order; only 1: apply NZQuot.mul_div_le; only 1: order; only 1: order; only 1: rewrite <- mul_opp_opp; only 1: rewrite <- quot_opp_r; only 1: split; only 1: apply mul_nonneg_nonneg; only 1: order; only 1: apply quot_pos; only 1: order; only 1: order; only 1: apply NZQuot.mul_div_le; only 1: order; only 1: order; only 1: order).	0.068084	23
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_lnot_lnot	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_lxor_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_lxor_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_quot_ge	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_succ_quot_gt	120	0	synth with cache (only 1: exact NZQuot.mul_succ_div_gt).	0.009533	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_lor	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_pred_quot_lt	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite opp_lt_mono; only 1: rewrite <- mul_opp_r; only 1: rewrite opp_pred; only 1: rewrite <- quot_opp_l; only 1: rewrite <- opp_nonneg_nonpos in *; only 1: apply mul_succ_quot_gt; only 1: easy; only 1: easy; only 1: order).	0.051892	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_bits_unique	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_pred_quot_gt	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- mul_opp_opp; only 1: rewrite opp_pred; only 1: rewrite <- quot_opp_r; only 1: rewrite <- opp_pos_neg in *; only 1: apply mul_succ_quot_gt; only 1: easy; only 1: easy; only 1: order).	0.050249	9
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_shiftr	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_succ_quot_lt	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite opp_lt_mono; only 1: rewrite <- mul_opp_l; only 1: rewrite <- quot_opp_opp; only 1: rewrite <- opp_nonneg_nonpos in *; only 1: rewrite <- opp_pos_neg in *; only 1: apply mul_succ_quot_gt; only 1: easy; only 1: easy; only 1: order).	0.037403	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_shiftl	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_exact	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite rem_eq; only 1: rewrite sub_move_r; only 1: nzsimpl; only 1: tauto; only 1: assumption).	0.052243	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_lor	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_lt_upper_bound	120	0	synth with cache (only 1: exact NZQuot.div_lt_upper_bound).	0.010870	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_upper_bound	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_land	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_lower_bound	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_compat_l	120	0	synth with cache (only 1: exact NZQuot.div_le_compat_l).	0.010571	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_lxor	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_bit0	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite bit0_odd; only 1: rewrite bit0_odd; only 1: rewrite bit0_odd; only 1: rewrite odd_add; only 1: easy).	0.026062	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add3_bit0	120	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite add_bit0; only 1: rewrite add_bit0; only 1: easy).	0.025394	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_add	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_add	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_carry_bits_aux	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add3_bits_div2	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_carry_bits	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_bit1	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_carry_div2	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.nocarry_equiv	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: split; only 1: intros ?; only 1: rewrite H1 in *; only 1: rewrite div_0_l in H; only 1: symmetry in H; only 1: apply lor_eq_0_l in H; only 1: easy; only 1: order'; only 1: intros ?; only 1: rewrite H1 in H; only 1: rewrite lor_0_l in H; only 1: apply bits_inj'; only 1: intros ?; only 1: intros ?; only 1: rewrite bits_0; only 1: apply le_ind with (4 := H2); only 1: solve_proper; only 1: trivial; only 1: clear n H2; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite <- div2_bits; only 1: rewrite H; only 1: autorewrite with bitwise; only 1: rewrite H3; only 1: easy; only 1: trivial).	0.146134	33
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_lxor	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_le	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_carry_bits	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.sub_nocarry_ldiff	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_bit1	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_lt_pow2	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.nocarry_equiv	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_nocarry_lxor	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_mod_lt_pow2	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_le	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.sub_nocarry_ldiff	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_lnot_diag_low	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_sub_low	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_nocarry_lt_pow2	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite add_nocarry_lxor; only 1: apply div_small_iff; only 1: order_nz; only 1: rewrite <- shiftr_div_pow2; only 1: rewrite shiftr_lxor; only 1: rewrite shiftr_div_pow2; only 1: rewrite shiftr_div_pow2; only 1: rewrite div_small; only 1: rewrite div_small; only 1: apply lxor_0_l; only 1: trivial; only 1: trivial; only 1: trivial).	0.078915	19
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_nocarry_mod_lt_pow2	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_eq	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- add_move_l; only 1: symmetry; only 1: apply div_mod; only 1: assumption).	0.015211	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_bound_abs	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mod_unique	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique_pos	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply div_unique with r; only 1: auto; only 1: auto).	0.012762	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique_neg	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply div_unique with r; only 1: auto; only 1: auto).	0.011591	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique_pos	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply mod_unique with q; only 1: auto; only 1: auto).	0.012382	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique_neg	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply mod_unique with q; only 1: auto; only 1: auto).	0.015645	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_bound_or	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.opp_mod_bound_or	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_opp	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_opp	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_eq	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- add_move_l; only 1: symmetry; only 1: apply div_mod; only 1: order).	0.016104	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_l_z	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_l_nz	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_l_z	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mod_unique	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_unique	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_l_nz	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_r_z	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_unique	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_r_nz	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_r_z	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_r_nz	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign_nz	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_l_z	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign_mul	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_same	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_l_nz	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_same	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite mod_eq; only 1: rewrite div_same; only 1: nzsimpl; only 1: apply sub_diag; only 1: trivial; only 1: trivial).	0.035809	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_l_z	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_small	120	0	synth with cache (only 1: exact div_small).	0.009792	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_small	120	0	synth with cache (only 1: exact mod_small).	0.009339	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_0_l	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: pos_or_neg a; only 1: apply div_0_l; only 1: order; only 1: rewrite <- div_opp_opp; only 1: rewrite opp_0; only 1: apply div_0_l; only 1: easy; only 1: trivial).	0.021916	9
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_0_l	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite mod_eq; only 1: rewrite div_0_l; only 1: nzsimpl; only 1: easy; only 1: trivial; only 1: trivial).	0.035304	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_1_r	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique with 0; only 1: left; only 1: split; only 1: order; only 1: apply lt_0_1; only 1: nzsimpl; only 1: easy).	0.025623	9
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_l_nz	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_opp_z	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite div_opp_r; only 1: rewrite div_opp_l_z; only 1: rewrite opp_involutive; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.026503	8
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_1_r	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite mod_eq; only 1: rewrite div_1_r; only 1: nzsimpl; only 1: auto using sub_diag; only 1: intros ?; only 1: symmetry in H; only 1: revert H; only 1: apply lt_neq; only 1: apply lt_0_1).	0.053721	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_opp_nz	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite div_opp_r; only 1: rewrite div_opp_l_nz; only 1: rewrite opp_sub_distr; only 1: rewrite opp_involutive; only 1: easy; only 1: order; only 1: trivial; only 1: order).	0.030978	9
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_opp_z	120	0.0.0.0.1.0.0	synth with cache (only 1: intros; only 1: rewrite mod_opp_r; only 1: rewrite mod_opp_l_z; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.018188	9
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_1_l	120	0	synth with cache (only 1: exact div_1_l).	0.008459	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_1_l	120	0	synth with cache (only 1: exact mod_1_l).	0.008347	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_opp_nz	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite mod_opp_r; only 1: rewrite mod_opp_l_nz; only 1: easy; only 1: order; only 1: trivial; only 1: order).	0.022135	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_same	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique with 0; only 1: split; only 1: order; only 1: rewrite abs_pos; only 1: trivial; only 1: nzsimpl; only 1: easy).	0.024062	9
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_mul	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite mod_eq; only 1: rewrite div_mul; only 1: rewrite mul_comm; only 1: apply sub_diag; only 1: assumption; only 1: assumption).	0.031577	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_same	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite mod_eq; only 1: rewrite div_same; only 1: nzsimpl; only 1: apply sub_diag; only 1: trivial; only 1: trivial).	0.035413	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique_exact	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite H0; only 1: rewrite mul_comm; only 1: symmetry; only 1: apply div_mul; only 1: easy).	0.019756	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_le	120	0	synth with cache (only 1: exact mod_le).	0.011373	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_pos	120	0	synth with cache (only 1: exact div_pos).	0.009416	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_str_pos	120	0	synth with cache (only 1: exact div_str_pos).	0.010841	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_small	120	0	synth with cache (only 1: exact div_small).	0.190706	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_small	120	0	synth with cache (only 1: exact mod_small).	0.170899	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_small_iff	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_small_iff	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- div_small_iff; only 1: rewrite mod_eq; only 1: rewrite sub_move_r  at 1; only 1: rewrite <- add_0_r  at 1; only 1: rewrite add_cancel_l; only 1: rewrite eq_sym_iff; only 1: rewrite eq_mul_0; only 1: tauto; only 1: assumption; only 1: assumption).	0.039595	11
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_0_l	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: pos_or_neg a; only 1: apply div_0_l; only 1: order; only 1: apply opp_inj; only 1: rewrite <- div_opp_r; only 1: rewrite opp_0; only 1: apply div_0_l; only 1: easy; only 1: trivial).	0.026201	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_lt	120	0	synth with cache (only 1: exact div_lt).	0.011524	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_0_l	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite mod_eq; only 1: rewrite div_0_l; only 1: nzsimpl; only 1: easy; only 1: trivial; only 1: trivial).	0.034953	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_1_r	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique with 0; only 1: pose proof lt_0_1; only 1: rewrite abs_pos; only 1: intuition; only 1: order; only 1: nzsimpl; only 1: easy).	0.038535	9
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_mono	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_1_r	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite mod_eq; only 1: rewrite div_1_r; only 1: nzsimpl; only 1: auto using sub_diag; only 1: intros ?; only 1: symmetry in H; only 1: revert H; only 1: apply lt_neq; only 1: apply lt_0_1).	0.051541	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_div_le	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_div_ge	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- div_opp_opp; only 1: rewrite opp_le_mono; only 1: rewrite <- mul_opp_l; only 1: apply mul_div_le; only 1: rewrite opp_pos_neg; only 1: trivial; only 1: order).	0.035642	8
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_1_l	120	0	synth with cache (only 1: exact div_1_l).	0.008037	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_1_l	120	0	synth with cache (only 1: exact mod_1_l).	0.010160	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique with 0; only 1: split; only 1: order; only 1: rewrite abs_pos; only 1: order; only 1: nzsimpl; only 1: apply mul_comm).	0.031574	9
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_succ_div_gt	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mul	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite mod_eq; only 1: rewrite div_mul; only 1: rewrite mul_comm; only 1: apply sub_diag; only 1: order; only 1: order).	0.029590	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_succ_div_lt	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- div_opp_opp; only 1: rewrite opp_lt_mono; only 1: rewrite <- mul_opp_l; only 1: apply mul_succ_div_gt; only 1: rewrite opp_pos_neg; only 1: trivial; only 1: order).	0.033443	8
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_unique_exact	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite H0; only 1: rewrite mul_comm; only 1: symmetry; only 1: apply div_mul; only 1: easy).	0.024646	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_exact	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_le	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: pos_or_neg b; only 1: apply mod_le; only 1: order; only 1: order; only 1: rewrite <- mod_opp_r; only 1: apply mod_le; only 1: order; only 1: order; only 1: trivial).	0.026724	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_lt_upper_bound	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_pos	120	0	synth with cache (only 1: exact div_pos).	0.011022	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_str_pos	120	0	synth with cache (only 1: exact div_str_pos).	0.010305	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_upper_bound	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_lower_bound	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_compat_l	120	0	synth with cache (only 1: exact div_le_compat_l).	0.011803	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_small_iff	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_add	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_small_iff	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- div_small_iff; only 1: rewrite mod_eq; only 1: rewrite sub_move_r  at 1; only 1: rewrite <- add_0_r  at 1; only 1: rewrite add_cancel_l; only 1: rewrite eq_sym_iff; only 1: rewrite eq_mul_0; only 1: tauto; only 1: order; only 1: order).	0.042763	11
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_add	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_lt	120	0	synth with cache (only 1: exact div_lt).	0.009651	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_mono	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_div_le	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_succ_div_gt	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_pred_div_gt	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_exact	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_lt_upper_bound	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_upper_bound	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_lower_bound	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_compat_l	120	0	synth with cache (only 1: exact div_le_compat_l).	0.010200	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_add	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_add	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qplus_le_r	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qplus_lt_l	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.excluded_middle_imp_representative_boolean_partition	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.excluded_middle_iff_representative_boolean_partition	120	1.1.0	synth with cache (only 1: split; only 1: auto using excluded_middle_imp_representative_boolean_partition, representative_boolean_partition_imp_excluded_middle; only 1: auto using excluded_middle_imp_representative_boolean_partition, representative_boolean_partition_imp_excluded_middle).	0.062907	21
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_opp_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_opp_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_abs_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_abs_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_1_r_abs	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply divide_1_r_nonneg; only 1: apply abs_nonneg; only 1: apply divide_abs_l; only 1: easy).	0.013937	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_1_r	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: rewrite mul_comm in H; only 1: apply eq_mul_1 with x; only 1: easy).	0.016876	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_antisym_abs	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply divide_antisym_nonneg; only 1: apply abs_nonneg; only 1: apply abs_nonneg; only 1: apply divide_abs_l; only 1: apply divide_abs_r; only 1: easy; only 1: apply divide_abs_l; only 1: apply divide_abs_r; only 1: easy).	0.019612	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_antisym	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply abs_eq_cases; only 1: apply divide_antisym_nonneg; only 1: apply abs_nonneg; only 1: apply abs_nonneg; only 1: apply divide_abs_l; only 1: apply divide_abs_r; only 1: easy; only 1: apply divide_abs_l; only 1: apply divide_abs_r; only 1: easy).	0.020597	11
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_sub_r	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite <- add_opp_r; only 1: apply divide_add_r; only 1: trivial; only 1: apply divide_opp_r; only 1: easy).	0.026602	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_add_cancel_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_opp_l	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply gcd_unique_alt; only 1: apply gcd_nonneg; only 1: intros; only 1: rewrite divide_opp_r; only 1: apply gcd_divide_iff).	0.016789	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_opp_r	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite gcd_comm; only 1: rewrite gcd_opp_l; only 1: rewrite gcd_comm; only 1: easy).	0.018357	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_abs_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_abs_r	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite gcd_comm; only 1: rewrite gcd_abs_l; only 1: rewrite gcd_comm; only 1: easy).	0.020586	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_0_l	120	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- gcd_abs_r; only 1: apply gcd_0_l_nonneg; only 1: apply abs_nonneg).	0.014571	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_0_r	120	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite gcd_comm; only 1: rewrite gcd_0_l; only 1: easy).	0.014847	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_diag	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- gcd_abs_l; only 1: rewrite <- gcd_abs_r; only 1: apply gcd_diag_nonneg; only 1: apply abs_nonneg).	0.017926	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_add_mult_diag_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_add_diag_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_sub_diag_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.Bezout_wd	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Bezout; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: setoid_rewrite H; only 1: setoid_rewrite H0; only 1: setoid_rewrite H1; only 1: easy).	0.076664	14
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.bezout_1_gcd	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: destruct H; only 1: apply gcd_unique; only 1: trivial using divide_1_l, le_0_1; only 1: trivial using divide_1_l, le_0_1; only 1: trivial using divide_1_l, le_0_1; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite <- H; only 1: apply divide_add_r; only 1: apply divide_mul_r; only 1: easy; only 1: apply divide_mul_r; only 1: easy).	0.039478	18
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_bezout	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_l_nonneg	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_r_nonneg	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gauss	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_mul_split	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_twice_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.even_pow	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.odd_pow	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- negb_even; only 1: rewrite <- negb_even; only 1: rewrite even_pow; only 1: easy; only 1: easy).	0.015911	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_opp_even	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_opp_odd	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_even_abs	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_even_nonneg	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite pow_even_abs; only 1: apply pow_nonneg; only 1: apply abs_nonneg; only 1: trivial).	0.022378	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_odd_abs_sgn	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_odd_sgn	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.abs_pow	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_add_distr_r	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_assoc	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction p; only 1: simpl; only 1: rewrite IHp; only 1: rewrite mul_add_distr_r; only 1: easy; only 1: simpl; only 1: rewrite IHp; only 1: trivial; only 1: simpl; only 1: trivial).	0.027592	10
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_succ_l	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction p; only 1: simpl; only 1: rewrite IHp; only 1: rewrite add_assoc; only 1: rewrite add_diag; only 1: rewrite <- add_xO; only 1: easy; only 1: simpl; only 1: trivial; only 1: simpl; only 1: symmetry; only 1: apply add_diag).	0.024950	12
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_succ_r	120	0.0.0.0	synth with cache (only 1: rewrite mul_comm; only 1: rewrite mul_succ_l; only 1: f_equal; only 1: apply mul_comm).	0.016677	4
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_xI_mul_xO_discr	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_xO_discr	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_reg_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.mod_divide	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_div_mul_exact	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_div_factor	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_div_gcd	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite gcd_div_factor; only 1: rewrite <- H0; only 1: rewrite div_same; only 1: easy; only 1: trivial; only 1: trivial; only 1: rewrite H0; only 1: apply gcd_divide_l; only 1: rewrite H0; only 1: apply gcd_divide_r).	0.043436	15
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_mod	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_wd	120	0.0	synth with cache (only 1: unfold lcm; only 1: solve_proper).	0.028473	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_equiv1	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite divide_div_mul_exact; only 1: easy; only 1: easy; only 1: apply gcd_divide_r).	0.034692	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_equiv2	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_div_swap	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_l	120	0.0.0.0	synth with cache (only 1: unfold lcm; only 1: intros ?; only 1: intros ?; only 1: apply divide_factor_l).	0.009770	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_r	120	0.0.0.0.0	synth with cache (only 1: unfold lcm; only 1: intros ?; only 1: intros ?; only 1: rewrite <- gcd_div_swap; only 1: apply divide_factor_r).	0.018969	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_div	120	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H1; only 1: exists x; only 1: rewrite <- divide_div_mul_exact; only 1: rewrite H1; only 1: easy; only 1: easy; only 1: easy).	0.031390	13
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_least	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_comm	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_divide_iff	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_unique	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply divide_antisym; only 1: apply lcm_least; only 1: easy; only 1: easy; only 1: apply H2; only 1: apply divide_lcm_l; only 1: apply divide_lcm_r).	0.030068	14
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_unique_alt	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply lcm_unique; only 1: trivial; only 1: apply H0; only 1: apply divide_refl; only 1: apply H0; only 1: apply divide_refl; only 1: intros; only 1: apply H0; only 1: split; only 1: easy; only 1: easy).	0.038926	16
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_assoc	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique_alt; only 1: apply le_0_l; only 1: intros; only 1: rewrite lcm_divide_iff; only 1: rewrite lcm_divide_iff; only 1: rewrite lcm_divide_iff; only 1: rewrite and_assoc; only 1: easy).	0.035046	9
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_0_l	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: order; only 1: apply divide_refl; only 1: apply divide_0_r; only 1: trivial).	0.014184	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_0_r	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite lcm_comm; only 1: apply lcm_unique; only 1: order; only 1: apply divide_refl; only 1: apply divide_0_r; only 1: trivial).	0.014408	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_1_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_1_r	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite lcm_comm; only 1: apply lcm_unique; only 1: trivial using divide_1_l, le_0_l, divide_refl; only 1: trivial using divide_1_l, le_0_l, divide_refl; only 1: trivial using divide_1_l, le_0_l, divide_refl; only 1: trivial using divide_1_l, le_0_l, divide_refl).	0.016613	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_diag	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: trivial using divide_1_l, le_0_l, divide_refl; only 1: trivial using divide_1_l, le_0_l, divide_refl; only 1: trivial using divide_1_l, le_0_l, divide_refl; only 1: trivial using divide_refl, le_0_l).	0.013784	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_eq_0	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros ?; only 1: apply eq_mul_0; only 1: apply divide_0_l; only 1: rewrite <- H; only 1: apply lcm_least; only 1: apply divide_factor_l; only 1: apply divide_factor_r; only 1: destruct 1; only 1: rewrite H; only 1: apply lcm_0_l; only 1: rewrite H; only 1: apply lcm_0_r).	0.037195	14
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_eq_r	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply lcm_unique_alt; only 1: trivial using le_0_l; only 1: intros ?; only 1: split; only 1: split; only 1: transitivity m; only 1: easy; only 1: trivial; only 1: trivial; only 1: destruct 1; only 1: easy).	0.020617	14
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_iff	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: split; only 1: intros ?; only 1: apply lcm_unique_alt; only 1: trivial using le_0_l; only 1: intros ?; only 1: split; only 1: split; only 1: transitivity m; only 1: easy; only 1: trivial; only 1: trivial; only 1: destruct 1; only 1: easy; only 1: intros ?; only 1: rewrite <- H; only 1: apply divide_lcm_l).	0.031615	18
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_mul_mono_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_mul_mono_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_1_lcm_mul	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericAbs.abs_eq	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold abs; only 1: apply max_l; only 1: apply le_trans with 0; only 1: rewrite opp_nonpos_nonneg; only 1: auto; only 1: auto).	0.013535	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericAbs.abs_neq	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold abs; only 1: apply max_r; only 1: apply le_trans with 0; only 1: auto; only 1: rewrite opp_nonneg_nonpos; only 1: auto).	0.012419	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_null	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_pos	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_neg	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_wd	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_max	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct_max n; only 1: rewrite max_l; only 1: auto with relations; only 1: apply le_trans with 0; only 1: rewrite opp_nonpos_nonneg; only 1: auto; only 1: auto; only 1: rewrite max_r; only 1: auto with relations; only 1: apply le_trans with 0; only 1: auto; only 1: rewrite opp_nonneg_nonpos; only 1: auto).	0.023161	14
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_neq'	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply abs_neq; only 1: rewrite <- opp_nonneg_nonpos; only 1: easy).	0.012345	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_nonneg	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct_max n; only 1: auto; only 1: rewrite opp_nonneg_nonpos; only 1: auto).	0.074691	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_eq_iff	120	0.0.0.0.0	synth with cache (only 1: split; only 1: intros ?; only 1: rewrite <- H; only 1: apply abs_nonneg; only 1: apply abs_eq).	0.019927	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_neq_iff	120	0.0.0.0.0.0	synth with cache (only 1: split; only 1: intros ?; only 1: rewrite <- opp_nonneg_nonpos; only 1: rewrite <- H; only 1: apply abs_nonneg; only 1: apply abs_neq).	0.023974	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_opp	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct_max n; only 1: rewrite abs_neq; only 1: rewrite opp_involutive; only 1: auto with relations; only 1: rewrite opp_nonpos_nonneg; only 1: auto; only 1: rewrite abs_eq; only 1: auto with relations; only 1: rewrite opp_nonneg_nonpos; only 1: auto).	0.023873	11
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_0	120	0.0	synth with cache (only 1: apply abs_eq; only 1: apply le_refl).	0.007838	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_0_iff	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: destruct_max n; only 1: auto; only 1: rewrite eq_opp_l; only 1: rewrite opp_0; only 1: easy; only 1: intros ?; only 1: rewrite H; only 1: rewrite abs_eq; only 1: auto using eq_refl, le_refl; only 1: auto using eq_refl, le_refl).	0.047700	11
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_pos	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_eq_or_opp	120	0.0.0.0	synth with cache (only 1: intros; only 1: destruct_max n; only 1: auto with relations; only 1: auto with relations).	0.027566	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_or_opp_abs	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct_max n; only 1: auto with relations; only 1: rewrite opp_involutive; only 1: auto with relations).	0.032582	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_involutive	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply abs_eq; only 1: destruct_max n; only 1: auto; only 1: rewrite opp_nonneg_nonpos; only 1: auto).	0.026350	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_spec	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_case_strong	120	0.0.0.0	synth with cache (only 1: intros; only 1: destruct_max n; only 1: auto; only 1: auto).	0.023157	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_case	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply abs_case_strong; only 1: easy; only 1: easy; only 1: easy).	0.075821	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_eq_cases	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_lt	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_le	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_triangle	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_sub_triangle	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_mul	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_square	120	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- abs_mul; only 1: apply abs_eq; only 1: apply square_nonneg).	0.014245	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_wd	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_spec	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct_sgn n; only 1: left; only 1: auto with relations; only 1: right; only 1: left; only 1: auto with relations; only 1: right; only 1: right; only 1: auto with relations).	0.112193	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_0	120	0.0	synth with cache (only 1: apply sgn_null; only 1: easy).	0.010838	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_pos_iff	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_null_iff	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_neg_iff	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_opp	120	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct_sgn n; only 1: apply sgn_neg; only 1: rewrite opp_neg_pos; only 1: auto; only 1: setoid_replace n with 0; only 1: rewrite opp_0; only 1: apply sgn_0; only 1: auto with relations; only 1: rewrite opp_involutive; only 1: apply sgn_pos; only 1: rewrite opp_pos_neg; only 1: auto).	0.037970	13
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_nonneg	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_nonpos	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- opp_nonneg_nonpos; only 1: rewrite <- opp_nonneg_nonpos; only 1: rewrite <- sgn_opp; only 1: apply sgn_nonneg).	0.017253	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_mul	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct_sgn n; only 1: nzsimpl; only 1: destruct_sgn m; only 1: apply sgn_pos; only 1: apply mul_pos_pos; only 1: easy; only 1: easy; only 1: apply sgn_null; only 1: rewrite eq_mul_0; only 1: auto with relations; only 1: apply sgn_neg; only 1: apply mul_pos_neg; only 1: easy; only 1: easy; only 1: nzsimpl; only 1: apply sgn_null; only 1: rewrite eq_mul_0; only 1: auto with relations; only 1: destruct_sgn m; only 1: nzsimpl; only 1: apply sgn_neg; only 1: apply mul_neg_pos; only 1: easy; only 1: easy; only 1: nzsimpl; only 1: apply sgn_null; only 1: rewrite eq_mul_0; only 1: auto with relations; only 1: rewrite mul_opp_opp; only 1: nzsimpl; only 1: apply sgn_pos; only 1: apply mul_neg_neg; only 1: easy; only 1: easy).	0.133014	35
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_abs	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: destruct_sgn n; only 1: nzsimpl; only 1: apply abs_eq; only 1: apply lt_le_incl; only 1: auto; only 1: nzsimpl; only 1: rewrite abs_0_iff; only 1: auto with relations; only 1: rewrite mul_opp_r; only 1: nzsimpl; only 1: apply abs_neq; only 1: apply lt_le_incl; only 1: auto).	0.062561	15
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_sgn	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct_sgn n; only 1: nzsimpl; only 1: apply abs_eq; only 1: apply lt_le_incl; only 1: auto; only 1: nzsimpl; only 1: auto; only 1: rewrite mul_opp_r; only 1: nzsimpl; only 1: rewrite eq_opp_l; only 1: apply abs_neq; only 1: apply lt_le_incl; only 1: auto).	0.076343	14
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_sgn	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_succ_r'	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_0_l	120	0	synth with cache (only 1: wrap pow_0_l).	0.010048	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_1_l	120	0	synth with cache (only 1: wrap pow_1_l).	0.009580	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_r	120	0	synth with cache (only 1: wrap pow_add_r).	0.011067	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_mul_l	120	0	synth with cache (only 1: wrap pow_mul_l).	0.010299	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_mul_r	120	0	synth with cache (only 1: wrap pow_mul_r).	0.010283	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_eq_0	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_nonzero	120	0	synth with cache (only 1: wrap pow_nonzero).	0.009100	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_eq_0_iff	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_l	120	0	synth with cache (only 1: wrap pow_lt_mono_l).	0.036622	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_l	120	0	synth with cache (only 1: wrap pow_le_mono_l).	0.012387	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_gt_1	120	0	synth with cache (only 1: wrap pow_gt_1).	0.010348	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_r	120	0	synth with cache (only 1: wrap pow_lt_mono_r).	0.010970	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_r	120	0	synth with cache (only 1: wrap pow_le_mono_r).	0.011166	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono	120	0	synth with cache (only 1: wrap pow_le_mono).	0.016063	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_inj_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_inj_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_l_iff	120	0	synth with cache (only 1: wrap pow_lt_mono_l_iff).	0.015646	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_l_iff	120	0	synth with cache (only 1: wrap pow_le_mono_l_iff).	0.013975	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_r_iff	120	0	synth with cache (only 1: wrap pow_lt_mono_r_iff).	0.011214	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_r_iff	120	0	synth with cache (only 1: wrap pow_le_mono_r_iff).	0.009453	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_gt_lin_r	120	0	synth with cache (only 1: wrap pow_gt_lin_r).	0.008955	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_lower	120	0	synth with cache (only 1: wrap pow_add_lower).	0.013268	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_upper	120	0	synth with cache (only 1: wrap pow_add_upper).	0.014282	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.even_pow	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.odd_pow	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- negb_even; only 1: rewrite <- negb_even; only 1: rewrite even_pow; only 1: easy; only 1: assumption).	0.016081	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.divide_add_cancel_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.divide_sub_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_add_mult_diag_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_add_diag_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_sub_diag_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.Bezout_wd	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Bezout; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: setoid_rewrite H; only 1: setoid_rewrite H0; only 1: setoid_rewrite H1; only 1: easy).	0.061792	14
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.bezout_1_gcd	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout_pos_pos	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout_pos	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_mul_mono_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_mul_mono_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gauss	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.divide_mul_split	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.succ_max_distr	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.succ_min_distr	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.pred_max_distr	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.pred_min_distr	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_max_distr_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_max_distr_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_min_distr_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_min_distr_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.opp_max_distr	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.opp_min_distr	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_max_distr_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_max_distr_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_min_distr_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_min_distr_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonneg_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonneg_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonneg_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonneg_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonpos_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonpos_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonpos_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonpos_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.odd_pred	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_pred	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_opp	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.odd_opp	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- negb_even; only 1: rewrite <- negb_even; only 1: rewrite even_opp; only 1: easy).	0.012413	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_sub	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- add_opp_r; only 1: rewrite even_add; only 1: rewrite even_opp; only 1: easy).	0.015100	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.odd_sub	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- add_opp_r; only 1: rewrite odd_add; only 1: rewrite odd_opp; only 1: easy).	0.016270	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NParity.NParityProp.odd_pred	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NParity.NParityProp.even_pred	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NParity.NParityProp.even_sub	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NParity.NParityProp.odd_sub	120	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- negb_even; only 1: rewrite <- negb_even; only 1: rewrite <- negb_even; only 1: rewrite even_sub; only 1: destruct even; only 1: destruct even; only 1: easy; only 1: easy; only 1: destruct even; only 1: easy; only 1: easy; only 1: assumption).	0.022768	13
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.strong_rec_alt	120	0	synth with cache (only 1: reflexivity).	0.010000	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.strong_rec0_wd	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.strong_rec_wd	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite strong_rec_alt; only 1: rewrite strong_rec_alt; only 1: f_equiv').	0.083431	12
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec0_0	120	0.0.0.0	synth with cache (only 1: intros; only 1: unfold strong_rec0; only 1: rewrite @recursion_0; only 1: auto).	0.011534	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec0_succ	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold strong_rec0; only 1: f_equiv; only 1: rewrite @recursion_succ; only 1: f_equiv'; only 1: f_equiv'; only 1: f_equiv').	0.067666	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec_0	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite strong_rec_alt; only 1: rewrite strong_rec0_succ; only 1: f_equiv'; only 1: rewrite strong_rec0_0; only 1: reflexivity).	0.049928	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec0_more_steps	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec0_fixpoint	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec_fixpoint	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec_0_any	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec_any_fst_arg	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_upper_bound	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_eq	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply add_sub_eq_l; only 1: symmetry; only 1: apply div_mod; only 1: easy).	0.014593	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mod_unique	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply div_mod_unique with b; only 1: auto'; only 1: auto'; only 1: auto').	0.019367	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_unique	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply div_unique with r; only 1: auto'; only 1: auto'; only 1: auto').	0.015241	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_unique	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply mod_unique with q; only 1: auto'; only 1: auto'; only 1: auto').	0.014725	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_unique_exact	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply div_unique_exact; only 1: auto'; only 1: auto'; only 1: auto').	0.013128	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_same	120	0.0.0	synth with cache (only 1: intros; only 1: apply div_same; only 1: auto').	0.010853	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_same	120	0.0.0	synth with cache (only 1: intros; only 1: apply mod_same; only 1: auto').	0.011059	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_small	120	0.0.0	synth with cache (only 1: intros; only 1: apply div_small; only 1: auto').	0.010069	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_small	120	0.0.0	synth with cache (only 1: intros; only 1: apply mod_small; only 1: auto').	0.010577	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_0_l	120	0.0.0	synth with cache (only 1: intros; only 1: apply div_0_l; only 1: auto').	0.010702	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_0_l	120	0.0.0	synth with cache (only 1: intros; only 1: apply mod_0_l; only 1: auto').	0.011946	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_1_r	120	0.0.0	synth with cache (only 1: intros; only 1: apply div_1_r; only 1: auto').	0.009055	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_1_r	120	0.0.0	synth with cache (only 1: intros; only 1: apply mod_1_r; only 1: auto').	0.010148	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_1_l	120	0	synth with cache (only 1: exact div_1_l).	0.008215	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_1_l	120	0	synth with cache (only 1: exact mod_1_l).	0.009207	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply div_mul; only 1: auto'; only 1: auto').	0.011545	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_mul	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply mod_mul; only 1: auto'; only 1: auto').	0.011529	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_le	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply mod_le; only 1: auto'; only 1: auto').	0.011358	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_str_pos	120	0	synth with cache (only 1: exact div_str_pos).	0.010248	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_small_iff	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply div_small_iff; only 1: auto'; only 1: auto').	0.013830	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_small_iff	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply mod_small_iff; only 1: auto'; only 1: auto').	0.011686	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_str_pos_iff	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply div_str_pos_iff; only 1: auto'; only 1: auto').	0.012078	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_lt	120	0	synth with cache (only 1: exact div_lt).	0.009193	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_mono	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply div_le_mono; only 1: auto'; only 1: auto').	0.013542	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_div_le	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply mul_div_le; only 1: auto'; only 1: auto').	0.013715	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_succ_div_gt	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply mul_succ_div_gt; only 1: auto'; only 1: auto').	0.013027	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_exact	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply div_exact; only 1: auto'; only 1: auto').	0.012677	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_lt_upper_bound	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply div_lt_upper_bound; only 1: auto'; only 1: auto'; only 1: auto').	0.013755	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_upper_bound	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply div_le_upper_bound; only 1: auto'; only 1: auto'; only 1: auto').	0.014685	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_lower_bound	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply div_le_lower_bound; only 1: auto'; only 1: auto'; only 1: auto').	0.015786	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_compat_l	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply div_le_compat_l; only 1: auto'; only 1: auto).	0.048014	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_add	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply mod_add; only 1: auto'; only 1: auto'; only 1: auto').	0.015217	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_add	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply div_add; only 1: auto'; only 1: auto'; only 1: auto').	0.014501	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_add_l	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply div_add_l; only 1: auto'; only 1: auto'; only 1: auto').	0.016409	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_cancel_r	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply div_mul_cancel_r; only 1: auto'; only 1: auto'; only 1: auto').	0.017337	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_cancel_l	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply div_mul_cancel_l; only 1: auto'; only 1: auto'; only 1: auto').	0.017411	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_distr_r	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply mul_mod_distr_r; only 1: auto'; only 1: auto'; only 1: auto').	0.019724	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_distr_l	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply mul_mod_distr_l; only 1: auto'; only 1: auto'; only 1: auto').	0.019818	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_mod	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply mod_mod; only 1: auto'; only 1: auto').	0.012887	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_idemp_l	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply mul_mod_idemp_l; only 1: auto'; only 1: auto'; only 1: auto').	0.013607	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_idemp_r	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply mul_mod_idemp_r; only 1: auto'; only 1: auto'; only 1: auto').	0.014814	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply mul_mod; only 1: auto'; only 1: auto'; only 1: auto').	0.013893	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.add_mod_idemp_l	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply add_mod_idemp_l; only 1: auto'; only 1: auto'; only 1: auto').	0.015609	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.add_mod_idemp_r	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply add_mod_idemp_r; only 1: auto'; only 1: auto'; only 1: auto').	0.016135	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.add_mod	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply add_mod; only 1: auto'; only 1: auto'; only 1: auto').	0.015858	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_div	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply div_div; only 1: auto'; only 1: auto'; only 1: auto').	0.014700	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_mul_r	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply mod_mul_r; only 1: auto'; only 1: auto'; only 1: auto').	0.017726	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_le	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply div_mul_le; only 1: auto'; only 1: auto'; only 1: auto').	0.014358	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_divides	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply mod_divides; only 1: auto'; only 1: auto').	0.016138	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_equiv2	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_div_swap	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_l	120	0.0.0.0.0	synth with cache (only 1: unfold lcm; only 1: intros ?; only 1: intros ?; only 1: apply divide_abs_r; only 1: apply divide_factor_l).	0.014315	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_r	120	0.0.0.0.0.0	synth with cache (only 1: unfold lcm; only 1: intros ?; only 1: intros ?; only 1: apply divide_abs_r; only 1: rewrite <- gcd_div_swap; only 1: apply divide_factor_r).	0.024600	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_div	120	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H1; only 1: exists x; only 1: rewrite <- divide_div_mul_exact; only 1: rewrite H1; only 1: easy; only 1: easy; only 1: easy).	0.025010	13
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_least	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_nonneg	120	0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: unfold lcm; only 1: apply abs_nonneg).	0.012985	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_comm	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_divide_iff	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_unique	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply divide_antisym_nonneg; only 1: apply lcm_nonneg; only 1: trivial; only 1: apply lcm_least; only 1: easy; only 1: easy; only 1: apply H2; only 1: apply divide_lcm_l; only 1: apply divide_lcm_r).	0.028454	16
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_unique_alt	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply lcm_unique; only 1: trivial; only 1: apply H0; only 1: apply divide_refl; only 1: apply H0; only 1: apply divide_refl; only 1: intros; only 1: apply H0; only 1: split; only 1: easy; only 1: easy).	0.069964	16
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_assoc	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique_alt; only 1: apply lcm_nonneg; only 1: intros; only 1: rewrite lcm_divide_iff; only 1: rewrite lcm_divide_iff; only 1: rewrite lcm_divide_iff; only 1: rewrite and_assoc; only 1: easy).	0.062182	9
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_0_l	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: order; only 1: apply divide_refl; only 1: apply divide_0_r; only 1: trivial).	0.014056	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_0_r	120	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite lcm_comm; only 1: rewrite lcm_0_l; only 1: easy).	0.016346	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_l_nonneg	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_r_nonneg	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite lcm_comm; only 1: rewrite lcm_1_l_nonneg; only 1: easy; only 1: trivial using divide_1_l, le_0_1, divide_refl).	0.017163	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.max_0_l	120	0.0.0	synth with cache (only 1: intros; only 1: apply max_r; only 1: apply le_0_l).	0.011084	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.max_0_r	120	0.0.0	synth with cache (only 1: intros; only 1: apply max_l; only 1: apply le_0_l).	0.009806	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_diag_nonneg	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: trivial using divide_1_l, le_0_1, divide_refl; only 1: trivial using divide_1_l, le_0_1, divide_refl; only 1: trivial using divide_1_l, le_0_1, divide_refl; only 1: trivial using divide_refl).	0.015753	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.min_0_l	120	0.0.0	synth with cache (only 1: intros; only 1: apply min_l; only 1: apply le_0_l).	0.009669	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.min_0_r	120	0.0.0	synth with cache (only 1: intros; only 1: apply min_r; only 1: apply le_0_l).	0.009046	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_eq_0	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros ?; only 1: apply eq_mul_0; only 1: apply divide_0_l; only 1: rewrite <- H; only 1: apply lcm_least; only 1: apply divide_factor_l; only 1: apply divide_factor_r; only 1: destruct 1; only 1: rewrite H; only 1: apply lcm_0_l; only 1: rewrite H; only 1: apply lcm_0_r).	0.039061	14
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.succ_max_distr	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_eq_r	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply lcm_unique_alt; only 1: trivial; only 1: intros ?; only 1: split; only 1: split; only 1: transitivity m; only 1: easy; only 1: trivial; only 1: trivial; only 1: destruct 1; only 1: easy).	0.026280	15
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.succ_min_distr	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_iff	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: split; only 1: intros ?; only 1: apply lcm_unique_alt; only 1: trivial; only 1: intros ?; only 1: split; only 1: split; only 1: transitivity m; only 1: easy; only 1: trivial; only 1: trivial; only 1: destruct 1; only 1: easy; only 1: intros ?; only 1: rewrite <- H0; only 1: apply divide_lcm_l).	0.030665	19
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_max_distr_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_opp_l	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique_alt; only 1: unfold lcm; only 1: apply abs_nonneg; only 1: intros; only 1: rewrite divide_opp_l; only 1: apply lcm_divide_iff).	0.020091	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_max_distr_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_opp_r	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite lcm_comm; only 1: rewrite lcm_opp_l; only 1: rewrite lcm_comm; only 1: easy).	0.047485	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_min_distr_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_min_distr_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_max_distr_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_abs_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_abs_r	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite lcm_comm; only 1: rewrite lcm_abs_l; only 1: rewrite lcm_comm; only 1: easy).	0.020325	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_max_distr_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_l	120	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- lcm_abs_r; only 1: apply lcm_1_l_nonneg; only 1: apply abs_nonneg).	0.013791	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_min_distr_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_r	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite lcm_comm; only 1: rewrite <- lcm_abs_r; only 1: apply lcm_1_l_nonneg; only 1: apply abs_nonneg).	0.017387	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_min_distr_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_diag	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- lcm_abs_l; only 1: rewrite <- lcm_abs_r; only 1: apply lcm_diag_nonneg; only 1: apply abs_nonneg).	0.019198	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_max_distr_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_max_distr_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_min_distr_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_min_distr_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_l_nonneg	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_spec'	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_square	120	0	synth with cache (only 1: wrap sqrt_square).	0.007922	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_le_square	120	0	synth with cache (only 1: wrap sqrt_le_square).	0.010226	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_lt_square	120	0	synth with cache (only 1: wrap sqrt_lt_square).	0.010270	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_le_lin	120	0	synth with cache (only 1: wrap sqrt_le_lin).	0.009785	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_mul_above	120	0	synth with cache (only 1: wrap sqrt_mul_above).	0.009228	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_succ_le	120	0	synth with cache (only 1: wrap sqrt_succ_le).	0.007958	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_succ_or	120	0	synth with cache (only 1: wrap sqrt_succ_or).	0.009843	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.add_sqrt_le	120	0	synth with cache (only 1: wrap add_sqrt_le).	0.009343	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_add_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul_cancel_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_lt_mono_nonpos	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_le_mono_nonpos	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_nonpos_nonpos	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_nonneg_nonpos	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_nonpos_nonneg	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite mul_comm; only 1: apply mul_nonneg_nonpos; only 1: easy; only 1: easy).	0.016176	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_0	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_0_mul	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_mul_0	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.nlt_square_0	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply lt_nge in H; only 1: apply H; only 1: apply square_nonneg).	0.011186	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_lt_mono_nonpos	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply mul_lt_mono_nonpos; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.013525	9
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_le_mono_nonpos	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply mul_le_mono_nonpos; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.018001	9
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_lt_simpl_nonpos	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_le_simpl_nonpos	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_1_mul_neg	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_m1_neg	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_m1_pos	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_1_mul_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_m1_mul_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.eq_mul_1	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_diag_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_diag_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_mul_diag_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_mul_diag_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_0_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_succ	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_add_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_diag	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_gt	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_assoc	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: induct p; only 1: intros ?; only 1: rewrite sub_0_r; only 1: rewrite sub_0_r; only 1: easy; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite sub_succ_r; only 1: rewrite sub_succ_r; only 1: rewrite <- H; only 1: rewrite add_pred_r; only 1: reflexivity; only 1: apply sub_gt; only 1: apply le_succ_l; only 1: easy; only 1: apply lt_le_incl; only 1: apply le_succ_l; only 1: easy).	0.062972	22
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul_cancel_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_succ_l	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite <- add_1_l; only 1: rewrite <- add_1_l; only 1: symmetry; only 1: apply add_sub_assoc; only 1: assumption).	0.020194	8
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite <- add_sub_assoc; only 1: rewrite sub_diag; only 1: rewrite add_0_r; only 1: easy; only 1: apply le_refl).	0.022800	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_add	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite add_comm; only 1: rewrite add_sub_assoc; only 1: rewrite add_comm; only 1: apply add_sub; only 1: assumption).	0.019981	8
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_eq_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_eq_r	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite add_comm in H; only 1: apply add_sub_eq_l; only 1: easy).	0.018321	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_eq_nz	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_add_distr	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_swap	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite add_comm; only 1: rewrite <- add_sub_assoc; only 1: rewrite add_comm; only 1: easy; only 1: assumption).	0.020811	9
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_sub_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_0_le	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_add_le	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_add_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_sub_le_add_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_sub_le_add_l	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite add_comm; only 1: apply le_sub_le_add_r).	0.015882	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_sub_lt_add_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_sub_lt_add_l	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite add_comm; only 1: apply lt_sub_lt_add_r).	0.021585	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_cancel_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_add_le_sub_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_add_le_sub_l	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite add_comm; only 1: apply le_add_le_sub_r).	0.016410	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_add_lt_sub_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_add_lt_sub_l	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite add_comm; only 1: apply lt_add_lt_sub_r).	0.015011	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_lt	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_le_mono_r	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite le_sub_le_add_r; only 1: transitivity m; only 1: assumption; only 1: apply sub_add_le).	0.014561	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_le_mono_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.mul_pred_r	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: cases m; only 1: rewrite pred_0; only 1: rewrite mul_0_r; only 1: rewrite sub_0_l; only 1: easy; only 1: intros ?; only 1: rewrite pred_succ; only 1: rewrite mul_succ_r; only 1: rewrite <- add_sub_assoc; only 1: rewrite sub_diag; only 1: rewrite add_0_r; only 1: easy; only 1: apply eq_le_incl; only 1: easy).	0.057183	16
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.mul_sub_distr_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.mul_sub_distr_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_equiv	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_equiv	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_alt_wd	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold le_alt; only 1: setoid_rewrite H; only 1: setoid_rewrite H0; only 1: auto with *).	0.026277	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_alt_wd	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold lt_alt; only 1: setoid_rewrite H; only 1: setoid_rewrite H0; only 1: auto with *).	0.026945	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_alt_dichotomy	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_dichotomy	120	0	synth with cache (only 1: exact le_alt_dichotomy).	0.010113	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_neg_neg	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_neg_nonpos	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_nonpos_neg	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_nonpos_nonpos	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_0_sub	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_0_sub	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_0	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_0	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_lt_mono	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite <- lt_0_sub; only 1: rewrite <- add_opp_l; only 1: rewrite <- sub_opp_r; only 1: rewrite lt_0_sub; only 1: easy).	0.028169	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_le_mono	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite <- le_0_sub; only 1: rewrite <- add_opp_l; only 1: rewrite <- sub_opp_r; only 1: rewrite le_0_sub; only 1: easy).	0.024138	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_pos_neg	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_neg_pos	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_nonneg_nonpos	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_nonpos_nonneg	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_m1_0	120	0.0	synth with cache (only 1: apply opp_neg_pos; only 1: apply lt_0_1).	0.008048	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_mono_l	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- add_opp_r; only 1: rewrite <- add_opp_r; only 1: rewrite <- add_lt_mono_l; only 1: rewrite opp_lt_mono; only 1: easy).	0.027837	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_mono_r	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- add_opp_r; only 1: rewrite <- add_opp_r; only 1: rewrite add_lt_mono_r; only 1: easy).	0.024236	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_mono	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_mono_l	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- add_opp_r; only 1: rewrite <- add_opp_r; only 1: rewrite <- add_le_mono_l; only 1: rewrite opp_le_mono; only 1: easy).	0.021504	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_mono_r	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- add_opp_r; only 1: rewrite <- add_opp_r; only 1: rewrite add_le_mono_r; only 1: easy).	0.024775	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_mono	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_le_mono	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_lt_mono	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_lt_sub_lt	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_le_sub_lt	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_le_sub_lt	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_add_lt_sub_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_add_le_sub_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_add_lt_sub_l	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite add_comm; only 1: apply lt_add_lt_sub_r).	0.015445	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_add_le_sub_l	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite add_comm; only 1: apply le_add_le_sub_r).	0.013945	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_lt_add_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_le_add_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_lt_add_l	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite add_comm; only 1: apply lt_sub_lt_add_r).	0.017545	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_le_add_l	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite add_comm; only 1: apply le_sub_le_add_r).	0.018016	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_lt_add	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite lt_sub_lt_add_l; only 1: rewrite add_sub_assoc; only 1: rewrite <- lt_add_lt_sub_r; only 1: easy).	0.029308	8
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_le_add	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite le_sub_le_add_l; only 1: rewrite add_sub_assoc; only 1: rewrite <- le_add_le_sub_r; only 1: easy).	0.023407	8
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_pos	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_nonneg	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_cases	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply add_lt_cases; only 1: apply lt_sub_lt_add; only 1: easy).	0.015165	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_cases	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply add_le_cases; only 1: apply le_sub_le_add; only 1: easy).	0.015646	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_neg_cases	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- opp_neg_pos; only 1: apply add_neg_cases; only 1: rewrite add_opp_r; only 1: easy).	0.024331	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_pos_cases	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- opp_pos_neg; only 1: apply add_pos_cases; only 1: rewrite add_opp_r; only 1: easy).	0.025092	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_nonpos_cases	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- opp_nonpos_nonneg; only 1: apply add_nonpos_cases; only 1: rewrite add_opp_r; only 1: easy).	0.021065	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_nonneg_cases	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- opp_nonneg_nonpos; only 1: apply add_nonneg_cases; only 1: rewrite add_opp_r; only 1: easy).	0.023683	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.PosNeg.zero_pos_neg	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.square_lt_mono	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: split; only 1: intros ?; only 1: apply square_lt_mono_nonneg; only 1: apply le_0_l; only 1: assumption; only 1: intros ?; only 1: apply square_lt_simpl_nonneg; only 1: apply le_0_l; only 1: assumption).	0.089132	11
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.square_le_mono	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: split; only 1: intros ?; only 1: apply square_le_mono_nonneg; only 1: apply le_0_l; only 1: assumption; only 1: intros ?; only 1: apply square_le_simpl_nonneg; only 1: apply le_0_l; only 1: assumption).	0.012369	11
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_le_mono_l	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply mul_le_mono_nonneg_l; only 1: apply le_0_l; only 1: assumption).	0.008453	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_le_mono_r	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply mul_le_mono_nonneg_r; only 1: apply le_0_l; only 1: assumption).	0.008944	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_lt_mono	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply mul_lt_mono_nonneg; only 1: apply le_0_l; only 1: assumption; only 1: apply le_0_l; only 1: assumption).	0.010887	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_le_mono	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply mul_le_mono_nonneg; only 1: apply le_0_l; only 1: assumption; only 1: apply le_0_l; only 1: assumption).	0.010470	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.lt_0_mul'	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: split; only 1: intros ?; only 1: apply lt_0_mul in H; only 1: destruct H; only 1: destruct H; only 1: split; only 1: easy; only 1: easy; only 1: destruct H; only 1: false_hyp H nlt_0_r; only 1: intros ?; only 1: destruct H; only 1: apply mul_pos_pos; only 1: easy; only 1: easy).	0.022819	17
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.eq_mul_1	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.le_add_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.lt_lt_add_r	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite <- add_0_r; only 1: apply add_lt_le_mono; only 1: assumption; only 1: apply le_0_l).	0.017090	8
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.lt_lt_add_l	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite add_comm; only 1: intros ?; only 1: rewrite <- add_0_r; only 1: apply add_lt_le_mono; only 1: assumption; only 1: apply le_0_l).	0.028721	9
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qplus_lt_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.add_pos_l	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply add_pos_nonneg; only 1: assumption; only 1: apply le_0_l).	0.010284	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.add_pos_r	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply add_nonneg_pos; only 1: apply le_0_l; only 1: assumption).	0.008245	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neg_pos_cases	120	0.0	synth with cache (only 1: intros ?; only 1: apply lt_gt_cases).	0.009725	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.nonpos_pos_cases	120	0.0	synth with cache (only 1: intros ?; only 1: apply le_gt_cases).	0.008430	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neg_nonneg_cases	120	0.0	synth with cache (only 1: intros ?; only 1: apply lt_ge_cases).	0.008844	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.nonpos_nonneg_cases	120	0.0	synth with cache (only 1: intros ?; only 1: apply le_ge_cases).	0.009126	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_pred_l	120	0.0.0	synth with cache (only 1: intros ?; only 1: apply lt_le_incl; only 1: apply lt_pred_l).	0.007556	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_le_pred	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.nle_pred_r	120	0.0.0	synth with cache (only 1: intros ?; only 1: rewrite <- lt_le_pred; only 1: apply lt_irrefl).	0.011518	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_le	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_lt_pred	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply lt_pred_le; only 1: apply lt_le_incl; only 1: easy).	0.010330	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_le_pred	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply lt_le_incl; only 1: apply lt_pred_le; only 1: trivial).	0.010371	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_lt	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_pred_lt	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply lt_le_incl; only 1: apply lt_le_pred; only 1: easy).	0.010419	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.pred_lt_mono	120	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite lt_le_pred; only 1: symmetry; only 1: apply lt_pred_le).	0.013453	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.pred_le_mono	120	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- lt_pred_le; only 1: rewrite lt_le_pred; only 1: easy).	0.012893	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_succ_lt_pred	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite pred_lt_mono; only 1: rewrite pred_succ; only 1: easy).	0.013541	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_succ_le_pred	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite pred_le_mono; only 1: rewrite pred_succ; only 1: easy).	0.014105	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_lt_succ	120	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite lt_pred_le; only 1: symmetry; only 1: apply lt_succ_r).	0.011600	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_pred_lt_succ	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neq_pred_l	120	0.0.0	synth with cache (only 1: intros ?; only 1: apply lt_neq; only 1: apply lt_pred_l).	0.008622	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_m1_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_wf_0	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.nlt_0_r	120	0.0.0	synth with cache (only 1: intros ?; only 1: apply le_ngt; only 1: apply le_0_l).	0.008375	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.nle_succ_0	120	0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply le_succ_l in H; only 1: false_hyp H nlt_0_r).	0.009309	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_0_r	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: split; only 1: intros ?; only 1: le_elim H; only 1: false_hyp H nlt_0_r; only 1: assumption; only 1: intros ?; only 1: apply eq_le_incl; only 1: assumption).	0.014934	9
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_0_succ	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.neq_0_lt_0	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.eq_0_gt_0_cases	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.zero_one	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_1_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_1_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_lt_0	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: induct n; only 1: trivial; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply H; only 1: apply lt_succ_l; only 1: easy).	0.017357	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_1_l'	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply lt_1_l with m; only 1: apply le_lt_trans with n; only 1: apply le_0_l; only 1: auto; only 1: auto).	0.011003	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.RelElim.le_ind_rel	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.RelElim.lt_ind_rel	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.succ_pred_pos	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply succ_pred; only 1: intros ?; only 1: rewrite H0 in H; only 1: false_hyp H lt_irrefl).	0.016170	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_pred_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_le_pred	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply le_trans with n; only 1: apply le_pred_l; only 1: assumption).	0.011662	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_lt_pred	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply le_lt_trans with n; only 1: apply le_pred_l; only 1: assumption).	0.010175	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_le_pred	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_le	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: cases n; only 1: rewrite pred_0; only 1: intros ?; only 1: apply lt_le_incl; only 1: easy; only 1: intros ?; only 1: intros ?; only 1: rewrite pred_succ in H; only 1: apply le_succ_l; only 1: easy).	0.031239	12
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_lt	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_pred_le	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.pred_le_mono	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: elim H using le_ind_rel; only 1: solve_proper; only 1: intros ?; only 1: rewrite pred_0; only 1: apply le_0_l; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: clear H1; only 1: rewrite pred_succ; only 1: rewrite pred_succ; only 1: easy).	0.041962	16
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.pred_lt_mono	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_succ_lt_pred	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite pred_lt_mono; only 1: rewrite pred_succ; only 1: easy; only 1: apply neq_succ_0).	0.019280	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_succ_le_pred	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply lt_le_pred; only 1: apply le_succ_l; only 1: easy).	0.013111	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_lt_succ	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply lt_succ_r; only 1: apply lt_pred_le; only 1: easy).	0.011234	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_pred_le_succ	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: cases n; only 1: rewrite pred_0; only 1: split; only 1: intros ?; only 1: apply le_0_l; only 1: intros ?; only 1: apply le_0_l; only 1: intros ?; only 1: rewrite pred_succ; only 1: apply succ_le_mono).	0.028342	12
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_pred_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_pred_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_l	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply add_move_0_r; only 1: rewrite <- mul_add_distr_r; only 1: rewrite add_opp_diag_l; only 1: rewrite mul_0_l; only 1: easy).	0.019365	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_opp	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite mul_opp_l; only 1: rewrite mul_opp_r; only 1: rewrite opp_involutive; only 1: easy).	0.014870	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_comm	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite mul_opp_l; only 1: rewrite <- mul_opp_r; only 1: easy).	0.014209	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_sub_distr_l	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite <- add_opp_r; only 1: rewrite <- add_opp_r; only 1: rewrite mul_add_distr_l; only 1: rewrite mul_opp_r; only 1: easy).	0.028779	8
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_sub_distr_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NIso.Homomorphism.natural_isomorphism_wd	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NIso.Homomorphism.natural_isomorphism_0	120	0.0.0	synth with cache (only 1: unfold natural_isomorphism; only 1: rewrite @N1.recursion_0; only 1: easy).	0.009089	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NIso.Homomorphism.natural_isomorphism_succ	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold natural_isomorphism; only 1: intros ?; only 1: rewrite @N1.recursion_succ; only 1: auto with *; only 1: auto with *; only 1: red; only 1: red; only 1: red; only 1: intros; only 1: f_equiv; only 1: easy).	0.021201	11
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NIso.Homomorphism.hom_nat_iso	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold homomorphism; only 1: unfold natural_isomorphism; only 1: split; only 1: exact natural_isomorphism_0; only 1: intros ?; only 1: rewrite @N1.recursion_succ; only 1: auto with *; only 1: auto with *; only 1: red; only 1: red; only 1: red; only 1: intros; only 1: f_equiv; only 1: easy).	0.028844	14
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NIso.Inverse.inverse_nat_iso	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NIso.Isomorphism.iso_nat_iso	120	0.0.0.0.0.0.0.0	synth with cache (only 1: unfold isomorphism; only 1: split; only 1: apply Hom12.hom_nat_iso; only 1: split; only 1: apply Hom21.hom_nat_iso; only 1: split; only 1: apply Inverse12.inverse_nat_iso; only 1: apply Inverse21.inverse_nat_iso).	0.013831	8
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_pred_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_pred_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_0_l	120	0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite <- add_opp_r; only 1: rewrite add_0_l; only 1: easy).	0.013235	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_succ_l	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite <- add_opp_r; only 1: rewrite <- add_opp_r; only 1: rewrite add_succ_l; only 1: easy).	0.017574	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_pred_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_pred_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_pred	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_diag	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_diag_l	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite add_comm; only 1: rewrite add_opp_r; only 1: rewrite sub_diag; only 1: easy).	0.014665	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_diag_r	120	0.0.0.0	synth with cache (only 1: intros ?; only 1: rewrite add_opp_r; only 1: rewrite sub_diag; only 1: easy).	0.052589	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_l	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite <- add_opp_r; only 1: rewrite add_comm; only 1: easy).	0.048817	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_sub_assoc	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite <- add_opp_r; only 1: rewrite <- add_opp_r; only 1: rewrite add_assoc; only 1: easy).	0.024907	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_involutive	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_add_distr	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: nzinduct n; only 1: nzsimpl; only 1: easy; only 1: intros ?; only 1: rewrite add_succ_l; only 1: rewrite opp_succ; only 1: rewrite opp_succ; only 1: rewrite add_pred_l; only 1: rewrite pred_inj_wd; only 1: easy).	0.057081	12
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_sub_distr	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite <- add_opp_r; only 1: rewrite opp_add_distr; only 1: rewrite opp_involutive; only 1: easy).	0.020470	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_inj	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply opp_wd in H; only 1: rewrite opp_involutive in H; only 1: rewrite opp_involutive in H; only 1: easy).	0.020719	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_inj_wd	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: split; only 1: intros ?; only 1: apply opp_wd in H; only 1: rewrite opp_involutive in H; only 1: rewrite opp_involutive in H; only 1: easy; only 1: intros; only 1: f_equiv; only 1: easy).	0.029375	11
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.eq_opp_l	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite <- opp_inj_wd; only 1: rewrite opp_involutive; only 1: easy).	0.015755	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.eq_opp_r	120	0.0	synth with cache (only 1: symmetry; only 1: apply eq_opp_l).	0.010888	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add_distr	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite <- add_opp_r; only 1: rewrite opp_add_distr; only 1: rewrite add_assoc; only 1: rewrite add_opp_r; only 1: rewrite add_opp_r; only 1: easy).	0.030086	9
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_sub_distr	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite <- add_opp_r; only 1: rewrite opp_sub_distr; only 1: rewrite add_assoc; only 1: rewrite add_opp_r; only 1: easy).	0.026775	8
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_opp_l	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite <- add_opp_r; only 1: rewrite <- add_opp_r; only 1: rewrite add_comm; only 1: easy).	0.074023	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_opp_r	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite <- add_opp_r; only 1: rewrite opp_involutive; only 1: easy).	0.020336	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_sub_swap	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_cancel_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_cancel_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_r	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite add_comm; only 1: apply add_move_l).	0.016048	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_l	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite <- add_opp_r; only 1: apply add_move_l).	0.015909	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_r	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite <- add_opp_r; only 1: rewrite add_move_r; only 1: rewrite sub_opp_r; only 1: easy).	0.023301	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_0_l	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite add_move_l; only 1: rewrite sub_0_l; only 1: easy).	0.018857	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_0_r	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite add_move_r; only 1: rewrite sub_0_l; only 1: easy).	0.013900	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_0_l	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite sub_move_l; only 1: rewrite sub_0_l; only 1: easy).	0.017414	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_0_r	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite sub_move_r; only 1: rewrite add_0_l; only 1: easy).	0.015446	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_simpl_l	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite add_sub_swap; only 1: rewrite sub_diag; only 1: rewrite add_0_l; only 1: easy).	0.018106	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_simpl_r	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- add_sub_assoc; only 1: rewrite sub_diag; only 1: rewrite add_0_r; only 1: easy).	0.034805	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_simpl_l	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- add_sub_swap; only 1: rewrite add_opp_diag_l; only 1: rewrite sub_0_l; only 1: easy).	0.017775	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_simpl_r	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- sub_sub_distr; only 1: rewrite sub_diag; only 1: rewrite sub_0_r; only 1: easy).	0.018746	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add	120	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- add_sub_swap; only 1: rewrite add_simpl_r; only 1: easy).	0.016766	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_l_l	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite add_comm; only 1: rewrite <- add_sub_assoc; only 1: rewrite sub_add_distr; only 1: rewrite sub_diag; only 1: rewrite sub_0_l; only 1: rewrite add_opp_r; only 1: easy).	0.037474	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_l_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_r_l	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite add_comm; only 1: apply add_add_simpl_l_l).	0.015507	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_r_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add_simpl_r_l	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite <- sub_sub_distr; only 1: rewrite sub_add_distr; only 1: rewrite sub_diag; only 1: rewrite sub_0_l; only 1: rewrite sub_opp_r; only 1: easy).	0.173916	9
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add_simpl_r_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NAdd.NAddProp.eq_add_0	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NAdd.NAddProp.eq_add_succ	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NAdd.NAddProp.eq_add_1	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NAdd.NAddProp.succ_add_discr	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NAdd.NAddProp.add_pred_l	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: cases n; only 1: intros ?; only 1: elim H; only 1: easy; only 1: intros ?; only 1: intros ?; only 1: rewrite add_succ_l; only 1: rewrite pred_succ; only 1: rewrite pred_succ; only 1: easy).	0.053389	12
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NAdd.NAddProp.add_pred_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_succ_0	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_0_succ	120	1.0.0	synth with cache (only 1: intros ?; only 1: apply neq_sym; only 1: apply neq_succ_0).	0.010672	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.le_0_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.induction	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply right_induction with 0; only 1: assumption; only 1: assumption; only 1: intros; only 1: auto; only 1: apply le_0_l).	0.018853	11
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.case_analysis	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply induction; only 1: auto; only 1: auto; only 1: auto).	0.015824	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_0	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_0_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.zero_or_succ	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.eq_pred_0	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.succ_pred	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.pred_inj	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.PairInduction.pair_induction	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.TwoDimensionalInduction.two_dim_induction	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.DoubleInduction.double_induction	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBase.ZBaseProp.pred_inj	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply succ_wd in H; only 1: rewrite succ_pred in H; only 1: rewrite succ_pred in H; only 1: easy).	0.019952	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBase.ZBaseProp.pred_inj_wd	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: split; only 1: intros ?; only 1: apply succ_wd in H; only 1: rewrite succ_pred in H; only 1: rewrite succ_pred in H; only 1: easy; only 1: intros; only 1: f_equiv; only 1: easy).	0.027029	11
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBase.ZBaseProp.succ_m1	120	0.0.0.0.0	synth with cache (only 1: rewrite one_succ; only 1: rewrite opp_succ; only 1: rewrite opp_0; only 1: rewrite succ_pred; only 1: easy).	0.016280	5
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_reg_l	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_cancel_r	120	0.0.0	synth with cache (only 1: split; only 1: apply mul_reg_r; only 1: congruence).	0.014627	3
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_cancel_l	120	0.0.0	synth with cache (only 1: split; only 1: apply mul_reg_l; only 1: congruence).	0.014031	3
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_eq_1_l	120	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct p; only 1: destruct q; only 1: easy; only 1: easy; only 1: easy; only 1: destruct q; only 1: easy; only 1: easy; only 1: easy; only 1: destruct q; only 1: easy; only 1: easy; only 1: easy).	0.048572	13
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_eq_1_r	120	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct p; only 1: destruct q; only 1: easy; only 1: easy; only 1: easy; only 1: destruct q; only 1: easy; only 1: easy; only 1: easy; only 1: destruct q; only 1: easy; only 1: easy; only 1: easy).	0.036897	13
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.square_xO	120	0.0.0	synth with cache (only 1: simpl; only 1: rewrite mul_comm; only 1: easy).	0.043685	3
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.square_xI	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: simpl; only 1: rewrite mul_comm; only 1: simpl; only 1: f_equal; only 1: rewrite add_assoc; only 1: rewrite add_diag; only 1: simpl; only 1: rewrite add_comm; only 1: easy).	0.048029	9
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.iter_swap_gen	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.iter_swap	120	0.0.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply iter_swap_gen; only 1: easy).	0.017191	4
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.iter_succ	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.iter_add	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.iter_invariant	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.pow_1_r	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.pow_succ_r	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.square_spec	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction p; only 1: rewrite square_xI; only 1: simpl; only 1: rewrite IHp; only 1: easy; only 1: rewrite square_xO; only 1: simpl; only 1: rewrite IHp; only 1: easy; only 1: trivial).	0.019500	10
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_mask_succ_r	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_mask_carry_spec	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_mask_spec	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_mask_nul_iff	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: case sub_mask_spec; only 1: easy; only 1: easy; only 1: easy; only 1: intros ?; only 1: intropattern subst <- H; only 1: induction p; only 1: simpl; only 1: rewrite IHp; only 1: easy; only 1: simpl; only 1: rewrite IHp; only 1: easy; only 1: simpl; only 1: easy).	0.038106	16
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_mask_diag	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction p; only 1: simpl; only 1: rewrite IHp; only 1: easy; only 1: simpl; only 1: rewrite IHp; only 1: easy; only 1: simpl; only 1: easy).	0.018799	9
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_mask_add	120	0.0.0.0	synth with cache (only 1: case sub_mask_spec; only 1: congruence; only 1: congruence; only 1: congruence).	0.016812	4
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_mask_add_diag_l	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_mask_pos_iff	120	1.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: case sub_mask_spec; only 1: congruence; only 1: congruence; only 1: congruence; only 1: intros ?; only 1: intropattern subst <- H; only 1: apply sub_mask_add_diag_l).	0.029957	12
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_mask_add_diag_r	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_mask_neg_iff	120	1.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: case sub_mask_spec; only 1: discriminate; only 1: discriminate; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: clear H0; only 1: exists r; only 1: easy; only 1: intros ?; only 1: destruct H; only 1: intropattern subst <- H; only 1: apply sub_mask_add_diag_r).	0.034578	19
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.eqb_eq	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.ltb_lt	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.leb_le	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_cont_spec	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_cont_Eq	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_cont_Lt_Gt	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_cont_Lt_Lt	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_cont_Gt_Lt	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_cont_Gt_Gt	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_cont_Lt_not_Lt	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_cont_Lt_not_Gt	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_cont_Gt_not_Lt	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_cont_Gt_not_Gt	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_xO_xO	120	0	synth with cache (only 1: reflexivity).	0.014456	1
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_xI_xI	120	0	synth with cache (only 1: reflexivity).	0.014394	1
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_xI_xO	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_xO_xI	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_sub_mask	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.lt_iff_add	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.gt_iff_add	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_cont_refl	120	0.0.0.0	synth with cache (only 1: induction p; only 1: easy; only 1: easy; only 1: easy).	0.019811	4
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_cont_antisym	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: revert q c; only 1: induction p; only 1: intros ?; only 1: destruct q; only 1: intros ?; only 1: simpl; only 1: trivial; only 1: intros ?; only 1: simpl; only 1: apply IHp; only 1: intros ?; only 1: simpl; only 1: trivial; only 1: intros ?; only 1: destruct q; only 1: intros ?; only 1: simpl; only 1: apply IHp; only 1: intros ?; only 1: simpl; only 1: trivial; only 1: intros ?; only 1: simpl; only 1: trivial; only 1: intros ?; only 1: destruct q; only 1: intros ?; only 1: simpl; only 1: trivial; only 1: intros ?; only 1: simpl; only 1: trivial; only 1: intros ?; only 1: simpl; only 1: trivial).	0.069373	35
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_eq_iff	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_antisym	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_lt_iff	120	0	synth with cache (only 1: reflexivity).	0.016228	1
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_le_iff	120	0	synth with cache (only 1: reflexivity).	0.012782	1
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.gt_lt_iff	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.gt_lt	120	0	synth with cache (only 1: apply gt_lt_iff).	0.015374	1
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.lt_gt	120	0	synth with cache (only 1: apply gt_lt_iff).	0.014385	1
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.ge_le_iff	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.ge_le	120	0	synth with cache (only 1: apply ge_le_iff).	0.017438	1
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.le_ge	120	0	synth with cache (only 1: apply ge_le_iff).	0.015325	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_nonneg	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_succ_r	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_succ_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_unique	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_wd	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.lt_succ_r	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.lt_succ_diag_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_spec_alt	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_succ_succ	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.le_1_l	120	0.0.0.0	synth with cache (only 1: destruct p; only 1: easy; only 1: easy; only 1: easy).	0.042357	4
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.nlt_1_r	120	0.0.0.0	synth with cache (only 1: destruct p; only 1: easy; only 1: easy; only 1: easy).	0.025119	4
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.lt_1_succ	120	0.0	synth with cache (only 1: apply lt_succ_r; only 1: apply le_1_l).	0.012506	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_unique'	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.le_nlt	120	0.0	synth with cache (only 1: rewrite <- ge_le_iff; only 1: easy).	0.015466	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pow2	120	0.0.1.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply log2_unique' with 0; only 1: trivial; only 1: split; only 1: order_pos; only 1: order_pos; only 1: nzsimpl; only 1: easy).	0.037794	10
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.lt_nle	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.lt_le_incl	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply le_lteq; only 1: left; only 1: trivial).	0.015252	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pred_pow2	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.lt_lt_succ	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply lt_succ_r; only 1: apply le_lteq; only 1: left; only 1: trivial).	0.017208	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_1	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_2	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.succ_lt_mono	120	0.0.0	synth with cache (only 1: unfold lt; only 1: rewrite compare_succ_succ; only 1: easy).	0.013913	3
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.succ_le_mono	120	0.0.0	synth with cache (only 1: unfold le; only 1: rewrite compare_succ_succ; only 1: easy).	0.014035	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pos	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.lt_trans	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_null	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.lt_ind	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.lt_strorder	120	0.0.0	synth with cache (only 1: split; only 1: exact lt_irrefl; only 1: exact lt_trans).	0.014258	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_le_mono	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.lt_compat	120	0.0.0.0.0.0.0	synth with cache (only 1: red; only 1: red; only 1: red; only 1: red; only 1: intros; only 1: subst; only 1: auto).	0.021143	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_lt_cancel	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_le_pow2	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.lt_total	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.le_refl	120	0.0.0	synth with cache (only 1: unfold le; only 1: rewrite compare_refl; only 1: easy).	0.019836	3
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.le_lt_trans	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply le_lteq in H; only 1: destruct H; only 1: apply lt_trans with m; only 1: easy; only 1: easy; only 1: subst; only 1: trivial).	0.021853	9
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_lt_pow2	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_lt_lin	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.lt_le_trans	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply le_lteq in H0; only 1: destruct H0; only 1: apply lt_trans with m; only 1: easy; only 1: easy; only 1: subst; only 1: trivial).	0.020433	9
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_le_lin	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: le_elim H; only 1: apply lt_le_incl; only 1: apply log2_lt_lin; only 1: trivial; only 1: rewrite <- H; only 1: rewrite log2_nonpos; only 1: order; only 1: order).	0.026386	10
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.le_trans	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply le_lteq in H; only 1: destruct H; only 1: apply le_lteq; only 1: left; only 1: apply lt_le_trans with m; only 1: easy; only 1: easy; only 1: subst; only 1: trivial).	0.025539	11
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.le_succ_l	120	0.0.0.0.0	synth with cache (only 1: rewrite <- lt_succ_r; only 1: symmetry; only 1: unfold lt; only 1: rewrite compare_succ_succ; only 1: easy).	0.017448	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_mul_below	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply log2_le_pow2; only 1: order_pos; only 1: rewrite pow_add_r; only 1: apply mul_le_mono_nonneg; only 1: order_pos; only 1: apply log2_spec; only 1: trivial; only 1: order_pos; only 1: apply log2_spec; only 1: trivial; only 1: order_pos; only 1: order_pos).	0.078222	16
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.le_antisym	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.le_preorder	120	0.0.0	synth with cache (only 1: split; only 1: exact le_refl; only 1: exact le_trans).	0.013263	3
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.le_partorder	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_compare_mono_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_mul_above	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: le_elim H; only 1: le_elim H0; only 1: apply lt_succ_r; only 1: rewrite add_1_r; only 1: rewrite <- add_succ_r; only 1: rewrite <- add_succ_l; only 1: apply log2_lt_pow2; only 1: order_pos; only 1: rewrite pow_add_r; only 1: apply mul_lt_mono_nonneg; only 1: order; only 1: apply log2_spec; only 1: trivial; only 1: order; only 1: apply log2_spec; only 1: trivial; only 1: order_pos; only 1: order_pos; only 1: rewrite <- H0; only 1: nzsimpl; only 1: rewrite log2_nonpos; only 1: order_pos; only 1: order_pos; only 1: rewrite <- H; only 1: nzsimpl; only 1: rewrite log2_nonpos; only 1: order_pos; only 1: order_pos).	0.204010	32
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_mul_pow2	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply log2_unique; only 1: order_pos; only 1: split; only 1: rewrite pow_add_r; only 1: rewrite mul_comm; only 1: apply mul_le_mono_nonneg_r; only 1: order_pos; only 1: apply log2_spec; only 1: easy; only 1: order_pos; only 1: order_pos; only 1: rewrite <- add_succ_r; only 1: rewrite pow_add_r; only 1: rewrite mul_comm; only 1: apply mul_lt_mono_pos_l; only 1: order_pos; only 1: apply log2_spec; only 1: easy; only 1: order_pos; only 1: order_pos).	0.080102	24
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_double	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_same	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply log2_lt_cancel; only 1: rewrite log2_double; only 1: rewrite H1; only 1: apply lt_succ_diag_r; only 1: trivial).	0.026576	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_succ_le	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_succ_or	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_eq_succ_is_pow2	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_eq_succ_iff_pow2	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_succ_double	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_add_le	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.add_log2_lt	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eqn0	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: unfold log2_up; only 1: case compare_spec; only 1: order; only 1: order; only 1: order).	0.015974	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eqn	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: unfold log2_up; only 1: case compare_spec; only 1: order; only 1: order; only 1: order).	0.018352	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_spec	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_nonpos	120	0.0.0	synth with cache (only 1: intros; only 1: apply log2_up_eqn0; only 1: order').	0.012237	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_wd	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_nonneg	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: unfold log2_up; only 1: case compare_spec; only 1: order; only 1: intros; only 1: apply le_le_succ_r; only 1: order_pos; only 1: order).	0.012267	8
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_unique	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_pow2	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_pow2	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite log2_up_eqn; only 1: rewrite pred_succ; only 1: rewrite log2_pow2; only 1: easy; only 1: trivial; only 1: rewrite one_succ; only 1: rewrite <- succ_lt_mono; only 1: apply pow_pos_nonneg; only 1: order'; only 1: trivial).	0.035762	12
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_1	120	0.0	synth with cache (only 1: apply log2_up_eqn0; only 1: easy).	0.009612	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_2	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.le_log2_log2_up	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.le_log2_up_succ_log2	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_log2_up_spec	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: split; only 1: apply log2_spec; only 1: trivial; only 1: rewrite <- le_succ_l in H; only 1: rewrite <- one_succ in H; only 1: le_elim H; only 1: apply log2_up_spec; only 1: auto; only 1: rewrite <- H; only 1: rewrite log2_up_1; only 1: rewrite pow_0_r; only 1: easy).	0.052236	14
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_log2_up_exact	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_pos	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite log2_up_eqn; only 1: apply lt_succ_r; only 1: order_pos; only 1: auto).	0.020834	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_null	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_le_mono	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_lt_cancel	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_lt_pow2	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_le_pow2	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_lt_lin	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_le_lin	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: le_elim H; only 1: apply lt_le_incl; only 1: apply log2_up_lt_lin; only 1: trivial; only 1: rewrite <- H; only 1: rewrite log2_up_nonpos; only 1: order; only 1: order).	0.024059	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_mul_above	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_mul_below	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_mul_pow2	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_double	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_same	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply log2_up_lt_cancel; only 1: rewrite log2_up_double; only 1: rewrite H1; only 1: apply lt_succ_diag_r; only 1: trivial).	0.038903	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_le	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_or	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eq_succ_is_pow2	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eq_succ_iff_pow2	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_double	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_add_le	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2UpProp.add_log2_up_lt	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_0_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_0_l'	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_1_r	120	0.0.0.0	synth with cache (only 1: intros; only 1: nzsimpl'; only 1: easy; only 1: easy).	0.038341	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_1_l	120	0.0.0.0.0.0.0.0	synth with cache (only 1: apply le_ind; only 1: solve_proper; only 1: nzsimpl; only 1: easy; only 1: intros; only 1: nzsimpl; only 1: easy; only 1: easy).	0.043392	8
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_2_r	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite two_succ; only 1: nzsimpl; only 1: order'; only 1: order').	0.040077	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_eq_0	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply le_ind with (4 := H); only 1: solve_proper; only 1: rewrite pow_0_r; only 1: order'; only 1: clear b H; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite pow_succ_r; only 1: intros ?; only 1: apply eq_mul_0 in H1; only 1: destruct H1; only 1: trivial; only 1: apply H0; only 1: easy; only 1: trivial).	0.060706	19
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_nonzero	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: contradict H; only 1: apply pow_eq_0 with b; only 1: easy; only 1: easy).	0.013973	8
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_eq_0_iff	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_add_r	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply le_ind with (4 := H); only 1: solve_proper; only 1: nzsimpl; only 1: easy; only 1: clear b H; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: nzsimpl; only 1: rewrite H0; only 1: apply mul_assoc; only 1: trivial; only 1: apply add_nonneg_nonneg; only 1: trivial; only 1: trivial; only 1: trivial).	0.267018	21
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_mul_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_mul_r	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply le_ind with (4 := H); only 1: solve_proper; only 1: intros; only 1: nzsimpl; only 1: easy; only 1: easy; only 1: clear b H; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: nzsimpl; only 1: rewrite pow_add_r; only 1: rewrite H0; only 1: rewrite pow_mul_l; only 1: apply mul_comm; only 1: trivial; only 1: apply mul_nonneg_nonneg; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial).	0.158731	26
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_nonneg	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_pos_nonneg	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply le_ind with (4 := H0); only 1: solve_proper; only 1: nzsimpl; only 1: order'; only 1: clear b H0; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: nzsimpl; only 1: apply mul_pos_pos; only 1: easy; only 1: easy; only 1: trivial).	0.073655	17
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_l	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply lt_ind with (4 := H); only 1: solve_proper; only 1: intros ?; only 1: destruct H0; only 1: nzsimpl; only 1: auto; only 1: order; only 1: order; only 1: clear c H; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H1; only 1: nzsimpl; only 1: apply mul_lt_mono_nonneg; only 1: trivial; only 1: trivial; only 1: apply pow_nonneg; only 1: trivial; only 1: apply H0; only 1: split; only 1: trivial; only 1: trivial; only 1: order; only 1: order).	0.139158	30
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_gt_1	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_inj_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_inj_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_l_iff	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_l_iff	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_r_iff	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_r_iff	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_gt_lin_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_add_lower	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_add_upper	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_spec_nonneg	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_nonneg	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_unique	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_wd	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_spec_alt	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_unique'	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: intros ?; only 1: apply sqrt_unique; only 1: rewrite H1; only 1: split; only 1: rewrite <- add_0_r  at 1; only 1: apply add_le_mono_l; only 1: easy; only 1: nzsimpl; only 1: apply lt_succ_r; only 1: rewrite <- add_assoc; only 1: apply add_le_mono_l; only 1: generalize H0; only 1: nzsimpl'; only 1: easy).	0.163021	19
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_square	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply sqrt_unique' with 0; only 1: split; only 1: order; only 1: apply mul_nonneg_nonneg; only 1: order'; only 1: trivial; only 1: nzsimpl; only 1: easy).	0.028094	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_pred_square	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_le_mono	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_lt_cancel	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_le_square	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_lt_square	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_0	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_1	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_2	120	0.0.0.0.0.0.0	synth with cache (only 1: apply sqrt_unique' with 1; only 1: nzsimpl; only 1: split; only 1: order'; only 1: order'; only 1: nzsimpl'; only 1: easy).	0.052590	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_pos	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: split; only 1: intros ?; only 1: apply sqrt_lt_cancel; only 1: rewrite sqrt_0; only 1: easy; only 1: intros ?; only 1: rewrite <- le_succ_l; only 1: rewrite <- one_succ; only 1: rewrite <- sqrt_1; only 1: apply sqrt_le_mono; only 1: rewrite one_succ; only 1: rewrite le_succ_l; only 1: trivial).	0.033616	14
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_lt_lin	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite <- sqrt_lt_square; only 1: rewrite <- mul_1_r  at 1; only 1: rewrite <- mul_lt_mono_pos_l; only 1: auto; only 1: order'; only 1: order'; only 1: order').	0.025343	9
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_le_lin	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_mul_below	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_mul_above	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply sqrt_lt_square; only 1: apply mul_nonneg_nonneg; only 1: trivial; only 1: trivial; only 1: apply mul_nonneg_nonneg; only 1: apply lt_le_incl; only 1: apply lt_succ_r; only 1: apply sqrt_nonneg; only 1: apply lt_le_incl; only 1: apply lt_succ_r; only 1: apply sqrt_nonneg; only 1: rewrite mul_shuffle1; only 1: apply mul_lt_mono_nonneg; only 1: trivial; only 1: apply sqrt_spec; only 1: trivial; only 1: trivial; only 1: apply sqrt_spec; only 1: trivial).	0.033976	23
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_succ_le	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_succ_or	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_eq_succ_iff_square	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_add_le	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.add_sqrt_le	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_eqn0	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: unfold sqrt_up; only 1: case compare_spec; only 1: order; only 1: order; only 1: order).	0.014093	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_eqn	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: unfold sqrt_up; only 1: case compare_spec; only 1: order; only 1: order; only 1: order).	0.015728	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_spec	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_nonneg	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_wd	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_unique	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_square	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_succ_square	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite sqrt_up_eqn; only 1: rewrite pred_succ; only 1: rewrite sqrt_square; only 1: easy; only 1: trivial; only 1: apply lt_succ_r; only 1: apply mul_nonneg_nonneg; only 1: trivial; only 1: trivial).	0.020936	11
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_0	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_1	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_2	120	0.0.0.0.0.0	synth with cache (only 1: rewrite sqrt_up_eqn; only 1: rewrite two_succ; only 1: rewrite pred_succ; only 1: rewrite sqrt_1; only 1: easy; only 1: order').	0.023911	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.le_sqrt_sqrt_up	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.le_sqrt_up_succ_sqrt	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_sqrt_up_spec	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: split; only 1: apply sqrt_spec; only 1: trivial; only 1: le_elim H; only 1: apply sqrt_up_spec; only 1: trivial; only 1: rewrite <- H; only 1: rewrite sqrt_up_0; only 1: rewrite mul_0_l; only 1: order).	0.039589	12
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_sqrt_up_exact	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_mono	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_lt_cancel	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_lt_square	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_square	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_pos	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: split; only 1: intros ?; only 1: apply sqrt_up_lt_cancel; only 1: rewrite sqrt_up_0; only 1: easy; only 1: intros ?; only 1: rewrite <- le_succ_l; only 1: rewrite <- one_succ; only 1: rewrite <- sqrt_up_1; only 1: apply sqrt_up_le_mono; only 1: rewrite one_succ; only 1: rewrite le_succ_l; only 1: trivial).	0.041205	14
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_lt_lin	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_lin	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_mul_above	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply sqrt_up_le_square; only 1: apply mul_nonneg_nonneg; only 1: trivial; only 1: trivial; only 1: apply mul_nonneg_nonneg; only 1: apply sqrt_up_nonneg; only 1: apply sqrt_up_nonneg; only 1: rewrite mul_shuffle1; only 1: apply mul_le_mono_nonneg; only 1: trivial; only 1: apply sqrt_sqrt_up_spec; only 1: trivial; only 1: trivial; only 1: apply sqrt_sqrt_up_spec; only 1: trivial).	0.046497	19
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_mul_below	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_succ_le	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_succ_or	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_eq_succ_iff_square	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_add_le	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.add_sqrt_up_le	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.Even_wd	120	0.0	synth with cache (only 1: unfold Even; only 1: solve_proper).	0.014371	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.Odd_wd	120	0.0	synth with cache (only 1: unfold Odd; only 1: solve_proper).	0.013083	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_wd	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite eq_iff_eq_true; only 1: rewrite even_spec; only 1: rewrite even_spec; only 1: f_equiv; only 1: easy).	0.018605	8
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.odd_wd	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite eq_iff_eq_true; only 1: rewrite odd_spec; only 1: rewrite odd_spec; only 1: f_equiv; only 1: easy).	0.022408	8
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.Even_or_Odd	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.double_below	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: nzsimpl'; only 1: apply lt_succ_r; only 1: apply add_le_mono; only 1: easy; only 1: easy).	0.109186	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.double_above	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.Even_Odd_False	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.orb_even_odd	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.negb_odd	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.negb_even	120	0.0.0	synth with cache (only 1: intros; only 1: rewrite <- negb_odd; only 1: apply negb_involutive).	0.009980	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_0	120	0.0.0.0	synth with cache (only 1: rewrite even_spec; only 1: exists 0; only 1: nzsimpl; only 1: easy).	0.019365	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.odd_0	120	0.0.0	synth with cache (only 1: rewrite <- negb_even; only 1: rewrite even_0; only 1: easy).	0.008475	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.odd_1	120	0.0.0.0	synth with cache (only 1: rewrite odd_spec; only 1: exists 0; only 1: nzsimpl'; only 1: easy).	0.023231	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_1	120	0.0.0	synth with cache (only 1: rewrite <- negb_odd; only 1: rewrite odd_1; only 1: easy).	0.009506	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_2	120	0.0.0.0	synth with cache (only 1: rewrite even_spec; only 1: exists 1; only 1: nzsimpl'; only 1: easy).	0.028588	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.odd_2	120	0.0.0	synth with cache (only 1: rewrite <- negb_even; only 1: rewrite even_2; only 1: easy).	0.008776	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.Odd_succ	120	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intros ?; only 1: destruct H; only 1: exists x; only 1: rewrite <- succ_inj_wd; only 1: rewrite add_1_r in H; only 1: easy; only 1: intros ?; only 1: destruct H; only 1: exists x; only 1: rewrite H; only 1: nzsimpl; only 1: easy).	0.040378	13
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.odd_succ	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply eq_iff_eq_true; only 1: rewrite even_spec; only 1: rewrite odd_spec; only 1: apply Odd_succ).	0.015719	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_succ	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- negb_odd; only 1: rewrite odd_succ; only 1: rewrite <- negb_odd; only 1: apply negb_involutive).	0.013195	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.Even_succ	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- even_spec; only 1: rewrite even_succ; only 1: rewrite odd_spec; only 1: easy).	0.013506	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.Even_succ_succ	120	0.0.0	synth with cache (only 1: intros; only 1: rewrite Even_succ; only 1: apply Odd_succ).	0.010525	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.Odd_succ_succ	120	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Odd_succ; only 1: rewrite Even_succ; only 1: easy).	0.011315	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_succ_succ	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite even_succ; only 1: apply eq_iff_eq_true; only 1: rewrite even_spec; only 1: rewrite odd_spec; only 1: apply Odd_succ).	0.016635	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.odd_succ_succ	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite odd_succ; only 1: rewrite <- negb_odd; only 1: rewrite odd_succ; only 1: rewrite <- negb_odd; only 1: apply negb_involutive).	0.012974	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_add	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- negb_even; only 1: rewrite <- negb_even; only 1: rewrite <- negb_even; only 1: rewrite even_add; only 1: destruct even; only 1: destruct even; only 1: easy; only 1: easy; only 1: destruct even; only 1: easy; only 1: easy).	0.020538	12
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_mul	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.odd_mul	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- negb_even; only 1: rewrite <- negb_even; only 1: rewrite <- negb_even; only 1: rewrite even_mul; only 1: destruct even; only 1: destruct even; only 1: easy; only 1: easy; only 1: destruct even; only 1: easy; only 1: easy).	0.019610	12
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_even	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add_even	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_mul_even	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply even_spec in H; only 1: apply even_add_even; only 1: apply even_spec; only 1: rewrite even_mul; only 1: rewrite H; only 1: easy).	0.016937	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add_mul_even	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply even_spec in H; only 1: apply odd_add_even; only 1: apply even_spec; only 1: rewrite even_mul; only 1: rewrite H; only 1: easy).	0.017250	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_mul_2	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply even_add_mul_even; only 1: apply even_spec; only 1: apply even_2).	0.011001	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add_mul_2	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply odd_add_mul_even; only 1: apply even_spec; only 1: apply even_2).	0.011111	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mod_unique	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_unique	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_unique	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_unique_exact	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply div_unique with 0; only 1: easy; only 1: split; only 1: easy; only 1: easy; only 1: nzsimpl; only 1: easy).	0.022450	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_same	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique_exact; only 1: order; only 1: trivial; only 1: nzsimpl; only 1: order).	0.015916	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_same	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply mod_unique with 1; only 1: order; only 1: intuition; only 1: nzsimpl; only 1: order).	0.021222	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_small	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique with a; only 1: intuition; only 1: intuition; only 1: intuition; only 1: nzsimpl; only 1: easy).	0.024561	8
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_small	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply mod_unique with 0; only 1: intuition; only 1: intuition; only 1: intuition; only 1: nzsimpl; only 1: easy).	0.029339	8
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_0_l	120	0.0.0	synth with cache (only 1: intros; only 1: apply div_small; only 1: intuition).	0.010276	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_0_l	120	0.0.0	synth with cache (only 1: intros; only 1: apply mod_small; only 1: intuition).	0.024929	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_1_r	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique_exact; only 1: trivial; only 1: apply lt_0_1; only 1: nzsimpl; only 1: easy).	0.018675	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_1_r	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply mod_unique with a; only 1: trivial; only 1: split; only 1: order; only 1: apply lt_0_1; only 1: nzsimpl; only 1: easy).	0.020581	9
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_1_l	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply div_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.010862	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_1_l	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply mod_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.009637	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique_exact; only 1: apply mul_nonneg_nonneg; only 1: auto; only 1: order; only 1: auto; only 1: apply mul_comm).	0.014831	8
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_mul	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply mod_unique with a; only 1: apply mul_nonneg_nonneg; only 1: auto; only 1: order; only 1: split; only 1: order; only 1: auto; only 1: nzsimpl; only 1: apply mul_comm).	0.028514	11
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_le	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_pos	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_str_pos	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_small_iff	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_small_iff	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_str_pos_iff	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_lt	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_mono	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_div_le	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_succ_div_gt	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_exact	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_lt_upper_bound	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_upper_bound	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_lower_bound	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_compat_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_add	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_add	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_r_nonneg	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_1_lcm_mul	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_wd	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold divide; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: setoid_rewrite H; only 1: setoid_rewrite H0; only 1: easy).	0.029708	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_1_l	120	0.0.0.0	synth with cache (only 1: intros ?; only 1: exists n; only 1: nzsimpl; only 1: easy).	0.017825	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_0_r	120	0.0.0.0	synth with cache (only 1: intros ?; only 1: exists 0; only 1: nzsimpl; only 1: easy).	0.015111	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_0_l	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: revert H; only 1: nzsimpl; only 1: easy).	0.022841	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.eq_mul_1_nonneg	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.eq_mul_1_nonneg'	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite mul_comm in H0; only 1: apply and_comm; only 1: apply eq_mul_1_nonneg; only 1: easy; only 1: easy).	0.019902	9
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_1_r_nonneg	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_refl	120	0.0.0.0	synth with cache (only 1: intros ?; only 1: exists 1; only 1: nzsimpl; only 1: easy).	0.035067	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_trans	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_antisym_nonneg	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul_cancel_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_mono_l	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: exists x; only 1: rewrite mul_shuffle3; only 1: rewrite H; only 1: easy).	0.020730	9
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_mono_r	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: exists x; only 1: rewrite mul_assoc; only 1: rewrite H; only 1: easy).	0.019966	9
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_distr_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_cancel_l	120	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: split; only 1: intros ?; only 1: destruct H0; only 1: exists x; only 1: rewrite mul_shuffle3 in H0; only 1: rewrite mul_cancel_l in H0; only 1: easy; only 1: easy; only 1: apply mul_divide_mono_l).	0.124164	13
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul_cancel_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_distr_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_cancel_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_distr_l	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_le_compat_r	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_compare_mono_r	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.lt_add_diag_r	120	0.0.0	synth with cache (only 1: rewrite lt_iff_add; only 1: exists q; only 1: trivial).	0.014582	3
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_lt_mono_l	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_lt_mono_r	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_lt_mono	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_le_mono_l	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_le_mono_r	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_le_mono	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_compare_mono_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_distr_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_mod	120	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite mod_small_iff; only 1: auto using mod_bound_or; only 1: assumption).	0.013333	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_idemp_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_add_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul_cancel_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_distr_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_rem	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_idemp_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_cancel_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_add_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_mul_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_mul_r	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite mul_comm; only 1: apply divide_mul_l).	0.017649	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_factor_l	120	0.0.0	synth with cache (only 1: intros; only 1: apply divide_mul_l; only 1: apply divide_refl).	0.007943	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_factor_r	120	0.0.0	synth with cache (only 1: intros; only 1: apply divide_mul_r; only 1: apply divide_refl).	0.007225	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_pos_le	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_unique	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply divide_antisym_nonneg; only 1: apply gcd_nonneg; only 1: trivial; only 1: apply H2; only 1: apply gcd_divide_l; only 1: apply gcd_divide_r; only 1: apply gcd_greatest; only 1: easy; only 1: easy).	0.025260	16
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_wd	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply gcd_unique; only 1: apply gcd_nonneg; only 1: rewrite H; only 1: apply gcd_divide_l; only 1: rewrite H0; only 1: apply gcd_divide_r; only 1: intros ?; only 1: rewrite H; only 1: rewrite H0; only 1: apply gcd_greatest).	0.049781	16
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_divide_iff	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_unique_alt	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply gcd_unique; only 1: trivial; only 1: apply H0; only 1: apply divide_refl; only 1: apply H0; only 1: apply divide_refl; only 1: intros; only 1: apply H0; only 1: split; only 1: easy; only 1: easy).	0.034911	16
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_comm	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply gcd_unique_alt; only 1: apply gcd_nonneg; only 1: intros; only 1: rewrite and_comm; only 1: apply gcd_divide_iff).	0.013637	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_assoc	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply gcd_unique_alt; only 1: apply gcd_nonneg; only 1: intros; only 1: rewrite gcd_divide_iff; only 1: rewrite gcd_divide_iff; only 1: rewrite gcd_divide_iff; only 1: rewrite and_assoc; only 1: easy).	0.031573	9
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_0_l_nonneg	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply gcd_unique; only 1: trivial; only 1: apply divide_0_r; only 1: apply divide_refl; only 1: trivial).	0.011631	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_0_r_nonneg	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite gcd_comm; only 1: rewrite gcd_0_l_nonneg; only 1: easy; only 1: trivial).	0.015521	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_1_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_1_r	120	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite gcd_comm; only 1: rewrite gcd_1_l; only 1: easy).	0.012780	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_diag_nonneg	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply gcd_unique; only 1: trivial; only 1: apply divide_refl; only 1: apply divide_refl; only 1: trivial using divide_refl).	0.012864	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_eq_0_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_eq_0_r	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply gcd_eq_0_l with n; only 1: rewrite gcd_comm; only 1: easy).	0.012713	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_eq_0	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: split; only 1: apply gcd_eq_0_l with m; only 1: easy; only 1: apply gcd_eq_0_l with n; only 1: rewrite gcd_comm; only 1: easy; only 1: intros ?; only 1: destruct H; only 1: rewrite H; only 1: rewrite H0; only 1: apply gcd_0_r_nonneg; only 1: easy).	0.028905	14
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_mul_diag_l	120	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply gcd_unique_alt; only 1: trivial; only 1: intros ?; only 1: split; only 1: split; only 1: trivial; only 1: apply divide_mul_l; only 1: trivial; only 1: destruct 1; only 1: easy).	0.020135	13
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_gcd_iff	120	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: split; only 1: intros ?; only 1: destruct H0; only 1: rewrite H0; only 1: rewrite mul_comm; only 1: apply gcd_mul_diag_l; only 1: easy; only 1: intros ?; only 1: rewrite <- H0; only 1: apply gcd_divide_r).	0.036851	13
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_pred	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_pos_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_distr_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mod	120	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite mod_small_iff; only 1: auto using mod_always_pos; only 1: order).	0.016436	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_idemp_l	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_lt_0_le_reg_r	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_le_r	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intros ?; only 1: apply Qmult_lt_0_le_reg_r with z; only 1: easy; only 1: easy; only 1: intros ?; only 1: apply Qmult_le_compat_r; only 1: auto with qarith; only 1: auto with qarith).	0.038163	9
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_compare_mono_r	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_lt_mono_l	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_lt_mono_r	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_lt_mono	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_le_mono_l	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_le_mono_r	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_le_mono	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.lt_add_r	120	0.0.0	synth with cache (only 1: rewrite lt_iff_add; only 1: exists q; only 1: trivial).	0.023918	3
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.lt_not_add_l	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.pow_gt_1	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_1_r	120	0.0.0.0	synth with cache (only 1: destruct p; only 1: easy; only 1: easy; only 1: easy).	0.014909	4
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.pred_sub	120	0.0	synth with cache (only 1: symmetry; only 1: apply sub_1_r).	0.014015	2
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_succ_r	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_mask_pos'	120	0.1.0.0.0.0.0.0	synth with cache (only 1: rewrite lt_iff_add; only 1: intros ?; only 1: destruct H; only 1: exists x; only 1: split; only 1: intropattern subst <- H; only 1: apply sub_mask_add_diag_l; only 1: trivial).	0.028192	12
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_mask_pos	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_add	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_sub	120	0.0.0.0.0	synth with cache (only 1: apply add_reg_r with q; only 1: rewrite sub_add; only 1: trivial; only 1: rewrite add_comm; only 1: apply lt_add_r).	0.015592	5
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_sub_distr_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_idemp_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite mul_mod_idemp_l; only 1: rewrite mul_mod_idemp_r; only 1: easy; only 1: order; only 1: order).	0.021529	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod_idemp_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul_cancel_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_distr_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_idemp_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite mul_rem_idemp_l; only 1: rewrite mul_rem_idemp_r; only 1: easy; only 1: trivial; only 1: trivial).	0.017433	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.add_rem_idemp_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_pos_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_neg_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_neg_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonneg_l	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: le_elim H; only 1: le_elim H0; only 1: apply lt_le_incl; only 1: apply mul_lt_mono_pos_l; only 1: easy; only 1: easy; only 1: apply eq_le_incl; only 1: rewrite H0; only 1: easy; only 1: apply eq_le_incl; only 1: rewrite <- H; only 1: rewrite mul_0_l; only 1: rewrite mul_0_l; only 1: easy).	0.033453	19
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonpos_l	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: le_elim H; only 1: le_elim H0; only 1: apply lt_le_incl; only 1: apply mul_lt_mono_neg_l; only 1: easy; only 1: easy; only 1: apply eq_le_incl; only 1: rewrite H0; only 1: easy; only 1: apply eq_le_incl; only 1: rewrite H; only 1: rewrite mul_0_l; only 1: rewrite mul_0_l; only 1: easy).	0.047121	19
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_idemp_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite mul_mod_idemp_l; only 1: rewrite mul_mod_idemp_r; only 1: easy; only 1: order; only 1: order).	0.020629	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.add_mod_idemp_l	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_le_l	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_sub_distr_r	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_lt_mono_l	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_compare_mono_l	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_compare_mono_r	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_lt_mono_r	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold lt; only 1: rewrite sub_compare_mono_r; only 1: trivial; only 1: trivial; only 1: apply lt_trans with q; only 1: trivial; only 1: easy).	0.018706	8
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_decr	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply add_lt_mono_r with m; only 1: rewrite sub_add; only 1: apply lt_add_r; only 1: trivial).	0.017410	5
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_sub_assoc	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply add_reg_r with r; only 1: rewrite <- add_assoc; only 1: rewrite sub_add; only 1: rewrite sub_add; only 1: trivial; only 1: apply lt_trans with q; only 1: trivial using lt_add_r; only 1: rewrite add_comm; only 1: trivial using lt_add_r; only 1: trivial using lt_add_r).	0.069071	11
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_add_distr	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_sub_distr	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_xO_xO	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_xI_xI	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_xI_xO	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_xO_xI	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_mask_neg_iff'	120	0.0	synth with cache (only 1: rewrite lt_iff_add; only 1: apply sub_mask_neg_iff).	0.018179	2
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_mask_neg	120	0	synth with cache (only 1: apply sub_mask_neg_iff').	0.016521	1
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_le	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_lt	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply sub_le; only 1: apply le_lteq; only 1: left; only 1: trivial).	0.016940	5
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_diag	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.size_nat_monotone	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.size_gt	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction p; only 1: simpl; only 1: rewrite pow_succ_r; only 1: apply le_succ_l in IHp; only 1: apply le_succ_l; only 1: easy; only 1: simpl; only 1: rewrite pow_succ_r; only 1: easy; only 1: simpl; only 1: easy).	0.026857	11
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.size_le	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction p; only 1: simpl; only 1: rewrite pow_succ_r; only 1: apply mul_le_mono_l; only 1: apply le_lteq; only 1: left; only 1: rewrite xI_succ_xO; only 1: apply lt_succ_r; only 1: apply IHp; only 1: simpl; only 1: rewrite pow_succ_r; only 1: easy; only 1: simpl; only 1: easy).	0.029909	14
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.max_l	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.max_r	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.min_l	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.min_r	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.max_1_l	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.max_1_r	120	0.0	synth with cache (only 1: rewrite max_comm; only 1: apply max_1_l).	0.014342	2
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.min_1_l	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.min_1_r	120	0.0	synth with cache (only 1: rewrite min_comm; only 1: apply min_1_l).	0.017040	2
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.succ_max_distr	120	0.0.0.0.0	synth with cache (only 1: symmetry; only 1: apply max_monotone; only 1: intros ?; only 1: intros ?; only 1: apply succ_le_mono).	0.020011	5
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.succ_min_distr	120	0.0.0.0.0	synth with cache (only 1: symmetry; only 1: apply min_monotone; only 1: intros ?; only 1: intros ?; only 1: apply succ_le_mono).	0.018204	5
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_max_distr_l	120	0.0.0.0	synth with cache (only 1: apply max_monotone; only 1: intros ?; only 1: intros ?; only 1: apply add_le_mono_l).	0.020618	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod_idemp_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite add_mod_idemp_l; only 1: rewrite add_mod_idemp_r; only 1: easy; only 1: order; only 1: order).	0.034729	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_div	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.rem_mul_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_div	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite div_small_iff; only 1: auto using mod_bound_or; only 1: assumption).	0.019445	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul_le	120	0	synth with cache (only 1: exact div_mul_le).	0.012766	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_mono_l	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: nzinduct p; only 1: nzsimpl; only 1: easy; only 1: intros ?; only 1: nzsimpl; only 1: rewrite <- succ_lt_mono; only 1: easy).	0.129255	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_distr_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_mod	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_idemp_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.add_rem_idemp_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.add_rem	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_quot	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mod_mul_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_quot	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite quot_small_iff; only 1: auto using rem_bound_abs; only 1: assumption).	0.015479	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul_le	120	0	synth with cache (only 1: exact NZQuot.div_mul_le).	0.011529	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_0_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_succ_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_comm	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: nzinduct n; only 1: nzsimpl; only 1: easy; only 1: intros ?; only 1: nzsimpl; only 1: rewrite add_cancel_r; only 1: easy).	0.064103	9
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_add_distr_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonneg_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonpos_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_cancel_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.add_mod_idemp_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.add_mod	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite add_mod_idemp_l; only 1: rewrite add_mod_idemp_r; only 1: easy; only 1: order; only 1: order).	0.027068	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_div	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mul_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_div	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite div_small_iff; only 1: auto using mod_always_pos; only 1: order).	0.016588	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_le	120	0	synth with cache (only 1: exact div_mul_le).	0.012092	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_divides	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_wd	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite <- lt_succ_r; only 1: rewrite <- lt_succ_r; only 1: rewrite H; only 1: rewrite H0; only 1: easy).	0.023807	11
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_le_incl	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply lt_eq_cases; only 1: left; only 1: assumption).	0.010235	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_refl	120	0.0.0.0	synth with cache (only 1: intros ?; only 1: apply lt_eq_cases; only 1: right; only 1: easy).	0.009105	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_succ_diag_r	120	0.0.0	synth with cache (only 1: intros ?; only 1: rewrite lt_succ_r; only 1: apply le_refl).	0.007764	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_diag_r	120	0.0.0	synth with cache (only 1: intros ?; only 1: apply lt_le_incl; only 1: apply lt_succ_diag_r).	0.008423	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.neq_succ_diag_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.neq_succ_diag_r	120	1.0.0	synth with cache (only 1: intros ?; only 1: apply neq_sym; only 1: apply neq_succ_diag_l).	0.009139	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.nlt_succ_diag_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.nle_succ_diag_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_gt_cases	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: nzinduct n m; only 1: left; only 1: apply le_refl; only 1: intros ?; only 1: rewrite lt_succ_r; only 1: rewrite le_succ_l; only 1: rewrite lt_eq_cases; only 1: rewrite lt_eq_cases; only 1: intuition).	0.087690	11
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_trichotomy	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_asymm	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_trans	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_trans	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_strorder	120	0.0.0	synth with cache (only 1: split; only 1: exact lt_irrefl; only 1: exact lt_trans).	0.009739	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_preorder	120	0.0.0	synth with cache (only 1: split; only 1: exact le_refl; only 1: exact le_trans).	0.009113	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_partialorder	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_neq	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_neq	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.eq_le_incl	120	0	synth with cache (only 1: order).	0.008468	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_stepl	120	0	synth with cache (only 1: order).	0.009399	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_stepr	120	0	synth with cache (only 1: order).	0.009407	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_stepl	120	0	synth with cache (only 1: order).	0.010333	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_stepr	120	0	synth with cache (only 1: order).	0.010401	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_lt_trans	120	0	synth with cache (only 1: order).	0.008414	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_le_trans	120	0	synth with cache (only 1: order).	0.008616	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_antisymm	120	0	synth with cache (only 1: order).	0.010176	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_r	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite lt_eq_cases; only 1: rewrite lt_succ_r; only 1: easy).	0.014431	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_succ_l	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply le_succ_l; only 1: order).	0.011983	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_le_succ_r	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply lt_succ_r in H; only 1: order).	0.010810	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_lt_succ_r	120	0.0.0	synth with cache (only 1: intros; only 1: rewrite lt_succ_r; only 1: order).	0.011242	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.succ_lt_mono	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite <- le_succ_l; only 1: symmetry; only 1: apply lt_succ_r).	0.011882	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.succ_le_mono	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite lt_eq_cases; only 1: rewrite lt_eq_cases; only 1: rewrite <- succ_lt_mono; only 1: rewrite succ_inj_wd; only 1: easy).	0.020397	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_0_1	120	0.0	synth with cache (only 1: rewrite one_succ; only 1: apply lt_succ_diag_r).	0.013934	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_0_1	120	0.0.0	synth with cache (only 1: apply lt_le_incl; only 1: rewrite one_succ; only 1: apply lt_succ_diag_r).	0.014379	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_1_2	120	0.0	synth with cache (only 1: rewrite two_succ; only 1: apply lt_succ_diag_r).	0.014106	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_0_2	120	0.0.0.0	synth with cache (only 1: transitivity 1; only 1: rewrite one_succ; only 1: apply lt_succ_diag_r; only 1: apply lt_1_2).	0.016286	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_0_2	120	0.0	synth with cache (only 1: apply lt_le_incl; only 1: apply lt_0_2).	0.007928	2
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_1_l	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite <- le_succ_l in H; only 1: rewrite <- one_succ in H; only 1: order).	0.020546	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_ge_cases	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_ge_cases	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_gt_cases	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.eq_decidable	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.eq_dne	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_ngt	120	0	synth with cache (only 1: intuition order).	0.036039	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.nlt_ge	120	0	synth with cache (only 1: intuition order).	0.012894	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_decidable	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_dne	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.nle_gt	120	0	synth with cache (only 1: intuition order).	0.011861	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_nge	120	0	synth with cache (only 1: intuition order).	0.013036	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_decidable	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_dne	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.nlt_succ_r	120	0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite lt_succ_r; only 1: intuition order).	0.017707	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_exists_pred_strong	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_exists_pred	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_succ_pred	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.rs_rs'	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: le_elim H1; only 1: apply lt_exists_pred in H1; only 1: destruct H1; only 1: destruct H1; only 1: rewrite H1; only 1: apply H0; only 1: trivial; only 1: apply H2; only 1: trivial; only 1: rewrite H1; only 1: apply lt_succ_diag_r; only 1: rewrite <- H1; only 1: apply H).	0.036802	18
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.rs'_rs''	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.rbase	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply le_ngt in H; only 1: false_hyp H0 H).	0.010912	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.A'A_right	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.strong_right_induction	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.right_induction	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply strong_right_induction; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: le_elim H1; only 1: apply lt_exists_pred in H1; only 1: destruct H1; only 1: destruct H1; only 1: rewrite H1; only 1: apply H0; only 1: trivial; only 1: apply H2; only 1: trivial; only 1: rewrite H1; only 1: apply lt_succ_diag_r; only 1: rewrite <- H1; only 1: apply H).	0.062907	19
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.right_induction'	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.strong_right_induction'	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.ls_ls'	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: le_elim H1; only 1: apply H0; only 1: trivial; only 1: apply H2; only 1: apply le_succ_l; only 1: trivial; only 1: apply eq_le_incl; only 1: easy; only 1: rewrite H1; only 1: apply H).	0.024251	15
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.ls'_ls''	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.lbase	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply le_succ_l in H0; only 1: apply le_ngt in H; only 1: false_hyp H0 H).	0.015952	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.A'A_left	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.strong_left_induction	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.left_induction	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply strong_left_induction; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: le_elim H1; only 1: apply H0; only 1: trivial; only 1: apply H2; only 1: apply le_succ_l; only 1: trivial; only 1: apply eq_le_incl; only 1: easy; only 1: rewrite H1; only 1: apply H).	0.027121	16
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.left_induction'	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.strong_left_induction'	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.order_induction	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.order_induction'	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply order_induction; only 1: assumption; only 1: assumption; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply H1 in H3; only 1: rewrite pred_succ in H3; only 1: easy; only 1: apply le_succ_l; only 1: easy).	0.032004	15
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.lt_ind	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.le_ind	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply right_induction with n; only 1: easy; only 1: easy; only 1: easy).	0.017588	9
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.WF.Rlt_wd	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.WF.Rgt_wd	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.WF.lt_wf	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.WF.gt_wf	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_0_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_succ_r	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: nzinduct n; only 1: nzsimpl; only 1: easy; only 1: intros ?; only 1: nzsimpl; only 1: rewrite succ_inj_wd; only 1: easy).	0.051228	9
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_succ_comm	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite add_succ_r; only 1: rewrite add_succ_l; only 1: easy).	0.012603	5
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_comm	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: nzinduct n; only 1: nzsimpl; only 1: easy; only 1: intros ?; only 1: nzsimpl; only 1: rewrite succ_inj_wd; only 1: easy).	0.045738	9
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_1_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_1_r	120	0.0.0	synth with cache (only 1: intros ?; only 1: nzsimpl'; only 1: easy).	0.022713	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_assoc	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: nzinduct n; only 1: nzsimpl; only 1: easy; only 1: intros ?; only 1: nzsimpl; only 1: rewrite succ_inj_wd; only 1: easy).	0.072795	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_cancel_l	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: nzinduct p; only 1: nzsimpl; only 1: easy; only 1: intros ?; only 1: nzsimpl; only 1: rewrite succ_inj_wd; only 1: easy).	0.067946	10
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_lt_compat_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_cancel_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_id_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_id_r	120	0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite mul_comm; only 1: apply mul_id_l).	0.019046	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_pos_l	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_max_distr_r	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_min_distr_l	120	0.0.0.0	synth with cache (only 1: apply min_monotone; only 1: intros ?; only 1: intros ?; only 1: apply add_le_mono_l).	0.019625	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_mono_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_mono	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_mono_l	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: nzinduct p; only 1: nzsimpl; only 1: easy; only 1: intros ?; only 1: nzsimpl; only 1: rewrite <- succ_le_mono; only 1: easy).	0.090990	10
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_idemp_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.add_mod_idemp_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.add_mod_idemp_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.add_mod	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_div	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_mul_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul_le	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_divides	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZBase.NZBaseProp.eq_sym_iff	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: symmetry; only 1: auto; only 1: symmetry; only 1: auto).	0.012099	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZBase.NZBaseProp.neq_sym	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZBase.NZBaseProp.eq_stepl	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite <- H; only 1: easy).	0.014008	7
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZBase.NZBaseProp.succ_inj	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZBase.NZBaseProp.succ_inj_wd	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZBase.NZBaseProp.succ_inj_wd_neg	120	0.0.0	synth with cache (only 1: intros; only 1: rewrite succ_inj_wd; only 1: easy).	0.010893	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZBase.NZBaseProp.CentralInduction.central_induction	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.GenericMinMax.ge_not_lt	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.GenericMinMax.max_l	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.GenericMinMax.max_r	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.GenericMinMax.min_l	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.GenericMinMax.min_r	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_spec	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_spec_le	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.Proper_instance_0	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_compat	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_unicity	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_unicity_ext	120	0.0.0	synth with cache (only 1: intros; only 1: apply max_unicity; only 1: auto).	0.014034	3
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_mono	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_id	120	0.0	synth with cache (only 1: apply max_l; only 1: order).	0.007960	2
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_assoc	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_comm	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_max_l	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_max_r	120	0	synth with cache (only 1: solve_max).	0.013865	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_l_iff	120	0	synth with cache (only 1: solve_max).	0.017457	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_r_iff	120	0	synth with cache (only 1: solve_max).	0.022501	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_iff	120	0.0.0	synth with cache (only 1: split; only 1: apply max_le; only 1: solve_max).	0.102720	3
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lt_iff	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_l	120	0	synth with cache (only 1: solve_max).	0.015472	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_r	120	0	synth with cache (only 1: solve_max).	0.014250	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub	120	0	synth with cache (only 1: solve_max).	0.031324	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_iff	120	0	synth with cache (only 1: solve_max).	0.037335	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_lt	120	0	synth with cache (only 1: solve_max).	0.018123	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_lt_iff	120	0	synth with cache (only 1: solve_max).	0.030250	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_compat_l	120	0.0.0	synth with cache (only 1: intros; only 1: apply max_lub_iff; only 1: solve_max).	0.025356	3
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_compat_r	120	0.0.0	synth with cache (only 1: intros; only 1: apply max_lub_iff; only 1: solve_max).	0.023109	3
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_compat	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_spec	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_spec_le	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_compat	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_unicity	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_unicity_ext	120	0.0.0	synth with cache (only 1: intros; only 1: apply min_unicity; only 1: auto).	0.017066	3
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_mono	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_id	120	0.0	synth with cache (only 1: apply min_l; only 1: order).	0.009759	2
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_assoc	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_comm	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_min_r	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_min_l	120	0	synth with cache (only 1: solve_min).	0.013782	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_l_iff	120	0	synth with cache (only 1: solve_min).	0.023718	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_r_iff	120	0	synth with cache (only 1: solve_min).	0.019432	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_iff	120	0.0.0	synth with cache (only 1: split; only 1: apply min_le; only 1: solve_min).	0.023358	3
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_lt_iff	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_l	120	0	synth with cache (only 1: solve_min).	0.015486	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_r	120	0	synth with cache (only 1: solve_min).	0.016247	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb	120	0	synth with cache (only 1: solve_min).	0.016662	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_iff	120	0	synth with cache (only 1: solve_min).	0.030176	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_lt	120	0	synth with cache (only 1: solve_min).	0.017153	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_lt_iff	120	0	synth with cache (only 1: solve_min).	0.031332	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_compat_l	120	0.0.0	synth with cache (only 1: intros; only 1: apply min_glb_iff; only 1: solve_min).	0.021728	3
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_compat_r	120	0.0.0	synth with cache (only 1: intros; only 1: apply min_glb_iff; only 1: solve_min).	0.027612	3
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_compat	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_absorption	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_absorption	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_distr	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_distr	120	0.0.0.0.0.0.0.0	synth with cache (only 1: symmetry; only 1: apply max_mono; only 1: eauto with *; only 1: red; only 1: red; only 1: intros; only 1: apply min_le_compat_l; only 1: auto).	0.026980	8
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_modular	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_modular	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_disassoc	120	0.0	synth with cache (only 1: rewrite min_max_distr; only 1: auto using max_le_compat_l, le_min_r).	0.014480	2
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_antimono	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_antimono	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxDecProperties.max_case_strong	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxDecProperties.max_case	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply max_case_strong; only 1: auto; only 1: auto; only 1: auto).	0.015042	5
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxDecProperties.max_dec	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxDecProperties.min_case_strong	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxDecProperties.min_case	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply min_case_strong; only 1: auto; only 1: auto; only 1: auto).	0.017064	5
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxDecProperties.min_dec	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: apply min_case; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H0; only 1: left; only 1: rewrite <- e; only 1: auto with relations; only 1: right; only 1: rewrite <- e; only 1: auto with relations; only 1: auto with relations; only 1: auto with relations).	0.026689	14
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.max_monotone	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply max_mono; only 1: congruence; only 1: auto).	0.012818	4
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.min_monotone	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply min_mono; only 1: congruence; only 1: auto).	0.013623	4
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.min_max_antimonotone	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply min_max_antimono; only 1: congruence; only 1: auto).	0.014430	4
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.max_min_antimonotone	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply max_min_antimono; only 1: congruence; only 1: auto).	0.014448	4
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.max_case_strong	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply max_case_strong; only 1: congruence; only 1: auto; only 1: auto).	0.015500	5
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.max_case	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply max_case_strong; only 1: auto; only 1: auto).	0.012447	4
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.max_dec	120	0	synth with cache (only 1: exact max_dec).	0.010554	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_case_strong	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply min_case_strong; only 1: congruence; only 1: auto; only 1: auto).	0.016666	5
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_case	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply min_case_strong; only 1: auto; only 1: auto).	0.012853	4
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_dec	120	0	synth with cache (only 1: exact min_dec).	0.012305	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.TOMaxEqDec_to_Compare.compare_spec	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareFacts.compare_eq_iff	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareFacts.compare_eq	120	0	synth with cache (only 1: apply compare_eq_iff).	0.008592	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareFacts.compare_lt_iff	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareFacts.compare_gt_iff	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareFacts.compare_nlt_iff	120	0.0	synth with cache (only 1: rewrite compare_lt_iff; only 1: intuition).	0.012016	2
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareFacts.compare_ngt_iff	120	0.0	synth with cache (only 1: rewrite compare_gt_iff; only 1: intuition).	0.014958	2
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareFacts.compare_compat	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareFacts.compare_refl	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareFacts.compare_antisym	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_compat	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_preorder	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_order	120	0.0	synth with cache (only 1: compute; only 1: iorder).	0.015371	2
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_antisym	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_not_gt_iff	120	0	synth with cache (only 1: iorder).	0.012299	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.lt_not_ge_iff	120	0	synth with cache (only 1: iorder).	0.015579	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_or_gt	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.lt_or_ge	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.eq_is_le_ge	120	0	synth with cache (only 1: iorder).	0.015102	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.compare_le_iff	120	0.0	synth with cache (only 1: rewrite le_not_gt_iff; only 1: apply compare_ngt_iff).	0.011530	2
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.compare_ge_iff	120	0.0	synth with cache (only 1: rewrite le_not_gt_iff; only 1: apply compare_nlt_iff).	0.010226	2
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeFacts.lt_dec	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeFacts.if_eq_dec	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeFacts.eqb_alt	120	0.0.0	synth with cache (only 1: unfold eqb; only 1: intros; only 1: apply if_eq_dec).	0.012283	3
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeFacts.eqb_compat	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite eqb_alt; only 1: rewrite eqb_alt; only 1: rewrite H; only 1: rewrite H0; only 1: auto).	0.029494	11
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.lt_not_eq	120	0	synth with cache (only 1: order).	0.008943	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.lt_eq	120	0	synth with cache (only 1: order).	0.007929	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.eq_lt	120	0	synth with cache (only 1: order).	0.009362	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.le_eq	120	0	synth with cache (only 1: order).	0.010042	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.eq_le	120	0	synth with cache (only 1: order).	0.012345	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.neq_eq	120	0	synth with cache (only 1: order).	0.079697	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.eq_neq	120	0	synth with cache (only 1: order).	0.010304	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.le_lt_trans	120	0	synth with cache (only 1: order).	0.010102	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.lt_le_trans	120	0	synth with cache (only 1: order).	0.010640	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.le_trans	120	0	synth with cache (only 1: order).	0.010399	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.le_antisym	120	0	synth with cache (only 1: order).	0.009794	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.le_neq	120	0	synth with cache (only 1: order).	0.011317	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.neq_sym	120	0	synth with cache (only 1: order).	0.010216	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.lt_le	120	0	synth with cache (only 1: order).	0.010385	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.gt_not_eq	120	0	synth with cache (only 1: order).	0.008576	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.eq_not_lt	120	0	synth with cache (only 1: order).	0.009601	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.eq_not_gt	120	0	synth with cache (only 1: order).	0.010739	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.lt_not_gt	120	0	synth with cache (only 1: order).	0.008779	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.eq_is_nlt_ngt	120	0.0.0.0	synth with cache (only 1: intuition; only 1: order; only 1: order; only 1: order).	0.031574	4
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeRev.lt_strorder	120	0.0	synth with cache (only 1: unfold lt; only 1: auto with *).	0.008798	2
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeRev.lt_compat	120	0.0	synth with cache (only 1: unfold lt; only 1: auto with *).	0.010404	2
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeRev.le_lteq	120	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold le; only 1: unfold lt; only 1: unfold flip; only 1: rewrite O.le_lteq; only 1: intuition).	0.021788	6
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeRev.compare_spec	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_spec	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_eq	120	0	synth with cache (only 1: apply compare_eq_iff).	0.010920	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_refl	120	0.0	synth with cache (only 1: apply compare_eq_iff; only 1: easy).	0.013177	2
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_gt_iff	120	0.0.0.0	synth with cache (only 1: rewrite <- compare_lt_iff; only 1: rewrite compare_antisym; only 1: rewrite CompOpp_iff; only 1: easy).	0.014933	4
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_ge_iff	120	0.0.0.0	synth with cache (only 1: rewrite <- compare_le_iff; only 1: rewrite compare_antisym; only 1: rewrite CompOpp_iff; only 1: easy).	0.015712	4
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_ngt_iff	120	0.0	synth with cache (only 1: rewrite compare_gt_iff; only 1: intuition).	0.017276	2
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_nlt_iff	120	0.0	synth with cache (only 1: rewrite compare_lt_iff; only 1: intuition).	0.015509	2
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_nle_iff	120	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: rewrite <- compare_le_iff; only 1: destruct compare; only 1: split; only 1: easy; only 1: destruct 1; only 1: easy; only 1: split; only 1: easy; only 1: destruct 1; only 1: easy; only 1: split; only 1: easy; only 1: easy).	0.046870	13
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_nge_iff	120	0.0.0.0	synth with cache (only 1: rewrite <- compare_nle_iff; only 1: rewrite compare_antisym; only 1: rewrite CompOpp_iff; only 1: easy).	0.014834	4
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareBasedOrderFacts.lt_irrefl	120	0.0.0	synth with cache (only 1: rewrite <- compare_lt_iff; only 1: rewrite compare_refl; only 1: easy).	0.018943	3
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareBasedOrderFacts.lt_eq_cases	120	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: rewrite <- compare_lt_iff; only 1: rewrite <- compare_le_iff; only 1: rewrite <- compare_eq_iff; only 1: destruct compare; only 1: intuition; only 1: easy; only 1: easy; only 1: intuition; only 1: easy; only 1: easy; only 1: intuition; only 1: easy; only 1: easy).	0.101593	13
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.leb_spec0	120	0.0.0	synth with cache (only 1: apply iff_reflect; only 1: symmetry; only 1: apply leb_le).	0.011207	3
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.leb_spec	120	0.0.0.0.0.0.0	synth with cache (only 1: case leb_spec0; only 1: constructor; only 1: trivial; only 1: constructor; only 1: rewrite <- compare_lt_iff; only 1: rewrite compare_nge_iff; only 1: easy).	0.014933	7
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_spec0	120	0.0.0	synth with cache (only 1: apply iff_reflect; only 1: symmetry; only 1: apply ltb_lt).	0.011351	3
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_spec	120	0.0.0.0.0.0.0	synth with cache (only 1: case ltb_spec0; only 1: constructor; only 1: trivial; only 1: constructor; only 1: rewrite <- compare_le_iff; only 1: rewrite compare_ngt_iff; only 1: easy).	0.017410	7
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.leb_nle	120	0.0.0	synth with cache (only 1: rewrite <- not_true_iff_false; only 1: rewrite leb_le; only 1: easy).	0.016827	3
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.leb_gt	120	0.0.0.0	synth with cache (only 1: rewrite leb_nle; only 1: rewrite <- compare_lt_iff; only 1: rewrite compare_nge_iff; only 1: easy).	0.014594	4
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_nlt	120	0.0.0	synth with cache (only 1: rewrite <- not_true_iff_false; only 1: rewrite ltb_lt; only 1: intuition).	0.018460	3
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_ge	120	0.0.0.0	synth with cache (only 1: rewrite ltb_nlt; only 1: rewrite <- compare_le_iff; only 1: rewrite compare_ngt_iff; only 1: intuition).	0.017397	4
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.leb_refl	120	0.0.0.0	synth with cache (only 1: apply leb_le; only 1: apply lt_eq_cases; only 1: right; only 1: easy).	0.012406	4
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.leb_antisym	120	0.0.0.0.0	synth with cache (only 1: apply eq_true_iff_eq; only 1: rewrite negb_true_iff; only 1: rewrite leb_le; only 1: rewrite ltb_ge; only 1: easy).	0.015309	5
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_irrefl	120	0.0.0.0	synth with cache (only 1: apply ltb_ge; only 1: apply lt_eq_cases; only 1: right; only 1: easy).	0.014404	4
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_antisym	120	0.0.0.0.0	synth with cache (only 1: apply eq_true_iff_eq; only 1: rewrite negb_true_iff; only 1: rewrite ltb_lt; only 1: rewrite leb_gt; only 1: easy).	0.018220	5
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.eqb_compare	120	0.0.0.0.0.0.0	synth with cache (only 1: apply eq_true_iff_eq; only 1: rewrite eqb_eq; only 1: rewrite <- compare_eq_iff; only 1: destruct compare; only 1: easy; only 1: easy; only 1: easy).	0.054525	7
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_compare	120	0.0.0.0.0.0.0	synth with cache (only 1: apply eq_true_iff_eq; only 1: rewrite ltb_lt; only 1: rewrite <- compare_lt_iff; only 1: destruct compare; only 1: easy; only 1: easy; only 1: easy).	0.031427	7
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.leb_compare	120	0.0.0.0.0.0.0	synth with cache (only 1: apply eq_true_iff_eq; only 1: rewrite leb_le; only 1: rewrite <- compare_le_iff; only 1: destruct compare; only 1: easy; only 1: easy; only 1: easy).	0.035651	7
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersTac.OrderFacts.eq_refl	120	0	synth with cache (only 1: reflexivity).	0.008147	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersTac.OrderFacts.le_refl	120	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite P.le_lteq; only 1: right; only 1: reflexivity).	0.009268	4
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersTac.OrderFacts.lt_irrefl	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersTac.OrderFacts.eq_sym	120	0	synth with cache (only 1: auto with *).	0.010053	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersTac.OrderFacts.le_antisym	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersTac.OrderFacts.neq_sym	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersTac.OrderFacts.trans	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersTac.OrderFacts.eq_neq	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersTac.OrderFacts.neq_eq	120	0	synth with cache (only 1: eauto using eq_trans, eq_sym).	0.011655	1
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersTac.OrderFacts.not_neq_eq	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersTac.OrderFacts.not_ge_lt	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersTac.OrderFacts.not_gt_le	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersTac.OrderFacts.le_neq_lt	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_add_distr_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_assoc	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: nzinduct n; only 1: nzsimpl; only 1: easy; only 1: intros ?; only 1: nzsimpl; only 1: rewrite mul_add_distr_r; only 1: rewrite add_cancel_r; only 1: easy).	0.088543	11
coq-tactician-stdlib.8.11.dev	Coq.Structures.Orders.Compare2EqBool.eqb_eq	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.Orders.OT_to_Full.le_lteq	120	0.0.0.0	synth with cache (only 1: unfold le; only 1: split; only 1: auto; only 1: auto).	0.009312	4
coq-tactician-stdlib.8.11.dev	Coq.Structures.Orders.OTF_LtIsTotal.lt_total	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.Orders.OTF_to_TTLB.leb_le	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_1_l	120	0.0.0	synth with cache (only 1: intros ?; only 1: nzsimpl'; only 1: easy).	0.106362	3
coq-tactician-stdlib.8.11.dev	Coq.Structures.Orders.OTF_to_TTLB.leb_total	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.Orders.OTF_to_TTLB.leb_trans	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite leb_le; only 1: rewrite leb_le; only 1: rewrite leb_le; only 1: rewrite le_lteq; only 1: rewrite le_lteq; only 1: rewrite le_lteq; only 1: intros ?; only 1: destruct H; only 1: intros ?; only 1: destruct H0; only 1: left; only 1: transitivity y; only 1: auto; only 1: auto; only 1: left; only 1: rewrite <- H0; only 1: auto; only 1: intros ?; only 1: destruct H0; only 1: left; only 1: rewrite H; only 1: auto; only 1: right; only 1: transitivity y; only 1: auto; only 1: auto).	0.092007	29
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_1_r	120	0.0.0	synth with cache (only 1: intros ?; only 1: nzsimpl'; only 1: easy).	0.026436	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle0	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle1	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.Orders.TTLB_to_OTF.compare_spec	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle2	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.Orders.TTLB_to_OTF.eqb_eq	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold eq; only 1: unfold eqb; only 1: unfold le; only 1: case leb; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).	0.017993	9
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle3	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.Orders.TTLB_to_OTF.eq_equiv	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.Orders.TTLB_to_OTF.lt_strorder	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.Orders.TTLB_to_OTF.lt_compat	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.Orders.TTLB_to_OTF.le_lteq	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.Equalities.UpdateEq.eq_equiv	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.Equalities.HasEqDec2Bool.eqb_eq	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: unfold eqb; only 1: destruct F.eq_dec; only 1: auto with *; only 1: split; only 1: discriminate; only 1: intros ?; only 1: elim n; only 1: auto).	0.088812	10
coq-tactician-stdlib.8.11.dev	Coq.Structures.Equalities.HasEqBool2Dec.eq_dec	120
coq-tactician-stdlib.8.11.dev	Coq.Structures.Equalities.BoolEqualityFacts.eqb_compat	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply eq_true_iff_eq; only 1: rewrite eqb_eq; only 1: rewrite eqb_eq; only 1: rewrite H; only 1: rewrite H0; only 1: easy).	0.021201	12
coq-tactician-stdlib.8.11.dev	Coq.Structures.Equalities.BoolEqualityFacts.eqb_spec	120	0.0.0	synth with cache (only 1: apply iff_reflect; only 1: symmetry; only 1: apply eqb_eq).	0.008667	3
coq-tactician-stdlib.8.11.dev	Coq.Structures.Equalities.BoolEqualityFacts.eqb_neq	120	0.0.0	synth with cache (only 1: rewrite <- not_true_iff_false; only 1: rewrite eqb_eq; only 1: easy).	0.012308	3
coq-tactician-stdlib.8.11.dev	Coq.Structures.Equalities.BoolEqualityFacts.eqb_refl	120	0.0	synth with cache (only 1: apply eqb_eq; only 1: easy).	0.008019	2
coq-tactician-stdlib.8.11.dev	Coq.Structures.Equalities.BoolEqualityFacts.eqb_sym	120	0.0.0.0	synth with cache (only 1: apply eq_true_iff_eq; only 1: rewrite eqb_eq; only 1: rewrite eqb_eq; only 1: easy).	0.016593	4
coq-tactician-stdlib.8.11.dev	Coq.Setoids.Setoid.Seq_refl	120
coq-tactician-stdlib.8.11.dev	Coq.Classes.Equivalence.equiv_transitive_obligation_1	120
coq-tactician-stdlib.8.11.dev	Coq.Setoids.Setoid.Seq_sym	120	0.0.0.0	synth with cache (only 1: unfold Setoid_Theory in s; only 1: intros; only 1: symmetry; only 1: assumption).	0.010713	4
coq-tactician-stdlib.8.11.dev	Coq.Setoids.Setoid.Seq_trans	120
coq-tactician-stdlib.8.11.dev	Coq.Setoids.Setoid.gen_st	120
coq-tactician-stdlib.8.11.dev	Coq.Classes.Equivalence.Respecting.respecting_equiv_obligation_3	120
coq-tactician-stdlib.8.11.dev	Coq.Classes.Equivalence.pointwise_reflexive	120	0	synth with cache (only 1: firstorder).	0.006565	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.Equivalence.pointwise_symmetric	120	0	synth with cache (only 1: firstorder).	0.008488	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.Equivalence.pointwise_transitive	120	0	synth with cache (only 1: firstorder).	0.008224	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.Equivalence.pointwise_equivalence	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_pos_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_neg_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_neg_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_nonneg	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonneg	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: le_elim H0; only 1: le_elim H2; only 1: apply lt_le_incl; only 1: apply mul_lt_mono_nonneg; only 1: easy; only 1: easy; only 1: assumption; only 1: assumption; only 1: rewrite <- H2; only 1: apply mul_le_mono_nonneg_r; only 1: assumption; only 1: apply lt_le_incl; only 1: easy; only 1: le_elim H2; only 1: rewrite <- H0; only 1: apply mul_le_mono_nonneg_l; only 1: assumption; only 1: apply lt_le_incl; only 1: easy; only 1: rewrite H0; only 1: rewrite H2; only 1: apply eq_le_incl; only 1: easy).	0.095940	31
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_pos	120
coq-tactician-stdlib.8.11.dev	Coq.Classes.CEquivalence.equiv_transitive_obligation_1	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: transitivity y; only 1: easy; only 1: easy).	0.023855	11
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_neg_neg	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_neg	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_neg_pos	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite mul_comm; only 1: apply mul_pos_neg; only 1: easy; only 1: easy).	0.018055	5
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms_Prop.Acc_pt_morphism	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_nonneg	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_cancel_l	120
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms_Prop.Acc_rel_morphism	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_cancel_r	120
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms_Prop.well_founded_morphism	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_cancel_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_cancel_r	120
coq-tactician-stdlib.8.11.dev	Coq.Classes.CEquivalence.Respecting.respecting_equiv_obligation_3	120
coq-tactician-stdlib.8.11.dev	Coq.Classes.CEquivalence.pointwise_reflexive	120	0	synth with cache (only 1: firstorder).	0.007420	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.lt_1_mul_pos	120
coq-tactician-stdlib.8.11.dev	Coq.Classes.CEquivalence.pointwise_symmetric	120	0	synth with cache (only 1: firstorder).	0.007875	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.CEquivalence.pointwise_transitive	120	0	synth with cache (only 1: firstorder).	0.009983	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_mul_0	120
coq-tactician-stdlib.8.11.dev	Coq.Classes.CEquivalence.pointwise_equivalence	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.neq_mul_0	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: split; only 1: intros ?; only 1: intros ?; only 1: apply eq_mul_0 in H0; only 1: tauto; only 1: intros ?; only 1: split; only 1: intros ?; only 1: rewrite H0 in H; only 1: rewrite mul_0_l in H; only 1: apply H; only 1: easy; only 1: intros ?; only 1: rewrite H0 in H; only 1: rewrite mul_0_r in H; only 1: apply H; only 1: easy).	0.081408	19
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_square_0	120	0.0.0	synth with cache (only 1: intros ?; only 1: rewrite eq_mul_0; only 1: tauto).	0.013507	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_mul_0_l	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply eq_mul_0 in H; only 1: destruct H; only 1: assumption; only 1: false_hyp H H0).	0.015074	8
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_mul_0_r	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply eq_mul_0 in H; only 1: destruct H; only 1: false_hyp H H0; only 1: assumption).	0.015703	8
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.lt_0_mul	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_lt_mono_nonneg	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply mul_lt_mono_nonneg; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.017053	9
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_le_mono_nonneg	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply mul_le_mono_nonneg; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.015585	9
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_lt_simpl_nonneg	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_le_simpl_nonneg	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_2_mono_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.add_le_mul	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_nonneg	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.crossmul_le_addsquare	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.add_square_le	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite mul_add_distr_r; only 1: rewrite mul_add_distr_l; only 1: rewrite mul_add_distr_l; only 1: rewrite add_assoc; only 1: apply add_le_mono_r; only 1: rewrite <- add_assoc; only 1: rewrite <- add_0_r  at 1; only 1: apply add_le_mono_l; only 1: apply add_nonneg_nonneg; only 1: apply mul_nonneg_nonneg; only 1: order; only 1: order; only 1: apply mul_nonneg_nonneg; only 1: order; only 1: order).	0.073489	19
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_add_le	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.quadmul_le_squareadd	120
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.Proper.eq_proper_proxy	120	0	synth with cache (only 1: firstorder).	0.005880	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.Proper.reflexive_proper_proxy	120	0	synth with cache (only 1: firstorder).	0.005579	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.Proper.proper_proper_proxy	120	0	synth with cache (only 1: firstorder).	0.005566	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.Relations.pointwise_pointwise	120
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.Relations.subrelation_id_proper	120	0	synth with cache (only 1: firstorder).	0.006370	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.Relations.subrelation_respectful	120	0.0	synth with cache (only 1: unfold subrelation in *; only 1: firstorder).	0.012062	2
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.Relations.subrelation_refl	120	0.0	synth with cache (only 1: unfold subrelation; only 1: firstorder).	0.058003	2
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.Relations.subrelation_proper	120	0.0	synth with cache (only 1: apply sub; only 1: apply mor).	0.007896	2
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.Relations.proper_subrelation_proper	120	0.0.0	synth with cache (only 1: reduce; only 1: subst; only 1: firstorder).	0.009442	3
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.Relations.pointwise_subrelation	120	0.0.0.0	synth with cache (only 1: reduce; only 1: unfold pointwise_relation in *; only 1: apply sub; only 1: apply H).	0.010199	4
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.Relations.forall_subrelation	120	0.0.0	synth with cache (only 1: reduce; only 1: apply H; only 1: apply H0).	0.010231	3
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalFacts.uint_dec	120
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.iff_impl_subrelation	120	0	synth with cache (only 1: firstorder).	0.005846	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.iff_flip_impl_subrelation	120	0	synth with cache (only 1: firstorder).	0.005471	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalFacts.rev_revapp	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalFacts.rev_rev	120	0	synth with cache (only 1: apply rev_revapp).	0.006021	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.respectful_per_obligation_2	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalFacts.nzhead_revapp_0	120
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.complement_proper_obligation_1	120
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.flip_proper_obligation_1	120	0.0.0	synth with cache (only 1: apply mor; only 1: auto; only 1: auto).	0.010822	3
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.trans_contra_co_morphism_obligation_1	120
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.trans_contra_inv_impl_morphism_obligation_1	120
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.trans_co_impl_morphism_obligation_1	120
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.trans_sym_co_inv_impl_morphism_obligation_1	120
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.trans_sym_contra_impl_morphism_obligation_1	120
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.per_partial_app_morphism_obligation_1	120
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.trans_co_eq_inv_impl_morphism_obligation_1	120
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.PER_morphism_obligation_1	120
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.symmetric_equiv_flip	120	0	synth with cache (only 1: firstorder).	0.009019	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.compose_proper_obligation_1	120	0.0.0.0	synth with cache (only 1: unfold compose; only 1: apply H; only 1: apply H0; only 1: apply H1).	0.013841	4
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.reflexive_eq_dom_reflexive	120	0	synth with cache (only 1: simpl_relation).	0.012952	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.respectful_morphism	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: reduce; only 1: unfold respectful in *; only 1: unfold relation_equivalence in *; only 1: unfold predicate_equivalence in *; only 1: simpl in *; only 1: split; only 1: intros; only 1: rewrite <- H0; only 1: apply H1; only 1: rewrite H; only 1: assumption; only 1: intros; only 1: rewrite H0; only 1: apply H1; only 1: rewrite <- H; only 1: assumption).	0.048312	16
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.Reflexive_partial_app_morphism	120	0	synth with cache (only 1: simpl_relation).	0.015777	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.flip_respectful	120	0.0.0.0.0.0.0	synth with cache (only 1: unfold flip; only 1: unfold respectful; only 1: split; only 1: intros; only 1: intuition; only 1: intros; only 1: intuition).	0.043604	7
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.flip1	120	0	synth with cache (only 1: firstorder).	0.007683	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.flip2	120	0	synth with cache (only 1: firstorder).	0.007533	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.eq_subrelation	120	0	synth with cache (only 1: simpl_relation).	0.012154	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.reflexive_proper	120	0	synth with cache (only 1: firstorder).	0.007786	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.proper_eq	120
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.proper_proper	120
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.Normalize.proper_normalizes_proper	120
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.Normalize.flip_atom	120	0	synth with cache (only 1: firstorder).	0.007578	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.flip_arrow	120
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.proper_sym_flip	120	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply H0; only 1: apply H; only 1: apply H1).	0.024820	13
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.proper_sym_flip_2	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply H1; only 1: auto; only 1: auto).	0.045988	19
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.proper_sym_impl_iff	120
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.proper_sym_impl_iff_2	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: red in H1; only 1: red in H1; only 1: red in H1; only 1: red in H1; only 1: split; only 1: eauto; only 1: eauto).	0.046863	21
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.PartialOrder_proper	120
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.PartialOrder_StrictOrder	120
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.StrictOrder_PreOrder	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intros ?; only 1: right; only 1: reflexivity; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H2; only 1: intros ?; only 1: destruct H3; only 1: left; only 1: transitivity y; only 1: auto; only 1: auto; only 1: left; only 1: rewrite <- H3; only 1: auto; only 1: intros ?; only 1: destruct H3; only 1: left; only 1: rewrite H2; only 1: auto; only 1: right; only 1: transitivity y; only 1: auto; only 1: auto).	0.059346	27
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalFacts.nzhead_revapp	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalFacts.nzhead_rev	120	0	synth with cache (only 1: apply nzhead_revapp).	0.006375	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalFacts.rev_nztail_rev	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Empty_set_zero	120	0	synth with cache (only 1: auto  6 with sets).	0.010878	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalFacts.revapp_nil_inv	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalFacts.rev_nil_inv	120	0	synth with cache (only 1: apply revapp_nil_inv).	0.007252	1
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Empty_set_zero_right	120	0	synth with cache (only 1: auto  6 with sets).	0.009901	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.StrictOrder_PartialOrder	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Empty_set_zero'	120	0.0	synth with cache (only 1: unfold Add at 1; only 1: auto using Empty_set_zero with sets).	0.008185	2
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.less_than_empty	120	0	synth with cache (only 1: auto with sets).	0.010013	1
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_commutative	120	0	synth with cache (only 1: auto with sets).	0.012796	1
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_associative	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalFacts.rev_lnorm_rev	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_idempotent	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_absorbs	120	0	synth with cache (only 1: auto  7 with sets).	0.014827	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalFacts.nzhead_nonzero	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction d; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.072320	12
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Couple_as_union	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros ?; only 1: intros ?; only 1: elim H; only 1: intros ?; only 1: intros ?; only 1: elim H0; only 1: auto with sets; only 1: intros ?; only 1: intros ?; only 1: elim H0; only 1: auto with sets; only 1: red; only 1: intros ?; only 1: intros ?; only 1: elim H; only 1: auto with sets; only 1: auto with sets).	0.028560	22
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Triple_as_union	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros ?; only 1: intros ?; only 1: elim H; only 1: intros ?; only 1: intros ?; only 1: elim H0; only 1: intros ?; only 1: intros ?; only 1: elim H1; only 1: auto with sets; only 1: intros ?; only 1: intros ?; only 1: elim H1; only 1: auto with sets; only 1: intros ?; only 1: intros ?; only 1: elim H0; only 1: auto with sets; only 1: red; only 1: intros ?; only 1: intros ?; only 1: elim H; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets).	0.049198	31
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalFacts.unorm_0	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Triple_as_Couple	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Triple_as_Couple_Singleton	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite <- Triple_as_union; only 1: rewrite <- Couple_as_union; only 1: auto with sets).	0.015061	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalFacts.unorm_nonnil	120	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold unorm; only 1: destruct nzhead; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.074637	13
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Intersection_commutative	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros ?; only 1: intros ?; only 1: elim H; only 1: auto with sets; only 1: red; only 1: intros ?; only 1: intros ?; only 1: elim H; only 1: auto with sets).	0.016972	14
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Distributivity	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros ?; only 1: intros ?; only 1: elim H; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: generalize H0; only 1: elim H1; only 1: auto with sets; only 1: auto with sets; only 1: red; only 1: intros ?; only 1: intros ?; only 1: elim H; only 1: intros ?; only 1: intros ?; only 1: elim H0; only 1: auto with sets; only 1: intros ?; only 1: intros ?; only 1: elim H0; only 1: auto with sets).	0.040471	28
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalFacts.nzhead_invol	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction d; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.018195	12
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Distributivity_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalFacts.unorm_invol	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Distributivity'	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros ?; only 1: intros ?; only 1: elim H; only 1: auto with sets; only 1: intros ?; only 1: intros ?; only 1: elim H0; only 1: auto with sets; only 1: red; only 1: intros ?; only 1: intros ?; only 1: elim H; only 1: intros ?; only 1: intros ?; only 1: elim H0; only 1: auto with sets; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: generalize H1; only 1: elim H2; only 1: auto with sets; only 1: auto with sets).	0.044853	29
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalFacts.norm_invol	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_add	120	0.0	synth with cache (only 1: unfold Add; only 1: auto using Union_associative with sets).	0.009241	2
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Non_disjoint_union	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold Add; only 1: apply Extensionality_Ensembles; only 1: red; only 1: split; only 1: red; only 1: intros ?; only 1: intros ?; only 1: elim H0; only 1: auto with sets; only 1: intros ?; only 1: intros ?; only 1: elim H1; only 1: auto with sets; only 1: red; only 1: auto with sets).	0.021261	18
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Non_disjoint_union'	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.singlx	120	0.0.0	synth with cache (only 1: intros ?; only 1: rewrite Empty_set_zero'; only 1: auto with sets).	0.010358	3
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.incl_add	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.incl_add_x	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Add_commutative	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_cancel_r	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle0	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite <- add_assoc; only 1: rewrite <- add_assoc; only 1: rewrite add_cancel_l; only 1: apply add_comm).	0.017336	7
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.Proper.eq_proper_proxy	120	0	synth with cache (only 1: firstorder).	0.004824	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.Proper.reflexive_proper_proxy	120	0	synth with cache (only 1: firstorder).	0.004832	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.Proper.proper_proper_proxy	120	0	synth with cache (only 1: firstorder).	0.004141	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle1	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite add_assoc; only 1: rewrite add_assoc; only 1: rewrite add_cancel_r; only 1: apply add_shuffle0).	0.016383	8
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.Relations.pointwise_pointwise	120
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.Relations.subrelation_id_proper	120	0	synth with cache (only 1: firstorder).	0.005377	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle2	120
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.Relations.subrelation_respectful	120	0	synth with cache (only 1: simpl_crelation).	0.018104	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle3	120
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.Relations.subrelation_refl	120	0	synth with cache (only 1: simpl_crelation).	0.007082	1
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.sub_1_r	120	0.0.0	synth with cache (only 1: intros ?; only 1: nzsimpl'; only 1: easy).	0.024250	3
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.Relations.subrelation_proper	120	0.0	synth with cache (only 1: apply sub; only 1: apply mor).	0.007218	2
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.Relations.proper_subrelation_proper_arrow	120
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.Relations.pointwise_subrelation	120
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.Relations.forall_subrelation	120	0.0	synth with cache (only 1: reduce; only 1: firstorder).	0.009756	2
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.iff_impl_subrelation	120	0	synth with cache (only 1: firstorder).	0.007114	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.iff_flip_impl_subrelation	120	0	synth with cache (only 1: firstorder).	0.005877	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.iffT_arrow_subrelation	120	0	synth with cache (only 1: firstorder).	0.007115	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.iffT_flip_arrow_subrelation	120	0	synth with cache (only 1: firstorder).	0.007011	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.respectful_per_obligation_2	120
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.flip_proper_obligation_1	120	0.0.0	synth with cache (only 1: apply mor; only 1: auto; only 1: auto).	0.010926	3
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.trans_contra_co_type_morphism_obligation_1	120
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.trans_contra_inv_impl_type_morphism_obligation_1	120
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.trans_co_impl_type_morphism_obligation_1	120
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.trans_sym_co_inv_impl_type_morphism_obligation_1	120
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.trans_sym_contra_arrow_morphism_obligation_1	120
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.per_partial_app_type_morphism_obligation_1	120
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.trans_co_eq_inv_arrow_morphism_obligation_1	120
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.PER_type_morphism_obligation_1	120
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.symmetric_equiv_flip	120	0	synth with cache (only 1: firstorder).	0.010570	1
coq-tactician-stdlib.8.11.dev	Coq.Program.Subset.subset_eq	120
coq-tactician-stdlib.8.11.dev	Coq.Program.Subset.match_eq_rewrite	120
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.compose_proper_obligation_1	120	0.0	synth with cache (only 1: unfold compose; only 1: firstorder).	0.053896	2
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.reflexive_eq_dom_reflexive	120	0	synth with cache (only 1: simpl_crelation).	0.014598	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.respectful_morphism	120
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.Reflexive_partial_app_morphism	120	0	synth with cache (only 1: simpl_crelation).	0.015974	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.flip_respectful	120
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.flip1	120	0	synth with cache (only 1: firstorder).	0.007213	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.flip2	120	0	synth with cache (only 1: firstorder).	0.007341	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.eq_subrelation	120	0	synth with cache (only 1: simpl_crelation).	0.008997	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.reflexive_proper	120	0	synth with cache (only 1: firstorder).	0.007788	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.proper_eq	120
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.proper_proper	120
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.Normalize.proper_normalizes_proper	120
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.Normalize.flip_atom	120	0	synth with cache (only 1: firstorder).	0.007422	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.flip_arrow	120	0.0.0.0	synth with cache (only 1: unfold Normalizes in *; only 1: rewrite NA; only 1: rewrite NB; only 1: firstorder).	0.059022	4
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.proper_sym_flip	120	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply H0; only 1: apply H; only 1: apply X).	0.025291	13
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.proper_sym_flip_2	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply H1; only 1: auto; only 1: auto).	0.044889	19
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.proper_sym_impl_iff	120
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.proper_sym_arrow_iffT	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: red in H0; only 1: red in H0; only 1: red in H0; only 1: split; only 1: eauto; only 1: eauto).	0.023155	14
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.proper_sym_impl_iff_2	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: red in H1; only 1: red in H1; only 1: red in H1; only 1: red in H1; only 1: split; only 1: eauto; only 1: eauto).	0.055608	21
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.proper_sym_arrow_iffT_2	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: red in H1; only 1: red in H1; only 1: red in H1; only 1: red in H1; only 1: split; only 1: eauto; only 1: eauto).	0.092834	21
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.PartialOrder_proper_type	120
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.PartialOrder_StrictOrder	120
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.StrictOrder_PreOrder	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intros ?; only 1: right; only 1: reflexivity; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct X; only 1: intros ?; only 1: destruct X; only 1: left; only 1: transitivity y; only 1: auto; only 1: auto; only 1: left; only 1: rewrite <- e; only 1: auto; only 1: intros ?; only 1: destruct X; only 1: left; only 1: rewrite e; only 1: auto; only 1: right; only 1: transitivity y; only 1: auto; only 1: auto).	0.077335	27
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.StrictOrder_PartialOrder	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset.The_power_set_partial_order.Empty_set_minimal	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: red; only 1: intros ?; only 1: intros ?; only 1: elim H).	0.007819	5
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset.The_power_set_partial_order.Power_set_Inhabited	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset.The_power_set_partial_order.Inclusion_is_an_order	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset.The_power_set_partial_order.Inclusion_is_transitive	120	0.0	synth with cache (only 1: elim Inclusion_is_an_order; only 1: auto with sets).	0.077389	2
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset.The_power_set_partial_order.Power_set_PO	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset.The_power_set_partial_order.Strict_Rel_is_Strict_Included	120	0	synth with cache (only 1: auto with sets).	0.007071	1
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset.The_power_set_partial_order.Strict_inclusion_is_transitive_with_inclusion	120	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: elim Strict_Rel_is_Strict_Included; only 1: unfold contains; only 1: intros ?; only 1: intros ?; only 1: apply H1; only 1: apply Strict_Rel_Transitive_with_Rel with (y := y); only 1: auto with sets; only 1: auto with sets).	0.021974	13
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset.The_power_set_partial_order.Strict_inclusion_is_transitive_with_inclusion_left	120	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: elim Strict_Rel_is_Strict_Included; only 1: unfold contains; only 1: intros ?; only 1: intros ?; only 1: apply H1; only 1: apply Strict_Rel_Transitive_with_Rel_left with (y := y); only 1: auto with sets; only 1: auto with sets).	0.028531	13
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset.The_power_set_partial_order.Strict_inclusion_is_transitive	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset.The_power_set_partial_order.Empty_set_is_Bottom	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: apply Bottom_definition; only 1: simpl; only 1: auto with sets; only 1: simpl; only 1: auto with sets).	0.009345	6
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset.The_power_set_partial_order.Union_minimal	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: red; only 1: intros ?; only 1: intros ?; only 1: elim H1; only 1: auto with sets; only 1: auto with sets).	0.014777	11
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset.The_power_set_partial_order.Intersection_maximal	120	0	synth with cache (only 1: auto with sets).	0.008923	1
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset.The_power_set_partial_order.Union_increases_l	120	0	synth with cache (only 1: auto with sets).	0.009063	1
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset.The_power_set_partial_order.Union_increases_r	120	0	synth with cache (only 1: auto with sets).	0.007928	1
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset.The_power_set_partial_order.Intersection_decreases_l	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: red; only 1: intros ?; only 1: intros ?; only 1: elim H; only 1: auto with sets).	0.010160	7
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset.The_power_set_partial_order.Intersection_decreases_r	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: red; only 1: intros ?; only 1: intros ?; only 1: elim H; only 1: auto with sets).	0.010158	7
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset.The_power_set_partial_order.Union_is_Lub	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply Lub_definition; only 1: apply Upper_Bound_definition; only 1: simpl; only 1: auto with sets; only 1: simpl; only 1: intros ?; only 1: intros ?; only 1: elim H1; only 1: auto with sets; only 1: auto with sets; only 1: simpl; only 1: intros ?; only 1: intros ?; only 1: elim H1; only 1: simpl; only 1: auto with sets).	0.031725	21
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset.The_power_set_partial_order.Intersection_is_Glb	120
coq-tactician-stdlib.8.11.dev	Coq.Relations.Relations.inverse_image_of_equivalence	120
coq-tactician-stdlib.8.11.dev	Coq.Relations.Relations.inverse_image_of_eq	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_lt_r	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrsetoid.compat_Reflexive	120	0	synth with cache (only 1: trivial).	0.007436	1
coq-tactician-stdlib.8.11.dev	Coq.Program.Wf.Well_founded.Fix_F_eq	120
coq-tactician-stdlib.8.11.dev	Coq.Program.Wf.Well_founded.Fix_F_inv	120
coq-tactician-stdlib.8.11.dev	Coq.Program.Wf.Well_founded.Fix_eq	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: unfold Fix_sub; only 1: rewrite <- Fix_F_eq; only 1: apply F_ext; only 1: intros; only 1: apply Fix_F_inv).	0.018877	6
coq-tactician-stdlib.8.11.dev	Coq.Program.Wf.Well_founded.fix_sub_eq	120	0	synth with cache (only 1: exact Fix_eq).	0.009200	1
coq-tactician-stdlib.8.11.dev	Coq.Program.Wf.Measure_well_founded.measure_wf	120
coq-tactician-stdlib.8.11.dev	Coq.Program.Wf.Fix_rects.F_unfold	120	0.0	synth with cache (only 1: case r; only 1: auto).	0.014188	2
coq-tactician-stdlib.8.11.dev	Coq.Program.Wf.Fix_rects.Fix_F_sub_rect	120
coq-tactician-stdlib.8.11.dev	Coq.Program.Wf.Fix_rects.eq_Fix_F_sub	120
coq-tactician-stdlib.8.11.dev	Coq.Program.Wf.Fix_rects.Fix_sub_rect	120
coq-tactician-stdlib.8.11.dev	Coq.Program.Wf.WfExtensionality.fix_sub_eq_ext	120
coq-tactician-stdlib.8.11.dev	Coq.Program.Equality.JMeq_eq_refl	120	0	synth with cache (only 1: apply UIP).	0.006717	1
coq-tactician-stdlib.8.11.dev	Coq.Program.Equality.UIP_refl_refl	120	0	synth with cache (only 1: apply UIP_refl).	0.006047	1
coq-tactician-stdlib.8.11.dev	Coq.Program.Equality.inj_pairT2_refl	120	0	synth with cache (only 1: apply UIP_refl).	0.006272	1
coq-tactician-stdlib.8.11.dev	Coq.Program.Equality.solution_left	120	0.0.0	synth with cache (only 1: intros; only 1: subst; only 1: assumption).	0.006974	3
coq-tactician-stdlib.8.11.dev	Coq.Program.Equality.solution_right	120	0.0.0	synth with cache (only 1: intros; only 1: subst; only 1: assumption).	0.006952	3
coq-tactician-stdlib.8.11.dev	Coq.Program.Equality.deletion	120	0.0	synth with cache (only 1: intros; only 1: assumption).	0.005079	2
coq-tactician-stdlib.8.11.dev	Coq.Program.Equality.simplification_heq	120
coq-tactician-stdlib.8.11.dev	Coq.Program.Equality.simplification_existT2	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply X; only 1: apply inj_pairT2; only 1: assumption).	0.009416	5
coq-tactician-stdlib.8.11.dev	Coq.Program.Equality.simplification_existT1	120
coq-tactician-stdlib.8.11.dev	Coq.Program.Equality.simplification_K	120	0.0.0	synth with cache (only 1: intros; only 1: rewrite UIP_refl; only 1: assumption).	0.007923	3
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Lexicographic_Product.WfLexicographic_Product.acc_A_B_lexprod	120
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Lexicographic_Product.WfLexicographic_Product.wf_lexprod	120
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Lexicographic_Product.Wf_Symmetric_Product.Acc_symprod	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction 1; only 1: clear H; only 1: intros ?; only 1: intros ?; only 1: induction H; only 1: apply Acc_intro; only 1: intros ?; only 1: intros ?; only 1: inversion_clear H2; only 1: apply H0; only 1: auto; only 1: apply Acc_intro; only 1: trivial; only 1: auto with sets).	0.108716	14
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Lexicographic_Product.Wf_Symmetric_Product.wf_symprod	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_3_facts.Rstar_imp_coherent	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: red; only 1: exists y; only 1: auto with sets).	0.013292	8
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_3_facts.coherent_symmetric	120
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Lexicographic_Product.Swap.swap_Acc	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_3_facts.Strong_confluence	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_3_facts.Strong_confluence_direct	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_3_facts.Noetherian_contains_Noetherian	120
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Lexicographic_Product.Swap.Acc_swapprod	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_3_facts.Newman	120
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Lexicographic_Product.Swap.wf_swapprod	120
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.Defs.complement_inverse	120	0	synth with cache (only 1: reflexivity).	0.006560	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.Defs.StrictOrder_Asymmetric	120
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.Defs.subrelation_symmetric	120
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.Defs.flip.flip_Reflexive	120
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.Defs.flip.flip_Antisymmetric	120	0	synth with cache (only 1: firstorder).	0.009041	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.Defs.flip.flip_PreOrder	120	0	synth with cache (only 1: firstorder).	0.025002	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.Defs.flip.flip_StrictOrder	120	0	synth with cache (only 1: firstorder).	0.019085	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.Defs.flip.flip_PER	120	0	synth with cache (only 1: firstorder).	0.031647	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.Defs.flip.flip_Equivalence	120	0	synth with cache (only 1: firstorder).	0.029756	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.Defs.complement.complement_Irreflexive	120	0	synth with cache (only 1: firstorder).	0.007066	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.Defs.complement.complement_Symmetric	120	0	synth with cache (only 1: firstorder).	0.006849	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.predicate_equivalence_equivalence_obligation_1	120	0.0.0	synth with cache (only 1: induction l; only 1: firstorder; only 1: firstorder).	0.019958	3
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.predicate_equivalence_equivalence_obligation_2	120	0.0.0	synth with cache (only 1: induction l; only 1: firstorder; only 1: firstorder).	0.024643	3
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.predicate_equivalence_equivalence_obligation_3	120
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.predicate_implication_preorder_obligation_1	120	0.0.0	synth with cache (only 1: induction l; only 1: firstorder; only 1: firstorder).	0.017357	3
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.predicate_implication_preorder_obligation_2	120
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.Binary.relation_equivalence_equivalence	120
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.Binary.relation_implication_preorder	120
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.Binary.partial_order_antisym	120
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.Binary.PartialOrder_inverse	120	0	synth with cache (only 1: firstorder).	0.040944	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.subrelation_partial_order_obligation_1	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.StreamMemo.MemoFunction.memo_get_correct	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.StreamMemo.MemoFunction.imemo_get_correct	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.StreamMemo.DependentMemoFunction.dmemo_get_correct	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.StreamMemo.DependentMemoFunction.dimemo_get_correct	120
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Union.WfUnion.strip_commut	120
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Union.WfUnion.Acc_union	120
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Union.WfUnion.wf_union	120	0.0.0.0.0.0	synth with cache (only 1: unfold well_founded; only 1: intros; only 1: apply Acc_union; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets).	0.013435	6
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Clos_Refl_Trans.clos_rt_is_preorder	120
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Clos_Refl_Trans.clos_rt_idempotent	120
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Clos_Refl_Sym_Trans.clos_rt_clos_rst	120	0.0.0.0.0.0.0	synth with cache (only 1: red; only 1: induction 1; only 1: auto with sets; only 1: auto with sets; only 1: apply rst_trans with y; only 1: auto with sets; only 1: auto with sets).	0.010961	7
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Clos_Refl_Sym_Trans.clos_r_clos_rt	120	0.0.0.0	synth with cache (only 1: induction 1; only 1: constructor; only 1: assumption; only 1: auto with sets).	0.008113	4
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Clos_Refl_Sym_Trans.clos_rt_t	120
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Clos_Refl_Sym_Trans.clos_rst_is_equiv	120
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Clos_Refl_Sym_Trans.clos_rst_idempotent	120	0.0.0.0.0.0.0.0	synth with cache (only 1: red; only 1: induction 1; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets; only 1: apply rst_trans with y; only 1: auto with sets; only 1: auto with sets).	0.012813	8
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_t1n_trans	120
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_trans_t1n	120
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_trans_t1n_iff	120	0.0.0	synth with cache (only 1: split; only 1: apply clos_trans_t1n; only 1: apply clos_t1n_trans).	0.008302	3
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_tn1_trans	120	0.0.0.0.0.0.0	synth with cache (only 1: induction 1; only 1: left; only 1: assumption; only 1: right with y; only 1: auto; only 1: left; only 1: assumption).	0.011158	7
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_trans_tn1	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction 1; only 1: left; only 1: assumption; only 1: elim IHclos_trans2; only 1: intros ?; only 1: right with y; only 1: auto; only 1: auto; only 1: intros; only 1: right with y0; only 1: auto; only 1: auto).	0.019227	12
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_trans_tn1_iff	120	0.0.0	synth with cache (only 1: split; only 1: apply clos_trans_tn1; only 1: apply clos_tn1_trans).	0.008858	3
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt1n_step	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: right with y; only 1: assumption; only 1: left).	0.008646	6
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rtn1_step	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: right with x; only 1: assumption; only 1: left).	0.009455	6
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt1n_rt	120
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt_rt1n	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction 1; only 1: apply clos_rt1n_step; only 1: assumption; only 1: left; only 1: generalize IHclos_refl_trans2; only 1: clear IHclos_refl_trans2; only 1: induction IHclos_refl_trans1; only 1: auto; only 1: right with y; only 1: auto; only 1: eapply IHIHclos_refl_trans1; only 1: apply clos_rt1n_rt; only 1: auto; only 1: auto; only 1: auto).	0.022388	15
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt_rt1n_iff	120	0.0.0	synth with cache (only 1: split; only 1: apply clos_rt_rt1n; only 1: apply clos_rt1n_rt).	0.008138	3
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rtn1_rt	120	0.0.0.0.0.0	synth with cache (only 1: induction 1; only 1: auto with sets; only 1: constructor 3 with y; only 1: auto; only 1: constructor 1; only 1: assumption).	0.010692	6
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt_rtn1	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction 1; only 1: right with x; only 1: assumption; only 1: left; only 1: left; only 1: elim IHclos_refl_trans2; only 1: auto; only 1: intros; only 1: right with y0; only 1: auto; only 1: auto).	0.015623	11
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt_rtn1_iff	120	0.0.0	synth with cache (only 1: split; only 1: apply clos_rt_rtn1; only 1: apply clos_rtn1_rt).	0.007071	3
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.Defs.complement_inverse	120	0	synth with cache (only 1: reflexivity).	0.005286	1
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_refl_trans_ind_left	120
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.rt1n_ind_right	120
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_refl_trans_ind_right	120
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.Defs.StrictOrder_Asymmetric	120
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst1n_rst	120
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.Defs.subrelation_symmetric	120
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst1n_trans	120	0.0.0.0.0.0	synth with cache (only 1: induction 1; only 1: auto; only 1: intros; only 1: right with y; only 1: eauto; only 1: eauto).	0.012651	6
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.Defs.flip.flip_Reflexive	120
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.Defs.flip.flip_Antisymmetric	120	0	synth with cache (only 1: firstorder).	0.007083	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.Defs.flip.flip_PreOrder	120	0	synth with cache (only 1: firstorder).	0.013738	1
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst1n_sym	120
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.Defs.flip.flip_StrictOrder	120	0	synth with cache (only 1: firstorder).	0.014650	1
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst_rst1n	120
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst_rst1n_iff	120	0.0.0	synth with cache (only 1: split; only 1: apply clos_rst_rst1n; only 1: apply clos_rst1n_rst).	0.008496	3
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.Defs.flip.flip_PER	120	0	synth with cache (only 1: firstorder).	0.022141	1
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rstn1_rst	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction 1; only 1: auto with sets; only 1: constructor 4 with y; only 1: auto; only 1: case H; only 1: constructor 1; only 1: auto; only 1: constructor 3; only 1: constructor 1; only 1: auto).	0.013681	10
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rstn1_trans	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: induction H0; only 1: auto; only 1: right with y0; only 1: eauto; only 1: eauto).	0.050969	10
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.Defs.flip.flip_Equivalence	120	0	synth with cache (only 1: firstorder).	0.048985	1
coq-tactician-stdlib.8.11.dev	Coq.Sets.Finite_sets.Ensembles_finis_facts.cardinal_invert	120	0.0.0.0.0	synth with cache (only 1: induction 1; only 1: auto; only 1: exists A; only 1: exists x; only 1: auto).	0.018696	5
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.Defs.complement.complement_Irreflexive	120	0	synth with cache (only 1: firstorder).	0.006555	1
coq-tactician-stdlib.8.11.dev	Coq.Sets.Finite_sets.Ensembles_finis_facts.cardinal_elim	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: elim H; only 1: trivial with sets; only 1: trivial with sets).	0.012086	6
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rstn1_sym	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: elim H; only 1: constructor 1; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply clos_rstn1_trans with y0; only 1: right with z; only 1: tauto; only 1: left; only 1: auto).	0.025562	15
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.Defs.complement.complement_Symmetric	120	0	synth with cache (only 1: firstorder).	0.007215	1
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst_rstn1	120
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst_rstn1_iff	120	0.0.0	synth with cache (only 1: split; only 1: apply clos_rst_rstn1; only 1: apply clos_rstn1_rst).	0.008788	3
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.iffT_Reflexive	120	0	synth with cache (only 1: firstorder).	0.006204	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.iffT_Symmetric	120	0	synth with cache (only 1: firstorder).	0.006594	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.iffT_Transitive	120	0	synth with cache (only 1: firstorder).	0.007910	1
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.Binary.relation_equivalence_equivalence	120
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.Binary.relation_implication_preorder	120	0	synth with cache (only 1: firstorder).	0.009250	1
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.clos_trans_transp_permute	120
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.Binary.partial_order_antisym	120
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.Binary.PartialOrder_inverse	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.JMeq.JMeq_sym	120	0.0.0	synth with cache (only 1: intros; only 1: destruct H; only 1: trivial).	0.009449	3
coq-tactician-stdlib.8.11.dev	Coq.Logic.JMeq.JMeq_trans	120	0.0	synth with cache (only 1: destruct 2; only 1: trivial).	0.008100	2
coq-tactician-stdlib.8.11.dev	Coq.Logic.JMeq.JMeq_ind	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: case JMeq_eq with (1 := H0); only 1: trivial).	0.010919	8
coq-tactician-stdlib.8.11.dev	Coq.Logic.JMeq.JMeq_rec	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: case JMeq_eq with (1 := H0); only 1: trivial).	0.010047	8
coq-tactician-stdlib.8.11.dev	Coq.Logic.JMeq.JMeq_rect	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: case JMeq_eq with (1 := H); only 1: trivial).	0.009789	8
coq-tactician-stdlib.8.11.dev	Coq.Logic.JMeq.JMeq_ind_r	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.JMeq.JMeq_rec_r	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.JMeq.JMeq_rect_r	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.JMeq.JMeq_congr	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: case JMeq_eq with (1 := H); only 1: trivial).	0.070774	8
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssreflect.master_key	120	0	synth with cache (only 1: exact tt).	0.005870	1
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssreflect.lock	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssreflect.not_locked_false_eq_true	120	0.0	synth with cache (only 1: unlock; only 1: discriminate).	0.007532	2
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssreflect.unlock	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.JMeq.JMeq_eq_dep_id	120	0.0	synth with cache (only 1: destruct 1; only 1: apply eq_dep_intro).	0.007837	2
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssreflect.locked_withE	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Uniset.defs.leb_refl	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.JMeq.eq_dep_id_JMeq	120	0.0	synth with cache (only 1: destruct 1; only 1: trivial).	0.010001	2
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssreflect.unlock_with	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Uniset.defs.incl_left	120	0.0.0.0.0.0.0	synth with cache (only 1: unfold incl; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: elim H; only 1: auto).	0.011294	7
coq-tactician-stdlib.8.11.dev	Coq.Logic.JMeq.eq_dep_JMeq	120	0.0	synth with cache (only 1: destruct 1; only 1: apply @JMeq_refl).	0.008632	2
coq-tactician-stdlib.8.11.dev	Coq.Sets.Uniset.defs.incl_right	120	0.0.0.0.0.0.0	synth with cache (only 1: unfold incl; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: elim H; only 1: auto).	0.010386	7
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssreflect.nary_congruence	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Uniset.defs.seq_refl	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssreflect.ssr_congr_arrow	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.JMeq.eq_dep_strictly_stronger_JMeq	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssreflect.ApplyIff.iffLR	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Uniset.defs.seq_trans	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssreflect.ApplyIff.iffRL	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Uniset.defs.seq_sym	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssreflect.ApplyIff.iffLRn	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.JMeq.JMeq_eq_dep	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Uniset.defs.union_empty_left	120	0.0.0.0	synth with cache (only 1: unfold seq; only 1: unfold union; only 1: simpl; only 1: auto).	0.010359	4
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssreflect.ApplyIff.iffRLn	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Uniset.defs.union_empty_right	120	0.0.0.0.0.0.0	synth with cache (only 1: unfold seq; only 1: unfold union; only 1: simpl; only 1: intros ?; only 1: intros ?; only 1: rewrite orb_false_r; only 1: auto).	0.022909	7
coq-tactician-stdlib.8.11.dev	Coq.Sets.Uniset.defs.union_comm	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssreflect.abstract_context	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Uniset.defs.union_ass	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Uniset.defs.seq_left	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Uniset.defs.seq_right	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Uniset.defs.union_rotate	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Uniset.defs.seq_congr	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply cong_congr; only 1: auto; only 1: auto; only 1: exact seq_trans; only 1: auto; only 1: auto).	0.016210	7
coq-tactician-stdlib.8.11.dev	Coq.Sets.Uniset.defs.union_perm_left	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Uniset.defs.uniset_twist1	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply twist; only 1: auto; only 1: auto; only 1: auto; only 1: auto; only 1: exact seq_trans; only 1: auto).	0.018036	8
coq-tactician-stdlib.8.11.dev	Coq.Sets.Uniset.defs.uniset_twist2	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Uniset.defs.treesort_twist1	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Uniset.defs.treesort_twist2	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_2_facts.Rstar_reflexive	120	0	synth with cache (only 1: auto with sets).	0.006769	1
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_2_facts.Rplus_contains_R	120	0	synth with cache (only 1: auto with sets).	0.006778	1
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_2_facts.Rstar_contains_R	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: red; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply Rstar_n with y; only 1: auto with sets; only 1: auto with sets).	0.011601	9
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_2_facts.Rstar_contains_Rplus	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_2_facts.Rstar_transitive	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: red; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: elim H; only 1: auto with sets; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply Rstar_n with y0; only 1: auto with sets; only 1: auto with sets).	0.024213	19
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_2_facts.Rstar_cases	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: elim H; only 1: auto with sets; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: right; only 1: exists y0; only 1: auto with sets).	0.032989	16
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Well_Ordering.WellOrdering.wf_WO	120
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Well_Ordering.Characterisation_wf_relations.wof	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_2_facts.Rstar_equiv_Rstar1	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: generalize Rstar_contains_R; only 1: intros ?; only 1: red in H; only 1: intros ?; only 1: intros ?; only 1: unfold same_relation; only 1: unfold contains; only 1: split; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: elim H0; only 1: auto with sets; only 1: auto with sets; only 1: generalize Rstar_transitive; only 1: intros ?; only 1: red in H1; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply H1 with y0; only 1: auto with sets; only 1: auto with sets; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: elim H0; only 1: auto with sets; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply Rstar1_n with y0; only 1: auto with sets; only 1: auto with sets).	0.093218	41
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_2_facts.Rsym_imp_Rstarsym	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: red; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: elim H0; only 1: auto with sets; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: generalize Rstar_transitive; only 1: intros ?; only 1: red in H4; only 1: apply H4 with y0; only 1: auto with sets; only 1: apply Rstar_n with x0; only 1: auto with sets; only 1: auto with sets).	0.043175	23
coq-tactician-stdlib.8.11.dev	Coq.Sets.Partial_Order.Partial_order_facts.Strict_Rel_Transitive_with_Rel	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_2_facts.Sstar_contains_Rstar	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold contains; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: elim H0; only 1: auto with sets; only 1: generalize Rstar_transitive; only 1: intros ?; only 1: red in H1; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply H1 with y0; only 1: auto with sets; only 1: auto with sets).	0.066497	22
coq-tactician-stdlib.8.11.dev	Coq.Sets.Partial_Order.Partial_order_facts.Strict_Rel_Transitive_with_Rel_left	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Strict_Rel_of at 1; only 1: red; only 1: elim D; only 1: simpl; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: elim PO_cond4; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: split; only 1: apply H0 with (y := y); only 1: tauto; only 1: tauto; only 1: red; only 1: intros ?; only 1: elim H3; only 1: intros ?; only 1: intros ?; only 1: apply H6; only 1: clear H3; only 1: apply H1; only 1: auto; only 1: rewrite <- H4; only 1: auto).	0.055877	32
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_2_facts.star_monotone	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Partial_Order.Partial_order_facts.Strict_Rel_Transitive	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_2_facts.RstarRplus_RRstar	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: generalize Rstar_contains_Rplus; only 1: intros ?; only 1: red in H; only 1: generalize Rstar_transitive; only 1: intros ?; only 1: red in H0; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: elim H1; only 1: intros ?; only 1: intros ?; only 1: elim H2; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: exists y0; only 1: auto with sets; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: exists y0; only 1: auto with sets; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: exists y0; only 1: split; only 1: assumption; only 1: apply H0 with z0; only 1: auto with sets; only 1: auto with sets).	0.173678	42
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_2_facts.Lemma1	120
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Transitive_Closure.Wf_Transitive_Closure.incl_clos_trans	120
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Transitive_Closure.Wf_Transitive_Closure.Acc_clos_trans	120
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Transitive_Closure.Wf_Transitive_Closure.Acc_inv_trans	120	0.0.0.0.0.0	synth with cache (only 1: induction 1; only 1: intros ?; only 1: apply Acc_inv with y; only 1: assumption; only 1: assumption; only 1: auto with sets).	0.011598	6
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Transitive_Closure.Wf_Transitive_Closure.wf_clos_trans	120	0.0	synth with cache (only 1: unfold well_founded; only 1: auto with sets).	0.006631	2
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Disjoint_Union.Wf_Disjoint_Union.acc_A_sum	120
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Disjoint_Union.Wf_Disjoint_Union.acc_B_sum	120
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Disjoint_Union.Wf_Disjoint_Union.wf_disjoint_sum	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.HLevels.forall_hprop	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply @functional_extensionality_dep; only 1: intros ?; only 1: apply H).	0.013493	8
coq-tactician-stdlib.8.11.dev	Coq.Logic.HLevels.and_hprop	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: intros ?; only 1: intros ?; only 1: destruct p; only 1: destruct q; only 1: replace p0 with p; only 1: replace q0 with q; only 1: reflexivity; only 1: apply H0; only 1: apply H).	0.015195	10
coq-tactician-stdlib.8.11.dev	Coq.Logic.HLevels.impl_hprop	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply @functional_extensionality; only 1: intros; only 1: apply H).	0.009688	8
coq-tactician-stdlib.8.11.dev	Coq.Logic.HLevels.false_hprop	120	0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: contradiction).	0.006550	3
coq-tactician-stdlib.8.11.dev	Coq.Logic.HLevels.true_hprop	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: destruct p; only 1: destruct q; only 1: reflexivity).	0.006774	5
coq-tactician-stdlib.8.11.dev	Coq.Logic.HLevels.not_hprop	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply @functional_extensionality; only 1: intros; only 1: contradiction).	0.008285	6
coq-tactician-stdlib.8.11.dev	Coq.Logic.HLevels.hset_hprop	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.HLevels.eq_trans_cancel	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.HLevels.hset_hOneType	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.HLevels.hprop_hprop	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.HLevels.hprop_hset	120	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply @functional_extensionality_dep; only 1: intros ?; only 1: apply @functional_extensionality_dep; only 1: intros ?; only 1: apply @functional_extensionality_dep; only 1: intros ?; only 1: apply @functional_extensionality_dep; only 1: intros ?; only 1: apply hset_hOneType; only 1: exact p).	0.016901	13
coq-tactician-stdlib.8.11.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Extension	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Noone_in_empty	120	0.0	synth with cache (only 1: red; only 1: destruct 1).	0.006832	2
coq-tactician-stdlib.8.11.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Included_Empty	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: red; only 1: intros ?; only 1: intros ?; only 1: elim H).	0.008144	5
coq-tactician-stdlib.8.11.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Add_intro1	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Add_intro2	120	0.0	synth with cache (only 1: unfold Add at 1; only 1: auto with sets).	0.006965	2
coq-tactician-stdlib.8.11.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Inhabited_add	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Inhabited_not_empty	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Add_not_Empty	120	0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply Inhabited_not_empty; only 1: apply Inhabited_add).	0.007639	4
coq-tactician-stdlib.8.11.dev	Coq.Sets.Constructive_sets.Ensembles_facts.not_Empty_Add	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Singleton_inv	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Singleton_intro	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite H; only 1: trivial with sets).	0.009811	5
coq-tactician-stdlib.8.11.dev	Coq.Logic.Hurkens.Generic.Paradox.Omega	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Union_inv	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: elim H; only 1: auto with sets; only 1: auto with sets).	0.014310	7
coq-tactician-stdlib.8.11.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Add_inv	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: induction H; only 1: left; only 1: assumption; only 1: right; only 1: apply Singleton_inv; only 1: assumption).	0.013948	10
coq-tactician-stdlib.8.11.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Intersection_inv	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: elim H; only 1: auto with sets).	0.011371	6
coq-tactician-stdlib.8.11.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Couple_inv	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: elim H; only 1: auto with sets; only 1: auto with sets).	0.012897	7
coq-tactician-stdlib.8.11.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Setminus_intro	120	0.0.0	synth with cache (only 1: unfold Setminus at 1; only 1: red; only 1: auto with sets).	0.009349	3
coq-tactician-stdlib.8.11.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Strict_Included_intro	120	0	synth with cache (only 1: auto with sets).	0.006556	1
coq-tactician-stdlib.8.11.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Strict_Included_strict	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: red; only 1: intros ?; only 1: elim H; only 1: intros ?; only 1: intros ?; only 1: elim H1; only 1: auto with sets).	0.011119	8
coq-tactician-stdlib.8.11.dev	Coq.Program.Combinators.compose_id_left	120	0.0	synth with cache (only 1: intros; only 1: reflexivity).	0.007203	2
coq-tactician-stdlib.8.11.dev	Coq.Program.Combinators.compose_id_right	120	0.0	synth with cache (only 1: intros; only 1: reflexivity).	0.006790	2
coq-tactician-stdlib.8.11.dev	Coq.Program.Combinators.compose_assoc	120	0.0	synth with cache (only 1: intros; only 1: reflexivity).	0.009148	2
coq-tactician-stdlib.8.11.dev	Coq.Program.Combinators.flip_flip	120	0.0	synth with cache (only 1: intros; only 1: reflexivity).	0.010955	2
coq-tactician-stdlib.8.11.dev	Coq.Logic.Hurkens.Generic.Paradox.lemma1	120
coq-tactician-stdlib.8.11.dev	Coq.Program.Combinators.prod_uncurry_curry	120	0.0	synth with cache (only 1: intros; only 1: reflexivity).	0.008802	2
coq-tactician-stdlib.8.11.dev	Coq.Program.Combinators.prod_curry_uncurry	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.Hurkens.Generic.Paradox.lemma2	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.Hurkens.Generic.Paradox.paradox	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.Hurkens.NoRetractToImpredicativeUniverse.Paradox.paradox	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.Hurkens.NoRetractToModalProposition.Paradox.strength	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.Hurkens.NoRetractToModalProposition.Paradox.modal	120	0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct P; only 1: cbn; only 1: exact p).	0.008149	4
coq-tactician-stdlib.8.11.dev	Coq.Logic.Hurkens.NoRetractToModalProposition.Paradox.Forall	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.Hurkens.NoRetractToModalProposition.Paradox.paradox	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.Hurkens.NoRetractToNegativeProp.Paradox.paradox	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.Hurkens.NoRetractFromSmallPropositionToProp.MParadox.mparadox	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.Hurkens.NoRetractFromSmallPropositionToProp.Paradox.paradox	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.Hurkens.NoRetractFromTypeToProp.Paradox.paradox	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.Hurkens.TypeNeqSmallType.Paradox.up_down	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.Hurkens.TypeNeqSmallType.Paradox.paradox	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.Hurkens.PropNeqType.paradox	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ProofIrrelevanceFacts.ProofIrrelevanceTheory.Eq_rect_eq.eq_rect_eq	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ProofIrrelevanceFacts.ProofIrrelevanceTheory.subset_eq_compat	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ProofIrrelevanceFacts.ProofIrrelevanceTheory.subsetT_eq_compat	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.Eqdep_dec.EqdepDec.trans_sym_eq	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.Eqdep_dec.EqdepDec.nu_constant	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.Eqdep_dec.EqdepDec.nu_left_inv_on	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.Eqdep_dec.EqdepDec.eq_proofs_unicity_on	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.Eqdep_dec.EqdepDec.K_dec_on	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.Eqdep_dec.EqdepDec.inj_right_pair_on	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.Eqdep_dec.K_dec_type	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.Eqdep_dec.eq_rect_eq_dec	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.Eqdep_dec.DecidableEqDep.inj_pairP2	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.Eqdep_dec.inj_pair2_eq_dec	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply eq_dep_eq__inj_pairT2; only 1: apply eq_rect_eq__eq_dep_eq; only 1: unfold Eq_rect_eq; only 1: unfold Eq_rect_eq_on; only 1: intros; only 1: apply eq_rect_eq_dec; only 1: apply X).	0.023954	9
coq-tactician-stdlib.8.11.dev	Coq.Logic.Eqdep_dec.UIP_refl_unit	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.Eqdep_dec.UIP_refl_bool	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.Eqdep_dec.UIP_refl_nat	120
coq-tactician-stdlib.8.11.dev	Coq.Bool.IfProp.Iftrue_inv	120
coq-tactician-stdlib.8.11.dev	Coq.Bool.IfProp.Iffalse_inv	120
coq-tactician-stdlib.8.11.dev	Coq.Bool.IfProp.IfProp_true	120
coq-tactician-stdlib.8.11.dev	Coq.Bool.IfProp.IfProp_false	120	0.0.0	synth with cache (only 1: intros; only 1: inversion H; only 1: assumption).	0.007779	3
coq-tactician-stdlib.8.11.dev	Coq.Bool.IfProp.IfProp_or	120	0.0.0	synth with cache (only 1: destruct 1; only 1: auto with bool; only 1: auto with bool).	0.008533	3
coq-tactician-stdlib.8.11.dev	Coq.Bool.IfProp.IfProp_sum	120
coq-tactician-stdlib.8.11.dev	Coq.Bool.BoolEq.Bool_eq_dec.beq_eq_true	120
coq-tactician-stdlib.8.11.dev	Coq.Bool.BoolEq.Bool_eq_dec.beq_eq_not_false	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite <- beq_eq_true; only 1: discriminate; only 1: trivial).	0.010527	6
coq-tactician-stdlib.8.11.dev	Coq.Bool.BoolEq.Bool_eq_dec.beq_false_not_eq	120
coq-tactician-stdlib.8.11.dev	Coq.Bool.BoolEq.Bool_eq_dec.exists_beq_eq	120
coq-tactician-stdlib.8.11.dev	Coq.Bool.BoolEq.Bool_eq_dec.not_eq_false_beq	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: symmetry; only 1: apply not_true_is_false; only 1: intros ?; only 1: apply H; only 1: apply beq_eq; only 1: symmetry; only 1: assumption).	0.011130	10
coq-tactician-stdlib.8.11.dev	Coq.Bool.BoolEq.Bool_eq_dec.eq_dec	120
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrunder.Under_rel.Under_rel_from_rel	120	0	synth with cache (only 1: trivial).	0.008459	1
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrunder.Under_rel.Under_relE	120	0	synth with cache (only 1: trivial).	0.004500	1
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrunder.Under_rel.over_rel	120	0	synth with cache (only 1: trivial).	0.006961	1
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrunder.Under_rel.over_rel_done	120	0.0	synth with cache (only 1: unfold Over_rel; only 1: trivial).	0.007974	2
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrunder.Under_rel.under_rel_done	120	0	synth with cache (only 1: trivial).	0.006316	1
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Inverse_Image.Inverse_Image.Acc_lemma	120
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Inverse_Image.Inverse_Image.Acc_inverse_image	120
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Inverse_Image.Inverse_Image.wf_inverse_image	120	0.0.0.0	synth with cache (only 1: red; only 1: intros; only 1: apply Acc_inverse_image; only 1: auto).	0.007303	4
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Inverse_Image.Inverse_Image.Acc_inverse_rel	120
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Inverse_Image.Inverse_Image.wf_inverse_rel	120
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Inclusion.WfInclusion.Acc_incl	120
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Inclusion.WfInclusion.wf_incl	120	0.0	synth with cache (only 1: unfold well_founded; only 1: auto with sets).	0.006955	2
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_1_facts.Rsym_imp_notRsym	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_1_facts.Equiv_from_preorder	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_1_facts.Equiv_from_order	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: elim H; only 1: auto  10 with sets).	0.010845	5
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_1_facts.contains_is_preorder	120	0	synth with cache (only 1: auto  10 with sets).	0.006463	1
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_1_facts.same_relation_is_equivalence	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_1_facts.cong_reflexive_same_relation	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_1_facts.cong_symmetric_same_relation	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_1_facts.cong_antisymmetric_same_relation	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_1_facts.cong_transitive_same_relation	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: red; only 1: elim H; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply H2; only 1: apply H0 with y; only 1: auto with sets; only 1: auto with sets).	0.029045	18
coq-tactician-stdlib.8.11.dev	Coq.Sets.Permut.Axiomatisation.cong_congr	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Permut.Axiomatisation.comm_right	120	0.0.0	synth with cache (only 1: intros; only 1: apply cong_right; only 1: apply op_comm).	0.008116	3
coq-tactician-stdlib.8.11.dev	Coq.Sets.Permut.Axiomatisation.comm_left	120	0.0.0	synth with cache (only 1: intros; only 1: apply cong_left; only 1: apply op_comm).	0.008315	3
coq-tactician-stdlib.8.11.dev	Coq.Sets.Permut.Axiomatisation.perm_right	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Permut.Axiomatisation.perm_left	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Permut.Axiomatisation.op_rotate	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Permut.Axiomatisation.twist	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.StrictProp.Spr1_inj	120
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.bool_dec	120
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.diff_true_false	120	0	synth with cache (only 1: discriminate).	0.004763	1
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.diff_false_true	120	0	synth with cache (only 1: discriminate).	0.004207	1
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.eq_true_false_abs	120
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.not_true_is_false	120
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.not_false_is_true	120	0.0	synth with cache (only 1: destr_bool; only 1: intuition).	0.007787	2
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.not_true_iff_false	120	0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.011253	3
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.not_false_iff_true	120	0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.012313	3
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.leb_implb	120	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.013789	5
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.eqb_subst	120	0	synth with cache (only 1: destr_bool).	0.009251	1
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.eqb_reflx	120	0	synth with cache (only 1: destr_bool).	0.006419	1
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.eqb_prop	120	0	synth with cache (only 1: destr_bool).	0.010799	1
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.eqb_true_iff	120	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.014861	5
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.eqb_false_iff	120	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.017565	5
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.negb_orb	120	0	synth with cache (only 1: destr_bool).	0.009819	1
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.negb_andb	120	0	synth with cache (only 1: destr_bool).	0.008118	1
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.negb_involutive	120	0	synth with cache (only 1: destr_bool).	0.006746	1
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.negb_involutive_reverse	120	0	synth with cache (only 1: destr_bool).	0.006121	1
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.negb_sym	120	0	synth with cache (only 1: destr_bool).	0.008379	1
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.no_fixpoint_negb	120	0	synth with cache (only 1: destr_bool).	0.006915	1
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.eqb_negb1	120	0	synth with cache (only 1: destr_bool).	0.006527	1
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.eqb_negb2	120	0	synth with cache (only 1: destr_bool).	0.006721	1
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.if_negb	120	0	synth with cache (only 1: destr_bool).	0.008663	1
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.negb_true_iff	120	0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.010301	3
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.negb_false_iff	120	0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.035356	3
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_true_iff	120	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.023809	5
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_false_iff	120	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.019602	5
coq-tactician-stdlib.8.11.dev	Coq.Logic.PropExtensionalityFacts.PredExt_imp_PropExt	120
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_true_elim	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.PropExtensionalityFacts.PredExt_imp_PropFunExt	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply H; only 1: intros ?; only 1: rewrite H0; only 1: easy).	0.023648	9
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_prop	120	0.0.0	synth with cache (only 1: intros; only 1: apply orb_true_iff; only 1: trivial).	0.008349	3
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_true_intro	120	0.0.0	synth with cache (only 1: intros; only 1: apply orb_true_iff; only 1: trivial).	0.008192	3
coq-tactician-stdlib.8.11.dev	Coq.Logic.PropExtensionalityFacts.PropExt_and_PropFunExt_imp_PredExt	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply H0; only 1: intros ?; only 1: apply H; only 1: easy).	0.024268	10
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_false_intro	120	0.0.0	synth with cache (only 1: intros; only 1: subst; only 1: reflexivity).	0.008201	3
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_false_elim	120	0.0.0	synth with cache (only 1: intros; only 1: apply orb_false_iff; only 1: trivial).	0.009120	3
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_diag	120	0	synth with cache (only 1: destr_bool).	0.008009	1
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_true_r	120	0	synth with cache (only 1: destr_bool).	0.008345	1
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_true_l	120	0	synth with cache (only 1: reflexivity).	0.007022	1
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_false_r	120	0	synth with cache (only 1: destr_bool).	0.008209	1
coq-tactician-stdlib.8.11.dev	Coq.Logic.PropExtensionalityFacts.PropExt_and_PropFunExt_iff_PredExt	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.PropExtensionalityFacts.PropExt_imp_ProvPropExt	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply H; only 1: split; only 1: trivial; only 1: trivial).	0.010969	7
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_false_l	120	0	synth with cache (only 1: destr_bool).	0.007056	1
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_negb_r	120	0	synth with cache (only 1: destr_bool).	0.008208	1
coq-tactician-stdlib.8.11.dev	Coq.Logic.PropExtensionalityFacts.PropExt_imp_RefutPropExt	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply H; only 1: split; only 1: easy; only 1: easy).	0.029233	7
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_comm	120	0	synth with cache (only 1: destr_bool).	0.007956	1
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_assoc	120	0	synth with cache (only 1: destr_bool).	0.013876	1
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_true_iff	120	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.022376	5
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_false_iff	120	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.021391	5
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_true_eq	120	0.0	synth with cache (only 1: destr_bool; only 1: auto).	0.012034	2
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_false_intro1	120	0.0.0	synth with cache (only 1: intros; only 1: apply andb_false_iff; only 1: auto).	0.009566	3
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_false_intro2	120	0.0.0	synth with cache (only 1: intros; only 1: apply andb_false_iff; only 1: auto).	0.009031	3
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_false_r	120	0	synth with cache (only 1: destr_bool).	0.007973	1
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_false_l	120	0	synth with cache (only 1: reflexivity).	0.006739	1
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_diag	120	0	synth with cache (only 1: destr_bool).	0.008332	1
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_true_r	120	0	synth with cache (only 1: destr_bool).	0.007990	1
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_true_l	120	0.0	synth with cache (only 1: simpl; only 1: reflexivity).	0.007428	2
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_false_elim	120
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_negb_r	120	0	synth with cache (only 1: destr_bool).	0.008321	1
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.dec_not_not	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.dec_True	120	0.0	synth with cache (only 1: unfold decidable; only 1: auto).	0.005400	2
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_comm	120	0	synth with cache (only 1: destr_bool).	0.009286	1
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.dec_False	120	0.0.0	synth with cache (only 1: unfold decidable; only 1: unfold not; only 1: auto).	0.004885	3
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_assoc	120	0	synth with cache (only 1: destr_bool).	0.012641	1
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.dec_or	120	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.017755	2
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_orb_distrib_r	120	0	synth with cache (only 1: destr_bool).	0.014956	1
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_orb_distrib_l	120	0	synth with cache (only 1: destr_bool).	0.014425	1
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.dec_and	120	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.021805	2
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_andb_distrib_r	120	0	synth with cache (only 1: destr_bool).	0.013641	1
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.dec_not	120	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.010250	2
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.dec_imp	120	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.020006	2
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_andb_distrib_l	120	0	synth with cache (only 1: destr_bool).	0.038855	1
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.dec_iff	120	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.024231	2
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.absorption_andb	120	0	synth with cache (only 1: destr_bool).	0.009575	1
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.absorption_orb	120	0	synth with cache (only 1: destr_bool).	0.008844	1
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.not_not	120	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.008896	2
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.not_or	120	0	synth with cache (only 1: tauto).	0.008909	1
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.xorb_false_r	120	0	synth with cache (only 1: destr_bool).	0.008831	1
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.xorb_false_l	120	0	synth with cache (only 1: destr_bool).	0.007478	1
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.not_and	120	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.029865	2
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.xorb_true_r	120	0	synth with cache (only 1: reflexivity).	0.006496	1
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.xorb_true_l	120	0	synth with cache (only 1: reflexivity).	0.009667	1
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.not_imp	120	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.018515	2
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.xorb_nilpotent	120	0	synth with cache (only 1: destr_bool).	0.009300	1
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.imp_simp	120	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.011919	2
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.xorb_comm	120	0	synth with cache (only 1: destr_bool).	0.011590	1
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.xorb_assoc_reverse	120	0	synth with cache (only 1: destr_bool).	0.014523	1
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.not_iff	120	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.047369	2
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.xorb_eq	120	0	synth with cache (only 1: destr_bool).	0.011089	1
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.xorb_move_l_r_1	120	0	synth with cache (only 1: destr_bool).	0.017482	1
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.not_true_iff	120	0	synth with cache (only 1: tauto).	0.007417	1
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.not_false_iff	120	0	synth with cache (only 1: tauto).	0.007379	1
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.xorb_move_l_r_2	120	0	synth with cache (only 1: destr_bool).	0.014850	1
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.not_not_iff	120	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.011450	2
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.contrapositive	120	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.014534	2
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.xorb_move_r_l_1	120	0	synth with cache (only 1: destr_bool).	0.015241	1
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.or_not_l_iff_1	120	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.022008	2
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.xorb_move_r_l_2	120	0	synth with cache (only 1: destr_bool).	0.014303	1
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.or_not_l_iff_2	120	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.017260	2
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.negb_xorb_l	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.or_not_r_iff_1	120	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.017350	2
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.negb_xorb_r	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.or_not_r_iff_2	120	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.016564	2
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.xorb_negb_negb	120
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.eq_iff_eq_true	120	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.028214	5
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.imp_not_l	120	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.029691	2
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.eq_true_iff_eq	120	0	synth with cache (only 1: apply eq_iff_eq_true).	0.009611	1
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.not_or_iff	120	0	synth with cache (only 1: tauto).	0.014492	1
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.eq_true_negb_classical	120	0.0	synth with cache (only 1: destr_bool; only 1: intuition).	0.010536	2
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.not_and_iff	120	0	synth with cache (only 1: tauto).	0.010117	1
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.eq_true_not_negb	120	0.0	synth with cache (only 1: destr_bool; only 1: intuition).	0.012103	2
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.not_imp_iff	120	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.022175	2
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.absurd_eq_bool	120	0	synth with cache (only 1: contradiction).	0.008770	1
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.absurd_eq_true	120	0	synth with cache (only 1: contradiction).	0.007561	1
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.not_imp_rev_iff	120	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.021998	2
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.trans_eq_bool	120	0	synth with cache (only 1: apply eq_trans).	0.007988	1
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.Is_true_eq_true	120
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.Is_true_eq_left	120
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.Is_true_eq_right	120	0.0.0	synth with cache (only 1: intros; only 1: subst; only 1: auto with bool).	0.009270	3
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.eqb_refl	120	0	synth with cache (only 1: destr_bool).	0.008429	1
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.eqb_eq	120	0.0.0	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.015157	3
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_prop_elim	120	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto; only 1: tauto; only 1: tauto).	0.017030	5
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.dec_functional_relation	120
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_prop_intro	120	0.0	synth with cache (only 1: destr_bool; only 1: tauto).	0.014878	2
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_prop_intro	120	0.0.0.0	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto; only 1: tauto).	0.015180	4
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_prop_elim	120	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: auto; only 1: auto; only 1: auto; only 1: auto).	0.014852	5
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.eq_bool_prop_intro	120	0.0.0	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.018059	3
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.eq_bool_prop_elim	120	0.0.0	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.046128	3
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.negb_prop_elim	120	0.0.0	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.013106	3
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.negb_prop_intro	120	0.0	synth with cache (only 1: destr_bool; only 1: tauto).	0.013384	2
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.negb_prop_classical	120	0.0	synth with cache (only 1: destr_bool; only 1: tauto).	0.012656	2
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.negb_prop_involutive	120	0.0.0	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.013159	3
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_if	120	0	synth with cache (only 1: destr_bool).	0.015093	1
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.negb_if	120	0	synth with cache (only 1: destr_bool).	0.013145	1
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_lazy_alt	120	0	synth with cache (only 1: reflexivity).	0.009699	1
coq-tactician-stdlib.8.11.dev	Coq.Logic.PropFacts.injection_is_involution_in_Prop	120
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_lazy_alt	120	0	synth with cache (only 1: reflexivity).	0.008745	1
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.reflect_iff	120	0.0.0.0	synth with cache (only 1: destruct 1; only 1: intuition; only 1: intuition; only 1: discriminate).	0.017488	4
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.iff_reflect	120	0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.018606	3
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.reflect_dec	120	0.0.0	synth with cache (only 1: destruct 1; only 1: auto; only 1: auto).	0.014057	3
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.eqb_spec	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct b; only 1: destruct b'; only 1: constructor; only 1: auto; only 1: constructor; only 1: discriminate; only 1: destruct b'; only 1: constructor; only 1: discriminate; only 1: constructor; only 1: auto).	0.018392	11
coq-tactician-stdlib.8.11.dev	Coq.Logic.ExtensionalityFacts.diagonal_projs_same_behavior	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ExtensionalityFacts.diagonal_inverse1	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ExtensionalityFacts.diagonal_inverse2	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ExtensionalityFacts.FunctExt_iff_EqDeltaProjs	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ExtensionalityFacts.FunctExt_UniqInverse	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ExtensionalityFacts.UniqInverse_EqDeltaProjs	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.ExtensionalityFacts.FunctExt_iff_UniqInverse	120	0.1.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intros ?; only 1: intros *; only 1: intros ?; only 1: destruct H0; only 1: intros ?; only 1: destruct H2; only 1: apply H; only 1: intros; only 1: congruence; only 1: intros ?; only 1: apply FunctExt_iff_EqDeltaProjs; only 1: apply UniqInverse_EqDeltaProjs; only 1: trivial).	0.046187	16
coq-tactician-stdlib.8.11.dev	Coq.Logic.ExtensionalityFacts.FunctExt_BijComp	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros *; only 1: intros ?; only 1: destruct H0; only 1: split; only 1: unfold action; only 1: intros ?; only 1: apply H; only 1: intros ?; only 1: rewrite H1; only 1: reflexivity; only 1: unfold action; only 1: intros ?; only 1: apply H; only 1: intros ?; only 1: rewrite H0; only 1: reflexivity).	0.049443	17
coq-tactician-stdlib.8.11.dev	Coq.Logic.ExtensionalityFacts.BijComp_FunctExt	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.Streams.Streams.unfold_Stream	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.Streams.Streams.tl_nth_tl	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.Streams.Streams.Str_nth_tl_plus	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.Streams.Streams.Str_nth_plus	120	0.0.0.0	synth with cache (only 1: intros; only 1: unfold Str_nth; only 1: rewrite Str_nth_tl_plus; only 1: trivial with datatypes).	0.009487	4
coq-tactician-stdlib.8.11.dev	Coq.Lists.Streams.Streams.EqSt_reflex	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.Streams.Streams.sym_EqSt	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.Streams.Streams.trans_EqSt	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.Streams.Streams.eqst_ntheq	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.Streams.Streams.ntheq_eqst	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.Streams.Streams.Stream_Properties.ForAll_Str_nth_tl	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.Streams.Streams.Stream_Properties.Co_Induction_ForAll.ForAll_coind	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.Streams.Map.Str_nth_tl_map	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.Streams.Map.Str_nth_map	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: unfold Str_nth; only 1: rewrite Str_nth_tl_map; only 1: reflexivity).	0.011650	5
coq-tactician-stdlib.8.11.dev	Coq.Logic.Berardi.Berardis_paradox.AC_IF	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.Berardi.Berardis_paradox.Retracts.AC	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.Streams.Map.ForAll_map	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.Streams.Map.Exists_map	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: induction H; only 1: left; only 1: firstorder; only 1: right; only 1: firstorder).	0.014306	8
coq-tactician-stdlib.8.11.dev	Coq.Logic.Berardi.Berardis_paradox.L1	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.Berardi.Berardis_paradox.retract_pow_U_U	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.Berardi.Berardis_paradox.not_has_fixpoint	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.Streams.Zip.Str_nth_tl_zipWith	120
coq-tactician-stdlib.8.11.dev	Coq.Lists.Streams.Zip.Str_nth_zipWith	120	0.0.0.0	synth with cache (only 1: intros; only 1: unfold Str_nth; only 1: rewrite Str_nth_tl_zipWith; only 1: reflexivity).	0.010561	4
coq-tactician-stdlib.8.11.dev	Coq.Logic.Berardi.Berardis_paradox.classical_proof_irrelevance	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.Dependent_Equality.eq_dep_sym	120	0.0	synth with cache (only 1: destruct 1; only 1: auto).	0.007571	2
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.Dependent_Equality.eq_dep_trans	120	0.0	synth with cache (only 1: destruct 1; only 1: auto).	0.008731	2
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.Dependent_Equality.eq_dep1_dep	120	0.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct h using eq_indd; only 1: rewrite H; only 1: apply eq_dep_intro).	0.071067	4
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.Dependent_Equality.eq_dep_dep1	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.eq_sigT_eq_dep	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.eq_dep_eq_sigT	120	0.0	synth with cache (only 1: destruct 1; only 1: reflexivity).	0.011900	2
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.eq_sigT_iff_eq_dep	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.eq_sig_eq_dep	120	0.0.0	synth with cache (only 1: intros; only 1: dependent rewrite H; only 1: apply eq_dep_intro).	0.010704	3
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.eq_dep_eq_sig	120	0.0	synth with cache (only 1: destruct 1; only 1: reflexivity).	0.010598	2
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.eq_sig_iff_eq_dep	120	0.0.0	synth with cache (only 1: split; only 1: auto using eq_sig_eq_dep, eq_dep_eq_sig; only 1: auto using eq_sig_eq_dep, eq_dep_eq_sig).	0.012331	3
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.eq_sigT_sig_eq	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.eq_sigT_fst	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.eq_sigT_snd	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.eq_sig_fst	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.eq_sig_snd	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.FunctionalExtensionality.equal_f	120	0.0.0	synth with cache (only 1: intros; only 1: rewrite H; only 1: auto).	0.010212	3
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.Equivalences.eq_rect_eq_on__eq_dep1_eq_on	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.FunctionalExtensionality.equal_f_dep	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.Equivalences.eq_rect_eq_on__eq_dep_eq_on	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.FunctionalExtensionality.functional_extensionality	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.Equivalences.eq_dep_eq_on__UIP_on	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.FunctionalExtensionality.forall_extensionality	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.Equivalences.UIP_on__UIP_refl_on	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: red; only 1: intros; only 1: symmetry; only 1: apply H).	0.009765	5
coq-tactician-stdlib.8.11.dev	Coq.Logic.FunctionalExtensionality.forall_extensionalityP	120	0.0.0	synth with cache (only 1: apply @functional_extensionality in H; only 1: destruct H; only 1: reflexivity).	0.007585	3
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.Equivalences.UIP_refl_on__Streicher_K_on	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: red; only 1: intros; only 1: rewrite H; only 1: assumption).	0.009755	5
coq-tactician-stdlib.8.11.dev	Coq.Logic.FunctionalExtensionality.forall_extensionalityS	120	0.0.0	synth with cache (only 1: apply @functional_extensionality in H; only 1: destruct H; only 1: reflexivity).	0.009219	3
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.Equivalences.Streicher_K_on__eq_rect_eq_on	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: red; only 1: intros; only 1: apply H; only 1: reflexivity).	0.013445	5
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyClasses.mkapp2	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyClasses.mkapp	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.FunctionalExtensionality.functional_extensionality_dep_good_refl	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyClasses.mkapp0	120
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyClasses.mkrel	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.FunctionalExtensionality.forall_sig_eq_rect	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.FunctionalExtensionality.forall_eq_rect_comp	120	0.0.0.0.0	synth with cache (only 1: unfold forall_eq_rect; only 1: unfold forall_sig_eq_rect; only 1: simpl; only 1: rewrite @functional_extensionality_dep_good_refl; only 1: reflexivity).	0.033950	5
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.UIP_shift_on	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.Corollaries.eq_dep_eq_on__inj_pair2_on	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: red; only 1: intros; only 1: apply H; only 1: apply eq_sigT_eq_dep; only 1: assumption).	0.012040	6
coq-tactician-stdlib.8.11.dev	Coq.Logic.FunctionalExtensionality.f_equal__functional_extensionality_dep_good	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.FunctionalExtensionality.f_equal__functional_extensionality_dep_good__fun	120	0.0.0	synth with cache (only 1: apply @functional_extensionality_dep_good; only 1: intros ?; only 1: apply @f_equal__functional_extensionality_dep_good).	0.012785	3
coq-tactician-stdlib.8.11.dev	Coq.Logic.FunctionalExtensionality.eta_expansion_dep	120	0	synth with cache (only 1: reflexivity).	0.006288	1
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.f_eq_dep	120
coq-tactician-stdlib.8.11.dev	Coq.Logic.FunctionalExtensionality.eta_expansion	120	0	synth with cache (only 1: apply @eta_expansion_dep).	0.005970	1
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.eq_dep_non_dep	120	0.0	synth with cache (only 1: intros * []; only 1: reflexivity).	0.008883	2
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.f_eq_dep_non_dep	120	0.0	synth with cache (only 1: intros * []; only 1: reflexivity).	0.011323	2
coq-tactician-stdlib.8.11.dev	Coq.Bool.Sumbool.sumbool_of_bool	120
coq-tactician-stdlib.8.11.dev	Coq.Bool.Sumbool.bool_eq_rec	120
coq-tactician-stdlib.8.11.dev	Coq.Bool.Sumbool.bool_eq_ind	120
coq-tactician-stdlib.8.11.dev	Coq.Bool.Sumbool.connectives.sumbool_and	120
coq-tactician-stdlib.8.11.dev	Coq.Bool.Sumbool.connectives.sumbool_or	120	0.0.0.0.0.0.0	synth with cache (only 1: case H1; only 1: case H2; only 1: auto; only 1: auto; only 1: case H2; only 1: auto; only 1: auto).	0.010649	7
coq-tactician-stdlib.8.11.dev	Coq.Bool.Sumbool.connectives.sumbool_not	120	0.0.0	synth with cache (only 1: case H1; only 1: auto; only 1: auto).	0.006382	3
coq-tactician-stdlib.8.11.dev	Coq.Bool.Sumbool.bool_of_sumbool	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: elim H; only 1: intros ?; only 1: exists true; only 1: assumption; only 1: intros ?; only 1: exists false; only 1: assumption).	0.012253	10
coq-tactician-stdlib.8.11.dev	Coq.Bool.DecBool.ifdec_left	120
coq-tactician-stdlib.8.11.dev	Coq.Bool.DecBool.ifdec_right	120	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: case H; only 1: intros ?; only 1: absurd A; only 1: trivial; only 1: trivial; only 1: auto).	0.013024	7
coq-tactician-stdlib.8.11.dev	Coq.Init.Byte.of_bits_to_bits	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.pred_Sn	120	0.0	synth with cache (only 1: simpl; only 1: auto).	0.005673	2
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.not_eq_S	120	0.0	synth with cache (only 1: red; only 1: auto).	0.006483	2
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.O_S	120	0	synth with cache (only 1: discriminate).	0.004926	1
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.n_Sn	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.plus_n_O	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.plus_O_n	120	0	synth with cache (only 1: reflexivity).	0.004618	1
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.plus_n_Sm	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.010060	7
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.plus_Sn_m	120	0	synth with cache (only 1: reflexivity).	0.005479	1
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.mult_n_O	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.mult_n_Sm	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.le_pred	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.le_S_n	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.le_0_n	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.le_n_S	120	0.0.0.0	synth with cache (only 1: induction 1; only 1: constructor; only 1: constructor; only 1: trivial).	0.007570	4
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.nat_case	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.nat_double_ind	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.max_l	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.max_r	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.min_l	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.min_r	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.nat_rect_succ_r	120	0.0.0.0.0.0	synth with cache (only 1: induction n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite <- IHn; only 1: trivial).	0.012848	6
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.nat_rect_plus	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Byte.to_bits_of_bits	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT_eta	120	0.0	synth with cache (only 1: destruct p; only 1: reflexivity).	0.008819	2
coq-tactician-stdlib.8.11.dev	Coq.Init.Tactics.decide_left	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Tactics.decide_right	120	0.0.0.0	synth with cache (only 1: intros; only 1: destruct decide; only 1: contradiction; only 1: apply H0).	0.009891	4
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig_eta	120	0.0	synth with cache (only 1: destruct p; only 1: reflexivity).	0.009646	2
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT2_eta	120	0.0	synth with cache (only 1: destruct p; only 1: reflexivity).	0.015230	2
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig2_eta	120	0.0	synth with cache (only 1: destruct p; only 1: reflexivity).	0.013010	2
coq-tactician-stdlib.8.11.dev	Coq.Init.Wf.Well_founded.Acc_inv	120	0.0	synth with cache (only 1: destruct 1; only 1: trivial).	0.006328	2
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.exists_to_inhabited_sig	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.inhabited_sig_to_exists	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct H; only 1: destruct X; only 1: exists x; only 1: exact p).	0.008947	5
coq-tactician-stdlib.8.11.dev	Coq.Init.Wf.Well_founded.well_founded_induction_type	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply Acc_rect; only 1: auto; only 1: auto).	0.008850	4
coq-tactician-stdlib.8.11.dev	Coq.Init.Wf.Well_founded.well_founded_induction	120	0	synth with cache (only 1: exact well_founded_induction_type).	0.005511	1
coq-tactician-stdlib.8.11.dev	Coq.Init.Wf.Well_founded.well_founded_ind	120	0	synth with cache (only 1: exact well_founded_induction_type).	0.005331	1
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT.eq_existT_uncurried	120	0.0.0.0	synth with cache (only 1: destruct pq; only 1: destruct x; only 1: destruct e; only 1: reflexivity).	0.013271	4
coq-tactician-stdlib.8.11.dev	Coq.Init.Wf.Well_founded.FixPoint.Fix_F_eq	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Wf.Well_founded.FixPoint.Fix_F_inv	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT.eq_sigT_uncurried	120	0.0.0.0.0	synth with cache (only 1: destruct u; only 1: destruct v; only 1: simpl in *; only 1: apply @eq_existT_uncurried; only 1: exact pq).	0.022186	5
coq-tactician-stdlib.8.11.dev	Coq.Init.Wf.Well_founded.FixPoint.Fix_eq	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: unfold Fix; only 1: rewrite <- Fix_F_eq; only 1: apply F_ext; only 1: intros; only 1: apply Fix_F_inv).	0.010743	6
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT.eq_existT_curried	120	0.0.0	synth with cache (only 1: destruct p; only 1: destruct q; only 1: reflexivity).	0.012104	3
coq-tactician-stdlib.8.11.dev	Coq.Init.Wf.Well_founded_2.well_founded_induction_type_2	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply Fix_F_2; only 1: auto; only 1: auto).	0.012275	4
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT.eq_existT_curried_map	120	0.0.0	synth with cache (only 1: destruct p; only 1: destruct q; only 1: reflexivity).	0.032618	3
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT.eq_existT_curried_trans	120	0.0.0	synth with cache (only 1: destruct p'; only 1: destruct q'; only 1: reflexivity).	0.018908	3
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT.eq_existT_curried_congr	120	0.0.0	synth with cache (only 1: destruct r; only 1: destruct 1; only 1: reflexivity).	0.018369	3
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic_Type.identity_is_a_congruence.identity_sym	120	0.0	synth with cache (only 1: destruct 1; only 1: trivial).	0.005788	2
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic_Type.identity_is_a_congruence.identity_trans	120	0.0	synth with cache (only 1: destruct 2; only 1: trivial).	0.005283	2
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic_Type.identity_is_a_congruence.identity_congr	120	0.0	synth with cache (only 1: destruct 1; only 1: trivial).	0.004823	2
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic_Type.identity_is_a_congruence.not_identity_sym	120	0.0.0.0.0.0	synth with cache (only 1: red; only 1: intros ?; only 1: intros ?; only 1: apply H; only 1: destruct H0; only 1: trivial).	0.007435	6
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT.eq_sigT_uncurried_iff	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic_Type.identity_ind_r	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic_Type.identity_rec_r	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: case identity_sym with (1 := H0); only 1: trivial).	0.009983	8
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic_Type.identity_rect_r	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: case identity_sym with (1 := H); only 1: trivial).	0.010948	8
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT.eq_sigT_rect	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT.rew_sigT	120	0.0.0	synth with cache (only 1: destruct H; only 1: destruct u; only 1: reflexivity).	0.020467	3
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.andb_prop	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.andb_true_intro	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.eq_true_ind_r	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.eq_true_rec_r	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H0 in H; only 1: assumption).	0.007983	6
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Conjunction.proj1	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Conjunction.proj2	120	0.0	synth with cache (only 1: destruct 1; only 1: trivial).	0.003794	2
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.eq_true_rect_r	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H in X; only 1: assumption).	0.007728	6
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Equivalence.iff_refl	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Equivalence.iff_trans	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Equivalence.iff_sym	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: split; only 1: auto; only 1: auto).	0.007219	7
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig.eq_exist_uncurried	120	0.0.0.0	synth with cache (only 1: destruct pq; only 1: destruct e; only 1: destruct x; only 1: reflexivity).	0.012906	4
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.surjective_pairing	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.and_iff_compat_l	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.injective_projections	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.and_iff_compat_r	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: split; only 1: intros ?; only 1: destruct H1; only 1: split; only 1: apply H; only 1: assumption; only 1: assumption; only 1: intros ?; only 1: destruct H1; only 1: split; only 1: apply H0; only 1: assumption; only 1: assumption).	0.010474	18
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig.eq_sig_uncurried	120	0.0.0.0.0	synth with cache (only 1: destruct u; only 1: destruct v; only 1: simpl in *; only 1: apply @eq_exist_uncurried; only 1: exact pq).	0.021894	5
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.or_iff_compat_l	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.pair_equal_spec	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.or_iff_compat_r	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: split; only 1: intros ?; only 1: destruct H1; only 1: left; only 1: apply H; only 1: assumption; only 1: right; only 1: assumption; only 1: intros ?; only 1: destruct H1; only 1: left; only 1: apply H0; only 1: assumption; only 1: right; only 1: assumption).	0.011619	20
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.imp_iff_compat_l	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: split; only 1: intros ?; only 1: intros ?; only 1: apply H; only 1: apply H1; only 1: assumption; only 1: intros ?; only 1: intros ?; only 1: apply H0; only 1: apply H1; only 1: assumption).	0.010900	16
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.rew_pair	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.imp_iff_compat_r	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: split; only 1: intros ?; only 1: intros ?; only 1: apply H1; only 1: apply H0; only 1: assumption; only 1: intros ?; only 1: intros ?; only 1: apply H1; only 1: apply H; only 1: assumption).	0.011432	16
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.not_iff_compat	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.comparison_eq_stable	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.CompOpp_involutive	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.neg_false	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.CompOpp_inj	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.and_cancel_l	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: split; only 1: intros ?; only 1: destruct H1; only 1: split; only 1: intros; only 1: apply H1; only 1: split; only 1: apply H; only 1: assumption; only 1: assumption; only 1: intros; only 1: apply H2; only 1: split; only 1: apply H0; only 1: assumption; only 1: assumption; only 1: apply and_iff_compat_l).	0.016996	22
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.CompOpp_iff	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intros; only 1: apply CompOpp_inj; only 1: rewrite CompOpp_involutive; only 1: auto; only 1: intros; only 1: apply CompOpp_inj; only 1: rewrite CompOpp_involutive; only 1: auto).	0.010606	9
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig.eq_sig_rect	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.and_cancel_r	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: split; only 1: intros ?; only 1: destruct H1; only 1: split; only 1: intros; only 1: apply H1; only 1: split; only 1: assumption; only 1: apply H; only 1: assumption; only 1: intros; only 1: apply H2; only 1: split; only 1: assumption; only 1: apply H0; only 1: assumption; only 1: apply and_iff_compat_r).	0.015487	22
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.and_comm	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros ?; only 1: destruct H; only 1: split; only 1: assumption; only 1: assumption; only 1: intros ?; only 1: destruct H; only 1: split; only 1: assumption; only 1: assumption).	0.008234	12
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.and_assoc	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros ?; only 1: destruct H; only 1: destruct H; only 1: split; only 1: assumption; only 1: split; only 1: assumption; only 1: assumption; only 1: intros ?; only 1: destruct H; only 1: destruct H0; only 1: split; only 1: split; only 1: assumption; only 1: assumption; only 1: assumption).	0.010977	18
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.CompareSpec2Type	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.CompSpec2Type	120	0.0.0	synth with cache (only 1: intros; only 1: apply CompareSpec2Type; only 1: assumption).	0.008287	3
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.or_cancel_l	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: split; only 1: intros ?; only 1: destruct H1; only 1: split; only 1: intros; only 1: destruct H1; only 1: right; only 1: assumption; only 1: destruct H; only 1: assumption; only 1: assumption; only 1: assumption; only 1: intros; only 1: destruct H2; only 1: right; only 1: assumption; only 1: destruct H0; only 1: assumption; only 1: assumption; only 1: assumption; only 1: apply or_iff_compat_l).	0.017944	26
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig.eq_sig_uncurried_iff	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig.rew_sig	120	0.0.0	synth with cache (only 1: destruct H; only 1: destruct u; only 1: reflexivity).	0.019560	3
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.or_cancel_r	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: split; only 1: intros ?; only 1: destruct H1; only 1: split; only 1: intros; only 1: destruct H1; only 1: left; only 1: assumption; only 1: assumption; only 1: destruct H; only 1: assumption; only 1: assumption; only 1: intros; only 1: destruct H2; only 1: left; only 1: assumption; only 1: assumption; only 1: destruct H0; only 1: assumption; only 1: assumption; only 1: apply or_iff_compat_r).	0.020054	26
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.or_comm	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros ?; only 1: destruct H; only 1: right; only 1: assumption; only 1: left; only 1: assumption; only 1: intros ?; only 1: destruct H; only 1: right; only 1: assumption; only 1: left; only 1: assumption).	0.007731	14
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.or_assoc	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros ?; only 1: destruct H; only 1: destruct H; only 1: left; only 1: assumption; only 1: right; only 1: left; only 1: assumption; only 1: right; only 1: right; only 1: assumption; only 1: intros ?; only 1: destruct H; only 1: left; only 1: left; only 1: assumption; only 1: destruct H; only 1: left; only 1: right; only 1: assumption; only 1: right; only 1: assumption).	0.063243	24
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.iff_and	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: split; only 1: intros; only 1: apply H; only 1: assumption; only 1: intros; only 1: apply H0; only 1: assumption).	0.009226	11
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.iff_to_and	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros ?; only 1: destruct H; only 1: split; only 1: intros; only 1: apply H; only 1: assumption; only 1: intros; only 1: apply H0; only 1: assumption; only 1: intros ?; only 1: destruct H; only 1: split; only 1: intros; only 1: apply H; only 1: assumption; only 1: intros; only 1: apply H0; only 1: assumption).	0.017003	20
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.universal_quantification.inst	120	0.0	synth with cache (only 1: unfold all; only 1: auto).	0.005793	2
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT2.eq_existT2_uncurried	120	0.0.0.0.0.0	synth with cache (only 1: destruct pqr; only 1: destruct e0; only 1: destruct e; only 1: destruct x; only 1: simpl; only 1: reflexivity).	0.018043	6
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.universal_quantification.gen	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.absurd	120	0.0.0.0.0.0.0	synth with cache (only 1: unfold not; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H0; only 1: assumption).	0.007160	7
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.equality.eq_sym	120	0.0	synth with cache (only 1: destruct 1; only 1: trivial).	0.005413	2
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.equality.eq_trans	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.equality.eq_trans_r	120	0.0	synth with cache (only 1: destruct 2; only 1: trivial).	0.005980	2
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT2.eq_sigT2_uncurried	120	0.0.0.0.0	synth with cache (only 1: destruct u; only 1: destruct v; only 1: simpl in *; only 1: apply @eq_existT2_uncurried; only 1: exact pqr).	0.048302	5
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.equality.f_equal	120	0.0	synth with cache (only 1: destruct 1; only 1: trivial).	0.005700	2
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.equality.not_eq_sym	120	0.0.0.0.0.0	synth with cache (only 1: red; only 1: intros ?; only 1: intros ?; only 1: apply H; only 1: destruct H0; only 1: trivial).	0.007463	6
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.eq_sind_r	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.eq_ind_r	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: elim eq_sym with (1 := H0); only 1: assumption).	0.009745	8
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.eq_rec_r	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: elim eq_sym with (1 := H0); only 1: assumption).	0.009034	8
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.eq_rect_r	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: elim eq_sym with (1 := H); only 1: assumption).	0.010117	8
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.equality_dep.f_equal_dep	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.equality_dep2.f_equal_dep2	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.rew_opp_r	120	0.0.0	synth with cache (only 1: intros; only 1: destruct H; only 1: reflexivity).	0.009268	3
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.rew_opp_l	120	0.0.0	synth with cache (only 1: intros; only 1: destruct H; only 1: reflexivity).	0.010506	3
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.f_equal2	120	0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	0.009267	3
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.f_equal3	120	0.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	0.012267	4
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.f_equal4	120	0.0.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	0.014111	5
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.f_equal5	120	0.0.0.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	0.019906	6
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.f_equal_compose	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_trans_refl_l	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_trans_refl_r	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_sym_involutive	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_trans_sym_inv_l	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_trans_sym_inv_r	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_trans_assoc	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT2.eq_sigT2_uncurried_iff	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.rew_map	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.map_subst	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_trans_map	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.map_subst_map	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.rew_swap	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.rew_compose	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_id_comm_l	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT2.eq_sigT2_rect	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_id_comm_r	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_refl_map_distr	120	0	synth with cache (only 1: reflexivity).	0.007048	1
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT2.rew_sigT2	120	0.0.0	synth with cache (only 1: destruct H; only 1: destruct u; only 1: reflexivity).	0.030588	3
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_trans_map_distr	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_sym_map_distr	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_trans_sym_distr	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_trans_rew_distr	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.rew_const	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.unique_existence	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.forall_exists_unique_domain_coincide	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.forall_exists_coincide_unique_domain	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.exists_inhabited	120	0.0	synth with cache (only 1: destruct 1; only 1: auto).	0.037191	2
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.inhabited_covariant	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_stepl	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite <- H0; only 1: exact H).	0.014354	8
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.iff_stepl	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: intros ?; only 1: destruct H1; only 1: split; only 1: intros; only 1: auto; only 1: intros; only 1: auto).	0.012821	12
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.ex.eq_ex_uncurried	120	0.0.0.0	synth with cache (only 1: destruct pq; only 1: destruct H; only 1: destruct x; only 1: reflexivity).	0.013957	4
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.ex.rew_ex	120	0.0.0	synth with cache (only 1: destruct H; only 1: destruct u; only 1: reflexivity).	0.021257	3
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.ex2.eq_ex2_uncurried	120	0.0.0.0.0.0	synth with cache (only 1: destruct pq; only 1: destruct H0; only 1: destruct H; only 1: destruct x; only 1: simpl in *; only 1: reflexivity).	0.022460	6
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.ex2.rew_ex2	120	0.0.0	synth with cache (only 1: destruct H; only 1: destruct u; only 1: reflexivity).	0.024043	3
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig2.eq_exist2_uncurried	120	0.0.0.0.0.0	synth with cache (only 1: destruct pqr; only 1: destruct e0; only 1: destruct e; only 1: destruct x; only 1: simpl; only 1: reflexivity).	0.021433	6
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_min_distr_r	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_max_distr_l	120	0.0.0.0	synth with cache (only 1: apply max_monotone; only 1: intros ?; only 1: intros ?; only 1: apply mul_le_mono_l).	0.018251	4
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig2.eq_sig2_uncurried	120	0.0.0.0.0	synth with cache (only 1: destruct u; only 1: destruct v; only 1: simpl in *; only 1: apply @eq_exist2_uncurried; only 1: exact pqr).	0.088852	5
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig2.eq_sig2_uncurried_iff	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig2.eq_sig2_rect	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig2.rew_sig2	120	0.0.0	synth with cache (only 1: destruct H; only 1: destruct u; only 1: reflexivity).	0.030171	3
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.Choice_lemmas.Choice	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.Choice_lemmas.Choice2	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.Choice_lemmas.bool_choice	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.Dependent_choice_lemmas.dependent_choice	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.absurd_set	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_mono	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_le_mono	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_lt_mono	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_pos_pos	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite <- add_0_l; only 1: apply add_lt_mono; only 1: easy; only 1: easy).	0.018159	8
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_pos_nonneg	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite <- add_0_l; only 1: apply add_lt_le_mono; only 1: easy; only 1: easy).	0.016580	8
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonneg_pos	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite <- add_0_l; only 1: apply add_le_lt_mono; only 1: easy; only 1: easy).	0.016315	8
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonneg_nonneg	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite <- add_0_l; only 1: apply add_le_mono; only 1: easy; only 1: easy).	0.015771	8
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_add_pos_l	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_add_pos_r	120	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite add_comm; only 1: apply lt_add_pos_l; only 1: easy).	0.016477	4
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_lt_add_lt	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_le_add_lt	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_le_add_le	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_cases	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_cases	120
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_neg_cases	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply add_lt_cases; only 1: nzsimpl; only 1: easy).	0.045990	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_pos_cases	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply add_lt_cases; only 1: nzsimpl; only 1: easy).	0.026465	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonpos_cases	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply add_le_cases; only 1: nzsimpl; only 1: easy).	0.025425	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonneg_cases	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply add_le_cases; only 1: nzsimpl; only 1: easy).	0.023870	6
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_exists_sub	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_min_distr_l	120	0.0.0.0	synth with cache (only 1: apply min_monotone; only 1: intros ?; only 1: intros ?; only 1: apply mul_le_mono_l).	0.054933	4
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.iter_op_succ	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.of_nat_succ	120	0.0.0.0.0.0	synth with cache (only 1: induction n; only 1: trivial; only 1: simpl; only 1: f_equal; only 1: rewrite IHn; only 1: easy).	0.016382	6
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.pred_of_succ_nat	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.succ_of_nat	120	0.0.0.0.0	synth with cache (only 1: rewrite of_nat_succ; only 1: destruct n; only 1: destruct 1; only 1: trivial; only 1: trivial).	0.013925	5
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sqrtrem_step_spec	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sqrtrem_spec	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sqrt_spec	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.divide_add_cancel_l	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.divide_xO_xI	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct H; only 1: intros ?; only 1: destruct H0; only 1: destruct p; only 1: destruct x; only 1: easy; only 1: simpl in H; only 1: destr_eq H; only 1: exists x; only 1: easy; only 1: easy; only 1: rewrite mul_xO_r in H0; only 1: discriminate; only 1: exists q; only 1: rewrite mul_1_r; only 1: easy).	0.042357	17
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.divide_xO_xO	120	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intros ?; only 1: destruct H; only 1: rewrite mul_xO_r in H; only 1: destr_eq H; only 1: exists x; only 1: auto; only 1: intros ?; only 1: destruct H; only 1: exists x; only 1: rewrite mul_xO_r; only 1: f_equal; only 1: auto).	0.023238	13
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.divide_mul_l	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.divide_mul_r	120	0.0	synth with cache (only 1: rewrite mul_comm; only 1: apply divide_mul_l).	0.010532	2
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.ggcdn_gcdn	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.ggcd_gcd	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.ggcdn_correct_divisors	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.ggcd_correct_divisors	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.gcd_divide_l	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.gcd_divide_r	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.gcdn_greatest	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.gcd_greatest	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply gcdn_greatest; only 1: auto; only 1: auto; only 1: auto).	0.013534	5
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.ggcd_greatest	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Peqb_true_eq	120	0.0	synth with cache (only 1: rewrite <- Pos.eqb_eq; only 1: easy).	0.017592	2
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pcompare_eq_Gt	120	0	synth with cache (only 1: reflexivity).	0.011566	1
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pminus_mask_Gt	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pplus_minus	120	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Pos.add_comm; only 1: apply Pos.sub_add; only 1: apply Pos.gt_lt; only 1: easy).	0.015407	5
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Dcompare	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Add_distributes	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.setcover_intro	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply Definition_of_covers; only 1: auto with sets; only 1: auto with sets).	0.038465	4
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Disjoint_Intersection	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Intersection_Empty_set_l	120	0.0	synth with cache (only 1: intros; only 1: auto with sets).	0.009434	2
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Intersection_Empty_set_r	120	0.0	synth with cache (only 1: intros; only 1: auto with sets).	0.009386	2
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_le_0_compat	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold Qle in *; only 1: simpl in *; only 1: rewrite Z.mul_1_r in *; only 1: auto with *).	0.036617	8
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Seminus_Empty_set_l	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: unfold In in *; only 1: assumption; only 1: intuition).	0.011339	9
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Seminus_Empty_set_r	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: unfold In in *; only 1: assumption; only 1: intuition).	0.013681	9
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qinv_le_0_compat	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct a; only 1: destruct Qnum0; only 1: intros ?; only 1: assumption; only 1: intros ?; only 1: assumption; only 1: intros ?; only 1: assumption).	0.036138	9
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Setminus_Union_l	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Setminus_Union_r	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qle_shift_div_l	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Setminus_Disjoint_noop	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros ?; only 1: intros ?; only 1: inversion_clear H0; only 1: intuition; only 1: intros ?; only 1: intros ?; only 1: constructor; only 1: intuition; only 1: intuition; only 1: contradict H; only 1: apply Inhabited_not_empty; only 1: exists x; only 1: intuition).	0.023927	16
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qle_shift_inv_l	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Setminus_Included_empty	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qle_shift_div_r	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qle_shift_inv_r	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qinv_lt_0_compat	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct a; only 1: destruct Qnum0; only 1: intros ?; only 1: assumption; only 1: intros ?; only 1: assumption; only 1: intros ?; only 1: assumption).	0.041518	9
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qlt_shift_div_l	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qlt_shift_inv_l	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qlt_shift_div_r	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qlt_shift_inv_r	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qinv_lt_contravar	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qpower_positive_comp	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite <- H0; only 1: clear y0 H0; only 1: unfold Qpower_positive; only 1: induction x0; only 1: simpl; only 1: rewrite IHx0; only 1: rewrite H; only 1: reflexivity; only 1: simpl; only 1: rewrite IHx0; only 1: reflexivity; only 1: simpl; only 1: easy).	0.062892	19
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qpower_comp	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite <- H0; only 1: clear y0 H0; only 1: destruct x0; only 1: simpl; only 1: auto with *; only 1: simpl; only 1: unfold Qpower_positive; only 1: induction p; only 1: simpl; only 1: rewrite IHp; only 1: rewrite H; only 1: reflexivity; only 1: simpl; only 1: rewrite IHp; only 1: reflexivity; only 1: simpl; only 1: easy; only 1: simpl; only 1: rewrite H; only 1: auto with *).	0.067907	26
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_mono_r	120
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Add_commutative'	120
coq-tactician-stdlib.8.11.dev	Coq.QArith.QArith_base.Qmult_lt_l	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_max_distr_r	120
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_min_distr_r	120
