Chars 0 - 24 [Set~Tactician~Benchmark.] 0. secs (0.u,0.s)
Chars 0 - 60 [Require~Import~HoTT.Basics~HoT...] 4.628 secs (4.305u,0.312s)
Chars 103 - 123 [Section~SpanPushout.] 0. secs (0.u,0.s)
Chars 126 - 168 [Context~{X~Y~:~Type}~(Q~:~X~->...] 0. secs (0.u,0.s)
Chars 172 - 299 [Definition~SPushout~:=~~~@Push...] 0.004 secs (0.003u,0.s)
Chars 302 - 345 [Definition~spushl~:~X~->~SPush...] 0. secs (0.u,0.s)
Chars 348 - 391 [Definition~spushr~:~Y~->~SPush...] 0. secs (0.u,0.s)
Chars 394 - 489 [Definition~spglue~{x~:~X}~{y~:...] 0.002 secs (0.002u,0.s)
Chars 493 - 669 [Definition~SPushout_rec~(R~:~T...] 0. secs (0.u,0.s)
Chars 672 - 678 [Proof.] 0. secs (0.u,0.s)
Chars 683 - 811 [srapply~~(@Pushout_rec~{xy~:~X...] 40.13 secs (0.011u,0.018s)
Chars 816 - 843 [(intros~[[x~y]~q];~cbn~in~*).] 0.005 secs (0.005u,0.s)
Chars 848 - 873 [(apply~sglue';~assumption).] 0.001 secs (0.001u,0.s)
Chars 683 - 811 [srapply~~(@Pushout_rec~{xy~:~X...] 0. secs (0.u,0.s)
Chars 816 - 843 [(intros~[[x~y]~q];~cbn~in~*).] 0.001 secs (0.001u,0.s)
Chars 848 - 873 [(apply~sglue';~assumption).] 0. secs (0.u,0.s)
Chars 876 - 884 [Defined.] 0.001 secs (0.001u,0.s)
Chars 888 - 1166 [Definition~SPushout_ind~(R~:~S...] 0.001 secs (0.001u,0.s)
Chars 1169 - 1175 [Proof.] 0. secs (0.u,0.s)
Chars 0 - 24 [Set~Tactician~Benchmark.] 0. secs (0.u,0.s)
Chars 0 - 24 [Set~Tactician~Benchmark.] 0. secs (0.u,0.s)
Chars 0 - 24 [Set~Tactician~Benchmark.] 0. secs (0.u,0.s)
Chars 43 - 65 [Require~Import~Basics.] 0.351 secs (0.254u,0.096s)
Chars 66 - 87 [Require~Import~Types.] 1.463 secs (1.372u,0.087s)
Chars 88 - 108 [Require~Import~HSet.] 0.046 secs (0.045u,0.s)
Chars 0 - 133 [Require~Import~HoTT.Classes.in...] 9.838 secs (9.252u,0.559s)
Chars 135 - 163 [Generalizable~Variables~A~B.] 0. secs (0.u,0.s)
Chars 165 - 211 [#[global]Instance~Empty_lt~:~(...] 0. secs (0.u,0.s)
Chars 212 - 218 [Proof.] 0. secs (0.u,0.s)
Chars 219 - 229 [(intros~[]).] 0.246 secs (0.u,0.025s)
Chars 219 - 229 [(intros~[]).] 0. secs (0.u,0.s)
Chars 230 - 238 [Defined.] 0. secs (0.u,0.s)
Chars 240 - 304 [#[global]Instance~Unit_lt~:~(L...] 0. secs (0.u,0.s)
Chars 306 - 375 [#[global]Instance~empty_tricho...] 0. secs (0.u,0.s)
Chars 376 - 382 [Proof.] 0. secs (0.u,0.s)
Chars 37 - 160 [Require~Export~HoTT.Utf8~HoTT....] 10.069 secs (9.472u,0.581s)
Chars 162 - 249 [Require~Import~HoTT.Types~HoTT...] 0.006 secs (0.005u,0.s)
Chars 251 - 276 [Import~ne_list.notations.] 0. secs (0.u,0.s)
Chars 278 - 306 [Declare~Scope~Algebra_scope.] 0. secs (0.u,0.s)
Chars 308 - 349 [Delimit~Scope~Algebra_scope~wi...] 0. secs (0.u,0.s)
Chars 351 - 376 [Open~Scope~Algebra_scope.] 0. secs (0.u,0.s)
Chars 378 - 436 [Definition~SymbolType_internal...] 0. secs (0.u,0.s)
Chars 1021 - 1154 [Record~Signature~:~Type~:=~~Bu...] 0.002 secs (0.001u,0.001s)
Chars 1314 - 1368 [#[global]Coercion~symbol_types...] 0. secs (0.u,0.s)
Chars 1441 - 1595 [Definition~BuildSingleSortedSi...] 0.001 secs (0.001u,0.s)
Chars 1791 - 1858 [Definition~SymbolType~(σ~:~Sig...] 0. secs (0.u,0.s)
Chars 1957 - 2034 [Definition~cod_symboltype~{σ}~...] 0. secs (0.u,0.s)
Chars 2131 - 2216 [Definition~dom_symboltype~{σ}~...] 0. secs (0.u,0.s)
Chars 2380 - 2466 [Definition~arity_symboltype~{σ...] 0.031 secs (0.028u,0.002s)
Chars 2725 - 2768 [Notation~Carriers~σ:=~(Sort~σ~...] 0. secs (0.u,0.s)
Chars 3131 - 3289 [Fixpoint~Operation~{σ}~(A~:~Ca...] 0.001 secs (0.001u,0.s)
Chars 3291 - 3451 [#[global]~Instance~trunc_opera...] 0.001 secs (0.001u,0.s)
Chars 3452 - 3458 [Proof.] 0. secs (0.u,0.s)
Chars 383 - 393 [(intros~[]).] 2.426 secs (0.001u,0.026s)
Chars 383 - 393 [(intros~[]).] 0. secs (0.u,0.s)
Chars 394 - 398 [Qed.] 0. secs (0.u,0.s)
Chars 400 - 467 [#[global]Instance~unit_tricho~...] 0. secs (0.u,0.s)
Chars 468 - 474 [Proof.] 0. secs (0.u,0.s)
Chars 109 - 130 [Require~Import~DProp.] 7.747 secs (7.432u,0.297s)
Chars 131 - 157 [Require~Import~Spaces.Nat.] 0.071 secs (0.07u,0.s)
Chars 158 - 189 [Require~Import~Equiv.PathSplit.] 0. secs (0.u,0.s)
Chars 191 - 219 [#[local]Open~Scope~path_scope.] 0. secs (0.u,0.s)
Chars 220 - 247 [#[local]Open~Scope~nat_scope.] 0. secs (0.u,0.s)
Chars 560 - 667 [Fixpoint~Fin~(n~:~nat)~:~Type0...] 0.001 secs (0.001u,0.s)
Chars 669 - 882 [Fixpoint~fin_to_nat~{n}~:~Fin~...] 0.001 secs (0.001u,0.s)
Chars 884 - 944 [#[global]Instance~decidable_fi...] 0. secs (0.u,0.s)
Chars 945 - 951 [Proof.] 0. secs (0.u,0.s)
Chars 954 - 986 [(destruct~n~as~[|~n];~try~exac...] 2.262 secs (0.053u,0.061s)
Chars 989 - 1010 [exact~(inl~(inr~tt)).] 0.001 secs (0.u,0.001s)
Chars 954 - 986 [(destruct~n~as~[|~n];~try~exac...] 0. secs (0.u,0.s)
Chars 989 - 1010 [exact~(inl~(inr~tt)).] 0. secs (0.u,0.s)
Chars 1011 - 1019 [Defined.] 0. secs (0.u,0.s)
Chars 1021 - 1091 [#[global]Instance~decidablepat...] 0. secs (0.u,0.s)
Chars 1092 - 1098 [Proof.] 0. secs (0.u,0.s)
Chars 1180 - 1308 [srapply~~(@Pushout_ind~{xy~:~X...] 40.143 secs (0.01u,0.024s)
Chars 1313 - 1340 [(intros~[[x~y]~q];~cbn~in~*).] 0.025 secs (0.023u,0.002s)
Chars 1345 - 1370 [(apply~sglue';~assumption).] 0.006 secs (0.005u,0.s)
Chars 1180 - 1308 [srapply~~(@Pushout_ind~{xy~:~X...] 0. secs (0.u,0.s)
Chars 1313 - 1340 [(intros~[[x~y]~q];~cbn~in~*).] 0.004 secs (0.004u,0.s)
Chars 1345 - 1370 [(apply~sglue';~assumption).] 0.001 secs (0.001u,0.s)
Chars 1373 - 1381 [Defined.] 0.005 secs (0.004u,0.s)
Chars 1385 - 1817 [Definition~spushout_ind_beta_s...] 0.024 secs (0.023u,0.001s)
Chars 1819 - 1835 [End~SpanPushout.] 0.016 secs (0.015u,0.s)
Chars 0 - 24 [Set~Tactician~Benchmark.] 0. secs (0.u,0.s)
Chars 1101 - 1141 [(induction~n~as~[|~n~IHn];~sim...] 22.049 secs (11.794u,0.247s)
Chars 0 - 80 [From~HoTT~Require~Import~Basic...] 9.653 secs (9.073u,0.573s)
Chars 81 - 132 [From~HoTT~Require~Import~PropR...] 0. secs (0.u,0.s)
Chars 133 - 181 [From~HoTT~Require~Import~Space...] 0.069 secs (0.067u,0.001s)
Chars 182 - 219 [From~HoTT~Require~Import~Equiv...] 0. secs (0.u,0.s)
Chars 220 - 263 [From~HoTT~Require~Import~HIT.u...] 0.004 secs (0.004u,0.s)
Chars 265 - 326 [From~HoTT.Sets~Require~Import~...] 2.311 secs (2.273u,0.035s)
Chars 328 - 344 [Open~Scope~type.] 0. secs (0.u,0.s)
Chars 1146 - 1166 [Section~Preparation.] 0. secs (0.u,0.s)
Chars 1168 - 1194 [Context~{UA~:~Univalence}.] 0. secs (0.u,0.s)
Chars 1196 - 1263 [Lemma~path_sum_prod~X~Y~Z~:~(X...] 0. secs (0.u,0.s)
Chars 1264 - 1270 [Proof.] 0. secs (0.u,0.s)
Chars 3461 - 3482 [(induction~w;~exact~_).] 40.168 secs (0.004u,0.037s)
Chars 3461 - 3482 [(induction~w;~exact~_).] 0.001 secs (0.001u,0.s)
Chars 3483 - 3491 [Defined.] 0.001 secs (0.001u,0.s)
Chars 3614 - 3887 [Fixpoint~ap_operation~{σ}~{A~:...] 0.008 secs (0.007u,0.s)
Chars 4093 - 4558 [Fixpoint~path_forall_ap_operat...] 0.014 secs (0.012u,0.002s)
Chars 4842 - 4990 [Record~Algebra~{σ~:~Signature}...] 0.003 secs (0.003u,0.s)
Chars 4992 - 5028 [Arguments~Algebra~:~clear~impl...] 0. secs (0.u,0.s)
Chars 5030 - 5078 [Arguments~BuildAlgebra~{σ}~car...] 0. secs (0.u,0.s)
Chars 5173 - 5221 [#[global]Coercion~carriers~:~A...] 0. secs (0.u,0.s)
Chars 5223 - 5261 [Bind~Scope~Algebra_scope~with~...] 0. secs (0.u,0.s)
Chars 5263 - 5375 [Definition~SigAlgebra~(σ~:~Sig...] 0.001 secs (0.001u,0.s)
Chars 5377 - 5445 [Lemma~issig_algebra~(σ~:~Signa...] 0. secs (0.u,0.s)
Chars 5446 - 5452 [Proof.] 0. secs (0.u,0.s)
Chars 475 - 493 [(intros~[]~[];~auto).] 40.146 secs (0.u,0.029s)
Chars 475 - 493 [(intros~[]~[];~auto).] 0. secs (0.u,0.s)
Chars 494 - 502 [Defined.] 0. secs (0.u,0.s)
Chars 504 - 521 [Section~contents.] 0. secs (0.u,0.s)
Chars 523 - 579 [Context~`{Alt~:~Lt@{Set~Set}~A...] 0. secs (0.u,0.s)
Chars 581 - 788 [#[global]~Instance~sum_lt~:~(L...] 0.002 secs (0.002u,0.s)
Chars 790 - 919 [#[global]~Instance~sum_tricho~...] 0. secs (0.u,0.s)
Chars 920 - 926 [Proof.] 0. secs (0.u,0.s)
Chars 1101 - 1141 [(induction~n~as~[|~n~IHn];~sim...] 40.091 secs (0.029u,0.032s)
Chars 1101 - 1141 [(induction~n~as~[|~n~IHn];~sim...] 0. secs (0.u,0.s)
Chars 1142 - 1150 [Defined.] 0. secs (0.u,0.s)
Chars 1152 - 1195 [#[global]Instance~contr_fin1~:...] 0. secs (0.u,0.s)
Chars 1196 - 1202 [Proof.] 0. secs (0.u,0.s)
Chars 5455 - 5461 [issig.] 6.133 secs (0.012u,0.041s)
Chars 5455 - 5461 [issig.] 0. secs (0.u,0.s)
Chars 5462 - 5470 [Defined.] 0.002 secs (0.002u,0.s)
Chars 5472 - 5610 [Class~IsTruncAlgebra~(n~:~trun...] 0.001 secs (0.001u,0.s)
Chars 5612 - 5660 [#[global]Existing~Instance~tru...] 0. secs (0.u,0.s)
Chars 5662 - 5707 [Notation~IsHSetAlgebra~:=~(IsT...] 0. secs (0.u,0.s)
Chars 5709 - 5845 [#[global]~Instance~hprop_is_tr...] 0. secs (0.u,0.s)
Chars 5846 - 5852 [Proof.] 0. secs (0.u,0.s)
Chars 5855 - 5876 [(apply~istrunc_forall).] 1.155 secs (-8.89u,-0.39s)
NMult : EMonoid N.mul 1 eq
     : EMonoid N.mul 1 eq
Chars 1273 - 1303 [(apply~path_universe_uncurried).] 40.155 secs (0.u,0.036s)
Chars 1304 - 1333 [(apply~equiv_sum_distributive).] 0.001 secs (0.u,0.s)
Chars 1273 - 1303 [(apply~path_universe_uncurried).] 0. secs (0.u,0.s)
Chars 1304 - 1333 [(apply~equiv_sum_distributive).] 0. secs (0.u,0.s)
Chars 1334 - 1338 [Qed.] 0. secs (0.u,0.s)
Chars 1340 - 1395 [Lemma~path_sum_assoc~X~Y~Z~:~X...] 0. secs (0.u,0.s)
Chars 1396 - 1402 [Proof.] 0. secs (0.u,0.s)
Chars 927 - 931 [(hnf).] 40.225 secs (0.u,0.025s)
Chars 932 - 961 [(intros~[a1|~b1]~[a2|~b2];~sim...] 0.004 secs (0.004u,0.s)
Chars 962 - 963 [-] 0. secs (0.u,0.s)
Chars 964 - 1012 [(destruct~(trichotomy~_~a1~a2)...] 0.011 secs (0.009u,0.001s)
Chars 1013 - 1014 [-] 0. secs (0.u,0.s)
Chars 1015 - 1020 [auto.] 0.002 secs (0.002u,0.s)
Chars 1021 - 1022 [-] 0. secs (0.u,0.s)
Chars 1023 - 1028 [auto.] 0.001 secs (0.001u,0.s)
Chars 1029 - 1030 [-] 0. secs (0.u,0.s)
Chars 1031 - 1079 [(destruct~(trichotomy~_~b1~b2)...] 0.01 secs (0.008u,0.001s)
Chars 927 - 931 [(hnf).] 0. secs (0.u,0.s)
Chars 932 - 961 [(intros~[a1|~b1]~[a2|~b2];~sim...] 0.001 secs (0.001u,0.s)
Chars 964 - 1012 [(destruct~(trichotomy~_~a1~a2)...] 0.001 secs (0.001u,0.s)
Chars 1015 - 1020 [auto.] 0. secs (0.u,0.s)
Chars 1023 - 1028 [auto.] 0. secs (0.u,0.s)
Chars 1031 - 1079 [(destruct~(trichotomy~_~b1~b2)...] 0.001 secs (0.001u,0.s)
Chars 1080 - 1088 [Defined.] 0.003 secs (0.002u,0.s)
Chars 1090 - 1103 [End~contents.] 0.009 secs (0.007u,0.001s)
Chars 1205 - 1254 [refine~(contr_equiv'~Unit~(sum...] 40.161 secs (0.001u,0.028s)
Chars 1205 - 1254 [refine~(contr_equiv'~Unit~(sum...] 0. secs (0.u,0.s)
Chars 1255 - 1263 [Defined.] 0. secs (0.u,0.s)
Chars 1265 - 1325 [Definition~fin_empty~(n~:~nat)...] 0.001 secs (0.001u,0.s)
Chars 1326 - 1332 [Proof.] 0. secs (0.u,0.s)
Chars 5855 - 5876 [(apply~istrunc_forall).] 40.077 secs (0.004u,0.037s)
Chars 5855 - 5876 [(apply~istrunc_forall).] 0. secs (0.u,0.s)
Chars 5877 - 5881 [Qed.] 0. secs (0.u,0.s)
Chars 5883 - 6014 [#[global]~Instance~trunc_algeb...] 0. secs (0.u,0.s)
Chars 6015 - 6021 [Proof.] 0. secs (0.u,0.s)
Chars 6024 - 6039 [(intro;~exact~_).] 1.572 secs (0.006u,0.036s)
Chars 6024 - 6039 [(intro;~exact~_).] 0. secs (0.u,0.s)
Chars 6040 - 6044 [Qed.] 0.001 secs (0.001u,0.s)
Chars 6180 - 6368 [Lemma~path_algebra~{σ~:~Signat...] 0.002 secs (0.002u,0.s)
Chars 6369 - 6375 [Proof.] 0. secs (0.u,0.s)
Chars 1405 - 1414 [symmetry.] 40.314 secs (0.002u,0.034s)
Chars 1415 - 1445 [(apply~path_universe_uncurried).] 0.001 secs (0.u,0.s)
Chars 1446 - 1468 [(apply~equiv_sum_assoc).] 0.001 secs (0.u,0.001s)
Chars 1405 - 1414 [symmetry.] 0. secs (0.u,0.s)
Chars 1415 - 1445 [(apply~path_universe_uncurried).] 0. secs (0.u,0.s)
Chars 1446 - 1468 [(apply~equiv_sum_assoc).] 0. secs (0.u,0.s)
Chars 1469 - 1473 [Qed.] 0. secs (0.u,0.s)
Chars 1475 - 1518 [Lemma~path_sum_bool~X~:~X~+~X~...] 0. secs (0.u,0.s)
Chars 1519 - 1525 [Proof.] 0. secs (0.u,0.s)
Chars 1335 - 1365 [(destruct~n;~[~reflexivity~|~~]).] 40.176 secs (0.u,0.029s)
Chars 1368 - 1386 [(elim~(f~(inr~tt))).] 0.001 secs (0.001u,0.s)
Chars 1335 - 1365 [(destruct~n;~[~reflexivity~|~~]).] 0. secs (0.u,0.s)
Chars 1368 - 1386 [(elim~(f~(inr~tt))).] 0. secs (0.u,0.s)
Chars 1387 - 1395 [Defined.] 0. secs (0.u,0.s)
Chars 1522 - 1625 [Fixpoint~fin_zero~{n~:~nat}~:~...] 0.001 secs (0.001u,0.s)
Chars 1722 - 1774 [Definition~fin_last~{n~:~nat}~...] 0. secs (0.u,0.s)
Chars 1855 - 1918 [Definition~fin_incl~{n~:~nat}~...] 0. secs (0.u,0.s)
Chars 2022 - 2235 [Fixpoint~fsucc~{n~:~nat}~:~Fin...] 0.002 secs (0.002u,0.s)
Chars 2285 - 2344 [Lemma~isembedding_fsucc~{n~:~n...] 0. secs (0.u,0.s)
Chars 2345 - 2351 [Proof.] 0. secs (0.u,0.s)
Chars 2354 - 2383 [(apply~isembedding_isinj_hset).] 2.24 secs (-7.493u,-0.369s)
Chars 6378 - 6391 [(destruct~A,~B).] 40.164 secs (0.002u,0.035s)
Chars 6392 - 6401 [(cbn~in~*).] 0.001 secs (0.u,0.s)
Chars 6402 - 6420 [by~path_induction.] 0.003 secs (0.003u,0.s)
Chars 6378 - 6391 [(destruct~A,~B).] 0. secs (0.u,0.s)
Chars 6392 - 6401 [(cbn~in~*).] 0. secs (0.u,0.s)
Chars 6402 - 6420 [by~path_induction.] 0. secs (0.u,0.s)
Chars 6421 - 6429 [Defined.] 0.003 secs (0.002u,0.s)
Chars 6431 - 6657 [Lemma~path_ap_carriers_path_al...] 0.003 secs (0.002u,0.001s)
Chars 6658 - 6664 [Proof.] 0. secs (0.u,0.s)
Chars 6667 - 6699 [(destruct~A~as~[A~a],~B~as~[B~...] 0.144 secs (0.002u,0.037s)
Chars 6700 - 6709 [(cbn~in~*).] 0.001 secs (0.001u,0.s)
Chars 6710 - 6726 [by~destruct~p,~q.] 0.005 secs (0.005u,0.s)
Chars 6667 - 6699 [(destruct~A~as~[A~a],~B~as~[B~...] 0. secs (0.u,0.s)
Chars 6700 - 6709 [(cbn~in~*).] 0. secs (0.u,0.s)
Chars 6710 - 6726 [by~destruct~p,~q.] 0. secs (0.u,0.s)
Chars 6727 - 6735 [Defined.] 0.005 secs (0.005u,0.s)
Chars 6915 - 7063 [Lemma~path_path_algebra~{σ~:~S...] 0.006 secs (0.006u,0.s)
Chars 7064 - 7070 [Proof.] 0. secs (0.u,0.s)
Chars 1528 - 1558 [(apply~path_universe_uncurried).] 40.166 secs (0.u,0.035s)
Chars 1559 - 1584 [srapply~equiv_adjointify.] 0.001 secs (0.001u,0.s)
Chars 1587 - 1588 [-] 0. secs (0.u,0.s)
Chars 1589 - 1664 [exact~(fun~x~=>~match~x~with~~...] 0.002 secs (0.002u,0.s)
Chars 1667 - 1668 [-] 0. secs (0.u,0.s)
Chars 1669 - 1744 [exact~(fun~x~=>~match~x~with~~...] 0.002 secs (0.002u,0.s)
Chars 1747 - 1748 [-] 0. secs (0.u,0.s)
Chars 1749 - 1774 [(intros~[[]];~reflexivity).] 0.004 secs (0.004u,0.s)
Chars 1777 - 1778 [-] 0. secs (0.u,0.s)
Chars 1779 - 1802 [(intros~[];~reflexivity).] 0.003 secs (0.003u,0.s)
Chars 1528 - 1558 [(apply~path_universe_uncurried).] 0. secs (0.u,0.s)
Chars 1559 - 1584 [srapply~equiv_adjointify.] 0. secs (0.u,0.s)
Chars 1589 - 1664 [exact~(fun~x~=>~match~x~with~~...] 0. secs (0.u,0.s)
Chars 1669 - 1744 [exact~(fun~x~=>~match~x~with~~...] 0. secs (0.u,0.s)
Chars 1749 - 1774 [(intros~[[]];~reflexivity).] 0.001 secs (0.001u,0.s)
Chars 1779 - 1802 [(intros~[];~reflexivity).] 0.001 secs (0.001u,0.s)
Chars 1803 - 1807 [Qed.] 0.002 secs (0.002u,0.s)
Chars 1809 - 1850 [Lemma~path_unit_nat~:~Unit~+~n...] 0. secs (0.u,0.s)
Chars 1851 - 1857 [Proof.] 0. secs (0.u,0.s)
     = 0
     : int31
Chars 2354 - 2383 [(apply~isembedding_isinj_hset).] 40.079 secs (0.02u,0.029s)
Chars 2386 - 2398 [(induction~n).] 0. secs (0.u,0.s)
Chars 2401 - 2402 [-] 0. secs (0.u,0.s)
Chars 2403 - 2411 [intro~i.] 0. secs (0.u,0.s)
Chars 2412 - 2419 [(elim~i).] 0. secs (0.u,0.s)
Chars 2422 - 2423 [-] 0. secs (0.u,0.s)
Chars 2424 - 2446 [(intros~[]~[];~intro~p).] 0.006 secs (0.005u,0.s)
Chars 2451 - 2452 [+] 0. secs (0.u,0.s)
Chars 2453 - 2458 [f_ap.] 0.002 secs (0.002u,0.s)
Chars 2459 - 2469 [(apply~IHn).] 0. secs (0.u,0.s)
Chars 2470 - 2490 [(eapply~path_sum_inl).] 0.001 secs (0.001u,0.s)
Chars 2491 - 2499 [exact~p.] 0.001 secs (0.001u,0.s)
Chars 2504 - 2505 [+] 0. secs (0.u,0.s)
Chars 2506 - 2517 [(destruct~u).] 0.001 secs (0.001u,0.s)
Chars 2518 - 2542 [(elim~(inl_ne_inr~_~_~p)).] 0.003 secs (0.003u,0.s)
Chars 2547 - 2548 [+] 0. secs (0.u,0.s)
Chars 2549 - 2560 [(destruct~u).] 0.001 secs (0.001u,0.s)
Chars 2561 - 2585 [(elim~(inr_ne_inl~_~_~p)).] 0.003 secs (0.002u,0.s)
Chars 2590 - 2591 [+] 0. secs (0.u,0.s)
Chars 2592 - 2620 [(destruct~u,~u0;~reflexivity).] 0.003 secs (0.003u,0.s)
Chars 2354 - 2383 [(apply~isembedding_isinj_hset).] 0. secs (0.u,0.s)
Chars 2386 - 2398 [(induction~n).] 0. secs (0.u,0.s)
Chars 2403 - 2411 [intro~i.] 0. secs (0.u,0.s)
Chars 2412 - 2419 [(elim~i).] 0. secs (0.u,0.s)
Chars 2424 - 2446 [(intros~[]~[];~intro~p).] 0.002 secs (0.001u,0.s)
Chars 2453 - 2458 [f_ap.] 0. secs (0.u,0.s)
Chars 2459 - 2469 [(apply~IHn).] 0. secs (0.u,0.s)
Chars 2470 - 2490 [(eapply~path_sum_inl).] 0. secs (0.u,0.s)
Chars 2491 - 2499 [exact~p.] 0. secs (0.u,0.s)
Chars 2506 - 2517 [(destruct~u).] 0. secs (0.u,0.s)
Chars 2518 - 2542 [(elim~(inl_ne_inr~_~_~p)).] 0. secs (0.u,0.s)
Chars 2549 - 2560 [(destruct~u).] 0. secs (0.u,0.s)
Chars 2561 - 2585 [(elim~(inr_ne_inl~_~_~p)).] 0. secs (0.u,0.s)
Chars 2592 - 2620 [(destruct~u,~u0;~reflexivity).] 0. secs (0.u,0.s)
Chars 2621 - 2625 [Qed.] 0.009 secs (0.008u,0.s)
Chars 2627 - 2723 [Lemma~path_fin_fsucc_incl~{n~:...] 0. secs (0.u,0.s)
Chars 2724 - 2730 [Proof.] 0. secs (0.u,0.s)
Chars 2733 - 2741 [trivial.] 0.112 secs (0.002u,0.027s)
Chars 2733 - 2741 [trivial.] 0. secs (0.u,0.s)
Chars 2742 - 2746 [Qed.] 0. secs (0.u,0.s)
Chars 2748 - 2841 [Lemma~path_nat_fin_incl~{n~:~n...] 0. secs (0.u,0.s)
Chars 2842 - 2848 [Proof.] 0. secs (0.u,0.s)
Chars 2851 - 2863 [reflexivity.] 0.132 secs (0.u,0.028s)
Chars 2851 - 2863 [reflexivity.] 0. secs (0.u,0.s)
Chars 2864 - 2868 [Qed.] 0. secs (0.u,0.s)
Chars 2870 - 2961 [Lemma~path_nat_fsucc~{n~:~nat}...] 0. secs (0.u,0.s)
Chars 2962 - 2968 [Proof.] 0. secs (0.u,0.s)
Chars 7073 - 7121 [(set~(e~:=~equiv_ap~(issig_alg...] 40.177 secs (0.005u,0.034s)
Chars 7124 - 7187 [by~apply~(@equiv_inv~_~_~(ap~e...] 0.007 secs (0.005u,0.002s)
Chars 7073 - 7121 [(set~(e~:=~equiv_ap~(issig_alg...] 0. secs (0.u,0.s)
Chars 7124 - 7187 [by~apply~(@equiv_inv~_~_~(ap~e...] 0. secs (0.u,0.s)
Chars 7188 - 7196 [Defined.] 0.002 secs (0.001u,0.001s)
Chars 7304 - 7462 [Lemma~path_path_hset_algebra~`...] 0.002 secs (0.001u,0.001s)
Chars 7463 - 7469 [Proof.] 0. secs (0.u,0.s)
Chars 7472 - 7496 [(apply~path_path_algebra).] 5.057 secs (-5.297u,-0.379s)
Chars 1860 - 1890 [(apply~path_universe_uncurried).] 40.225 secs (0.001u,0.035s)
Chars 1891 - 1916 [srapply~equiv_adjointify.] 0.001 secs (0.001u,0.s)
Chars 1919 - 1920 [-] 0. secs (0.u,0.s)
Chars 1921 - 1981 [exact~(fun~x~=>~match~x~with~~...] 0.001 secs (0.001u,0.s)
Chars 1984 - 1985 [-] 0. secs (0.u,0.s)
Chars 1986 - 2047 [exact~(fun~n~=>~match~n~with~~...] 0.002 secs (0.002u,0.s)
Chars 2050 - 2051 [-] 0. secs (0.u,0.s)
Chars 2052 - 2066 [now~intros~[].] 0.003 secs (0.002u,0.s)
Chars 2069 - 2070 [-] 0. secs (0.u,0.s)
Chars 2071 - 2089 [now~intros~[[]|~n].] 0.003 secs (0.003u,0.s)
Chars 1860 - 1890 [(apply~path_universe_uncurried).] 0. secs (0.u,0.s)
Chars 1891 - 1916 [srapply~equiv_adjointify.] 0. secs (0.u,0.s)
Chars 1921 - 1981 [exact~(fun~x~=>~match~x~with~~...] 0. secs (0.u,0.s)
Chars 1986 - 2047 [exact~(fun~n~=>~match~n~with~~...] 0. secs (0.u,0.s)
Chars 2052 - 2066 [now~intros~[].] 0. secs (0.u,0.s)
Chars 2071 - 2089 [now~intros~[[]|~n].] 0. secs (0.u,0.s)
Chars 2091 - 2095 [Qed.] 0.002 secs (0.001u,0.s)
Chars 2097 - 2139 [Lemma~path_unit_fun~X~:~X~=~(U...] 0. secs (0.u,0.s)
Chars 2140 - 2146 [Proof.] 0. secs (0.u,0.s)
     = 1740564225 :: 343969132 :: 6812243 :: nil
     : number
     = 0 :: 1 :: nil
     : number
     = 31415926535897932384626433%Z
     : Z
Chars 2971 - 2996 [(induction~n~as~[|~n'~IHn]).] 40.151 secs (0.001u,0.029s)
Chars 2999 - 3000 [-] 0. secs (0.u,0.s)
Chars 3001 - 3011 [(intros~[]).] 0. secs (0.u,0.s)
Chars 3014 - 3015 [-] 0. secs (0.u,0.s)
Chars 3016 - 3031 [(intros~[k'|~[]]).] 0.002 secs (0.002u,0.s)
Chars 3036 - 3037 [+] 0. secs (0.u,0.s)
Chars 3038 - 3085 [(rewrite~path_fin_fsucc_incl,~...] 0.003 secs (0.002u,0.s)
Chars 3092 - 3102 [(apply~IHn).] 0.001 secs (0.u,0.s)
Chars 3107 - 3108 [+] 0. secs (0.u,0.s)
Chars 3109 - 3121 [reflexivity.] 0. secs (0.u,0.s)
Chars 2971 - 2996 [(induction~n~as~[|~n'~IHn]).] 0. secs (0.u,0.s)
Chars 3001 - 3011 [(intros~[]).] 0. secs (0.u,0.s)
Chars 3016 - 3031 [(intros~[k'|~[]]).] 0. secs (0.u,0.s)
Chars 3038 - 3085 [(rewrite~path_fin_fsucc_incl,~...] 0. secs (0.u,0.s)
Chars 3092 - 3102 [(apply~IHn).] 0. secs (0.u,0.s)
Chars 3109 - 3121 [reflexivity.] 0. secs (0.u,0.s)
Chars 3122 - 3130 [Defined.] 0.002 secs (0.002u,0.s)
Chars 3132 - 3191 [Lemma~path_nat_fin_zero~{n}~:~...] 0. secs (0.u,0.s)
Chars 3192 - 3198 [Proof.] 0. secs (0.u,0.s)
Chars 3201 - 3226 [(induction~n~as~[|~n'~IHn]).] 0.317 secs (0.u,0.027s)
Chars 3229 - 3230 [-] 0. secs (0.u,0.s)
Chars 3231 - 3243 [reflexivity.] 0. secs (0.u,0.s)
Chars 3246 - 3247 [-] 0. secs (0.u,0.s)
Chars 3248 - 3256 [trivial.] 0. secs (0.u,0.s)
Chars 3201 - 3226 [(induction~n~as~[|~n'~IHn]).] 0. secs (0.u,0.s)
Chars 3231 - 3243 [reflexivity.] 0. secs (0.u,0.s)
Chars 3248 - 3256 [trivial.] 0. secs (0.u,0.s)
Chars 3257 - 3265 [Defined.] 0. secs (0.u,0.s)
Chars 3267 - 3326 [Lemma~path_nat_fin_last~{n}~:~...] 0. secs (0.u,0.s)
Chars 3327 - 3333 [Proof.] 0. secs (0.u,0.s)
Chars 3336 - 3348 [reflexivity.] 0.098 secs (0.001u,0.028s)
Chars 3336 - 3348 [reflexivity.] 0. secs (0.u,0.s)
Chars 3349 - 3353 [Qed.] 0. secs (0.u,0.s)
Chars 3628 - 3802 [Definition~fin_transpose_last_...] 0.005 secs (0.003u,0.001s)
Chars 3804 - 3853 [Arguments~fin_transpose_last_t...] 0. secs (0.u,0.s)
Chars 3855 - 3964 [Definition~fin_transpose_last_...] 0.003 secs (0.003u,0.s)
Chars 3966 - 4079 [Definition~fin_transpose_last_...] 0.003 secs (0.003u,0.s)
Chars 4081 - 4206 [Definition~fin_transpose_last_...] 0.003 secs (0.002u,0.s)
Chars 4252 - 4334 [Fixpoint~fin_transpose_last_wi...] 0. secs (0.u,0.s)
Chars 4335 - 4341 [Proof.] 0. secs (0.u,0.s)
Chars 4344 - 4363 [(destruct~k~as~[k|~]).] 0.112 secs (0.001u,0.028s)
Chars 4366 - 4367 [-] 0. secs (0.u,0.s)
Chars 4368 - 4387 [(destruct~n~as~[|~n]).] 0.001 secs (0.u,0.s)
Chars 4392 - 4393 [+] 0. secs (0.u,0.s)
Chars 4394 - 4401 [(elim~k).] 0. secs (0.u,0.s)
Chars 4406 - 4407 [+] 0. secs (0.u,0.s)
Chars 4408 - 4427 [(destruct~k~as~[k|~]).] 0.001 secs (0.001u,0.s)
Chars 4434 - 4435 [*] 0. secs (0.u,0.s)
Chars 4436 - 4543 [refine~(fin_transpose_last_two...] 0.001 secs (0.001u,0.s)
Chars 4552 - 4602 [refine~(fin_transpose_last_wit...] 0.001 secs (0.001u,0.s)
Chars 4609 - 4610 [*] 0. secs (0.u,0.s)
Chars 4611 - 4640 [(apply~fin_transpose_last_two).] 0. secs (0.u,0.s)
Chars 4643 - 4644 [-] 0. secs (0.u,0.s)
Chars 4645 - 4667 [exact~(equiv_idmap~_).] 0. secs (0.u,0.s)
Chars 4344 - 4363 [(destruct~k~as~[k|~]).] 0. secs (0.u,0.s)
Chars 4368 - 4387 [(destruct~n~as~[|~n]).] 0. secs (0.u,0.s)
Chars 4394 - 4401 [(elim~k).] 0. secs (0.u,0.s)
Chars 4408 - 4427 [(destruct~k~as~[k|~]).] 0. secs (0.u,0.s)
Chars 4436 - 4543 [refine~(fin_transpose_last_two...] 0. secs (0.u,0.s)
Chars 4552 - 4602 [refine~(fin_transpose_last_wit...] 0. secs (0.u,0.s)
Chars 4611 - 4640 [(apply~fin_transpose_last_two).] 0. secs (0.u,0.s)
Chars 4645 - 4667 [exact~(equiv_idmap~_).] 0. secs (0.u,0.s)
Chars 4668 - 4676 [Defined.] 0.002 secs (0.001u,0.001s)
Chars 4678 - 4728 [Arguments~fin_transpose_last_w...] 0. secs (0.u,0.s)
Chars 4730 - 4838 [Definition~fin_transpose_last_...] 0. secs (0.u,0.s)
Chars 4839 - 4845 [Proof.] 0. secs (0.u,0.s)
Chars 7472 - 7496 [(apply~path_path_algebra).] 40.072 secs (0.001u,0.035s)
Chars 7499 - 7531 [unshelve~(eapply~path_path_sig...] 0.003 secs (0.002u,0.s)
Chars 7534 - 7535 [-] 0. secs (0.u,0.s)
Chars 7536 - 7584 [(transitivity~(ap~carriers~p);...] 0.011 secs (0.008u,0.s)
Chars 7589 - 7645 [(transitivity~(ap~carriers~q);...] 0.01 secs (0.009u,0.s)
Chars 7648 - 7649 [-] 0. secs (0.u,0.s)
Chars 7650 - 7670 [(apply~hprop_allpath).] 0.008 secs (0.005u,0.002s)
Chars 7671 - 7688 [(apply~hset_path2).] 0.031 secs (0.026u,0.004s)
Chars 7472 - 7496 [(apply~path_path_algebra).] 0. secs (0.u,0.s)
Chars 7499 - 7531 [unshelve~(eapply~path_path_sig...] 0. secs (0.u,0.s)
Chars 7536 - 7584 [(transitivity~(ap~carriers~p);...] 0.001 secs (0.001u,0.s)
Chars 7589 - 7645 [(transitivity~(ap~carriers~q);...] 0.002 secs (0.002u,0.s)
Chars 7650 - 7670 [(apply~hprop_allpath).] 0.004 secs (0.004u,0.s)
Chars 7671 - 7688 [(apply~hset_path2).] 0.001 secs (0.001u,0.s)
Chars 7689 - 7697 [Defined.] 0.058 secs (0.05u,0.008s)
Chars 7699 - 7724 [Module~algebra_notations.] 0. secs (0.u,0.s)
Chars 7910 - 7971 [#[global]Notation~"u~.#~A"~:=~...] 0. secs (0.u,0.s)
Chars 7973 - 7995 [End~algebra_notations.] 0. secs (0.u,0.s)
Chars 4848 - 4867 [(destruct~k~as~[k|~]).] 10.273 secs (0.051u,-0.252s)
Chars 2149 - 2179 [(apply~path_universe_uncurried).] 40.165 secs (0.001u,0.032s)
Chars 2180 - 2201 [(apply~equiv_unit_rec).] 0. secs (0.u,0.s)
Chars 2149 - 2179 [(apply~path_universe_uncurried).] 0. secs (0.u,0.s)
Chars 2180 - 2201 [(apply~equiv_unit_rec).] 0. secs (0.u,0.s)
Chars 2202 - 2206 [Qed.] 0. secs (0.u,0.s)
Chars 2249 - 2279 [Context~{EM~:~ExcludedMiddle}.] 0. secs (0.u,0.s)
Chars 2281 - 2328 [Lemma~PE~(P~P'~:~HProp)~:~P~<-...] 0. secs (0.u,0.s)
Chars 2329 - 2335 [Proof.] 0. secs (0.u,0.s)
Chars 4848 - 4867 [(destruct~k~as~[k|~]).] 40.065 secs (0.003u,0.027s)
Chars 4870 - 4871 [-] 0. secs (0.u,0.s)
Chars 4872 - 4902 [(induction~n~as~[|~n~IH];~simpl).] 0.006 secs (0.006u,0.s)
Chars 4907 - 4908 [+] 0. secs (0.u,0.s)
Chars 4909 - 4916 [(elim~k).] 0.001 secs (0.001u,0.s)
Chars 4921 - 4922 [+] 0. secs (0.u,0.s)
Chars 4923 - 4942 [(destruct~k~as~[k|~]).] 0.003 secs (0.003u,0.s)
Chars 4949 - 4950 [*] 0. secs (0.u,0.s)
Chars 4951 - 4957 [(simpl).] 0.013 secs (0.012u,0.s)
Chars 4958 - 4982 [(rewrite~IH;~reflexivity).] 0.031 secs (0.026u,0.004s)
Chars 4989 - 4990 [*] 0. secs (0.u,0.s)
Chars 4991 - 4997 [(simpl).] 0.003 secs (0.002u,0.s)
Chars 4998 - 5023 [(apply~ap,~ap,~path_contr).] 0.002 secs (0.002u,0.s)
Chars 5026 - 5027 [-] 0. secs (0.u,0.s)
Chars 5132 - 5150 [(destruct~n;~simpl).] 0.003 secs (0.003u,0.s)
Chars 5155 - 5180 [all:~(apply~ap,~path_contr).] 0.002 secs (0.001u,0.s)
Chars 4848 - 4867 [(destruct~k~as~[k|~]).] 0. secs (0.u,0.s)
Chars 4872 - 4902 [(induction~n~as~[|~n~IH];~simpl).] 0.001 secs (0.001u,0.s)
Chars 4909 - 4916 [(elim~k).] 0. secs (0.u,0.s)
Chars 4923 - 4942 [(destruct~k~as~[k|~]).] 0. secs (0.u,0.s)
Chars 4951 - 4957 [(simpl).] 0. secs (0.u,0.s)
Chars 4958 - 4982 [(rewrite~IH;~reflexivity).] 0.003 secs (0.001u,0.001s)
Chars 4991 - 4997 [(simpl).] 0. secs (0.u,0.s)
Chars 4998 - 5023 [(apply~ap,~ap,~path_contr).] 0. secs (0.u,0.s)
Chars 5132 - 5150 [(destruct~n;~simpl).] 0.001 secs (0.001u,0.s)
Chars 5155 - 5180 [all:~(apply~ap,~path_contr).] 0. secs (0.u,0.s)
Chars 5181 - 5185 [Qed.] 0.01 secs (0.009u,0.s)
Chars 5187 - 5293 [Definition~fin_transpose_last_...] 0. secs (0.u,0.s)
Chars 5294 - 5300 [Proof.] 0. secs (0.u,0.s)
Chars 5303 - 5322 [(destruct~k~as~[k|~]).] 10.625 secs (0.279u,-0.273s)
Chars 2338 - 2351 [(intros~[f~g]).] 40.201 secs (0.001u,0.034s)
Chars 2352 - 2373 [(apply~path_trunctype).] 0.001 secs (0.001u,0.s)
Chars 2376 - 2385 [exists~f.] 0. secs (0.u,0.s)
Chars 2386 - 2406 [(apply~isequiv_biinv).] 0. secs (0.u,0.s)
Chars 2407 - 2413 [split.] 0. secs (0.u,0.s)
Chars 2416 - 2417 [-] 0. secs (0.u,0.s)
Chars 2418 - 2427 [exists~g.] 0.001 secs (0.001u,0.s)
Chars 2428 - 2437 [(intros~x).] 0. secs (0.u,0.s)
Chars 2438 - 2446 [(apply~P).] 0.001 secs (0.001u,0.s)
Chars 2449 - 2450 [-] 0. secs (0.u,0.s)
Chars 2451 - 2460 [exists~g.] 0.001 secs (0.001u,0.s)
Chars 2461 - 2470 [(intros~x).] 0. secs (0.u,0.s)
Chars 2471 - 2480 [(apply~P').] 0.001 secs (0.001u,0.s)
Chars 2338 - 2351 [(intros~[f~g]).] 0. secs (0.u,0.s)
Chars 2352 - 2373 [(apply~path_trunctype).] 0. secs (0.u,0.s)
Chars 2376 - 2385 [exists~f.] 0. secs (0.u,0.s)
Chars 2386 - 2406 [(apply~isequiv_biinv).] 0. secs (0.u,0.s)
Chars 2407 - 2413 [split.] 0. secs (0.u,0.s)
Chars 2418 - 2427 [exists~g.] 0. secs (0.u,0.s)
Chars 2428 - 2437 [(intros~x).] 0. secs (0.u,0.s)
Chars 2438 - 2446 [(apply~P).] 0. secs (0.u,0.s)
Chars 2451 - 2460 [exists~g.] 0. secs (0.u,0.s)
Chars 2461 - 2470 [(intros~x).] 0. secs (0.u,0.s)
Chars 2471 - 2480 [(apply~P').] 0. secs (0.u,0.s)
Chars 2481 - 2485 [Qed.] 0.001 secs (0.u,0.s)
Chars 2487 - 2525 [Lemma~path_bool_prop~:~HProp~=...] 0. secs (0.u,0.s)
Chars 2526 - 2532 [Proof.] 0. secs (0.u,0.s)
Chars 5303 - 5322 [(destruct~k~as~[k|~]).] 40.068 secs (0.002u,0.027s)
Chars 5325 - 5326 [-] 0. secs (0.u,0.s)
Chars 5327 - 5357 [(induction~n~as~[|~n~IH];~simpl).] 0.006 secs (0.006u,0.s)
Chars 5362 - 5363 [+] 0. secs (0.u,0.s)
Chars 5364 - 5371 [(elim~k).] 0.001 secs (0.001u,0.s)
Chars 5376 - 5377 [+] 0. secs (0.u,0.s)
Chars 5378 - 5404 [(destruct~k~as~[|~k];~simpl).] 0.018 secs (0.017u,0.s)
Chars 5411 - 5412 [*] 0. secs (0.u,0.s)
Chars 5413 - 5437 [(rewrite~IH;~reflexivity).] 0.009 secs (0.009u,0.s)
Chars 5444 - 5445 [*] 0. secs (0.u,0.s)
Chars 5446 - 5467 [(apply~ap,~path_contr).] 0.002 secs (0.002u,0.s)
Chars 5470 - 5471 [-] 0. secs (0.u,0.s)
Chars 5472 - 5490 [(destruct~n;~simpl).] 0.003 secs (0.003u,0.s)
Chars 5495 - 5520 [all:~(apply~ap,~path_contr).] 0.002 secs (0.002u,0.s)
Chars 5303 - 5322 [(destruct~k~as~[k|~]).] 0. secs (0.u,0.s)
Chars 5327 - 5357 [(induction~n~as~[|~n~IH];~simpl).] 0.001 secs (0.u,0.s)
Chars 5364 - 5371 [(elim~k).] 0. secs (0.u,0.s)
Chars 5378 - 5404 [(destruct~k~as~[|~k];~simpl).] 0.002 secs (0.001u,0.s)
Chars 5413 - 5437 [(rewrite~IH;~reflexivity).] 0.003 secs (0.003u,0.s)
Chars 5446 - 5467 [(apply~ap,~path_contr).] 0. secs (0.u,0.s)
Chars 5472 - 5490 [(destruct~n;~simpl).] 0.001 secs (0.001u,0.s)
Chars 5495 - 5520 [all:~(apply~ap,~path_contr).] 0. secs (0.u,0.s)
Chars 5521 - 5525 [Qed.] 0.011 secs (0.011u,0.s)
Chars 5527 - 5694 [Definition~fin_transpose_last_...] 0.001 secs (0.001u,0.s)
Chars 5695 - 5701 [Proof.] 0. secs (0.u,0.s)
Chars 2535 - 2565 [(apply~path_universe_uncurried).] 31.289 secs (18.46u,0.075s)
Chars 2535 - 2565 [(apply~path_universe_uncurried).] 40.072 secs (0.001u,0.035s)
Chars 2566 - 2591 [srapply~equiv_adjointify.] 0.002 secs (0.001u,0.s)
Chars 2594 - 2595 [-] 0. secs (0.u,0.s)
Chars 2596 - 2645 [exact~(fun~P~=>~if~LEM~P~_~the...] 0.006 secs (0.006u,0.s)
Chars 2648 - 2649 [-] 0. secs (0.u,0.s)
Chars 2650 - 2714 [exact~(fun~b~:~Bool~=>~if~b~th...] 0.001 secs (0.001u,0.s)
Chars 2717 - 2718 [-] 0. secs (0.u,0.s)
Chars 2719 - 2758 [(intros~[];~destruct~LEM~as~[H...] 0.037 secs (0.026u,0.01s)
Chars 2763 - 2764 [+] 0. secs (0.u,0.s)
Chars 2765 - 2786 [(destruct~(H~(tr~tt))).] 0.001 secs (0.001u,0.s)
Chars 2791 - 2792 [+] 0. secs (0.u,0.s)
Chars 2793 - 2830 [(apply~(@merely_destruct~Empty...] 0.005 secs (0.002u,0.002s)
Chars 2833 - 2834 [-] 0. secs (0.u,0.s)
Chars 2835 - 2844 [(intros~P).] 0. secs (0.u,0.s)
Chars 2845 - 2877 [(destruct~LEM~as~[H|~H];~apply...] 0.004 secs (0.004u,0.s)
Chars 2882 - 2883 [+] 0. secs (0.u,0.s)
Chars 2884 - 2896 [(split;~auto).] 0.002 secs (0.002u,0.s)
Chars 2897 - 2906 [(intros~_).] 0. secs (0.u,0.s)
Chars 2907 - 2916 [(apply~tr).] 0.001 secs (0.001u,0.s)
Chars 2917 - 2926 [exact~tt.] 0. secs (0.u,0.s)
Chars 2931 - 2932 [+] 0. secs (0.u,0.s)
Chars 2933 - 2949 [(split;~try~easy).] 0.007 secs (0.007u,0.s)
Chars 2950 - 2960 [(intros~HE).] 0. secs (0.u,0.s)
Chars 2961 - 2998 [(apply~(@merely_destruct~Empty...] 0.008 secs (0.007u,0.s)
Chars 2535 - 2565 [(apply~path_universe_uncurried).] 0. secs (0.u,0.s)
Chars 2566 - 2591 [srapply~equiv_adjointify.] 0. secs (0.u,0.s)
Chars 2596 - 2645 [exact~(fun~P~=>~if~LEM~P~_~the...] 0. secs (0.u,0.s)
Chars 2650 - 2714 [exact~(fun~b~:~Bool~=>~if~b~th...] 0. secs (0.u,0.s)
Chars 2719 - 2758 [(intros~[];~destruct~LEM~as~[H...] 0.001 secs (0.001u,0.s)
Chars 2765 - 2786 [(destruct~(H~(tr~tt))).] 0. secs (0.u,0.s)
Chars 2793 - 2830 [(apply~(@merely_destruct~Empty...] 0. secs (0.u,0.s)
Chars 2835 - 2844 [(intros~P).] 0. secs (0.u,0.s)
Chars 2845 - 2877 [(destruct~LEM~as~[H|~H];~apply...] 0.001 secs (0.u,0.s)
Chars 2884 - 2896 [(split;~auto).] 0. secs (0.u,0.s)
Chars 2897 - 2906 [(intros~_).] 0. secs (0.u,0.s)
Chars 2907 - 2916 [(apply~tr).] 0. secs (0.u,0.s)
Chars 2917 - 2926 [exact~tt.] 0. secs (0.u,0.s)
Chars 2933 - 2949 [(split;~try~easy).] 0. secs (0.u,0.s)
Chars 2950 - 2960 [(intros~HE).] 0. secs (0.u,0.s)
Chars 2961 - 2998 [(apply~(@merely_destruct~Empty...] 0. secs (0.u,0.s)
Chars 2999 - 3003 [Qed.] 0.005 secs (0.004u,0.s)
Chars 3005 - 3061 [Lemma~path_bool_subsingleton~:...] 0. secs (0.u,0.s)
Chars 3062 - 3068 [Proof.] 0. secs (0.u,0.s)
Chars 5704 - 5723 [(destruct~k~as~[k|~]).] 40.199 secs (0.001u,0.028s)
Chars 5726 - 5727 [-] 0. secs (0.u,0.s)
Chars 5728 - 5758 [(induction~n~as~[|~n~IH];~simpl).] 0.006 secs (0.005u,0.001s)
Chars 5763 - 5772 [1:~(elim~k).] 0.001 secs (0.001u,0.s)
Chars 5777 - 5803 [(destruct~k~as~[k|~];~simpl).] 0.032 secs (0.029u,0.002s)
Chars 5808 - 5809 [{] 0. secs (0.u,0.s)
Chars 5810 - 5836 [(destruct~l~as~[l|~];~simpl).] 0.021 secs (0.02u,0.s)
Chars 5843 - 5844 [-] 0. secs (0.u,0.s)
Chars 5845 - 5856 [(rewrite~IH).] 0.007 secs (0.007u,0.s)
Chars 5865 - 5866 [+] 0. secs (0.u,0.s)
Chars 5867 - 5879 [reflexivity.] 0.002 secs (0.002u,0.s)
Chars 5888 - 5889 [+] 0. secs (0.u,0.s)
Chars 5890 - 5923 [exact~(fun~p~=>~notk~(ap~inl~p)).] 0.002 secs (0.002u,0.s)
Chars 5930 - 5931 [-] 0. secs (0.u,0.s)
Chars 5932 - 5944 [reflexivity.] 0.001 secs (0.001u,0.s)
Chars 5945 - 5946 [}] 0. secs (0.u,0.s)
Chars 5951 - 5952 [{] 0. secs (0.u,0.s)
Chars 5953 - 5979 [(destruct~l~as~[l|~];~simpl).] 0.011 secs (0.01u,0.s)
Chars 5986 - 5987 [-] 0. secs (0.u,0.s)
Chars 5988 - 6000 [reflexivity.] 0.001 secs (0.001u,0.s)
Chars 6007 - 6008 [-] 0. secs (0.u,0.s)
Chars 6009 - 6055 [(elim~(notk~(ap~inl~(ap~inr~(p...] 0.005 secs (0.005u,0.s)
Chars 6056 - 6057 [}] 0. secs (0.u,0.s)
Chars 6060 - 6061 [-] 0. secs (0.u,0.s)
Chars 6062 - 6086 [(destruct~n;~reflexivity).] 0.004 secs (0.003u,0.s)
Chars 5704 - 5723 [(destruct~k~as~[k|~]).] 0. secs (0.u,0.s)
Chars 5728 - 5758 [(induction~n~as~[|~n~IH];~simpl).] 0.001 secs (0.001u,0.s)
Chars 5763 - 5772 [1:~(elim~k).] 0. secs (0.u,0.s)
Chars 5777 - 5803 [(destruct~k~as~[k|~];~simpl).] 0.002 secs (0.002u,0.s)
Chars 5810 - 5836 [(destruct~l~as~[l|~];~simpl).] 0.01 secs (0.008u,0.001s)
Chars 5845 - 5856 [(rewrite~IH).] 0.002 secs (0.002u,0.s)
Chars 5867 - 5879 [reflexivity.] 0.001 secs (0.u,0.s)
Chars 5890 - 5923 [exact~(fun~p~=>~notk~(ap~inl~p)).] 0. secs (0.u,0.s)
Chars 5932 - 5944 [reflexivity.] 0. secs (0.u,0.s)
Chars 5953 - 5979 [(destruct~l~as~[l|~];~simpl).] 0.005 secs (0.005u,0.s)
Chars 5988 - 6000 [reflexivity.] 0. secs (0.u,0.s)
Chars 6009 - 6055 [(elim~(notk~(ap~inl~(ap~inr~(p...] 0. secs (0.u,0.s)
Chars 6062 - 6086 [(destruct~n;~reflexivity).] 0.001 secs (0.001u,0.s)
Chars 6087 - 6091 [Qed.] 0.061 secs (0.052u,0.008s)
Chars 6093 - 6207 [Definition~fin_transpose_last_...] 0. secs (0.u,0.s)
Chars 6208 - 6214 [Proof.] 0. secs (0.u,0.s)
Chars 6217 - 6241 [(destruct~n;~reflexivity).] 1.938 secs (0.003u,0.027s)
Chars 6217 - 6241 [(destruct~n;~reflexivity).] 0.001 secs (0.u,0.s)
Chars 6242 - 6246 [Qed.] 0.001 secs (0.001u,0.s)
Chars 6248 - 6383 [Definition~fin_transpose_last_...] 0.001 secs (0.001u,0.s)
Chars 6384 - 6390 [Proof.] 0. secs (0.u,0.s)
Chars 3071 - 3096 [(rewrite~<-~path_unit_fun).] 40.193 secs (0.001u,0.033s)
Chars 3097 - 3118 [(apply~path_bool_prop).] 0. secs (0.u,0.s)
Chars 3071 - 3096 [(rewrite~<-~path_unit_fun).] 0. secs (0.u,0.s)
Chars 3097 - 3118 [(apply~path_bool_prop).] 0. secs (0.u,0.s)
Chars 3119 - 3123 [Qed.] 0. secs (0.u,0.s)
Chars 3125 - 3201 [Lemma~path_pred_sum~X~(p~:~X~-...] 0.001 secs (0.001u,0.s)
Chars 3202 - 3208 [Proof.] 0. secs (0.u,0.s)
Chars 6393 - 6402 [(intros~l).] 40.227 secs (0.u,0.029s)
Chars 6405 - 6426 [(destruct~l~as~[l|~[]]).] 0.002 secs (0.001u,0.001s)
Chars 6429 - 6430 [-] 0. secs (0.u,0.s)
Chars 6431 - 6452 [(destruct~k~as~[k|~[]]).] 0.002 secs (0.002u,0.s)
Chars 6457 - 6458 [{] 0. secs (0.u,0.s)
Chars 6459 - 6493 [(destruct~(dec_paths~k~l)~as~[...] 0.004 secs (0.004u,0.s)
Chars 6500 - 6501 [-] 0. secs (0.u,0.s)
Chars 6502 - 6512 [(rewrite~p).] 0.001 secs (0.001u,0.s)
Chars 6521 - 6558 [(rewrite~fin_transpose_last_wi...] 0.002 secs (0.u,0.002s)
Chars 6567 - 6602 [(apply~fin_transpose_last_with...] 0.001 secs (0.001u,0.s)
Chars 6609 - 6610 [-] 0. secs (0.u,0.s)
Chars 6611 - 6747 [(rewrite~fin_transpose_last_wi...] 0.007 secs (0.006u,0.s)
Chars 6748 - 6749 [}] 0. secs (0.u,0.s)
Chars 6754 - 6755 [+] 0. secs (0.u,0.s)
Chars 6756 - 6799 [(rewrite~fin_transpose_last_wi...] 0.002 secs (0.002u,0.s)
Chars 6806 - 6847 [(apply~fin_transpose_last_with...] 0.001 secs (0.001u,0.s)
Chars 6850 - 6851 [-] 0. secs (0.u,0.s)
Chars 6852 - 6889 [(rewrite~fin_transpose_last_wi...] 0.002 secs (0.002u,0.s)
Chars 6894 - 6929 [(apply~fin_transpose_last_with...] 0.001 secs (0.001u,0.s)
Chars 6393 - 6402 [(intros~l).] 0. secs (0.u,0.s)
Chars 6405 - 6426 [(destruct~l~as~[l|~[]]).] 0. secs (0.u,0.s)
Chars 6431 - 6452 [(destruct~k~as~[k|~[]]).] 0. secs (0.u,0.s)
Chars 6459 - 6493 [(destruct~(dec_paths~k~l)~as~[...] 0. secs (0.u,0.s)
Chars 6502 - 6512 [(rewrite~p).] 0. secs (0.u,0.s)
Chars 6521 - 6558 [(rewrite~fin_transpose_last_wi...] 0. secs (0.u,0.s)
Chars 6567 - 6602 [(apply~fin_transpose_last_with...] 0. secs (0.u,0.s)
Chars 6611 - 6747 [(rewrite~fin_transpose_last_wi...] 0.001 secs (0.001u,0.s)
Chars 6756 - 6799 [(rewrite~fin_transpose_last_wi...] 0. secs (0.u,0.s)
Chars 6806 - 6847 [(apply~fin_transpose_last_with...] 0. secs (0.u,0.s)
Chars 6852 - 6889 [(rewrite~fin_transpose_last_wi...] 0. secs (0.u,0.s)
Chars 6894 - 6929 [(apply~fin_transpose_last_with...] 0. secs (0.u,0.s)
Chars 6930 - 6934 [Qed.] 0.006 secs (0.006u,0.s)
Chars 7416 - 7575 [Definition~fin_equiv~(n~m~:~na...] 0.002 secs (0.002u,0.s)
Chars 7653 - 7796 [Definition~fin_equiv'~(n~m~:~n...] 0.001 secs (0.u,0.s)
Chars 7965 - 8100 [Definition~fin_equiv_hfiber~(n...] 0.001 secs (0.001u,0.s)
Chars 8101 - 8107 [Proof.] 0. secs (0.u,0.s)
     = [:: 1%Z; 0%Z; 0%Z]
     : seq Z
     = [:: 233%Z; 89%Z; 144%Z]
     : seq Z
     = 233%Z
     : Z
     = true
     : bool
Chars 3211 - 3241 [(apply~path_universe_uncurried).] 40.176 secs (0.001u,0.034s)
Chars 3242 - 3267 [srapply~equiv_adjointify.] 0.002 secs (0.002u,0.s)
Chars 3270 - 3271 [-] 0. secs (0.u,0.s)
Chars 3272 - 3281 [(intros~x).] 0. secs (0.u,0.s)
Chars 3282 - 3344 [(destruct~(LEM~(p~x)~_)~as~[H|...] 0.011 secs (0.009u,0.s)
Chars 3347 - 3348 [-] 0. secs (0.u,0.s)
Chars 3349 - 3379 [(intros~[[x~_]|~[x~_]];~exact~x).] 0.002 secs (0.001u,0.s)
Chars 3382 - 3383 [-] 0. secs (0.u,0.s)
Chars 3384 - 3388 [(cbn).] 0.002 secs (0.002u,0.s)
Chars 3389 - 3454 [(intros~[[x~Hx]|~[x~Hx]];~dest...] 0.019 secs (0.018u,0.s)
Chars 3459 - 3460 [+] 0. secs (0.u,0.s)
Chars 3461 - 3498 [(enough~(H~=~Hx)~as~->~by~refl...] 0.002 secs (0.002u,0.s)
Chars 3499 - 3507 [(apply~p).] 0.001 secs (0.001u,0.s)
Chars 3512 - 3513 [+] 0. secs (0.u,0.s)
Chars 3514 - 3551 [(enough~(H~=~Hx)~as~->~by~refl...] 0.002 secs (0.002u,0.s)
Chars 3552 - 3570 [(apply~path_forall).] 0.001 secs (0.001u,0.s)
Chars 3571 - 3585 [now~intros~HP.] 0.004 secs (0.003u,0.001s)
Chars 3588 - 3589 [-] 0. secs (0.u,0.s)
Chars 3590 - 3594 [(cbn).] 0.001 secs (0.001u,0.s)
Chars 3595 - 3604 [(intros~x).] 0.001 secs (0.001u,0.s)
Chars 3605 - 3622 [now~destruct~LEM.] 0.004 secs (0.004u,0.s)
Chars 3211 - 3241 [(apply~path_universe_uncurried).] 0. secs (0.u,0.s)
Chars 3242 - 3267 [srapply~equiv_adjointify.] 0. secs (0.u,0.s)
Chars 3272 - 3281 [(intros~x).] 0. secs (0.u,0.s)
Chars 3282 - 3344 [(destruct~(LEM~(p~x)~_)~as~[H|...] 0.001 secs (0.001u,0.s)
Chars 3349 - 3379 [(intros~[[x~_]|~[x~_]];~exact~x).] 0. secs (0.u,0.s)
Chars 3384 - 3388 [(cbn).] 0.001 secs (0.001u,0.s)
Chars 3389 - 3454 [(intros~[[x~Hx]|~[x~Hx]];~dest...] 0.004 secs (0.004u,0.s)
Chars 3461 - 3498 [(enough~(H~=~Hx)~as~->~by~refl...] 0. secs (0.u,0.s)
Chars 3499 - 3507 [(apply~p).] 0. secs (0.u,0.s)
Chars 3514 - 3551 [(enough~(H~=~Hx)~as~->~by~refl...] 0. secs (0.u,0.s)
Chars 3552 - 3570 [(apply~path_forall).] 0. secs (0.u,0.s)
Chars 3571 - 3585 [now~intros~HP.] 0. secs (0.u,0.s)
Chars 3590 - 3594 [(cbn).] 0.001 secs (0.001u,0.s)
Chars 3595 - 3604 [(intros~x).] 0. secs (0.u,0.s)
Chars 3605 - 3622 [now~destruct~LEM.] 0. secs (0.u,0.s)
Chars 3623 - 3627 [Qed.] 0.015 secs (0.009u,0.005s)
Chars 3629 - 3711 [Definition~ran~{X~Y~:~Type}~(f...] 0. secs (0.u,0.s)
Chars 3713 - 3793 [Lemma~path_ran~{X}~{Y~:~HSet}~...] 0.001 secs (0.001u,0.s)
Chars 3794 - 3800 [Proof.] 0. secs (0.u,0.s)
     = 89
     : nat
Chars 8110 - 8121 [(simpl~in~e).] 40.216 secs (0.u,0.028s)
Chars 8124 - 8154 [refine~(equiv_sigma_prod~_~_).] 0.001 secs (0.001u,0.s)
Chars 8157 - 8188 [recall~(e~(inr~tt))~as~y~eqn:~p.] 0.002 secs (0.001u,0.s)
Chars 8191 - 8229 [(pose~proof~(moveL_equiv_V~_~_...] 0.005 secs (0.005u,0.s)
Chars 8232 - 8241 [exists~y.] 0.001 secs (0.001u,0.s)
Chars 8244 - 8265 [(destruct~y~as~[y|~[]]).] 0.004 secs (0.003u,0.s)
Chars 8268 - 8269 [+] 0. secs (0.u,0.s)
Chars 8270 - 8385 [simple~refine~~(equiv_unfuncto...] 0.003 secs (0.002u,0.001s)
Chars 8390 - 8391 [{] 0. secs (0.u,0.s)
Chars 8392 - 8401 [(intros~a).] 0.001 secs (0.001u,0.s)
Chars 8402 - 8411 [ev_equiv.] 0.002 secs (0.001u,0.s)
Chars 8418 - 8517 [(assert~(q~:~inl~y~<>~e~(inl~a...] 0.006 secs (0.006u,0.s)
Chars 8524 - 8550 [(set~(z~:=~e~(inl~a))~in~*).] 0.002 secs (0.002u,0.s)
Chars 8557 - 8578 [(destruct~z~as~[z|~[]]).] 0.003 secs (0.003u,0.s)
Chars 8585 - 8586 [-] 0. secs (0.u,0.s)
Chars 8587 - 8662 [(rewrite~fin_transpose_last_wi...] 0.005 secs (0.005u,0.s)
Chars 8669 - 8670 [-] 0. secs (0.u,0.s)
Chars 8671 - 8718 [(rewrite~fin_transpose_last_wi...] 0.003 secs (0.002u,0.s)
Chars 8719 - 8720 [}] 0. secs (0.u,0.s)
Chars 8725 - 8726 [{] 0. secs (0.u,0.s)
Chars 8727 - 8737 [(intros~[]).] 0.002 secs (0.002u,0.s)
Chars 8738 - 8747 [ev_equiv.] 0.002 secs (0.002u,0.s)
Chars 8754 - 8764 [(rewrite~p).] 0.002 secs (0.002u,0.s)
Chars 8771 - 8818 [(rewrite~fin_transpose_last_wi...] 0.003 secs (0.003u,0.s)
Chars 8819 - 8820 [}] 0. secs (0.u,0.s)
Chars 8825 - 8834 [(intros~x).] 0.005 secs (0.005u,0.s)
Chars 8835 - 8861 [(unfold~fst,~snd;~ev_equiv).] 0.012 secs (0.011u,0.001s)
Chars 8862 - 8868 [(simpl).] 0.01 secs (0.01u,0.s)
Chars 8873 - 8901 [(destruct~x~as~[x|~[]];~simpl).] 0.028 secs (0.025u,0.002s)
Chars 8906 - 8907 [*] 0. secs (0.u,0.s)
Chars 8908 - 8937 [(rewrite~unfunctor_sum_l_beta).] 0.012 secs (0.009u,0.002s)
Chars 8944 - 8980 [(apply~fin_transpose_last_with...] 0.002 secs (0.002u,0.s)
Chars 8985 - 8986 [*] 0. secs (0.u,0.s)
Chars 8987 - 9034 [refine~(fin_transpose_last_wit...] 0.002 secs (0.002u,0.s)
Chars 9037 - 9038 [+] 0. secs (0.u,0.s)
Chars 9039 - 9087 [simple~refine~(equiv_unfunctor...] 0.002 secs (0.002u,0.s)
Chars 9092 - 9093 [{] 0. secs (0.u,0.s)
Chars 9094 - 9103 [(intros~a).] 0. secs (0.u,0.s)
Chars 9110 - 9159 [(destruct~(is_inl_or_is_inr~(e...] 0.003 secs (0.002u,0.s)
Chars 9166 - 9167 [-] 0. secs (0.u,0.s)
Chars 9168 - 9176 [exact~l.] 0.001 secs (0.001u,0.s)
Chars 9183 - 9184 [-] 0. secs (0.u,0.s)
Chars 9185 - 9224 [(pose~proof~(inr_un_inr~(e~(in...] 0.002 secs (0.002u,0.s)
Chars 9233 - 9258 [(apply~moveR_equiv_V~in~q).] 0.004 secs (0.003u,0.001s)
Chars 9267 - 9323 [(pose~proof~((q^~@~ap~(e^-1~o~...] 0.005 secs (0.004u,0.s)
Chars 9332 - 9356 [(elim~(inl_ne_inr~_~_~s)).] 0.002 secs (0.002u,0.s)
Chars 9357 - 9358 [}] 0. secs (0.u,0.s)
Chars 9363 - 9364 [{] 0. secs (0.u,0.s)
Chars 9365 - 9392 [(intros~[];~exact~(p^~#~tt)).] 0.002 secs (0.002u,0.s)
Chars 9393 - 9394 [}] 0. secs (0.u,0.s)
Chars 9399 - 9408 [(intros~x).] 0.004 secs (0.004u,0.s)
Chars 9409 - 9435 [(unfold~fst,~snd;~ev_equiv).] 0.009 secs (0.008u,0.s)
Chars 9436 - 9442 [(simpl).] 0.014 secs (0.01u,0.003s)
Chars 9447 - 9468 [(destruct~x~as~[a|~[]]).] 0.023 secs (0.02u,0.003s)
Chars 9473 - 9474 [*] 0. secs (0.u,0.s)
Chars 9475 - 9518 [(rewrite~fin_transpose_last_wi...] 0.007 secs (0.005u,0.001s)
Chars 9525 - 9552 [(apply~unfunctor_sum_l_beta).] 0.004 secs (0.004u,0.s)
Chars 9557 - 9558 [*] 0. secs (0.u,0.s)
Chars 9559 - 9565 [(simpl).] 0.003 secs (0.003u,0.s)
Chars 9572 - 9609 [(rewrite~fin_transpose_last_wi...] 0.002 secs (0.002u,0.s)
Chars 9616 - 9634 [(symmetry;~apply~p).] 0.003 secs (0.002u,0.001s)
Chars 8110 - 8121 [(simpl~in~e).] 0. secs (0.u,0.s)
Chars 8124 - 8154 [refine~(equiv_sigma_prod~_~_).] 0. secs (0.u,0.s)
Chars 8157 - 8188 [recall~(e~(inr~tt))~as~y~eqn:~p.] 0. secs (0.u,0.s)
Chars 8191 - 8229 [(pose~proof~(moveL_equiv_V~_~_...] 0. secs (0.u,0.s)
Chars 8232 - 8241 [exists~y.] 0. secs (0.u,0.s)
Chars 8244 - 8265 [(destruct~y~as~[y|~[]]).] 0. secs (0.u,0.s)
Chars 8270 - 8385 [simple~refine~~(equiv_unfuncto...] 0. secs (0.u,0.s)
Chars 8392 - 8401 [(intros~a).] 0. secs (0.u,0.s)
Chars 8402 - 8411 [ev_equiv.] 0. secs (0.u,0.s)
Chars 8418 - 8517 [(assert~(q~:~inl~y~<>~e~(inl~a...] 0. secs (0.u,0.s)
Chars 8524 - 8550 [(set~(z~:=~e~(inl~a))~in~*).] 0. secs (0.u,0.s)
Chars 8557 - 8578 [(destruct~z~as~[z|~[]]).] 0. secs (0.u,0.s)
Chars 8587 - 8662 [(rewrite~fin_transpose_last_wi...] 0.002 secs (0.u,0.001s)
Chars 8671 - 8718 [(rewrite~fin_transpose_last_wi...] 0.001 secs (0.001u,0.s)
Chars 8727 - 8737 [(intros~[]).] 0. secs (0.u,0.s)
Chars 8738 - 8747 [ev_equiv.] 0. secs (0.u,0.s)
Chars 8754 - 8764 [(rewrite~p).] 0. secs (0.u,0.s)
Chars 8771 - 8818 [(rewrite~fin_transpose_last_wi...] 0.001 secs (0.001u,0.s)
Chars 8825 - 8834 [(intros~x).] 0.004 secs (0.004u,0.s)
Chars 8835 - 8861 [(unfold~fst,~snd;~ev_equiv).] 0.008 secs (0.008u,0.s)
Chars 8862 - 8868 [(simpl).] 0.004 secs (0.004u,0.s)
Chars 8873 - 8901 [(destruct~x~as~[x|~[]];~simpl).] 0.009 secs (0.007u,0.002s)
Chars 8908 - 8937 [(rewrite~unfunctor_sum_l_beta).] 0.003 secs (0.003u,0.s)
Chars 8944 - 8980 [(apply~fin_transpose_last_with...] 0. secs (0.u,0.s)
Chars 8987 - 9034 [refine~(fin_transpose_last_wit...] 0. secs (0.u,0.s)
Chars 9039 - 9087 [simple~refine~(equiv_unfunctor...] 0. secs (0.u,0.s)
Chars 9094 - 9103 [(intros~a).] 0. secs (0.u,0.s)
Chars 9110 - 9159 [(destruct~(is_inl_or_is_inr~(e...] 0. secs (0.u,0.s)
Chars 9168 - 9176 [exact~l.] 0. secs (0.u,0.s)
Chars 9185 - 9224 [(pose~proof~(inr_un_inr~(e~(in...] 0. secs (0.u,0.s)
Chars 9233 - 9258 [(apply~moveR_equiv_V~in~q).] 0. secs (0.u,0.s)
Chars 9267 - 9323 [(pose~proof~((q^~@~ap~(e^-1~o~...] 0. secs (0.u,0.s)
Chars 9332 - 9356 [(elim~(inl_ne_inr~_~_~s)).] 0. secs (0.u,0.s)
Chars 9365 - 9392 [(intros~[];~exact~(p^~#~tt)).] 0.001 secs (0.001u,0.s)
Chars 9399 - 9408 [(intros~x).] 0.003 secs (0.003u,0.s)
Chars 9409 - 9435 [(unfold~fst,~snd;~ev_equiv).] 0.006 secs (0.005u,0.s)
Chars 9436 - 9442 [(simpl).] 0.002 secs (0.002u,0.s)
Chars 9447 - 9468 [(destruct~x~as~[a|~[]]).] 0.002 secs (0.002u,0.s)
Chars 9475 - 9518 [(rewrite~fin_transpose_last_wi...] 0.002 secs (0.002u,0.s)
Chars 9525 - 9552 [(apply~unfunctor_sum_l_beta).] 0.002 secs (0.002u,0.s)
Chars 9559 - 9565 [(simpl).] 0.002 secs (0.u,0.001s)
Chars 9572 - 9609 [(rewrite~fin_transpose_last_wi...] 0. secs (0.u,0.s)
Chars 9616 - 9634 [(symmetry;~apply~p).] 0.001 secs (0.u,0.s)
Chars 9635 - 9639 [Qed.] 0.103 secs (0.083u,0.019s)
Chars 9641 - 9771 [Definition~fin_equiv_inv~(n~m~...] 0.002 secs (0.001u,0.001s)
Chars 9773 - 9917 [Definition~fin_equiv_issect~(n...] 0.003 secs (0.002u,0.001s)
Chars 9919 - 10066 [Definition~fin_equiv_inj_fst~(...] 0.001 secs (0.001u,0.s)
Chars 10067 - 10073 [Proof.] 0. secs (0.u,0.s)
Chars 3803 - 3813 [(intros~Hf).] 40.177 secs (0.001u,0.034s)
Chars 3814 - 3844 [(apply~path_universe_uncurried).] 0.001 secs (0.u,0.001s)
Chars 3845 - 3870 [srapply~equiv_adjointify.] 0.002 secs (0.002u,0.s)
Chars 3873 - 3874 [-] 0. secs (0.u,0.s)
Chars 3875 - 3888 [(intros~[y~H]).] 0.001 secs (0.001u,0.s)
Chars 3889 - 3949 [(destruct~(iota~(fun~x~=>~f~x~...] 0.024 secs (0.017u,0.005s)
Chars 3954 - 3973 [(split;~try~apply~H).] 0.002 secs (0.002u,0.s)
Chars 3974 - 3986 [(intros~x~x').] 0. secs (0.u,0.s)
Chars 3987 - 3991 [(cbn).] 0. secs (0.u,0.s)
Chars 3992 - 4006 [(intros~Hy~Hy').] 0. secs (0.u,0.s)
Chars 4007 - 4028 [(rewrite~<-~Hy'~in~Hy).] 0.001 secs (0.001u,0.s)
Chars 4029 - 4042 [now~apply~Hf.] 0.004 secs (0.003u,0.s)
Chars 4045 - 4046 [-] 0. secs (0.u,0.s)
Chars 4047 - 4056 [(intros~x).] 0. secs (0.u,0.s)
Chars 4057 - 4070 [exists~(f~x).] 0.001 secs (0.001u,0.s)
Chars 4071 - 4080 [(apply~tr).] 0.001 secs (0.001u,0.s)
Chars 4081 - 4090 [exists~x.] 0.001 secs (0.001u,0.s)
Chars 4091 - 4103 [reflexivity.] 0. secs (0.u,0.s)
Chars 4106 - 4107 [-] 0. secs (0.u,0.s)
Chars 4108 - 4112 [(cbn).] 0.002 secs (0.002u,0.s)
Chars 4113 - 4122 [(intros~x).] 0.001 secs (0.001u,0.s)
Chars 4123 - 4147 [(destruct~iota~as~[x'~H]).] 0.003 secs (0.003u,0.s)
Chars 4148 - 4161 [now~apply~Hf.] 0.003 secs (0.002u,0.001s)
Chars 4164 - 4165 [-] 0. secs (0.u,0.s)
Chars 4166 - 4170 [(cbn).] 0.005 secs (0.004u,0.s)
Chars 4171 - 4184 [(intros~[y~x]).] 0.01 secs (0.009u,0.001s)
Chars 4185 - 4208 [(apply~path_sigma_hprop).] 0.013 secs (0.012u,0.001s)
Chars 4209 - 4213 [(cbn).] 0.003 secs (0.003u,0.s)
Chars 4218 - 4243 [(destruct~iota~as~[x'~Hx]).] 0.003 secs (0.003u,0.s)
Chars 4244 - 4253 [(apply~Hx).] 0. secs (0.u,0.s)
Chars 3803 - 3813 [(intros~Hf).] 0. secs (0.u,0.s)
Chars 3814 - 3844 [(apply~path_universe_uncurried).] 0. secs (0.u,0.s)
Chars 3845 - 3870 [srapply~equiv_adjointify.] 0. secs (0.u,0.s)
Chars 3875 - 3888 [(intros~[y~H]).] 0. secs (0.u,0.s)
Chars 3889 - 3949 [(destruct~(iota~(fun~x~=>~f~x~...] 0. secs (0.u,0.s)
Chars 3954 - 3973 [(split;~try~apply~H).] 0. secs (0.u,0.s)
Chars 3974 - 3986 [(intros~x~x').] 0. secs (0.u,0.s)
Chars 3987 - 3991 [(cbn).] 0. secs (0.u,0.s)
Chars 3992 - 4006 [(intros~Hy~Hy').] 0. secs (0.u,0.s)
Chars 4007 - 4028 [(rewrite~<-~Hy'~in~Hy).] 0. secs (0.u,0.s)
Chars 4029 - 4042 [now~apply~Hf.] 0. secs (0.u,0.s)
Chars 4047 - 4056 [(intros~x).] 0. secs (0.u,0.s)
Chars 4057 - 4070 [exists~(f~x).] 0. secs (0.u,0.s)
Chars 4071 - 4080 [(apply~tr).] 0. secs (0.u,0.s)
Chars 4081 - 4090 [exists~x.] 0. secs (0.u,0.s)
Chars 4091 - 4103 [reflexivity.] 0. secs (0.u,0.s)
Chars 4108 - 4112 [(cbn).] 0.001 secs (0.001u,0.s)
Chars 4113 - 4122 [(intros~x).] 0.001 secs (0.u,0.s)
Chars 4123 - 4147 [(destruct~iota~as~[x'~H]).] 0.001 secs (0.001u,0.s)
Chars 4148 - 4161 [now~apply~Hf.] 0. secs (0.u,0.s)
Chars 4166 - 4170 [(cbn).] 0.002 secs (0.002u,0.s)
Chars 4171 - 4184 [(intros~[y~x]).] 0.003 secs (0.003u,0.s)
Chars 4185 - 4208 [(apply~path_sigma_hprop).] 0.024 secs (0.02u,0.003s)
Chars 4209 - 4213 [(cbn).] 0.003 secs (0.003u,0.s)
Chars 4218 - 4243 [(destruct~iota~as~[x'~Hx]).] 0.001 secs (0.001u,0.s)
Chars 4244 - 4253 [(apply~Hx).] 0. secs (0.u,0.s)
Chars 4254 - 4258 [Qed.] 0.021 secs (0.017u,0.003s)
Chars 4302 - 4369 [Lemma~path_infinite_unit~(X~:~...] 0. secs (0.u,0.s)
Chars 4370 - 4376 [Proof.] 0. secs (0.u,0.s)
     = 57
     : N
     = 14137
     : N
Chars 10076 - 10085 [(intros~p).] 40.217 secs (0.u,0.028s)
Chars 10088 - 10176 [(refine~((_~@~p~(inr~tt))~@~_)...] 0.01 secs (0.009u,0.s)
Chars 10076 - 10085 [(intros~p).] 0. secs (0.u,0.s)
Chars 10088 - 10176 [(refine~((_~@~p~(inr~tt))~@~_)...] 0.003 secs (0.003u,0.s)
Chars 10177 - 10181 [Qed.] 0.003 secs (0.003u,0.s)
Chars 10183 - 10331 [Definition~fin_equiv_inj_snd~(...] 0.001 secs (0.u,0.001s)
Chars 10332 - 10338 [Proof.] 0. secs (0.u,0.s)
Chars 10341 - 10350 [(intros~p).] 0.786 secs (-9.852u,-0.99s)
Chars 4379 - 4393 [(intros~[f~Hf]).] 40.17 secs (0.002u,0.035s)
Chars 4394 - 4429 [(rewrite~(@path_pred_sum~X~(ra...] 0.002 secs (0.002u,0.s)
Chars 4432 - 4456 [(rewrite~(path_ran~_~Hf)).] 0.002 secs (0.001u,0.001s)
Chars 4457 - 4480 [(rewrite~path_sum_assoc).] 0.002 secs (0.002u,0.s)
Chars 4483 - 4505 [(rewrite~path_unit_nat).] 0.002 secs (0.001u,0.s)
Chars 4506 - 4518 [reflexivity.] 0. secs (0.u,0.s)
Chars 4379 - 4393 [(intros~[f~Hf]).] 0. secs (0.u,0.s)
Chars 4394 - 4429 [(rewrite~(@path_pred_sum~X~(ra...] 0. secs (0.u,0.s)
Chars 4432 - 4456 [(rewrite~(path_ran~_~Hf)).] 0. secs (0.u,0.s)
Chars 4457 - 4480 [(rewrite~path_sum_assoc).] 0. secs (0.u,0.s)
Chars 4483 - 4505 [(rewrite~path_unit_nat).] 0. secs (0.u,0.s)
Chars 4506 - 4518 [reflexivity.] 0. secs (0.u,0.s)
Chars 4519 - 4523 [Qed.] 0.002 secs (0.002u,0.s)
Chars 4525 - 4622 [Fact~path_infinite_power~(X~:~...] 0.001 secs (0.001u,0.s)
Chars 4623 - 4629 [Proof.] 0. secs (0.u,0.s)
Chars 10341 - 10350 [(intros~p).] 40.058 secs (0.001u,0.027s)
Chars 10353 - 10362 [(intros~x).] 0. secs (0.u,0.s)
Chars 10363 - 10400 [(pose~proof~(p~(inr~tt))~as~q;...] 0.003 secs (0.001u,0.001s)
Chars 10403 - 10446 [(rewrite~!fin_transpose_last_w...] 0.035 secs (0.022u,0.012s)
Chars 10449 - 10478 [(rewrite~<-~q~in~p;~clear~q~l).] 0.002 secs (0.001u,0.s)
Chars 10481 - 10569 [exact~(path_sum_inl~_~(equiv_i...] 0.014 secs (0.012u,0.001s)
Chars 10341 - 10350 [(intros~p).] 0. secs (0.u,0.s)
Chars 10353 - 10362 [(intros~x).] 0. secs (0.u,0.s)
Chars 10363 - 10400 [(pose~proof~(p~(inr~tt))~as~q;...] 0.001 secs (0.001u,0.s)
Chars 10403 - 10446 [(rewrite~!fin_transpose_last_w...] 0. secs (0.u,0.s)
Chars 10449 - 10478 [(rewrite~<-~q~in~p;~clear~q~l).] 0.001 secs (0.u,0.s)
Chars 10481 - 10569 [exact~(path_sum_inl~_~(equiv_i...] 0. secs (0.u,0.s)
Chars 10570 - 10574 [Qed.] 0.006 secs (0.005u,0.s)
Chars 10609 - 10692 [#[global]~Instance~isequiv_fin...] 0.001 secs (0.001u,0.s)
Chars 10693 - 10699 [Proof.] 0. secs (0.u,0.s)
'expQnat_R' is now a registered translation.
If ffalse or nil then ;; else If ttrue then ;; else ;; end end
     : st
Chars 10702 - 10740 [(refine~(isequiv_pathsplit~0~_...] 9.548 secs (-1.538u,-0.664s)
[DEBUG] {|
  case_ind := nat;
  case_val := 3;
  case_return := Dyn (fun _ : nat => bool);
  case_branches := [m: Dyn true
                     | Dyn (fun _ : nat => false)]
|}
Chars 4632 - 4641 [(intros~H).] 40.188 secs (0.u,0.034s)
Chars 4642 - 4664 [(rewrite~path_sum_bool).] 0.001 secs (0.u,0.s)
Chars 4665 - 4699 [(rewrite~<-~path_bool_subsingl...] 0.001 secs (0.001u,0.s)
Chars 4702 - 4724 [(rewrite~path_sum_prod).] 0.001 secs (0.001u,0.s)
Chars 4725 - 4756 [now~rewrite~path_infinite_unit.] 0.005 secs (0.004u,0.s)
Chars 4632 - 4641 [(intros~H).] 0. secs (0.u,0.s)
Chars 4642 - 4664 [(rewrite~path_sum_bool).] 0. secs (0.u,0.s)
Chars 4665 - 4699 [(rewrite~<-~path_bool_subsingl...] 0. secs (0.u,0.s)
Chars 4702 - 4724 [(rewrite~path_sum_prod).] 0. secs (0.u,0.s)
Chars 4725 - 4756 [now~rewrite~path_infinite_unit.] 0. secs (0.u,0.s)
Chars 4757 - 4761 [Qed.] 0.001 secs (0.u,0.s)
Chars 5000 - 5028 [Context~{PR~:~PropResizing}.] 0. secs (0.u,0.s)
Chars 5030 - 5097 [Lemma~Cantor~X~(f~:~X~->~X~->~...] 0. secs (0.u,0.s)
Chars 5098 - 5104 [Proof.] 0. secs (0.u,0.s)
produces_a_value
     : M nat
the_value_tactic = 1
     : nat
empty_string = ""
     : string
world_string = "world"
     : string
other_string = "other"
     : string
the_sequence_6 = 
6 :: 3 :: 10 :: 5 :: 16 :: 8 :: 4 :: 2 :: 1 :: nil
     : list nat
inlist
     : forall (A : Type) (x : A) (x0 : list A), M (In x x0)
y_in_zyx = 
fun x y z : nat => eval (inlist y (z :: y :: x :: nil))
     : forall x y z : nat, In y (z :: y :: x :: nil)

Arguments y_in_zyx (x y z)%nat_scope
inlist' = 
fun (A : Type) (x : A) =>
mfix1 f s : list A : M In x s :=
    (mmatch s in list A as s' return M (In x s')
     [m: ([?l r : list A] l ++ r =>
                          [H : s =m= l ++ r] mtry'
                                               ('il <- f l; 
                                                ret
                                                 ((fun 
                                                 (A0 : Type) 
                                                 (x0 : A0)
                                                 (_ : 
                                                 forall x1 : list A0,
                                                 M (In x0 x1))
                                                 (s0 l0 r0 : list A0)
                                                 (_ : s0 =m= l0 ++ r0)
                                                 (il0 : In x0 l0) =>
                                                 inlist'_obligation_1 x0 l0
                                                 r0 il0) A x f s l r H il) )
                                               (fun e : Exception =>
                                                mmatch'' NotCaught e
                                                 (raise e)
                                                 (with 
                                                 _ => 
                                                 'ir <- f r; 
                                                 ret
                                                 ((fun 
                                                 (A0 : Type) 
                                                 (x0 : A0)
                                                 (_ : 
                                                 forall x1 : list A0,
                                                 M (In x0 x1))
                                                 (s0 l0 r0 : list A0)
                                                 (_ : s0 =m= l0 ++ r0)
                                                 (_ : Exception)
                                                 (ir0 : In x0 r0) =>
                                                 inlist'_obligation_2 x0 l0
                                                 r0 ir0) A x f s l r H e ir) 
                                                 end)))%branch
       | ([?s' : list A] x :: s' => [_ : s =m= x :: s'] ret (in_eq x s'))%branch
       | ([?(y : A)
          (s' : list A)] y :: s' => [_ : s =m= y :: s'] 
                         'r <- f s'; ret (in_cons y x s' r) )%branch
       | (_ => raise NotFound)%branch])
     : forall (A : Type) (x : A) (x0 : list A), M (In x x0)

Arguments inlist' [A]%type_scope x x%list_scope
inlist'_obligation_1 = 
fun (A : Type) (x : A) (l r : list A) (il : In x l) =>
in_or_app l r x (or_introl il)
     : forall (A : Type) (x : A) (l r : list A), In x l -> In x (l ++ r)

Arguments inlist'_obligation_1 [A]%type_scope x (l r)%list_scope il
inlist'_obligation_2 = 
fun (A : Type) (x : A) (l r : list A) (ir : In x r) =>
in_or_app l r x (or_intror ir)
     : forall (A : Type) (x : A) (l r : list A), In x r -> In x (l ++ r)

Arguments inlist'_obligation_2 [A]%type_scope x (l r)%list_scope ir
ex_inlist = 
fun x y z : nat =>
in_cons y x
  ((fix app (l m : list nat) {struct l} : list nat :=
      match l with
      | nil => m
      | a :: l1 => a :: app l1 m
      end) (z :: nil) (x :: z :: nil))
  (in_cons z x
     ((fix app (l m : list nat) {struct l} : list nat :=
         match l with
         | nil => m
         | a :: l1 => a :: app l1 m
         end) nil (x :: z :: nil)) (in_eq x (z :: nil)))
     : forall x y z : nat, In x ((y :: z :: nil) ++ x :: z :: nil)

Arguments ex_inlist (x y z)%nat_scope
ex_inlist' = 
fun x y z : nat =>
(fun (A : Type) (x0 : A) (_ : forall x1 : list A, M (In x0 x1))
   (s l r : list A) (_ : s =m= l ++ r) (_ : Exception) 
   (ir : In x0 r) => inlist'_obligation_2 x0 l r ir) nat x
  (mfix1 f s : list nat : M In x s :=
       (mmatch s in list nat as s' return M (In x s')
        [m: ([?l r : list nat] l ++ r =>
                               [H : s =m= l ++ r] 
                               mtry'
                                 ('il <- f l; 
                                  ret
                                    ((fun (A : Type) 
                                        (x0 : A)
                                        (_ : forall x1 : list A, M (In x0 x1))
                                        (s0 l0 r0 : list A)
                                        (_ : s0 =m= l0 ++ r0)
                                        (il0 : In x0 l0) =>
                                      inlist'_obligation_1 x0 l0 r0 il0) nat
                                       x f s l r H il) )
                                 (fun e : Exception =>
                                  mmatch'' NotCaught e 
                                    (raise e)
                                    (with _ => 'ir <- f r; 
                                          ret
                                            ((fun 
                                                (A : Type) 
                                                (x0 : A)
                                                (_ : 
                                                 forall x1 : list A,
                                                 M (In x0 x1))
                                                (s0 l0 r0 : list A)
                                                (_ : s0 =m= l0 ++ r0)
                                                (_ : Exception)
                                                (ir0 : In x0 r0) =>
                                              inlist'_obligation_2 x0 l0 r0
                                                ir0) nat x f s l r H e ir) 
                                     end)))%branch
          | ([?s' : list nat] x :: s' => [_ : s =m= x :: s'] ret (in_eq x s'))%branch
          | ([?(y0 : nat)
             (s' : list nat)] y0 :: s' => [_ : s =m= y0 :: s'] 
                              'r <- f s'; ret (in_cons y0 x s' r) )%branch
          | (_ => raise NotFound)%branch]))
  ((y :: z :: nil) ++ x :: z :: nil) (y :: z :: nil) 
  (x :: z :: nil)
  (reduce (RedWhd [rl:RedBeta; RedDelta; RedMatch])
     match
       meq_refl in (_ =m= y0)
       return (y0 =m= (y :: z :: nil) ++ x :: z :: nil)
     with
     | meq_refl => meq_refl
     end) NotFound (in_eq x (z :: nil))
     : forall x y z : nat, In x ((y :: z :: nil) ++ x :: z :: nil)

Arguments ex_inlist' (x y z)%nat_scope
ex_inlist'' = 
fun x y z : nat =>
in_or_app (y :: z :: nil) (x :: z :: nil) x (or_intror (in_eq x (z :: nil)))
     : forall x y z : nat, In x ((y :: z :: nil) ++ x :: z :: nil)

Arguments ex_inlist'' (x y z)%nat_scope
ex1 = conj I (or_intror I)
     : True /\ (False \/ True)
nu@{u u0 u1} : forall {A B : Type}, name -> moption A -> (A -> M B) -> M B

nu is universe polymorphic
Arguments nu {A B}%type_scope _ _ _%function_scope
nu is opaque
Expands to: Constant Mtac2.intf.M.M.nu
ex_with_implication = 
fun (p q : Prop) (x : p) (x0 : q) => conj x x0
     : forall p q : Prop, p -> q -> p /\ q

Arguments ex_with_implication [p q]%type_scope _ _
     = ω ^ 3
     : ppT1
     = ω ^ ω ^ (ω + 1) * 42
     : ppT1
     = 1
     : ppT1
     = ω
     : ppT1
     = (ω ^ ω * 2 + 1)%pT1
     : ppT1
     = (ω ^ ω * 2 + ω)%pT1
     : ppT1
     = zero
     : T1
     = phi0 (FS 8)
     : T1
Chars 10702 - 10740 [(refine~(isequiv_pathsplit~0~_...] 40.062 secs (0.u,0.031s)
Chars 10743 - 10744 [-] 0. secs (0.u,0.s)
Chars 10745 - 10784 [(intros~e;~exists~(fin_equiv_i...] 0.002 secs (0.001u,0.s)
Chars 10789 - 10836 [(apply~path_equiv,~path_arrow,...] 0.003 secs (0.003u,0.s)
Chars 10839 - 10840 [-] 0. secs (0.u,0.s)
Chars 10841 - 10867 [(intros~[k~e]~[l~f];~simpl).] 0.007 secs (0.004u,0.002s)
Chars 10872 - 10899 [refine~(_,~fun~_~_~=>~tt).] 0.003 secs (0.003u,0.s)
Chars 10904 - 10944 [(intros~p;~refine~(_;~path_ish...] 0.054 secs (0.041u,0.011s)
Chars 10949 - 10975 [(apply~(ap~equiv_fun)~in~p).] 0.002 secs (0.002u,0.s)
Chars 10980 - 10996 [(apply~ap10~in~p).] 0.002 secs (0.001u,0.s)
Chars 11001 - 11018 [(apply~path_prod').] 0.002 secs (0.u,0.001s)
Chars 11023 - 11024 [+] 0. secs (0.u,0.s)
Chars 11025 - 11066 [refine~(fin_equiv_inj_fst~n~m~...] 0.003 secs (0.001u,0.002s)
Chars 11071 - 11072 [+] 0. secs (0.u,0.s)
Chars 11073 - 11102 [(apply~path_equiv,~path_arrow).] 0.002 secs (0.001u,0.s)
Chars 11109 - 11150 [refine~(fin_equiv_inj_snd~n~m~...] 0.003 secs (0.001u,0.001s)
Chars 10702 - 10740 [(refine~(isequiv_pathsplit~0~_...] 0. secs (0.u,0.s)
Chars 10745 - 10784 [(intros~e;~exists~(fin_equiv_i...] 0. secs (0.u,0.s)
Chars 10789 - 10836 [(apply~path_equiv,~path_arrow,...] 0. secs (0.u,0.s)
Chars 10841 - 10867 [(intros~[k~e]~[l~f];~simpl).] 0.001 secs (0.001u,0.s)
Chars 10872 - 10899 [refine~(_,~fun~_~_~=>~tt).] 0.001 secs (0.001u,0.s)
Chars 10904 - 10944 [(intros~p;~refine~(_;~path_ish...] 0.002 secs (0.002u,0.s)
Chars 10949 - 10975 [(apply~(ap~equiv_fun)~in~p).] 0. secs (0.u,0.s)
Chars 10980 - 10996 [(apply~ap10~in~p).] 0. secs (0.u,0.s)
Chars 11001 - 11018 [(apply~path_prod').] 0. secs (0.u,0.s)
Chars 11025 - 11066 [refine~(fin_equiv_inj_fst~n~m~...] 0. secs (0.u,0.s)
Chars 11073 - 11102 [(apply~path_equiv,~path_arrow).] 0. secs (0.u,0.s)
Chars 11109 - 11150 [refine~(fin_equiv_inj_snd~n~m~...] 0. secs (0.u,0.s)
Chars 11151 - 11155 [Qed.] 0.022 secs (0.016u,0.005s)
Chars 11157 - 11309 [Definition~equiv_fin_equiv~`{F...] 0.004 secs (0.002u,0.001s)
Chars 11432 - 11503 [Definition~nat_eq_fin_equiv~(n...] 0. secs (0.u,0.s)
Chars 11504 - 11510 [Proof.] 0. secs (0.u,0.s)
(* info auto: *)
simple apply lt_2 (in T2).
 simple apply lt_1 (in T2).
 simple apply lt_2 (in T2).
  simple apply lt_1 (in T2).
  simple apply lt_1 (in T2).
(* info auto: *)
simple apply lt_2 (in T2).
 simple apply lt_6 (in T2).
  unfold Peano.lt (in core).
   simple apply le_n (in core).
 simple apply lt_1 (in T2).
Chars 5107 - 5133 [exists~(fun~x~=>~~~f~x~x).] 40.174 secs (0.u,0.034s)
Chars 5134 - 5145 [(intros~x~H).] 0. secs (0.u,0.s)
Chars 5148 - 5180 [(enough~(Hx~:~f~x~x~<->~~~f~x~...] 0.001 secs (0.u,0.s)
Chars 5183 - 5184 [-] 0. secs (0.u,0.s)
Chars 5185 - 5229 [(apply~Hx;~apply~Hx;~intros~H'...] 0.012 secs (0.007u,0.005s)
Chars 5232 - 5233 [-] 0. secs (0.u,0.s)
Chars 5234 - 5253 [(pattern~(f~x)~at~1).] 0. secs (0.u,0.s)
Chars 5254 - 5264 [(rewrite~H).] 0. secs (0.u,0.s)
Chars 5265 - 5277 [reflexivity.] 0.002 secs (0.002u,0.s)
Chars 5107 - 5133 [exists~(fun~x~=>~~~f~x~x).] 0. secs (0.u,0.s)
Chars 5134 - 5145 [(intros~x~H).] 0. secs (0.u,0.s)
Chars 5148 - 5180 [(enough~(Hx~:~f~x~x~<->~~~f~x~...] 0. secs (0.u,0.s)
Chars 5185 - 5229 [(apply~Hx;~apply~Hx;~intros~H'...] 0.001 secs (0.u,0.001s)
Chars 5234 - 5253 [(pattern~(f~x)~at~1).] 0. secs (0.u,0.s)
Chars 5254 - 5264 [(rewrite~H).] 0. secs (0.u,0.s)
Chars 5265 - 5277 [reflexivity.] 0. secs (0.u,0.s)
Chars 5278 - 5282 [Qed.] 0.001 secs (0.u,0.s)
Chars 5284 - 5355 [Lemma~hCantor~{X}~(f~:~X~->~X~...] 0. secs (0.u,0.s)
Chars 5356 - 5362 [Proof.] 0. secs (0.u,0.s)
Chars 11513 - 11582 [(revert~m;~induction~n~as~[|~n...] 40.152 secs (0.004u,0.03s)
Chars 11585 - 11586 [-] 0. secs (0.u,0.s)
Chars 11587 - 11600 [exact~idpath.] 0. secs (0.u,0.s)
Chars 11603 - 11604 [-] 0. secs (0.u,0.s)
Chars 11605 - 11626 [(elim~(e^-1~(inr~tt))).] 0.01 secs (0.008u,0.002s)
Chars 11629 - 11630 [-] 0. secs (0.u,0.s)
Chars 11631 - 11649 [(elim~(e~(inr~tt))).] 0.001 secs (0.001u,0.s)
Chars 11652 - 11653 [-] 0. secs (0.u,0.s)
Chars 11654 - 11678 [refine~(ap~S~(IHn~m~_)).] 0.001 secs (0.u,0.s)
Chars 11683 - 11717 [exact~(snd~(fin_equiv_inv~n~m~...] 0.001 secs (0.u,0.s)
Chars 11513 - 11582 [(revert~m;~induction~n~as~[|~n...] 0.002 secs (0.002u,0.s)
Chars 11587 - 11600 [exact~idpath.] 0. secs (0.u,0.s)
Chars 11605 - 11626 [(elim~(e^-1~(inr~tt))).] 0. secs (0.u,0.s)
Chars 11631 - 11649 [(elim~(e~(inr~tt))).] 0. secs (0.u,0.s)
Chars 11654 - 11678 [refine~(ap~S~(IHn~m~_)).] 0. secs (0.u,0.s)
Chars 11683 - 11717 [exact~(snd~(fin_equiv_inv~n~m~...] 0. secs (0.u,0.s)
Chars 11718 - 11722 [Qed.] 0.002 secs (0.001u,0.s)
Chars 11761 - 11808 [Definition~nat_fin~(n~:~nat)~(...] 0. secs (0.u,0.s)
Chars 11809 - 11815 [Proof.] 0. secs (0.u,0.s)
L__equation_1 :
forall (alpha : E0) (i : nat),
L_ alpha i = L__unfold_clause_1 alpha (E0_eq_dec alpha E0zero) i

L__equation_1 is not universe polymorphic
Arguments L__equation_1 alpha i%nat_scope
L__equation_1 is transparent
Expands to: Constant hydras.Epsilon0.L_alpha.L__equation_1
Chars 11818 - 11841 [(induction~n~as~[|~n~nf]).] 19.857 secs (0.001u,0.028s)
Chars 11844 - 11845 [-] 0. secs (0.u,0.s)
Chars 11846 - 11860 [contradiction.] 0. secs (0.u,0.s)
Chars 11863 - 11864 [-] 0. secs (0.u,0.s)
Chars 11865 - 11885 [(destruct~k~as~[k|~_]).] 0.001 secs (0.001u,0.s)
Chars 11890 - 11891 [+] 0. secs (0.u,0.s)
Chars 11892 - 11905 [exact~(nf~k).] 0. secs (0.u,0.s)
Chars 11910 - 11911 [+] 0. secs (0.u,0.s)
Chars 11912 - 11920 [exact~n.] 0. secs (0.u,0.s)
Chars 11818 - 11841 [(induction~n~as~[|~n~nf]).] 0. secs (0.u,0.s)
Chars 11846 - 11860 [contradiction.] 0. secs (0.u,0.s)
Chars 11865 - 11885 [(destruct~k~as~[k|~_]).] 0. secs (0.u,0.s)
Chars 11892 - 11905 [exact~(nf~k).] 0. secs (0.u,0.s)
Chars 11912 - 11920 [exact~n.] 0. secs (0.u,0.s)
Chars 11921 - 11929 [Defined.] 0. secs (0.u,0.s)
Chars 11931 - 12020 [Definition~nat_fin_inl~(n~:~na...] 0.001 secs (0.001u,0.s)
Chars 12022 - 12075 [Definition~nat_fin_compl~(n~:~...] 0. secs (0.u,0.s)
Chars 12076 - 12082 [Proof.] 0. secs (0.u,0.s)
Chars 12085 - 12109 [(induction~n~as~[|~n~nfc]).] 0.108 secs (0.001u,0.027s)
Chars 12112 - 12113 [-] 0. secs (0.u,0.s)
Chars 12114 - 12128 [contradiction.] 0. secs (0.u,0.s)
Chars 12131 - 12132 [-] 0. secs (0.u,0.s)
Chars 12133 - 12153 [(destruct~k~as~[k|~_]).] 0.001 secs (0.u,0.s)
Chars 12158 - 12159 [+] 0. secs (0.u,0.s)
Chars 12160 - 12177 [exact~(nfc~k).+1.] 0. secs (0.u,0.s)
Chars 12182 - 12183 [+] 0. secs (0.u,0.s)
Chars 12184 - 12192 [exact~0.] 0. secs (0.u,0.s)
Chars 12085 - 12109 [(induction~n~as~[|~n~nfc]).] 0. secs (0.u,0.s)
Chars 12114 - 12128 [contradiction.] 0. secs (0.u,0.s)
Chars 12133 - 12153 [(destruct~k~as~[k|~_]).] 0. secs (0.u,0.s)
Chars 12160 - 12177 [exact~(nfc~k).+1.] 0. secs (0.u,0.s)
Chars 12184 - 12192 [exact~0.] 0. secs (0.u,0.s)
Chars 12193 - 12201 [Defined.] 0. secs (0.u,0.s)
Chars 12203 - 12281 [Definition~nat_fin_compl_compl...] 0. secs (0.u,0.s)
Chars 12282 - 12288 [Proof.] 0. secs (0.u,0.s)
Chars 12291 - 12314 [(induction~n~as~[|~n~IH]).] 2.349 secs (-8.683u,-1.021s)
Chars 5365 - 5412 [exists~(fun~x~=>~Build_HProp~(...] 40.152 secs (0.007u,0.036s)
Chars 5413 - 5424 [(intros~x~H).] 0. secs (0.u,0.s)
Chars 5427 - 5459 [(enough~(Hx~:~f~x~x~<->~~~f~x~...] 0.001 secs (0.001u,0.s)
Chars 5462 - 5463 [-] 0. secs (0.u,0.s)
Chars 5464 - 5508 [(apply~Hx;~apply~Hx;~intros~H'...] 0.018 secs (0.016u,0.001s)
Chars 5511 - 5512 [-] 0. secs (0.u,0.s)
Chars 5513 - 5532 [(pattern~(f~x)~at~1).] 0.001 secs (0.001u,0.s)
Chars 5533 - 5543 [(rewrite~H).] 0.001 secs (0.001u,0.s)
Chars 5544 - 5556 [reflexivity.] 0.003 secs (0.003u,0.s)
Chars 5365 - 5412 [exists~(fun~x~=>~Build_HProp~(...] 0. secs (0.u,0.s)
Chars 5413 - 5424 [(intros~x~H).] 0. secs (0.u,0.s)
Chars 5427 - 5459 [(enough~(Hx~:~f~x~x~<->~~~f~x~...] 0. secs (0.u,0.s)
Chars 5464 - 5508 [(apply~Hx;~apply~Hx;~intros~H'...] 0.003 secs (0.003u,0.s)
Chars 5513 - 5532 [(pattern~(f~x)~at~1).] 0. secs (0.u,0.s)
Chars 5533 - 5543 [(rewrite~H).] 0. secs (0.u,0.s)
Chars 5544 - 5556 [reflexivity.] 0. secs (0.u,0.s)
Chars 5557 - 5561 [Qed.] 0.002 secs (0.002u,0.s)
Chars 5563 - 5673 [Definition~clean_sum~{X}~{Y}~{...] 0.001 secs (0.u,0.001s)
Chars 5674 - 5680 [Proof.] 0. secs (0.u,0.s)
(* info auto: *)
idtac.
(* info auto: *)
idtac.
(* info auto: *)
idtac.
     = Gt
     : comparison
     = Lt
     : comparison
Chars 12291 - 12314 [(induction~n~as~[|~n~IH]).] 40.059 secs (0.001u,0.028s)
Chars 12317 - 12318 [-] 0. secs (0.u,0.s)
Chars 12319 - 12333 [contradiction.] 0. secs (0.u,0.s)
Chars 12336 - 12337 [-] 0. secs (0.u,0.s)
Chars 12338 - 12365 [(destruct~k~as~[k|~?];~simpl).] 0.003 secs (0.002u,0.001s)
Chars 12370 - 12371 [+] 0. secs (0.u,0.s)
Chars 12372 - 12393 [(rewrite~nat_add_comm).] 0.001 secs (0.001u,0.s)
Chars 12400 - 12418 [specialize~(IH~k).] 0. secs (0.u,0.s)
Chars 12425 - 12452 [(rewrite~nat_add_comm~in~IH).] 0.001 secs (0.u,0.001s)
Chars 12459 - 12475 [exact~(ap~S~IH).] 0.001 secs (0.001u,0.s)
Chars 12480 - 12481 [+] 0. secs (0.u,0.s)
Chars 12482 - 12516 [(rewrite~nat_add_comm;~reflexi...] 0.001 secs (0.001u,0.s)
Chars 12291 - 12314 [(induction~n~as~[|~n~IH]).] 0. secs (0.u,0.s)
Chars 12319 - 12333 [contradiction.] 0. secs (0.u,0.s)
Chars 12338 - 12365 [(destruct~k~as~[k|~?];~simpl).] 0.001 secs (0.001u,0.s)
Chars 12372 - 12393 [(rewrite~nat_add_comm).] 0. secs (0.u,0.s)
Chars 12400 - 12418 [specialize~(IH~k).] 0. secs (0.u,0.s)
Chars 12425 - 12452 [(rewrite~nat_add_comm~in~IH).] 0. secs (0.u,0.s)
Chars 12459 - 12475 [exact~(ap~S~IH).] 0. secs (0.u,0.s)
Chars 12482 - 12516 [(rewrite~nat_add_comm;~reflexi...] 0. secs (0.u,0.s)
Chars 12517 - 12521 [Qed.] 0.002 secs (0.001u,0.001s)
Chars 12574 - 12622 [Definition~fsucc_mod~{n~:~nat}...] 0. secs (0.u,0.s)
Chars 12623 - 12629 [Proof.] 0. secs (0.u,0.s)
Chars 12632 - 12643 [(destruct~n).] 3.057 secs (0.001u,0.028s)
Chars 12646 - 12661 [1:~exact~idmap.] 0. secs (0.u,0.s)
Chars 12664 - 12676 [(intros~[x|~]).] 0.001 secs (0.001u,0.s)
Chars 12679 - 12680 [-] 0. secs (0.u,0.s)
Chars 12681 - 12697 [exact~(fsucc~x).] 0. secs (0.u,0.s)
Chars 12700 - 12701 [-] 0. secs (0.u,0.s)
Chars 12702 - 12717 [exact~fin_zero.] 0. secs (0.u,0.s)
Chars 12632 - 12643 [(destruct~n).] 0. secs (0.u,0.s)
Chars 12646 - 12661 [1:~exact~idmap.] 0. secs (0.u,0.s)
Chars 12664 - 12676 [(intros~[x|~]).] 0. secs (0.u,0.s)
Chars 12681 - 12697 [exact~(fsucc~x).] 0. secs (0.u,0.s)
Chars 12702 - 12717 [exact~fin_zero.] 0. secs (0.u,0.s)
Chars 12718 - 12726 [Defined.] 0. secs (0.u,0.s)
Chars 12854 - 12988 [Fixpoint~fin_nat~{n~:~nat}~(m~...] 0.001 secs (0.001u,0.s)
Chars 13291 - 13486 [Fixpoint~sperners_lemma_1d~{n}...] 0.001 secs (0.001u,0.s)
Chars 13487 - 13493 [Proof.] 0. secs (0.u,0.s)
Chars 5683 - 5693 [(intros~Hf).] 40.176 secs (0.u,0.036s)
Chars 5694 - 5752 [(enough~(H~:~forall~x~a,~a~=~f...] 0.002 secs (0.002u,0.s)
Chars 5755 - 5756 [-] 0. secs (0.u,0.s)
Chars 5757 - 5766 [(intros~x).] 0. secs (0.u,0.s)
Chars 5767 - 5789 [now~apply~(H~x~(f~x)).] 0.002 secs (0.002u,0.s)
Chars 5792 - 5793 [-] 0. secs (0.u,0.s)
Chars 5794 - 5809 [(intros~x~a~Hxa).] 0. secs (0.u,0.s)
Chars 5810 - 5828 [specialize~(Hf~x).] 0.001 secs (0.001u,0.s)
Chars 5829 - 5853 [(destruct~(f~x)~as~[y|~z]).] 0.003 secs (0.002u,0.001s)
Chars 5858 - 5859 [+] 0. secs (0.u,0.s)
Chars 5860 - 5877 [(apply~Empty_rect).] 0.001 secs (0.001u,0.s)
Chars 5878 - 5895 [now~apply~(Hf~y).] 0.004 secs (0.003u,0.s)
Chars 5900 - 5901 [+] 0. secs (0.u,0.s)
Chars 5902 - 5915 [now~exists~z.] 0.004 secs (0.003u,0.s)
Chars 5683 - 5693 [(intros~Hf).] 0. secs (0.u,0.s)
Chars 5694 - 5752 [(enough~(H~:~forall~x~a,~a~=~f...] 0. secs (0.u,0.s)
Chars 5757 - 5766 [(intros~x).] 0. secs (0.u,0.s)
Chars 5767 - 5789 [now~apply~(H~x~(f~x)).] 0. secs (0.u,0.s)
Chars 5794 - 5809 [(intros~x~a~Hxa).] 0. secs (0.u,0.s)
Chars 5810 - 5828 [specialize~(Hf~x).] 0. secs (0.u,0.s)
Chars 5829 - 5853 [(destruct~(f~x)~as~[y|~z]).] 0. secs (0.u,0.s)
Chars 5860 - 5877 [(apply~Empty_rect).] 0. secs (0.u,0.s)
Chars 5878 - 5895 [now~apply~(Hf~y).] 0. secs (0.u,0.s)
Chars 5902 - 5915 [now~exists~z.] 0. secs (0.u,0.s)
Chars 5916 - 5920 [Qed.] 0.001 secs (0.001u,0.s)
Chars 5922 - 6025 [Fact~Cantor_path_injection~{X}...] 0.001 secs (0.001u,0.s)
Chars 6026 - 6032 [Proof.] 0. secs (0.u,0.s)
Chars 13496 - 13507 [(intros~?~?~?).] 13.529 secs (2.038u,-0.693s)
AP_plus_closed
     : forall alpha beta gamma : Ord,
       In AP alpha -> beta < alpha -> gamma < alpha -> beta + gamma < alpha
     = Lt
     : comparison
     = 48
     : nat
Chars 13496 - 13507 [(intros~?~?~?).] 40.068 secs (0.001u,0.03s)
Chars 13510 - 13529 [(destruct~n~as~[|~n]).] 0.002 secs (0.002u,0.s)
Chars 13532 - 13533 [-] 0. secs (0.u,0.s)
Chars 13534 - 13550 [exists~fin_zero.] 0.001 secs (0.001u,0.s)
Chars 13551 - 13569 [(split;~assumption).] 0.003 secs (0.002u,0.s)
Chars 13572 - 13573 [-] 0. secs (0.u,0.s)
Chars 13574 - 13639 [(destruct~(dec~(f~(fin_incl~fi...] 0.028 secs (0.017u,0.01s)
Chars 13644 - 13645 [+] 0. secs (0.u,0.s)
Chars 13646 - 13662 [exists~fin_last.] 0.001 secs (0.001u,0.s)
Chars 13663 - 13681 [(split;~assumption).] 0.003 secs (0.003u,0.s)
Chars 13686 - 13687 [+] 0. secs (0.u,0.s)
Chars 13688 - 13778 [(destruct~(sperners_lemma_1d~_...] 0.006 secs (0.006u,0.s)
Chars 13785 - 13806 [exists~(fin_incl~k').] 0.002 secs (0.002u,0.s)
Chars 13813 - 13831 [(split;~assumption).] 0.004 secs (0.004u,0.s)
Chars 13496 - 13507 [(intros~?~?~?).] 0.001 secs (0.u,0.s)
Chars 13510 - 13529 [(destruct~n~as~[|~n]).] 0. secs (0.u,0.s)
Chars 13534 - 13550 [exists~fin_zero.] 0. secs (0.u,0.s)
Chars 13551 - 13569 [(split;~assumption).] 0.002 secs (0.002u,0.s)
Chars 13574 - 13639 [(destruct~(dec~(f~(fin_incl~fi...] 0. secs (0.u,0.s)
Chars 13646 - 13662 [exists~fin_last.] 0. secs (0.u,0.s)
Chars 13663 - 13681 [(split;~assumption).] 0.002 secs (0.002u,0.s)
Chars 13688 - 13778 [(destruct~(sperners_lemma_1d~_...] 0.001 secs (0.001u,0.s)
Chars 13785 - 13806 [exists~(fin_incl~k').] 0.001 secs (0.001u,0.s)
Chars 13813 - 13831 [(split;~assumption).] 0.002 secs (0.002u,0.s)
Chars 13832 - 13840 [Defined.] 0.005 secs (0.004u,0.s)
T2.T2
     : Set
Inductive T2 : Set :=
    zero : T2.T2 | gcons : T2.T2 -> T2.T2 -> nat -> T2.T2 -> T2.T2.

Arguments gcons _ _ _%nat_scope _
Chars 6035 - 6048 [(intros~H1~H2).] 40.157 secs (0.u,0.035s)
Chars 6049 - 6098 [(assert~(H~:~X~+~Y~=~(X~->~HPr...] 0.002 secs (0.002u,0.s)
Chars 6101 - 6102 [-] 0. secs (0.u,0.s)
Chars 6103 - 6140 [now~rewrite~<-~H1,~path_sum_pr...] 0.006 secs (0.005u,0.s)
Chars 6144 - 6145 [-] 0. secs (0.u,0.s)
Chars 6146 - 6189 [(apply~equiv_path~in~H~as~[f~[...] 0.003 secs (0.003u,0.s)
Chars 6194 - 6225 [(pose~(f'~:=~fun~x~=>~fst~(f~(...] 0.002 secs (0.001u,0.s)
Chars 6226 - 6258 [(destruct~(hCantor~f')~as~[p~H...] 0.004 secs (0.004u,0.s)
Chars 6263 - 6287 [(pose~(g'~:=~fun~q~=>~g~(p,~q))).] 0.002 secs (0.002u,0.s)
Chars 6288 - 6328 [(assert~(H'~:~forall~q~x,~g'~q...] 0.004 secs (0.002u,0.s)
Chars 6333 - 6334 [+] 0. secs (0.u,0.s)
Chars 6335 - 6348 [(intros~q~x~H).] 0.001 secs (0.001u,0.s)
Chars 6349 - 6362 [(apply~(Hp~x)).] 0.001 secs (0.001u,0.s)
Chars 6363 - 6373 [(unfold~f').] 0.001 secs (0.001u,0.s)
Chars 6374 - 6387 [(rewrite~<-~H).] 0.002 secs (0.002u,0.s)
Chars 6388 - 6398 [(unfold~g').] 0.001 secs (0.001u,0.s)
Chars 6399 - 6415 [now~rewrite~Hfg.] 0.007 secs (0.007u,0.s)
Chars 6420 - 6421 [+] 0. secs (0.u,0.s)
Chars 6422 - 6465 [exists~(fun~x~=>~proj1~(clean_...] 0.003 secs (0.003u,0.s)
Chars 6466 - 6480 [(intros~q~q'~H).] 0.001 secs (0.001u,0.s)
Chars 6481 - 6510 [(assert~(Hqq'~:~g'~q~=~g'~q')).] 0.002 secs (0.002u,0.s)
Chars 6517 - 6518 [*] 0. secs (0.u,0.s)
Chars 6519 - 6548 [(destruct~clean_sum~as~[z~<-]).] 0.006 secs (0.005u,0.s)
Chars 6549 - 6579 [(destruct~clean_sum~as~[z'~<-]).] 0.006 secs (0.005u,0.s)
Chars 6580 - 6589 [(cbn~in~H).] 0.002 secs (0.002u,0.s)
Chars 6590 - 6604 [now~rewrite~H.] 0.007 secs (0.005u,0.002s)
Chars 6611 - 6612 [*] 0. secs (0.u,0.s)
Chars 6613 - 6631 [(unfold~g'~in~Hqq').] 0.001 secs (0.001u,0.s)
Chars 6632 - 6666 [(change~(snd~(p,~q)~=~snd~(p,~...] 0.003 secs (0.003u,0.s)
Chars 6675 - 6717 [(rewrite~<-~(Hfg~(p,~q)),~<-~(...] 0.008 secs (0.005u,0.s)
Chars 6718 - 6735 [now~rewrite~Hqq'.] 0.042 secs (0.031u,0.008s)
Chars 6035 - 6048 [(intros~H1~H2).] 0. secs (0.u,0.s)
Chars 6049 - 6098 [(assert~(H~:~X~+~Y~=~(X~->~HPr...] 0. secs (0.u,0.s)
Chars 6103 - 6140 [now~rewrite~<-~H1,~path_sum_pr...] 0. secs (0.u,0.s)
Chars 6146 - 6189 [(apply~equiv_path~in~H~as~[f~[...] 0. secs (0.u,0.s)
Chars 6194 - 6225 [(pose~(f'~:=~fun~x~=>~fst~(f~(...] 0. secs (0.u,0.s)
Chars 6226 - 6258 [(destruct~(hCantor~f')~as~[p~H...] 0. secs (0.u,0.s)
Chars 6263 - 6287 [(pose~(g'~:=~fun~q~=>~g~(p,~q))).] 0. secs (0.u,0.s)
Chars 6288 - 6328 [(assert~(H'~:~forall~q~x,~g'~q...] 0.001 secs (0.001u,0.s)
Chars 6335 - 6348 [(intros~q~x~H).] 0.001 secs (0.001u,0.s)
Chars 6349 - 6362 [(apply~(Hp~x)).] 0.001 secs (0.u,0.s)
Chars 6363 - 6373 [(unfold~f').] 0.001 secs (0.001u,0.s)
Chars 6374 - 6387 [(rewrite~<-~H).] 0.001 secs (0.001u,0.s)
Chars 6388 - 6398 [(unfold~g').] 0.001 secs (0.001u,0.s)
Chars 6399 - 6415 [now~rewrite~Hfg.] 0.001 secs (0.u,0.s)
Chars 6422 - 6465 [exists~(fun~x~=>~proj1~(clean_...] 0.001 secs (0.001u,0.s)
Chars 6466 - 6480 [(intros~q~q'~H).] 0.001 secs (0.001u,0.s)
Chars 6481 - 6510 [(assert~(Hqq'~:~g'~q~=~g'~q')).] 0.001 secs (0.001u,0.s)
Chars 6519 - 6548 [(destruct~clean_sum~as~[z~<-]).] 0.001 secs (0.u,0.s)
Chars 6549 - 6579 [(destruct~clean_sum~as~[z'~<-]).] 0.001 secs (0.001u,0.s)
Chars 6580 - 6589 [(cbn~in~H).] 0.002 secs (0.001u,0.s)
Chars 6590 - 6604 [now~rewrite~H.] 0.001 secs (0.001u,0.s)
Chars 6613 - 6631 [(unfold~g'~in~Hqq').] 0.001 secs (0.001u,0.s)
Chars 6632 - 6666 [(change~(snd~(p,~q)~=~snd~(p,~...] 0.001 secs (0.001u,0.s)
Chars 6675 - 6717 [(rewrite~<-~(Hfg~(p,~q)),~<-~(...] 0.001 secs (0.001u,0.s)
Chars 6718 - 6735 [now~rewrite~Hqq'.] 0.002 secs (0.002u,0.s)
Chars 6736 - 6740 [Qed.] 0.008 secs (0.008u,0.s)
Chars 6797 - 6934 [Lemma~Cantor_rel~X~(R~:~X~->~(...] 0.001 secs (0.001u,0.s)
Chars 6935 - 6941 [Proof.] 0. secs (0.u,0.s)
For more reductions assert : ((R1 + R1) * ((R1 + R1) * R1)) <> 0
For more reductions assert : ((R1 + R1) * ((R1 + R1) * R1)) <> 0
Inductive hydras.Epsilon0.T1.T1
Inductive gaia.schutte.ssete9.CantorOrdinal.T1
  (shorter name to refer to it in current context is CantorOrdinal.T1)
Notation gaia_hydras.T1Bridge.T1
  (shorter name to refer to it in current context is T1Bridge.T1)
Module hydras.Epsilon0.T1
(* info auto: *)
simple apply or_introl (in core).
 simple apply @eq_refl (in core).
(* info auto: *)
simple apply or_introl (in core).
 simple apply @eq_refl (in core).
(* info auto: *)
simple apply or_introl (in core).
 simple apply @eq_refl (in core).
(* info auto: *)
simple apply or_introl (in core).
 simple apply @eq_refl (in core).
(* info auto: *)
simple apply or_introl (in core).
 simple apply @eq_refl (in core).
     = {| round := 3; n2 := 3; n1 := 0; nh := 0 |}
     : state
     = {| round := 4; n2 := 2; n1 := 4; nh := 0 |}
     : state
     = {| round := 5; n2 := 2; n1 := 3; nh := 5 |}
     : state
     = {| round := 2000; n2 := 1; n1 := 90; nh := 1102 |}
     : state
     = {| round := 10; n2 := 2; n1 := 3; nh := 0 |}
     : state
     = {| round := 22; n2 := 2; n1 := 2; nh := 0 |}
     : state
     = {| round := 46; n2 := 2; n1 := 1; nh := 0 |}
     : state
     = {| round := 94; n2 := 2; n1 := 0; nh := 0 |}
     : state
     = {| round := 95; n2 := 1; n1 := 95; nh := 0 |}
     : state
     = {| round := 192; n2 := 1; n1 := 94; nh := 0 |}
     : state
     = {| round := 386; n2 := 1; n1 := 93; nh := 0 |}
     : state
Chars 6944 - 6954 [(intros~HR).] 40.201 secs (0.u,0.034s)
Chars 6955 - 7037 [(pose~~~(pc~:=~~~~fun~x~=>~~~~...] 0.039 secs (0.037u,0.002s)
Chars 7040 - 7050 [exists~pc.] 0.002 secs (0.001u,0.s)
Chars 7051 - 7062 [(intros~x~H).] 0.001 secs (0.001u,0.s)
Chars 7063 - 7094 [(enough~(Hpc~:~pc~x~<->~~~pc~x)).] 0.002 secs (0.001u,0.s)
Chars 7095 - 7104 [2:~split.] 0.002 secs (0.002u,0.s)
Chars 7107 - 7108 [{] 0. secs (0.u,0.s)
Chars 7109 - 7156 [(apply~Hpc;~apply~Hpc;~intros~...] 0.019 secs (0.015u,0.003s)
Chars 7157 - 7158 [}] 0. secs (0.u,0.s)
Chars 7161 - 7162 [-] 0. secs (0.u,0.s)
Chars 7163 - 7173 [(intros~Hx).] 0.001 secs (0.001u,0.s)
Chars 7174 - 7205 [(apply~equiv_resize_hprop~in~Hx).] 0.003 secs (0.003u,0.s)
Chars 7206 - 7219 [now~apply~Hx.] 0.002 secs (0.001u,0.s)
Chars 7222 - 7223 [-] 0. secs (0.u,0.s)
Chars 7224 - 7234 [(intros~Hx).] 0.001 secs (0.u,0.s)
Chars 7235 - 7260 [(apply~equiv_resize_hprop).] 0.002 secs (0.001u,0.001s)
Chars 7261 - 7273 [(intros~p~Hp).] 0.001 secs (0.001u,0.s)
Chars 7278 - 7328 [(eapply~merely_destruct;~try~a...] 0.026 secs (0.026u,0.s)
Chars 7329 - 7343 [now~intros~->.] 0.003 secs (0.002u,0.s)
Chars 6944 - 6954 [(intros~HR).] 0. secs (0.u,0.s)
Chars 6955 - 7037 [(pose~~~(pc~:=~~~~fun~x~=>~~~~...] 0. secs (0.u,0.s)
Chars 7040 - 7050 [exists~pc.] 0.001 secs (0.001u,0.s)
Chars 7051 - 7062 [(intros~x~H).] 0. secs (0.u,0.s)
Chars 7063 - 7094 [(enough~(Hpc~:~pc~x~<->~~~pc~x)).] 0. secs (0.u,0.s)
Chars 7095 - 7104 [2:~split.] 0. secs (0.u,0.s)
Chars 7109 - 7156 [(apply~Hpc;~apply~Hpc;~intros~...] 0.006 secs (0.006u,0.s)
Chars 7163 - 7173 [(intros~Hx).] 0. secs (0.u,0.s)
Chars 7174 - 7205 [(apply~equiv_resize_hprop~in~Hx).] 0.001 secs (0.001u,0.s)
Chars 7206 - 7219 [now~apply~Hx.] 0.001 secs (0.001u,0.s)
Chars 7224 - 7234 [(intros~Hx).] 0.001 secs (0.001u,0.s)
Chars 7235 - 7260 [(apply~equiv_resize_hprop).] 0.001 secs (0.001u,0.s)
Chars 7261 - 7273 [(intros~p~Hp).] 0.001 secs (0.u,0.s)
Chars 7278 - 7328 [(eapply~merely_destruct;~try~a...] 0.002 secs (0.002u,0.s)
Chars 7329 - 7343 [now~intros~->.] 0.001 secs (0.001u,0.s)
Chars 7344 - 7348 [Qed.] 0.004 secs (0.004u,0.s)
Chars 7350 - 7445 [Lemma~InjectsInto_power_morph~...] 0. secs (0.u,0.s)
Chars 7446 - 7452 [Proof.] 0. secs (0.u,0.s)
(* info auto: *)
simple apply or_introl (in core).
 simple apply @eq_refl (in core).
(* info auto: *)
idtac.
(* info auto: *)
idtac.
(* info auto: *)
idtac.
(* info auto: *)
idtac.
(* info auto: *)
idtac.
(* info auto: *)
idtac.
(* info auto: *)
idtac.
(* info auto: *)
idtac.
(* info auto: *)
idtac.
(* info auto: *)
idtac.
(* info auto: *)
idtac.
(* info auto: *)
idtac.
(* info auto: *)
idtac.
(* info auto: *)
idtac.
(* info auto: *)
idtac.
Chars 7455 - 7465 [(intros~HF).] 40.139 secs (0.u,0.035s)
Chars 7466 - 7503 [(eapply~merely_destruct;~try~a...] 0.004 secs (0.002u,0.001s)
Chars 7504 - 7518 [(intros~[f~Hf]).] 0.001 secs (0.001u,0.s)
Chars 7521 - 7530 [(apply~tr).] 0.001 secs (0.001u,0.s)
Chars 7531 - 7592 [exists~(fun~p~=>~fun~y~=>~hexi...] 0.003 secs (0.003u,0.s)
Chars 7595 - 7608 [(intros~p~q~H).] 0. secs (0.u,0.s)
Chars 7609 - 7627 [(apply~path_forall).] 0.002 secs (0.002u,0.s)
Chars 7628 - 7637 [(intros~x).] 0. secs (0.u,0.s)
Chars 7638 - 7647 [(apply~PE).] 0.004 secs (0.001u,0.s)
Chars 7648 - 7665 [(split;~intros~Hx).] 0.002 secs (0.002u,0.s)
Chars 7668 - 7669 [-] 0. secs (0.u,0.s)
Chars 7670 - 7744 [(assert~(Hp~:~(fun~y~:~Y~=>~he...] 0.002 secs (0.002u,0.s)
Chars 7745 - 7746 [{] 0. secs (0.u,0.s)
Chars 7747 - 7756 [(apply~tr).] 0.001 secs (0.001u,0.s)
Chars 7757 - 7766 [exists~x.] 0.001 secs (0.001u,0.s)
(* info auto: *)
idtac.
Chars 7767 - 7782 [(split;~trivial).] 0.008 secs (0.003u,0.s)
Chars 7783 - 7784 [}] 0. secs (0.u,0.s)
Chars 7789 - 7809 [(pattern~(f~x)~in~Hp).] 0.001 secs (0.001u,0.s)
Chars 7810 - 7826 [(rewrite~H~in~Hp).] 0.002 secs (0.001u,0.s)
Chars 7827 - 7864 [(eapply~merely_destruct;~try~a...] 0.008 secs (0.007u,0.s)
Chars 7865 - 7893 [now~intros~[x'~[Hq~<-%Hf]].] 0.007 secs (0.005u,0.s)
Chars 7896 - 7897 [-] 0. secs (0.u,0.s)
Chars 7898 - 7972 [(assert~(Hq~:~(fun~y~:~Y~=>~he...] 0.002 secs (0.002u,0.s)
Chars 7973 - 7974 [{] 0. secs (0.u,0.s)
Chars 7975 - 7984 [(apply~tr).] 0.001 secs (0.001u,0.s)
Chars 7985 - 7994 [exists~x.] 0.001 secs (0.001u,0.s)
Chars 7995 - 8010 [(split;~trivial).] 0.003 secs (0.003u,0.s)
Chars 8011 - 8012 [}] 0. secs (0.u,0.s)
Chars 8017 - 8037 [(pattern~(f~x)~in~Hq).] 0.001 secs (0.001u,0.s)
Chars 8038 - 8057 [(rewrite~<-~H~in~Hq).] 0.002 secs (0.002u,0.s)
Chars 8058 - 8095 [(eapply~merely_destruct;~try~a...] 0.044 secs (0.039u,0.005s)
Chars 8096 - 8124 [now~intros~[x'~[Hp~<-%Hf]].] 0.006 secs (0.006u,0.s)
Chars 7455 - 7465 [(intros~HF).] 0. secs (0.u,0.s)
Chars 7466 - 7503 [(eapply~merely_destruct;~try~a...] 0. secs (0.u,0.s)
Chars 7504 - 7518 [(intros~[f~Hf]).] 0. secs (0.u,0.s)
Chars 7521 - 7530 [(apply~tr).] 0. secs (0.u,0.s)
Chars 7531 - 7592 [exists~(fun~p~=>~fun~y~=>~hexi...] 0. secs (0.u,0.s)
Chars 7595 - 7608 [(intros~p~q~H).] 0. secs (0.u,0.s)
Chars 7609 - 7627 [(apply~path_forall).] 0. secs (0.u,0.s)
Chars 7628 - 7637 [(intros~x).] 0. secs (0.u,0.s)
Chars 7638 - 7647 [(apply~PE).] 0. secs (0.u,0.s)
Chars 7648 - 7665 [(split;~intros~Hx).] 0.001 secs (0.001u,0.s)
Chars 7670 - 7744 [(assert~(Hp~:~(fun~y~:~Y~=>~he...] 0. secs (0.u,0.s)
Chars 7747 - 7756 [(apply~tr).] 0. secs (0.u,0.s)
Chars 7757 - 7766 [exists~x.] 0. secs (0.u,0.s)
Chars 7767 - 7782 [(split;~trivial).] 0.001 secs (0.001u,0.s)
Chars 7789 - 7809 [(pattern~(f~x)~in~Hp).] 0. secs (0.u,0.s)
Chars 7810 - 7826 [(rewrite~H~in~Hp).] 0. secs (0.u,0.s)
Chars 7827 - 7864 [(eapply~merely_destruct;~try~a...] 0.001 secs (0.001u,0.s)
Chars 7865 - 7893 [now~intros~[x'~[Hq~<-%Hf]].] 0. secs (0.u,0.s)
Chars 7898 - 7972 [(assert~(Hq~:~(fun~y~:~Y~=>~he...] 0. secs (0.u,0.s)
Chars 7975 - 7984 [(apply~tr).] 0. secs (0.u,0.s)
Chars 7985 - 7994 [exists~x.] 0. secs (0.u,0.s)
Chars 7995 - 8010 [(split;~trivial).] 0.001 secs (0.001u,0.s)
Chars 8017 - 8037 [(pattern~(f~x)~in~Hq).] 0. secs (0.u,0.s)
Chars 8038 - 8057 [(rewrite~<-~H~in~Hq).] 0. secs (0.u,0.s)
Chars 8058 - 8095 [(eapply~merely_destruct;~try~a...] 0.001 secs (0.001u,0.s)
Chars 8096 - 8124 [now~intros~[x'~[Hp~<-%Hf]].] 0. secs (0.u,0.s)
Chars 8125 - 8129 [Qed.] 0.005 secs (0.003u,0.001s)
Chars 8131 - 8264 [Fact~Cantor_injects_injects~{X...] 0.001 secs (0.001u,0.s)
Chars 8265 - 8271 [Proof.] 0. secs (0.u,0.s)
     = 1
     : nat
(* info auto: *)
idtac.
     = 2
     : nat
(* info auto: *)
idtac.
(* info auto: *)
idtac.
(* info auto: *)
idtac.
(* info auto: *)
simple apply or_intror (in core).
 simple apply lt_1 (in T2).
fun a : hT2 => [eta compare a]
     : hT2 -> hT2 -> comparison
T2lt : T2 -> T2 -> bool

T2lt is not universe polymorphic
Arguments T2lt a b
T2lt is transparent
Expands to: Constant gaia.schutte.ssete9.Gamma0.T2lt
Chars 8274 - 8287 [(intros~H1~H2).] 40.168 secs (0.u,0.035s)
Chars 8288 - 8352 [(assert~(HF~:~InjectsInto~((X~...] 0.002 secs (0.002u,0.s)
Chars 8355 - 8356 [-] 0. secs (0.u,0.s)
Chars 8357 - 8396 [(eapply~InjectsInto_trans;~try...] 0.007 secs (0.004u,0.001s)
Chars 8401 - 8465 [(eapply~InjectsInto_trans;~try...] 0.005 secs (0.004u,0.001s)
Chars 8470 - 8492 [(rewrite~path_sum_prod).] 0.002 secs (0.002u,0.s)
Chars 8493 - 8502 [(apply~tr).] 0.001 secs (0.001u,0.s)
Chars 8503 - 8515 [reflexivity.] 0.002 secs (0.002u,0.s)
Chars 8518 - 8519 [-] 0. secs (0.u,0.s)
Chars 8520 - 8557 [(eapply~merely_destruct;~try~a...] 0.007 secs (0.005u,0.001s)
Chars 8558 - 8572 [(intros~[f~Hf]).] 0.002 secs (0.002u,0.s)
Chars 8577 - 8629 [(pose~(R~:=~fun~x~=>~fun~p~=>~...] 0.003 secs (0.003u,0.s)
Chars 8630 - 8667 [(destruct~(@Cantor_rel~_~R)~as...] 0.003 secs (0.003u,0.s)
Chars 8672 - 8673 [{] 0. secs (0.u,0.s)
Chars 8674 - 8694 [(intros~x~p~p'~H3~H4).] 0.001 secs (0.u,0.s)
Chars 8695 - 8732 [(eapply~merely_destruct;~try~a...] 0.008 secs (0.008u,0.s)
Chars 8733 - 8747 [(intros~[q~Hq]).] 0.002 secs (0.002u,0.s)
Chars 8754 - 8791 [(eapply~merely_destruct;~try~a...] 0.009 secs (0.008u,0.s)
Chars 8792 - 8808 [(intros~[q'~Hq']).] 0.003 secs (0.003u,0.s)
Chars 8809 - 8818 [(apply~tr).] 0.002 secs (0.002u,0.s)
Chars 8825 - 8852 [(change~p~with~(fst~(p,~q))).] 0.002 secs (0.002u,0.s)
Chars 8853 - 8891 [(rewrite~(Hf~(p,~q)~(p',~q'));...] 0.011 secs (0.01u,0.s)
Chars 8892 - 8912 [now~rewrite~Hq,~Hq'.] 0.01 secs (0.009u,0.001s)
Chars 8913 - 8914 [}] 0. secs (0.u,0.s)
Chars 8919 - 8943 [(pose~(f'~:=~fun~q~=>~f~(p,~q))).] 0.002 secs (0.001u,0.s)
Chars 8944 - 8984 [(assert~(H'~:~forall~q~x,~f'~q...] 0.003 secs (0.003u,0.s)
Chars 8989 - 8990 [+] 0. secs (0.u,0.s)
Chars 8991 - 9004 [(intros~q~x~H).] 0.001 secs (0.001u,0.s)
Chars 9005 - 9018 [(apply~(Hp~x)).] 0.001 secs (0.001u,0.s)
Chars 9019 - 9028 [(apply~tr).] 0.002 secs (0.002u,0.s)
Chars 9029 - 9038 [exists~q.] 0.002 secs (0.002u,0.s)
Chars 9039 - 9047 [(apply~H).] 0.002 secs (0.002u,0.s)
Chars 9052 - 9053 [+] 0. secs (0.u,0.s)
Chars 9054 - 9063 [(apply~tr).] 0.002 secs (0.002u,0.s)
Chars 9064 - 9107 [exists~(fun~x~=>~proj1~(clean_...] 0.004 secs (0.003u,0.s)
Chars 9108 - 9122 [(intros~q~q'~H).] 0.003 secs (0.001u,0.s)
Chars 9123 - 9152 [(assert~(Hqq'~:~f'~q~=~f'~q')).] 0.002 secs (0.002u,0.s)
Chars 9159 - 9160 [*] 0. secs (0.u,0.s)
Chars 9161 - 9190 [(destruct~clean_sum~as~[z~<-]).] 0.006 secs (0.006u,0.s)
Chars 9191 - 9221 [(destruct~clean_sum~as~[z'~<-]).] 0.006 secs (0.006u,0.s)
Chars 9222 - 9231 [(cbn~in~H).] 0.002 secs (0.002u,0.s)
Chars 9232 - 9246 [now~rewrite~H.] 0.008 secs (0.006u,0.001s)
Chars 9253 - 9254 [*] 0. secs (0.u,0.s)
Chars 9255 - 9272 [(apply~Hf~in~Hqq').] 0.002 secs (0.002u,0.s)
Chars 9273 - 9300 [(change~q~with~(snd~(p,~q))).] 0.002 secs (0.002u,0.s)
Chars 9301 - 9318 [now~rewrite~Hqq'.] 0.01 secs (0.01u,0.s)
Chars 8274 - 8287 [(intros~H1~H2).] 0. secs (0.u,0.s)
Chars 8288 - 8352 [(assert~(HF~:~InjectsInto~((X~...] 0. secs (0.u,0.s)
Chars 8357 - 8396 [(eapply~InjectsInto_trans;~try...] 0. secs (0.u,0.s)
Chars 8401 - 8465 [(eapply~InjectsInto_trans;~try...] 0. secs (0.u,0.s)
Chars 8470 - 8492 [(rewrite~path_sum_prod).] 0. secs (0.u,0.s)
Chars 8493 - 8502 [(apply~tr).] 0. secs (0.u,0.s)
Chars 8503 - 8515 [reflexivity.] 0. secs (0.u,0.s)
Chars 8520 - 8557 [(eapply~merely_destruct;~try~a...] 0. secs (0.u,0.s)
Chars 8558 - 8572 [(intros~[f~Hf]).] 0. secs (0.u,0.s)
Chars 8577 - 8629 [(pose~(R~:=~fun~x~=>~fun~p~=>~...] 0. secs (0.u,0.s)
Chars 8630 - 8667 [(destruct~(@Cantor_rel~_~R)~as...] 0. secs (0.u,0.s)
Chars 8674 - 8694 [(intros~x~p~p'~H3~H4).] 0.001 secs (0.001u,0.s)
Chars 8695 - 8732 [(eapply~merely_destruct;~try~a...] 0.002 secs (0.001u,0.s)
Chars 8733 - 8747 [(intros~[q~Hq]).] 0.001 secs (0.001u,0.s)
Chars 8754 - 8791 [(eapply~merely_destruct;~try~a...] 0.002 secs (0.002u,0.s)
Chars 8792 - 8808 [(intros~[q'~Hq']).] 0.001 secs (0.001u,0.s)
Chars 8809 - 8818 [(apply~tr).] 0.001 secs (0.001u,0.s)
Chars 8825 - 8852 [(change~p~with~(fst~(p,~q))).] 0.001 secs (0.001u,0.s)
Chars 8853 - 8891 [(rewrite~(Hf~(p,~q)~(p',~q'));...] 0.004 secs (0.004u,0.s)
Chars 8892 - 8912 [now~rewrite~Hq,~Hq'.] 0.001 secs (0.001u,0.s)
Chars 8919 - 8943 [(pose~(f'~:=~fun~q~=>~f~(p,~q))).] 0.001 secs (0.001u,0.s)
Chars 8944 - 8984 [(assert~(H'~:~forall~q~x,~f'~q...] 0.001 secs (0.001u,0.s)
Chars 8991 - 9004 [(intros~q~x~H).] 0.001 secs (0.001u,0.s)
Chars 9005 - 9018 [(apply~(Hp~x)).] 0.001 secs (0.001u,0.s)
Chars 9019 - 9028 [(apply~tr).] 0.001 secs (0.u,0.s)
Chars 9029 - 9038 [exists~q.] 0.001 secs (0.u,0.s)
Chars 9039 - 9047 [(apply~H).] 0.001 secs (0.001u,0.s)
Chars 9054 - 9063 [(apply~tr).] 0.001 secs (0.001u,0.s)
Chars 9064 - 9107 [exists~(fun~x~=>~proj1~(clean_...] 0.001 secs (0.u,0.s)
Chars 9108 - 9122 [(intros~q~q'~H).] 0.001 secs (0.001u,0.s)
Chars 9123 - 9152 [(assert~(Hqq'~:~f'~q~=~f'~q')).] 0.001 secs (0.001u,0.s)
Chars 9161 - 9190 [(destruct~clean_sum~as~[z~<-]).] 0.001 secs (0.001u,0.s)
Chars 9191 - 9221 [(destruct~clean_sum~as~[z'~<-]).] 0.002 secs (0.001u,0.s)
Chars 9222 - 9231 [(cbn~in~H).] 0.002 secs (0.002u,0.s)
Chars 9232 - 9246 [now~rewrite~H.] 0.001 secs (0.001u,0.s)
Chars 9255 - 9272 [(apply~Hf~in~Hqq').] 0.001 secs (0.001u,0.s)
Chars 9273 - 9300 [(change~q~with~(snd~(p,~q))).] 0.002 secs (0.002u,0.s)
Chars 9301 - 9318 [now~rewrite~Hqq'.] 0.002 secs (0.002u,0.s)
Chars 9319 - 9323 [Qed.] 0.013 secs (0.013u,0.s)
Chars 9325 - 9341 [End~Preparation.] 0.246 secs (0.225u,0.019s)
Chars 9376 - 9395 [Section~Sierpinski.] 0. secs (0.u,0.s)
Chars 9397 - 9423 [Context~{UA~:~Univalence}.] 0. secs (0.u,0.s)
Chars 9424 - 9454 [Context~{EM~:~ExcludedMiddle}.] 0. secs (0.u,0.s)
Chars 9455 - 9483 [Context~{PR~:~PropResizing}.] 0. secs (0.u,0.s)
Chars 9485 - 9585 [Definition~powfix~X~:=~~~foral...] 0. secs (0.u,0.s)
Chars 9587 - 9614 [Variable~(HN~:~HSet~->~HSet).] 0. secs (0.u,0.s)
Chars 9616 - 9673 [Hypothesis~(HN_ninject~:~foral...] 0. secs (0.u,0.s)
Chars 9675 - 9699 [Variable~(HN_bound~:~nat).] 0. secs (0.u,0.s)
Chars 9700 - 9780 [Hypothesis~~~(HN_inject~:~fora...] 0. secs (0.u,0.s)
Chars 10052 - 10158 [Lemma~InjectsInto_sum~X~Y~X'~Y...] 0.001 secs (0.001u,0.s)
Chars 10159 - 10165 [Proof.] 0. secs (0.u,0.s)
Chars 10168 - 10181 [(intros~H1~H2).] 40.164 secs (0.001u,0.033s)
Chars 10184 - 10221 [(eapply~merely_destruct;~try~a...] 0.006 secs (0.006u,0.s)
Chars 10222 - 10236 [(intros~[f~Hf]).] 0.001 secs (0.001u,0.s)
Chars 10239 - 10276 [(eapply~merely_destruct;~try~a...] 0.006 secs (0.006u,0.s)
Chars 10277 - 10291 [(intros~[g~Hg]).] 0.001 secs (0.001u,0.s)
Chars 10294 - 10303 [(apply~tr).] 0.001 secs (0.u,0.s)
Chars 10304 - 10379 [exists~(fun~z~=>~match~z~with~...] 0.004 secs (0.004u,0.s)
Chars 10382 - 10405 [(intros~[x|~y]~[x'|~y']~H).] 0.004 secs (0.003u,0.001s)
Chars 10408 - 10409 [-] 0. secs (0.u,0.s)
Chars 10410 - 10419 [(apply~ap).] 0.001 secs (0.001u,0.s)
Chars 10420 - 10429 [(apply~Hf).] 0.001 secs (0.001u,0.s)
Chars 10430 - 10457 [(apply~path_sum_inl~with~Y').] 0.001 secs (0.001u,0.s)
Chars 10458 - 10466 [(apply~H).] 0.001 secs (0.u,0.s)
Chars 10469 - 10470 [-] 0. secs (0.u,0.s)
Chars 10471 - 10497 [now~apply~inl_ne_inr~in~H.] 0.002 secs (0.002u,0.s)
Chars 10500 - 10501 [-] 0. secs (0.u,0.s)
Chars 10502 - 10528 [now~apply~inr_ne_inl~in~H.] 0.002 secs (0.002u,0.s)
Chars 10531 - 10532 [-] 0. secs (0.u,0.s)
Chars 10533 - 10542 [(apply~ap).] 0.001 secs (0.001u,0.s)
Chars 10543 - 10552 [(apply~Hg).] 0.001 secs (0.001u,0.s)
Chars 10553 - 10580 [(apply~path_sum_inr~with~X').] 0.001 secs (0.001u,0.s)
Chars 10581 - 10589 [(apply~H).] 0.001 secs (0.001u,0.s)
Chars 10168 - 10181 [(intros~H1~H2).] 0. secs (0.u,0.s)
Chars 10184 - 10221 [(eapply~merely_destruct;~try~a...] 0.001 secs (0.001u,0.s)
Chars 10222 - 10236 [(intros~[f~Hf]).] 0. secs (0.u,0.s)
Chars 10239 - 10276 [(eapply~merely_destruct;~try~a...] 0.001 secs (0.001u,0.s)
Chars 10277 - 10291 [(intros~[g~Hg]).] 0. secs (0.u,0.s)
Chars 10294 - 10303 [(apply~tr).] 0. secs (0.u,0.s)
Chars 10304 - 10379 [exists~(fun~z~=>~match~z~with~...] 0. secs (0.u,0.s)
Chars 10382 - 10405 [(intros~[x|~y]~[x'|~y']~H).] 0. secs (0.u,0.s)
Chars 10410 - 10419 [(apply~ap).] 0. secs (0.u,0.s)
Chars 10420 - 10429 [(apply~Hf).] 0. secs (0.u,0.s)
Chars 10430 - 10457 [(apply~path_sum_inl~with~Y').] 0. secs (0.u,0.s)
Chars 10458 - 10466 [(apply~H).] 0. secs (0.u,0.s)
Chars 10471 - 10497 [now~apply~inl_ne_inr~in~H.] 0. secs (0.u,0.s)
Chars 10502 - 10528 [now~apply~inr_ne_inl~in~H.] 0. secs (0.u,0.s)
Chars 10533 - 10542 [(apply~ap).] 0. secs (0.u,0.s)
Chars 10543 - 10552 [(apply~Hg).] 0. secs (0.u,0.s)
Chars 10553 - 10580 [(apply~path_sum_inr~with~X').] 0. secs (0.u,0.s)
Chars 10581 - 10589 [(apply~H).] 0. secs (0.u,0.s)
Chars 10590 - 10594 [Qed.] 0.004 secs (0.004u,0.s)
Chars 10770 - 10906 [Lemma~Sierpinski_step~(X~:~HSe...] 0.002 secs (0.002u,0.s)
Chars 10907 - 10913 [Proof.] 0. secs (0.u,0.s)
(* info auto: *)
idtac.
(* info auto: *)
idtac.
     = Lt
     : comparison
(* info auto: *)
idtac.
Chars 10916 - 10936 [(intros~gch~H1~H2~Hi).] 40.158 secs (0.u,0.035s)
Chars 10937 - 10949 [(induction~n).] 0.001 secs (0.001u,0.s)
Chars 10952 - 10953 [-] 0. secs (0.u,0.s)
Chars 10954 - 10981 [now~apply~HN_ninject~in~Hi.] 0.002 secs (0.002u,0.s)
Chars 10984 - 10985 [-] 0. secs (0.u,0.s)
Chars 10986 - 11085 [(destruct~~~(gch~(Build_HSet~(...] 0.058 secs (0.05u,0.007s)
Chars 11090 - 11091 [+] 0. secs (0.u,0.s)
Chars 11092 - 11126 [now~apply~infinite_power_itera...] 0.006 secs (0.004u,0.001s)
Chars 11131 - 11132 [+] 0. secs (0.u,0.s)
Chars 11133 - 11142 [(apply~tr).] 0.002 secs (0.002u,0.s)
Chars 11143 - 11154 [exists~inl.] 0.003 secs (0.002u,0.s)
Chars 11155 - 11167 [(intros~x~x').] 0.001 secs (0.001u,0.s)
Chars 11168 - 11187 [(apply~path_sum_inl).] 0.002 secs (0.002u,0.s)
Chars 11192 - 11193 [+] 0. secs (0.u,0.s)
Chars 11194 - 11219 [(eapply~InjectsInto_trans).] 0.006 secs (0.001u,0.s)
Chars 11226 - 11227 [*] 0. secs (0.u,0.s)
Chars 11228 - 11264 [(apply~InjectsInto_sum;~try~ap...] 0.009 secs (0.008u,0.s)
Chars 11265 - 11291 [(apply~tr,~Injection_power).] 0.002 secs (0.002u,0.s)
Chars 11292 - 11300 [exact~_.] 0.003 secs (0.003u,0.s)
Chars 11307 - 11308 [*] 0. secs (0.u,0.s)
Chars 11309 - 11313 [(cbn).] 0.001 secs (0.001u,0.s)
Chars 11314 - 11336 [specialize~(H2~(S~n)).] 0.001 secs (0.001u,0.s)
Chars 11337 - 11347 [(cbn~in~H2).] 0.001 secs (0.001u,0.s)
Chars 11348 - 11359 [(rewrite~H2).] 0.002 secs (0.002u,0.s)
Chars 11360 - 11385 [(apply~tr,~Injection_refl).] 0.002 secs (0.001u,0.s)
Chars 11390 - 11391 [+] 0. secs (0.u,0.s)
Chars 11392 - 11402 [(apply~IHn).] 0.001 secs (0.001u,0.s)
Chars 11403 - 11441 [(eapply~InjectsInto_trans;~try...] 0.011 secs (0.01u,0.001s)
Chars 11442 - 11451 [(apply~tr).] 0.002 secs (0.001u,0.001s)
Chars 11452 - 11463 [exists~inr.] 0.003 secs (0.001u,0.001s)
Chars 11464 - 11475 [(intros~x~y).] 0.001 secs (0.001u,0.s)
Chars 11476 - 11495 [(apply~path_sum_inr).] 0.002 secs (0.002u,0.s)
Chars 11500 - 11501 [+] 0. secs (0.u,0.s)
Chars 11502 - 11596 [(apply~InjectsInto_trans~with~...] 0.009 secs (0.006u,0.002s)
Chars 11603 - 11607 [(cbn).] 0.001 secs (0.001u,0.s)
Chars 11608 - 11641 [(apply~(Cantor_injects_injects...] 0.004 secs (0.004u,0.s)
Chars 11642 - 11657 [(rewrite~(H2~n)).] 0.002 secs (0.002u,0.s)
Chars 11658 - 11683 [(apply~tr,~Injection_refl).] 0.002 secs (0.002u,0.s)
Chars 10916 - 10936 [(intros~gch~H1~H2~Hi).] 0. secs (0.u,0.s)
Chars 10937 - 10949 [(induction~n).] 0. secs (0.u,0.s)
Chars 10954 - 10981 [now~apply~HN_ninject~in~Hi.] 0. secs (0.u,0.s)
Chars 10986 - 11085 [(destruct~~~(gch~(Build_HSet~(...] 0. secs (0.u,0.s)
Chars 11092 - 11126 [now~apply~infinite_power_itera...] 0. secs (0.u,0.s)
Chars 11133 - 11142 [(apply~tr).] 0.001 secs (0.001u,0.s)
Chars 11143 - 11154 [exists~inl.] 0.001 secs (0.u,0.s)
Chars 11155 - 11167 [(intros~x~x').] 0.001 secs (0.001u,0.s)
Chars 11168 - 11187 [(apply~path_sum_inl).] 0.001 secs (0.001u,0.s)
Chars 11194 - 11219 [(eapply~InjectsInto_trans).] 0.001 secs (0.u,0.s)
Chars 11228 - 11264 [(apply~InjectsInto_sum;~try~ap...] 0.001 secs (0.001u,0.s)
Chars 11265 - 11291 [(apply~tr,~Injection_power).] 0. secs (0.u,0.s)
Chars 11292 - 11300 [exact~_.] 0. secs (0.u,0.s)
Chars 11309 - 11313 [(cbn).] 0.001 secs (0.001u,0.s)
Chars 11314 - 11336 [specialize~(H2~(S~n)).] 0. secs (0.u,0.s)
Chars 11337 - 11347 [(cbn~in~H2).] 0. secs (0.u,0.s)
Chars 11348 - 11359 [(rewrite~H2).] 0.001 secs (0.001u,0.s)
Chars 11360 - 11385 [(apply~tr,~Injection_refl).] 0. secs (0.u,0.s)
Chars 11392 - 11402 [(apply~IHn).] 0.001 secs (0.001u,0.s)
Chars 11403 - 11441 [(eapply~InjectsInto_trans;~try...] 0.002 secs (0.002u,0.s)
Chars 11442 - 11451 [(apply~tr).] 0.001 secs (0.001u,0.s)
Chars 11452 - 11463 [exists~inr.] 0.001 secs (0.001u,0.s)
Chars 11464 - 11475 [(intros~x~y).] 0.001 secs (0.u,0.s)
Chars 11476 - 11495 [(apply~path_sum_inr).] 0.001 secs (0.001u,0.s)
Chars 11502 - 11596 [(apply~InjectsInto_trans~with~...] 0.002 secs (0.002u,0.s)
Chars 11603 - 11607 [(cbn).] 0.001 secs (0.001u,0.s)
Chars 11608 - 11641 [(apply~(Cantor_injects_injects...] 0.001 secs (0.001u,0.s)
Chars 11642 - 11657 [(rewrite~(H2~n)).] 0.001 secs (0.001u,0.s)
Chars 11658 - 11683 [(apply~tr,~Injection_refl).] 0.001 secs (0.001u,0.s)
Chars 11684 - 11688 [Qed.] 0.011 secs (0.011u,0.s)
Chars 11690 - 11792 [Theorem~GCH_injects'~(X~:~HSet...] 0.003 secs (0.003u,0.s)
Chars 11793 - 11799 [Proof.] 0. secs (0.u,0.s)
Chars 11802 - 11816 [(intros~gch~HX).] 14.087 secs (-0.363u,-0.84s)
     = "RUPICOLA"
     : string
Chars 11802 - 11816 [(intros~gch~HX).] 40.083 secs (0.u,0.036s)
Chars 11817 - 11886 [(eapply~InjectsInto_trans;~try...] 0.01 secs (0.009u,0.s)
Chars 11889 - 11953 [(apply~(@Sierpinski_step~(Buil...] 0.002 secs (0.002u,0.s)
Chars 11956 - 11957 [-] 0. secs (0.u,0.s)
Chars 11958 - 11996 [(apply~infinite_inject~with~X;...] 0.003 secs (0.003u,0.s)
Chars 11997 - 12019 [(apply~Injection_power).] 0.001 secs (0.001u,0.s)
Chars 12020 - 12028 [(apply~X).] 0.001 secs (0.u,0.001s)
Chars 12031 - 12032 [-] 0. secs (0.u,0.s)
Chars 12033 - 12042 [(intros~n).] 0. secs (0.u,0.s)
Chars 12043 - 12047 [(cbn).] 0.001 secs (0.001u,0.s)
Chars 12048 - 12078 [(rewrite~!power_iterated_shift).] 0.003 secs (0.003u,0.s)
Chars 12079 - 12106 [(eapply~path_infinite_power).] 0.004 secs (0.004u,0.s)
Chars 12107 - 12111 [(cbn).] 0.001 secs (0.u,0.s)
Chars 12112 - 12146 [now~apply~infinite_power_itera...] 0.005 secs (0.004u,0.s)
Chars 12149 - 12150 [-] 0. secs (0.u,0.s)
Chars 12151 - 12167 [(apply~HN_inject).] 0.003 secs (0.001u,0.s)
Chars 11802 - 11816 [(intros~gch~HX).] 0. secs (0.u,0.s)
Chars 11817 - 11886 [(eapply~InjectsInto_trans;~try...] 0.001 secs (0.u,0.s)
Chars 11889 - 11953 [(apply~(@Sierpinski_step~(Buil...] 0. secs (0.u,0.s)
Chars 11958 - 11996 [(apply~infinite_inject~with~X;...] 0.001 secs (0.001u,0.s)
Chars 11997 - 12019 [(apply~Injection_power).] 0. secs (0.u,0.s)
Chars 12020 - 12028 [(apply~X).] 0. secs (0.u,0.s)
Chars 12033 - 12042 [(intros~n).] 0. secs (0.u,0.s)
Chars 12043 - 12047 [(cbn).] 0. secs (0.u,0.s)
Chars 12048 - 12078 [(rewrite~!power_iterated_shift).] 0. secs (0.u,0.s)
Chars 12079 - 12106 [(eapply~path_infinite_power).] 0. secs (0.u,0.s)
Chars 12107 - 12111 [(cbn).] 0. secs (0.u,0.s)
Chars 12112 - 12146 [now~apply~infinite_power_itera...] 0. secs (0.u,0.s)
Chars 12151 - 12167 [(apply~HN_inject).] 0. secs (0.u,0.s)
Chars 12168 - 12172 [Qed.] 0.002 secs (0.001u,0.s)
Chars 12174 - 12280 [Theorem~GCH_injects~(X~:~HSet)...] 0.032 secs (0.031u,0.s)
Chars 12281 - 12287 [Proof.] 0. secs (0.u,0.s)
Chars 12290 - 12301 [(intros~gch).] 40.149 secs (0.001u,0.035s)
Chars 12302 - 12342 [(eapply~InjectsInto_trans~with...] 0.002 secs (0.002u,0.s)
Chars 12345 - 12346 [-] 0. secs (0.u,0.s)
Chars 12347 - 12356 [(apply~tr).] 0.005 secs (0.001u,0.s)
Chars 12357 - 12368 [exists~inr.] 0.002 secs (0.u,0.s)
Chars 12369 - 12380 [(intros~x~y).] 0. secs (0.u,0.s)
Chars 12381 - 12400 [(apply~path_sum_inr).] 0.001 secs (0.001u,0.s)
Chars 12403 - 12404 [-] 0. secs (0.u,0.s)
Chars 12405 - 12433 [(apply~GCH_injects';~trivial).] 0.004 secs (0.003u,0.s)
Chars 12434 - 12445 [exists~inl.] 0.002 secs (0.002u,0.s)
Chars 12446 - 12457 [(intros~x~y).] 0.001 secs (0.001u,0.s)
Chars 12458 - 12477 [(apply~path_sum_inl).] 0.001 secs (0.001u,0.s)
Chars 12290 - 12301 [(intros~gch).] 0.037 secs (0.023u,0.013s)
Chars 12302 - 12342 [(eapply~InjectsInto_trans~with...] 0. secs (0.u,0.s)
Chars 12347 - 12356 [(apply~tr).] 0. secs (0.u,0.s)
Chars 12357 - 12368 [exists~inr.] 0. secs (0.u,0.s)
Chars 12369 - 12380 [(intros~x~y).] 0. secs (0.u,0.s)
Chars 12381 - 12400 [(apply~path_sum_inr).] 0. secs (0.u,0.s)
Chars 12405 - 12433 [(apply~GCH_injects';~trivial).] 0.001 secs (0.001u,0.s)
Chars 12434 - 12445 [exists~inl.] 0. secs (0.u,0.s)
Chars 12446 - 12457 [(intros~x~y).] 0. secs (0.u,0.s)
Chars 12458 - 12477 [(apply~path_sum_inl).] 0. secs (0.u,0.s)
Chars 12478 - 12482 [Qed.] 0.002 secs (0.002u,0.s)
Chars 12484 - 12499 [End~Sierpinski.] 0.071 secs (0.066u,0.004s)
Chars 12536 - 12635 [Theorem~GCH_AC~{UA~:~Univalenc...] 0. secs (0.u,0.s)
Chars 12636 - 12642 [Proof.] 0. secs (0.u,0.s)
sp_merge_sort : sort_fun_t
     : sort_fun_t
stable_merge_sort : sort_fun_t
     : sort_fun_t
Chars 12645 - 12656 [(intros~gch).] 40.269 secs (0.001u,0.035s)
Chars 12659 - 12671 [(apply~WO_AC).] 0.001 secs (0.u,0.s)
Chars 12672 - 12681 [(intros~X).] 0. secs (0.u,0.s)
Chars 12682 - 12691 [(apply~tr).] 0.001 secs (0.u,0.001s)
Chars 12692 - 12761 [exists~(hartogs_number~(Build_...] 0.03 secs (0.021u,0.009s)
Chars 12764 - 12832 [unshelve~(eapply~(@GCH_injects...] 0.004 secs (0.004u,0.s)
Chars 12835 - 12836 [-] 0. secs (0.u,0.s)
Chars 12837 - 12846 [(intros~Y).] 0. secs (0.u,0.s)
Chars 12847 - 12856 [(intros~H).] 0. secs (0.u,0.s)
Chars 12857 - 12893 [(eapply~merely_destruct;~try~a...] 0.005 secs (0.005u,0.s)
Chars 12894 - 12928 [(apply~hartogs_number_no_injec...] 0.002 secs (0.002u,0.s)
Chars 12931 - 12932 [-] 0. secs (0.u,0.s)
Chars 12933 - 12942 [(intros~Y).] 0. secs (0.u,0.s)
Chars 12943 - 12952 [(apply~tr).] 0.001 secs (0.u,0.s)
Chars 12953 - 12984 [(apply~hartogs_number_injection).] 0.002 secs (0.002u,0.s)
Chars 12645 - 12656 [(intros~gch).] 0. secs (0.u,0.s)
Chars 12659 - 12671 [(apply~WO_AC).] 0. secs (0.u,0.s)
Chars 12672 - 12681 [(intros~X).] 0. secs (0.u,0.s)
Chars 12682 - 12691 [(apply~tr).] 0. secs (0.u,0.s)
Chars 12692 - 12761 [exists~(hartogs_number~(Build_...] 0. secs (0.u,0.s)
Chars 12764 - 12832 [unshelve~(eapply~(@GCH_injects...] 0. secs (0.u,0.s)
Chars 12837 - 12846 [(intros~Y).] 0. secs (0.u,0.s)
Chars 12847 - 12856 [(intros~H).] 0. secs (0.u,0.s)
Chars 12857 - 12893 [(eapply~merely_destruct;~try~a...] 0. secs (0.u,0.s)
Chars 12894 - 12928 [(apply~hartogs_number_no_injec...] 0. secs (0.u,0.s)
Chars 12933 - 12942 [(intros~Y).] 0. secs (0.u,0.s)
Chars 12943 - 12952 [(apply~tr).] 0. secs (0.u,0.s)
Chars 12953 - 12984 [(apply~hartogs_number_injection).] 0. secs (0.u,0.s)
Chars 12985 - 12989 [Qed.] 0.003 secs (0.003u,0.s)
Finished failing transaction in 33.581 secs (-27.443u,1.18s) (failure)
     = Lt
     : comparison
     = true
     : bool
     = false
     : bool

type bool =
| True
| False

type nat =
| O
| S of nat

type 'a option =
| Some of 'a
| None

type ('a, 'b) sum =
| Inl of 'a
| Inr of 'b

type 'a sig0 = 'a
  (* singleton inductive, whose constructor was exist *)

type sumbool =
| Left
| Right

module Nat =
 struct
  (** val eq_dec : nat -> nat -> sumbool **)

  let rec eq_dec n m =
    match n with
    | O -> (match m with
            | O -> Left
            | S _ -> Right)
    | S n0 -> (match m with
               | O -> Right
               | S n1 -> eq_dec n0 n1)
 end

(** val sumbool_of_bool : bool -> sumbool **)

let sumbool_of_bool = function
| True -> Left
| False -> Right

type t1 =
| Zero
| Cons of t1 * nat * t1

(** val t1limit : t1 -> bool **)

let rec t1limit = function
| Zero -> False
| Cons (alpha0, _, beta) ->
  (match alpha0 with
   | Zero -> False
   | Cons (_, _, _) ->
     (match beta with
      | Zero -> True
      | Cons (_, _, _) -> t1limit beta))

(** val pred : t1 -> t1 option **)

let rec pred = function
| Zero -> None
| Cons (a, n, b) ->
  (match a with
   | Zero ->
     (match n with
      | O -> Some Zero
      | S n0 -> Some (Cons (Zero, n0, Zero)))
   | Cons (_, _, _) ->
     (match pred b with
      | Some c0 -> Some (Cons (a, n, c0))
      | None -> None))

(** val t1_eq_dec : t1 -> t1 -> sumbool **)

let rec t1_eq_dec t x =
  match t with
  | Zero -> (match x with
             | Zero -> Left
             | Cons (_, _, _) -> Right)
  | Cons (alpha, n, beta) ->
    (match x with
     | Zero -> Right
     | Cons (alpha0, n0, beta0) ->
       (match t1_eq_dec alpha alpha0 with
        | Left ->
          (match Nat.eq_dec n n0 with
           | Left -> t1_eq_dec beta beta0
           | Right -> Right)
        | Right -> Right))

(** val zero_limit_succ_dec : t1 -> (sumbool, t1) sum **)

let rec zero_limit_succ_dec = function
| Zero -> Inl Left
| Cons (alpha, n, beta) ->
  (match alpha with
   | Zero -> Inr (match n with
                  | O -> Zero
                  | S n0 -> Cons (Zero, n0, Zero))
   | Cons (alpha0, n0, beta0) ->
     let s = zero_limit_succ_dec beta in
     (match s with
      | Inl _ -> Inl Right
      | Inr b -> Inr (Cons ((Cons (alpha0, n0, beta0)), n, b))))

type e0 = t1
  (* singleton inductive, whose constructor was mkord *)

(** val cnf : e0 -> t1 **)

let cnf e1 =
  e1

(** val e0zero : e0 **)

let e0zero =
  Zero

(** val e0limit : e0 -> bool **)

let e0limit alpha =
  t1limit (cnf alpha)

(** val e0_eq_dec : e0 -> e0 -> sumbool **)

let e0_eq_dec =
  t1_eq_dec

(** val zero_Limit_Succ_dec : e0 -> (sumbool, e0) sum **)

let zero_Limit_Succ_dec alpha =
  let s = zero_limit_succ_dec alpha in
  (match s with
   | Inl a -> Inl a
   | Inr b -> Inr b)

(** val e0pred : e0 -> e0 **)

let e0pred alpha =
  match zero_Limit_Succ_dec alpha with
  | Inl _ -> alpha
  | Inr s -> s

(** val canon : t1 -> nat -> t1 **)

let rec canon alpha i =
  match alpha with
  | Zero -> Zero
  | Cons (alpha0, n, beta) ->
    (match alpha0 with
     | Zero ->
       (match n with
        | O ->
          (match beta with
           | Zero -> Zero
           | Cons (_, _, _) -> Cons (alpha0, n, (canon beta i)))
        | S n0 ->
          (match beta with
           | Zero -> Cons (Zero, n0, Zero)
           | Cons (_, _, _) -> Cons (alpha0, n, (canon beta i))))
     | Cons (_, _, _) ->
       (match n with
        | O ->
          (match beta with
           | Zero ->
             (match pred alpha0 with
              | Some gamma' ->
                (match i with
                 | O -> Zero
                 | S j -> Cons (gamma', j, Zero))
              | None -> Cons ((canon alpha0 i), O, Zero))
           | Cons (_, _, _) -> Cons (alpha0, n, (canon beta i)))
        | S n0 ->
          (match beta with
           | Zero ->
             (match pred alpha0 with
              | Some gamma' ->
                (match i with
                 | O -> Cons (alpha0, n0, Zero)
                 | S j -> Cons (alpha0, n0, (Cons (gamma', j, Zero))))
              | None -> Cons (alpha0, n0, (Cons ((canon alpha0 i), O, Zero))))
           | Cons (_, _, _) -> Cons (alpha0, n, (canon beta i)))))

(** val canon0 : e0 -> nat -> e0 **)

let canon0 alpha i =
  canon (cnf alpha) i

(** val l_ : e0 -> nat -> nat **)

let l_ a b =
  let rec fix_F x =
    let alpha = let pr1,_ = x in pr1 in
    let i = let _,pr2 = x in pr2 in
    (match e0_eq_dec alpha e0zero with
     | Left -> i
     | Right ->
       (match sumbool_of_bool (e0limit alpha) with
        | Left -> let y = (canon0 alpha i),(S i) in fix_F y
        | Right -> let y = (e0pred alpha),(S i) in fix_F y))
  in fix_F (a,b)

     = ("nondet_xor",
       (["w"], ["out"], bedrock_func_body:(
         stackalloc 8 as $"bs";
         $"idx" = $0;
         $"undef" = load1($"bs" + $1 * $0);
         $"out" = $"w";
         $"out" = $"undef" ^ $"out";
         $"out" = $"undef" ^ $"out")))
     : bedrock_func
Finished transaction in 7.871 secs (7.83u,0.039s) (successful)
Finished transaction in 46.555 secs (5.868u,0.246s) (successful)
Finished transaction in 0. secs (0.u,0.s) (successful)
Finished transaction in 0.825 secs (0.82u,0.003s) (successful)
     = ("indirect_add_three'",
       (["out"; "a"; "b"; "c"], [],
       cmd.stackalloc "v" size_in_bytes
         (cmd.seq (cmd.call [] "indirect_add" ["v"; "a"; "b"])
            (cmd.call [] "indirect_add" ["out"; "v"; "c"]))))
     : bedrock_func
Finished transaction in 97.686 secs (56.997u,0.503s) (successful)
Finished transaction in 0. secs (0.u,0.s) (successful)
