
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.rplus_morph_Proper	40	129.578	synth with cache (only 1: intros Hn; only 1: firstorder).	0.490745067596	268
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.rtimes_morph_Proper	40	321.192.449	synth with cache (only 1: intros n IH; only 1: intros H1 H2 H3; only 1: simpl_relation).	0.209311962128	106
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.ropp_morph_Proper	40	5	synth with cache (only 1: firstorder).	0.224909067154	378
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.rle_morph_Proper	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.rlt_morph_Proper	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.rminus_morph_Proper	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rneq_symm	40	66	synth with cache (only 1: intuition).	0.165503025055	89
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_0_l	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_0_r	40	0.0	synth with cache (only 1: intro; only 1: ring).	0.026890039444	2
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_0_r	40	0.0	synth with cache (only 1: intro; only 1: ring).	0.0281541347504	2
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_comm	40	0.1.128	synth with cache (only 1: intro eq_rect_eq; only 1: intro; only 1: ring).	0.0396530628204	12
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_0_l	40	0.0	synth with cache (only 1: intro; only 1: ring).	0.0330278873444	2
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_comm	40	0.0	synth with cache (only 1: intros; only 1: ring).	0.0344400405884	2
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rminus_eq_0	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_cancel_l	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Req_em	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Req_dne	40	258.0.133.3.1.0.0.0	synth with cache (only 1: intros n m; only 1: destruct (Rlt_trichotomy n m) as [H| [H| H]]; only 1: rewrite Rlt_le_neq in H; only 1: now destruct H; only 1: rewrite H; only 1: now BinInt.Z.nzsimpl; only 1: rewrite Rlt_le_neq in H; only 1: firstorder).	15.0603621006	6816
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_lt_eq	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_trans	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_lt_trans	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_le_trans	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_gt_cases	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_neq	40	0.0.0.0	synth with cache (only 1: intros n m; only 1: intro H; only 1: rewrite Rlt_le_neq in H; only 1: now destruct H).	0.0420370101929	4
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_ngt	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_nge	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_le_mono_l	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_le_mono_r	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_lt_mono_l	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_lt_mono_r	40	0.0.0.3.1.0	synth with cache (only 1: intros n m p; only 1: rewrite (Rplus_comm m p); only 1: rewrite (Rplus_comm n p); only 1: do 2 rewrite Rlt_le_neq; only 1: rewrite Rplus_cancel_l; only 1: now rewrite <- Rplus_le_mono_l).	1.97318506241	2120
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_lt_mono	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_le_mono	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_lt_le_mono	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_le_lt_mono	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_pos_pos	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_pos_nonneg	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_nonneg_pos	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_nonneg_nonneg	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_le_minus	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_lt_minus	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Ropp_lt_mono	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Ropp_pos_neg	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_nonneg_nonneg	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_pos_neg	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_neg_neg	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_square_nonneg	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_neq_0	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Ropp_neg_pos	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_0_1	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_succ_r	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_lt_succ	40
Coq.micromega.Ztac.eq_incl	40	0.0.1	synth with cache (only 1: intros x y; only 1: intro EQ; only 1: now rewrite EQ).	0.0397298336029	4
Coq.micromega.Ztac.elim_concl_eq	40	65.0.0.515	synth with cache (only 1: intro y; only 1: intros a0 a; only 1: intuition; only 1: Z.order_pos).	23.3940989971	11678
Coq.micromega.Ztac.elim_concl_le	40	3	synth with cache (only 1: intuition Z.order).	0.071624994278	63
Coq.micromega.Ztac.elim_concl_lt	40	2	synth with cache (only 1: intuition Z.order).	0.111572027206	104
Coq.micromega.Ztac.Zlt_le_add_1	40	1.66	synth with cache (only 1: intros a b; only 1: apply Z.le_succ_l).	1.25124597549	631
Coq.micromega.Ztac.add_le	40	64	synth with cache (only 1: Z.order_pos).	0.135612010956	149
Coq.micromega.Ztac.mul_le	40	450	synth with cache (only 1: firstorder).	0.885186910629	497
Coq.micromega.ZifyInst.PropAnd	40	66	synth with cache (only 1: RelationClasses.simpl_relation).	0.0426831245422	7
Coq.micromega.ZifyInst.PropOr	40	718	synth with cache (only 1: firstorder).	1.0307700634	1368
Coq.micromega.ZifyInst.PropArrow	40	0.769.194	synth with cache (only 1: repeat split; only 1: intuition auto; Pos.Private_Tac.subst_eqns; eauto using (RelationClasses.StrictOrder_Transitive x y z) with *; only 1: intuition).	0.293864965439	217
Coq.micromega.ZifyInst.PropIff	40	0.0	synth with cache (only 1: constructor; only 1: tauto).	0.0626699924469	2
Coq.micromega.ZifyInst.PropNot	40	0.0.0.3	synth with cache (only 1: constructor; only 1: intros; only 1: apply imp_iff_compat_r; only 1: tauto).	0.0929780006409	116
Coq.micromega.ZifyInst.of_nat_to_nat_eq	40	1.1.0.322	synth with cache (only 1: destruct x; only 1: trivial; only 1: now rewrite <- Z_N_nat, <- nat_N_Z, N2Nat.id, Z2N.id; only 1: trivial).	0.956391096115	497
Coq.micromega.ZifyInst.z_max_spec	40	193.325.197	synth with cache (only 1: intro H; only 1: intro n; only 1: Z.solve_max).	5.26614499092	5414
Coq.micromega.ZifyInst.z_min_spec	40
Coq.micromega.ZCoeff.InitialMorphism.req_refl	40
Coq.micromega.ZCoeff.InitialMorphism.req_sym	40	385.195	synth with cache (only 1: intros n m v; only 1: firstorder).	0.215440034866	151
Coq.micromega.ZCoeff.InitialMorphism.req_trans	40
Coq.micromega.ZCoeff.InitialMorphism.rplus_morph_Proper	40	0	synth with cache (only 1: exact (SORplus_wd sor)).	0.0227088928223	1
Coq.micromega.ZCoeff.InitialMorphism.rtimes_morph_Proper	40	0	synth with cache (only 1: exact (SORtimes_wd sor)).	0.0234861373901	1
Coq.micromega.ZCoeff.InitialMorphism.ropp_morph_Proper	40	0	synth with cache (only 1: exact (SORopp_wd sor)).	0.0228700637817	1
Coq.micromega.ZCoeff.InitialMorphism.rle_morph_Proper	40	0	synth with cache (only 1: exact (SORle_wd sor)).	0.0246710777283	1
Coq.micromega.ZCoeff.InitialMorphism.rlt_morph_Proper	40	0	synth with cache (only 1: exact (SORlt_wd sor)).	0.0239160060883	1
Coq.micromega.ZCoeff.InitialMorphism.rminus_morph_Proper	40	0.0.0.0.0	synth with cache (only 1: intros x1 x2 H1 y1 y2 H2; only 1: rewrite (Rsub_def (SORrt sor) x1 y1); only 1: rewrite (Rsub_def (SORrt sor) x2 y2); only 1: rewrite H1; only 1: now rewrite H2).	0.0697619915009	5
Coq.micromega.ZCoeff.InitialMorphism.ring_ops_wd	40
Coq.micromega.ZCoeff.InitialMorphism.Zring_morph	40
Coq.micromega.ZCoeff.InitialMorphism.phi_pos1_pos	40
Coq.micromega.ZCoeff.InitialMorphism.phi_pos1_succ	40
Coq.micromega.ZCoeff.InitialMorphism.clt_pos_morph	40
Coq.micromega.ZCoeff.InitialMorphism.clt_morph	40
Coq.micromega.ZCoeff.InitialMorphism.Zcleb_morph	40
Coq.micromega.ZCoeff.InitialMorphism.Zcneqb_morph	40
Coq.micromega.ZifyClasses.mkapp2	40
Coq.micromega.ZifyClasses.mkapp	40
Coq.micromega.ZifyClasses.mkapp0	40
Coq.micromega.ZifyClasses.mkrel	40
Coq.micromega.ZMicromega.eq_le_iff	40	0.0.0.3.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros; only 1: now subst; only 1: destruct 1; only 1: Z.order').	0.781975030899	1064
Coq.micromega.ZMicromega.lt_le_iff	40	0.0	synth with cache (only 1: intros a; only 1: apply Z.lt_le_pred).	0.0246751308441	2
Coq.micromega.ZMicromega.le_0_iff	40	0.0.1.515	synth with cache (only 1: intros H'; only 1: split; only 1: apply Z.le_0_sub; only 1: apply Z.le_0_sub).	18.7389371395	22966
Coq.micromega.ZMicromega.le_neg	40
Coq.micromega.ZMicromega.eq_cnf	40
Coq.micromega.ZMicromega.Zsor	40
Coq.micromega.ZMicromega.ZSORaddon	40
Coq.micromega.ZMicromega.ZNpower	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: unfold Z.pow_pos; only 1: rewrite <- (Z.mul_1_r (pow_pos _ _ _)); only 1: generalize 1; only 1: induction p; only 1: simpl; only 1: intros; only 1: rewrite ?IHp, ?Z.mul_assoc; only 1: trivial; only 1: simpl; only 1: intros; only 1: rewrite ?IHp, ?Z.mul_assoc; only 1: trivial; only 1: simpl; only 1: intros; only 1: trivial).	2.00554800034	1476
Coq.micromega.ZMicromega.Zeval_expr_compat	40
Coq.micromega.ZMicromega.Zeval_formula_compat'	40
Coq.micromega.ZMicromega.Zeval_nformula_dec	40
Coq.micromega.ZMicromega.ZWeakChecker_sound	40
Coq.micromega.ZMicromega.eval_pol_sub	40
Coq.micromega.ZMicromega.eval_pol_add	40
Coq.micromega.ZMicromega.eval_pol_mul	40
Coq.micromega.ZMicromega.eval_pol_norm	40
Coq.micromega.ZMicromega.Zunsat_sound	40
Coq.micromega.ZMicromega.xnnormalise_correct	40
Coq.micromega.ZMicromega.eval_pol_Pc	40	1.0	synth with cache (only 1: intros; only 1: trivial).	0.0311589241028	3
Coq.micromega.ZMicromega.xnormalise_correct	40
Coq.micromega.ZMicromega.cnf_of_list_correct	40
Coq.micromega.ZMicromega.normalise_correct	40
Coq.micromega.ZMicromega.xnegate_correct	40
Coq.micromega.ZMicromega.negate_correct	40
Coq.micromega.ZMicromega.Zdivide_ceiling	40
Coq.micromega.ZMicromega.narrow_interval_lower_bound	40
Coq.micromega.ZMicromega.isZ0_0	40
Coq.micromega.ZMicromega.isZ0_n0	40
Coq.micromega.ZMicromega.Zdiv_pol_correct	40
Coq.micromega.ZMicromega.Zgcd_pol_ge	40
Coq.micromega.ZMicromega.Zdivide_pol_Zdivide	40
Coq.micromega.ZMicromega.Zdivide_pol_one	40	64.0.576.704.194.0.0.0.3.1.195.71	synth with cache (only 1: induction p as [p IHp| p IHp| ]; only 1: constructor; only 1: auto with zarith; only 1: assert (EQ : 0 <= Z.pred (Z.pos p)) by now apply Z.lt_le_pred; only 1: constructor; only 1: easy; only 1: case_eq (Zgcd_pol p1); only 1: intros a Ha; only 1: constructor; only 1: inversion H; only 1: easy; only 1: now N.nzsimpl).	13.6138660908	37542
Coq.micromega.ZMicromega.Zgcd_minus	40
Coq.micromega.ZMicromega.Zdivide_pol_sub	40
Coq.micromega.ZMicromega.Zdivide_pol_sub_0	40
Coq.micromega.ZMicromega.Zgcd_pol_div	40
Coq.micromega.ZMicromega.Zgcd_pol_correct_lt	40
Coq.micromega.ZMicromega.is_pol_Z0_eval_pol	40
Coq.micromega.ZMicromega.pos_le_add	40
Coq.micromega.ZMicromega.max_var_le	40
Coq.micromega.ZMicromega.max_var_correct	40
Coq.micromega.ZMicromega.MaxVar.max_var_nformulae_mono_aux	40
Coq.micromega.ZMicromega.MaxVar.max_var_nformulae_mono_aux'	40
Coq.micromega.ZMicromega.MaxVar.max_var_nformulae_correct_aux	40
Coq.micromega.ZMicromega.max_var_nformalae_correct	40
Coq.micromega.ZMicromega.in_bdepth	40
Coq.micromega.ZMicromega.eval_Psatz_sound	40
Coq.micromega.ZMicromega.makeCuttingPlane_ns_sound	40
Coq.micromega.ZMicromega.cutting_plane_sound	40
Coq.micromega.ZMicromega.genCuttingPlaneNone	40
Coq.micromega.ZMicromega.eval_nformula_mk_eq_pos	40
Coq.micromega.ZMicromega.eval_nformula_bound_var	40
Coq.micromega.ZMicromega.agree_env_subset	40
Coq.micromega.ZMicromega.agree_env_jump	40
Coq.micromega.ZMicromega.agree_env_tail	40
Coq.micromega.ZMicromega.max_var_acc	40
Coq.micromega.ZMicromega.agree_env_eval_nformula	40
Coq.micromega.ZMicromega.agree_env_eval_nformulae	40
Coq.micromega.ZMicromega.eq_true_iff_eq	40	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0662868022919	5
Coq.micromega.ZMicromega.ZChecker_sound	40
Coq.micromega.ZMicromega.ZTautoChecker_sound	40
Coq.micromega.ZifyBool.Z_of_bool_bound	40
Coq.micromega.ZifyBool.Z_eqb_isZero	40
Coq.micromega.ZifyBool.Z_leb_sub	40
Coq.micromega.ZifyBool.Z_ltb_leb	40
Coq.micromega.ZifyBool.Z_of_nat_eqb_iff	40
Coq.micromega.ZifyBool.Z_of_nat_leb_iff	40
Coq.micromega.ZifyBool.Z_of_nat_ltb_iff	40
Coq.micromega.ZifyBool.Z_eqb_ZSpec_ok	40
Coq.micromega.ZifyBool.leZeroSpec_ok	40
Coq.micromega.Env.S.jump_add	40
Coq.micromega.Env.S.jump_simpl	40
Coq.micromega.Env.S.jump_tl	40
Coq.micromega.Env.S.jump_succ	40	4.2	synth with cache (only 1: rewrite <- ?jump_add; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l).	3.98274207115	2499
Coq.micromega.Env.S.jump_pred_double	40
Coq.micromega.Env.S.nth_spec	40
Coq.micromega.Env.S.nth_jump	40	67.0	synth with cache (only 1: unfold tail; only 1: now destruct compare || now destruct p).	0.0787501335144	125
Coq.micromega.Env.S.nth_pred_double	40
Coq.micromega.Tauto.S.eval_f_morph	40
Coq.micromega.Tauto.map_simpl	40	1.0.0.0.65.0	synth with cache (only 1: intros A B f l; only 1: induction l as [| a l' Hrec]; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: reflexivity).	0.13721203804	102
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_X_inv	40
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.if_same	40	3	synth with cache (only 1: destr_bool).	0.0185580253601	4
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_cnf_tt_cnf_ff	40	1	synth with cache (only 1: reflexivity).	0.0155580043793	2
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_cnf_ff_cnf_ff	40	0	synth with cache (only 1: reflexivity).	0.0146839618683	1
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_cnf_tt_inv	40	2.0.192.135	synth with cache (only 1: intros a; only 1: destruct a; only 1: reflexivity; only 1: easy).	0.613877058029	1902
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_cnf_ff_inv	40
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.if_cnf_tt	40
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.or_cnf_opt_cnf_ff	40
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.abs_and_pol	40
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.abs_or_pol	40
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.xcnf_true_mk_arrow_l	40
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.or_cnf_opt_cnf_ff_r	40	1.0.1.130.0.448.0.5.320	synth with cache (only 1: intros H; only 1: unfold or_cnf_opt; only 1: rewrite is_cnf_tt_cnf_ff; only 1: firstorder; only 1: simpl; only 1: destruct H; only 1: reflexivity; only 1: simpl; only 1: auto).	7.31354784966	14049
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.xcnf_true_mk_arrow_r	40
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.abst_form_correct	40
Coq.micromega.Tauto.S.radd_term_term	40
Coq.micromega.Tauto.S.radd_term_term'	40
Coq.micromega.Tauto.S.xror_clause_clause	40
Coq.micromega.Tauto.S.ror_clause_clause	40
Coq.micromega.Tauto.S.ror_cnf_cnf	40
Coq.micromega.Tauto.S.ror_opt_cnf_cnf	40
Coq.micromega.Tauto.S.ratom_cnf	40	0.192.130.323.3.67.0.0.200.132	synth with cache (only 1: intros H; only 1: destruct H; only 1: simpl; only 1: congruence; only 1: intros n; only 1: destruct c; only 1: destruct H; only 1: auto with arith; only 1: eauto; only 1: auto).	20.3818488121	67727
Coq.micromega.Tauto.S.rxcnf_xcnf	40
Coq.micromega.Tauto.S.eval_cnf_app	40
Coq.micromega.Tauto.S.eval_cnf_ff	40	64.321.0	synth with cache (only 1: unfold eval_cnf; only 1: compute; only 1: auto with arith).	0.0704119205475	54
Coq.micromega.Tauto.S.eval_cnf_tt	40	0.0.0	synth with cache (only 1: unfold cnf_ff, eval_cnf, eval_clause; only 1: simpl; only 1: tauto).	0.042533159256	3
Coq.micromega.Tauto.S.eval_cnf_and_opt	40
Coq.micromega.Tauto.S.add_term_correct	40
Coq.micromega.Tauto.S.no_middle_eval_tt	40	128.576	synth with cache (only 1: intros m; only 1: firstorder  (subst; auto)).	0.412987947464	92
Coq.micromega.Tauto.S.or_clause_correct	40
Coq.micromega.Tauto.S.or_clause_cnf_correct	40
Coq.micromega.Tauto.S.eval_cnf_cons	40	192.129.0.0.0.0.64.0.1.2	synth with cache (only 1: unfold eval_cnf; only 1: intros; only 1: generalize nil as acc; only 1: intros H; only 1: generalize nil as acc; only 1: induction f; only 1: simpl; only 1: intros; only 1: firstorder  (subst; auto); only 1: now PeanoNat.Nat.nzsimpl).	14.5309128761	5824
Coq.micromega.Tauto.S.eval_cnf_cons_iff	40	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold eval_cnf in *; only 1: rewrite make_conj_cons; only 1: unfold eval_clause at 2; only 1: tauto).	0.113129854202	5
Coq.micromega.Tauto.S.or_cnf_correct	40
Coq.micromega.Tauto.S.or_cnf_opt_correct	40
Coq.micromega.Tauto.S.xcnf_correct	40
Coq.micromega.Tauto.S.cnf_checker_sound	40
Coq.micromega.Tauto.S.tauto_checker_sound	40
Coq.micromega.Tauto.S.eval_bf_map	40
Coq.micromega.ZifyComparison.Z_of_comparison_bound	40	4.385.2.193.0.1.1	synth with cache (only 1: intro n; only 1: intuition; only 1: change (-1) with (- Z.succ 0); only 1: intro H1; only 1: now destruct n; only 1: CRelationClasses.reduce; only 1: now destruct n).	10.1627759933	23480
Coq.micromega.ZifyComparison.Zcompare_spec	40
Coq.micromega.EnvRing.MakeRingPol.radd_ext_Proper	40	832.451	synth with cache (only 1: intros a a' Ha b b' Hb; only 1: firstorder).	1.02469110489	537
Coq.micromega.EnvRing.MakeRingPol.rmul_ext_Proper	40	64.450	synth with cache (only 1: intros p n m Hp; only 1: firstorder).	0.278394937515	148
Coq.micromega.EnvRing.MakeRingPol.ropp_ext_Proper	40	2	synth with cache (only 1: exact (Ropp_ext Reqe)).	0.0233340263367	3
Coq.micromega.EnvRing.MakeRingPol.rsub_ext_Proper	40	3.3	synth with cache (only 1: intros x1 x2 Ex y1 y2 Ey; only 1: now rewrite !(ARsub_def ARth), Ex, Ey).	5.3131570816	2079
Coq.micromega.EnvRing.MakeRingPol.Peq_ok	40
Coq.micromega.EnvRing.MakeRingPol.Peq_spec	40
Coq.micromega.EnvRing.MakeRingPol.Pphi0	40	72.3	synth with cache (only 1: simpl; only 1: simpl_relation).	8.77859687805	6418
Coq.micromega.EnvRing.MakeRingPol.Pphi1	40	204.0	synth with cache (only 1: simpl; only 1: CRelationClasses.simpl_crelation).	1.2820558548	2094
Coq.micromega.EnvRing.MakeRingPol.env_morph	40
Coq.micromega.EnvRing.MakeRingPol.Pjump_add	40
Coq.micromega.EnvRing.MakeRingPol.Pjump_xO_tail	40
Coq.micromega.EnvRing.MakeRingPol.Pjump_pred_double	40
Coq.micromega.EnvRing.MakeRingPol.mkPinj_ok	40
Coq.micromega.EnvRing.MakeRingPol.pow_pos_add	40
Coq.micromega.EnvRing.MakeRingPol.ceqb_spec	40
Coq.micromega.EnvRing.MakeRingPol.mkPX_ok	40
Coq.micromega.EnvRing.MakeRingPol.PaddC_ok	40
Coq.micromega.EnvRing.MakeRingPol.PsubC_ok	40	0.2.1.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: revert l; only 1: induction P; only 1: simpl; only 1: intros; only 1: Esimpl; only 1: simpl; only 1: intros; only 1: trivial; only 1: simpl; only 1: intros; only 1: Esimpl; only 1: rewrite IHP2; only 1: rsimpl).	2.40932607651	813
Coq.micromega.EnvRing.MakeRingPol.PmulC_aux_ok	40
Coq.micromega.EnvRing.MakeRingPol.PmulC_ok	40
Coq.micromega.EnvRing.MakeRingPol.Popp_ok	40	0.1.2.0.0.0.0.0.0.1.0.0.1	synth with cache (only 1: revert l; only 1: induction P; only 1: simpl; only 1: intros; only 1: Esimpl; only 1: simpl; only 1: intros; only 1: trivial; only 1: simpl; only 1: intros; only 1: Esimpl; only 1: rewrite IHP1, IHP2; only 1: rsimpl).	8.73031306267	2141
Coq.micromega.EnvRing.MakeRingPol.PaddX_ok	40
Coq.micromega.EnvRing.MakeRingPol.Padd_ok	40
Coq.micromega.EnvRing.MakeRingPol.PsubX_ok	40
Coq.micromega.EnvRing.MakeRingPol.Psub_ok	40
Coq.micromega.EnvRing.MakeRingPol.PmulI_ok	40
Coq.micromega.EnvRing.MakeRingPol.Pmul_ok	40
Coq.micromega.EnvRing.MakeRingPol.Psquare_ok	40
Coq.micromega.EnvRing.MakeRingPol.Mphi_morph	40
Coq.micromega.EnvRing.MakeRingPol.Mjump_xO_tail	40
Coq.micromega.EnvRing.MakeRingPol.Mjump_pred_double	40	0.1.0.0	synth with cache (only 1: apply Mphi_morph; only 1: intros; only 1: rewrite jump_pred_double; only 1: now jump_simpl).	0.111110925674	5
Coq.micromega.EnvRing.MakeRingPol.Mjump_add	40	0.0.0.0.1	synth with cache (only 1: apply Mphi_morph; only 1: intros; only 1: rewrite <- jump_add; only 1: f_equal; only 1: apply Pos.add_comm).	0.355684041977	78
Coq.micromega.EnvRing.MakeRingPol.mkZmon_ok	40	128.192.194.19.129	synth with cache (only 1: simpl_relation; only 1: induction M; only 1: solve_proper; only 1: now rewrite <- ?N.add_le_mono_l; only 1: now rewrite <- ?N.add_le_mono_l).	10.4578099251	9285
Coq.micromega.EnvRing.MakeRingPol.zmon_pred_ok	40
Coq.micromega.EnvRing.MakeRingPol.mkVmon_ok	40
Coq.micromega.EnvRing.MakeRingPol.Mphi_ok	40
Coq.micromega.EnvRing.MakeRingPol.POneSubst_ok	40
Coq.micromega.EnvRing.MakeRingPol.PNSubst1_ok	40
Coq.micromega.EnvRing.MakeRingPol.PNSubst_ok	40
Coq.micromega.EnvRing.MakeRingPol.PSubstL1_ok	40
Coq.micromega.EnvRing.MakeRingPol.PSubstL_ok	40
Coq.micromega.EnvRing.MakeRingPol.PNSubstL_ok	40
Coq.micromega.EnvRing.MakeRingPol.mkX_ok	40
Coq.micromega.EnvRing.MakeRingPol.POWER.Ppow_pos_ok	40
Coq.micromega.EnvRing.MakeRingPol.POWER.Ppow_N_ok	40
Coq.micromega.EnvRing.MakeRingPol.NORM_SUBST_REC.norm_aux_PEadd	40
Coq.micromega.EnvRing.MakeRingPol.NORM_SUBST_REC.norm_aux_PEopp	40
Coq.micromega.EnvRing.MakeRingPol.NORM_SUBST_REC.norm_aux_spec	40
Coq.micromega.RingMicromega.Micromega.rplus_morph_Proper	40	0	synth with cache (only 1: exact (SORplus_wd sor)).	0.0175158977509	1
Coq.micromega.RingMicromega.Micromega.rtimes_morph_Proper	40	1	synth with cache (only 1: exact (SORtimes_wd sor)).	0.0206689834595	2
Coq.micromega.RingMicromega.Micromega.ropp_morph_Proper	40	2	synth with cache (only 1: exact (SORopp_wd sor)).	0.0250670909882	3
Coq.micromega.RingMicromega.Micromega.rle_morph_Proper	40	2	synth with cache (only 1: exact (SORle_wd sor)).	0.0234730243683	3
Coq.micromega.RingMicromega.Micromega.rlt_morph_Proper	40	3	synth with cache (only 1: exact (SORlt_wd sor)).	0.0253281593323	4
Coq.micromega.RingMicromega.Micromega.rminus_morph_Proper	40	0.0.0.0.4	synth with cache (only 1: intros x1 x2 H1 y1 y2 H2; only 1: rewrite (Rsub_def (SORrt sor) x1 y1); only 1: rewrite (Rsub_def (SORrt sor) x2 y2); only 1: rewrite H1; only 1: now rewrite H2).	2.86745476723	745
Coq.micromega.RingMicromega.Micromega.cleb_sound	40	132.384	synth with cache (only 1: intros LT; only 1: firstorder).	0.76615691185	1042
Coq.micromega.RingMicromega.Micromega.cneqb_sound	40
Coq.micromega.RingMicromega.Micromega.cltb_sound	40
Coq.micromega.RingMicromega.Micromega.OpMult_sound	40
Coq.micromega.RingMicromega.Micromega.OpAdd_sound	40
Coq.micromega.RingMicromega.Micromega.pexpr_times_nformula_correct	40
Coq.micromega.RingMicromega.Micromega.nformula_times_nformula_correct	40
Coq.micromega.RingMicromega.Micromega.nformula_plus_nformula_correct	40
Coq.micromega.RingMicromega.Micromega.eval_Psatz_Sound	40
Coq.micromega.RingMicromega.Micromega.ge_bool_cases	40
Coq.micromega.RingMicromega.Micromega.extract_hyps_app	40
Coq.micromega.RingMicromega.Micromega.nhyps_of_psatz_correct	40
Coq.micromega.RingMicromega.Micromega.check_inconsistent_sound	40
Coq.micromega.RingMicromega.Micromega.checker_nf_sound	40
Coq.micromega.RingMicromega.Micromega.eval_pol_sub	40
Coq.micromega.RingMicromega.Micromega.eval_pol_add	40	192.5.9	synth with cache (only 1: intros x y H; only 1: rewrite (Padd_ok (SORsetoid sor) Rops_wd (Rth_ARth (SORsetoid sor) Rops_wd (SORrt sor)) (SORrm addon)); only 1: repeat match goal with | _ => reflexivity | _ => progress subst | H:Some ?a = Some ?b |- _ => assert (a = b) by refine match H with | eq_refl => eq_refl end; clear H | H:None = Some _ |- _ => solve [ inversion H ] end).	22.2329959869	14936
Coq.micromega.RingMicromega.Micromega.eval_pol_mul	40
Coq.micromega.RingMicromega.Micromega.eval_pol_opp	40
Coq.micromega.RingMicromega.Micromega.eval_pol_norm	40
Coq.micromega.RingMicromega.Micromega.normalise_sound	40
Coq.micromega.RingMicromega.Micromega.negate_correct	40
Coq.micromega.RingMicromega.Micromega.cnf_of_list_correct	40
Coq.micromega.RingMicromega.Micromega.eq0_cnf	40
Coq.micromega.RingMicromega.Micromega.xnormalise_correct	40
Coq.micromega.RingMicromega.Micromega.xnegate_correct	40
Coq.micromega.RingMicromega.Micromega.cnf_normalise_correct	40
Coq.micromega.RingMicromega.Micromega.cnf_negate_correct	40
Coq.micromega.RingMicromega.Micromega.eval_nformula_dec	40
Coq.micromega.RingMicromega.Micromega.xdenorm_correct	40
Coq.micromega.RingMicromega.Micromega.denorm_correct	40
Coq.micromega.RingMicromega.Micromega.eval_pexprSC	40
Coq.micromega.RingMicromega.Micromega.eval_formulaSC	40
Coq.micromega.Refl.make_impl_true	40	384.1.2	synth with cache (only 1: induction l; only 1: constructor; only 1: now PeanoNat.Nat.nzsimpl).	0.139668941498	175
Coq.micromega.Refl.make_impl_map	40	3.0.1.320.0.0.384	synth with cache (only 1: intros H; only 1: induction l; only 1: simpl; only 1: intros q; only 1: intros [Hl Hr]; only 1: intuition; only 1: firstorder).	1.70300889015	2352
Coq.micromega.Refl.make_conj_cons	40	133.448.262	synth with cache (only 1: intros RS' n; only 1: repeat red; only 1: now induction l).	11.030009985	18960
Coq.micromega.Refl.make_conj_impl	40	0.0.69.0.0.0	synth with cache (only 1: induction l as [| a l IH]; only 1: simpl; only 1: firstorder; only 1: destruct l; only 1: firstorder  (subst; auto); only 1: firstorder  (subst; auto)).	3.4913418293	6064
Coq.micromega.Refl.make_conj_in	40
Coq.micromega.Refl.make_conj_app	40
Coq.micromega.Refl.make_conj_rapp	40
Coq.micromega.Refl.not_make_conj_cons	40	0.0.1	synth with cache (only 1: intros a b c H H'; only 1: rewrite make_conj_cons; only 1: intuition).	0.109495162964	4
Coq.micromega.Refl.not_make_conj_app	40
Coq.micromega.QMicromega.Qsor	40
Coq.micromega.QMicromega.QSORaddon	40
Coq.micromega.QMicromega.Qeval_expr_simpl	40
Coq.micromega.QMicromega.QNpower	40	0.0.0	synth with cache (only 1: intros r [| n]; only 1: reflexivity; only 1: reflexivity).	0.0333058834076	3
Coq.micromega.QMicromega.Qeval_expr_compat	40
Coq.micromega.QMicromega.Qeval_formula_compat	40
Coq.micromega.QMicromega.Qeval_nformula_dec	40
Coq.micromega.QMicromega.QWeakChecker_sound	40
Coq.micromega.QMicromega.QTautoChecker_sound	40
Coq.micromega.RMicromega.Rsrt	40	0	synth with cache (only 1: exact RTheory).	0.0231819152832	1
Coq.micromega.RMicromega.Rsor	40
Coq.micromega.RMicromega.Rinv_1	40	1.68.0	synth with cache (only 1: intro; only 1: apply Rminus_diag_uniq; only 1: field).	0.751263141632	946
Coq.micromega.RMicromega.Qeq_true	40
Coq.micromega.RMicromega.Qeq_false	40
Coq.micromega.RMicromega.Qle_true	40
Coq.micromega.RMicromega.Q2R_0	40
Coq.micromega.RMicromega.Q2R_1	40
Coq.micromega.RMicromega.Q2R_inv_ext	40
Coq.micromega.RMicromega.QSORaddon	40
Coq.micromega.RMicromega.is_neg_true	40
Coq.micromega.RMicromega.is_neg_false	40
Coq.micromega.RMicromega.Q2R_m_Proper	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Qeq, Q2R; only 1: intros (x1, x2) (y1, y2); only 1: unfold Qnum, Qden; only 1: intros; only 1: set (X1 := IZR x1) in *; only 1: pose proof (IZR_nz x2) as X2nz; only 1: set (X2 := IZR (Z.pos x2)) in *; only 1: set (Y1 := IZR y1) in *; only 1: pose proof (IZR_nz y2) as Y2nz; only 1: set (Y2 := IZR (Z.pos y2)) in *; only 1: assert (X1 * Y2 = Y1 * X2); only 1: unfold X1, X2, Y1, Y2; only 1: do 2 rewrite <- mult_IZR; only 1: f_equal; only 1: auto; only 1: clear H; only 1: field_simplify_eq; only 1: rewrite H0; only 1: ring; only 1: auto).	5.46421408653	4145
Coq.micromega.RMicromega.Q2R_pow_pos	40
Coq.micromega.RMicromega.Q2R_pow_N	40
Coq.micromega.RMicromega.Qmult_integral	40	0.0.0.0	synth with cache (only 1: intros (x1, x2) (y1, y2); only 1: unfold Qeq, Qmult; only 1: simpl; only 1: now rewrite <- Z.mul_eq_0, !Z.mul_1_r).	0.0608081817627	4
Coq.micromega.RMicromega.Qpower_positive_eq_zero	40
Coq.micromega.RMicromega.Qpower_positive_zero	40
Coq.micromega.RMicromega.Q2RpowerRZ	40
Coq.micromega.RMicromega.Qpower0	40
Coq.micromega.RMicromega.Q_of_RcstR	40
Coq.micromega.RMicromega.Reval_formula_compat	40
Coq.micromega.RMicromega.Reval_nformula_dec	40
Coq.micromega.RMicromega.RWeakChecker_sound	40
Coq.micromega.RMicromega.RTautoChecker_sound	40
Coq.rtauto.Bintree.Gt_Psucc	40
Coq.rtauto.Bintree.Psucc_Gt	40	0.0.0.2.2.1.0.2.2.1	synth with cache (only 1: induction p as [p IHp| p IHp| ]; only 1: simpl; only 1: Pos.simpl_compare; only 1: now rewrite IHp; only 1: rewrite <- Pos.compare_succ_succ; only 1: simpl; only 1: Pos.simpl_compare; only 1: now rewrite IHp; only 1: simpl; only 1: trivial).	38.8062229156	50092
Coq.rtauto.Bintree.map_app	40	0.0.0.0.0.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: rewrite IHl; only 1: auto).	0.0642170906067	7
Coq.rtauto.Bintree.length_map	40	0.0.0.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0453588962555	5
Coq.rtauto.Bintree.Lget_map	40
Coq.rtauto.Bintree.Lget_app	40
Coq.rtauto.Bintree.Lget_app_Some	40	0.193.0.323.65.1.320.0.1	synth with cache (only 1: induction l; only 1: inversion 1; only 1: intros r H; only 1: simpl; only 1: intro Ha; only 1: destruct H as [H| H]; only 1: auto; only 1: intro; only 1: eauto).	30.5189740658	39047
Coq.rtauto.Bintree.Store.Tget_Tempty	40	1	synth with cache (only 1: now intros []).	0.0185849666595	2
Coq.rtauto.Bintree.Store.Tget_Tadd	40
Coq.rtauto.Bintree.Store.get_empty	40	0.2.0.0	synth with cache (only 1: destruct i; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	0.149681091309	104
Coq.rtauto.Bintree.Store.get_Full_Gt	40
Coq.rtauto.Bintree.Store.get_Full_Eq	40
Coq.rtauto.Bintree.Store.get_push_Full	40
Coq.rtauto.Bintree.Store.Full_push_compat	40
Coq.rtauto.Bintree.Store.Full_index_one_empty	40
Coq.rtauto.Bintree.Store.push_not_empty	40	0.4.0.258.128.0.386	synth with cache (only 1: intro n; only 1: unfold empty, get; only 1: intro; only 1: repeat red; only 1: pose proof (Pos.succ_not_1 (index S)) as h; only 1: unfold index, get, push; only 1: congruence).	6.14625191689	16179
Coq.rtauto.Bintree.Store.get_In	40
Coq.rtauto.Bintree.Map.Tget_Tmap	40
Coq.rtauto.Bintree.Map.Tmap_Tadd	40
Coq.rtauto.Bintree.Map.get_map	40
Coq.rtauto.Bintree.Map.map_push	40
Coq.rtauto.Bintree.Map.Full_map	40
Coq.rtauto.Rtauto.pos_eq_refl	40
Coq.rtauto.Rtauto.form_eq_refl	40
Coq.rtauto.Rtauto.with_env.compose0	40
Coq.rtauto.Rtauto.with_env.compose1	40	64.130.128.256.0.0.644	synth with cache (only 1: intro eq_rect_eq; only 1: induction F; only 1: auto; only 1: intro n; only 1: intros Ha Eq; only 1: CRelationClasses.simpl_crelation; only 1: firstorder).	1.6516931057	2688
Coq.rtauto.Rtauto.with_env.compose2	40
Coq.rtauto.Rtauto.with_env.compose3	40
Coq.rtauto.Rtauto.with_env.weaken	40
Coq.rtauto.Rtauto.with_env.project_In	40
Coq.rtauto.Rtauto.with_env.project	40
Coq.rtauto.Rtauto.with_env.interp_proof	40
Coq.rtauto.Rtauto.with_env.Reflect	40
Coq.nsatz.Nsatz.nsatz1.psos_r1b	40
Coq.nsatz.Nsatz.nsatz1.psos_r1	40	1.0.1.0.1.0	synth with cache (only 1: intros x y H; only 1: assert (0 == - (0 : R)); only 1: cring; only 1: rewrite ring_sub_def; only 1: rewrite <- H; only 1: cring).	1.25370693207	606
Coq.nsatz.Nsatz.nsatz1.nsatzR_diff	40
Coq.nsatz.Nsatz.nsatz1.P0Z_correct	40	1.0	synth with cache (only 1: intro; only 1: trivial).	0.0417039394379	3
Coq.nsatz.Nsatz.nsatz1.Rext	40
Coq.nsatz.Nsatz.nsatz1.Rset	40	1	synth with cache (only 1: apply ring_setoid).	0.0668430328369	6
Coq.nsatz.Nsatz.nsatz1.Rtheory	40	5.2.0.0.0.0.0.0.0.1.2.2.2.0.0.0.1.4.2.3.0	synth with cache (only 1: constructor; only 1: intro; only 1: cring; only 1: cring; only 1: intros x y H; only 1: setoid_replace x with (x - y + y); only 1: cring; only 1: cring; only 1: intros; only 1: cring; only 1: cring; only 1: intros x y H; only 1: setoid_replace x with (x - y + y); only 1: cring; only 1: cring; only 1: intros x y H; only 1: setoid_replace x with (x - y + y); only 1: cring; only 1: cring; only 1: cring; only 1: cring).	29.4295558929	18584
Coq.nsatz.Nsatz.nsatz1.PolZadd_correct	40
Coq.nsatz.Nsatz.nsatz1.PolZmul_correct	40
Coq.nsatz.Nsatz.nsatz1.R_power_theory	40
Coq.nsatz.Nsatz.nsatz1.norm_correct	40
Coq.nsatz.Nsatz.nsatz1.PolZeq_correct	40
Coq.nsatz.Nsatz.nsatz1.mult_l_correct	40
Coq.nsatz.Nsatz.nsatz1.compute_list_correct	40
Coq.nsatz.Nsatz.nsatz1.check_correct	40
Coq.nsatz.Nsatz.Rsth	40	194	synth with cache (only 1: easy').	0.0718810558319	15
Coq.nsatz.Nsatz.Rri	40
Coq.nsatz.Nsatz.R_one_zero	40	0	synth with cache (only 1: exact R1_neq_R0).	0.0420191287994	1
Coq.nsatz.Nsatz.Rcri	40	580	synth with cache (only 1: simpl_relation).	0.545299053192	343
Coq.nsatz.Nsatz.Rdi	40
Coq.nsatz.Nsatz.Qri	40
Coq.nsatz.Nsatz.Q_one_zero	40	2	synth with cache (only 1: discriminate).	0.0412998199463	3
Coq.nsatz.Nsatz.Qcri	40	1.0.0.0.0.192.131	synth with cache (only 1: intro H3; only 1: repeat red; only 1: simpl; only 1: intros; only 1: rewrite Pos.mul_comm; only 1: rewrite Pos.mul_comm; only 1: ring).	7.50131201744	5761
Coq.nsatz.Nsatz.Qdi	40
Coq.nsatz.Nsatz.Z_one_zero	40	0.2	synth with cache (only 1: intro EQ; only 1: discriminate).	0.0727210044861	4
Coq.nsatz.Nsatz.Zcri	40	0.0	synth with cache (only 1: red; only 1: exact Z.mul_comm).	0.0495829582214	2
Coq.nsatz.Nsatz.Zdi	40
Coq.omega.OmegaLemmas.Zred_factor0	40	0	synth with cache (only 1: now Z.nzsimpl).	0.0599639415741	1
Coq.omega.OmegaLemmas.Zred_factor1	40	2.1	synth with cache (only 1: rewrite Z.mul_comm; only 1: apply Z.add_diag).	0.222080945969	248
Coq.omega.OmegaLemmas.Zred_factor2	40
Coq.omega.OmegaLemmas.Zred_factor3	40	3	synth with cache (only 1: now Z.nzsimpl).	0.354316949844	53
Coq.omega.OmegaLemmas.Zred_factor4	40
Coq.omega.OmegaLemmas.Zred_factor5	40	0	synth with cache (only 1: now Z.nzsimpl).	0.064150094986	1
Coq.omega.OmegaLemmas.Zred_factor6	40	0	synth with cache (only 1: now destruct n).	0.0167999267578	1
Coq.omega.OmegaLemmas.new_var	40	640	synth with cache (only 1: eauto with *).	0.144497871399	107
Coq.omega.OmegaLemmas.OMEGA1	40	1.0	synth with cache (only 1: intros; only 1: Z.order).	0.0253629684448	3
Coq.omega.OmegaLemmas.OMEGA2	40	0.0.0.0	synth with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.0561430454254	4
Coq.omega.OmegaLemmas.OMEGA3	40
Coq.omega.OmegaLemmas.OMEGA4	40
Coq.omega.OmegaLemmas.OMEGA5	40	0.0.0.131.0.1.5	synth with cache (only 1: destruct x; only 1: simpl; only 1: intuition; only 1: subst; only 1: now Z.nzsimpl; only 1: easy || now destruct y; only 1: easy).	4.01614308357	10087
Coq.omega.OmegaLemmas.OMEGA6	40	0.3.136.5.192	synth with cache (only 1: intros a; only 1: intros H; only 1: rewrite H; only 1: Z.nzsimpl; only 1: trivial).	18.7041759491	24136
Coq.omega.OmegaLemmas.OMEGA7	40
Coq.omega.OmegaLemmas.OMEGA8	40
Coq.omega.OmegaLemmas.OMEGA9	40
Coq.omega.OmegaLemmas.OMEGA10	40
Coq.omega.OmegaLemmas.OMEGA11	40	2.0.0	synth with cache (only 1: rewrite ?Z.mul_add_distr_r, ?Z.mul_add_distr_l, ?Z.mul_assoc; only 1: rewrite <- !Z.add_assoc; only 1: now Z.nzsimpl).	0.433906078339	5
Coq.omega.OmegaLemmas.OMEGA12	40
Coq.omega.OmegaLemmas.OMEGA13	40
Coq.omega.OmegaLemmas.OMEGA14	40	0.1.0.0.0	synth with cache (only 1: rewrite Z.add_shuffle1; only 1: rewrite Z.add_shuffle1; only 1: rewrite Z.add_shuffle1; only 1: rewrite <- Z.mul_add_distr_l, <- Pos2Z.opp_neg, Z.add_opp_diag_r; only 1: now Z.nzsimpl).	4.16251301765	110
Coq.omega.OmegaLemmas.OMEGA15	40
Coq.omega.OmegaLemmas.OMEGA16	40	640.3	synth with cache (only 1: rewrite ?Z.mul_add_distr_r, ?Z.mul_add_distr_l, ?Z.mul_assoc; only 1: easy').	0.127779006958	55
Coq.omega.OmegaLemmas.OMEGA17	40	0.0	synth with cache (only 1: intros H ->; only 1: now Z.nzsimpl).	0.0921618938446	2
Coq.omega.OmegaLemmas.OMEGA18	40	384.65.964	synth with cache (only 1: intros H1 n H2; only 1: rewrite H2 in H1; only 1: auto with sets).	4.23402786255	4471
Coq.omega.OmegaLemmas.OMEGA19	40
Coq.omega.OmegaLemmas.OMEGA20	40	0.0.0.0	synth with cache (only 1: unfold Zne, not; only 1: intros NE EQ; only 1: subst; only 1: now Z.nzsimpl).	0.0785839557648	4
Coq.omega.OmegaLemmas.intro_Z	40
Coq.omega.PreOmega.Z.mod_0_r_ext	40	65.64.3.132.576.0	synth with cache (only 1: intros; only 1: inversion H; only 1: destruct x; only 1: now split; only 1: easy || now destruct 1; only 1: let rec mul_permut := let rec mul_permut_rec := let rec mul_push := gen_mul_push rmul Rsth Reqe ARth in fun t => match t with | rmul ?x ?y => mul_permut_rec y || mul_permut_rec x | _ => mul_push t; apply (Rmul_ext Reqe); [  | reflexivity ] end in repeat reflexivity || match goal with | |- req ?t _ => mul_permut_rec t end in mul_permut).	2.7332110405	4988
Coq.omega.PreOmega.Z.div_0_r_ext	40	0.0.0.0.128.323.0	synth with cache (only 1: intro; only 1: destruct x; only 1: now f_equal; only 1: rewrite ?Z.add_0_l, ?Z.add_0_r, ?H; only 1: reflexivity; only 1: subst; only 1: reflexivity).	1.434071064	1926
Coq.omega.PreOmega.Z.rem_0_r_ext	40
Coq.omega.PreOmega.Z.quot_0_r_ext	40	0.0.1.1.0.0	synth with cache (only 1: intro; only 1: subst; only 1: destruct x; only 1: now Z.nzsimpl; only 1: reflexivity; only 1: reflexivity).	0.173038005829	236
Coq.omega.PreOmega.Z.rem_bound_pos_pos	40
Coq.omega.PreOmega.Z.rem_bound_neg_pos	40
Coq.omega.PreOmega.Z.rem_bound_pos_neg	40
Coq.omega.PreOmega.Z.rem_bound_neg_neg	40
Coq.btauto.Algebra.Decidable_sound	40	0.0.0	synth with cache (only 1: intros P H Hp; only 1: apply -> Decidable_spec; only 1: assumption).	0.0604810714722	3
Coq.btauto.Algebra.Decidable_complete	40	0.0.0	synth with cache (only 1: intros P H Hp; only 1: apply <- Decidable_spec; only 1: assumption).	0.0578689575195	3
Coq.btauto.Algebra.Decidable_sound_alt	40	0.0.0.0.0	synth with cache (only 1: intros P [wit spec] Hd; only 1: simpl; only 1: destruct wit; only 1: tauto; only 1: tauto).	0.0603139400482	5
Coq.btauto.Algebra.Decidable_complete_alt	40	0.0.0	synth with cache (only 1: intros P [wit spec] Hd Hc; only 1: simpl in *; only 1: intuition congruence).	0.0413880348206	3
Coq.btauto.Algebra.Computational.Decidable_PosEq_obligation_1	40	0.0.450.448.0	synth with cache (only 1: revert q; only 1: intro Dec; only 1: constructor 1; only 1: apply Pos.eqb_eq; only 1: apply Pos.eqb_eq).	0.812418937683	667
Coq.btauto.Algebra.Computational.Decidable_PosLt_obligation_1	40
Coq.btauto.Algebra.Computational.Decidable_PosLe_obligation_1	40
Coq.btauto.Algebra.Computational.Decidable_eq_poly_obligation_1	40
Coq.btauto.Algebra.Computational.Decidable_null_obligation_3	40
Coq.btauto.Algebra.Computational.Decidable_valid_obligation_1	40
Coq.btauto.Algebra.Validity.valid_le_compat	40
Coq.btauto.Algebra.Validity.linear_le_compat	40	256.0.0.1.0.0.1.321.577.321.512	synth with cache (only 1: intros x x'; only 1: intros H1; only 1: intro p; only 1: intro y; only 1: induction p; only 1: constructor; only 1: constructor; only 1: now eapply Pos.lt_le_trans; eassumption; only 1: eauto; only 1: congruence; only 1: auto with sets).	4.73744106293	7249
Coq.btauto.Algebra.Validity.linear_valid_incl	40
Coq.btauto.Algebra.Evaluation.eval_null_zero	40	257.67	synth with cache (only 1: intros m; only 1: now destruct 1).	3.03115296364	397
Coq.btauto.Algebra.Evaluation.eval_extensional_eq_compat	40
Coq.btauto.Algebra.Evaluation.eval_suffix_compat	40
Coq.btauto.Algebra.Algebra.poly_add_compat	40
Coq.btauto.Algebra.Algebra.poly_mul_cst_compat	40
Coq.btauto.Algebra.Algebra.poly_mul_mon_compat	40
Coq.btauto.Algebra.Algebra.poly_mul_compat	40
Coq.btauto.Algebra.Algebra.poly_add_valid_compat	40
Coq.btauto.Algebra.Algebra.poly_mul_cst_valid_compat	40
Coq.btauto.Algebra.Algebra.poly_mul_mon_null_compat	40
Coq.btauto.Algebra.Algebra.poly_mul_mon_valid_compat	40
Coq.btauto.Algebra.Algebra.poly_mul_valid_compat	40
Coq.btauto.Algebra.Algebra.poly_add_linear_compat	40
Coq.btauto.Algebra.Reduce.reduce_aux_eval_compat	40
Coq.btauto.Algebra.Reduce.reduce_eval_compat	40
Coq.btauto.Algebra.Reduce.reduce_aux_le_compat	40
Coq.btauto.Algebra.Reduce.linear_reduce_aux	40
Coq.btauto.Algebra.Reduce.linear_reduce	40
Coq.btauto.Reflect.Translation.poly_of_formula_eval_compat	40
Coq.btauto.Reflect.Translation.poly_of_formula_valid_compat	40
Coq.btauto.Reflect.Translation.poly_of_formula_sound	40
Coq.btauto.Reflect.Completeness.reduce_poly_of_formula_sound	40
Coq.btauto.Reflect.Completeness.list_nth_base	40	193.1	synth with cache (only 1: intros; only 1: easy).	0.0353469848633	10
Coq.btauto.Reflect.Completeness.list_nth_succ	40
Coq.btauto.Reflect.Completeness.list_nth_nil	40
Coq.btauto.Reflect.Completeness.make_last_nth_1	40
Coq.btauto.Reflect.Completeness.make_last_nth_2	40
Coq.btauto.Reflect.Completeness.list_replace_nth_1	40
Coq.btauto.Reflect.Completeness.list_replace_nth_2	40
Coq.btauto.Reflect.Completeness.boolean_witness_nonzero	40
Coq.btauto.Reflect.Completeness.reduce_poly_of_formula_sound_alt	40
Coq.funind.Recdef.le_lt_SS	40	387	synth with cache (only 1: auto with *).	0.0285539627075	28
Coq.funind.Recdef.Splus_lt	40	395	synth with cache (only 1: CRelationClasses.simpl_crelation).	0.135406970978	564
Coq.funind.Recdef.SSplus_lt	40	257.0.0.0.0.0.0	synth with cache (only 1: apply Nat.lt_succ_r; only 1: apply Nat.lt_succ_r; only 1: apply Nat.lt_succ_r; only 1: apply Nat.lt_succ_r; only 1: apply Nat.lt_succ_r; only 1: apply Nat.lt_succ_r; only 1: firstorder).	0.101788043976	36
Coq.funind.Recdef.max	40
Coq.setoid_ring.Rings_Z.Zcri	40	0.0	synth with cache (only 1: red; only 1: exact Z.mul_comm).	0.0276100635529	2
Coq.setoid_ring.Rings_Z.Z_one_zero	40	3	synth with cache (only 1: Z.order').	0.0664150714874	22
Coq.setoid_ring.Rings_Z.Zdi	40
Coq.setoid_ring.Integral_domain.integral_domain.integral_domain_minus_one_zero	40
Coq.setoid_ring.Integral_domain.integral_domain.pow_not_zero	40
Coq.setoid_ring.Integral_domain.integral_domain.Rintegral_domain_pow	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.cO	40	386	synth with cache (only 1: now N.nzsimpl').	0.0425140857697	27
Coq.setoid_ring.Ncring_polynom.MakeRingPol.cI	40	0	synth with cache (only 1: exact ring0).	0.0217220783234	1
Coq.setoid_ring.Ncring_polynom.MakeRingPol.Peq_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.Pphi0	40	70.64	synth with cache (only 1: intros P1; only 1: simpl_relation).	11.6903350353	10009
Coq.setoid_ring.Ncring_polynom.MakeRingPol.Pphi1	40	66.0.0.581	synth with cache (only 1: repeat red; only 1: intros; only 1: simpl; only 1: firstorder).	6.84692287445	4610
Coq.setoid_ring.Ncring_polynom.MakeRingPol.mkPX_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.PaddCl_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.PmulC_aux_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.PmulC_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.Popp_ok	40	2.0.1.0.0.0.0.0.1	synth with cache (only 1: induction P; only 1: simpl; only 1: intros; only 1: Esimpl; only 1: simpl; only 1: intros; only 1: rewrite IHP2; only 1: rewrite IHP1; only 1: rsimpl).	25.2527441978	3884
Coq.setoid_ring.Ncring_polynom.MakeRingPol.PaddXPX	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.PaddX_ok2	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.Padd_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.PaddX_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.Psub_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.Pmul_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.Psquare_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.mkX_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.POWER2.Ppow_pos_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.POWER2.Ppow_N_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.NORM_SUBST_REC.norm_aux_spec	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.NORM_SUBST_REC.norm_subst_spec	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.norm_subst_ok	40	1.0.0	synth with cache (only 1: intros; only 1: unfold norm_subst; only 1: apply norm_aux_spec).	0.655734062195	16
Coq.setoid_ring.Ncring_polynom.MakeRingPol.ring_correct	40
Coq.setoid_ring.Ring.BoolTheory	40	0.0.0.0.0.0.0.0.0.9	synth with cache (only 1: split; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool; only 1: reflexivity; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool).	1.34992790222	1220
Coq.setoid_ring.Ring.bool_eq_ok	40	0	synth with cache (only 1: destr_bool).	0.0222980976105	1
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.radd_ext_Proper	40	257.1.193.320.321	synth with cache (only 1: intros b Hb IH; only 1: intro H1; only 1: intros a; only 1: intros; only 1: firstorder).	1.38786482811	1072
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rmul_ext_Proper	40	1	synth with cache (only 1: exact (Rmul_ext Reqe)).	0.0189559459686	2
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.ropp_ext_Proper	40	65.129.453	synth with cache (only 1: intros n H; only 1: Bool.destr_bool; only 1: firstorder).	1.69868302345	3064
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rsub_ext_Proper	40	3	synth with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).	0.0259881019592	4
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rinv_ext_Proper	40	65	synth with cache (only 1: now auto).	0.0255308151245	6
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.ceqb_spec	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEequiv_eq	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEeval_ext	40	64.1.0.64.128.128	synth with cache (only 1: intros n m p; only 1: subst; only 1: unfold Basics.flip, respectful; only 1: intros; only 1: symmetry; only 1: auto with arith).	0.410801887512	33
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rsub_0_l	40	7	synth with cache (only 1: eauto).	0.790907144547	184
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rsub_0_r	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv_simpl	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv_ext	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rmul_reg_l	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.field_is_integral_domain	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.ropp_neq_0	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv_r_r	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv1	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv2	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv2b	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv5	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv3b	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv6	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv4	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv4b	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv7	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv7b	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rinv_nz	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv8	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.cross_product_eq	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_ext	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_N_ext	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_0	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_1	40	0.0.1.0.1.128.0.0	synth with cache (only 1: induction p; only 1: simpl; only 1: let rec norm := gen_srewrite Rsth Reqe ARth in let rec norm := gen_srewrite Rsth Reqe ARth in let rec norm := gen_srewrite_sr Rsth Reqe ARth in let rec norm := gen_srewrite Rsth Reqe ARth in norm; only 1: now rewrite !IHp; only 1: simpl; only 1: now rewrite !IHp; only 1: simpl; only 1: trivial).	6.57704401016	190
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_cst	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_mul_l	40	2.0.2.3.2.3.0	synth with cache (only 1: induction p; only 1: simpl; only 1: ring [ IHp ]; only 1: simpl; only 1: ring [ IHp ]; only 1: simpl; only 1: trivial).	39.2057418823	4091
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_add_r	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_mul_r	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_nz	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_div	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEadd_ext	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEsub_ext	40	0.0.0	synth with cache (only 1: intros ? ? E ? ? E' l; only 1: simpl; only 1: now rewrite E, E').	0.867769956589	3
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEmul_ext	40	0.0.0	synth with cache (only 1: intros ? ? E ? ? E' l; only 1: simpl; only 1: now rewrite E, E').	0.849164962769	3
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEopp_ext	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_ext	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PE_1_l	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PE_1_r	40	130.0.0.0	synth with cache (only 1: intros l; only 1: simpl; only 1: rewrite phi_1; only 1: let rec Esimpl := let rec rsimpl := gen_srewrite Rsth Reqe ARth in try rewrite_db Esimpl; rsimpl; simpl in Esimpl).	1.20626592636	12
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_0_r	40	4.0.0.0	synth with cache (only 1: intros l; only 1: simpl; only 1: rewrite phi_1; only 1: eauto).	4.53827691078	373
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_1_r	40	5.0.0	synth with cache (only 1: intros l; only 1: simpl; only 1: now rewrite !rpow_pow).	10.446092844	1042
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_1_l	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_add_r	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_mul_l	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_mul_r	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_nz	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.if_true	40	577.578.385	synth with cache (only 1: constructor 1; only 1: Bool.destr_bool; only 1: Bool.destr_bool).	8.64581894875	323
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PExpr_eq_semi_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PExpr_eq_spec	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEadd_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEsub_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEopp_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEpow_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEmul_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEsimp_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PCond_cons	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PCond_cons_inv_l	40	0.0.2.0.0.0.0	synth with cache (only 1: destruct l1; only 1: simpl; only 1: intros; only 1: trivial; only 1: simpl; only 1: destruct 1; only 1: trivial).	32.2970380783	322
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PCond_cons_inv_r	40	1.0	synth with cache (only 1: rewrite PCond_cons; only 1: now destruct 1).	6.97870016098	28
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PCond_app	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.absurd_PCond_bottom	40	449	synth with cache (only 1: now Z.nzsimpl).	2.95058989525	52
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Z_pos_sub_gt	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.default_isIn_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.isIn_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_aux_ok1	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_aux_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_ok_l	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_ok_r	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_nz_l	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_nz_r	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Pcond_Fnorm	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fnorm_FEeval_PEeval	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fnorm_crossproduct	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fnorm_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_rw_correct	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_rw_pow_correct	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_correct	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_simplify_eq_correct	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_simplify_eq_pow_correct	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_simplify_aux_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_simplify_eq_pow_in_correct	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_simplify_eq_in_correct	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_impl.fcons_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons_fcons_inv	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons0_fcons_inv	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons00_fcons_inv	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.ceqb_spec'	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons1_fcons_inv	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons2_fcons_inv	40
Coq.setoid_ring.Field_theory.Complete.radd_ext3_Proper	40	0	synth with cache (only 1: exact (Radd_ext Reqe)).	0.0261940956116	1
Coq.setoid_ring.Field_theory.Complete.rmul_ext3_Proper	40	1	synth with cache (only 1: exact (Rmul_ext Reqe)).	0.0214948654175	2
Coq.setoid_ring.Field_theory.Complete.ropp_ext3_Proper	40	0	synth with cache (only 1: exact (Ropp_ext Reqe)).	0.0181238651276	1
Coq.setoid_ring.Field_theory.Complete.AlmostField.add_inj_r	40
Coq.setoid_ring.Field_theory.Complete.AlmostField.gen_phiPOS_inj	40
Coq.setoid_ring.Field_theory.Complete.AlmostField.gen_phiN_inj	40
Coq.setoid_ring.Field_theory.Complete.AlmostField.gen_phiN_complete	40
Coq.setoid_ring.Field_theory.Complete.Field.ring_S_inj	40
Coq.setoid_ring.Field_theory.Complete.Field.gen_phiPOS_discr_sgn	40
Coq.setoid_ring.Field_theory.Complete.Field.gen_phiZ_inj	40
Coq.setoid_ring.Field_theory.Complete.Field.gen_phiZ_complete	40
Coq.setoid_ring.Ncring_initial.Zsth	40	6	synth with cache (only 1: intuition).	0.199841022491	292
Coq.setoid_ring.Ncring_initial.Zr	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.same_gen	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.ARgen_phiPOS_Psucc	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.ARgen_phiPOS_add	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.ARgen_phiPOS_mult	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.same_genZ	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_Zeqb_ok	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ1_add_pos_neg	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.match_compOpp	40	129.193.322.512.704.707	synth with cache (only 1: intros a; only 1: intros Hb; only 1: intro; only 1: intros EQ; only 1: inversion H; only 1: now destruct a).	30.6926631927	7460
Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ_add	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ_opp	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ_mul	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ_ext	40	131.0.129	synth with cache (only 1: intros Hx; only 1: intros x y; only 1: now subst).	1.00686407089	707
Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ_morph	40
Coq.setoid_ring.ArithRing.natSRth	40	515	synth with cache (only 1: firstorder).	0.0363640785217	36
Coq.setoid_ring.ArithRing.nat_morph_N	40
Coq.setoid_ring.Rings_R.Rsth	40	194	synth with cache (only 1: easy').	0.0972871780396	15
Coq.setoid_ring.Rings_R.Rri	40
Coq.setoid_ring.Rings_R.Rcri	40	66.449.1217	synth with cache (only 1: intro h'; only 1: intros Hb; only 1: apply Rmult_comm).	3.22635793686	2047
Coq.setoid_ring.Rings_R.R_one_zero	40	0	synth with cache (only 1: exact R1_neq_R0).	0.0408689975739	1
Coq.setoid_ring.Rings_R.Rdi	40
Coq.setoid_ring.RealField.RTheory	40
Coq.setoid_ring.RealField.Rfield	40
Coq.setoid_ring.RealField.Rlt_n_Sn	40
Coq.setoid_ring.RealField.Rlt_0_2	40
Coq.setoid_ring.RealField.Rgen_phiPOS	40
Coq.setoid_ring.RealField.Rgen_phiPOS_not_0	40
Coq.setoid_ring.RealField.Rdef_pow_add	40
Coq.setoid_ring.RealField.R_power_theory	40
Coq.setoid_ring.Ring_theory.Power.pow_pos_swap	40
Coq.setoid_ring.Ring_theory.Power.pow_pos_succ	40
Coq.setoid_ring.Ring_theory.Power.pow_pos_add	40
Coq.setoid_ring.Ring_theory.Power.pow_N_pow_N	40	3	synth with cache (only 1: reflexivity).	0.0217080116272	4
Coq.setoid_ring.Ring_theory.DEFINITIONS.MORPHISM.get_sign_None_th	40	192	synth with cache (only 1: now auto).	0.0290548801422	13
Coq.setoid_ring.Ring_theory.DEFINITIONS.IDmorph	40	65	synth with cache (only 1: firstorder).	0.0342411994934	6
Coq.setoid_ring.Ring_theory.ALMOST_RING.Eqsth	40	77	synth with cache (only 1: easy').	0.776167154312	1133
Coq.setoid_ring.Ring_theory.ALMOST_RING.Eq_s_ext	40	455	synth with cache (only 1: CRelationClasses.simpl_crelation).	0.431715011597	262
Coq.setoid_ring.Ring_theory.ALMOST_RING.Eq_ext	40	0.0.0.593	synth with cache (only 1: constructor; only 1: solve_proper; only 1: solve_proper; only 1: solve_proper).	2.78540992737	2963
Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.radd_ext1_Proper	40	65.2	synth with cache (only 1: intros; only 1: firstorder).	0.357360839844	238
Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.rmul_ext1_Proper	40	2.454	synth with cache (only 1: intros x y H; only 1: firstorder).	2.97271323204	4330
Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRopp_ext	40	1.0.64	synth with cache (only 1: intro z; only 1: intros; only 1: auto).	0.0448880195618	32
Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SReqe_Reqe	40	3	synth with cache (only 1: firstorder).	0.0442459583282	13
Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRopp_mul_l	40	64	synth with cache (only 1: firstorder).	0.0284090042114	5
Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRopp_add	40	0	synth with cache (only 1: reflexivity).	0.0170941352844	1
Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRsub_def	40	0	synth with cache (only 1: reflexivity).	0.0209369659424	1
Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRIDmorph	40	195	synth with cache (only 1: now f_equiv).	0.0367648601532	16
Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRmorph_Rmorph	40	7	synth with cache (only 1: firstorder).	0.423711061478	260
Coq.setoid_ring.Ring_theory.ALMOST_RING.radd_ext2_Proper	40	8	synth with cache (only 1: firstorder).	6.90140604973	11327
Coq.setoid_ring.Ring_theory.ALMOST_RING.rmul_ext2_Proper	40	4.128.451	synth with cache (only 1: intros y q u H; only 1: intros H'; only 1: firstorder).	3.85447907448	6669
Coq.setoid_ring.Ring_theory.ALMOST_RING.ropp_ext2_Proper	40	69.64.67.450	synth with cache (only 1: intros Hy; only 1: intros a; only 1: intro LT; only 1: firstorder).	31.8518929482	3380
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Rmul_0_l	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Ropp_mul_l	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Ropp_add	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Ropp_opp	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.cadd_ext_Proper	40	515.321.256	synth with cache (only 1: intros LTa LTb; only 1: intros n IH m H; only 1: firstorder).	2.45542597771	2294
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.cmul_ext_Proper	40	129.320.256.196	synth with cache (only 1: intro H1; only 1: intros n m; only 1: intros Hnm Hpq; only 1: firstorder).	0.979098081589	493
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.copp_ext_Proper	40	70.578	synth with cache (only 1: intro LT; only 1: CRelationClasses.simpl_crelation).	2.1571931839	3872
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.phi_ext1_Proper	40	896.65	synth with cache (only 1: intros a b; only 1: now intuition).	0.0540790557861	35
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Smorph_opp	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Smorph_sub	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARth_SRth	40	35	synth with cache (only 1: firstorder).	4.42933106422	5924
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARsub_ext	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARadd_0_r	40	24	synth with cache (only 1: firstorder).	0.763119220734	2377
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARmul_1_r	40	0	synth with cache (only 1: mrewrite).	0.0296659469604	1
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARmul_0_r	40	0	synth with cache (only 1: mrewrite).	0.0321481227875	1
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARdistr_r	40	325.0.0.128.1.0	synth with cache (only 1: mrewrite; only 1: elim ARth; only 1: intros a Ha; only 1: elim ARth; only 1: intros; only 1: now f_equiv).	17.232519865	11891
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARadd_assoc1	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARadd_assoc2	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARmul_assoc1	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARmul_assoc2	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARopp_mul_r	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARopp_zero	40
Coq.setoid_ring.InitialRing.Zth	40
Coq.setoid_ring.InitialRing.ZMORPHISM.radd_ext3_Proper	40	0	synth with cache (only 1: exact (Radd_ext Reqe)).	0.0230600833893	1
Coq.setoid_ring.InitialRing.ZMORPHISM.rmul_ext3_Proper	40	0	synth with cache (only 1: exact (Rmul_ext Reqe)).	0.023649930954	1
Coq.setoid_ring.InitialRing.ZMORPHISM.ropp_ext3_Proper	40	0	synth with cache (only 1: exact (Ropp_ext Reqe)).	0.0229940414429	1
Coq.setoid_ring.InitialRing.ZMORPHISM.get_signZ_th	40
Coq.setoid_ring.InitialRing.ZMORPHISM.ALMOST_RING.rsub_ext3_Proper	40	0.2	synth with cache (only 1: intros x1 x2 Ex y1 y2 Ey; only 1: now rewrite !(ARsub_def ARth), Ex, Ey).	0.0525181293488	4
Coq.setoid_ring.InitialRing.ZMORPHISM.ALMOST_RING.same_gen	40
Coq.setoid_ring.InitialRing.ZMORPHISM.ALMOST_RING.ARgen_phiPOS_Psucc	40
Coq.setoid_ring.InitialRing.ZMORPHISM.ALMOST_RING.ARgen_phiPOS_add	40
Coq.setoid_ring.InitialRing.ZMORPHISM.ALMOST_RING.ARgen_phiPOS_mult	40
Coq.setoid_ring.InitialRing.ZMORPHISM.rsub_ext4_Proper	40
Coq.setoid_ring.InitialRing.ZMORPHISM.same_genZ	40
Coq.setoid_ring.InitialRing.ZMORPHISM.gen_Zeqb_ok	40
Coq.setoid_ring.InitialRing.ZMORPHISM.gen_phiZ1_pos_sub	40
Coq.setoid_ring.InitialRing.ZMORPHISM.gen_phiZ_add	40
Coq.setoid_ring.InitialRing.ZMORPHISM.gen_phiZ_mul	40
Coq.setoid_ring.InitialRing.ZMORPHISM.gen_phiZ_ext	40	1.258.0	synth with cache (only 1: intros x y H; only 1: rewrite <- H; only 1: rrefl).	0.185604095459	104
Coq.setoid_ring.InitialRing.ZMORPHISM.gen_phiZ_morph	40
Coq.setoid_ring.InitialRing.Nth	40
Coq.setoid_ring.InitialRing.Neqb_ok	40	0.2.0.0.0.0.0.1	synth with cache (only 1: intros [| ] [| ]; only 1: simpl; only 1: now try N.order'; only 1: now try N.order'; only 1: now try N.order'; only 1: simpl; only 1: rewrite Pos.eqb_eq; only 1: congruence).	0.595166921616	639
Coq.setoid_ring.InitialRing.NMORPHISM.radd_ext4_Proper	40	0	synth with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).	0.0270040035248	1
Coq.setoid_ring.InitialRing.NMORPHISM.rmul_ext4_Proper	40	68.130.512	synth with cache (only 1: intros a b; only 1: intros x y z; only 1: firstorder).	5.20254302025	2216
Coq.setoid_ring.InitialRing.NMORPHISM.same_genN	40
Coq.setoid_ring.InitialRing.NMORPHISM.gen_phiN_add	40
Coq.setoid_ring.InitialRing.NMORPHISM.gen_phiN_mult	40
Coq.setoid_ring.InitialRing.NMORPHISM.gen_phiN_sub	40
Coq.setoid_ring.InitialRing.NMORPHISM.gen_phiN_morph	40
Coq.setoid_ring.InitialRing.NWORDMORPHISM.radd_ext5_Proper	40	0	synth with cache (only 1: exact (Radd_ext Reqe)).	0.0196049213409	1
Coq.setoid_ring.InitialRing.NWORDMORPHISM.rmul_ext5_Proper	40	0	synth with cache (only 1: exact (Rmul_ext Reqe)).	0.0194728374481	1
Coq.setoid_ring.InitialRing.NWORDMORPHISM.ropp_ext5_Proper	40	0	synth with cache (only 1: exact (Ropp_ext Reqe)).	0.0195729732513	1
Coq.setoid_ring.InitialRing.NWORDMORPHISM.rsub_ext7_Proper	40	0	synth with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).	0.0181739330292	1
Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword0_ok	40
Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword_cons	40
Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword_Nwcons	40	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction w; only 1: destruct n; only 1: simpl; only 1: norm; only 1: simpl; only 1: norm; only 1: intros; only 1: destruct n; only 1: norm; only 1: norm).	0.457530975342	121
Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword_ok	40
Coq.setoid_ring.InitialRing.NWORDMORPHISM.Nwadd_ok	40
Coq.setoid_ring.InitialRing.NWORDMORPHISM.Nwopp_ok	40	1.2.0.4	synth with cache (only 1: induction x; only 1: simpl; only 1: norm; only 1: norm).	0.653023958206	725
Coq.setoid_ring.InitialRing.NWORDMORPHISM.Nwscal_ok	40
Coq.setoid_ring.InitialRing.NWORDMORPHISM.Nwmul_ok	40
Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword_morph	40
Coq.setoid_ring.InitialRing.GEN_DIV.radd_ext_Proper	40	0	synth with cache (only 1: exact (Radd_ext Reqe)).	0.0230231285095	1
Coq.setoid_ring.InitialRing.GEN_DIV.rmul_ext_Proper	40	1	synth with cache (only 1: exact (Rmul_ext Reqe)).	0.0248911380768	2
Coq.setoid_ring.InitialRing.GEN_DIV.ropp_ext_Proper	40	81	synth with cache (only 1: exact (Ropp_ext Reqe)).	4.04720401764	6352
Coq.setoid_ring.InitialRing.GEN_DIV.rsub_ext_Proper	40	2	synth with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).	0.0279002189636	3
Coq.setoid_ring.InitialRing.GEN_DIV.triv_div_th	40
Coq.setoid_ring.InitialRing.GEN_DIV.Ztriv_div_th	40
Coq.setoid_ring.InitialRing.GEN_DIV.Ntriv_div_th	40
Coq.setoid_ring.Cring.cring.cring_eq_ext	40
Coq.setoid_ring.Cring.cring.cring_almost_ring_theory	40
Coq.setoid_ring.Cring.cring.cring_morph	40
Coq.setoid_ring.Cring.cring.cring_power_theory	40	322	synth with cache (only 1: easy).	0.199100017548	23
Coq.setoid_ring.Cring.cring.cring_div_theory	40
Coq.setoid_ring.Cring.Zcri	40	0.65.0.2.69	synth with cache (only 1: intros H; only 1: intros Hb'; only 1: apply Ncring_initial.Zsth; only 1: rewrite Z.mul_comm; only 1: apply Ncring_initial.Zsth).	12.3176689148	24659
Coq.setoid_ring.Ring_polynom.MakeRingPol.radd_ext_Proper	40	769.64.448	synth with cache (only 1: intros c Hc IH; only 1: CRelationClasses.simpl_crelation; only 1: firstorder).	0.939370155334	228
Coq.setoid_ring.Ring_polynom.MakeRingPol.rmul_ext_Proper	40	132.385	synth with cache (only 1: intros x; only 1: firstorder).	2.45240402222	1515
Coq.setoid_ring.Ring_polynom.MakeRingPol.ropp_ext_Proper	40	130.576.128.386.3.260.195	synth with cache (only 1: intros E1; only 1: intros H; only 1: elim ARth; only 1: intros k H1 H2; only 1: intros a Ha; only 1: intros n m p; only 1: simpl_relation).	5.95816111565	9489
Coq.setoid_ring.Ring_polynom.MakeRingPol.rsub_ext_Proper	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Pequiv_eq	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi_ext	40	0.0.641.576	synth with cache (only 1: intros IH m H1 H2; only 1: elim H1; only 1: intros; only 1: now symmetry).	0.947890043259	162
Coq.setoid_ring.Ring_polynom.MakeRingPol.Pinj_ext	40	513.2.321	synth with cache (only 1: intros a b Ha Hb; only 1: unfold Pequiv; only 1: CRelationClasses.simpl_crelation).	3.98741006851	1865
Coq.setoid_ring.Ring_polynom.MakeRingPol.PX_ext	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.jump_add'	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Peq_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Peq_spec	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi0	40	210	synth with cache (only 1: CRelationClasses.simpl_crelation).	2.0647289753	3126
Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi1	40	196.129.640.517	synth with cache (only 1: case N.pos_div_eucl; only 1: now constructor; only 1: firstorder; only 1: CRelationClasses.simpl_crelation).	26.7710268497	18797
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkPinj_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkPinj_ext	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.pow_pos_add	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.ceqb_spec	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkPX_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkPX_ext	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.PaddC_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.PsubC_ok	40	0.2.1.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: revert l; only 1: induction P; only 1: simpl; only 1: intros; only 1: Esimpl; only 1: simpl; only 1: intros; only 1: trivial; only 1: simpl; only 1: intros; only 1: Esimpl; only 1: rewrite IHP2; only 1: rsimpl).	6.08565402031	512
Coq.setoid_ring.Ring_polynom.MakeRingPol.PmulC_aux_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.PmulC_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Popp_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.PaddX_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Padd_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Psub_opp	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Psub_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.PmulI_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Pmul_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkZmon_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.zmon_pred_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkVmon_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Mcphi_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Mphi_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.POneSubst_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.PNSubst1_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.PNSubst_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.PSubstL1_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.PSubstL_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.PNSubstL_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkX_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.POWER.Ppow_pos_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.POWER.Ppow_N_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.NORM_SUBST_REC.norm_aux_PEadd	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.NORM_SUBST_REC.norm_aux_PEopp	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.NORM_SUBST_REC.norm_aux_spec	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.NORM_SUBST_REC.norm_subst_spec	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.mon_of_pol_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.interp_PElist_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.norm_subst_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.ring_correct	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkmult_rec_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkmult1_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkmultm1_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.r_list_pow_rev	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkmult_c_pos_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkmult_c_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkadd_mult_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.add_pow_list_ok	40	1.1.198.194	synth with cache (only 1: intros n m H; only 1: destruct m; only 1: Esimpl; only 1: Esimpl).	11.0375471115	5327
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.add_mult_dev_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mult_dev_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.Pphi_avoid_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.local_mkpow_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi_pow_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.ring_rw_pow_correct	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkmult_pow_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkpow_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkopp_pow_ok	40	0.0.0.0.2.1.1.1.1.0.2.0.0.0.0.0.2	synth with cache (only 1: destruct p; only 1: simpl; only 1: Esimpl; only 1: rewrite !mkmult_pow_ok; only 1: Esimpl; only 1: simpl; only 1: rewrite mkmult_pow_ok; only 1: change x with (x ^ 1)  at 1; only 1: change x with (x ^ 1)  at 1; only 1: change x with (x ^ 1)  at 1; only 1: change x with (x ^ 1)  at 1; only 1: change x with (x ^ 1)  at 1; only 1: Esimpl; only 1: change x with (x ^ 1)  at 1; only 1: now rewrite <- pow_pos_add, Pos.add_1_r, Pos.succ_pred_double; only 1: simpl; only 1: now rewrite ?local_mkpow_ok).	21.3845829964	2235
Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi_dev_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.ring_rw_correct	40
Coq.setoid_ring.BinList.MakeBinList.jump_tl	40
Coq.setoid_ring.BinList.MakeBinList.jump_succ	40
Coq.setoid_ring.BinList.MakeBinList.jump_add	40
Coq.setoid_ring.BinList.MakeBinList.jump_pred_double	40
Coq.setoid_ring.BinList.MakeBinList.nth_jump	40
Coq.setoid_ring.BinList.MakeBinList.nth_pred_double	40
Coq.setoid_ring.Ncring.Ring.pow_pos_comm	40
Coq.setoid_ring.Ncring.Ring.pow_pos_succ	40
Coq.setoid_ring.Ncring.Ring.pow_pos_add	40
Coq.setoid_ring.Ncring.Ring.pow_N_pow_N	40	0	synth with cache (only 1: reflexivity).	0.0196039676666	1
Coq.setoid_ring.Ncring.Ring.ring_mul_0_l	40
Coq.setoid_ring.Ncring.Ring.ring_mul_0_r	40
Coq.setoid_ring.Ncring.Ring.ring_opp_mul_l	40
Coq.setoid_ring.Ncring.Ring.ring_opp_mul_r	40
Coq.setoid_ring.Ncring.Ring.ring_opp_add	40
Coq.setoid_ring.Ncring.Ring.ring_opp_opp	40
Coq.setoid_ring.Ncring.Ring.ring_sub_ext	40	320.518	synth with cache (only 1: intros a b c Hb; only 1: firstorder).	5.79834198952	4602
Coq.setoid_ring.Ncring.Ring.ring_add_0_r	40	0.0.1.0	synth with cache (only 1: intros x; only 1: rewrite (ring_add_comm x); only 1: rewrite ring_add_0_l; only 1: reflexivity).	0.0683720111847	5
Coq.setoid_ring.Ncring.Ring.ring_add_assoc1	40
Coq.setoid_ring.Ncring.Ring.ring_add_assoc2	40	0.1.0.7.0	synth with cache (only 1: intros; only 1: rewrite (ring_add_comm y); only 1: rewrite <- (ring_add_assoc x); only 1: rewrite (ring_add_comm x); only 1: reflexivity).	9.44556689262	11148
Coq.setoid_ring.Ncring.Ring.ring_opp_zero	40
Coq.setoid_ring.Ncring_tac.Zeqb_ok	40	65.2.2.65	synth with cache (only 1: destr_bool; only 1: pose proof (Zeq_bool_eq x y H) as H1; only 1: rewrite H1; only 1: easy).	1.12372589111	1027
Coq.setoid_ring.Ncring_tac.comm	40
Coq.setoid_ring.Rings_Q.Qri	40
Coq.setoid_ring.Rings_Q.Qcri	40
Coq.setoid_ring.Rings_Q.Q_one_zero	40	0	synth with cache (only 1: discriminate).	0.0209720134735	1
Coq.setoid_ring.Rings_Q.Qdi	40
Coq.ssr.ssreflect.master_key	40	0	synth with cache (only 1: tauto).	0.00927400588989	1
Coq.ssr.ssreflect.lock	40
Coq.ssr.ssreflect.not_locked_false_eq_true	40	0.3	synth with cache (only 1: unlock; only 1: discriminate).	0.0535969734192	38
Coq.ssr.ssreflect.unlock	40
Coq.ssr.ssreflect.locked_withE	40
Coq.ssr.ssreflect.unlock_with	40	1	synth with cache (only 1: by case : k ).	0.0118229389191	2
Coq.ssr.ssreflect.nary_congruence	40
Coq.ssr.ssreflect.ssr_congr_arrow	40	2.9	synth with cache (only 1: destruct 1; only 1: auto).	0.278095960617	901
Coq.ssr.ssreflect.ApplyIff.iffLR	40	0	synth with cache (only 1: intuition).	0.0119490623474	1
Coq.ssr.ssreflect.ApplyIff.iffRL	40	0	synth with cache (only 1: by case : eqPQ ).	0.0107288360596	1
Coq.ssr.ssreflect.ApplyIff.iffLRn	40	2	synth with cache (only 1: intuition).	0.022255897522	3
Coq.ssr.ssreflect.ApplyIff.iffRLn	40	0	synth with cache (only 1: by move  =>nP tQ; case : nP ; case : eqPQ tQ ).	0.0122010707855	1
Coq.ssr.ssreflect.abstract_context	40
Coq.ssr.ssrbool.prop_congr	40	0	synth with cache (only 1: Bool.destr_bool).	0.0127110481262	1
Coq.ssr.ssrbool.is_true_true	40	128	synth with cache (only 1: exact (erefl _)).	0.00654792785645	9
Coq.ssr.ssrbool.not_false_is_true	40	0	synth with cache (only 1: discriminate).	0.00612902641296	1
Coq.ssr.ssrbool.is_true_locked_true	40	0.0	synth with cache (only 1: unlock; only 1: by [  ]).	0.00868391990662	2
Coq.ssr.ssrbool.negbT	40	0.1.0	synth with cache (only 1: intuition; only 1: subst; only 1: by [  ]).	0.0126159191132	4
Coq.ssr.ssrbool.negbTE	40	0	synth with cache (only 1: by case : b ).	0.00811100006104	1
Coq.ssr.ssrbool.negbF	40	0	synth with cache (only 1: by case : b ).	0.00913906097412	1
Coq.ssr.ssrbool.negbFE	40	0	synth with cache (only 1: by case : b ).	0.00840091705322	1
Coq.ssr.ssrbool.negbK	40	1.153	synth with cache (only 1: intro p; only 1: Bool.destr_bool).	0.336536884308	1203
Coq.ssr.ssrbool.negbNE	40	0	synth with cache (only 1: by case : b ).	0.0077748298645	1
Coq.ssr.ssrbool.negb_inj	40	0.69	synth with cache (only 1: intro z; only 1: Bool.destr_bool).	0.0305469036102	59
Coq.ssr.ssrbool.negbLR	40	6	synth with cache (only 1: Bool.destr_bool).	0.049544095993	52
Coq.ssr.ssrbool.negbRL	40	8	synth with cache (only 1: Bool.destr_bool).	0.150635957718	129
Coq.ssr.ssrbool.contra	40	7.11	synth with cache (only 1: Bool.destr_bool; only 1: intuition).	1.04629707336	3225
Coq.ssr.ssrbool.contraL	40	0	synth with cache (only 1: by case : b  => //; case : c ).	0.0131938457489	1
Coq.ssr.ssrbool.contraR	40	0	synth with cache (only 1: by case : b  => //; case : c ).	0.0127520561218	1
Coq.ssr.ssrbool.contraLR	40	0	synth with cache (only 1: by case : b  => //; case : c ).	0.0123651027679	1
Coq.ssr.ssrbool.contraT	40	5.12	synth with cache (only 1: Bool.destr_bool; only 1: intuition).	0.61571097374	982
Coq.ssr.ssrbool.wlog_neg	40	0	synth with cache (only 1: by case : b  => // ->).	0.0104460716248	1
Coq.ssr.ssrbool.contraFT	40	2.14	synth with cache (only 1: Bool.destr_bool; only 1: intuition).	0.759114980698	874
Coq.ssr.ssrbool.contraFN	40	2.16	synth with cache (only 1: Bool.destr_bool; only 1: intuition).	0.729469060898	621
Coq.ssr.ssrbool.contraTF	40	2.14	synth with cache (only 1: Bool.destr_bool; only 1: intuition).	0.640506029129	579
Coq.ssr.ssrbool.contraNF	40	2.15	synth with cache (only 1: Bool.destr_bool; only 1: intuition).	0.707561016083	670
Coq.ssr.ssrbool.contraFF	40	0.2.74	synth with cache (only 1: destruct c; only 1: by case : b  => // ->; only 1: by move /contra =>notb_notc /negbT).	0.874351024628	1719
Coq.ssr.ssrbool.BoolIf.ifP	40
Coq.ssr.ssrbool.BoolIf.ifPn	40	0.23	synth with cache (only 1: intuition; only 1: by case  def_b: b ; constructor).	0.480515003204	907
Coq.ssr.ssrbool.BoolIf.ifT	40	2	synth with cache (only 1: by case : b ).	0.0200710296631	3
Coq.ssr.ssrbool.BoolIf.ifF	40	0	synth with cache (only 1: by move ->).	0.0121028423309	1
Coq.ssr.ssrbool.BoolIf.ifN	40	2	synth with cache (only 1: by case : b ).	0.0181360244751	3
Coq.ssr.ssrbool.BoolIf.if_same	40	0	synth with cache (only 1: by case  def_b: b ; constructor).	0.0140659809113	1
Coq.ssr.ssrbool.BoolIf.if_neg	40	2	synth with cache (only 1: by case b).	0.0127801895142	3
Coq.ssr.ssrbool.BoolIf.fun_if	40	0	synth with cache (only 1: by case b).	0.0131418704987	1
Coq.ssr.ssrbool.BoolIf.if_arg	40	0	synth with cache (only 1: by case b).	0.013072013855	1
Coq.ssr.ssrbool.BoolIf.ifE	40	129	synth with cache (only 1: exact (erefl _)).	0.02041888237	10
Coq.ssr.ssrbool.ReflectCore.introNTF	40
Coq.ssr.ssrbool.ReflectCore.introTF	40	0	synth with cache (only 1: by case c; case Hb).	0.0202519893646	1
Coq.ssr.ssrbool.ReflectCore.elimNTF	40	0	synth with cache (only 1: by case c; case Hb).	0.0216109752655	1
Coq.ssr.ssrbool.ReflectCore.elimTF	40	0	synth with cache (only 1: by move <-; case Hb).	0.0151028633118	1
Coq.ssr.ssrbool.ReflectCore.equivPif	40
Coq.ssr.ssrbool.ReflectCore.xorPif	40	1.1.192	synth with cache (only 1: inversion 1; only 1: by case Hb; auto; only 1: by case Hb; auto).	0.0412669181824	17
Coq.ssr.ssrbool.ReflectNegCore.introTFn	40
Coq.ssr.ssrbool.ReflectNegCore.elimTFn	40
Coq.ssr.ssrbool.ReflectNegCore.equivPifn	40
Coq.ssr.ssrbool.ReflectNegCore.xorPifn	40
Coq.ssr.ssrbool.Reflect.introT	40
Coq.ssr.ssrbool.Reflect.introF	40
Coq.ssr.ssrbool.Reflect.introN	40
Coq.ssr.ssrbool.Reflect.introNf	40
Coq.ssr.ssrbool.Reflect.introTn	40
Coq.ssr.ssrbool.Reflect.introFn	40
Coq.ssr.ssrbool.Reflect.elimT	40
Coq.ssr.ssrbool.Reflect.elimF	40
Coq.ssr.ssrbool.Reflect.elimN	40
Coq.ssr.ssrbool.Reflect.elimNf	40
Coq.ssr.ssrbool.Reflect.elimTn	40
Coq.ssr.ssrbool.Reflect.elimFn	40
Coq.ssr.ssrbool.Reflect.introP	40	197.19.199	synth with cache (only 1: destruct b; only 1: intuition; only 1: auto with bool).	36.5126368999	13744
Coq.ssr.ssrbool.Reflect.iffP	40
Coq.ssr.ssrbool.Reflect.equivP	40	0.130	synth with cache (only 1: induction 1; only 1: by case : Pb ; constructor; auto).	0.028580904007	12
Coq.ssr.ssrbool.Reflect.sumboolP	40
Coq.ssr.ssrbool.Reflect.appP	40
Coq.ssr.ssrbool.Reflect.sameP	40
Coq.ssr.ssrbool.Reflect.decPcases	40
Coq.ssr.ssrbool.Reflect.decP	40
Coq.ssr.ssrbool.Reflect.rwP	40	0.0.72	synth with cache (only 1: repeat split; only 1: exact : introTF true _ ; only 1: exact : elimTF true _ ).	0.165493011475	219
Coq.ssr.ssrbool.Reflect.rwP2	40
Coq.ssr.ssrbool.Reflect.altP	40
Coq.ssr.ssrbool.impliesP	40	65.135	synth with cache (only 1: inversion 1; only 1: intuition).	0.146727085114	251
Coq.ssr.ssrbool.impliesPn	40	64.130.130	synth with cache (only 1: inversion 1; only 1: intro z; only 1: tauto).	0.133024215698	129
Coq.ssr.ssrbool.unlessL	40	6.65.66.3	synth with cache (only 1: repeat split; only 1: intro z; only 1: intro p; only 1: auto).	0.404267072678	1002
Coq.ssr.ssrbool.unlessR	40	0.193.197.3	synth with cache (only 1: repeat split; only 1: intro p; only 1: intros H x0; only 1: intuition).	0.160397052765	406
Coq.ssr.ssrbool.unless_sym	40	64.1.8.129.66.202.5	synth with cache (only 1: split; only 1: intros H ?; only 1: intro p; only 1: intuition; only 1: apply H; only 1: auto; only 1: intuition).	2.67041683197	16955
Coq.ssr.ssrbool.unlessP	40
Coq.ssr.ssrbool.bind_unless	40
Coq.ssr.ssrbool.unless_contra	40	4.4.198.201.71.136	synth with cache (only 1: constructor; only 1: intro; only 1: intros A P; only 1: Bool.destr_bool; only 1: intuition; only 1: intuition).	7.01674389839	28708
Coq.ssr.ssrbool.classicP	40
Coq.ssr.ssrbool.classicW	40	0.0.130.136	synth with cache (only 1: intros h1 h2; only 1: destruct h2; only 1: intuition; only 1: intuition).	0.148592233658	324
Coq.ssr.ssrbool.classic_bind	40	10.194.64.128.72.194.208	synth with cache (only 1: intro p; only 1: intros H ?; only 1: intuition; only 1: apply H; only 1: intro x; only 1: Bool.destr_bool; only 1: intuition).	11.3330140114	50697
Coq.ssr.ssrbool.classic_EM	40
Coq.ssr.ssrbool.classic_pick	40
Coq.ssr.ssrbool.classic_imply	40
Coq.ssr.ssrbool.AllAnd.all_and2	40	0.0.0.0.0.0.1	synth with cache (only 1: repeat split; only 1: intro z; only 1: destruct (H z); only 1: auto; only 1: intro z; only 1: destruct (H z); only 1: auto).	0.0419728755951	27
Coq.ssr.ssrbool.AllAnd.all_and3	40	0	synth with cache (only 1: by split => haveP; split => x; case : (haveP x) ).	0.0174498558044	1
Coq.ssr.ssrbool.AllAnd.all_and4	40	0	synth with cache (only 1: by split => haveP; split => x; case : (haveP x) ).	0.0201241970062	1
Coq.ssr.ssrbool.AllAnd.all_and5	40	0	synth with cache (only 1: by split => haveP; split => x; case : (haveP x) ).	0.0233280658722	1
Coq.ssr.ssrbool.pair_andP	40	6	synth with cache (only 1: intuition).	0.0429060459137	71
Coq.ssr.ssrbool.ReflectConnectives.idP	40
Coq.ssr.ssrbool.ReflectConnectives.boolP	40	0	synth with cache (only 1: by case b1; constructor).	0.0133860111237	1
Coq.ssr.ssrbool.ReflectConnectives.idPn	40	0	synth with cache (only 1: by case b1; constructor).	0.0117638111115	1
Coq.ssr.ssrbool.ReflectConnectives.negP	40	0	synth with cache (only 1: by case b1; constructor).	0.015976190567	1
Coq.ssr.ssrbool.ReflectConnectives.negPn	40	0	synth with cache (only 1: by case b1; constructor).	0.0113160610199	1
Coq.ssr.ssrbool.ReflectConnectives.negPf	40	0	synth with cache (only 1: by case b1; constructor; auto).	0.0126721858978	1
Coq.ssr.ssrbool.ReflectConnectives.andP	40
Coq.ssr.ssrbool.ReflectConnectives.and3P	40
Coq.ssr.ssrbool.ReflectConnectives.and4P	40
Coq.ssr.ssrbool.ReflectConnectives.and5P	40
Coq.ssr.ssrbool.ReflectConnectives.orP	40
Coq.ssr.ssrbool.ReflectConnectives.or3P	40
Coq.ssr.ssrbool.ReflectConnectives.or4P	40
Coq.ssr.ssrbool.ReflectConnectives.nandP	40	0	synth with cache (only 1: by case b1; case b2; constructor; auto; case).	0.0202379226685	1
Coq.ssr.ssrbool.ReflectConnectives.norP	40	0	synth with cache (only 1: by case b1; case b2; constructor; auto; case; auto).	0.0202879905701	1
Coq.ssr.ssrbool.ReflectConnectives.implyP	40	0	synth with cache (only 1: by case b1; case b2; constructor; auto; case).	0.0148799419403	1
Coq.ssr.ssrbool.andTb	40	0.65	synth with cache (only 1: red; only 1: reflexivity).	0.0164859294891	7
Coq.ssr.ssrbool.andFb	40	0	synth with cache (only 1: by [  ]).	0.0111148357391	1
Coq.ssr.ssrbool.andbT	40	2.64	synth with cache (only 1: intro x; only 1: Bool.destr_bool).	0.0189459323883	8
Coq.ssr.ssrbool.andbF	40	69	synth with cache (only 1: by case).	0.0294699668884	48
Coq.ssr.ssrbool.andbb	40	0	synth with cache (only 1: by case).	0.0123901367188	1
Coq.ssr.ssrbool.andbC	40	0.75	synth with cache (only 1: red; only 1: Bool.destr_bool).	0.208246946335	355
Coq.ssr.ssrbool.andbA	40	0	synth with cache (only 1: by case).	0.0125260353088	1
Coq.ssr.ssrbool.andbCA	40	0	synth with cache (only 1: by do 2!case).	0.0152590274811	1
Coq.ssr.ssrbool.andbAC	40	1	synth with cache (only 1: by do 3!case).	0.023551940918	2
Coq.ssr.ssrbool.andbACA	40	0.69	synth with cache (only 1: intro z; only 1: Bool.destr_bool).	0.0462739467621	59
Coq.ssr.ssrbool.orTb	40	0	synth with cache (only 1: reflexivity).	0.0116040706635	1
Coq.ssr.ssrbool.orFb	40	0	synth with cache (only 1: by [  ]).	0.0115098953247	1
Coq.ssr.ssrbool.orbT	40	2	synth with cache (only 1: Bool.destr_bool).	0.0153341293335	3
Coq.ssr.ssrbool.orbF	40	0	synth with cache (only 1: by case).	0.0122938156128	1
Coq.ssr.ssrbool.orbb	40	0	synth with cache (only 1: by case).	0.0124089717865	1
Coq.ssr.ssrbool.orbC	40	0	synth with cache (only 1: by do 2!case).	0.0149300098419	1
Coq.ssr.ssrbool.orbA	40	0	synth with cache (only 1: by do 3!case).	0.0196530818939	1
Coq.ssr.ssrbool.orbCA	40	0	synth with cache (only 1: by do 3!case).	0.0197851657867	1
Coq.ssr.ssrbool.orbAC	40	0	synth with cache (only 1: by do 3!case).	0.0197949409485	1
Coq.ssr.ssrbool.orbACA	40	0	synth with cache (only 1: by do 4!case).	0.0324609279633	1
Coq.ssr.ssrbool.andbN	40	0	synth with cache (only 1: by case : b ).	0.0148401260376	1
Coq.ssr.ssrbool.andNb	40	0	synth with cache (only 1: by case : b ).	0.0149900913239	1
Coq.ssr.ssrbool.orbN	40	0	synth with cache (only 1: by case : b ).	0.0417320728302	1
Coq.ssr.ssrbool.orNb	40	0	synth with cache (only 1: by case : b ).	0.0143539905548	1
Coq.ssr.ssrbool.andb_orl	40	1.65	synth with cache (only 1: case  =>// undecP; only 1: Bool.destr_bool).	0.0304470062256	8
Coq.ssr.ssrbool.andb_orr	40	0	synth with cache (only 1: by case).	0.0133328437805	1
Coq.ssr.ssrbool.orb_andl	40	0	synth with cache (only 1: by do 3!case).	0.0207231044769	1
Coq.ssr.ssrbool.orb_andr	40	0	synth with cache (only 1: by do 3!case).	0.0207238197327	1
Coq.ssr.ssrbool.andb_idl	40	0.0.68.7	synth with cache (only 1: Bool.destr_bool; only 1: destruct H; only 1: by [  ]; only 1: now constructor).	0.261143922806	421
Coq.ssr.ssrbool.andb_idr	40	0	synth with cache (only 1: by case : a ; case : b  => // ->).	0.0198271274567	1
Coq.ssr.ssrbool.andb_id2l	40	0	synth with cache (only 1: by case : a ; case : b  => // ->).	0.0221939086914	1
Coq.ssr.ssrbool.andb_id2r	40	0	synth with cache (only 1: by case : a ; case : b ; case : c  => // ->).	0.0278761386871	1
Coq.ssr.ssrbool.orb_idl	40	0	synth with cache (only 1: by case : a ; case : b  => // ->).	0.0202600955963	1
Coq.ssr.ssrbool.orb_idr	40	0	synth with cache (only 1: by case : a ; case : b  => // ->).	0.0198848247528	1
Coq.ssr.ssrbool.orb_id2l	40	0	synth with cache (only 1: by case : a ; case : b ; case : c  => // ->).	0.0286588668823	1
Coq.ssr.ssrbool.orb_id2r	40	0	synth with cache (only 1: by case : a ; case : b ; case : c  => // ->).	0.028736114502	1
Coq.ssr.ssrbool.negb_and	40	0	synth with cache (only 1: Bool.destr_bool).	0.0159511566162	1
Coq.ssr.ssrbool.negb_or	40	0	synth with cache (only 1: by case : a ; case : b ).	0.0170378684998	1
Coq.ssr.ssrbool.andbK	40	0	synth with cache (only 1: by case : a ; case : b ).	0.0160939693451	1
Coq.ssr.ssrbool.andKb	40	0	synth with cache (only 1: by case : a ; case : b ).	0.0163719654083	1
Coq.ssr.ssrbool.orbK	40	0	synth with cache (only 1: by case : a ; case : b ).	0.0160109996796	1
Coq.ssr.ssrbool.orKb	40	0	synth with cache (only 1: by case : a ; case : b ).	0.0160849094391	1
Coq.ssr.ssrbool.implybT	40	0	synth with cache (only 1: by case : b ).	0.0129718780518	1
Coq.ssr.ssrbool.implybF	40	0	synth with cache (only 1: by case : b ).	0.0346171855927	1
Coq.ssr.ssrbool.implyFb	40	0	synth with cache (only 1: by case : b ).	0.0124518871307	1
Coq.ssr.ssrbool.implyTb	40	0	synth with cache (only 1: by case : b ).	0.0132248401642	1
Coq.ssr.ssrbool.implybb	40	0	synth with cache (only 1: by case : b ).	0.0125761032104	1
Coq.ssr.ssrbool.negb_imply	40	0	synth with cache (only 1: by case : a ; case : b ).	0.0164239406586	1
Coq.ssr.ssrbool.implybE	40	0	synth with cache (only 1: by case : a ; case : b ).	0.0163660049438	1
Coq.ssr.ssrbool.implyNb	40	0	synth with cache (only 1: by case : a ; case : b ).	0.0161411762238	1
Coq.ssr.ssrbool.implybN	40	0	synth with cache (only 1: by case : a ; case : b ).	0.0162072181702	1
Coq.ssr.ssrbool.implybNN	40	0	synth with cache (only 1: by case : a ; case : b ).	0.0162789821625	1
Coq.ssr.ssrbool.implyb_idl	40	0	synth with cache (only 1: by case : a ; case : b  => // ->).	0.0199019908905	1
Coq.ssr.ssrbool.implyb_idr	40	0	synth with cache (only 1: by case : a ; case : b  => // ->).	0.0206098556519	1
Coq.ssr.ssrbool.implyb_id2l	40	0	synth with cache (only 1: by case : a ; case : b ; case : c  => // ->).	0.0282258987427	1
Coq.ssr.ssrbool.addFb	40	0	synth with cache (only 1: by [  ]).	0.0113260746002	1
Coq.ssr.ssrbool.addbF	40	0	synth with cache (only 1: by case).	0.0125160217285	1
Coq.ssr.ssrbool.addbb	40	1	synth with cache (only 1: by case).	0.0147650241852	2
Coq.ssr.ssrbool.addbC	40	0	synth with cache (only 1: by do 2!case).	0.0148859024048	1
Coq.ssr.ssrbool.addbA	40	0	synth with cache (only 1: by do 3!case).	0.0197949409485	1
Coq.ssr.ssrbool.addbCA	40	0	synth with cache (only 1: by do 3!case).	0.0199701786041	1
Coq.ssr.ssrbool.addbAC	40	0	synth with cache (only 1: by do 3!case).	0.0199279785156	1
Coq.ssr.ssrbool.addbACA	40	0	synth with cache (only 1: by do 4!case).	0.0302629470825	1
Coq.ssr.ssrbool.andb_addl	40	0	synth with cache (only 1: by do 3!case).	0.0205249786377	1
Coq.ssr.ssrbool.andb_addr	40	0	synth with cache (only 1: by do 3!case).	0.0205719470978	1
Coq.ssr.ssrbool.addKb	40	1	synth with cache (only 1: by do 2!case).	0.0171811580658	2
Coq.ssr.ssrbool.addbK	40	0	synth with cache (only 1: by do 2!case).	0.0146799087524	1
Coq.ssr.ssrbool.addIb	40	1	synth with cache (only 1: by do 3!case).	0.0238869190216	2
Coq.ssr.ssrbool.addbI	40	2	synth with cache (only 1: by do 3!case).	0.0578179359436	3
Coq.ssr.ssrbool.addTb	40	0	synth with cache (only 1: by case : b ).	0.0135831832886	1
Coq.ssr.ssrbool.addbT	40	1	synth with cache (only 1: by case : b ).	0.0490601062775	2
Coq.ssr.ssrbool.addbN	40	0	synth with cache (only 1: by case : a ; case : b ).	0.016371011734	1
Coq.ssr.ssrbool.addNb	40	0	synth with cache (only 1: by case : a ; case : b ).	0.0164699554443	1
Coq.ssr.ssrbool.addbP	40	0.0.0.0.67	synth with cache (only 1: Bool.destr_bool; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor).	0.137848854065	79
Coq.ssr.ssrbool.subrelUl	40	67.64.4.192	synth with cache (only 1: intro A; only 1: intro p; only 1: simpl in *; only 1: by move ->).	0.240912914276	374
Coq.ssr.ssrbool.subrelUr	40	2.75.193.194.13.195	synth with cache (only 1: intro A; only 1: simpl; only 1: intros H; only 1: inversion 1; only 1: red; only 1: intuition).	5.90044689178	28601
Coq.ssr.ssrbool.sub_refl	40	1.134	synth with cache (only 1: inversion 1; only 1: intuition).	0.0608429908752	152
Coq.ssr.ssrbool.PredicateSimplification.mem_topred	40
Coq.ssr.ssrbool.PredicateSimplification.topredE	40	0	synth with cache (only 1: by case : pT pp ).	0.0153291225433	1
Coq.ssr.ssrbool.PredicateSimplification.app_predE	40
Coq.ssr.ssrbool.PredicateSimplification.in_applicative	40
Coq.ssr.ssrbool.PredicateSimplification.in_collective	40
Coq.ssr.ssrbool.PredicateSimplification.in_simpl	40	0	synth with cache (only 1: by case : msp  => _ /= ->).	0.0163779258728	1
Coq.ssr.ssrbool.PredicateSimplification.unfold_in	40	3	synth with cache (only 1: by rewrite -mem_topred).	0.0152499675751	4
Coq.ssr.ssrbool.PredicateSimplification.simpl_predE	40	2	synth with cache (only 1: by [  ]).	0.0122971534729	3
Coq.ssr.ssrbool.PredicateSimplification.mem_simpl	40	0	synth with cache (only 1: by [  ]).	0.0118517875671	1
Coq.ssr.ssrbool.PredicateSimplification.mem_mem	40
Coq.ssr.ssrbool.qualifE	40	1	synth with cache (only 1: by [  ]).	0.0128879547119	2
Coq.ssr.ssrbool.KeyPred.keyed_predE	40
Coq.ssr.ssrbool.KeyedQualifier.keyed_qualifier_suproof	40
Coq.ssr.ssrbool.all_tag_cond_dep	40
Coq.ssr.ssrbool.all_tag_cond	40
Coq.ssr.ssrbool.all_sig_cond_dep	40
Coq.ssr.ssrbool.all_sig_cond	40
Coq.ssr.ssrbool.RelationProperties.symmetric_from_pre	40
Coq.ssr.ssrbool.RelationProperties.PER.sym_left_transitive	40
Coq.ssr.ssrbool.RelationProperties.PER.sym_right_transitive	40
Coq.ssr.ssrbool.RelationProperties.equivalence_relP	40
Coq.ssr.ssrbool.rev_trans	40
Coq.ssr.ssrbool.LocalProperties.forE	40	1	synth with cache (only 1: reflexivity).	0.0123949050903	2
Coq.ssr.ssrbool.LocalGlobal.in1W	40	0.131	synth with cache (only 1: intuition; only 1: by [  ]).	0.075315952301	33
Coq.ssr.ssrbool.LocalGlobal.in2W	40	0	synth with cache (only 1: by move  =>? ?).	0.0116930007935	1
Coq.ssr.ssrbool.LocalGlobal.in3W	40	0	synth with cache (only 1: by move  =>? ?).	0.0128071308136	1
Coq.ssr.ssrbool.LocalGlobal.in1T	40	128.68.194	synth with cache (only 1: intros H; only 1: simpl in *; only 1: intuition).	0.213376998901	256
Coq.ssr.ssrbool.LocalGlobal.in2T	40	1	synth with cache (only 1: by move  =>? ?; auto).	0.0169911384583	2
Coq.ssr.ssrbool.LocalGlobal.in3T	40	0	synth with cache (only 1: by move  =>? ?; auto).	0.0146911144257	1
Coq.ssr.ssrbool.LocalGlobal.sub_in1	40	0	synth with cache (only 1: by move  =>? ?; auto).	0.0122909545898	1
Coq.ssr.ssrbool.LocalGlobal.sub_in11	40	1	synth with cache (only 1: by move  =>? ?; auto).	0.0158631801605	2
Coq.ssr.ssrbool.LocalGlobal.sub_in111	40	1	synth with cache (only 1: by move  =>? ?; auto).	0.0178589820862	2
Coq.ssr.ssrbool.LocalGlobal.on1W	40	0	synth with cache (only 1: by move  =>? ?).	0.0140891075134	1
Coq.ssr.ssrbool.LocalGlobal.on1lW	40	0	synth with cache (only 1: by move  =>? ?).	0.0118539333344	1
Coq.ssr.ssrbool.LocalGlobal.on2W	40	0	synth with cache (only 1: by move  =>? ?).	0.0123980045319	1
Coq.ssr.ssrbool.LocalGlobal.on1T	40	1	synth with cache (only 1: by move  =>? ?; auto).	0.0166189670563	2
Coq.ssr.ssrbool.LocalGlobal.on1lT	40	1	synth with cache (only 1: by move  =>? ?; auto).	0.0174639225006	2
Coq.ssr.ssrbool.LocalGlobal.on2T	40	0	synth with cache (only 1: by move  =>? ?; auto).	0.0146751403809	1
Coq.ssr.ssrbool.LocalGlobal.subon1	40	1	synth with cache (only 1: by move  =>? ?; auto).	0.0175909996033	2
Coq.ssr.ssrbool.LocalGlobal.subon1l	40	0	synth with cache (only 1: by move  =>allQ x /sub2; apply : allQ ).	0.0168972015381	1
Coq.ssr.ssrbool.LocalGlobal.subon2	40	3	synth with cache (only 1: by move  =>? ?; auto).	0.0262398719788	4
Coq.ssr.ssrbool.LocalGlobal.can_in_inj	40
Coq.ssr.ssrbool.LocalGlobal.canLR_in	40	5.134.70.64.65.64.265	synth with cache (only 1: intros H x0; only 1: intro p; only 1: intuition; only 1: subst; only 1: rewrite H; only 1: exact (erefl _); only 1: by [  ]).	10.792650938	26991
Coq.ssr.ssrbool.LocalGlobal.canRL_in	40	260.64.139.130.67.141	synth with cache (only 1: intro H; only 1: inversion 1; only 1: inversion 1; only 1: rewrite H; only 1: reflexivity || destruct H; only 1: apply H0).	15.8927340508	44895
Coq.ssr.ssrbool.LocalGlobal.on_can_inj	40	0	synth with cache (only 1: by move  =>fK x y /fK {+2}<- /fK {+2}<- ->).	0.0228719711304	1
Coq.ssr.ssrbool.LocalGlobal.canLR_on	40	1	synth with cache (only 1: by move  =>fK D1y ->; rewrite fK).	0.018324136734	2
Coq.ssr.ssrbool.LocalGlobal.canRL_on	40	2	synth with cache (only 1: by move  =>fK D1x <-; rewrite fK).	0.0176708698273	3
Coq.ssr.ssrbool.LocalGlobal.inW_bij	40
Coq.ssr.ssrbool.LocalGlobal.onW_bij	40	0	synth with cache (only 1: by case  =>g' fK g'K; exists g' => * ? *; auto).	0.0199558734894	1
Coq.ssr.ssrbool.LocalGlobal.inT_bij	40	0	synth with cache (only 1: by case  =>g' fK g'K; exists g' => * ? *; auto).	0.0244648456573	1
Coq.ssr.ssrbool.LocalGlobal.onT_bij	40	0	synth with cache (only 1: by case  =>g' fK g'K; exists g' => * ? *; auto).	0.0257029533386	1
Coq.ssr.ssrbool.LocalGlobal.sub_in_bij	40	0.70	synth with cache (only 1: intro x; only 1: by case  =>g' fK g'K; exists g' => * ? *; auto).	0.221220970154	231
Coq.ssr.ssrbool.LocalGlobal.subon_bij	40	0	synth with cache (only 1: by move  =>subD [g' fK g'K]; exists g' => x; move /subD ; [ apply : fK  | apply : g'K  ]).	0.0303421020508	1
Coq.ssr.ssrbool.sub_in2	40	260.128.1.67.64	synth with cache (only 1: intros n m; only 1: red; only 1: move  =>f0 fP; only 1: intro A; only 1: auto with bool).	0.826106071472	1847
Coq.ssr.ssrbool.sub_in3	40	128.257.256.14	synth with cache (only 1: red; only 1: intros H ?; only 1: intros ? ? ? Fl Fr; only 1: by move  =>? ?; auto).	0.621491909027	1138
Coq.ssr.ssrbool.sub_in12	40	0.68	synth with cache (only 1: intro z; only 1: by move  =>/= sub_dd'; apply : sub_in111 ).	0.133282899857	57
Coq.ssr.ssrbool.sub_in21	40	0	synth with cache (only 1: by move  =>/= sub1 sub; apply : sub_in111 ).	0.0150580406189	1
Coq.ssr.ssrbool.equivalence_relP_in	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory.monoW	40	4	synth with cache (only 1: by move  =>eq_fg eq_gh x; rewrite eq_fg).	0.0406520366669	46
Coq.ssr.ssrbool.MonoHomoMorphismTheory.mono2W	40	5	synth with cache (only 1: by move  =>eq_fg eq_gh x; rewrite eq_fg).	0.0692360401154	86
Coq.ssr.ssrbool.MonoHomoMorphismTheory.homoRL	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory.homoLR	40	0	synth with cache (only 1: by move  =>Hf x y /Hf; rewrite fgK).	0.0163550376892	1
Coq.ssr.ssrbool.MonoHomoMorphismTheory.homo_mono	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory.monoLR	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory.monoRL	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory.can_mono	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.monoW_in	40	257.128.128.128.197.132.128	synth with cache (only 1: intros P b H H0; only 1: symmetry; only 1: destruct H2; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: auto with bool).	1.74653100967	3522
Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.mono2W_in	40	0	synth with cache (only 1: by move  =>hf x ax; rewrite hf).	0.0138540267944	1
Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.homoRL_in	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.homoLR_in	40	0	synth with cache (only 1: by move  =>Hf x y hx hy /Hf; rewrite fgK_on //; apply).	0.0265719890594	1
Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.homo_mono_in	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.monoLR_in	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.monoRL_in	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.can_mono_in	40
Coq.ssr.ssrsetoid.compat_Reflexive	40	0.0	synth with cache (only 1: intros; only 1: tauto).	0.0137250423431	2
Coq.ssr.ssrfun.unitE	40	0.3.133.198	synth with cache (only 1: intro p; only 1: unfold not; only 1: destruct p; only 1: tauto).	0.359351158142	1398
Coq.ssr.ssrfun.ExtensionalEquality.frefl	40	2	synth with cache (only 1: split).	0.012008190155	3
Coq.ssr.ssrfun.ExtensionalEquality.fsym	40	0.9	synth with cache (only 1: intros; only 1: by [  ]).	0.0698518753052	158
Coq.ssr.ssrfun.ExtensionalEquality.ftrans	40
Coq.ssr.ssrfun.ExtensionalEquality.rrefl	40	2.0	synth with cache (only 1: intros H ?; only 1: split).	0.0140130519867	4
Coq.ssr.ssrfun.Composition.eq_comp	40
Coq.ssr.ssrfun.all_tag	40
Coq.ssr.ssrfun.all_tag2	40	0	synth with cache (only 1: by move  =>fP; exists (fun x => tag (fP x)) => x; case : (fP x) ).	0.0199120044708	1
Coq.ssr.ssrfun.Sig.svalP	40	2	synth with cache (only 1: apply proj2_sig).	0.0107440948486	3
Coq.ssr.ssrfun.Sig.s2valP	40
Coq.ssr.ssrfun.Sig.s2valP'	40	0	synth with cache (only 1: by case : u ).	0.0135569572449	1
Coq.ssr.ssrfun.all_sig	40	0	synth with cache (only 1: by move  =>fP; exists (fun x => tag (fP x)) => x; case : (fP x) ).	0.0163719654083	1
Coq.ssr.ssrfun.all_sig2	40	0	synth with cache (only 1: by case /all_tag =>f /all_pair []; exists f).	0.0230219364166	1
Coq.ssr.ssrfun.Injections.can_pcan	40	1.44.64.15	synth with cache (only 1: red; only 1: intros H H'; only 1: rewrite H; only 1: reflexivity).	14.8427438736	113378
Coq.ssr.ssrfun.Injections.pcan_inj	40
Coq.ssr.ssrfun.Injections.can_inj	40	1	synth with cache (only 1: by move  =>fK x y /(congr1 g); rewrite !fK => [[]]).	0.0178661346436	2
Coq.ssr.ssrfun.Injections.canLR	40	1.70.64	synth with cache (only 1: intro z; only 1: inversion 1; only 1: trivial).	0.172190189362	381
Coq.ssr.ssrfun.Injections.canRL	40	7.2	synth with cache (only 1: destruct 2; only 1: auto).	0.340934991837	751
Coq.ssr.ssrfun.Some_inj	40	64.137.2.131	synth with cache (only 1: intro; only 1: Bool.destr_bool; only 1: inversion_clear H; only 1: intuition).	1.27509188652	3353
Coq.ssr.ssrfun.of_voidK	40	0.128	synth with cache (only 1: intros H; only 1: destruct H).	0.0187511444092	10
Coq.ssr.ssrfun.esymK	40	0.0.43	synth with cache (only 1: intro H; only 1: destruct H; only 1: reflexivity).	0.806591033936	4691
Coq.ssr.ssrfun.etrans_id	40	0.13	synth with cache (only 1: subst; only 1: reflexivity).	0.092276096344	312
Coq.ssr.ssrfun.InjectionsTheory.inj_id	40	67.65	synth with cache (only 1: intros Hfst Hsnd; only 1: Bool.destr_bool).	0.0603659152985	103
Coq.ssr.ssrfun.InjectionsTheory.inj_can_sym	40	6.86	synth with cache (only 1: red; only 1: auto).	1.76769804955	7062
Coq.ssr.ssrfun.InjectionsTheory.inj_comp	40	8.193	synth with cache (only 1: intros ? ? ? Fl Fr; only 1: auto).	0.291910886765	504
Coq.ssr.ssrfun.InjectionsTheory.inj_compr	40	5.68.8.69.70.71.69	synth with cache (only 1: intro H; only 1: intro H1; only 1: intros n m; only 1: apply H; only 1: simpl; only 1: destruct m; only 1: trivial).	14.1213419437	62481
Coq.ssr.ssrfun.InjectionsTheory.can_comp	40
Coq.ssr.ssrfun.InjectionsTheory.pcan_pcomp	40
Coq.ssr.ssrfun.InjectionsTheory.eq_inj	40
Coq.ssr.ssrfun.InjectionsTheory.eq_can	40
Coq.ssr.ssrfun.InjectionsTheory.inj_can_eq	40
Coq.ssr.ssrfun.Bijections.bij_inj	40
Coq.ssr.ssrfun.Bijections.bij_can_sym	40
Coq.ssr.ssrfun.Bijections.bij_can_eq	40
Coq.ssr.ssrfun.BijectionsTheory.eq_bij	40
Coq.ssr.ssrfun.BijectionsTheory.bij_comp	40
Coq.ssr.ssrfun.BijectionsTheory.bij_can_bij	40
Coq.ssr.ssrfun.Involutions.inv_inj	40
Coq.ssr.ssrfun.Involutions.inv_bij	40	68.68.20	synth with cache (only 1: exists f; only 1: by [  ]; only 1: by [  ]).	0.426980018616	1519
Coq.ssr.ssrunder.Under_rel.Under_rel_from_rel	40	0.0	synth with cache (only 1: intros; only 1: trivial).	0.0122818946838	2
Coq.ssr.ssrunder.Under_rel.Under_relE	40	1	synth with cache (only 1: auto).	0.0128948688507	2
Coq.ssr.ssrunder.Under_rel.over_rel	40	0	synth with cache (only 1: now trivial).	0.0108478069305	1
Coq.ssr.ssrunder.Under_rel.over_rel_done	40	0	synth with cache (only 1: now trivial).	0.0111880302429	1
Coq.ssr.ssrunder.Under_rel.under_rel_done	40	0	synth with cache (only 1: now unfold Over_rel).	0.00997996330261	1
Coq.Vectors.VectorEq.BEQ.eqb_nat_eq	40
Coq.Vectors.VectorEq.BEQ.eqb_eq	40
Coq.Vectors.VectorEq.BEQ.eq_dec	40
Coq.Vectors.VectorEq.CAST.cast	40	449.64	synth with cache (only 1: intros a b n Ha; only 1: congruence).	0.196448087692	199
Coq.Vectors.VectorDef.BASES.trunc	40
Coq.Vectors.VectorSpec.eta	40
Coq.Vectors.VectorSpec.eq_nth_iff	40
Coq.Vectors.VectorSpec.nth_order_last	40
Coq.Vectors.VectorSpec.shiftin_nth	40
Coq.Vectors.VectorSpec.shiftin_last	40
Coq.Vectors.VectorSpec.shiftrepeat_nth	40
Coq.Vectors.VectorSpec.shiftrepeat_last	40
Coq.Vectors.VectorSpec.const_nth	40
Coq.Vectors.VectorSpec.nth_map	40
Coq.Vectors.VectorSpec.nth_map2	40
Coq.Vectors.VectorSpec.fold_left_right_assoc_eq	40
Coq.Vectors.VectorSpec.to_list_of_list_opp	40
Coq.Vectors.VectorSpec.take_O	40	322.0	synth with cache (only 1: intros; only 1: now try PeanoNat.Nat.order').	0.02885389328	19
Coq.Vectors.VectorSpec.take_idem	40
Coq.Vectors.VectorSpec.take_app	40
Coq.Vectors.VectorSpec.take_prf_irr	40	64.0.768.0.193.64.1.449.0.0.0	synth with cache (only 1: induction p; only 1: intros n v le le'; only 1: auto; only 1: assert (succ_r : forall x y, x + S y = S (x + y)) by now induction x; only 1: destruct v; only 1: now f_equal; only 1: intros x; only 1: simpl; only 1: intro z; only 1: apply f_equal; only 1: auto with sets).	8.2733130455	7081
Coq.Vectors.VectorSpec.uncons_cons	40	64	synth with cache (only 1: auto with *).	0.0217900276184	5
Coq.Vectors.VectorSpec.append_comm_cons	40	2.0	synth with cache (only 1: intros; only 1: now simpl).	0.0374329090118	6
Coq.Vectors.VectorSpec.splitat_append	40
Coq.Vectors.VectorSpec.append_splitat	40
Coq.Vectors.Fin.of_nat_ext	40
Coq.Vectors.Fin.of_nat_to_nat_inv	40
Coq.Vectors.Fin.to_nat_of_nat	40
Coq.Vectors.Fin.to_nat_inj	40
Coq.Vectors.Fin.L_sanity	40
Coq.Vectors.Fin.L_R	40	384.513.1.192.454.0.79	synth with cache (only 1: destruct m as [| m]; only 1: now PeanoNat.Nat.nzsimpl; only 1: induction n; only 1: intuition; only 1: simpl; only 1: compute; only 1: constructor).	2.50465893745	7635
Coq.Vectors.Fin.R_sanity	40
Coq.Vectors.Fin.depair_sanity	40
Coq.Vectors.Fin.eqb_nat_eq	40
Coq.Vectors.Fin.eqb_eq	40
Coq.Vectors.Fin.eq_dec	40
Coq.Vectors.Fin.cast	40	576.323.0	synth with cache (only 1: intros; only 1: subst; only 1: Bool.destr_bool).	0.219058036804	496
Coq.Setoids.Setoid.Seq_refl	40	0	synth with cache (only 1: firstorder).	0.0165529251099	1
Coq.Setoids.Setoid.Seq_sym	40	0.0	synth with cache (only 1: unfold Setoid_Theory in s; only 1: firstorder).	0.0215950012207	2
Coq.Setoids.Setoid.Seq_trans	40	2.0.0.0.0	synth with cache (only 1: unfold Setoid_Theory in s; only 1: intros; only 1: symmetry; only 1: symmetry; only 1: now transitivity y).	0.0581388473511	27
Coq.Setoids.Setoid.gen_st	40	4	synth with cache (only 1: simpl_relation).	0.0240988731384	21
Coq.Bool.IfProp.Iftrue_inv	40	0.0.67.0	synth with cache (only 1: intros; only 1: reflexivity || destruct H; only 1: tauto; only 1: discriminate).	0.0670330524445	108
Coq.Bool.IfProp.Iffalse_inv	40	0.0.0.0.0.0	synth with cache (only 1: destruct 1; only 1: intros; only 1: case diff_true_false; only 1: auto with bool; only 1: intros; only 1: auto with bool).	0.0242931842804	6
Coq.Bool.IfProp.IfProp_true	40	1.72	synth with cache (only 1: inversion 1; only 1: auto with bool).	0.427655935287	971
Coq.Bool.IfProp.IfProp_false	40	1.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: inversion H; only 1: inversion H; only 1: inversion H; only 1: inversion H; only 1: inversion H; only 1: assumption).	0.0365478992462	11
Coq.Bool.IfProp.IfProp_or	40	0.1.0.0.0	synth with cache (only 1: destruct 1; only 1: left; only 1: auto with bool; only 1: right; only 1: auto with bool).	0.0309789180756	21
Coq.Bool.IfProp.IfProp_sum	40
Coq.Bool.Zerob.zerob_true_intro	40	67	synth with cache (only 1: now induction n).	0.141839981079	127
Coq.Bool.Zerob.zerob_true_elim	40	0.0.0	synth with cache (only 1: destruct n; only 1: trivial with bool; only 1: inversion 1).	0.0867731571198	3
Coq.Bool.Zerob.zerob_false_intro	40	0.512.1.0	synth with cache (only 1: destruct n; only 1: intro H; only 1: intuition Nat.order; only 1: trivial).	0.0882921218872	21
Coq.Bool.Zerob.zerob_false_elim	40	321.0.0.0	synth with cache (only 1: intros; only 1: intro H1; only 1: rewrite H1 in H; only 1: easy || now destruct 1).	0.09197306633	20
Coq.Bool.DecBool.ifdec_left	40	0.0.1.2.6.3	synth with cache (only 1: unfold not; only 1: destruct H; only 1: reflexivity; only 1: intros H ?; only 1: destruct H; only 1: assumption).	2.60030984879	8588
Coq.Bool.DecBool.ifdec_right	40	0.0.130.64.0.0.6	synth with cache (only 1: unfold not; only 1: intros; only 1: case H; only 1: symmetry; only 1: destruct H0 in H; only 1: trivial; only 1: auto).	3.94195103645	6671
Coq.Bool.Sumbool.sumbool_of_bool	40	2.73.0.15.0	synth with cache (only 1: intro H; only 1: destruct H; only 1: auto; only 1: right; only 1: repeat split).	0.739691019058	4539
Coq.Bool.Sumbool.bool_eq_rec	40	1.1.4	synth with cache (only 1: destruct b; only 1: auto; only 1: auto).	0.112071037292	194
Coq.Bool.Sumbool.bool_eq_ind	40	0.0.0	synth with cache (only 1: destruct b; only 1: auto; only 1: auto).	0.0175709724426	3
Coq.Bool.Sumbool.connectives.sumbool_and	40
Coq.Bool.Sumbool.connectives.sumbool_or	40	0.0.0.0.0.0.0	synth with cache (only 1: case H1; only 1: case H2; only 1: auto; only 1: auto; only 1: case H2; only 1: auto; only 1: auto).	0.0268669128418	7
Coq.Bool.Sumbool.connectives.sumbool_not	40	0.0.0.0.0.0.0	synth with cache (only 1: case H1; only 1: case H2; only 1: auto; only 1: auto; only 1: case H2; only 1: auto; only 1: auto).	0.0232970714569	7
Coq.Bool.Sumbool.bool_of_sumbool	40
Coq.Bool.Bool.bool_dec	40
Coq.Bool.Bool.diff_true_false	40	2	synth with cache (only 1: discriminate).	0.00939702987671	3
Coq.Bool.Bool.diff_false_true	40	0	synth with cache (only 1: discriminate).	0.00918793678284	1
Coq.Bool.Bool.eq_true_false_abs	40	1.2.1.1.132.69	synth with cache (only 1: intro H; only 1: reflexivity || destruct H; only 1: intro z; only 1: discriminate; only 1: intro z; only 1: discriminate).	0.632687091827	2274
Coq.Bool.Bool.not_true_is_false	40	2.6.0	synth with cache (only 1: destr_bool; only 1: reflexivity || destruct H; only 1: exact eq_refl).	0.25505399704	568
Coq.Bool.Bool.not_false_is_true	40	0.0	synth with cache (only 1: destr_bool; only 1: intuition).	0.0176799297333	2
Coq.Bool.Bool.not_true_iff_false	40	0.0.0.2.69	synth with cache (only 1: intro H1; only 1: split; only 1: destr_bool; only 1: intuition; only 1: destr_bool).	0.512590885162	680
Coq.Bool.Bool.not_false_iff_true	40	0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0235140323639	3
Coq.Bool.Bool.leb_implb	40	2.0.2.1.1.1.1.0.2	synth with cache (only 1: destr_bool; only 1: split; only 1: destruct 1; only 1: intuition; only 1: destruct 1; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.945524930954	1211
Coq.Bool.Bool.eqb_subst	40	1.3	synth with cache (only 1: intro x; only 1: destr_bool).	0.0689158439636	81
Coq.Bool.Bool.eqb_reflx	40	0	synth with cache (only 1: destr_bool).	0.0121469497681	1
Coq.Bool.Bool.eqb_prop	40	0	synth with cache (only 1: destr_bool).	0.0133619308472	1
Coq.Bool.Bool.eqb_true_iff	40	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0287401676178	5
Coq.Bool.Bool.eqb_false_iff	40	0.0.0.0.1	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0687501430511	24
Coq.Bool.Bool.negb_orb	40	3	synth with cache (only 1: destr_bool).	0.0280070304871	14
Coq.Bool.Bool.negb_andb	40	0	synth with cache (only 1: destr_bool).	0.0143158435822	1
Coq.Bool.Bool.negb_involutive	40	2	synth with cache (only 1: destr_bool).	0.0137400627136	3
Coq.Bool.Bool.negb_involutive_reverse	40	0	synth with cache (only 1: destr_bool).	0.0133769512177	1
Coq.Bool.Bool.negb_sym	40	0	synth with cache (only 1: destr_bool).	0.0134329795837	1
Coq.Bool.Bool.no_fixpoint_negb	40	0	synth with cache (only 1: destr_bool).	0.0145928859711	1
Coq.Bool.Bool.eqb_negb1	40	0	synth with cache (only 1: destr_bool).	0.0119462013245	1
Coq.Bool.Bool.eqb_negb2	40	0	synth with cache (only 1: destr_bool).	0.0119128227234	1
Coq.Bool.Bool.if_negb	40	0	synth with cache (only 1: destr_bool).	0.0124089717865	1
Coq.Bool.Bool.negb_true_iff	40	0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0198287963867	3
Coq.Bool.Bool.negb_false_iff	40	0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0201678276062	3
Coq.Bool.Bool.orb_true_iff	40	0.1.1.1.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.169057846069	72
Coq.Bool.Bool.orb_false_iff	40	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0397100448608	5
Coq.Bool.Bool.orb_true_elim	40	0.0.0.1	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition).	0.0309669971466	5
Coq.Bool.Bool.orb_prop	40	0.0.0.2	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition).	0.0760500431061	38
Coq.Bool.Bool.orb_true_intro	40	1.2	synth with cache (only 1: destr_bool; only 1: intuition).	0.129492998123	105
Coq.Bool.Bool.orb_false_intro	40	2	synth with cache (only 1: destr_bool).	0.0407691001892	17
Coq.Bool.Bool.orb_false_elim	40	0.0.64.129.0.1	synth with cache (only 1: destruct b1; only 1: simpl; only 1: intro p; only 1: inversion 1; only 1: simpl; only 1: auto).	0.228405952454	219
Coq.Bool.Bool.orb_diag	40	0	synth with cache (only 1: destr_bool).	0.0133171081543	1
Coq.Bool.Bool.orb_true_r	40	0	synth with cache (only 1: destr_bool).	0.0122900009155	1
Coq.Bool.Bool.orb_true_l	40	0	synth with cache (only 1: destr_bool).	0.0122101306915	1
Coq.Bool.Bool.orb_false_r	40	1	synth with cache (only 1: destr_bool).	0.0122711658478	2
Coq.Bool.Bool.orb_false_l	40	0	synth with cache (only 1: destr_bool).	0.0123219490051	1
Coq.Bool.Bool.orb_negb_r	40	0	synth with cache (only 1: destr_bool).	0.0124180316925	1
Coq.Bool.Bool.orb_comm	40	0	synth with cache (only 1: destr_bool).	0.015585899353	1
Coq.Bool.Bool.orb_assoc	40	0	synth with cache (only 1: destr_bool).	0.0205779075623	1
Coq.Bool.Bool.andb_true_iff	40	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.037318944931	5
Coq.Bool.Bool.andb_false_iff	40	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0377931594849	5
Coq.Bool.Bool.andb_true_eq	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct a, b; only 1: repeat split; only 1: repeat split; only 1: assumption; only 1: repeat split; only 1: assumption; only 1: repeat split; only 1: assumption; only 1: assumption).	0.0895071029663	51
Coq.Bool.Bool.andb_false_intro1	40	1.1.0	synth with cache (only 1: destruct b1; only 1: destr_bool; only 1: destr_bool).	0.0367548465729	14
Coq.Bool.Bool.andb_false_intro2	40	0.0.0	synth with cache (only 1: intros; only 1: apply andb_false_iff; only 1: auto).	0.0204510688782	3
Coq.Bool.Bool.andb_false_r	40	1	synth with cache (only 1: destr_bool).	0.0121448040009	2
Coq.Bool.Bool.andb_false_l	40	0	synth with cache (only 1: destr_bool).	0.0119140148163	1
Coq.Bool.Bool.andb_diag	40	0	synth with cache (only 1: destr_bool).	0.0120310783386	1
Coq.Bool.Bool.andb_true_r	40	1	synth with cache (only 1: destr_bool).	0.0124561786652	2
Coq.Bool.Bool.andb_true_l	40	0	synth with cache (only 1: destr_bool).	0.0122628211975	1
Coq.Bool.Bool.andb_false_elim	40	0.0.0.2	synth with cache (only 1: destr_bool; only 1: auto; only 1: auto; only 1: auto).	0.0571630001068	35
Coq.Bool.Bool.andb_negb_r	40	0	synth with cache (only 1: destr_bool).	0.0127310752869	1
Coq.Bool.Bool.andb_comm	40	0	synth with cache (only 1: destr_bool).	0.0142331123352	1
Coq.Bool.Bool.andb_assoc	40	0	synth with cache (only 1: destr_bool).	0.0204699039459	1
Coq.Bool.Bool.andb_orb_distrib_r	40	0	synth with cache (only 1: destr_bool).	0.018944978714	1
Coq.Bool.Bool.andb_orb_distrib_l	40	0	synth with cache (only 1: destr_bool).	0.0194919109344	1
Coq.Bool.Bool.orb_andb_distrib_r	40	0	synth with cache (only 1: destr_bool).	0.0196788311005	1
Coq.Bool.Bool.orb_andb_distrib_l	40	0	synth with cache (only 1: destr_bool).	0.0423920154572	1
Coq.Bool.Bool.absorption_andb	40	0	synth with cache (only 1: destr_bool).	0.014988899231	1
Coq.Bool.Bool.absorption_orb	40	0	synth with cache (only 1: destr_bool).	0.0145959854126	1
Coq.Bool.Bool.xorb_false_r	40	0	synth with cache (only 1: destr_bool).	0.0137708187103	1
Coq.Bool.Bool.xorb_false_l	40	0	synth with cache (only 1: destr_bool).	0.0139329433441	1
Coq.Bool.Bool.xorb_true_r	40	0	synth with cache (only 1: destr_bool).	0.0127170085907	1
Coq.Bool.Bool.xorb_true_l	40	0	synth with cache (only 1: reflexivity).	0.0112609863281	1
Coq.Bool.Bool.xorb_nilpotent	40	0	synth with cache (only 1: destr_bool).	0.0119948387146	1
Coq.Bool.Bool.xorb_comm	40	0	synth with cache (only 1: destr_bool).	0.0157890319824	1
Coq.Bool.Bool.xorb_assoc_reverse	40	0	synth with cache (only 1: destr_bool).	0.0192179679871	1
Coq.Bool.Bool.xorb_eq	40	0	synth with cache (only 1: destr_bool).	0.0175058841705	1
Coq.Bool.Bool.xorb_move_l_r_1	40	1	synth with cache (only 1: destr_bool).	0.026468038559	11
Coq.Bool.Bool.xorb_move_l_r_2	40	0	synth with cache (only 1: destr_bool).	0.0234889984131	1
Coq.Bool.Bool.xorb_move_r_l_1	40	0	synth with cache (only 1: destr_bool).	0.0216748714447	1
Coq.Bool.Bool.xorb_move_r_l_2	40	0	synth with cache (only 1: destr_bool).	0.0216090679169	1
Coq.Bool.Bool.negb_xorb_l	40	0	synth with cache (only 1: destr_bool).	0.0147759914398	1
Coq.Bool.Bool.negb_xorb_r	40	0.0.0.0.0	synth with cache (only 1: destruct b, b'; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial).	0.0271861553192	5
Coq.Bool.Bool.xorb_negb_negb	40	0	synth with cache (only 1: destr_bool).	0.0148069858551	1
Coq.Bool.Bool.eq_iff_eq_true	40	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0459861755371	5
Coq.Bool.Bool.eq_true_iff_eq	40	1.0.0.0.0.0.0.2.0.0.1	synth with cache (only 1: destruct b1; only 1: destruct b2; only 1: intros [? ?]; only 1: intuition; only 1: intros [? ?]; only 1: intuition; only 1: destruct b2; only 1: intros [? ?]; only 1: intuition; only 1: intros [? ?]; only 1: intuition).	0.336073875427	289
Coq.Bool.Bool.eq_true_negb_classical	40	0.0	synth with cache (only 1: destr_bool; only 1: intuition).	0.017098903656	2
Coq.Bool.Bool.eq_true_not_negb	40	0.0	synth with cache (only 1: destr_bool; only 1: intuition).	0.0172979831696	2
Coq.Bool.Bool.absurd_eq_bool	40	1.1.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0230560302734	5
Coq.Bool.Bool.absurd_eq_true	40	1.0	synth with cache (only 1: destr_bool; only 1: intuition).	0.0180978775024	3
Coq.Bool.Bool.trans_eq_bool	40	0	synth with cache (only 1: destr_bool).	0.0196039676666	1
Coq.Bool.Bool.Is_true_eq_true	40	1.1	synth with cache (only 1: destr_bool; only 1: intuition).	0.0187568664551	4
Coq.Bool.Bool.Is_true_eq_left	40	0	synth with cache (only 1: destr_bool).	0.0145490169525	1
Coq.Bool.Bool.Is_true_eq_right	40	0.0.0	synth with cache (only 1: intros; only 1: subst; only 1: auto with bool).	0.0180580615997	3
Coq.Bool.Bool.eqb_refl	40	0	synth with cache (only 1: destr_bool).	0.012964963913	1
Coq.Bool.Bool.eqb_eq	40	0.0.0	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.0235180854797	3
Coq.Bool.Bool.orb_prop_elim	40	1.0.4.0.4.1.4.0.2	synth with cache (only 1: destr_bool; only 1: left; only 1: apply H; only 1: right; only 1: apply H; only 1: left; only 1: apply H; only 1: left; only 1: apply H).	1.58615803719	4435
Coq.Bool.Bool.orb_prop_intro	40	0.2.0.0.0.3	synth with cache (only 1: destruct a, b; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool; only 1: simpl; only 1: tauto).	0.244853973389	276
Coq.Bool.Bool.andb_prop_intro	40	0.0.0.0	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto; only 1: tauto).	0.0681409835815	4
Coq.Bool.Bool.andb_prop_elim	40	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto; only 1: tauto; only 1: tauto).	0.0695669651031	5
Coq.Bool.Bool.eq_bool_prop_intro	40	0.0.0	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.0263619422913	3
Coq.Bool.Bool.eq_bool_prop_elim	40	0.1.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0231499671936	4
Coq.Bool.Bool.negb_prop_elim	40	0.0.0	synth with cache (only 1: destr_bool; only 1: auto; only 1: tauto).	0.017676115036	3
Coq.Bool.Bool.negb_prop_intro	40	1.0	synth with cache (only 1: destr_bool; only 1: tauto).	0.0159990787506	3
Coq.Bool.Bool.negb_prop_classical	40	0.0	synth with cache (only 1: destr_bool; only 1: tauto).	0.0157170295715	2
Coq.Bool.Bool.negb_prop_involutive	40	0.0.0	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.018609046936	3
Coq.Bool.Bool.andb_if	40	1	synth with cache (only 1: destr_bool).	0.0174670219421	2
Coq.Bool.Bool.negb_if	40	0	synth with cache (only 1: destr_bool).	0.0126049518585	1
Coq.Bool.Bool.andb_lazy_alt	40	0	synth with cache (only 1: destr_bool).	0.0147669315338	1
Coq.Bool.Bool.orb_lazy_alt	40	0	synth with cache (only 1: reflexivity).	0.0110359191895	1
Coq.Bool.Bool.reflect_iff	40	3.0.0.0.2.12	synth with cache (only 1: red; only 1: intros A B []; only 1: auto; only 1: repeat split; only 1: intuition; only 1: discriminate).	1.88628101349	4883
Coq.Bool.Bool.iff_reflect	40	2.0.1	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0662970542908	52
Coq.Bool.Bool.reflect_dec	40	0.3.0.0	synth with cache (only 1: destruct 1; only 1: intuition; only 1: unfold not; only 1: intuition).	0.0569021701813	60
Coq.Bool.Bool.eqb_spec	40	1.0.0.0.0	synth with cache (only 1: repeat match goal with | p:(_ * _)%type |- _ => destruct p | b:bool |- _ => destruct b end; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0260100364685	6
Coq.Bool.BoolEq.Bool_eq_dec.beq_eq_true	40	1.3.0	synth with cache (only 1: destr_bool; only 1: destruct H; only 1: auto).	0.0896039009094	76
Coq.Bool.BoolEq.Bool_eq_dec.beq_eq_not_false	40
Coq.Bool.BoolEq.Bool_eq_dec.beq_false_not_eq	40
Coq.Bool.BoolEq.Bool_eq_dec.exists_beq_eq	40
Coq.Bool.BoolEq.Bool_eq_dec.not_eq_false_beq	40
Coq.Bool.BoolEq.Bool_eq_dec.eq_dec	40
Coq.Lists.ListSet.first_definitions.set_In_dec	40
Coq.Lists.ListSet.first_definitions.set_mem_ind	40
Coq.Lists.ListSet.first_definitions.set_mem_ind2	40	131.0.0.0.0.2.0.0.0	synth with cache (only 1: simple induction x; only 1: simpl; only 1: intros; only 1: auto with datatypes; only 1: simpl; only 1: intros; only 1: elim (Aeq_dec a a0); only 1: auto with datatypes; only 1: intuition auto; PeanoNat.Nat.Private_OrderTac.Tac.subst_eqns; eauto using (RelationClasses.StrictOrder_Transitive x y z) with *).	2.9220688343	3822
Coq.Lists.ListSet.first_definitions.set_mem_correct1	40
Coq.Lists.ListSet.first_definitions.set_mem_correct2	40
Coq.Lists.ListSet.first_definitions.set_mem_complete1	40	320.0.0.0.64.0.64.0.0.0.4.0.0.0.0.2.0.0	synth with cache (only 1: simple induction x; only 1: simpl; only 1: intro Ha; only 1: red; only 1: trivial; only 1: simpl; only 1: intros a0 l; only 1: intros H; only 1: elim (Aeq_dec a a0); only 1: intros; only 1: red; only 1: firstorder; only 1: intro; only 1: intro Pdec; only 1: red; only 1: intros [Hc1| Hc2]; only 1: auto with datatypes; only 1: intuition PeanoNat.Nat.Private_Tac.order).	16.8886859417	28304
Coq.Lists.ListSet.first_definitions.set_mem_complete2	40	1.0.128.65.0.64.384.66.0.0.0.0	synth with cache (only 1: simple induction x; only 1: simpl; only 1: tauto; only 1: simpl; only 1: intro; only 1: pattern a; only 1: intros H; only 1: elim (Aeq_dec a a0); only 1: intros N; only 1: eauto using PeanoNat.Nat.Private_Tac.eq_trans, PeanoNat.Nat.Private_Tac.eq_sym; only 1: unfold not; only 1: auto with datatypes).	5.50424909592	5985
Coq.Lists.ListSet.first_definitions.set_add_intro1	40
Coq.Lists.ListSet.first_definitions.set_add_intro2	40	2.449.129.192.0.129.640.1.0.0.0.0.0	synth with cache (only 1: unfold set_In; only 1: simple induction x; only 1: simpl; only 1: auto with datatypes; only 1: simpl; only 1: intros a0 l; only 1: intros m Le; only 1: rewrite <- app_nil_r  at 1; only 1: elim (Aeq_dec b a0); only 1: compute; only 1: intros Ha; only 1: eauto using PeanoNat.Nat.Private_OrderTac.Tac.eq_trans, PeanoNat.Nat.Private_OrderTac.Tac.eq_sym; only 1: auto with datatypes).	10.1573300362	17466
Coq.Lists.ListSet.first_definitions.set_add_intro	40	257.0.0.448.1	synth with cache (only 1: simple induction x; only 1: inversion 1; only 1: auto with datatypes; only 1: auto with datatypes; only 1: intuition).	0.770633935928	781
Coq.Lists.ListSet.first_definitions.set_add_elim	40
Coq.Lists.ListSet.first_definitions.set_add_elim2	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold set_In; only 1: simple induction x; only 1: simpl; only 1: intros [H1| H2]; only 1: auto with datatypes; only 1: auto with datatypes; only 1: simpl; only 1: do 3 intro; only 1: elim (Aeq_dec b a0); only 1: simpl; only 1: tauto; only 1: simpl; only 1: intros H0 [| ]; only 1: tauto; only 1: tauto).	0.840437173843	867
Coq.Lists.ListSet.first_definitions.set_add_not_empty	40	128.128.1.64.1.0.0.4.1	synth with cache (only 1: simple induction x; only 1: discriminate; only 1: simpl; only 1: intros a0 l; only 1: case (Aeq_dec a a0); only 1: firstorder; only 1: discriminate; only 1: red; only 1: now simpl).	4.00491094589	5883
Coq.Lists.ListSet.first_definitions.set_add_iff	40
Coq.Lists.ListSet.first_definitions.set_add_nodup	40
Coq.Lists.ListSet.first_definitions.set_remove_1	40	2.0.64.0.0.0.1.0.0.68.67.67.394	synth with cache (only 1: intro n; only 1: intuition; only 1: revert n; only 1: induction l; only 1: simpl; only 1: auto with datatypes; only 1: simpl; only 1: elim (Aeq_dec b a0); only 1: tauto; only 1: intro eq; only 1: destruct 1; only 1: auto with datatypes; only 1: auto).	18.8941259384	70384
Coq.Lists.ListSet.first_definitions.set_remove_2	40	131.0.0.64.133.65.0.0.0.0	synth with cache (only 1: induction l as [| x xs Hrec]; only 1: intros; only 1: auto; only 1: simpl; only 1: intros; only 1: destruct 1; only 1: inversion_clear H; only 1: destruct (Aeq_dec a x) as [<-| Hax]; only 1: intuition; only 1: firstorder).	13.5973870754	33355
Coq.Lists.ListSet.first_definitions.set_remove_3	40	65.192.384.384.1.194.64.0.1.1.0.0.0.1	synth with cache (only 1: induction l as [| x xs Hrec]; only 1: simpl; only 1: intros; only 1: trivial; only 1: simpl; only 1: destruct (Aeq_dec b x) as [<-| Hbx]; only 1: intro H; only 1: firstorder; only 1: rewrite <- H in *; only 1: rewrite H; only 1: congruence; only 1: intro n; only 1: intro H; only 1: firstorder).	34.1523859501	59242
Coq.Lists.ListSet.first_definitions.set_remove_iff	40
Coq.Lists.ListSet.first_definitions.set_remove_nodup	40
Coq.Lists.ListSet.first_definitions.set_union_intro1	40
Coq.Lists.ListSet.first_definitions.set_union_intro2	40	0.0.1.448.0.64.64.0.0	synth with cache (only 1: simple induction y; only 1: simpl; only 1: intro Hxz; only 1: intuition; only 1: simpl; only 1: intro n; only 1: intros H1 H2 [H3| H4]; only 1: auto with datatypes; only 1: auto with datatypes).	0.614317893982	449
Coq.Lists.ListSet.first_definitions.set_union_intro	40	131	synth with cache (only 1: intuition).	0.0655970573425	25
Coq.Lists.ListSet.first_definitions.set_union_elim	40
Coq.Lists.ListSet.first_definitions.set_union_iff	40
Coq.Lists.ListSet.first_definitions.set_union_nodup	40
Coq.Lists.ListSet.first_definitions.set_union_emptyL	40	0.0.0.0.0.0.0.0.1	synth with cache (only 1: simple induction x; only 1: simpl; only 1: trivial; only 1: simpl; only 1: intros; only 1: generalize (set_add_elim _ _ _ H0); only 1: intros [H1| H1]; only 1: auto with datatypes; only 1: tauto).	0.669639110565	334
Coq.Lists.ListSet.first_definitions.set_union_emptyR	40	0.0.0.0	synth with cache (only 1: intros a x H; only 1: case (set_union_elim _ _ _ H); only 1: auto || contradiction; only 1: auto || contradiction).	0.035218000412	4
Coq.Lists.ListSet.first_definitions.set_inter_intro	40
Coq.Lists.ListSet.first_definitions.set_inter_elim1	40
Coq.Lists.ListSet.first_definitions.set_inter_elim2	40	0.0.0.448.128.0.0.0.0.0.0.0.4.1.0	synth with cache (only 1: simple induction x; only 1: simpl; only 1: tauto; only 1: simpl; only 1: intros a0 l Hrec y; only 1: generalize (set_mem_correct1 a0 y); only 1: elim (set_mem a0 y); only 1: simpl; only 1: intros; only 1: elim H0; only 1: firstorder; only 1: congruence; only 1: eauto with datatypes; only 1: intros; only 1: eauto with datatypes).	10.0673851967	15610
Coq.Lists.ListSet.first_definitions.set_inter_elim	40	0.2.0.1.1	synth with cache (only 1: simple induction x; only 1: simpl; only 1: tauto; only 1: intros; only 1: eauto with datatypes).	1.60782694817	1862
Coq.Lists.ListSet.first_definitions.set_inter_iff	40
Coq.Lists.ListSet.first_definitions.set_inter_nodup	40
Coq.Lists.ListSet.first_definitions.set_diff_intro	40
Coq.Lists.ListSet.first_definitions.set_diff_elim1	40
Coq.Lists.ListSet.first_definitions.set_diff_elim2	40
Coq.Lists.ListSet.first_definitions.set_diff_iff	40
Coq.Lists.ListSet.first_definitions.set_diff_nodup	40	1.130.515.0.0.0.0.0.0.0.1	synth with cache (only 1: induction 1 as [| x l H H' IH]; only 1: intro Hl'; only 1: simpl; only 1: constructor; only 1: intro Hl'; only 1: simpl; only 1: destruct (set_mem x l'); only 1: auto; only 1: generalize H; only 1: firstorder  (subst; auto); only 1: now apply set_add_nodup).	5.87358403206	11217
Coq.Lists.ListSet.first_definitions.set_diff_trivial	40	0.2.0.0.320.320.384.2	synth with cache (only 1: unfold set_In; only 1: repeat red; only 1: intros n m; only 1: intro z; only 1: eapply set_diff_elim2; only 1: eauto; only 1: eapply set_diff_elim1; only 1: eauto).	14.6857721806	10139
Coq.Lists.ListDec.Dec_in_Prop.In_decidable	40	0.4.199.0.256	synth with cache (only 1: induction l as [| a tail]; only 1: simpl in *; only 1: now right; only 1: simpl; only 1: intuition).	9.35569500923	2831
Coq.Lists.ListDec.Dec_in_Prop.incl_decidable	40
Coq.Lists.ListDec.Dec_in_Prop.NoDup_decidable	40
Coq.Lists.ListDec.Dec_in_Type.incl_dec	40
Coq.Lists.ListDec.Dec_in_Type.NoDup_dec	40
Coq.Lists.ListDec.uniquify_map	40
Coq.Lists.ListDec.uniquify	40
Coq.Lists.Streams.Streams.unfold_Stream	40	0.18.15	synth with cache (only 1: intro p; only 1: destruct p; only 1: reflexivity).	0.81215596199	6800
Coq.Lists.Streams.Streams.tl_nth_tl	40	1.0.0.7	synth with cache (only 1: induction n; only 1: trivial; only 1: simpl; only 1: trivial).	0.894575119019	1804
Coq.Lists.Streams.Streams.Str_nth_tl_plus	40
Coq.Lists.Streams.Streams.Str_nth_plus	40
Coq.Lists.Streams.Streams.EqSt_reflex	40
Coq.Lists.Streams.Streams.sym_EqSt	40
Coq.Lists.Streams.Streams.trans_EqSt	40
Coq.Lists.Streams.Streams.eqst_ntheq	40
Coq.Lists.Streams.Streams.ntheq_eqst	40
Coq.Lists.Streams.Streams.Stream_Properties.ForAll_Str_nth_tl	40
Coq.Lists.Streams.Streams.Stream_Properties.Co_Induction_ForAll.ForAll_coind	40	7.8.2	synth with cache (only 1: coinduction ltac:(EqSt_reflex); only 1: auto; only 1: auto).	17.3506011963	1005
Coq.Lists.Streams.Map.Str_nth_tl_map	40	0.0.0.0.0	synth with cache (only 1: simple induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0355930328369	5
Coq.Lists.Streams.Map.Str_nth_map	40	0.1.0.0	synth with cache (only 1: induction n; only 1: reflexivity; only 1: intros s; only 1: apply IHn).	0.0245571136475	5
Coq.Lists.Streams.Map.ForAll_map	40
Coq.Lists.Streams.Map.Exists_map	40
Coq.Lists.Streams.Zip.Str_nth_tl_zipWith	40	0.64.0.0.1.1.0	synth with cache (only 1: induction n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: intros s; only 1: intros [Hl Hr]; only 1: apply IHn).	0.165469884872	59
Coq.Lists.Streams.Zip.Str_nth_zipWith	40	0.0.1.0.0.0	synth with cache (only 1: induction n; only 1: reflexivity; only 1: intros [x xs] [y ys]; only 1: unfold Str_nth in *; only 1: simpl in *; only 1: apply IHn).	0.167495012283	48
Coq.Lists.List.Facts.nil_cons	40	129.2	synth with cache (only 1: intro n; only 1: now f_equal).	0.0826218128204	221
Coq.Lists.List.Facts.destruct_list	40
Coq.Lists.List.Facts.hd_error_tl_repr	40
Coq.Lists.List.Facts.hd_error_some_nil	40	0.512.0.0.0.385.4	synth with cache (only 1: intro n; only 1: destruct n; only 1: unfold hd_error, tl; only 1: firstorder  discriminate; only 1: unfold hd_error, tl; only 1: intros Hq _; only 1: discriminate).	1.43378591537	2848
Coq.Lists.List.Facts.length_zero_iff_nil	40	0.0.0.4.3.194	synth with cache (only 1: compute; only 1: destruct l; only 1: split; only 1: auto; only 1: reflexivity; only 1: firstorder  discriminate).	1.40994596481	5456
Coq.Lists.List.Facts.hd_error_nil	40	1	synth with cache (only 1: firstorder  discriminate).	0.013943195343	2
Coq.Lists.List.Facts.hd_error_cons	40	2.0	synth with cache (only 1: unfold hd_error, tl; only 1: firstorder  discriminate).	0.0212640762329	4
Coq.Lists.List.Facts.in_eq	40	0.0	synth with cache (only 1: intros a r; only 1: firstorder  discriminate).	0.0222141742706	2
Coq.Lists.List.Facts.in_cons	40	65.321.0.0	synth with cache (only 1: destruct l as [| x xs]; only 1: firstorder  discriminate; only 1: repeat red; only 1: firstorder).	0.0582070350647	39
Coq.Lists.List.Facts.not_in_cons	40	0.192.321.0.3	synth with cache (only 1: simpl in *; only 1: split; only 1: intros H'; only 1: firstorder; only 1: intuition).	0.65110206604	918
Coq.Lists.List.Facts.in_nil	40	2.0.0	synth with cache (only 1: intro n; only 1: simpl; only 1: firstorder).	0.0238630771637	5
Coq.Lists.List.Facts.in_split	40
Coq.Lists.List.Facts.in_inv	40	0	synth with cache (only 1: auto).	0.0140380859375	1
Coq.Lists.List.Facts.in_dec	40
Coq.Lists.List.Facts.app_cons_not_nil	40
Coq.Lists.List.Facts.app_nil_l	40	386.64.0	synth with cache (only 1: simpl; only 1: intros a; only 1: Morphisms.solve_proper).	0.0351309776306	26
Coq.Lists.List.Facts.app_nil_r	40	261.2.0.0.7.64	synth with cache (only 1: intro; only 1: induction l; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: now Morphisms.f_equiv).	4.14424395561	9218
Coq.Lists.List.Facts.app_nil_end	40	0.0.0.0.0.1	synth with cache (only 1: induction l; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: f_equal; only 1: auto).	0.537247180939	202
Coq.Lists.List.Facts.app_assoc	40	519.0.257.64	synth with cache (only 1: intros n IH a; only 1: induction n; only 1: auto; only 1: Tactics.program_simpl).	7.32699394226	9551
Coq.Lists.List.Facts.app_assoc_reverse	40	0.0.0.0.0.0.0	synth with cache (only 1: intros l m n; only 1: induction l; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: f_equal; only 1: auto).	0.050183057785	7
Coq.Lists.List.Facts.app_comm_cons	40	0	synth with cache (only 1: auto using app_assoc).	0.0168368816376	1
Coq.Lists.List.Facts.app_eq_nil	40	0.0.2.128	synth with cache (only 1: intros [| a] b; only 1: auto; only 1: simpl; only 1: inversion 1).	0.153080940247	213
Coq.Lists.List.Facts.app_eq_unit	40
Coq.Lists.List.Facts.app_inj_tail	40
Coq.Lists.List.Facts.app_length	40	128.0.0.320.1.1.1.0	synth with cache (only 1: destruct l as [| x l]; only 1: simpl; only 1: reflexivity; only 1: intros; only 1: induction l as [| a0 l IHl]; only 1: simpl; only 1: reflexivity; only 1: CRelationClasses.simpl_crelation).	0.623960018158	777
Coq.Lists.List.Facts.in_app_or	40
Coq.Lists.List.Facts.in_or_app	40	0.0.449.1.0.1	synth with cache (only 1: induction l; only 1: simpl; only 1: intuition; only 1: intros n Hn; only 1: simpl; only 1: intuition).	1.24873614311	2437
Coq.Lists.List.Facts.in_app_iff	40	448.0.0.1.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.257	synth with cache (only 1: repeat split; only 1: elim l; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros a0 y H H0; only 1: elim H0; only 1: auto; only 1: intro H1; only 1: elim (H H1); only 1: auto; only 1: auto; only 1: elim l; only 1: simpl; only 1: intro H; only 1: elim H; only 1: intro H0; only 1: elim H0; only 1: auto; only 1: simpl; only 1: intuition auto; Nat.Private_OrderTac.Tac.subst_eqns; eauto using (RelationClasses.StrictOrder_Transitive x y z) with *).	4.65069293976	9678
Coq.Lists.List.Facts.app_inv_head	40	66.0.132.384.1.0.4	synth with cache (only 1: induction l; only 1: simpl; only 1: now symmetry; only 1: intro; only 1: intros H; only 1: simpl; only 1: CRelationClasses.simpl_crelation).	23.5104398727	25430
Coq.Lists.List.Facts.app_inv_tail	40
Coq.Lists.List.Elts.nth_in_or_default	40
Coq.Lists.List.Elts.nth_S_cons	40	0.0.1	synth with cache (only 1: intros n l d; only 1: simpl; only 1: auto).	0.0277709960938	4
Coq.Lists.List.Elts.nth_default_eq	40
Coq.Lists.List.Elts.nth_In	40
Coq.Lists.List.Elts.In_nth	40
Coq.Lists.List.Elts.nth_overflow	40
Coq.Lists.List.Elts.nth_indep	40
Coq.Lists.List.Elts.app_nth1	40
Coq.Lists.List.Elts.app_nth2	40	0.0.65.4.0.3.0.1.0.2.0	synth with cache (only 1: induction l; only 1: simpl; only 1: inversion 1; only 1: auto; only 1: simpl; only 1: auto with arith; only 1: intros l' d [| n]; only 1: intro H1; only 1: now Nat.nzsimpl; only 1: simpl; only 1: auto with arith).	24.4585719109	13105
Coq.Lists.List.Elts.nth_split	40
Coq.Lists.List.Elts.nth_error_In	40
Coq.Lists.List.Elts.In_nth_error	40
Coq.Lists.List.Elts.nth_error_None	40
Coq.Lists.List.Elts.nth_error_Some	40
Coq.Lists.List.Elts.nth_error_split	40
Coq.Lists.List.Elts.nth_error_app1	40
Coq.Lists.List.Elts.nth_error_app2	40
Coq.Lists.List.Elts.nth_error_nth	40	0.321.1.579.65.0.0.0.0.0.0.0.4	synth with cache (only 1: induction l; only 1: destruct n; only 1: simpl; only 1: firstorder  discriminate; only 1: simpl; only 1: firstorder  discriminate; only 1: intros [| n]; only 1: simpl; only 1: intros H ?; only 1: CRelationClasses.simpl_crelation; only 1: simpl; only 1: intros H'; only 1: auto).	36.3190391064	41753
Coq.Lists.List.Elts.nth_error_nth'	40	256.2.1.0.193.0.3.0	synth with cache (only 1: induction l; only 1: simpl; only 1: easy; only 1: induction n as [| n IH]; only 1: simpl; only 1: now auto with arith; only 1: simpl; only 1: intuition).	5.23909497261	7029
Coq.Lists.List.Elts.remove_In	40
Coq.Lists.List.Elts.app_removelast_last	40
Coq.Lists.List.Elts.exists_last	40
Coq.Lists.List.Elts.removelast_app	40
Coq.Lists.List.Elts.count_occ_In	40
Coq.Lists.List.Elts.count_occ_not_In	40
Coq.Lists.List.Elts.count_occ_nil	40	2.0	synth with cache (only 1: simpl; only 1: split).	0.0213689804077	4
Coq.Lists.List.Elts.count_occ_inv_nil	40
Coq.Lists.List.Elts.count_occ_cons_eq	40
Coq.Lists.List.Elts.count_occ_cons_neq	40	0.0.0	synth with cache (only 1: intros H; only 1: simpl; only 1: now destruct (eq_dec x y)).	0.0291650295258	3
Coq.Lists.List.ListOps.rev_app_distr	40
Coq.Lists.List.ListOps.rev_unit	40
Coq.Lists.List.ListOps.rev_involutive	40
Coq.Lists.List.ListOps.in_rev	40
Coq.Lists.List.ListOps.rev_length	40	516.128.1.128.0.0.0.0.0.6.2.0.0.0.5	synth with cache (only 1: destruct l; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: rewrite app_length; only 1: revert l; only 1: induction l; only 1: auto with arith; only 1: simpl; only 1: rewrite app_length; only 1: simpl; only 1: Nat.nzsimpl; only 1: simpl in *; only 1: Morphisms.f_equiv; only 1: eauto using Nat.Private_OrderTac.Tac.eq_trans, Nat.Private_OrderTac.Tac.eq_sym).	32.4289429188	18652
Coq.Lists.List.ListOps.rev_nth	40
Coq.Lists.List.ListOps.rev_append_rev	40
Coq.Lists.List.ListOps.rev_alt	40
Coq.Lists.List.ListOps.Reverse_Induction.rev_list_ind	40	64.3.0.65.3	synth with cache (only 1: intros; only 1: induction l as [| a l IH]; only 1: trivial; only 1: simpl in *; only 1: intuition).	5.48632597923	13398
Coq.Lists.List.ListOps.Reverse_Induction.rev_ind	40
Coq.Lists.List.ListOps.concat_nil	40	0	synth with cache (only 1: split).	0.0145070552826	1
Coq.Lists.List.ListOps.concat_cons	40	0.0.0.0.0.0.0	synth with cache (only 1: induction x as [| a l IHl]; only 1: simpl; only 1: intros; only 1: auto; only 1: intro y; only 1: simpl; only 1: trivial).	0.0486631393433	7
Coq.Lists.List.ListOps.concat_app	40
Coq.Lists.List.ListOps.list_eq_dec	40	12	synth with cache (only 1: decide equality).	32.1751060486	41326
Coq.Lists.List.Map.map_cons	40	128	synth with cache (only 1: now Nat.nzsimpl').	0.0310089588165	9
Coq.Lists.List.Map.in_map	40
Coq.Lists.List.Map.in_map_iff	40	65.320.0.0.133.0.0.0	synth with cache (only 1: induction l; only 1: intro n; only 1: firstorder  (subst; auto); only 1: symmetry; only 1: intuition; only 1: firstorder  (subst; auto); only 1: assert (succ_r : forall x y, x + S y = S (x + y)) by now induction x; only 1: firstorder).	2.88346910477	5931
Coq.Lists.List.Map.map_length	40	1.256.0.0.0	synth with cache (only 1: induction l; only 1: firstorder  (subst; auto); only 1: simpl; only 1: Nat.bitwise; only 1: auto).	0.0548229217529	27
Coq.Lists.List.Map.map_nth	40
Coq.Lists.List.Map.map_nth_error	40
Coq.Lists.List.Map.map_app	40	1.0.0.0.0.64.1.320.0.0.0.1.2	synth with cache (only 1: destruct l as [| x l]; only 1: intros l2; only 1: simpl; only 1: reflexivity; only 1: intro y; only 1: destr_bool; only 1: f_equal; only 1: induction l as [| a l IHl]; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: f_equal; only 1: auto).	2.77720618248	4842
Coq.Lists.List.Map.map_rev	40
Coq.Lists.List.Map.map_eq_nil	40	193.0.1.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: destr_bool).	0.227448940277	211
Coq.Lists.List.Map.count_occ_map	40
Coq.Lists.List.Map.in_flat_map	40
Coq.Lists.List.flat_map_concat_map	40	1.0.0.0.0.1.65	synth with cache (only 1: intros n m; only 1: induction l; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: f_equal; only 1: auto).	1.46900296211	871
Coq.Lists.List.concat_map	40	0.0.384.0.0.0.0.66.2.2	synth with cache (only 1: intros l2; only 1: intros l1; only 1: firstorder; only 1: induction l as [| x l IH]; only 1: simpl; only 1: auto; only 1: simpl; only 1: CRelationClasses.simpl_crelation; only 1: rewrite map_app; only 1: reflexivity).	17.8653399944	13318
Coq.Lists.List.map_id	40	1.0.0.0.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: f_equal; only 1: auto).	0.0420660972595	7
Coq.Lists.List.map_map	40	448.0.0.0.0.0.384.258	synth with cache (only 1: intros m Hm; only 1: intros n IH; only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: f_equal; only 1: easy).	1.43198609352	835
Coq.Lists.List.map_ext_in	40
Coq.Lists.List.ext_in_map	40	2.66.64.320.2.1.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: intros; only 1: contradiction; only 1: intro H1; only 1: CRelationClasses.simpl_crelation; only 1: firstorder; only 1: firstorder  (subst; auto)).	10.2163820267	11157
Coq.Lists.List.map_ext_in_iff	40
Coq.Lists.List.map_ext	40	384.1.0.0.2.0	synth with cache (only 1: induction l; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: rewrite IHl; only 1: now rewrite <- H).	0.315242052078	297
Coq.Lists.List.Fold_Left_Recursor.fold_left_app	40	258.0.0.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: Nat.auto').	0.0432078838348	19
Coq.Lists.List.fold_left_length	40
Coq.Lists.List.fold_right_app	40	0.0.2.66.0.0.0.0.514	synth with cache (only 1: intros H; only 1: induction l; only 1: intros; only 1: auto; only 1: simpl; only 1: intros LT; only 1: intros; only 1: rewrite IHl; only 1: reflexivity).	2.03706598282	4132
Coq.Lists.List.fold_left_rev_right	40
Coq.Lists.List.fold_symmetric	40
Coq.Lists.List.Bool.existsb_exists	40
Coq.Lists.List.Bool.existsb_nth	40
Coq.Lists.List.Bool.existsb_app	40	256.0.1.130.65.2.1	synth with cache (only 1: intros l1; only 1: intro y; only 1: symmetry; only 1: induction l1 as [| x1 l1]; only 1: simpl; only 1: auto; only 1: CRelationClasses.simpl_crelation).	9.4481959343	5023
Coq.Lists.List.Bool.forallb_forall	40
Coq.Lists.List.Bool.forallb_app	40	1.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction l1; only 1: intros l2; only 1: simpl; only 1: solve [ auto ]; only 1: intros l2; only 1: simpl; only 1: case (f a); only 1: simpl; only 1: solve [ auto ]; only 1: simpl; only 1: solve [ auto ]).	0.174273967743	161
Coq.Lists.List.Bool.filter_In	40
Coq.Lists.List.Bool.filter_app	40
Coq.Lists.List.Bool.concat_filter_map	40
Coq.Lists.List.Bool.find_some	40
Coq.Lists.List.Bool.find_none	40	0.0.0.64.1.0.3.0.0.0	synth with cache (only 1: induction l as [| a l IH]; only 1: simpl; only 1: easy; only 1: simpl; only 1: case_eq (f a); only 1: intros; only 1: discriminate; only 1: intros Ha Eq; only 1: intuition; only 1: intuition congruence).	20.7551519871	8684
Coq.Lists.List.Bool.partition_cons1	40	0.64.1.322.1.0.1	synth with cache (only 1: firstorder; only 1: simpl; only 1: case_eq (f a); only 1: rewrite H  at 1; only 1: intros; only 1: CRelationClasses.simpl_crelation; only 1: intuition congruence).	2.96493387222	2764
Coq.Lists.List.Bool.partition_cons2	40	0.0	synth with cache (only 1: simpl; only 1: now intros -> ->).	0.0239720344543	2
Coq.Lists.List.Bool.partition_length	40
Coq.Lists.List.Bool.partition_inv_nil	40
Coq.Lists.List.Bool.elements_in_partition	40
Coq.Lists.List.Filtering.filter_map	40
Coq.Lists.List.Filtering.filter_ext_in	40
Coq.Lists.List.Filtering.ext_in_filter	40
Coq.Lists.List.Filtering.filter_ext_in_iff	40
Coq.Lists.List.Filtering.filter_ext	40	0.0.0.0	synth with cache (only 1: intros f g l H; only 1: rewrite filter_map; only 1: apply map_ext_in; only 1: auto).	0.027626991272	4
Coq.Lists.List.ListPairs.in_split_l	40
Coq.Lists.List.ListPairs.in_split_r	40	0.0.0.1.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: intros; only 1: auto; only 1: simpl; only 1: intros; only 1: destruct p; only 1: destruct a; only 1: destruct (split l); only 1: simpl in *; only 1: destruct H; only 1: injection H; only 1: auto; only 1: right; only 1: apply (IHl (a0, b) H)).	1.02765202522	1152
Coq.Lists.List.ListPairs.split_nth	40
Coq.Lists.List.ListPairs.split_length_l	40	640.0.2.0.323.0.1.0.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: destruct a; only 1: simpl; only 1: Nat.bitwise; only 1: destruct (split l); only 1: destruct (split l); only 1: simpl in *; only 1: Nat.auto').	9.28116703033	3462
Coq.Lists.List.ListPairs.split_length_r	40	0.0.0.0.0.0.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: destruct a; only 1: destruct (split l); only 1: simpl; only 1: auto).	0.0557599067688	8
Coq.Lists.List.ListPairs.split_combine	40
Coq.Lists.List.ListPairs.combine_split	40
Coq.Lists.List.ListPairs.in_combine_l	40
Coq.Lists.List.ListPairs.in_combine_r	40	0.1.193.0.192.0.0.0.0.4.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: firstorder  (subst; auto); only 1: destruct l'; only 1: simpl; only 1: contradiction; only 1: simpl; only 1: intros H'; only 1: intros; only 1: firstorder; only 1: injection H; only 1: auto).	4.3835940361	10031
Coq.Lists.List.ListPairs.combine_length	40	1.0.0.0.3.1.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: easy; only 1: intros [| n]; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	4.93299198151	5439
Coq.Lists.List.ListPairs.combine_nth	40
Coq.Lists.List.ListPairs.in_prod_aux	40	0.1.2.0.0.0.0.0.65	synth with cache (only 1: intros EQ; only 1: induction l; only 1: firstorder  (subst; auto); only 1: intros; only 1: simpl in *; only 1: destruct H; only 1: destruct H; only 1: auto; only 1: auto).	1.17501306534	2939
Coq.Lists.List.ListPairs.in_prod	40
Coq.Lists.List.ListPairs.in_prod_iff	40
Coq.Lists.List.ListPairs.prod_length	40
Coq.Lists.List.length_order.lel_refl	40	2.256	synth with cache (only 1: RelationClasses.reduce; only 1: auto with arith).	0.0199639797211	20
Coq.Lists.List.length_order.lel_trans	40	0.1.0.0.130.64	synth with cache (only 1: revert m; only 1: intro p; only 1: unfold lel; only 1: intros; only 1: rewrite H; only 1: auto).	0.929052829742	1881
Coq.Lists.List.length_order.lel_cons_cons	40	1.0.0.0	synth with cache (only 1: unfold lel; only 1: simpl; only 1: intros; only 1: auto with arith).	0.104684114456	17
Coq.Lists.List.length_order.lel_cons	40	0.0.0	synth with cache (only 1: unfold lel; only 1: simpl; only 1: auto with arith).	0.0208210945129	3
Coq.Lists.List.length_order.lel_tail	40	0.0.1	synth with cache (only 1: unfold lel; only 1: simpl; only 1: auto with arith).	0.0187139511108	4
Coq.Lists.List.length_order.lel_nil	40	131.0.7	synth with cache (only 1: destruct l' as [| y l']; only 1: trivial; only 1: now Morphisms.f_equiv).	17.5710411072	46246
Coq.Lists.List.SetIncl.incl_refl	40	1	synth with cache (only 1: solve [ auto ]).	0.0158040523529	2
Coq.Lists.List.SetIncl.incl_tl	40	64.64	synth with cache (only 1: intros Hfst Hsnd; only 1: firstorder).	0.0376780033112	48
Coq.Lists.List.SetIncl.incl_tran	40	1	synth with cache (only 1: auto).	0.0111129283905	2
Coq.Lists.List.SetIncl.incl_appl	40	0	synth with cache (only 1: auto with datatypes).	0.012580871582	1
Coq.Lists.List.SetIncl.incl_appr	40	0	synth with cache (only 1: auto with datatypes).	0.0136737823486	1
Coq.Lists.List.SetIncl.incl_cons	40	2.64.64	synth with cache (only 1: intuition; only 1: red; only 1: firstorder  (subst; auto)).	0.221961021423	320
Coq.Lists.List.SetIncl.incl_app	40	0.1.1.0.67	synth with cache (only 1: induction l as [| a l IH]; only 1: auto with datatypes; only 1: intro y; only 1: simpl; only 1: firstorder).	3.69200086594	4408
Coq.Lists.List.Cutting.firstn_nil	40	384.0.512.345	synth with cache (only 1: compute; only 1: Nat.induct ltac:(n); only 1: reflexivity; only 1: now Nat.nzsimpl').	2.20149898529	18096
Coq.Lists.List.Cutting.firstn_cons	40	0.1	synth with cache (only 1: simpl; only 1: auto).	0.0193600654602	3
Coq.Lists.List.Cutting.firstn_all	40	66.0.0.1.4	synth with cache (only 1: induction l as [| x l IH]; only 1: now simpl; only 1: simpl; only 1: f_equal; only 1: assumption).	0.201551914215	323
Coq.Lists.List.Cutting.firstn_all2	40	0.512.0.0.3.0.4.0.0.0.0.0	synth with cache (only 1: induction n; only 1: intros [| a l] H; only 1: now simpl; only 1: simpl; only 1: simpl in H; only 1: now simpl; only 1: simpl; only 1: intros [| x l] H; only 1: simpl in *; only 1: now simpl; only 1: Morphisms.f_equiv; only 1: auto with arith).	2.17235684395	3629
Coq.Lists.List.Cutting.firstn_O	40	0	synth with cache (only 1: now simpl).	0.0149660110474	1
Coq.Lists.List.Cutting.firstn_le_length	40	1.0.0.0.0.129.0.0.0.2.389	synth with cache (only 1: Nat.induct ltac:(n); only 1: induction l; only 1: now simpl; only 1: simpl; only 1: auto; only 1: intros Hx Hy; only 1: simpl; only 1: destruct l as [| x xs]; only 1: now auto with arith; only 1: simpl; only 1: auto with arith).	29.4452080727	30814
Coq.Lists.List.Cutting.firstn_length_le	40
Coq.Lists.List.Cutting.firstn_app	40
Coq.Lists.List.Cutting.firstn_app_2	40
Coq.Lists.List.Cutting.firstn_firstn	40
Coq.Lists.List.Cutting.firstn_skipn_comm	40
Coq.Lists.List.Cutting.skipn_firstn_comm	40
Coq.Lists.List.Cutting.skipn_O	40	0.0.0.0	synth with cache (only 1: induction l as [| a l IHl]; only 1: now simpl; only 1: simpl; only 1: auto).	0.0287179946899	4
Coq.Lists.List.Cutting.skipn_nil	40	448.2	synth with cache (only 1: intros; only 1: now induction n).	0.0285360813141	11
Coq.Lists.List.Cutting.skipn_cons	40	0	synth with cache (only 1: now simpl).	0.0147910118103	1
Coq.Lists.List.Cutting.skipn_none	40	320.0.2.2	synth with cache (only 1: intros; only 1: induction l as [| ? ? H]; only 1: now simpl; only 1: now Nat.nzsimpl').	0.226889133453	334
Coq.Lists.List.Cutting.skipn_all2	40	385.0.0.0.256.0.0.0	synth with cache (only 1: induction n as [| k iHk]; only 1: intro; only 1: now destruct l; only 1: induction l as [| a l' Hrec]; only 1: simpl; only 1: now reflexivity; only 1: simpl; only 1: auto with *).	0.69415807724	720
Coq.Lists.List.Cutting.firstn_skipn	40
Coq.Lists.List.Cutting.firstn_length	40	2.0.1.0.0.0.0.0.4	synth with cache (only 1: induction n as [| k iHk]; only 1: simpl; only 1: auto; only 1: simpl; only 1: destruct l as [| x xs]; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto with arith).	3.08039999008	5044
Coq.Lists.List.Cutting.skipn_length	40	1.0.0.0.0.0.0.0.0.0.3	synth with cache (only 1: induction n; only 1: destruct l; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: destruct l; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	8.51318502426	7557
Coq.Lists.List.Cutting.skipn_all	40	320.0.2	synth with cache (only 1: induction l as [| ? ? H]; only 1: now simpl; only 1: now Nat.nzsimpl').	0.127336025238	88
Coq.Lists.List.Cutting.skipn_app	40	0.0.0.257.64.0.0.0.0.0	synth with cache (only 1: induction n as [| k iHk]; only 1: intros l1 l2; only 1: now simpl; only 1: intros l1 l2; only 1: destruct l1 as [| x xs]; only 1: Nat.nzsimpl; only 1: auto using in_app_or, in_or_app; only 1: rewrite <- app_comm_cons; only 1: simpl; only 1: apply iHk).	0.445955038071	266
Coq.Lists.List.Cutting.firstn_skipn_rev	40
Coq.Lists.List.Cutting.firstn_rev	40
Coq.Lists.List.Cutting.skipn_rev	40
Coq.Lists.List.Cutting.removelast_firstn	40
Coq.Lists.List.Cutting.firstn_removelast	40
Coq.Lists.List.Combining.combine_nil	40	0.0.0.320	synth with cache (only 1: compute; only 1: destruct l as [| x xs]; only 1: auto; only 1: auto).	0.0469110012054	32
Coq.Lists.List.Combining.combine_firstn_l	40	3.0.0.0.0.0.0.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: destruct l'; only 1: simpl; only 1: auto; only 1: simpl; only 1: f_equal; only 1: trivial).	1.19996595383	167
Coq.Lists.List.Combining.combine_firstn_r	40	0.0.0.0.0.1.0.0.0.0.1.6.1.0	synth with cache (only 1: induction l as [| x l IHl]; only 1: simpl; only 1: intros; only 1: destruct l' as [| x' l']; only 1: reflexivity; only 1: simpl; only 1: auto; only 1: intros l'; only 1: destruct l' as [| x' l']; only 1: reflexivity; only 1: simpl; only 1: specialize IHl with (l' := l'); only 1: rewrite <- IHl; only 1: reflexivity).	5.8220539093	17411
Coq.Lists.List.Combining.combine_firstn	40
Coq.Lists.List.Add.Add_app	40
Coq.Lists.List.Add.Add_split	40
Coq.Lists.List.Add.Add_in	40	2.323.1.0.1.0	synth with cache (only 1: induction 1; only 1: simpl; only 1: intuition; only 1: intros; only 1: destr_bool; only 1: firstorder  (subst; auto)).	10.1812529564	11307
Coq.Lists.List.Add.Add_length	40	0.0.0.1.0	synth with cache (only 1: induction 1; only 1: simpl; only 1: auto; only 1: simpl in *; only 1: auto).	0.108955860138	77
Coq.Lists.List.Add.Add_inv	40
Coq.Lists.List.Add.incl_Add_inv	40
Coq.Lists.List.ReDun.NoDup_Add	40
Coq.Lists.List.ReDun.NoDup_remove	40
Coq.Lists.List.ReDun.NoDup_remove_1	40
Coq.Lists.List.ReDun.NoDup_remove_2	40
Coq.Lists.List.ReDun.NoDup_cons_iff	40	0.0.0.0	synth with cache (only 1: split; only 1: inversion_clear 1; only 1: now split; only 1: now constructor).	0.0482220649719	4
Coq.Lists.List.ReDun.nodup_fixed_point	40
Coq.Lists.List.ReDun.nodup_In	40
Coq.Lists.List.ReDun.NoDup_nodup	40
Coq.Lists.List.ReDun.nodup_inv	40
Coq.Lists.List.ReDun.NoDup_count_occ	40
Coq.Lists.List.ReDun.NoDup_count_occ'	40
Coq.Lists.List.ReDun.NoDup_nth_error	40
Coq.Lists.List.ReDun.NoDup_nth	40
Coq.Lists.List.ReDun.NoDup_incl_length	40
Coq.Lists.List.ReDun.NoDup_length_incl	40
Coq.Lists.List.NoDup_map_inv	40
Coq.Lists.List.NatSeq.seq_length	40
Coq.Lists.List.NatSeq.seq_nth	40
Coq.Lists.List.NatSeq.seq_shift	40
Coq.Lists.List.NatSeq.in_seq	40
Coq.Lists.List.NatSeq.seq_NoDup	40
Coq.Lists.List.NatSeq.seq_app	40
Coq.Lists.List.Exists_Forall.One_predicate.Exists_exists	40
Coq.Lists.List.Exists_Forall.One_predicate.Exists_nil	40	0.1.0.1	synth with cache (only 1: split; only 1: firstorder; only 1: inversion H; only 1: firstorder).	0.0867221355438	51
Coq.Lists.List.Exists_Forall.One_predicate.Exists_cons	40
Coq.Lists.List.Exists_Forall.One_predicate.Exists_dec	40
Coq.Lists.List.Exists_Forall.One_predicate.Forall_forall	40	1.0.0.0.0.2.325.0.0.1.0	synth with cache (only 1: split; only 1: induction 1; only 1: intros a H; only 1: inversion_clear H; only 1: intros n m; only 1: firstorder  (subst; auto); only 1: induction l; only 1: firstorder; only 1: simpl; only 1: intros; only 1: auto).	6.63542103767	19614
Coq.Lists.List.Exists_Forall.One_predicate.Forall_inv	40	0.0.512	synth with cache (only 1: intros LTa LTb; only 1: inversion 1; only 1: auto).	0.0626900196075	87
Coq.Lists.List.Exists_Forall.One_predicate.Forall_rect	40
Coq.Lists.List.Exists_Forall.One_predicate.Forall_dec	40
Coq.Lists.List.Exists_Forall.Forall_inv_tail	40	1.257	synth with cache (only 1: intros c H H'; only 1: abstract now inversion 1).	0.0615291595459	62
Coq.Lists.List.Exists_Forall.Exists_impl	40	1.1.0.1.0.68.385.192.320	synth with cache (only 1: intros Hab; only 1: intros n m H1; only 1: intuition; only 1: elim H; only 1: intros; only 1: constructor; only 1: firstorder; only 1: right; only 1: auto).	5.15004110336	22410
Coq.Lists.List.Exists_Forall.Forall_Exists_neg	40
Coq.Lists.List.Exists_Forall.Exists_Forall_neg	40
Coq.Lists.List.Exists_Forall.neg_Forall_Exists_neg	40
Coq.Lists.List.Exists_Forall.Forall_Exists_dec	40
Coq.Lists.List.Exists_Forall.Forall_impl	40	0.2.0.0.1.0.0.0.321.197.200	synth with cache (only 1: intro EQ; only 1: intro H'; only 1: intro m; only 1: induction l as [| a l' Hrec]; only 1: firstorder; only 1: constructor; only 1: right; only 1: inversion_clear H; only 1: auto; only 1: inversion_clear H; only 1: firstorder).	13.1925299168	62520
Coq.Lists.List.Forall2.Forall2_refl	40	2	synth with cache (only 1: auto).	0.0141489505768	3
Coq.Lists.List.Forall2.Forall2_app_inv_l	40
Coq.Lists.List.Forall2.Forall2_app_inv_r	40
Coq.Lists.List.Forall2.Forall2_app	40
Coq.Lists.List.ForallPairs.ForallOrdPairs_In	40
Coq.Lists.List.ForallPairs.ForallPairs_ForallOrdPairs	40
Coq.Lists.List.ForallPairs.ForallOrdPairs_ForallPairs	40
Coq.Lists.List.Repeat.repeat_length	40	0.0.0.1.1	synth with cache (only 1: induction n as [| n IH]; only 1: simpl; only 1: reflexivity; only 1: simpl in *; only 1: now f_equal).	0.0881009101868	132
Coq.Lists.List.Repeat.repeat_spec	40
Coq.Lists.SetoidPermutation.Permutation.Equivalence_instance_0	40
Coq.Lists.SetoidPermutation.Permutation.PermutationA_cons	40	0.2	synth with cache (only 1: intros x x' Hxx' l l' Hll'; only 1: auto).	0.813378095627	70
Coq.Lists.SetoidPermutation.Permutation.PermutationA_app_head	40	0.0.0.2.64.0.0.0.0.0.0.0.2	synth with cache (only 1: induction l; only 1: induction 1; only 1: intuition; only 1: apply permA_skip; only 1: intuition; only 1: intuition; only 1: simpl; only 1: eauto; only 1: compute; only 1: eauto; only 1: intros; only 1: repeat rewrite <- app_comm_cons; only 1: intuition).	1.12793183327	694
Coq.Lists.SetoidPermutation.Permutation.PermutationA_app	40
Coq.Lists.SetoidPermutation.Permutation.PermutationA_app_tail	40	193.2	synth with cache (only 1: intros; only 1: now rewrite <- H).	0.243568181992	238
Coq.Lists.SetoidPermutation.Permutation.PermutationA_cons_append	40
Coq.Lists.SetoidPermutation.Permutation.PermutationA_app_comm	40
Coq.Lists.SetoidPermutation.Permutation.PermutationA_cons_app	40
Coq.Lists.SetoidPermutation.Permutation.PermutationA_middle	40	0	synth with cache (only 1: now rewrite app_comm_cons, (PermutationA_cons_append l₁ x), <- app_assoc).	0.0304889678955	1
Coq.Lists.SetoidPermutation.Permutation.PermutationA_equivlistA	40
Coq.Lists.SetoidPermutation.Permutation.NoDupA_equivlistA_PermutationA	40
Coq.Lists.SetoidPermutation.Permutation.Permutation_eqlistA_commute	40
Coq.Lists.SetoidPermutation.Permutation.PermutationA_decompose	40
Coq.Lists.SetoidPermutation.Permutation.Permutation_PermutationA	40
Coq.Lists.SetoidPermutation.Permutation.eqlistA_PermutationA	40	1.0.0	synth with cache (only 1: induction 1; only 1: intuition; only 1: auto).	0.037791967392	4
Coq.Lists.SetoidPermutation.Permutation.NoDupA_equivlistA_decompose	40
Coq.Lists.SetoidPermutation.Permutation.PermutationA_preserves_NoDupA	40
Coq.Lists.StreamMemo.MemoFunction.memo_get_correct	40
Coq.Lists.StreamMemo.MemoFunction.imemo_get_correct	40
Coq.Lists.StreamMemo.DependentMemoFunction.dmemo_get_correct	40
Coq.Lists.StreamMemo.DependentMemoFunction.dimemo_get_correct	40
Coq.Lists.SetoidList.Type_with_equality.InA_altdef	40	0.65.0.2.128.2.2.1.0.1	synth with cache (only 1: intros; only 1: split; only 1: induction 1 as [| a l [| ]]; only 1: auto; only 1: auto; only 1: revert l; only 1: firstorder; only 1: induction 1; only 1: auto using Sorted, LocallySorted, HdRel; only 1: now constructor).	3.35669088364	10006
Coq.Lists.SetoidList.Type_with_equality.InA_cons	40	0.0.0.0.0.1.0.3	synth with cache (only 1: intros; only 1: split; only 1: inversion 1; only 1: auto; only 1: auto; only 1: induction 1; only 1: auto; only 1: auto).	0.835783958435	1307
Coq.Lists.SetoidList.Type_with_equality.InA_nil	40	256	synth with cache (only 1: easy).	0.0681920051575	87
Coq.Lists.SetoidList.Type_with_equality.InA_alt	40	0.0.0.0.0.0.0.384.0.2.257	synth with cache (only 1: intro H1; only 1: split; only 1: induction 1; only 1: assert (succ_r : forall x y, x + S y = S (x + y)) by now induction x; only 1: firstorder; only 1: firstorder; only 1: induction l; only 1: firstorder; only 1: firstorder; only 1: subst; only 1: auto).	37.8868830204	71760
Coq.Lists.SetoidList.Type_with_equality.NoDupA_altdef	40
Coq.Lists.SetoidList.Type_with_equality.incl_nil	40	321.3.512	synth with cache (only 1: intro; only 1: intros H; only 1: now PeanoNat.Nat.nzsimpl').	0.344869852066	483
Coq.Lists.SetoidList.Type_with_equality.eqlistA_altdef	40	2.2.0.0.2.0.0.67	synth with cache (only 1: intros l' n; only 1: constructor; only 1: induction 1 as [l| x l l' AD IH]; only 1: auto; only 1: auto; only 1: induction 1; only 1: auto; only 1: auto).	3.06239390373	6026
Coq.Lists.SetoidList.Type_with_equality.equivlist_equiv	40	32	synth with cache (only 1: firstorder).	13.430629015	16156
Coq.Lists.SetoidList.Type_with_equality.eqlistA_equiv	40
Coq.Lists.SetoidList.Type_with_equality.eqlistA_equivlistA	40
Coq.Lists.SetoidList.Type_with_equality.InA_compat	40
Coq.Lists.SetoidList.Type_with_equality.InA_eqA	40	0.0.64.64	synth with cache (only 1: intros H; only 1: intros Az LS; only 1: rewrite 2!InA_alt; only 1: firstorder).	0.683815956116	183
Coq.Lists.SetoidList.Type_with_equality.In_InA	40	1.0.5	synth with cache (only 1: firstorder; only 1: rewrite InA_alt; only 1: firstorder).	0.535520076752	1060
Coq.Lists.SetoidList.Type_with_equality.InA_split	40
Coq.Lists.SetoidList.Type_with_equality.InA_app	40
Coq.Lists.SetoidList.Type_with_equality.InA_app_iff	40
Coq.Lists.SetoidList.Type_with_equality.InA_rev	40
Coq.Lists.SetoidList.Type_with_equality.InA_singleton	40	0.0.3	synth with cache (only 1: intuition; only 1: invlist InA; only 1: auto).	0.120921134949	96
Coq.Lists.SetoidList.Type_with_equality.InA_double_head	40	0.0	synth with cache (only 1: do 2 rewrite InA_alt; only 1: firstorder).	0.0983819961548	2
Coq.Lists.SetoidList.Type_with_equality.InA_permute_heads	40	0.0	synth with cache (only 1: do 2 rewrite InA_alt; only 1: firstorder).	0.199018001556	2
Coq.Lists.SetoidList.Type_with_equality.InA_app_idem	40
Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_app	40
Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_rev	40
Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_split	40
Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_swap	40
Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_singleton	40	192	synth with cache (only 1: now right).	0.0334401130676	43
Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_cons_proper	40
Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_app_proper	40
Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_cons_nil	40
Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_nil_eq	40
Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_double_head	40	0.0.1	synth with cache (only 1: intros E; only 1: rewrite !InA_cons; only 1: tauto).	0.0572490692139	4
Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_permute_heads	40	0.0.257	synth with cache (only 1: intro; only 1: rewrite !InA_cons; only 1: tauto).	0.13596701622	20
Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_app_idem	40	0.0.320	synth with cache (only 1: intro n; only 1: rewrite InA_app_iff; only 1: tauto).	0.0419290065765	23
Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_NoDupA_split	40
Coq.Lists.SetoidList.Type_with_equality.Fold.fold_right_eqlistA	40
Coq.Lists.SetoidList.Type_with_equality.Fold.Fold_With_Restriction.ForallOrdPairs_inclA	40
Coq.Lists.SetoidList.Type_with_equality.Fold.Fold_With_Restriction.fold_right_commutes_restr	40
Coq.Lists.SetoidList.Type_with_equality.Fold.Fold_With_Restriction.fold_right_equivlistA_restr	40
Coq.Lists.SetoidList.Type_with_equality.Fold.Fold_With_Restriction.fold_right_add_restr	40
Coq.Lists.SetoidList.Type_with_equality.Fold.fold_right_commutes	40	1.0.0.0.0.390.0.0.2.1.1	synth with cache (only 1: induction s1; only 1: simpl; only 1: intros; only 1: auto with relations; only 1: simpl; only 1: intuition auto with arith; only 1: transitivity (f a (f x (fold_right f i (s1 ++ s2)))); only 1: apply Comp; only 1: auto; only 1: apply IHs1; only 1: auto with relations).	16.0271801949	8725
Coq.Lists.SetoidList.Type_with_equality.Fold.fold_right_equivlistA	40
Coq.Lists.SetoidList.Type_with_equality.Fold.fold_right_add	40
Coq.Lists.SetoidList.Type_with_equality.Fold2.fold_right_eqlistA2	40	0.0.1.0.0.0.0.580.385	synth with cache (only 1: intros a b H; only 1: intros n EQ; only 1: induction 1; only 1: simpl; only 1: auto with relations; only 1: simpl; only 1: apply Comp; only 1: auto; only 1: auto).	11.5803701878	36632
Coq.Lists.SetoidList.Type_with_equality.Fold2.Fold2_With_Restriction.fold_right_commutes_restr2	40
Coq.Lists.SetoidList.Type_with_equality.Fold2.Fold2_With_Restriction.fold_right_equivlistA_restr2	40
Coq.Lists.SetoidList.Type_with_equality.Fold2.Fold2_With_Restriction.fold_right_add_restr2	40
Coq.Lists.SetoidList.Type_with_equality.Fold2.fold_right_commutes2	40
Coq.Lists.SetoidList.Type_with_equality.Fold2.fold_right_equivlistA2	40
Coq.Lists.SetoidList.Type_with_equality.Fold2.fold_right_add2	40
Coq.Lists.SetoidList.Type_with_equality.Remove.InA_dec	40
Coq.Lists.SetoidList.Type_with_equality.Remove.removeA_filter	40
Coq.Lists.SetoidList.Type_with_equality.Remove.removeA_InA	40
Coq.Lists.SetoidList.Type_with_equality.Remove.removeA_NoDupA	40
Coq.Lists.SetoidList.Type_with_equality.Remove.removeA_equivlistA	40
Coq.Lists.SetoidList.Type_with_equality.InfA_ltA	40
Coq.Lists.SetoidList.Type_with_equality.InfA_compat	40
Coq.Lists.SetoidList.Type_with_equality.InfA_eqA	40	129.128	synth with cache (only 1: simpl_relation; only 1: now rewrite H).	0.170958995819	17
Coq.Lists.SetoidList.Type_with_equality.SortA_InfA_InA	40
Coq.Lists.SetoidList.Type_with_equality.In_InfA	40	65.1.0.0	synth with cache (only 1: simple induction l; only 1: intros; only 1: constructor; only 1: firstorder).	0.0625960826874	17
Coq.Lists.SetoidList.Type_with_equality.InA_InfA	40	64.0.1.0	synth with cache (only 1: simple induction l; only 1: intros; only 1: constructor; only 1: firstorder).	0.0372459888458	6
Coq.Lists.SetoidList.Type_with_equality.InfA_alt	40
Coq.Lists.SetoidList.Type_with_equality.InfA_app	40	1.0.1.384.1	synth with cache (only 1: intros; only 1: reflexivity || destruct H; only 1: eauto; only 1: constructor; only 1: eauto).	0.277778148651	305
Coq.Lists.SetoidList.Type_with_equality.SortA_app	40
Coq.Lists.SetoidList.Type_with_equality.SortA_NoDupA	40
Coq.Lists.SetoidList.Type_with_equality.EqlistA.eqlistA_length	40	1.2.0.65	synth with cache (only 1: induction 1; only 1: constructor; only 1: simpl; only 1: intuition).	1.74510192871	373
Coq.Lists.SetoidList.Type_with_equality.EqlistA.app_eqlistA_compat	40
Coq.Lists.SetoidList.Type_with_equality.EqlistA.eqlistA_app	40	0.1.0.0.0.0	synth with cache (only 1: induction 1; only 1: simpl; only 1: auto; only 1: intuition; only 1: simpl; only 1: auto).	0.0526239871979	7
Coq.Lists.SetoidList.Type_with_equality.EqlistA.eqlistA_rev_app	40
Coq.Lists.SetoidList.Type_with_equality.EqlistA.rev_eqlistA_compat	40	1.2.449.1.0.1	synth with cache (only 1: induction 1; only 1: auto; only 1: simpl; only 1: f_equiv; only 1: auto; only 1: auto).	8.50627803802	1908
Coq.Lists.SetoidList.Type_with_equality.EqlistA.eqlistA_rev	40	1.71.0	synth with cache (only 1: intros; only 1: rewrite H; only 1: reflexivity).	8.77831196785	2302
Coq.Lists.SetoidList.Type_with_equality.EqlistA.SortA_equivlistA_eqlistA	40
Coq.Lists.SetoidList.Type_with_equality.Filter.filter_sort	40
Coq.Lists.SetoidList.Type_with_equality.Filter.filter_InA	40
Coq.Lists.SetoidList.Type_with_equality.Filter.filter_split	40
Coq.Lists.SetoidList.Find.findA_NoDupA	40
Coq.NArith.BinNat.N.eq_dec	40
Coq.NArith.BinNat.N.discr	40
Coq.NArith.BinNat.N.peano_rect_base	40	1.0.0.0.0.0.0	synth with cache (only 1: revert P a f; only 1: intros; only 1: revert P a f; only 1: intros; only 1: revert P a f; only 1: intros; only 1: now f_equal).	0.0558669567108	16
Coq.NArith.BinNat.N.peano_rect_succ	40
Coq.NArith.BinNat.N.peano_rec_base	40	0	synth with cache (only 1: reflexivity).	0.0150220394135	1
Coq.NArith.BinNat.N.peano_rec_succ	40	0.0.0.0.0	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite Pos.peano_rect_succ).	0.0383718013763	5
Coq.NArith.BinNat.N.bi_induction	40
Coq.NArith.BinNat.N.recursion_wd	40
Coq.NArith.BinNat.N.recursion_0	40	0.0	synth with cache (only 1: simpl; only 1: trivial).	0.0183160305023	2
Coq.NArith.BinNat.N.recursion_succ	40
Coq.NArith.BinNat.N.one_succ	40	0	synth with cache (only 1: trivial).	0.0127260684967	1
Coq.NArith.BinNat.N.two_succ	40	0.0	synth with cache (only 1: simpl; only 1: trivial).	0.017294883728	2
Coq.NArith.BinNat.N.pred_0	40	0	synth with cache (only 1: trivial).	0.0126810073853	1
Coq.NArith.BinNat.N.pos_pred_spec	40	0.0.0.0.0.0	synth with cache (only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: trivial).	0.0328769683838	6
Coq.NArith.BinNat.N.succ_pos_spec	40	0.0.5	synth with cache (only 1: induction n; only 1: reflexivity; only 1: reflexivity).	0.741214990616	1270
Coq.NArith.BinNat.N.pos_pred_succ	40	0.0.0.0.0.0.0.0.0.0.2.1.0.0.0.0.6	synth with cache (only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: destruct p; only 1: simpl; only 1: f_equal; only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	2.47815680504	6217
Coq.NArith.BinNat.N.succ_pos_pred	40	0.0.0.0.0.0.0.0.1.0.0.0.0	synth with cache (only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: f_equal; only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: reflexivity).	0.361010074615	355
Coq.NArith.BinNat.N.pred_succ	40	0.0.0	synth with cache (only 1: destruct n; only 1: reflexivity; only 1: apply Pos.pred_N_succ).	0.0218069553375	3
Coq.NArith.BinNat.N.pred_sub	40	129.0.0.4.0.6	synth with cache (only 1: destruct n; only 1: trivial; only 1: destruct p; only 1: now destruct p; only 1: trivial; only 1: CRelationClasses.simpl_crelation).	0.823689937592	1936
Coq.NArith.BinNat.N.succ_0_discr	40	0.513.1.0.257	synth with cache (only 1: intros H; only 1: pose proof (PeanoNat.Nat.pred_succ n) as EQ'; only 1: destruct n; only 1: destr_bool; only 1: destr_eq H).	0.324239969254	390
Coq.NArith.BinNat.N.add_0_l	40	2.0.0	synth with cache (only 1: destruct n; only 1: auto; only 1: reflexivity).	0.0340850353241	7
Coq.NArith.BinNat.N.add_succ_l	40
Coq.NArith.BinNat.N.sub_0_r	40	386.1.1	synth with cache (only 1: destruct n; only 1: trivial; only 1: easy').	0.219724178314	126
Coq.NArith.BinNat.N.sub_succ_r	40
Coq.NArith.BinNat.N.mul_0_l	40	0	synth with cache (only 1: reflexivity).	0.0139489173889	1
Coq.NArith.BinNat.N.mul_succ_l	40
Coq.NArith.BinNat.N.eqb_eq	40
Coq.NArith.BinNat.N.ltb_lt	40
Coq.NArith.BinNat.N.leb_le	40
Coq.NArith.BinNat.N.compare_eq_iff	40
Coq.NArith.BinNat.N.compare_lt_iff	40	0.0.0.0.0	synth with cache (only 1: unfold ltb, lt; only 1: destruct compare; only 1: easy'; only 1: easy'; only 1: easy').	0.034343957901	5
Coq.NArith.BinNat.N.compare_le_iff	40	0.0	synth with cache (only 1: unfold leb, le; only 1: apply iff_refl).	0.0210571289062	2
Coq.NArith.BinNat.N.compare_antisym	40
Coq.NArith.BinNat.N.min_l	40
Coq.NArith.BinNat.N.min_r	40
Coq.NArith.BinNat.N.max_l	40
Coq.NArith.BinNat.N.max_r	40	0.1.0.0.0.0	synth with cache (only 1: unfold max, le; only 1: rewrite compare_antisym; only 1: case compare_spec; only 1: trivial; only 1: now destruct 2; only 1: trivial).	0.097324848175	7
Coq.NArith.BinNat.N.lt_succ_r	40
Coq.NArith.BinNat.N.double_spec	40	196	synth with cache (only 1: intuition).	0.142599105835	71
Coq.NArith.BinNat.N.succ_double_spec	40
Coq.NArith.BinNat.N.double_add	40	512.320.320.0.0.512.512.512	synth with cache (only 1: apply CRelationClasses.symmetry; only 1: apply CRelationClasses.symmetry; only 1: apply CRelationClasses.symmetry; only 1: destruct n, m; only 1: now nzsimpl; only 1: intuition auto; PeanoNat.Nat.Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: intuition auto; PeanoNat.Nat.Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: now PeanoNat.Nat.nzsimpl').	0.463068962097	291
Coq.NArith.BinNat.N.succ_double_add	40
Coq.NArith.BinNat.N.double_mul	40	64.0.0.0.0.0.0	synth with cache (only 1: destruct n, m; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: easy || now destruct 1).	0.0494530200958	9
Coq.NArith.BinNat.N.succ_double_mul	40	2.196	synth with cache (only 1: rewrite PeanoNat.Nat.add_comm; only 1: now destruct n, m).	5.20355296135	8792
Coq.NArith.BinNat.N.div2_double	40	0.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: trivial).	0.0244610309601	3
Coq.NArith.BinNat.N.div2_succ_double	40	0	synth with cache (only 1: now destruct n).	0.0162010192871	1
Coq.NArith.BinNat.N.double_inj	40
Coq.NArith.BinNat.N.succ_double_inj	40
Coq.NArith.BinNat.N.succ_double_lt	40
Coq.NArith.BinNat.N.double_lt_mono	40	1.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n as [| n], m as [| m]; only 1: intro H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: unfold lt in *; only 1: simpl in *; only 1: trivial).	0.35724902153	217
Coq.NArith.BinNat.N.double_le_mono	40
Coq.NArith.BinNat.N.succ_double_lt_mono	40	3.704.1.0.258	synth with cache (only 1: destruct m; only 1: intros H; only 1: false_hyp ltac:(H) nlt_0_r; only 1: CRelationClasses.simpl_crelation; only 1: now destruct n).	1.64217495918	1729
Coq.NArith.BinNat.N.succ_double_le_mono	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n as [| n], m as [| m]; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy).	0.317551136017	211
Coq.NArith.BinNat.N.compare_0_r	40	0.0.0.0.0.0.128	synth with cache (only 1: case Pos.compare_spec; only 1: congruence; only 1: intro H; only 1: intro H1; only 1: false_hyp H nlt_0_r; only 1: intros; only 1: easy').	0.0678610801697	15
Coq.NArith.BinNat.N.pow_0_r	40	0.1	synth with cache (only 1: simpl; only 1: trivial).	0.0194699764252	3
Coq.NArith.BinNat.N.pow_succ_r	40
Coq.NArith.BinNat.N.pow_neg_r	40	0.0.64.258	synth with cache (only 1: destruct p; only 1: order'; only 1: intro H; only 1: easy).	0.684951066971	635
Coq.NArith.BinNat.N.square_spec	40
Coq.NArith.BinNat.N.size_log2	40	71	synth with cache (only 1: now destruct n as [| [p| p| ]]).	0.565985918045	843
Coq.NArith.BinNat.N.size_gt	40
Coq.NArith.BinNat.N.size_le	40
Coq.NArith.BinNat.N.log2_spec	40
Coq.NArith.BinNat.N.log2_nonpos	40	0.0.0.2.5.0	synth with cache (only 1: intro H; only 1: destruct n as [| [n| n| ]]; only 1: reflexivity; only 1: easy'; only 1: easy; only 1: easy).	6.04836702347	14265
Coq.NArith.BinNat.N.even_spec	40
Coq.NArith.BinNat.N.odd_spec	40
Coq.NArith.BinNat.N.pos_div_eucl_spec	40
Coq.NArith.BinNat.N.div_eucl_spec	40
Coq.NArith.BinNat.N.div_mod'	40
Coq.NArith.BinNat.N.div_mod	40	0.129.0.1	synth with cache (only 1: generalize (div_eucl_spec a b); only 1: unfold div, modulo; only 1: intro H1; only 1: now destruct div_eucl).	1.80130720139	242
Coq.NArith.BinNat.N.pos_div_eucl_remainder	40
Coq.NArith.BinNat.N.mod_lt	40
Coq.NArith.BinNat.N.mod_bound_pos	40
Coq.NArith.BinNat.N.sqrtrem_sqrt	40
Coq.NArith.BinNat.N.sqrtrem_spec	40
Coq.NArith.BinNat.N.sqrt_spec	40
Coq.NArith.BinNat.N.sqrt_neg	40	1.0	synth with cache (only 1: intro H; only 1: false_hyp ltac:(H) nlt_0_r).	0.0217471122742	3
Coq.NArith.BinNat.N.ggcd_gcd	40
Coq.NArith.BinNat.N.ggcd_correct_divisors	40
Coq.NArith.BinNat.N.gcd_divide_l	40
Coq.NArith.BinNat.N.gcd_divide_r	40	1.0.2.512.0.0.0	synth with cache (only 1: rewrite <- ggcd_gcd; only 1: generalize (ggcd_correct_divisors a b); only 1: destruct ggcd as (g, (aa, bb)); only 1: intros [x y]; only 1: exists bb; only 1: simpl; only 1: now rewrite Pos.mul_comm).	2.51748895645	3721
Coq.NArith.BinNat.N.gcd_greatest	40
Coq.NArith.BinNat.N.gcd_nonneg	40	1	synth with cache (only 1: apply le_0_l).	0.983923912048	826
Coq.NArith.BinNat.N.testbit_even_0	40	0.0.1.463.320	synth with cache (only 1: simpl in *; only 1: destruct a; only 1: intuition; only 1: simpl; only 1: trivial).	1.35584306717	4204
Coq.NArith.BinNat.N.testbit_odd_0	40	0	synth with cache (only 1: now destruct a).	0.0165598392487	1
Coq.NArith.BinNat.N.testbit_succ_r_div2	40
Coq.NArith.BinNat.N.testbit_odd_succ	40
Coq.NArith.BinNat.N.testbit_even_succ	40	0.0.0.0	synth with cache (only 1: intros H; only 1: rewrite testbit_succ_r_div2 by trivial; only 1: f_equal; only 1: now destruct a).	0.0362958908081	4
Coq.NArith.BinNat.N.testbit_neg_r	40	4	synth with cache (only 1: now induction n).	0.190061092377	101
Coq.NArith.BinNat.N.shiftr_succ_r	40
Coq.NArith.BinNat.N.shiftl_succ_r	40
Coq.NArith.BinNat.N.shiftr_spec	40
Coq.NArith.BinNat.N.shiftl_spec_high	40
Coq.NArith.BinNat.N.shiftl_spec_low	40
Coq.NArith.BinNat.N.div2_spec	40	0.0	synth with cache (only 1: simpl; only 1: trivial).	0.0214099884033	2
Coq.NArith.BinNat.N.pos_lxor_spec	40
Coq.NArith.BinNat.N.lxor_spec	40
Coq.NArith.BinNat.N.pos_lor_spec	40
Coq.NArith.BinNat.N.lor_spec	40
Coq.NArith.BinNat.N.pos_land_spec	40
Coq.NArith.BinNat.N.land_spec	40
Coq.NArith.BinNat.N.pos_ldiff_spec	40
Coq.NArith.BinNat.N.ldiff_spec	40
Coq.NArith.BinNat.N.gt_lt_iff	40
Coq.NArith.BinNat.N.gt_lt	40	0.2.512.1	synth with cache (only 1: intro H; only 1: destruct (PeanoNat.Nat.le_gt_cases n m); only 1: now apply le_succ_l; only 1: trivial).	0.577451944351	612
Coq.NArith.BinNat.N.lt_gt	40	0	synth with cache (only 1: apply gt_lt_iff).	0.0148279666901	1
Coq.NArith.BinNat.N.ge_le_iff	40	2.1.2.1.64.0.2.64.0.0.195	synth with cache (only 1: induction n; only 1: split; only 1: intro H; only 1: apply le_ngt; only 1: easy; only 1: intro H; only 1: apply le_ngt; only 1: trivial; only 1: destruct m; only 1: easy'; only 1: now rewrite <- compare_le_iff, compare_antisym, CompOpp_iff).	5.34360790253	3144
Coq.NArith.BinNat.N.ge_le	40	0.1	synth with cache (only 1: unfold le, ge; only 1: now rewrite compare_antisym, CompOpp_iff).	0.0259990692139	3
Coq.NArith.BinNat.N.le_ge	40	0	synth with cache (only 1: apply ge_le_iff).	0.0144619941711	1
Coq.NArith.BinNat.N.pos_pred_shiftl_low	40
Coq.NArith.BinNat.N.pos_pred_shiftl_high	40
Coq.NArith.BinNat.N.pred_div2_up	40	194.2.1.0.2	synth with cache (only 1: destruct p; only 1: simpl; only 1: apply Pos.pred_N_succ; only 1: now destruct p; only 1: apply CMorphisms.reflexive_proper).	1.04800701141	1717
Coq.NArith.Ndec.Peqb_complete	40	0	synth with cache (only 1: apply Pos.eqb_eq).	0.018798828125	1
Coq.NArith.Ndec.Peqb_Pcompare	40	0.4	synth with cache (only 1: rewrite ?Pos.compare_eq_iff; only 1: now apply Pos.eqb_eq).	0.785052061081	270
Coq.NArith.Ndec.Pcompare_Peqb	40	0	synth with cache (only 1: now rewrite Pos.compare_eq_iff, <- Pos.eqb_eq).	0.118096828461	1
Coq.NArith.Ndec.Neqb_Ncompare	40
Coq.NArith.Ndec.Ncompare_Neqb	40	0	synth with cache (only 1: now rewrite N.compare_eq_iff, <- N.eqb_eq).	0.041081905365	1
Coq.NArith.Ndec.Neqb_complete	40	1	synth with cache (only 1: now rewrite N.eqb_eq, <- N.compare_eq_iff).	0.0369019508362	2
Coq.NArith.Ndec.Nxor_eq_true	40
Coq.NArith.Ndec.Nxor_eq_false	40
Coq.NArith.Ndec.Nodd_not_double	40
Coq.NArith.Ndec.Nnot_div2_not_double	40
Coq.NArith.Ndec.Neven_not_double_plus_one	40	0.1.0.256.0.0.515.1	synth with cache (only 1: intros H l; only 1: induction l as [| x l IHl]; only 1: eqb2eq; only 1: intros <-; only 1: now Nat.nzsimpl; only 1: eqb2eq; only 1: intros <-; only 1: destr_eq H).	2.64394903183	4821
Coq.NArith.Ndec.Nnot_div2_not_double_plus_one	40
Coq.NArith.Ndec.Nbit0_neq	40
Coq.NArith.Ndec.Ndiv2_eq	40	2.0.4	synth with cache (only 1: intros H0; only 1: eqb2eq; only 1: now subst).	0.917455911636	395
Coq.NArith.Ndec.Ndiv2_neq	40	0.0.0	synth with cache (only 1: intros; only 1: eqb2eq; only 1: now intros <-).	0.0563731193542	3
Coq.NArith.Ndec.Ndiv2_bit_eq	40
Coq.NArith.Ndec.Ndiv2_bit_neq	40
Coq.NArith.Ndec.Nneq_elim	40
Coq.NArith.Ndec.Ndouble_or_double_plus_un	40
Coq.NArith.Ndec.Nleb_alt	40
Coq.NArith.Ndec.Nleb_Nle	40
Coq.NArith.Ndec.Nleb_refl	40	1.2.0.1.0.4.132	synth with cache (only 1: apply eq_true_iff_eq; only 1: split; only 1: auto; only 1: intuition; only 1: unfold Nleb; only 1: apply Nat.leb_le; only 1: left).	1.34580302238	1641
Coq.NArith.Ndec.Nleb_antisym	40
Coq.NArith.Ndec.Nleb_trans	40
Coq.NArith.Ndec.Nleb_ltb_trans	40
Coq.NArith.Ndec.Nltb_leb_trans	40
Coq.NArith.Ndec.Nltb_trans	40
Coq.NArith.Ndec.Nltb_leb_weak	40
Coq.NArith.Ndec.Nleb_double_mono	40
Coq.NArith.Ndec.Nleb_double_plus_one_mono	40
Coq.NArith.Ndec.Nleb_double_mono_conv	40
Coq.NArith.Ndec.Nleb_double_plus_one_mono_conv	40
Coq.NArith.Ndec.Nltb_double_mono	40
Coq.NArith.Ndec.Nltb_double_plus_one_mono	40
Coq.NArith.Ndec.Nltb_double_mono_conv	40
Coq.NArith.Ndec.Nltb_double_plus_one_mono_conv	40
Coq.NArith.Ndec.Nltb_Ncompare	40
Coq.NArith.Ndec.Ncompare_Gt_Nltb	40
Coq.NArith.Ndec.Ncompare_Lt_Nltb	40
Coq.NArith.Ndec.Nmin_le_1	40
Coq.NArith.Ndec.Nmin_le_2	40
Coq.NArith.Ndec.Nmin_le_3	40
Coq.NArith.Ndec.Nmin_le_4	40	3.0	synth with cache (only 1: rewrite !Nleb_Nle; only 1: N.solve_min).	0.627511024475	336
Coq.NArith.Ndec.Nmin_le_5	40	0.0	synth with cache (only 1: rewrite !Nleb_Nle; only 1: N.solve_min).	0.0590708255768	2
Coq.NArith.Ndec.Nmin_lt_3	40
Coq.NArith.Ndec.Nmin_lt_4	40	0.0.1	synth with cache (only 1: rewrite <- !not_true_iff_false, !Nleb_Nle; only 1: rewrite N.min_le_iff; only 1: auto).	0.0625488758087	4
Coq.NArith.Ndiv_def.Pdiv_eucl_remainder	40
Coq.NArith.Ndist.Nplength_infty	40	1.323.0.2	synth with cache (only 1: destruct a; only 1: intro; only 1: now BinInt.Z.nzsimpl'; only 1: now try N.order').	0.674125909805	870
Coq.NArith.Ndist.Nplength_zeros	40
Coq.NArith.Ndist.Nplength_one	40
Coq.NArith.Ndist.Nplength_first_one	40
Coq.NArith.Ndist.ni_min_idemp	40
Coq.NArith.Ndist.ni_min_comm	40
Coq.NArith.Ndist.ni_min_assoc	40
Coq.NArith.Ndist.ni_min_O_l	40
Coq.NArith.Ndist.ni_min_O_r	40	0.0.2.0.0	synth with cache (only 1: simple induction d; only 1: trivial; only 1: simple induction n; only 1: trivial; only 1: trivial).	0.218595981598	214
Coq.NArith.Ndist.ni_min_inf_l	40	0.0	synth with cache (only 1: intros; only 1: trivial).	0.0122430324554	2
Coq.NArith.Ndist.ni_min_inf_r	40	0.0.2.70	synth with cache (only 1: intros x; only 1: destruct x; only 1: trivial; only 1: trivial).	0.69627404213	1657
Coq.NArith.Ndist.ni_le_refl	40
Coq.NArith.Ndist.ni_le_antisym	40
Coq.NArith.Ndist.ni_le_trans	40
Coq.NArith.Ndist.ni_le_min_1	40
Coq.NArith.Ndist.ni_le_min_2	40	0.2.1.0.0	synth with cache (only 1: unfold ni_le; only 1: intros; only 1: rewrite ni_min_assoc; only 1: rewrite ni_min_idemp; only 1: reflexivity).	1.02433204651	1637
Coq.NArith.Ndist.ni_min_case	40
Coq.NArith.Ndist.ni_le_total	40
Coq.NArith.Ndist.ni_le_min_induc	40
Coq.NArith.Ndist.le_ni_le	40
Coq.NArith.Ndist.ni_le_le	40
Coq.NArith.Ndist.Nplength_lb	40
Coq.NArith.Ndist.Nplength_ub	40
Coq.NArith.Ndist.Npdist_eq_1	40
Coq.NArith.Ndist.Npdist_eq_2	40
Coq.NArith.Ndist.Npdist_comm	40
Coq.NArith.Ndist.Nplength_ultra_1	40
Coq.NArith.Ndist.Nplength_ultra	40
Coq.NArith.Ndist.Npdist_ultra	40
Coq.NArith.Ndigits.Ptestbit_Pbit	40
Coq.NArith.Ndigits.Ntestbit_Nbit	40
Coq.NArith.Ndigits.Pbit_Ptestbit	40
Coq.NArith.Ndigits.Nbit_Ntestbit	40
Coq.NArith.Ndigits.Nshiftr_nat_S	40	2.0	synth with cache (only 1: intros a Ha; only 1: split).	0.0240168571472	4
Coq.NArith.Ndigits.Nshiftl_nat_S	40	2.0	synth with cache (only 1: intros a n; only 1: reflexivity).	0.0245680809021	4
Coq.NArith.Ndigits.Nshiftr_nat_equiv	40
Coq.NArith.Ndigits.Nshiftr_equiv_nat	40
Coq.NArith.Ndigits.Nshiftl_nat_equiv	40
Coq.NArith.Ndigits.Nshiftl_equiv_nat	40
Coq.NArith.Ndigits.Nshiftr_nat_spec	40
Coq.NArith.Ndigits.Nshiftl_nat_spec_high	40
Coq.NArith.Ndigits.Nshiftl_nat_spec_low	40
Coq.NArith.Ndigits.Pshiftl_nat_0	40	0.0	synth with cache (only 1: intros; only 1: reflexivity).	0.0236208438873	2
Coq.NArith.Ndigits.Pshiftl_nat_S	40	0.0.0	synth with cache (only 1: intros q r; only 1: simpl; only 1: auto).	0.028960943222	3
Coq.NArith.Ndigits.Pshiftl_nat_N	40
Coq.NArith.Ndigits.Pshiftl_nat_plus	40
Coq.NArith.Ndigits.Pxor_semantics	40
Coq.NArith.Ndigits.Nxor_semantics	40
Coq.NArith.Ndigits.Por_semantics	40
Coq.NArith.Ndigits.Nor_semantics	40
Coq.NArith.Ndigits.Pand_semantics	40
Coq.NArith.Ndigits.Nand_semantics	40	0.0.0.1.0.0.0.0.0.1	synth with cache (only 1: destruct a, a'; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite andb_false_r; only 1: simpl; only 1: rewrite <- Ntestbit_Nbit, <- !Ptestbit_Pbit; only 1: apply N.pos_land_spec).	0.402993917465	275
Coq.NArith.Ndigits.Pdiff_semantics	40
Coq.NArith.Ndigits.Ndiff_semantics	40	0.0.1.0.0.0.0.0.0.0	synth with cache (only 1: rewrite <- !Ntestbit_Nbit; only 1: destruct a, a'; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite andb_true_r; only 1: simpl; only 1: apply N.pos_ldiff_spec).	0.203185081482	138
Coq.NArith.Ndigits.Pbit_faithful_0	40
Coq.NArith.Ndigits.Pbit_faithful	40
Coq.NArith.Ndigits.Nbit_faithful	40
Coq.NArith.Ndigits.Nbit_faithful_iff	40
Coq.NArith.Ndigits.Nbit0_correct	40	256.193.128.193.0.195.0	synth with cache (only 1: intros; only 1: induction n as [| n H]; only 1: trivial; only 1: induction n; only 1: auto with *; only 1: intuition N.order; only 1: easy || now destruct y).	3.68674302101	4315
Coq.NArith.Ndigits.Ndouble_bit0	40	0.0.199.132.0	synth with cache (only 1: intros; only 1: vm_compute; only 1: induction n as [| n IH]; only 1: trivial; only 1: trivial).	9.69676613808	7396
Coq.NArith.Ndigits.Ndouble_plus_one_bit0	40	0.2.0	synth with cache (only 1: destruct n; only 1: split; only 1: trivial).	0.0755980014801	72
Coq.NArith.Ndigits.Ndiv2_double	40	1.2.130.1.0.0	synth with cache (only 1: destruct n; only 1: intro H; only 1: Nat2N.nat2N; only 1: inversion 1; only 1: unfold N.div2, N.to_nat; only 1: now destruct p).	2.44926714897	4108
Coq.NArith.Ndigits.Ndiv2_double_plus_one	40	1.256.2.0	synth with cache (only 1: intros; only 1: destruct n; only 1: now rewrite ?Pos.square_xO; only 1: now destruct p).	0.83198094368	384
Coq.NArith.Ndigits.Ndiv2_correct	40	320.0.0.0.0.1.0.0.195.128.129	synth with cache (only 1: intros q; only 1: symmetry; only 1: destruct q; only 1: simpl; only 1: trivial; only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: now rewrite <- ?N.add_le_mono_r).	19.4467890263	5504
Coq.NArith.Ndigits.Nxor_bit0	40
Coq.NArith.Ndigits.Nxor_div2	40
Coq.NArith.Ndigits.Nneg_bit0	40
Coq.NArith.Ndigits.Nneg_bit0_1	40
Coq.NArith.Ndigits.Nneg_bit0_2	40	1.0.0.0.192	synth with cache (only 1: intro H1; only 1: intros; only 1: apply Nneg_bit0; only 1: rewrite H; only 1: split).	0.186331033707	153
Coq.NArith.Ndigits.Nsame_bit0	40
Coq.NArith.Ndigits.Nbit0_less	40
Coq.NArith.Ndigits.Nbit0_gt	40	0.0.0.1.0.0.0.0.0.1.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct (N.discr (N.lxor a a')) as [(p, H2)| H1]; only 1: unfold Nless; only 1: rewrite H2; only 1: destruct p; only 1: simpl; only 1: rewrite H, H0; only 1: reflexivity; only 1: assert (H1 : N.odd (N.lxor a a') = false) by (rewrite H2; reflexivity); only 1: rewrite (Nxor_bit0 a a'), H, H0 in H1; only 1: discriminate H1; only 1: simpl; only 1: rewrite H, H0; only 1: reflexivity; only 1: assert (H2 : N.odd (N.lxor a a') = false) by (rewrite H1; reflexivity); only 1: rewrite (Nxor_bit0 a a'), H, H0 in H2; only 1: discriminate H2).	1.55967402458	1242
Coq.NArith.Ndigits.Nless_not_refl	40
Coq.NArith.Ndigits.Nless_def_1	40
Coq.NArith.Ndigits.Nless_def_2	40	0.0.0.0.0.0.0.0.1.0.0	synth with cache (only 1: destruct a; only 1: destruct a'; only 1: trivial; only 1: trivial; only 1: destruct a'; only 1: trivial; only 1: unfold Nless; only 1: simpl; only 1: destruct (Pos.lxor p p0); only 1: reflexivity; only 1: trivial).	0.324094057083	190
Coq.NArith.Ndigits.Nless_def_3	40
Coq.NArith.Ndigits.Nless_def_4	40
Coq.NArith.Ndigits.Nless_z	40	64.0.0.0.0.322.0.128.1.514.198	synth with cache (only 1: intro H1; only 1: induction H1; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: compute; only 1: induction p; only 1: trivial; only 1: trivial; only 1: trivial; only 1: destr_bool).	9.807959795	13330
Coq.NArith.Ndigits.N0_less_1	40	134.1.0.71	synth with cache (only 1: intros n; only 1: destruct n; only 1: now try BinInt.Z.order'; only 1: eauto with *).	9.26671791077	21312
Coq.NArith.Ndigits.N0_less_2	40
Coq.NArith.Ndigits.Nless_trans	40
Coq.NArith.Ndigits.Nless_total	40
Coq.NArith.Ndigits.Bv2N_N2Bv	40
Coq.NArith.Ndigits.Bv2N_Nsize	40
Coq.NArith.Ndigits.Bv2N_Nsize_1	40
Coq.NArith.Ndigits.Bv2N_upper_bound	40
Coq.NArith.Ndigits.ByteV2N_upper_bound	40
Coq.NArith.Ndigits.N2Bv_N2Bv_gen	40
Coq.NArith.Ndigits.N2Bv_N2Bv_gen_above	40
Coq.NArith.Ndigits.N2Bv_Bv2N	40
Coq.NArith.Ndigits.Nbit0_Blow	40
Coq.NArith.Ndigits.Bnth_Nbit	40
Coq.NArith.Ndigits.Nbit_Nsize	40
Coq.NArith.Ndigits.Nbit_Bth	40
Coq.NArith.Ndigits.Nxor_BVxor	40
Coq.NArith.Ndigits.Nand_BVand	40
Coq.NArith.Ndigits.N2Bv_sized_Nsize	40
Coq.NArith.Ndigits.N2Bv_sized_Bv2N	40
Coq.NArith.Ndigits.N2Bv_N2Bv_sized_above	40
Coq.NArith.NArith.TestOrder.test	40	0	synth with cache (only 1: N.order).	0.0197567939758	1
Coq.NArith.Nnat.N2Nat.id	40
Coq.NArith.Nnat.N2Nat.inj	40
Coq.NArith.Nnat.N2Nat.inj_iff	40	64.2.1.0.0.0.2	synth with cache (only 1: split; only 1: intro H; only 1: rewrite <- (id a), <- (id a'); only 1: now f_equal; only 1: intros EQ; only 1: rewrite EQ; only 1: now N.nzsimpl).	0.336721897125	489
Coq.NArith.Nnat.N2Nat.inj_double	40
Coq.NArith.Nnat.N2Nat.inj_succ_double	40
Coq.NArith.Nnat.N2Nat.inj_succ	40	1.0.1.0.0.0	synth with cache (only 1: destruct a; only 1: simpl N.to_nat; only 1: trivial; only 1: simpl; only 1: unfold Pos.to_nat; only 1: now rewrite !Pmult_nat_mult, Pos2Nat.inj_succ).	0.202997922897	100
Coq.NArith.Nnat.N2Nat.inj_add	40
Coq.NArith.Nnat.N2Nat.inj_mul	40
Coq.NArith.Nnat.N2Nat.inj_sub	40
Coq.NArith.Nnat.N2Nat.inj_pred	40
Coq.NArith.Nnat.N2Nat.inj_div2	40
Coq.NArith.Nnat.N2Nat.inj_compare	40
Coq.NArith.Nnat.N2Nat.inj_max	40
Coq.NArith.Nnat.N2Nat.inj_min	40
Coq.NArith.Nnat.N2Nat.inj_iter	40
Coq.NArith.Nnat.Nat2N.id	40	0.4.0.2.5	synth with cache (only 1: induction n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply SuccNat2Pos.id_succ).	0.265866041183	1004
Coq.NArith.Nnat.Nat2N.inj	40
Coq.NArith.Nnat.Nat2N.inj_iff	40	3.0.0.0.0.1	synth with cache (only 1: split; only 1: intros H; only 1: rewrite <- (id n), <- (id n'); only 1: now f_equal; only 1: intros H; only 1: now subst).	0.211045026779	230
Coq.NArith.Nnat.Nat2N.inj_double	40
Coq.NArith.Nnat.Nat2N.inj_succ_double	40	0	synth with cache (only 1: nat2N).	0.0406970977783	1
Coq.NArith.Nnat.Nat2N.inj_succ	40	0	synth with cache (only 1: nat2N).	0.0357670783997	1
Coq.NArith.Nnat.Nat2N.inj_pred	40	0.1.0.0	synth with cache (only 1: induction n; only 1: trivial; only 1: clear IHn; only 1: nat2N).	0.0499958992004	5
Coq.NArith.Nnat.Nat2N.inj_add	40	0	synth with cache (only 1: nat2N).	0.039458990097	1
Coq.NArith.Nnat.Nat2N.inj_sub	40	6.0.258	synth with cache (only 1: induction n as [| n IH]; only 1: nat2N; only 1: nat2N).	0.719128131866	686
Coq.NArith.Nnat.Nat2N.inj_mul	40	0	synth with cache (only 1: nat2N).	0.0381731987	1
Coq.NArith.Nnat.Nat2N.inj_div2	40	0	synth with cache (only 1: nat2N).	0.0366079807281	1
Coq.NArith.Nnat.Nat2N.inj_compare	40
Coq.NArith.Nnat.Nat2N.inj_min	40	0	synth with cache (only 1: nat2N).	0.0389771461487	1
Coq.NArith.Nnat.Nat2N.inj_max	40	0	synth with cache (only 1: nat2N).	0.0370001792908	1
Coq.NArith.Nnat.Nat2N.inj_iter	40
Coq.Strings.Ascii.ascii_dec	40
Coq.Strings.Ascii.eqb_spec	40
Coq.Strings.Ascii.eqb_refl	40
Coq.Strings.Ascii.eqb_sym	40
Coq.Strings.Ascii.eqb_eq	40
Coq.Strings.Ascii.eqb_neq	40	0	synth with cache (only 1: now rewrite <- not_true_iff_false, Pos.eqb_eq).	0.0130090713501	1
Coq.Strings.Ascii.eqb_compat	40	0.0.0	synth with cache (only 1: intros x x' Exx' y y' Eyy'; only 1: apply eq_true_iff_eq; only 1: now rewrite 2!N.eqb_eq, Exx', Eyy').	0.0191369056702	3
Coq.Strings.Ascii.ascii_N_embedding	40
Coq.Strings.Ascii.N_ascii_embedding	40
Coq.Strings.Ascii.N_ascii_bounded	40
Coq.Strings.Ascii.ascii_nat_embedding	40
Coq.Strings.Ascii.nat_ascii_embedding	40
Coq.Strings.Ascii.nat_ascii_bounded	40
Coq.Strings.Ascii.ascii_of_byte_of_ascii	40	259.0	synth with cache (only 1: destruct x; only 1: destr_bool).	4.41791200638	147
Coq.Strings.Ascii.byte_of_ascii_of_byte	40
Coq.Strings.Ascii.ascii_of_byte_via_N	40
Coq.Strings.Ascii.ascii_of_byte_via_nat	40	0.0.0.0.0.0.0.0.1.0.0.0.1.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct x; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: compute; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	23.382245779	9276
Coq.Strings.Ascii.byte_of_ascii_via_N	40
Coq.Strings.Ascii.byte_of_ascii_via_nat	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: rewrite <- (ascii_of_byte_of_ascii x); only 1: destruct (byte_of_ascii x); only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	5.53306698799	1822
Coq.Strings.String.string_dec	40
Coq.Strings.String.eqb_spec	40
Coq.Strings.String.eqb_refl	40
Coq.Strings.String.eqb_sym	40
Coq.Strings.String.eqb_eq	40
Coq.Strings.String.eqb_neq	40	0	synth with cache (only 1: now rewrite <- not_true_iff_false, BinInt.Z.eqb_eq).	0.0222029685974	1
Coq.Strings.String.eqb_compat	40	0.0.0	synth with cache (only 1: intros x x' Exx' y y' Eyy'; only 1: apply eq_true_iff_eq; only 1: now rewrite 2!BinInt.Z.eqb_eq, Exx', Eyy').	0.0300390720367	3
Coq.Strings.String.get_correct	40
Coq.Strings.String.append_correct1	40
Coq.Strings.String.append_correct2	40
Coq.Strings.String.substring_correct1	40
Coq.Strings.String.substring_correct2	40
Coq.Strings.String.prefix_correct	40
Coq.Strings.String.index_correct1	40
Coq.Strings.String.index_correct2	40
Coq.Strings.String.index_correct3	40
Coq.Strings.String.index_correct4	40
Coq.Strings.String.string_of_list_ascii_of_string	40	128.321.130.128.2.0.0.0	synth with cache (only 1: elim s; only 1: simpl; only 1: easy; only 1: simpl; only 1: intro H; only 1: destruct H; only 1: intro He; only 1: <Coq.Strings.Ascii.t_eqb>).	7.19906377792	1683
Coq.Strings.String.list_ascii_of_string_of_list_ascii	40
Coq.Strings.String.string_of_list_byte_of_string	40	129.0.0.1.0.262.0.0.0	synth with cache (only 1: induction s as [| ? ? IHs]; only 1: reflexivity; only 1: cbn; only 1: Morphisms.f_equiv; only 1: cbv[ascii_of_byte byte_of_ascii]; only 1: destruct a; only 1: rewrite to_bits_of_bits; only 1: reflexivity; only 1: now BinInt.Z.nzsimpl).	10.4803309441	5030
Coq.Strings.String.list_byte_of_string_of_list_byte	40
Coq.Strings.Byte.byte_dec_lb	40
Coq.Strings.Byte.byte_dec_bl	40
Coq.Strings.Byte.eqb_false	40
Coq.Strings.Byte.nat.of_to_nat	40
Coq.Strings.Byte.nat.to_of_nat	40
Coq.Strings.Byte.nat.to_of_nat_iff	40
Coq.Strings.Byte.nat.to_of_nat_option_map	40
Coq.Strings.Byte.nat.to_nat_bounded	40
Coq.Strings.Byte.nat.of_nat_None_iff	40
Coq.Strings.Byte.N.of_to_N	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct x; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	4.64565205574	1546
Coq.Strings.Byte.N.to_of_N	40
Coq.Strings.Byte.N.to_of_N_iff	40
Coq.Strings.Byte.N.to_of_N_option_map	40
Coq.Strings.Byte.N.to_N_bounded	40
Coq.Strings.Byte.N.of_N_None_iff	40
Coq.Strings.Byte.N.to_N_via_nat	40
Coq.Strings.Byte.N.to_nat_via_N	40
Coq.Strings.Byte.N.of_N_via_nat	40
Coq.Strings.Byte.N.of_nat_via_N	40
Coq.Strings.HexString.Raw.to_N_of_pos	40	65	synth with cache (only 1: now PeanoNat.Nat.nzsimpl).	0.0492379665375	6
Coq.Strings.HexString.to_N_of_N	40
Coq.Strings.HexString.to_Z_of_Z	40
Coq.Strings.HexString.to_nat_of_nat	40
Coq.Strings.HexString.to_pos_of_pos	40
Coq.Strings.OctalString.Raw.to_N_of_pos	40	1	synth with cache (only 1: trivial).	0.0187652111053	2
Coq.Strings.OctalString.to_N_of_N	40
Coq.Strings.OctalString.to_Z_of_Z	40
Coq.Strings.OctalString.to_nat_of_nat	40
Coq.Strings.OctalString.to_pos_of_pos	40
Coq.Strings.BinaryString.Raw.to_N_of_pos	40	67	synth with cache (only 1: now rewrite ?BinPos.Pos.square_xO).	0.0202829837799	8
Coq.Strings.BinaryString.to_N_of_N	40
Coq.Strings.BinaryString.Z_of_of_Z	40
Coq.Strings.BinaryString.to_nat_of_nat	40
Coq.Strings.BinaryString.to_pos_of_pos	40
Coq.Reals.Rdefinitions.total_order_T	40
Coq.Reals.Rdefinitions.Req_appart_dec	40
Coq.Reals.Rdefinitions.Rrepr_appart_0	40
Coq.Reals.Rdefinitions.up	40	607	synth with cache (only 1: firstorder).	1.45448899269	6810
Coq.Reals.Rtrigo_alt.pre_sin_bound	40
Coq.Reals.Rtrigo_alt.pre_cos_bound	40
Coq.Reals.Ratan.Ropp_div	40	0.0.0	synth with cache (only 1: intros x y; only 1: unfold Rdiv; only 1: ring).	0.0935468673706	3
Coq.Reals.Ratan.pos_half_prf	40	1	synth with cache (only 1: apply Rinv_0_lt_compat, Rlt_0_2).	0.277474880219	152
Coq.Reals.Ratan.Boule_half_to_interval	40
Coq.Reals.Ratan.Boule_lt	40
Coq.Reals.Ratan.Un_cv_ext	40
Coq.Reals.Ratan.Alt_first_term_bound	40
Coq.Reals.Ratan.Alt_CVU	40
Coq.Reals.Ratan.pow2_ge_0	40
Coq.Reals.Ratan.pow2_abs	40
Coq.Reals.Ratan.derivable_pt_tan	40
Coq.Reals.Ratan.derive_pt_tan	40
Coq.Reals.Ratan.derive_increasing_interv	40
Coq.Reals.Ratan.plus_Rsqr_gt_0	40
Coq.Reals.Ratan.PI2_lower_bound	40
Coq.Reals.Ratan.PI2_3_2	40
Coq.Reals.Ratan.PI2_1	40
Coq.Reals.Ratan.tan_increasing	40
Coq.Reals.Ratan.tan_is_inj	40
Coq.Reals.Ratan.exists_atan_in_frame	40
Coq.Reals.Ratan.tan_1_gt_1	40
Coq.Reals.Ratan.frame_tan	40
Coq.Reals.Ratan.ub_opp	40	130.0	synth with cache (only 1: intuition; only 1: lra).	0.0640938282013	10
Coq.Reals.Ratan.pos_opp_lt	40	2.0	synth with cache (only 1: intros; only 1: lra).	0.0532991886139	4
Coq.Reals.Ratan.tech_opp_tan	40
Coq.Reals.Ratan.pre_atan	40
Coq.Reals.Ratan.atan_bound	40
Coq.Reals.Ratan.atan_right_inv	40
Coq.Reals.Ratan.atan_opp	40
Coq.Reals.Ratan.derivable_pt_atan	40
Coq.Reals.Ratan.atan_increasing	40
Coq.Reals.Ratan.atan_0	40
Coq.Reals.Ratan.atan_1	40
Coq.Reals.Ratan.derive_pt_atan	40
Coq.Reals.Ratan.derivable_pt_lim_atan	40
Coq.Reals.Ratan.Ratan_seq_decreasing	40
Coq.Reals.Ratan.Ratan_seq_converging	40
Coq.Reals.Ratan.ps_atan_exists_01	40
Coq.Reals.Ratan.Ratan_seq_opp	40
Coq.Reals.Ratan.sum_Ratan_seq_opp	40
Coq.Reals.Ratan.ps_atan_exists_1	40
Coq.Reals.Ratan.in_int	40
Coq.Reals.Ratan.ps_atan0_0	40
Coq.Reals.Ratan.ps_atan_exists_1_opp	40
Coq.Reals.Ratan.ps_atan_opp	40
Coq.Reals.Ratan.ps_atanSeq_continuity_pt_1	40
Coq.Reals.Ratan.pow_lt_1_compat	40
Coq.Reals.Ratan.Datan_seq_Rabs	40
Coq.Reals.Ratan.Datan_seq_pos	40	3.384.1154	synth with cache (only 1: intros n H; only 1: compute; only 1: intuition).	24.3417270184	28773
Coq.Reals.Ratan.Datan_sum_eq	40
Coq.Reals.Ratan.Datan_seq_increasing	40
Coq.Reals.Ratan.Datan_seq_decreasing	40
Coq.Reals.Ratan.Datan_seq_CV_0	40
Coq.Reals.Ratan.Datan_lim	40
Coq.Reals.Ratan.Datan_CVU_prelim	40
Coq.Reals.Ratan.Datan_is_datan	40
Coq.Reals.Ratan.Ratan_CVU'	40
Coq.Reals.Ratan.Ratan_CVU	40
Coq.Reals.Ratan.Alt_PI_tg	40	1.1.448.1.1.0.0	synth with cache (only 1: intro; only 1: unfold Ratan_seq, PI_tg; only 1: simpl; only 1: rewrite pow1; only 1: apply Rminus_diag_uniq_sym; only 1: unfold Rdiv; only 1: ring).	6.31344389915	12676
Coq.Reals.Ratan.Ratan_is_ps_atan	40
Coq.Reals.Ratan.Datan_continuity	40
Coq.Reals.Ratan.derivable_pt_lim_ps_atan	40
Coq.Reals.Ratan.derivable_pt_ps_atan	40
Coq.Reals.Ratan.ps_atan_continuity_pt_1	40
Coq.Reals.Ratan.Datan_eq_DatanSeq_interv	40
Coq.Reals.Ratan.atan_eq_ps_atan	40
Coq.Reals.Ratan.Alt_PI_eq	40
Coq.Reals.Ratan.PI_ineq	40
Coq.Reals.Sqrt_reg.sqrt_var_maj	40
Coq.Reals.Sqrt_reg.sqrt_continuity_pt_R1	40
Coq.Reals.Sqrt_reg.sqrt_continuity_pt	40
Coq.Reals.Sqrt_reg.derivable_pt_lim_sqrt	40
Coq.Reals.Sqrt_reg.derivable_pt_sqrt	40
Coq.Reals.Sqrt_reg.derive_pt_sqrt	40
Coq.Reals.Sqrt_reg.continuity_pt_sqrt	40
Coq.Reals.Rsigma.Sigma.sigma_split	40
Coq.Reals.Rsigma.Sigma.sigma_diff	40
Coq.Reals.Rsigma.Sigma.sigma_diff_neg	40	0.1.0.0.0.0	synth with cache (only 1: intros low high k H1 H2; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: rewrite (sigma_split H1 H2); only 1: ring).	0.196127891541	87
Coq.Reals.Rsigma.Sigma.sigma_first	40
Coq.Reals.Rsigma.Sigma.sigma_last	40
Coq.Reals.Rsigma.Sigma.sigma_eq_arg	40	193.0.0.0.3	synth with cache (only 1: intro; only 1: unfold sigma; only 1: rewrite <- minus_n_n; only 1: simpl; only 1: eauto).	0.771651983261	587
Coq.Reals.Rbasic_fun.Rmin_case	40
Coq.Reals.Rbasic_fun.Rmin_case_strong	40	2.1.0.0.385.0.512.1	synth with cache (only 1: intros r1 r2; only 1: intro He; only 1: unfold Rmin; only 1: intros a b; only 1: case (Rle_dec r1 r2); only 1: auto with real; only 1: unfold Rle; only 1: auto with real).	1.99391913414	2851
Coq.Reals.Rbasic_fun.Rmin_Rgt_l	40
Coq.Reals.Rbasic_fun.Rmin_Rgt_r	40	0.256.0.0.0.0.193.0	synth with cache (only 1: intros; only 1: inversion H; only 1: clear H; only 1: unfold Rmin; only 1: case (Rle_dec r1 r2); only 1: intro; only 1: intuition auto; Nat.Private_Tac.subst_eqns; eauto using (RelationClasses.StrictOrder_Transitive x y z) with *; only 1: auto).	0.286247968674	192
Coq.Reals.Rbasic_fun.Rmin_Rgt	40
Coq.Reals.Rbasic_fun.Rmin_l	40
Coq.Reals.Rbasic_fun.Rmin_r	40	64.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: intro H1; only 1: auto with real; only 1: firstorder).	0.0618829727173	8
Coq.Reals.Rbasic_fun.Rmin_left	40	64.0.0.0.0.1	synth with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: auto with real; only 1: intro H1; only 1: auto with zarith real).	0.58016204834	224
Coq.Reals.Rbasic_fun.Rmin_right	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmin_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	0.0475189685822	4
Coq.Reals.Rbasic_fun.Rle_min_compat_r	40
Coq.Reals.Rbasic_fun.Rle_min_compat_l	40	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: do 2 (apply Rmin_case_strong; intro); only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl).	0.0501019954681	6
Coq.Reals.Rbasic_fun.Rmin_comm	40
Coq.Reals.Rbasic_fun.Rmin_stable_in_posreal	40
Coq.Reals.Rbasic_fun.Rmin_pos	40	0.0.0.0.1.1.1	synth with cache (only 1: intros x y; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: intros; only 1: assumption; only 1: intros; only 1: assumption).	16.285161972	21553
Coq.Reals.Rbasic_fun.Rmin_glb	40	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: intros; only 1: eauto using Rle_trans, Rle_refl; only 1: intro H1; only 1: eauto using Rle_trans, Rle_refl).	0.0519471168518	7
Coq.Reals.Rbasic_fun.Rmin_glb_lt	40	1.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: intro; only 1: auto; only 1: intros Eq0; only 1: auto).	0.0727300643921	8
Coq.Reals.Rbasic_fun.Rmax_case	40
Coq.Reals.Rbasic_fun.Rmax_case_strong	40	0.0.0.1.0	synth with cache (only 1: intros r1 r2 P H1 H2; only 1: unfold Rmax; only 1: destruct (Rle_dec r1 r2); only 1: auto with real; only 1: auto with real).	0.2256731987	185
Coq.Reals.Rbasic_fun.Rmax_Rle	40
Coq.Reals.Rbasic_fun.Rmax_comm	40
Coq.Reals.Rbasic_fun.Rmax_l	40
Coq.Reals.Rbasic_fun.Rmax_r	40	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rmax; only 1: case (Rle_dec x y); only 1: intro H1; only 1: auto with real; only 1: intro H1; only 1: auto with real).	0.0577549934387	7
Coq.Reals.Rbasic_fun.Rmax_left	40	0.0.0.1.0	synth with cache (only 1: intros; only 1: unfold Rmax; only 1: case (Rle_dec x y); only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	0.654455184937	164
Coq.Reals.Rbasic_fun.Rmax_right	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmax_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	0.0437839031219	4
Coq.Reals.Rbasic_fun.Rle_max_compat_r	40
Coq.Reals.Rbasic_fun.Rle_max_compat_l	40	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: do 2 (apply Rmax_case_strong; intro); only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl).	0.0530230998993	6
Coq.Reals.Rbasic_fun.RmaxRmult	40
Coq.Reals.Rbasic_fun.Rmax_stable_in_negreal	40
Coq.Reals.Rbasic_fun.Rmax_lub	40	193.2.1.0.64.71	synth with cache (only 1: intro H; only 1: intros l'; only 1: apply Rmax_case_strong; only 1: intros LE p Hp1 Hp2; only 1: assumption; only 1: now rewrite <- ?N.succ_le_mono).	24.8509569168	26442
Coq.Reals.Rbasic_fun.Rmax_lub_lt	40	0.0.0.0.0.1.0	synth with cache (only 1: intros; only 1: unfold Rmax; only 1: case (Rle_dec x y); only 1: intro; only 1: assumption; only 1: intro; only 1: assumption).	0.592005968094	337
Coq.Reals.Rbasic_fun.Rmax_Rlt	40
Coq.Reals.Rbasic_fun.Rmax_neg	40	0.0.0.0.0.0.2.1	synth with cache (only 1: intros x y; only 1: unfold Rmax; only 1: intros; only 1: case (Rle_dec x y); only 1: intro; only 1: assumption; only 1: intro; only 1: assumption).	35.9841091633	64670
Coq.Reals.Rbasic_fun.Rcase_abs	40
Coq.Reals.Rbasic_fun.Rabs_R0	40
Coq.Reals.Rbasic_fun.Rabs_R1	40
Coq.Reals.Rbasic_fun.Rabs_no_R0	40
Coq.Reals.Rbasic_fun.Rabs_left	40
Coq.Reals.Rbasic_fun.Rabs_right	40
Coq.Reals.Rbasic_fun.Rabs_left1	40
Coq.Reals.Rbasic_fun.Rabs_pos	40
Coq.Reals.Rbasic_fun.Rle_abs	40
Coq.Reals.Rbasic_fun.Rabs_le	40
Coq.Reals.Rbasic_fun.Rabs_pos_eq	40
Coq.Reals.Rbasic_fun.Rabs_Rabsolu	40
Coq.Reals.Rbasic_fun.Rabs_pos_lt	40	448.1.1.0.4.4	synth with cache (only 1: intro; only 1: unfold Rabs; only 1: intro; only 1: case (Rcase_abs x); only 1: auto with real; only 1: now destruct 1 || trivial).	12.53459692	24899
Coq.Reals.Rbasic_fun.Rabs_minus_sym	40
Coq.Reals.Rbasic_fun.Rabs_mult	40
Coq.Reals.Rbasic_fun.Rabs_Rinv	40
Coq.Reals.Rbasic_fun.Rabs_Ropp	40
Coq.Reals.Rbasic_fun.Rabs_triang	40
Coq.Reals.Rbasic_fun.Rabs_triang_inv	40
Coq.Reals.Rbasic_fun.Rabs_triang_inv2	40
Coq.Reals.Rbasic_fun.Rabs_def1	40
Coq.Reals.Rbasic_fun.Rabs_def2	40
Coq.Reals.Rbasic_fun.RmaxAbs	40
Coq.Reals.Rbasic_fun.Rabs_Zabs	40
Coq.Reals.Rbasic_fun.abs_IZR	40
Coq.Reals.Rbasic_fun.Ropp_Rmax	40
Coq.Reals.Rbasic_fun.Ropp_Rmin	40	0.0.0.1.0.1.0.1.0.3.0.0.0	synth with cache (only 1: intros x y; only 1: apply Rmax_case_strong; only 1: intro H1; only 1: apply Rmin_case_strong; only 1: auto using Rle_antisym; only 1: auto with real; only 1: intros H; only 1: apply Rmin_case_strong; only 1: intro H1; only 1: auto with real; only 1: elim H; only 1: auto with real; only 1: auto with real).	5.27333903313	6060
Coq.Reals.Rbasic_fun.Rmax_assoc	40
Coq.Reals.Rbasic_fun.Rminmax	40
Coq.Reals.Rbasic_fun.Rmin_assoc	40
Coq.Reals.ROrderedType.Req_dec	40	0.0.2.0	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), Rlt_dichotomy_converse; only 1: unfold not; only 1: intuition eauto  3).	4.67963910103	1668
Coq.Reals.ROrderedType.Reqb_eq	40
Coq.Reals.ROrderedType.Rcompare_spec	40
Coq.Reals.ROrderedType.R_as_OT.lt_strorder	40	0.128.0.387.704.2.0.0.2.131.230	synth with cache (only 1: repeat split; only 1: intro n; only 1: intro; only 1: eapply Rlt_asym; only 1: eauto; only 1: auto with real; only 1: generalize 1%positive as acc; only 1: intros a H; only 1: generalize Rlt_trans, Rlt_eq_compat; only 1: intro n; only 1: intuition eauto  2).	8.2484459877	22078
Coq.Reals.ROrderedType.R_as_OT.lt_compat	40	192.68.256.0	synth with cache (only 1: intros x1 x2 H1 x3 x4 H2; only 1: case H2; only 1: case H1; only 1: intuition N.order).	1.79689288139	1802
Coq.Reals.ROrderedType.R_as_OT.le_lteq	40	66.0	synth with cache (only 1: intros; only 1: reflexivity).	0.0630698204041	46
Coq.Reals.SeqSeries.sum_maj1	40
Coq.Reals.SeqSeries.Rseries_CV_comp	40
Coq.Reals.SeqSeries.Cesaro	40
Coq.Reals.SeqSeries.Cesaro_1	40
Coq.Reals.Rtrigo_def.exp_cof_no_R0	40
Coq.Reals.Rtrigo_def.exist_exp	40
Coq.Reals.Rtrigo_def.pow_i	40
Coq.Reals.Rtrigo_def.exist_exp0	40
Coq.Reals.Rtrigo_def.exp_0	40
Coq.Reals.Rtrigo_def.cosh_0	40
Coq.Reals.Rtrigo_def.sinh_0	40
Coq.Reals.Rtrigo_def.simpl_cos_n	40
Coq.Reals.Rtrigo_def.archimed_cor1	40
Coq.Reals.Rtrigo_def.Alembert_cos	40
Coq.Reals.Rtrigo_def.cosn_no_R0	40	0.0.0.0.6.0	synth with cache (only 1: intro; only 1: apply Rmult_integral_contrapositive_currified; only 1: apply pow_nonzero; only 1: discrR; only 1: apply Rinv_neq_0_compat; only 1: apply INR_fact_neq_0).	16.4049828053	19850
Coq.Reals.Rtrigo_def.exist_cos	40
Coq.Reals.Rtrigo_def.simpl_sin_n	40
Coq.Reals.Rtrigo_def.Alembert_sin	40
Coq.Reals.Rtrigo_def.sin_no_R0	40
Coq.Reals.Rtrigo_def.exist_sin	40
Coq.Reals.Rtrigo_def.cos_sym	40
Coq.Reals.Rtrigo_def.sin_antisym	40
Coq.Reals.Rtrigo_def.sin_0	40
Coq.Reals.Rtrigo_def.exist_cos0	40
Coq.Reals.Rtrigo_def.cos_0	40
Coq.Reals.NewtonInt.FTCN_step1	40
Coq.Reals.NewtonInt.FTC_Newton	40	704.0	synth with cache (only 1: intros; only 1: intuition auto; Nat.Private_Tac.subst_eqns; eauto using (RelationClasses.StrictOrder_Transitive x y z) with *).	1.37828302383	1019
Coq.Reals.NewtonInt.NewtonInt_P1	40
Coq.Reals.NewtonInt.NewtonInt_P2	40
Coq.Reals.NewtonInt.NewtonInt_P3	40	1217.832.192	synth with cache (only 1: intros m n v1; only 1: intros (k, Hk); only 1: firstorder using PropExtensionalityFacts.PredExt_imp_PropExt, PropExtensionalityFacts.PredExt_imp_PropFunExt, PropExtensionalityFacts.PropExt_and_PropFunExt_imp_PredExt).	25.8422489166	2077
Coq.Reals.NewtonInt.NewtonInt_P4	40
Coq.Reals.NewtonInt.NewtonInt_P5	40
Coq.Reals.NewtonInt.antiderivative_P1	40
Coq.Reals.NewtonInt.NewtonInt_P6	40
Coq.Reals.NewtonInt.antiderivative_P2	40
Coq.Reals.NewtonInt.antiderivative_P3	40
Coq.Reals.NewtonInt.antiderivative_P4	40
Coq.Reals.NewtonInt.NewtonInt_P7	40
Coq.Reals.NewtonInt.NewtonInt_P8	40
Coq.Reals.NewtonInt.NewtonInt_P9	40
Coq.Reals.Runcountable.in_holed_interval_dec	40
Coq.Reals.Runcountable.middle_in_interval	40
Coq.Reals.Runcountable.point_in_holed_interval_works	40
Coq.Reals.Runcountable.first_in_holed_interval	40
Coq.Reals.Runcountable.first_in_holed_interval_works	40
Coq.Reals.Runcountable.split_couple_eq	40	451.1.448	synth with cache (only 1: intros H; only 1: intros; only 1: now inversion_clear H0).	2.02580785751	2216
Coq.Reals.Runcountable.first_two_in_interval_works	40
Coq.Reals.Runcountable.tearing_sequences	40
Coq.Reals.Runcountable.tearing_sequences_projsig	40
Coq.Reals.Runcountable.tearing_sequences_inc_dec	40
Coq.Reals.Runcountable.split_lt_succ	40	2.64.66	synth with cache (only 1: intros Hz; only 1: Bool.destr_bool; only 1: now apply Nat.lt_eq_cases, Nat.succ_le_mono).	6.46980714798	1738
Coq.Reals.Runcountable.increase_seq_transit	40
Coq.Reals.Runcountable.decrease_seq_transit	40
Coq.Reals.Runcountable.tearing_sequences_ordered_forall	40
Coq.Reals.Runcountable.torn_number	40
Coq.Reals.Runcountable.torn_number_above_first_sequence	40
Coq.Reals.Runcountable.torn_number_below_second_sequence	40
Coq.Reals.Runcountable.limit_index_above_all_indices	40
Coq.Reals.Runcountable.first_indices_increasing	40
Coq.Reals.Runcountable.R_uncountable	40
Coq.Reals.Rfunctions.INR_fact_neq_0	40
Coq.Reals.Rfunctions.fact_simpl	40	0.0	synth with cache (only 1: simpl; only 1: reflexivity).	0.0256609916687	2
Coq.Reals.Rfunctions.simpl_fact	40
Coq.Reals.Rfunctions.pow_O	40	0.0	synth with cache (only 1: intros p0; only 1: auto with real).	0.0279049873352	2
Coq.Reals.Rfunctions.pow_1	40	0.1.0.64	synth with cache (only 1: simpl in *; only 1: intros; only 1: rewrite Rmult_comm; only 1: apply Rmult_1_l).	0.0926978588104	79
Coq.Reals.Rfunctions.pow_add	40	0.0.0.0.0.0.0.0	synth with cache (only 1: intros x n; only 1: elim n; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: intros n0 H' m; only 1: rewrite H'; only 1: auto with real).	0.066545009613	8
Coq.Reals.Rfunctions.Rpow_mult_distr	40
Coq.Reals.Rfunctions.pow_nonzero	40
Coq.Reals.Rfunctions.pow_RN_plus	40
Coq.Reals.Rfunctions.pow_lt	40
Coq.Reals.Rfunctions.Rlt_pow_R1	40
Coq.Reals.Rfunctions.Rlt_pow	40
Coq.Reals.Rfunctions.tech_pow_Rmult	40	1.0.1	synth with cache (only 1: simpl; only 1: intros; only 1: auto with real).	0.040500164032	17
Coq.Reals.Rfunctions.tech_pow_Rplus	40	0.1.3.3.0	synth with cache (only 1: intro; only 1: intro; only 1: intros H1; only 1: repeat rewrite S_INR; only 1: ring).	25.7750871181	25127
Coq.Reals.Rfunctions.poly	40
Coq.Reals.Rfunctions.Power_monotonic	40
Coq.Reals.Rfunctions.RPow_abs	40
Coq.Reals.Rfunctions.Pow_x_infinity	40
Coq.Reals.Rfunctions.pow_ne_zero	40	384.64.0.578.0.1	synth with cache (only 1: simple induction n; only 1: intro; only 1: tauto; only 1: simpl; only 1: intros m IH; only 1: auto with zarith real).	2.55022788048	2891
Coq.Reals.Rfunctions.Rinv_pow	40
Coq.Reals.Rfunctions.pow_lt_1_zero	40
Coq.Reals.Rfunctions.pow_R1	40
Coq.Reals.Rfunctions.pow_Rsqr	40
Coq.Reals.Rfunctions.pow_le	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros x n; only 1: elim n; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: intros n0 H' H'0; only 1: replace 0 with (x * 0); only 1: auto with real; only 1: auto with real).	0.770895004272	472
Coq.Reals.Rfunctions.pow_1_even	40
Coq.Reals.Rfunctions.pow_1_odd	40
Coq.Reals.Rfunctions.pow_1_abs	40
Coq.Reals.Rfunctions.pow_mult	40
Coq.Reals.Rfunctions.pow_incr	40
Coq.Reals.Rfunctions.pow_R1_Rle	40
Coq.Reals.Rfunctions.Rle_pow	40
Coq.Reals.Rfunctions.pow1	40	448.0.4.1.256.514.65.2.3	synth with cache (only 1: intros [| n]; only 1: auto with real; only 1: simpl in *; only 1: Nat.induct ltac:(n); only 1: auto with *; only 1: simpl; only 1: intros; only 1: rewrite Rmult_1_l; only 1: now subst).	19.6331911087	21002
Coq.Reals.Rfunctions.pow_Rabs	40
Coq.Reals.Rfunctions.pow_maj_Rabs	40
Coq.Reals.Rfunctions.Rsqr_pow2	40
Coq.Reals.Rfunctions.PowerRZ.Z_compl.intP	40
Coq.Reals.Rfunctions.PowerRZ.Zpower_NR0	40
Coq.Reals.Rfunctions.PowerRZ.powerRZ_O	40	0	synth with cache (only 1: reflexivity).	0.0181629657745	1
Coq.Reals.Rfunctions.PowerRZ.powerRZ_1	40	1.5.0	synth with cache (only 1: intros; only 1: simpl; only 1: auto with real).	0.689382076263	988
Coq.Reals.Rfunctions.PowerRZ.powerRZ_NOR	40
Coq.Reals.Rfunctions.PowerRZ.powerRZ_pos_sub	40
Coq.Reals.Rfunctions.PowerRZ.powerRZ_add	40
Coq.Reals.Rfunctions.PowerRZ.Zpower_nat_powerRZ	40
Coq.Reals.Rfunctions.PowerRZ.Zpower_pos_powerRZ	40
Coq.Reals.Rfunctions.PowerRZ.powerRZ_lt	40
Coq.Reals.Rfunctions.PowerRZ.powerRZ_le	40	0.0.0.0.0.0.0.0	synth with cache (only 1: intros x z; only 1: case z; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: auto with real).	0.114774942398	8
Coq.Reals.Rfunctions.PowerRZ.Zpower_nat_powerRZ_absolu	40
Coq.Reals.Rfunctions.PowerRZ.powerRZ_R1	40
Coq.Reals.Rfunctions.PowerRZ.pow_powerRZ	40	0.1.1.0.0.3.0.193	synth with cache (only 1: assert (Hn : 0 <= n); only 1: apply Nat2Z.is_nonneg; only 1: induction n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite SuccNat2Pos.id_succ; only 1: reflexivity).	13.7451691628	12336
Coq.Reals.Rfunctions.PowerRZ.powerRZ_ind	40
Coq.Reals.Rfunctions.PowerRZ.powerRZ_inv	40
Coq.Reals.Rfunctions.PowerRZ.powerRZ_neg	40
Coq.Reals.Rfunctions.PowerRZ.powerRZ_mult_distr	40
Coq.Reals.Rfunctions.GP_finite	40
Coq.Reals.Rfunctions.sum_f_R0_triangle	40
Coq.Reals.Rfunctions.R_dist_pos	40
Coq.Reals.Rfunctions.R_dist_sym	40
Coq.Reals.Rfunctions.R_dist_refl	40
Coq.Reals.Rfunctions.R_dist_eq	40	0.0.1.0.0	synth with cache (only 1: intros H; only 1: unfold R_dist; only 1: unfold Rminus; only 1: rewrite Rplus_opp_r; only 1: apply Rabs_R0).	0.128865003586	39
Coq.Reals.Rfunctions.R_dist_tri	40
Coq.Reals.Rfunctions.R_dist_plus	40
Coq.Reals.Rfunctions.R_dist_mult_l	40
Coq.Reals.Rprod.prod_SO_split	40
Coq.Reals.Rprod.prod_SO_pos	40
Coq.Reals.Rprod.prod_SO_Rle	40
Coq.Reals.Rprod.fact_prodSO	40
Coq.Reals.Rprod.le_n_2n	40	0.0.0.0.0.0	synth with cache (only 1: intro n; only 1: simpl; only 1: rewrite <- (Nat.add_0_r n); only 1: rewrite <- Nat.add_assoc; only 1: apply Nat.add_le_mono_l; only 1: apply Nat.le_0_l).	0.0660500526428	6
Coq.Reals.Rprod.RfactN_fact2N_factk	40
Coq.Reals.Rprod.INR_fact_lt_0	40	0.0.2.0.0.1.1	synth with cache (only 1: intros n; only 1: apply lt_0_INR; only 1: induction n; only 1: simpl; only 1: auto with arith; only 1: simpl; only 1: auto with arith).	0.795099973679	618
Coq.Reals.Rprod.C_maj	40
Coq.Reals.Exp_prop.E1_cvg	40
Coq.Reals.Exp_prop.exp_form	40
Coq.Reals.Exp_prop.div2_double	40	0.0	synth with cache (only 1: intros a; only 1: apply Nat.div2_double).	0.0433521270752	2
Coq.Reals.Exp_prop.div2_S_double	40	1.0	synth with cache (only 1: intro; only 1: apply Nat.div2_succ_double).	0.0448060035706	3
Coq.Reals.Exp_prop.div2_not_R0	40
Coq.Reals.Exp_prop.Reste_E_maj	40
Coq.Reals.Exp_prop.maj_Reste_cv_R0	40
Coq.Reals.Exp_prop.Reste_E_cv	40
Coq.Reals.Exp_prop.exp_plus	40
Coq.Reals.Exp_prop.exp_pos_pos	40
Coq.Reals.Exp_prop.exp_pos	40
Coq.Reals.Exp_prop.derivable_pt_lim_exp_0	40
Coq.Reals.Exp_prop.derivable_pt_lim_exp	40
Coq.Reals.Rpower.P_Rmin	40	2.0.1089.0.0.1	synth with cache (only 1: intros; only 1: apply Rmin_case_strong; only 1: intro; only 1: firstorder; only 1: intros; only 1: auto with real).	1.37018990517	2816
Coq.Reals.Rpower.exp_le_3	40
Coq.Reals.Rpower.exp_increasing	40
Coq.Reals.Rpower.exp_lt_inv	40
Coq.Reals.Rpower.exp_ineq1	40
Coq.Reals.Rpower.ln_exists1	40
Coq.Reals.Rpower.ln_exists	40
Coq.Reals.Rpower.exp_ln	40
Coq.Reals.Rpower.exp_inv	40
Coq.Reals.Rpower.exp_Ropp	40
Coq.Reals.Rpower.ln_increasing	40
Coq.Reals.Rpower.ln_exp	40
Coq.Reals.Rpower.ln_1	40
Coq.Reals.Rpower.ln_lt_inv	40
Coq.Reals.Rpower.ln_inv	40
Coq.Reals.Rpower.ln_mult	40
Coq.Reals.Rpower.ln_Rinv	40
Coq.Reals.Rpower.ln_continue	40
Coq.Reals.Rpower.Rpower_plus	40
Coq.Reals.Rpower.Rpower_mult	40
Coq.Reals.Rpower.Rpower_O	40
Coq.Reals.Rpower.Rpower_1	40
Coq.Reals.Rpower.Rpower_pow	40
Coq.Reals.Rpower.Rpower_lt	40
Coq.Reals.Rpower.Rpower_sqrt	40
Coq.Reals.Rpower.Rpower_Ropp	40
Coq.Reals.Rpower.powerRZ_Rpower	40
Coq.Reals.Rpower.Rle_Rpower	40
Coq.Reals.Rpower.ln_lt_2	40
Coq.Reals.Rpower.limit1_ext	40
Coq.Reals.Rpower.limit1_imp	40	128.385.0.1.0.576.128.64	synth with cache (only 1: intros x y H H0; only 1: intro H10; only 1: intro abs; only 1: unfold limit1_in, limit_in; only 1: unfold dist; only 1: simpl; only 1: intros def_n0; only 1: firstorder).	14.468943119	14478
Coq.Reals.Rpower.Rinv_Rdiv	40	0.0.0	synth with cache (only 1: intros; only 1: field; only 1: auto).	0.0747997760773	3
Coq.Reals.Rpower.Dln	40
Coq.Reals.Rpower.derivable_pt_lim_ln	40
Coq.Reals.Rpower.D_in_imp	40	1152.1	synth with cache (only 1: intros n p nN pN y b_y xny; only 1: firstorder).	0.418210029602	245
Coq.Reals.Rpower.D_in_ext	40	577.0.256.0.832.512	synth with cache (only 1: intro H; only 1: intros N2 H5; only 1: unfold D_in; only 1: intros a n; only 1: unfold limit1_in; only 1: easy || now destruct 1).	1.57123184204	1367
Coq.Reals.Rpower.Dpower	40
Coq.Reals.Rpower.derivable_pt_lim_power	40
Coq.Reals.Rpower.Rpower_mult_distr	40
Coq.Reals.Rpower.Rlt_Rpower_l	40
Coq.Reals.Rpower.Rle_Rpower_l	40
Coq.Reals.Rpower.arcsinh_sinh	40
Coq.Reals.Rpower.sinh_arcsinh	40
Coq.Reals.Rpower.derivable_pt_lim_arcsinh	40
Coq.Reals.Rpower.arcsinh_lt	40
Coq.Reals.Rpower.arcsinh_le	40
Coq.Reals.Rpower.arcsinh_0	40
Coq.Reals.ConstructiveRcomplete.CReal_absSmall	40
Coq.Reals.ConstructiveRcomplete.Un_cv_mod_eq	40
Coq.Reals.ConstructiveRcomplete.Rfloor	40
Coq.Reals.ConstructiveRcomplete.FQ_dense	40
Coq.Reals.ConstructiveRcomplete.RQ_limit	40
Coq.Reals.ConstructiveRcomplete.Rdiag_cauchy_sequence	40
Coq.Reals.ConstructiveRcomplete.doubleLeCovariant	40
Coq.Reals.ConstructiveRcomplete.CReal_cv_self	40
Coq.Reals.ConstructiveRcomplete.Un_cv_extens	40
Coq.Reals.ConstructiveRcomplete.R_has_all_rational_limits	40
Coq.Reals.ConstructiveRcomplete.Rcauchy_complete	40
Coq.Reals.ConstructiveRcomplete.CRealImplem	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_increasing_inv	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_unique	40
Coq.Reals.ConstructiveRealsMorphisms.Endomorph_id	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_proper	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_compose	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_le	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_le_inv	40	64.0.1.1.0	synth with cache (only 1: intros; only 1: intro abs; only 1: destruct H; only 1: apply CRmorph_increasing; only 1: easy').	0.335927009583	117
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_zero	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_one	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_opp	40
Coq.Reals.ConstructiveRealsMorphisms.CRplus_pos_rat_lt	40
Coq.Reals.ConstructiveRealsMorphisms.CRplus_neg_rat_lt	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_plus_rat	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_plus	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_pos	40
Coq.Reals.ConstructiveRealsMorphisms.NatOfZ	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_int	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_inv	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_rat	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_pos_pos_le	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_pos_pos	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_appart	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_appart_zero	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_inv	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_rat	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_increasing_Ql	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_increasing_Qr	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_increasing	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorphism	40
Coq.Reals.ConstructiveRealsMorphisms.RightBound	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inv	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inv_rat	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inv_increasing_Qr	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inv_increasing	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorphismInv	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_surject	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inject	40
Coq.Reals.RIneq.Rle_refl	40	64.134	synth with cache (only 1: intros Hab; only 1: firstorder).	0.602792978287	1538
Coq.Reals.RIneq.Rge_refl	40	0.0.0	synth with cache (only 1: intro; only 1: right; only 1: reflexivity).	0.0163168907166	3
Coq.Reals.RIneq.Rlt_irrefl	40
Coq.Reals.RIneq.Rgt_irrefl	40	0.0.0.0	synth with cache (only 1: intros r H; only 1: eapply Rlt_asym; only 1: eauto; only 1: eauto).	0.0254888534546	4
Coq.Reals.RIneq.Rlt_not_eq	40	0.0.0.321.515.0.65	synth with cache (only 1: intros LT; only 1: intro n; only 1: intros l1; only 1: destruct 1; only 1: eapply Rlt_asym; only 1: eauto; only 1: trivial).	6.54969501495	10614
Coq.Reals.RIneq.Rgt_not_eq	40	640.0.129.325.320.0.0.0	synth with cache (only 1: red; only 1: intros r1 r2 H H0; only 1: apply (Rlt_irrefl r1); only 1: contradict H; only 1: rewrite <- H0; only 1: intros (Hc1, Hc2) || intros Hc; only 1: apply (Rlt_irrefl r1); only 1: now Nat.nzsimpl').	11.4074339867	23608
Coq.Reals.RIneq.Rlt_dichotomy_converse	40
Coq.Reals.RIneq.Req_dec	40
Coq.Reals.RIneq.Rtotal_order	40
Coq.Reals.RIneq.Rdichotomy	40	0.0.1	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: tauto).	0.209733009338	94
Coq.Reals.RIneq.Rlt_le	40	128.0	synth with cache (only 1: red; only 1: auto with *).	0.11511516571	101
Coq.Reals.RIneq.Rgt_ge	40	641.2.256.384	synth with cache (only 1: intro H0; only 1: intro LE; only 1: intro H; only 1: now constructor).	0.508136987686	514
Coq.Reals.RIneq.Rle_ge	40	67.0.65.0.0	synth with cache (only 1: intros; only 1: red; only 1: destruct H; only 1: tauto; only 1: intuition try easy).	0.675858020782	1099
Coq.Reals.RIneq.Rge_le	40	0.0.0.0.0	synth with cache (only 1: destruct 1; only 1: red; only 1: tauto; only 1: red; only 1: auto with real).	0.0318520069122	5
Coq.Reals.RIneq.Rlt_gt	40	0.0	synth with cache (only 1: intros; only 1: auto with real).	0.015946149826	2
Coq.Reals.RIneq.Rgt_lt	40	0	synth with cache (only 1: trivial).	0.012503862381	1
Coq.Reals.RIneq.Rnot_le_lt	40
Coq.Reals.RIneq.Rnot_ge_gt	40
Coq.Reals.RIneq.Rnot_le_gt	40	0.0.0.0	synth with cache (only 1: intros r1 r2; only 1: generalize (Rtotal_order r1 r2); only 1: unfold Rle; only 1: tauto).	0.0561549663544	4
Coq.Reals.RIneq.Rnot_ge_lt	40	0.0.0	synth with cache (only 1: intros; only 1: apply Rnot_le_lt; only 1: auto with real).	0.0196070671082	3
Coq.Reals.RIneq.Rnot_lt_le	40	4.1.1.64.0.0	synth with cache (only 1: intros r1 r2; only 1: generalize (Rtotal_order r1 r2); only 1: intros n m; only 1: red; only 1: generalize (total_order_T r1 r2); only 1: intuition).	11.2435770035	18295
Coq.Reals.RIneq.Rnot_gt_le	40	0.2.0.0	synth with cache (only 1: intros; only 1: red; only 1: generalize (total_order_T r1 r2); only 1: tauto).	0.475596904755	405
Coq.Reals.RIneq.Rnot_gt_ge	40	0.0.8.0.1	synth with cache (only 1: intros; only 1: red; only 1: generalize (total_order_T r1 r2), Rlt_dichotomy_converse; only 1: unfold not; only 1: intuition eauto  3).	12.742814064	19124
Coq.Reals.RIneq.Rnot_lt_ge	40	2.0	synth with cache (only 1: intros r1 r2 H; only 1: eauto using Rnot_lt_le with rorders).	0.0494379997253	45
Coq.Reals.RIneq.Rlt_not_le	40
Coq.Reals.RIneq.Rgt_not_le	40	1.0	synth with cache (only 1: intros; only 1: auto with real).	0.063364982605	72
Coq.Reals.RIneq.Rlt_not_ge	40	194.384.0.644.384.512.576.0	synth with cache (only 1: generalize Rlt_asym, Rlt_dichotomy_converse; only 1: intros Hx; only 1: intro H7; only 1: intros f Hf H0; only 1: intros * []; only 1: intuition eauto  3; only 1: contradict H; only 1: auto with *).	35.4047989845	24957
Coq.Reals.RIneq.Rgt_not_ge	40	0.0.0.0.0	synth with cache (only 1: red; only 1: intros; only 1: eapply Rlt_not_le; only 1: eauto with real; only 1: auto with real).	0.0284650325775	5
Coq.Reals.RIneq.Rle_not_lt	40	0.0.0.0	synth with cache (only 1: generalize Rlt_asym, Rlt_dichotomy_converse; only 1: unfold Rle; only 1: unfold not; only 1: intuition eauto  3).	0.0310890674591	4
Coq.Reals.RIneq.Rge_not_lt	40	0.64.65.1.0.0	synth with cache (only 1: intros r1 r2; only 1: generalize (Rlt_asym r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition; only 1: case H1; only 1: intuition; only 1: auto with real).	0.615926027298	516
Coq.Reals.RIneq.Rle_not_gt	40	0.2.0.0.0.2	synth with cache (only 1: intros r1 r2; only 1: generalize (Rlt_asym r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intros; only 1: red; only 1: apply Rle_not_lt; only 1: tauto).	1.07223796844	1345
Coq.Reals.RIneq.Rge_not_gt	40	0.0.2	synth with cache (only 1: intros; only 1: apply Rle_not_lt; only 1: auto with real).	0.599027872086	344
Coq.Reals.RIneq.Req_le	40	0.0.0	synth with cache (only 1: intros; only 1: red; only 1: auto with real).	0.0211091041565	3
Coq.Reals.RIneq.Req_ge	40	130.1	synth with cache (only 1: destruct 1; only 1: now right).	0.139575004578	71
Coq.Reals.RIneq.Req_le_sym	40	0.1.0	synth with cache (only 1: unfold Rle; only 1: intros; only 1: auto with real).	0.0233340263367	4
Coq.Reals.RIneq.Req_ge_sym	40	1.0	synth with cache (only 1: unfold Rge; only 1: auto).	0.0192830562592	3
Coq.Reals.RIneq.Rgt_asym	40	0.1.0	synth with cache (only 1: do 2 intro; only 1: generalize (Rlt_asym r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition).	0.0253520011902	4
Coq.Reals.RIneq.Rle_antisym	40
Coq.Reals.RIneq.Rge_antisym	40	1.0.0	synth with cache (only 1: intros r1 r2; only 1: generalize (Rlt_asym r1 r2); only 1: intuition).	0.125293016434	4
Coq.Reals.RIneq.Rle_le_eq	40	1.1	synth with cache (only 1: intros a b; only 1: intuition).	0.179670095444	91
Coq.Reals.RIneq.Rge_ge_eq	40	0	synth with cache (only 1: intuition).	0.0295391082764	1
Coq.Reals.RIneq.Rlt_eq_compat	40	0.0.1.128.384.2	synth with cache (only 1: intros a b n Hn H; only 1: rewrite ?Z.add_0_l, ?Z.add_0_r, ?H; only 1: intros le_mn2; only 1: intros m; only 1: subst; only 1: eauto).	0.871938943863	1293
Coq.Reals.RIneq.Rgt_eq_compat	40	0.0.0.0.0	synth with cache (only 1: intros x x' y y'; only 1: intros; only 1: replace x with x'; only 1: replace y with y'; only 1: assumption).	0.0277111530304	5
Coq.Reals.RIneq.Rle_trans	40
Coq.Reals.RIneq.Rge_trans	40
Coq.Reals.RIneq.Rgt_trans	40	642.386.128.384.0	synth with cache (only 1: generalize eq_trans, Rlt_trans, Rlt_eq_compat; only 1: intros x y H z t H0; only 1: intuition; only 1: red; only 1: firstorder).	1.25182890892	1205
Coq.Reals.RIneq.Rle_lt_trans	40	64.705.64.2.0.0	synth with cache (only 1: generalize eq_trans, Rlt_trans, Rlt_eq_compat; only 1: unfold Rle; only 1: intros A eq_dec; only 1: intros n m p; only 1: firstorder; only 1: eauto).	2.69414496422	3163
Coq.Reals.RIneq.Rlt_le_trans	40	0.0.1	synth with cache (only 1: generalize eq_trans, Rlt_trans, Rlt_eq_compat; only 1: unfold Rle; only 1: intuition eauto  2).	0.0905990600586	76
Coq.Reals.RIneq.Rge_gt_trans	40
Coq.Reals.RIneq.Rgt_ge_trans	40	0.193.3	synth with cache (only 1: generalize Rlt_trans, Rlt_eq_compat; only 1: compute; only 1: intuition eauto  2).	0.806359052658	1350
Coq.Reals.RIneq.Rlt_dec	40
Coq.Reals.RIneq.Rle_dec	40	0.0.0	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition).	0.177007913589	3
Coq.Reals.RIneq.Rgt_dec	40	0.0.0.1	synth with cache (only 1: do 2 intro; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition eauto  4 with real; only 1: auto with real).	0.0718030929565	5
Coq.Reals.RIneq.Rge_dec	40	1.0.0	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition).	0.131110191345	22
Coq.Reals.RIneq.Rlt_le_dec	40	772.64.1.0	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intros r H; only 1: firstorder).	1.31256389618	2149
Coq.Reals.RIneq.Rgt_ge_dec	40	1.1.0	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition).	0.0504591464996	5
Coq.Reals.RIneq.Rle_lt_dec	40	0.0.0	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition).	0.0733439922333	3
Coq.Reals.RIneq.Rge_gt_dec	40	0.0.0.0.2.0.0.0.1.0	synth with cache (only 1: intros; only 1: edestruct Rlt_le_dec; only 1: left; only 1: left; only 1: eauto with rorders; only 1: edestruct Rlt_le_dec; only 1: right; only 1: eauto with rorders; only 1: left; only 1: eauto using Rnot_lt_le with rorders).	1.68997693062	2411
Coq.Reals.RIneq.Rlt_or_le	40	0.0.0	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition).	0.0426299571991	3
Coq.Reals.RIneq.Rgt_or_ge	40	0.1.0.0.1.0	synth with cache (only 1: intros; only 1: edestruct Rlt_le_dec; only 1: left; only 1: eauto with rorders; only 1: right; only 1: eauto with rorders).	0.348597049713	423
Coq.Reals.RIneq.Rle_or_lt	40	0.0.1	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition).	0.418038845062	331
Coq.Reals.RIneq.Rge_or_gt	40	0.0.1.0.0.0.0.0.0.2.0.0.0.0.0	synth with cache (only 1: intros; only 1: edestruct Rlt_or_le; only 1: left; only 1: left; only 1: eauto with rorders; only 1: edestruct Rlt_or_le; only 1: right; only 1: eauto with rorders; only 1: edestruct Rlt_or_le; only 1: left; only 1: red; only 1: auto with real; only 1: left; only 1: red; only 1: auto with real).	1.16197705269	1916
Coq.Reals.RIneq.Rle_lt_or_eq_dec	40
Coq.Reals.RIneq.inser_trans_R	40
Coq.Reals.RIneq.Rplus_0_r	40	386.0	synth with cache (only 1: intros; only 1: ring).	1.25587201118	91
Coq.Reals.RIneq.Rplus_ne	40	4	synth with cache (only 1: intuition).	1.11490702629	149
Coq.Reals.RIneq.Rplus_opp_l	40	1.0	synth with cache (only 1: intros; only 1: ring).	2.87080717087	98
Coq.Reals.RIneq.Rplus_opp_r_uniq	40
Coq.Reals.RIneq.Rplus_eq_compat_l	40	707	synth with cache (only 1: firstorder).	0.214380979538	132
Coq.Reals.RIneq.Rplus_eq_compat_r	40	2.64	synth with cache (only 1: intro H; only 1: congruence).	0.104960918427	142
Coq.Reals.RIneq.Rplus_eq_reg_l	40
Coq.Reals.RIneq.Rplus_eq_reg_r	40
Coq.Reals.RIneq.Rplus_0_r_uniq	40
Coq.Reals.RIneq.Rplus_eq_0_l	40
Coq.Reals.RIneq.Rplus_eq_R0	40
Coq.Reals.RIneq.Rinv_r	40
Coq.Reals.RIneq.Rinv_l_sym	40	0.0.1	synth with cache (only 1: intros; only 1: field; only 1: trivial).	0.0366101264954	4
Coq.Reals.RIneq.Rinv_r_sym	40	0.0.1	synth with cache (only 1: intros; only 1: field; only 1: trivial).	0.0373530387878	4
Coq.Reals.RIneq.Rmult_0_r	40	1.1	synth with cache (only 1: intros; only 1: field).	0.0726499557495	48
Coq.Reals.RIneq.Rmult_0_l	40	0.0	synth with cache (only 1: intro; only 1: ring).	0.0416209697723	2
Coq.Reals.RIneq.Rmult_ne	40	2.0.0.0.132	synth with cache (only 1: intuition; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: apply Rmult_1_l).	0.76624584198	944
Coq.Reals.RIneq.Rmult_1_r	40	2.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: apply Rmult_1_l).	0.1905169487	77
Coq.Reals.RIneq.Rmult_eq_compat_l	40	0.0	synth with cache (only 1: intros r r1 r2; only 1: apply f_equal).	0.0162148475647	2
Coq.Reals.RIneq.Rmult_eq_compat_r	40	65.1	synth with cache (only 1: intros r r1 r2; only 1: now destruct 1 || trivial).	0.0490782260895	41
Coq.Reals.RIneq.Rmult_eq_reg_l	40
Coq.Reals.RIneq.Rmult_eq_reg_r	40
Coq.Reals.RIneq.Rmult_integral	40
Coq.Reals.RIneq.Rmult_eq_0_compat	40
Coq.Reals.RIneq.Rmult_eq_0_compat_r	40	1.0	synth with cache (only 1: intros a b Hb; only 1: auto with real).	0.02068400383	3
Coq.Reals.RIneq.Rmult_eq_0_compat_l	40	0	synth with cache (only 1: auto with real).	0.0121209621429	1
Coq.Reals.RIneq.Rmult_neq_0_reg	40	66.4	synth with cache (only 1: intros r b; only 1: intuition).	1.13168692589	1066
Coq.Reals.RIneq.Rmult_integral_contrapositive	40
Coq.Reals.RIneq.Rmult_integral_contrapositive_currified	40	0.0	synth with cache (only 1: intros r1 r2 H; only 1: auto with real).	0.0265121459961	2
Coq.Reals.RIneq.Rmult_plus_distr_r	40
Coq.Reals.RIneq.Rsqr_0	40
Coq.Reals.RIneq.Rsqr_0_uniq	40
Coq.Reals.RIneq.Ropp_eq_compat	40	2.0	synth with cache (only 1: intros x y H; only 1: now subst).	0.231852054596	209
Coq.Reals.RIneq.Ropp_0	40	2	synth with cache (only 1: ring).	0.0276789665222	35
Coq.Reals.RIneq.Ropp_eq_0_compat	40	0.384.1	synth with cache (only 1: intros; only 1: dependent rewrite H; only 1: ring).	0.0320541858673	16
Coq.Reals.RIneq.Ropp_involutive	40	1.1	synth with cache (only 1: intros; only 1: ring).	0.34654378891	54
Coq.Reals.RIneq.Ropp_neq_0_compat	40
Coq.Reals.RIneq.Ropp_plus_distr	40	1.0.641	synth with cache (only 1: intro abs; only 1: intros; only 1: ring).	0.161337137222	91
Coq.Reals.RIneq.Ropp_mult_distr_l	40	3.514.640.66.3.1	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intro x; only 1: generalize Rlt_trans, Rlt_eq_compat; only 1: intros m IH; only 1: ring).	13.681055069	6327
Coq.Reals.RIneq.Ropp_mult_distr_l_reverse	40	0.0	synth with cache (only 1: intros; only 1: ring).	0.0767090320587	2
Coq.Reals.RIneq.Rmult_opp_opp	40	0.192.320.0.1.0	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), Rlt_dichotomy_converse; only 1: unfold not; only 1: intros H; only 1: intro H2; only 1: ring).	1.62261795998	837
Coq.Reals.RIneq.Ropp_mult_distr_r	40
Coq.Reals.RIneq.Ropp_mult_distr_r_reverse	40	0.0	synth with cache (only 1: intros; only 1: ring).	0.0237607955933	2
Coq.Reals.RIneq.Rminus_0_r	40	1.0	synth with cache (only 1: intros; only 1: ring).	0.395075082779	36
Coq.Reals.RIneq.Rminus_0_l	40	0.0	synth with cache (only 1: intro; only 1: ring).	0.0211441516876	2
Coq.Reals.RIneq.Ropp_minus_distr	40	0.1	synth with cache (only 1: intros; only 1: ring).	0.0249989032745	3
Coq.Reals.RIneq.Ropp_minus_distr'	40	0.0	synth with cache (only 1: intros; only 1: ring).	0.0248599052429	2
Coq.Reals.RIneq.Rminus_diag_eq	40	0.640.0.0.1.192.0.192.0.4.0.0	synth with cache (only 1: intros r b; only 1: pattern r at 2; only 1: unfold Rminus; only 1: pattern r at 2; only 1: intuition; only 1: pattern r at 2; only 1: intuition; only 1: intros; only 1: apply Rquot1; only 1: rewrite Rrepr_plus, Rrepr_opp, Rrepr_0; only 1: rewrite <- H; only 1: apply CReal_plus_opp_r).	37.4662189484	83717
Coq.Reals.RIneq.Rminus_diag_uniq	40
Coq.Reals.RIneq.Rminus_diag_uniq_sym	40	641.451	synth with cache (only 1: symmetry; only 1: firstorder).	6.5565290451	9518
Coq.Reals.RIneq.Rplus_minus	40	0.1	synth with cache (only 1: intros; only 1: ring).	0.0216970443726	3
Coq.Reals.RIneq.Rminus_eq_contra	40	2.320.0	synth with cache (only 1: intros; only 1: intros n; only 1: auto with real).	0.138423919678	42
Coq.Reals.RIneq.Rminus_not_eq	40	0.64.0	synth with cache (only 1: red; only 1: intros H x0; only 1: auto with real).	0.155897855759	75
Coq.Reals.RIneq.Rminus_not_eq_right	40	0.0.0.0.0	synth with cache (only 1: red; only 1: intros; only 1: elim H; only 1: apply Rminus_diag_eq; only 1: auto).	0.0307779312134	5
Coq.Reals.RIneq.Rmult_minus_distr_l	40	1.0	synth with cache (only 1: intros; only 1: ring).	0.1277987957	55
Coq.Reals.RIneq.Rinv_1	40
Coq.Reals.RIneq.Rinv_neq_0_compat	40
Coq.Reals.RIneq.Rinv_involutive	40	0.0.1	synth with cache (only 1: intros; only 1: field; only 1: trivial).	0.0307290554047	4
Coq.Reals.RIneq.Rinv_mult_distr	40
Coq.Reals.RIneq.Ropp_inv_permute	40	0.0.0	synth with cache (only 1: intros; only 1: field; only 1: trivial).	0.0330860614777	3
Coq.Reals.RIneq.Rinv_r_simpl_r	40	128.0.641.0	synth with cache (only 1: intros a b Hb; only 1: field_simplify; only 1: field; only 1: now subst).	0.0842049121857	37
Coq.Reals.RIneq.Rinv_r_simpl_l	40	0.0.0.2.4.0.0	synth with cache (only 1: intros; only 1: transitivity (1 * r2); only 1: apply Rmult_eq_reg_l with r1; only 1: field; only 1: auto with real; only 1: auto with real; only 1: auto with real).	6.49906206131	4259
Coq.Reals.RIneq.Rinv_r_simpl_m	40	0.1.647	synth with cache (only 1: intros b Hb IH; only 1: field; only 1: auto with real).	32.165692091	52871
Coq.Reals.RIneq.Rinv_mult_simpl	40
Coq.Reals.RIneq.Rplus_gt_compat_l	40	192	synth with cache (only 1: intuition).	0.0773940086365	90
Coq.Reals.RIneq.Rplus_lt_compat_r	40	257.1.1	synth with cache (only 1: generalize Rlt_trans, Rlt_eq_compat; only 1: intuition eauto  2; only 1: eauto with *).	16.5978229046	2080
Coq.Reals.RIneq.Rplus_gt_compat_r	40	193	synth with cache (only 1: intuition).	0.0521330833435	55
Coq.Reals.RIneq.Rplus_le_compat_l	40	1.128.704.64	synth with cache (only 1: intro H'; only 1: unfold Rle; only 1: intro eq_dep_eq; only 1: intuition).	0.373377084732	367
Coq.Reals.RIneq.Rplus_ge_compat_l	40	386.130	synth with cache (only 1: intros n m H1 H2; only 1: firstorder).	0.910796880722	940
Coq.Reals.RIneq.Rplus_le_compat_r	40	0.0.0.0.2.0.0.0.0.0	synth with cache (only 1: unfold Rle; only 1: intros; only 1: elim H; only 1: intro; only 1: left; only 1: auto with zarith real; only 1: intro; only 1: right; only 1: rewrite <- H0; only 1: auto with zarith real).	0.868988037109	1075
Coq.Reals.RIneq.Rplus_ge_compat_r	40	578.0.192.64	synth with cache (only 1: intro n; only 1: red; only 1: intros; only 1: firstorder).	0.352309942245	180
Coq.Reals.RIneq.Rplus_lt_compat	40	1.576.0.256.2.65.448.448.772	synth with cache (only 1: destruct Pos.ggcd as (g, (aa, bb)); only 1: now constructor; only 1: now constructor; only 1: intros m n; only 1: generalize Rlt_trans, Rlt_eq_compat; only 1: intro H'; only 1: generalize Rlt_trans, Rlt_eq_compat; only 1: intros a b H; only 1: intuition eauto  4 with real).	37.6924240589	33677
Coq.Reals.RIneq.Rplus_le_compat	40
Coq.Reals.RIneq.Rplus_gt_compat	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply Rlt_trans with (r2 + r3); only 1: auto with real; only 1: auto with real).	0.0233118534088	4
Coq.Reals.RIneq.Rplus_ge_compat	40
Coq.Reals.RIneq.Rplus_lt_le_compat	40	0.128.642.448.64.704.577	synth with cache (only 1: intro LT; only 1: intros H ?; only 1: Bool.destr_bool; only 1: inversion H1; only 1: auto with real; only 1: rewrite H2; only 1: auto with real).	23.303508997	7335
Coq.Reals.RIneq.Rplus_le_lt_compat	40	706.1.67.448.192	synth with cache (only 1: intros k H1 H2; only 1: intros a H; only 1: firstorder; only 1: subst; only 1: firstorder).	8.89985799789	20841
Coq.Reals.RIneq.Rplus_gt_ge_compat	40	0.0.1.68.2	synth with cache (only 1: intros; only 1: compute; only 1: apply Rle_lt_trans with (r2 + r3); only 1: auto with real; only 1: auto with real).	20.7857439518	23767
Coq.Reals.RIneq.Rplus_ge_gt_compat	40	130.769.2.576.0.514.385	synth with cache (only 1: intros n IH; only 1: intros a H; only 1: intros; only 1: firstorder  (subst; auto); only 1: pose proof H as H'; only 1: firstorder; only 1: intuition).	12.06391716	19207
Coq.Reals.RIneq.Rplus_lt_0_compat	40
Coq.Reals.RIneq.Rplus_le_lt_0_compat	40
Coq.Reals.RIneq.Rplus_lt_le_0_compat	40
Coq.Reals.RIneq.Rplus_le_le_0_compat	40
Coq.Reals.RIneq.sum_inequa_Rle_lt	40	0.515	synth with cache (only 1: intros a Ha; only 1: intuition).	0.167080163956	152
Coq.Reals.RIneq.Rplus_lt_reg_l	40
Coq.Reals.RIneq.Rplus_lt_reg_r	40
Coq.Reals.RIneq.Rplus_le_reg_l	40
Coq.Reals.RIneq.Rplus_le_reg_r	40
Coq.Reals.RIneq.Rplus_gt_reg_l	40
Coq.Reals.RIneq.Rplus_ge_reg_l	40
Coq.Reals.RIneq.Rplus_le_reg_pos_r	40
Coq.Reals.RIneq.Rplus_lt_reg_pos_r	40
Coq.Reals.RIneq.Rplus_ge_reg_neg_r	40
Coq.Reals.RIneq.Rplus_gt_reg_neg_r	40
Coq.Reals.RIneq.Ropp_gt_lt_contravar	40
Coq.Reals.RIneq.Ropp_lt_gt_contravar	40	576.0	synth with cache (only 1: intros; only 1: auto using Rplus_le_compat_l with rorders).	0.0688390731812	55
Coq.Reals.RIneq.Ropp_lt_contravar	40	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Rlt_def; only 1: rewrite Rrepr_opp, Rrepr_opp; only 1: apply CRealLtForget; only 1: apply CReal_opp_gt_lt_contravar; only 1: rewrite Rlt_def in H; only 1: apply CRealLtEpsilon; only 1: exact H).	0.0400810241699	8
Coq.Reals.RIneq.Ropp_gt_contravar	40	1	synth with cache (only 1: auto with real).	0.0492191314697	68
Coq.Reals.RIneq.Ropp_le_ge_contravar	40	192.67	synth with cache (only 1: intros H1 n H2; only 1: firstorder).	0.23237991333	350
Coq.Reals.RIneq.Ropp_ge_le_contravar	40	0.192.320.0	synth with cache (only 1: unfold Rge; only 1: intros EQ; only 1: intros Hx; only 1: auto with real).	0.0864820480347	120
Coq.Reals.RIneq.Ropp_le_contravar	40	2	synth with cache (only 1: auto with real).	0.139461040497	168
Coq.Reals.RIneq.Ropp_ge_contravar	40	0.0.0.0	synth with cache (only 1: unfold Rge; only 1: intros r1 r2 [H| H]; only 1: auto with real; only 1: auto with real).	0.0361649990082	4
Coq.Reals.RIneq.Ropp_0_lt_gt_contravar	40
Coq.Reals.RIneq.Ropp_0_gt_lt_contravar	40	0.0.0.0	synth with cache (only 1: intros; only 1: replace 0 with (- 0); only 1: auto with real; only 1: auto with real).	0.0217909812927	4
Coq.Reals.RIneq.Ropp_lt_gt_0_contravar	40	0.0.0.0	synth with cache (only 1: intros; only 1: replace 0 with (- 0); only 1: auto with real; only 1: auto with real).	0.0188679695129	4
Coq.Reals.RIneq.Ropp_gt_lt_0_contravar	40	0.0.0.0	synth with cache (only 1: intros; only 1: replace 0 with (- 0); only 1: auto with real; only 1: auto with real).	0.0199358463287	4
Coq.Reals.RIneq.Ropp_0_le_ge_contravar	40	0.0.0.1	synth with cache (only 1: intros; only 1: replace 0 with (- 0); only 1: auto with real; only 1: auto with real).	0.0180420875549	5
Coq.Reals.RIneq.Ropp_0_ge_le_contravar	40	0.0.0.0	synth with cache (only 1: intros; only 1: replace 0 with (- 0); only 1: auto with real; only 1: auto with real).	0.0207488536835	4
Coq.Reals.RIneq.Ropp_lt_cancel	40
Coq.Reals.RIneq.Ropp_gt_cancel	40	1.5	synth with cache (only 1: unfold Rgt; only 1: auto with real).	1.57743096352	4327
Coq.Reals.RIneq.Ropp_le_cancel	40	0.0.0.0.67.64	synth with cache (only 1: intros x y H; only 1: firstorder; only 1: right; only 1: rewrite <- (Ropp_involutive x); only 1: rewrite <- (Ropp_involutive y); only 1: auto with real).	2.6937520504	3862
Coq.Reals.RIneq.Ropp_ge_cancel	40
Coq.Reals.RIneq.Rmult_lt_compat_r	40
Coq.Reals.RIneq.Rmult_gt_compat_r	40	0	synth with cache (only 1: auto using Rplus_lt_compat with rorders).	0.0255079269409	1
Coq.Reals.RIneq.Rmult_gt_compat_l	40	769.384	synth with cache (only 1: intros i j Hi E; only 1: firstorder).	0.118227005005	95
Coq.Reals.RIneq.Rmult_le_compat_l	40
Coq.Reals.RIneq.Rmult_le_compat_r	40
Coq.Reals.RIneq.Rmult_ge_compat_l	40	256.64.0.65	synth with cache (only 1: intro H4; only 1: do 2 intro; only 1: intros n m; only 1: auto with *).	0.0718579292297	106
Coq.Reals.RIneq.Rmult_ge_compat_r	40	258	synth with cache (only 1: intuition).	0.0648350715637	91
Coq.Reals.RIneq.Rmult_le_compat	40
Coq.Reals.RIneq.Rmult_ge_compat	40	64.129	synth with cache (only 1: intros n m H1 H2; only 1: auto with *).	0.143539905548	73
Coq.Reals.RIneq.Rmult_gt_0_lt_compat	40	2.0.321.512.257.64	synth with cache (only 1: intros GT; only 1: intros Hab; only 1: intros l; only 1: intros H3; only 1: generalize Rlt_trans, Rlt_eq_compat; only 1: eauto using Rmult_lt_compat_l with rorders).	2.59622502327	2865
Coq.Reals.RIneq.Rmult_le_0_lt_compat	40
Coq.Reals.RIneq.Rmult_lt_0_compat	40
Coq.Reals.RIneq.Rmult_le_compat_neg_l	40
Coq.Reals.RIneq.Rmult_le_ge_compat_neg_l	40	0.2.0.1.0	synth with cache (only 1: intros; only 1: replace r with (- - r); only 1: do 2 rewrite (Ropp_mult_distr_l_reverse (- r)); only 1: auto with real; only 1: auto with real).	1.25484609604	2087
Coq.Reals.RIneq.Rmult_lt_gt_compat_neg_l	40
Coq.Reals.RIneq.Rmult_lt_reg_l	40
Coq.Reals.RIneq.Rmult_lt_reg_r	40
Coq.Reals.RIneq.Rmult_gt_reg_l	40	192.0.0.0	synth with cache (only 1: intros; only 1: apply Rmult_lt_reg_l with r; only 1: exact H; only 1: auto with zarith).	0.0320601463318	14
Coq.Reals.RIneq.Rmult_le_reg_l	40
Coq.Reals.RIneq.Rmult_le_reg_r	40
Coq.Reals.RIneq.Rlt_minus	40
Coq.Reals.RIneq.Rgt_minus	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply (Rplus_lt_reg_l r2); only 1: replace (r2 + (r1 - r2)) with r1 by ring; only 1: now rewrite Rplus_0_r).	0.025762796402	4
Coq.Reals.RIneq.Rlt_Rminus	40
Coq.Reals.RIneq.Rle_minus	40	642.1	synth with cache (only 1: intros; only 1: firstorder).	0.53390288353	777
Coq.Reals.RIneq.Rge_minus	40
Coq.Reals.RIneq.Rminus_lt	40
Coq.Reals.RIneq.Rminus_gt	40	0.0.834.2.0.0.0.0	synth with cache (only 1: intros; only 1: replace r1 with (r1 - r2 + r2); only 1: pattern r2 at 3; only 1: replace r2 with (0 + r2); only 1: pattern r2 at 3; only 1: CRelationClasses.simpl_crelation; only 1: auto with real; only 1: ring).	2.76995015144	6211
Coq.Reals.RIneq.Rminus_gt_0_lt	40
Coq.Reals.RIneq.Rminus_le	40	0.0.0.0.0.1	synth with cache (only 1: intros; only 1: replace r2 with (0 + r2); only 1: replace r1 with (r1 - r2 + r2); only 1: auto with real; only 1: ring; only 1: auto with real).	0.29785490036	308
Coq.Reals.RIneq.Rminus_ge	40
Coq.Reals.RIneq.tech_Rplus	40
Coq.Reals.RIneq.Rle_0_sqr	40
Coq.Reals.RIneq.Rlt_0_sqr	40
Coq.Reals.RIneq.Rplus_sqr_eq_0_l	40
Coq.Reals.RIneq.Rplus_sqr_eq_0	40
Coq.Reals.RIneq.Rlt_0_1	40	0.0.1	synth with cache (only 1: replace 1 with (0 + 1); only 1: apply Rlt_n_Sn; only 1: apply Rplus_0_l).	0.0180559158325	4
Coq.Reals.RIneq.Rle_0_1	40	0.0.0.1	synth with cache (only 1: replace 1 with 1²; only 1: auto with real; only 1: unfold Rsqr; only 1: auto with real).	0.0186898708344	5
Coq.Reals.RIneq.Rinv_0_lt_compat	40
Coq.Reals.RIneq.Rinv_lt_0_compat	40	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Rnot_le_lt; only 1: red; only 1: intros; only 1: absurd (1 <= 0); only 1: auto with real; only 1: replace 1 with (r * / r); only 1: replace 0 with (r * 0); only 1: auto with real; only 1: auto with real; only 1: auto with real).	2.63860201836	1480
Coq.Reals.RIneq.Rinv_lt_contravar	40
Coq.Reals.RIneq.Rinv_1_lt_contravar	40
Coq.Reals.RIneq.Rle_lt_0_plus_1	40
Coq.Reals.RIneq.Rlt_plus_1	40
Coq.Reals.RIneq.tech_Rgt_minus	40	0.0.0.1.0.4.68	synth with cache (only 1: intros x y H; only 1: pattern x at 1; only 1: rewrite <- (Rplus_0_r x); only 1: apply Rplus_lt_compat_l; only 1: replace 0 with (- 0); only 1: auto with real; only 1: auto with real).	33.996393919	80459
Coq.Reals.RIneq.S_INR	40
Coq.Reals.RIneq.S_O_plus_INR	40	385.1.67.0.0.2.1	synth with cache (only 1: intros; only 1: elim n; only 1: simpl; only 1: auto with real; only 1: Bool.destr_bool; only 1: rewrite Rplus_comm; only 1: trivial using Nat2Z.is_nonneg).	5.54967403412	10874
Coq.Reals.RIneq.plus_INR	40
Coq.Reals.RIneq.minus_INR	40
Coq.Reals.RIneq.mult_INR	40
Coq.Reals.RIneq.pow_INR	40
Coq.Reals.RIneq.lt_0_INR	40
Coq.Reals.RIneq.lt_INR	40
Coq.Reals.RIneq.lt_1_INR	40
Coq.Reals.RIneq.pos_INR_nat_of_P	40
Coq.Reals.RIneq.pos_INR	40	0.0.577.1.3	synth with cache (only 1: induction n; only 1: auto with real; only 1: constructor 1; only 1: rewrite S_INR; only 1: auto with real).	0.588313817978	1164
Coq.Reals.RIneq.INR_lt	40
Coq.Reals.RIneq.le_INR	40	323.0.128.0.1	synth with cache (only 1: intros n m; only 1: induction 1; only 1: right; only 1: auto with real; only 1: eauto with *).	0.699792146683	1234
Coq.Reals.RIneq.INR_not_0	40	0.256.0.0.0.0	synth with cache (only 1: red; only 1: intros; only 1: elim H; only 1: rewrite H0; only 1: simpl in *; only 1: reflexivity).	0.040990114212	18
Coq.Reals.RIneq.not_0_INR	40	257.1.1.0.0.66	synth with cache (only 1: induction n; only 1: red; only 1: intros H; only 1: exfalso; only 1: now apply H; only 1: firstorder).	14.8756628036	4031
Coq.Reals.RIneq.not_INR	40
Coq.Reals.RIneq.INR_eq	40
Coq.Reals.RIneq.INR_le	40
Coq.Reals.RIneq.not_1_INR	40
Coq.Reals.RIneq.IZN	40	0.1.0.9	synth with cache (only 1: intros x IH; only 1: exists (Z.to_nat x); only 1: symmetry; only 1: now apply Z2Nat.id).	13.4055840969	19382
Coq.Reals.RIneq.INR_IPR	40
Coq.Reals.RIneq.INR_IZR_INZ	40
Coq.Reals.RIneq.plus_IZR_NEG_POS	40
Coq.Reals.RIneq.plus_IZR	40
Coq.Reals.RIneq.mult_IZR	40
Coq.Reals.RIneq.pow_IZR	40
Coq.Reals.RIneq.succ_IZR	40	2.3.0.0.0.1.1.0.0.67	synth with cache (only 1: unfold Z.sub, Z.succ, Z.pred; only 1: intro t; only 1: destruct t; only 1: auto with real; only 1: simpl; only 1: unfold IZR; only 1: rewrite <- 3!INR_IPR, Pos2Nat.inj_add; only 1: apply plus_INR; only 1: rewrite Rplus_comm; only 1: apply plus_IZR_NEG_POS).	14.0294969082	12134
Coq.Reals.RIneq.opp_IZR	40	0.0.770.0.0.0.1.450.578.578.129.1	synth with cache (only 1: intro t; only 1: case N.div_eucl; only 1: N.Private_Tac.order || (right; N.Private_Tac.order) || (left; N.Private_Tac.order); only 1: N.Private_Tac.order || (right; N.Private_Tac.order) || (left; N.Private_Tac.order); only 1: intros LT; only 1: destruct t; only 1: auto with real; only 1: trivial; only 1: intros H; only 1: CRelationClasses.simpl_crelation; only 1: unfold IZR, IPR; only 1: ring).	10.3033099174	36977
Coq.Reals.RIneq.minus_IZR	40
Coq.Reals.RIneq.Z_R_minus	40
Coq.Reals.RIneq.lt_0_IZR	40
Coq.Reals.RIneq.lt_IZR	40
Coq.Reals.RIneq.eq_IZR_R0	40
Coq.Reals.RIneq.eq_IZR	40
Coq.Reals.RIneq.not_0_IZR	40
Coq.Reals.RIneq.le_0_IZR	40
Coq.Reals.RIneq.le_IZR	40
Coq.Reals.RIneq.le_IZR_R1	40
Coq.Reals.RIneq.IZR_ge	40
Coq.Reals.RIneq.IZR_le	40
Coq.Reals.RIneq.IZR_lt	40
Coq.Reals.RIneq.IZR_neq	40
Coq.Reals.RIneq.one_IZR_lt1	40
Coq.Reals.RIneq.one_IZR_r_R1	40
Coq.Reals.RIneq.single_z_r_R1	40
Coq.Reals.RIneq.tech_single_z_r_R1	40
Coq.Reals.RIneq.Rmult_le_pos	40	0.0.0.1	synth with cache (only 1: intros; only 1: replace 0 with (0 * r2); only 1: auto with real; only 1: auto with real).	0.270328998566	196
Coq.Reals.RIneq.Rinv_le_contravar	40
Coq.Reals.RIneq.Rle_Rinv	40
Coq.Reals.RIneq.Ropp_div	40
Coq.Reals.RIneq.double	40	5.0	synth with cache (only 1: intros; only 1: ring).	0.5228099823	1166
Coq.Reals.RIneq.double_var	40	0.4.0.136	synth with cache (only 1: cut (1%positive = 1%positive); only 1: intros; only 1: field; only 1: trivial).	1.52445292473	3991
Coq.Reals.RIneq.R_rm	40
Coq.Reals.RIneq.Zeq_bool_IZR	40	1.2.2.1	synth with cache (only 1: intros; only 1: apply Zeq_is_eq_bool; only 1: apply eq_IZR; only 1: auto with zarith real).	1.35594677925	1788
Coq.Reals.RIneq.Rmult_ge_0_gt_0_lt_compat	40	0.0.1.0	synth with cache (only 1: intros; only 1: apply Rle_lt_trans with (r2 * r3); only 1: auto with real; only 1: auto with real).	0.0726549625397	55
Coq.Reals.RIneq.le_epsilon	40
Coq.Reals.RIneq.completeness_weak	40
Coq.Reals.RIneq.Rdiv_lt_0_compat	40
Coq.Reals.RIneq.Rdiv_plus_distr	40
Coq.Reals.RIneq.Rdiv_minus_distr	40	0.0.0.320.578	synth with cache (only 1: intro; only 1: intro m; only 1: unfold Rdiv; only 1: intros; only 1: ring).	0.944441795349	588
Coq.Reals.RIneq.Req_EM_T	40	0.0.0.0	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), Rlt_dichotomy_converse; only 1: unfold not; only 1: intuition eauto  3).	0.031347990036	4
Coq.Reals.ClassicalDedekindReals.isLowerCut_hprop	40
Coq.Reals.ClassicalDedekindReals.lowerCutBelow	40
Coq.Reals.ClassicalDedekindReals.lowerCutAbove	40
Coq.Reals.ClassicalDedekindReals.DRealQlim_rec	40
Coq.Reals.ClassicalDedekindReals.DRealQlim	40
Coq.Reals.ClassicalDedekindReals.DRealAbstr	40
Coq.Reals.ClassicalDedekindReals.UpperAboveLower	40
Coq.Reals.ClassicalDedekindReals.DRealRepr	40
Coq.Reals.ClassicalDedekindReals.Rle_antisym	40
Coq.Reals.ClassicalDedekindReals.lowerUpper	40
Coq.Reals.ClassicalDedekindReals.DRealOpen	40
Coq.Reals.ClassicalDedekindReals.DRealReprQ	40
Coq.Reals.ClassicalDedekindReals.DRealReprQup	40
Coq.Reals.ClassicalDedekindReals.DRealQuot1	40
Coq.Reals.ClassicalDedekindReals.DRealAbstrFalse	40
Coq.Reals.ClassicalDedekindReals.DRealQuot2	40
Coq.Reals.ArithProp.minus_neq_O	40
Coq.Reals.ArithProp.le_minusni_n	40	385.321.1.1.4	synth with cache (only 1: intros n m; only 1: Nat.induct ltac:(m); only 1: intros LE; only 1: now Nat.nzsimpl'; only 1: auto with *).	4.6168551445	6713
Coq.Reals.ArithProp.lt_minus_O_lt	40
Coq.Reals.ArithProp.even_odd_cor	40
Coq.Reals.ArithProp.le_double	40	0.0	synth with cache (only 1: intros n m; only 1: apply Nat.mul_le_mono_pos_l, Nat.lt_0_succ).	0.0303428173065	2
Coq.Reals.ArithProp.euclidian_division	40
Coq.Reals.ArithProp.tech8	40	384.1	synth with cache (only 1: intro n; only 1: firstorder).	0.0787649154663	54
Coq.Reals.R_Ifp.tech_up	40
Coq.Reals.R_Ifp.up_tech	40
Coq.Reals.R_Ifp.fp_R0	40
Coq.Reals.R_Ifp.for_base_fp	40
Coq.Reals.R_Ifp.base_fp	40
Coq.Reals.R_Ifp.base_Int_part	40
Coq.Reals.R_Ifp.Int_part_INR	40
Coq.Reals.R_Ifp.fp_nat	40
Coq.Reals.R_Ifp.R0_fp_O	40
Coq.Reals.R_Ifp.Rminus_Int_part1	40
Coq.Reals.R_Ifp.Rminus_Int_part2	40
Coq.Reals.R_Ifp.Rminus_fp1	40
Coq.Reals.R_Ifp.Rminus_fp2	40
Coq.Reals.R_Ifp.plus_Int_part1	40
Coq.Reals.R_Ifp.plus_Int_part2	40
Coq.Reals.R_Ifp.plus_frac_part1	40
Coq.Reals.R_Ifp.plus_frac_part2	40
Coq.Reals.Machin.atan_sub_correct	40
Coq.Reals.Machin.tech	40
Coq.Reals.Machin.Machin_2_3	40
Coq.Reals.Machin.Machin_4_5_239	40
Coq.Reals.Machin.Machin_2_3_7	40
Coq.Reals.Machin.PI_2_3_7_ineq	40
Coq.Reals.RiemannInt.phi_sequence_prop	40
Coq.Reals.RiemannInt.RiemannInt_P1	40
Coq.Reals.RiemannInt.RiemannInt_P2	40
Coq.Reals.RiemannInt.RiemannInt_P3	40
Coq.Reals.RiemannInt.RiemannInt_exists	40
Coq.Reals.RiemannInt.RiemannInt_P4	40
Coq.Reals.RiemannInt.RinvN_pos	40	3	synth with cache (only 1: auto with real).	0.0368950366974	4
Coq.Reals.RiemannInt.RinvN_cv	40
Coq.Reals.RiemannInt.Riemann_integrable_ext	40
Coq.Reals.RiemannInt.RiemannInt_P5	40
Coq.Reals.RiemannInt.maxN	40
Coq.Reals.RiemannInt.Heine_cor1	40
Coq.Reals.RiemannInt.Heine_cor2	40
Coq.Reals.RiemannInt.SubEqui_P1	40	1088.0.0.1	synth with cache (only 1: intros; only 1: simpl; only 1: set (I := fun n : nat => a + INR n * del < b); only 1: easy || now destruct 1).	0.0770161151886	22
Coq.Reals.RiemannInt.SubEqui_P2	40
Coq.Reals.RiemannInt.SubEqui_P3	40
Coq.Reals.RiemannInt.SubEqui_P4	40
Coq.Reals.RiemannInt.SubEqui_P5	40
Coq.Reals.RiemannInt.SubEqui_P6	40
Coq.Reals.RiemannInt.SubEqui_P7	40
Coq.Reals.RiemannInt.SubEqui_P8	40
Coq.Reals.RiemannInt.SubEqui_P9	40
Coq.Reals.RiemannInt.RiemannInt_P6	40
Coq.Reals.RiemannInt.RiemannInt_P7	40
Coq.Reals.RiemannInt.continuity_implies_RiemannInt	40
Coq.Reals.RiemannInt.RiemannInt_P8	40
Coq.Reals.RiemannInt.RiemannInt_P9	40
Coq.Reals.RiemannInt.RiemannInt_P10	40
Coq.Reals.RiemannInt.RiemannInt_P11	40
Coq.Reals.RiemannInt.RiemannInt_P12	40
Coq.Reals.RiemannInt.RiemannInt_P13	40
Coq.Reals.RiemannInt.RiemannInt_P14	40
Coq.Reals.RiemannInt.RiemannInt_P15	40
Coq.Reals.RiemannInt.RiemannInt_P16	40
Coq.Reals.RiemannInt.Rle_cv_lim	40
Coq.Reals.RiemannInt.RiemannInt_P17	40
Coq.Reals.RiemannInt.RiemannInt_P18	40
Coq.Reals.RiemannInt.RiemannInt_P19	40
Coq.Reals.RiemannInt.FTC_P1	40
Coq.Reals.RiemannInt.RiemannInt_P20	40
Coq.Reals.RiemannInt.RiemannInt_P21	40
Coq.Reals.RiemannInt.RiemannInt_P22	40
Coq.Reals.RiemannInt.RiemannInt_P23	40
Coq.Reals.RiemannInt.RiemannInt_P24	40
Coq.Reals.RiemannInt.RiemannInt_P25	40
Coq.Reals.RiemannInt.RiemannInt_P26	40
Coq.Reals.RiemannInt.RiemannInt_P27	40
Coq.Reals.RiemannInt.RiemannInt_P28	40
Coq.Reals.RiemannInt.RiemannInt_P29	40
Coq.Reals.RiemannInt.RiemannInt_P30	40
Coq.Reals.RiemannInt.RiemannInt_P31	40
Coq.Reals.RiemannInt.RiemannInt_P32	40
Coq.Reals.RiemannInt.RiemannInt_P33	40
Coq.Reals.RiemannInt.FTC_Riemann	40
Coq.Reals.RiemannInt.RiemannInt_const_bound	40
Coq.Reals.RiemannInt.Riemann_integrable_scal	40
Coq.Reals.RiemannInt.Riemann_integrable_Ropp	40
Coq.Reals.Ranalysis2.formule	40
Coq.Reals.Ranalysis2.maj_term1	40
Coq.Reals.Ranalysis2.maj_term2	40
Coq.Reals.Ranalysis2.maj_term3	40
Coq.Reals.Ranalysis2.maj_term4	40
Coq.Reals.Ranalysis2.D_x_no_cond	40
Coq.Reals.Ranalysis2.Rabs_4	40
Coq.Reals.Ranalysis2.Rlt_4	40
Coq.Reals.Ranalysis2.quadruple	40	4.0	synth with cache (only 1: intro; only 1: field).	0.418731927872	343
Coq.Reals.Ranalysis2.quadruple_var	40	66.0.1.129.449	synth with cache (only 1: destruct (archimed 0) as [H1 H2]; only 1: intro z; only 1: rewrite <- minus_IZR in H2; only 1: unfold Rdiv; only 1: field).	1.96976590157	1870
Coq.Reals.Ranalysis2.continuous_neq_0	40
Coq.Reals.Rtopology.interior_P1	40
Coq.Reals.Rtopology.interior_P2	40	64.0	synth with cache (only 1: unfold interior; only 1: Bool.destr_bool).	0.0314528942108	5
Coq.Reals.Rtopology.adherence_P1	40
Coq.Reals.Rtopology.included_trans	40	576.448.64.384	synth with cache (only 1: intros z1 z2; only 1: intros L R n; only 1: intros a H; only 1: eauto with *).	0.277819156647	263
Coq.Reals.Rtopology.interior_P3	40
Coq.Reals.Rtopology.complementary_P1	40	769	synth with cache (only 1: firstorder).	0.094468832016	95
Coq.Reals.Rtopology.adherence_P2	40
Coq.Reals.Rtopology.adherence_P3	40
Coq.Reals.Rtopology.open_set_P1	40
Coq.Reals.Rtopology.closed_set_P1	40
Coq.Reals.Rtopology.neighbourhood_P1	40	2.704.896.0	synth with cache (only 1: unfold included; only 1: intros s1; only 1: intros m; only 1: firstorder).	0.541750907898	419
Coq.Reals.Rtopology.open_set_P2	40	257.0.576	synth with cache (only 1: intros r H; only 1: intros; only 1: firstorder  (subst; auto)).	0.284579992294	193
Coq.Reals.Rtopology.open_set_P3	40
Coq.Reals.Rtopology.open_set_P4	40	1.1.0.0	synth with cache (only 1: unfold open_set, complementary, point_adherent; only 1: intro; only 1: unfold neighbourhood; only 1: easy).	0.0989298820496	6
Coq.Reals.Rtopology.open_set_P5	40	579.514.0.67.899.0.769	synth with cache (only 1: intro p; only 1: intros; only 1: revert p; only 1: compute; only 1: intro; only 1: reflexivity || destruct H; only 1: eauto).	17.1956679821	45963
Coq.Reals.Rtopology.disc_P1	40
Coq.Reals.Rtopology.continuity_P1	40
Coq.Reals.Rtopology.continuity_P2	40
Coq.Reals.Rtopology.continuity_P3	40
Coq.Reals.Rtopology.Rsepare	40
Coq.Reals.Rtopology.restriction_family	40
Coq.Reals.Rtopology.family_P1	40	66.0.128.1.705.640.0	synth with cache (only 1: intros; only 1: revert H; only 1: intros n m Hm H; only 1: elim H; only 1: simpl; only 1: intros; only 1: firstorder).	37.1653399467	51041
Coq.Reals.Rtopology.open_set_P6	40	384.0.258.0	synth with cache (only 1: unfold open_set; only 1: intros n1 n2 H; only 1: intros; only 1: firstorder).	1.65811920166	2849
Coq.Reals.Rtopology.compact_P1	40
Coq.Reals.Rtopology.compact_P2	40
Coq.Reals.Rtopology.compact_EMP	40
Coq.Reals.Rtopology.compact_eqDom	40
Coq.Reals.Rtopology.compact_P3	40
Coq.Reals.Rtopology.compact_P4	40
Coq.Reals.Rtopology.compact_P5	40
Coq.Reals.Rtopology.compact_carac	40
Coq.Reals.Rtopology.continuity_compact	40
Coq.Reals.Rtopology.prolongement_C0	40
Coq.Reals.Rtopology.continuity_ab_maj	40
Coq.Reals.Rtopology.continuity_ab_min	40
Coq.Reals.Rtopology.ValAdh_un_exists	40
Coq.Reals.Rtopology.ValAdh_un_prop	40
Coq.Reals.Rtopology.adherence_P4	40	897.0.1	synth with cache (only 1: intros; only 1: unfold included; only 1: firstorder).	0.543333053589	377
Coq.Reals.Rtopology.compact_P6	40
Coq.Reals.Rtopology.Bolzano_Weierstrass	40
Coq.Reals.Rtopology.is_lub_u	40	66.768.832	synth with cache (only 1: intros H A; only 1: intros x x' Hx; only 1: firstorder).	2.4408249855	592
Coq.Reals.Rtopology.domain_P1	40
Coq.Reals.Rtopology.Heine	40
Coq.Reals.Raxioms.Rrepr_0	40
Coq.Reals.Raxioms.Rrepr_1	40
Coq.Reals.Raxioms.Rrepr_plus	40
Coq.Reals.Raxioms.Rrepr_opp	40
Coq.Reals.Raxioms.Rrepr_minus	40
Coq.Reals.Raxioms.Rrepr_mult	40
Coq.Reals.Raxioms.Rrepr_inv	40
Coq.Reals.Raxioms.Rrepr_le	40
Coq.Reals.Raxioms.Rrepr_appart	40
Coq.Reals.Raxioms.Rappart_repr	40
Coq.Reals.Raxioms.Rplus_comm	40
Coq.Reals.Raxioms.Rplus_assoc	40
Coq.Reals.Raxioms.Rplus_opp_r	40
Coq.Reals.Raxioms.Rplus_0_l	40
Coq.Reals.Raxioms.Rmult_comm	40
Coq.Reals.Raxioms.Rmult_assoc	40
Coq.Reals.Raxioms.Rinv_l	40
Coq.Reals.Raxioms.Rmult_1_l	40
Coq.Reals.Raxioms.R1_neq_R0	40
Coq.Reals.Raxioms.Rmult_plus_distr_l	40
Coq.Reals.Raxioms.Rlt_asym	40
Coq.Reals.Raxioms.Rlt_trans	40
Coq.Reals.Raxioms.Rplus_lt_compat_l	40
Coq.Reals.Raxioms.Rmult_lt_compat_l	40
Coq.Reals.Raxioms.Rrepr_INR	40
Coq.Reals.Raxioms.Rrepr_IPR2	40
Coq.Reals.Raxioms.Rrepr_IPR	40
Coq.Reals.Raxioms.Rrepr_IZR	40
Coq.Reals.Raxioms.archimed	40
Coq.Reals.Raxioms.completeness	40
Coq.Reals.Rseries.sequence.EUn_noempty	40
Coq.Reals.Rseries.sequence.Un_in_EUn	40	512.386.69	synth with cache (only 1: red; only 1: intro p; only 1: eauto using N.Private_Tac.eq_trans, N.Private_Tac.eq_sym).	10.7262411118	50112
Coq.Reals.Rseries.sequence.Un_bound_imp	40	1.1.257.1.704.0	synth with cache (only 1: intros; only 1: inversion_clear 1; only 1: rewrite <- (Ropp_involutive x); only 1: rewrite ?H1, ?H2; only 1: rewrite Ropp_involutive; only 1: apply H).	3.07209992409	3604
Coq.Reals.Rseries.sequence.growing_prop	40
Coq.Reals.Rseries.sequence.Un_cv_crit_lub	40
Coq.Reals.Rseries.sequence.Un_cv_crit	40
Coq.Reals.Rseries.sequence.finite_greater	40
Coq.Reals.Rseries.sequence.cauchy_bound	40
Coq.Reals.Rseries.GP_infinite	40
Coq.Reals.Rseries.CV_shift	40
Coq.Reals.Rseries.CV_shift'	40	832.0.385	synth with cache (only 1: intros a Ha; only 1: intros; only 1: firstorder).	0.205404996872	234
Coq.Reals.Rseries.Un_growing_shift	40	130.0.384.128	synth with cache (only 1: intros a b H; only 1: intros Hn; only 1: Nat.nzsimpl; only 1: Nat.auto').	0.551119089127	193
Coq.Reals.Binomial.pascal_step1	40
Coq.Reals.Binomial.pascal_step2	40
Coq.Reals.Binomial.pascal_step3	40
Coq.Reals.Binomial.pascal	40
Coq.Reals.Binomial.binomial	40
Coq.Reals.MVT.MVT	40
Coq.Reals.MVT.MVT_cor1	40
Coq.Reals.MVT.MVT_cor2	40
Coq.Reals.MVT.MVT_cor3	40
Coq.Reals.MVT.Rolle	40
Coq.Reals.MVT.nonneg_derivative_1	40
Coq.Reals.MVT.nonpos_derivative_0	40
Coq.Reals.MVT.increasing_decreasing_opp	40
Coq.Reals.MVT.nonpos_derivative_1	40
Coq.Reals.MVT.positive_derivative	40
Coq.Reals.MVT.strictincreasing_strictdecreasing_opp	40	1.0.65.129.384	synth with cache (only 1: intros b; only 1: red; only 1: intros a n m H; only 1: unfold opp_fct; only 1: auto with real).	1.18855595589	1866
Coq.Reals.MVT.negative_derivative	40
Coq.Reals.MVT.null_derivative_0	40
Coq.Reals.MVT.increasing_decreasing	40
Coq.Reals.MVT.null_derivative_1	40
Coq.Reals.MVT.derive_increasing_interv_ax	40
Coq.Reals.MVT.derive_increasing_interv	40
Coq.Reals.MVT.derive_increasing_interv_var	40
Coq.Reals.MVT.IAF	40
Coq.Reals.MVT.IAF_var	40
Coq.Reals.MVT.null_derivative_loc	40
Coq.Reals.MVT.antiderivative_Ucte	40
Coq.Reals.MVT.MVT_abs	40
Coq.Reals.Ranalysis1.continuity_pt_locally_ext	40
Coq.Reals.Ranalysis1.continuity_pt_plus	40
Coq.Reals.Ranalysis1.continuity_pt_opp	40
Coq.Reals.Ranalysis1.continuity_pt_minus	40
Coq.Reals.Ranalysis1.continuity_pt_mult	40
Coq.Reals.Ranalysis1.continuity_pt_const	40
Coq.Reals.Ranalysis1.continuity_pt_scal	40
Coq.Reals.Ranalysis1.continuity_pt_inv	40
Coq.Reals.Ranalysis1.div_eq_inv	40	1.0	synth with cache (only 1: intros; only 1: trivial).	0.0336630344391	3
Coq.Reals.Ranalysis1.continuity_pt_div	40
Coq.Reals.Ranalysis1.continuity_pt_comp	40
Coq.Reals.Ranalysis1.continuity_plus	40
Coq.Reals.Ranalysis1.continuity_opp	40
Coq.Reals.Ranalysis1.continuity_minus	40
Coq.Reals.Ranalysis1.continuity_mult	40	3.193.0.512.0	synth with cache (only 1: unfold continuity; only 1: intros p q n m H; only 1: apply continuity_pt_mult; only 1: auto with relations; only 1: trivial).	28.0993368626	20157
Coq.Reals.Ranalysis1.continuity_const	40
Coq.Reals.Ranalysis1.continuity_scal	40
Coq.Reals.Ranalysis1.continuity_inv	40
Coq.Reals.Ranalysis1.continuity_div	40
Coq.Reals.Ranalysis1.continuity_comp	40
Coq.Reals.Ranalysis1.uniqueness_step1	40
Coq.Reals.Ranalysis1.uniqueness_step2	40
Coq.Reals.Ranalysis1.uniqueness_step3	40
Coq.Reals.Ranalysis1.uniqueness_limite	40
Coq.Reals.Ranalysis1.derive_pt_eq	40
Coq.Reals.Ranalysis1.derive_pt_eq_0	40	256.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: pose proof (proj2_sig pr) as H1; only 1: unfold derivable_pt_abs in H1; only 1: pose proof (uniqueness_limite _ _ _ _ H H1) as H2; only 1: unfold derive_pt; only 1: unfold derivable_pt_abs; only 1: symmetry; only 1: auto with *).	0.092789888382	12
Coq.Reals.Ranalysis1.derive_pt_eq_1	40	0.0.0.0.2	synth with cache (only 1: intros; only 1: pose proof (proj2_sig pr) as H1; only 1: unfold derive_pt in H; only 1: rewrite H in H1; only 1: assumption).	0.909887075424	1076
Coq.Reals.Ranalysis1.derive_pt_D_in	40
Coq.Reals.Ranalysis1.derivable_pt_lim_D_in	40
Coq.Reals.Ranalysis1.derivable_pt_lim_ext	40
Coq.Reals.Ranalysis1.derivable_pt_lim_locally_ext	40
Coq.Reals.Ranalysis1.derivable_derive	40	707.64	synth with cache (only 1: intro; only 1: eauto).	0.607703924179	684
Coq.Reals.Ranalysis1.derivable_continuous_pt	40
Coq.Reals.Ranalysis1.derivable_continuous	40
Coq.Reals.Ranalysis1.derivable_pt_lim_plus	40
Coq.Reals.Ranalysis1.derivable_pt_lim_opp	40
Coq.Reals.Ranalysis1.derivable_pt_lim_minus	40
Coq.Reals.Ranalysis1.derivable_pt_lim_mult	40
Coq.Reals.Ranalysis1.derivable_pt_lim_const	40
Coq.Reals.Ranalysis1.derivable_pt_lim_scal	40
Coq.Reals.Ranalysis1.derivable_pt_lim_div_scal	40
Coq.Reals.Ranalysis1.derivable_pt_lim_scal_right	40
Coq.Reals.Ranalysis1.derivable_pt_lim_id	40
Coq.Reals.Ranalysis1.derivable_pt_lim_Rsqr	40
Coq.Reals.Ranalysis1.derivable_pt_lim_comp	40
Coq.Reals.Ranalysis1.derivable_pt_plus	40
Coq.Reals.Ranalysis1.derivable_pt_opp	40
Coq.Reals.Ranalysis1.derivable_pt_minus	40
Coq.Reals.Ranalysis1.derivable_pt_mult	40
Coq.Reals.Ranalysis1.derivable_pt_const	40
Coq.Reals.Ranalysis1.derivable_pt_scal	40
Coq.Reals.Ranalysis1.derivable_pt_id	40
Coq.Reals.Ranalysis1.derivable_pt_Rsqr	40
Coq.Reals.Ranalysis1.derivable_pt_comp	40
Coq.Reals.Ranalysis1.derivable_plus	40
Coq.Reals.Ranalysis1.derivable_opp	40
Coq.Reals.Ranalysis1.derivable_minus	40
Coq.Reals.Ranalysis1.derivable_mult	40
Coq.Reals.Ranalysis1.derivable_const	40	0.0.0.66	synth with cache (only 1: intros a b; only 1: unfold derivable_pt; only 1: exists 0; only 1: apply derivable_pt_lim_const).	0.550425052643	585
Coq.Reals.Ranalysis1.derivable_scal	40
Coq.Reals.Ranalysis1.derivable_id	40
Coq.Reals.Ranalysis1.derivable_Rsqr	40	0.0.0.0.0	synth with cache (only 1: unfold derivable; only 1: unfold derivable_pt; only 1: intro; only 1: exists (2 * x); only 1: apply derivable_pt_lim_Rsqr).	0.0601999759674	5
Coq.Reals.Ranalysis1.derivable_comp	40
Coq.Reals.Ranalysis1.derive_pt_plus	40
Coq.Reals.Ranalysis1.derive_pt_opp	40
Coq.Reals.Ranalysis1.derive_pt_minus	40
Coq.Reals.Ranalysis1.derive_pt_mult	40
Coq.Reals.Ranalysis1.derive_pt_const	40
Coq.Reals.Ranalysis1.derive_pt_scal	40
Coq.Reals.Ranalysis1.derive_pt_id	40	1.4.1	synth with cache (only 1: intros p0; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_id).	1.24213314056	3689
Coq.Reals.Ranalysis1.derive_pt_Rsqr	40	1.2.0	synth with cache (only 1: intro; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_Rsqr).	0.53303194046	253
Coq.Reals.Ranalysis1.derive_pt_comp	40
Coq.Reals.Ranalysis1.derivable_pt_lim_pow_pos	40
Coq.Reals.Ranalysis1.derivable_pt_lim_pow	40
Coq.Reals.Ranalysis1.derivable_pt_pow	40
Coq.Reals.Ranalysis1.derivable_pow	40
Coq.Reals.Ranalysis1.derive_pt_pow	40
Coq.Reals.Ranalysis1.pr_nu	40
Coq.Reals.Ranalysis1.deriv_maximum	40
Coq.Reals.Ranalysis1.deriv_minimum	40
Coq.Reals.Ranalysis1.deriv_constant2	40
Coq.Reals.Ranalysis1.nonneg_derivative_0	40
Coq.Reals.SeqProp.growing_cv	40
Coq.Reals.SeqProp.decreasing_growing	40
Coq.Reals.SeqProp.decreasing_cv	40
Coq.Reals.SeqProp.ub_to_lub	40
Coq.Reals.SeqProp.lb_to_glb	40
Coq.Reals.SeqProp.maj_ss	40	448.3.0.0	synth with cache (only 1: intros n m; only 1: intro H; only 1: unfold has_ub in H; only 1: firstorder).	1.77067899704	3004
Coq.Reals.SeqProp.min_ss	40	258.514.0.512.64.258	synth with cache (only 1: intro x; only 1: elim (Rplus_ne 1); only 1: Z.nzsimpl'; only 1: intros n0 H'; only 1: intros n (Hn1, Hn2); only 1: firstorder).	5.36323785782	6769
Coq.Reals.SeqProp.Wn_decreasing	40
Coq.Reals.SeqProp.Vn_growing	40
Coq.Reals.SeqProp.Vn_Un_Wn_order	40
Coq.Reals.SeqProp.min_maj	40
Coq.Reals.SeqProp.maj_min	40
Coq.Reals.SeqProp.cauchy_maj	40
Coq.Reals.SeqProp.cauchy_opp	40
Coq.Reals.SeqProp.cauchy_min	40
Coq.Reals.SeqProp.maj_cv	40
Coq.Reals.SeqProp.min_cv	40
Coq.Reals.SeqProp.cond_eq	40
Coq.Reals.SeqProp.not_Rlt	40	0	synth with cache (only 1: eauto using Rnot_gt_ge with rorders).	0.0263319015503	1
Coq.Reals.SeqProp.approx_maj	40
Coq.Reals.SeqProp.approx_min	40
Coq.Reals.SeqProp.UL_sequence	40
Coq.Reals.SeqProp.CV_plus	40
Coq.Reals.SeqProp.cv_cvabs	40
Coq.Reals.SeqProp.CV_Cauchy	40
Coq.Reals.SeqProp.maj_by_pos	40
Coq.Reals.SeqProp.CV_mult	40
Coq.Reals.SeqProp.tech9	40
Coq.Reals.SeqProp.tech13	40
Coq.Reals.SeqProp.growing_ineq	40
Coq.Reals.SeqProp.CV_opp	40
Coq.Reals.SeqProp.decreasing_ineq	40
Coq.Reals.SeqProp.CV_minus	40
Coq.Reals.SeqProp.cv_infty_cv_R0	40
Coq.Reals.SeqProp.decreasing_prop	40
Coq.Reals.SeqProp.cv_speed_pow_fact	40
Coq.Reals.Rcomplete.R_complete	40
Coq.Reals.Rtrigo_calc.tan_PI	40
Coq.Reals.Rtrigo_calc.sin_3PI2	40
Coq.Reals.Rtrigo_calc.tan_2PI	40
Coq.Reals.Rtrigo_calc.sin_cos_PI4	40
Coq.Reals.Rtrigo_calc.sin_PI3_cos_PI6	40
Coq.Reals.Rtrigo_calc.sin_PI6_cos_PI3	40
Coq.Reals.Rtrigo_calc.PI6_RGT_0	40	2.0.0.0.0	synth with cache (only 1: unfold Rdiv; only 1: apply Rmult_lt_0_compat; only 1: apply PI_RGT_0; only 1: apply Rinv_0_lt_compat; only 1: prove_sup0).	0.116585016251	42
Coq.Reals.Rtrigo_calc.PI6_RLT_PI2	40	0.1	synth with cache (only 1: pose proof PI_RGT_0 as H; only 1: Lra.lra).	0.0452010631561	3
Coq.Reals.Rtrigo_calc.sin_PI6	40
Coq.Reals.Rtrigo_calc.sqrt2_neq_0	40
Coq.Reals.Rtrigo_calc.R1_sqrt2_neq_0	40
Coq.Reals.Rtrigo_calc.sqrt3_2_neq_0	40
Coq.Reals.Rtrigo_calc.Rlt_sqrt2_0	40
Coq.Reals.Rtrigo_calc.Rlt_sqrt3_0	40
Coq.Reals.Rtrigo_calc.PI4_RGT_0	40	0.0.0.0.0	synth with cache (only 1: unfold Rdiv; only 1: apply Rmult_lt_0_compat; only 1: apply PI_RGT_0; only 1: apply Rinv_0_lt_compat; only 1: prove_sup0).	0.0741078853607	5
Coq.Reals.Rtrigo_calc.cos_PI4	40
Coq.Reals.Rtrigo_calc.sin_PI4	40
Coq.Reals.Rtrigo_calc.tan_PI4	40
Coq.Reals.Rtrigo_calc.cos_3PI4	40
Coq.Reals.Rtrigo_calc.sin_3PI4	40
Coq.Reals.Rtrigo_calc.cos_PI6	40
Coq.Reals.Rtrigo_calc.tan_PI6	40
Coq.Reals.Rtrigo_calc.sin_PI3	40
Coq.Reals.Rtrigo_calc.cos_PI3	40
Coq.Reals.Rtrigo_calc.tan_PI3	40
Coq.Reals.Rtrigo_calc.sin_2PI3	40
Coq.Reals.Rtrigo_calc.cos_2PI3	40
Coq.Reals.Rtrigo_calc.tan_2PI3	40
Coq.Reals.Rtrigo_calc.cos_5PI4	40
Coq.Reals.Rtrigo_calc.sin_5PI4	40
Coq.Reals.Rtrigo_calc.sin_cos5PI4	40
Coq.Reals.Rtrigo_calc.Rgt_3PI2_0	40	0.0.0.0.1.2	synth with cache (only 1: replace (3 * (PI / 2)) with (PI + PI / 2); only 1: pose proof PI_RGT_0 as H; only 1: Lra.lra; only 1: pattern PI at 1; only 1: rewrite (double_var PI); only 1: ring).	0.409471988678	405
Coq.Reals.Rtrigo_calc.Rgt_2PI_0	40	0.1.0	synth with cache (only 1: apply Rmult_lt_0_compat; only 1: now apply (IZR_lt 0 2); only 1: apply PI_RGT_0).	0.149565219879	81
Coq.Reals.Rtrigo_calc.Rlt_PI_3PI2	40	2.9	synth with cache (only 1: pose proof PI_RGT_0 as H; only 1: Lra.lra).	1.62962603569	3753
Coq.Reals.Rtrigo_calc.Rlt_3PI2_2PI	40
Coq.Reals.Rtrigo_calc.rad_deg	40
Coq.Reals.Rtrigo_calc.toRad_inj	40
Coq.Reals.Rtrigo_calc.deg_rad	40
Coq.Reals.Rtrigo_calc.Rsqr_sin_cos_d_one	40
Coq.Reals.Rtrigo_calc.sin_lb_ge_0	40
Coq.Reals.Ranalysis4.derivable_pt_inv	40
Coq.Reals.Ranalysis4.pr_nu_var	40
Coq.Reals.Ranalysis4.pr_nu_var2	40
Coq.Reals.Ranalysis4.derivable_inv	40
Coq.Reals.Ranalysis4.derive_pt_inv	40
Coq.Reals.Ranalysis4.Rabs_derive_1	40
Coq.Reals.Ranalysis4.Rabs_derive_2	40
Coq.Reals.Ranalysis4.Rderivable_pt_abs	40
Coq.Reals.Ranalysis4.Rcontinuity_abs	40
Coq.Reals.Ranalysis4.continuity_finite_sum	40
Coq.Reals.Ranalysis4.derivable_pt_lim_fs	40
Coq.Reals.Ranalysis4.derivable_pt_lim_finite_sum	40
Coq.Reals.Ranalysis4.derivable_pt_finite_sum	40
Coq.Reals.Ranalysis4.derivable_finite_sum	40	0.0.0.0.0.0.0.0.128	synth with cache (only 1: unfold derivable; only 1: intros; only 1: unfold derivable_pt; only 1: pose proof (derivable_pt_lim_finite_sum An x N) as H; only 1: induction N as [| N HrecN]; only 1: exists 0; only 1: apply H; only 1: exists (sum_f_R0 (fun k : nat => INR (S k) * An (S k) * x ^ k) (Init.Nat.pred (S N))); only 1: apply H).	5.1508910656	6217
Coq.Reals.Ranalysis4.derivable_pt_lim_cosh	40
Coq.Reals.Ranalysis4.derivable_pt_lim_sinh	40
Coq.Reals.Ranalysis4.derivable_pt_exp	40
Coq.Reals.Ranalysis4.derivable_pt_cosh	40
Coq.Reals.Ranalysis4.derivable_pt_sinh	40
Coq.Reals.Ranalysis4.derivable_exp	40	0.0.0.0.0	synth with cache (only 1: unfold derivable; only 1: intro; only 1: unfold derivable_pt; only 1: exists (exp x); only 1: apply derivable_pt_lim_exp).	0.0723440647125	5
Coq.Reals.Ranalysis4.derivable_cosh	40	0.0.0.577	synth with cache (only 1: intros * x; only 1: unfold derivable_pt; only 1: exists (sinh x); only 1: apply derivable_pt_lim_cosh).	0.120087862015	57
Coq.Reals.Ranalysis4.derivable_sinh	40	0.0.0.0.0	synth with cache (only 1: unfold derivable; only 1: intro; only 1: unfold derivable_pt; only 1: exists (cosh x); only 1: apply derivable_pt_lim_sinh).	0.0614969730377	5
Coq.Reals.Ranalysis4.derive_pt_exp	40	1.0.1024	synth with cache (only 1: intro Streicher_K; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_exp).	1.67107200623	588
Coq.Reals.Ranalysis4.derive_pt_cosh	40	1.0.836	synth with cache (only 1: intros IHP'; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_cosh).	3.1875128746	611
Coq.Reals.Ranalysis4.derive_pt_sinh	40	2.0.0	synth with cache (only 1: intro; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_sinh).	1.01980996132	655
Coq.Reals.Ranalysis4.sinh_lt	40
Coq.Reals.Ranalysis3.derivable_pt_lim_div	40
Coq.Reals.Ranalysis3.derivable_pt_div	40
Coq.Reals.Ranalysis3.derivable_div	40
Coq.Reals.Ranalysis3.derive_pt_div	40
Coq.Reals.DiscrR.Rlt_R0_R2	40	65	synth with cache (only 1: auto with real).	0.199238061905	99
Coq.Reals.DiscrR.IZR_eq	40	0.1	synth with cache (only 1: intros n m H; only 1: now Morphisms.f_equiv).	0.0831079483032	57
Coq.Reals.ConstructiveReals.CRlt_asym	40
Coq.Reals.ConstructiveReals.CRlt_proper	40
Coq.Reals.ConstructiveReals.CRle_refl	40	385.0.24	synth with cache (only 1: intros; only 1: destruct (CRltLinear R), p; only 1: eauto using Pos.Private_Tac.eq_trans, Pos.Private_Tac.eq_sym).	32.3285529613	56185
Coq.Reals.ConstructiveReals.CRle_lt_trans	40
Coq.Reals.ConstructiveReals.CRlt_le_trans	40
Coq.Reals.ConstructiveReals.CRle_trans	40
Coq.Reals.ConstructiveReals.CRlt_trans	40
Coq.Reals.ConstructiveReals.CRlt_trans_flip	40
Coq.Reals.ConstructiveReals.CReq_refl	40	0.0.0.0.3.0	synth with cache (only 1: intros; only 1: firstorder; only 1: destruct (CRltLinear R), p; only 1: exact (f x x H H); only 1: destruct (CRltLinear R), p; only 1: exact (f x x H H)).	1.17506408691	537
Coq.Reals.ConstructiveReals.CReq_sym	40	130.578.512.0	synth with cache (only 1: intros p q H H0; only 1: pose proof H as H'; only 1: destruct p; only 1: firstorder).	0.66043806076	771
Coq.Reals.ConstructiveReals.CReq_trans	40
Coq.Reals.ConstructiveReals.CR_setoid	40
Coq.Reals.ConstructiveReals.CRplus_0_r	40
Coq.Reals.ConstructiveReals.CRmult_1_r	40
Coq.Reals.ConstructiveReals.CRplus_opp_l	40
Coq.Reals.ConstructiveReals.CRplus_lt_compat_r	40
Coq.Reals.ConstructiveReals.CRplus_lt_reg_r	40
Coq.Reals.ConstructiveReals.CRplus_le_compat_l	40
Coq.Reals.ConstructiveReals.CRplus_le_compat_r	40
Coq.Reals.ConstructiveReals.CRplus_le_reg_l	40
Coq.Reals.ConstructiveReals.CRplus_le_reg_r	40
Coq.Reals.ConstructiveReals.CRplus_lt_le_compat	40
Coq.Reals.ConstructiveReals.CRplus_eq_reg_l	40
Coq.Reals.ConstructiveReals.CRplus_eq_reg_r	40
Coq.Reals.ConstructiveReals.CRopp_involutive	40
Coq.Reals.ConstructiveReals.CRopp_gt_lt_contravar	40
Coq.Reals.ConstructiveReals.CRopp_lt_cancel	40
Coq.Reals.ConstructiveReals.CRopp_plus_distr	40
Coq.Reals.ConstructiveReals.CRmult_plus_distr_l	40
Coq.Reals.ConstructiveReals.CRzero_double	40
Coq.Reals.ConstructiveReals.CRmult_0_r	40
Coq.Reals.ConstructiveReals.CRopp_mult_distr_r	40
Coq.Reals.ConstructiveReals.CRopp_mult_distr_l	40
Coq.Reals.ConstructiveReals.CRmult_lt_compat_r	40
Coq.Reals.ConstructiveReals.CRinv_r	40
Coq.Reals.ConstructiveReals.CRmult_lt_reg_r	40
Coq.Reals.ConstructiveReals.CRmult_lt_reg_l	40
Coq.Reals.ConstructiveReals.CRmult_le_compat_l	40
Coq.Reals.ConstructiveReals.CRmult_le_compat_r	40
Coq.Reals.ConstructiveReals.CRmult_eq_reg_r	40
Coq.Reals.ConstructiveReals.CR_of_Q_proper	40
Coq.Reals.ConstructiveReals.CR_of_Q_zero	40
Coq.Reals.ConstructiveReals.CR_of_Q_opp	40
Coq.Reals.ConstructiveReals.CR_of_Q_le	40
Coq.Reals.ConstructiveReals.CR_of_Q_pos	40
Coq.Reals.ConstructiveReals.CR_cv_above_rat	40
Coq.Reals.ConstructiveReals.CR_cv_below_rat	40
Coq.Reals.ConstructiveReals.CR_cv_const	40
Coq.Reals.ConstructiveCauchyRealsMult.BoundFromZero	40	15	synth with cache (only 1: eauto with arith).	1.27262711525	1537
Coq.Reals.ConstructiveCauchyRealsMult.QCauchySeq_bounded	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_cauchy	40
Coq.Reals.ConstructiveCauchyRealsMult.linear_max	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult	40	193.1	synth with cache (only 1: destruct x as [xn limx]; only 1: now rewrite ?Pos.square_xO).	0.078761100769	85
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_unfold	40	448.704	synth with cache (only 1: eexists; only 1: apply proj2_sig).	0.273216962814	191
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_assoc_bounded_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_assoc	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_comm	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_proper_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_0_compat	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_plus_distr_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_plus_distr_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_1_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_isRingExt	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_isRing	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_morph_Proper	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_morph_T	40	65.131.0.0.0.0	synth with cache (only 1: intros x y H z t H0; only 1: apply (CRealEq_trans _ (x * t)); only 1: apply CReal_mult_proper_l; only 1: apply H0; only 1: rewrite H  at 1; only 1: intuition).	9.09259605408	8236
Coq.Reals.ConstructiveCauchyRealsMult.CReal_opp_morph_Proper	40	1.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0	synth with cache (only 1: intros; only 1: apply (CReal_plus_eq_reg_l x); only 1: apply (CRealEq_trans _ 0); only 1: apply CReal_plus_opp_r; only 1: apply CRealEq_sym; only 1: apply (CRealEq_trans _ (y + - y)); only 1: apply CReal_plus_proper_r; only 1: destruct H; only 1: split; only 1: intro abs; only 1: contradiction; only 1: intro abs; only 1: contradiction; only 1: apply CRealEq_sym; only 1: apply CRealEq_sym; only 1: apply CReal_plus_opp_r).	9.55525302887	1132
Coq.Reals.ConstructiveCauchyRealsMult.CReal_opp_morph_T	40	194.256.64.387	synth with cache (only 1: intros Hn; only 1: intro H; only 1: intros <-; only 1: now Nat.nzsimpl).	13.5745038986	2202
Coq.Reals.ConstructiveCauchyRealsMult.CReal_minus_morph_Proper	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_minus_morph_T	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_0_l	40	194.641	synth with cache (only 1: intros (EQ, EQ'); only 1: ring).	4.60442113876	626
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_0_r	40	0.0	synth with cache (only 1: intro; only 1: ring).	0.0382370948792	2
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_1_r	40	321.4	synth with cache (only 1: intros [n maj]; only 1: ring).	5.27459192276	2298
Coq.Reals.ConstructiveCauchyRealsMult.CReal_opp_mult_distr_l	40	256.0.67	synth with cache (only 1: intro H; only 1: intro abs; only 1: ring).	3.77478003502	624
Coq.Reals.ConstructiveCauchyRealsMult.CReal_opp_mult_distr_r	40	0.0	synth with cache (only 1: intros; only 1: ring).	0.0375230312347	2
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_compat_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_compat_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_reg_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_abs_appart_zero	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealArchimedean	40
Coq.Reals.ConstructiveCauchyRealsMult.Rup_pos	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealLtDisjunctEpsilon	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealShiftReal	40	256.449.386.4	synth with cache (only 1: intros; only 1: intros a b Ha Hb; only 1: destruct x; only 1: auto with arith).	22.90594697	14639
Coq.Reals.ConstructiveCauchyRealsMult.CRealShiftEqual	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealNegShift	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealPosShift	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_neg	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_pos	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv	40	1	synth with cache (only 1: assumption).	0.0203778743744	2
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_0_lt_compat	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_linear_shift	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_linear_shift_eq	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_1	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_mult_distr	40
Coq.Reals.ConstructiveCauchyRealsMult.Rinv_eq_compat	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_reg_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_reg_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_reg_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_compat_l	40	0.0.0.0.66	synth with cache (only 1: intro H1; only 1: apply CReal_isRingExt; only 1: split; only 1: apply CRealLe_refl; only 1: apply CRealLe_refl).	3.54843091965	1226
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_compat_r	40	0.0.0	synth with cache (only 1: intros; only 1: rewrite H; only 1: reflexivity).	0.0307848453522	3
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_pos_appart_zero	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_le_compat_l_half	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_invQ	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealQ_dense	40
Coq.Reals.ConstructiveCauchyRealsMult.inject_Q_mult	40
Coq.Reals.Rtrigo_fun.Alembert_exp	40
Coq.Reals.Alembert.Alembert_C1	40
Coq.Reals.Alembert.Alembert_C2	40
Coq.Reals.Alembert.AlembertC3_step1	40
Coq.Reals.Alembert.AlembertC3_step2	40
Coq.Reals.Alembert.Alembert_C3	40
Coq.Reals.Alembert.Alembert_C4	40
Coq.Reals.Alembert.Alembert_C5	40
Coq.Reals.Alembert.Alembert_C6	40
Coq.Reals.R_sqr.Rsqr_neg	40
Coq.Reals.R_sqr.Rsqr_mult	40	0.5.0	synth with cache (only 1: intros; only 1: unfold Rsqr; only 1: ring).	0.997845888138	1024
Coq.Reals.R_sqr.Rsqr_plus	40	2.129.576	synth with cache (only 1: intros UIP_refl y; only 1: unfold Rsqr; only 1: ring).	0.756133079529	453
Coq.Reals.R_sqr.Rsqr_minus	40	0.0	synth with cache (only 1: intros; only 1: ring_Rsqr).	0.054958820343	2
Coq.Reals.R_sqr.Rsqr_neg_minus	40	3.66.584.2	synth with cache (only 1: intros a n; only 1: pattern 0%nat; only 1: unfold Rsqr; only 1: ring).	29.426071167	33567
Coq.Reals.R_sqr.Rsqr_1	40	0.0	synth with cache (only 1: unfold Rsqr; only 1: auto with real).	0.036591053009	2
Coq.Reals.R_sqr.Rsqr_gt_0_0	40
Coq.Reals.R_sqr.Rsqr_pos_lt	40	1.3	synth with cache (only 1: intro; only 1: eauto with real).	0.627029895782	598
Coq.Reals.R_sqr.Rsqr_div	40
Coq.Reals.R_sqr.Rsqr_eq_0	40	449.2.192	synth with cache (only 1: intuition eauto  3; only 1: apply Rsqr_0_uniq; only 1: now rewrite <- ?Pos.compare_antisym).	1.11490607262	1661
Coq.Reals.R_sqr.Rsqr_minus_plus	40	0.259.4	synth with cache (only 1: intro; only 1: intro z; only 1: ring_Rsqr).	6.50188589096	7166
Coq.Reals.R_sqr.Rsqr_plus_minus	40	0.0	synth with cache (only 1: intros; only 1: ring_Rsqr).	0.0461061000824	2
Coq.Reals.R_sqr.Rsqr_incr_0	40
Coq.Reals.R_sqr.Rsqr_incr_0_var	40
Coq.Reals.R_sqr.Rsqr_incr_1	40	0.0.1.129	synth with cache (only 1: intros x H2; only 1: unfold Rsqr; only 1: intros a b; only 1: auto with real).	5.56411981583	2756
Coq.Reals.R_sqr.Rsqr_incrst_0	40
Coq.Reals.R_sqr.Rsqr_incrst_1	40
Coq.Reals.R_sqr.Rsqr_neg_pos_le_0	40
Coq.Reals.R_sqr.Rsqr_neg_pos_le_1	40
Coq.Reals.R_sqr.neg_pos_Rsqr_le	40
Coq.Reals.R_sqr.Rsqr_abs	40
Coq.Reals.R_sqr.Rsqr_le_abs_0	40
Coq.Reals.R_sqr.Rsqr_le_abs_1	40
Coq.Reals.R_sqr.Rsqr_lt_abs_0	40
Coq.Reals.R_sqr.Rsqr_lt_abs_1	40
Coq.Reals.R_sqr.Rsqr_inj	40
Coq.Reals.R_sqr.Rsqr_eq_abs_0	40
Coq.Reals.R_sqr.Rsqr_eq_asb_1	40
Coq.Reals.R_sqr.triangle_rectangle	40
Coq.Reals.R_sqr.triangle_rectangle_lt	40
Coq.Reals.R_sqr.triangle_rectangle_le	40
Coq.Reals.R_sqr.Rsqr_inv	40
Coq.Reals.R_sqr.canonical_Rsqr	40
Coq.Reals.R_sqr.Rsqr_eq	40
Coq.Reals.RiemannInt_SF.IZN_var	40	0.1.0.8	synth with cache (only 1: intros x IH; only 1: exists (Z.to_nat x); only 1: symmetry; only 1: now apply Z2Nat.id).	9.84204816818	26927
Coq.Reals.RiemannInt_SF.Nzorn	40
Coq.Reals.RiemannInt_SF.StepFun_P1	40
Coq.Reals.RiemannInt_SF.StepFun_P2	40
Coq.Reals.RiemannInt_SF.StepFun_P3	40
Coq.Reals.RiemannInt_SF.StepFun_P4	40
Coq.Reals.RiemannInt_SF.StepFun_P5	40
Coq.Reals.RiemannInt_SF.StepFun_P6	40
Coq.Reals.RiemannInt_SF.StepFun_P7	40
Coq.Reals.RiemannInt_SF.StepFun_P8	40
Coq.Reals.RiemannInt_SF.StepFun_P9	40
Coq.Reals.RiemannInt_SF.StepFun_P10	40
Coq.Reals.RiemannInt_SF.StepFun_P11	40
Coq.Reals.RiemannInt_SF.StepFun_P12	40
Coq.Reals.RiemannInt_SF.StepFun_P13	40
Coq.Reals.RiemannInt_SF.StepFun_P14	40
Coq.Reals.RiemannInt_SF.StepFun_P15	40
Coq.Reals.RiemannInt_SF.StepFun_P16	40
Coq.Reals.RiemannInt_SF.StepFun_P17	40
Coq.Reals.RiemannInt_SF.StepFun_P18	40
Coq.Reals.RiemannInt_SF.StepFun_P19	40
Coq.Reals.RiemannInt_SF.StepFun_P20	40
Coq.Reals.RiemannInt_SF.StepFun_P21	40
Coq.Reals.RiemannInt_SF.StepFun_P22	40
Coq.Reals.RiemannInt_SF.StepFun_P23	40
Coq.Reals.RiemannInt_SF.StepFun_P24	40
Coq.Reals.RiemannInt_SF.StepFun_P25	40
Coq.Reals.RiemannInt_SF.StepFun_P26	40
Coq.Reals.RiemannInt_SF.StepFun_P27	40
Coq.Reals.RiemannInt_SF.StepFun_P28	40
Coq.Reals.RiemannInt_SF.StepFun_P29	40
Coq.Reals.RiemannInt_SF.StepFun_P30	40
Coq.Reals.RiemannInt_SF.StepFun_P31	40
Coq.Reals.RiemannInt_SF.StepFun_P32	40
Coq.Reals.RiemannInt_SF.StepFun_P33	40
Coq.Reals.RiemannInt_SF.StepFun_P34	40
Coq.Reals.RiemannInt_SF.StepFun_P35	40
Coq.Reals.RiemannInt_SF.StepFun_P36	40
Coq.Reals.RiemannInt_SF.StepFun_P37	40
Coq.Reals.RiemannInt_SF.StepFun_P38	40
Coq.Reals.RiemannInt_SF.StepFun_P39	40
Coq.Reals.RiemannInt_SF.StepFun_P40	40
Coq.Reals.RiemannInt_SF.StepFun_P41	40
Coq.Reals.RiemannInt_SF.StepFun_P42	40
Coq.Reals.RiemannInt_SF.StepFun_P43	40
Coq.Reals.RiemannInt_SF.StepFun_P44	40
Coq.Reals.RiemannInt_SF.StepFun_P45	40
Coq.Reals.RiemannInt_SF.StepFun_P46	40
Coq.Reals.Cos_rel.cos_plus_form	40
Coq.Reals.Cos_rel.pow_sqr	40
Coq.Reals.Cos_rel.A1_cvg	40
Coq.Reals.Cos_rel.C1_cvg	40
Coq.Reals.Cos_rel.B1_cvg	40
Coq.Reals.Ranalysis5.f_incr_implies_g_incr_interv	40
Coq.Reals.Ranalysis5.derivable_pt_id_interv	40	0.0	synth with cache (only 1: intros; only 1: apply derivable_pt_id).	0.0466430187225	2
Coq.Reals.Ranalysis5.pr_nu_var2_interv	40
Coq.Reals.Ranalysis5.leftinv_is_rightinv	40
Coq.Reals.Ranalysis5.leftinv_is_rightinv_interv	40
Coq.Reals.Ranalysis5.IVT_interv_prelim0	40
Coq.Reals.Ranalysis5.IVT_interv_prelim1	40
Coq.Reals.Ranalysis5.IVT_interv	40
Coq.Reals.Ranalysis5.f_interv_is_interv	40
Coq.Reals.Ranalysis5.continuity_pt_recip_prelim	40
Coq.Reals.Ranalysis5.continuity_pt_recip_interv	40
Coq.Reals.Ranalysis5.derivable_pt_lim_recip_interv	40
Coq.Reals.Ranalysis5.derivable_pt_recip_interv_prelim0	40
Coq.Reals.Ranalysis5.derivable_pt_recip_interv_prelim1	40	1472.2	synth with cache (only 1: intros; only 1: now intuition).	0.287102222443	27
Coq.Reals.Ranalysis5.derivable_pt_recip_interv	40
Coq.Reals.Ranalysis5.derive_pt_recip_interv_prelim0	40
Coq.Reals.Ranalysis5.derive_pt_recip_interv_prelim1_0	40
Coq.Reals.Ranalysis5.derive_pt_recip_interv_prelim1_1	40	577.0.0.128.1024.448.1152	synth with cache (only 1: intro E; only 1: intros n; only 1: inversion 2; only 1: generalize Rlt_0_1; only 1: intro; only 1: intros eps0 eps0_pos; only 1: auto with *).	3.56574296951	2288
Coq.Reals.Ranalysis5.derive_pt_recip_interv	40
Coq.Reals.Ranalysis5.ub_lt_2_pos	40	66.128.0	synth with cache (only 1: intros; only 1: rewrite <- Ropp_0; only 1: lra).	0.616039991379	687
Coq.Reals.Ranalysis5.mkposreal_lb_ub	40
Coq.Reals.Ranalysis5.derivable_pt_lim_CVU	40
Coq.Reals.AltSeries.CV_ALT_step0	40
Coq.Reals.AltSeries.CV_ALT_step1	40
Coq.Reals.AltSeries.CV_ALT_step2	40
Coq.Reals.AltSeries.CV_ALT_step3	40
Coq.Reals.AltSeries.CV_ALT_step4	40
Coq.Reals.AltSeries.CV_ALT	40
Coq.Reals.AltSeries.alternated_series	40
Coq.Reals.AltSeries.alternated_series_ineq	40
Coq.Reals.AltSeries.PI_tg_pos	40	193.385.900	synth with cache (only 1: intros H'; only 1: compute; only 1: auto with *).	7.12027812004	13533
Coq.Reals.AltSeries.PI_tg_decreasing	40
Coq.Reals.AltSeries.PI_tg_cv	40
Coq.Reals.AltSeries.exist_PI	40
Coq.Reals.AltSeries.Alt_PI_ineq	40
Coq.Reals.AltSeries.Alt_PI_RGT_0	40
Coq.Reals.Rminmax.Rmax_l	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmax_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	0.0510439872742	4
Coq.Reals.Rminmax.Rmax_r	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmax_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	0.0744678974152	4
Coq.Reals.Rminmax.Rmin_l	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmin_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	0.051589012146	4
Coq.Reals.Rminmax.Rmin_r	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmin_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	0.0595879554749	4
Coq.Reals.Rminmax.R.plus_max_distr_l	40	1.64.384.0.0.197.384	synth with cache (only 1: intros EQ; only 1: intros Az RS; only 1: apply max_mono; only 1: eauto with *; only 1: simple induction 1; only 1: auto with *; only 1: auto with real).	36.7776448727	41279
Coq.Reals.Rminmax.R.plus_max_distr_r	40
Coq.Reals.Rminmax.R.plus_min_distr_l	40	0.0.0.0.642	synth with cache (only 1: intros a a' Ha; only 1: apply min_mono; only 1: eauto with *; only 1: intros x y; only 1: apply Rplus_le_compat_l).	3.86343693733	4024
Coq.Reals.Rminmax.R.plus_min_distr_r	40	0.0.0.3.0	synth with cache (only 1: intros; only 1: rewrite (Rplus_comm n p), (Rplus_comm m p), (Rplus_comm _ p); only 1: apply min_monotone; only 1: intros x y; only 1: apply Rplus_le_compat_l).	1.3314371109	1827
Coq.Reals.Rminmax.R.opp_max_distr	40	0.0.0.0	synth with cache (only 1: intros x y; only 1: apply Rmax_case_strong; only 1: now intros w; rewrite Rmin_left; [  | apply Rge_le, Ropp_le_ge_contravar ]; only 1: now intros w; rewrite Rmin_right; [  | apply Rge_le, Ropp_le_ge_contravar ]).	0.0537979602814	4
Coq.Reals.Rminmax.R.opp_min_distr	40	0.0.0.0	synth with cache (only 1: intros x y; only 1: apply Rmin_case_strong; only 1: now intros w; rewrite Rmax_left; [  | apply Rge_le, Ropp_le_ge_contravar ]; only 1: now intros w; rewrite Rmax_right; [  | apply Rge_le, Ropp_le_ge_contravar ]).	0.05526304245	4
Coq.Reals.Rminmax.R.minus_max_distr_l	40	0.0.0.384.0.1.0.0.0.514	synth with cache (only 1: intro Hxy; only 1: intros; only 1: symmetry; only 1: symmetry; only 1: apply max_min_antimonotone; only 1: do 3 red; only 1: compute; only 1: intros r1 r2 [H| H]; only 1: auto with real; only 1: auto with real).	14.4558320045	10912
Coq.Reals.Rminmax.R.minus_max_distr_r	40
Coq.Reals.Rminmax.R.minus_min_distr_l	40
Coq.Reals.Rminmax.R.minus_min_distr_r	40
Coq.Reals.Rlimit.eps2_Rgt_R0	40	0.453.1.0.4	synth with cache (only 1: intro r; only 1: intro; only 1: replace 0 with (r * 0); only 1: firstorder; only 1: auto with real).	18.762955904	24940
Coq.Reals.Rlimit.eps2	40	0.0.1.0.0.320	synth with cache (only 1: symmetry; only 1: rewrite <- double; only 1: rewrite <- Rmult_assoc; only 1: symmetry; only 1: apply Rinv_r_simpl_m; only 1: now apply not_0_IZR).	0.665724992752	474
Coq.Reals.Rlimit.eps4	40
Coq.Reals.Rlimit.Rlt_eps2_eps	40	0.0	synth with cache (only 1: intros; only 1: lra).	0.111543178558	2
Coq.Reals.Rlimit.Rlt_eps4_eps	40	0.9	synth with cache (only 1: intros a Ha; only 1: lra).	1.52048897743	3706
Coq.Reals.Rlimit.prop_eps	40
Coq.Reals.Rlimit.mul_factor_wd	40
Coq.Reals.Rlimit.mul_factor_gt	40
Coq.Reals.Rlimit.mul_factor_gt_f	40
Coq.Reals.Rlimit.tech_limit	40
Coq.Reals.Rlimit.tech_limit_contr	40
Coq.Reals.Rlimit.lim_x	40	322.705	synth with cache (only 1: intros H ?; only 1: firstorder  (subst; auto)).	0.931948900223	1189
Coq.Reals.Rlimit.limit_plus	40
Coq.Reals.Rlimit.limit_Ropp	40
Coq.Reals.Rlimit.limit_minus	40
Coq.Reals.Rlimit.limit_free	40
Coq.Reals.Rlimit.limit_mul	40
Coq.Reals.Rlimit.single_limit	40
Coq.Reals.Rlimit.limit_comp	40	704.384.1	synth with cache (only 1: intros; only 1: set (R := fun m n : nat => (n <= m)%nat -> (m - n <= m)%nat); only 1: firstorder).	0.51318693161	64
Coq.Reals.Rlimit.limit_inv	40
Coq.Reals.R_sqrt.sqrt_pos	40
Coq.Reals.R_sqrt.sqrt_positivity	40	0.768.2.704.0.0.0.0.2.128	synth with cache (only 1: intros a; only 1: unfold sqrt; only 1: case Rcase_abs; only 1: intro; only 1: intros H'2; only 1: auto with real; only 1: intros H2; only 1: intro; only 1: clear H; only 1: apply Rsqrt_positivity).	8.68762207031	12876
Coq.Reals.R_sqrt.sqrt_sqrt	40
Coq.Reals.R_sqrt.sqrt_0	40
Coq.Reals.R_sqrt.sqrt_1	40
Coq.Reals.R_sqrt.sqrt_eq_0	40
Coq.Reals.R_sqrt.sqrt_lem_0	40	1.0.512.2.0.0.0.0.1	synth with cache (only 1: intros; only 1: generalize (Rle_le_eq x² y²); only 1: intro; only 1: elim H2; only 1: intros _ H3; only 1: elim H2; only 1: Tactics.program_simpl; only 1: apply sqrt_sqrt; only 1: assumption).	4.87063097954	4829
Coq.Reals.R_sqrt.sqrt_lem_1	40
Coq.Reals.R_sqrt.sqrt_def	40	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold sqrt; only 1: destruct (Rcase_abs x) as [Hlt| Hge]; only 1: elim (Rlt_irrefl _ (Rlt_le_trans _ _ _ Hlt H)); only 1: rewrite Rsqrt_Rsqrt; only 1: reflexivity).	0.086522102356	6
Coq.Reals.R_sqrt.sqrt_square	40
Coq.Reals.R_sqrt.sqrt_Rsqr	40	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rsqr; only 1: apply (Rsqr_inj (sqrt x²) x (sqrt_positivity x² (Rle_0_sqr x)) H); only 1: unfold Rsqr; only 1: apply (sqrt_sqrt x² (Rle_0_sqr x))).	0.0682170391083	5
Coq.Reals.R_sqrt.sqrt_pow2	40
Coq.Reals.R_sqrt.sqrt_Rsqr_abs	40
Coq.Reals.R_sqrt.Rsqr_sqrt	40	0.0.0	synth with cache (only 1: intros; only 1: unfold Rsqr; only 1: apply (sqrt_sqrt x H)).	0.0502321720123	3
Coq.Reals.R_sqrt.sqrt_mult_alt	40
Coq.Reals.R_sqrt.sqrt_mult	40
Coq.Reals.R_sqrt.sqrt_lt_R0	40
Coq.Reals.R_sqrt.Rlt_mult_inv_pos	40
Coq.Reals.R_sqrt.Rle_mult_inv_pos	40	0.0.1.0	synth with cache (only 1: intros x y H H0; only 1: apply Rmult_le_pos; only 1: assumption; only 1: auto with real).	0.248970985413	77
Coq.Reals.R_sqrt.sqrt_div_alt	40
Coq.Reals.R_sqrt.sqrt_div	40
Coq.Reals.R_sqrt.sqrt_lt_0_alt	40
Coq.Reals.R_sqrt.sqrt_lt_0	40
Coq.Reals.R_sqrt.sqrt_lt_1_alt	40
Coq.Reals.R_sqrt.sqrt_lt_1	40	0.0.0.0.0.0.0.1	synth with cache (only 1: intros; only 1: apply Rsqr_incrst_0; only 1: rewrite 2!Rsqr_sqrt; only 1: assumption; only 1: assumption; only 1: assumption; only 1: apply sqrt_pos; only 1: apply sqrt_pos).	1.38714289665	1634
Coq.Reals.R_sqrt.sqrt_le_0	40
Coq.Reals.R_sqrt.sqrt_le_1_alt	40
Coq.Reals.R_sqrt.sqrt_le_1	40
Coq.Reals.R_sqrt.sqrt_inj	40
Coq.Reals.R_sqrt.sqrt_less_alt	40
Coq.Reals.R_sqrt.sqrt_less	40	130.2.64.832.1.0.128.0.1.0.0.1.1.0.0.641	synth with cache (only 1: simple induction 1; only 1: intros; only 1: apply Rsqr_incrst_0; only 1: rewrite Rsqr_sqrt; only 1: rewrite <- (Rmult_1_l x)  at 1; only 1: now apply Rmult_lt_compat_r; only 1: trivial; only 1: apply sqrt_pos; only 1: trivial; only 1: intro t; only 1: intros; only 1: rewrite <- (Rmult_1_l x)  at 1; only 1: N.nzsimpl'; only 1: elim (archimed (Rabs x)); only 1: intros; only 1: Lra.lra).	38.9907848835	56530
Coq.Reals.R_sqrt.sqrt_more	40
Coq.Reals.R_sqrt.sqrt_cauchy	40
Coq.Reals.R_sqrt.Rsqr_sol_eq_0_1	40
Coq.Reals.R_sqrt.Rsqr_sol_eq_0_0	40
Coq.Reals.ConstructiveRealsLUB.is_upper_bound_dec	40
Coq.Reals.ConstructiveRealsLUB.is_upper_bound_epsilon	40
Coq.Reals.ConstructiveRealsLUB.is_upper_bound_not_epsilon	40
Coq.Reals.ConstructiveRealsLUB.DDlow_below_up	40
Coq.Reals.ConstructiveRealsLUB.DDcut_limit_fix	40	328.513.64	synth with cache (only 1: intros H; only 1: intros x; only 1: eauto with *).	11.1141409874	7698
Coq.Reals.ConstructiveRealsLUB.DDcut_limit	40
Coq.Reals.ConstructiveRealsLUB.glb_dec_Q	40
Coq.Reals.ConstructiveRealsLUB.is_upper_bound_glb	40
Coq.Reals.ConstructiveRealsLUB.is_upper_bound_closed	40
Coq.Reals.ConstructiveRealsLUB.sig_lub	40
Coq.Reals.ConstructiveRealsLUB.CR_sig_lub	40
Coq.Reals.Rderiv.cont_deriv	40
Coq.Reals.Rderiv.Dconst	40
Coq.Reals.Rderiv.Dx	40
Coq.Reals.Rderiv.Dadd	40
Coq.Reals.Rderiv.Dmult	40
Coq.Reals.Rderiv.Dmult_const	40
Coq.Reals.Rderiv.Dopp	40
Coq.Reals.Rderiv.Dminus	40
Coq.Reals.Rderiv.Dx_pow_n	40
Coq.Reals.Rderiv.Dcomp	40
Coq.Reals.Rderiv.D_pow_n	40
Coq.Reals.Cauchy_prod.sum_N_predN	40	129.0.0.0	synth with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: elim (Nat.lt_irrefl _ H); only 1: Morphisms.solve_proper).	0.611748933792	84
Coq.Reals.Cauchy_prod.sum_plus	40	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: ring; only 1: do 3 rewrite tech5; only 1: rewrite HrecN; only 1: ring).	0.116511821747	7
Coq.Reals.Cauchy_prod.cauchy_finite	40
Coq.Reals.Rlogic.Arithmetical_dec.sig_forall_dec	40
Coq.Reals.Rlogic.not_not_archimedean	40
Coq.Reals.Rlogic.sig_not_dec	40
Coq.Reals.Rtrigo1.CVN_R_cos	40
Coq.Reals.Rtrigo1.continuity_cos	40
Coq.Reals.Rtrigo1.sin_gt_cos_7_8	40
Coq.Reals.Rtrigo1.PI_2_aux	40
Coq.Reals.Rtrigo1.cos_pi2	40
Coq.Reals.Rtrigo1.pi2_int	40
Coq.Reals.Rtrigo1.cos_minus	40
Coq.Reals.Rtrigo1.sin2_cos2	40
Coq.Reals.Rtrigo1.cos2	40
Coq.Reals.Rtrigo1.sin2	40	0.0.0	synth with cache (only 1: intros x; only 1: rewrite <- (sin2_cos2 x); only 1: ring).	0.0712718963623	3
Coq.Reals.Rtrigo1.cos_PI2	40
Coq.Reals.Rtrigo1.sin_pos_tech	40
Coq.Reals.Rtrigo1.sin_PI2	40
Coq.Reals.Rtrigo1.PI_RGT_0	40
Coq.Reals.Rtrigo1.PI_4	40
Coq.Reals.Rtrigo1.PI_neq0	40	0.0.0.6.0.835	synth with cache (only 1: rewrite <- (OrderedRing.Rplus_0_l (R:=rO)); only 1: apply Rgt_not_eq; only 1: rewrite Rplus_0_r; only 1: unfold PI; only 1: destruct pi2_int; only 1: lra).	16.9357888699	31089
Coq.Reals.Rtrigo1.cos_PI	40
Coq.Reals.Rtrigo1.sin_PI	40
Coq.Reals.Rtrigo1.sin_bound	40
Coq.Reals.Rtrigo1.cos_bound	40
Coq.Reals.Rtrigo1.neg_cos	40
Coq.Reals.Rtrigo1.sin_cos	40
Coq.Reals.Rtrigo1.sin_plus	40
Coq.Reals.Rtrigo1.sin_minus	40
Coq.Reals.Rtrigo1.tan_plus	40
Coq.Reals.Rtrigo1.sin_2a	40
Coq.Reals.Rtrigo1.cos_2a	40
Coq.Reals.Rtrigo1.cos_2a_cos	40
Coq.Reals.Rtrigo1.cos_2a_sin	40
Coq.Reals.Rtrigo1.tan_2a	40
Coq.Reals.Rtrigo1.sin_neg	40	0.0.0.0.0.0.0	synth with cache (only 1: intro; only 1: unfold sin; only 1: replace (- x)² with x²; only 1: case (exist_sin x²); only 1: intros; only 1: ring; only 1: apply Rsqr_neg).	0.102073907852	7
Coq.Reals.Rtrigo1.cos_neg	40	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold cos; only 1: replace (- x)² with x²; only 1: reflexivity; only 1: apply Rsqr_neg).	0.0705881118774	5
Coq.Reals.Rtrigo1.tan_0	40
Coq.Reals.Rtrigo1.tan_neg	40
Coq.Reals.Rtrigo1.tan_minus	40
Coq.Reals.Rtrigo1.cos_3PI2	40
Coq.Reals.Rtrigo1.sin_2PI	40
Coq.Reals.Rtrigo1.cos_2PI	40
Coq.Reals.Rtrigo1.neg_sin	40
Coq.Reals.Rtrigo1.sin_PI_x	40
Coq.Reals.Rtrigo1.sin_period	40
Coq.Reals.Rtrigo1.cos_period	40
Coq.Reals.Rtrigo1.sin_shift	40
Coq.Reals.Rtrigo1.cos_shift	40
Coq.Reals.Rtrigo1.cos_sin	40	0.0.0.5.0	synth with cache (only 1: intro x; only 1: rewrite sin_plus; only 1: rewrite sin_PI2; only 1: rewrite cos_PI2; only 1: ring).	30.2253131866	38335
Coq.Reals.Rtrigo1.PI2_RGT_0	40	1.0.0.0.0.0	synth with cache (only 1: unfold Rdiv; only 1: apply Rmult_lt_0_compat; only 1: unfold PI; only 1: destruct pi2_int; only 1: lra; only 1: apply Rinv_0_lt_compat, Rlt_0_2).	0.155787944794	10
Coq.Reals.Rtrigo1.SIN_bound	40
Coq.Reals.Rtrigo1.COS_bound	40
Coq.Reals.Rtrigo1.cos_sin_0	40
Coq.Reals.Rtrigo1.cos_sin_0_var	40
Coq.Reals.Rtrigo1.sin_lb_gt_0	40
Coq.Reals.Rtrigo1.SIN	40
Coq.Reals.Rtrigo1.COS	40
Coq.Reals.Rtrigo1._PI2_RLT_0	40
Coq.Reals.Rtrigo1.PI4_RLT_PI2	40	768.0.3.1	synth with cache (only 1: unfold Rdiv; only 1: apply Rmult_lt_compat_l; only 1: apply PI_RGT_0; only 1: firstorder).	0.530597925186	746
Coq.Reals.Rtrigo1.PI2_Rlt_PI	40	0.1.256	synth with cache (only 1: rewrite <- Rmult_1_r; only 1: pose proof PI_RGT_0 as H; only 1: lra).	0.120197057724	74
Coq.Reals.Rtrigo1.sin_gt_0	40
Coq.Reals.Rtrigo1.cos_gt_0	40
Coq.Reals.Rtrigo1.sin_ge_0	40
Coq.Reals.Rtrigo1.cos_ge_0	40
Coq.Reals.Rtrigo1.sin_le_0	40
Coq.Reals.Rtrigo1.cos_le_0	40
Coq.Reals.Rtrigo1.sin_lt_0	40
Coq.Reals.Rtrigo1.sin_lt_0_var	40
Coq.Reals.Rtrigo1.cos_lt_0	40
Coq.Reals.Rtrigo1.tan_gt_0	40
Coq.Reals.Rtrigo1.tan_lt_0	40
Coq.Reals.Rtrigo1.cos_ge_0_3PI2	40
Coq.Reals.Rtrigo1.form1	40
Coq.Reals.Rtrigo1.form2	40	2.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros p q; only 1: pattern p at 1; only 1: replace p with ((p - q) / 2 + (p + q) / 2) by field; only 1: rewrite <- (cos_neg q); only 1: replace (- q) with ((p - q) / 2 - (p + q) / 2) by field; only 1: rewrite cos_plus; only 1: rewrite cos_minus; only 1: pattern p at 1; only 1: rewrite Rmult_comm; only 1: pattern p at 1; only 1: rewrite Rmult_comm; only 1: ring_Rsqr).	2.11399698257	1639
Coq.Reals.Rtrigo1.form3	40
Coq.Reals.Rtrigo1.form4	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros p q; only 1: pattern p at 1; only 1: replace p with ((p - q) / 2 + (p + q) / 2); only 1: pattern q at 3; only 1: replace q with ((p + q) / 2 - (p - q) / 2); only 1: rewrite sin_plus; only 1: rewrite sin_minus; only 1: ring; only 1: pattern q at 3; only 1: rewrite double_var; only 1: unfold Rdiv; only 1: ring; only 1: pattern p at 3; only 1: rewrite double_var; only 1: unfold Rdiv; only 1: ring).	3.53408002853	1253
Coq.Reals.Rtrigo1.sin_increasing_0	40
Coq.Reals.Rtrigo1.sin_increasing_1	40
Coq.Reals.Rtrigo1.sin_decreasing_0	40
Coq.Reals.Rtrigo1.sin_decreasing_1	40
Coq.Reals.Rtrigo1.cos_increasing_0	40
Coq.Reals.Rtrigo1.cos_increasing_1	40
Coq.Reals.Rtrigo1.cos_decreasing_0	40
Coq.Reals.Rtrigo1.cos_decreasing_1	40
Coq.Reals.Rtrigo1.tan_diff	40
Coq.Reals.Rtrigo1.tan_increasing_0	40
Coq.Reals.Rtrigo1.tan_increasing_1	40
Coq.Reals.Rtrigo1.sin_incr_0	40
Coq.Reals.Rtrigo1.sin_incr_1	40
Coq.Reals.Rtrigo1.sin_decr_0	40
Coq.Reals.Rtrigo1.sin_decr_1	40
Coq.Reals.Rtrigo1.cos_incr_0	40
Coq.Reals.Rtrigo1.cos_incr_1	40
Coq.Reals.Rtrigo1.cos_decr_0	40
Coq.Reals.Rtrigo1.cos_decr_1	40
Coq.Reals.Rtrigo1.tan_incr_0	40
Coq.Reals.Rtrigo1.tan_incr_1	40
Coq.Reals.Rtrigo1.sin_eq_0_1	40
Coq.Reals.Rtrigo1.sin_eq_0_0	40
Coq.Reals.Rtrigo1.cos_eq_0_0	40
Coq.Reals.Rtrigo1.cos_eq_0_1	40
Coq.Reals.Rtrigo1.sin_eq_O_2PI_0	40
Coq.Reals.Rtrigo1.sin_eq_O_2PI_1	40
Coq.Reals.Rtrigo1.cos_eq_0_2PI_0	40
Coq.Reals.Rtrigo1.cos_eq_0_2PI_1	40
Coq.Reals.PartSum.tech1	40
Coq.Reals.PartSum.tech2	40
Coq.Reals.PartSum.tech3	40
Coq.Reals.PartSum.tech4	40
Coq.Reals.PartSum.tech5	40	0.0	synth with cache (only 1: intros; only 1: auto with real).	0.0364398956299	2
Coq.Reals.PartSum.tech6	40
Coq.Reals.PartSum.tech7	40
Coq.Reals.PartSum.tech11	40
Coq.Reals.PartSum.tech12	40	0.0	synth with cache (only 1: intros; only 1: auto with arith).	0.0393500328064	2
Coq.Reals.PartSum.scal_sum	40
Coq.Reals.PartSum.decomp_sum	40
Coq.Reals.PartSum.plus_sum	40
Coq.Reals.PartSum.sum_eq	40
Coq.Reals.PartSum.uniqueness_sum	40
Coq.Reals.PartSum.minus_sum	40	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: ring; only 1: do 3 rewrite tech5; only 1: rewrite HrecN; only 1: ring).	0.102262020111	7
Coq.Reals.PartSum.sum_decomposition	40
Coq.Reals.PartSum.sum_Rle	40
Coq.Reals.PartSum.Rsum_abs	40
Coq.Reals.PartSum.sum_cte	40
Coq.Reals.PartSum.sum_growing	40	3.0.576.0.0.130	synth with cache (only 1: intro H; only 1: intros; only 1: induction N as [| N HrecN]; only 1: eauto using Z.Private_OrderTac.Tac.eq_trans, Z.Private_OrderTac.Tac.eq_sym; only 1: do 2 rewrite tech5; only 1: auto with real).	7.54047298431	9920
Coq.Reals.PartSum.Rabs_triang_gen	40	0.1.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: right; only 1: reflexivity; only 1: do 2 rewrite tech5; only 1: apply Rle_trans with (Rabs (sum_f_R0 An N) + Rabs (An (S N))); only 1: apply Rabs_triang; only 1: do 2 rewrite <- (Rplus_comm (Rabs (An (S N)))); only 1: apply Rplus_le_compat_l; only 1: apply HrecN).	0.309672117233	176
Coq.Reals.PartSum.cond_pos_sum	40
Coq.Reals.PartSum.cauchy_abs	40
Coq.Reals.PartSum.cv_cauchy_1	40
Coq.Reals.PartSum.cv_cauchy_2	40
Coq.Reals.PartSum.sum_eq_R0	40
Coq.Reals.PartSum.sum_incr	40
Coq.Reals.PartSum.sum_cv_maj	40
Coq.Reals.ConstructiveCauchyReals.QSeqEquiv_sym	40
Coq.Reals.ConstructiveCauchyReals.factorDenom	40	0.1.0.0.0.0.128.386.0.5	synth with cache (only 1: intros a b; only 1: unfold Qeq, Qplus; only 1: intro; only 1: induction a; only 1: simpl; only 1: auto; only 1: simpl; only 1: trivial; only 1: simpl; only 1: auto).	11.7787818909	7104
Coq.Reals.ConstructiveCauchyReals.QSeqEquiv_trans	40
Coq.Reals.ConstructiveCauchyReals.QSeqEquivEx_sym	40	257.0.0.0.193.705.1.3.195.1	synth with cache (only 1: intros R L n; only 1: destruct n; only 1: red; only 1: exists x; only 1: intros H'; only 1: intros n m; only 1: rewrite Qabs_Qminus; only 1: rewrite Qabs_Qminus; only 1: rewrite Qabs_Qminus; only 1: auto with *).	27.3838739395	33326
Coq.Reals.ConstructiveCauchyReals.QSeqEquivEx_trans	40
Coq.Reals.ConstructiveCauchyReals.QSeqEquiv_cau_r	40
Coq.Reals.ConstructiveCauchyReals.increasing_modulus_inc	40
Coq.Reals.ConstructiveCauchyReals.increasing_modulus_max	40
Coq.Reals.ConstructiveCauchyReals.standard_modulus	40
Coq.Reals.ConstructiveCauchyReals.CRealLtEpsilon	40
Coq.Reals.ConstructiveCauchyReals.CRealLtForget	40	128.578	synth with cache (only 1: intros (x1, x2) (y1, y2) (z1, z2); only 1: firstorder  (subst; auto)).	2.65864300728	611
Coq.Reals.ConstructiveCauchyReals.CRealLt_lpo_dec	40
Coq.Reals.ConstructiveCauchyReals.CRealLe_not_lt	40
Coq.Reals.ConstructiveCauchyReals.CRealEq_diff	40
Coq.Reals.ConstructiveCauchyReals.CRealEq_modindep	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_aboveSig	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_above	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_above_same	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_asym	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_irrefl	40
Coq.Reals.ConstructiveCauchyReals.CRealLe_refl	40
Coq.Reals.ConstructiveCauchyReals.CRealEq_refl	40	0.0.0.0.2.0	synth with cache (only 1: intros; only 1: split; only 1: intro abs; only 1: exact (CRealLt_asym x x abs abs); only 1: intro abs; only 1: exact (CRealLt_asym x x abs abs)).	0.26701593399	229
Coq.Reals.ConstructiveCauchyReals.CRealEq_sym	40	192.258.1.128	synth with cache (only 1: intros P_or_Q; only 1: intros; only 1: inversion H; only 1: now Nat.nzsimpl').	4.66673994064	837
Coq.Reals.ConstructiveCauchyReals.CRealLt_dec	40
Coq.Reals.ConstructiveCauchyReals.CReal_le_lt_trans	40
Coq.Reals.ConstructiveCauchyReals.CReal_lt_le_trans	40
Coq.Reals.ConstructiveCauchyReals.CReal_le_trans	40
Coq.Reals.ConstructiveCauchyReals.CReal_lt_trans	40
Coq.Reals.ConstructiveCauchyReals.CRealEq_trans	40
Coq.Reals.ConstructiveCauchyReals.CRealEq_relT	40	0.0.0.0.0.0.0.0.0.514.387.0.0.0.0.0.0.1.3.464	synth with cache (only 1: split; only 1: now rewrite <- ?Z.succ_le_mono; only 1: split; only 1: destruct H; only 1: intro abs; only 1: contradiction; only 1: destruct H; only 1: intro abs; only 1: contradiction; only 1: destruct 1; only 1: intros (EQ, EQ'); only 1: split; only 1: intro abs; only 1: destruct (CRealLt_dec _ _ y abs); only 1: contradiction; only 1: contradiction; only 1: intro abs; only 1: destruct (CRealLt_dec _ _ y abs); only 1: contradiction; only 1: contradiction).	33.43186903	7285
Coq.Reals.ConstructiveCauchyReals.CRealLt_morph	40
Coq.Reals.ConstructiveCauchyReals.CRealGt_morph	40
Coq.Reals.ConstructiveCauchyReals.CReal_appart_morph	40
Coq.Reals.ConstructiveCauchyReals.CRealLtProp_morph_Proper	40
Coq.Reals.ConstructiveCauchyReals.CRealLe_morph_Proper	40
Coq.Reals.ConstructiveCauchyReals.CRealGe_morph_Proper	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_proper_l	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_proper_r	40
Coq.Reals.ConstructiveCauchyReals.CRealLe_proper_l	40	1	synth with cache (only 1: now unfold Zdiv.eqm; intros a b c ->).	0.0574910640717	32
Coq.Reals.ConstructiveCauchyReals.CRealLe_proper_r	40	1	synth with cache (only 1: now unfold Zdiv.eqm; intros a b c ->).	0.116504907608	91
Coq.Reals.ConstructiveCauchyReals.ConstCauchy	40
Coq.Reals.ConstructiveCauchyReals.inject_Q	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_0_1	40
Coq.Reals.ConstructiveCauchyReals.CReal_injectQPos	40
Coq.Reals.ConstructiveCauchyReals.CRealLtQ	40
Coq.Reals.ConstructiveCauchyReals.CRealLtQopp	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_compare	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_morph_Proper	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_morph_T	40	0.0.0.0.0.0.0.0.0.0.0.0.0.4	synth with cache (only 1: intros EQ; only 1: split; only 1: intros [n abs]; only 1: simpl in abs; only 1: rewrite H in abs; only 1: unfold Qminus in abs; only 1: rewrite Qplus_opp_r in abs; only 1: discriminate abs; only 1: intros [n abs]; only 1: simpl in abs; only 1: rewrite H in abs; only 1: unfold Qminus in abs; only 1: rewrite Qplus_opp_r in abs; only 1: discriminate abs).	2.36229300499	4263
Coq.Reals.ConstructiveCauchyReals.CReal_plus_cauchy	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus	40	640	synth with cache (only 1: now rewrite ?(rpow_pow_N pow_th)).	0.05522108078	96
Coq.Reals.ConstructiveCauchyReals.CReal_plus_nth	40	64.66.897.65	synth with cache (only 1: intros H; only 1: intros (Hr, Hr'); only 1: CRelationClasses.simpl_crelation; only 1: now elim H).	28.5782940388	2065
Coq.Reals.ConstructiveCauchyReals.CReal_plus_unfold	40
Coq.Reals.ConstructiveCauchyReals.CReal_opp	40	67	synth with cache (only 1: auto with arith).	0.104336977005	8
Coq.Reals.ConstructiveCauchyReals.belowMultiple	40	707.0.256.256.65.640.2.1.256.0.0.582	synth with cache (only 1: Nat.cases n; only 1: intros; only 1: now Nat.nzsimpl; only 1: simple induction 1; only 1: rewrite Nat.mul_1_l; only 1: constructor; only 1: intros H1; only 1: generalize H; only 1: intros l; only 1: intros H0; only 1: simpl; only 1: firstorder).	12.0337591171	18702
Coq.Reals.ConstructiveCauchyReals.CReal_plus_assoc	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_comm	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_0_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_0_r	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_lt_compat_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_lt_compat_r	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_lt_reg_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_lt_reg_r	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_reg_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_reg_r	40	1.1.0.0.0.0.0	synth with cache (only 1: intros; only 1: intro abs; only 1: apply H; only 1: clear H; only 1: do 2 rewrite <- (CReal_plus_comm x); only 1: apply CReal_plus_lt_compat_l; only 1: exact abs).	0.711787939072	458
Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_compat_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_lt_compat	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_compat	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_opp_r	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_opp_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_proper_r	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_proper_l	40	0.0.0.0.0.0.0.0.1.0	synth with cache (only 1: intros; only 1: split; only 1: intro abs; only 1: apply CReal_plus_lt_reg_l in abs; only 1: destruct H; only 1: contradiction; only 1: intro abs; only 1: apply CReal_plus_lt_reg_l in abs; only 1: destruct H; only 1: contradiction).	6.01289916039	3627
Coq.Reals.ConstructiveCauchyReals.CReal_plus_morph_Proper	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_morph_T	40	65.898.0.192	synth with cache (only 1: intros Ha; only 1: intro x; only 1: intros n m Hm H; only 1: now f_equiv).	2.66187810898	1121
Coq.Reals.ConstructiveCauchyReals.CReal_plus_eq_reg_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_opp_0	40	389.3	synth with cache (only 1: simpl; only 1: f_equiv).	0.432857036591	931
Coq.Reals.ConstructiveCauchyReals.CReal_opp_plus_distr	40
Coq.Reals.ConstructiveCauchyReals.CReal_opp_involutive	40
Coq.Reals.ConstructiveCauchyReals.CReal_opp_gt_lt_contravar	40
Coq.Reals.ConstructiveCauchyReals.CReal_opp_ge_le_contravar	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_plus	40	448.0	synth with cache (only 1: intros; only 1: f_equiv).	0.307900905609	115
Coq.Reals.ConstructiveCauchyReals.inject_Q_one	40	0	synth with cache (only 1: reflexivity).	0.0139150619507	1
Coq.Reals.ConstructiveCauchyReals.inject_Q_lt	40
Coq.Reals.ConstructiveCauchyReals.opp_inject_Q	40	260.1	synth with cache (only 1: intros (x, y); only 1: f_equiv).	1.27284193039	867
Coq.Reals.ConstructiveCauchyReals.lt_inject_Q	40
Coq.Reals.ConstructiveCauchyReals.le_inject_Q	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_le	40
Coq.Reals.ConstructiveCauchyReals.inject_Z_plus	40
Coq.Reals.ConstructiveCauchyReals.opp_inject_Z	40	320.1.64.709	synth with cache (only 1: apply lt_wf_rec; only 1: constructor; only 1: intros n m p; only 1: f_equiv).	3.99513101578	6680
Coq.Reals.Rtrigo_reg.continuity_sin	40
Coq.Reals.Rtrigo_reg.CVN_R_sin	40
Coq.Reals.Rtrigo_reg.derivable_pt_lim_sin_0	40
Coq.Reals.Rtrigo_reg.derivable_pt_lim_cos_0	40
Coq.Reals.Rtrigo_reg.derivable_pt_lim_sin	40
Coq.Reals.Rtrigo_reg.derivable_pt_lim_cos	40
Coq.Reals.Rtrigo_reg.derivable_pt_sin	40
Coq.Reals.Rtrigo_reg.derivable_pt_cos	40
Coq.Reals.Rtrigo_reg.derivable_sin	40	0.0.2.0	synth with cache (only 1: intro; only 1: unfold derivable_pt; only 1: exists (cos x); only 1: apply derivable_pt_lim_sin).	1.24488210678	215
Coq.Reals.Rtrigo_reg.derivable_cos	40	0.0.711	synth with cache (only 1: RelationClasses.reduce; only 1: exists (- sin x); only 1: apply derivable_pt_lim_cos).	27.7903280258	11672
Coq.Reals.Rtrigo_reg.derive_pt_sin	40
Coq.Reals.Rtrigo_reg.derive_pt_cos	40
Coq.Reals.Cos_plus.Majxy_cv_R0	40
Coq.Reals.Cos_plus.reste1_maj	40
Coq.Reals.Cos_plus.reste2_maj	40
Coq.Reals.Cos_plus.reste1_cv_R0	40
Coq.Reals.Cos_plus.reste2_cv_R0	40
Coq.Reals.Cos_plus.reste_cv_R0	40
Coq.Reals.Cos_plus.cos_plus	40
Coq.Reals.Rgeom.distance_refl	40
Coq.Reals.Rgeom.distance_symm	40
Coq.Reals.Rgeom.law_cosines	40
Coq.Reals.Rgeom.triangle	40
Coq.Reals.Rgeom.translation_0	40	64	synth with cache (only 1: firstorder).	0.208091020584	100
Coq.Reals.Rgeom.isometric_translation	40	0.64.1.192.576	synth with cache (only 1: compute; only 1: intros n m Hn; only 1: intros; only 1: rewrite Rmult_plus_distr_r; only 1: ring_Rsqr).	0.853568792343	780
Coq.Reals.Rgeom.rotation_0	40
Coq.Reals.Rgeom.rotation_PI2	40
Coq.Reals.Rgeom.isometric_rotation_0	40
Coq.Reals.Rgeom.isometric_rotation	40
Coq.Reals.Rgeom.isometric_rot_trans	40
Coq.Reals.Rgeom.isometric_trans_rot	40
Coq.Reals.Rsqrt_def.dicho_comp	40
Coq.Reals.Rsqrt_def.dicho_lb_growing	40
Coq.Reals.Rsqrt_def.dicho_up_decreasing	40
Coq.Reals.Rsqrt_def.dicho_lb_maj_y	40
Coq.Reals.Rsqrt_def.dicho_lb_maj	40
Coq.Reals.Rsqrt_def.dicho_up_min_x	40
Coq.Reals.Rsqrt_def.dicho_up_min	40
Coq.Reals.Rsqrt_def.dicho_lb_cv	40
Coq.Reals.Rsqrt_def.dicho_up_cv	40
Coq.Reals.Rsqrt_def.dicho_lb_dicho_up	40
Coq.Reals.Rsqrt_def.pow_2_n_neq_R0	40
Coq.Reals.Rsqrt_def.pow_2_n_growing	40
Coq.Reals.Rsqrt_def.pow_2_n_infty	40
Coq.Reals.Rsqrt_def.cv_dicho	40
Coq.Reals.Rsqrt_def.continuity_seq	40
Coq.Reals.Rsqrt_def.dicho_lb_car	40
Coq.Reals.Rsqrt_def.dicho_up_car	40
Coq.Reals.Rsqrt_def.cv_pow_half	40
Coq.Reals.Rsqrt_def.IVT	40
Coq.Reals.Rsqrt_def.IVT_cor	40
Coq.Reals.Rsqrt_def.Rsqrt_exists	40
Coq.Reals.Rsqrt_def.Rsqrt_positivity	40
Coq.Reals.Rsqrt_def.Rsqrt_Rsqrt	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.height_non_negative	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.avl_node	40	0.0	synth with cache (only 1: intros; only 1: auto).	0.0345380306244	2
Coq.FSets.FMapFullAVL.AvlProofs.Elt.height_0	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.empty_avl	40	0	synth with cache (only 1: constructor).	0.0241141319275	1
Coq.FSets.FMapFullAVL.AvlProofs.Elt.create_avl	40	132	synth with cache (only 1: now left || now right).	0.756088972092	573
Coq.FSets.FMapFullAVL.AvlProofs.Elt.create_height	40	0	synth with cache (only 1: auto).	0.0251049995422	1
Coq.FSets.FMapFullAVL.AvlProofs.Elt.bal_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.bal_height_1	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.bal_height_2	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.add_avl_1	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.add_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.remove_min_avl_1	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.remove_min_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.merge_avl_1	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.merge_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.remove_avl_1	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.remove_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.join_avl_1	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.join_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.concat_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.split_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.Map.map_height	40	0.386.0.0	synth with cache (only 1: induction m; only 1: simpl; only 1: now try Nat.order'; only 1: constructor).	0.161550998688	156
Coq.FSets.FMapFullAVL.AvlProofs.Map.map_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.Mapi.mapi_height	40	0.0.0.0.0	synth with cache (only 1: destruct m; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0668661594391	5
Coq.FSets.FMapFullAVL.AvlProofs.Mapi.mapi_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.Map_option.map_option_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.Map2_opt.map2_opt_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.Map2.map2_avl	40
Coq.FSets.FMapFullAVL.IntMake.Elt.MapsTo_1	40
Coq.FSets.FMapFullAVL.IntMake.Elt.mem_1	40
Coq.FSets.FMapFullAVL.IntMake.Elt.mem_2	40
Coq.FSets.FMapFullAVL.IntMake.Elt.empty_1	40	192.192	synth with cache (only 1: intro H2; only 1: now rewrite <- ?Pos.compare_antisym).	0.117527961731	109
Coq.FSets.FMapFullAVL.IntMake.Elt.is_empty_1	40
Coq.FSets.FMapFullAVL.IntMake.Elt.is_empty_2	40	256.64.258.576.2.0.256.0.0	synth with cache (only 1: intros m; only 1: case m; only 1: intros [| ]; only 1: intros; only 1: red; only 1: intros x y z; only 1: now f_equal; only 1: intros c Hc IH; only 1: now f_equiv).	22.7597179413	10570
Coq.FSets.FMapFullAVL.IntMake.Elt.add_1	40
Coq.FSets.FMapFullAVL.IntMake.Elt.add_2	40
Coq.FSets.FMapFullAVL.IntMake.Elt.add_3	40
Coq.FSets.FMapFullAVL.IntMake.Elt.remove_1	40
Coq.FSets.FMapFullAVL.IntMake.Elt.remove_2	40
Coq.FSets.FMapFullAVL.IntMake.Elt.remove_3	40
Coq.FSets.FMapFullAVL.IntMake.Elt.find_1	40
Coq.FSets.FMapFullAVL.IntMake.Elt.find_2	40	1.580.2.450	synth with cache (only 1: intro z; only 1: intros m s1; only 1: repeat red; only 1: auto using Proofs.find_1, find_2).	38.3533399105	45810
Coq.FSets.FMapFullAVL.IntMake.Elt.fold_1	40
Coq.FSets.FMapFullAVL.IntMake.Elt.elements_1	40
Coq.FSets.FMapFullAVL.IntMake.Elt.elements_2	40	257.2.512.0.257	synth with cache (only 1: intros LT; only 1: unfold elements, MapsTo, eq_key_elt; only 1: intros n H; only 1: rewrite elements_mapsto; only 1: now subst).	1.61136102676	1851
Coq.FSets.FMapFullAVL.IntMake.Elt.elements_3	40	320.0.1.0.0.709.64.643.0	synth with cache (only 1: intros; only 1: case m; only 1: intros Hb; only 1: intros m'; only 1: intros; only 1: apply elements_aux_sort; only 1: trivial; only 1: auto; only 1: now auto with arith).	9.23840308189	20577
Coq.FSets.FMapFullAVL.IntMake.Elt.elements_3w	40
Coq.FSets.FMapFullAVL.IntMake.Elt.cardinal_1	40
Coq.FSets.FMapFullAVL.IntMake.Elt.Equivb_Equivb	40
Coq.FSets.FMapFullAVL.IntMake.Elt.equal_1	40
Coq.FSets.FMapFullAVL.IntMake.Elt.equal_2	40
Coq.FSets.FMapFullAVL.IntMake.map_1	40
Coq.FSets.FMapFullAVL.IntMake.map_2	40
Coq.FSets.FMapFullAVL.IntMake.mapi_1	40
Coq.FSets.FMapFullAVL.IntMake.mapi_2	40
Coq.FSets.FMapFullAVL.IntMake.map2_1	40
Coq.FSets.FMapFullAVL.IntMake.map2_2	40
Coq.FSets.FMapFullAVL.IntMake_ord.cons_cardinal_e	40
Coq.FSets.FMapFullAVL.IntMake_ord.compare_aux_tcc	40
Coq.FSets.FMapFullAVL.IntMake_ord.cons_Cmp	40
Coq.FSets.FMapFullAVL.IntMake_ord.compare_aux_Cmp	40
Coq.FSets.FMapFullAVL.IntMake_ord.compare_Cmp	40
Coq.FSets.FMapFullAVL.IntMake_ord.compare	40
Coq.FSets.FMapFullAVL.IntMake_ord.eq_seq	40	2.0	synth with cache (only 1: intros; only 1: tauto).	0.0363340377808	4
Coq.FSets.FMapFullAVL.IntMake_ord.lt_slt	40	641.1	synth with cache (only 1: intros; only 1: let rec add_permut := let rec add_permut_rec := let rec add_push := gen_add_push radd Rsth Reqe ARth in fun t => match t with | radd ?x ?y => add_permut_rec y || add_permut_rec x | _ => add_push t; apply (Radd_ext Reqe); [  | reflexivity ] end in repeat reflexivity || match goal with | |- req ?t _ => add_permut_rec t end in add_permut).	0.0365259647369	24
Coq.FSets.FMapFullAVL.IntMake_ord.eq_1	40
Coq.FSets.FMapFullAVL.IntMake_ord.eq_2	40
Coq.FSets.FMapFullAVL.IntMake_ord.eq_refl	40
Coq.FSets.FMapFullAVL.IntMake_ord.eq_sym	40
Coq.FSets.FMapFullAVL.IntMake_ord.eq_trans	40
Coq.FSets.FMapFullAVL.IntMake_ord.lt_trans	40
Coq.FSets.FMapFullAVL.IntMake_ord.lt_not_eq	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.MapsTo_In	40	1.2.0.66	synth with cache (only 1: induction 1; only 1: auto; only 1: intuition; only 1: auto with ordered_type).	0.982391834259	1208
Coq.FSets.FMapAVL.Raw.Proofs.Elt.In_MapsTo	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.In_alt	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.MapsTo_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.In_1	40	0.0.0.1.8.640.642.64	synth with cache (only 1: intros a b H; only 1: intro n; only 1: destr_bool; only 1: elim H0; only 1: intros m x e f; only 1: eauto with *; only 1: eauto with ordered_type; only 1: eauto with ordered_type).	19.1765809059	46380
Coq.FSets.FMapAVL.Raw.Proofs.Elt.In_node_iff	40	1.3.256.2.576	synth with cache (only 1: intros a b H; only 1: intros; only 1: constructor; only 1: intuition_in; only 1: intuition).	7.70063710213	7484
Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_leaf	40	132	synth with cache (only 1: easy).	0.0709340572357	55
Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_leaf	40	0.0.2	synth with cache (only 1: red; only 1: intros; only 1: intuition_in).	0.286323070526	150
Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_tree_node	40	0.0.5.64	synth with cache (only 1: intro; only 1: red; only 1: intuition_in; only 1: eauto with ordered_type).	21.722659111	13888
Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_tree_node	40	0.0.448.256.65.65	synth with cache (only 1: intro; only 1: intros m IH; only 1: compute; only 1: intro z; only 1: intuition_in; only 1: order).	12.193392992	2563
Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_left	40	0.0	synth with cache (only 1: intros; only 1: eauto with ordered_type).	0.0368111133575	2
Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_right	40	0	synth with cache (only 1: intuition_in).	0.0253758430481	1
Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_left	40	0	synth with cache (only 1: intuition_in).	0.0259139537811	1
Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_right	40	0	synth with cache (only 1: intuition_in).	0.0253620147705	1
Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_tree_not_in	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_tree_trans	40	0.0.257.512	synth with cache (only 1: intros a; only 1: intros Hn Hn'; only 1: intros m x y; only 1: eauto with ordered_type).	0.623495817184	200
Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_tree_not_in	40	0.0.0.0	synth with cache (only 1: intros; only 1: intro; only 1: generalize (H _ H0); only 1: order).	0.0358150005341	4
Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_tree_trans	40	0	synth with cache (only 1: eauto with ordered_type).	0.0393760204315	1
Coq.FSets.FMapAVL.Raw.Proofs.Elt.empty_bst	40	2	synth with cache (only 1: intuition).	0.0187120437622	3
Coq.FSets.FMapAVL.Raw.Proofs.Elt.empty_1	40	132	synth with cache (only 1: easy).	0.153161048889	87
Coq.FSets.FMapAVL.Raw.Proofs.Elt.is_empty_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.is_empty_2	40	450.0.0.256.0	synth with cache (only 1: destruct m; only 1: intros a b; only 1: intuition_in; only 1: intuition_in; only 1: easy || now destruct y).	0.127508878708	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.mem_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.mem_2	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_2	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_iff	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_in	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.in_find	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_in_iff	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.not_find_iff	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_find	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_mapsto_equiv	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_in_equiv	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.create_bst	40	128.66.0.256	synth with cache (only 1: intros Ha; only 1: unfold lt_tree; only 1: compute; only 1: auto using in_app_or, in_or_app).	0.63388800621	443
Coq.FSets.FMapAVL.Raw.Proofs.Elt.create_in	40	2.768.0	synth with cache (only 1: unfold create; only 1: intros x y H z; only 1: intuition_in).	0.471988916397	140
Coq.FSets.FMapAVL.Raw.Proofs.Elt.bal_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.bal_in	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.bal_mapsto	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.bal_find	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_in	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_2	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_3	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_find	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_min_in	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_min_mapsto	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_min_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_min_gt_tree	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_min_find	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.merge_in	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.merge_mapsto	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.merge_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_in	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_2	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_3	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.join_in	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.join_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.join_find	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_in_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_in_2	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_in_3	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_lt_tree	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_gt_tree	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_find	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.concat_in	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.concat_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.concat_find	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_aux_mapsto	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_mapsto	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_in	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_aux_sort	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_sort	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_nodup	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_aux_cardinal	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_cardinal	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_app	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_node	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.fold_equiv_aux	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.fold_equiv	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.fold_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.flatten_e_elements	40	0.0.0.1.129.0	synth with cache (only 1: unfold elements; only 1: intros Hab; only 1: intros; only 1: simpl in *; only 1: rewrite !elements_app, !app_nil_r, !app_assoc_reverse; only 1: auto).	1.25008606911	1188
Coq.FSets.FMapAVL.Raw.Proofs.Elt.cons_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.cons_IfEq	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.equal_end_IfEq	40	256.0.512.80.64	synth with cache (only 1: intros m; only 1: apply eq_true_iff_eq; only 1: destruct m; only 1: intuition; only 1: intuition try easy).	3.08769416809	7411
Coq.FSets.FMapAVL.Raw.Proofs.Elt.equal_more_IfEq	40	512.0.2.768.386	synth with cache (only 1: intros n m; only 1: intros x x' Hx; only 1: simpl; only 1: unfold IfEq; only 1: now destruct 1 || now destruct 2).	9.37924385071	5218
Coq.FSets.FMapAVL.Raw.Proofs.Elt.equal_cont_IfEq	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.equal_IfEq	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.Equivb_elements	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.equal_Equivb	40
Coq.FSets.FMapAVL.Raw.Proofs.Map.map_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Map.map_2	40
Coq.FSets.FMapAVL.Raw.Proofs.Map.map_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Mapi.mapi_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Mapi.mapi_2	40	0.0.0.0.0.0.0.0	synth with cache (only 1: induction m; only 1: simpl; only 1: inversion_clear 1; only 1: simpl; only 1: inversion_clear 1; only 1: auto; only 1: auto; only 1: auto).	0.122490882874	8
Coq.FSets.FMapAVL.Raw.Proofs.Mapi.mapi_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Map_option.map_option_2	40
Coq.FSets.FMapAVL.Raw.Proofs.Map_option.map_option_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Map_option.map_option_find	40
Coq.FSets.FMapAVL.Raw.Proofs.Map2_opt.map2_opt_2	40
Coq.FSets.FMapAVL.Raw.Proofs.Map2_opt.map2_opt_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Map2_opt.map2_opt_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Map2.map2_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Map2.map2_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Map2.map2_2	40
Coq.FSets.FMapAVL.IntMake.Elt.MapsTo_1	40	0.0.0.128.1.514.0.0.706.196	synth with cache (only 1: red; only 1: intros a0 a; only 1: intros m x; only 1: intuition; only 1: elim H0; only 1: intuition; only 1: constructor 1; only 1: order; only 1: intuition_in; only 1: intuition_in).	25.5772900581	61833
Coq.FSets.FMapAVL.IntMake.Elt.mem_1	40
Coq.FSets.FMapAVL.IntMake.Elt.mem_2	40
Coq.FSets.FMapAVL.IntMake.Elt.empty_1	40	65	synth with cache (only 1: now rewrite <- ?N.add_le_mono_l).	0.0328068733215	6
Coq.FSets.FMapAVL.IntMake.Elt.is_empty_1	40
Coq.FSets.FMapAVL.IntMake.Elt.is_empty_2	40	258.322.1.193	synth with cache (only 1: intros (a', H); only 1: intros; only 1: intro H2; only 1: easy').	3.04481816292	5145
Coq.FSets.FMapAVL.IntMake.Elt.add_1	40	0.130.131	synth with cache (only 1: intros (c, Hc); only 1: simpl_relation; only 1: auto using find_1, add_1 with ordered_type).	2.49180316925	4730
Coq.FSets.FMapAVL.IntMake.Elt.add_2	40	0.384.1.385.1.0	synth with cache (only 1: intros m x y e e'; only 1: generalize y, e; only 1: intros E1; only 1: generalize y, e; only 1: CRelationClasses.simpl_crelation; only 1: eauto using add_2, add_3).	2.71806406975	3634
Coq.FSets.FMapAVL.IntMake.Elt.add_3	40
Coq.FSets.FMapAVL.IntMake.Elt.remove_1	40
Coq.FSets.FMapAVL.IntMake.Elt.remove_2	40
Coq.FSets.FMapAVL.IntMake.Elt.remove_3	40
Coq.FSets.FMapAVL.IntMake.Elt.find_1	40
Coq.FSets.FMapAVL.IntMake.Elt.find_2	40
Coq.FSets.FMapAVL.IntMake.Elt.fold_1	40
Coq.FSets.FMapAVL.IntMake.Elt.elements_1	40
Coq.FSets.FMapAVL.IntMake.Elt.elements_2	40
Coq.FSets.FMapAVL.IntMake.Elt.elements_3	40
Coq.FSets.FMapAVL.IntMake.Elt.elements_3w	40
Coq.FSets.FMapAVL.IntMake.Elt.cardinal_1	40
Coq.FSets.FMapAVL.IntMake.Elt.Equivb_Equivb	40
Coq.FSets.FMapAVL.IntMake.Elt.equal_1	40
Coq.FSets.FMapAVL.IntMake.Elt.equal_2	40
Coq.FSets.FMapAVL.IntMake.map_1	40
Coq.FSets.FMapAVL.IntMake.map_2	40
Coq.FSets.FMapAVL.IntMake.mapi_1	40
Coq.FSets.FMapAVL.IntMake.mapi_2	40
Coq.FSets.FMapAVL.IntMake.map2_1	40
Coq.FSets.FMapAVL.IntMake.map2_2	40
Coq.FSets.FMapAVL.IntMake_ord.cons_Cmp	40
Coq.FSets.FMapAVL.IntMake_ord.compare_end_Cmp	40	1.3.3.0.2.10	synth with cache (only 1: red; only 1: intros [| x2 d2 r2 e2]; only 1: red; only 1: exact I; only 1: simpl; only 1: auto).	5.92037391663	16302
Coq.FSets.FMapAVL.IntMake_ord.compare_more_Cmp	40
Coq.FSets.FMapAVL.IntMake_ord.compare_cont_Cmp	40
Coq.FSets.FMapAVL.IntMake_ord.compare_Cmp	40
Coq.FSets.FMapAVL.IntMake_ord.compare	40
Coq.FSets.FMapAVL.IntMake_ord.eq_seq	40	0.1	synth with cache (only 1: intros; only 1: Raw.Proofs.intuition_in).	0.035257101059	3
Coq.FSets.FMapAVL.IntMake_ord.lt_slt	40	193.1	synth with cache (only 1: intros; only 1: reflexivity).	0.0330610275269	10
Coq.FSets.FMapAVL.IntMake_ord.eq_1	40
Coq.FSets.FMapAVL.IntMake_ord.eq_2	40
Coq.FSets.FMapAVL.IntMake_ord.eq_refl	40
Coq.FSets.FMapAVL.IntMake_ord.eq_sym	40
Coq.FSets.FMapAVL.IntMake_ord.eq_trans	40
Coq.FSets.FMapAVL.IntMake_ord.lt_trans	40
Coq.FSets.FMapAVL.IntMake_ord.lt_not_eq	40
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.In_eq_iff	40
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.mem_iff	40
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.not_mem_iff	40
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.equal_iff	40	5	synth with cache (only 1: intuition).	1.74854493141	1638
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.subset_iff	40	390	synth with cache (only 1: intuition).	1.05892801285	1393
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.empty_iff	40
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.is_empty_iff	40	1	synth with cache (only 1: intuition).	0.0573000907898	72
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.singleton_iff	40	7	synth with cache (only 1: intuition).	2.28354883194	839
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.add_iff	40
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.add_neq_iff	40
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.remove_iff	40
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.remove_neq_iff	40	0.0.0.0.0.448.4	synth with cache (only 1: intro H; only 1: intuition auto; BinNat.N.Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: apply remove_3 with x; only 1: auto; only 1: apply remove_2; only 1: auto; only 1: auto).	0.983560085297	1015
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.union_iff	40	4	synth with cache (only 1: intuition).	0.386018037796	106
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.inter_iff	40
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.diff_iff	40
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.filter_iff	40
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.for_all_iff	40	5.4	synth with cache (only 1: intro a'; only 1: intuition).	0.943084955215	1318
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.exists_iff	40	4.64	synth with cache (only 1: intro p; only 1: intuition).	1.20812106133	813
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.elements_iff	40	65.6.0	synth with cache (only 1: split; only 1: intuition; only 1: firstorder).	0.565153121948	758
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.mem_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.empty_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.add_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.add_neq_b	40	0.0.0.0.0.0.0.0.3	synth with cache (only 1: intuition; only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_iff s x y); only 1: destruct (mem y s); only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition).	1.15344691277	1667
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.remove_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.remove_neq_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.singleton_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.union_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.inter_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.diff_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.elements_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.filter_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.for_all_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.exists_b	40
Coq.FSets.FSetFacts.WFacts_fun.E_ST	40	0.513.2.0.0.1.2	synth with cache (only 1: split; only 1: red; only 1: intros; only 1: intuition; only 1: auto with *; only 1: intros y Hy; only 1: eauto).	0.31370306015	481
Coq.FSets.FSetFacts.WFacts_fun.Equal_ST	40	197.64.257.66.2.128.88.193	synth with cache (only 1: constructor 1; only 1: intro H; only 1: now constructor; only 1: now BinInt.Z.nzsimpl; only 1: intro n; only 1: repeat red; only 1: intros a b Ha Hb H; only 1: firstorder).	9.80154085159	13437
Coq.FSets.FSetFacts.WFacts_fun.In_m	40
Coq.FSets.FSetFacts.WFacts_fun.is_empty_m	40
Coq.FSets.FSetFacts.WFacts_fun.Empty_m	40	64.0.641	synth with cache (only 1: intro Hxy; only 1: red; only 1: firstorder).	0.0518140792847	56
Coq.FSets.FSetFacts.WFacts_fun.mem_m	40
Coq.FSets.FSetFacts.WFacts_fun.singleton_m	40
Coq.FSets.FSetFacts.WFacts_fun.add_m	40
Coq.FSets.FSetFacts.WFacts_fun.remove_m	40
Coq.FSets.FSetFacts.WFacts_fun.union_m	40
Coq.FSets.FSetFacts.WFacts_fun.inter_m	40
Coq.FSets.FSetFacts.WFacts_fun.diff_m	40
Coq.FSets.FSetFacts.WFacts_fun.Subset_m	40	577	synth with cache (only 1: firstorder).	0.49045920372	325
Coq.FSets.FSetFacts.WFacts_fun.subset_m	40
Coq.FSets.FSetFacts.WFacts_fun.equal_m	40
Coq.FSets.FSetFacts.WFacts_fun.Subset_refl	40	384.2	synth with cache (only 1: intros n; only 1: now rewrite ?IHj).	0.0212769508362	32
Coq.FSets.FSetFacts.WFacts_fun.Subset_trans	40	0.384.257	synth with cache (only 1: intros a b H; only 1: CRelationClasses.reduce; only 1: auto).	0.0382761955261	88
Coq.FSets.FSetFacts.WFacts_fun.In_s_m	40	193.0.1.1	synth with cache (only 1: intros x y H s s' H0; only 1: generalize (H0 x); only 1: rewrite (In_eq_iff s H); only 1: firstorder  (subst; auto)).	1.73443412781	1001
Coq.FSets.FSetFacts.WFacts_fun.Empty_s_m_Proper	40	66.385	synth with cache (only 1: intros n H1 H2 m H3; only 1: firstorder).	1.00715494156	807
Coq.FSets.FSetFacts.WFacts_fun.add_s_m_Proper	40
Coq.FSets.FSetFacts.WFacts_fun.remove_s_m_Proper	40	0.448.0.1.512.1.704.257.448	synth with cache (only 1: intros n m p; only 1: intros H; only 1: intros a0; only 1: intuition; only 1: intro; only 1: do 2 rewrite remove_iff; only 1: intros; only 1: firstorder; only 1: eauto with set).	10.9234900475	20621
Coq.FSets.FSetFacts.WFacts_fun.union_s_m_Proper	40	0.0.64.0.194.449.260	synth with cache (only 1: intros Hn; only 1: intros Hx Hy; only 1: intro H; only 1: intuition; only 1: intros Hab; only 1: do 2 rewrite union_iff; only 1: intuition).	14.6570029259	29643
Coq.FSets.FSetFacts.WFacts_fun.inter_s_m_Proper	40	385.385.2.0.64.66	synth with cache (only 1: intro H; only 1: red; only 1: intros n'; only 1: intro H2; only 1: intros l m a; only 1: eauto with *).	2.83418416977	5084
Coq.FSets.FSetFacts.WFacts_fun.diff_s_m_Proper	40	0.0.0.448.0.320.1.135.450	synth with cache (only 1: intro Hxy; only 1: intros Hz; only 1: intros; only 1: intros Hab; only 1: do 2 rewrite diff_iff; only 1: destr_bool; only 1: split; only 1: intuition; only 1: intuition).	24.5715138912	46786
Coq.FSets.FSetFacts.WFacts_fun.filter_equal	40
Coq.FSets.FSetFacts.WFacts_fun.filter_ext	40
Coq.FSets.FSetFacts.WFacts_fun.filter_subset	40	2.513.448.3.64	synth with cache (only 1: intro He; only 1: intros; only 1: vm_compute in H; only 1: intros n m; only 1: eauto with set).	0.927875995636	2030
Coq.FSets.FSetPositive.PositiveSet.In_1	40	192.323.448.256	synth with cache (only 1: intros a Ha; only 1: intros E; only 1: induction 1; only 1: auto with arith).	1.06341195107	826
Coq.FSets.FSetPositive.PositiveSet.eq_refl	40	1.384.1	synth with cache (only 1: intros n; only 1: intro LT; only 1: intuition PeanoNat.Nat.order).	0.0423209667206	63
Coq.FSets.FSetPositive.PositiveSet.eq_sym	40	2.324.0	synth with cache (only 1: intros; only 1: intros LT; only 1: now rewrite <- ?BinNat.N.add_le_mono_l).	1.08202004433	801
Coq.FSets.FSetPositive.PositiveSet.eq_trans	40	386.195.2	synth with cache (only 1: intros x y z; only 1: intros EQ; only 1: firstorder using StronglySorted_inv).	3.04812407494	4034
Coq.FSets.FSetPositive.PositiveSet.mem_1	40	321.0	synth with cache (only 1: intros; only 1: now rewrite <- ?BinNat.N.add_le_mono_r).	0.0357520580292	18
Coq.FSets.FSetPositive.PositiveSet.mem_2	40	0.0	synth with cache (only 1: unfold In; only 1: trivial).	0.0202221870422	2
Coq.FSets.FSetPositive.PositiveSet.mem_Leaf	40	321.0	synth with cache (only 1: intros n; only 1: firstorder).	0.0275740623474	18
Coq.FSets.FSetPositive.PositiveSet.empty_1	40	128.129	synth with cache (only 1: intro EQ; only 1: now PeanoNat.Nat.nzsimpl).	0.0623037815094	15
Coq.FSets.FSetPositive.PositiveSet.mem_node	40
Coq.FSets.FSetPositive.PositiveSet.is_empty_spec	40
Coq.FSets.FSetPositive.PositiveSet.is_empty_1	40
Coq.FSets.FSetPositive.PositiveSet.is_empty_2	40
Coq.FSets.FSetPositive.PositiveSet.subset_Leaf_s	40	386.256.384.0	synth with cache (only 1: intros n; only 1: induction n as [| p H]; only 1: now try split; only 1: intros n [=<-] le_mn1 le_mn2).	0.455377101898	54
Coq.FSets.FSetPositive.PositiveSet.subset_spec	40
Coq.FSets.FSetPositive.PositiveSet.subset_1	40
Coq.FSets.FSetPositive.PositiveSet.subset_2	40
Coq.FSets.FSetPositive.PositiveSet.equal_subset	40
Coq.FSets.FSetPositive.PositiveSet.equal_spec	40
Coq.FSets.FSetPositive.PositiveSet.equal_1	40
Coq.FSets.FSetPositive.PositiveSet.equal_2	40
Coq.FSets.FSetPositive.PositiveSet.eq_dec	40
Coq.FSets.FSetPositive.PositiveSet.lex_Opp	40	580.192.65.454	synth with cache (only 1: intros n m p Hm; only 1: intros ->; only 1: intros Hz; only 1: now destruct p).	19.4645860195	29757
Coq.FSets.FSetPositive.PositiveSet.compare_bool_inv	40	64	synth with cache (only 1: destr_bool).	0.237416982651	44
Coq.FSets.FSetPositive.PositiveSet.compare_inv	40
Coq.FSets.FSetPositive.PositiveSet.lex_Eq	40	195.1	synth with cache (only 1: intros n m; only 1: now destruct n).	1.2163670063	1177
Coq.FSets.FSetPositive.PositiveSet.compare_bool_Eq	40	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: now split; only 1: easy'; only 1: now split; only 1: now split).	0.0577371120453	5
Coq.FSets.FSetPositive.PositiveSet.compare_equal	40
Coq.FSets.FSetPositive.PositiveSet.compare_gt	40
Coq.FSets.FSetPositive.PositiveSet.compare_eq	40
Coq.FSets.FSetPositive.PositiveSet.compare	40
Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_cxe	40
Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_xce	40	0.0.0.0	synth with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0375909805298	4
Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_lxl	40
Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_gxg	40	268.276.0.0	synth with cache (only 1: destruct x; only 1: constructor; only 1: now constructor; only 1: constructor).	10.090159893	43743
Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_xll	40	0.0.0.0	synth with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0318620204926	4
Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_xgg	40	0.0.0.0	synth with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0314002037048	4
Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_lex	40
Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_compare_bool	40	0.0.0.0.0.0.0.0.1	synth with cache (only 1: destr_bool; only 1: ct; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: ct).	0.707074165344	658
Coq.FSets.FSetPositive.PositiveSet.lt_spec.compare_x_Leaf	40	0.0.0.0.0.0.0.1.7.0.0.0.0.12.2.65	synth with cache (only 1: intros a; only 1: rewrite compare_inv; only 1: destruct a; only 1: unfold compare_fun; only 1: case is_empty; only 1: reflexivity; only 1: trivial; only 1: destruct b; only 1: unfold compare_fun; only 1: case is_empty; only 1: reflexivity; only 1: reflexivity; only 1: unfold compare_fun; only 1: case is_empty; only 1: reflexivity; only 1: reflexivity).	8.09876990318	27701
Coq.FSets.FSetPositive.PositiveSet.lt_spec.compare_empty_x	40
Coq.FSets.FSetPositive.PositiveSet.lt_spec.compare_x_empty	40	0.0.0.0.0.0.1.0.0.0.0.1.0.0.0.0.0.0.0.1.0.0.1.0.0.0.2.3.0	synth with cache (only 1: induction a as [| l IHl o r IHr]; only 1: simpl; only 1: intro; only 1: intros; only 1: rewrite compare_inv; only 1: simpl; only 1: case is_empty; only 1: reflexivity; only 1: reflexivity; only 1: destruct o; only 1: intro; only 1: discriminate; only 1: simpl is_empty; only 1: rewrite <- andb_lazy_alt, andb_true_iff; only 1: intros [Hl Hr]; only 1: destruct b as [| l' [| ] r']; only 1: simpl compare_fun; only 1: rewrite Hl, Hr; only 1: trivial; only 1: simpl compare_fun; only 1: trivial; only 1: simpl compare_fun; only 1: rewrite (IHl Hl), (IHr Hr); only 1: simpl; only 1: case (is_empty l'); only 1: case (is_empty r'); only 1: trivial; only 1: trivial; only 1: trivial).	32.4579758644	76696
Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_compare_fun	40
Coq.FSets.FSetPositive.PositiveSet.lt_trans	40
Coq.FSets.FSetPositive.PositiveSet.lt_not_eq	40
Coq.FSets.FSetPositive.PositiveSet.add_spec	40
Coq.FSets.FSetPositive.PositiveSet.add_1	40
Coq.FSets.FSetPositive.PositiveSet.add_2	40	67.0.3.65	synth with cache (only 1: intro H'; only 1: intros; only 1: apply <- add_spec; only 1: intuition).	6.98613500595	8231
Coq.FSets.FSetPositive.PositiveSet.add_3	40
Coq.FSets.FSetPositive.PositiveSet.remove_spec	40
Coq.FSets.FSetPositive.PositiveSet.remove_1	40
Coq.FSets.FSetPositive.PositiveSet.remove_2	40	323.0.0	synth with cache (only 1: intros a n m H; only 1: rewrite remove_spec; only 1: now BinInt.Z.swap_greater).	0.676223039627	332
Coq.FSets.FSetPositive.PositiveSet.remove_3	40	0.0.1.3	synth with cache (only 1: intros n m p; only 1: rewrite remove_spec; only 1: intros (H, H'); only 1: trivial).	0.590950012207	662
Coq.FSets.FSetPositive.PositiveSet.singleton_1	40
Coq.FSets.FSetPositive.PositiveSet.singleton_2	40	0.0.0.641	synth with cache (only 1: firstorder; only 1: apply <- add_spec; only 1: left; only 1: assumption).	0.310580015182	130
Coq.FSets.FSetPositive.PositiveSet.union_spec	40
Coq.FSets.FSetPositive.PositiveSet.union_1	40
Coq.FSets.FSetPositive.PositiveSet.union_2	40
Coq.FSets.FSetPositive.PositiveSet.union_3	40	448.1.0	synth with cache (only 1: intros; only 1: apply <- union_spec; only 1: auto with *).	0.0518429279327	27
Coq.FSets.FSetPositive.PositiveSet.inter_spec	40
Coq.FSets.FSetPositive.PositiveSet.inter_1	40
Coq.FSets.FSetPositive.PositiveSet.inter_2	40	0.0.0	synth with cache (only 1: intros s s' x; only 1: rewrite inter_spec; only 1: tauto).	0.0327301025391	3
Coq.FSets.FSetPositive.PositiveSet.inter_3	40	0.0.0.512	synth with cache (only 1: intros p H; only 1: intro; only 1: rewrite inter_spec; only 1: tauto).	0.538833141327	311
Coq.FSets.FSetPositive.PositiveSet.diff_spec	40
Coq.FSets.FSetPositive.PositiveSet.diff_1	40
Coq.FSets.FSetPositive.PositiveSet.diff_2	40	0.0.0	synth with cache (only 1: intros s s' x; only 1: rewrite diff_spec; only 1: tauto).	0.273827075958	3
Coq.FSets.FSetPositive.PositiveSet.diff_3	40	64.0.3.0.0.0.1	synth with cache (only 1: induction x; only 1: rewrite diff_spec; only 1: tauto; only 1: rewrite diff_spec; only 1: intuition congruence; only 1: rewrite diff_spec; only 1: now subst).	0.723094940186	558
Coq.FSets.FSetPositive.PositiveSet.fold_1	40
Coq.FSets.FSetPositive.PositiveSet.cardinal_1	40
Coq.FSets.FSetPositive.PositiveSet.xfilter_spec	40
Coq.FSets.FSetPositive.PositiveSet.filter_1	40
Coq.FSets.FSetPositive.PositiveSet.filter_2	40
Coq.FSets.FSetPositive.PositiveSet.filter_3	40	1.0.448.0.69	synth with cache (only 1: intros a; only 1: unfold filter; only 1: intros x x' Hx; only 1: rewrite xfilter_spec; only 1: intuition congruence).	4.71000790596	9347
Coq.FSets.FSetPositive.PositiveSet.xforall_spec	40
Coq.FSets.FSetPositive.PositiveSet.for_all_1	40
Coq.FSets.FSetPositive.PositiveSet.for_all_2	40	3.0.259.0.0	synth with cache (only 1: intros s f _; only 1: unfold for_all; only 1: red; only 1: rewrite xforall_spec; only 1: auto).	3.23522901535	4690
Coq.FSets.FSetPositive.PositiveSet.xexists_spec	40
Coq.FSets.FSetPositive.PositiveSet.exists_1	40
Coq.FSets.FSetPositive.PositiveSet.exists_2	40
Coq.FSets.FSetPositive.PositiveSet.partition_filter	40
Coq.FSets.FSetPositive.PositiveSet.partition_1	40
Coq.FSets.FSetPositive.PositiveSet.partition_2	40	0.0.3	synth with cache (only 1: intros n m Hn; only 1: rewrite partition_filter; only 1: apply eq_refl).	1.13260602951	1618
Coq.FSets.FSetPositive.PositiveSet.xelements_spec	40
Coq.FSets.FSetPositive.PositiveSet.elements_1	40
Coq.FSets.FSetPositive.PositiveSet.elements_2	40
Coq.FSets.FSetPositive.PositiveSet.lt_rev_append	40
Coq.FSets.FSetPositive.PositiveSet.elements_3	40
Coq.FSets.FSetPositive.PositiveSet.elements_3w	40
Coq.FSets.FSetPositive.PositiveSet.choose_1	40
Coq.FSets.FSetPositive.PositiveSet.choose_2	40
Coq.FSets.FSetPositive.PositiveSet.choose_empty	40
Coq.FSets.FSetPositive.PositiveSet.choose_3'	40
Coq.FSets.FSetPositive.PositiveSet.choose_3	40
Coq.FSets.FSetPositive.PositiveSet.min_elt_1	40
Coq.FSets.FSetPositive.PositiveSet.min_elt_3	40
Coq.FSets.FSetPositive.PositiveSet.min_elt_2	40
Coq.FSets.FSetPositive.PositiveSet.max_elt_1	40
Coq.FSets.FSetPositive.PositiveSet.max_elt_3	40
Coq.FSets.FSetPositive.PositiveSet.max_elt_2	40
Coq.FSets.FMapPositive.append_assoc_0	40
Coq.FSets.FMapPositive.append_assoc_1	40
Coq.FSets.FMapPositive.append_neutral_r	40
Coq.FSets.FMapPositive.append_neutral_l	40	0.0.0.0.0.0.0	synth with cache (only 1: induction i; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: simpl; only 1: now f_equal).	0.0517048835754	7
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.gempty	40	3	synth with cache (only 1: now intros []).	0.0222790241241	4
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.gss	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.gleaf	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.gso	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.rleaf	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.grs	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.gro	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_correct	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.elements_correct	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xfind_left	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_ii	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_io	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_oo	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: intros; only 1: destruct o; only 1: simpl; only 1: simpl in H; only 1: destruct (in_app_or _ _ _ H); only 1: apply in_or_app; only 1: left; only 1: apply IHm1; only 1: auto; only 1: apply in_or_app; only 1: right; only 1: destruct (in_inv H0); only 1: injection H1 as [=-> ->]; only 1: apply in_eq; only 1: apply in_cons; only 1: apply IHm2; only 1: auto; only 1: simpl; only 1: simpl in H; only 1: destruct (in_app_or _ _ _ H); only 1: apply in_or_app; only 1: left; only 1: apply IHm1; only 1: auto; only 1: apply in_or_app; only 1: right; only 1: apply IHm2; only 1: auto).	2.0951628685	1162
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_oi	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: intros; only 1: destruct o; only 1: simpl; only 1: intro H; only 1: destruct (in_app_or _ _ _ H); only 1: apply (IHm1 _ _ _ H0); only 1: destruct (in_inv H0); only 1: congruence; only 1: apply (IHm2 _ _ _ H1); only 1: simpl; only 1: intro H; only 1: destruct (in_app_or _ _ _ H); only 1: apply (IHm1 _ _ _ H0); only 1: apply (IHm2 _ _ _ H0)).	4.78059792519	2616
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_ih	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_oh	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_hi	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_ho	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction m; only 1: intros; only 1: simpl; only 1: auto; only 1: intros; only 1: destruct o; only 1: simpl; only 1: intro H; only 1: destruct (in_app_or _ _ _ H); only 1: generalize H0; only 1: apply IHm1; only 1: destruct (in_inv H0); only 1: congruence; only 1: generalize H1; only 1: apply IHm2; only 1: simpl; only 1: intro H; only 1: destruct (in_app_or _ _ _ H); only 1: generalize H0; only 1: apply IHm1; only 1: generalize H0; only 1: apply IHm2).	2.9814209938	1680
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.find_xfind_h	40	320.1.0.1.0.0	synth with cache (only 1: induction i; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: intuition auto; N.Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.452926874161	148
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_complete	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.elements_complete	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.cardinal_1	40
Coq.FSets.FMapPositive.PositiveMap.A.mem_find	40
Coq.FSets.FMapPositive.PositiveMap.A.Empty_alt	40
Coq.FSets.FMapPositive.PositiveMap.A.Empty_Node	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.mem_1	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.mem_2	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.MapsTo_1	40	387.0.12	synth with cache (only 1: intro EQ; only 1: intros; only 1: congruence).	1.04765200615	1988
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.find_1	40	66	synth with cache (only 1: intuition).	0.0212440490723	7
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.find_2	40	0.0	synth with cache (only 1: unfold MapsTo; only 1: auto).	0.0225880146027	2
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.empty_1	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.is_empty_1	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.is_empty_2	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.add_1	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.add_2	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.add_3	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.remove_1	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.remove_2	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.remove_3	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.elements_1	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.elements_2	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.xelements_bits_lt_1	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.xelements_bits_lt_2	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (xelements_complete _ _ _ _ H); only 1: clear H; only 1: intros; only 1: revert p0 H; only 1: induction p; only 1: destruct p0; only 1: simpl; only 1: intros; only 1: eauto; only 1: simpl; only 1: intros; only 1: discriminate; only 1: simpl; only 1: intros; only 1: discriminate; only 1: destruct p0; only 1: simpl; only 1: intros; only 1: eauto; only 1: simpl; only 1: intros; only 1: eauto; only 1: simpl; only 1: intros; only 1: eauto; only 1: destruct p0; only 1: simpl; only 1: intros; only 1: eauto; only 1: simpl; only 1: intros; only 1: discriminate; only 1: simpl; only 1: intros; only 1: discriminate).	8.71288704872	7745
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.xelements_sort	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.elements_3	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.elements_3w	40
Coq.FSets.FMapPositive.PositiveMap.xgmapi	40
Coq.FSets.FMapPositive.PositiveMap.gmapi	40
Coq.FSets.FMapPositive.PositiveMap.mapi_1	40
Coq.FSets.FMapPositive.PositiveMap.mapi_2	40
Coq.FSets.FMapPositive.PositiveMap.map_1	40
Coq.FSets.FMapPositive.PositiveMap.map_2	40
Coq.FSets.FMapPositive.PositiveMap.map2.xgmap2_l	40
Coq.FSets.FMapPositive.PositiveMap.map2.xgmap2_r	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction i; only 1: intros; only 1: destruct m; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: intros; only 1: destruct m; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: intros; only 1: destruct m; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.711040973663	594
Coq.FSets.FMapPositive.PositiveMap.map2.gmap2	40
Coq.FSets.FMapPositive.PositiveMap.map2_1	40
Coq.FSets.FMapPositive.PositiveMap.map2_2	40
Coq.FSets.FMapPositive.PositiveMap.Fold.xfoldi_1	40
Coq.FSets.FMapPositive.PositiveMap.fold_1	40
Coq.FSets.FMapPositive.PositiveMap.equal_1	40
Coq.FSets.FMapPositive.PositiveMap.equal_2	40
Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.gsspec	40
Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.gsident	40
Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.xmap2_lr	40	0.0.512.387.448.1.323	synth with cache (only 1: intros LE; only 1: intros a b c0; only 1: intros n H; only 1: induction n; only 1: auto with arith; only 1: simpl; only 1: congruence).	16.6806800365	17673
Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.map2_commut	40
Coq.FSets.FMapFacts.WFacts_fun.eq_bool_alt	40	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0623180866241	5
Coq.FSets.FMapFacts.WFacts_fun.eq_option_alt	40
Coq.FSets.FMapFacts.WFacts_fun.MapsTo_fun	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.In_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.MapsTo_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.mem_in_iff	40	11.0	synth with cache (only 1: intros; only 1: intuition).	2.57263803482	5959
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.not_mem_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.In_dec	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.find_mapsto_iff	40	129.69	synth with cache (only 1: intros L R n; only 1: intuition).	2.00368714333	2297
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.not_find_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.in_find_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.equal_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.empty_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.empty_in_iff	40	0.1.65	synth with cache (only 1: repeat red; only 1: firstorder  (subst; auto); only 1: apply (empty_1 H)).	2.0592520237	200
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.is_empty_iff	40	0.2	synth with cache (only 1: destr_bool; only 1: intuition).	0.0407919883728	4
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.add_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.add_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.add_neq_mapsto_iff	40	0.0.0.384.0.0.0.256.0.129.64	synth with cache (only 1: intros E; only 1: intros x; only 1: split; only 1: firstorder using StronglySorted_inv; only 1: apply add_3 with x e; only 1: auto; only 1: auto; only 1: intros n; only 1: apply add_2; only 1: auto; only 1: auto).	1.31847691536	1204
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.add_neq_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.remove_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.remove_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.remove_neq_mapsto_iff	40	0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intros; only 1: apply remove_3 with x; only 1: auto; only 1: intros; only 1: apply remove_2; only 1: auto; only 1: auto).	0.0627439022064	8
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.remove_neq_in_iff	40	386.1.0.0.1.0.64.0.0.514	synth with cache (only 1: intros m; only 1: unfold In; only 1: intros; only 1: split; only 1: intros (e0, H0); only 1: exists e0; only 1: apply remove_3 with x; only 1: auto; only 1: intros (e0, H0); only 1: eauto with *).	3.82222008705	7050
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.elements_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.elements_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.map_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.map_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.mapi_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.mapi_inv	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.mapi_1bis	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.mapi_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.mem_find_b	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.mem_b	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.find_o	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.empty_o	40	1.0.321.1.4.4.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite eq_option_alt; only 1: intros; only 1: rewrite <- find_mapsto_iff; only 1: split; only 1: intros; only 1: rewrite empty_mapsto_iff in H; only 1: now auto; only 1: intuition; only 1: discriminate).	11.0207471848	21371
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.empty_a	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_eq_o	40	0.0.320	synth with cache (only 1: intros n m p Hm; only 1: intros; only 1: auto with map).	0.0981781482697	32
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_neq_o	40	448.0.0.64.2.131.3.1	synth with cache (only 1: intros; only 1: rewrite eq_option_alt; only 1: symmetry; only 1: rewrite <- find_mapsto_iff; only 1: firstorder; only 1: apply add_3 with x e; only 1: auto; only 1: auto with *).	17.2498099804	24050
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_o	40	0.0.0.0.0.8.1.0	synth with cache (only 1: intros; only 1: destruct (eq_dec x y); only 1: intuition; only 1: rewrite eq_option_alt; only 1: intro e'; only 1: rewrite <- 2!find_mapsto_iff; only 1: apply add_neq_mapsto_iff; only 1: auto).	23.9489779472	23629
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_eq_b	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_neq_b	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_b	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_eq_o	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_neq_o	40	0.1.0.1.0	synth with cache (only 1: intros; only 1: rewrite eq_option_alt; only 1: intro e'; only 1: rewrite <- find_mapsto_iff, remove_mapsto_iff; only 1: now intuition).	0.253753900528	138
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_o	40	1.0.0.1.0.0.0	synth with cache (only 1: intros; only 1: destruct (eq_dec x y); only 1: rewrite eq_option_alt; only 1: intro e'; only 1: rewrite <- find_mapsto_iff, remove_mapsto_iff; only 1: now intuition; only 1: auto with map).	0.413230895996	167
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_eq_b	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_neq_b	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_b	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.map_o	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.map_b	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.mapi_b	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.mapi_o	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.map2_1bis	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.elements_o	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.elements_b	40
Coq.FSets.FMapFacts.WFacts_fun.Equalities.Equal_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.Equalities.Equal_Equiv	40
Coq.FSets.FMapFacts.WFacts_fun.Equalities.Cmp.Equiv_Equivb	40
Coq.FSets.FMapFacts.WFacts_fun.Equalities.Equal_Equivb	40
Coq.FSets.FMapFacts.WFacts_fun.Equalities.Equal_Equivb_eqdec	40
Coq.FSets.FMapFacts.WFacts_fun.Equal_refl	40	2	synth with cache (only 1: repeat split).	0.0313849449158	30
Coq.FSets.FMapFacts.WFacts_fun.Equal_sym	40	2.0	synth with cache (only 1: intros; only 1: now intuition).	0.234830856323	4
Coq.FSets.FMapFacts.WFacts_fun.Equal_trans	40	448.66.65.512.512	synth with cache (only 1: intros a; only 1: intros Hn Hm; only 1: intros n m LE; only 1: intro H1; only 1: congruence).	2.27110600471	3230
Coq.FSets.FMapFacts.WFacts_fun.Equal_ST	40	3	synth with cache (only 1: auto).	0.0586528778076	62
Coq.FSets.FMapFacts.WFacts_fun.In_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.MapsTo_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.Empty_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.is_empty_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.mem_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.find_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.add_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.remove_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.map_m_Proper	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.eqk_equiv	40	321.193.576.256.1.320.1.0.7.70.3	synth with cache (only 1: split; only 1: intro a; only 1: red; only 1: dintuition; only 1: intros (e, H); only 1: compute; only 1: now intuition; only 1: intros (Ha, H); only 1: vm_compute; only 1: intros LE EQ; only 1: eauto).	5.22141003609	7253
Coq.FSets.FMapFacts.WProperties_fun.Elt.eqke_equiv	40	64.197.385.0.322.4.3.1.0.2.1.0.529	synth with cache (only 1: vm_compute; only 1: split; only 1: intro z; only 1: intuition; only 1: intro z; only 1: intros; only 1: split; only 1: intuition; only 1: now BinInt.Z.nzsimpl; only 1: intro z; only 1: intros (m', Hm) (n', Hn); only 1: simpl_relation; only 1: eauto).	30.720733881	35569
Coq.FSets.FMapFacts.WProperties_fun.Elt.InA_eqke_eqk	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.NoDupA_eqk_eqke	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.findA_rev	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.elements_Empty	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.elements_empty	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.of_list_1	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.of_list_1b	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.of_list_2	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.of_list_3	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_spec_right	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_rec	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_rec_bis	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_rec_nodep	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_rec_weak	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_rel	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.map_induction	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.map_induction_bis	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_identity	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_init	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_Empty	40	192.321.256.0.513.0.1.457	synth with cache (only 1: intros Ha Hb H; only 1: apply fold_rec; only 1: intros; only 1: now BinInt.Z.nzsimpl'; only 1: intros; only 1: contradict H2; only 1: intros Hab; only 1: firstorder  (subst; auto)).	11.3695418835	11483
Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_commutes	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_Equal	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_Equal2	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_Add	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_add	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_fold	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_Empty	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Equal_cardinal	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_1	40	1.195.0.324.0.582	synth with cache (only 1: intros m'; only 1: rewrite cardinal_1, elements_Empty; only 1: generalize LT; only 1: intros; only 1: rewrite H  at 1; only 1: constructor).	7.8500430584	12095
Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_2	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_inv_1	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_inv_2	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_inv_2b	40	320.0.0.0.0.0.67.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite M.cardinal_1 in *; only 1: generalize (elements_mapsto_iff m); only 1: destruct (elements m); only 1: easy; only 1: exists p; only 1: rewrite H0; only 1: destruct p; only 1: simpl; only 1: constructor; only 1: auto with relations).	1.43114590645	2375
Coq.FSets.FMapFacts.WProperties_fun.Elt.Specs.filter_iff	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Specs.for_all_iff	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Specs.exists_iff	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Disjoint_alt	40	66.1.129	synth with cache (only 1: intros y Ryx; only 1: compute; only 1: firstorder  discriminate).	0.922968149185	1584
Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition.partition_iff_1	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition.partition_iff_2	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition.partition_Partition	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_In	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Disjoint_sym	40	325.1	synth with cache (only 1: intros m m' Hm; only 1: firstorder  (subst; auto)).	0.968821048737	1210
Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_sym	40	0.2	synth with cache (only 1: compute; only 1: firstorder).	0.435519218445	24
Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_Empty	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_Add	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_fold	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_cardinal	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_partition	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.update_mapsto_iff	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.update_dec	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.update_in_iff	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.diff_mapsto_iff	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.diff_in_iff	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.restrict_mapsto_iff	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.restrict_in_iff	40
Coq.FSets.FMapFacts.WProperties_fun.cardinal_m_Proper	40	0.0.0.0.0.0.1.0.0.0.64.128	synth with cache (only 1: intro; only 1: intro H; only 1: do 2 rewrite cardinal_fold; only 1: intros Hiff; only 1: apply fold_Equal with (eqA := eq); only 1: auto; only 1: compute; only 1: auto; only 1: compute; only 1: auto; only 1: compute; only 1: auto).	5.04882383347	1782
Coq.FSets.FMapFacts.WProperties_fun.Disjoint_m_Proper	40
Coq.FSets.FMapFacts.WProperties_fun.Partition_m_Proper	40
Coq.FSets.FMapFacts.WProperties_fun.update_m_Proper	40
Coq.FSets.FMapFacts.WProperties_fun.restrict_m_Proper	40
Coq.FSets.FMapFacts.WProperties_fun.diff_m_Proper	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.sort_equivlistA_eqlistA	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.gtb_1	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.leb_1	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.gtb_compat	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.leb_compat	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.elements_split	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.elements_Add	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.elements_Add_Above	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.elements_Add_Below	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.elements_Equal_eqlistA	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.max_elt_Above	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.max_elt_MapsTo	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.max_elt_Empty	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.min_elt_Below	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.min_elt_MapsTo	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.min_elt_Empty	40	322.1.0.128.385.0.1.448.0.1.0.2.2	synth with cache (only 1: red; only 1: intros; only 1: red; only 1: unfold min_elt in *; only 1: rewrite elements_mapsto_iff; only 1: intros Hm; only 1: generalize (elements_3 m); only 1: destruct (elements m); only 1: assert (le0 : forall n, 0 <= n) by (induction n; auto); only 1: now rewrite ?Ring_polynom.local_mkpow_ok; only 1: destruct p; only 1: intros H4; only 1: now f_equal).	38.1527628899	46941
Coq.FSets.FMapFacts.OrdProperties.Elt.Induction_Principles.map_induction_max	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Induction_Principles.map_induction_min	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Fold_properties.fold_Equal	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Fold_properties.fold_Add_Above	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Fold_properties.fold_Add_Below	40
Coq.FSets.FMapWeakList.Raw.Elt.empty_1	40	320.1.128	synth with cache (only 1: intros Hb; only 1: intro H; only 1: now rewrite <- ?PeanoNat.Nat.add_le_mono_r).	0.0703909397125	40
Coq.FSets.FMapWeakList.Raw.Elt.empty_NoDup	40	2.0.11	synth with cache (only 1: unfold PX.eqk, PX.eqke; only 1: compute; only 1: auto).	0.24164390564	1053
Coq.FSets.FMapWeakList.Raw.Elt.is_empty_1	40
Coq.FSets.FMapWeakList.Raw.Elt.is_empty_2	40	386.384.3	synth with cache (only 1: intros; only 1: intro x; only 1: now destruct 1).	3.44715189934	6417
Coq.FSets.FMapWeakList.Raw.Elt.mem_1	40
Coq.FSets.FMapWeakList.Raw.Elt.mem_2	40
Coq.FSets.FMapWeakList.Raw.Elt.find_2	40
Coq.FSets.FMapWeakList.Raw.Elt.find_1	40
Coq.FSets.FMapWeakList.Raw.Elt.find_eq	40
Coq.FSets.FMapWeakList.Raw.Elt.add_1	40
Coq.FSets.FMapWeakList.Raw.Elt.add_2	40
Coq.FSets.FMapWeakList.Raw.Elt.add_3	40
Coq.FSets.FMapWeakList.Raw.Elt.add_3'	40
Coq.FSets.FMapWeakList.Raw.Elt.add_NoDup	40
Coq.FSets.FMapWeakList.Raw.Elt.add_eq	40
Coq.FSets.FMapWeakList.Raw.Elt.add_not_eq	40
Coq.FSets.FMapWeakList.Raw.Elt.remove_1	40
Coq.FSets.FMapWeakList.Raw.Elt.remove_2	40
Coq.FSets.FMapWeakList.Raw.Elt.remove_3	40
Coq.FSets.FMapWeakList.Raw.Elt.remove_3'	40	0.0.0.0.0.0.0.0	synth with cache (only 1: intros m Hm x y e; only 1: generalize Hm; only 1: functional induction (remove x m); only 1: auto; only 1: auto; only 1: do 2 inversion_clear 1; only 1: auto; only 1: auto).	0.112516880035	8
Coq.FSets.FMapWeakList.Raw.Elt.remove_NoDup	40
Coq.FSets.FMapWeakList.Raw.Elt.elements_1	40	3	synth with cache (only 1: auto).	0.013799905777	4
Coq.FSets.FMapWeakList.Raw.Elt.elements_2	40	1	synth with cache (only 1: auto).	0.0236139297485	29
Coq.FSets.FMapWeakList.Raw.Elt.elements_3w	40	3	synth with cache (only 1: auto).	0.0301399230957	17
Coq.FSets.FMapWeakList.Raw.Elt.fold_1	40	769.0.65.7	synth with cache (only 1: induction m; only 1: trivial; only 1: simpl in *; only 1: CRelationClasses.simpl_crelation).	2.85284304619	5107
Coq.FSets.FMapWeakList.Raw.Elt.submap_1	40
Coq.FSets.FMapWeakList.Raw.Elt.submap_2	40
Coq.FSets.FMapWeakList.Raw.Elt.equal_1	40
Coq.FSets.FMapWeakList.Raw.Elt.equal_2	40
Coq.FSets.FMapWeakList.Raw.Elt2.map_1	40
Coq.FSets.FMapWeakList.Raw.Elt2.map_2	40
Coq.FSets.FMapWeakList.Raw.Elt2.map_NoDup	40
Coq.FSets.FMapWeakList.Raw.Elt2.mapi_1	40
Coq.FSets.FMapWeakList.Raw.Elt2.mapi_2	40
Coq.FSets.FMapWeakList.Raw.Elt2.mapi_NoDup	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: destruct a as (x', e'); only 1: inversion_clear Hm; only 1: constructor; only 1: contradict H; only 1: clear IHm H0; only 1: induction m; only 1: simpl in *; only 1: inversion H; only 1: simpl in *; only 1: destruct a; only 1: inversion H; only 1: auto; only 1: auto; only 1: auto).	2.28985500336	2035
Coq.FSets.FMapWeakList.Raw.Elt3.fold_right_pair_NoDup	40
Coq.FSets.FMapWeakList.Raw.Elt3.combine_NoDup	40
Coq.FSets.FMapWeakList.Raw.Elt3.combine_l_1	40
Coq.FSets.FMapWeakList.Raw.Elt3.combine_r_1	40
Coq.FSets.FMapWeakList.Raw.Elt3.combine_1	40
Coq.FSets.FMapWeakList.Raw.Elt3.map2_NoDup	40
Coq.FSets.FMapWeakList.Raw.Elt3.map2_0	40
Coq.FSets.FMapWeakList.Raw.Elt3.map2_1	40
Coq.FSets.FMapWeakList.Raw.Elt3.map2_2	40
Coq.FSets.FMapWeakList.Make.Elt.MapsTo_1	40
Coq.FSets.FMapWeakList.Make.Elt.mem_1	40
Coq.FSets.FMapWeakList.Make.Elt.mem_2	40
Coq.FSets.FMapWeakList.Make.Elt.empty_1	40	133	synth with cache (only 1: easy).	0.0874788761139	219
Coq.FSets.FMapWeakList.Make.Elt.is_empty_1	40
Coq.FSets.FMapWeakList.Make.Elt.is_empty_2	40	128.320.0.704.0.513.0.256.384.64.578	synth with cache (only 1: intros (m, H); only 1: intros l'; only 1: intro n; only 1: intros a0; only 1: red; only 1: pattern n; only 1: simpl in *; only 1: destruct m; only 1: inversion 1; only 1: intro LE; only 1: now f_equal).	4.18595504761	9025
Coq.FSets.FMapWeakList.Make.Elt.add_1	40
Coq.FSets.FMapWeakList.Make.Elt.add_2	40
Coq.FSets.FMapWeakList.Make.Elt.add_3	40
Coq.FSets.FMapWeakList.Make.Elt.remove_1	40
Coq.FSets.FMapWeakList.Make.Elt.remove_2	40
Coq.FSets.FMapWeakList.Make.Elt.remove_3	40
Coq.FSets.FMapWeakList.Make.Elt.find_1	40
Coq.FSets.FMapWeakList.Make.Elt.find_2	40
Coq.FSets.FMapWeakList.Make.Elt.elements_1	40	66.64.0	synth with cache (only 1: intros m; only 1: intro; only 1: trivial).	0.0241160392761	11
Coq.FSets.FMapWeakList.Make.Elt.elements_2	40	0.0	synth with cache (only 1: intros m; only 1: exact (Raw.elements_1 (m:=m))).	0.0177979469299	2
Coq.FSets.FMapWeakList.Make.Elt.elements_3w	40	258.455.0.137	synth with cache (only 1: compute; only 1: intros; only 1: destruct m; only 1: now simpl).	2.11413598061	9200
Coq.FSets.FMapWeakList.Make.Elt.cardinal_1	40	322.0	synth with cache (only 1: intros m; only 1: now split).	0.0214569568634	19
Coq.FSets.FMapWeakList.Make.Elt.fold_1	40
Coq.FSets.FMapWeakList.Make.Elt.equal_1	40
Coq.FSets.FMapWeakList.Make.Elt.equal_2	40
Coq.FSets.FMapWeakList.Make.map_1	40
Coq.FSets.FMapWeakList.Make.map_2	40
Coq.FSets.FMapWeakList.Make.mapi_1	40
Coq.FSets.FMapWeakList.Make.mapi_2	40
Coq.FSets.FMapWeakList.Make.map2_1	40
Coq.FSets.FMapWeakList.Make.map2_2	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.In_In	40	1.0	synth with cache (only 1: red; only 1: auto).	0.023041009903	3
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Subset_Included	40	0	synth with cache (only 1: Dec.fsetdec).	0.0339529514313	1
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Equal_Same_set	40	834.320.3.320.1.194	synth with cache (only 1: intro LE; only 1: intros; only 1: repeat red; only 1: intuition; only 1: firstorder; only 1: firstorder).	5.49884104729	6175
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.empty_Empty_Set	40	128.128.0.515.132.386.129.0.0.705	synth with cache (only 1: split; only 1: red; only 1: unfold In; only 1: intros Hab; only 1: vm_compute; only 1: intros Hb; only 1: Dec.fsetdec; only 1: red; only 1: red; only 1: now subst).	2.80033898354	7759
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Empty_Empty_set	40	129.0.262	synth with cache (only 1: intros q; only 1: intros; only 1: firstorder).	1.69587993622	2128
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.singleton_Singleton	40	8.6.0.132	synth with cache (only 1: intros n; only 1: unfold Same_set, Included, mkEns, In; only 1: intuition; only 1: Dec.fsetdec).	8.51081180573	11065
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.union_Union	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.inter_Intersection	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.add_Add	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Add_Add	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.remove_Subtract	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.mkEns_Finite	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.mkEns_cardinal	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Ens_to_FSet	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.mem_eq	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (mem_iff s x), (mem_iff s y), (In_eq_iff s H); only 1: destruct (mem x s); only 1: destruct (mem y s); only 1: intuition; only 1: intuition; only 1: destruct (mem y s); only 1: intuition; only 1: intuition).	1.03917908669	411
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_mem_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_mem_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_mem_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_mem_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.empty_mem	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.is_empty_equal_empty	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.choose_mem_1	40	70	synth with cache (only 1: intuition).	1.66541290283	754
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.choose_mem_2	40	0	synth with cache (only 1: auto with set).	0.0234889984131	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.add_mem_1	40	8	synth with cache (only 1: auto with set).	0.150763034821	405
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.add_mem_2	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_neq_iff s H); only 1: destruct (mem y s); only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition).	0.760636091232	215
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_mem_1	40	197.1	synth with cache (only 1: rewrite <- not_mem_iff; only 1: auto with *).	0.555603981018	449
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_mem_2	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (mem_iff (remove x s) y), (mem_iff s y), (remove_neq_iff s H); only 1: destruct (mem y s); only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition).	4.46897602081	1027
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.singleton_equal_add	40	0	synth with cache (only 1: auto with set).	0.0210778713226	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_mem	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: generalize (mem_iff (union s s') x), (mem_iff s x), (mem_iff s' x), (union_iff s s' x); only 1: destruct (mem x s); only 1: destruct (mem x s'); only 1: destruct (mem x (union s s')); only 1: intuition; only 1: intuition; only 1: destruct (mem x (union s s')); only 1: intuition; only 1: intuition; only 1: destruct (mem x s'); only 1: destruct (mem x (union s s')); only 1: intuition; only 1: intuition; only 1: destruct (mem x (union s s')); only 1: intuition; only 1: intuition).	6.92568302155	2075
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_mem	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: generalize (mem_iff (inter s s') x), (mem_iff s x), (mem_iff s' x), (inter_iff s s' x); only 1: destruct (mem x s); only 1: destruct (mem x s'); only 1: destruct (mem x (inter s s')); only 1: intuition; only 1: intuition; only 1: destruct (mem x (inter s s')); only 1: intuition; only 1: intuition; only 1: destruct (mem x s'); only 1: destruct (mem x (inter s s')); only 1: intuition; only 1: intuition; only 1: destruct (mem x (inter s s')); only 1: intuition; only 1: intuition).	1.01643109322	354
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.diff_mem	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: generalize (mem_iff (diff s s') x), (mem_iff s x), (mem_iff s' x), (diff_iff s s' x); only 1: destruct (mem x s); only 1: destruct (mem x s'); only 1: destruct (mem x (diff s s')); only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: destruct (mem x (diff s s')); only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: destruct (mem x s'); only 1: destruct (mem x (diff s s')); only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: destruct (mem x (diff s s')); only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).	3.11075687408	1442
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.mem_3	40	0.0.256	synth with cache (only 1: intros def_n0; only 1: rewrite <- not_mem_iff; only 1: auto with fset).	0.109377861023	66
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.mem_4	40	449.4.2.1	synth with cache (only 1: rewrite mem_iff; only 1: intros; only 1: rewrite H; only 1: auto with sets).	1.86088395119	3285
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_refl	40	0	synth with cache (only 1: auto with set).	0.0202720165253	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_sym	40	449.0.1.0.1.0.1.0.0.3	synth with cache (only 1: apply eq_true_iff_eq; only 1: split; only 1: intros; only 1: apply equal_1; only 1: rewrite (equal_2 H); only 1: auto with set; only 1: intros; only 1: apply equal_1; only 1: rewrite (equal_2 H); only 1: auto with set fset).	3.16654801369	1059
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_trans	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_equal	40	0.0.0	synth with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto).	0.0366139411926	3
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_cardinal	40	0.0.1	synth with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto).	0.0361831188202	4
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_refl	40	0.1.0.0	synth with cache (only 1: apply subset_1; only 1: unfold Subset; only 1: intros; only 1: auto).	0.0352549552917	5
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_antisym	40	577.0	synth with cache (only 1: intros; only 1: firstorder).	0.063273191452	30
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_trans	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_equal	40	3.0	synth with cache (only 1: intros; only 1: auto with set).	0.284920930862	158
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.choose_mem_3	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.choose_mem_4	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.add_mem_3	40	3	synth with cache (only 1: auto with set).	0.0455961227417	14
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.add_equal	40	0	synth with cache (only 1: auto with set).	0.0227530002594	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_mem_3	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_equal	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.add_remove	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_add	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.is_empty_cardinal	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.singleton_mem_1	40	2.0	synth with cache (only 1: generalize (mem_iff (singleton x) y), (singleton_iff x y); only 1: intuition).	0.0602509975433	7
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.singleton_mem_2	40	0.0.0.0.2	synth with cache (only 1: intros; only 1: generalize (mem_iff (singleton x) y), (singleton_iff x y); only 1: destruct (mem y (singleton x)); only 1: intuition; only 1: intuition).	0.332185029984	127
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.singleton_mem_3	40	2.2.64.0.0.1	synth with cache (only 1: generalize (empty_iff y), (mem_iff empty y); only 1: destruct (mem y empty); only 1: intuition; only 1: intros H0; only 1: generalize (mem_iff (singleton x) y), (singleton_iff x y); only 1: intuition).	27.7484490871	17015
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_sym	40	1	synth with cache (only 1: auto with set).	0.0225369930267	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_subset_equal	40	0	synth with cache (only 1: auto with set).	0.0309011936188	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_equal_1	40	0	synth with cache (only 1: auto with set).	0.0252020359039	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_equal_2	40	0	synth with cache (only 1: auto with set).	0.0242490768433	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_assoc	40	0	synth with cache (only 1: auto with set).	0.0234751701355	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.add_union_singleton	40	1	synth with cache (only 1: auto with set).	0.0224289894104	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_add	40	0	synth with cache (only 1: auto with set).	0.0245449542999	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_subset_1	40	1	synth with cache (only 1: auto with set).	0.0232470035553	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_subset_2	40	0	synth with cache (only 1: auto with set).	0.0208330154419	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_subset_3	40	0.0	synth with cache (only 1: do 3 rewrite <- subset_iff; only 1: Dec.fsetdec).	0.102905035019	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_sym	40	0	synth with cache (only 1: auto with set).	0.0221309661865	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_subset_equal	40	0	synth with cache (only 1: auto with set).	0.0251040458679	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_equal_1	40	0	synth with cache (only 1: auto with set).	0.0240468978882	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_equal_2	40	0	synth with cache (only 1: auto with set).	0.0236780643463	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_assoc	40	0	synth with cache (only 1: auto with set).	0.0213179588318	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_inter_1	40	0	synth with cache (only 1: auto with set).	0.0213630199432	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_inter_2	40	0	synth with cache (only 1: auto with set).	0.0208058357239	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_add_1	40	4.0.0	synth with cache (only 1: intros; only 1: apply equal_1; only 1: auto with set).	0.740182876587	348
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_add_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_subset_1	40	0	synth with cache (only 1: auto with set).	0.0223338603973	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_subset_2	40	0	synth with cache (only 1: auto with set).	0.022164106369	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_subset_3	40	1.0.0	synth with cache (only 1: intros; only 1: apply subset_1; only 1: auto with set).	0.0555260181427	4
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.diff_subset	40	0	synth with cache (only 1: auto with set).	0.0217380523682	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.diff_subset_equal	40	0	synth with cache (only 1: auto with set).	0.0273940563202	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_inter_singleton	40	0	synth with cache (only 1: auto with set).	0.0232779979706	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.diff_inter_empty	40	0	synth with cache (only 1: auto with set).	0.0219759941101	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.diff_inter_all	40	0	synth with cache (only 1: auto with set).	0.0705120563507	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.set_rec	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.exclusive_set	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.fold_empty	40	0.0	synth with cache (only 1: apply fold_1b; only 1: auto with set).	0.0297820568085	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.fold_equal	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.fold_add	40	64.0.0.0.386.128.0.0.0.0.0.3	synth with cache (only 1: apply set_induction; only 1: intros; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: intros Hz; only 1: eauto with *; only 1: auto with set; only 1: intro a; only 1: auto; only 1: firstorder).	22.1458678246	5655
Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.add_fold	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.remove_fold_1	40	0.0.0.0.0.0.1.66	synth with cache (only 1: inversion 1; only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set).	4.08095002174	2289
Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.remove_fold_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.fold_union	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_cardinal_1	40	0	synth with cache (only 1: auto with set fset).	0.0213658809662	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_cardinal_2	40	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: change S with ((fun _ => S) x); only 1: apply MP.fold_add with (eqA := Logic.eq); only 1: auto with fset; only 1: auto with fset; only 1: auto with fset; only 1: auto).	0.0698721408844	8
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_cardinal_1	40	0.0.0.2.0.0.0.0	synth with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: change S with ((fun _ => S) x); only 1: apply MP.remove_fold_1 with (eqA := Logic.eq); only 1: auto with fset; only 1: auto with fset; only 1: auto with fset; only 1: auto).	0.665395975113	541
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_cardinal_2	40	0.0.513.257.67	synth with cache (only 1: intro; only 1: intro H; only 1: compute in H; only 1: rewrite <- not_mem_iff; only 1: intuition).	1.24347305298	1890
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_cardinal	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.subset_cardinal	40	0.268	synth with cache (only 1: intro H0; only 1: auto with set fset).	1.15808010101	1904
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.Comp'	40	2	synth with cache (only 1: solve_proper).	0.0461769104004	23
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.filter_mem	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_filter	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.exists_filter	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.partition_filter_1	40	897	synth with cache (only 1: now intuition).	0.822700023651	112
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.partition_filter_2	40	0	synth with cache (only 1: auto with set).	0.0305631160736	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.filter_add_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.filter_add_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.add_filter_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.add_filter_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.union_filter	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.filter_union	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_mem_1	40	707.2.0.0.0.577.256	synth with cache (only 1: intro a; only 1: vm_compute; only 1: intros; only 1: apply for_all_1; only 1: auto; only 1: intros H0 H1; only 1: eauto with *).	5.25721788406	5235
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_mem_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_mem_3	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_mem_4	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_exists	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.Comp'	40	1.3.257	synth with cache (only 1: intros a n H; only 1: f_equal; only 1: auto).	1.07439184189	315
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.exists_mem_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.exists_mem_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.exists_mem_3	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.exists_mem_4	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Sum.sum_plus	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Sum.sum_filter	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Sum.fold_compat	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Sum.sum_compat	40
Coq.FSets.FSetBridge.DepOfNodep.empty	40
Coq.FSets.FSetBridge.DepOfNodep.is_empty	40
Coq.FSets.FSetBridge.DepOfNodep.mem	40
Coq.FSets.FSetBridge.DepOfNodep.add	40
Coq.FSets.FSetBridge.DepOfNodep.singleton	40	261.130.0.0.0.0.0.782.75	synth with cache (only 1: intuition; only 1: assert (comm : forall x y, x + y = y + x); only 1: intros n m; only 1: nzinduct n; only 1: now PeanoNat.Nat.nzsimpl; only 1: intro; only 1: PeanoNat.Nat.nzsimpl; only 1: intuition; only 1: eauto with *).	12.6422879696	61768
Coq.FSets.FSetBridge.DepOfNodep.remove	40
Coq.FSets.FSetBridge.DepOfNodep.union	40
Coq.FSets.FSetBridge.DepOfNodep.inter	40
Coq.FSets.FSetBridge.DepOfNodep.diff	40
Coq.FSets.FSetBridge.DepOfNodep.equal	40
Coq.FSets.FSetBridge.DepOfNodep.subset	40
Coq.FSets.FSetBridge.DepOfNodep.elements	40
Coq.FSets.FSetBridge.DepOfNodep.fold	40	67.577.1	synth with cache (only 1: simpl; only 1: firstorder; only 1: eauto with set).	0.72300195694	1125
Coq.FSets.FSetBridge.DepOfNodep.cardinal	40	579.321.2	synth with cache (only 1: simpl in *; only 1: intro Pdec; only 1: eauto).	0.289005994797	673
Coq.FSets.FSetBridge.DepOfNodep.compat_P_aux	40
Coq.FSets.FSetBridge.DepOfNodep.filter	40
Coq.FSets.FSetBridge.DepOfNodep.for_all	40
Coq.FSets.FSetBridge.DepOfNodep.exists_	40
Coq.FSets.FSetBridge.DepOfNodep.partition	40
Coq.FSets.FSetBridge.DepOfNodep.choose_aux	40
Coq.FSets.FSetBridge.DepOfNodep.choose	40
Coq.FSets.FSetBridge.DepOfNodep.choose_ok1	40
Coq.FSets.FSetBridge.DepOfNodep.choose_ok2	40
Coq.FSets.FSetBridge.DepOfNodep.choose_equal	40
Coq.FSets.FSetBridge.DepOfNodep.min_elt	40
Coq.FSets.FSetBridge.DepOfNodep.max_elt	40
Coq.FSets.FSetBridge.NodepOfDep.empty_1	40
Coq.FSets.FSetBridge.NodepOfDep.is_empty_1	40
Coq.FSets.FSetBridge.NodepOfDep.is_empty_2	40
Coq.FSets.FSetBridge.NodepOfDep.mem_1	40
Coq.FSets.FSetBridge.NodepOfDep.mem_2	40
Coq.FSets.FSetBridge.NodepOfDep.equal_1	40
Coq.FSets.FSetBridge.NodepOfDep.equal_2	40
Coq.FSets.FSetBridge.NodepOfDep.subset_1	40
Coq.FSets.FSetBridge.NodepOfDep.subset_2	40
Coq.FSets.FSetBridge.NodepOfDep.choose_1	40
Coq.FSets.FSetBridge.NodepOfDep.choose_2	40	0.0.4.0.0.0.0.1	synth with cache (only 1: intro s; only 1: unfold choose; only 1: case (M.choose s); only 1: simple destruct s0; only 1: intros; only 1: discriminate H; only 1: intros; only 1: auto).	1.65505099297	4224
Coq.FSets.FSetBridge.NodepOfDep.choose_3	40
Coq.FSets.FSetBridge.NodepOfDep.elements_1	40
Coq.FSets.FSetBridge.NodepOfDep.elements_2	40
Coq.FSets.FSetBridge.NodepOfDep.elements_3	40
Coq.FSets.FSetBridge.NodepOfDep.elements_3w	40	194.0.0.2.0.0	synth with cache (only 1: intros; only 1: unfold elements; only 1: case M.empty; only 1: firstorder; only 1: case (M.elements s); only 1: simpl_relation).	1.17297291756	1735
Coq.FSets.FSetBridge.NodepOfDep.min_elt_1	40
Coq.FSets.FSetBridge.NodepOfDep.min_elt_2	40
Coq.FSets.FSetBridge.NodepOfDep.min_elt_3	40	0.0.0.0.0.0.1.0	synth with cache (only 1: intro s; only 1: unfold min_elt; only 1: case (M.min_elt s); only 1: simple destruct s0; only 1: intros; only 1: intuition; only 1: discriminate H; only 1: auto).	0.358440160751	208
Coq.FSets.FSetBridge.NodepOfDep.max_elt_1	40
Coq.FSets.FSetBridge.NodepOfDep.max_elt_2	40	0.0.0.0.0.0.0.0.0.1.1.0	synth with cache (only 1: intros s x y; only 1: unfold max_elt; only 1: case (M.max_elt s); only 1: unfold For_all; only 1: simple destruct s0; only 1: intros; only 1: injection H; only 1: intros; only 1: subst; only 1: firstorder; only 1: intros; only 1: discriminate H).	33.8547289371	11059
Coq.FSets.FSetBridge.NodepOfDep.max_elt_3	40	0.0.0.0.1.2.0	synth with cache (only 1: intro s; only 1: unfold max_elt; only 1: case (M.max_elt s); only 1: simple destruct s0; only 1: intros; only 1: discriminate H; only 1: auto).	19.288877964	4123
Coq.FSets.FSetBridge.NodepOfDep.add_1	40
Coq.FSets.FSetBridge.NodepOfDep.add_2	40	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold add; only 1: case (M.add x s); only 1: unfold Add; only 1: firstorder).	0.0353498458862	5
Coq.FSets.FSetBridge.NodepOfDep.add_3	40
Coq.FSets.FSetBridge.NodepOfDep.remove_1	40
Coq.FSets.FSetBridge.NodepOfDep.remove_2	40	0.0.0.1	synth with cache (only 1: intros; only 1: unfold remove; only 1: case (M.remove x s); only 1: firstorder).	0.294998884201	118
Coq.FSets.FSetBridge.NodepOfDep.remove_3	40
Coq.FSets.FSetBridge.NodepOfDep.singleton_1	40
Coq.FSets.FSetBridge.NodepOfDep.singleton_2	40	0.1.66.0	synth with cache (only 1: unfold singleton; only 1: intros x y H; only 1: case (M.singleton x); only 1: firstorder).	0.693049907684	992
Coq.FSets.FSetBridge.NodepOfDep.union_1	40
Coq.FSets.FSetBridge.NodepOfDep.union_2	40	0.0.0.0.0.256.0	synth with cache (only 1: intros s s' x; only 1: simpl_relation; only 1: unfold union; only 1: case (M.remove x s); only 1: firstorder; only 1: case (M.union s s'); only 1: firstorder).	0.210339069366	208
Coq.FSets.FSetBridge.NodepOfDep.union_3	40	0.0.0.0	synth with cache (only 1: intros s s' x; only 1: unfold union; only 1: case (M.union s s'); only 1: firstorder).	0.0283229351044	4
Coq.FSets.FSetBridge.NodepOfDep.inter_1	40
Coq.FSets.FSetBridge.NodepOfDep.inter_2	40	0.0.0.0	synth with cache (only 1: intros s s' x; only 1: unfold inter; only 1: case (M.inter s s'); only 1: firstorder).	0.0282351970673	4
Coq.FSets.FSetBridge.NodepOfDep.inter_3	40	0.0.0.0.0.0.3	synth with cache (only 1: intros; only 1: unfold inter; only 1: case (M.remove x s); only 1: firstorder; only 1: case (M.singleton x); only 1: case (M.inter s s'); only 1: firstorder).	1.59974002838	4872
Coq.FSets.FSetBridge.NodepOfDep.diff_1	40
Coq.FSets.FSetBridge.NodepOfDep.diff_2	40	0.0.0.0	synth with cache (only 1: intros s s' x; only 1: unfold diff; only 1: case (M.diff s s'); only 1: firstorder).	0.0309128761292	4
Coq.FSets.FSetBridge.NodepOfDep.diff_3	40	0.0.0.384.0.1.0	synth with cache (only 1: intros s s' x; only 1: unfold diff; only 1: case (M.inter s s'); only 1: intros n IH; only 1: case (M.inter s s'); only 1: case (M.diff s s'); only 1: firstorder).	0.397824048996	443
Coq.FSets.FSetBridge.NodepOfDep.cardinal_1	40
Coq.FSets.FSetBridge.NodepOfDep.fold_1	40
Coq.FSets.FSetBridge.NodepOfDep.f_dec	40	0	synth with cache (only 1: decide equality).	0.0173439979553	1
Coq.FSets.FSetBridge.NodepOfDep.compat_P_aux	40	193.448.1	synth with cache (only 1: intros; only 1: intros x y z; only 1: now rewrite H).	0.188998937607	96
Coq.FSets.FSetBridge.NodepOfDep.filter_1	40
Coq.FSets.FSetBridge.NodepOfDep.filter_2	40	0.0.0.0.0.64.1	synth with cache (only 1: intros s x; only 1: intro n; only 1: unfold filter; only 1: destruct M.filter as (x0, Hiff); only 1: intuition; only 1: generalize (Hiff (compat_P_aux H)); only 1: firstorder).	0.705326080322	610
Coq.FSets.FSetBridge.NodepOfDep.filter_3	40	0.0.0.0.0.0	synth with cache (only 1: intros s x f; only 1: unfold filter; only 1: destruct M.filter as (x0, Hiff); only 1: intuition; only 1: generalize (Hiff (compat_P_aux H)); only 1: firstorder).	0.292309045792	6
Coq.FSets.FSetBridge.NodepOfDep.for_all_1	40
Coq.FSets.FSetBridge.NodepOfDep.for_all_2	40	0.0.0.0.0.0	synth with cache (only 1: intros s f; only 1: unfold for_all; only 1: case M.for_all; only 1: intuition; only 1: intuition; only 1: firstorder).	0.0496439933777	6
Coq.FSets.FSetBridge.NodepOfDep.exists_1	40
Coq.FSets.FSetBridge.NodepOfDep.exists_2	40
Coq.FSets.FSetBridge.NodepOfDep.partition_1	40
Coq.FSets.FSetBridge.NodepOfDep.partition_2	40
Coq.FSets.FSetCompat.Backport_Sets.lt_not_eq	40
Coq.FSets.FSetCompat.Backport_Sets.compare	40
Coq.FSets.FSetCompat.Update_WSets.In_compat	40	6	synth with cache (only 1: solve_proper).	3.39538121223	3714
Coq.FSets.FSetCompat.Update_WSets.Spec.mem_spec	40
Coq.FSets.FSetCompat.Update_WSets.Spec.equal_spec	40
Coq.FSets.FSetCompat.Update_WSets.Spec.subset_spec	40
Coq.FSets.FSetCompat.Update_WSets.Spec.is_empty_spec	40
Coq.FSets.FSetCompat.Update_WSets.Spec.add_spec	40
Coq.FSets.FSetCompat.Update_WSets.Spec.remove_spec	40
Coq.FSets.FSetCompat.Update_WSets.Spec.singleton_spec	40
Coq.FSets.FSetCompat.Update_WSets.Spec.elements_spec1	40
Coq.FSets.FSetCompat.Update_WSets.Spec.for_all_spec	40
Coq.FSets.FSetCompat.Update_WSets.Spec.exists_spec	40
Coq.FSets.FSetCompat.Update_Sets.lt_strorder	40
Coq.FSets.FSetCompat.Update_Sets.lt_compat	40
Coq.FSets.FSetCompat.Update_Sets.compare_spec	40
Coq.FSets.FSetProperties.WProperties_fun.In_dec	40	0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (F.mem_iff s x); only 1: case (mem x s); only 1: intuition; only 1: intuition).	0.222482919693	5
Coq.FSets.FSetProperties.WProperties_fun.Add_Equal	40
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.equal_refl	40	192.192.0.0	synth with cache (only 1: red; only 1: split; only 1: now subst; only 1: now subst).	0.0429689884186	22
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.equal_sym	40	0	synth with cache (only 1: fsetdec).	0.218375921249	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.equal_trans	40	0	synth with cache (only 1: fsetdec).	0.0666720867157	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_refl	40	0	synth with cache (only 1: fsetdec).	0.0318579673767	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_trans	40	0	synth with cache (only 1: fsetdec).	0.0509181022644	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_antisym	40	0	synth with cache (only 1: fsetdec).	0.0532360076904	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_equal	40	0	synth with cache (only 1: fsetdec).	0.0446810722351	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_empty	40	0	synth with cache (only 1: fsetdec).	0.0340809822083	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_remove_3	40	0	synth with cache (only 1: fsetdec).	0.0670690536499	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_diff	40	0	synth with cache (only 1: fsetdec).	0.0609848499298	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_add_3	40	0	synth with cache (only 1: fsetdec).	0.0828518867493	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_add_2	40	0	synth with cache (only 1: fsetdec).	0.0500960350037	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.in_subset	40	0	synth with cache (only 1: fsetdec).	0.0493369102478	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.double_inclusion	40	0.0.0.7	synth with cache (only 1: intuition; only 1: fsetdec; only 1: fsetdec; only 1: fsetdec).	1.14435195923	642
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_is_empty_1	40	0	synth with cache (only 1: fsetdec).	0.0647938251495	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_is_empty_2	40	1.384.3	synth with cache (only 1: intuition; only 1: repeat red; only 1: fsetdec).	0.173106908798	141
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.add_equal	40	0	synth with cache (only 1: fsetdec).	0.086266040802	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.add_add	40	0	synth with cache (only 1: fsetdec).	0.346659898758	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.remove_equal	40	0	synth with cache (only 1: fsetdec).	0.112045049667	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.Equal_remove	40	0	synth with cache (only 1: fsetdec).	0.15975189209	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.add_remove	40	0	synth with cache (only 1: fsetdec).	0.31268286705	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.remove_add	40	0	synth with cache (only 1: fsetdec).	0.146358013153	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.singleton_equal_add	40	0	synth with cache (only 1: fsetdec).	0.0964760780334	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.remove_singleton_empty	40	0	synth with cache (only 1: fsetdec).	0.31742811203	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_sym	40	3	synth with cache (only 1: fsetdec).	0.146821022034	17
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_equal	40	0	synth with cache (only 1: fsetdec).	0.0798950195312	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_equal_1	40	0	synth with cache (only 1: fsetdec).	0.12907910347	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_equal_2	40	0	synth with cache (only 1: fsetdec).	0.112983942032	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_assoc	40	0	synth with cache (only 1: fsetdec).	0.180974960327	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.add_union_singleton	40	3.65	synth with cache (only 1: intro n; only 1: fsetdec).	0.324325084686	149
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_add	40	0	synth with cache (only 1: fsetdec).	0.189356088638	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_remove_add_1	40	0	synth with cache (only 1: fsetdec).	0.338021993637	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_remove_add_2	40	0	synth with cache (only 1: fsetdec).	0.291892051697	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_1	40	0	synth with cache (only 1: fsetdec).	0.0400528907776	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_2	40	0	synth with cache (only 1: fsetdec).	0.0395789146423	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_3	40	0	synth with cache (only 1: fsetdec).	0.0607159137726	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_4	40	0	synth with cache (only 1: fsetdec).	0.0630049705505	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_5	40	0	synth with cache (only 1: fsetdec).	0.068834066391	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_union_1	40	0	synth with cache (only 1: fsetdec).	0.0792639255524	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_union_2	40	0	synth with cache (only 1: fsetdec).	0.0752658843994	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.not_in_union	40	1	synth with cache (only 1: fsetdec).	0.097608089447	41
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_sym	40	0	synth with cache (only 1: fsetdec).	0.0881819725037	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_subset_equal	40	0	synth with cache (only 1: fsetdec).	0.0756058692932	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_equal_1	40	0	synth with cache (only 1: fsetdec).	0.111045122147	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_equal_2	40	0	synth with cache (only 1: fsetdec).	0.103537082672	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_assoc	40	0	synth with cache (only 1: fsetdec).	0.156275987625	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_inter_1	40	0	synth with cache (only 1: fsetdec).	0.206000089645	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_inter_2	40	0	synth with cache (only 1: fsetdec).	0.221036911011	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_add_1	40	0	synth with cache (only 1: fsetdec).	0.188054084778	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_add_2	40	0.64	synth with cache (only 1: intro; only 1: fsetdec).	0.185703039169	46
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_inter_1	40	0	synth with cache (only 1: fsetdec).	0.0592250823975	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_inter_2	40	0	synth with cache (only 1: fsetdec).	0.0539031028748	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_subset_1	40	0	synth with cache (only 1: fsetdec).	0.0436918735504	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_subset_2	40	0	synth with cache (only 1: fsetdec).	0.0419290065765	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_subset_3	40	0	synth with cache (only 1: fsetdec).	0.0576460361481	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_diff_1	40	0	synth with cache (only 1: fsetdec).	0.0677609443665	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_diff_2	40	0	synth with cache (only 1: fsetdec).	0.0804269313812	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.diff_subset	40	0	synth with cache (only 1: fsetdec).	0.0527300834656	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.diff_subset_equal	40	0	synth with cache (only 1: fsetdec).	0.118029117584	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.remove_diff_singleton	40	0	synth with cache (only 1: fsetdec).	0.118474006653	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.diff_inter_empty	40	0	synth with cache (only 1: fsetdec).	0.185071229935	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.diff_inter_all	40	0	synth with cache (only 1: fsetdec).	0.151441812515	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.Add_add	40	0.0.0.0.0.1.2.321	synth with cache (only 1: constructor; only 1: intro H; only 1: fsetdec; only 1: destruct 1; only 1: apply add_1; only 1: auto; only 1: apply add_2; only 1: auto).	0.616714954376	912
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.Add_remove	40	0.512.130	synth with cache (only 1: intros n m; only 1: pattern n; only 1: fsetdec).	0.289595127106	120
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_Add	40
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_Add	40	0.0	synth with cache (only 1: expAdd; only 1: fsetdec).	0.38799405098	2
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_Equal	40	0.0	synth with cache (only 1: expAdd; only 1: fsetdec).	0.341772079468	2
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_Add_2	40	0.0	synth with cache (only 1: expAdd; only 1: fsetdec).	0.286666154861	2
Coq.FSets.FSetProperties.WProperties_fun.elements_Empty	40
Coq.FSets.FSetProperties.WProperties_fun.elements_empty	40
Coq.FSets.FSetProperties.WProperties_fun.of_list_1	40
Coq.FSets.FSetProperties.WProperties_fun.of_list_2	40
Coq.FSets.FSetProperties.WProperties_fun.of_list_3	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_spec_right	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rec	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rec_bis	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rec_nodep	40	0.0.65.0.0.0.192.67	synth with cache (only 1: intros x H2; only 1: intro EQ; only 1: intros; only 1: apply fold_rec; only 1: intros; only 1: firstorder; only 1: intros; only 1: eauto).	0.940881967545	1391
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rec_weak	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rel	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.set_induction	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.set_induction_bis	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_identity	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_0	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_1	40	512.385.0.0.1.580	synth with cache (only 1: intros Hn Hm; only 1: intros n m p H; only 1: intros; only 1: apply fold_rec; only 1: now try rewrite H; only 1: fsetdec).	11.0988578796	9220
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_2	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_1b	40	0.0.0.0.1.448.451.259	synth with cache (only 1: intro n; only 1: intro Hn; only 1: intros a Ha; only 1: intuition; only 1: rewrite M.fold_1; only 1: auto; only 1: exact eq_equivalence; only 1: eauto).	2.68944501877	6162
Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_commutes	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_init	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_equal	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_empty	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_add	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.add_fold	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.remove_fold_1	40	0.0.0.0.0.0.132.320	synth with cache (only 1: intros n m; only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set).	7.18534302711	8479
Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.remove_fold_2	40	0.0.0	synth with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set).	0.0337181091309	3
Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_union_inter	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_diff_inter	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_union	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_plus	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_fold	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_0	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_1	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_2	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_Empty	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_inv_1	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_inv_2	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_inv_2b	40
Coq.FSets.FSetProperties.WProperties_fun.Equal_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_m_Proper	40
Coq.FSets.FSetProperties.WProperties_fun.empty_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.singleton_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.diff_inter_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.union_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.subset_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.subset_cardinal_lt	40
Coq.FSets.FSetProperties.WProperties_fun.union_inter_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.union_cardinal_inter	40
Coq.FSets.FSetProperties.WProperties_fun.union_cardinal_le	40
Coq.FSets.FSetProperties.WProperties_fun.add_cardinal_1	40	512.193	synth with cache (only 1: intro l'; only 1: firstorder).	0.141214132309	63
Coq.FSets.FSetProperties.WProperties_fun.add_cardinal_2	40	1.64.0.0.0.387	synth with cache (only 1: intro a'; only 1: intros; only 1: apply cardinal_2 with x; only 1: auto with fset; only 1: intro; only 1: fsetdec).	2.12946200371	3275
Coq.FSets.FSetProperties.WProperties_fun.remove_cardinal_1	40	0.0.0.0.1.0.0.0.2.3	synth with cache (only 1: intros; only 1: symmetry; only 1: do 2 rewrite cardinal_fold; only 1: change S with ((fun _ => S) x); only 1: apply fold_2; only 1: auto with *; only 1: auto with fset; only 1: auto with fset; only 1: auto with set; only 1: auto with set).	4.17439198494	10597
Coq.FSets.FSetProperties.WProperties_fun.remove_cardinal_2	40	1	synth with cache (only 1: auto with set fset).	0.747000932693	591
Coq.FSets.FSetProperties.OrdProperties.sort_equivlistA_eqlistA	40
Coq.FSets.FSetProperties.OrdProperties.gtb_1	40
Coq.FSets.FSetProperties.OrdProperties.leb_1	40
Coq.FSets.FSetProperties.OrdProperties.gtb_compat	40
Coq.FSets.FSetProperties.OrdProperties.leb_compat	40
Coq.FSets.FSetProperties.OrdProperties.elements_split	40
Coq.FSets.FSetProperties.OrdProperties.elements_Add	40
Coq.FSets.FSetProperties.OrdProperties.elements_Add_Above	40
Coq.FSets.FSetProperties.OrdProperties.elements_Add_Below	40
Coq.FSets.FSetProperties.OrdProperties.set_induction_max	40
Coq.FSets.FSetProperties.OrdProperties.set_induction_min	40
Coq.FSets.FSetProperties.OrdProperties.fold_3	40
Coq.FSets.FSetProperties.OrdProperties.fold_4	40
Coq.FSets.FSetProperties.OrdProperties.FoldOpt.fold_equal	40
Coq.FSets.FSetProperties.OrdProperties.FoldOpt.add_fold	40	0.0.0	synth with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).	0.0353119373322	3
Coq.FSets.FSetProperties.OrdProperties.FoldOpt.remove_fold_2	40	0.0.0	synth with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).	0.0378880500793	3
Coq.FSets.FSetProperties.OrdProperties.choose_equal	40
Coq.FSets.FSetDecide.WDecide_fun.FSetLogicalFacts.test_push	40	1.0.0	synth with cache (only 1: unfold decidable; only 1: intros A R1 Sym1 B R2 Sym2 C R3 f Hf; only 1: auto).	0.0324199199677	4
Coq.FSets.FSetDecide.WDecide_fun.FSetLogicalFacts.test_pull	40	1	synth with cache (only 1: tauto).	0.760541915894	2
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideAuxiliary.eq_refl_iff	40	448.0.66.2	synth with cache (only 1: split; only 1: easy'; only 1: intros; only 1: now rewrite <- ?BinInt.Z.add_le_mono_r).	0.303951978683	166
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideAuxiliary.dec_In	40
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideAuxiliary.dec_eq	40
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_trans_1	40
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_trans_2	40
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_neq_trans_1	40	0.0.70	synth with cache (only 1: intros Heq; only 1: intros n'; only 1: fsetdec).	3.61763000488	3979
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_neq_trans_2	40	0.194.65.128	synth with cache (only 1: intros a b c0; only 1: intros H; only 1: intros R L n; only 1: fsetdec).	1.83219003677	1178
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_In_singleton	40	0.4	synth with cache (only 1: intro m; only 1: intuition).	0.0714571475983	165
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_add_In	40	3.73	synth with cache (only 1: intros m IH; only 1: fsetdec).	1.51025009155	1871
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_Subset_add_remove	40	0.514.0	synth with cache (only 1: intros a Ha; only 1: intros n m; only 1: fsetdec).	0.128987073898	149
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_disjunction	40	0	synth with cache (only 1: fsetdec).	0.0933680534363	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_not_In_disj	40	0	synth with cache (only 1: fsetdec).	0.155995130539	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_not_In_conj	40	0.66	synth with cache (only 1: intros l; only 1: fsetdec).	0.846438169479	98
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_iff_conj	40	0.193.137	synth with cache (only 1: repeat red; only 1: intro H2; only 1: fsetdec).	2.67064785957	1743
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_set_ops_1	40	131.0	synth with cache (only 1: intros a b n Ha Hb Hn; only 1: fsetdec).	1.09465003014	147
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.eq_chain_test	40	0	synth with cache (only 1: fsetdec).	0.335253000259	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_too_complex	40	0.0.64	synth with cache (only 1: intro H; only 1: unfold Subset; only 1: firstorder).	0.121308803558	16
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.function_test_1	40	0.386	synth with cache (only 1: intros n m p q; only 1: fsetdec).	0.159309148788	44
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.function_test_2	40	0.512.321	synth with cache (only 1: intros Hn; only 1: intro p; only 1: fsetdec).	0.669501066208	128
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_baydemir	40	0.0.129	synth with cache (only 1: intros y q u H; only 1: intuition; only 1: fsetdec).	0.308869838715	42
Coq.FSets.FMapList.Raw.Elt.empty_1	40	257.64.1	synth with cache (only 1: red; only 1: intros l; only 1: now f_equiv).	0.0817880630493	56
Coq.FSets.FMapList.Raw.Elt.empty_sorted	40	4	synth with cache (only 1: constructor).	0.0216300487518	45
Coq.FSets.FMapList.Raw.Elt.is_empty_1	40
Coq.FSets.FMapList.Raw.Elt.is_empty_2	40	388.0	synth with cache (only 1: intros; only 1: now destruct 1).	0.218103885651	398
Coq.FSets.FMapList.Raw.Elt.mem_1	40
Coq.FSets.FMapList.Raw.Elt.mem_2	40
Coq.FSets.FMapList.Raw.Elt.find_2	40
Coq.FSets.FMapList.Raw.Elt.find_1	40
Coq.FSets.FMapList.Raw.Elt.add_1	40
Coq.FSets.FMapList.Raw.Elt.add_2	40
Coq.FSets.FMapList.Raw.Elt.add_3	40
Coq.FSets.FMapList.Raw.Elt.add_Inf	40
Coq.FSets.FMapList.Raw.Elt.add_sorted	40
Coq.FSets.FMapList.Raw.Elt.remove_1	40
Coq.FSets.FMapList.Raw.Elt.remove_2	40
Coq.FSets.FMapList.Raw.Elt.remove_3	40
Coq.FSets.FMapList.Raw.Elt.remove_Inf	40
Coq.FSets.FMapList.Raw.Elt.remove_sorted	40
Coq.FSets.FMapList.Raw.Elt.elements_1	40	129	synth with cache (only 1: auto with arith).	0.0532219409943	15
Coq.FSets.FMapList.Raw.Elt.elements_2	40	0	synth with cache (only 1: auto).	0.0157589912415	1
Coq.FSets.FMapList.Raw.Elt.elements_3	40	65.1.0	synth with cache (only 1: induction m; only 1: intuition; only 1: tauto).	0.0348100662231	7
Coq.FSets.FMapList.Raw.Elt.elements_3w	40
Coq.FSets.FMapList.Raw.Elt.fold_1	40
Coq.FSets.FMapList.Raw.Elt.equal_1	40
Coq.FSets.FMapList.Raw.Elt.equal_2	40
Coq.FSets.FMapList.Raw.Elt.equal_cons	40
Coq.FSets.FMapList.Raw.Elt2.map_1	40
Coq.FSets.FMapList.Raw.Elt2.map_2	40
Coq.FSets.FMapList.Raw.Elt2.map_lelistA	40	3.0.0.0.0.0.0.0.0	synth with cache (only 1: induction m; only 1: simpl; only 1: intuition; only 1: intros; only 1: destruct a as (x'', e''); only 1: inversion_clear H; only 1: compute in H0; only 1: simpl; only 1: intuition).	0.634973049164	404
Coq.FSets.FMapList.Raw.Elt2.map_sorted	40	64.0.2.1.0.0.0.0.1	synth with cache (only 1: induction m; only 1: simpl; only 1: intuition; only 1: intros; only 1: destruct a as (x', e'); only 1: inversion_clear Hm; only 1: constructor; only 1: auto; only 1: eauto).	2.19232106209	3014
Coq.FSets.FMapList.Raw.Elt2.mapi_1	40
Coq.FSets.FMapList.Raw.Elt2.mapi_2	40	0.0.0.66.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros m x f; only 1: induction m; only 1: simpl; only 1: intros (e, abs); only 1: inversion abs; only 1: simpl; only 1: destruct a as (x', e); only 1: intros hyp; only 1: inversion hyp; only 1: clear hyp; only 1: inversion H; only 1: subst; only 1: rename x0 into e'; only 1: exists e; only 1: constructor; only 1: unfold eqke in *; only 1: simpl in *; only 1: intuition; only 1: subst; only 1: destruct IHm as (e'', hyp); only 1: firstorder; only 1: exists e''; only 1: constructor 2; only 1: auto).	4.15948915482	5525
Coq.FSets.FMapList.Raw.Elt2.mapi_lelistA	40	130.1.0.0.0.2.0.2.1	synth with cache (only 1: induction m; only 1: simpl; only 1: intros; only 1: auto; only 1: simpl; only 1: intros; only 1: destruct a as (x', e'); only 1: inversion_clear H; only 1: eauto with *).	2.91878819466	4269
Coq.FSets.FMapList.Raw.Elt2.mapi_sorted	40	1.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: destruct a as (x', e'); only 1: inversion_clear Hm; only 1: constructor; only 1: auto; only 1: auto).	0.695500135422	369
Coq.FSets.FMapList.Raw.Elt3.map2_alt_equiv	40
Coq.FSets.FMapList.Raw.Elt3.combine_lelistA	40
Coq.FSets.FMapList.Raw.Elt3.combine_sorted	40
Coq.FSets.FMapList.Raw.Elt3.map2_sorted	40
Coq.FSets.FMapList.Raw.Elt3.combine_1	40
Coq.FSets.FMapList.Raw.Elt3.map2_0	40
Coq.FSets.FMapList.Raw.Elt3.map2_1	40
Coq.FSets.FMapList.Raw.Elt3.map2_2	40
Coq.FSets.FMapList.Make.Elt.MapsTo_1	40
Coq.FSets.FMapList.Make.Elt.mem_1	40
Coq.FSets.FMapList.Make.Elt.mem_2	40
Coq.FSets.FMapList.Make.Elt.empty_1	40	1.576	synth with cache (only 1: intro p; only 1: inversion 1).	0.0559091567993	81
Coq.FSets.FMapList.Make.Elt.is_empty_1	40
Coq.FSets.FMapList.Make.Elt.is_empty_2	40	448.1.64.3.324	synth with cache (only 1: intros (H, H'); only 1: intros sorted belong1; only 1: intros l; only 1: simpl; only 1: easy || now destruct 1).	33.8058121204	38197
Coq.FSets.FMapList.Make.Elt.add_1	40
Coq.FSets.FMapList.Make.Elt.add_2	40
Coq.FSets.FMapList.Make.Elt.add_3	40
Coq.FSets.FMapList.Make.Elt.remove_1	40
Coq.FSets.FMapList.Make.Elt.remove_2	40
Coq.FSets.FMapList.Make.Elt.remove_3	40
Coq.FSets.FMapList.Make.Elt.find_1	40
Coq.FSets.FMapList.Make.Elt.find_2	40
Coq.FSets.FMapList.Make.Elt.elements_1	40	0	synth with cache (only 1: auto).	0.0157649517059	1
Coq.FSets.FMapList.Make.Elt.elements_2	40	0.0	synth with cache (only 1: intros m; only 1: exact (Raw.elements_1 (m:=m))).	0.0216028690338	2
Coq.FSets.FMapList.Make.Elt.elements_3	40	513.579.0	synth with cache (only 1: intros m; only 1: destruct m; only 1: auto with relations).	0.127236843109	274
Coq.FSets.FMapList.Make.Elt.elements_3w	40
Coq.FSets.FMapList.Make.Elt.cardinal_1	40	193.0	synth with cache (only 1: intros m; only 1: f_equiv).	0.0262310504913	12
Coq.FSets.FMapList.Make.Elt.fold_1	40
Coq.FSets.FMapList.Make.Elt.equal_1	40
Coq.FSets.FMapList.Make.Elt.equal_2	40
Coq.FSets.FMapList.Make.map_1	40
Coq.FSets.FMapList.Make.map_2	40
Coq.FSets.FMapList.Make.mapi_1	40
Coq.FSets.FMapList.Make.mapi_2	40
Coq.FSets.FMapList.Make.map2_1	40
Coq.FSets.FMapList.Make.map2_2	40
Coq.FSets.FMapList.Make_ord.eq_equal	40
Coq.FSets.FMapList.Make_ord.eq_1	40
Coq.FSets.FMapList.Make_ord.eq_2	40
Coq.FSets.FMapList.Make_ord.eq_refl	40
Coq.FSets.FMapList.Make_ord.eq_sym	40
Coq.FSets.FMapList.Make_ord.eq_trans	40
Coq.FSets.FMapList.Make_ord.lt_trans	40
Coq.FSets.FMapList.Make_ord.lt_not_eq	40
Coq.FSets.FMapList.Make_ord.compare	40
Coq.Wellfounded.Inclusion.WfInclusion.Acc_incl	40
Coq.Wellfounded.Inclusion.WfInclusion.wf_incl	40	1.64	synth with cache (only 1: red; only 1: auto with sets).	0.0212738513947	7
Coq.Wellfounded.Well_Ordering.WellOrdering.wf_WO	40
Coq.Wellfounded.Well_Ordering.Characterisation_wf_relations.wof	40
Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.left_prefix	40
Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.right_prefix	40
Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.desc_prefix	40
Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.desc_tail	40
Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.dist_aux	40
Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.dist_Desc_concat	40
Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.desc_end	40
Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.ltl_unit	40
Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.acc_app	40	192.66.320.448	synth with cache (only 1: intros a b Ha; only 1: intro H; only 1: intros n l d; only 1: now apply H).	25.829007864	1821
Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.wf_lex_exp	40
Coq.Wellfounded.Inverse_Image.Inverse_Image.Acc_lemma	40
Coq.Wellfounded.Inverse_Image.Inverse_Image.Acc_inverse_image	40
Coq.Wellfounded.Inverse_Image.Inverse_Image.wf_inverse_image	40	0.0.1.2.3.8	synth with cache (only 1: intros y0 H1; only 1: apply Acc_intro; only 1: intros x H; only 1: apply (Acc_lemma (f x)); only 1: trivial; only 1: trivial).	27.5211610794	4392
Coq.Wellfounded.Inverse_Image.Inverse_Image.Acc_inverse_rel	40
Coq.Wellfounded.Inverse_Image.Inverse_Image.wf_inverse_rel	40
Coq.Wellfounded.Disjoint_Union.Wf_Disjoint_Union.acc_A_sum	40
Coq.Wellfounded.Disjoint_Union.Wf_Disjoint_Union.acc_B_sum	40
Coq.Wellfounded.Disjoint_Union.Wf_Disjoint_Union.wf_disjoint_sum	40
Coq.Wellfounded.Lexicographic_Product.WfLexicographic_Product.acc_A_B_lexprod	40
Coq.Wellfounded.Lexicographic_Product.WfLexicographic_Product.wf_lexprod	40
Coq.Wellfounded.Lexicographic_Product.Wf_Symmetric_Product.Acc_symprod	40
Coq.Wellfounded.Lexicographic_Product.Wf_Symmetric_Product.wf_symprod	40
Coq.Wellfounded.Lexicographic_Product.Swap.swap_Acc	40
Coq.Wellfounded.Lexicographic_Product.Swap.Acc_swapprod	40
Coq.Wellfounded.Lexicographic_Product.Swap.wf_swapprod	40
Coq.Wellfounded.Transitive_Closure.Wf_Transitive_Closure.incl_clos_trans	40	0.67.10	synth with cache (only 1: red; only 1: left; only 1: assumption).	0.262819051743	808
Coq.Wellfounded.Transitive_Closure.Wf_Transitive_Closure.Acc_clos_trans	40
Coq.Wellfounded.Transitive_Closure.Wf_Transitive_Closure.Acc_inv_trans	40	0.0.129.0.0.70	synth with cache (only 1: intro H; only 1: intros y H2; only 1: induction H2; only 1: induction 1; only 1: auto with sets; only 1: auto with sets).	3.1682331562	408
Coq.Wellfounded.Transitive_Closure.Wf_Transitive_Closure.wf_clos_trans	40	0.128.1	synth with cache (only 1: red; only 1: intros H; only 1: auto with sets).	0.0245349407196	8
Coq.Numbers.DecimalFacts.uint_dec	40
Coq.Numbers.DecimalFacts.rev_revapp	40
Coq.Numbers.DecimalFacts.rev_rev	40
Coq.Numbers.DecimalFacts.nzhead_revapp_0	40
Coq.Numbers.DecimalFacts.nzhead_revapp	40
Coq.Numbers.DecimalFacts.nzhead_rev	40
Coq.Numbers.DecimalFacts.rev_nztail_rev	40
Coq.Numbers.DecimalFacts.revapp_nil_inv	40
Coq.Numbers.DecimalFacts.rev_nil_inv	40	66.0.3.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: rewrite <- (rev_rev d); only 1: rewrite H; only 1: unfold rev; only 1: constructor).	37.4237339497	61844
Coq.Numbers.DecimalFacts.rev_lnorm_rev	40
Coq.Numbers.DecimalFacts.nzhead_nonzero	40	3.0.0.0.0.0.0.0.0.0.2.0.19	synth with cache (only 1: induction d; only 1: simpl; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd).	37.4082388878	82844
Coq.Numbers.DecimalFacts.unorm_0	40
Coq.Numbers.DecimalFacts.unorm_nonnil	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.64	synth with cache (only 1: red; only 1: unfold unorm; only 1: generalize (nzhead_nonzero d); only 1: destruct nzhead; only 1: intros H [=]; only 1: intros H [=]; only 1: intros H [=]; only 1: intros H [=]; only 1: intros H [=]; only 1: intros H [=]; only 1: intros H [=]; only 1: intros H [=]; only 1: intros H [=]; only 1: intros H [=]; only 1: intros H [=]).	0.312563180923	176
Coq.Numbers.DecimalFacts.nzhead_invol	40	0.0.0.0.0.2.0.0.0.0.0.8	synth with cache (only 1: induction d; only 1: trivial; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: now rewrite ?IHd; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	32.1496269703	64199
Coq.Numbers.DecimalFacts.unorm_invol	40	0	synth with cache (only 1: now induction d).	0.0184619426727	1
Coq.Numbers.DecimalFacts.norm_invol	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_eqn	40	5	synth with cache (only 1: now induction d).	0.187948942184	69
Coq.Numbers.DecimalPos.Unsigned.of_lu_revapp	40
Coq.Numbers.DecimalPos.Unsigned.Nadd_simpl	40	0	synth with cache (only 1: now destruct n).	0.0213439464569	1
Coq.Numbers.DecimalPos.Unsigned.of_uint_acc_eqn	40	0.0.1.384.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.5.0.0.0.0.0.0.0.65	synth with cache (only 1: intros H; only 1: simpl; only 1: induction d; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: simpl; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: simpl; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: simpl; only 1: destruct (nztail d) eqn:E; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: simpl; only 1: now simpl; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd).	37.3447618484	9119
Coq.Numbers.DecimalPos.Unsigned.of_uint_acc_rev	40
Coq.Numbers.DecimalPos.Unsigned.of_uint_alt	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_rev	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_double_gen	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_double	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_succ_double	40	0	synth with cache (only 1: apply of_lu_double_gen).	0.0225839614868	1
Coq.Numbers.DecimalPos.Unsigned.of_to	40
Coq.Numbers.DecimalPos.Unsigned.succ_double_alt	40	451.2.0.0.2.4.2.0.0.2.0.0.194	synth with cache (only 1: compute; only 1: destruct d; only 1: trivial; only 1: auto; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: easy; only 1: auto; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: auto; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: easy; only 1: auto; only 1: PeanoNat.Nat.auto').	6.74678301811	9442
Coq.Numbers.DecimalPos.Unsigned.double_succ	40	2.0.0.0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.0.0.1.0.0.0.1.0.4	synth with cache (only 1: induction d; only 1: trivial; only 1: simpl Little.double; only 1: now induction d; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: simpl Little.double; only 1: now rewrite ?IHd; only 1: now rewrite ?IHd; only 1: now induction d; only 1: reflexivity || ring; only 1: now induction d; only 1: now rewrite ?IHd; only 1: simpl Little.double; only 1: destruct (nztail d) eqn:E; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: simpl Little.double; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd).	2.07206583023	2911
Coq.Numbers.DecimalPos.Unsigned.to_lu_succ	40
Coq.Numbers.DecimalPos.Unsigned.nat_iter_S	40	2	synth with cache (only 1: auto with arith).	0.0333240032196	27
Coq.Numbers.DecimalPos.Unsigned.nat_iter_0	40	0.2	synth with cache (only 1: simpl; only 1: trivial).	0.0280559062958	4
Coq.Numbers.DecimalPos.Unsigned.to_ldec_tenfold	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_0	40
Coq.Numbers.DecimalPos.Unsigned.to_of_lu_tenfold	40
Coq.Numbers.DecimalPos.Unsigned.Nadd_alt	40
Coq.Numbers.DecimalPos.Unsigned.to_of_lu	40
Coq.Numbers.DecimalPos.Unsigned.to_of	40
Coq.Numbers.DecimalPos.Unsigned.to_uint_nonzero	40
Coq.Numbers.DecimalPos.Unsigned.to_uint_nonnil	40
Coq.Numbers.DecimalPos.Unsigned.to_uint_inj	40
Coq.Numbers.DecimalPos.Unsigned.to_uint_pos_surj	40
Coq.Numbers.DecimalPos.Unsigned.of_uint_norm	40
Coq.Numbers.DecimalPos.Unsigned.of_inj	40
Coq.Numbers.DecimalPos.Unsigned.of_iff	40
Coq.Numbers.DecimalPos.Signed.of_to	40
Coq.Numbers.DecimalPos.Signed.to_of	40
Coq.Numbers.DecimalPos.Signed.to_int_inj	40
Coq.Numbers.DecimalPos.Signed.to_int_pos_surj	40
Coq.Numbers.DecimalPos.Signed.of_int_norm	40
Coq.Numbers.DecimalPos.Signed.of_inj_pos	40
Coq.Numbers.DecimalNat.Unsigned.to_lu_succ	40	512.0.0.0.0.0.0.0	synth with cache (only 1: revert n; only 1: intros; only 1: revert n; only 1: intros; only 1: revert n; only 1: intros; only 1: revert n; only 1: auto with *).	0.0551819801331	16
Coq.Numbers.DecimalNat.Unsigned.to_little_uint_succ	40
Coq.Numbers.DecimalNat.Unsigned.to_lu_equiv	40
Coq.Numbers.DecimalNat.Unsigned.to_uint_alt	40
Coq.Numbers.DecimalNat.Unsigned.of_lu_eqn	40
Coq.Numbers.DecimalNat.Unsigned.of_lu_succ	40
Coq.Numbers.DecimalNat.Unsigned.of_to_lu	40
Coq.Numbers.DecimalNat.Unsigned.of_lu_revapp	40
Coq.Numbers.DecimalNat.Unsigned.of_uint_acc_spec	40
Coq.Numbers.DecimalNat.Unsigned.of_uint_alt	40
Coq.Numbers.DecimalNat.Unsigned.of_to	40
Coq.Numbers.DecimalNat.Unsigned.to_lu_tenfold	40
Coq.Numbers.DecimalNat.Unsigned.of_lu_0	40
Coq.Numbers.DecimalNat.Unsigned.to_of_lu_tenfold	40
Coq.Numbers.DecimalNat.Unsigned.to_of_lu	40
Coq.Numbers.DecimalNat.Unsigned.to_of	40
Coq.Numbers.DecimalNat.Unsigned.to_uint_inj	40
Coq.Numbers.DecimalNat.Unsigned.to_uint_surj	40
Coq.Numbers.DecimalNat.Unsigned.of_uint_norm	40	1.0.0.0.0.0.0.0.2.0.1.0.0.5.0.0.4.0	synth with cache (only 1: unfold Nat.of_uint; only 1: induction d; only 1: now Nat.nzsimpl; only 1: simpl; only 1: easy; only 1: simpl; only 1: rewrite ?Nat.tail_mul_spec, ?IHd; only 1: trivial; only 1: simpl; only 1: Morphisms.f_equiv; only 1: now destruct nztail; only 1: trivial; only 1: simpl; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial).	10.7958688736	20174
Coq.Numbers.DecimalNat.Unsigned.of_inj	40
Coq.Numbers.DecimalNat.Unsigned.of_iff	40
Coq.Numbers.DecimalNat.Signed.of_to	40
Coq.Numbers.DecimalNat.Signed.to_of	40
Coq.Numbers.DecimalNat.Signed.to_int_inj	40
Coq.Numbers.DecimalNat.Signed.to_int_pos_surj	40
Coq.Numbers.DecimalNat.Signed.of_int_norm	40
Coq.Numbers.DecimalNat.Signed.of_inj_pos	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_add_opp	40	0.0.1.0	synth with cache (only 1: intros m IH; only 1: revert m; only 1: intro n; only 1: reflexivity).	0.0248939990997	5
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.eq_equiv	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.pair_wd	40	0.0.0.64.2	synth with cache (only 1: intros x x' Hx y y' Hy; only 1: compute; only 1: setoid_rewrite Hx; only 1: setoid_rewrite Hy; only 1: auto with *).	0.545019865036	378
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.succ_wd	40	0.5.0.1.768.897.3	synth with cache (only 1: repeat red; only 1: destruct y; only 1: induction x; only 1: intros H; only 1: simpl in *; only 1: BinNat.N.nzsimpl; only 1: now rewrite succ_inj_wd).	25.6095409393	27311
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.pred_wd	40	0.0.2.192.0.2.4.0	synth with cache (only 1: unfold Z.succ, Z.eq; only 1: repeat red; only 1: intro H; only 1: simpl; only 1: intros eq_rect_eq; only 1: nzsimpl'; only 1: intro; only 1: now f_equiv).	13.9823770523	12631
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.add_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.opp_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_comm	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.Induction.bi_induction	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.pred_succ	40	128.2.0.513.0.257.197	synth with cache (only 1: repeat red; only 1: intros (Ha, H); only 1: simpl; only 1: generalize (PeanoNat.Nat.lt_succ_diag_r 0); only 1: intro; only 1: rewrite add_succ_l, <- add_succ_r; only 1: now subst).	5.04584598541	6577
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.succ_pred	40	0.0.0.0	synth with cache (only 1: unfold Z.pred, Z.succ, Z.eq; only 1: intro n; only 1: simpl; only 1: now nzsimpl).	0.244615077972	4
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.one_succ	40	1.704.72	synth with cache (only 1: generalize (PeanoNat.Nat.lt_succ_diag_r 0); only 1: reduce; only 1: now nzsimpl).	0.957849979401	603
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.two_succ	40	0.128	synth with cache (only 1: compute; only 1: now nzsimpl').	0.159085035324	10
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.opp_0	40	135	synth with cache (only 1: let rec mrewrite := repeat (first [ rewrite (ARadd_0_l ARth) | rewrite <- (ARadd_comm ARth rO) | rewrite (ARmul_1_l ARth) | rewrite <- (ARmul_comm ARth rI) | rewrite (ARmul_0_l ARth) | rewrite <- (ARmul_comm ARth rO) | rewrite (ARdistr_l ARth) | reflexivity | match goal with | |- context [ rmul ?z (radd ?x ?y) ] => rewrite (ARmul_comm ARth z (radd x y)) end ]) in mrewrite).	0.128322124481	399
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.opp_succ	40	0.0.0	synth with cache (only 1: unfold Z.eq; only 1: simpl; only 1: reflexivity).	0.0318741798401	3
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.add_0_l	40	0.512.0.2	synth with cache (only 1: intro H; only 1: unfold Z.eq, Z.add; only 1: CRelationClasses.simpl_crelation; only 1: now nzsimpl).	0.584597826004	313
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.add_succ_l	40	0.0.0.0.0.129	synth with cache (only 1: intro H; only 1: unfold Z.add, Z.eq; only 1: intro n; only 1: simpl; only 1: nzsimpl; only 1: now symmetry).	0.66046500206	278
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_0_r	40	0.0.0.0	synth with cache (only 1: intro n; only 1: unfold Z.add, Z.eq; only 1: simpl; only 1: now nzsimpl).	0.235759019852	4
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_succ_r	40	0.0.0.257	synth with cache (only 1: red; only 1: simpl; only 1: intros n m; only 1: now nzsimpl).	1.12791204453	390
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_0_l	40	0.0.66.0	synth with cache (only 1: unfold Z.mul, Z.eq; only 1: intros Hb; only 1: simpl; only 1: now nzsimpl).	0.338792085648	160
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_succ_l	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_eq_cases	40	0.0.0.0.2.257.195	synth with cache (only 1: intro H1; only 1: intros (p, Hp); only 1: compute; only 1: rewrite lt_eq_cases; only 1: split; only 1: tauto; only 1: tauto).	16.5629589558	14216
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_irrefl	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_succ_r	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.min_l	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.min_r	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.max_l	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.max_r	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_nge	40	6.0.3	synth with cache (only 1: intros n m; only 1: unfold Z.lt, Z.le, Z.eq; only 1: intuition order).	7.33185195923	3036
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_wd	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_neg_neg	40	0.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_lt_mono).	0.0346519947052	3
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_neg_nonpos	40	0.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_lt_le_mono).	0.0345811843872	3
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_nonpos_neg	40	0.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_le_lt_mono).	0.034343957901	3
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_nonpos_nonpos	40	0.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_le_mono).	0.0333700180054	3
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_0_sub	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_0_sub	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_0	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_0	40	0.2.196	synth with cache (only 1: intro y0; only 1: intro n; only 1: now rewrite (add_le_mono_r _ _ n), add_0_l, sub_simpl_r).	1.19326114655	1554
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_lt_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_le_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_pos_neg	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_neg_pos	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_nonneg_nonpos	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_nonpos_nonneg	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_m1_0	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_mono_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_mono_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_mono_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_mono_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_le_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_lt_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_lt_sub_lt	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_le_sub_lt	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_le_sub_lt	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_add_lt_sub_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_add_le_sub_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_add_lt_sub_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_add_le_sub_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_lt_add_r	40	0.64.0	synth with cache (only 1: intros n m p; only 1: symmetry; only 1: now rewrite (sub_lt_mono_r _ _ p), add_simpl_r).	0.0761299133301	30
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_le_add_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_lt_add_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_le_add_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_lt_add	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_le_add	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_pos	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_nonneg	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_neg_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_pos_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_nonpos_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_nonneg_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.PosNeg.zero_pos_neg	40
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.odd_pred	40	0.7.0.0.0	synth with cache (only 1: intros; only 1: apply eq_iff_eq_true; only 1: rewrite even_spec, odd_spec; only 1: rewrite <- (succ_pred n)  at 2; only 1: now rewrite <- even_spec, even_succ, odd_spec).	39.9159100056	35389
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_pred	40	0.0.2.1.0.0	synth with cache (only 1: intros; only 1: rewrite <- (succ_pred n)  at 2; only 1: symmetry; only 1: apply eq_iff_eq_true; only 1: rewrite even_spec, odd_spec; only 1: apply Odd_succ).	1.63244509697	1971
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_opp	40
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.odd_opp	40
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_sub	40
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.odd_sub	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_pred_r	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_pred_l	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_l	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_r	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_opp	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_comm	40	1.1.192.389	synth with cache (only 1: intro p; only 1: firstorder; only 1: apply opp_inj_wd; only 1: now rewrite mul_opp_l, mul_opp_r, opp_involutive).	0.708727121353	1470
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_sub_distr_l	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_sub_distr_r	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_lt_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_le_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_nonpos_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_nonneg_nonpos	40	0.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (mul_0_l m); only 1: now apply mul_le_mono_nonpos_r).	0.0358600616455	3
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_nonpos_nonneg	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_0	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_0_mul	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_mul_0	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.nlt_square_0	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_lt_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_le_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_lt_simpl_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_le_simpl_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_1_mul_neg	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_m1_neg	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_m1_pos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_1_mul_l	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_m1_mul_r	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.eq_mul_1	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_diag_l	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_diag_r	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_mul_diag_l	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_mul_diag_r	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow_sub_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow_div_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.exists_div2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_0_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_succ_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_spec'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_spec	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_true	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_false	40	0.0.577.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros a n Hn; only 1: rewrite <- testbit_spec' by trivial; only 1: destruct a.[n]; only 1: split; only 1: simpl; only 1: now try order'; only 1: simpl; only 1: now try order'; only 1: split; only 1: simpl; only 1: now trivial; only 1: simpl; only 1: now try order').	0.386320114136	241
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.b2z_inj	40	2.2.0	synth with cache (only 1: destr_bool; only 1: now try order'; only 1: now try order').	0.106728792191	151
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_b2z_double_div2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_b2z_double_bit0	40		synth with cache (only 1: intros; only 1: rewrite <- (opp_involutive a)  at 1; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: repeat match goal with | p:(_ * _)%type |- _ => destruct p | b:bool |- _ => destruct b end; only 1: simpl; only 1: apply testbit_odd_0; only 1: simpl; only 1: rewrite ?add_0_r; only 1: apply testbit_even_0).	31.3646969795	75382
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.b2z_div2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.b2z_bit0	40	0.0.0.0.71	synth with cache (only 1: firstorder; only 1: apply b2z_inj; only 1: rewrite testbit_spec' by order; only 1: nzsimpl; only 1: now rewrite mod_small by (destruct a0; split; simpl; order')).	1.88325095177	2506
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_unique	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_opp	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_m1	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit0_odd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit0_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit0_mod	40	0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.1.0	synth with cache (only 1: intros a; only 1: destruct (exists_div2 a) as (a', (b, H)); only 1: rewrite H  at 1; only 1: rewrite testbit_0_r; only 1: apply mod_unique with a'; only 1: left; only 1: destruct b; only 1: split; only 1: simpl; only 1: order'; only 1: simpl; only 1: order'; only 1: split; only 1: simpl; only 1: order'; only 1: simpl; only 1: order'; only 1: trivial).	3.10057902336	3196
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_odd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit_log2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_above_log2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit_log2_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_above_log2_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_nonneg'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_nonneg_ex	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_neg'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_neg_ex	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div_pow2_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.double_bits_succ	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.double_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mul_pow2_bits_add	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mul_pow2_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mul_pow2_bits_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mod_pow2_bits_high	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mod_pow2_bits_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.eqf_equiv	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_eqf	40	3.256.320	synth with cache (only 1: intros a b H; only 1: intro; only 1: now rewrite <- H).	0.433775901794	244
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj_0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj_iff'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.are_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_spec	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_opp_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_opp_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_div_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_mul_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_mul_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_div_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_spec_alt	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_shiftl	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_shiftl_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_shiftl_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_shiftr	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_1_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_0_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_0_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_0_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_0_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_eq_0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_div	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_odd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_wd	40	0.0.0	synth with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.0719819068909	3
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_wd	40	0.0.0	synth with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.0723669528961	3
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_wd	40	0.0.0	synth with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.0832269191742	3
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_eq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_nilpotent	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_0_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_0_r	40	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_l).	0.0318760871887	3
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_comm	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_assoc	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_0_l	40	192.0.449	synth with cache (only 1: intros H; only 1: bitwise; only 1: solve_proper).	0.137326955795	119
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_0_r	40	1.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_r).	0.0328760147095	4
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_comm	40	386.0.0.64	synth with cache (only 1: intros b; only 1: intro n; only 1: bitwise; only 1: auto with bool).	0.361923933029	273
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_assoc	40	449.193.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: generalize (log2_le_mono _ _ (le_succ_diag_r a)); only 1: CRelationClasses.simpl_crelation).	0.0998480319977	38
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_eq_0_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_0_l	40	64.10.0	synth with cache (only 1: intros; only 1: bitwise; only 1: solve_proper).	12.9858927727	15787
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_0_r	40	513.9.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply andb_false_iff; only 1: simpl_relation).	25.3791718483	27589
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_comm	40	68.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: intuition).	0.338204860687	359
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_assoc	40	450.0.1.256	synth with cache (only 1: intros n; only 1: intros a b; only 1: bitwise; only 1: firstorder).	2.75228309631	3124
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_0_l	40	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: trivial).	0.0323598384857	3
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_0_r	40	1.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_r).	0.0351629257202	4
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_diag	40	513.0.2	synth with cache (only 1: intro n; only 1: bitwise; only 1: simpl_relation).	0.530375003815	661
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_land_distr_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_land_distr_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_lor_distr_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_lor_distr_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ldiff_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_ldiff_and	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_spec'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_spec'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_wd	40	1.449.576.1.64.0.0	synth with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: f_equiv; only 1: bitwise; only 1: pose proof (lt_trichotomy m 0); only 1: compute; only 1: now rewrite Ha, Hb).	36.0969529152	11678
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow2_bits_true	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow2_bits_false	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow2_bits_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_eq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_neq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_eq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_neq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_spec	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_involutive	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_0	40	0.0.3.72	synth with cache (only 1: unfold lnot; only 1: rewrite opp_0; only 1: apply eq_opp_r; only 1: now rewrite one_succ, opp_pred, opp_0).	0.602056026459	979
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_m1	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_m1_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_m1_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_m1_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_m1_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_m1_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_m1_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_lnot_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_lnot_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_lnot_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_lnot_lnot	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lxor_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lxor_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_m1_r	40	1.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: now rewrite lnot_spec, bits_m1).	0.080461025238	46
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_m1_l	40	1.1.0	synth with cache (only 1: intros; only 1: bitwise; only 1: now rewrite lnot_spec, bits_m1).	0.0593268871307	16
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_shiftr	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_wd	40	0.0.514.258.3	synth with cache (only 1: intros a a' Ha; only 1: apply bits_inj'; only 1: compute; only 1: intros; only 1: now rewrite Ha).	5.63716292381	7682
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_equiv	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_add	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_div_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_mod_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_spec_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_spec_high	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_spec_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_ones_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ones	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ones_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_r_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_l_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_neg	40	1.0.0	synth with cache (only 1: intros a n; only 1: rewrite <- shiftl_opp_r; only 1: now rewrite 2!lt_nge, shiftl_nonneg).	0.0358300209045	4
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_neg	40	0.0.1	synth with cache (only 1: intros; only 1: rewrite div2_spec; only 1: now rewrite 2!lt_nge, shiftr_nonneg).	0.0838799476624	25
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_bits_unique	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_shiftr	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_shiftl	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_shiftl'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_bit0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add3_bit0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add3_bits_div2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_carry_div2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_carry_bits_aux	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_carry_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_bit1	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.nocarry_equiv	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_le	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.sub_nocarry_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_lt_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_mod_lt_pow2	40
Coq.Numbers.Integer.Abstract.ZBase.ZBaseProp.pred_inj	40
Coq.Numbers.Integer.Abstract.ZBase.ZBaseProp.pred_inj_wd	40	0.0.1.2.1.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros; only 1: apply succ_wd in H; only 1: now rewrite 2!succ_pred in H; only 1: intros; only 1: now f_equiv).	0.807934999466	961
Coq.Numbers.Integer.Abstract.ZBase.ZBaseProp.succ_m1	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_twice_r	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.even_pow	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.odd_pow	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_opp_even	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_opp_odd	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_even_abs	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_even_nonneg	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_odd_abs_sgn	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_odd_sgn	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.abs_pow	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_opp_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_opp_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_abs_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_abs_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_1_r_abs	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_1_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_antisym_abs	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_antisym	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_sub_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_add_cancel_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_opp_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_opp_r	40	1.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply gcd_unique_alt; only 1: apply gcd_nonneg; only 1: intros; only 1: rewrite divide_opp_r; only 1: apply gcd_divide_iff).	0.0659828186035	25
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_abs_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_abs_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_0_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_0_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_diag	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_add_mult_diag_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_add_diag_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_sub_diag_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.Bezout_wd	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.bezout_1_gcd	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_bezout	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_l_nonneg	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_r_nonneg	40	0.3.0.0	synth with cache (only 1: intros; only 1: rewrite <- (abs_eq p)  at 3; only 1: now rewrite !(mul_comm _ p), gcd_mul_mono_l, mul_comm; only 1: trivial).	0.697461843491	692
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gauss	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_mul_split	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.quot_div_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_mod_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.quot_div	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_mod	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.mod_divide	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_divide	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_mod_eq_0	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.quot_div_exact	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_div_mul_exact	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_quot_mul_exact	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_div_factor	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_quot_factor	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_div_gcd	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_quot_gcd	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_mod	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_rem	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_wd	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_equiv1	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_equiv2	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_div_swap	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_l	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_r	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_div	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_least	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_nonneg	40	3.576.0	synth with cache (only 1: unfold lcm; only 1: intros H x0; only 1: apply abs_nonneg).	0.67045712471	665
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_comm	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_divide_iff	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_unique	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_unique_alt	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_assoc	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_0_l	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_0_r	40	0.1.0.1.1.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: order || apply lt_0_1; only 1: exists 0; only 1: now nzsimpl; only 1: apply divide_refl; only 1: trivial).	0.509880065918	559
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_l_nonneg	40	0.1.0.2.0.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: trivial; only 1: exists n; only 1: now nzsimpl; only 1: apply divide_refl; only 1: trivial).	0.301551103592	371
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_r_nonneg	40	0.0.1.0.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: trivial; only 1: apply divide_refl; only 1: trivial using divide_1_l, le_0_1, divide_refl; only 1: trivial using divide_1_l, le_0_1, divide_refl).	0.133647203445	88
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_diag_nonneg	40	0.1.1.0.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: trivial; only 1: apply divide_refl; only 1: apply divide_refl; only 1: trivial using divide_refl).	0.177829027176	166
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_eq_0	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_eq_r	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_iff	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_opp_l	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_opp_r	40	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique_alt; only 1: apply lcm_nonneg; only 1: intros; only 1: rewrite divide_opp_l; only 1: apply lcm_divide_iff).	0.0401029586792	6
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_abs_l	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_abs_r	40	1.0.0.0.6.0	synth with cache (only 1: intros; only 1: destruct (abs_eq_or_opp m) as [H| H]; only 1: rewrite H; only 1: easy; only 1: rewrite H; only 1: now rewrite lcm_comm, lcm_opp_l, lcm_comm).	2.38544988632	4243
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_l	40	0.256.0.128.0.0.0.0.0.0.0.512.321.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: destruct_max n; only 1: trivial; only 1: now rewrite opp_nonneg_nonpos; only 1: pose proof (lt_trichotomy n 0); only 1: assert (AUX : forall a b, 0 < a -> 0 < b -> S a + S b <= S a * S b); only 1: intros a b Ha Hb; only 1: nzsimpl; only 1: rewrite <- succ_le_mono; only 1: apply le_succ_l; only 1: rewrite <- add_assoc, <- (add_0_l (a + b)), (add_comm b); only 1: apply add_lt_mono_r; only 1: now apply mul_pos_pos; only 1: trivial using divide_1_l, le_0_1, divide_refl; only 1: now apply divide_abs_l; only 1: intros n1 n2 H; only 1: now apply divide_abs_l).	1.6203250885	1606
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_r	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_diag	40	2.128.68.0.0.0.0.0.3.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: destruct_max n; only 1: trivial; only 1: now rewrite opp_nonneg_nonpos; only 1: now apply divide_abs_l; only 1: now apply divide_abs_l; only 1: intros H; only 1: intuition; only 1: now apply divide_abs_l).	11.6651880741	19761
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_l	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_l_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_r	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_r_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_1_lcm_mul	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.succ_max_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.succ_min_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.pred_max_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.pred_min_distr	40	0.0.0.0.0.0.0.1.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?pred_le_mono; only 1: now rewrite <- ?pred_le_mono; only 1: now rewrite <- ?succ_le_mono; only 1: rewrite 2!min_r; only 1: now rewrite <- ?pred_le_mono; only 1: now rewrite <- ?pred_le_mono; only 1: now rewrite <- ?succ_le_mono).	1.49972891808	1101
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_max_distr_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_max_distr_r	40	1.0.0.0.1.0.0.1.1.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply add_le_mono_r; only 1: rewrite 2!max_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply add_le_mono_r).	13.8033180237	14670
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_min_distr_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_min_distr_r	40	1.0.0.0.1.0.0.1.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_r; only 1: rewrite 2!min_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_r).	1.94201588631	1799
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.opp_max_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.opp_min_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_max_distr_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_max_distr_r	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_min_distr_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_min_distr_r	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonneg_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonneg_r	40	1.2.0.0.0.1.2.0.0.1.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: order; only 1: order; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonneg_l; only 1: rewrite 2!max_l; only 1: order; only 1: order; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonneg_l).	11.9895210266	8337
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonneg_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonneg_r	40	1.2.0.0.0.1.2.0.0.1.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: order; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonneg_l; only 1: rewrite 2!min_r; only 1: order; only 1: order; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonneg_l).	29.7874341011	16508
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonpos_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonpos_r	40	0.2.0.0.0.0.2.0.0.1.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite min_l by trivial; only 1: rewrite max_l; only 1: reflexivity; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonpos_l; only 1: rewrite min_r by trivial; only 1: rewrite max_r; only 1: reflexivity; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonpos_l).	1.6305141449	1188
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonpos_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonpos_r	40	0.2.0.0.0.0.2.0.0.1.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite max_r by trivial; only 1: rewrite min_r; only 1: reflexivity; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonpos_l; only 1: rewrite max_l by trivial; only 1: rewrite min_l; only 1: reflexivity; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonpos_l).	3.32108283043	1082
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neg_pos_cases	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.nonpos_pos_cases	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neg_nonneg_cases	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.nonpos_nonneg_cases	40	0.0.0	synth with cache (only 1: intro; only 1: apply add_le_cases; only 1: now nzsimpl).	0.0445151329041	3
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_l	40	2.3.0	synth with cache (only 1: intro n; only 1: rewrite <- (succ_pred n)  at 2; only 1: apply lt_succ_diag_r).	0.330542087555	391
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_pred_l	40	0.0.3.0	synth with cache (only 1: intro n; only 1: apply lt_le_incl; only 1: rewrite <- (succ_pred n)  at 2; only 1: apply lt_succ_diag_r).	0.481065034866	500
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_le_pred	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.nle_pred_r	40	0.0.6.1	synth with cache (only 1: intro; only 1: rewrite nle_gt; only 1: rewrite <- (succ_pred n)  at 2; only 1: apply lt_succ_diag_r).	20.7206718922	8754
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_le	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_lt_pred	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_le_pred	40	0.0.0.0.194	synth with cache (only 1: intros Hfst Hsnd; only 1: intro; only 1: apply lt_le_incl; only 1: apply lt_pred_le; only 1: order).	3.66658997536	2262
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_lt	40	0.0.259.0	synth with cache (only 1: intros; only 1: rewrite H; only 1: apply lt_pred_le; only 1: order).	0.658066034317	504
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_pred_lt	40	0.2.256.0.2.0.128.6	synth with cache (only 1: intros n m; only 1: destruct (le_gt_cases n m) as [LE| LT]; only 1: intro H; only 1: assumption; only 1: intro H; only 1: setoid_rewrite H; only 1: apply lt_le_incl; only 1: apply lt_pred_l).	2.11249494553	4810
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.pred_lt_mono	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.pred_le_mono	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_succ_lt_pred	40	3.0.0	synth with cache (only 1: intros; only 1: rewrite lt_le_pred; only 1: apply le_succ_l).	0.352643013	246
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_succ_le_pred	40	0.0.4.0	synth with cache (only 1: intros n m; only 1: rewrite <- (succ_pred m); only 1: rewrite pred_succ; only 1: now rewrite 2!lt_eq_cases, <- succ_lt_mono, succ_inj_wd).	1.46798205376	1684
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_lt_succ	40	1.0.0.0.0.5.0	synth with cache (only 1: intros n m; only 1: rewrite <- (succ_pred n)  at 2; only 1: rewrite <- le_succ_l; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: apply lt_succ_r).	8.47302699089	9334
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_pred_lt_succ	40	0.6.0	synth with cache (only 1: intros n m; only 1: rewrite <- (succ_pred n)  at 2; only 1: now rewrite 2!lt_eq_cases, <- succ_lt_mono, succ_inj_wd).	4.92550301552	3466
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neq_pred_l	40	3.4.0	synth with cache (only 1: intro n; only 1: rewrite <- (succ_pred n)  at 2; only 1: apply neq_sym, neq_succ_diag_l).	4.33252811432	7263
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_m1_r	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericAbs.abs_eq	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericAbs.abs_neq	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_null	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_pos	40	0.0.0.2.0.0.0.0.0	synth with cache (only 1: unfold sgn; only 1: intros; only 1: destruct (compare_spec 0 n); only 1: order; only 1: order; only 1: destruct (compare_spec 0 n); only 1: order'; only 1: order'; only 1: order').	0.49107503891	544
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_neg	40	0.0.0.0.0.0	synth with cache (only 1: unfold sgn; only 1: intros; only 1: destruct (compare_spec 0 n); only 1: order; only 1: order; only 1: order).	0.0453507900238	6
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_wd	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_max	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_neq'	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_nonneg	40	0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct_max n; only 1: auto; only 1: rewrite opp_nonneg_nonpos; only 1: auto).	0.0500180721283	5
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_eq_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_neq_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_opp	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_0	40	258.1.0	synth with cache (only 1: rewrite abs_eq; only 1: now nzsimpl; only 1: intuition).	0.0606250762939	74
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_0_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_pos	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_eq_or_opp	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_or_opp_abs	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_involutive	40	0.1.0.0.0.0.4.0.0	synth with cache (only 1: intros; only 1: destruct_max n; only 1: rewrite abs_eq; only 1: reflexivity; only 1: auto; only 1: rewrite (abs_eq (- n)); only 1: reflexivity; only 1: rewrite opp_nonneg_nonpos; only 1: auto).	0.714099884033	1116
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_spec	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_case_strong	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_case	40	0.0.0.0	synth with cache (only 1: intros; only 1: destruct_max n; only 1: auto; only 1: auto).	0.0424761772156	4
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_eq_cases	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_lt	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_le	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_triangle	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_sub_triangle	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_mul	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_square	40	6.2.0.0	synth with cache (only 1: intros; only 1: destruct_max n; only 1: auto with relations; only 1: now rewrite mul_opp_l, mul_opp_r, opp_involutive).	3.40384888649	3864
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_wd	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_spec	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_0	40	0.0.0	synth with cache (only 1: rewrite sgn_null; only 1: auto using eq_refl, le_refl; only 1: auto using eq_refl, le_refl).	0.0230610370636	3
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_pos_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_null_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_neg_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_opp	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_nonneg	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_nonpos	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_mul	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_abs	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_sgn	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_sgn	40	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct_sgn x; only 1: apply sgn_pos; only 1: apply lt_0_1; only 1: apply sgn_0; only 1: apply sgn_neg; only 1: rewrite opp_neg_pos; only 1: apply lt_0_1).	0.0540359020233	8
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_eq	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_opp_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_opp_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_rem_unique	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_unique	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_unique	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_same	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_same	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_small	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_small	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_0_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_0_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_1_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_1_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_1_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_1_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_mul	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_unique_exact	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_nonneg	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_nonpos	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_sign_mul	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_sign_nz	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_sign	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_abs_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_abs_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_abs	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_abs_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_abs_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_abs	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_bound_abs	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_le	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_pos	40	0.0.1.0.130	synth with cache (only 1: intro EQ; only 1: intros n m Hn; only 1: apply NZQuot.div_pos; only 1: auto; only 1: auto).	5.51708006859	6913
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_str_pos	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_lt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_mono	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_quot_le	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_quot_ge	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_succ_quot_gt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_pred_quot_lt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_pred_quot_gt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_succ_quot_lt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_exact	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_lt_upper_bound	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_upper_bound	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_lower_bound	40	1.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- (quot_mul q b) by order; only 1: apply quot_le_mono; only 1: trivial; only 1: now rewrite mul_comm).	0.0525650978088	6
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_compat_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_add	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_add	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_add_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul_cancel_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul_cancel_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_distr_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_distr_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_rem	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_idemp_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.add_rem_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.add_rem_idemp_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.add_rem	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_quot	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mod_mul_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_quot	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul_le	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_eq	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_bound_abs	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mod_unique	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique_pos	40	0.2.0.0.0.1.0.2.0.0.0	synth with cache (only 1: intros a b q r Hr EQ; only 1: destruct (Private_NZDiv.div_mod_unique b q (a / b) r (a mod b)); only 1: left; only 1: auto; only 1: left; only 1: apply mod_pos_bound; only 1: intuition order; only 1: rewrite <- div_mod; only 1: order; only 1: intuition order; only 1: auto).	0.822080135345	959
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique_neg	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply div_unique with r; only 1: auto; only 1: auto).	0.0359618663788	4
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique	40	0.1.0.0.1.0.1.0.1.0.2.0.0	synth with cache (only 1: intros a b q r Hr EQ; only 1: assert (Hb : b ~= 0) by (destruct Hr; intuition; order); only 1: destruct (div_mod_unique b q (a / b) r (a mod b)); only 1: trivial; only 1: destruct Hr; only 1: left; only 1: apply mod_pos_bound; only 1: intuition order; only 1: right; only 1: apply mod_neg_bound; only 1: intuition order; only 1: now rewrite <- div_mod; only 1: trivial).	5.11843204498	5661
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique_pos	40	0.4.1.0.2.1.0.0.2.0	synth with cache (only 1: intros; only 1: destruct (Private_NZDiv.div_mod_unique b q (a / b) r (a mod b)); only 1: auto; only 1: left; only 1: apply mod_pos_bound; only 1: intuition order; only 1: rewrite <- div_mod; only 1: order; only 1: intuition order; only 1: auto).	14.0018508434	20783
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique_neg	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply mod_unique with q; only 1: auto; only 1: auto).	0.0379729270935	4
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_bound_or	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.opp_mod_bound_or	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_r_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_r_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_r_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_r_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign_mul	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_same	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_same	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_small	40	0.0.0.0.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique with a; only 1: auto; only 1: intuition; only 1: now nzsimpl).	1.23629498482	713
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_small	40	0.0.0.1.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 0; only 1: auto; only 1: intuition; only 1: now nzsimpl).	0.353896141052	299
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_0_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_0_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_1_r	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_1_r	40	1.0.0.0.0.1.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: left; only 1: split; only 1: order; only 1: apply lt_0_1; only 1: now nzsimpl).	0.506822109222	647
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_1_l	40	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.0292949676514	5
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_1_l	40	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.0299949645996	5
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_mul	40	0.0.0.0.0.0.0.0.0.0.0.0.3.2.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: destruct (lt_ge_cases 0 b); only 1: left; only 1: split; only 1: order; only 1: trivial; only 1: right; only 1: split; only 1: intuition; only 1: order; only 1: order; only 1: nzsimpl; only 1: apply mul_comm).	5.00961399078	6897
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique_exact	40	0.0.0.2.0.0.0.0.0.66	synth with cache (only 1: intros LT EQ; only 1: apply Private_NZDiv.div_unique with 0; only 1: destruct (lt_ge_cases 0 b); only 1: left; only 1: now try split; only 1: right; only 1: intuition; only 1: order; only 1: nzsimpl; only 1: now try split).	1.15862393379	1353
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_le	40	0.0.1.0	synth with cache (only 1: intros; only 1: apply mod_le; only 1: order; only 1: trivial).	0.114588975906	59
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_pos	40	0.0.0.1.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite (mul_le_mono_pos_l _ _ b); only 1: nzsimpl; only 1: rewrite (add_le_mono_r _ _ (a mod b)); only 1: rewrite <- div_mod by order; only 1: nzsimpl; only 1: apply Private_NZDiv.mod_le; only 1: order; only 1: trivial; only 1: trivial).	1.05570793152	516
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_str_pos	40	0.1.0	synth with cache (only 1: intros a b (Hb, Hab); only 1: apply div_str_pos; only 1: auto).	0.220468997955	120
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_lt	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: assert (0 < b) by (apply lt_trans with 1; auto using lt_0_1); only 1: destruct (lt_ge_cases a b); only 1: rewrite Private_NZDiv.div_small; only 1: order; only 1: split; only 1: order; only 1: order; only 1: rewrite (div_mod a b)  at 2 by order; only 1: apply lt_le_trans with (b * (a / b)); only 1: rewrite <- (mul_1_l (a / b))  at 1; only 1: rewrite <- mul_lt_mono_pos_r; only 1: auto; only 1: apply Private_NZDiv.div_str_pos; only 1: auto; only 1: rewrite <- (add_0_r (b * (a / b)))  at 1; only 1: rewrite <- add_le_mono_l; only 1: destruct (mod_bound_pos a b); only 1: order; only 1: order; only 1: order).	8.45094799995	13089
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_mono	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_div_le	40	0.0.1.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite (add_le_mono_r _ _ (a mod b)), <- div_mod by order; only 1: rewrite <- (add_0_r a)  at 1; only 1: rewrite <- add_le_mono_l; only 1: destruct (mod_pos_bound a b); only 1: order; only 1: trivial).	0.472390174866	292
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_div_ge	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_succ_div_gt	40	1.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite mul_succ_r; only 1: rewrite <- add_lt_mono_l; only 1: now destruct (mod_pos_bound a b)).	0.117079973221	44
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_succ_div_lt	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_exact	40	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite <- (add_0_r (b * (a / b)))  at 2; only 1: apply add_cancel_l).	0.0411598682404	4
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_lt_upper_bound	40	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite (mul_lt_mono_pos_l b) by order; only 1: apply le_lt_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: auto; only 1: auto).	0.0384509563446	6
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_upper_bound	40	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite (mul_le_mono_pos_l _ _ b) by order; only 1: apply le_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: auto; only 1: auto).	0.040139913559	6
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_lower_bound	40	1.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- (div_mul q b) by order; only 1: apply div_le_mono; only 1: trivial; only 1: now rewrite mul_comm).	0.0493729114532	6
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_compat_l	40	0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0	synth with cache (only 1: intros p q r Hp (Hq, Hqr); only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite (div_mod p r)  at 2 by order; only 1: apply le_trans with (r * (p / r)); only 1: apply mul_le_mono_nonneg_r; only 1: apply Private_NZDiv.div_pos; only 1: order; only 1: order; only 1: order; only 1: rewrite <- (add_0_r (r * (p / r)))  at 1; only 1: rewrite <- add_le_mono_l; only 1: destruct (mod_bound_pos p r); only 1: order; only 1: order; only 1: order).	0.674829959869	628
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_add	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_add	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_add_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul_cancel_r	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul_cancel_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_distr_l	40	0.1.0.0.65.0.1.0.0.1.0	synth with cache (only 1: intros; only 1: rewrite <- (add_cancel_l _ _ (c * b * (c * a / (c * b)))); only 1: rewrite <- div_mod; only 1: rewrite Private_NZDiv.div_mul_cancel_l; only 1: rewrite <- mul_assoc, <- mul_add_distr_l, mul_cancel_l by order; only 1: rewrite (div_mod a b)  at 1 by order; only 1: intuition; only 1: tauto; only 1: tauto; only 1: rewrite <- neq_mul_0; only 1: intuition).	3.05862092972	3301
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_distr_r	40	1.2.0	synth with cache (only 1: intros; only 1: rewrite !(mul_comm _ c); only 1: now rewrite Private_NZDiv.mul_mod_distr_l).	0.698451042175	313
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_mod	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_idemp_r	40	0.0.1.0.2	synth with cache (only 1: intros a b c; only 1: intros; only 1: rewrite !(mul_comm a); only 1: apply Private_NZDiv.mul_mod_idemp_l; only 1: order).	1.81290006638	1768
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod	40	1.1.2.0.0.0	synth with cache (only 1: intros; only 1: rewrite Private_NZDiv.mul_mod_idemp_l, Private_NZDiv.mul_mod_idemp_r; only 1: rewrite !(mul_comm a); only 1: now rewrite mul_comm; only 1: order; only 1: order).	1.22158193588	1415
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod_idemp_r	40	0.1.0.1.2	synth with cache (only 1: intros a b c; only 1: intros; only 1: rewrite !(add_comm a); only 1: apply Private_NZDiv.add_mod_idemp_l; only 1: order).	7.90750193596	10876
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod	40	0.0.0.0.64.0.0.257	synth with cache (only 1: compute; only 1: intros; only 1: rewrite Private_NZDiv.add_mod_idemp_l, Private_NZDiv.add_mod_idemp_r; only 1: now nzsimpl; only 1: intro H1; only 1: tauto; only 1: intro H1; only 1: tauto).	0.586809158325	413
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_div	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.rem_mul_r	40	1.0.0.0.2.0.0.0.448	synth with cache (only 1: Tactics.program_simpl; only 1: apply add_cancel_l with (b * c * (a / (b * c))); only 1: rewrite <- div_mod by (apply neq_mul_0; split; order); only 1: rewrite <- Private_NZDiv.div_div by trivial; only 1: rewrite add_assoc, add_shuffle0, <- mul_assoc, <- mul_add_distr_l; only 1: rewrite <- div_mod by order; only 1: symmetry; only 1: symmetry; only 1: now apply div_mod).	5.90697407722	4792
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_div	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul_le	40	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite mul_assoc, (mul_comm b c), <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: auto; only 1: apply Private_NZDiv.mul_div_le; only 1: auto).	0.0674879550934	8
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_pred_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_pred_r	40	3.1.1.0.1.66	synth with cache (only 1: intro RS'; only 1: intro n; only 1: rewrite <- (succ_pred n)  at 2; only 1: rewrite <- (succ_pred n)  at 2; only 1: rewrite <- (succ_pred n)  at 2; only 1: now nzsimpl).	36.0498709679	33557
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_0_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_succ_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_pred_l	40	0.1.0.0	synth with cache (only 1: intros n m; only 1: rewrite <- 2!add_opp_r; only 1: rewrite <- (succ_pred n)  at 2; only 1: now rewrite add_succ_l, pred_succ).	0.0434470176697	5
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_pred_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_pred	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_diag	40	0.1.1.1.1.1	synth with cache (only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: rewrite sub_succ_l; only 1: now nzsimpl).	0.895596981049	990
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_diag_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_diag_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_l	40	65.4.2.1	synth with cache (only 1: intros n m; only 1: rewrite add_comm; only 1: rewrite <- add_opp_r; only 1: now nzsimpl').	7.23308706284	8693
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_sub_assoc	40	0.0.0.1.3.0.0.129	synth with cache (only 1: intro H; only 1: intros n m; only 1: rewrite <- 2!add_opp_r; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	18.365885973	21331
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_involutive	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_add_distr	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_sub_distr	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_inj	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_inj_wd	40	0.0.1.3.2.0.0	synth with cache (only 1: intros n1 n2; only 1: split; only 1: intros; only 1: apply opp_wd in H; only 1: now rewrite 2!opp_involutive in H; only 1: intros; only 1: now f_equiv).	2.04396796227	3351
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.eq_opp_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.eq_opp_r	40	0.0	synth with cache (only 1: intros n m; only 1: now rewrite <- (opp_inj_wd (- n) m), opp_involutive).	0.0254089832306	2
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add_distr	40	0.2.0.0	synth with cache (only 1: intros n m p; only 1: rewrite <- 2!add_opp_r; only 1: rewrite <- add_opp_r, opp_add_distr; only 1: now rewrite add_assoc).	0.421977996826	262
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_sub_distr	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_opp_l	40	1.0.322	synth with cache (only 1: intros Az RS; only 1: rewrite <- 2!add_opp_r; only 1: now rewrite add_comm).	0.358527183533	370
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_opp_r	40	0.0.0	synth with cache (only 1: intros n m; only 1: rewrite <- add_opp_r; only 1: now rewrite opp_involutive).	0.031571149826	3
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_sub_swap	40	0.1.0.0	synth with cache (only 1: intros n m p; only 1: rewrite <- 2!add_opp_r; only 1: rewrite <- 2!add_assoc, add_cancel_l; only 1: now rewrite add_comm).	0.0416719913483	5
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_cancel_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_cancel_r	40	6.0.0.1.3.0	synth with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite pred_inj_wd).	9.42140102386	13813
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_0_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_0_r	40	0.1.0	synth with cache (only 1: intros n m; only 1: rewrite add_comm; only 1: now rewrite add_move_l, sub_0_l).	0.0631999969482	4
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_0_l	40	0.3.0	synth with cache (only 1: intros n m; only 1: rewrite <- (add_opp_r n m); only 1: now rewrite add_move_l, sub_0_l).	0.552584886551	449
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_0_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_simpl_l	40	4.0.64.320.0.0.1.0.1.1	synth with cache (only 1: nzinduct m; only 1: nzsimpl; only 1: rewrite <- add_opp_r; only 1: rewrite add_comm; only 1: now rewrite add_comm, add_opp_r, sub_diag; only 1: intro m; only 1: hnf; only 1: rewrite <- 2!add_opp_r; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	3.17366099358	3169
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_simpl_r	40	0.2.0	synth with cache (only 1: intros; only 1: rewrite add_comm; only 1: now rewrite add_sub_swap, sub_diag, add_0_l).	0.299425125122	140
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_simpl_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_simpl_r	40	1.2.0.2	synth with cache (only 1: nzinduct m; only 1: now nzsimpl; only 1: intro; only 1: now do 2 rewrite <- sub_sub_distr, sub_diag, sub_0_r).	0.839482069016	966
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add	40	0.0	synth with cache (only 1: intros; only 1: now rewrite <- sub_sub_distr, sub_diag, sub_0_r).	0.0287508964539	2
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_l_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_l_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_r_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_r_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add_simpl_r_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add_simpl_r_r	40	0.0.0.0.68.0.133	synth with cache (only 1: intro H; only 1: intros; only 1: nzinduct p m; only 1: now rewrite <- sub_sub_distr, sub_add_distr, sub_diag, sub_0_l, sub_opp_r; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	39.6738250256	40202
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_eq	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mod_unique	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_unique	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_unique	40	0.1.1.0.2.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros a b q r Hr EQ; only 1: assert (Hb : b ~= 0); only 1: pos_or_neg b; only 1: rewrite abs_eq in Hr; only 1: intuition; only 1: order; only 1: intuition; only 1: rewrite <- opp_0, eq_opp_r; only 1: rewrite abs_neq' in Hr; only 1: intuition; only 1: order; only 1: intuition; only 1: order; only 1: destruct (div_mod_unique b q (a / b) r (a mod b)); only 1: trivial; only 1: now apply mod_always_pos; only 1: now rewrite <- div_mod; only 1: trivial).	1.44344997406	1103
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_opp_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_opp_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_opp_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_opp_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_same	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_same	40	0.0.0.0.3.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 1; only 1: split; only 1: order; only 1: now rewrite abs_pos; only 1: now nzsimpl).	1.70080208778	2320
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_small	40	0.2.3.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: intuition; only 1: apply div_small; only 1: intuition).	14.5453429222	26318
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_small	40	0.2.2.0	synth with cache (only 1: intros; only 1: intuition; only 1: apply mod_small; only 1: intuition).	1.77667188644	2252
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_0_l	40	0.0.0.0.0.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique with 0; only 1: split; only 1: order; only 1: now rewrite abs_pos; only 1: now nzsimpl).	0.21585893631	199
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_0_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_1_r	40	1.0.0.0.0.67.3.2.64	synth with cache (only 1: intros EQ; only 1: symmetry; only 1: apply div_unique with 0; only 1: rewrite abs_eq; only 1: split; only 1: order; only 1: apply lt_0_1; only 1: apply le_0_1; only 1: now nzsimpl).	13.2644619942	28472
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_1_r	40	1.0.0.0.0.0.1.3	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: pose proof lt_0_1 as H; only 1: rewrite abs_pos; only 1: intuition; only 1: order; only 1: now nzsimpl).	0.784018039703	865
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_1_l	40	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.0263819694519	5
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_1_l	40	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.0278880596161	5
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mul	40	0.0.0.0.0.1.256.0	synth with cache (only 1: intros; only 1: apply (symmetry (x:=_)); only 1: apply Private_NZDiv.mod_unique with a; only 1: split; only 1: order; only 1: now rewrite abs_pos; only 1: nzsimpl; only 1: apply mul_comm).	1.0040500164	596
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_unique_exact	40	0.0.0.0.0.0.0.0.0.1.0.1.256	synth with cache (only 1: firstorder; only 1: apply Private_NZDiv.div_unique with 0; only 1: split; only 1: now try split; only 1: pos_or_neg b; only 1: rewrite abs_eq; only 1: order; only 1: order; only 1: rewrite abs_neq'; only 1: order; only 1: order; only 1: nzsimpl; only 1: now try split).	1.04874801636	872
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_le	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_pos	40	0.0.0.1.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite (mul_le_mono_pos_l _ _ b); only 1: nzsimpl; only 1: rewrite (add_le_mono_r _ _ (a mod b)); only 1: rewrite <- div_mod by order; only 1: nzsimpl; only 1: apply Private_NZDiv.mod_le; only 1: order; only 1: order; only 1: trivial).	1.18993592262	746
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_str_pos	40	0.1.0	synth with cache (only 1: intros a b (Hb, Hab); only 1: apply div_str_pos; only 1: auto).	0.336455106735	196
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_lt	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: assert (0 < b) by (apply lt_trans with 1; auto using lt_0_1); only 1: destruct (lt_ge_cases a b); only 1: rewrite Private_NZDiv.div_small; only 1: order; only 1: split; only 1: order; only 1: order; only 1: rewrite (div_mod a b)  at 2 by order; only 1: apply lt_le_trans with (b * (a / b)); only 1: rewrite <- (mul_1_l (a / b))  at 1; only 1: rewrite <- mul_lt_mono_pos_r; only 1: auto; only 1: apply Private_NZDiv.div_str_pos; only 1: auto; only 1: rewrite <- (add_0_r (b * (a / b)))  at 1; only 1: rewrite <- add_le_mono_l; only 1: destruct (mod_bound_pos a b); only 1: order; only 1: order; only 1: order).	2.89222002029	2034
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_mono	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_div_le	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_succ_div_gt	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_pred_div_gt	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_exact	40	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite <- (add_0_r (b * (a / b)))  at 2; only 1: apply add_cancel_l).	0.0388379096985	4
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_lt_upper_bound	40	0.2.1.0.0.0	synth with cache (only 1: intros; only 1: rewrite (mul_lt_mono_pos_l b) by order; only 1: apply le_lt_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: order; only 1: auto).	0.903311014175	775
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_upper_bound	40	0.0.1.0.0.0	synth with cache (only 1: intros; only 1: rewrite (mul_le_mono_pos_l _ _ b) by order; only 1: apply le_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: order; only 1: auto).	0.25612282753	170
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_lower_bound	40	1.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- (div_mul q b) by order; only 1: apply div_le_mono; only 1: trivial; only 1: now rewrite mul_comm).	0.0525300502777	6
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_compat_l	40	0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0	synth with cache (only 1: intros p q r Hp (Hq, Hqr); only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite (div_mod p r)  at 2 by order; only 1: apply le_trans with (r * (p / r)); only 1: apply mul_le_mono_nonneg_r; only 1: apply Private_NZDiv.div_pos; only 1: order; only 1: order; only 1: order; only 1: rewrite <- (add_0_r (r * (p / r)))  at 1; only 1: rewrite <- add_le_mono_l; only 1: destruct (mod_bound_pos p r); only 1: order; only 1: order; only 1: order).	0.968492031097	1013
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_add	40	0.0.0.1.0.0.0.0.0.0.0.1	synth with cache (only 1: intros; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with (a / c + b); only 1: now apply mod_always_pos; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	0.627310037613	523
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_add	40	0.1.0.0.0.0.0.69.0	synth with cache (only 1: intros; only 1: destruct (mod_always_pos a c); only 1: trivial; only 1: apply (mul_cancel_l _ _ c); only 1: order; only 1: apply (add_cancel_r _ _ ((a + b * c) mod c)); only 1: rewrite <- div_mod, Private_NZDiv.mod_add by order; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	27.5957319736	37917
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_add_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_cancel_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_cancel_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_distr_l	40	0.0.1.0.0.0.1.0.0.0.0.64.0	synth with cache (only 1: intros; only 1: destruct (mod_always_pos a c); only 1: order; only 1: rewrite <- (add_cancel_l _ _ (c * b * (c * a / (c * b)))); only 1: rewrite <- div_mod; only 1: rewrite Private_NZDiv.div_mul_cancel_l; only 1: rewrite <- mul_assoc, <- mul_add_distr_l, mul_cancel_l by order; only 1: now apply div_mod; only 1: order; only 1: order; only 1: rewrite <- neq_mul_0; only 1: intuition; only 1: order).	5.51712918282	3392
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_distr_r	40	1.2.0	synth with cache (only 1: intros; only 1: rewrite !(mul_comm _ c); only 1: now rewrite Private_NZDiv.mul_mod_distr_l).	0.427304983139	209
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mod	40	64.4.0.66.4.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 0; only 1: now apply mod_always_pos; only 1: nzsimpl; only 1: order').	20.703245163	44976
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_idemp_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod	40	0.0.0.0.64.2	synth with cache (only 1: intros a b c; only 1: intro; only 1: rewrite Private_NZDiv.mul_mod_idemp_l, Private_NZDiv.mul_mod_idemp_r; only 1: now rewrite mul_comm; only 1: order; only 1: order).	0.938192129135	884
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.add_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.add_mod_idemp_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.add_mod	40	0.0.0.0.1.0.192.257.192.128	synth with cache (only 1: intros a b; only 1: intro n; only 1: compute; only 1: intro; only 1: rewrite Private_NZDiv.add_mod_idemp_l, Private_NZDiv.add_mod_idemp_r; only 1: reflexivity; only 1: intro H1; only 1: order; only 1: intro H1; only 1: order).	2.24305319786	2710
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_div	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mul_r	40	0.0.0.2.0.0.0.0	synth with cache (only 1: intros a b c Hb Hc; only 1: apply add_cancel_l with (b * c * (a / (b * c))); only 1: rewrite <- div_mod by (apply neq_mul_0; split; order); only 1: rewrite <- Private_NZDiv.div_div by trivial; only 1: rewrite add_assoc, add_shuffle0, <- mul_assoc, <- mul_add_distr_l; only 1: rewrite <- div_mod by order; only 1: apply div_mod; only 1: order).	33.4287359715	35884
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_div	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_le	40	0.1.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite mul_assoc, (mul_comm b c), <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: auto; only 1: apply Private_NZDiv.mul_div_le; only 1: order).	0.73495388031	516
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_divides	40
Coq.Numbers.Integer.Binary.ZBinary.TestOrder.test	40	0	synth with cache (only 1: BinInt.Z.order).	0.0206201076508	1
Coq.Numbers.Cyclic.Int31.Ring31.Int31_canonic	40
Coq.Numbers.Cyclic.Int31.Ring31.ring_theory_switch_eq	40	193.128.65	synth with cache (only 1: intros n m Hn; only 1: intros l1 l2 Eq x; only 1: CRelationClasses.simpl_crelation).	0.430624008179	62
Coq.Numbers.Cyclic.Int31.Ring31.Int31Ring	40
Coq.Numbers.Cyclic.Int31.Ring31.eqb31_eq	40
Coq.Numbers.Cyclic.Int31.Ring31.eqb31_correct	40
Coq.Numbers.Cyclic.Int31.Ring31.TestRing.test	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.iszero_eq0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.iszero_not_eq0	40	642.66	synth with cache (only 1: intros a Ha; only 1: CRelationClasses.simpl_crelation).	0.538192987442	308
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.sneakl_shiftr	40	1.1.4	synth with cache (only 1: destruct x; only 1: simpl; only 1: split).	0.454718112946	453
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.sneakr_shiftl	40	66	synth with cache (only 1: now destruct x).	0.0599858760834	52
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.twice_zero	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.twice_or_twice_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_S	40	0.0	synth with cache (only 1: intros n m; only 1: now simpl).	0.0309479236603	2
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_S_tail	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_n_0	40	256.1.134.0.0.0.0.0.1	synth with cache (only 1: intros n; only 1: elim n; only 1: simpl; only 1: reflexivity; only 1: intros; only 1: simpl in *; only 1: rewrite H; only 1: simpl in *; only 1: tauto).	29.5982689857	24034
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_size	40	1.0	synth with cache (only 1: destruct x; only 1: trivial).	0.0363731384277	3
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_above_size	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftl_S	40	0	synth with cache (only 1: reflexivity).	0.0203580856323	1
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftl_S_tail	40	129.705.129.3.0.128	synth with cache (only 1: induction n as [| n IH]; only 1: trivial; only 1: simpl; only 1: intuition; only 1: Morphisms.f_equiv; only 1: eauto).	7.66522598267	5188
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftl_n_0	40	0.0.2.0.0.196.0.0.0	synth with cache (only 1: induction n; only 1: auto; only 1: simpl; only 1: destruct n; only 1: rewrite IHn; only 1: auto; only 1: simpl in *; only 1: rewrite IHn; only 1: auto).	2.68411803246	1858
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftl_size	40	1	synth with cache (only 1: now intros []).	0.316318035126	35
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftl_above_size	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.firstr_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.firstl_firstr	40	0.0.0	synth with cache (only 1: destruct x; only 1: simpl; only 1: auto).	0.0399649143219	3
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_predsize_0_firstl	40	449.66.0	synth with cache (only 1: destruct x; only 1: intros n'; only 1: Tactics.program_simpl).	2.55180001259	321
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_0_propagates	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_0_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.int31_ind_sneakl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.int31_ind_twice	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recr_aux_eqn	40	4.260.1	synth with cache (only 1: intros; only 1: Bool.destr_bool; only 1: now rewrite H).	6.17814898491	9342
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recr_aux_converges	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recr_eqn	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recrbis_aux_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recrbis_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Incr.incrbis_aux_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Incr.incr_eqn1	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Incr.incr_eqn2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Incr.incr_twice	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Incr.incr_twice_plus_one_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Phi.phibis_aux_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Phi.phi_eqn1	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Phi.phi_eqn2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Phi.phi_twice_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Phi.phi_twice_plus_one_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phibis_aux_pos	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phibis_aux_bounded	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_nonneg	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_bounded	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phibis_aux_lowerbound	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_lowerbound	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_zero	40	64.0	synth with cache (only 1: intros; only 1: tauto).	0.0903480052948	43
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_size	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_le	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_firstr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_twice	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.i2l_length	40	192.130	synth with cache (only 1: intros s1; only 1: tauto).	0.0432028770447	15
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.l2i_i2l	40	2.0	synth with cache (only 1: intro n; only 1: now destruct n).	0.0338079929352	4
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.i2l_sneakr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.i2l_sneakl	40	1.0.0.3	synth with cache (only 1: intros l l'; only 1: destruct l; only 1: simpl; only 1: auto).	11.5018529892	769
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.i2l_l2i	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.i2l_nshiftl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_i2l	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_twice_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_shiftr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_incrbis	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_incr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.incr_twice_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.incr_firstr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.incr_inv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_inv_double_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_inv_double	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_inv_incr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_inv_phi_aux	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_inv_phi	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.p2ibis_bounded	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.p2ibis_spec	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_inv_positive_p2ibis	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_phi_inv_positive	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.double_twice_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.double_twice_plus_one_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.p2i_p2ibis	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.positive_to_int31_phi_inv_positive	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.positive_to_int31_spec	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_twice	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_twice_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_incr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_phi_inv_negative	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_phi_inv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.wB_pos	40	0	synth with cache (only 1: auto with zarith).	0.0237529277802	1
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_zdigits	40	384	synth with cache (only 1: trivial using Pos2Nat.inj_mul).	0.170602083206	25
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_more_than_1_digit	40	70	synth with cache (only 1: now Z.nzsimpl').	0.330975055695	359
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_0	40	129	synth with cache (only 1: auto with zarith).	0.0239291191101	10
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_1	40	0	synth with cache (only 1: reflexivity).	0.0208909511566	1
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_m1	40	1.0	synth with cache (only 1: simpl; only 1: trivial).	0.0437321662903	3
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_compare	40	1	synth with cache (only 1: trivial).	0.025395154953	2
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_add_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_succ_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_add_carry_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_add	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_add_carry	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_succ	40	0.0	synth with cache (only 1: intros; only 1: apply phi_phi_inv).	0.0351729393005	2
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_sub_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_sub_carry_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_sub	40	0.0	synth with cache (only 1: intros; only 1: apply phi_phi_inv).	0.0298209190369	2
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_sub_carry	40	0.0.4.1	synth with cache (only 1: intros; only 1: unfold sub31carryc, sub31, interp_carry; only 1: repeat rewrite phi_phi_inv; only 1: apply Zplus_mod_idemp_l).	12.5241510868	845
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_opp_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_opp	40	0.0	synth with cache (only 1: intros; only 1: apply phi_phi_inv).	0.0330541133881	2
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_opp_carry	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_pred_c	40	0.0	synth with cache (only 1: intros; only 1: apply spec_sub_c).	0.0320692062378	2
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_pred	40	1.0.0	synth with cache (only 1: intros; only 1: rewrite <- spec_1; only 1: apply phi_phi_inv).	0.0775060653687	4
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.phi2_phi_inv2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_mul_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_mul	40	0.0	synth with cache (only 1: intros; only 1: apply phi_phi_inv).	0.0347862243652	2
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_square_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_div21	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_div	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_mod	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.phi_gcd	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_gcd	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.iter_int31_iter_nat	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.addmuldiv31_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_add_mul_div	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.shift_unshift_mod_2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_pos_mod	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_head00	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.head031_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.phi_nz	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_head0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_tail00	40	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (phi_inv_phi x); only 1: rewrite H; only 1: simpl phi_inv; only 1: intros H'; only 1: rewrite <- H'; only 1: auto).	0.0633151531219	7
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.tail031_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_tail0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.quotient_by_2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt_main_trick	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt_main	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt_init	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt_test_true	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt_test_false	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt31_step_def	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.div31_phi	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt31_step_correct	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.iter31_sqrt_correct	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_sqrt	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt312_step_def	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt312_lower_bound	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.div312_phi	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt312_step_correct	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.iter312_sqrt_correct	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_sqrt2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_eq0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_is_even	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.log2_phi_bounded	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_lor	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_land	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_lxor	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_more_than_1_digit	40	132	synth with cache (only 1: lia).	0.323738098145	305
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.wB_pos	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_to_Z_1	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_to_Z_2	40	0.0.0.0	synth with cache (only 1: unfold to_Z; only 1: intros; only 1: destruct (Z_mod_lt x wB wB_pos); only 1: auto).	0.0430369377136	4
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_to_Z	40	0.0.1	synth with cache (only 1: intros; only 1: unfold wB, base; only 1: auto with zarith).	0.161263942719	70
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_of_pos	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_zdigits	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_0	40	0.1.0.0.0.0	synth with cache (only 1: unfold to_Z, zdigits; only 1: apply Zmod_small; only 1: unfold wB, base; only 1: split; only 1: auto with zarith; only 1: auto with zarith).	0.0584571361542	7
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_1	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_Bm1	40	0.2.0.0	synth with cache (only 1: unfold to_Z, one; only 1: apply Zmod_small; only 1: generalize wB_pos; only 1: lia).	0.753915071487	624
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_compare	40	192.0	synth with cache (only 1: unfold to_Z, minus_one; only 1: reflexivity).	0.0611891746521	11
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_eq0	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_opp_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_opp	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_opp_carry	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.Zmod_equal	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_succ_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_add_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_add_carry_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_succ	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_add	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_add_carry	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_pred_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_sub_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_sub_carry_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_pred	40	1.3.0.0	synth with cache (only 1: intros; only 1: unfold succ, to_Z, Z.succ; only 1: symmetry; only 1: apply Zplus_mod_idemp_l).	0.705765008926	644
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_sub	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_sub_carry	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_mul_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_mul	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_square_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_div	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_div_gt	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_modulo	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_modulo_gt	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.Zgcd_bound	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_gcd	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_gcd_gt	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_div21	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_add_mul_div	40	577.1.0.0	synth with cache (only 1: intros; only 1: unfold add_carry, to_Z; only 1: symmetry; only 1: exact eq_refl).	0.100877046585	37
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_pos_mod	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_is_even	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_sqrt	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_sqrt2	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.two_p_power2	40	0.1.0.0.0	synth with cache (only 1: intros; only 1: destruct x; only 1: auto using Z.lt_gt with zarith; only 1: apply two_power_pos_equiv; only 1: trivial).	0.0626211166382	6
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_head00	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_head0	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.Ptail_pos	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.Ptail_bounded	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_tail00	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_tail0	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_lor	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_land	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_lxor	40
Coq.Numbers.Cyclic.Int63.Cyclic63.is_zero_spec_aux	40
Coq.Numbers.Cyclic.Int63.Cyclic63.positive_to_int_spec	40
Coq.Numbers.Cyclic.Int63.Cyclic63.mulc_WW_spec	40
Coq.Numbers.Cyclic.Int63.Cyclic63.diveucl_spec_aux	40
Coq.Numbers.Cyclic.Int63.Cyclic63.shift_unshift_mod_2	40
Coq.Numbers.Cyclic.Int63.Cyclic63.div_le_0	40
Coq.Numbers.Cyclic.Int63.Cyclic63.div_lt	40
Coq.Numbers.Cyclic.Int63.Cyclic63.P	40	0	synth with cache (only 1: RelationClasses.simpl_relation).	0.0240499973297	1
Coq.Numbers.Cyclic.Int63.Cyclic63.shift_unshift_mod_3	40	0.0.1.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros n p a H; only 1: rewrite Zmod_eq by auto with zarith; only 1: unfold Z.sub at 1; only 1: rewrite Z_div_plus_full_l by auto with zarith; only 1: replace (2 ^ n) with (2 ^ (n - p) * 2 ^ p) by (rewrite <- Zpower_exp; [ f_equal |  |  ]; lia); only 1: rewrite <- Zdiv_Zdiv, Z_div_mult by auto with zarith; only 1: rewrite (Z.mul_comm (2 ^ (n - p))), Z.mul_assoc; only 1: rewrite Zopp_mult_distr_l; only 1: rewrite Z_div_mult by auto with zarith; only 1: symmetry; only 1: apply Zmod_eq; only 1: auto with zarith).	3.73979306221	712
Coq.Numbers.Cyclic.Int63.Cyclic63.pos_mod_spec	40
Coq.Numbers.Cyclic.Int63.Int63.to_Z_rec_bounded	40
Coq.Numbers.Cyclic.Int63.Int63.to_Z_bounded	40
Coq.Numbers.Cyclic.Int63.Int63.Z_lt_div2	40
Coq.Numbers.Cyclic.Int63.Int63.Zmod_le_first	40
Coq.Numbers.Cyclic.Int63.Int63.Zmod_distr	40
Coq.Numbers.Cyclic.Int63.Int63.pow2_pos	40	0.5.0	synth with cache (only 1: intros; only 1: apply Z.lt_gt; only 1: Z.order_pos).	0.87852191925	812
Coq.Numbers.Cyclic.Int63.Int63.pow2_nz	40	0.0	synth with cache (only 1: intros LT; only 1: Z.order_nz).	0.0413858890533	2
Coq.Numbers.Cyclic.Int63.Int63.wB_diff_0	40	322	synth with cache (only 1: now Nat.nzsimpl).	0.186026096344	53
Coq.Numbers.Cyclic.Int63.Int63.wB_pos	40	385.257	synth with cache (only 1: repeat red; only 1: tauto).	0.0381700992584	32
Coq.Numbers.Cyclic.Int63.Int63.to_Z_0	40	0	synth with cache (only 1: tauto).	0.0245959758759	1
Coq.Numbers.Cyclic.Int63.Int63.to_Z_1	40	0	synth with cache (only 1: trivial).	0.0226149559021	1
Coq.Numbers.Cyclic.Int63.Int63.can_inj	40	267	synth with cache (only 1: congruence).	1.09654116631	1419
Coq.Numbers.Cyclic.Int63.Int63.to_Z_inj	40
Coq.Numbers.Cyclic.Int63.Int63.eqb_complete	40
Coq.Numbers.Cyclic.Int63.Int63.eqb_spec	40
Coq.Numbers.Cyclic.Int63.Int63.eqb_false_spec	40
Coq.Numbers.Cyclic.Int63.Int63.eqb_false_complete	40	0.0.2	synth with cache (only 1: intros x y; only 1: rewrite <- not_true_iff_false, eqb_spec; only 1: trivial).	0.319430112839	237
Coq.Numbers.Cyclic.Int63.Int63.eqb_false_correct	40	0.0.0	synth with cache (only 1: intros x y; only 1: rewrite eqb_false_spec; only 1: trivial).	0.0417718887329	3
Coq.Numbers.Cyclic.Int63.Int63.eq_dec	40
Coq.Numbers.Cyclic.Int63.Int63.cast_refl	40
Coq.Numbers.Cyclic.Int63.Int63.cast_diff	40
Coq.Numbers.Cyclic.Int63.Int63.eqo_refl	40
Coq.Numbers.Cyclic.Int63.Int63.eqo_diff	40
Coq.Numbers.Cyclic.Int63.Int63.eqbP	40
Coq.Numbers.Cyclic.Int63.Int63.ltbP	40
Coq.Numbers.Cyclic.Int63.Int63.lebP	40
Coq.Numbers.Cyclic.Int63.Int63.compare_spec	40
Coq.Numbers.Cyclic.Int63.Int63.is_zero_spec	40	0.256.1.0.5	synth with cache (only 1: split; only 1: auto using eqb_correct, eqb_complete; only 1: destr_bool; only 1: <Coq.Strings.String.t_eqb>; only 1: reflexivity).	18.2139861584	53640
Coq.Numbers.Cyclic.Int63.Int63.diveucl_spec	40
Coq.Numbers.Cyclic.Int63.Int63.addc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.succ_spec	40
Coq.Numbers.Cyclic.Int63.Int63.succc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.addcarry_spec	40
Coq.Numbers.Cyclic.Int63.Int63.addcarryc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.subc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.pred_spec	40
Coq.Numbers.Cyclic.Int63.Int63.predc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.oppc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.opp_spec	40	1	synth with cache (only 1: apply sub_spec).	0.0434010028839	2
Coq.Numbers.Cyclic.Int63.Int63.oppcarry_spec	40
Coq.Numbers.Cyclic.Int63.Int63.subcarry_spec	40
Coq.Numbers.Cyclic.Int63.Int63.subcarryc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.to_Z_gcd	40
Coq.Numbers.Cyclic.Int63.Int63.gcd_spec	40
Coq.Numbers.Cyclic.Int63.Int63.head00_spec	40
Coq.Numbers.Cyclic.Int63.Int63.tail00_spec	40	0	synth with cache (only 1: now intros h; rewrite (to_Z_inj _ 0 h)).	0.0241198539734	1
Coq.Numbers.Cyclic.Int63.Int63.eqm_mod	40
Coq.Numbers.Cyclic.Int63.Int63.eqm_sub	40
Coq.Numbers.Cyclic.Int63.Int63.eqmE	40
Coq.Numbers.Cyclic.Int63.Int63.eqm_subE	40
Coq.Numbers.Cyclic.Int63.Int63.int_eqm	40	1.3	synth with cache (only 1: intro H0; only 1: now subst).	13.2643208504	334
Coq.Numbers.Cyclic.Int63.Int63.eqmI	40
Coq.Numbers.Cyclic.Int63.Int63.add_assoc	40
Coq.Numbers.Cyclic.Int63.Int63.add_comm	40
Coq.Numbers.Cyclic.Int63.Int63.add_le_r	40
Coq.Numbers.Cyclic.Int63.Int63.add_cancel_l	40
Coq.Numbers.Cyclic.Int63.Int63.add_cancel_r	40	0.0.0.0.0.0.0	synth with cache (only 1: intros h; only 1: apply int_eqm in h; only 1: rewrite !add_spec in h; only 1: apply eqm_mod, eqm_sub in h; only 1: replace (_ + _ - _) with (φ (y) - φ (z)) in h by lia; only 1: rewrite <- eqm_subE in h; only 1: apply eqmI, h).	0.078989982605	7
Coq.Numbers.Cyclic.Int63.Int63.lsr0	40
Coq.Numbers.Cyclic.Int63.Int63.lsr_0_r	40	194.0.0	synth with cache (only 1: apply to_Z_inj; only 1: rewrite lsr_spec; only 1: intuition).	0.0428018569946	14
Coq.Numbers.Cyclic.Int63.Int63.lsr_1	40
Coq.Numbers.Cyclic.Int63.Int63.lsr_add	40
Coq.Numbers.Cyclic.Int63.Int63.lsl0	40
Coq.Numbers.Cyclic.Int63.Int63.lsl0_r	40
Coq.Numbers.Cyclic.Int63.Int63.lsl_add_distr	40
Coq.Numbers.Cyclic.Int63.Int63.lsr_M_r	40
Coq.Numbers.Cyclic.Int63.Int63.bit_0_spec	40
Coq.Numbers.Cyclic.Int63.Int63.bit_split	40
Coq.Numbers.Cyclic.Int63.Int63.bit_lsr	40
Coq.Numbers.Cyclic.Int63.Int63.bit_b2i	40
Coq.Numbers.Cyclic.Int63.Int63.bit_1	40
Coq.Numbers.Cyclic.Int63.Int63.to_Z_split	40
Coq.Numbers.Cyclic.Int63.Int63.bit_M	40
Coq.Numbers.Cyclic.Int63.Int63.bit_half	40
Coq.Numbers.Cyclic.Int63.Int63.bit_ext	40
Coq.Numbers.Cyclic.Int63.Int63.bit_lsl	40
Coq.Numbers.Cyclic.Int63.Int63.lor_lsr	40
Coq.Numbers.Cyclic.Int63.Int63.lor_le	40
Coq.Numbers.Cyclic.Int63.Int63.bit_0	40
Coq.Numbers.Cyclic.Int63.Int63.bit_add_or	40
Coq.Numbers.Cyclic.Int63.Int63.addmuldiv_spec	40
Coq.Numbers.Cyclic.Int63.Int63.is_even_bit	40
Coq.Numbers.Cyclic.Int63.Int63.is_even_spec	40
Coq.Numbers.Cyclic.Int63.Int63.is_even_0	40	65	synth with cache (only 1: now constructor).	0.0233280658722	6
Coq.Numbers.Cyclic.Int63.Int63.is_even_lsl_1	40
Coq.Numbers.Cyclic.Int63.Int63.quotient_by_2	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_main_trick	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_main	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_test_false	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_test_true	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_step_correct	40
Coq.Numbers.Cyclic.Int63.Int63.iter_sqrt_correct	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_init	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_spec	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt2_step_def	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt2_lower_bound	40
Coq.Numbers.Cyclic.Int63.Int63.diveucl_21_spec_aux	40
Coq.Numbers.Cyclic.Int63.Int63.div2_phi	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt2_step_correct	40
Coq.Numbers.Cyclic.Int63.Int63.iter2_sqrt_correct	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt2_spec	40
Coq.Numbers.Cyclic.Int63.Int63.of_pos_rec_spec	40
Coq.Numbers.Cyclic.Int63.Int63.is_int	40
Coq.Numbers.Cyclic.Int63.Int63.of_Z_spec	40
Coq.Numbers.Cyclic.Int63.Int63.negbE	40	0.1.256.6.2	synth with cache (only 1: intros H2; only 1: apply eq_true_iff_eq; only 1: destr_bool; only 1: intuition; only 1: intuition).	1.2309961319	3210
Coq.Numbers.Cyclic.Int63.Int63.Z_oddE	40	0.1	synth with cache (only 1: rewrite Zmod_odd; only 1: now destruct Z.odd).	0.0524230003357	3
Coq.Numbers.Cyclic.Int63.Int63.Z_evenE	40	0.0	synth with cache (only 1: rewrite Zmod_even; only 1: now destruct Z.even).	0.0356111526489	2
Coq.Numbers.Cyclic.Int63.Int63.is_zeroE	40
Coq.Numbers.Cyclic.Int63.Int63.bitE	40
Coq.Numbers.Cyclic.Int63.Int63.lt_pow_lt_log	40
Coq.Numbers.Cyclic.Int63.Int63.land_spec'	40
Coq.Numbers.Cyclic.Int63.Int63.lor_spec'	40
Coq.Numbers.Cyclic.Int63.Int63.lxor_spec'	40
Coq.Numbers.Cyclic.Int63.Int63.landC	40
Coq.Numbers.Cyclic.Int63.Int63.landA	40
Coq.Numbers.Cyclic.Int63.Int63.land0	40
Coq.Numbers.Cyclic.Int63.Int63.land0_r	40	2.0.0.0	synth with cache (only 1: apply bit_ext; only 1: intros n; only 1: rewrite land_spec, bit_0; only 1: now rewrite andb_false_r).	0.042956829071	6
Coq.Numbers.Cyclic.Int63.Int63.lorC	40
Coq.Numbers.Cyclic.Int63.Int63.lorA	40
Coq.Numbers.Cyclic.Int63.Int63.lor0	40
Coq.Numbers.Cyclic.Int63.Int63.lor0_r	40	2.0.0.0	synth with cache (only 1: apply bit_ext; only 1: intros n; only 1: rewrite lor_spec, bit_0; only 1: now rewrite orb_false_r).	0.0483939647675	6
Coq.Numbers.Cyclic.Int63.Int63.lxorC	40
Coq.Numbers.Cyclic.Int63.Int63.lxorA	40	323.1.64.0	synth with cache (only 1: apply bit_ext; only 1: intro x; only 1: rewrite !lxor_spec, xorb_comm; only 1: ring).	2.64460682869	1245
Coq.Numbers.Cyclic.Int63.Int63.lxor0	40
Coq.Numbers.Cyclic.Int63.Int63.lxor0_r	40
Coq.Numbers.Cyclic.Int63.Ring63.ring_theory_switch_eq	40	1.67.0.64	synth with cache (only 1: intros n m Hn; only 1: intros A B f l; only 1: intros Base Step; only 1: firstorder).	1.88105893135	2082
Coq.Numbers.Cyclic.Int63.Ring63.Int63Ring	40
Coq.Numbers.Cyclic.Int63.Ring63.eq31_correct	40	0.257	synth with cache (only 1: intros a n; only 1: auto using eqb_correct, eqb_complete).	0.080078125	84
Coq.Numbers.Cyclic.Int63.Ring63.TestRing.test	40	582.128.193	synth with cache (only 1: intros m; only 1: intros s2; only 1: ring).	4.70260500908	4586
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.WW.spec_WO	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.WW.spec_OW	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.WW.spec_WW	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.Of_Z.of_pos_correct	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.Of_Z.of_Z_correct	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_0_l	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_comm	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_assoc	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_1_l	40	0.0.4.0.0	synth with cache (only 1: intro n; only 1: zify; only 1: Z.nzsimpl; only 1: apply Zmod_small; only 1: apply ZnZ.spec_to_Z).	3.40080499649	1064
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_comm	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_assoc	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_add_distr_r	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_opp_r	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_opp_diag_r	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.CyclicRing	40	0.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.589	synth with cache (only 1: split; only 1: intros; only 1: zify; only 1: rewrite Z.add_0_l; only 1: apply Zmod_small; only 1: apply ZnZ.spec_to_Z; only 1: intros; only 1: zify; only 1: now rewrite Z.add_comm; only 1: intros; only 1: zify; only 1: now rewrite Zplus_mod_idemp_r, Zplus_mod_idemp_l, Z.add_assoc; only 1: intros; only 1: zify; only 1: rewrite Z.mul_1_l; only 1: apply Zmod_small; only 1: apply ZnZ.spec_to_Z; only 1: intros; only 1: zify; only 1: now rewrite Z.mul_comm; only 1: intros; only 1: zify; only 1: now rewrite Zmult_mod_idemp_r, Zmult_mod_idemp_l, Z.mul_assoc; only 1: intros; only 1: zify; only 1: now rewrite <- Zplus_mod, Zmult_mod_idemp_l, Z.mul_add_distr_r; only 1: intros; only 1: zify; only 1: unfold Z.sub; only 1: now rewrite Zplus_mod_idemp_r; only 1: intros; only 1: red; only 1: rewrite add_opp_r; only 1: zify; only 1: now rewrite Z.sub_diag, Zmod_0_l).	3.82448387146	3406
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.eqb_eq	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.eqb_correct	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.eq_equiv	40	194.192.0.64.65.517	synth with cache (only 1: constructor; only 1: now f_equal; only 1: intros s2 n; only 1: now Z.swap_greater; only 1: intros x H2; only 1: congruence).	1.03682899475	1174
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.gt_wB_1	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.gt_wB_0	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.one_mod_wB	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.succ_mod_wB	40	384.0.263	synth with cache (only 1: symmetry; only 1: rewrite Zplus_mod, Zmod_mod, <- Zplus_mod; only 1: intuition auto; Nat.Private_Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	1.20756220818	1173
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.pred_mod_wB	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.NZ_to_Z_mod	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.pred_succ	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.one_succ	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.two_succ	40	0	synth with cache (only 1: split).	0.0247790813446	1
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.Induction.B0	40	64	synth with cache (only 1: intuition).	0.0253841876984	5
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.Induction.BS	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.Induction.Zbounded_induction	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.Induction.B_holds	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.Induction.bi_induction	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.add_0_l	40	1.0.9	synth with cache (only 1: intros a; only 1: zify; only 1: apply NZ_to_Z_mod).	1.89358496666	3502
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.add_succ_l	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.sub_0_r	40	0.0.0.580.0.0	synth with cache (only 1: intros; only 1: zify; only 1: N.nzsimpl; only 1: rewrite Zmod_small; only 1: reflexivity; only 1: apply ZnZ.spec_to_Z).	2.14580011368	1702
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.sub_succ_r	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.mul_0_l	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.mul_succ_l	40
Coq.Numbers.DecimalString.uint_of_char_spec	40
Coq.Numbers.DecimalString.NilEmpty.usu	40
Coq.Numbers.DecimalString.NilEmpty.sus	40
Coq.Numbers.DecimalString.NilEmpty.isi	40
Coq.Numbers.DecimalString.NilEmpty.sis	40
Coq.Numbers.DecimalString.NilZero.uint_of_string_nonnil	40
Coq.Numbers.DecimalString.NilZero.sus	40
Coq.Numbers.DecimalString.NilZero.usu	40
Coq.Numbers.DecimalString.NilZero.usu_nil	40	1.1	synth with cache (only 1: simpl; only 1: auto).	0.0259540081024	4
Coq.Numbers.DecimalString.NilZero.usu_gen	40
Coq.Numbers.DecimalString.NilZero.isi	40
Coq.Numbers.DecimalString.NilZero.isi_posnil	40	0	synth with cache (only 1: reflexivity).	0.0160939693451	1
Coq.Numbers.DecimalString.NilZero.isi_negnil	40	0	synth with cache (only 1: reflexivity).	0.0177750587463	1
Coq.Numbers.DecimalString.NilZero.sis	40	0.0.0.0.0.0.0.0.192.0.0.0.0.0.0.0.0.0.0.1.0.0.0	synth with cache (only 1: destruct s; only 1: intros [=<-]; only 1: simpl; only 1: case Ascii.eqb_spec; only 1: intros ->; only 1: destruct (NilEmpty.uint_of_string s) eqn:Hs; only 1: simpl; only 1: intros [=<-]; only 1: simpl; only 1: f_equal; only 1: now apply NilEmpty.sus; only 1: simpl; only 1: intros [=<-]; only 1: destruct d; only 1: firstorder; only 1: apply NilEmpty.sus; only 1: simpl; only 1: destruct uint_of_char; only 1: simpl in *; only 1: congruence; only 1: simpl in *; only 1: congruence; only 1: now destruct uint_of_char).	2.06972312927	1535
Coq.Numbers.Natural.Peano.NPeano.Even_equiv	40	3.3.0	synth with cache (only 1: split; only 1: parity_binop; only 1: parity_binop).	1.13718008995	1972
Coq.Numbers.Natural.Peano.NPeano.Odd_equiv	40	2.576.1.0.0	synth with cache (only 1: split; only 1: intros (m, H); only 1: rewrite H; only 1: intuition; only 1: parity_binop).	0.184577941895	199
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_wf_0	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.nlt_0_r	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.nle_succ_0	40	0.1.8.128.0	synth with cache (only 1: intros n H; only 1: contradict H; only 1: rewrite nle_gt; only 1: rewrite lt_succ_r; only 1: apply le_0_l).	12.667662859	19431
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_0_r	40	2.0.2.0.3.0.130.2	synth with cache (only 1: intro n; only 1: destruct (lt_ge_cases n 0); only 1: split; only 1: exfalso; only 1: false_hyp H nlt_0_r; only 1: exfalso; only 1: false_hyp H nlt_0_r; only 1: intuition order).	15.8037140369	20293
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_0_succ	40	0.1.0	synth with cache (only 1: intro n; only 1: rewrite lt_succ_r; only 1: apply le_0_l).	0.0250408649445	4
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.neq_0_lt_0	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.eq_0_gt_0_cases	40	0.2.0.1.1	synth with cache (only 1: cases ltac:(n); only 1: intuition; only 1: intro H; only 1: right; only 1: apply lt_0_succ).	0.551339149475	788
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.zero_one	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_1_r	40	0.3.0.0.0.0.0.4.0.1.3	synth with cache (only 1: setoid_rewrite one_succ; only 1: intro n; only 1: split; only 1: rewrite lt_succ_r; only 1: intro H; only 1: le_elim H; only 1: false_hyp H nlt_0_r; only 1: assumption; only 1: intro H; only 1: rewrite H; only 1: apply lt_0_succ).	23.7275848389	56551
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_1_r	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_lt_0	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_1_l'	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.RelElim.le_ind_rel	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.RelElim.lt_ind_rel	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.succ_pred_pos	40	0.0.0.2	synth with cache (only 1: intros; only 1: destruct (lt_exists_pred _ _ H) as (n', (EQ, LE)); only 1: rewrite EQ; only 1: now rewrite pred_succ).	0.0944340229034	96
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_pred_l	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_l	40	132.4.0.0.0.0.0	synth with cache (only 1: cases ltac:(n); only 1: intro H; only 1: exfalso; only 1: now apply H; only 1: intros n IH; only 1: rewrite pred_succ; only 1: now rewrite lt_succ_r).	3.35362505913	5209
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_le_pred	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_lt_pred	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_le_pred	40	1.0.3.1.0.5.64.1	synth with cache (only 1: intros z n H; only 1: destruct (lt_ge_cases n 0); only 1: destruct (lt_exists_pred _ _ H) as (n', (EQ, LE)); only 1: rewrite EQ; only 1: now rewrite pred_succ; only 1: destruct (lt_exists_pred _ _ H) as (n', (EQ, LE)); only 1: rewrite EQ; only 1: now rewrite pred_succ).	14.636742115	27058
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_le	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_lt	40	0.0.0.0.0.0.0.67	synth with cache (only 1: intros H; only 1: cases ltac:(m); only 1: rewrite pred_0; only 1: trivial; only 1: intros n IH; only 1: rewrite pred_succ in IH; only 1: rewrite lt_succ_r; only 1: order).	0.990509033203	1157
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_pred_le	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.pred_le_mono	40	0.512.2.64.256.2.0.128.67	synth with cache (only 1: intro m; only 1: apply right_induction; only 1: solve_proper; only 1: apply le_refl; only 1: intro EQ; only 1: intros n H; only 1: rewrite pred_succ; only 1: rewrite H; only 1: apply le_pred_l).	11.2970051765	17008
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.pred_lt_mono	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_succ_lt_pred	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_succ_le_pred	40	0.5.130.0.1.0.0.1	synth with cache (only 1: intro n; only 1: cases ltac:(m); only 1: intro H; only 1: apply le_succ_l in H; only 1: false_hyp ltac:(H) nlt_0_r; only 1: intro EQ; only 1: rewrite pred_succ; only 1: now rewrite 2!lt_eq_cases, <- succ_lt_mono, succ_inj_wd).	28.4693350792	40489
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_lt_succ	40	0.2.0.0.0.1.0.0.3	synth with cache (only 1: intros n m; only 1: cases n; only 1: rewrite pred_0; only 1: intro H; only 1: apply lt_0_succ; only 1: intros n IH; only 1: rewrite pred_succ in IH; only 1: rewrite lt_succ_r; only 1: now apply le_succ_l).	3.67115712166	6481
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_pred_le_succ	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_upper_bound	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_eq	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mod_unique	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_unique	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_unique	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_unique_exact	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_same	40	129.0.0.0.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique_exact; only 1: apply neq_0_lt_0; only 1: auto'; only 1: now nzsimpl).	0.104682922363	108
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_same	40	1.0.0.1.2.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 1; only 1: auto'; only 1: intuition; only 1: now nzsimpl).	0.281844139099	595
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_small	40	1.0.0.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique with a; only 1: intuition; only 1: now nzsimpl).	0.0769560337067	93
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_small	40	1.0.0.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 0; only 1: auto'; only 1: now nzsimpl).	0.162754058838	187
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_0_l	40	0.0.1	synth with cache (only 1: intros n IH; only 1: apply Private_NZDiv.div_small; only 1: auto').	0.0940330028534	151
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_0_l	40	0.2.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: auto').	0.0394201278687	75
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_1_r	40	0.1.4.0.1.0	synth with cache (only 1: intro n; only 1: symmetry; only 1: apply Private_NZDiv.div_unique_exact; only 1: apply neq_0_lt_0; only 1: apply lt_0_1; only 1: now nzsimpl').	1.54514503479	3966
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_1_r	40	1.1.1.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: apply lt_0_1; only 1: now nzsimpl).	0.229255914688	497
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_1_l	40	0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: auto).	0.0127589702606	3
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_1_l	40	0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: auto).	0.0127840042114	3
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul	40	0.0.0.0.1.2	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique_exact; only 1: apply neq_0_lt_0; only 1: auto'; only 1: apply mul_comm).	1.37214708328	1806
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_mul	40	0.0.0.2.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: auto'; only 1: nzsimpl; only 1: apply mul_comm).	0.713891029358	1069
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_le	40	0.0.5.0	synth with cache (only 1: intros; only 1: apply mod_le; only 1: auto'; only 1: auto').	1.67762088776	3043
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_str_pos	40	0.1.0	synth with cache (only 1: intros a b (Hb, Hab); only 1: apply div_str_pos; only 1: auto).	0.0987050533295	111
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_small_iff	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_small_iff	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_str_pos_iff	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_lt	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: assert (0 < b) by (apply lt_trans with 1; auto using lt_0_1); only 1: destruct (lt_ge_cases a b); only 1: rewrite Private_NZDiv.div_small; only 1: order; only 1: order; only 1: rewrite (div_mod a b)  at 2 by order; only 1: apply lt_le_trans with (b * (a / b)); only 1: rewrite <- (mul_1_l (a / b))  at 1; only 1: rewrite <- mul_lt_mono_pos_r; only 1: auto; only 1: apply Private_NZDiv.div_str_pos; only 1: auto; only 1: rewrite <- (add_0_r (b * (a / b)))  at 1; only 1: rewrite <- add_le_mono_l; only 1: destruct (mod_bound_pos a b); only 1: order; only 1: order; only 1: order).	1.60146212578	1630
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_mono	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_div_le	40	0.0.5.0	synth with cache (only 1: intros; only 1: apply mul_div_le; only 1: auto'; only 1: auto').	6.25657987595	8056
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_succ_div_gt	40	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite mul_succ_r; only 1: rewrite <- add_lt_mono_l; only 1: apply mod_bound_pos; only 1: auto'; only 1: auto').	0.0437309741974	7
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_exact	40	0.0.0.2	synth with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite <- (add_0_r (b * (a / b)))  at 2; only 1: apply add_cancel_l).	0.380961894989	382
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_lt_upper_bound	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_upper_bound	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_lower_bound	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_compat_l	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_add	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_add	40	0.0.257.0.0.192.0.0.0.0	synth with cache (only 1: intros; only 1: apply (mul_cancel_l _ _ c); only 1: auto'; only 1: apply (add_cancel_r _ _ ((a + b * c) mod c)); only 1: intuition; only 1: rewrite <- div_mod, Private_NZDiv.mod_add by order; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: destruct (le_gt_cases a 0); only 1: now rewrite mul_comm; only 1: now rewrite mul_comm).	0.408051013947	454
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_add_l	40	0.2.4	synth with cache (only 1: intros a b c; only 1: rewrite (add_comm _ c), (add_comm a); only 1: apply Private_NZDiv.div_add).	11.3828918934	10048
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_cancel_r	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_cancel_l	40	0.0.0.3.0	synth with cache (only 1: intros; only 1: rewrite !(mul_comm c); only 1: apply Private_NZDiv.div_mul_cancel_r; only 1: auto'; only 1: auto').	0.87308382988	1570
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_distr_r	40	0.0.0.2.0.1.1.2.0	synth with cache (only 1: intros; only 1: rewrite !(mul_comm _ c); only 1: rewrite <- (add_cancel_l _ _ (c * b * (c * a / (c * b)))); only 1: rewrite <- div_mod by (apply neq_mul_0; split; order); only 1: rewrite Private_NZDiv.div_mul_cancel_l; only 1: rewrite <- mul_assoc, <- mul_add_distr_l, mul_cancel_l by order; only 1: now apply div_mod; only 1: auto'; only 1: auto').	18.5709991455	20507
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_distr_l	40	0.3.0.0.0.0.0.0.64.0.0.0.2.0	synth with cache (only 1: intros; only 1: rewrite <- (add_cancel_l _ _ (c * b * (c * a / (c * b)))); only 1: rewrite <- div_mod; only 1: rewrite Private_NZDiv.div_mul_cancel_l; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite !(mul_comm c); only 1: rewrite mul_add_distr_r; only 1: rewrite add_cancel_r; only 1: rewrite <- 2!mul_assoc; only 1: now rewrite (mul_comm c); only 1: auto'; only 1: auto'; only 1: rewrite <- neq_mul_0; only 1: intuition).	5.34718799591	4736
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_mod	40	1.3.0.0.0	synth with cache (only 1: intros; only 1: destruct (mod_bound_pos a n); only 1: auto'; only 1: auto'; only 1: now rewrite Private_NZDiv.mod_small_iff).	0.445507049561	513
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_idemp_l	40	0.0.0.1.0.64	synth with cache (only 1: intros m IH; only 1: intros; only 1: apply mul_mod_idemp_l; only 1: auto'; only 1: auto'; only 1: auto').	0.598706960678	866
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_idemp_r	40	128.0.1.0	synth with cache (only 1: intros; only 1: rewrite !(mul_comm a); only 1: apply Private_NZDiv.mul_mod_idemp_l; only 1: auto using sub_add_le).	0.0276491641998	7
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod	40	0.0.0.0.64.0.0	synth with cache (only 1: intros; only 1: rewrite Private_NZDiv.mul_mod_idemp_l, Private_NZDiv.mul_mod_idemp_r; only 1: order; only 1: apply neq_0_lt_0; only 1: auto'; only 1: apply neq_0_lt_0; only 1: auto').	0.0319800376892	10
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.add_mod_idemp_l	40	0.0.0.4.0	synth with cache (only 1: intros; only 1: apply add_mod_idemp_l; only 1: auto'; only 1: auto'; only 1: auto').	0.895929098129	1046
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.add_mod_idemp_r	40	128.0.2.0	synth with cache (only 1: intros; only 1: rewrite !(add_comm a); only 1: apply Private_NZDiv.add_mod_idemp_l; only 1: auto using sub_add_le).	0.193095207214	125
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.add_mod	40	64.66.0.1.0.385.0	synth with cache (only 1: intros; only 1: pose proof (@partial_order_equivalence _ _ _ _ _) as poe; only 1: rewrite Private_NZDiv.add_mod_idemp_l, Private_NZDiv.add_mod_idemp_r; only 1: reflexivity; only 1: intro H1; only 1: auto; only 1: auto).	1.68233990669	3044
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_div	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_mul_r	40	0.0.2.0.0.0.0	synth with cache (only 1: intros; only 1: apply add_cancel_l with (b * c * (a / (b * c))); only 1: rewrite <- div_mod by (apply neq_mul_0; split; order); only 1: rewrite <- Private_NZDiv.div_div by trivial; only 1: rewrite add_assoc, add_shuffle0, <- mul_assoc, <- mul_add_distr_l; only 1: rewrite <- div_mod by order; only 1: now apply div_mod).	1.85598611832	1491
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_le	40	1.0.0.0.0.1.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto'; only 1: rewrite mul_assoc, (mul_comm b c), <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: auto'; only 1: apply Private_NZDiv.mul_div_le; only 1: auto').	0.31387591362	277
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_divides	40	0.0.0.0.1.0.0.0.0.4	synth with cache (only 1: split; only 1: intros; only 1: exists (a / b); only 1: rewrite Private_NZDiv.div_exact; only 1: auto; only 1: order; only 1: intros (c, Hc); only 1: rewrite Hc, mul_comm; only 1: apply Private_NZDiv.mod_mul; only 1: auto').	4.42065906525	8278
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_succ_0	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_0_succ	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.le_0_l	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.induction	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.case_analysis	40	0.0.0.0.0.0.0	synth with cache (only 1: intros A A_wd A0 AS n; only 1: apply right_induction with 0; only 1: assumption; only 1: assumption; only 1: intros; only 1: auto; only 1: apply le_0_l).	0.0501730442047	7
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_0	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_0_r	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.zero_or_succ	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.eq_pred_0	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.succ_pred	40	1.0.0.0.0.0	synth with cache (only 1: cases ltac:(n); only 1: intro H; only 1: now elim H; only 1: intro n; only 1: intro H; only 1: now rewrite pred_succ).	0.055408000946	7
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.pred_inj	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.PairInduction.pair_induction	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.TwoDimensionalInduction.two_dim_induction	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.DoubleInduction.double_induction	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.if_zero_wd	40	448.0.0.65.0.64.64.2	synth with cache (only 1: intros ? ? E1 ? ? E2 ?; only 1: intro H; only 1: pose proof (@partial_order_equivalence _ _ _ _ _) as poe; only 1: simpl_relation; only 1: compute; only 1: f_equiv; only 1: firstorder; only 1: intuition auto; PeanoNat.Nat.Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	16.1342618465	7412
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.if_zero_0	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.if_zero_succ	40	0.576.1.2.0.451.0.256	synth with cache (only 1: intros a b Ha Hb; only 1: unfold if_zero; only 1: pose proof (@partial_order_equivalence _ _ _ _ _) as poe; only 1: rewrite recursion_succ; only 1: auto; only 1: auto; only 1: intros RS' n; only 1: congruence).	24.3240039349	21364
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_0_l	40	0.0.14	synth with cache (only 1: unfold def_add; only 1: intro n; only 1: now rewrite recursion_0).	8.97442007065	15941
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_succ_l	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_add	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_0_r	40	1.322.75.5	synth with cache (only 1: intro n; only 1: rewrite <- (PeanoNat.Nat.mul_1_l n)  at 1; only 1: compute; only 1: now rewrite recursion_0).	23.2177219391	17438
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_succ_r	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_mul	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_base	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_step	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_0	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_0_succ	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.succ_ltb_mono	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_lt	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_ge	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.even_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.even_0	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.even_succ	40	2.2.1.256.65.0.66	synth with cache (only 1: symmetry; only 1: apply eq_true_iff_eq; only 1: red; only 1: compute; only 1: repeat split; only 1: now rewrite recursion_succ; only 1: now rewrite recursion_succ).	3.97807598114	3094
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_0	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_succ	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_spec	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_spec2	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_0	40	0.330	synth with cache (only 1: compute in *; only 1: now rewrite recursion_0).	0.754186868668	1086
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_1	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_double	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_upper_bound	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_lower_bound	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_nz	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_decrease	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow_0	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow_succ	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_prewd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_good_step	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_init	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_step	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow2_log	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.square_lt_mono	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.square_le_mono	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_le_mono_l	40	0.0.1.0.0.65.0.0	synth with cache (only 1: intros n m H1 H2; only 1: le_elim H2; only 1: apply mul_le_mono_nonneg_l; only 1: apply le_0_l; only 1: apply lt_eq_cases; only 1: now left; only 1: apply eq_le_incl; only 1: now rewrite H2).	1.15836787224	466
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_le_mono_r	40	0.0.0.4.0	synth with cache (only 1: intros; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: apply mul_le_mono_nonneg_l; only 1: apply le_0_l; only 1: assumption).	4.97958898544	5113
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_lt_mono	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_le_mono	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.lt_0_mul'	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.eq_mul_1	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow_sub_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow_div_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_proper	40	1.0	synth with cache (only 1: intros x x' EQ; only 1: now f_equiv).	0.0495569705963	9
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.exists_div2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_0_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_succ_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_spec'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_spec	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_true	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_false	40	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros a n; only 1: rewrite <- testbit_spec'; only 1: destruct a.[n]; only 1: split; only 1: simpl; only 1: now try order'; only 1: simpl; only 1: now try order'; only 1: split; only 1: simpl; only 1: now try order'; only 1: simpl; only 1: now try order').	0.29985499382	196
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_inj	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_b2n_double_div2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_b2n_double_bit0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_div2	40	0.1.0.0.385.3.192	synth with cache (only 1: intro H1; only 1: apply Private_NZDiv.div_small; only 1: destr_bool; only 1: order'; only 1: transitivity 1; only 1: apply lt_0_1; only 1: order').	0.815619945526	1317
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_bit0	40	0.0.0.0.67	synth with cache (only 1: intro; only 1: apply b2n_inj; only 1: rewrite testbit_spec'; only 1: nzsimpl; only 1: now rewrite mod_small by (destruct a0; order')).	0.266083955765	336
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_unique	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_0	40	0.0.2.0.2.0.4.0	synth with cache (only 1: intros a0; only 1: apply b2n_inj; only 1: rewrite testbit_spec' by trivial; only 1: nzsimpl; only 1: simpl; only 1: order; only 1: order'; only 1: order_nz).	2.54017615318	2675
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit0_odd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit0_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit0_mod	40	0.0.0.1.0.0.0.0.0	synth with cache (only 1: intros a; only 1: destruct (exists_div2 a) as (a', (b, H)); only 1: rewrite H  at 1; only 1: rewrite testbit_0_r; only 1: apply mod_unique with a'; only 1: destruct b; only 1: order'; only 1: order'; only 1: trivial).	0.634292840958	489
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_odd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit_log2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_above_log2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_bits	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div_pow2_bits	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.double_bits_succ	40	0.0	synth with cache (only 1: intros; only 1: apply testbit_even_succ, le_0_l).	0.0208809375763	2
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mul_pow2_bits_add	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mul_pow2_bits_high	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mul_pow2_bits_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mod_pow2_bits_high	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mod_pow2_bits_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.eqf_equiv	40	323.0.0.64.256.1.7.0.5.7	synth with cache (only 1: split; only 1: now try order'; only 1: intros a; only 1: revert a; only 1: intros; only 1: intro; only 1: now nzsimpl'; only 1: intros n; only 1: intros P b H H0; only 1: congruence).	3.10543704033	5984
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_eqf	40	129.0.4	synth with cache (only 1: repeat red; only 1: intros; only 1: now rewrite <- H).	1.30044198036	832
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_inj_0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_inj	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_inj_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.are_bits	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_spec'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_spec_high'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_div_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_mul_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_spec_alt	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_shiftl	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_shiftr	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_shiftl_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_shiftl_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_1_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_0_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_0_r	40	0.0.0.68	synth with cache (only 1: intro H1; only 1: bitwise; only 1: rewrite shiftr_spec'; only 1: now nzsimpl).	2.64430594444	1394
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_0_l	40	0.0.0	synth with cache (only 1: intros; only 1: rewrite shiftl_mul_pow2; only 1: now nzsimpl).	0.040953874588	3
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_0_l	40	0.3.0.0	synth with cache (only 1: intros; only 1: rewrite shiftr_div_pow2; only 1: apply Private_NZDiv.div_0_l; only 1: order_nz).	4.00868320465	2342
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_eq_0	40	0.0.0.0.0.0.3	synth with cache (only 1: intros n m; only 1: rewrite shiftr_div_pow2, div_small_iff by order_nz; only 1: intros H; only 1: apply log2_lt_cancel; only 1: rewrite log2_pow2; only 1: trivial using le_0_l; only 1: trivial using le_0_l).	2.12699198723	1573
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_div	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_odd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_wd	40	0.2.0	synth with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.520071983337	173
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_wd	40	0.2.0	synth with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.313205003738	119
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_wd	40	0.2.0	synth with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.17872595787	125
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_eq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_nilpotent	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_0_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_0_r	40	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_l).	0.0303208827972	3
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_comm	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_assoc	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_0_l	40	0.192.2.0	synth with cache (only 1: intros; only 1: bitwise; only 1: revert m; only 1: destr_bool).	0.111336946487	120
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_0_r	40	1.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_r).	0.0318400859833	4
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_comm	40	261.0.1.65	synth with cache (only 1: intros b; only 1: intro m; only 1: bitwise; only 1: CRelationClasses.simpl_crelation).	10.6242067814	14498
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_assoc	40	320.129.448.0.1	synth with cache (only 1: intros; only 1: bitwise; only 1: destruct (le_gt_cases a 0); only 1: intuition; only 1: firstorder).	0.21053981781	221
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_diag	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_eq_0_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_0_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_0_r	40	64.1.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply andb_false_iff; only 1: intuition order).	0.0391421318054	7
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_comm	40	258.0.0.257	synth with cache (only 1: intros x; only 1: intros; only 1: bitwise; only 1: auto with *).	0.918943881989	1231
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_assoc	40	196.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: firstorder).	0.939379930496	1117
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_diag	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_0_l	40	0.5.0	synth with cache (only 1: intros; only 1: bitwise; only 1: trivial).	0.29194688797	682
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_0_r	40	1.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_r).	0.0316359996796	4
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_diag	40	385.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: firstorder).	0.0989007949829	42
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_land_distr_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_land_distr_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lor_distr_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lor_distr_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ldiff_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_ldiff_and	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_ldiff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_spec'	40	0.64.130.259.1	synth with cache (only 1: intros a Ha; only 1: apply succ_inj; only 1: compute; only 1: do 2 f_equiv; only 1: now rewrite shiftl_mul_pow2, mul_1_l).	3.89752793312	5042
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_spec'	40	0.198.0	synth with cache (only 1: intros; only 1: compute; only 1: now rewrite shiftl_1_l).	30.1194081306	13359
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_wd	40	0.259.2.0	synth with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: compute; only 1: now rewrite Ha, Hb).	2.0280828476	1569
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_true	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_false	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_eq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_neq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_eq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_neq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_lxor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_lxor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_land	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_land	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_lor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_lor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_ldiff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_ldiff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_wd	40	0.324.2.0	synth with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: compute; only 1: now rewrite Ha, Hb).	9.53759694099	3882
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_equiv	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_add	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_div_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_mod_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_spec_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_spec_high	40	1.0.0.0.0.0.0.0.0.0.1.5.64	synth with cache (only 1: intros b Hb IH; only 1: rewrite testbit_false; only 1: rewrite div_small; only 1: nzsimpl; only 1: solve_proper; only 1: order'; only 1: rewrite ones_equiv; only 1: apply le_succ_l; only 1: rewrite succ_pred; only 1: apply Private_NZPow.pow_le_mono_r; only 1: order'; only 1: trivial; only 1: order_nz).	33.7962598801	30579
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_spec_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_spec_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_spec_high	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_involutive	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_0_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_ones	40	0.1.0.0	synth with cache (only 1: intros; only 1: unfold lnot; only 1: bitwise; only 1: apply xorb_nilpotent).	0.0356018543243	5
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_ones_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_ones	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_ones_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ones_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ones_r_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ones_l_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_lnot_diag	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_lnot_diag_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lnot_diag	40	0.0.1.0.0.0.1.0.0.0.0	synth with cache (only 1: intros a n; only 1: bitwise; only 1: destruct (le_gt_cases n m); only 1: rewrite lnot_spec_high, ones_spec_high; only 1: now destruct a.[m]; only 1: trivial; only 1: trivial; only 1: rewrite lnot_spec_low, ones_spec_low; only 1: now destruct a.[m]; only 1: trivial; only 1: trivial).	1.01769399643	952
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lnot_diag_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_lor_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_land_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_land_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_ldiff_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_lnot_lnot	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_lxor_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_lxor_r	40	0.1.384.193.65	synth with cache (only 1: intro H; only 1: intros LS' n; only 1: compute; only 1: bitwise; only 1: apply xorb_assoc_reverse).	22.8409240246	17930
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_lor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_bits_unique	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_shiftr	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_shiftl	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_lor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_land	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_lxor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_bit0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add3_bit0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add3_bits_div2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_carry_div2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_carry_bits	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_bit1	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.nocarry_equiv	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_nocarry_lxor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_le	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.sub_nocarry_ldiff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_lnot_diag_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_sub_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_nocarry_lt_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_nocarry_mod_lt_pow2	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.divide_add_cancel_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.divide_sub_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_add_mult_diag_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_add_diag_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_sub_diag_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.Bezout_wd	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.bezout_1_gcd	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout_pos_pos	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout_pos	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_mul_mono_l	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_mul_mono_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gauss	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.divide_mul_split	40
Coq.Numbers.Natural.Abstract.NIso.Homomorphism.natural_isomorphism_wd	40
Coq.Numbers.Natural.Abstract.NIso.Homomorphism.natural_isomorphism_0	40
Coq.Numbers.Natural.Abstract.NIso.Homomorphism.natural_isomorphism_succ	40
Coq.Numbers.Natural.Abstract.NIso.Homomorphism.hom_nat_iso	40	0.0.1.0.0.0.0.0.0.0.65	synth with cache (only 1: repeat split; only 1: unfold natural_isomorphism; only 1: now rewrite N1.recursion_0; only 1: unfold natural_isomorphism; only 1: intro n; only 1: rewrite N1.recursion_succ; only 1: auto with *; only 1: auto with *; only 1: repeat red; only 1: intros; only 1: now f_equiv).	0.145406007767	120
Coq.Numbers.Natural.Abstract.NIso.Inverse.inverse_nat_iso	40
Coq.Numbers.Natural.Abstract.NIso.Isomorphism.iso_nat_iso	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_spec'	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_square	40	0.2.0.0.0.0.0.1	synth with cache (only 1: intro n; only 1: apply sqrt_unique' with 0; only 1: split; only 1: order; only 1: apply mul_nonneg_nonneg; only 1: order'; only 1: apply le_0_l; only 1: now nzsimpl).	0.963640928268	693
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_le_square	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_lt_square	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_le_lin	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_mul_above	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_succ_le	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_succ_or	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.add_sqrt_le	40
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.eq_add_0	40
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.eq_add_succ	40
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.eq_add_1	40
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.succ_add_discr	40
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.add_pred_l	40	64.64.2.0.0.1.3	synth with cache (only 1: cases ltac:(n); only 1: intros; only 1: exfalso; only 1: now apply H; only 1: intros n m; only 1: intro; only 1: now nzsimpl').	4.50431489944	5129
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.add_pred_r	40	66.0.131.1.0.130.0.0.0.0.0.0.0.64	synth with cache (only 1: assert (AUX : forall a b, 0 < a -> 0 < b -> S a + S b <= S a * S b); only 1: intros a b Ha Hb; only 1: nzsimpl; only 1: rewrite <- succ_le_mono; only 1: apply le_succ_l; only 1: rewrite <- add_assoc, <- (add_0_l (a + b)), (add_comm b); only 1: apply add_lt_mono_r; only 1: now apply mul_pos_pos; only 1: intros RS' n; only 1: cases n; only 1: intro H; only 1: order; only 1: intros n IH; only 1: now nzsimpl').	16.7486069202	25341
Coq.Numbers.Natural.Abstract.NParity.NParityProp.odd_pred	40	0.1.0.0.0.0.0	synth with cache (only 1: cases ltac:(n); only 1: intros; only 1: exfalso; only 1: now apply H; only 1: intros; only 1: rewrite pred_succ; only 1: now rewrite <- negb_odd, odd_succ, negb_even).	0.527852058411	358
Coq.Numbers.Natural.Abstract.NParity.NParityProp.even_pred	40	2.0.448.3.0.0	synth with cache (only 1: intros; only 1: rewrite <- (succ_pred n)  at 2 by trivial; only 1: apply eq_iff_eq_true; only 1: apply (symmetry (x:=_)); only 1: rewrite even_spec, odd_spec; only 1: apply Odd_succ).	4.06497192383	3103
Coq.Numbers.Natural.Abstract.NParity.NParityProp.even_sub	40
Coq.Numbers.Natural.Abstract.NParity.NParityProp.odd_sub	40
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.le_add_r	40
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.lt_lt_add_r	40
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.lt_lt_add_l	40	0.0.0.0.64.0.0.0.1.0.0	synth with cache (only 1: intros n m p H; only 1: rewrite <- (add_0_r n); only 1: apply lt_le_trans with (m + p); only 1: apply add_lt_le_mono; only 1: assumption; only 1: apply le_0_l; only 1: nzinduct p m; only 1: now apply add_le_mono_l; only 1: intro; only 1: nzsimpl; only 1: now rewrite <- succ_le_mono).	2.34743404388	2318
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.add_pos_l	40	3.1	synth with cache (only 1: intros n m; only 1: apply lt_lt_add_r).	1.93409204483	1101
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.add_pos_r	40	1.0.453	synth with cache (only 1: intros A P; only 1: rewrite add_comm; only 1: apply lt_lt_add_r).	12.2081880569	12201
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_succ_r'	40	0.0.0.0.0.0.0.0	synth with cache (only 1: intros n m; only 1: nzsimpl; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite add_cancel_r; only 1: apply le_0_l).	0.182243108749	8
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_0_l	40	0.0.1.0.0	synth with cache (only 1: intros a Ha; only 1: destruct (lt_trichotomy a 0) as [LT| [EQ| GT]]; only 1: now rewrite pow_neg_r; only 1: order; only 1: now apply pow_0_l).	0.0461478233337	6
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_1_l	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_mul_l	40	0.0.0.1.1.0.0.0.0.0.0.0.0.2.0	synth with cache (only 1: intros a b c; only 1: destruct (lt_ge_cases c 0) as [Hc| Hc]; only 1: rewrite !(pow_neg_r _ _ Hc); only 1: now nzsimpl; only 1: apply le_ind with (4 := Hc); only 1: solve_proper; only 1: now nzsimpl; only 1: clear c Hc; only 1: intros c Hc IH; only 1: nzsimpl; only 1: rewrite IH; only 1: apply mul_shuffle1; only 1: trivial; only 1: trivial; only 1: trivial).	2.57094597816	2444
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_mul_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_eq_0	40	0.135.1.0.64	synth with cache (only 1: intro; only 1: intros b Hb IH; only 1: apply pow_eq_0 with b; only 1: now apply le_0_l; only 1: order).	38.2706317902	33097
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_nonzero	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_l	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_l	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_gt_1	40	1.0.0.0.256.0	synth with cache (only 1: intros a b Ha Hb; only 1: intuition; only 1: rewrite <- (Private_NZPow.pow_1_l b) by order; only 1: apply Private_NZPow.pow_lt_mono_l; only 1: order; only 1: order').	0.319187879562	242
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono	40	0.0.0.1.0.0.0	synth with cache (only 1: intros; only 1: transitivity (a ^ d); only 1: apply Private_NZPow.pow_le_mono_r; only 1: intuition order; only 1: intuition order; only 1: apply Private_NZPow.pow_le_mono_l; only 1: intuition order).	0.709680080414	811
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_inj_l	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_inj_r	40	0.1.0.0.2.0.0	synth with cache (only 1: intros; only 1: destruct (lt_trichotomy b c) as [LT| [EQ'| GT]]; only 1: assert (a ^ b < a ^ c) by (apply Private_NZPow.pow_lt_mono_r; try split; trivial); only 1: order; only 1: trivial; only 1: assert (a ^ c < a ^ b) by (apply Private_NZPow.pow_lt_mono_r; try split; trivial); only 1: order).	0.369389057159	392
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_l_iff	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_l_iff	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_r_iff	40	0.0.2.0.0.0.0.257	synth with cache (only 1: repeat split; only 1: intro LT; only 1: now apply Private_NZPow.pow_lt_mono_r; only 1: intro LT; only 1: destruct (le_gt_cases c b) as [LE| GT]; only 1: assert (a ^ c <= a ^ b) by (apply Private_NZPow.pow_le_mono_r; order'); only 1: order; only 1: trivial).	6.9441921711	8483
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_r_iff	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_gt_lin_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_lower	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_upper	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.even_pow	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.odd_pow	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.max_0_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.max_0_r	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.min_0_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.min_0_r	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.succ_max_distr	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.succ_min_distr	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_max_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_max_distr_r	40	1.0.0.0.1.0.0.1.1.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply add_le_mono_r; only 1: rewrite 2!max_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply add_le_mono_r).	6.15023398399	4161
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_min_distr_l	40	0.0.0.3.0.0.0.2.1.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: rewrite 2!min_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l).	8.21144008636	4526
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_min_distr_r	40	1.0.0.1.1.0.0.0.2.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_r; only 1: rewrite 2!min_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_r).	7.75499796867	7152
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_max_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_max_distr_r	40	0.0.0.0.0.0.0.0.0.0.0.1.1.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: order; only 1: now rewrite <- ?add_le_mono_l; only 1: apply mul_le_mono_nonneg_r; only 1: apply le_0_l; only 1: now rewrite <- ?add_le_mono_l; only 1: rewrite 2!max_l; only 1: order; only 1: now rewrite <- ?add_le_mono_l; only 1: apply mul_le_mono_nonneg_r; only 1: apply le_0_l; only 1: now rewrite <- ?add_le_mono_l).	2.92722010612	2977
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_min_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_min_distr_r	40	0.0.0.1.0.0.0.0.2.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply mul_le_mono_r; only 1: rewrite 2!min_r; only 1: order; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply mul_le_mono_r).	12.785651207	8577
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_max_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_max_distr_r	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_min_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_min_distr_r	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.strong_rec_alt	40	2.0	synth with cache (only 1: intros; only 1: eauto).	0.029335975647	4
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.strong_rec0_wd	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.strong_rec_wd	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec0_0	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec0_succ	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec_0	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec0_more_steps	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec0_fixpoint	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec_fixpoint	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec_0_any	40	0.0.1.3.0.0	synth with cache (only 1: intros; only 1: rewrite strong_rec_alt; only 1: rewrite strong_rec0_succ; only 1: apply step_good; only 1: intros m Hm; only 1: destruct (nlt_0_r _ Hm)).	0.827027082443	727
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec_any_fst_arg	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.mod_divide	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_div_mul_exact	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_div_factor	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_div_gcd	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_mod	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_wd	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_equiv1	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_equiv2	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_div_swap	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_l	40	0.1.0	synth with cache (only 1: intro n; only 1: intro H; only 1: apply divide_mul_l, divide_refl).	0.0134398937225	4
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_r	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_div	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_least	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_comm	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_divide_iff	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_unique	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_unique_alt	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_assoc	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_0_l	40	4.137.3	synth with cache (only 1: intro H; only 1: unfold lcm; only 1: now nzsimpl').	2.94957709312	11549
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_0_r	40	0.1.0.1.1.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: order; only 1: exists 0; only 1: now nzsimpl; only 1: apply divide_refl; only 1: trivial).	0.240512132645	330
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_1_l	40	0.1.0.0.5.1.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: apply le_0_l; only 1: exists n; only 1: now nzsimpl'; only 1: trivial using divide_refl; only 1: trivial).	4.12590789795	7063
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_1_r	40	0.0.0.1.2.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: trivial using divide_1_l, le_0_l, divide_refl; only 1: trivial using divide_1_l, le_0_l, divide_refl; only 1: exists n; only 1: now nzsimpl'; only 1: trivial using divide_1_l, le_0_l, divide_refl).	0.801727056503	1013
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_diag	40	0.1.1.2.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: trivial using divide_1_l, le_0_l, divide_refl; only 1: trivial using divide_1_l, le_0_l, divide_refl; only 1: trivial using divide_1_l, le_0_l, divide_refl; only 1: trivial using divide_refl).	0.218334913254	458
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_eq_0	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_eq_r	40	0.2.1.1.2.2	synth with cache (only 1: intros z n H; only 1: apply lcm_unique; only 1: apply le_0_l; only 1: trivial; only 1: trivial using divide_refl; only 1: trivial).	7.47414016724	15569
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_iff	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_mul_mono_l	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_mul_mono_r	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_1_lcm_mul	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_0_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_succ	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_diag	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_gt	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_assoc	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_succ_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_add	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_eq_l	40	0.1.0.4	synth with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: rewrite add_comm; only 1: apply add_sub).	13.1779899597	36206
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_eq_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_eq_nz	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_add_distr	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_swap	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_sub_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_0_le	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_add_le	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_sub_le_add_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_sub_le_add_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_sub_lt_add_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_sub_lt_add_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_add_le_sub_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_add_le_sub_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_add_lt_sub_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_add_lt_sub_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_lt	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_le_mono_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_le_mono_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.mul_pred_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.mul_sub_distr_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.mul_sub_distr_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_equiv	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_equiv	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_alt_wd	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_alt_wd	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_alt_dichotomy	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_dichotomy	40
Coq.Numbers.DecimalZ.of_to	40
Coq.Numbers.DecimalZ.to_of	40
Coq.Numbers.DecimalZ.to_int_inj	40	0.2	synth with cache (only 1: intros E; only 1: now rewrite <- (Unsigned.of_to n), <- (Unsigned.of_to n'), E).	0.0734729766846	69
Coq.Numbers.DecimalZ.to_int_surj	40
Coq.Numbers.DecimalZ.of_int_norm	40
Coq.Numbers.DecimalZ.of_inj	40	128.10.0.0	synth with cache (only 1: intros; only 1: rewrite <- !Unsigned.to_of; only 1: rewrite H; only 1: now subst).	4.02320885658	8116
Coq.Numbers.DecimalZ.of_iff	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_spec_nonneg	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_nonneg	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_unique	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_wd	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_spec_alt	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_unique'	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_pred_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_le_mono	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_lt_cancel	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_le_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_lt_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_0	40	0.0.3.7.2	synth with cache (only 1: apply sqrt_unique; only 1: nzsimpl; only 1: split; only 1: order; only 1: apply lt_succ_diag_r).	0.882606983185	1483
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_1	40	8.0.0.0.0.0.4	synth with cache (only 1: apply sqrt_unique' with 0; only 1: split; only 1: order; only 1: apply mul_nonneg_nonneg; only 1: apply lt_le_incl, lt_0_2; only 1: apply lt_le_incl, lt_0_1; only 1: now nzsimpl').	2.42040705681	2146
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_2	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_pos	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_lt_lin	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_le_lin	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_mul_below	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_mul_above	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_succ_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_succ_or	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_eq_succ_iff_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_add_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.add_sqrt_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_eqn0	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_eqn	40	0.0.0.0.4.131	synth with cache (only 1: compute; only 1: intros n m; only 1: case compare_spec; only 1: order; only 1: order; only 1: order).	1.3856048584	4131
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_spec	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_nonneg	40	0.1.1.0.0.0.66	synth with cache (only 1: intros EQ; only 1: unfold sqrt_up; only 1: case compare_spec; only 1: order; only 1: intro H; only 1: apply le_le_succ_r, sqrt_nonneg; only 1: order).	1.22558617592	1998
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_wd	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_unique	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_succ_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_0	40	0.0.0.0.0	synth with cache (only 1: unfold sqrt_up; only 1: case compare_spec; only 1: order; only 1: order; only 1: order).	0.0145361423492	5
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_1	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_2	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.le_sqrt_sqrt_up	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.le_sqrt_up_succ_sqrt	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_sqrt_up_spec	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_sqrt_up_exact	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_mono	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_lt_cancel	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_lt_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_pos	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_lt_lin	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_lin	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_mul_above	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_mul_below	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_succ_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_succ_or	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_eq_succ_iff_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_add_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.add_sqrt_up_le	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mod_unique	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_unique	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_unique	40	0.0.0.1.0.0.1.0.2.0	synth with cache (only 1: intros a b q r Ha (Hb, Hr) EQ; only 1: destruct (div_mod_unique b q (a / b) r (a mod b)); only 1: auto; only 1: apply mod_bound_pos; only 1: order; only 1: order; only 1: rewrite <- div_mod; only 1: order; only 1: order; only 1: auto).	0.854882955551	1011
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_unique_exact	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_same	40	0.0.1.0.0.72.128	synth with cache (only 1: intro H; only 1: symmetry; only 1: apply div_unique with 0; only 1: order; only 1: intuition; only 1: nzsimpl; only 1: solve_proper).	2.08570885658	3767
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_same	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_small	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_small	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_0_l	40	0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: apply div_unique_exact; only 1: order; only 1: order; only 1: nzsimpl; only 1: order).	2.73033189774	2838
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_0_l	40	1.0.0.3.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply mod_unique with 0; only 1: order; only 1: intuition; only 1: now nzsimpl).	3.52281308174	5172
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_1_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_1_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_1_l	40	5.0.2.0	synth with cache (only 1: intros; only 1: apply div_small; only 1: intuition; only 1: order').	1.86339116096	2728
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_1_l	40	0.0.0.2.0	synth with cache (only 1: intros; only 1: apply mod_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.878059148788	437
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_mul	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_le	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_pos	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_str_pos	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_small_iff	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_small_iff	40	0.0.64.5.0.1.64	synth with cache (only 1: intuition; only 1: destruct (lt_ge_cases a b); only 1: auto; only 1: assert (MOD : a mod b < b) by (destruct (mod_bound_pos a b); order); only 1: order'; only 1: apply mod_small; only 1: auto).	20.0868849754	34940
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_str_pos_iff	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_lt	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_mono	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_div_le	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_succ_div_gt	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_exact	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_lt_upper_bound	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_upper_bound	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_lower_bound	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_compat_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_add	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_add	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_add_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul_cancel_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul_cancel_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_distr_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_distr_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_mod	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_idemp_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_idemp_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.add_mod_idemp_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.add_mod_idemp_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.add_mod	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_div	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_mul_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul_le	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_divides	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_0_r	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_succ_r	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_succ_comm	40	0.1.0.0.0.0	synth with cache (only 1: intros; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.0900509357452	7
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_comm	40	1.0.0.0.1.0	synth with cache (only 1: intros n m; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.173461914062	61
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_1_l	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_1_r	40	0.0	synth with cache (only 1: intro n; only 1: now nzsimpl').	0.058699131012	2
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_assoc	40	0.0.0.0.0.65.1	synth with cache (only 1: intros n m; only 1: intuition; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.463244915009	247
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_cancel_l	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_cancel_r	40	0.0.0.0.0.0	synth with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.108636140823	6
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle0	40	0.0.0.0.3.0	synth with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.969548940659	1203
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle1	40	0.0.0.0.4.0.3.0	synth with cache (only 1: intros n m p; only 1: intro; only 1: rewrite <- 2!add_assoc, add_cancel_l; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	4.82067084312	5881
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle2	40	0.0.0.0.0.7.7.0	synth with cache (only 1: intros n m p q; only 1: nzinduct p; only 1: nzsimpl; only 1: rewrite <- 2!add_assoc, add_cancel_l; only 1: apply add_comm; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	13.1432290077	20870
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle3	40	0.0.0.0.1.0	synth with cache (only 1: intros n m p; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.20155620575	48
Coq.Numbers.NatInt.NZAdd.NZAddProp.sub_1_r	40	0.0	synth with cache (only 1: intro n; only 1: now nzsimpl').	0.0385761260986	2
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_wd	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_le_incl	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_refl	40	72.0.0	synth with cache (only 1: intros; only 1: apply lt_eq_cases; only 1: firstorder).	0.7563829422	1344
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_succ_diag_r	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_diag_r	40	0.0.0.7.1.0	synth with cache (only 1: intro n; only 1: apply lt_eq_cases; only 1: constructor; only 1: rewrite lt_succ_r; only 1: apply lt_eq_cases; only 1: now right).	1.1296942234	2647
Coq.Numbers.NatInt.NZOrder.NZOrderProp.neq_succ_diag_l	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.neq_succ_diag_r	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nlt_succ_diag_l	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nle_succ_diag_l	40	256.0.0.1	synth with cache (only 1: intros n H; only 1: apply (lt_irrefl (S n)); only 1: rewrite lt_succ_r; only 1: eauto).	0.0336759090424	21
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_l	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_gt_cases	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_trichotomy	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_asymm	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_trans	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_trans	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_strorder	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_preorder	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_partialorder	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_neq	40	0.0.0.0	synth with cache (only 1: intros n m; only 1: intros LT EQ; only 1: rewrite EQ in LT; only 1: false_hyp LT lt_irrefl).	0.0279259681702	4
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_neq	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.eq_le_incl	40	193.0.0	synth with cache (only 1: intros; only 1: apply lt_eq_cases; only 1: now constructor).	0.0304439067841	13
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_stepl	40	1.0	synth with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0260961055756	3
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_stepr	40	1.0	synth with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0265209674835	3
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_stepl	40	1.0	synth with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0242800712585	3
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_stepr	40	1.0	synth with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0270471572876	3
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_lt_trans	40	1	synth with cache (only 1: order).	0.0752241611481	30
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_le_trans	40	64.192.0	synth with cache (only 1: intros x y z; only 1: intro; only 1: intuition order).	0.0317268371582	29
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_antisymm	40	3	synth with cache (only 1: order).	0.255537986755	246
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_r	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_succ_l	40	0.3.0	synth with cache (only 1: intros x y H; only 1: apply le_succ_l; only 1: now apply lt_le_incl).	0.15767788887	236
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_le_succ_r	40	256.1.5.0.256	synth with cache (only 1: intros LT EQ; only 1: intro H; only 1: apply lt_le_incl; only 1: rewrite lt_succ_r; only 1: auto using Private_OrderTac.Tac.eq_sym).	2.49929404259	3797
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_lt_succ_r	40	0.0.5.0	synth with cache (only 1: intros n m H; only 1: rewrite lt_succ_r; only 1: apply lt_eq_cases; only 1: now left).	0.900658845901	1380
Coq.Numbers.NatInt.NZOrder.NZOrderProp.succ_lt_mono	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2.2.0	synth with cache (only 1: intros; only 1: rewrite lt_succ_r; only 1: nzinduct m n; only 1: split; only 1: intro H; only 1: false_hyp H lt_irrefl; only 1: intro H; only 1: false_hyp H nle_succ_diag_l; only 1: intro m; only 1: rewrite (lt_eq_cases (S n) (S m)), !lt_succ_r, (lt_eq_cases n m), succ_inj_wd; only 1: rewrite or_cancel_r; only 1: reflexivity; only 1: intros LT EQ; only 1: rewrite EQ in LT; only 1: false_hyp LT lt_irrefl; only 1: intros LE EQ; only 1: rewrite EQ in LE; only 1: false_hyp LE nle_succ_diag_l).	6.44967699051	8044
Coq.Numbers.NatInt.NZOrder.NZOrderProp.succ_le_mono	40	0.4.1.66	synth with cache (only 1: simpl_relation; only 1: rewrite (lt_eq_cases (S n) (S m)), !lt_succ_r, (lt_eq_cases n m), succ_inj_wd; only 1: rewrite <- le_succ_l; only 1: tauto).	3.89602589607	4486
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_0_1	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_0_1	40	0.5.0	synth with cache (only 1: rewrite one_succ; only 1: apply lt_le_incl; only 1: apply lt_succ_diag_r).	0.160624027252	240
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_1_2	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_0_2	40	0.2.0	synth with cache (only 1: rewrite two_succ; only 1: rewrite lt_succ_r; only 1: apply lt_le_incl, lt_0_1).	0.0700650215149	66
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_0_2	40	0.3.1.0.1	synth with cache (only 1: transitivity 1; only 1: apply lt_le_incl, lt_0_1; only 1: rewrite two_succ; only 1: apply lt_le_incl; only 1: apply lt_succ_diag_r).	0.201364994049	259
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_1_l	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_ge_cases	40	2.0.0.8.0	synth with cache (only 1: intros n m; only 1: rewrite lt_eq_cases; only 1: generalize (le_gt_cases n m); only 1: rewrite lt_eq_cases; only 1: intuition).	3.47806286812	6812
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_ge_cases	40	0.0.2.0	synth with cache (only 1: intros n m; only 1: destruct (le_gt_cases m n); only 1: intuition order; only 1: intuition order).	0.164741039276	122
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_gt_cases	40	2.4.129.0.0.0	synth with cache (only 1: intros n m; only 1: generalize (le_gt_cases n m); only 1: rewrite lt_eq_cases; only 1: red; only 1: generalize (le_gt_cases n m); only 1: intuition order).	14.0030009747	6088
Coq.Numbers.NatInt.NZOrder.NZOrderProp.eq_decidable	40	1.1.1.0.65.0.0	synth with cache (only 1: intros n m; only 1: generalize (le_gt_cases n m); only 1: unfold decidable; only 1: rewrite lt_eq_cases; only 1: intuition; only 1: intuition order; only 1: intuition order).	7.29352211952	1488
Coq.Numbers.NatInt.NZOrder.NZOrderProp.eq_dne	40	0.0.3.1	synth with cache (only 1: intros; only 1: destruct (lt_trichotomy n m); only 1: intuition order; only 1: intuition order).	4.46990299225	918
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_ngt	40	4.128	synth with cache (only 1: intros z Hz; only 1: intuition order).	0.464407920837	473
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nlt_ge	40	0	synth with cache (only 1: intuition order).	0.0181560516357	1
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_decidable	40	0.0.0.2.0	synth with cache (only 1: intros n m; only 1: destruct (lt_trichotomy n m) as [| [| ]]; only 1: (right; order) || (left; order); only 1: (right; order) || (left; order); only 1: (right; order) || (left; order)).	0.602761030197	251
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_dne	40	2.1.0.1.0	synth with cache (only 1: intros n m; only 1: generalize (le_gt_cases n m); only 1: rewrite lt_eq_cases; only 1: generalize (le_gt_cases n m); only 1: intuition order).	0.594527006149	518
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nle_gt	40	0	synth with cache (only 1: intuition order).	0.0183260440826	1
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_nge	40	0	synth with cache (only 1: intuition order).	0.0179479122162	1
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_decidable	40	0.0.2.194.0	synth with cache (only 1: intros n m; only 1: compute; only 1: destruct (le_gt_cases n m); only 1: intuition order; only 1: intuition order).	1.33061599731	609
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_dne	40	0.0.2.1.0	synth with cache (only 1: intros n m; only 1: rewrite lt_eq_cases; only 1: destruct (lt_trichotomy n m); only 1: intuition order; only 1: intuition order).	1.76073002815	786
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nlt_succ_r	40	0.1.1.0.0.0.0.0	synth with cache (only 1: intros n m; only 1: split; only 1: intro H; only 1: apply le_succ_l; only 1: order; only 1: intro H; only 1: rewrite lt_succ_r; only 1: order).	0.394408941269	294
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_exists_pred_strong	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_exists_pred	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_succ_pred	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.rs_rs'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.rs'_rs''	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.rbase	40	64.194.1	synth with cache (only 1: intros RS' n; only 1: intros H; only 1: intuition order).	0.0871601104736	115
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.A'A_right	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.strong_right_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.right_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.right_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.strong_right_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.ls_ls'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.ls'_ls''	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.lbase	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.A'A_left	40	67.13	synth with cache (only 1: intros L R n; only 1: firstorder).	3.23163414001	10448
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.strong_left_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.left_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.left_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.strong_left_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.order_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.order_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.lt_ind	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.le_ind	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.WF.Rlt_wd	40	2.193.68.64.65	synth with cache (only 1: intro y0; only 1: compute; only 1: intro H1; only 1: intros RS' n; only 1: intuition order).	3.73128604889	4515
Coq.Numbers.NatInt.NZOrder.NZOrderProp.WF.Rgt_wd	40	128.14	synth with cache (only 1: compute; only 1: intuition order).	6.08365011215	5150
Coq.Numbers.NatInt.NZOrder.NZOrderProp.WF.lt_wf	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.WF.gt_wf	40
Coq.Numbers.NatInt.NZDomain.nat_rect_wd	40	0.0.0.0.64.193.64	synth with cache (only 1: intros m H; only 1: compute; only 1: PeanoNat.Nat.induct n; only 1: intros; only 1: intuition; only 1: intros P z Hz IH x Hxz; only 1: auto).	1.41784000397	513
Coq.Numbers.NatInt.NZDomain.NZDomainProp.itersucc_or_itersucc	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.succ_swap_pred	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.itersucc_or_iterpred	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.itersucc0_or_iterpred0	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.initial_alt	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.initial_alt2	40	513.320.193.2.65.192	synth with cache (only 1: red; only 1: intro z; only 1: split; only 1: compute; only 1: CRelationClasses.simpl_crelation; only 1: firstorder).	0.657631874084	1695
Coq.Numbers.NatInt.NZDomain.NZDomainProp.InitialExists.initial_unique	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.InitialExists.initial_ancestor	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.InitialExists.SuccPred.succ_pred_approx	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.InitialDontExists.succ_onto_gives_succ_pred	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.InitialDontExists.succ_onto_pred_injective	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.bi_induction_pred	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.central_induction_pred	40
Coq.Numbers.NatInt.NZDomain.NZOfNat.ofnat_zero	40	65.326	synth with cache (only 1: compute; only 1: solve_proper).	0.0757601261139	506
Coq.Numbers.NatInt.NZDomain.NZOfNat.ofnat_succ	40	0.1	synth with cache (only 1: intros a; only 1: reflexivity).	0.0114269256592	3
Coq.Numbers.NatInt.NZDomain.NZOfNat.ofnat_pred	40	0.321.0.0.0.0	synth with cache (only 1: PeanoNat.Nat.cases ltac:(n); only 1: intro H; only 1: exfalso; only 1: now apply H; only 1: simpl_relation; only 1: now rewrite PeanoNat.Nat.pred_succ).	0.113913059235	49
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_S_gt_0	40	1.0.387.3	synth with cache (only 1: induction n; only 1: CRelationClasses.simpl_crelation; only 1: apply lt_succ_diag_r; only 1: now apply PeanoNat.Nat.lt_lt_succ_r).	0.747725009918	2071
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_S_neq_0	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_injective	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_eq	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_lt	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_le	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_add_l	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_add	40	128.1.1.0.1.132.388.67	synth with cache (only 1: intros n H; only 1: induction n; only 1: rewrite ?PeanoNat.Nat.add_0_l, ?PeanoNat.Nat.add_0_r, ?H; only 1: reflexivity; only 1: rewrite ofnat_succ, add_succ_l; only 1: PeanoNat.Nat.nzsimpl; only 1: rewrite <- IHn; only 1: now PeanoNat.Nat.nzsimpl).	14.1656701565	22192
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_mul	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_sub_r	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_sub	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_0_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_0_l'	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_1_r	40	0.1	synth with cache (only 1: intro n; only 1: now nzsimpl').	0.0558938980103	3
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_1_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_2_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_eq_0	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_nonzero	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_eq_0_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_add_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_mul_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_mul_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_nonneg	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_pos_nonneg	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_gt_1	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_inj_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_inj_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_l_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_l_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_r_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_r_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_gt_lin_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_add_lower	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_add_upper	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_wd	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_1_l	40	0.147.135	synth with cache (only 1: intros x; only 1: exists x; only 1: now nzsimpl').	20.4616889954	50356
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_0_r	40	0.0.1.2.0.257	synth with cache (only 1: CRelationClasses.simpl_crelation; only 1: exists 0; only 1: nzinduct n; only 1: now nzsimpl; only 1: intros; only 1: now nzsimpl).	0.746031045914	1212
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_0_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.eq_mul_1_nonneg	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.eq_mul_1_nonneg'	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_1_r_nonneg	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_refl	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_trans	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_antisym_nonneg	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_mono_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_mono_r	40	0.68.0.0	synth with cache (only 1: intros n m p (q, Hq); only 1: exists q; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now rewrite mul_shuffle3, Hq).	0.944540023804	1376
Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_cancel_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_cancel_r	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_add_r	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_mul_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_mul_r	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_factor_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_factor_r	40	0.8.0	synth with cache (only 1: intros; only 1: rewrite mul_comm; only 1: apply divide_mul_l, divide_refl).	1.92701506615	2848
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_pos_le	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_unique	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_wd	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_divide_iff	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_unique_alt	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_comm	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_assoc	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_0_l_nonneg	40	192.3.0.0.1.0.259	synth with cache (only 1: intros h1 h2; only 1: apply gcd_unique; only 1: order; only 1: exists 0; only 1: now nzsimpl; only 1: apply divide_refl; only 1: now f_equiv).	1.79208612442	1742
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_0_r_nonneg	40	0.1.1.0.0.0	synth with cache (only 1: intros; only 1: apply gcd_unique; only 1: trivial; only 1: apply divide_refl; only 1: apply divide_0_r; only 1: trivial).	0.126415014267	85
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_1_l	40	0.0.0.2.0.1.0	synth with cache (only 1: intros; only 1: apply gcd_unique; only 1: apply lt_le_incl, lt_0_1; only 1: apply divide_refl; only 1: exists n; only 1: now nzsimpl; only 1: trivial).	0.607465982437	720
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_1_r	40	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply gcd_unique; only 1: trivial using divide_1_l, le_0_1; only 1: exists n; only 1: now nzsimpl; only 1: trivial using divide_1_l, le_0_1; only 1: trivial using divide_1_l, le_0_1).	0.046108007431	7
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_diag_nonneg	40	0.1.1.0.1.0	synth with cache (only 1: intros; only 1: apply gcd_unique; only 1: trivial; only 1: apply divide_refl; only 1: apply divide_refl; only 1: trivial).	0.146123886108	168
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_eq_0_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_eq_0_r	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_eq_0	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_mul_diag_l	40	0.1.1.0.1.2	synth with cache (only 1: intros n m Hn; only 1: apply gcd_unique; only 1: trivial; only 1: trivial using divide_refl; only 1: apply divide_mul_l, divide_refl; only 1: trivial using divide_refl).	0.441408872604	469
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_gcd_iff	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_wd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Odd_wd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_wd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_wd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_or_Odd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.double_below	40
Coq.Numbers.NatInt.NZParity.NZParityProp.double_above	40	0.0.0.0.0.0	synth with cache (only 1: intros n m; only 1: rewrite <- le_succ_l, (mul_le_mono_pos_l (S n) m 2); only 1: rewrite two_succ; only 1: nzsimpl; only 1: now rewrite le_succ_l; only 1: order').	0.230384111404	6
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_Odd_False	40
Coq.Numbers.NatInt.NZParity.NZParityProp.orb_even_odd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.negb_odd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.negb_even	40	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (Even_or_Odd n), (Even_Odd_False n); only 1: rewrite <- even_spec, <- odd_spec; only 1: destruct (odd n), (even n); only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).	0.581391096115	297
Coq.Numbers.NatInt.NZParity.NZParityProp.even_0	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_0	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_1	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_1	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_2	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_2	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Odd_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_succ	40	1.1.0.0.192.2	synth with cache (only 1: intro n; only 1: hnf; only 1: rewrite <- even_spec, <- odd_spec; only 1: split; only 1: now rewrite <- negb_odd, odd_succ, negb_even; only 1: now rewrite <- negb_odd, odd_succ, negb_even).	0.761979103088	1135
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_succ_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Odd_succ_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_succ_succ	40	0.6.0	synth with cache (only 1: intros; only 1: rewrite eq_iff_eq_true, 2!even_spec; only 1: now rewrite Even_succ, Odd_succ).	2.73003101349	2307
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_succ_succ	40	0.7.0	synth with cache (only 1: intros; only 1: rewrite eq_iff_eq_true, 2!odd_spec; only 1: now rewrite Odd_succ, Even_succ).	0.800510168076	2423
Coq.Numbers.NatInt.NZParity.NZParityProp.even_add	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_mul	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_mul	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_even	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add_even	40	0.0.0.2.0	synth with cache (only 1: intros n m Hm; only 1: rewrite <- !negb_even; only 1: apply even_spec in Hm; only 1: rewrite even_add, Hm; only 1: now destruct (even n)).	1.78167581558	481
Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_mul_even	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add_mul_even	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_mul_2	40	1.132.259.0.4	synth with cache (only 1: intros; only 1: apply even_add_even; only 1: simpl_relation; only 1: exists m; only 1: now nzsimpl).	8.32062983513	8024
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add_mul_2	40	1.132.259.1.0	synth with cache (only 1: intros; only 1: apply odd_add_even; only 1: simpl_relation; only 1: exists m; only 1: now nzsimpl).	5.41417813301	7226
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_mono_l	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_mono_r	40	0.0.0.0.0.0	synth with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite <- succ_lt_mono).	0.127712011337	6
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_mono	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_mono_l	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_mono_r	40	0.0.0.0.0.0	synth with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite <- succ_le_mono).	0.153504133224	6
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_mono	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_le_mono	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_lt_mono	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_pos_pos	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_pos_nonneg	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonneg_pos	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonneg_nonneg	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_add_pos_l	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_add_pos_r	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_lt_add_lt	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_le_add_lt	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_le_add_le	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_cases	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_cases	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_neg_cases	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_pos_cases	40	0.0.0	synth with cache (only 1: intros n m H; only 1: apply add_lt_cases; only 1: now nzsimpl).	0.0414791107178	3
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonpos_cases	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonneg_cases	40	0.0.0	synth with cache (only 1: intros n m H; only 1: apply add_le_cases; only 1: now nzsimpl).	0.0381438732147	3
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_exists_sub	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_0_r	40	2.0.0.9.0	synth with cache (only 1: intro; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: now nzsimpl').	0.849693059921	1329
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_succ_r	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_comm	40	1.0.0.0.0.0	synth with cache (only 1: intros n m; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite add_cancel_r).	0.120990037918	7
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_add_distr_r	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_add_distr_l	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_assoc	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_1_l	40	0.1	synth with cache (only 1: intro n; only 1: now nzsimpl').	0.0654881000519	6
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_1_r	40	0.0	synth with cache (only 1: intro n; only 1: now nzsimpl').	0.0428838729858	2
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle0	40	0.0.0.0.0.0.0.195	synth with cache (only 1: intros H; only 1: intros n m; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro n; only 1: nzsimpl; only 1: rewrite mul_add_distr_r; only 1: now rewrite add_cancel_r).	2.23871183395	1422
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle1	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle2	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle3	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_nonneg	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_unique	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_wd	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_spec_alt	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_unique'	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pred_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_1	40	0.0.0.0.0.5.0.4	synth with cache (only 1: apply log2_unique; only 1: order_pos; only 1: nzsimpl; only 1: split; only 1: order; only 1: rewrite two_succ; only 1: apply lt_succ_diag_r; only 1: order_pos).	1.41613197327	1457
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_2	40	1.0.0.1.0.2	synth with cache (only 1: apply log2_unique' with 0; only 1: apply lt_le_incl, lt_0_1; only 1: split; only 1: order_pos; only 1: order_pos; only 1: now nzsimpl).	0.623211860657	468
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pos	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_null	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_le_mono	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_lt_cancel	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_le_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_lt_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_lt_lin	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_le_lin	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_mul_below	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_mul_above	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_mul_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_double	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_same	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_succ_le	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_succ_or	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_eq_succ_is_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_eq_succ_iff_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_succ_double	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_add_le	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.add_log2_lt	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eqn0	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eqn	40	0.0.0.0.256.3.130	synth with cache (only 1: intro; only 1: unfold log2_up; only 1: intro x; only 1: case compare_spec; only 1: order; only 1: order; only 1: order).	10.5069429874	19831
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_spec	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_nonpos	40	0.3.0.0.0.0.64	synth with cache (only 1: intro y0; only 1: intros H; only 1: unfold log2_up; only 1: case compare_spec; only 1: order; only 1: order'; only 1: order).	3.70140600204	3140
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_wd	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_nonneg	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_unique	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_1	40	0.0	synth with cache (only 1: apply log2_up_eqn0; only 1: order).	0.0179579257965	2
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_2	40	1.1.4.257.195.0.0.1.1	synth with cache (only 1: rewrite <- (pow_1_r 2); only 1: apply log2_up_unique; only 1: rewrite one_succ; only 1: apply lt_succ_diag_r; only 1: nzsimpl'; only 1: constructor; only 1: apply lt_succ_r; only 1: now nzsimpl; only 1: now apply eq_le_incl).	14.8135020733	19523
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.le_log2_log2_up	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.le_log2_up_succ_log2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_log2_up_spec	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_log2_up_exact	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_pos	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_null	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_le_mono	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_lt_cancel	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_lt_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_le_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_lt_lin	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_le_lin	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_mul_above	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_mul_below	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_mul_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_double	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_same	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_le	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_or	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eq_succ_is_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eq_succ_iff_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_double	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_add_le	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.add_log2_up_lt	40
Coq.Numbers.NatInt.NZBase.NZBaseProp.eq_sym_iff	40	5	synth with cache (only 1: firstorder).	0.183784008026	368
Coq.Numbers.NatInt.NZBase.NZBaseProp.neq_sym	40	1.0.0.0.1.256	synth with cache (only 1: intros A C h1 h2; only 1: apply h1; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: assumption).	0.213311910629	281
Coq.Numbers.NatInt.NZBase.NZBaseProp.eq_stepl	40	0.0.6	synth with cache (only 1: intros x y z H1 H2; only 1: rewrite <- H2; only 1: auto).	0.103440999985	299
Coq.Numbers.NatInt.NZBase.NZBaseProp.succ_inj	40
Coq.Numbers.NatInt.NZBase.NZBaseProp.succ_inj_wd	40	64.1.0.1.1.1.1.129.0.0.0.0.0.6	synth with cache (only 1: intros A P; only 1: split; only 1: symmetry; only 1: apply pred_wd in H; only 1: now do 2 rewrite pred_succ in H; only 1: symmetry; only 1: rewrite H; only 1: apply pred_wd in H; only 1: apply pred_wd in H; only 1: apply pred_wd in H; only 1: apply pred_wd in H; only 1: apply pred_wd in H; only 1: apply pred_wd in H; only 1: CRelationClasses.simpl_crelation).	13.4301769733	51220
Coq.Numbers.NatInt.NZBase.NZBaseProp.succ_inj_wd_neg	40	0.0.0.0.2.0.1.0	synth with cache (only 1: intros; only 1: apply imp_iff_compat_r; only 1: split; only 1: intros; only 1: apply pred_wd in H; only 1: now do 2 rewrite pred_succ in H; only 1: symmetry; only 1: now f_equiv).	0.498867988586	367
Coq.Numbers.NatInt.NZBase.NZBaseProp.CentralInduction.central_induction	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_pred	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_pos_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_pos_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_neg_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_neg_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonneg_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonpos_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonneg_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonpos_r	40	0.1.0.0.0.0.0.0.1.0.0	synth with cache (only 1: intros n m p H1 H2; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: le_elim H1; only 1: le_elim H2; only 1: apply lt_le_incl; only 1: now apply mul_lt_mono_neg_l; only 1: apply eq_le_incl; only 1: now rewrite H2; only 1: apply eq_le_incl; only 1: rewrite H1; only 1: now do 2 rewrite mul_0_l).	0.689460992813	596
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_cancel_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_cancel_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_id_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_id_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_pos_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_pos_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_neg_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_neg_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_pos	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_neg_neg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_neg	40	1.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (mul_0_l m); only 1: now apply mul_lt_mono_neg_r).	0.0427391529083	4
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_neg_pos	40	0.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (mul_0_l m); only 1: now apply mul_lt_mono_pos_r).	0.0353121757507	3
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_cancel_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_cancel_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_cancel_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_cancel_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.lt_1_mul_pos	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_mul_0	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.neq_mul_0	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_square_0	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_mul_0_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_mul_0_r	40	0.1.0.0.0	synth with cache (only 1: intros n m H1 H2; only 1: apply eq_mul_0 in H1; only 1: destruct H1 as [H1| H1]; only 1: false_hyp H1 H2; only 1: assumption).	0.0329368114471	6
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.lt_0_mul	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_lt_mono_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_le_mono_nonneg	40	1.0.1.0.1.0	synth with cache (only 1: intros n m H1 H2; only 1: apply mul_le_mono_nonneg; only 1: order; only 1: assumption; only 1: order; only 1: assumption).	0.309808015823	432
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_lt_simpl_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_le_simpl_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_2_mono_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.add_le_mul	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.crossmul_le_addsquare	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.add_square_le	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_add_le	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.quadmul_le_squareadd	40
Coq.Structures.OrdersTac.OrderFacts.eq_refl	40	0.0	synth with cache (only 1: intros; only 1: reflexivity).	0.0139031410217	2
Coq.Structures.OrdersTac.OrderFacts.le_refl	40
Coq.Structures.OrdersTac.OrderFacts.lt_irrefl	40	4.73.65	synth with cache (only 1: simpl_relation; only 1: elim (CRelationClasses.StrictOrder_Irreflexive x); only 1: auto).	1.69736886024	6193
Coq.Structures.OrdersTac.OrderFacts.eq_sym	40	65.64	synth with cache (only 1: intro H1; only 1: intuition).	0.0477240085602	40
Coq.Structures.OrdersTac.OrderFacts.le_antisym	40
Coq.Structures.OrdersTac.OrderFacts.neq_sym	40	0	synth with cache (only 1: auto with *).	0.0131709575653	1
Coq.Structures.OrdersTac.OrderFacts.trans	40
Coq.Structures.OrdersTac.OrderFacts.eq_neq	40
Coq.Structures.OrdersTac.OrderFacts.neq_eq	40	0	synth with cache (only 1: eauto using eq_trans, eq_sym).	0.018394947052	1
Coq.Structures.OrdersTac.OrderFacts.not_neq_eq	40
Coq.Structures.OrdersTac.OrderFacts.not_ge_lt	40
Coq.Structures.OrdersTac.OrderFacts.not_gt_le	40	0.2.0.1.0.0	synth with cache (only 1: intros x y H; only 1: destruct (P.lt_total x y); only 1: rewrite P.le_lteq; only 1: intuition; only 1: rewrite P.le_lteq; only 1: intuition).	0.204288005829	234
Coq.Structures.OrdersTac.OrderFacts.le_neq_lt	40	0.2.0	synth with cache (only 1: intros x y; only 1: rewrite P.le_lteq; only 1: intuition).	0.111350059509	89
Coq.Structures.OrdersEx.PairOrderedType.lt_strorder	40
Coq.Structures.OrdersEx.PairOrderedType.lt_compat	40
Coq.Structures.OrdersEx.PairOrderedType.compare_spec	40
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.bits_lt_antirefl	40	0.3.2.0.649.0	synth with cache (only 1: intros; only 1: induction x; only 1: simpl; only 1: intuition; only 1: now f_equal; only 1: now f_equal).	24.0896160603	22629
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.bits_lt_trans	40
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.lt_compat	40	4	synth with cache (only 1: solve_proper).	1.96129703522	1113
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.lt_strorder	40
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.compare_spec	40
Coq.Structures.OrderedTypeEx.Nat_as_OT.lt_trans	40	3	synth with cache (only 1: Nat.order).	0.094624042511	99
Coq.Structures.OrderedTypeEx.Nat_as_OT.lt_not_eq	40	4.0	synth with cache (only 1: intros n m H; only 1: Nat.order).	0.618414163589	527
Coq.Structures.OrderedTypeEx.Nat_as_OT.compare	40
Coq.Structures.OrderedTypeEx.Z_as_OT.lt_trans	40	1.0	synth with cache (only 1: intros x y z; only 1: intuition auto; Z.Private_Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0304281711578	3
Coq.Structures.OrderedTypeEx.Z_as_OT.lt_not_eq	40	0	synth with cache (only 1: Z.order).	0.0221040248871	1
Coq.Structures.OrderedTypeEx.Z_as_OT.compare	40
Coq.Structures.OrderedTypeEx.Positive_as_OT.lt_not_eq	40	130.320.0.68.65.3.64	synth with cache (only 1: intro; only 1: intros; only 1: red; only 1: inversion 1; only 1: eapply Pos.Private_Tac.lt_irrefl; only 1: repeat red; only 1: Pos.Private_Tac.order).	9.14261102676	16573
Coq.Structures.OrderedTypeEx.Positive_as_OT.compare	40
Coq.Structures.OrderedTypeEx.N_as_OT.compare	40
Coq.Structures.OrderedTypeEx.PairOrderedType.eq_refl	40	1	synth with cache (only 1: now Z.swap_greater).	0.0342690944672	2
Coq.Structures.OrderedTypeEx.PairOrderedType.eq_sym	40	1	synth with cache (only 1: firstorder).	0.0717380046844	38
Coq.Structures.OrderedTypeEx.PairOrderedType.eq_trans	40
Coq.Structures.OrderedTypeEx.PairOrderedType.lt_trans	40
Coq.Structures.OrderedTypeEx.PairOrderedType.lt_not_eq	40
Coq.Structures.OrderedTypeEx.PairOrderedType.compare	40
Coq.Structures.OrderedTypeEx.PairOrderedType.eq_dec	40
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.bits_lt_trans	40
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.lt_trans	40
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.bits_lt_antirefl	40
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.lt_not_eq	40
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.compare	40
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.eq_dec	40	0	synth with cache (only 1: decide equality).	0.0346941947937	1
Coq.Structures.OrderedTypeEx.String_as_OT.nat_of_ascii_inverse	40
Coq.Structures.OrderedTypeEx.String_as_OT.lts_tail_unique	40	321.192.326	synth with cache (only 1: inversion 1; only 1: N.auto'; only 1: Nat.order').	1.12438201904	1746
Coq.Structures.OrderedTypeEx.String_as_OT.lt_trans	40
Coq.Structures.OrderedTypeEx.String_as_OT.lt_not_eq	40
Coq.Structures.OrderedTypeEx.String_as_OT.compare	40
Coq.Structures.Orders.Compare2EqBool.eqb_eq	40
Coq.Structures.Orders.OT_to_Full.le_lteq	40	0.129.0.0.1.0	synth with cache (only 1: split; only 1: destruct 1; only 1: auto; only 1: auto; only 1: CRelationClasses.reduce; only 1: eauto).	0.0686180591583	66
Coq.Structures.Orders.OTF_LtIsTotal.lt_total	40
Coq.Structures.Orders.OTF_to_TTLB.leb_le	40
Coq.Structures.Orders.OTF_to_TTLB.leb_total	40
Coq.Structures.Orders.OTF_to_TTLB.leb_trans	40
Coq.Structures.Orders.TTLB_to_OTF.compare_spec	40
Coq.Structures.Orders.TTLB_to_OTF.eqb_eq	40
Coq.Structures.Orders.TTLB_to_OTF.eq_equiv	40
Coq.Structures.Orders.TTLB_to_OTF.lt_strorder	40
Coq.Structures.Orders.TTLB_to_OTF.lt_compat	40
Coq.Structures.Orders.TTLB_to_OTF.le_lteq	40
Coq.Structures.DecidableTypeEx.PairDecidableType.eq_refl	40	321.0	synth with cache (only 1: intros; only 1: now try BinNat.N.order').	0.0334830284119	18
Coq.Structures.DecidableTypeEx.PairDecidableType.eq_sym	40	1.321	synth with cache (only 1: intros P F; only 1: firstorder using Sorted_inv).	0.16305398941	62
Coq.Structures.DecidableTypeEx.PairDecidableType.eq_trans	40	2.262.2	synth with cache (only 1: intros ? ? ? [? ?] [? ?]; only 1: red; only 1: eauto).	34.9228200912	45316
Coq.Structures.DecidableTypeEx.PairDecidableType.eq_dec	40
Coq.Structures.DecidableTypeEx.PairUsualDecidableType.eq_dec	40
Coq.Structures.Equalities.UpdateEq.eq_equiv	40	196.0.1.22	synth with cache (only 1: constructor; only 1: simpl_relation; only 1: auto with *; only 1: eauto).	0.528804063797	1602
Coq.Structures.Equalities.HasEqDec2Bool.eqb_eq	40
Coq.Structures.Equalities.HasEqBool2Dec.eq_dec	40
Coq.Structures.Equalities.BoolEqualityFacts.eqb_compat	40
Coq.Structures.Equalities.BoolEqualityFacts.eqb_spec	40
Coq.Structures.Equalities.BoolEqualityFacts.eqb_neq	40
Coq.Structures.Equalities.BoolEqualityFacts.eqb_refl	40	3.0.0.0.0.0.0.0	synth with cache (only 1: apply eqb_eq; only 1: apply eqb_eq; only 1: apply eqb_eq; only 1: apply eqb_eq; only 1: apply eqb_eq; only 1: apply eqb_eq; only 1: apply eqb_eq; only 1: reflexivity).	0.793818950653	837
Coq.Structures.Equalities.BoolEqualityFacts.eqb_sym	40
Coq.Structures.OrderedType.MOT_to_OT.eq_dec	40
Coq.Structures.OrderedType.OrderedTypeFacts.eq_equiv	40	6.0.11.0.1.66.1	synth with cache (only 1: split; only 1: firstorder; only 1: red; only 1: intros; only 1: intuition; only 1: red; only 1: apply Logic.eq_trans).	5.99233388901	16146
Coq.Structures.OrderedType.OrderedTypeFacts.lt_antirefl	40
Coq.Structures.OrderedType.OrderedTypeFacts.lt_strorder	40	196.64.193.0.0.0.265.134.256	synth with cache (only 1: constructor; only 1: red; only 1: CRelationClasses.simpl_crelation; only 1: absurd (eq x x); only 1: auto with ordered_type; only 1: auto with ordered_type; only 1: intros p Hn Hm; only 1: intros LT; only 1: eauto with *).	8.28069090843	33110
Coq.Structures.OrderedType.OrderedTypeFacts.lt_eq	40
Coq.Structures.OrderedType.OrderedTypeFacts.eq_lt	40
Coq.Structures.OrderedType.OrderedTypeFacts.lt_compat	40
Coq.Structures.OrderedType.OrderedTypeFacts.lt_total	40
Coq.Structures.OrderedType.OrderedTypeFacts.IsTO.le_lteq	40	128	synth with cache (only 1: now try PeanoNat.Nat.order').	0.0343120098114	25
Coq.Structures.OrderedType.OrderedTypeFacts.le_eq	40
Coq.Structures.OrderedType.OrderedTypeFacts.eq_le	40	0	synth with cache (only 1: order).	0.0201859474182	1
Coq.Structures.OrderedType.OrderedTypeFacts.neq_eq	40	1	synth with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0260531902313	2
Coq.Structures.OrderedType.OrderedTypeFacts.eq_neq	40	0	synth with cache (only 1: order).	0.01988697052	1
Coq.Structures.OrderedType.OrderedTypeFacts.le_lt_trans	40	0	synth with cache (only 1: order).	0.0191090106964	1
Coq.Structures.OrderedType.OrderedTypeFacts.lt_le_trans	40	0	synth with cache (only 1: order).	0.0200271606445	1
Coq.Structures.OrderedType.OrderedTypeFacts.le_neq	40	0	synth with cache (only 1: order).	0.0199010372162	1
Coq.Structures.OrderedType.OrderedTypeFacts.le_trans	40	0	synth with cache (only 1: order).	0.0373899936676	1
Coq.Structures.OrderedType.OrderedTypeFacts.le_antisym	40	0	synth with cache (only 1: order).	0.0181541442871	1
Coq.Structures.OrderedType.OrderedTypeFacts.neq_sym	40	194.0.0	synth with cache (only 1: red; only 1: intros h1 h2; only 1: CRelationClasses.simpl_crelation).	0.0307428836823	14
Coq.Structures.OrderedType.OrderedTypeFacts.lt_le	40	0	synth with cache (only 1: order).	0.017315864563	1
Coq.Structures.OrderedType.OrderedTypeFacts.gt_not_eq	40	2.263.2	synth with cache (only 1: intro H; only 1: compute; only 1: order).	0.780888080597	2371
Coq.Structures.OrderedType.OrderedTypeFacts.eq_not_lt	40	0	synth with cache (only 1: order).	0.0174520015717	1
Coq.Structures.OrderedType.OrderedTypeFacts.eq_not_gt	40	0	synth with cache (only 1: order).	0.0178000926971	1
Coq.Structures.OrderedType.OrderedTypeFacts.lt_not_gt	40	0	synth with cache (only 1: order).	0.0171670913696	1
Coq.Structures.OrderedType.OrderedTypeFacts.elim_compare_eq	40
Coq.Structures.OrderedType.OrderedTypeFacts.elim_compare_lt	40	0.0.0.0.0.0.448.705.0.0	synth with cache (only 1: intros; only 1: case (compare x y); only 1: intros n; only 1: eauto using OrderTac.eq_trans, OrderTac.eq_sym; only 1: intros H'; only 1: exfalso; only 1: order; only 1: intros H'; only 1: exfalso; only 1: order).	0.414437055588	667
Coq.Structures.OrderedType.OrderedTypeFacts.elim_compare_gt	40	0.1.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: case (compare x y); only 1: intros H'; only 1: exfalso; only 1: order; only 1: intros H'; only 1: exfalso; only 1: order; only 1: intros H'; only 1: exists H'; only 1: auto).	0.280779123306	204
Coq.Structures.OrderedType.OrderedTypeFacts.lt_dec	40
Coq.Structures.OrderedType.OrderedTypeFacts.eqb_alt	40
Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.In_eq	40	0.0.0	synth with cache (only 1: intros l x y H H'; only 1: rewrite <- H; only 1: auto).	0.0533168315887	3
Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.ListIn_In	40	1.0.577.0.0.1	synth with cache (only 1: induction l; only 1: simpl; only 1: inversion 1; only 1: firstorder using Sorted_inv; only 1: subst; only 1: firstorder).	2.11463785172	3961
Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Inf_lt	40	3.0.576.320.325.64	synth with cache (only 1: intro H; only 1: intro LE; only 1: intros n m; only 1: induction 1 as [l| x l l' AD IH]; only 1: auto with ordered_type; only 1: eauto with *).	12.386081934	25241
Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Inf_eq	40	0.193.2.4	synth with cache (only 1: intros x y z; only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: rewrite H by intuition; only 1: eauto).	2.60159301758	6790
Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Sort_Inf_In	40
Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.ListIn_Inf	40	0.0.320.0.0.0.0.0	synth with cache (only 1: simple induction l; only 1: simpl; only 1: intros; only 1: constructor; only 1: simpl; only 1: Bool.destr_bool; only 1: constructor; only 1: auto).	0.0648632049561	18
Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.In_Inf	40	64.0.0.1	synth with cache (only 1: simple induction l; only 1: intros; only 1: constructor; only 1: firstorder).	0.0411128997803	6
Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Inf_alt	40
Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Sort_NoDup	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_eqk	40	385.2	synth with cache (only 1: intros x y H; only 1: now apply H).	0.19710111618	75
Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_right_r	40	1	synth with cache (only 1: eauto using OrderTac.eq_trans, OrderTac.eq_sym).	0.0172600746155	2
Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_right_l	40	0	synth with cache (only 1: auto).	0.0168969631195	1
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_refl	40	0.1	synth with cache (only 1: intros l'; only 1: auto with ordered_type).	0.0204558372498	3
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_refl	40	0	synth with cache (only 1: auto with ordered_type).	0.017166852951	1
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_sym	40	0.0	synth with cache (only 1: unfold eqk, eqke; only 1: intuition).	0.0258409976959	2
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_sym	40	0.0	synth with cache (only 1: unfold eqk, eqke; only 1: intuition).	0.0329937934875	2
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_trans	40	256.67.128.66	synth with cache (only 1: compute; only 1: intros x l; only 1: simpl_relation; only 1: now rewrite H).	0.911931991577	1767
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_trans	40	3.193.0.258.0.256	synth with cache (only 1: intros q; only 1: unfold eqke; only 1: intros l2; only 1: intros; only 1: case H; only 1: now intros -> ->).	8.01535511017	15387
Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_trans	40	1	synth with cache (only 1: eauto with ordered_type).	0.0227420330048	2
Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_not_eqk	40	2	synth with cache (only 1: eauto with ordered_type).	0.0503418445587	23
Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_not_eqke	40	0.0.0.1	synth with cache (only 1: unfold eqk, eqke; only 1: unfold eqk, ltk; only 1: intuition; only 1: order).	0.161399126053	95
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_equiv	40	387.192.321.0.0.3	synth with cache (only 1: split; only 1: auto with ordered_type; only 1: auto with ordered_type; only 1: intros m H1 H2; only 1: firstorder using StronglySorted_inv; only 1: eauto with *).	0.552030086517	900
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_equiv	40	0.0.0.0	synth with cache (only 1: constructor; only 1: eauto with ordered_type; only 1: eauto with ordered_type; only 1: eauto with ordered_type).	0.052915096283	4
Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_strorder	40	0.1.134.323.577.0	synth with cache (only 1: constructor; only 1: intros a; only 1: intro; only 1: contradict H; only 1: eauto with ordered_type; only 1: eauto with ordered_type).	13.9794230461	15880
Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_compat	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_compat'	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_not_ltk	40	0.0	synth with cache (only 1: unfold eqk, ltk; only 1: auto with ordered_type).	0.0229599475861	2
Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_eqk	40	0	synth with cache (only 1: eauto with ordered_type).	0.0194771289825	1
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_ltk	40	0	synth with cache (only 1: eauto with ordered_type).	0.0218238830566	1
Coq.Structures.OrderedType.KeyOrderedType.Elt.InA_eqke_eqk	40	0.0.320.2.512.128.66	synth with cache (only 1: intro x; only 1: intros EQ; only 1: intros n; only 1: rewrite InA_alt; only 1: induction n; only 1: firstorder; only 1: firstorder).	1.09038114548	2031
Coq.Structures.OrderedType.KeyOrderedType.Elt.In_alt	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.MapsTo_eq	40	0.1.64.448.448.64.0.325.385	synth with cache (only 1: intros a H; only 1: intros n IH; only 1: destruct a; only 1: now f_equal; only 1: intros x; only 1: induction 1; only 1: elim H0; only 1: eauto with ordered_type; only 1: intuition).	7.23148918152	15533
Coq.Structures.OrderedType.KeyOrderedType.Elt.In_eq	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.Inf_eq	40	1.128.448	synth with cache (only 1: intros Az RS; only 1: intros m H; only 1: now rewrite H).	0.0919778347015	57
Coq.Structures.OrderedType.KeyOrderedType.Elt.Inf_lt	40	2.257.0.128.0.129.449	synth with cache (only 1: intros a; only 1: intros x y H; only 1: intuition; only 1: elim H0; only 1: intuition; only 1: intros c Hc IH; only 1: eauto with *).	1.73871588707	2184
Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_Inf_In	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_Inf_NotIn	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_NoDupA	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_In_cons_1	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_In_cons_2	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_In_cons_3	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.In_inv	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.In_inv_2	40	0.0.64.64.0	synth with cache (only 1: inversion_clear 1; only 1: induction l; only 1: firstorder using StronglySorted_rect; only 1: eauto with *; only 1: eauto with *).	0.0601010322571	11
Coq.Structures.OrderedType.KeyOrderedType.Elt.In_inv_3	40	64.0.0.0.0.65	synth with cache (only 1: intros (N, IN); only 1: unfold eqke; only 1: inversion_clear 1; only 1: intros; only 1: intuition; only 1: firstorder).	0.747297048569	714
Coq.Structures.OrdersFacts.CompareFacts.compare_eq_iff	40
Coq.Structures.OrdersFacts.CompareFacts.compare_eq	40	0.0.0.0.0.0	synth with cache (only 1: case compare_spec; only 1: easy; only 1: intro H; only 1: easy; only 1: intro H; only 1: easy).	0.0428740978241	6
Coq.Structures.OrdersFacts.CompareFacts.compare_lt_iff	40	0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.1.0.0.1.0	synth with cache (only 1: case compare_spec; only 1: intro EQ; only 1: split; only 1: easy; only 1: intro H; only 1: contradict ltac:(H); only 1: rewrite EQ; only 1: apply irreflexivity; only 1: intro H; only 1: split; only 1: easy; only 1: intro EQ; only 1: reflexivity || destruct H; only 1: intro H; only 1: split; only 1: easy; only 1: intro EQ; only 1: contradict ltac:(H); only 1: rewrite EQ; only 1: apply irreflexivity).	1.18700695038	1664
Coq.Structures.OrdersFacts.CompareFacts.compare_gt_iff	40	0.0.0.0.0.0.0.0.0.0.0.0.0.1.2.0.0.0.0.0.0	synth with cache (only 1: case compare_spec; only 1: intro H; only 1: split; only 1: easy; only 1: intro LT; only 1: contradict ltac:(H); only 1: intro EQ; only 1: contradict ltac:(LT); only 1: rewrite EQ; only 1: apply irreflexivity; only 1: intro H; only 1: split; only 1: easy; only 1: intro LT; only 1: contradict ltac:(LT); only 1: rewrite H; only 1: apply irreflexivity; only 1: intro H; only 1: split; only 1: easy; only 1: easy).	0.640601158142	459
Coq.Structures.OrdersFacts.CompareFacts.compare_nlt_iff	40	0.0.0.1.0.0.0.0.0.0.1.0.1.1.0.0.0	synth with cache (only 1: case compare_spec; only 1: intro H; only 1: split; only 1: intro LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: easy; only 1: intro H; only 1: split; only 1: easy; only 1: easy; only 1: intro H; only 1: split; only 1: intro LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: easy).	2.08136105537	1946
Coq.Structures.OrdersFacts.CompareFacts.compare_ngt_iff	40	0.0.1.0.0.0.0.1.1.0.1.0.1.1.1.0.1	synth with cache (only 1: case compare_spec; only 1: intro H; only 1: split; only 1: intro LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: easy; only 1: intro H; only 1: split; only 1: intro LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: easy; only 1: intro H; only 1: split; only 1: easy; only 1: easy).	1.79471802711	2230
Coq.Structures.OrdersFacts.CompareFacts.compare_compat	40
Coq.Structures.OrdersFacts.CompareFacts.compare_refl	40	4.0	synth with cache (only 1: apply compare_eq_iff; only 1: reflexivity).	0.146289110184	187
Coq.Structures.OrdersFacts.CompareFacts.compare_antisym	40	0.0.0.0.1.0.0.0.0.0.0.1.1.0.2.0.2.0.0.1.0.0.0.0.0.1.0.0.0.1.0.0.0.0.0	synth with cache (only 1: case compare_spec; only 1: intro EQ; only 1: case compare_spec; only 1: easy; only 1: intro LT; only 1: contradict ltac:(LT); only 1: rewrite EQ; only 1: apply irreflexivity; only 1: intro LT; only 1: contradict ltac:(LT); only 1: rewrite EQ; only 1: apply irreflexivity; only 1: intro LT; only 1: case compare_spec; only 1: intro EQ; only 1: contradict ltac:(LT); only 1: rewrite EQ; only 1: apply irreflexivity; only 1: intro EQ; only 1: contradict ltac:(LT); only 1: rewrite EQ; only 1: apply irreflexivity; only 1: easy; only 1: intro H; only 1: case compare_spec; only 1: intro EQ; only 1: contradict ltac:(H); only 1: rewrite EQ; only 1: apply irreflexivity; only 1: intro LT; only 1: split; only 1: intro LT; only 1: contradict ltac:(LT); only 1: rewrite H; only 1: apply irreflexivity).	3.74736094475	4719
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_compat	40
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_preorder	40
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_order	40	1.0.2	synth with cache (only 1: red; only 1: compute; only 1: iorder).	0.0587821006775	36
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_antisym	40	64.2.0.0.64.67	synth with cache (only 1: intros x y EQ WF; only 1: apply CRelationClasses.partial_order_antisym; only 1: compute; only 1: iorder; only 1: auto; only 1: auto with *).	0.408579111099	480
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_not_gt_iff	40	0.67	synth with cache (only 1: compute; only 1: iorder).	0.0811920166016	42
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.lt_not_ge_iff	40	0	synth with cache (only 1: iorder).	0.0182790756226	1
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_or_gt	40
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.lt_or_ge	40
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.eq_is_le_ge	40	0.256	synth with cache (only 1: CRelationClasses.reduce_goal; only 1: iorder).	0.115156173706	57
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.compare_le_iff	40	1.0	synth with cache (only 1: rewrite compare_gt_iff; only 1: iorder).	0.0230090618134	3
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.compare_ge_iff	40	0.0.0	synth with cache (only 1: rewrite le_not_gt_iff; only 1: rewrite compare_lt_iff; only 1: intuition).	0.0253248214722	3
Coq.Structures.OrdersFacts.OrderedTypeFacts.lt_dec	40
Coq.Structures.OrdersFacts.OrderedTypeFacts.if_eq_dec	40
Coq.Structures.OrdersFacts.OrderedTypeFacts.eqb_alt	40	0.0.0.0.1.0.1.0.0.0.0.0.140	synth with cache (only 1: compute; only 1: intros; only 1: destruct eq_dec; only 1: elim_compare x y; only 1: auto; only 1: contradict ltac:(H); only 1: order; only 1: contradict ltac:(H); only 1: order; only 1: elim_compare x y; only 1: order; only 1: auto; only 1: auto).	11.5839850903	9886
Coq.Structures.OrdersFacts.OrderedTypeFacts.eqb_compat	40	1.0.1.0.1.1.0.0.3	synth with cache (only 1: unfold eqb; only 1: intros x x' Hxx' y y' Hyy'; only 1: destruct eq_dec; only 1: destruct eq_dec; only 1: auto; only 1: order; only 1: destruct eq_dec; only 1: order; only 1: auto).	7.48565912247	2554
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_not_eq	40	4.0	synth with cache (only 1: intro H; only 1: order).	0.090528011322	89
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_eq	40	0	synth with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0258190631866	1
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_lt	40	0	synth with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0225641727448	1
Coq.Structures.OrdersFacts.OrderedTypeTest.le_eq	40	1	synth with cache (only 1: order).	1.01613903046	2
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_le	40	0	synth with cache (only 1: order).	0.0165629386902	1
Coq.Structures.OrdersFacts.OrderedTypeTest.neq_eq	40	0	synth with cache (only 1: order).	0.0159211158752	1
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_neq	40	0	synth with cache (only 1: order).	0.016135931015	1
Coq.Structures.OrdersFacts.OrderedTypeTest.le_lt_trans	40	2.0	synth with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: order).	0.0256588459015	4
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_le_trans	40	2.0	synth with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: order).	0.0276739597321	4
Coq.Structures.OrdersFacts.OrderedTypeTest.le_trans	40	0	synth with cache (only 1: order).	0.0168290138245	1
Coq.Structures.OrdersFacts.OrderedTypeTest.le_antisym	40	0	synth with cache (only 1: order).	0.01673412323	1
Coq.Structures.OrdersFacts.OrderedTypeTest.le_neq	40	0	synth with cache (only 1: order).	0.0156359672546	1
Coq.Structures.OrdersFacts.OrderedTypeTest.neq_sym	40	0	synth with cache (only 1: order).	0.0148069858551	1
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_le	40	0.0	synth with cache (only 1: intro H; only 1: order).	0.0189950466156	2
Coq.Structures.OrdersFacts.OrderedTypeTest.gt_not_eq	40	0	synth with cache (only 1: order).	0.013689994812	1
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_not_lt	40	0	synth with cache (only 1: order).	0.0138339996338	1
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_not_gt	40	0	synth with cache (only 1: order).	0.0141010284424	1
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_not_gt	40	0	synth with cache (only 1: order).	0.0145328044891	1
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_is_nlt_ngt	40	0.64.129.1.1.0.0.67.1.3	synth with cache (only 1: split; only 1: destruct (OrderTac.TO.compare_spec x y); only 1: split; only 1: order; only 1: order; only 1: order; only 1: order; only 1: symmetry; only 1: case H; only 1: order).	1.46300292015	1895
Coq.Structures.OrdersFacts.OrderedTypeRev.lt_strorder	40
Coq.Structures.OrdersFacts.OrderedTypeRev.lt_compat	40
Coq.Structures.OrdersFacts.OrderedTypeRev.le_lteq	40
Coq.Structures.OrdersFacts.OrderedTypeRev.compare_spec	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_spec	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_eq	40	0.0	synth with cache (only 1: intros H; only 1: now apply compare_eq_iff).	0.0195782184601	2
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_refl	40	2.0.0.0	synth with cache (only 1: apply compare_eq_iff; only 1: apply compare_eq_iff; only 1: apply compare_eq_iff; only 1: reflexivity).	0.0654861927032	54
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_gt_iff	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_ge_iff	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_ngt_iff	40	0	synth with cache (only 1: now rewrite <- compare_lt_iff, compare_antisym, CompOpp_iff).	0.0186109542847	1
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_nlt_iff	40	2	synth with cache (only 1: now rewrite <- compare_lt_iff, compare_antisym, CompOpp_iff).	0.0236141681671	3
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_nle_iff	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_nge_iff	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.lt_irrefl	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.lt_eq_cases	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_spec0	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_spec	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_spec0	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_spec	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_nle	40	0.0.0.256.0.193.0.4.64	synth with cache (only 1: unfold not; only 1: case leb_spec0; only 1: constructor; only 1: intros H x0; only 1: discriminate; only 1: now trivial; only 1: constructor; only 1: trivial; only 1: trivial).	9.76323509216	7207
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_gt	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_nlt	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_ge	40	0.0.10	synth with cache (only 1: rewrite <- compare_le_iff; only 1: rewrite compare_gt_iff; only 1: now rewrite <- not_true_iff_false, ltb_lt).	4.49140095711	4868
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_refl	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_antisym	40	1.3.4.2.0.9	synth with cache (only 1: case ltb_spec0; only 1: now rewrite leb_nle, <- compare_lt_iff, compare_nge_iff; only 1: symmetry; only 1: symmetry; only 1: apply leb_le; only 1: now rewrite <- compare_le_iff, compare_ngt_iff).	3.00450205803	8426
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_irrefl	40	0.2.19	synth with cache (only 1: case ltb_spec0; only 1: now rewrite <- compare_lt_iff, compare_refl; only 1: now rewrite <- compare_lt_iff, compare_refl).	3.29468083382	6534
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_antisym	40
Coq.Structures.OrdersFacts.BoolOrderFacts.eqb_compare	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_compare	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_compare	40
Coq.Structures.OrdersLists.OrderedTypeLists.In_eq	40	0.0.0	synth with cache (only 1: intros l x y H H'; only 1: rewrite <- H; only 1: auto).	0.0254650115967	3
Coq.Structures.OrdersLists.OrderedTypeLists.ListIn_In	40	451.0.0.0.130.0.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: inversion 1; only 1: intro n; only 1: firstorder; only 1: left; only 1: rewrite <- H; only 1: easy).	2.11226606369	3377
Coq.Structures.OrdersLists.OrderedTypeLists.Inf_lt	40	0.577.0.1.65.0.2.260	synth with cache (only 1: destruct l as [| a l']; only 1: intros n m p LT; only 1: auto; only 1: intros l2; only 1: constructor; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: rewrite ?PeanoNat.Nat.add_0_l, ?PeanoNat.Nat.add_0_r, ?H; only 1: auto).	10.1997919083	26986
Coq.Structures.OrdersLists.OrderedTypeLists.Inf_eq	40	0.513.768.3	synth with cache (only 1: intros x y z H; only 1: firstorder using Sorted_inv; only 1: rewrite ?PeanoNat.Nat.add_0_l, ?PeanoNat.Nat.add_0_r, ?H; only 1: eauto).	0.465919017792	627
Coq.Structures.OrdersLists.OrderedTypeLists.Sort_Inf_In	40
Coq.Structures.OrdersLists.OrderedTypeLists.ListIn_Inf	40	128.1.1.0.0.0	synth with cache (only 1: simple induction l; only 1: simpl; only 1: intros; only 1: constructor; only 1: simpl; only 1: simpl_relation).	0.175641059875	150
Coq.Structures.OrdersLists.OrderedTypeLists.In_Inf	40	129.0.0.66	synth with cache (only 1: destruct l; only 1: intros; only 1: constructor; only 1: CRelationClasses.simpl_crelation).	0.37745308876	580
Coq.Structures.OrdersLists.OrderedTypeLists.Inf_alt	40
Coq.Structures.OrdersLists.OrderedTypeLists.Sort_NoDup	40
Coq.Structures.OrdersLists.KeyOrderedType.ltk_compat	40	1.513.129	synth with cache (only 1: intros x y H; only 1: f_equiv; only 1: eauto).	0.849519014359	642
Coq.Structures.OrdersLists.KeyOrderedType.ltk_compat'	40	4.0	synth with cache (only 1: unfold eqk, ltk; only 1: solve_proper).	3.50398898125	1203
Coq.Structures.OrdersLists.KeyOrderedType.pair_compat	40	0.1	synth with cache (only 1: reduce; only 1: intuition).	0.0293498039246	3
Coq.Structures.OrdersLists.KeyOrderedType.Elt.ltk_not_eqk	40
Coq.Structures.OrdersLists.KeyOrderedType.Elt.ltk_not_eqke	40	0.0.0	synth with cache (only 1: intros LT EQ; only 1: rewrite EQ in LT; only 1: elim (StrictOrder_Irreflexive _ LT)).	0.0365161895752	3
Coq.Structures.OrdersLists.KeyOrderedType.Elt.Inf_eq	40	0	synth with cache (only 1: now intros <-).	0.0302150249481	1
Coq.Structures.OrdersLists.KeyOrderedType.Elt.Inf_lt	40
Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_Inf_In	40
Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_Inf_NotIn	40
Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_NoDupA	40
Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_In_cons_1	40
Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_In_cons_2	40
Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_In_cons_3	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_eqk	40	192.0.129	synth with cache (only 1: intros l2; only 1: intros m [H3 H4]; only 1: auto with *).	0.0532348155975	18
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_def	40	1	synth with cache (only 1: trivial).	0.0157878398895	2
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_def'	40	64.0	synth with cache (only 1: destruct p; only 1: eauto).	0.0262680053711	5
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_1	40	0	synth with cache (only 1: firstorder).	0.0186159610748	1
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_2	40	1.0.4	synth with cache (only 1: intros (U, V); only 1: compute in *; only 1: firstorder).	0.219798803329	442
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqk_def	40	1	synth with cache (only 1: firstorder).	0.0156280994415	2
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqk_def'	40	0	synth with cache (only 1: reflexivity).	0.0150630474091	1
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqk_1	40	2	synth with cache (only 1: firstorder).	0.0181050300598	3
Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqke_eqk	40	2.1.2	synth with cache (only 1: do 2 rewrite InA_alt; only 1: induction 1; only 1: firstorder).	3.5824739933	1003
Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqk_eqke	40	0.1.325.0.3	synth with cache (only 1: destruct p; only 1: induction 1; only 1: revert l; only 1: firstorder; only 1: firstorder).	24.5620491505	43767
Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqk	40	193.10.2	synth with cache (only 1: intros; only 1: rewrite <- H; only 1: now subst).	33.6708378792	58804
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_alt	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_alt'	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_alt2	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_nil	40	320.1.2	synth with cache (only 1: intuition; only 1: inversion_clear H; only 1: easy || now destruct 1).	0.187922000885	154
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_cons	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.MapsTo_compat	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_compat	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.MapsTo_eq	40	576.4.257	synth with cache (only 1: intro; only 1: rewrite H; only 1: destr_bool).	2.34417796135	3557
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_eq	40	0	synth with cache (only 1: now intros <-).	0.0311040878296	1
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_inv	40	66.0	synth with cache (only 1: rewrite !In_alt2, Exists_cons; only 1: auto with arith).	0.176038980484	107
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_inv_2	40	1.321.11.0	synth with cache (only 1: firstorder; only 1: inversion H; only 1: now f_equiv; only 1: firstorder).	38.0717709064	28637
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_inv_3	40	0.0.1.2.260	synth with cache (only 1: intro l'; only 1: firstorder; only 1: invlist InA; only 1: firstorder; only 1: firstorder).	25.8294990063	35445
Coq.Structures.EqualitiesFacts.PairDecidableType.eq_dec	40
Coq.Structures.EqualitiesFacts.PairUsualDecidableType.eq_dec	40
Coq.Structures.DecidableType.KeyDecidableType.Elt.eqke_eqk	40	1.65.0	synth with cache (only 1: intros x y H; only 1: destruct H; only 1: auto).	0.0294930934906	8
Coq.Structures.DecidableType.KeyDecidableType.Elt.eqk_refl	40	1	synth with cache (only 1: auto).	0.0132229328156	2
Coq.Structures.DecidableType.KeyDecidableType.Elt.eqke_refl	40	0	synth with cache (only 1: auto).	0.0139689445496	1
Coq.Structures.DecidableType.KeyDecidableType.Elt.eqk_sym	40	0.0	synth with cache (only 1: unfold eqk, eqke; only 1: auto).	0.0183918476105	2
Coq.Structures.DecidableType.KeyDecidableType.Elt.eqke_sym	40	640.0.193.0	synth with cache (only 1: unfold eqk, eqke; only 1: intros a n; only 1: intros [? ?]; only 1: intuition auto; PeanoNat.Nat.Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.134644985199	72
Coq.Structures.DecidableType.KeyDecidableType.Elt.eqk_trans	40	321.194.130.193.2	synth with cache (only 1: intros x y z; only 1: intro n; only 1: intro H1; only 1: revert n; only 1: eauto with *).	2.51688981056	5059
Coq.Structures.DecidableType.KeyDecidableType.Elt.eqke_trans	40	64.257.192.0.1.257.256.129	synth with cache (only 1: intros E; only 1: compute; only 1: intro Ha; only 1: intros; only 1: intuition; only 1: eauto; only 1: destruct H2; only 1: easy).	15.3767499924	16735
Coq.Structures.DecidableType.KeyDecidableType.Elt.eqk_equiv	40	0.64.0.0.64.3	synth with cache (only 1: split; only 1: compute; only 1: intuition; only 1: auto; only 1: repeat red; only 1: eauto).	0.220654964447	179
Coq.Structures.DecidableType.KeyDecidableType.Elt.eqke_equiv	40	0.0.0.0	synth with cache (only 1: split; only 1: eauto; only 1: eauto; only 1: eauto).	0.0651388168335	4
Coq.Structures.DecidableType.KeyDecidableType.Elt.InA_eqke_eqk	40	192.128.0.385.66.0	synth with cache (only 1: unfold eqke; only 1: intros z n H; only 1: induction H; only 1: left; only 1: now f_equal; only 1: auto  4).	2.72148799896	3186
Coq.Structures.DecidableType.KeyDecidableType.Elt.InA_eqk	40	0.2.1	synth with cache (only 1: intros l x y H H'; only 1: rewrite <- H; only 1: intuition).	0.607281923294	726
Coq.Structures.DecidableType.KeyDecidableType.Elt.In_alt	40
Coq.Structures.DecidableType.KeyDecidableType.Elt.MapsTo_eq	40
Coq.Structures.DecidableType.KeyDecidableType.Elt.In_eq	40
Coq.Structures.DecidableType.KeyDecidableType.Elt.In_inv	40
Coq.Structures.DecidableType.KeyDecidableType.Elt.In_inv_2	40	128.128.1.384.129	synth with cache (only 1: intro l'; only 1: intro LT; only 1: inversion 1; only 1: now PeanoNat.Nat.nzsimpl; only 1: congruence).	0.859709024429	813
Coq.Structures.DecidableType.KeyDecidableType.Elt.In_inv_3	40	0.0.0.1.1	synth with cache (only 1: inversion_clear 1; only 1: inversion_clear H0; only 1: intuition; only 1: compute in H0; only 1: intuition).	1.4494240284	1523
Coq.Structures.OrdersAlt.Update_OT.lt_strorder	40
Coq.Structures.OrdersAlt.Update_OT.lt_compat	40
Coq.Structures.OrdersAlt.Update_OT.compare_spec	40
Coq.Structures.OrdersAlt.Backport_OT.lt_not_eq	40
Coq.Structures.OrdersAlt.Backport_OT.lt_trans	40	0.1.0.193	synth with cache (only 1: intros n; only 1: intros x y L E; only 1: rewrite <- E; only 1: auto with relations).	0.606901168823	984
Coq.Structures.OrdersAlt.Backport_OT.compare	40
Coq.Structures.OrdersAlt.OT_from_Alt.eq_equiv	40
Coq.Structures.OrdersAlt.OT_from_Alt.lt_strorder	40
Coq.Structures.OrdersAlt.OT_from_Alt.lt_eq	40
Coq.Structures.OrdersAlt.OT_from_Alt.eq_lt	40
Coq.Structures.OrdersAlt.OT_from_Alt.lt_compat	40
Coq.Structures.OrdersAlt.OT_from_Alt.compare_spec	40
Coq.Structures.OrdersAlt.OT_from_Alt.eq_dec	40
Coq.Structures.OrdersAlt.OT_to_Alt.compare_sym	40
Coq.Structures.OrdersAlt.OT_to_Alt.compare_Eq	40
Coq.Structures.OrdersAlt.OT_to_Alt.compare_Lt	40
Coq.Structures.OrdersAlt.OT_to_Alt.compare_Gt	40
Coq.Structures.OrdersAlt.OT_to_Alt.compare_trans	40
Coq.Structures.GenericMinMax.GenericMinMax.ge_not_lt	40
Coq.Structures.GenericMinMax.GenericMinMax.max_l	40
Coq.Structures.GenericMinMax.GenericMinMax.max_r	40
Coq.Structures.GenericMinMax.GenericMinMax.min_l	40
Coq.Structures.GenericMinMax.GenericMinMax.min_r	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold min, gmin; only 1: case compare_spec; only 1: auto with relations; only 1: intros; only 1: elim (ge_not_lt x y); only 1: auto; only 1: auto; only 1: auto with relations).	0.16702580452	117
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_spec	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_spec_le	40	0.0.0.0.0.0.0.0.0.0.1.0.1	synth with cache (only 1: destruct (lt_total n m); only 1: left; only 1: split; only 1: rewrite le_lteq; only 1: auto; only 1: apply max_r; only 1: rewrite le_lteq; only 1: auto; only 1: right; only 1: assert (m <= n) by (rewrite le_lteq; intuition); only 1: split; only 1: auto; only 1: now apply max_l).	0.677259922028	682
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.Proper_instance_0	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_compat	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_unicity	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_unicity_ext	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_mono	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_id	40	3.2	synth with cache (only 1: apply max_r; only 1: order).	0.0808432102203	112
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_assoc	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_comm	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_max_l	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.8	synth with cache (only 1: pose proof (max_spec n m) as Hm; only 1: destruct (lt_total n m); only 1: destruct (lt_total n m); only 1: intuition; only 1: order; only 1: order; only 1: intuition; only 1: order; only 1: order; only 1: order; only 1: order; only 1: destruct (lt_total n m); only 1: intuition; only 1: order; only 1: order; only 1: order; only 1: order; only 1: intuition; only 1: order; only 1: order; only 1: order; only 1: order; only 1: order; only 1: order; only 1: order; only 1: order).	0.717674970627	827
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_max_r	40	0	synth with cache (only 1: solve_max).	0.0258309841156	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_l_iff	40	1.0.0.4.1.0.134	synth with cache (only 1: compute; only 1: destruct (max_spec n m); only 1: intuition; only 1: order; only 1: apply max_r || apply max_l; only 1: order; only 1: intuition).	4.11409902573	3852
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_r_iff	40	1	synth with cache (only 1: solve_max).	0.0499348640442	20
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le	40	65.130.0.11.0.194.0	synth with cache (only 1: pose proof (max_spec n m) as Hm; only 1: intros H; only 1: intuition; only 1: right; only 1: order; only 1: rewrite <- H2; only 1: tauto).	28.4645838737	25963
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_iff	40	0.0.2.0.0.2.0.0.0.0.0.0.0.0.6	synth with cache (only 1: split; only 1: destruct (max_spec n m); only 1: right; only 1: intuition; only 1: order; only 1: left; only 1: intuition; only 1: order; only 1: destruct (max_spec n m); only 1: intuition; only 1: order; only 1: order; only 1: intuition; only 1: order; only 1: order).	20.5560309887	12623
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lt_iff	40	0.0.0.0.0.0.0.1.0	synth with cache (only 1: split; only 1: destruct (max_spec n m); only 1: right; only 1: intuition; only 1: order; only 1: left; only 1: intuition; only 1: order; only 1: solve_max).	0.500941038132	169
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_l	40	2	synth with cache (only 1: solve_max).	0.0457940101624	13
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_r	40	0	synth with cache (only 1: solve_max).	0.0301141738892	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub	40	3	synth with cache (only 1: solve_max).	0.0449290275574	14
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_iff	40	4	synth with cache (only 1: solve_max).	0.2526512146	148
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_lt	40	0	synth with cache (only 1: solve_max).	0.0296549797058	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_lt_iff	40	2	synth with cache (only 1: solve_max).	0.150562047958	27
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_compat_l	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_compat_r	40	0.0.0	synth with cache (only 1: intros; only 1: apply max_lub_iff; only 1: solve_max).	0.0444350242615	3
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_compat	40	0.0.1	synth with cache (only 1: intros; only 1: apply max_lub_iff; only 1: solve_max).	0.0800940990448	4
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_spec	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_spec_le	40	0.0.0.0.0.0.0.0.0.0.0.0.1	synth with cache (only 1: destruct (lt_total n m); only 1: left; only 1: split; only 1: rewrite le_lteq; only 1: auto; only 1: apply min_l; only 1: rewrite le_lteq; only 1: auto; only 1: right; only 1: assert (m <= n) by (rewrite le_lteq; intuition); only 1: split; only 1: auto; only 1: now apply min_r).	0.334517002106	244
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_compat	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_unicity	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_unicity_ext	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_mono	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_id	40	0.1	synth with cache (only 1: apply min_l; only 1: order).	0.0185439586639	3
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_assoc	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_comm	40	0.1.0.0.0.0.192.0.0.0.0.3.0.0.0.0.0.0.1.0.5	synth with cache (only 1: apply min_unicity; only 1: destruct (lt_total n m); only 1: right; only 1: intuition; only 1: rewrite le_lteq; only 1: auto; only 1: apply min_l; only 1: rewrite le_lteq; only 1: auto; only 1: destruct (min_spec n m); only 1: right; only 1: intuition; only 1: order; only 1: order; only 1: inversion_clear H; only 1: right; only 1: intuition; only 1: order; only 1: order; only 1: left; only 1: intuition).	31.9016010761	19421
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_min_r	40	2.2.1.12	synth with cache (only 1: pose proof (min_spec n m) as Hm; only 1: intuition; only 1: order; only 1: order).	0.631036043167	1138
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_min_l	40	0	synth with cache (only 1: solve_min).	0.0239691734314	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_l_iff	40	4	synth with cache (only 1: solve_min).	0.0995869636536	61
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_r_iff	40	1	synth with cache (only 1: solve_min).	0.0327038764954	2
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_iff	40	0.0.0.128.0.0.2.1.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: destruct (min_spec n m); only 1: left; only 1: intuition; only 1: order; only 1: right; only 1: intuition; only 1: order; only 1: destruct (min_spec n m); only 1: intuition; only 1: order; only 1: order; only 1: intros x; only 1: intuition; only 1: order; only 1: order).	0.748080968857	434
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_lt_iff	40	0.0.0.0.0.0.0.1.3	synth with cache (only 1: split; only 1: destruct (min_spec n m); only 1: left; only 1: intuition; only 1: order; only 1: right; only 1: intuition; only 1: order; only 1: solve_min).	2.9804520607	2408
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_l	40	3	synth with cache (only 1: solve_min).	0.0318119525909	10
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_r	40	0	synth with cache (only 1: solve_min).	0.0258679389954	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb	40	5	synth with cache (only 1: solve_min).	0.0962650775909	84
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_iff	40	4	synth with cache (only 1: solve_min).	0.16232585907	131
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_lt	40	1	synth with cache (only 1: solve_min).	0.0232532024384	2
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_lt_iff	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct (min_spec n m); only 1: intuition; only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order); only 1: intuition; only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order)).	0.199007034302	60
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_compat_l	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_compat_r	40	0.0.0	synth with cache (only 1: intros; only 1: apply min_glb_iff; only 1: solve_min).	0.0422730445862	3
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_compat	40	1.1.0.0.0	synth with cache (only 1: intros Hnm Hpq; only 1: pose proof (max_le_compat_l _ _ m Hpq) as LE; only 1: pose proof (max_le_compat_r _ _ p Hnm) as LE'; only 1: apply min_glb_iff; only 1: solve_min).	0.128870010376	74
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_absorption	40	0.5	synth with cache (only 1: apply max_r || apply max_l; only 1: solve_min).	0.11478805542	67
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_absorption	40	0.8	synth with cache (only 1: apply min_l; only 1: solve_max).	1.31599903107	2120
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_distr	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_distr	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_modular	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_modular	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_disassoc	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_antimono	40	0.0.0.1.0.0.0.0.1.0.0.0	synth with cache (only 1: intros Eqf Lef x y; only 1: destruct (min_spec x y) as [(H, E)| (H, E)]; only 1: rewrite E; only 1: destruct (max_spec (f x) (f y)) as [(H', E')| (H', E')]; only 1: assert (f y <= f x) by (apply Lef; order); only 1: order; only 1: auto; only 1: rewrite E; only 1: destruct (max_spec (f x) (f y)) as [(H', E')| (H', E')]; only 1: auto; only 1: assert (f x <= f y) by (apply Lef; order); only 1: order).	0.635792016983	279
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_antimono	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.max_case_strong	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.max_case	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.max_dec	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.min_case_strong	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.min_case	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.min_dec	40	0.0.0.0.0.0.0.0.0.13	synth with cache (only 1: apply min_case_strong; only 1: intros x y H [E| E]; only 1: left; only 1: rewrite <- H; only 1: auto; only 1: right; only 1: rewrite <- H; only 1: auto; only 1: auto with relations; only 1: auto with relations).	1.78641200066	7394
Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.max_monotone	40
Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.min_monotone	40
Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.min_max_antimonotone	40
Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.max_min_antimonotone	40
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.max_case_strong	40	1.129.256.67.3.0.68	synth with cache (only 1: intro x; only 1: intros Compat Hl Hr; only 1: apply max_case_strong; only 1: intros n m; only 1: intro A; only 1: congruence; only 1: auto).	6.78514099121	13074
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.max_case	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply Private_Dec.max_case_strong; only 1: auto; only 1: auto).	0.0242140293121	4
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.max_dec	40	0.0.0.2.256	synth with cache (only 1: intro; only 1: intros; only 1: apply Private_Dec.max_case; only 1: auto with relations; only 1: auto with relations).	0.160247087479	220
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_case_strong	40	0.0.0.7.67.192	synth with cache (only 1: intros x y; only 1: intuition; only 1: apply min_case_strong; only 1: congruence; only 1: auto; only 1: auto).	3.28296899796	8539
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_case	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply Private_Dec.min_case_strong; only 1: auto; only 1: auto).	0.0244979858398	4
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_dec	40	0.0.0.2	synth with cache (only 1: intros; only 1: apply Private_Dec.min_case; only 1: auto with relations; only 1: auto with relations).	0.0417649745941	31
Coq.Structures.GenericMinMax.TOMaxEqDec_to_Compare.compare_spec	40
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.eq_refl	40
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.eq_sym	40
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.lt_not_eq	40	384.65.68	synth with cache (only 1: intros H; only 1: intros n; only 1: congruence).	24.5794920921	5870
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.compare	40
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.eq_dec	40
Coq.Structures.OrderedTypeAlt.OrderedType_to_Alt.compare_sym	40
Coq.Structures.OrderedTypeAlt.OrderedType_to_Alt.compare_trans	40
Coq.ZArith.Znat.nat_N_Z	40	64.0.3.1	synth with cache (only 1: induction n; only 1: simpl; only 1: now f_equal; only 1: reflexivity).	0.110935926437	384
Coq.ZArith.Znat.N_nat_Z	40
Coq.ZArith.Znat.positive_nat_Z	40	0.0.0.0.0	synth with cache (only 1: destruct (Pos2Nat.is_succ p) as (m, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv).	0.0438950061798	5
Coq.ZArith.Znat.positive_N_Z	40	0.1.0	synth with cache (only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: simpl; only 1: f_equal).	0.0325529575348	4
Coq.ZArith.Znat.positive_N_nat	40	1	synth with cache (only 1: trivial).	0.0191371440887	2
Coq.ZArith.Znat.positive_nat_N	40	1.0.0.0.1	synth with cache (only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv).	0.139739990234	140
Coq.ZArith.Znat.Z_N_nat	40	0.2.0.131.327	synth with cache (only 1: compute; only 1: induction n; only 1: trivial; only 1: trivial; only 1: trivial).	1.63758993149	2978
Coq.ZArith.Znat.Z_nat_N	40
Coq.ZArith.Znat.Zabs_N_nat	40	0.0.0.72	synth with cache (only 1: induction n; only 1: now Z.nzsimpl; only 1: reflexivity; only 1: trivial).	1.92710900307	1722
Coq.ZArith.Znat.Zabs_nat_N	40
Coq.ZArith.Znat.N2Z.id	40	0	synth with cache (only 1: now destruct n).	0.0200388431549	1
Coq.ZArith.Znat.N2Z.inj	40	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n, m; only 1: now try N.order'; only 1: intros Hn; only 1: easy || now destruct Hb; only 1: intros Hn; only 1: easy || now destruct Hb; only 1: simpl; only 1: intros H; only 1: destr_eq H; only 1: now f_equal).	0.159496068954	147
Coq.ZArith.Znat.N2Z.inj_iff	40	1.0.0.0.0.0.0.0.0.0.0.2	synth with cache (only 1: split; only 1: destruct n, m; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: intros EQ; only 1: now Morphisms.f_equiv).	1.28208184242	969
Coq.ZArith.Znat.N2Z.is_nonneg	40	0.2.1.2.0	synth with cache (only 1: destruct n; only 1: simpl; only 1: Z.order; only 1: simpl; only 1: easy).	0.320732116699	569
Coq.ZArith.Znat.N2Z.inj_0	40	0	synth with cache (only 1: trivial).	0.0171909332275	1
Coq.ZArith.Znat.N2Z.inj_pos	40	0	synth with cache (only 1: reflexivity).	0.0175960063934	1
Coq.ZArith.Znat.N2Z.inj_compare	40	256.0.0.0.0.0.3.0	synth with cache (only 1: destruct n, m; only 1: easy || now destruct y; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: constructor).	0.117201089859	214
Coq.ZArith.Znat.N2Z.inj_le	40	0.1.516.1	synth with cache (only 1: unfold N.leb, N.le; only 1: constructor 1; only 1: now destruct n, m; only 1: now destruct n, m).	4.17174220085	5421
Coq.ZArith.Znat.N2Z.inj_lt	40	1.0.1.0.1.0.65.0.0.0.0.0.2	synth with cache (only 1: destruct n, m; only 1: split; only 1: discriminate || intros _; only 1: intros H; only 1: N.auto'; only 1: intro; only 1: now subst; only 1: simpl; only 1: easy'; only 1: simpl; only 1: easy'; only 1: simpl; only 1: now rewrite ?Pos.min_1_r, <- ?Pos2Z.inj_min).	0.897421836853	821
Coq.ZArith.Znat.N2Z.inj_ge	40	0.1	synth with cache (only 1: unfold Z.le, Z.ge; only 1: now rewrite inj_compare).	0.0249519348145	3
Coq.ZArith.Znat.N2Z.inj_gt	40	0.3	synth with cache (only 1: unfold Z.lt, Z.gt; only 1: now rewrite inj_compare).	0.0605080127716	65
Coq.ZArith.Znat.N2Z.inj_abs_N	40	130.128.256.138.24	synth with cache (only 1: Z.bitwise; only 1: destruct z; only 1: easy'; only 1: intuition Nat.order; only 1: f_equal).	3.0558860302	11205
Coq.ZArith.Znat.N2Z.inj_add	40	2	synth with cache (only 1: now destruct n, m).	0.0204429626465	3
Coq.ZArith.Znat.N2Z.inj_mul	40	0	synth with cache (only 1: now destruct n, m).	0.0209579467773	1
Coq.ZArith.Znat.N2Z.inj_sub_max	40
Coq.ZArith.Znat.N2Z.inj_sub	40
Coq.ZArith.Znat.N2Z.inj_succ	40	0.0.192.1.1.5.1.0.0.27	synth with cache (only 1: N.induct n; only 1: simpl; only 1: easy; only 1: intros; only 1: destruct n; only 1: rewrite H; only 1: Morphisms.f_equiv; only 1: destruct H; only 1: simpl; only 1: now rewrite Pos.add_1_r).	38.8447020054	34400
Coq.ZArith.Znat.N2Z.inj_pred_max	40	3.0.2.464	synth with cache (only 1: induction n; only 1: trivial; only 1: simpl; only 1: now destruct p).	6.60162305832	7738
Coq.ZArith.Znat.N2Z.inj_pred	40	1.579.387.192.0.321.128.0	synth with cache (only 1: intros H; only 1: Z.bitwise; only 1: induction n; only 1: unfold Z.pred; only 1: N.order'; only 1: destruct H; only 1: simpl in *; only 1: now destruct p).	7.86497116089	12112
Coq.ZArith.Znat.N2Z.inj_min	40
Coq.ZArith.Znat.N2Z.inj_max	40
Coq.ZArith.Znat.N2Z.inj_div	40
Coq.ZArith.Znat.N2Z.inj_mod	40
Coq.ZArith.Znat.N2Z.inj_quot	40
Coq.ZArith.Znat.N2Z.inj_rem	40
Coq.ZArith.Znat.N2Z.inj_div2	40	0.0.0.0.12.0.12	synth with cache (only 1: destruct n; only 1: trivial; only 1: destruct p as [p| p| ]; only 1: reflexivity; only 1: trivial; only 1: simpl; only 1: now f_equal).	6.06020617485	24573
Coq.ZArith.Znat.N2Z.inj_quot2	40	1.0.0	synth with cache (only 1: destruct n as [| p]; only 1: trivial; only 1: now destruct p).	0.0312039852142	4
Coq.ZArith.Znat.N2Z.inj_pow	40
Coq.ZArith.Znat.N2Z.inj_testbit	40	0.0.1.0.0.0.0.0.0	synth with cache (only 1: destruct a as [| a], n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now destruct a; only 1: simpl; only 1: trivial).	1.11799001694	119
Coq.ZArith.Znat.Z2N.id	40	1.0.0.0.0	synth with cache (only 1: intro Hn; only 1: destruct n; only 1: trivial; only 1: trivial; only 1: now destruct Hn).	0.0473370552063	6
Coq.ZArith.Znat.Z2N.inj	40
Coq.ZArith.Znat.Z2N.inj_iff	40	320.1.705.0.0.0.2.1.0	synth with cache (only 1: intros; only 1: split; only 1: apply N2Z.inj; only 1: Z.order; only 1: Z.order; only 1: rewrite <- (id n), <- (id m) by trivial; only 1: intros H'; only 1: f_equal; only 1: now repeat split).	2.47357010841	2280
Coq.ZArith.Znat.Z2N.inj_0	40	0.0	synth with cache (only 1: simpl; only 1: trivial).	0.0217981338501	2
Coq.ZArith.Znat.Z2N.inj_pos	40	65.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: now simpl).	0.0557129383087	9
Coq.ZArith.Znat.Z2N.inj_neg	40	0.0	synth with cache (only 1: simpl; only 1: trivial).	0.0210568904877	2
Coq.ZArith.Znat.Z2N.inj_add	40	384.64.1.0.0.0.3.0.0.0.0.0.3	synth with cache (only 1: intro Hn; only 1: destruct m; only 1: Z.nzsimpl; only 1: intros; only 1: split; only 1: intros _; only 1: destruct n; only 1: simpl; only 1: trivial; only 1: trivial; only 1: simpl; only 1: now N.nzsimpl'; only 1: easy').	9.59313392639	4676
Coq.ZArith.Znat.Z2N.inj_mul	40	1.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n, m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: now destruct 1 || now destruct 2).	0.772243976593	144
Coq.ZArith.Znat.Z2N.inj_succ	40	66.513.1.6.0.129.2.129	synth with cache (only 1: intros a; only 1: unfold Z.succ, Z.pred; only 1: destruct n; only 1: trivial; only 1: simpl; only 1: now rewrite Pos.add_1_r; only 1: exfalso; only 1: now repeat split).	7.33960795403	15191
Coq.ZArith.Znat.Z2N.inj_sub	40
Coq.ZArith.Znat.Z2N.inj_pred	40	0.0.0.0.3	synth with cache (only 1: destruct n; only 1: reflexivity; only 1: simpl; only 1: now destruct p; only 1: trivial).	0.704443216324	417
Coq.ZArith.Znat.Z2N.inj_compare	40	1.0.1.0.0.0.0.0.0.0	synth with cache (only 1: destruct n, m; only 1: trivial; only 1: trivial; only 1: easy || now destruct y; only 1: trivial; only 1: trivial; only 1: trivial; only 1: now destruct 1; only 1: trivial; only 1: now destruct 1).	0.305488109589	105
Coq.ZArith.Znat.Z2N.inj_le	40	0.0.64.640.3.1.64.0.0.65.387.0.0.324	synth with cache (only 1: induction n; only 1: intros Hn Hm; only 1: split; only 1: intros a b; only 1: now destruct m as [| [| | ]| [| | ]]; only 1: intros H; only 1: now f_equal; only 1: symmetry; only 1: simpl; only 1: destruct m as [| m| m]; only 1: now rewrite <- ?Nat.succ_le_mono; only 1: now Nat.nzsimpl; only 1: now destruct H; only 1: easy || now destruct y).	7.82960915565	12735
Coq.ZArith.Znat.Z2N.inj_lt	40	457	synth with cache (only 1: now destruct n, m).	13.5976560116	16154
Coq.ZArith.Znat.Z2N.inj_min	40
Coq.ZArith.Znat.Z2N.inj_max	40
Coq.ZArith.Znat.Z2N.inj_div	40
Coq.ZArith.Znat.Z2N.inj_mod	40
Coq.ZArith.Znat.Z2N.inj_quot	40
Coq.ZArith.Znat.Z2N.inj_rem	40
Coq.ZArith.Znat.Z2N.inj_div2	40	0.66.1.0.0.448.0.0.65.0.1.2	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: induction p using Pos.peano_ind; only 1: simpl; only 1: trivial; only 1: destruct p; only 1: simpl; only 1: trivial; only 1: trivial; only 1: Morphisms.f_equiv; only 1: trivial).	1.50024700165	3278
Coq.ZArith.Znat.Z2N.inj_quot2	40	13.1.1.0.0	synth with cache (only 1: destruct n as [| p| p]; only 1: trivial; only 1: now destruct p; only 1: simpl; only 1: now destruct p).	6.5046081543	9529
Coq.ZArith.Znat.Z2N.inj_pow	40
Coq.ZArith.Znat.Z2N.inj_testbit	40	1.2.5.0.2.1.4.67.0.3	synth with cache (only 1: destruct n; only 1: intro Hn; only 1: destruct a as [| p]; only 1: simpl; only 1: trivial; only 1: now destruct p; only 1: intro Hn; only 1: simpl; only 1: now destruct a; only 1: now destruct 1 || trivial).	24.1208891869	44158
Coq.ZArith.Znat.Zabs2N.abs_N_spec	40	0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	0.0438408851624	7
Coq.ZArith.Znat.Zabs2N.abs_N_nonneg	40	0.0	synth with cache (only 1: intros; only 1: now destruct n).	0.0280909538269	2
Coq.ZArith.Znat.Zabs2N.id_abs	40	1	synth with cache (only 1: now destruct n).	0.0177590847015	2
Coq.ZArith.Znat.Zabs2N.id	40	0	synth with cache (only 1: now destruct n).	0.0198159217834	1
Coq.ZArith.Znat.Zabs2N.inj_0	40	0.0	synth with cache (only 1: simpl; only 1: trivial).	0.019415140152	2
Coq.ZArith.Znat.Zabs2N.inj_pos	40	0.0	synth with cache (only 1: simpl; only 1: trivial).	0.0207929611206	2
Coq.ZArith.Znat.Zabs2N.inj_neg	40	0	synth with cache (only 1: reflexivity).	0.0175669193268	1
Coq.ZArith.Znat.Zabs2N.inj_opp	40	0.0.0.0.0.2	synth with cache (only 1: destruct n; only 1: now Z.nzsimpl; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	0.256134033203	106
Coq.ZArith.Znat.Zabs2N.inj_succ	40	128.1.0.0.2.1.0.0	synth with cache (only 1: unfold Z.succ; only 1: intros; only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite Pos.add_1_r; only 1: easy).	0.963053941727	1317
Coq.ZArith.Znat.Zabs2N.inj_add	40	0.1.0.1.0.0.0.0.0.0	synth with cache (only 1: destruct n, m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: now destruct 1 || now destruct 2; only 1: trivial; only 1: now destruct 1 || now destruct 2; only 1: trivial).	2.35090398788	355
Coq.ZArith.Znat.Zabs2N.inj_mul	40	0.0.0.0.0.0.0.0.0.1.0.1.0.0.0.1.0.1	synth with cache (only 1: destruct n, m; only 1: Nat2N.nat2N; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	1.3825109005	1750
Coq.ZArith.Znat.Zabs2N.inj_sub	40
Coq.ZArith.Znat.Zabs2N.inj_pred	40	0.0.64.0.0.1.1.0.0.6.129	synth with cache (only 1: intuition; only 1: destruct n; only 1: unfold Z.pred; only 1: rewrite <- N.sub_1_r; only 1: rewrite !abs_N_nonneg; only 1: trivial; only 1: Z.order'; only 1: now Z.nzsimpl'; only 1: now destruct p; only 1: simpl; only 1: now destruct p).	29.5924811363	23235
Coq.ZArith.Znat.Zabs2N.inj_compare	40	264	synth with cache (only 1: now destruct n, m).	5.12085700035	2388
Coq.ZArith.Znat.Zabs2N.inj_le	40	0.0.0	synth with cache (only 1: intros Hn Hm; only 1: unfold Z.le, N.le; only 1: now rewrite Z2N.inj_compare).	0.0314111709595	3
Coq.ZArith.Znat.Zabs2N.inj_lt	40	0.0.0	synth with cache (only 1: intros Hn Hm; only 1: unfold Z.lt, N.lt; only 1: now rewrite Z2N.inj_compare).	0.0360629558563	3
Coq.ZArith.Znat.Zabs2N.inj_min	40	0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite !abs_N_nonneg; only 1: destruct n, m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: now destruct Hn || now destruct Hm || clear; only 1: simpl; only 1: unfold Z.min, N.min; only 1: simpl; only 1: now case Pos.compare; only 1: now destruct Hn || now destruct Hm || clear; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: now destruct Hn || now destruct Hm || clear; only 1: simpl; only 1: trivial; only 1: now destruct Hn || now destruct Hm || clear; only 1: simpl; only 1: unfold Z.min, N.min; only 1: simpl; only 1: now case Pos.compare; only 1: trivial; only 1: trivial; only 1: Z.solve_min).	1.58791613579	1421
Coq.ZArith.Znat.Zabs2N.inj_max	40	0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite !abs_N_nonneg; only 1: destruct n, m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: now destruct Hn || now destruct Hm || clear; only 1: simpl; only 1: unfold Z.max, N.max; only 1: simpl; only 1: case Pos.compare_spec; only 1: intros; only 1: subst; only 1: trivial; only 1: intros; only 1: trivial; only 1: intros; only 1: trivial; only 1: now destruct Hn || now destruct Hm || clear; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: now destruct Hn || now destruct Hm || clear; only 1: simpl; only 1: trivial; only 1: now destruct Hn || now destruct Hm || clear; only 1: simpl; only 1: unfold Z.max, N.max; only 1: simpl; only 1: now case Pos.compare; only 1: trivial; only 1: trivial; only 1: Z.solve_max).	9.39997005463	5501
Coq.ZArith.Znat.Zabs2N.inj_quot	40
Coq.ZArith.Znat.Zabs2N.inj_rem	40
Coq.ZArith.Znat.Zabs2N.inj_pow	40
Coq.ZArith.Znat.Zabs2N.inj_succ_abs	40	66.198.198	synth with cache (only 1: N.bitwise; only 1: do 2 Morphisms.f_equiv; only 1: now destruct n as [| [| | ]| [| | ]]).	9.22715902328	9156
Coq.ZArith.Znat.Zabs2N.inj_add_abs	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.1	synth with cache (only 1: assert (forall p q, Z.abs_N (Z.pos p ÷ Z.pos q) = (N.pos p / N.pos q)%N); only 1: intros; only 1: rewrite abs_N_nonneg; only 1: now apply Z2N.inj_quot; only 1: now apply Z.quot_pos; only 1: destruct n, m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial).	0.598333835602	439
Coq.ZArith.Znat.Zabs2N.inj_mul_abs	40	0	synth with cache (only 1: now destruct n, m).	0.0249118804932	1
Coq.ZArith.Znat.Nat2Z.inj_0	40	0	synth with cache (only 1: trivial).	0.0147891044617	1
Coq.ZArith.Znat.Nat2Z.inj_succ	40
Coq.ZArith.Znat.Nat2Z.is_nonneg	40	64.0.322.0.256.0	synth with cache (only 1: destruct n; only 1: discriminate; only 1: destruct n; only 1: now rewrite <- ?N.add_le_mono_l; only 1: simpl; only 1: now Nat.nzsimpl).	0.26388001442	188
Coq.ZArith.Znat.Nat2Z.id	40
Coq.ZArith.Znat.Nat2Z.inj	40
Coq.ZArith.Znat.Nat2Z.inj_iff	40	0.0.0.0.1	synth with cache (only 1: split; only 1: intros H; only 1: now rewrite <- (id n), <- (id m), H; only 1: intros H; only 1: now f_equal).	0.217848062515	69
Coq.ZArith.Znat.Nat2Z.inj_compare	40
Coq.ZArith.Znat.Nat2Z.inj_le	40
Coq.ZArith.Znat.Nat2Z.inj_lt	40
Coq.ZArith.Znat.Nat2Z.inj_ge	40
Coq.ZArith.Znat.Nat2Z.inj_gt	40
Coq.ZArith.Znat.Nat2Z.inj_abs_nat	40
Coq.ZArith.Znat.Nat2Z.inj_add	40
Coq.ZArith.Znat.Nat2Z.inj_mul	40
Coq.ZArith.Znat.Nat2Z.inj_sub_max	40
Coq.ZArith.Znat.Nat2Z.inj_sub	40
Coq.ZArith.Znat.Nat2Z.inj_pred_max	40
Coq.ZArith.Znat.Nat2Z.inj_pred	40
Coq.ZArith.Znat.Nat2Z.inj_min	40
Coq.ZArith.Znat.Nat2Z.inj_max	40
Coq.ZArith.Znat.Z2Nat.id	40	0.0.1.0.0.0.0.2.64.5.0.0	synth with cache (only 1: destruct n; only 1: now destruct 1 || trivial; only 1: simpl; only 1: intros LE; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: apply Pos2Nat.inj; only 1: rewrite H; only 1: apply SuccNat2Pos.id_succ; only 1: now destruct 1 || trivial).	13.9474840164	8269
Coq.ZArith.Znat.Z2Nat.inj	40	385.0.0	synth with cache (only 1: intros; only 1: rewrite <- (Z2N.id n), <- (Z2N.id m) by trivial; only 1: congruence).	0.0570230484009	22
Coq.ZArith.Znat.Z2Nat.inj_iff	40	0.0.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: now apply Z2N.inj; only 1: intros; only 1: now subst).	0.0406069755554	5
Coq.ZArith.Znat.Z2Nat.inj_0	40	65	synth with cache (only 1: do 2 Morphisms.f_equiv).	0.0392410755157	6
Coq.ZArith.Znat.Z2Nat.inj_pos	40	0	synth with cache (only 1: trivial).	0.0168499946594	1
Coq.ZArith.Znat.Z2Nat.inj_neg	40	0	synth with cache (only 1: reflexivity).	0.0182938575745	1
Coq.ZArith.Znat.Z2Nat.inj_add	40
Coq.ZArith.Znat.Z2Nat.inj_mul	40	1.66.0.0.0.0.0.0.0.0.0.128.1.0.0.0.0.0.450	synth with cache (only 1: destruct n as [| n| n], m as [| m| m]; only 1: trivial; only 1: trivial; only 1: trivial; only 1: now destruct 1 || intros _; only 1: trivial; only 1: now destruct 1 || intros _; only 1: intros EQ; only 1: simpl; only 1: apply Pos2Nat.inj_mul; only 1: intros; only 1: now destruct Hn || now destruct Hm || clear; only 1: simpl; only 1: now Nat.nzsimpl; only 1: trivial; only 1: intros; only 1: now destruct Hn || now destruct Hm || clear; only 1: reflexivity; only 1: now destruct 1 || intros _).	5.0457341671	7442
Coq.ZArith.Znat.Z2Nat.inj_succ	40
Coq.ZArith.Znat.Z2Nat.inj_sub	40
Coq.ZArith.Znat.Z2Nat.inj_pred	40
Coq.ZArith.Znat.Z2Nat.inj_compare	40
Coq.ZArith.Znat.Z2Nat.inj_le	40
Coq.ZArith.Znat.Z2Nat.inj_lt	40
Coq.ZArith.Znat.Z2Nat.inj_min	40
Coq.ZArith.Znat.Z2Nat.inj_max	40
Coq.ZArith.Znat.Zabs2Nat.abs_nat_spec	40	0	synth with cache (only 1: now destruct n).	0.0218601226807	1
Coq.ZArith.Znat.Zabs2Nat.abs_nat_nonneg	40	0.0	synth with cache (only 1: intros; only 1: now destruct n).	0.0296838283539	2
Coq.ZArith.Znat.Zabs2Nat.id_abs	40	0.1.0.0.0.0.1.0.0.1.0.0.0.0.1.0.0.0.18	synth with cache (only 1: destruct n; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: apply Pos2Nat.inj; only 1: rewrite H; only 1: apply SuccNat2Pos.id_succ; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: apply Pos2Nat.inj; only 1: rewrite H; only 1: apply SuccNat2Pos.id_succ).	3.84012413025	11373
Coq.ZArith.Znat.Zabs2Nat.id	40	1.0.0.1	synth with cache (only 1: induction n; only 1: trivial; only 1: simpl; only 1: apply SuccNat2Pos.id_succ).	0.0737719535828	77
Coq.ZArith.Znat.Zabs2Nat.inj_0	40	0	synth with cache (only 1: trivial).	0.0156619548798	1
Coq.ZArith.Znat.Zabs2Nat.inj_pos	40	0	synth with cache (only 1: reflexivity).	0.0186231136322	1
Coq.ZArith.Znat.Zabs2Nat.inj_neg	40	0	synth with cache (only 1: reflexivity).	0.0182590484619	1
Coq.ZArith.Znat.Zabs2Nat.inj_succ	40
Coq.ZArith.Znat.Zabs2Nat.inj_add	40	1.1.0.1.1.1.0.1.0.0.0.0.1	synth with cache (only 1: destruct n, m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: intros Hn Hm; only 1: now destruct Hn || now destruct Hm || clear; only 1: simpl; only 1: apply Pos2Nat.inj_add; only 1: now destruct 1 || now destruct 2; only 1: trivial; only 1: now destruct 1 || now destruct 2; only 1: now destruct 1 || now destruct 2).	5.45844888687	3968
Coq.ZArith.Znat.Zabs2Nat.inj_mul	40
Coq.ZArith.Znat.Zabs2Nat.inj_sub	40
Coq.ZArith.Znat.Zabs2Nat.inj_pred	40
Coq.ZArith.Znat.Zabs2Nat.inj_compare	40
Coq.ZArith.Znat.Zabs2Nat.inj_le	40	0.0.0	synth with cache (only 1: intros Hn Hm; only 1: unfold Z.le; only 1: now rewrite nat_compare_le, Z2Nat.inj_compare).	0.0912101268768	3
Coq.ZArith.Znat.Zabs2Nat.inj_lt	40	0.0.0	synth with cache (only 1: intros Hn Hm; only 1: unfold Z.lt; only 1: now rewrite nat_compare_lt, Z2Nat.inj_compare).	0.0878710746765	3
Coq.ZArith.Znat.Zabs2Nat.inj_min	40
Coq.ZArith.Znat.Zabs2Nat.inj_max	40
Coq.ZArith.Znat.Zabs2Nat.inj_succ_abs	40
Coq.ZArith.Znat.Zabs2Nat.inj_add_abs	40
Coq.ZArith.Znat.Zabs2Nat.inj_mul_abs	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1	synth with cache (only 1: destruct n, m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply Pos2Nat.inj_mul; only 1: simpl; only 1: apply Pos2Nat.inj_mul; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply Pos2Nat.inj_mul; only 1: simpl; only 1: apply Pos2Nat.inj_mul).	0.410111904144	216
Coq.ZArith.Znat.inj_neq	40
Coq.ZArith.Znat.inj_minus2	40	516.1.512.1.0.0.0.260	synth with cache (only 1: induction n; only 1: intros a Ha; only 1: reflexivity; only 1: destruct m; only 1: easy; only 1: intros b; only 1: simpl; only 1: firstorder).	23.4925680161	38845
Coq.ZArith.Wf_Z.Z_of_nat_complete	40
Coq.ZArith.Wf_Z.Z_of_nat_complete_inf	40	0.1.0.0	synth with cache (only 1: intros H; only 1: exists (Z.to_nat x); only 1: symmetry; only 1: now apply Z2Nat.id).	0.0245759487152	5
Coq.ZArith.Wf_Z.Z_of_nat_prop	40
Coq.ZArith.Wf_Z.Z_of_nat_set	40
Coq.ZArith.Wf_Z.natlike_ind	40
Coq.ZArith.Wf_Z.natlike_rec	40
Coq.ZArith.Wf_Z.Efficient_Rec.R_wf	40
Coq.ZArith.Wf_Z.Efficient_Rec.natlike_rec2	40
Coq.ZArith.Wf_Z.Efficient_Rec.natlike_rec3	40
Coq.ZArith.Wf_Z.Efficient_Rec.Zlt_0_rec	40
Coq.ZArith.Wf_Z.Efficient_Rec.Zlt_0_ind	40	0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros P Hrec; only 1: induction x as [x IH] using (well_founded_induction_type R_wf); only 1: destruct x; only 1: intros Hx; only 1: apply Hrec; only 1: intros y (Hy, Hy'); only 1: assert (0 < 0) by now apply Z.le_lt_trans with y; only 1: discriminate; only 1: trivial; only 1: intros Hx; only 1: apply Hrec; only 1: intros y (Hy, Hy'); only 1: apply IH; only 1: now split; only 1: trivial; only 1: trivial; only 1: intros Hx; only 1: now destruct Hx).	1.82472586632	2616
Coq.ZArith.Wf_Z.Efficient_Rec.Z_lt_rec	40	0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.1	synth with cache (only 1: intros P Hrec; only 1: induction x as [x IH] using (well_founded_induction_type R_wf); only 1: destruct x; only 1: intros Hx; only 1: apply Hrec; only 1: intros y (Hy, Hy'); only 1: assert (0 < 0) by now apply Z.le_lt_trans with y; only 1: discriminate; only 1: intros Hx; only 1: apply Hrec; only 1: intros y (Hy, Hy'); only 1: apply IH; only 1: now split; only 1: trivial; only 1: intros Hx; only 1: now destruct Hx).	3.39936995506	3319
Coq.ZArith.Wf_Z.Efficient_Rec.Z_lt_induction	40	0.0.0	synth with cache (only 1: intros P Hrec; only 1: apply Zlt_0_rec; only 1: auto).	0.0295751094818	3
Coq.ZArith.Wf_Z.Efficient_Rec.Zlt_lower_bound_rec	40
Coq.ZArith.Wf_Z.Efficient_Rec.Zlt_lower_bound_ind	40	0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0	synth with cache (only 1: intros P z Hrec x Hx; only 1: rewrite <- (Z.sub_simpl_r x z); only 1: apply Z.le_0_sub in Hx; only 1: pattern (x - z); only 1: apply Zlt_0_rec; only 1: clear x Hx; only 1: intros x IH Hx; only 1: apply Hrec; only 1: intros y (Hy, Hy'); only 1: rewrite <- (Z.sub_simpl_r y z); only 1: apply IH; only 1: split; only 1: now rewrite Z.le_0_sub; only 1: now apply Z.lt_sub_lt_add_r; only 1: now rewrite <- (Z.add_le_mono_r 0 x z); only 1: trivial).	9.97507309914	6916
Coq.ZArith.Zpow_facts.Zpower_pos_1_l	40
Coq.ZArith.Zpow_facts.Zpower_pos_0_l	40	0.0.0.0.11.512.0.1	synth with cache (only 1: unfold Z.pow_pos; only 1: generalize 1; only 1: compute; only 1: induction p as [p IHp| p IHp| ]; only 1: intros H; only 1: auto using Z.eq_refl, Z.le_refl; only 1: congruence; only 1: Z.order).	13.1459269524	32790
Coq.ZArith.Zpow_facts.Zpower_pos_pos	40
Coq.ZArith.Zpow_facts.Zpower_le_monotone	40
Coq.ZArith.Zpow_facts.Zpower_lt_monotone	40
Coq.ZArith.Zpow_facts.Zpower_gt_1	40
Coq.ZArith.Zpow_facts.Zmult_power	40
Coq.ZArith.Zpow_facts.Zpower_le_monotone3	40
Coq.ZArith.Zpow_facts.Zpower_le_monotone_inv	40
Coq.ZArith.Zpow_facts.Zpower2_lt_lin	40
Coq.ZArith.Zpow_facts.Zpower2_le_lin	40
Coq.ZArith.Zpow_facts.Zpower2_Psize	40
Coq.ZArith.Zpow_facts.Zpower_mod	40
Coq.ZArith.Zpow_facts.Zpow_mod_pos_correct	40
Coq.ZArith.Zpow_facts.Zpow_mod_correct	40
Coq.ZArith.Zpow_facts.Zpower_divide	40
Coq.ZArith.Zpow_facts.rel_prime_Zpower_r	40
Coq.ZArith.Zpow_facts.rel_prime_Zpower	40
Coq.ZArith.Zpow_facts.prime_power_prime	40
Coq.ZArith.Zpow_facts.Zdivide_power_2	40
Coq.ZArith.Zpow_def.Zpower_theory	40
Coq.ZArith.Zcompare.Zcompare_Gt_trans	40
Coq.ZArith.Zcompare.Zcompare_opp	40	1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n, m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply Pos.compare_antisym; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite <- ?Pos.compare_antisym).	0.288861989975	142
Coq.ZArith.Zcompare.Zcompare_Gt_spec	40
Coq.ZArith.Zcompare.Zcompare_plus_compat	40
Coq.ZArith.Zcompare.Zplus_compare_compat	40
Coq.ZArith.Zcompare.Zcompare_succ_Gt	40
Coq.ZArith.Zcompare.Zcompare_Gt_not_Lt	40
Coq.ZArith.Zcompare.Zcompare_succ_compat	40
Coq.ZArith.Zcompare.Zcompare_mult_compat	40
Coq.ZArith.Zcompare.Zmult_compare_compat_l	40
Coq.ZArith.Zcompare.Zmult_compare_compat_r	40
Coq.ZArith.Zcompare.Zcompare_elim	40
Coq.ZArith.Zcompare.Zcompare_eq_case	40	4.1.64.0.0.0	synth with cache (only 1: intros a n a0 l h Hl EQ; only 1: case Z.compare_spec; only 1: intro H1; only 1: tauto; only 1: Z.order; only 1: Z.order).	1.67449498177	2062
Coq.ZArith.Zcompare.Zle_compare	40	0.1.0.0.2	synth with cache (only 1: intros EQ n Hn; only 1: case Z.compare_spec; only 1: trivial; only 1: trivial; only 1: Z.order).	0.774884939194	748
Coq.ZArith.Zcompare.Zlt_compare	40	1.0.193.1.0.0	synth with cache (only 1: intros; only 1: case Z.compare_spec; only 1: intros EQ; only 1: Z.order'; only 1: trivial; only 1: Z.order).	0.296019792557	252
Coq.ZArith.Zcompare.Zge_compare	40	0.0.0.0.0	synth with cache (only 1: intros; only 1: case Z.compare_spec; only 1: trivial; only 1: trivial; only 1: trivial).	0.0353038311005	5
Coq.ZArith.Zcompare.Zgt_compare	40	0.0	synth with cache (only 1: intros x y H; only 1: now rewrite H).	0.0343918800354	2
Coq.ZArith.Zquot.Zquot_0_r	40	334	synth with cache (only 1: now destruct a as [| [| | ]| ]).	2.33022284508	5060
Coq.ZArith.Zquot.Zrem_0_r	40	0.0.0.0.0.139	synth with cache (only 1: case a; only 1: reflexivity; only 1: intros; only 1: reflexivity; only 1: intros; only 1: reflexivity).	2.44267702103	8201
Coq.ZArith.Zquot.Zrem_0_l	40	1	synth with cache (only 1: now destruct a).	0.0248529911041	2
Coq.ZArith.Zquot.Zquot_0_l	40	1	synth with cache (only 1: now destruct a).	0.0257730484009	2
Coq.ZArith.Zquot.Z_rem_same	40
Coq.ZArith.Zquot.Z_rem_mult	40
Coq.ZArith.Zquot.Zquot_opp_l	40
Coq.ZArith.Zquot.Zquot_opp_r	40
Coq.ZArith.Zquot.Zrem_opp_l	40	0.0.1.0.0.1.0.0.0.1.0.0.1.0.0.0.0.0	synth with cache (only 1: destruct a, b; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: unfold Z.rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: unfold Z.rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: trivial; only 1: unfold Z.rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: unfold Z.rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r])).	1.17867398262	579
Coq.ZArith.Zquot.Zrem_opp_r	40	0.0.1.0.0.1.0.0.0.1.0.0.1.0.0.0.0.0	synth with cache (only 1: destruct a, b; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: unfold Z.rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: unfold Z.rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: trivial; only 1: unfold Z.rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: unfold Z.rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r])).	1.83691310883	1556
Coq.ZArith.Zquot.Zquot_opp_opp	40
Coq.ZArith.Zquot.Zrem_opp_opp	40	0.0.1.0.0.0.1.0.0.0.1.0.0.1.0.0.0.0.0.0.0.2.1	synth with cache (only 1: destruct a, b; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: reflexivity; only 1: trivial; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: unfold Z.rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: unfold Z.rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: trivial; only 1: unfold Z.rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: simpl; only 1: unfold Z.rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r])).	13.5086560249	14096
Coq.ZArith.Zquot.Zrem_sgn	40
Coq.ZArith.Zquot.Zrem_sgn2	40
Coq.ZArith.Zquot.Zrem_lt_pos	40
Coq.ZArith.Zquot.Zrem_lt_neg	40
Coq.ZArith.Zquot.Zrem_lt_pos_pos	40	0.1.64.0	synth with cache (only 1: intros Ha Hb; only 1: zero_or_not b; only 1: generalize (Z.rem_nonneg a b), (Z.rem_bound_abs a b); only 1: lia).	0.447383880615	130
Coq.ZArith.Zquot.Zrem_lt_pos_neg	40	0.2.0	synth with cache (only 1: intros; only 1: generalize (Zrem_lt_pos a b); only 1: lia).	0.618577957153	307
Coq.ZArith.Zquot.Zrem_lt_neg_pos	40	0.1.0	synth with cache (only 1: intros; only 1: generalize (Z.rem_nonpos a b), (Z.rem_bound_abs a b); only 1: lia).	0.355505943298	122
Coq.ZArith.Zquot.Zrem_lt_neg_neg	40	0.3.0	synth with cache (only 1: intros; only 1: generalize (Zrem_lt_neg a b); only 1: lia).	7.90184116364	3154
Coq.ZArith.Zquot.Remainder_equiv	40
Coq.ZArith.Zquot.Zquot_mod_unique_full	40
Coq.ZArith.Zquot.Zquot_unique_full	40
Coq.ZArith.Zquot.Zrem_unique_full	40	0.0.0.0.0.512	synth with cache (only 1: intros a0; only 1: intros; only 1: destruct (Zquot_mod_unique_full a b q r); only 1: auto; only 1: auto; only 1: auto).	0.463284015656	230
Coq.ZArith.Zquot.Z_quot_pos	40
Coq.ZArith.Zquot.Z_quot_lt	40
Coq.ZArith.Zquot.Z_quot_monotone	40
Coq.ZArith.Zquot.Z_mult_quot_le	40
Coq.ZArith.Zquot.Z_mult_quot_ge	40
Coq.ZArith.Zquot.Z_quot_exact_full	40
Coq.ZArith.Zquot.Zrem_le	40
Coq.ZArith.Zquot.Zquot_le_upper_bound	40
Coq.ZArith.Zquot.Zquot_lt_upper_bound	40
Coq.ZArith.Zquot.Zquot_le_lower_bound	40
Coq.ZArith.Zquot.Zquot_sgn	40
Coq.ZArith.Zquot.Z_rem_plus	40
Coq.ZArith.Zquot.Z_quot_plus	40
Coq.ZArith.Zquot.Z_quot_plus_l	40
Coq.ZArith.Zquot.Zquot_mult_cancel_r	40
Coq.ZArith.Zquot.Zquot_mult_cancel_l	40
Coq.ZArith.Zquot.Zmult_rem_distr_l	40
Coq.ZArith.Zquot.Zmult_rem_distr_r	40
Coq.ZArith.Zquot.Zrem_rem	40
Coq.ZArith.Zquot.Zmult_rem	40
Coq.ZArith.Zquot.Zplus_rem	40
Coq.ZArith.Zquot.Zplus_rem_idemp_l	40
Coq.ZArith.Zquot.Zplus_rem_idemp_r	40
Coq.ZArith.Zquot.Zmult_rem_idemp_l	40
Coq.ZArith.Zquot.Zmult_rem_idemp_r	40
Coq.ZArith.Zquot.Zquot_Zquot	40
Coq.ZArith.Zquot.Zquot_mult_le	40
Coq.ZArith.Zquot.Zrem_divides	40
Coq.ZArith.Zquot.Zquot2_odd_remainder	40
Coq.ZArith.Zquot.Zrem_odd	40
Coq.ZArith.Zquot.Zrem_even	40
Coq.ZArith.Zquot.Zeven_rem	40
Coq.ZArith.Zquot.Zodd_rem	40
Coq.ZArith.Zquot.Zquotrem_Zdiv_eucl_pos	40
Coq.ZArith.Zquot.Zquot_Zdiv_pos	40
Coq.ZArith.Zquot.Zrem_Zmod_pos	40
Coq.ZArith.Zquot.Zrem_Zmod_zero	40
Coq.ZArith.Zdigits.VALUE_OF_BOOLEAN_VECTORS.binary_value	40	515	synth with cache (only 1: firstorder).	0.0645339488983	79
Coq.ZArith.Zdigits.VALUE_OF_BOOLEAN_VECTORS.two_compl_value	40	322	synth with cache (only 1: constructor).	0.0943291187286	147
Coq.ZArith.Zdigits.ENCODING_VALUE.Zmod2_twice	40
Coq.ZArith.Zdigits.ENCODING_VALUE.Z_to_binary	40	0.192.260.390.0.192	synth with cache (only 1: intuition try easy; only 1: induction n; only 1: Nat.Private_Tac.order || (right; Nat.Private_Tac.order) || (left; Nat.Private_Tac.order); only 1: right; only 1: (right; Z.order) || (left; Z.order); only 1: trivial).	6.00058102608	15612
Coq.ZArith.Zdigits.ENCODING_VALUE.Z_to_two_compl	40
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.binary_value_Sn	40	258.0.0	synth with cache (only 1: simpl; only 1: intros; only 1: now N.nzsimpl).	0.103896856308	17
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Z_to_binary_Sn	40
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.binary_value_pos	40
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.two_compl_value_Sn	40	65.0.0	synth with cache (only 1: simpl; only 1: intros m w le; only 1: auto with typeclass_instances).	0.0435910224915	7
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Z_to_two_compl_Sn	40
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Z_to_binary_Sn_z	40	0	synth with cache (only 1: auto).	0.0218901634216	1
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Z_div2_value	40	1.0.0.0.0.0.0.0.64.0.0.0.2.0	synth with cache (only 1: destruct z; only 1: intros Hn; only 1: simpl; only 1: Z.order; only 1: simpl; only 1: intuition try easy; only 1: destruct p; only 1: simpl; only 1: easy; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: now destruct 1 || trivial).	4.34382581711	2623
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Pdiv2	40	0.195.1.0.0.129	synth with cache (only 1: intro n; only 1: destruct n as [| p| p]; only 1: trivial; only 1: simpl; only 1: now destruct p; only 1: trivial).	3.91268396378	3821
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Zdiv2_two_power_nat	40
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Z_to_two_compl_Sn_z	40	1.0.0.0.0	synth with cache (only 1: intros; only 1: destruct z as [| p| p]; only 1: auto; only 1: auto; only 1: auto).	0.077691078186	9
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Zeven_bit_value	40
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Zodd_bit_value	40	0.0.0.0.0.3.0.0.0.0.0.0.1.0.0.1.2	synth with cache (only 1: destruct z; only 1: intros Hb; only 1: simpl; only 1: easy; only 1: destruct p; only 1: unfold bit_value; only 1: tauto || (intro H; elim H); only 1: unfold bit_value; only 1: tauto || (intro H; elim H); only 1: auto; only 1: unfold bit_value; only 1: boolify_even_odd; only 1: destruct p; only 1: tauto || (intro H; elim H); only 1: tauto || (intro H; elim H); only 1: easy; only 1: tauto || (intro H; elim H)).	6.03891897202	6393
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Zge_minus_two_power_nat_S	40
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Zlt_two_power_nat_S	40
Coq.ZArith.Zdigits.COHERENT_VALUE.binary_to_Z_to_binary	40
Coq.ZArith.Zdigits.COHERENT_VALUE.two_compl_to_Z_to_two_compl	40
Coq.ZArith.Zdigits.COHERENT_VALUE.Z_to_binary_to_Z	40
Coq.ZArith.Zdigits.COHERENT_VALUE.Z_to_two_compl_to_Z	40
Coq.ZArith.BinInt.Z.eq_dec	40	0.0.7	synth with cache (only 1: decide equality; only 1: apply Pos.eq_dec; only 1: apply Pos.eq_dec).	0.23955488205	395
Coq.ZArith.BinInt.Z.pos_sub_spec	40
Coq.ZArith.BinInt.Z.pos_sub_discr	40
Coq.ZArith.BinInt.Z.pos_sub_diag	40
Coq.ZArith.BinInt.Z.pos_sub_lt	40
Coq.ZArith.BinInt.Z.pos_sub_gt	40
Coq.ZArith.BinInt.Z.pos_sub_opp	40
Coq.ZArith.BinInt.Z.Private_BootStrap.add_0_r	40	0.0.1.64.7	synth with cache (only 1: induction n; only 1: now rewrite <- ?PeanoNat.Nat.add_le_mono_l; only 1: simpl; only 1: trivial; only 1: trivial).	0.465937137604	540
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_0_r	40	0.654.210	synth with cache (only 1: pattern n; only 1: compute; only 1: now destruct n).	4.86760091782	18316
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_1_l	40	137.512.199.0	synth with cache (only 1: simpl; only 1: pattern n; only 1: assert (leS : forall n m, (n <= m)%nat -> (S n <= S m)%nat) by (induction 1; auto); only 1: now destruct n).	6.1278090477	5888
Coq.ZArith.BinInt.Z.Private_BootStrap.add_comm	40
Coq.ZArith.BinInt.Z.Private_BootStrap.opp_add_distr	40
Coq.ZArith.BinInt.Z.Private_BootStrap.opp_inj	40
Coq.ZArith.BinInt.Z.Private_BootStrap.pos_sub_add	40
Coq.ZArith.BinInt.Z.Private_BootStrap.add_assoc_pos	40
Coq.ZArith.BinInt.Z.Private_BootStrap.add_assoc	40
Coq.ZArith.BinInt.Z.Private_BootStrap.add_opp_diag_r	40	0.2.0.0.0.2.7	synth with cache (only 1: destruct n; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now rewrite pos_sub_spec, Pos.compare_refl; only 1: simpl; only 1: now rewrite pos_sub_spec, Pos.compare_refl).	0.962594985962	1869
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_opp_r	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0	synth with cache (only 1: destruct n, m; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	0.260695934296	249
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_add_distr_pos	40
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_add_distr_r	40
Coq.ZArith.BinInt.Z.one_succ	40	66	synth with cache (only 1: auto).	0.0172090530396	7
Coq.ZArith.BinInt.Z.two_succ	40	0.0	synth with cache (only 1: simpl; only 1: trivial).	0.0208530426025	2
Coq.ZArith.BinInt.Z.add_0_l	40	0	synth with cache (only 1: now destruct n).	0.0170259475708	1
Coq.ZArith.BinInt.Z.add_succ_l	40
Coq.ZArith.BinInt.Z.opp_0	40	0.0	synth with cache (only 1: simpl; only 1: now f_equal).	0.0185849666595	2
Coq.ZArith.BinInt.Z.opp_succ	40
Coq.ZArith.BinInt.Z.succ_pred	40	3.1.1.0.0.386.1.64.4.0.1.3.0	synth with cache (only 1: unfold succ, pred; only 1: destruct n; only 1: simpl; only 1: now f_equal; only 1: apply opp_inj; only 1: setoid_rewrite N.one_succ; only 1: f_equal; only 1: rewrite <- N.add_assoc; only 1: simpl; only 1: trivial; only 1: apply opp_inj; only 1: rewrite !opp_add_distr; only 1: apply pos_sub_add).	33.7219409943	157908
Coq.ZArith.BinInt.Z.pred_succ	40	0.0	synth with cache (only 1: unfold succ, pred; only 1: now rewrite <- add_assoc, add_opp_diag_r, add_0_r).	0.0248560905457	2
Coq.ZArith.BinInt.Z.sub_0_r	40	0.83	synth with cache (only 1: rewrite <- (PeanoNat.Nat.mul_1_l n)  at 1; only 1: now destruct n).	3.99736690521	7341
Coq.ZArith.BinInt.Z.sub_succ_r	40
Coq.ZArith.BinInt.Z.mul_0_l	40	0	synth with cache (only 1: now destruct n).	0.0174059867859	1
Coq.ZArith.BinInt.Z.mul_succ_l	40
Coq.ZArith.BinInt.Z.eqb_eq	40
Coq.ZArith.BinInt.Z.ltb_lt	40
Coq.ZArith.BinInt.Z.leb_le	40
Coq.ZArith.BinInt.Z.compare_eq_iff	40
Coq.ZArith.BinInt.Z.compare_sub	40
Coq.ZArith.BinInt.Z.compare_antisym	40	0.2.66.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n, m; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply Pos.compare_antisym; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: symmetry; only 1: rewrite CompOpp_involutive; only 1: apply Pos.compare_antisym).	0.809955120087	857
Coq.ZArith.BinInt.Z.compare_lt_iff	40	1	synth with cache (only 1: reflexivity).	0.0508460998535	10
Coq.ZArith.BinInt.Z.compare_le_iff	40	0.1	synth with cache (only 1: unfold leb, le; only 1: now rewrite N.compare_antisym, CompOpp_iff).	0.335469007492	85
Coq.ZArith.BinInt.Z.lt_succ_r	40
Coq.ZArith.BinInt.Z.max_l	40
Coq.ZArith.BinInt.Z.max_r	40	0.0.3.2.2.0	synth with cache (only 1: unfold le, max; only 1: rewrite N.compare_antisym; only 1: case N.compare_spec; only 1: now destruct compare; only 1: intuition; only 1: intuition).	18.7345819473	32008
Coq.ZArith.BinInt.Z.min_l	40
Coq.ZArith.BinInt.Z.min_r	40	0.1.0.1.1.0	synth with cache (only 1: unfold le, min; only 1: rewrite (compare_antisym n m); only 1: case compare_spec; only 1: trivial; only 1: now destruct 2; only 1: intuition).	1.50259804726	2488
Coq.ZArith.BinInt.Z.peano_ind	40
Coq.ZArith.BinInt.Z.bi_induction	40
Coq.ZArith.BinInt.Z.abs_eq	40	67.0.64.320.0.0	synth with cache (only 1: unfold le, min; only 1: intuition; only 1: destruct sqrtrem as (s, rm); only 1: intuition; only 1: rewrite compare_antisym, CompOpp_iff in H; only 1: now destruct n).	1.82796907425	398
Coq.ZArith.BinInt.Z.abs_neq	40	0.1.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: now destruct 1; only 1: trivial).	0.0330739021301	5
Coq.ZArith.BinInt.Z.sgn_null	40	0.0.0.0.0.0.2	synth with cache (only 1: destruct n; only 1: intros H; only 1: now f_equal; only 1: intros H; only 1: destr_eq H; only 1: intros H; only 1: destr_eq H).	0.40008187294	475
Coq.ZArith.BinInt.Z.sgn_pos	40	129.1.66.0.129.452	synth with cache (only 1: setoid_replace 1%nat with (1 * 1)%nat by now PeanoNat.Nat.nzsimpl; only 1: rewrite <- (PeanoNat.Nat.add_0_l n)  at 2; only 1: destruct n; only 1: now f_equal; only 1: trivial; only 1: now N.nzsimpl).	3.71218705177	1545
Coq.ZArith.BinInt.Z.sgn_neg	40	0	synth with cache (only 1: now destruct n).	0.0251801013947	1
Coq.ZArith.BinInt.Z.pow_0_r	40	0	synth with cache (only 1: now destruct n).	0.0173370838165	1
Coq.ZArith.BinInt.Z.pow_succ_r	40
Coq.ZArith.BinInt.Z.pow_neg_r	40	448.64.2.1.5	synth with cache (only 1: revert m; only 1: destruct m; only 1: now destruct n; only 1: apply Pos.compare_succ_l || apply Pos.compare_succ_r || now destruct p || now destruct q; only 1: auto with sets).	2.05540895462	2429
Coq.ZArith.BinInt.Z.pow_pos_fold	40	0	synth with cache (only 1: now nzsimpl').	0.0365409851074	1
Coq.ZArith.BinInt.Z.square_spec	40	0.0.1.0.0.1.0.140	synth with cache (only 1: induction n; only 1: now nzsimpl; only 1: simpl; only 1: f_equal; only 1: apply Pos.square_spec; only 1: simpl; only 1: f_equal; only 1: apply Pos.square_spec).	26.728910923	42299
Coq.ZArith.BinInt.Z.sqrtrem_spec	40
Coq.ZArith.BinInt.Z.sqrt_spec	40
Coq.ZArith.BinInt.Z.sqrt_neg	40	4	synth with cache (only 1: now destruct n).	0.942054033279	241
Coq.ZArith.BinInt.Z.sqrtrem_sqrt	40
Coq.ZArith.BinInt.Z.log2_spec	40
Coq.ZArith.BinInt.Z.log2_nonpos	40	0.1.0.0.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: now destruct 1 || intros _; only 1: now destruct 1 || intros _; only 1: simpl; only 1: trivial).	0.038654088974	7
Coq.ZArith.BinInt.Z.even_spec	40
Coq.ZArith.BinInt.Z.odd_spec	40
Coq.ZArith.BinInt.Z.double_spec	40	0	synth with cache (only 1: trivial).	0.0156960487366	1
Coq.ZArith.BinInt.Z.succ_double_spec	40	0.0.0.0.0.0.192.66.320	synth with cache (only 1: destruct sqrtrem as (s, rm); only 1: now rewrite <- ?succ_le_mono; only 1: induction n; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy; only 1: simpl; only 1: trivial).	0.86439704895	660
Coq.ZArith.BinInt.Z.pred_double_spec	40	0	synth with cache (only 1: now destruct n).	0.0183811187744	1
Coq.ZArith.BinInt.Z.pos_div_eucl_eq	40
Coq.ZArith.BinInt.Z.div_eucl_eq	40
Coq.ZArith.BinInt.Z.div_mod	40
Coq.ZArith.BinInt.Z.pos_div_eucl_bound	40
Coq.ZArith.BinInt.Z.mod_pos_bound	40
Coq.ZArith.BinInt.Z.mod_neg_bound	40
Coq.ZArith.BinInt.Z.quotrem_eq	40
Coq.ZArith.BinInt.Z.quot_rem'	40
Coq.ZArith.BinInt.Z.quot_rem	40	0.0.1.0.0	synth with cache (only 1: intros Hb; only 1: rewrite mul_comm; only 1: generalize (quotrem_eq a b); only 1: unfold quot, rem; only 1: now destruct quotrem).	0.602607965469	426
Coq.ZArith.BinInt.Z.rem_bound_pos	40
Coq.ZArith.BinInt.Z.rem_opp_l'	40
Coq.ZArith.BinInt.Z.rem_opp_r'	40
Coq.ZArith.BinInt.Z.rem_opp_l	40	0.0.1.0.0.1.0.0.0.1.0.0.1.0.0.0.0.0.0	synth with cache (only 1: intros _; only 1: destruct a, b; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: unfold rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: unfold rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: trivial; only 1: unfold rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: unfold rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r])).	1.81263709068	1908
Coq.ZArith.BinInt.Z.rem_opp_r	40	0.0.1.0.0.1.0.0.0.1.0.0.1.0.0.0.0.0.0.577	synth with cache (only 1: rewrite <- PeanoNat.Nat.add_0_r  at 1; only 1: intros _; only 1: destruct a, b; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: unfold rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: unfold rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: trivial; only 1: unfold rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: unfold rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r])).	7.953551054	7628
Coq.ZArith.BinInt.Z.divide_Zpos	40
Coq.ZArith.BinInt.Z.divide_Zpos_Zneg_r	40
Coq.ZArith.BinInt.Z.divide_Zpos_Zneg_l	40	1.448.0.0.1.385.0.0.0	synth with cache (only 1: split; only 1: intros (m, H); only 1: exists (- m); only 1: inversion_clear H; only 1: now destruct n, m; only 1: intros (m, H); only 1: exists (- m); only 1: inversion_clear H; only 1: now destruct n, m).	0.906108856201	873
Coq.ZArith.BinInt.Z.ggcd_gcd	40
Coq.ZArith.BinInt.Z.ggcd_correct_divisors	40
Coq.ZArith.BinInt.Z.gcd_divide_l	40
Coq.ZArith.BinInt.Z.gcd_divide_r	40	0.2.1.0.0.0.0	synth with cache (only 1: rewrite <- ggcd_gcd; only 1: generalize (ggcd_correct_divisors a b); only 1: destruct ggcd as (g, (aa, bb)); only 1: simpl; only 1: intros (_, H); only 1: exists bb; only 1: now rewrite mul_comm).	3.34352207184	3499
Coq.ZArith.BinInt.Z.gcd_greatest	40
Coq.ZArith.BinInt.Z.gcd_nonneg	40
Coq.ZArith.BinInt.Z.ggcd_opp	40
Coq.ZArith.BinInt.Z.testbit_of_N	40	192.1.0.0.0.0.0.0.0.1.0.0.0.0.0.1	synth with cache (only 1: destruct a as [| [a| a| ]], n as [| n]; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: intuition).	0.443584918976	232
Coq.ZArith.BinInt.Z.testbit_of_N'	40	0.0.0.1.0.0.1.0.0.1.0.2	synth with cache (only 1: intros EQ; only 1: destruct a as [| a], n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: trivial; only 1: simpl; only 1: now destruct a; only 1: simpl; only 1: trivial; only 1: easy).	12.5455961227	14224
Coq.ZArith.BinInt.Z.testbit_Zpos	40	1.4.1.4.0.4.0	synth with cache (only 1: intro Hn; only 1: destruct a as [| a| a]; only 1: simpl; only 1: now destruct n; only 1: simpl; only 1: now destruct n; only 1: now destruct n).	22.7356629372	38859
Coq.ZArith.BinInt.Z.testbit_Zneg	40
Coq.ZArith.BinInt.Z.div2_spec	40	64	synth with cache (only 1: intuition).	0.0159108638763	5
Coq.ZArith.BinInt.Z.testbit_0_l	40	5	synth with cache (only 1: now destruct n).	0.0599060058594	150
Coq.ZArith.BinInt.Z.testbit_neg_r	40	9	synth with cache (only 1: now induction n).	0.766572952271	876
Coq.ZArith.BinInt.Z.testbit_odd_0	40
Coq.ZArith.BinInt.Z.testbit_even_0	40	0.1.3.659	synth with cache (only 1: cut (1%positive = 1%positive); only 1: intros n; only 1: now destruct a; only 1: easy).	26.1070179939	38191
Coq.ZArith.BinInt.Z.testbit_odd_succ	40
Coq.ZArith.BinInt.Z.testbit_even_succ	40
Coq.ZArith.BinInt.Z.shiftr_spec_aux	40
Coq.ZArith.BinInt.Z.shiftl_spec_low	40
Coq.ZArith.BinInt.Z.shiftl_spec_high	40
Coq.ZArith.BinInt.Z.shiftr_spec	40
Coq.ZArith.BinInt.Z.lor_spec	40
Coq.ZArith.BinInt.Z.land_spec	40
Coq.ZArith.BinInt.Z.ldiff_spec	40
Coq.ZArith.BinInt.Z.lxor_spec	40
Coq.ZArith.BinInt.Z.gt_lt_iff	40
Coq.ZArith.BinInt.Z.gt_lt	40	193.641.65.0	synth with cache (only 1: unfold lt, gt; only 1: destruct (max_spec m n) as [(H, E)| (H, E)]; only 1: now rewrite <- ?N.add_le_mono_r; only 1: now injection 1 || (intros; now f_equal)).	1.19229698181	816
Coq.ZArith.BinInt.Z.lt_gt	40	0	synth with cache (only 1: apply gt_lt_iff).	0.010990858078	1
Coq.ZArith.BinInt.Z.ge_le_iff	40
Coq.ZArith.BinInt.Z.ge_le	40	0.64.192.0.1.1.1.512	synth with cache (only 1: destruct (lt_trichotomy n m) as [LT| [EQ| GT]]; only 1: unfold le, max; only 1: intuition; only 1: intros; only 1: Private_Tac.order; only 1: rewrite <- Pos.lt_succ_r; only 1: intro H; only 1: now apply lt_lt_succ_r).	7.84209799767	6487
Coq.ZArith.BinInt.Z.le_ge	40	0	synth with cache (only 1: apply ge_le_iff).	0.0105800628662	1
Coq.ZArith.BinInt.Z.gtb_ltb	40
Coq.ZArith.BinInt.Z.geb_leb	40
Coq.ZArith.BinInt.Z.gtb_lt	40
Coq.ZArith.BinInt.Z.geb_le	40
Coq.ZArith.BinInt.Z.gtb_spec	40
Coq.ZArith.BinInt.Z.geb_spec	40
Coq.ZArith.BinInt.Z.add_reg_l	40
Coq.ZArith.BinInt.Z.mul_reg_l	40
Coq.ZArith.BinInt.Z.mul_reg_r	40
Coq.ZArith.BinInt.Z.opp_eq_mul_m1	40	577.64.64.64.130.576	synth with cache (only 1: apply PeanoNat.Nat.bits_inj; only 1: unfold ggcd, opp; only 1: rewrite mul_comm; only 1: rewrite mul_comm; only 1: rewrite mul_comm; only 1: constructor).	0.964663982391	653
Coq.ZArith.BinInt.Z.add_diag	40	0.0.1	synth with cache (only 1: rewrite two_succ; only 1: nzsimpl; only 1: now nzsimpl).	0.386548042297	4
Coq.ZArith.BinInt.Z.compare_opp	40	0.0.0.0.0.1.0.0.0.0.0.0.0.0.4	synth with cache (only 1: destruct n, m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite <- ?Pos.compare_antisym; only 1: trivial; only 1: trivial; only 1: trivial; only 1: simpl; only 1: apply Pos.compare_antisym).	11.9261860847	5497
Coq.ZArith.BinInt.Z.add_compare_mono_l	40
Coq.ZArith.BinInt.Z.testbit_mod_pow2	40
Coq.ZArith.BinInt.Z.testbit_ones	40
Coq.ZArith.BinInt.Z.testbit_ones_nonneg	40	0.0.4.0.0.0.0.0.0	synth with cache (only 1: destruct (leb_spec 0 i), (ltb_spec i n); only 1: rewrite ?testbit_neg_r, ?ones_spec_low, ?ones_spec_high by auto; only 1: trivial; only 1: rewrite ?testbit_neg_r, ?ones_spec_low, ?ones_spec_high by auto; only 1: trivial; only 1: rewrite ?testbit_neg_r, ?ones_spec_low, ?ones_spec_high by auto; only 1: now try order'; only 1: rewrite ?testbit_neg_r, ?ones_spec_low, ?ones_spec_high by auto; only 1: trivial).	0.923768043518	608
Coq.ZArith.BinInt.Pos2Z.id	40	1	synth with cache (only 1: now destruct p).	0.0190830230713	2
Coq.ZArith.BinInt.Pos2Z.inj	40	0	synth with cache (only 1: congruence).	0.0116879940033	1
Coq.ZArith.BinInt.Pos2Z.inj_iff	40	0.0.0	synth with cache (only 1: split; only 1: now injection 1; only 1: congruence).	0.0209360122681	3
Coq.ZArith.BinInt.Pos2Z.is_pos	40	321	synth with cache (only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l).	0.0161600112915	22
Coq.ZArith.BinInt.Pos2Z.is_nonneg	40	833	synth with cache (only 1: destr_bool).	0.0382969379425	90
Coq.ZArith.BinInt.Pos2Z.inj_1	40	0	synth with cache (only 1: easy).	0.0118989944458	1
Coq.ZArith.BinInt.Pos2Z.inj_xO	40	0.2	synth with cache (only 1: simpl; only 1: trivial).	0.105808973312	4
Coq.ZArith.BinInt.Pos2Z.inj_xI	40	0.0	synth with cache (only 1: simpl; only 1: easy).	0.0190391540527	2
Coq.ZArith.BinInt.Pos2Z.inj_succ	40	1.0	synth with cache (only 1: rewrite <- Pos.add_1_r; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l).	0.0172760486603	3
Coq.ZArith.BinInt.Pos2Z.inj_add	40	0.0	synth with cache (only 1: simpl; only 1: trivial).	0.015899181366	2
Coq.ZArith.BinInt.Pos2Z.inj_sub	40
Coq.ZArith.BinInt.Pos2Z.inj_sub_max	40
Coq.ZArith.BinInt.Pos2Z.inj_pred	40	0.0.0.0.130.0	synth with cache (only 1: intros; only 1: destruct p; only 1: trivial; only 1: trivial; only 1: simpl; only 1: now destruct H).	3.58903002739	691
Coq.ZArith.BinInt.Pos2Z.inj_mul	40	1	synth with cache (only 1: reflexivity).	0.0138218402863	2
Coq.ZArith.BinInt.Pos2Z.inj_pow_pos	40	0.261.0.580.203	synth with cache (only 1: f_equiv; only 1: intros n; only 1: intros; only 1: now apply H; only 1: now apply Pos.iter_swap_gen).	19.1483058929	30174
Coq.ZArith.BinInt.Pos2Z.inj_pow	40	0	synth with cache (only 1: now apply Pos.iter_swap_gen).	0.013738155365	1
Coq.ZArith.BinInt.Pos2Z.inj_square	40	1.0	synth with cache (only 1: simpl; only 1: trivial).	0.0154387950897	3
Coq.ZArith.BinInt.Pos2Z.inj_compare	40	0	synth with cache (only 1: reflexivity).	0.0130112171173	1
Coq.ZArith.BinInt.Pos2Z.inj_leb	40	0	synth with cache (only 1: reflexivity).	0.011892080307	1
Coq.ZArith.BinInt.Pos2Z.inj_ltb	40	0.0	synth with cache (only 1: unfold Pos.ltb, Pos.lt; only 1: reflexivity).	0.0175170898438	2
Coq.ZArith.BinInt.Pos2Z.inj_eqb	40	0	synth with cache (only 1: reflexivity).	0.00976514816284	1
Coq.ZArith.BinInt.Pos2Z.inj_max	40
Coq.ZArith.BinInt.Pos2Z.inj_min	40
Coq.ZArith.BinInt.Pos2Z.inj_sqrt	40	0.2	synth with cache (only 1: unfold Z.sqrtrem, Z.sqrt, Pos.sqrt; only 1: trivial).	0.0209469795227	4
Coq.ZArith.BinInt.Pos2Z.inj_gcd	40	1	synth with cache (only 1: reflexivity).	0.00980806350708	2
Coq.ZArith.BinInt.Pos2Z.inj_divide	40
Coq.ZArith.BinInt.Pos2Z.inj_testbit	40	320.64.1.1.6.0	synth with cache (only 1: intro Hn; only 1: destruct n as [| n| n]; only 1: simpl; only 1: now destruct a; only 1: repeat split; only 1: now PeanoNat.Nat.nzsimpl).	5.83572506905	2852
Coq.ZArith.BinInt.Pos2Z.inj_neg	40	0	synth with cache (only 1: congruence).	0.0126600265503	1
Coq.ZArith.BinInt.Pos2Z.inj_neg_iff	40	0.0.0	synth with cache (only 1: split; only 1: now injection 1; only 1: congruence).	0.0229799747467	3
Coq.ZArith.BinInt.Pos2Z.inj_pos	40	0	synth with cache (only 1: now injection 1).	0.0125839710236	1
Coq.ZArith.BinInt.Pos2Z.inj_pos_iff	40	0.0.0.0	synth with cache (only 1: split; only 1: now injection 1; only 1: intros; only 1: now f_equal).	0.0253329277039	4
Coq.ZArith.BinInt.Pos2Z.neg_is_neg	40	194	synth with cache (only 1: now PeanoNat.Nat.nzsimpl).	0.0281620025635	15
Coq.ZArith.BinInt.Pos2Z.neg_is_nonpos	40	3	synth with cache (only 1: easy).	0.0494911670685	12
Coq.ZArith.BinInt.Pos2Z.pos_is_pos	40	0	synth with cache (only 1: reflexivity).	0.0112061500549	1
Coq.ZArith.BinInt.Pos2Z.pos_is_nonneg	40	0	synth with cache (only 1: easy).	0.0170378684998	1
Coq.ZArith.BinInt.Pos2Z.neg_le_pos	40	0	synth with cache (only 1: easy).	0.0157279968262	1
Coq.ZArith.BinInt.Pos2Z.neg_lt_pos	40	0	synth with cache (only 1: easy).	0.0122170448303	1
Coq.ZArith.BinInt.Pos2Z.neg_le_neg	40
Coq.ZArith.BinInt.Pos2Z.neg_lt_neg	40	0.0.1.128	synth with cache (only 1: unfold Z.lt, Z.gt; only 1: simpl; only 1: intros H; only 1: now rewrite <- Pos.compare_antisym).	0.507186889648	137
Coq.ZArith.BinInt.Pos2Z.pos_le_pos	40	65.0.1	synth with cache (only 1: intros; only 1: unfold Z.le; only 1: assumption).	0.0469741821289	78
Coq.ZArith.BinInt.Pos2Z.pos_lt_pos	40	577.0	synth with cache (only 1: intros; only 1: eexact H).	0.0632560253143	87
Coq.ZArith.BinInt.Pos2Z.neg_xO	40	0	synth with cache (only 1: reflexivity).	0.0119261741638	1
Coq.ZArith.BinInt.Pos2Z.neg_xI	40	0.0	synth with cache (only 1: simpl; only 1: trivial).	0.0176060199738	2
Coq.ZArith.BinInt.Pos2Z.pos_xO	40	0	synth with cache (only 1: reflexivity).	0.0119001865387	1
Coq.ZArith.BinInt.Pos2Z.pos_xI	40	0	synth with cache (only 1: reflexivity).	0.0128769874573	1
Coq.ZArith.BinInt.Pos2Z.opp_neg	40	0	synth with cache (only 1: trivial).	0.0115292072296	1
Coq.ZArith.BinInt.Pos2Z.opp_pos	40	0	synth with cache (only 1: reflexivity).	0.0111079216003	1
Coq.ZArith.BinInt.Pos2Z.add_neg_neg	40	0	synth with cache (only 1: reflexivity).	0.00949192047119	1
Coq.ZArith.BinInt.Pos2Z.add_pos_neg	40	3	synth with cache (only 1: split).	0.0166239738464	4
Coq.ZArith.BinInt.Pos2Z.add_neg_pos	40	0	synth with cache (only 1: reflexivity).	0.0129008293152	1
Coq.ZArith.BinInt.Pos2Z.add_pos_pos	40	0	synth with cache (only 1: reflexivity).	0.0123171806335	1
Coq.ZArith.BinInt.Pos2Z.divide_pos_neg_r	40
Coq.ZArith.BinInt.Pos2Z.divide_pos_neg_l	40
Coq.ZArith.BinInt.Pos2Z.testbit_neg	40	322.1.0.0.0.3.4	synth with cache (only 1: unfold Z.testbit; only 1: destruct n; only 1: intro Hn; only 1: now destruct a as [| [| | ]| ]; only 1: now destruct 1 || intros _; only 1: trivial; only 1: easy || now destruct 1).	26.5971770287	17702
Coq.ZArith.BinInt.Pos2Z.testbit_pos	40	0	synth with cache (only 1: apply Z.testbit_Zpos).	0.013466835022	1
Coq.ZArith.BinInt.Z2Pos.id	40
Coq.ZArith.BinInt.Z2Pos.inj	40
Coq.ZArith.BinInt.Z2Pos.inj_iff	40
Coq.ZArith.BinInt.Z2Pos.to_pos_nonpos	40
Coq.ZArith.BinInt.Z2Pos.inj_1	40	0.0	synth with cache (only 1: simpl; only 1: now f_equal).	0.019110918045	2
Coq.ZArith.BinInt.Z2Pos.inj_double	40	0.256.2.1.2.0.0.2.328.331.2	synth with cache (only 1: intros H; only 1: cut (1%positive = 1%positive); only 1: N.nzsimpl'; only 1: intros; only 1: destruct x; only 1: simpl; only 1: now rewrite ?Pos.square_xO; only 1: simpl; only 1: now f_equal; only 1: now N.nzsimpl'; only 1: auto with relations).	23.5027620792	82093
Coq.ZArith.BinInt.Z2Pos.inj_succ_double	40	0	synth with cache (only 1: now destruct x).	0.02161693573	1
Coq.ZArith.BinInt.Z2Pos.inj_succ	40
Coq.ZArith.BinInt.Z2Pos.inj_add	40
Coq.ZArith.BinInt.Z2Pos.inj_sub	40
Coq.ZArith.BinInt.Z2Pos.inj_pred	40
Coq.ZArith.BinInt.Z2Pos.inj_mul	40	0.0.0.0	synth with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.116718769073	4
Coq.ZArith.BinInt.Z2Pos.inj_pow	40
Coq.ZArith.BinInt.Z2Pos.inj_pow_pos	40
Coq.ZArith.BinInt.Z2Pos.inj_compare	40	0.2.3.2.0.0.12	synth with cache (only 1: intros H; only 1: destruct x; only 1: intros; only 1: simpl; only 1: easy; only 1: easy || now destruct y; only 1: easy).	27.2399070263	13359
Coq.ZArith.BinInt.Z2Pos.inj_leb	40	0.0.0.0.0	synth with cache (only 1: destruct x; only 1: simpl; only 1: easy; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.0708339214325	5
Coq.ZArith.BinInt.Z2Pos.inj_ltb	40	0.0.0.0	synth with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.0645890235901	4
Coq.ZArith.BinInt.Z2Pos.inj_eqb	40	0.0.0.0	synth with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.205565929413	4
Coq.ZArith.BinInt.Z2Pos.inj_max	40
Coq.ZArith.BinInt.Z2Pos.inj_min	40
Coq.ZArith.BinInt.Z2Pos.inj_sqrt	40	576.0.0.0.0.0.6	synth with cache (only 1: destruct x; only 1: simpl; only 1: now rewrite ?Pos.min_1_r, <- ?Pos2Z.inj_min; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite <- ?PeanoNat.Nat.add_le_mono_l).	0.488507032394	1539
Coq.ZArith.BinInt.Z2Pos.inj_gcd	40	0.0.0.1	synth with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.146067142487	112
Coq.ZArith.BinInt.Zplus_minus_eq	40
Coq.ZArith.BinInt.Zpos_eq	40	0.0	synth with cache (only 1: intros n m H; only 1: now subst).	0.0201489925385	2
Coq.ZArith.BinInt.ZL0	40	0	synth with cache (only 1: trivial).	0.00982689857483	1
Coq.ZArith.BinInt.Zplus_diag_eq_mult_2	40	8	synth with cache (only 1: now Z.nzsimpl').	5.41056585312	1121
Coq.ZArith.BinInt.Z_eq_mult	40	4	synth with cache (only 1: now destruct m).	0.179688930511	74
Coq.ZArith.Zcomplements.floor_gt0	40	1.1	synth with cache (only 1: intros; only 1: reflexivity).	0.0269980430603	4
Coq.ZArith.Zcomplements.floor_ok	40
Coq.ZArith.Zcomplements.Z_lt_abs_rec	40
Coq.ZArith.Zcomplements.Z_lt_abs_induction	40
Coq.ZArith.Zcomplements.Zcase_sign	40
Coq.ZArith.Zcomplements.sqr_pos	40	0.258	synth with cache (only 1: intro m; only 1: now destruct n).	0.0781230926514	20
Coq.ZArith.Zcomplements.Zlength_properties.Zlength_correct	40
Coq.ZArith.Zcomplements.Zlength_properties.Zlength_nil	40	0	synth with cache (only 1: trivial).	0.0167460441589	1
Coq.ZArith.Zcomplements.Zlength_properties.Zlength_cons	40
Coq.ZArith.Zcomplements.Zlength_properties.Zlength_nil_inv	40
Coq.ZArith.Zeven.Zeven_equiv	40
Coq.ZArith.Zeven.Zodd_equiv	40
Coq.ZArith.Zeven.Zeven_bool_iff	40
Coq.ZArith.Zeven.Zodd_bool_iff	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.4	synth with cache (only 1: destruct n; only 1: simpl; only 1: intuition; only 1: destruct p; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: destruct p; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).	5.49188089371	3585
Coq.ZArith.Zeven.Zodd_even_bool	40	67.0.0.0.4.0.0.405	synth with cache (only 1: compute; only 1: destruct n; only 1: trivial; only 1: induction p as [p IHp| p IHp| ]; only 1: trivial; only 1: trivial; only 1: trivial; only 1: now destruct p).	3.54821395874	8004
Coq.ZArith.Zeven.Zeven_odd_bool	40
Coq.ZArith.Zeven.Zeven_odd_dec	40
Coq.ZArith.Zeven.Zeven_dec	40
Coq.ZArith.Zeven.Zodd_dec	40	0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n as [| p| p]; only 1: simpl; only 1: now left || now right; only 1: destruct p; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right; only 1: destruct p; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right).	0.450675964355	293
Coq.ZArith.Zeven.Zeven_not_Zodd	40	0.1.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.391	synth with cache (only 1: repeat red; only 1: destruct n as [| p| p]; only 1: simpl; only 1: intros H H'; only 1: tauto; only 1: destruct p; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intros H H'; only 1: tauto; only 1: destruct p; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intros H H'; only 1: tauto).	10.3256459236	15218
Coq.ZArith.Zeven.Zodd_not_Zeven	40	0.0.0.0.0	synth with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd; only 1: destruct Z.odd; only 1: intuition; only 1: intuition).	0.0709419250488	5
Coq.ZArith.Zeven.Zeven_Sn	40
Coq.ZArith.Zeven.Zodd_Sn	40
Coq.ZArith.Zeven.Zeven_pred	40
Coq.ZArith.Zeven.Zodd_pred	40
Coq.ZArith.Zeven.Zeven_div2	40	0	synth with cache (only 1: now destruct n as [| [| | ]| [| | ]]).	0.0356051921844	1
Coq.ZArith.Zeven.Zodd_div2	40	0.0.449.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros a; only 1: destruct n as [| [| | ]| [| | ]]; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy; only 1: simpl; only 1: now rewrite Pos.pred_double_succ; only 1: simpl; only 1: now try split; only 1: simpl; only 1: easy).	1.54437303543	946
Coq.ZArith.Zeven.Zquot2_odd_eqn	40
Coq.ZArith.Zeven.Zeven_quot2	40	2.0.0.0	synth with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: intros Hn; only 1: now destruct n as [| [| | ]| [| | ]]).	0.342000961304	59
Coq.ZArith.Zeven.Zodd_quot2	40	0.0.2.2.0.0.577.320	synth with cache (only 1: simpl in *; only 1: intro H1; only 1: boolify_even_odd; only 1: intros Hn; only 1: rewrite (Zquot2_odd_eqn n)  at 1; only 1: rewrite (Zquot2_odd_eqn n)  at 1; only 1: simpl; only 1: now destruct n as [| [| | ]| [| | ]]).	4.07944512367	4242
Coq.ZArith.Zeven.Zodd_quot2_neg	40	2.0	synth with cache (only 1: intros Hn Hn'; only 1: now destruct n as [| [p| p| ]| [p| p| ]]).	1.26449513435	283
Coq.ZArith.Zeven.Zquot2_opp	40
Coq.ZArith.Zeven.Zquot2_quot	40
Coq.ZArith.Zeven.Z_modulo_2	40
Coq.ZArith.Zeven.Zsplit2	40
Coq.ZArith.Zeven.Zeven_ex	40	2.0.1	synth with cache (only 1: intros; only 1: exists (Z.div2 n); only 1: now destruct n as [| [| | ]| [| | ]]).	0.391680002213	205
Coq.ZArith.Zeven.Zodd_ex	40	0.0.0.0.1	synth with cache (only 1: boolify_even_odd; only 1: intros Hn; only 1: exists (Z.div2 n); only 1: rewrite (Zdiv2_odd_eqn n)  at 1; only 1: now rewrite Hn).	0.506456851959	269
Coq.ZArith.Zeven.Zeven_2p	40	133.2.459.1	synth with cache (only 1: change 2 with (1 + 1); only 1: repeat red; only 1: simpl; only 1: now destruct p).	15.2853779793	34439
Coq.ZArith.Zeven.Zodd_2p_plus_1	40	66.129.449.0.64.256.6.13.512.9	synth with cache (only 1: simpl; only 1: PeanoNat.Nat.nzsimpl'; only 1: boolify_even_odd; only 1: destruct p; only 1: constructor; only 1: now split; only 1: destruct p; only 1: intuition Pos.Private_Tac.order; only 1: Morphisms.f_equiv; only 1: easy').	23.9201729298	54276
Coq.ZArith.Zeven.Zeven_plus_Zodd	40
Coq.ZArith.Zeven.Zeven_plus_Zeven	40
Coq.ZArith.Zeven.Zodd_plus_Zeven	40	0.0.0.0	synth with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: intros Ha Hb; only 1: now rewrite Z.odd_add, Ha, Hb).	0.0724301338196	4
Coq.ZArith.Zeven.Zodd_plus_Zodd	40	0.0.0.0	synth with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: intros Ha Hb; only 1: now rewrite Z.odd_add, Ha, Hb).	0.0727050304413	4
Coq.ZArith.Zeven.Zeven_mult_Zeven_l	40
Coq.ZArith.Zeven.Zeven_mult_Zeven_r	40
Coq.ZArith.Zeven.Zodd_mult_Zodd	40
Coq.ZArith.Zmisc.iter_nat_of_Z	40
Coq.ZArith.Znumtheory.Zdivide_opp_r	40
Coq.ZArith.Znumtheory.Zdivide_opp_r_rev	40	0	synth with cache (only 1: apply Z.divide_opp_r).	0.0148110389709	1
Coq.ZArith.Znumtheory.Zdivide_opp_l	40
Coq.ZArith.Znumtheory.Zdivide_opp_l_rev	40	0	synth with cache (only 1: apply Z.divide_opp_l).	0.0157239437103	1
Coq.ZArith.Znumtheory.Zdivide_Zabs_l	40
Coq.ZArith.Znumtheory.Zdivide_Zabs_inv_l	40	0	synth with cache (only 1: apply Z.divide_abs_l).	0.0162110328674	1
Coq.ZArith.Znumtheory.Zmult_one	40
Coq.ZArith.Znumtheory.Zdivide_bounds	40
Coq.ZArith.Znumtheory.Zmod_divide	40
Coq.ZArith.Znumtheory.Zdivide_mod	40	0.1.0.580.64	synth with cache (only 1: destruct 1; only 1: firstorder  (subst; auto); only 1: zero_or_not b; only 1: apply Z.mod_mul; only 1: trivial).	3.94726800919	2975
Coq.ZArith.Znumtheory.Zdivide_dec	40
Coq.ZArith.Znumtheory.Z_lt_neq	40	513.65.0.256	synth with cache (only 1: red; only 1: intro H; only 1: apply Z.lt_gt_cases; only 1: N.auto').	0.591067075729	230
Coq.ZArith.Znumtheory.Zdivide_Zdiv_eq	40
Coq.ZArith.Znumtheory.Zdivide_Zdiv_eq_2	40
Coq.ZArith.Znumtheory.Zdivide_le	40
Coq.ZArith.Znumtheory.Zdivide_Zdiv_lt_pos	40
Coq.ZArith.Znumtheory.Zmod_div_mod	40
Coq.ZArith.Znumtheory.Zmod_divide_minus	40
Coq.ZArith.Znumtheory.Zdivide_mod_minus	40
Coq.ZArith.Znumtheory.Zis_gcd_sym	40	256.643	synth with cache (only 1: intros Hz; only 1: firstorder).	1.21025896072	721
Coq.ZArith.Znumtheory.Zis_gcd_0	40	322	synth with cache (only 1: RelationClasses.simpl_relation).	0.178367137909	119
Coq.ZArith.Znumtheory.Zis_gcd_1	40	519	synth with cache (only 1: CRelationClasses.simpl_crelation).	0.940958976746	1002
Coq.ZArith.Znumtheory.Zis_gcd_refl	40	0.0.0.0	synth with cache (only 1: constructor; only 1: auto with zarith; only 1: auto with zarith; only 1: auto with zarith).	0.0289959907532	4
Coq.ZArith.Znumtheory.Zis_gcd_minus	40	0.0.0.0.0	synth with cache (only 1: induction 1; only 1: constructor; only 1: intuition; only 1: intuition; only 1: intuition).	0.0613429546356	5
Coq.ZArith.Znumtheory.Zis_gcd_opp	40	1.0.0.0.259.1	synth with cache (only 1: intros; only 1: inversion H; only 1: constructor; only 1: intuition; only 1: intuition; only 1: intuition).	0.954430103302	1011
Coq.ZArith.Znumtheory.Zis_gcd_0_abs	40
Coq.ZArith.Znumtheory.Zis_gcd_unique	40
Coq.ZArith.Znumtheory.Zis_gcd_for_euclid	40
Coq.ZArith.Znumtheory.Zis_gcd_for_euclid2	40
Coq.ZArith.Znumtheory.extended_euclid_algorithm.euclid_rec	40
Coq.ZArith.Znumtheory.extended_euclid_algorithm.euclid	40
Coq.ZArith.Znumtheory.Zis_gcd_uniqueness_apart_sign	40	0.0.0.0.0.0	synth with cache (only 1: intros a b c d [Hc1 Hc2 Hc3] [Hd1 Hd2 Hd3]; only 1: assert (c | d) by auto; only 1: assert (d | c) by auto; only 1: apply Z.divide_antisym; only 1: auto; only 1: auto).	0.0439050197601	6
Coq.ZArith.Znumtheory.Zis_gcd_bezout	40
Coq.ZArith.Znumtheory.Zis_gcd_mult	40
Coq.ZArith.Znumtheory.rel_prime_bezout	40
Coq.ZArith.Znumtheory.bezout_rel_prime	40
Coq.ZArith.Znumtheory.Gauss	40
Coq.ZArith.Znumtheory.rel_prime_mult	40
Coq.ZArith.Znumtheory.rel_prime_cross_prod	40
Coq.ZArith.Znumtheory.Zis_gcd_rel_prime	40
Coq.ZArith.Znumtheory.rel_prime_sym	40	518	synth with cache (only 1: firstorder).	1.86227607727	1306
Coq.ZArith.Znumtheory.rel_prime_div	40
Coq.ZArith.Znumtheory.rel_prime_1	40	1.0.0.1.1.256.389.0	synth with cache (only 1: intros n; only 1: Z.nzsimpl'; only 1: repeat red; only 1: apply Zis_gcd_intro; only 1: reflexivity; only 1: exists n; only 1: now Z.nzsimpl; only 1: auto with zarith).	2.77102303505	4037
Coq.ZArith.Znumtheory.not_rel_prime_0	40
Coq.ZArith.Znumtheory.rel_prime_mod	40
Coq.ZArith.Znumtheory.rel_prime_mod_rev	40
Coq.ZArith.Znumtheory.Zrel_prime_neq_mod_0	40
Coq.ZArith.Znumtheory.prime_divisors	40
Coq.ZArith.Znumtheory.prime_rel_prime	40
Coq.ZArith.Znumtheory.rel_prime_le_prime	40	514.0.1.1.0.0.3	synth with cache (only 1: intro z; only 1: intros; only 1: constructor; only 1: auto with zarith; only 1: auto with zarith; only 1: intro; only 1: now apply H).	8.35565185547	4227
Coq.ZArith.Znumtheory.prime_mult	40
Coq.ZArith.Znumtheory.not_prime_0	40	259	synth with cache (only 1: firstorder  discriminate).	0.0634269714355	36
Coq.ZArith.Znumtheory.not_prime_1	40	129.66	synth with cache (only 1: intuition; only 1: now destruct H).	0.134727954865	90
Coq.ZArith.Znumtheory.prime_2	40
Coq.ZArith.Znumtheory.prime_3	40
Coq.ZArith.Znumtheory.prime_ge_2	40	0.389	synth with cache (only 1: intros (H, _); only 1: now apply (Zlt_le_succ 1)).	0.415404081345	584
Coq.ZArith.Znumtheory.Z_0_1_more	40
Coq.ZArith.Znumtheory.prime_alt	40
Coq.ZArith.Znumtheory.square_not_prime	40
Coq.ZArith.Znumtheory.prime_div_prime	40
Coq.ZArith.Znumtheory.Zgcd_is_gcd	40
Coq.ZArith.Znumtheory.Zgcd_spec	40
Coq.ZArith.Znumtheory.Zdivide_Zgcd	40	0.645.448	synth with cache (only 1: intro; only 1: intros b Hb; only 1: apply Z.gcd_greatest).	11.6004199982	16450
Coq.ZArith.Znumtheory.Zis_gcd_gcd	40
Coq.ZArith.Znumtheory.Zgcd_div_swap0	40
Coq.ZArith.Znumtheory.Zgcd_div_swap	40
Coq.ZArith.Znumtheory.Zgcd_ass	40
Coq.ZArith.Znumtheory.Zgcd_1_rel_prime	40
Coq.ZArith.Znumtheory.rel_prime_dec	40
Coq.ZArith.Znumtheory.prime_dec_aux	40
Coq.ZArith.Znumtheory.prime_dec	40
Coq.ZArith.Znumtheory.not_prime_divide	40
Coq.ZArith.Zdiv.Z_div_mod_POS	40
Coq.ZArith.Zdiv.Z_div_mod	40
Coq.ZArith.Zdiv.Remainder_equiv	40
Coq.ZArith.Zdiv.Z_div_mod_full	40
Coq.ZArith.Zdiv.Z_mod_remainder	40
Coq.ZArith.Zdiv.Z_div_mod_eq	40
Coq.ZArith.Zdiv.Zmod_eq_full	40
Coq.ZArith.Zdiv.Zmod_eq	40	3.1.1.259.2.0	synth with cache (only 1: intros; only 1: rewrite Z.mul_comm; only 1: destruct b; only 1: now apply Z.mod_eq; only 1: now apply Z.mod_eq; only 1: easy).	3.19713902473	5160
Coq.ZArith.Zdiv.Zdiv_eucl_exist	40
Coq.ZArith.Zdiv.Zdiv_mod_unique	40
Coq.ZArith.Zdiv.Zdiv_unique	40
Coq.ZArith.Zdiv.Zmod_unique	40
Coq.ZArith.Zdiv.Zmod_0_l	40	321.0	synth with cache (only 1: intros; only 1: eauto).	0.0827028751373	18
Coq.ZArith.Zdiv.Zmod_0_r	40	0.0.0.0	synth with cache (only 1: destruct a; only 1: auto; only 1: auto; only 1: auto).	0.0376811027527	4
Coq.ZArith.Zdiv.Zdiv_0_l	40	64.0	synth with cache (only 1: intros; only 1: easy).	0.0242168903351	5
Coq.ZArith.Zdiv.Zdiv_0_r	40	0.0.0.0	synth with cache (only 1: destruct a; only 1: auto; only 1: auto; only 1: auto).	0.0341351032257	4
Coq.ZArith.Zdiv.Zmod_1_r	40	0.512.1.448	synth with cache (only 1: intro RS'; only 1: symmetry; only 1: N.nzsimpl; only 1: Z.order).	0.338090896606	251
Coq.ZArith.Zdiv.Zdiv_1_r	40	192.0	synth with cache (only 1: intros; only 1: now Z.nzsimpl).	0.0843999385834	11
Coq.ZArith.Zdiv.Z_mod_same_full	40
Coq.ZArith.Zdiv.Z_mod_mult	40
Coq.ZArith.Zdiv.Z_div_pos	40
Coq.ZArith.Zdiv.Z_div_ge0	40	0.0.1.4.128.513	synth with cache (only 1: intros a Ha; only 1: intros m Hm; only 1: Z.swap_greater; only 1: apply Z.div_pos; only 1: Z.order; only 1: trivial).	13.2888059616	12312
Coq.ZArith.Zdiv.Z_div_lt	40
Coq.ZArith.Zdiv.Z_div_ge	40
Coq.ZArith.Zdiv.Z_div_le	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply Z.div_le_mono; only 1: auto using Z.gt_lt, Z.ge_le; only 1: auto using Z.gt_lt, Z.ge_le).	0.0384151935577	4
Coq.ZArith.Zdiv.Z_mult_div_ge	40
Coq.ZArith.Zdiv.Z_mult_div_ge_neg	40
Coq.ZArith.Zdiv.Z_div_exact_full_1	40
Coq.ZArith.Zdiv.Z_div_exact_full_2	40	0.0.0.1.640	synth with cache (only 1: intros Hn; only 1: intros a Ha; only 1: rewrite Z.div_exact; only 1: auto; only 1: now Z.nzsimpl).	8.26668787003	3168
Coq.ZArith.Zdiv.Zmod_le	40
Coq.ZArith.Zdiv.Zdiv_lt_upper_bound	40
Coq.ZArith.Zdiv.Zdiv_le_upper_bound	40
Coq.ZArith.Zdiv.Zdiv_le_lower_bound	40
Coq.ZArith.Zdiv.Zdiv_le_compat_l	40
Coq.ZArith.Zdiv.Zdiv_sgn	40
Coq.ZArith.Zdiv.Z_mod_plus_full	40
Coq.ZArith.Zdiv.Zdiv_opp_opp	40
Coq.ZArith.Zdiv.Zmod_opp_opp	40
Coq.ZArith.Zdiv.Z_mod_zero_opp_full	40
Coq.ZArith.Zdiv.Z_mod_nz_opp_full	40
Coq.ZArith.Zdiv.Z_mod_zero_opp_r	40
Coq.ZArith.Zdiv.Z_mod_nz_opp_r	40
Coq.ZArith.Zdiv.Z_div_zero_opp_full	40
Coq.ZArith.Zdiv.Z_div_nz_opp_full	40
Coq.ZArith.Zdiv.Z_div_zero_opp_r	40
Coq.ZArith.Zdiv.Z_div_nz_opp_r	40
Coq.ZArith.Zdiv.Zdiv_mult_cancel_r	40
Coq.ZArith.Zdiv.Zdiv_mult_cancel_l	40
Coq.ZArith.Zdiv.Zmult_mod_distr_l	40
Coq.ZArith.Zdiv.Zmult_mod_distr_r	40
Coq.ZArith.Zdiv.Zmod_mod	40
Coq.ZArith.Zdiv.Zmult_mod	40
Coq.ZArith.Zdiv.Zplus_mod	40
Coq.ZArith.Zdiv.Zminus_mod	40
Coq.ZArith.Zdiv.Zplus_mod_idemp_l	40
Coq.ZArith.Zdiv.Zplus_mod_idemp_r	40	0.0.0	synth with cache (only 1: intros; only 1: rewrite Zplus_mod, Zmod_mod, <- Zplus_mod; only 1: trivial).	0.0313079357147	3
Coq.ZArith.Zdiv.Zminus_mod_idemp_l	40
Coq.ZArith.Zdiv.Zminus_mod_idemp_r	40	0.0.0.388	synth with cache (only 1: intros H; only 1: intros; only 1: rewrite Zminus_mod, Zmod_mod, <- Zminus_mod; only 1: auto).	0.591062068939	988
Coq.ZArith.Zdiv.Zmult_mod_idemp_l	40
Coq.ZArith.Zdiv.Zmult_mod_idemp_r	40	0.0.0	synth with cache (only 1: intros; only 1: rewrite Zmult_mod, Zmod_mod, <- Zmult_mod; only 1: trivial).	0.030277967453	3
Coq.ZArith.Zdiv.EqualityModulo.eqm_refl	40	3	synth with cache (only 1: reflexivity).	0.0409569740295	24
Coq.ZArith.Zdiv.EqualityModulo.eqm_sym	40	448.0	synth with cache (only 1: intros; only 1: now f_equal).	0.13968205452	41
Coq.ZArith.Zdiv.EqualityModulo.eqm_trans	40	518.448.1	synth with cache (only 1: intros n m p; only 1: red; only 1: now intros ->).	20.7295410633	25177
Coq.ZArith.Zdiv.EqualityModulo.eqm_setoid	40	196.194.69.0.6.0	synth with cache (only 1: unfold eqm; only 1: split; only 1: auto; only 1: intros b Hb IH; only 1: intuition Z.Private_Tac.order; only 1: CRelationClasses.simpl_crelation).	14.2786390781	3391
Coq.ZArith.Zdiv.EqualityModulo.Zplus_eqm	40
Coq.ZArith.Zdiv.EqualityModulo.Zminus_eqm	40
Coq.ZArith.Zdiv.EqualityModulo.Zmult_eqm	40
Coq.ZArith.Zdiv.EqualityModulo.Zopp_eqm	40
Coq.ZArith.Zdiv.EqualityModulo.Zmod_eqm	40
Coq.ZArith.Zdiv.Zdiv_Zdiv	40
Coq.ZArith.Zdiv.Zmod_div	40
Coq.ZArith.Zdiv.Zdiv_mult_le	40
Coq.ZArith.Zdiv.Zmod_divides	40
Coq.ZArith.Zdiv.Zmod_odd	40
Coq.ZArith.Zdiv.Zmod_even	40
Coq.ZArith.Zdiv.Zodd_mod	40
Coq.ZArith.Zdiv.Zeven_mod	40
Coq.ZArith.Zdiv.Z_mod_same	40	0.1.2.2	synth with cache (only 1: intros; only 1: zero_or_not a; only 1: apply Z.mod_same; only 1: now Z.nzsimpl).	3.94571614265	699
Coq.ZArith.Zdiv.Z_div_same	40
Coq.ZArith.Zdiv.Z_div_plus	40
Coq.ZArith.Zdiv.Z_div_mult	40
Coq.ZArith.Zdiv.Z_mod_plus	40	1.256.2.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: apply Z.mod_add; only 1: Z.swap_greater; only 1: Z.order).	3.99756598473	2717
Coq.ZArith.Zdiv.Z_div_exact_1	40	0.0.0.0.65.129	synth with cache (only 1: intro EQ; only 1: destruct 1; only 1: zero_or_not b; only 1: rewrite Z.div_exact; only 1: auto; only 1: trivial).	6.77720093727	1973
Coq.ZArith.Zdiv.Z_div_exact_2	40	1.0.0.129	synth with cache (only 1: intros a n H; only 1: rewrite Z.div_exact; only 1: auto; only 1: now intros ->).	0.674915075302	431
Coq.ZArith.Zdiv.Z_mod_zero_opp	40	0.0.1.0.0	synth with cache (only 1: intros a b Hb H; only 1: zero_or_not b; only 1: apply Z.mod_opp_l_z; only 1: Z.order; only 1: auto).	0.161818981171	6
Coq.ZArith.Zdiv.Zmod_POS_correct	40
Coq.ZArith.Zdiv.Zmod'_correct	40
Coq.ZArith.Zdiv.Zdiv_eucl_extended	40
Coq.ZArith.Zdiv.div_Zdiv	40
Coq.ZArith.Zdiv.mod_Zmod	40
Coq.ZArith.Zeuclid.ZEuclid.mod_wd	40	0.0.0	synth with cache (only 1: intros a a' Ha b b' Hb; only 1: Z.bitwise; only 1: now rewrite Ha, Hb).	0.0609500408173	3
Coq.ZArith.Zeuclid.ZEuclid.div_wd	40	0	synth with cache (only 1: congruence).	0.0249860286713	1
Coq.ZArith.Zeuclid.ZEuclid.div_mod	40
Coq.ZArith.Zeuclid.ZEuclid.mod_always_pos	40
Coq.ZArith.Zeuclid.ZEuclid.mod_bound_pos	40
Coq.ZArith.Zabs.Zabs_ind	40	0.704.7.0.2	synth with cache (only 1: intros; only 1: Z.destruct_max n; only 1: Z.swap_greater; only 1: intuition Nat.Private_Tac.order; only 1: auto).	8.01648592949	9988
Coq.ZArith.Zabs.Zabs_intro	40	65.0.64.198.576.1	synth with cache (only 1: intros a b Hb; only 1: intro p; only 1: destruct b; only 1: auto; only 1: auto; only 1: auto with sets).	3.51434516907	6082
Coq.ZArith.Zabs.Zabs_dec	40
Coq.ZArith.Zabs.Zabs_spec	40
Coq.ZArith.Zabs.Zsgn_spec	40
Coq.ZArith.Zabs.Zabs_nat_le	40
Coq.ZArith.Zabs.Zabs_nat_lt	40
Coq.ZArith.Int.MoreInt.eqb_eq	40
Coq.ZArith.Int.MoreInt.eqb_neq	40
Coq.ZArith.Int.MoreInt.ltb_lt	40
Coq.ZArith.Int.MoreInt.ltb_nlt	40
Coq.ZArith.Int.MoreInt.leb_le	40
Coq.ZArith.Int.MoreInt.leb_nle	40
Coq.ZArith.Int.MoreInt.norm_ei_correct	40
Coq.ZArith.Int.MoreInt.norm_ez_correct	40
Coq.ZArith.Int.MoreInt.norm_ep_correct	40
Coq.ZArith.Int.MoreInt.norm_ep_correct2	40
Coq.ZArith.Int.Z_as_Int.gt_le_dec	40
Coq.ZArith.Int.Z_as_Int.ge_lt_dec	40
Coq.ZArith.Int.Z_as_Int.i2z_eq	40	1	synth with cache (only 1: now injection 1 || (intros; now f_equal)).	0.0198941230774	2
Coq.ZArith.Int.Z_as_Int.i2z_0	40	0	synth with cache (only 1: auto with relations).	0.0188889503479	1
Coq.ZArith.Int.Z_as_Int.i2z_1	40	0	synth with cache (only 1: reflexivity).	0.0199930667877	1
Coq.ZArith.Int.Z_as_Int.i2z_2	40	0	synth with cache (only 1: reflexivity).	0.0180730819702	1
Coq.ZArith.Int.Z_as_Int.i2z_3	40	0	synth with cache (only 1: reflexivity).	0.0176539421082	1
Coq.ZArith.Int.Z_as_Int.i2z_add	40	130	synth with cache (only 1: auto with relations).	0.0957860946655	27
Coq.ZArith.Int.Z_as_Int.i2z_opp	40	64	synth with cache (only 1: Morphisms.solve_proper).	0.0205008983612	5
Coq.ZArith.Int.Z_as_Int.i2z_sub	40	0	synth with cache (only 1: reflexivity).	0.0194020271301	1
Coq.ZArith.Int.Z_as_Int.i2z_mul	40	0	synth with cache (only 1: reflexivity).	0.0179240703583	1
Coq.ZArith.Int.Z_as_Int.i2z_max	40	0	synth with cache (only 1: reflexivity).	0.0171790122986	1
Coq.ZArith.Int.Z_as_Int.i2z_eqb	40	0	synth with cache (only 1: trivial).	0.0199348926544	1
Coq.ZArith.Int.Z_as_Int.i2z_leb	40	0	synth with cache (only 1: reflexivity).	0.0173850059509	1
Coq.ZArith.Int.Z_as_Int.i2z_ltb	40	0	synth with cache (only 1: reflexivity).	0.0181300640106	1
Coq.ZArith.Zpower.Zpower_nat_0_r	40	0	synth with cache (only 1: reflexivity).	0.0164411067963	1
Coq.ZArith.Zpower.Zpower_nat_succ_r	40	514.64	synth with cache (only 1: Z.bitwise; only 1: easy || now destruct Hb).	0.45308804512	122
Coq.ZArith.Zpower.Zpower_nat_is_exp	40
Coq.ZArith.Zpower.Zpower_pos_nat	40	6.7	synth with cache (only 1: unfold Pos.to_nat; only 1: apply Pos2Nat.inj_iter).	0.612568855286	1115
Coq.ZArith.Zpower.Zpower_nat_Z	40
Coq.ZArith.Zpower.Zpower_nat_Zpower	40	66.1.0.0.448	synth with cache (only 1: intro m; only 1: induction n; only 1: trivial; only 1: apply Pos2Nat.inj_iter; only 1: easy).	0.550980091095	489
Coq.ZArith.Zpower.Zpower_pos_is_exp	40
Coq.ZArith.Zpower.Zpower_exp	40
Coq.ZArith.Zpower.Powers_of_2.shift_nat_equiv	40	0	synth with cache (only 1: trivial).	0.0211889743805	1
Coq.ZArith.Zpower.Powers_of_2.shift_pos_equiv	40	130.0	synth with cache (only 1: simpl; only 1: now split).	0.028785943985	10
Coq.ZArith.Zpower.Powers_of_2.shift_equiv	40
Coq.ZArith.Zpower.Powers_of_2.two_power_nat_equiv	40
Coq.ZArith.Zpower.Powers_of_2.two_power_pos_equiv	40
Coq.ZArith.Zpower.Powers_of_2.two_p_equiv	40
Coq.ZArith.Zpower.Powers_of_2.two_power_nat_S	40	2.0.0	synth with cache (only 1: induction n; only 1: trivial; only 1: now Z.nzsimpl).	0.331596136093	27
Coq.ZArith.Zpower.Powers_of_2.shift_nat_plus	40
Coq.ZArith.Zpower.Powers_of_2.shift_nat_correct	40
Coq.ZArith.Zpower.Powers_of_2.two_power_nat_correct	40	67.2.0.322.576.68.0.580	synth with cache (only 1: Nat.cases n; only 1: trivial; only 1: N.nzsimpl'; only 1: compute; only 1: Nat.induct n; only 1: trivial; only 1: intros; only 1: now destruct H).	9.47479391098	15003
Coq.ZArith.Zpower.Powers_of_2.shift_pos_nat	40
Coq.ZArith.Zpower.Powers_of_2.two_power_pos_nat	40
Coq.ZArith.Zpower.Powers_of_2.shift_pos_correct	40
Coq.ZArith.Zpower.Powers_of_2.two_power_pos_correct	40	7	synth with cache (only 1: apply two_power_pos_equiv).	4.98675704002	4850
Coq.ZArith.Zpower.Powers_of_2.two_power_pos_is_exp	40
Coq.ZArith.Zpower.Powers_of_2.two_p_is_exp	40
Coq.ZArith.Zpower.Powers_of_2.two_p_gt_ZERO	40	78.1	synth with cache (only 1: intros; only 1: now destruct x).	5.73985481262	11800
Coq.ZArith.Zpower.Powers_of_2.two_p_S	40
Coq.ZArith.Zpower.Powers_of_2.two_p_pred	40
Coq.ZArith.Zpower.power_div_with_rest.Zdiv_rest_correct1	40
Coq.ZArith.Zpower.power_div_with_rest.Zdiv_rest_correct2	40
Coq.ZArith.Zpower.power_div_with_rest.Zdiv_rest_correct	40
Coq.ZArith.Zpower.power_div_with_rest.Zdiv_rest_ok	40
Coq.ZArith.Zpower.power_div_with_rest.Zdiv_rest_shiftr	40
Coq.ZArith.Zwf.wf_proof.Zwf_well_founded	40
Coq.ZArith.Zwf.wf_proof_up.Zwf_up_well_founded	40
Coq.ZArith.auxiliary.Zne_left	40
Coq.ZArith.auxiliary.Zegal_left	40	1	synth with cache (only 1: now rewrite <- Z.sub_move_0_r).	0.0293748378754	2
Coq.ZArith.auxiliary.Zle_left	40	0	synth with cache (only 1: apply Z.le_0_sub).	0.0190649032593	1
Coq.ZArith.auxiliary.Zle_left_rev	40	0	synth with cache (only 1: apply Z.le_0_sub).	0.0230309963226	1
Coq.ZArith.auxiliary.Zlt_left_rev	40	1	synth with cache (only 1: apply Z.lt_0_sub).	0.0212259292603	2
Coq.ZArith.auxiliary.Zlt_left_lt	40	0	synth with cache (only 1: apply Z.lt_0_sub).	0.0206718444824	1
Coq.ZArith.auxiliary.Zlt_left	40
Coq.ZArith.auxiliary.Zge_left	40	0.6.193.2	synth with cache (only 1: intros; only 1: Z.swap_greater; only 1: apply Z.le_0_sub; only 1: now rewrite <- ?Z.succ_le_mono).	3.62443804741	5445
Coq.ZArith.auxiliary.Zgt_left	40	0.0.0.0.1	synth with cache (only 1: Z.swap_greater; only 1: intros; only 1: rewrite Z.add_shuffle0; only 1: change (-1) with (- Z.succ 0); only 1: now apply Z.le_0_sub, Z.le_succ_l, Z.lt_0_sub).	1.90165305138	1113
Coq.ZArith.auxiliary.Zgt_left_gt	40	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.lt_0_sub).	0.0467522144318	2
Coq.ZArith.auxiliary.Zgt_left_rev	40	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.lt_0_sub).	0.0502619743347	2
Coq.ZArith.auxiliary.Zle_mult_approx	40	261.768.193.0	synth with cache (only 1: Z.swap_greater; only 1: red; only 1: intros x x' Hx; only 1: Z.order_pos').	18.9542870522	4724
Coq.ZArith.auxiliary.Zmult_le_approx	40
Coq.ZArith.Zmax.Zmax_spec	40
Coq.ZArith.Zmax.Zmax_left	40	0.514.0	synth with cache (only 1: unfold Z.le, Z.max; only 1: firstorder; only 1: now case Z.compare_spec).	0.375925064087	208
Coq.ZArith.Zmax.Zpos_max_1	40	1.66.66.9	synth with cache (only 1: induction p; only 1: intuition; only 1: reflexivity; only 1: now Z.nzsimpl').	1.39381694794	1677
Coq.ZArith.Zmin.Zmin_spec	40
Coq.ZArith.Zmin.Zmin_irreducible	40	68	synth with cache (only 1: Z.solve_min).	0.226594924927	46
Coq.ZArith.Zmin.Zmin_le_prime_inf	40
Coq.ZArith.Zmin.Zpos_min_1	40	0.0.0.266	synth with cache (only 1: induction p as [p IHp| p IHp| ]; only 1: now Z.nzsimpl; only 1: now Z.nzsimpl; only 1: now Z.nzsimpl').	6.39675593376	8546
Coq.ZArith.Zgcd_alt.Zgcdn_pos	40
Coq.ZArith.Zgcd_alt.Zgcd_alt_pos	40
Coq.ZArith.Zgcd_alt.Zgcdn_linear_bound	40
Coq.ZArith.Zgcd_alt.fibonacci_pos	40
Coq.ZArith.Zgcd_alt.fibonacci_incr	40
Coq.ZArith.Zgcd_alt.Zgcdn_worst_is_fibonacci	40
Coq.ZArith.Zgcd_alt.Zgcdn_ok_before_fibonacci	40
Coq.ZArith.Zgcd_alt.Zgcd_bound_fibonacci	40
Coq.ZArith.Zgcd_alt.Zgcd_bound_opp	40	130	synth with cache (only 1: now destruct a as [| [| | ]| ]).	0.0235660076141	11
Coq.ZArith.Zgcd_alt.Zgcdn_opp	40
Coq.ZArith.Zgcd_alt.Zgcdn_is_gcd_pos	40
Coq.ZArith.Zgcd_alt.Zgcdn_is_gcd	40
Coq.ZArith.Zgcd_alt.Zgcd_is_gcd	40
Coq.ZArith.Zorder.Ztrichotomy_inf	40
Coq.ZArith.Zorder.Ztrichotomy	40	2.0.0.0.1.1.0.0.0	synth with cache (only 1: unfold Z.gt, Z.lt; only 1: generalize (Z.compare_eq n m); only 1: destruct (n ?= m); only 1: right; only 1: left; only 1: auto; only 1: left; only 1: auto; only 1: now intuition).	6.0762219429	4321
Coq.ZArith.Zorder.dec_Zne	40
Coq.ZArith.Zorder.dec_Zgt	40
Coq.ZArith.Zorder.dec_Zge	40
Coq.ZArith.Zorder.not_Zeq	40
Coq.ZArith.Zorder.Zle_not_lt	40	321	synth with cache (only 1: Z.order_pos).	0.275451898575	93
Coq.ZArith.Zorder.Zlt_not_le	40	0.64	synth with cache (only 1: intros Hb; only 1: Z.order).	0.233306884766	40
Coq.ZArith.Zorder.Zle_not_gt	40	0.0.448	synth with cache (only 1: repeat red; only 1: Z.swap_greater; only 1: apply Z.le_ngt).	0.0618929862976	43
Coq.ZArith.Zorder.Zgt_not_le	40	64	synth with cache (only 1: now rewrite <- ?Z.succ_le_mono).	0.0658750534058	5
Coq.ZArith.Zorder.Znot_ge_lt	40	9.320.577.0.577.0.0.448.132	synth with cache (only 1: destruct (Z.lt_decidable m n); only 1: destruct 1; only 1: Z.swap_greater; only 1: Z.order; only 1: repeat red; only 1: Z.swap_greater; only 1: intro; only 1: intuition; only 1: Z.order_pos).	35.7292461395	39517
Coq.ZArith.Zorder.Znot_lt_ge	40	1.65.0	synth with cache (only 1: Z.swap_greater; only 1: intro H; only 1: Z.order).	0.0442750453949	8
Coq.ZArith.Zorder.Znot_gt_le	40	66	synth with cache (only 1: easy').	0.0585548877716	29
Coq.ZArith.Zorder.Znot_le_gt	40	0.2	synth with cache (only 1: Z.swap_greater; only 1: apply Z.nle_gt).	0.035364151001	4
Coq.ZArith.Zorder.not_Zne	40	0.4.1.448.0.6.194.65	synth with cache (only 1: intros H; only 1: intuition; only 1: destruct (Z.eq_decidable n m); only 1: auto; only 1: induction n; only 1: now Z.nzsimpl; only 1: tauto; only 1: easy).	3.21090698242	7799
Coq.ZArith.Zorder.Zgt_asym	40	65.1	synth with cache (only 1: Z.swap_greater; only 1: Z.order).	0.179577112198	41
Coq.ZArith.Zorder.Zgt_irrefl	40	196	synth with cache (only 1: easy).	0.291016101837	341
Coq.ZArith.Zorder.Zle_lt_or_eq	40
Coq.ZArith.Zorder.Zgt_trans	40	0.1.0	synth with cache (only 1: Z.swap_greater; only 1: intros; only 1: now transitivity m).	0.139608860016	49
Coq.ZArith.Zorder.Zle_gt_trans	40	1.0.68	synth with cache (only 1: intro LE; only 1: Z.swap_greater; only 1: Z.order).	0.71287894249	384
Coq.ZArith.Zorder.Zgt_le_trans	40	0.0	synth with cache (only 1: Z.swap_greater; only 1: Z.order).	0.0463781356812	2
Coq.ZArith.Zorder.Zge_trans	40	1.3	synth with cache (only 1: Z.swap_greater; only 1: Z.order).	1.26692295074	1082
Coq.ZArith.Zorder.Zsucc_le_compat	40
Coq.ZArith.Zorder.Zsucc_lt_compat	40
Coq.ZArith.Zorder.Zsucc_gt_compat	40
Coq.ZArith.Zorder.Zsucc_gt_reg	40	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.succ_lt_mono).	0.0424151420593	2
Coq.ZArith.Zorder.Zsucc_le_reg	40	0	synth with cache (only 1: apply Z.succ_le_mono).	0.0201420783997	1
Coq.ZArith.Zorder.Zsucc_lt_reg	40	0	synth with cache (only 1: apply Z.succ_lt_mono).	0.0176520347595	1
Coq.ZArith.Zorder.Zgt_succ	40	0.0.459	synth with cache (only 1: CRelationClasses.simpl_crelation; only 1: apply Z.lt_gt; only 1: apply Z.lt_succ_diag_r).	1.14493107796	1014
Coq.ZArith.Zorder.Znot_le_succ	40	0.0.135.6.129	synth with cache (only 1: intros H; only 1: apply H; only 1: reflexivity || destruct H; only 1: apply Z.lt_gt; only 1: apply Z.lt_succ_diag_r).	6.15262889862	13516
Coq.ZArith.Zorder.Zgt_le_succ	40
Coq.ZArith.Zorder.Zle_gt_succ	40	128.67.710.1	synth with cache (only 1: Z.swap_greater; only 1: firstorder; only 1: apply Z.le_succ_l; only 1: intuition).	3.60613799095	5747
Coq.ZArith.Zorder.Zle_lt_succ	40	0	synth with cache (only 1: apply Z.lt_succ_r).	0.0212409496307	1
Coq.ZArith.Zorder.Zlt_le_succ	40	0	synth with cache (only 1: apply Z.le_succ_l).	0.0199971199036	1
Coq.ZArith.Zorder.Zgt_succ_le	40	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.lt_succ_r).	0.0397689342499	2
Coq.ZArith.Zorder.Zlt_succ_le	40	0	synth with cache (only 1: apply Z.lt_succ_r).	0.0221400260925	1
Coq.ZArith.Zorder.Zle_succ_gt	40	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.le_succ_l).	0.0395731925964	2
Coq.ZArith.Zorder.Zle_succ_le	40
Coq.ZArith.Zorder.Zgt_succ_pred	40
Coq.ZArith.Zorder.Zlt_succ_pred	40	0	synth with cache (only 1: apply Z.lt_succ_lt_pred).	0.020387172699	1
Coq.ZArith.Zorder.Zlt_0_le_0_pred	40	128.4.65.128	synth with cache (only 1: intros Az RS; only 1: eapply Pos.Private_Tac.lt_irrefl; only 1: constructor; only 1: now destruct n as [| [| | ]| [| | ]]).	14.1630830765	4709
Coq.ZArith.Zorder.Zgt_0_le_0_pred	40	0.3	synth with cache (only 1: Z.swap_greater; only 1: apply Z.lt_le_pred).	0.174618005753	180
Coq.ZArith.Zorder.Zle_neg_pos	40	0.2	synth with cache (only 1: intros a b; only 1: easy).	0.0350458621979	4
Coq.ZArith.Zorder.Zgt_pos_0	40	0.0	synth with cache (only 1: intro n; only 1: reflexivity).	0.0304419994354	2
Coq.ZArith.Zorder.Zle_0_pos	40	0	synth with cache (only 1: easy).	0.031289100647	1
Coq.ZArith.Zorder.Zlt_neg_0	40	0.0	synth with cache (only 1: intros; only 1: reflexivity).	0.0278170108795	2
Coq.ZArith.Zorder.Zle_0_nat	40	192.0.0.324.0.197	synth with cache (only 1: red; only 1: intros; only 1: destruct n; only 1: simpl; only 1: discriminate; only 1: now try split).	3.73058700562	8868
Coq.ZArith.Zorder.Zgt_succ_gt_or_eq	40
Coq.ZArith.Zorder.Zplus_gt_compat_l	40
Coq.ZArith.Zorder.Zplus_gt_compat_r	40
Coq.ZArith.Zorder.Zplus_le_compat_l	40
Coq.ZArith.Zorder.Zplus_le_compat_r	40
Coq.ZArith.Zorder.Zplus_lt_compat_l	40	0	synth with cache (only 1: apply Z.add_lt_mono_l).	0.0262758731842	1
Coq.ZArith.Zorder.Zplus_lt_compat_r	40	1	synth with cache (only 1: apply Z.add_lt_mono_r).	0.0231368541718	2
Coq.ZArith.Zorder.Zplus_le_reg_l	40	1	synth with cache (only 1: apply Z.add_le_mono_l).	0.0288579463959	2
Coq.ZArith.Zorder.Zplus_le_reg_r	40	1	synth with cache (only 1: apply Z.add_le_mono_r).	0.029993057251	2
Coq.ZArith.Zorder.Zplus_lt_reg_l	40	2	synth with cache (only 1: apply Z.add_lt_mono_l).	0.0292448997498	3
Coq.ZArith.Zorder.Zplus_lt_reg_r	40	3	synth with cache (only 1: apply Z.add_lt_mono_r).	0.031368970871	4
Coq.ZArith.Zorder.Zplus_gt_reg_l	40	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.add_lt_mono_l).	0.0488629341125	2
Coq.ZArith.Zorder.Zplus_gt_reg_r	40	1.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.add_lt_mono_r).	0.40903711319	3
Coq.ZArith.Zorder.Zmult_le_compat_r	40
Coq.ZArith.Zorder.Zmult_le_compat_l	40
Coq.ZArith.Zorder.Zmult_lt_compat_r	40
Coq.ZArith.Zorder.Zmult_gt_compat_r	40	0.2	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).	0.118094921112	24
Coq.ZArith.Zorder.Zmult_gt_0_lt_compat_r	40	0.1	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).	0.0338799953461	3
Coq.ZArith.Zorder.Zmult_gt_0_le_compat_r	40
Coq.ZArith.Zorder.Zmult_lt_0_le_compat_r	40	0	synth with cache (only 1: apply Z.mul_le_mono_pos_r).	0.0182769298553	1
Coq.ZArith.Zorder.Zmult_gt_0_lt_compat_l	40
Coq.ZArith.Zorder.Zmult_lt_compat_l	40	0	synth with cache (only 1: apply Z.mul_lt_mono_pos_l).	0.0180649757385	1
Coq.ZArith.Zorder.Zmult_gt_compat_l	40	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_l).	0.0491759777069	2
Coq.ZArith.Zorder.Zmult_ge_compat_r	40
Coq.ZArith.Zorder.Zmult_ge_compat_l	40	5.0.0	synth with cache (only 1: Z.swap_greater; only 1: intros; only 1: now apply Z.mul_le_mono_nonneg_l).	6.7461400032	5047
Coq.ZArith.Zorder.Zmult_ge_compat	40
Coq.ZArith.Zorder.Zmult_le_compat	40	2.577.64.323	synth with cache (only 1: intros H H'; only 1: unfold Z.le; only 1: firstorder; only 1: now apply Z.mul_le_mono_nonneg).	2.42927598953	2601
Coq.ZArith.Zorder.Zmult_gt_0_lt_reg_r	40	1.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).	0.0366630554199	3
Coq.ZArith.Zorder.Zmult_lt_reg_r	40	0	synth with cache (only 1: apply Z.mul_lt_mono_pos_r).	0.0211420059204	1
Coq.ZArith.Zorder.Zmult_le_reg_r	40	1.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_le_mono_pos_r).	0.0360579490662	3
Coq.ZArith.Zorder.Zmult_lt_0_le_reg_r	40	0	synth with cache (only 1: apply Z.mul_le_mono_pos_r).	0.0202910900116	1
Coq.ZArith.Zorder.Zmult_ge_reg_r	40	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_le_mono_pos_r).	0.0516028404236	2
Coq.ZArith.Zorder.Zmult_gt_reg_r	40	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).	0.0545709133148	2
Coq.ZArith.Zorder.Zmult_lt_compat	40
Coq.ZArith.Zorder.Zmult_lt_compat2	40
Coq.ZArith.Zorder.Zmult_gt_0_compat	40	1.2.3.0.192	synth with cache (only 1: destruct n; only 1: easy || now destruct y; only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_l; only 1: easy).	1.82072401047	2606
Coq.ZArith.Zorder.Zmult_gt_0_le_0_compat	40	2.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_le_mono_pos_r).	0.0323169231415	4
Coq.ZArith.Zorder.Zmult_le_0_reg_r	40	0.0.0.1.1.0.0.2.2.323.0.0	synth with cache (only 1: Z.swap_greater; only 1: intros; only 1: destruct n, m; only 1: auto; only 1: destr_eq H; only 1: easy; only 1: auto; only 1: easy; only 1: easy; only 1: auto; only 1: destr_eq H; only 1: destr_eq H).	7.98847389221	9455
Coq.ZArith.Zorder.Zmult_lt_0_reg_r	40	0.0.0.0.0.2.0.0.1.1.0.69	synth with cache (only 1: destruct n as [| n| n], m as [| m| m]; only 1: easy || now destruct y; only 1: intros a Ha; only 1: Z.order'; only 1: Z.order; only 1: apply Z.mul_lt_mono_pos_l; only 1: simpl; only 1: reflexivity; only 1: easy || now destruct y; only 1: apply Z.mul_lt_mono_pos_r; only 1: apply Z.mul_pos_pos; only 1: easy).	7.12990999222	10228
Coq.ZArith.Zorder.Zmult_gt_0_lt_0_reg_r	40	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_pos_cancel_r).	0.0325520038605	2
Coq.ZArith.Zorder.Zmult_gt_0_reg_l	40
Coq.ZArith.Zorder.Zlt_square_simpl	40
Coq.ZArith.Zorder.Zgt_square_simpl	40	0.1	synth with cache (only 1: Z.swap_greater; only 1: apply Z.square_lt_simpl_nonneg).	0.0481050014496	3
Coq.ZArith.Zorder.Zeq_plus_swap	40
Coq.ZArith.Zorder.Zlt_0_minus_lt	40
Coq.ZArith.Zorder.Zle_0_minus_le	40
Coq.ZArith.Zorder.Zle_minus_le_0	40	0	synth with cache (only 1: apply Z.le_0_sub).	0.0192270278931	1
Coq.ZArith.Zbool.Zle_cases	40
Coq.ZArith.Zbool.Zlt_cases	40
Coq.ZArith.Zbool.Zge_cases	40
Coq.ZArith.Zbool.Zgt_cases	40
Coq.ZArith.Zbool.Zle_bool_imp_le	40
Coq.ZArith.Zbool.Zle_imp_le_bool	40	0.0.4.0	synth with cache (only 1: unfold Z.le, Z.min; only 1: intuition; only 1: apply Z.leb_le; only 1: auto with arith).	0.599705934525	784
Coq.ZArith.Zbool.Zle_bool_antisym	40
Coq.ZArith.Zbool.Zle_bool_trans	40
Coq.ZArith.Zbool.Zle_bool_total	40
Coq.ZArith.Zbool.Zle_bool_plus_mono	40
Coq.ZArith.Zbool.Zone_pos	40	194	synth with cache (only 1: eauto).	0.0213708877563	15
Coq.ZArith.Zbool.Zone_min_pos	40	129.128.641.0.128.0.1.131.384.0.512.66	synth with cache (only 1: intuition; only 1: PeanoNat.Nat.nzsimpl'; only 1: apply Z.leb_gt in H; only 1: generalize H; only 1: intros a0; only 1: apply Z.leb_gt in H; only 1: apply Z.leb_le; only 1: destruct a0; only 1: apply Z.leb_gt in H; only 1: Bool.destr_bool; only 1: intros NEQ; only 1: now destruct n as [| [p| p| ]| [p| p| ]]).	17.9114408493	12368
Coq.ZArith.Zbool.Zle_is_le_bool	40	0.0.136.64	synth with cache (only 1: unfold Z.le, Z.min; only 1: constructor; only 1: apply Z.leb_le; only 1: apply Z.leb_le).	4.85796809196	4503
Coq.ZArith.Zbool.Zge_is_le_bool	40
Coq.ZArith.Zbool.Zlt_is_lt_bool	40
Coq.ZArith.Zbool.Zgt_is_gt_bool	40
Coq.ZArith.Zbool.Zlt_is_le_bool	40
Coq.ZArith.Zbool.Zgt_is_le_bool	40	0.0.0	synth with cache (only 1: rewrite Z.leb_le; only 1: Z.swap_greater; only 1: apply Z.lt_le_pred).	0.0389499664307	3
Coq.ZArith.Zbool.Zeq_is_eq_bool	40
Coq.ZArith.Zbool.Zeq_bool_eq	40
Coq.ZArith.Zbool.Zeq_bool_neq	40
Coq.ZArith.Zbool.Zeq_bool_if	40
Coq.ZArith.ZArith_dec.Dcompare_inf	40	0.0.0.2	synth with cache (only 1: destruct r; only 1: auto; only 1: auto; only 1: auto).	0.263523101807	165
Coq.ZArith.ZArith_dec.Zcompare_rect	40
Coq.ZArith.ZArith_dec.Zcompare_rec	40	0.0.0.0.0	synth with cache (only 1: intros H1 H2 H3; only 1: destruct (n ?= m); only 1: auto; only 1: auto; only 1: auto).	0.0387060642242	5
Coq.ZArith.ZArith_dec.decidability.Z_lt_dec	40
Coq.ZArith.ZArith_dec.decidability.Z_le_dec	40
Coq.ZArith.ZArith_dec.decidability.Z_gt_dec	40
Coq.ZArith.ZArith_dec.decidability.Z_ge_dec	40
Coq.ZArith.ZArith_dec.decidability.Z_lt_ge_dec	40	0.0.0.0.3.23	synth with cache (only 1: unfold Z.lt, Z.le; only 1: unfold Z.ge; only 1: case Z.compare; only 1: now left || now right; only 1: now left || now right; only 1: now left || now right).	33.5339820385	88353
Coq.ZArith.ZArith_dec.decidability.Z_lt_le_dec	40
Coq.ZArith.ZArith_dec.decidability.Z_le_gt_dec	40	0.0.0.0.3.68	synth with cache (only 1: unfold Z.le, Z.max; only 1: unfold Z.gt; only 1: case Z.compare; only 1: now left || now right; only 1: now left || now right; only 1: now left || now right).	2.9921939373	4387
Coq.ZArith.ZArith_dec.decidability.Z_gt_le_dec	40	1.0.2.0.0	synth with cache (only 1: elim Z_le_dec; only 1: auto with arith; only 1: constructor; only 1: Z.swap_greater; only 1: now apply Z.nle_gt).	0.682422161102	887
Coq.ZArith.ZArith_dec.decidability.Z_ge_lt_dec	40	1.1.2.1	synth with cache (only 1: elim Z_lt_ge_dec; only 1: auto with arith; only 1: constructor; only 1: trivial).	0.588536024094	390
Coq.ZArith.ZArith_dec.decidability.Z_le_lt_eq_dec	40
Coq.ZArith.ZArith_dec.Zlt_cotrans	40
Coq.ZArith.ZArith_dec.Zlt_cotrans_pos	40
Coq.ZArith.ZArith_dec.Zlt_cotrans_neg	40
Coq.ZArith.ZArith_dec.not_Zeq_inf	40
Coq.ZArith.ZArith_dec.Z_dec	40	3.0.0.0.0.1.0.0.0.1	synth with cache (only 1: intros; only 1: unfold Z.gt, Z.lt; only 1: generalize (Z.compare_eq n m); only 1: destruct (n ?= m); only 1: right; only 1: auto; only 1: left; only 1: left; only 1: auto; only 1: now intuition).	2.96724295616	3592
Coq.ZArith.ZArith_dec.Z_dec'	40
Coq.ZArith.ZArith_dec.Z_zerop	40	0.0.0.3	synth with cache (only 1: intro; only 1: decide equality; only 1: apply Pos.eq_dec; only 1: apply Pos.eq_dec).	0.357042074203	278
Coq.ZArith.Zpow_alt.Piter_mul_acc	40
Coq.ZArith.Zpow_alt.Piter_op_square	40
Coq.ZArith.Zpow_alt.Zpower_equiv	40
Coq.ZArith.Zpow_alt.Zpower_alt_0_r	40	0	synth with cache (only 1: reflexivity).	0.0159070491791	1
Coq.ZArith.Zpow_alt.Zpower_alt_succ_r	40
Coq.ZArith.Zpow_alt.Zpower_alt_neg_r	40	1.0.0.0.1.1.1.0.128.128.256.0.79	synth with cache (only 1: Z.pos_or_neg b; only 1: intros Hab; only 1: compute; only 1: Z.Private_Tac.order; only 1: unfold Z.lt in *; only 1: simpl in *; only 1: destruct b as [| p| p]; only 1: easy; only 1: unfold Zpower_alt, Z.pow, Z.pow_pos; only 1: simpl; only 1: congruence; only 1: intros H; only 1: trivial).	16.4271178246	14320
Coq.ZArith.Zpow_alt.Zpower_alt_Ppow	40
Coq.Program.Wf.Well_founded.Fix_F_eq	40	0.0	synth with cache (only 1: destruct r using Acc_inv_dep; only 1: auto).	0.023176908493	2
Coq.Program.Wf.Well_founded.Fix_F_inv	40	0.129.1.0.5.4.4.2.2.1	synth with cache (only 1: intro x; only 1: induction (Rwf x); only 1: induction (Rwf x); only 1: intros; only 1: rewrite <- Wf.Fix_F_eq; only 1: rewrite <- Wf.Fix_F_eq; only 1: destruct r using Acc_inv_dep; only 1: apply F_ext; only 1: intros [? ?]; only 1: auto).	20.8461239338	47944
Coq.Program.Wf.Well_founded.Fix_eq	40
Coq.Program.Wf.Well_founded.fix_sub_eq	40	0.0.0.0.0.0	synth with cache (only 1: intro x; only 1: unfold Fix_sub; only 1: rewrite <- Fix_F_eq; only 1: apply F_ext; only 1: intros; only 1: apply Fix_F_inv).	0.0461578369141	6
Coq.Program.Wf.Measure_well_founded.measure_wf	40
Coq.Program.Wf.Fix_rects.F_unfold	40	0.1	synth with cache (only 1: rewrite <- Fix_F_eq; only 1: auto).	0.0231399536133	3
Coq.Program.Wf.Fix_rects.Fix_F_sub_rect	40	0.6.8.1	synth with cache (only 1: intros; only 1: induction (Rwf x); only 1: rewrite <- Init.Wf.Fix_F_eq; only 1: auto).	1.77627205849	3698
Coq.Program.Wf.Fix_rects.eq_Fix_F_sub	40	5.0	synth with cache (only 1: apply Fix_F_inv; only 1: auto).	0.175393819809	146
Coq.Program.Wf.Fix_rects.Fix_sub_rect	40
Coq.Program.Wf.WfExtensionality.fix_sub_eq_ext	40
Coq.Program.Subset.subset_eq	40
Coq.Program.Subset.match_eq_rewrite	40	129.65.137.3.131.192	synth with cache (only 1: intros eq_rect_eq; only 1: intros n m; only 1: intro; only 1: intros [HypL HypR]; only 1: subst; only 1: repeat split).	4.67379498482	18446
Coq.Program.Equality.JMeq_eq_refl	40	2	synth with cache (only 1: apply UIP).	0.00978207588196	3
Coq.Program.Equality.UIP_refl_refl	40	24	synth with cache (only 1: apply UIP).	0.711719036102	2557
Coq.Program.Equality.inj_pairT2_refl	40	4	synth with cache (only 1: apply UIP).	0.0147140026093	17
Coq.Program.Equality.solution_left	40	2.66.3	synth with cache (only 1: intro eq_rect_eq; only 1: inversion 1; only 1: trivial).	0.110146045685	158
Coq.Program.Equality.solution_right	40	2.0.0	synth with cache (only 1: intros; only 1: subst; only 1: assumption).	0.016891002655	5
Coq.Program.Equality.deletion	40	1.1	synth with cache (only 1: intros; only 1: trivial).	0.0145101547241	4
Coq.Program.Equality.simplification_heq	40	0.2.4.3	synth with cache (only 1: intros H H'; only 1: subst; only 1: apply H; only 1: trivial).	0.254633903503	499
Coq.Program.Equality.simplification_existT2	40	0.0.0.5.1	synth with cache (only 1: intros H J; only 1: apply H; only 1: apply eq_dep_eq; only 1: apply eq_sigT_eq_dep; only 1: assumption).	0.275527954102	546
Coq.Program.Equality.simplification_existT1	40
Coq.Program.Equality.simplification_K	40	0.0.0	synth with cache (only 1: intros; only 1: rewrite UIP_refl; only 1: assumption).	0.0197439193726	3
Coq.Program.Combinators.compose_id_left	40	1	synth with cache (only 1: auto).	0.0113930702209	2
Coq.Program.Combinators.compose_id_right	40	0.0	synth with cache (only 1: intros; only 1: reflexivity).	0.0137920379639	2
Coq.Program.Combinators.compose_assoc	40	0.0.4	synth with cache (only 1: intros A B C Hl Hr; only 1: intros H ?; only 1: reflexivity).	0.0632781982422	85
Coq.Program.Combinators.flip_flip	40	0	synth with cache (only 1: reflexivity).	0.0108480453491	1
Coq.Program.Combinators.prod_uncurry_curry	40	0.0	synth with cache (only 1: intros; only 1: reflexivity).	0.015007019043	2
Coq.Program.Combinators.prod_curry_uncurry	40
Coq.Sorting.PermutEq.Perm.multiplicity_In	40
Coq.Sorting.PermutEq.Perm.multiplicity_In_O	40
Coq.Sorting.PermutEq.Perm.multiplicity_In_S	40	0.0.0.0.0.0	synth with cache (only 1: intros l a; only 1: intro H; only 1: eapply In_InA, multiplicity_InA in H; only 1: eauto with typeclass_instances; only 1: eauto with typeclass_instances; only 1: eauto with typeclass_instances).	0.0578758716583	6
Coq.Sorting.PermutEq.Perm.multiplicity_NoDup	40
Coq.Sorting.PermutEq.Perm.NoDup_permut	40
Coq.Sorting.PermutEq.Perm.permut_In_In	40	576.2.0.705.192.5	synth with cache (only 1: intros H; only 1: intros H0; only 1: intros m; only 1: do 2 rewrite multiplicity_In; only 1: intros; only 1: congruence).	8.20723485947	11441
Coq.Sorting.PermutEq.Perm.permut_cons_In	40
Coq.Sorting.PermutEq.Perm.permut_nil	40	193.0.0.0.67.1.1.5	synth with cache (only 1: induction l as [| x l]; only 1: trivial; only 1: intros H; only 1: compute in H; only 1: specialize (H x); only 1: destruct eq_dec as [_| NEQ]; only 1: discriminate; only 1: simpl_relation).	1.96268892288	3237
Coq.Sorting.PermutEq.Perm.permutation_Permutation	40
Coq.Sorting.PermutEq.Perm.permut_length_1	40
Coq.Sorting.PermutEq.Perm.permut_length_2	40
Coq.Sorting.PermutEq.Perm.permut_length	40
Coq.Sorting.PermutEq.Perm.permutation_map	40
Coq.Sorting.Mergesort.Sort.Sorted_merge	40
Coq.Sorting.Mergesort.Sort.Permuted_merge	40
Coq.Sorting.Mergesort.Sort.Sorted_merge_list_to_stack	40
Coq.Sorting.Mergesort.Sort.Permuted_merge_list_to_stack	40
Coq.Sorting.Mergesort.Sort.Sorted_merge_stack	40	64.2.64.1.0.0.448.0.1.0	synth with cache (only 1: induction stack as [| [| ]]; only 1: simpl; only 1: constructor; only 1: Bool.destr_bool; only 1: apply Sorted_merge; only 1: destruct H; only 1: auto; only 1: destruct H as [H2 H3]; only 1: auto; only 1: eauto using Add_head).	1.51870703697	1942
Coq.Sorting.Mergesort.Sort.Permuted_merge_stack	40
Coq.Sorting.Mergesort.Sort.Sorted_iter_merge	40
Coq.Sorting.Mergesort.Sort.Permuted_iter_merge	40
Coq.Sorting.Mergesort.Sort.Sorted_sort	40
Coq.Sorting.Mergesort.Sort.LocallySorted_sort	40
Coq.Sorting.Mergesort.Sort.Permuted_sort	40
Coq.Sorting.Mergesort.Sort.StronglySorted_sort	40
Coq.Sorting.Mergesort.NatOrder.leb_total	40
Coq.Sorting.Permutation.Permutation.Permutation_nil	40
Coq.Sorting.Permutation.Permutation.Permutation_nil_cons	40
Coq.Sorting.Permutation.Permutation.Permutation_refl	40	3.2.128	synth with cache (only 1: induction l as [| a l' Hrec]; only 1: auto; only 1: auto).	0.256556034088	378
Coq.Sorting.Permutation.Permutation.Permutation_sym	40
Coq.Sorting.Permutation.Permutation.Permutation_trans	40	384.450	synth with cache (only 1: intros b LT; only 1: eauto with *).	0.179897069931	95
Coq.Sorting.Permutation.Permutation_cons	40	387.128.0.0	synth with cache (only 1: repeat red; only 1: intros f g l H; only 1: intro n; only 1: CRelationClasses.simpl_crelation).	0.500059127808	456
Coq.Sorting.Permutation.Permutation_properties.Permutation_in	40	1.0.0.4.1.0.2.0.0.0.0.0.0	synth with cache (only 1: induction 1; only 1: simpl; only 1: intros; only 1: auto; only 1: simpl; only 1: destruct 1 as [H1| ]; only 1: subst; only 1: intuition; only 1: right; only 1: auto; only 1: simpl; only 1: intuition; only 1: auto).	19.7552101612	23256
Coq.Sorting.Permutation.Permutation_properties.Permutation_in'	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_app_tail	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_app_head	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_app	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_app'	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_add_inside	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_cons_append	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_app_comm	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_cons_app	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_Add	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_middle	40	0	synth with cache (only 1: auto).	0.0179240703583	1
Coq.Sorting.Permutation.Permutation_properties.Permutation_rev	40	0.0.3.1.0.0.1	synth with cache (only 1: induction l; only 1: simpl; only 1: constructor; only 1: simpl; only 1: rewrite <- IHl; only 1: rewrite IHl; only 1: auto).	2.49542188644	947
Coq.Sorting.Permutation.Permutation_properties.Permutation_rev'	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_length	40	65.1.0.0.0.0.2.257	synth with cache (only 1: intros a n; only 1: induction 1; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: auto with arith; only 1: auto; only 1: PeanoNat.Nat.Private_Tac.order).	5.53777694702	9195
Coq.Sorting.Permutation.Permutation_properties.Permutation_length'	40	0.0.0.0.0.0.0.0.193.132	synth with cache (only 1: intros H; only 1: intro EQ; only 1: induction 1; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: now transitivity (length l')).	1.42148900032	1912
Coq.Sorting.Permutation.Permutation_properties.Permutation_ind_bis	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_nil_app_cons	40	69.448.0.448.0.448.0.448.0.448.0.448.0.448.0.448.0.448.0.448.0.448.0.448.0.64.0.0.0.0.68.0.2.0	synth with cache (only 1: unfold not; only 1: induction l; only 1: simpl; only 1: intros E; only 1: intros l HF; only 1: apply Permutation_nil in HF; only 1: discriminate; only 1: simpl; only 1: inversion_clear 1; only 1: generalize (app_nil_r (A:=l)); only 1: destruct 1; only 1: generalize (app_nil_r (A:=l)); only 1: destruct 1; only 1: generalize (app_nil_r (A:=l)); only 1: destruct 1; only 1: generalize (app_nil_r (A:=l)); only 1: destruct 1; only 1: generalize (app_nil_r (A:=l)); only 1: destruct 1; only 1: generalize (app_nil_r (A:=l)); only 1: destruct 1; only 1: generalize (app_nil_r (A:=l)); only 1: destruct 1; only 1: generalize (app_nil_r (A:=l)); only 1: destruct 1; only 1: generalize (app_nil_r (A:=l)); only 1: destruct 1; only 1: generalize (app_nil_r (A:=l)); only 1: destruct 1; only 1: generalize (app_nil_r (A:=l)); only 1: destruct 1; only 1: generalize (app_nil_r (A:=l)); only 1: destruct 1; only 1: eauto).	38.8749029636	76297
Coq.Sorting.Permutation.Permutation_properties.Permutation_Add_inv	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_app_inv	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_cons_inv	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_cons_app_inv	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_app_inv_l	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_app_inv_r	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_length_1_inv	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_length_1	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_length_2_inv	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_length_2	40
Coq.Sorting.Permutation.Permutation_properties.NoDup_Permutation	40
Coq.Sorting.Permutation.Permutation_properties.NoDup_Permutation_bis	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_NoDup	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_NoDup'	40
Coq.Sorting.Permutation.Permutation_map.Permutation_map	40
Coq.Sorting.Permutation.Permutation_map.Permutation_map'	40	0.0.0.0.0.0.0.0.64.129	synth with cache (only 1: intros h; only 1: intro y; only 1: induction 1; only 1: simpl; only 1: eauto; only 1: simpl; only 1: eauto; only 1: simpl; only 1: eauto; only 1: eauto).	0.537826061249	296
Coq.Sorting.Permutation.nat_bijection_Permutation	40
Coq.Sorting.Permutation.Permutation_alt.adapt_injective	40
Coq.Sorting.Permutation.Permutation_alt.adapt_ok	40
Coq.Sorting.Permutation.Permutation_alt.Permutation_nth_error	40
Coq.Sorting.Permutation.Permutation_alt.Permutation_nth_error_bis	40
Coq.Sorting.Permutation.Permutation_alt.Permutation_nth	40
Coq.Sorting.PermutSetoid.Permut.list_contents_app	40
Coq.Sorting.PermutSetoid.Permut.permut_refl	40	66	synth with cache (only 1: now split).	0.0183458328247	7
Coq.Sorting.PermutSetoid.Permut.permut_sym	40	0.321	synth with cache (only 1: intros n m H1 H2; only 1: auto).	0.982860088348	44
Coq.Sorting.PermutSetoid.Permut.permut_trans	40	65.0.64	synth with cache (only 1: destruct eqA_equiv; only 1: unfold permutation, meq; only 1: congruence).	1.72313594818	313
Coq.Sorting.PermutSetoid.Permut.permut_cons_eq	40
Coq.Sorting.PermutSetoid.Permut.permut_cons	40	0.0.0.0	synth with cache (only 1: unfold permutation; only 1: simpl; only 1: intros; only 1: auto with datatypes).	0.0399181842804	4
Coq.Sorting.PermutSetoid.Permut.permut_app	40
Coq.Sorting.PermutSetoid.Permut.permut_add_inside_eq	40
Coq.Sorting.PermutSetoid.Permut.permut_add_inside	40
Coq.Sorting.PermutSetoid.Permut.permut_add_cons_inside_eq	40
Coq.Sorting.PermutSetoid.Permut.permut_add_cons_inside	40	0.0.384.1.0.0	synth with cache (only 1: intros; only 1: replace (a :: l) with ([ ] ++ a :: l); only 1: apply permut_add_inside_eq; only 1: now subst; only 1: trivial; only 1: trivial).	2.94907903671	1739
Coq.Sorting.PermutSetoid.Permut.permut_middle	40
Coq.Sorting.PermutSetoid.Permut.permut_sym_app	40	1.0.1.192.64.1	synth with cache (only 1: unfold permutation; only 1: intros a H; only 1: intro; only 1: repeat rewrite list_contents_app in *; only 1: simpl in *; only 1: auto with arith).	2.26879096031	1529
Coq.Sorting.PermutSetoid.Permut.permut_rev	40	130.0.0.128.128.256.0.64.128.1.0.4	synth with cache (only 1: simple induction l; only 1: auto using permut_sym, permut_refl; only 1: unfold permutation; only 1: intro n; only 1: intros y Ryx; only 1: apply permut_add_cons_inside; only 1: intro m; only 1: Nat.bitwise; only 1: f_equal; only 1: repeat rewrite list_contents_app in *; only 1: simpl; only 1: now Nat.nzsimpl').	9.62987303734	10103
Coq.Sorting.PermutSetoid.Permut.permut_conv_inv	40
Coq.Sorting.PermutSetoid.Permut.permut_app_inv1	40
Coq.Sorting.PermutSetoid.Permut.if_eqA_then	40
Coq.Sorting.PermutSetoid.Permut.permut_app_inv2	40	385.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros l l1 l2; only 1: unfold permutation, meq; only 1: intros H a; only 1: generalize (H a); only 1: clear H; only 1: do 2 rewrite list_contents_app; only 1: simpl; only 1: intros; only 1: apply plus_reg_l with (multiplicity (list_contents l) a); only 1: rewrite Nat.add_comm; only 1: rewrite Nat.add_comm; only 1: rewrite Nat.add_comm; only 1: rewrite Nat.add_comm; only 1: now rewrite <- ?N.add_le_mono_l).	2.32668995857	1222
Coq.Sorting.PermutSetoid.Permut.permut_remove_hd_eq	40
Coq.Sorting.PermutSetoid.Permut.permut_remove_hd	40
Coq.Sorting.PermutSetoid.Permut.if_eqA_else	40
Coq.Sorting.PermutSetoid.Permut.if_eqA_refl	40	129.2.194.0.0.0.65.128	synth with cache (only 1: intros n m; only 1: intro y0; only 1: destruct eqA_dec as [_| NEQ]; only 1: intros; only 1: auto; only 1: intros E1; only 1: contradict NEQ; only 1: reflexivity || apply f_equal || exfalso).	6.26351499557	9623
Coq.Sorting.PermutSetoid.Permut.if_eqA	40
Coq.Sorting.PermutSetoid.Permut.if_eqA_rewrite_l	40
Coq.Sorting.PermutSetoid.Permut.if_eqA_rewrite_r	40
Coq.Sorting.PermutSetoid.Permut.multiplicity_eqA	40
Coq.Sorting.PermutSetoid.Permut.multiplicity_InA	40
Coq.Sorting.PermutSetoid.Permut.multiplicity_InA_O	40
Coq.Sorting.PermutSetoid.Permut.multiplicity_InA_S	40	0.0.0.0.0	synth with cache (only 1: intros l a; only 1: rewrite multiplicity_InA; only 1: destruct (multiplicity (list_contents l) a); only 1: auto with arith; only 1: auto with arith).	0.0578899383545	5
Coq.Sorting.PermutSetoid.Permut.multiplicity_NoDupA	40
Coq.Sorting.PermutSetoid.Permut.permut_InA_InA	40	0.64.384.0.0.577.2.129	synth with cache (only 1: intros x; only 1: intros l a; only 1: intro; only 1: rewrite multiplicity_InA; only 1: rewrite multiplicity_InA; only 1: repeat red; only 1: elim H; only 1: auto with arith).	6.68508601189	6572
Coq.Sorting.PermutSetoid.Permut.permut_cons_InA	40
Coq.Sorting.PermutSetoid.Permut.permut_nil	40
Coq.Sorting.PermutSetoid.Permut.permut_length_1	40
Coq.Sorting.PermutSetoid.Permut.permut_length_2	40
Coq.Sorting.PermutSetoid.Permut.permut_length	40
Coq.Sorting.PermutSetoid.Permut.NoDupA_equivlistA_permut	40
Coq.Sorting.PermutSetoid.Permut_map.permut_map	40
Coq.Sorting.PermutSetoid.Permut_permut.Permutation_impl_permutation	40
Coq.Sorting.PermutSetoid.Permut_permut.permut_eqA	40
Coq.Sorting.PermutSetoid.Permut_permut.permutation_Permutation	40
Coq.Sorting.Sorted.defs.HdRel_inv	40	0.66	synth with cache (only 1: inversion 1 as [H1| ?]; only 1: auto).	0.127733945847	194
Coq.Sorting.Sorted.defs.Sorted_inv	40	579.0	synth with cache (only 1: inversion 1; only 1: auto with bool).	0.151113986969	263
Coq.Sorting.Sorted.defs.Sorted_rect	40
Coq.Sorting.Sorted.defs.Sorted_LocallySorted_iff	40
Coq.Sorting.Sorted.defs.StronglySorted_inv	40	0.193.128	synth with cache (only 1: intro Ha; only 1: inversion 1; only 1: auto).	0.322674036026	110
Coq.Sorting.Sorted.defs.StronglySorted_rect	40
Coq.Sorting.Sorted.defs.StronglySorted_rec	40	0.0.0	synth with cache (only 1: induction l; only 1: firstorder using StronglySorted_inv; only 1: firstorder using StronglySorted_inv).	0.035108089447	3
Coq.Sorting.Sorted.defs.StronglySorted_Sorted	40	2.0.2.0.0.1.65	synth with cache (only 1: intro H; only 1: induction 1 as [| a l [| ]]; only 1: auto using Sorted, LocallySorted, HdRel; only 1: auto using Sorted, LocallySorted, HdRel; only 1: inversion H1; only 1: subst; only 1: auto using Sorted, LocallySorted, HdRel).	1.4090731144	2867
Coq.Sorting.Sorted.defs.Sorted_extends	40
Coq.Sorting.Sorted.defs.Sorted_StronglySorted	40
Coq.Sorting.Heap.defs.leA_Tree_Leaf	40	0.0.0	synth with cache (only 1: intros; only 1: simpl; only 1: auto with arith).	0.0406160354614	3
Coq.Sorting.Heap.defs.leA_Tree_Node	40	0.0	synth with cache (only 1: simpl; only 1: auto with datatypes).	0.0336530208588	2
Coq.Sorting.Heap.defs.invert_heap	40	0.3.195	synth with cache (only 1: intros H1 H2 n; only 1: inversion_clear 1; only 1: auto with datatypes).	2.30336999893	1927
Coq.Sorting.Heap.defs.is_heap_rect	40
Coq.Sorting.Heap.defs.is_heap_rec	40	0.320.0.1.0.1.0.1.0.0.0.0.1.0.1.0.0	synth with cache (only 1: simple induction T; only 1: auto with datatypes; only 1: intros a G PG D PD PN; only 1: elim (invert_heap a G D); only 1: intros H1 H2; only 1: elim H2; only 1: intros H3 H4; only 1: elim H4; only 1: intros; only 1: elim H4; only 1: intros; only 1: elim H4; only 1: intros; only 1: elim H4; only 1: intros; only 1: BinNat.N.auto'; only 1: auto with datatypes).	7.91506099701	5740
Coq.Sorting.Heap.defs.low_trans	40	64.3.0.0.0.1	synth with cache (only 1: simple induction T; only 1: intros; only 1: simpl; only 1: auto with datatypes; only 1: simpl; only 1: firstorder using Sorted_inv).	3.17819881439	1493
Coq.Sorting.Heap.defs.Equivalence_instance_0	40	321.1.768.0.0.29	synth with cache (only 1: split; only 1: auto with datatypes; only 1: auto with datatypes; only 1: intros Hn Hm; only 1: intros; only 1: congruence).	7.32665610313	6636
Coq.Sorting.Heap.defs.Proper_instance_0	40	0.2.1.0.0.1	synth with cache (only 1: red; only 1: red; only 1: red; only 1: red; only 1: simpl; only 1: auto with datatypes).	5.64908003807	4455
Coq.Sorting.Heap.defs.merge	40
Coq.Sorting.Heap.defs.insert	40
Coq.Sorting.Heap.defs.list_to_heap	40
Coq.Sorting.Heap.defs.heap_to_list	40
Coq.Sorting.Heap.defs.treesort	40
Coq.Init.Wf.Well_founded.Acc_inv	40	2.7.0	synth with cache (only 1: intro; only 1: destruct 1; only 1: assumption).	0.188225984573	433
Coq.Init.Wf.Well_founded.well_founded_induction_type	40
Coq.Init.Wf.Well_founded.well_founded_induction	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply Acc_rect; only 1: auto; only 1: auto).	0.0192029476166	4
Coq.Init.Wf.Well_founded.well_founded_ind	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply Acc_rect; only 1: auto; only 1: auto).	0.0191788673401	4
Coq.Init.Wf.Well_founded.FixPoint.Fix_F_eq	40	1.29	synth with cache (only 1: intros f [x]; only 1: auto).	0.674736976624	2622
Coq.Init.Wf.Well_founded.FixPoint.Fix_F_inv	40
Coq.Init.Wf.Well_founded.FixPoint.Fix_eq	40
Coq.Init.Wf.Well_founded_2.well_founded_induction_type_2	40
Coq.Init.Tactics.decide_left	40	0.0.0.64.0.69.0.6.147.0.9.1	synth with cache (only 1: intro z; only 1: intros H x0; only 1: intro; only 1: inversion_clear H; only 1: reflexivity || destruct H; only 1: trivial; only 1: induction n; only 1: assumption; only 1: destruct H0 in H; only 1: reflexivity || destruct H; only 1: assumption; only 1: auto).	19.2265970707	124872
Coq.Init.Tactics.decide_right	40	1.1.0.0	synth with cache (only 1: intros; only 1: destruct decide; only 1: contradiction; only 1: apply H0).	0.0208990573883	6
Coq.Init.Peano.pred_Sn	40	1	synth with cache (only 1: reflexivity).	0.00614190101624	2
Coq.Init.Peano.not_eq_S	40	0.8	synth with cache (only 1: intro H; only 1: auto).	0.133148908615	256
Coq.Init.Peano.O_S	40	4	synth with cache (only 1: discriminate).	0.0183219909668	24
Coq.Init.Peano.n_Sn	40	3.0.64.36.5	synth with cache (only 1: red; only 1: intro H1; only 1: elim H1; only 1: discriminate; only 1: auto).	5.23699808121	49238
Coq.Init.Peano.plus_n_O	40	0.5.0.1.31	synth with cache (only 1: intros; only 1: induction n; only 1: auto; only 1: simpl; only 1: auto).	0.467736005783	2278
Coq.Init.Peano.plus_O_n	40	0.0.0.0.0	synth with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0161199569702	5
Coq.Init.Peano.plus_n_Sm	40	1.0.1.2	synth with cache (only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: auto).	0.0451290607452	59
Coq.Init.Peano.plus_Sn_m	40	0.0.0.0.0.0	synth with cache (only 1: intros n m; only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.020604133606	6
Coq.Init.Peano.mult_n_O	40	1.0.0.0.0	synth with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0163609981537	6
Coq.Init.Peano.mult_n_Sm	40
Coq.Init.Peano.le_pred	40
Coq.Init.Peano.le_S_n	40
Coq.Init.Peano.le_0_n	40	0.1.1	synth with cache (only 1: induction n; only 1: auto; only 1: auto).	0.021054983139	19
Coq.Init.Peano.le_n_S	40	1.0.1	synth with cache (only 1: induction 1; only 1: auto; only 1: auto).	0.0239300727844	23
Coq.Init.Peano.nat_case	40	1.1.7.4	synth with cache (only 1: intros n m; only 1: induction n; only 1: auto; only 1: auto).	0.429916143417	1290
Coq.Init.Peano.nat_double_ind	40	1.1.13.2.1	synth with cache (only 1: induction n; only 1: auto; only 1: destruct m; only 1: auto; only 1: auto).	1.29437708855	5108
Coq.Init.Peano.max_l	40
Coq.Init.Peano.max_r	40	4.0.0.0.64.1.0.0.0.0.0.0.0	synth with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: induction 1; only 1: apply f_equal, IHn, le_S_n; only 1: trivial; only 1: apply f_equal, IHn, le_S_n; only 1: auto).	0.437844991684	454
Coq.Init.Peano.min_l	40	0.0.1.0.1.0.0.1.0.0.0.0.0.0	synth with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: destruct m; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	0.245089054108	196
Coq.Init.Peano.min_r	40	0.0.1.0.0.0.0.1.0.0.0.0.0.0	synth with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: inversion 1; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	0.165718078613	97
Coq.Init.Peano.nat_rect_succ_r	40	0.5.1.0.8	synth with cache (only 1: induction n as [| p H]; only 1: auto; only 1: simpl; only 1: destruct H; only 1: trivial).	0.681416034698	1500
Coq.Init.Peano.nat_rect_plus	40	0.0.1.3.1.0.0	synth with cache (only 1: intros ? ? ? Fl Fr; only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite <- ?IHn; only 1: trivial).	0.208060026169	262
Coq.Init.Byte.of_bits_to_bits	40
Coq.Init.Byte.to_bits_of_bits	40
Coq.Init.Datatypes.andb_prop	40
Coq.Init.Datatypes.andb_true_intro	40	0.0.6.28	synth with cache (only 1: intro H; only 1: destruct H, 1; only 1: assumption; only 1: assumption).	1.98304891586	14282
Coq.Init.Datatypes.eq_true_ind_r	40	1.76.67.0	synth with cache (only 1: intro; only 1: intros h1 h2; only 1: destruct 1; only 1: assumption).	0.203340053558	951
Coq.Init.Datatypes.eq_true_rec_r	40	0.0.0	synth with cache (only 1: intros P b H H0; only 1: destruct H0 in H; only 1: assumption).	0.0105848312378	3
Coq.Init.Datatypes.eq_true_rect_r	40	0.0.0	synth with cache (only 1: intros P b H H0; only 1: destruct H0 in H; only 1: assumption).	0.0109159946442	3
Coq.Init.Datatypes.surjective_pairing	40	0.7	synth with cache (only 1: intros A B [H1 H2]; only 1: reflexivity).	0.0514371395111	87
Coq.Init.Datatypes.injective_projections	40
Coq.Init.Datatypes.pair_equal_spec	40
Coq.Init.Datatypes.rew_pair	40	0.1	synth with cache (only 1: destruct H; only 1: reflexivity).	0.013739824295	3
Coq.Init.Datatypes.comparison_eq_stable	40
Coq.Init.Datatypes.CompOpp_involutive	40	0.0.0.0.1	synth with cache (only 1: intro H; only 1: reflexivity || destruct H; only 1: reflexivity || destruct H; only 1: reflexivity || destruct H; only 1: reflexivity || destruct H).	0.0339901447296	22
Coq.Init.Datatypes.CompOpp_inj	40	0.0.1.0.1.0.1.0.0.0.1.0.1.0.1.0.0.0.0	synth with cache (only 1: destruct c, c'; only 1: intro H; only 1: reflexivity || destruct H; only 1: intro H; only 1: discriminate; only 1: intro H; only 1: discriminate; only 1: intro H; only 1: discriminate; only 1: intro H; only 1: reflexivity || destruct H; only 1: intro H; only 1: discriminate; only 1: intro H; only 1: discriminate; only 1: intro H; only 1: discriminate; only 1: intro H; only 1: reflexivity || destruct H).	0.425410032272	474
Coq.Init.Datatypes.CompOpp_iff	40	0.0.0.2.0.0.0.2.0.0.0.2.2.0.0.0.2.0.0.0.2.0.0.0.2.2.5.5	synth with cache (only 1: intros; only 1: split; only 1: destruct c; only 1: destruct c'; only 1: auto; only 1: discriminate; only 1: discriminate; only 1: destruct c'; only 1: discriminate; only 1: auto; only 1: auto; only 1: destruct c'; only 1: discriminate; only 1: auto; only 1: auto; only 1: destruct c; only 1: destruct c'; only 1: auto; only 1: discriminate; only 1: discriminate; only 1: destruct c'; only 1: discriminate; only 1: auto; only 1: auto; only 1: destruct c'; only 1: discriminate; only 1: auto; only 1: auto).	5.36081409454	12622
Coq.Init.Datatypes.CompareSpec2Type	40
Coq.Init.Datatypes.CompSpec2Type	40
Coq.Init.Logic.Conjunction.proj1	40
Coq.Init.Logic.Conjunction.proj2	40	0.0	synth with cache (only 1: destruct 1; only 1: trivial).	0.00224900245667	2
Coq.Init.Logic.Equivalence.iff_refl	40
Coq.Init.Logic.Equivalence.iff_trans	40	2.2.0.0.1	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: split; only 1: auto; only 1: auto).	0.0173270702362	57
Coq.Init.Logic.Equivalence.iff_sym	40	0.0.0.2	synth with cache (only 1: destruct 1; only 1: split; only 1: auto; only 1: auto).	0.00484108924866	11
Coq.Init.Logic.and_iff_compat_l	40	1.0.2.0.1.0.1.0.0.4	synth with cache (only 1: destruct 1; only 1: split; only 1: destruct 1; only 1: split; only 1: trivial; only 1: auto; only 1: destruct 1; only 1: split; only 1: trivial; only 1: auto).	0.0610949993134	285
Coq.Init.Logic.and_iff_compat_r	40	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: intros [? ?]; only 1: split; only 1: apply Hl; only 1: assumption; only 1: assumption; only 1: intros [? ?]; only 1: split; only 1: apply Hr; only 1: assumption; only 1: assumption).	0.0169560909271	26
Coq.Init.Logic.or_iff_compat_l	40
Coq.Init.Logic.or_iff_compat_r	40	0.1.0.0.1.0.0.1.0.0.1.0.0.0	synth with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: intros [?| ?]; only 1: left; only 1: apply Hl; only 1: assumption; only 1: right; only 1: assumption; only 1: intros [?| ?]; only 1: left; only 1: apply Hr; only 1: assumption; only 1: right; only 1: assumption).	0.208160161972	625
Coq.Init.Logic.imp_iff_compat_l	40	9.9.2.0	synth with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: auto; only 1: auto).	0.173557043076	842
Coq.Init.Logic.imp_iff_compat_r	40	10.10.0.10	synth with cache (only 1: destruct 1; only 1: split; only 1: auto; only 1: auto).	1.07114911079	3464
Coq.Init.Logic.not_iff_compat	40	0.0.0.0	synth with cache (only 1: intros A B [H1 H2]; only 1: split; only 1: auto; only 1: auto).	0.00783109664917	4
Coq.Init.Logic.neg_false	40	1.1.11.0.1.0	synth with cache (only 1: split; only 1: split; only 1: auto; only 1: destruct 1; only 1: intros [? ?]; only 1: auto).	0.171585083008	582
Coq.Init.Logic.and_cancel_l	40
Coq.Init.Logic.and_cancel_r	40	0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros A B C Hl Hr; only 1: split; only 1: intros [HypL HypR]; only 1: split; only 1: intros; only 1: apply HypL; only 1: split; only 1: assumption; only 1: apply Hl; only 1: assumption; only 1: intros; only 1: apply HypR; only 1: split; only 1: assumption; only 1: apply Hr; only 1: assumption; only 1: intros [HypL HypR]; only 1: split; only 1: intros [? ?]; only 1: split; only 1: apply HypL; only 1: assumption; only 1: apply Hl; only 1: assumption; only 1: intros [? ?]; only 1: split; only 1: apply HypR; only 1: assumption; only 1: apply Hr; only 1: assumption).	0.291657209396	172
Coq.Init.Logic.and_comm	40	0.0.0.0.0.0.0.0.2	synth with cache (only 1: split; only 1: intros [? ?]; only 1: split; only 1: trivial; only 1: trivial; only 1: intros [? ?]; only 1: split; only 1: trivial; only 1: trivial).	0.0601141452789	41
Coq.Init.Logic.and_assoc	40
Coq.Init.Logic.or_cancel_l	40
Coq.Init.Logic.or_cancel_r	40
Coq.Init.Logic.or_comm	40	0.0.0.1.0.0.0.0.1.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros [?| ?]; only 1: right; only 1: trivial; only 1: left; only 1: trivial; only 1: intros [?| ?]; only 1: right; only 1: trivial; only 1: left; only 1: trivial).	0.068067073822	62
Coq.Init.Logic.or_assoc	40
Coq.Init.Logic.iff_and	40	1.0	synth with cache (only 1: intros; only 1: assumption).	0.00957703590393	3
Coq.Init.Logic.iff_to_and	40	1.0.0.0.0.2.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros [? ?]; only 1: split; only 1: trivial; only 1: trivial; only 1: intro H; only 1: assumption).	0.0758299827576	80
Coq.Init.Logic.universal_quantification.inst	40	5.2	synth with cache (only 1: intro H1; only 1: auto).	0.0386278629303	60
Coq.Init.Logic.universal_quantification.gen	40	0.0	synth with cache (only 1: unfold all; only 1: auto).	0.00901007652283	2
Coq.Init.Logic.Logic_lemmas.absurd	40	0.7.2.1	synth with cache (only 1: intro A; only 1: intros H ?; only 1: destruct 1; only 1: assumption).	0.303330183029	520
Coq.Init.Logic.Logic_lemmas.equality.eq_sym	40	1.3	synth with cache (only 1: destruct 1; only 1: trivial).	0.0187971591949	16
Coq.Init.Logic.Logic_lemmas.equality.eq_trans	40	0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: trivial).	0.0129499435425	3
Coq.Init.Logic.Logic_lemmas.equality.eq_trans_r	40	0.0	synth with cache (only 1: destruct 2; only 1: trivial).	0.0102169513702	2
Coq.Init.Logic.Logic_lemmas.equality.f_equal	40	0.0	synth with cache (only 1: destruct 1; only 1: trivial).	0.0108690261841	2
Coq.Init.Logic.Logic_lemmas.equality.not_eq_sym	40	28.1	synth with cache (only 1: destruct 2; only 1: auto).	0.509611845016	1496
Coq.Init.Logic.Logic_lemmas.eq_sind_r	40	2.1.2	synth with cache (only 1: intros A B C Hl Hr; only 1: destruct 1; only 1: auto).	0.0383100509644	32
Coq.Init.Logic.Logic_lemmas.eq_ind_r	40	0.0.0	synth with cache (only 1: intros A x P H y H0; only 1: elim eq_sym with (1 := H0); only 1: assumption).	0.0121819972992	3
Coq.Init.Logic.Logic_lemmas.eq_rec_r	40	0.0.0	synth with cache (only 1: intros A x P H y H0; only 1: elim eq_sym with (1 := H0); only 1: assumption).	0.012757062912	3
Coq.Init.Logic.Logic_lemmas.eq_rect_r	40	0.0.0	synth with cache (only 1: intros A x P H y H0; only 1: elim eq_sym with (1 := H0); only 1: assumption).	0.0129640102386	3
Coq.Init.Logic.equality_dep.f_equal_dep	40
Coq.Init.Logic.equality_dep2.f_equal_dep2	40	0.1.1	synth with cache (only 1: destruct H; only 1: destruct 1; only 1: reflexivity).	0.0316407680511	11
Coq.Init.Logic.rew_opp_r	40	1.0	synth with cache (only 1: destruct H; only 1: reflexivity).	0.0121130943298	3
Coq.Init.Logic.rew_opp_l	40	0.0.0	synth with cache (only 1: intros; only 1: destruct H; only 1: reflexivity).	0.0147438049316	3
Coq.Init.Logic.f_equal2	40	1.2.0.0.1	synth with cache (only 1: intros A B C Hl Hr; only 1: intros H ?; only 1: destruct 2; only 1: elim eq_sym with (1 := H0); only 1: trivial).	0.0652570724487	36
Coq.Init.Logic.f_equal3	40	0.0.0.1	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	0.0184550285339	5
Coq.Init.Logic.f_equal4	40	0.0.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	0.0231750011444	5
Coq.Init.Logic.f_equal5	40	0.0.0.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	0.0281720161438	6
Coq.Init.Logic.f_equal_compose	40	0.10.3.3	synth with cache (only 1: intros A x P H y H0; only 1: intros h1 h2; only 1: destruct h2; only 1: reflexivity).	0.55619597435	773
Coq.Init.Logic.eq_trans_refl_l	40	0.3	synth with cache (only 1: destruct e; only 1: reflexivity).	0.0193481445312	9
Coq.Init.Logic.eq_trans_refl_r	40	0.0	synth with cache (only 1: destruct e; only 1: reflexivity).	0.0137870311737	2
Coq.Init.Logic.eq_sym_involutive	40	0.0	synth with cache (only 1: destruct e; only 1: reflexivity).	0.0139100551605	2
Coq.Init.Logic.eq_trans_sym_inv_l	40	0.0	synth with cache (only 1: destruct e; only 1: reflexivity).	0.0141830444336	2
Coq.Init.Logic.eq_trans_sym_inv_r	40	0.0	synth with cache (only 1: destruct e; only 1: reflexivity).	0.0150880813599	2
Coq.Init.Logic.eq_trans_assoc	40	0.1.3.0	synth with cache (only 1: destruct e; only 1: intros h1 h2; only 1: destruct h2; only 1: trivial).	0.0737969875336	53
Coq.Init.Logic.rew_map	40	0.2.5	synth with cache (only 1: intros A B C Hl Hr; only 1: destruct H; only 1: reflexivity).	0.0631308555603	56
Coq.Init.Logic.eq_trans_map	40	3.28.5.12.8	synth with cache (only 1: intros A x P H y H0; only 1: intros ? ? ? Fl Fr; only 1: destruct 1; only 1: destruct Fl; only 1: assumption).	23.4998240471	90951
Coq.Init.Logic.map_subst	40	0.0	synth with cache (only 1: destruct H; only 1: reflexivity).	0.0154399871826	2
Coq.Init.Logic.map_subst_map	40	0.1	synth with cache (only 1: destruct H; only 1: reflexivity).	0.0174272060394	3
Coq.Init.Logic.rew_swap	40	0.4	synth with cache (only 1: destruct H, 1; only 1: reflexivity).	0.05934715271	47
Coq.Init.Logic.rew_compose	40	2.0.0	synth with cache (only 1: intros; only 1: destruct H2; only 1: reflexivity).	0.0163850784302	5
Coq.Init.Logic.eq_id_comm_l	40
Coq.Init.Logic.eq_id_comm_r	40
Coq.Init.Logic.eq_refl_map_distr	40	0.0	synth with cache (only 1: intros; only 1: reflexivity).	0.01393699646	2
Coq.Init.Logic.eq_trans_map_distr	40	9.66.70.1.67.70	synth with cache (only 1: intros H ?; only 1: intro A; only 1: unfold f_equal; only 1: intros ? ? ? Fl Fr; only 1: destruct Fr; only 1: reflexivity).	3.08335709572	12770
Coq.Init.Logic.eq_sym_map_distr	40	0.0	synth with cache (only 1: destruct e; only 1: reflexivity).	0.0168480873108	2
Coq.Init.Logic.eq_trans_sym_distr	40	0.2.1.1	synth with cache (only 1: destruct e'; only 1: simpl; only 1: rewrite eq_trans_refl_l; only 1: reflexivity).	0.194478988647	110
Coq.Init.Logic.eq_trans_rew_distr	40	0.4	synth with cache (only 1: destruct e'; only 1: reflexivity).	0.146500825882	42
Coq.Init.Logic.rew_const	40	1.3	synth with cache (only 1: destruct e; only 1: reflexivity).	0.145395994186	50
Coq.Init.Logic.unique_existence	40
Coq.Init.Logic.forall_exists_unique_domain_coincide	40
Coq.Init.Logic.forall_exists_coincide_unique_domain	40
Coq.Init.Logic.exists_inhabited	40	5.64.4.5	synth with cache (only 1: intro; only 1: intro; only 1: intros [HypL HypR]; only 1: auto).	0.282956123352	1012
Coq.Init.Logic.inhabited_covariant	40	0.0.5	synth with cache (only 1: intro; only 1: destruct 1; only 1: auto).	0.0512330532074	104
Coq.Init.Logic.eq_stepl	40	1.0.4.64	synth with cache (only 1: intros A P H; only 1: intro; only 1: destruct 2; only 1: trivial).	0.0914671421051	169
Coq.Init.Logic.iff_stepl	40	0.0.0.0	synth with cache (only 1: intros A B C [H1 H2] [H3 H4]; only 1: split; only 1: auto; only 1: auto).	0.0201070308685	4
Coq.Init.Logic.ex.eq_ex_uncurried	40
Coq.Init.Logic.ex.rew_ex	40
Coq.Init.Logic.ex2.eq_ex2_uncurried	40	0.0.5.0.0	synth with cache (only 1: destruct pq as [p q]; only 1: destruct q; only 1: destruct H; only 1: destruct p; only 1: reflexivity).	0.158027887344	228
Coq.Init.Logic.ex2.rew_ex2	40	0.0	synth with cache (only 1: destruct H, u; only 1: reflexivity).	0.0245201587677	2
Coq.Init.Logic_Type.identity_is_a_congruence.identity_sym	40	0.0	synth with cache (only 1: destruct 1; only 1: trivial).	0.0130820274353	2
Coq.Init.Logic_Type.identity_is_a_congruence.identity_trans	40	0.0	synth with cache (only 1: destruct 2; only 1: trivial).	0.0131227970123	2
Coq.Init.Logic_Type.identity_is_a_congruence.identity_congr	40	0.0	synth with cache (only 1: destruct 1; only 1: trivial).	0.0133600234985	2
Coq.Init.Logic_Type.identity_is_a_congruence.not_identity_sym	40	0.0.0.0.0	synth with cache (only 1: red; only 1: intros h1 h2; only 1: apply h1; only 1: destruct h2; only 1: trivial).	0.0247941017151	5
Coq.Init.Logic_Type.identity_ind_r	40	0.0.4	synth with cache (only 1: intros A B C Hl Hr; only 1: destruct 1; only 1: auto).	0.0895259380341	162
Coq.Init.Logic_Type.identity_rec_r	40	0.0.0	synth with cache (only 1: intros A x P H y H0; only 1: case identity_sym with (1 := H0); only 1: trivial).	0.0172100067139	3
Coq.Init.Logic_Type.identity_rect_r	40	0.0.0	synth with cache (only 1: intros A x P H y H0; only 1: case identity_sym with (1 := H0); only 1: trivial).	0.0177779197693	3
Coq.Init.Specif.sigT_eta	40	0.59	synth with cache (only 1: destruct p; only 1: reflexivity).	0.962547063828	9351
Coq.Init.Specif.sig_eta	40	0.0	synth with cache (only 1: destruct p; only 1: reflexivity).	0.012934923172	2
Coq.Init.Specif.sigT2_eta	40	0.1	synth with cache (only 1: destruct p; only 1: reflexivity).	0.0146000385284	3
Coq.Init.Specif.sig2_eta	40	0.0	synth with cache (only 1: destruct p; only 1: reflexivity).	0.0150499343872	2
Coq.Init.Specif.exists_to_inhabited_sig	40	0.0.2.10.4	synth with cache (only 1: intro; only 1: destruct H; only 1: split; only 1: exists x; only 1: trivial).	0.408310890198	1325
Coq.Init.Specif.inhabited_sig_to_exists	40	0.0.0.67.46	synth with cache (only 1: intro H1; only 1: elim H1; only 1: intros [x y]; only 1: exists x; only 1: assumption).	1.08360815048	11440
Coq.Init.Specif.sigT.eq_existT_uncurried	40	0.0.0.0	synth with cache (only 1: destruct pq as [p q]; only 1: destruct q; only 1: destruct p; only 1: reflexivity).	0.0233359336853	4
Coq.Init.Specif.sigT.eq_sigT_uncurried	40
Coq.Init.Specif.sigT.eq_existT_curried	40	0.0.0	synth with cache (only 1: destruct q; only 1: destruct p; only 1: reflexivity).	0.0209980010986	3
Coq.Init.Specif.sigT.eq_existT_curried_map	40	0.0	synth with cache (only 1: destruct p, q; only 1: reflexivity).	0.0247268676758	2
Coq.Init.Specif.sigT.eq_existT_curried_trans	40	0.67.9.9	synth with cache (only 1: destruct p; only 1: simpl in *; only 1: subst; only 1: reflexivity).	1.16620397568	3505
Coq.Init.Specif.sigT.eq_existT_curried_congr	40	0.9.12.68	synth with cache (only 1: symmetry; only 1: destruct H; only 1: destruct r, q, p; only 1: reflexivity).	8.61902809143	23756
Coq.Init.Specif.sigT.eq_sigT_uncurried_iff	40
Coq.Init.Specif.sigT.eq_sigT_rect	40
Coq.Init.Specif.sigT.rew_sigT	40	0.0	synth with cache (only 1: destruct H, u; only 1: reflexivity).	0.0232110023499	2
Coq.Init.Specif.sig.eq_exist_uncurried	40	0.0.0	synth with cache (only 1: destruct pq as [p q]; only 1: destruct p, q; only 1: reflexivity).	0.0244269371033	3
Coq.Init.Specif.sig.eq_sig_uncurried	40	0.0.0.0.0.0	synth with cache (only 1: destruct u as [u1 u2], v as [v1 v2]; only 1: simpl in *; only 1: destruct pq as [p q]; only 1: destruct q; only 1: destruct p; only 1: reflexivity).	0.0478157997131	6
Coq.Init.Specif.sig.eq_sig_rect	40
Coq.Init.Specif.sig.eq_sig_uncurried_iff	40	6.4.0.0.0.0.0	synth with cache (only 1: split; only 1: intro; only 1: subst; only 1: exists eq_refl; only 1: reflexivity; only 1: destruct u as [u1 u2], v as [v1 v2]; only 1: apply eq_exist_uncurried).	1.47685313225	2718
Coq.Init.Specif.sig.rew_sig	40	0.0	synth with cache (only 1: destruct H, u; only 1: reflexivity).	0.02610206604	2
Coq.Init.Specif.sigT2.eq_existT2_uncurried	40
Coq.Init.Specif.sigT2.eq_sigT2_uncurried	40	0.0.0.3.2.0.2	synth with cache (only 1: simpl in *; only 1: destruct pqr as [p q r]; only 1: destruct u as [u1 u2], v as [v1 v2]; only 1: simpl in *; only 1: destruct r, q, p; only 1: simpl; only 1: reflexivity).	0.825409173965	1118
Coq.Init.Specif.sigT2.eq_sigT2_uncurried_iff	40	2.2.2.6.0.0.3.0.0.0	synth with cache (only 1: split; only 1: intro; only 1: subst; only 1: exists eq_refl; only 1: reflexivity; only 1: reflexivity; only 1: simpl in *; only 1: destruct u as [u1 u2 u3], v as [v1 v2 v3]; only 1: simpl; only 1: apply eq_existT2_uncurried).	10.2586319447	18973
Coq.Init.Specif.sigT2.eq_sigT2_rect	40
Coq.Init.Specif.sigT2.rew_sigT2	40	0.0	synth with cache (only 1: destruct H, u; only 1: reflexivity).	0.0336258411407	2
Coq.Init.Specif.sig2.eq_exist2_uncurried	40	0.0.0.0	synth with cache (only 1: destruct pqr as [p q r]; only 1: destruct r, q, p; only 1: simpl in *; only 1: reflexivity).	0.0373659133911	4
Coq.Init.Specif.sig2.eq_sig2_uncurried	40	0.0.0.0.0.0	synth with cache (only 1: destruct u as [u1 u2 u3], v as [v1 v2 v3]; only 1: simpl in *; only 1: destruct pqr as [p q r]; only 1: destruct r, q, p; only 1: simpl; only 1: reflexivity).	0.0657248497009	6
Coq.Init.Specif.sig2.eq_sig2_uncurried_iff	40	130.0.0.2.1.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intro; only 1: subst; only 1: exists eq_refl; only 1: reflexivity; only 1: reflexivity; only 1: intro; only 1: destruct u as [u1 u2], v as [v1 v2]; only 1: simpl in *; only 1: apply eq_exist2_uncurried; only 1: apply H).	0.776442050934	457
Coq.Init.Specif.sig2.eq_sig2_rect	40
Coq.Init.Specif.sig2.rew_sig2	40	0.0	synth with cache (only 1: destruct H, u; only 1: reflexivity).	0.0344569683075	2
Coq.Init.Specif.Choice_lemmas.Choice	40
Coq.Init.Specif.Choice_lemmas.Choice2	40
Coq.Init.Specif.Choice_lemmas.bool_choice	40
Coq.Init.Specif.Dependent_choice_lemmas.dependent_choice	40
Coq.Init.Specif.absurd_set	40	0.0.0	synth with cache (only 1: unfold not; only 1: intros A C h1 h2; only 1: destruct (h2 h1)).	0.0186991691589	3
Coq.QArith.QOrderedType.Q_as_OT.lt_strorder	40	0.0.0.0.0.192.0.706.78	synth with cache (only 1: split; only 1: intro; only 1: apply Z.lt_irrefl; only 1: red; only 1: intros; only 1: apply Qle_lt_trans with y; only 1: apply Qlt_le_weak; only 1: auto; only 1: auto).	9.10315799713	7593
Coq.QArith.QOrderedType.Q_as_OT.lt_compat	40	0.0.0	synth with cache (only 1: intros p q H r s H'; only 1: rewrite 2!Qlt_alt, H, H'; only 1: auto with *).	0.0424909591675	3
Coq.QArith.Qreduction.Qred_correct	40
Coq.QArith.Qreduction.Qred_complete	40
Coq.QArith.Qreduction.Qred_eq_iff	40
Coq.QArith.Qreduction.Qred_comp_Proper	40
Coq.QArith.Qreduction.Qplus'_correct	40
Coq.QArith.Qreduction.Qmult'_correct	40
Coq.QArith.Qreduction.Qminus'_correct	40	1.0	synth with cache (only 1: intros; only 1: apply Qred_correct).	0.0214560031891	3
Coq.QArith.Qreduction.Qplus'_comp_Proper	40
Coq.QArith.Qreduction.Qmult'_comp_Proper	40
Coq.QArith.Qreduction.Qminus'_comp_Proper	40
Coq.QArith.Qreduction.Qred_opp	40
Coq.QArith.Qreduction.Qred_compare	40
Coq.QArith.Qreduction.Qred_le	40	1.576.3.0.1.0	synth with cache (only 1: split; only 1: intros; only 1: rewrite <- (Qred_correct q), <- (Qred_correct q'); only 1: auto with *; only 1: intro LE; only 1: now rewrite !Qred_correct).	1.02373695374	1034
Coq.QArith.Qreduction.Qred_lt	40	2.641.4.0.0.0	synth with cache (only 1: split; only 1: intros; only 1: rewrite <- (Qred_correct q), <- (Qred_correct q'); only 1: trivial; only 1: intros Ha; only 1: now rewrite !Qred_correct).	2.59893202782	1279
Coq.QArith.Qcabs.Qred_abs	40
Coq.QArith.Qcabs.Qcabs_canon	40
Coq.QArith.Qcabs.Qcabs_case	40
Coq.QArith.Qcabs.Qcabs_pos	40
Coq.QArith.Qcabs.Qcabs_neg	40
Coq.QArith.Qcabs.Qcabs_nonneg	40	0.1.0.2.94	synth with cache (only 1: red; only 1: simpl; only 1: apply Qabs_case; only 1: auto; only 1: apply (Qopp_le_compat x 0)).	18.6035530567	46073
Coq.QArith.Qcabs.Qcabs_opp	40
Coq.QArith.Qcabs.Qcabs_triangle	40
Coq.QArith.Qcabs.Qcabs_Qcmult	40
Coq.QArith.Qcabs.Qcabs_Qcminus	40
Coq.QArith.Qcabs.Qcle_Qcabs	40
Coq.QArith.Qcabs.Qcabs_triangle_reverse	40
Coq.QArith.Qcabs.Qcabs_Qcle_condition	40
Coq.QArith.Qcabs.Qcabs_diff_Qcle_condition	40
Coq.QArith.Qcabs.Qcabs_null	40
Coq.QArith.Qpower.Qpower_positive_1	40
Coq.QArith.Qpower.Qpower_1	40
Coq.QArith.Qpower.Qpower_positive_0	40	129.0.0.0.0.1.0	synth with cache (only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: rewrite IHn; only 1: reflexivity; only 1: simpl; only 1: now f_equal).	0.214405059814	124
Coq.QArith.Qpower.Qpower_0	40
Coq.QArith.Qpower.Qpower_not_0_positive	40
Coq.QArith.Qpower.Qpower_pos_positive	40
Coq.QArith.Qpower.Qpower_pos	40
Coq.QArith.Qpower.Qmult_power_positive	40
Coq.QArith.Qpower.Qmult_power	40
Coq.QArith.Qpower.Qinv_power_positive	40
Coq.QArith.Qpower.Qinv_power	40
Coq.QArith.Qpower.Qdiv_power	40
Coq.QArith.Qpower.Qinv_power_n	40
Coq.QArith.Qpower.Qpower_plus_positive	40
Coq.QArith.Qpower.Qpower_opp	40
Coq.QArith.Qpower.Qpower_minus_positive	40
Coq.QArith.Qpower.Qpower_plus	40
Coq.QArith.Qpower.Qpower_plus'	40
Coq.QArith.Qpower.Qpower_mult_positive	40
Coq.QArith.Qpower.Qpower_mult	40
Coq.QArith.Qpower.Zpower_Qpower	40
Coq.QArith.Qpower.Qsqr_nonneg	40	2.0.0.0.1.5.3	synth with cache (only 1: simpl; only 1: intro n; only 1: induction n; only 1: unfold Qle in *; only 1: simpl in *; only 1: rewrite Z.mul_1_r in *; only 1: apply Z.square_nonneg).	4.73039507866	8192
Coq.QArith.Qpower.Qpower_decomp	40
Coq.QArith.Qfield.Qsrt	40
Coq.QArith.Qfield.Qsft	40
Coq.QArith.Qfield.Qpower_theory	40	138.192.0.522	synth with cache (only 1: firstorder; only 1: red; only 1: revert n; only 1: now destruct n).	11.0410070419	14357
Coq.QArith.Qfield.Examples.ex1	40	0	synth with cache (only 1: exact Qmult_plus_distr_l).	0.0176939964294	1
Coq.QArith.Qfield.Examples.ex2	40	0	synth with cache (only 1: exact Qplus_comm).	0.0179369449615	1
Coq.QArith.Qfield.Examples.ex3	40	0.0.0.0.0	synth with cache (only 1: intros (x1, x2) (y1, y2) (z1, z2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: simpl_mult; only 1: ring).	0.126794815063	5
Coq.QArith.Qfield.Examples.ex4	40	1	synth with cache (only 1: now split).	0.0220289230347	2
Coq.QArith.Qfield.Examples.ex5	40	2	synth with cache (only 1: trivial).	0.0248122215271	3
Coq.QArith.Qfield.Examples.ex6	40	0	synth with cache (only 1: ring).	0.0301699638367	1
Coq.QArith.Qfield.Examples.ex7	40	0.0.0.1	synth with cache (only 1: red; only 1: simpl; only 1: intro; only 1: ring).	0.0585489273071	5
Coq.QArith.Qfield.Examples.ex8	40	0.0	synth with cache (only 1: intro; only 1: ring).	0.0382339954376	2
Coq.QArith.Qfield.Examples.ex9	40	0.0	synth with cache (only 1: intro; only 1: ring).	0.0377609729767	2
Coq.QArith.Qfield.Examples.ex10	40
Coq.QArith.Qfield.Qopp_plus	40	1.0.0.0.0.0.0	synth with cache (only 1: intros (x1, x2) (y1, y2); only 1: unfold Qeq, Qmult, Qplus; only 1: simpl; only 1: rewrite Pos.mul_comm; only 1: rewrite Pos.mul_comm; only 1: rewrite Pos.mul_comm; only 1: ring).	0.0933609008789	17
Coq.QArith.Qfield.Qopp_opp	40	0.0.0.0	synth with cache (only 1: red; only 1: simpl; only 1: intros; only 1: ring).	0.0504150390625	4
Coq.QArith.Qcanon.Qred_identity	40
Coq.QArith.Qcanon.Qred_identity2	40
Coq.QArith.Qcanon.Qred_iff	40
Coq.QArith.Qcanon.Qc_is_canon	40
Coq.QArith.Qcanon.Qc_decomp	40
Coq.QArith.Qcanon.Qred_involutive	40
Coq.QArith.Qcanon.Q2Qc_eq_iff	40
Coq.QArith.Qcanon.Qceq_alt	40
Coq.QArith.Qcanon.Qclt_alt	40	0.0.0	synth with cache (only 1: split; only 1: easy; only 1: easy).	0.0323879718781	3
Coq.QArith.Qcanon.Qcgt_alt	40	0.1.258.65	synth with cache (only 1: unfold Z.lcm; only 1: intros l1 l2; only 1: symmetry; only 1: apply Z.gt_lt_iff).	1.9054350853	2271
Coq.QArith.Qcanon.Qcle_alt	40	450.448.0	synth with cache (only 1: intros; only 1: repeat red; only 1: auto with qarith).	0.0420351028442	47
Coq.QArith.Qcanon.Qcge_alt	40	1.0.0.0.257.705	synth with cache (only 1: unfold Ring_polynom.Pphi_pow; only 1: induction p; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: apply Z.ge_le_iff).	3.59620404243	3275
Coq.QArith.Qcanon.Qc_eq_dec	40
Coq.QArith.Qcanon.Q_apart_0_1	40	2	synth with cache (only 1: now Z.nzsimpl).	0.0617368221283	3
Coq.QArith.Qcanon.Qcplus_assoc	40
Coq.QArith.Qcanon.Qcplus_0_l	40	76.3.576	synth with cache (only 1: intros (m, H); only 1: qc; only 1: ring).	32.970993042	37314
Coq.QArith.Qcanon.Qcplus_0_r	40	78.0.577	synth with cache (only 1: intros (m, H); only 1: qc; only 1: ring).	35.5073180199	36888
Coq.QArith.Qcanon.Qcplus_comm	40	1.0.0.0.1.512.0.1	synth with cache (only 1: intros; only 1: qc; only 1: unfold Qeq, Qinv; only 1: simpl in *; only 1: rewrite Pos.mul_comm; only 1: rewrite Pos.mul_comm; only 1: rewrite Pos.mul_comm; only 1: ring).	0.715013980865	699
Coq.QArith.Qcanon.Qcopp_involutive	40
Coq.QArith.Qcanon.Qcplus_opp_r	40	0.0.2.0.0	synth with cache (only 1: intros; only 1: qc; only 1: red; only 1: simpl in *; only 1: ring).	0.352722167969	195
Coq.QArith.Qcanon.Qcmult_assoc	40	6.1.0.3.0.320	synth with cache (only 1: symmetry; only 1: qc; only 1: unfold Qeq, Qmult, Qplus; only 1: simpl in *; only 1: simpl_mult; only 1: ring).	36.2979631424	35571
Coq.QArith.Qcanon.Qcmult_0_l	40	193.1.7	synth with cache (only 1: induction n; only 1: qc; only 1: now constructor).	2.29464197159	2628
Coq.QArith.Qcanon.Qcmult_0_r	40	1.0.6.0.0	synth with cache (only 1: intros; only 1: qc; only 1: unfold Qeq; only 1: simpl; only 1: ring).	1.36114311218	2764
Coq.QArith.Qcanon.Qcmult_1_l	40
Coq.QArith.Qcanon.Qcmult_1_r	40
Coq.QArith.Qcanon.Qcmult_comm	40	1.0.0.0.0.3.0.128.66	synth with cache (only 1: intro p; only 1: intros LE; only 1: qc; only 1: red; only 1: simpl; only 1: rewrite Pos.mul_comm; only 1: rewrite Pos.mul_comm; only 1: rewrite Pos.mul_comm; only 1: ring).	2.81269192696	6839
Coq.QArith.Qcanon.Qcmult_plus_distr_r	40
Coq.QArith.Qcanon.Qcmult_plus_distr_l	40	0.0.0.512	synth with cache (only 1: intros (Hc1, Hc2) || intros Hc; only 1: intros; only 1: qc; only 1: ring).	2.70359706879	531
Coq.QArith.Qcanon.Qcmult_integral	40
Coq.QArith.Qcanon.Qcmult_integral_l	40
Coq.QArith.Qcanon.Qcmult_inv_r	40
Coq.QArith.Qcanon.Qcmult_inv_l	40	0.0.4.0.3.0	synth with cache (only 1: intros; only 1: intuition idtac; only 1: qc; only 1: rewrite Qmult_comm; only 1: apply Qmult_inv_r; only 1: auto).	9.66191101074	8535
Coq.QArith.Qcanon.Qcinv_mult_distr	40
Coq.QArith.Qcanon.Qcdiv_mult_l	40
Coq.QArith.Qcanon.Qcmult_div_r	40
Coq.QArith.Qcanon.Qcle_refl	40
Coq.QArith.Qcanon.Qcle_antisym	40	129	synth with cache (only 1: intuition).	0.0440990924835	19
Coq.QArith.Qcanon.Qcle_trans	40
Coq.QArith.Qcanon.Qclt_not_eq	40
Coq.QArith.Qcanon.Qclt_le_weak	40	193	synth with cache (only 1: congruence).	0.242024183273	172
Coq.QArith.Qcanon.Qcle_lt_trans	40	1.1.1.448.0	synth with cache (only 1: intros x y z; only 1: intros m Hm; only 1: apply Qle_lt_trans with y; only 1: auto with qarith; only 1: assumption).	0.387896060944	245
Coq.QArith.Qcanon.Qclt_le_trans	40
Coq.QArith.Qcanon.Qclt_trans	40	129.0.1.0.0	synth with cache (only 1: unfold Qcle, Qclt; only 1: intros; only 1: eapply Qlt_le_trans; only 1: eauto; only 1: intuition).	0.593151092529	573
Coq.QArith.Qcanon.Qcnot_lt_le	40	65.64	synth with cache (only 1: intuition; only 1: Z.order).	0.35906291008	263
Coq.QArith.Qcanon.Qcnot_le_lt	40	65.0	synth with cache (only 1: unfold Qcle, Qclt; only 1: Z.order).	1.00548005104	156
Coq.QArith.Qcanon.Qclt_not_le	40	0.1.0	synth with cache (only 1: unfold Qcle, Qclt; only 1: intros n m; only 1: apply Z.lt_nge).	0.0624101161957	74
Coq.QArith.Qcanon.Qcle_not_lt	40	130.0	synth with cache (only 1: unfold Qcle, Qclt; only 1: auto with qarith).	0.123923063278	49
Coq.QArith.Qcanon.Qcle_lt_or_eq	40
Coq.QArith.Qcanon.Qc_dec	40
Coq.QArith.Qcanon.Qclt_le_dec	40
Coq.QArith.Qcanon.Qcopp_le_compat	40
Coq.QArith.Qcanon.Qcle_minus_iff	40
Coq.QArith.Qcanon.Qclt_minus_iff	40
Coq.QArith.Qcanon.Qcplus_le_compat	40
Coq.QArith.Qcanon.Qcmult_le_compat_r	40
Coq.QArith.Qcanon.Qcmult_lt_0_le_reg_r	40
Coq.QArith.Qcanon.Qcmult_lt_compat_r	40
Coq.QArith.Qcanon.Qcpower_1	40
Coq.QArith.Qcanon.Qcpower_0	40	451.64.450.0	synth with cache (only 1: intros; only 1: destruct n; only 1: now simpl; only 1: eauto with *).	15.053055048	1744
Coq.QArith.Qcanon.Qcpower_pos	40
Coq.QArith.Qcanon.Qc_eq_bool_correct	40
Coq.QArith.Qcanon.Qcrt	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.131	synth with cache (only 1: repeat split; only 1: intros; only 1: qc; only 1: apply Qplus_0_l; only 1: intros; only 1: qc; only 1: apply Qplus_comm; only 1: intros; only 1: qc; only 1: apply Qplus_assoc; only 1: intros; only 1: qc; only 1: apply Qmult_1_l; only 1: intros; only 1: qc; only 1: apply Qmult_comm; only 1: intros; only 1: qc; only 1: apply Qmult_assoc; only 1: intros; only 1: qc; only 1: apply Qmult_plus_distr_l; only 1: intros; only 1: qc; only 1: apply Qplus_opp_r).	1.30532598495	823
Coq.QArith.Qcanon.Qcft	40	0.0.0.1.0.0.3.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: constructor; only 1: constructor; only 1: exact Qcplus_0_l; only 1: intros; only 1: qc; only 1: apply Qplus_comm; only 1: intros; only 1: qc; only 1: apply Qplus_assoc; only 1: intros; only 1: qc; only 1: apply Qmult_1_l; only 1: intros; only 1: qc; only 1: apply Qmult_comm; only 1: intros; only 1: qc; only 1: apply Qmult_assoc; only 1: intros; only 1: qc; only 1: apply Qmult_plus_distr_l; only 1: reflexivity; only 1: intros; only 1: qc; only 1: apply Qplus_opp_r; only 1: unfold Q2Qc; only 1: intros H; only 1: discriminate H; only 1: intros; only 1: apply Qc_is_canon; only 1: split; only 1: intros; only 1: rewrite Qcmult_comm; only 1: qc; only 1: apply Qmult_inv_r; only 1: auto).	1.85462522507	933
Coq.QArith.Qcanon.test_field	40	0.0.1.4.0.0	synth with cache (only 1: unfold Qcdiv; only 1: intros; only 1: rewrite <- Qcmult_assoc; only 1: rewrite Qcmult_inv_l; only 1: apply Qcmult_1_r; only 1: auto).	15.3355519772	4874
Coq.QArith.Qreals.IZR_nz	40	2	synth with cache (only 1: auto with real).	0.0237050056458	3
Coq.QArith.Qreals.eqR_Qeq	40
Coq.QArith.Qreals.Qeq_eqR	40
Coq.QArith.Qreals.Rle_Qle	40
Coq.QArith.Qreals.Qle_Rle	40
Coq.QArith.Qreals.Rlt_Qlt	40
Coq.QArith.Qreals.Qlt_Rlt	40
Coq.QArith.Qreals.Q2R_plus	40
Coq.QArith.Qreals.Q2R_mult	40
Coq.QArith.Qreals.Q2R_opp	40
Coq.QArith.Qreals.Q2R_minus	40
Coq.QArith.Qreals.Q2R_inv	40
Coq.QArith.Qreals.Q2R_div	40
Coq.QArith.QArith_base.inject_Z_injective	40
Coq.QArith.QArith_base.Qeq_alt	40
Coq.QArith.QArith_base.Qlt_alt	40	64.1	synth with cache (only 1: symmetry; only 1: tauto).	0.0419869422913	5
Coq.QArith.QArith_base.Qgt_alt	40
Coq.QArith.QArith_base.Qle_alt	40	2	synth with cache (only 1: reflexivity).	0.0472490787506	35
Coq.QArith.QArith_base.Qge_alt	40
Coq.QArith.QArith_base.Qcompare_antisym	40
Coq.QArith.QArith_base.Qcompare_spec	40
Coq.QArith.QArith_base.Qeq_refl	40	0.2	synth with cache (only 1: red; only 1: now Z.nzsimpl).	0.124428033829	4
Coq.QArith.QArith_base.Qeq_sym	40	0.65.0	synth with cache (only 1: symmetry; only 1: destruct H; only 1: apply Z.eq_refl).	0.0363049507141	7
Coq.QArith.QArith_base.Qeq_trans	40
Coq.QArith.QArith_base.Q_Setoid	40	321.0.320.65.0.1.0.256.128.71	synth with cache (only 1: split; only 1: congruence; only 1: intros (a', H); only 1: unfold Qeq; only 1: intros Hn; only 1: now Z.nzsimpl'; only 1: intros H H1 H2; only 1: elim H1; only 1: intros; only 1: eauto with *).	1.76357102394	1999
Coq.QArith.QArith_base.Qeq_dec	40
Coq.QArith.QArith_base.Qeq_bool_iff	40
Coq.QArith.QArith_base.Qeq_bool_eq	40
Coq.QArith.QArith_base.Qeq_eq_bool	40	0	synth with cache (only 1: apply Qeq_bool_iff).	0.0194230079651	1
Coq.QArith.QArith_base.Qeq_bool_neq	40
Coq.QArith.QArith_base.Qle_bool_iff	40
Coq.QArith.QArith_base.Qle_bool_imp_le	40	0.582.129	synth with cache (only 1: generalize 1%Z; only 1: intros (m, H); only 1: apply Zle_is_le_bool).	6.30461192131	10821
Coq.QArith.QArith_base.Qnot_eq_sym	40	192.5	synth with cache (only 1: unfold Qeq, Qlt, Qcompare; only 1: Z.order).	1.25471901894	925
Coq.QArith.QArith_base.Qeq_bool_comm	40
Coq.QArith.QArith_base.Qeq_bool_refl	40
Coq.QArith.QArith_base.Qeq_bool_sym	40	0.0.0.73.385	synth with cache (only 1: intros n; only 1: induction n; only 1: apply eq_true_iff_eq; only 1: rewrite !Qeq_bool_iff; only 1: now symmetry).	5.6733148098	6185
Coq.QArith.QArith_base.Qeq_bool_trans	40
Coq.QArith.QArith_base.Qmake_Qdiv	40	256.0.12	synth with cache (only 1: Z.bitwise; only 1: simpl; only 1: now Z.nzsimpl).	13.8187618256	20677
Coq.QArith.QArith_base.Qplus_comp	40
Coq.QArith.QArith_base.Qopp_comp	40
Coq.QArith.QArith_base.Qminus_comp	40
Coq.QArith.QArith_base.Qmult_comp	40
Coq.QArith.QArith_base.Qinv_comp	40
Coq.QArith.QArith_base.Qdiv_comp	40
Coq.QArith.QArith_base.Qcompare_comp	40
Coq.QArith.QArith_base.Qle_comp	40
Coq.QArith.QArith_base.Qlt_compat	40
Coq.QArith.QArith_base.Qeqb_comp	40
Coq.QArith.QArith_base.Qleb_comp	40
Coq.QArith.QArith_base.Q_apart_0_1	40	64	synth with cache (only 1: now N.nzsimpl).	0.432268857956	5
Coq.QArith.QArith_base.Qplus_assoc	40
Coq.QArith.QArith_base.Qplus_0_l	40
Coq.QArith.QArith_base.Qplus_0_r	40	2.0.449.0.0	synth with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: N.nzsimpl; only 1: simpl; only 1: now rewrite Pos.mul_1_r).	0.602863073349	310
Coq.QArith.QArith_base.Qplus_comm	40	0.0.0.0.1.0.3.320.258	synth with cache (only 1: intuition; only 1: induction x; only 1: generalize 1%Z; only 1: red; only 1: intros; only 1: simpl; only 1: simpl_mult; only 1: ring_simplify; only 1: f_equiv).	9.86181998253	5590
Coq.QArith.QArith_base.Qopp_involutive	40	6.4.323.0	synth with cache (only 1: destr_bool; only 1: red; only 1: simpl; only 1: ring).	12.8456041813	33990
Coq.QArith.QArith_base.Qplus_opp_r	40	0.1.577.0.64.834	synth with cache (only 1: intro p; only 1: revert p; only 1: unfold Qeq; only 1: firstorder; only 1: simpl; only 1: ring).	5.29309010506	3012
Coq.QArith.QArith_base.Qplus_inj_r	40
Coq.QArith.QArith_base.Qplus_inj_l	40
Coq.QArith.QArith_base.Qmult_assoc	40
Coq.QArith.QArith_base.Qmult_0_l	40	0.0.0	synth with cache (only 1: red; only 1: simpl; only 1: congruence).	0.0277719497681	3
Coq.QArith.QArith_base.Qmult_0_r	40	0.64.0.1	synth with cache (only 1: red; only 1: simpl; only 1: symmetry; only 1: now Z.nzsimpl).	0.117907047272	70
Coq.QArith.QArith_base.Qmult_1_l	40
Coq.QArith.QArith_base.Qmult_1_r	40	0.1.0.0.0.0	synth with cache (only 1: intro; only 1: red; only 1: simpl; only 1: rewrite Pos.mul_comm; only 1: simpl; only 1: ring).	0.0725030899048	57
Coq.QArith.QArith_base.Qmult_comm	40	1.0.0.0.0.0.0	synth with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: intros; only 1: simpl; only 1: rewrite Pos.mul_comm; only 1: rewrite Pos.mul_comm; only 1: ring).	0.0882949829102	22
Coq.QArith.QArith_base.Qmult_plus_distr_r	40
Coq.QArith.QArith_base.Qmult_plus_distr_l	40	0.0.0.0.0	synth with cache (only 1: intros (x1, x2) (y1, y2) (z1, z2); only 1: unfold Qeq, Qmult, Qplus; only 1: simpl; only 1: simpl_mult; only 1: ring).	0.105701208115	5
Coq.QArith.QArith_base.Qmult_integral	40
Coq.QArith.QArith_base.Qmult_integral_l	40
Coq.QArith.QArith_base.inject_Z_plus	40
Coq.QArith.QArith_base.inject_Z_mult	40	2.0	synth with cache (only 1: unfold Qplus, inject_Z; only 1: intuition).	0.022665977478	4
Coq.QArith.QArith_base.inject_Z_opp	40	0	synth with cache (only 1: now destruct x).	0.0207221508026	1
Coq.QArith.QArith_base.Qinv_involutive	40
Coq.QArith.QArith_base.Qmult_inv_r	40
Coq.QArith.QArith_base.Qinv_mult_distr	40
Coq.QArith.QArith_base.Qdiv_mult_l	40
Coq.QArith.QArith_base.Qmult_div_r	40
Coq.QArith.QArith_base.Qinv_plus_distr	40
Coq.QArith.QArith_base.Qinv_minus_distr	40	0.0.0.64.0.1	synth with cache (only 1: red; only 1: simpl; only 1: intros l1 l2; only 1: intros; only 1: rewrite Pos2Z.inj_mul; only 1: ring).	0.364315032959	362
Coq.QArith.QArith_base.Qmult_inj_r	40
Coq.QArith.QArith_base.Qmult_inj_l	40
Coq.QArith.QArith_base.Qle_refl	40	262	synth with cache (only 1: intuition).	0.110561847687	248
Coq.QArith.QArith_base.Qle_antisym	40
Coq.QArith.QArith_base.Qle_trans	40
Coq.QArith.QArith_base.Qlt_irrefl	40	12	synth with cache (only 1: apply Z.lt_irrefl).	2.07862091064	3604
Coq.QArith.QArith_base.Qlt_not_eq	40
Coq.QArith.QArith_base.Zle_Qle	40
Coq.QArith.QArith_base.Zlt_Qlt	40
Coq.QArith.QArith_base.Qle_lteq	40
Coq.QArith.QArith_base.Qlt_le_weak	40	463.384	synth with cache (only 1: intros HH; only 1: congruence).	16.4413468838	56248
Coq.QArith.QArith_base.Qle_lt_trans	40
Coq.QArith.QArith_base.Qlt_le_trans	40
Coq.QArith.QArith_base.Qlt_trans	40
Coq.QArith.QArith_base.Qnot_lt_le	40	706.2	synth with cache (only 1: firstorder; only 1: Z.order || apply Z.lt_0_1).	0.787081956863	575
Coq.QArith.QArith_base.Qnot_le_lt	40	131	synth with cache (only 1: Z.Private_Tac.order).	0.0740580558777	12
Coq.QArith.QArith_base.Qlt_not_le	40	1	synth with cache (only 1: apply Z.nle_gt).	0.0158729553223	2
Coq.QArith.QArith_base.Qle_not_lt	40	384.0.6	synth with cache (only 1: intro; only 1: apply Z.nlt_ge; only 1: auto with arith).	1.92808699608	426
Coq.QArith.QArith_base.Qle_lt_or_eq	40	1.322.198.128	synth with cache (only 1: intros a n; only 1: generalize 1%Z; only 1: intros Hm; only 1: apply Z.lt_eq_cases).	6.39536905289	11219
Coq.QArith.QArith_base.Q_dec	40
Coq.QArith.QArith_base.Qlt_le_dec	40
Coq.QArith.QArith_base.Qarchimedean	40
Coq.QArith.QArith_base.Qopp_le_compat	40
Coq.QArith.QArith_base.Qle_minus_iff	40
Coq.QArith.QArith_base.Qlt_minus_iff	40
Coq.QArith.QArith_base.Qplus_le_compat	40
Coq.QArith.QArith_base.Qplus_lt_le_compat	40
Coq.QArith.QArith_base.Qplus_le_l	40
Coq.QArith.QArith_base.Qplus_le_r	40
Coq.QArith.QArith_base.Qplus_lt_l	40
Coq.QArith.QArith_base.Qplus_lt_r	40	0.0.0.0.0.0.0.0.0.0.0.3	synth with cache (only 1: rewrite (Qplus_comm z x), (Qplus_comm z y); only 1: split; only 1: intros; only 1: rewrite <- (Qplus_0_r x), <- (Qplus_0_r y), <- (Qplus_opp_r z); only 1: do 2 rewrite Qplus_assoc; only 1: apply Qplus_lt_le_compat; only 1: auto with *; only 1: auto with *; only 1: intros; only 1: apply Qplus_lt_le_compat; only 1: auto with *; only 1: auto with *).	6.08926486969	7749
Coq.QArith.QArith_base.Qmult_le_compat_r	40
Coq.QArith.QArith_base.Qmult_lt_0_le_reg_r	40
Coq.QArith.QArith_base.Qmult_le_r	40
Coq.QArith.QArith_base.Qmult_le_l	40
Coq.QArith.QArith_base.Qmult_lt_compat_r	40
Coq.QArith.QArith_base.Qmult_lt_r	40
Coq.QArith.QArith_base.Qmult_lt_l	40
Coq.QArith.QArith_base.Qmult_le_0_compat	40	512.256.0.0.68.64	synth with cache (only 1: intro n; only 1: intros q; only 1: unfold Qle, Qlt; only 1: simpl; only 1: Z.nzsimpl; only 1: firstorder).	23.0494890213	24416
Coq.QArith.QArith_base.Qinv_le_0_compat	40
Coq.QArith.QArith_base.Qle_shift_div_l	40
Coq.QArith.QArith_base.Qle_shift_inv_l	40
Coq.QArith.QArith_base.Qle_shift_div_r	40
Coq.QArith.QArith_base.Qle_shift_inv_r	40
Coq.QArith.QArith_base.Qinv_lt_0_compat	40	0.0.0.0	synth with cache (only 1: intros [[| n| n] d] Ha; only 1: assumption; only 1: assumption; only 1: assumption).	0.0306470394135	4
Coq.QArith.QArith_base.Qlt_shift_div_l	40
Coq.QArith.QArith_base.Qlt_shift_inv_l	40
Coq.QArith.QArith_base.Qlt_shift_div_r	40
Coq.QArith.QArith_base.Qlt_shift_inv_r	40
Coq.QArith.QArith_base.Qinv_lt_contravar	40
Coq.QArith.QArith_base.Qpower_positive_comp	40
Coq.QArith.QArith_base.Qpower_comp	40
Coq.QArith.Qminmax.Q.plus_max_distr_l	40
Coq.QArith.Qminmax.Q.plus_max_distr_r	40
Coq.QArith.Qminmax.Q.plus_min_distr_l	40
Coq.QArith.Qminmax.Q.plus_min_distr_r	40	0.0.0.0.0.0.0.0.2.0	synth with cache (only 1: intros; only 1: rewrite (Qplus_comm n p), (Qplus_comm m p), (Qplus_comm _ p); only 1: apply min_monotone; only 1: intros x x' Hx; only 1: rewrite Hx; only 1: auto with qarith; only 1: intros x x' Hx; only 1: apply Qplus_le_compat; only 1: q_order; only 1: q_order).	18.2867348194	1609
Coq.QArith.Qround.Qopp_lt_compat	40
Coq.QArith.Qround.Qfloor_Z	40	5.64.2	synth with cache (only 1: intro n; only 1: simpl; only 1: apply Z.div_1_r).	2.14910507202	3463
Coq.QArith.Qround.Qceiling_Z	40
Coq.QArith.Qround.Qfloor_le	40
Coq.QArith.Qround.Qle_ceiling	40
Coq.QArith.Qround.Qle_floor_ceiling	40
Coq.QArith.Qround.Qlt_floor	40
Coq.QArith.Qround.Qceiling_lt	40
Coq.QArith.Qround.Qfloor_resp_le	40
Coq.QArith.Qround.Qceiling_resp_le	40
Coq.QArith.Qround.Qfloor_comp_Proper	40
Coq.QArith.Qround.Qceiling_comp_Proper	40	1.2.1.0.0.1.0	synth with cache (only 1: intros x y H; only 1: apply Z.le_antisymm; only 1: unfold Qceiling; only 1: rewrite <- Z.opp_le_mono; only 1: auto with *; only 1: symmetry in H; only 1: auto with *).	3.0075609684	3329
Coq.QArith.Qround.Zdiv_Qdiv	40
Coq.QArith.Qabs.Qabs_case	40
Coq.QArith.Qabs.Qabs_wd_Proper	40
Coq.QArith.Qabs.Qabs_pos	40	4.0.0.3.1.2.0.1.1	synth with cache (only 1: intros [[| n| n] d] Ha; only 1: red; only 1: simpl; only 1: ring; only 1: simpl; only 1: unfold Qred, Qeq in *; only 1: simpl; only 1: reflexivity; only 1: easy).	15.4822840691	16408
Coq.QArith.Qabs.Qabs_neg	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros x H; only 1: apply Qabs_case; only 1: intros H0; only 1: setoid_replace x with 0; only 1: reflexivity; only 1: apply Qle_antisym; only 1: assumption; only 1: assumption; only 1: reflexivity).	0.233247041702	137
Coq.QArith.Qabs.Qabs_nonneg	40	2.0.0.196.321	synth with cache (only 1: intros (a, H); only 1: red; only 1: simpl in *; only 1: Z.nzsimpl; only 1: Z.order_pos').	2.9304330349	3060
Coq.QArith.Qabs.Zabs_Qabs	40	259	synth with cache (only 1: now Z.swap_greater).	0.0415480136871	38
Coq.QArith.Qabs.Qabs_opp	40
Coq.QArith.Qabs.Qabs_triangle	40
Coq.QArith.Qabs.Qabs_Qmult	40	1.3.2.0.1.0	synth with cache (only 1: intros [xn xd] [yn yd]; only 1: unfold Qeq, Qmult, Qplus; only 1: simpl; only 1: simpl_mult; only 1: repeat rewrite <- Z.abs_mul; only 1: auto with *).	13.6685650349	8151
Coq.QArith.Qabs.Qabs_Qinv	40
Coq.QArith.Qabs.Qabs_Qminus	40
Coq.QArith.Qabs.Qle_Qabs	40
Coq.QArith.Qabs.Qabs_triangle_reverse	40
Coq.QArith.Qabs.Qabs_Qle_condition	40
Coq.QArith.Qabs.Qabs_diff_Qle_condition	40
Coq.Classes.CMorphisms.Proper.eq_proper_proxy	40	1	synth with cache (only 1: reflexivity).	0.00835299491882	2
Coq.Classes.CMorphisms.Proper.reflexive_proper_proxy	40	1	synth with cache (only 1: firstorder).	0.00948786735535	2
Coq.Classes.CMorphisms.Proper.proper_proper_proxy	40	0	synth with cache (only 1: firstorder).	0.00762701034546	1
Coq.Classes.CMorphisms.Relations.pointwise_pointwise	40	0.4.5.130.4.3.128	synth with cache (only 1: intros H; only 1: split; only 1: intros; only 1: inversion 1; only 1: auto; only 1: intros h1 h2; only 1: auto).	3.77887010574	10955
Coq.Classes.CMorphisms.Relations.subrelation_id_proper	40	3	synth with cache (only 1: apply H).	0.0086088180542	4
Coq.Classes.CMorphisms.Relations.subrelation_respectful	40	0	synth with cache (only 1: firstorder).	0.0114431381226	1
Coq.Classes.CMorphisms.Relations.subrelation_refl	40	1.0.0	synth with cache (only 1: hnf; only 1: intros x y H'; only 1: assumption).	0.014475107193	4
Coq.Classes.CMorphisms.Relations.subrelation_proper	40	0	synth with cache (only 1: firstorder).	0.0101599693298	1
Coq.Classes.CMorphisms.Relations.proper_subrelation_proper_arrow	40	0	synth with cache (only 1: simpl_crelation).	0.0155580043793	1
Coq.Classes.CMorphisms.Relations.pointwise_subrelation	40	1	synth with cache (only 1: firstorder).	0.010143995285	2
Coq.Classes.CMorphisms.Relations.forall_subrelation	40	7.1	synth with cache (only 1: intro; only 1: firstorder).	0.56747508049	1025
Coq.Classes.CMorphisms.iff_impl_subrelation	40	0	synth with cache (only 1: simpl_crelation).	0.0139708518982	1
Coq.Classes.CMorphisms.iff_flip_impl_subrelation	40	0	synth with cache (only 1: firstorder).	0.00957894325256	1
Coq.Classes.CMorphisms.iffT_arrow_subrelation	40	0.0	synth with cache (only 1: reduce; only 1: firstorder).	0.0133011341095	2
Coq.Classes.CMorphisms.iffT_flip_arrow_subrelation	40	0	synth with cache (only 1: firstorder).	0.0115041732788	1
Coq.Classes.CMorphisms.GenericInstances.respectful_per_obligation_2	40
Coq.Classes.CMorphisms.GenericInstances.flip_proper_obligation_1	40	11	synth with cache (only 1: firstorder).	0.0898020267487	201
Coq.Classes.CMorphisms.GenericInstances.trans_contra_co_type_morphism_obligation_1	40	6	synth with cache (only 1: firstorder).	0.15265583992	52
Coq.Classes.CMorphisms.GenericInstances.trans_contra_inv_impl_type_morphism_obligation_1	40	6	synth with cache (only 1: firstorder).	0.531638860703	647
Coq.Classes.CMorphisms.GenericInstances.trans_co_impl_type_morphism_obligation_1	40	5	synth with cache (only 1: firstorder).	6.67129302025	7469
Coq.Classes.CMorphisms.GenericInstances.trans_sym_co_inv_impl_type_morphism_obligation_1	40
Coq.Classes.CMorphisms.GenericInstances.trans_sym_contra_arrow_morphism_obligation_1	40
Coq.Classes.CMorphisms.GenericInstances.per_partial_app_type_morphism_obligation_1	40	9	synth with cache (only 1: firstorder).	0.411674976349	279
Coq.Classes.CMorphisms.GenericInstances.trans_co_eq_inv_arrow_morphism_obligation_1	40
Coq.Classes.CMorphisms.GenericInstances.PER_type_morphism_obligation_1	40
Coq.Classes.CMorphisms.GenericInstances.symmetric_equiv_flip	40	1	synth with cache (only 1: firstorder).	0.0234241485596	11
Coq.Classes.CMorphisms.GenericInstances.compose_proper_obligation_1	40	8	synth with cache (only 1: firstorder).	0.0981349945068	99
Coq.Classes.CMorphisms.GenericInstances.reflexive_eq_dom_reflexive	40	0.65	synth with cache (only 1: intros x y H'; only 1: simpl_crelation).	0.0285320281982	13
Coq.Classes.CMorphisms.GenericInstances.respectful_morphism	40
Coq.Classes.CMorphisms.GenericInstances.Reflexive_partial_app_morphism	40	0.67	synth with cache (only 1: hnf; only 1: auto).	0.028785943985	22
Coq.Classes.CMorphisms.GenericInstances.flip_respectful	40	0	synth with cache (only 1: firstorder).	0.0156230926514	1
Coq.Classes.CMorphisms.GenericInstances.flip1	40	0.0	synth with cache (only 1: reduce; only 1: auto).	0.0144820213318	2
Coq.Classes.CMorphisms.GenericInstances.flip2	40	0	synth with cache (only 1: firstorder).	0.0103831291199	1
Coq.Classes.CMorphisms.GenericInstances.eq_subrelation	40	2	synth with cache (only 1: simpl_crelation).	0.0274529457092	17
Coq.Classes.CMorphisms.GenericInstances.reflexive_proper	40	0	synth with cache (only 1: firstorder).	0.0122261047363	1
Coq.Classes.CMorphisms.GenericInstances.proper_eq	40	0	synth with cache (only 1: firstorder).	0.0105819702148	1
Coq.Classes.CMorphisms.proper_proper	40	0.0.0.0.0.0.0.0	synth with cache (only 1: reduce; only 1: split; only 1: intros; only 1: subst; only 1: firstorder; only 1: intros; only 1: subst; only 1: firstorder).	0.038666009903	8
Coq.Classes.CMorphisms.Normalize.proper_normalizes_proper	40	4	synth with cache (only 1: firstorder).	0.0371761322021	38
Coq.Classes.CMorphisms.Normalize.flip_atom	40	0	synth with cache (only 1: firstorder).	0.0114109516144	1
Coq.Classes.CMorphisms.flip_arrow	40
Coq.Classes.CMorphisms.proper_sym_flip	40	0.2	synth with cache (only 1: intros; only 1: simpl_crelation).	0.0290348529816	4
Coq.Classes.CMorphisms.proper_sym_flip_2	40	0.66.7.0	synth with cache (only 1: intros A R1 Sym B R2 f Hf; only 1: unfold flip, respectful; only 1: intros H x y Hxy; only 1: auto).	6.74147510529	3321
Coq.Classes.CMorphisms.proper_sym_impl_iff	40
Coq.Classes.CMorphisms.proper_sym_arrow_iffT	40	0.0.0.0.0	synth with cache (only 1: intros A R Sym f Hf x x' Hxx'; only 1: repeat red in Hf; only 1: split; only 1: eauto; only 1: eauto).	0.0347678661346	5
Coq.Classes.CMorphisms.proper_sym_impl_iff_2	40	0.0.0.0.0.0.1.3.0.0.69	synth with cache (only 1: intro z; only 1: intros A R1 Sym B R2 f Hf; only 1: intros x x' Hxx' y y' Hyy'; only 1: repeat red in Hf; only 1: split; only 1: apply Hf; only 1: auto; only 1: auto; only 1: apply Hf; only 1: auto; only 1: auto).	4.30988001823	3491
Coq.Classes.CMorphisms.proper_sym_arrow_iffT_2	40	0.0.0.0.0	synth with cache (only 1: intros A R Sym B R' Sym' f Hf x x' Hxx' y y' Hyy'; only 1: repeat red in Hf; only 1: split; only 1: eauto; only 1: eauto).	0.04217004776	5
Coq.Classes.CMorphisms.PartialOrder_proper_type	40
Coq.Classes.CMorphisms.PartialOrder_StrictOrder	40
Coq.Classes.CMorphisms.StrictOrder_PreOrder	40
Coq.Classes.CMorphisms.StrictOrder_PartialOrder	40
Coq.Classes.Morphisms_Prop.Acc_pt_morphism	40
Coq.Classes.Morphisms_Prop.Acc_rel_morphism	40
Coq.Classes.Morphisms_Prop.well_founded_morphism	40
Coq.Classes.CEquivalence.equiv_transitive_obligation_1	40	0.0.195.6.65	synth with cache (only 1: intros x; only 1: intro; only 1: intros P b H H0; only 1: compute; only 1: firstorder).	3.63375306129	4431
Coq.Classes.CEquivalence.Respecting.respecting_equiv_obligation_3	40	0.1.64.67.132.65	synth with cache (only 1: intros n m; only 1: intros [HypL HypR]; only 1: compute; only 1: intro H1; only 1: destruct 1; only 1: eauto).	13.7070891857	9798
Coq.Classes.CEquivalence.pointwise_reflexive	40	2	synth with cache (only 1: simpl_crelation).	0.0196180343628	3
Coq.Classes.CEquivalence.pointwise_symmetric	40	0	synth with cache (only 1: firstorder).	0.0129420757294	1
Coq.Classes.CEquivalence.pointwise_transitive	40	0	synth with cache (only 1: firstorder).	0.0179088115692	1
Coq.Classes.CEquivalence.pointwise_equivalence	40	0	synth with cache (only 1: firstorder).	0.440449953079	1
Coq.Classes.CRelationClasses.Defs.complement_inverse	40	2	synth with cache (only 1: reflexivity).	0.0100610256195	3
Coq.Classes.CRelationClasses.Defs.StrictOrder_Asymmetric	40
Coq.Classes.CRelationClasses.Defs.subrelation_symmetric	40	0	synth with cache (only 1: firstorder).	0.0119180679321	1
Coq.Classes.CRelationClasses.Defs.flip.flip_Reflexive	40	2.0	synth with cache (only 1: hnf; only 1: firstorder).	0.0141170024872	4
Coq.Classes.CRelationClasses.Defs.flip.flip_Antisymmetric	40	4.1	synth with cache (only 1: hnf; only 1: auto).	0.0709891319275	121
Coq.Classes.CRelationClasses.Defs.flip.flip_PreOrder	40	2	synth with cache (only 1: firstorder).	0.0231847763062	3
Coq.Classes.CRelationClasses.Defs.flip.flip_StrictOrder	40	1	synth with cache (only 1: firstorder).	0.0241260528564	2
Coq.Classes.CRelationClasses.Defs.flip.flip_PER	40	1	synth with cache (only 1: firstorder).	0.0320789813995	2
Coq.Classes.CRelationClasses.Defs.flip.flip_Equivalence	40	1	synth with cache (only 1: firstorder).	0.0396521091461	2
Coq.Classes.CRelationClasses.Defs.complement.complement_Irreflexive	40	1	synth with cache (only 1: firstorder).	0.0129339694977	2
Coq.Classes.CRelationClasses.Defs.complement.complement_Symmetric	40	0	synth with cache (only 1: firstorder).	0.0122380256653	1
Coq.Classes.CRelationClasses.iffT_Reflexive	40	3.3.0.131	synth with cache (only 1: intro p; only 1: split; only 1: auto; only 1: auto).	0.102566957474	332
Coq.Classes.CRelationClasses.iffT_Symmetric	40	0	synth with cache (only 1: firstorder).	0.0124619007111	1
Coq.Classes.CRelationClasses.iffT_Transitive	40	0	synth with cache (only 1: firstorder).	0.0149919986725	1
Coq.Classes.CRelationClasses.Binary.relation_equivalence_equivalence	40
Coq.Classes.CRelationClasses.Binary.relation_implication_preorder	40	2	synth with cache (only 1: firstorder).	0.0148351192474	3
Coq.Classes.CRelationClasses.Binary.partial_order_antisym	40	0	synth with cache (only 1: firstorder).	0.0222918987274	1
Coq.Classes.CRelationClasses.Binary.PartialOrder_inverse	40	2.0	synth with cache (only 1: reduce_goal; only 1: firstorder).	0.0593359470367	4
Coq.Classes.Equivalence.equiv_transitive_obligation_1	40	0.0.0.0.128.0.65	synth with cache (only 1: intros n m; only 1: revert m; only 1: intros h1 h2; only 1: simpl_relation; only 1: transitivity y; only 1: auto; only 1: auto).	0.145241975784	123
Coq.Classes.Equivalence.Respecting.respecting_equiv_obligation_3	40	0.256.64.129.65.0.129.132	synth with cache (only 1: intros A P H; only 1: intro; only 1: unfold respectful; only 1: destruct H; only 1: intros x; only 1: intros [? ?]; only 1: intros H x0; only 1: eauto).	14.6617870331	19396
Coq.Classes.Equivalence.pointwise_reflexive	40	0	synth with cache (only 1: simpl_relation).	0.0319049358368	1
Coq.Classes.Equivalence.pointwise_symmetric	40	0	synth with cache (only 1: firstorder).	0.0285229682922	1
Coq.Classes.Equivalence.pointwise_transitive	40	0	synth with cache (only 1: firstorder).	0.0105350017548	1
Coq.Classes.Equivalence.pointwise_equivalence	40	0	synth with cache (only 1: firstorder).	0.243771076202	1
Coq.Classes.EquivDec.unit_eqdec_obligation_1	40
Coq.Classes.EquivDec.bool_function_eqdec_obligation_1	40
Coq.Classes.EquivDec.list_eqdec_obligation_5	40
Coq.Classes.RelationClasses.Defs.complement_inverse	40	2	synth with cache (only 1: auto).	0.00917506217957	3
Coq.Classes.RelationClasses.Defs.StrictOrder_Asymmetric	40
Coq.Classes.RelationClasses.Defs.subrelation_symmetric	40	0	synth with cache (only 1: firstorder).	0.0120379924774	1
Coq.Classes.RelationClasses.Defs.flip.flip_Reflexive	40	2.0.0.0	synth with cache (only 1: hnf; only 1: intros; only 1: hnf; only 1: firstorder).	0.019257068634	6
Coq.Classes.RelationClasses.Defs.flip.flip_Antisymmetric	40	4.1	synth with cache (only 1: hnf; only 1: auto).	0.139878034592	195
Coq.Classes.RelationClasses.Defs.flip.flip_PreOrder	40	2	synth with cache (only 1: firstorder).	0.0253040790558	3
Coq.Classes.RelationClasses.Defs.flip.flip_StrictOrder	40	1	synth with cache (only 1: firstorder).	0.0280001163483	2
Coq.Classes.RelationClasses.Defs.flip.flip_PER	40	1	synth with cache (only 1: firstorder).	0.0393860340118	2
Coq.Classes.RelationClasses.Defs.flip.flip_Equivalence	40	1	synth with cache (only 1: firstorder).	0.0393409729004	2
Coq.Classes.RelationClasses.Defs.complement.complement_Irreflexive	40	1	synth with cache (only 1: firstorder).	0.0123190879822	2
Coq.Classes.RelationClasses.Defs.complement.complement_Symmetric	40	0	synth with cache (only 1: firstorder).	0.0138640403748	1
Coq.Classes.RelationClasses.predicate_equivalence_equivalence_obligation_1	40
Coq.Classes.RelationClasses.predicate_equivalence_equivalence_obligation_2	40
Coq.Classes.RelationClasses.predicate_equivalence_equivalence_obligation_3	40
Coq.Classes.RelationClasses.predicate_implication_preorder_obligation_1	40	0.0.0	synth with cache (only 1: induction l; only 1: firstorder; only 1: firstorder).	0.0229709148407	3
Coq.Classes.RelationClasses.predicate_implication_preorder_obligation_2	40	0.0.0.0.0.1	synth with cache (only 1: induction l; only 1: firstorder; only 1: intros; only 1: simpl in *; only 1: pose (IHl (x x0) (y x0) (z x0)); only 1: firstorder).	0.105771064758	25
Coq.Classes.RelationClasses.Binary.relation_equivalence_equivalence	40	1.0.71.2.4.64.13.2.3.1.2.17	synth with cache (only 1: split; only 1: firstorder; only 1: firstorder; only 1: constructor; only 1: firstorder; only 1: red in H0; only 1: apply H0; only 1: firstorder; only 1: firstorder; only 1: apply H; only 1: red in H0; only 1: firstorder).	39.0798001289	72365
Coq.Classes.RelationClasses.Binary.relation_implication_preorder	40	3	synth with cache (only 1: firstorder).	0.0160799026489	4
Coq.Classes.RelationClasses.Binary.partial_order_antisym	40	0	synth with cache (only 1: firstorder).	0.0214619636536	1
Coq.Classes.RelationClasses.Binary.PartialOrder_inverse	40	0.0.0.0	synth with cache (only 1: reduce_goal; only 1: pose proof partial_order_equivalence as poe; only 1: do 3 red in poe; only 1: firstorder).	0.0883350372314	4
Coq.Classes.RelationClasses.subrelation_partial_order_obligation_1	40	0	synth with cache (only 1: firstorder).	0.0231671333313	1
Coq.Classes.Morphisms.Proper.eq_proper_proxy	40	2	synth with cache (only 1: reflexivity).	0.00957298278809	3
Coq.Classes.Morphisms.Proper.reflexive_proper_proxy	40	0	synth with cache (only 1: firstorder).	0.0106499195099	1
Coq.Classes.Morphisms.Proper.proper_proper_proxy	40	0	synth with cache (only 1: firstorder).	0.00848412513733	1
Coq.Classes.Morphisms.Relations.pointwise_pointwise	40	1.0.65.3.2.5	synth with cache (only 1: split; only 1: red; only 1: intro z; only 1: destruct 1; only 1: firstorder; only 1: firstorder).	0.741616010666	1192
Coq.Classes.Morphisms.Relations.subrelation_id_proper	40	0.2	synth with cache (only 1: reduce_goal; only 1: firstorder).	0.0155351161957	4
Coq.Classes.Morphisms.Relations.subrelation_respectful	40	0	synth with cache (only 1: firstorder).	0.0133209228516	1
Coq.Classes.Morphisms.Relations.subrelation_refl	40	2.0	synth with cache (only 1: unfold subrelation in *; only 1: firstorder).	0.0148110389709	4
Coq.Classes.Morphisms.Relations.subrelation_proper	40	0.0	synth with cache (only 1: unfold subrelation in *; only 1: firstorder).	0.0160448551178	2
Coq.Classes.Morphisms.Relations.proper_subrelation_proper	40	0.0.0.65	synth with cache (only 1: intros x' x'' Hx' Hx''; only 1: firstorder; only 1: subst; only 1: firstorder).	0.0806410312653	12
Coq.Classes.Morphisms.Relations.pointwise_subrelation	40	0.0	synth with cache (only 1: unfold subrelation in *; only 1: firstorder).	0.0186440944672	2
Coq.Classes.Morphisms.Relations.forall_subrelation	40	2	synth with cache (only 1: firstorder).	0.0195829868317	12
Coq.Classes.Morphisms.iff_impl_subrelation	40	0.0	synth with cache (only 1: reduce; only 1: firstorder).	0.013904094696	2
Coq.Classes.Morphisms.iff_flip_impl_subrelation	40	0	synth with cache (only 1: firstorder).	0.00993800163269	1
Coq.Classes.Morphisms.GenericInstances.respectful_per_obligation_2	40
Coq.Classes.Morphisms.GenericInstances.complement_proper_obligation_1	40
Coq.Classes.Morphisms.GenericInstances.flip_proper_obligation_1	40	7	synth with cache (only 1: firstorder).	0.0466198921204	74
Coq.Classes.Morphisms.GenericInstances.trans_contra_co_morphism_obligation_1	40	11	synth with cache (only 1: firstorder).	0.379642963409	402
Coq.Classes.Morphisms.GenericInstances.trans_contra_inv_impl_morphism_obligation_1	40	9	synth with cache (only 1: firstorder).	1.73503017426	3919
Coq.Classes.Morphisms.GenericInstances.trans_co_impl_morphism_obligation_1	40
Coq.Classes.Morphisms.GenericInstances.trans_sym_co_inv_impl_morphism_obligation_1	40
Coq.Classes.Morphisms.GenericInstances.trans_sym_contra_impl_morphism_obligation_1	40
Coq.Classes.Morphisms.GenericInstances.per_partial_app_morphism_obligation_1	40
Coq.Classes.Morphisms.GenericInstances.trans_co_eq_inv_impl_morphism_obligation_1	40
Coq.Classes.Morphisms.GenericInstances.PER_morphism_obligation_1	40
Coq.Classes.Morphisms.GenericInstances.symmetric_equiv_flip	40	0.64.0	synth with cache (only 1: hnf; only 1: intro; only 1: firstorder).	0.0237669944763	6
Coq.Classes.Morphisms.GenericInstances.compose_proper_obligation_1	40	6	synth with cache (only 1: firstorder).	0.0381991863251	52
Coq.Classes.Morphisms.GenericInstances.reflexive_eq_dom_reflexive	40	3	synth with cache (only 1: simpl_relation).	0.0291640758514	7
Coq.Classes.Morphisms.GenericInstances.respectful_morphism	40
Coq.Classes.Morphisms.GenericInstances.Reflexive_partial_app_morphism	40	8	synth with cache (only 1: simpl_relation).	0.069540977478	99
Coq.Classes.Morphisms.GenericInstances.flip_respectful	40	2	synth with cache (only 1: firstorder).	0.0457599163055	8
Coq.Classes.Morphisms.GenericInstances.flip1	40	1.64.0	synth with cache (only 1: reduce; only 1: apply H; only 1: intuition).	0.0292689800262	16
Coq.Classes.Morphisms.GenericInstances.flip2	40	0	synth with cache (only 1: firstorder).	0.0127351284027	1
Coq.Classes.Morphisms.GenericInstances.eq_subrelation	40	1	synth with cache (only 1: simpl_relation).	0.0196847915649	2
Coq.Classes.Morphisms.GenericInstances.reflexive_proper	40	0	synth with cache (only 1: firstorder).	0.0114932060242	1
Coq.Classes.Morphisms.GenericInstances.proper_eq	40	0	synth with cache (only 1: simpl_relation).	0.0148189067841	1
Coq.Classes.Morphisms.proper_proper	40	1.0.0.0.0.1.0	synth with cache (only 1: reduce; only 1: simpl_relation; only 1: unfold respectful, relation_equivalence, predicate_equivalence in *; only 1: simpl in *; only 1: split; only 1: firstorder; only 1: firstorder).	0.251440048218	152
Coq.Classes.Morphisms.Normalize.proper_normalizes_proper	40	7	synth with cache (only 1: firstorder).	0.152682065964	119
Coq.Classes.Morphisms.Normalize.flip_atom	40	1	synth with cache (only 1: firstorder).	0.0151669979095	2
Coq.Classes.Morphisms.flip_arrow	40
Coq.Classes.Morphisms.proper_sym_flip	40	0	synth with cache (only 1: simpl_relation).	0.0223219394684	1
Coq.Classes.Morphisms.proper_sym_flip_2	40	2.65.3	synth with cache (only 1: intros x x' Hxx'; only 1: unfold respectful; only 1: simpl_relation).	0.734748840332	421
Coq.Classes.Morphisms.proper_sym_impl_iff	40	3.2.64.4.72.1	synth with cache (only 1: intros; only 1: intro p; only 1: firstorder; only 1: rewrite <- H; only 1: simpl_relation; only 1: auto).	11.7530970573	16042
Coq.Classes.Morphisms.proper_sym_impl_iff_2	40	0.0.0.0.0.0.128.0.0.67	synth with cache (only 1: intro H1; only 1: intros A R1 Sym B R2 f Hf; only 1: intros x x' Hxx' y y' Hyy'; only 1: constructor; only 1: apply Hf; only 1: auto; only 1: auto; only 1: apply Hf; only 1: auto; only 1: auto).	1.38224387169	874
Coq.Classes.Morphisms.PartialOrder_proper	40
Coq.Classes.Morphisms.PartialOrder_StrictOrder	40
Coq.Classes.Morphisms.StrictOrder_PreOrder	40
Coq.Classes.Morphisms.StrictOrder_PartialOrder	40
Coq.Classes.RelationPairs.RelCompFun_Instances.RelCompFun_Reflexive	40	0.194	synth with cache (only 1: intros LT; only 1: firstorder).	0.0393002033234	16
Coq.Classes.RelationPairs.RelCompFun_Instances.RelCompFun_Symmetric	40	0	synth with cache (only 1: firstorder).	0.0180900096893	1
Coq.Classes.RelationPairs.RelCompFun_Instances.RelCompFun_Transitive	40	0	synth with cache (only 1: firstorder).	0.0515248775482	1
Coq.Classes.RelationPairs.RelCompFun_Instances.RelCompFun_Irreflexive	40	0	synth with cache (only 1: firstorder).	0.016909122467	1
Coq.Classes.RelationPairs.RelProd_Instances.RelProd_Reflexive	40	1	synth with cache (only 1: firstorder).	0.0179810523987	2
Coq.Classes.RelationPairs.RelProd_Instances.RelProd_Symmetric	40	0	synth with cache (only 1: firstorder).	0.0289809703827	1
Coq.Classes.RelationPairs.RelProd_Instances.RelProd_Transitive	40	0	synth with cache (only 1: firstorder).	0.397553920746	1
Coq.Classes.RelationPairs.RelProd_Instances.FstRel_ProdRel	40	0	synth with cache (only 1: firstorder).	0.0235850811005	1
Coq.Classes.RelationPairs.RelProd_Instances.SndRel_ProdRel	40	0.128	synth with cache (only 1: CRelationClasses.reduce_goal; only 1: firstorder).	0.0317008495331	10
Coq.Classes.RelationPairs.RelProd_Instances.FstRel_sub	40	0	synth with cache (only 1: firstorder).	0.018581867218	1
Coq.Classes.RelationPairs.RelProd_Instances.SndRel_sub	40	0	synth with cache (only 1: firstorder).	0.0196309089661	1
Coq.Classes.RelationPairs.RelProd_Instances.pair_compat	40	0.130	synth with cache (only 1: intros a b; only 1: firstorder).	0.0284199714661	12
Coq.Classes.RelationPairs.RelProd_Instances.fst_compat	40	0	synth with cache (only 1: firstorder).	0.0195891857147	1
Coq.Classes.RelationPairs.RelProd_Instances.snd_compat	40	0	synth with cache (only 1: firstorder).	0.0198659896851	1
Coq.Classes.RelationPairs.RelProd_Instances.RelCompFun_compat	40	0.65.65.196	synth with cache (only 1: intros a b n Ha Hb; only 1: intro LE; only 1: compute in H; only 1: eauto).	0.960242986679	1325
Coq.Classes.DecidableClass.Decidable_sound	40	76.65.3	synth with cache (only 1: intro H; only 1: intro; only 1: apply H0).	0.677013158798	2415
Coq.Classes.DecidableClass.Decidable_complete	40	1.66.79	synth with cache (only 1: intro p; only 1: intros (x, (Hx, Huni)); only 1: assumption).	0.950217962265	3839
Coq.Classes.DecidableClass.Decidable_sound_alt	40
Coq.Classes.DecidableClass.Decidable_complete_alt	40
Coq.Classes.DecidableClass.Decidable_eq_bool_obligation_1	40
Coq.Classes.DecidableClass.Decidable_eq_nat_obligation_1	40	15	synth with cache (only 1: apply Nat.eqb_eq).	3.13233399391	7514
Coq.Classes.DecidableClass.Decidable_le_nat_obligation_1	40	4	synth with cache (only 1: apply Nat.leb_le).	0.0761141777039	148
Coq.Classes.DecidableClass.Decidable_eq_Z_obligation_1	40
Coq.Classes.SetoidDec.unit_eqdec_obligation_1	40	264.462	synth with cache (only 1: destruct x; only 1: easy || now destruct y).	3.56506586075	9054
Coq.Classes.SetoidDec.bool_function_eqdec_obligation_1	40
Coq.Classes.SetoidClass.setoid_refl	40	1	synth with cache (only 1: apply _).	0.0173850059509	2
Coq.Classes.SetoidClass.setoid_sym	40	0	synth with cache (only 1: typeclasses eauto).	0.0163359642029	1
Coq.Classes.SetoidClass.setoid_trans	40	0	synth with cache (only 1: typeclasses eauto).	0.0162718296051	1
Coq.Classes.SetoidClass.nequiv_equiv_trans	40
Coq.Classes.SetoidClass.equiv_nequiv_trans	40	256.192.0.65	synth with cache (only 1: intros n m p Hp; only 1: intros H H1 H2; only 1: rewrite H1; only 1: auto with relations).	0.0791628360748	39
Coq.Classes.Morphisms_Relations.relation_conjunction_morphism	40	67.1	synth with cache (only 1: intros x1 x2 H1 x3 x4 H2; only 1: firstorder  discriminate).	2.30643200874	1613
Coq.Classes.Morphisms_Relations.relation_disjunction_morphism	40	0	synth with cache (only 1: firstorder).	0.509986877441	1
Coq.Classes.Morphisms_Relations.predicate_equivalence_pointwise	40	449.193	synth with cache (only 1: intros H E; only 1: now trivial).	0.115966081619	115
Coq.Classes.Morphisms_Relations.predicate_implication_pointwise	40	1.0	synth with cache (only 1: do 2 red; only 1: auto).	0.0208871364594	3
Coq.Classes.Morphisms_Relations.relation_equivalence_pointwise	40	0	synth with cache (only 1: firstorder).	0.0170021057129	1
Coq.Classes.Morphisms_Relations.subrelation_pointwise	40	0.1.0	synth with cache (only 1: intro; only 1: reduce; only 1: firstorder).	0.0330948829651	4
Coq.Classes.Morphisms_Relations.flip_pointwise_relation	40	0	synth with cache (only 1: firstorder).	0.0193819999695	1
Coq.PArith.Pnat.Pos2Nat.inj_succ	40
Coq.PArith.Pnat.Pos2Nat.inj_add	40
Coq.PArith.Pnat.Pos2Nat.inj_mul	40
Coq.PArith.Pnat.Pos2Nat.inj_1	40	192.0	synth with cache (only 1: unfold to_nat; only 1: do 2 constructor).	0.0506730079651	11
Coq.PArith.Pnat.Pos2Nat.inj_xO	40
Coq.PArith.Pnat.Pos2Nat.inj_xI	40
Coq.PArith.Pnat.Pos2Nat.is_succ	40
Coq.PArith.Pnat.Pos2Nat.is_pos	40
Coq.PArith.Pnat.Pos2Nat.id	40
Coq.PArith.Pnat.Pos2Nat.inj	40
Coq.PArith.Pnat.Pos2Nat.inj_iff	40	0.1.0.0.0.2	synth with cache (only 1: split; only 1: intros H; only 1: now rewrite <- (id p), <- (id q), H; only 1: intros H; only 1: f_equal; only 1: auto).	0.74857211113	712
Coq.PArith.Pnat.Pos2Nat.inj_compare	40
Coq.PArith.Pnat.Pos2Nat.inj_lt	40
Coq.PArith.Pnat.Pos2Nat.inj_le	40
Coq.PArith.Pnat.Pos2Nat.inj_gt	40
Coq.PArith.Pnat.Pos2Nat.inj_ge	40
Coq.PArith.Pnat.Pos2Nat.inj_sub	40
Coq.PArith.Pnat.Pos2Nat.inj_sub_max	40
Coq.PArith.Pnat.Pos2Nat.inj_pred	40
Coq.PArith.Pnat.Pos2Nat.inj_pred_max	40
Coq.PArith.Pnat.Pos2Nat.inj_min	40
Coq.PArith.Pnat.Pos2Nat.inj_max	40
Coq.PArith.Pnat.Pos2Nat.inj_iter	40
Coq.PArith.Pnat.Nat2Pos.id	40
Coq.PArith.Pnat.Nat2Pos.id_max	40
Coq.PArith.Pnat.Nat2Pos.inj	40
Coq.PArith.Pnat.Nat2Pos.inj_iff	40	384.0.0.0.2.128.386.329	synth with cache (only 1: intros q; only 1: repeat red; only 1: intro p; only 1: split; only 1: intros H; only 1: now rewrite <- (id n), <- (id m), H; only 1: intros H; only 1: intuition auto; Nat.Private_OrderTac.Tac.subst_eqns; eauto using (RelationClasses.StrictOrder_Transitive x y z) with *).	27.9513590336	16439
Coq.PArith.Pnat.Nat2Pos.inj_succ	40	0.1.0	synth with cache (only 1: destruct n; only 1: now destruct 1; only 1: trivial).	0.0292408466339	4
Coq.PArith.Pnat.Nat2Pos.inj_pred	40
Coq.PArith.Pnat.Nat2Pos.inj_add	40
Coq.PArith.Pnat.Nat2Pos.inj_mul	40
Coq.PArith.Pnat.Nat2Pos.inj_compare	40
Coq.PArith.Pnat.Nat2Pos.inj_sub	40
Coq.PArith.Pnat.Nat2Pos.inj_min	40
Coq.PArith.Pnat.Nat2Pos.inj_max	40
Coq.PArith.Pnat.Pos2SuccNat.id_succ	40
Coq.PArith.Pnat.Pos2SuccNat.pred_id	40
Coq.PArith.Pnat.SuccNat2Pos.id_succ	40
Coq.PArith.Pnat.SuccNat2Pos.pred_id	40
Coq.PArith.Pnat.SuccNat2Pos.inj	40
Coq.PArith.Pnat.SuccNat2Pos.inj_iff	40	128.0.0.0.0.0.1	synth with cache (only 1: split; only 1: intro H; only 1: apply (f_equal Pos.to_nat) in H; only 1: rewrite !id_succ in H; only 1: now injection H; only 1: intro H; only 1: auto with relations).	0.462840080261	630
Coq.PArith.Pnat.SuccNat2Pos.inv	40
Coq.PArith.Pnat.SuccNat2Pos.inj_succ	40	0.0.0.0	synth with cache (only 1: induction n; only 1: trivial; only 1: simpl; only 1: trivial).	0.0299439430237	4
Coq.PArith.Pnat.SuccNat2Pos.inj_compare	40
Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_mult	40
Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_succ_morphism	40
Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_l_plus_morphism	40
Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_plus_carry_morphism	40
Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_r_plus_morphism	40
Coq.PArith.Pnat.ObsoletePmultNat.ZL6	40	4.0.0.1	synth with cache (only 1: intros a; only 1: unfold Pos.to_nat; only 1: rewrite !Pmult_nat_mult; only 1: now Nat.nzsimpl).	2.38379502296	850
Coq.PArith.Pnat.ObsoletePmultNat.le_Pmult_nat	40
Coq.PArith.BinPos.Pos.eq_dec	40	1	synth with cache (only 1: decide equality).	0.0296649932861	2
Coq.PArith.BinPos.Pos.xI_succ_xO	40	131	synth with cache (only 1: tauto).	0.0152909755707	12
Coq.PArith.BinPos.Pos.succ_discr	40
Coq.PArith.BinPos.Pos.pred_double_spec	40	0	synth with cache (only 1: reflexivity).	0.0171179771423	1
Coq.PArith.BinPos.Pos.succ_pred_double	40
Coq.PArith.BinPos.Pos.pred_double_succ	40
Coq.PArith.BinPos.Pos.double_succ	40	0.0	synth with cache (only 1: simpl; only 1: now f_equal).	0.0196838378906	2
Coq.PArith.BinPos.Pos.pred_double_xO_discr	40	0.0.0.0.1.323	synth with cache (only 1: unfold Decidable.decidable, not; only 1: induction p; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: now f_equal).	0.277647018433	398
Coq.PArith.BinPos.Pos.succ_not_1	40	0	synth with cache (only 1: now destruct p).	0.0319111347198	1
Coq.PArith.BinPos.Pos.pred_succ	40	65.0.1.1.0.0.2.0.0.0.1.0.0	synth with cache (only 1: induction p; only 1: simpl; only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equiv).	0.368531942368	401
Coq.PArith.BinPos.Pos.succ_pred_or	40
Coq.PArith.BinPos.Pos.succ_pred	40	1.0.0.1.0.65.3.5	synth with cache (only 1: induction p; only 1: now destruct p; only 1: intro; only 1: simpl; only 1: apply succ_pred_double; only 1: intro H; only 1: simpl; only 1: now f_equal).	11.5560832024	15513
Coq.PArith.BinPos.Pos.succ_inj	40
Coq.PArith.BinPos.Pos.pred_N_succ	40
Coq.PArith.BinPos.Pos.add_1_r	40	0	synth with cache (only 1: now destruct p).	0.01691198349	1
Coq.PArith.BinPos.Pos.add_1_l	40	0	synth with cache (only 1: now destruct p).	0.0167741775513	1
Coq.PArith.BinPos.Pos.add_carry_spec	40
Coq.PArith.BinPos.Pos.add_comm	40
Coq.PArith.BinPos.Pos.add_succ_r	40
Coq.PArith.BinPos.Pos.add_succ_l	40
Coq.PArith.BinPos.Pos.add_no_neutral	40
Coq.PArith.BinPos.Pos.add_carry_add	40
Coq.PArith.BinPos.Pos.add_reg_r	40
Coq.PArith.BinPos.Pos.add_reg_l	40
Coq.PArith.BinPos.Pos.add_cancel_r	40	258.0.1.2.0	synth with cache (only 1: revert p q; only 1: split; only 1: now apply add_reg_r; only 1: revert p q; only 1: congruence).	2.06585597992	1040
Coq.PArith.BinPos.Pos.add_cancel_l	40
Coq.PArith.BinPos.Pos.add_carry_reg_r	40
Coq.PArith.BinPos.Pos.add_carry_reg_l	40
Coq.PArith.BinPos.Pos.add_assoc	40
Coq.PArith.BinPos.Pos.add_xO	40	0.2	synth with cache (only 1: simpl; only 1: f_equal).	0.0212731361389	4
Coq.PArith.BinPos.Pos.add_xI_pred_double	40
Coq.PArith.BinPos.Pos.add_xO_pred_double	40
Coq.PArith.BinPos.Pos.add_diag	40
Coq.PArith.BinPos.Pos.peano_rect_succ	40
Coq.PArith.BinPos.Pos.peano_rect_base	40	0	synth with cache (only 1: auto).	0.0153460502625	1
Coq.PArith.BinPos.Pos.peano_case	40
Coq.PArith.BinPos.Pos.eq_dep_eq_positive	40
Coq.PArith.BinPos.Pos.PeanoViewUnique	40
Coq.PArith.BinPos.Pos.peano_equiv	40
Coq.PArith.BinPos.Pos.mul_1_l	40	0	synth with cache (only 1: trivial).	0.0602459907532	1
Coq.PArith.BinPos.Pos.mul_1_r	40	0.0.0.2.0.1.0.14	synth with cache (only 1: induction p as [p IHp| p IHp| ]; only 1: simpl; only 1: f_equal; only 1: auto; only 1: simpl; only 1: f_equal; only 1: auto; only 1: now f_equal).	19.3650999069	54928
Coq.PArith.BinPos.Pos.mul_xO_r	40
Coq.PArith.BinPos.Pos.mul_xI_r	40
Coq.PArith.BinPos.Pos.mul_comm	40
Coq.PArith.BinPos.Pos.mul_add_distr_l	40
Coq.PArith.BinPos.Pos.mul_add_distr_r	40
Coq.PArith.BinPos.Pos.mul_assoc	40
Coq.PArith.BinPos.Pos.mul_succ_l	40
Coq.PArith.BinPos.Pos.mul_succ_r	40
Coq.PArith.BinPos.Pos.mul_xI_mul_xO_discr	40
Coq.PArith.BinPos.Pos.mul_xO_discr	40
Coq.PArith.BinPos.Pos.mul_reg_r	40
Coq.PArith.BinPos.Pos.mul_reg_l	40
Coq.PArith.BinPos.Pos.mul_cancel_r	40	0.1.64.0.0	synth with cache (only 1: split; only 1: revert q r; only 1: intros UIP_refl y; only 1: apply mul_reg_r; only 1: congruence).	0.182208061218	150
Coq.PArith.BinPos.Pos.mul_cancel_l	40	0.1.2.0	synth with cache (only 1: split; only 1: rewrite 2!(mul_comm r); only 1: apply mul_reg_r; only 1: congruence).	1.8001408577	2835
Coq.PArith.BinPos.Pos.mul_eq_1_l	40	0.0.0.0.0.2.0.0.1.0.0.2.0.0	synth with cache (only 1: destruct p; only 1: intros; only 1: reflexivity || apply f_equal || exfalso; only 1: contradict H; only 1: induction q; only 1: discriminate; only 1: rewrite mul_xO_r; only 1: intro H; only 1: discriminate; only 1: discriminate; only 1: intros; only 1: destr_eq H; only 1: intro; only 1: now f_equal).	1.46095705032	3605
Coq.PArith.BinPos.Pos.mul_eq_1_r	40	0	synth with cache (only 1: now destruct p, q).	0.0412368774414	1
Coq.PArith.BinPos.Pos.square_xO	40	1.5.0	synth with cache (only 1: simpl; only 1: f_equal; only 1: auto using mul_xI_r, mul_xO_r, mul_1_r).	0.782089948654	859
Coq.PArith.BinPos.Pos.square_xI	40
Coq.PArith.BinPos.Pos.iter_swap_gen	40
Coq.PArith.BinPos.Pos.iter_swap	40
Coq.PArith.BinPos.Pos.iter_succ	40
Coq.PArith.BinPos.Pos.iter_add	40
Coq.PArith.BinPos.Pos.iter_invariant	40
Coq.PArith.BinPos.Pos.pow_1_r	40	0.0.0.1.202.0.0.0.3.201	synth with cache (only 1: apply PeanoNat.Nat.succ_inj; only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: apply PeanoNat.Nat.succ_inj; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal).	34.0473060608	53375
Coq.PArith.BinPos.Pos.pow_succ_r	40
Coq.PArith.BinPos.Pos.square_spec	40
Coq.PArith.BinPos.Pos.sub_mask_succ_r	40
Coq.PArith.BinPos.Pos.sub_mask_carry_spec	40
Coq.PArith.BinPos.Pos.sub_mask_spec	40
Coq.PArith.BinPos.Pos.sub_mask_nul_iff	40
Coq.PArith.BinPos.Pos.sub_mask_diag	40	0.0.0.0.0.0.0	synth with cache (only 1: induction p; only 1: simpl; only 1: now rewrite ?IHp; only 1: simpl; only 1: now rewrite ?IHp; only 1: simpl; only 1: now rewrite ?IHp).	0.0394811630249	7
Coq.PArith.BinPos.Pos.sub_mask_add	40
Coq.PArith.BinPos.Pos.sub_mask_add_diag_l	40
Coq.PArith.BinPos.Pos.sub_mask_pos_iff	40
Coq.PArith.BinPos.Pos.sub_mask_add_diag_r	40	448.0.0.0.0.69.1.0.0	synth with cache (only 1: case sub_mask_spec; only 1: intros H; only 1: rewrite add_comm in H; only 1: symmetry in H; only 1: elim (add_no_neutral _ _ H); only 1: intros r H; only 1: rewrite <- add_assoc, add_comm in H; only 1: elim (add_no_neutral _ _ H); only 1: reflexivity || destruct H).	5.23816013336	12704
Coq.PArith.BinPos.Pos.sub_mask_neg_iff	40
Coq.PArith.BinPos.Pos.eqb_eq	40
Coq.PArith.BinPos.Pos.ltb_lt	40
Coq.PArith.BinPos.Pos.leb_le	40
Coq.PArith.BinPos.Pos.compare_cont_spec	40
Coq.PArith.BinPos.Pos.compare_cont_Eq	40
Coq.PArith.BinPos.Pos.compare_cont_Lt_Gt	40
Coq.PArith.BinPos.Pos.compare_cont_Lt_Lt	40	1.0.0.0.1.1	synth with cache (only 1: unfold leb, le; only 1: rewrite compare_cont_spec; only 1: destruct (p ?= q); only 1: now split; only 1: easy'; only 1: now split).	1.22142601013	1106
Coq.PArith.BinPos.Pos.compare_cont_Gt_Lt	40	0.0.0.0.3.0	synth with cache (only 1: rewrite compare_cont_spec; only 1: unfold ltb, lt; only 1: destruct (p ?= q); only 1: now split; only 1: now split; only 1: now split).	1.65597701073	2303
Coq.PArith.BinPos.Pos.compare_cont_Gt_Gt	40
Coq.PArith.BinPos.Pos.compare_cont_Lt_not_Lt	40	0.0.0.0.0.0	synth with cache (only 1: unfold gt; only 1: rewrite compare_cont_spec; only 1: destruct (p ?= q); only 1: easy'; only 1: easy'; only 1: easy').	0.0591900348663	6
Coq.PArith.BinPos.Pos.compare_cont_Lt_not_Gt	40	0.0.0.0.0.1	synth with cache (only 1: rewrite compare_cont_spec; only 1: unfold le; only 1: destruct (p ?= q); only 1: now split; only 1: now split; only 1: now split).	0.254219055176	94
Coq.PArith.BinPos.Pos.compare_cont_Gt_not_Lt	40	0.0.0.0.0.1	synth with cache (only 1: rewrite compare_cont_spec; only 1: unfold ge; only 1: destruct (p ?= q); only 1: now split; only 1: now split; only 1: now split).	0.208839893341	89
Coq.PArith.BinPos.Pos.compare_cont_Gt_not_Gt	40	0.0.0.0.0.2	synth with cache (only 1: rewrite compare_cont_spec; only 1: unfold lt; only 1: destruct (p ?= q); only 1: easy'; only 1: easy'; only 1: easy').	0.234117984772	154
Coq.PArith.BinPos.Pos.compare_xO_xO	40	65	synth with cache (only 1: now PeanoNat.Nat.nzsimpl).	0.0289869308472	6
Coq.PArith.BinPos.Pos.compare_xI_xI	40	0	synth with cache (only 1: reflexivity).	0.0148451328278	1
Coq.PArith.BinPos.Pos.compare_xI_xO	40
Coq.PArith.BinPos.Pos.compare_xO_xI	40	0.3.5.384.0.3.1	synth with cache (only 1: unfold compare; only 1: rewrite compare_cont_spec; only 1: unfold compare; only 1: Bool.destr_bool; only 1: rewrite compare_cont_spec; only 1: unfold compare; only 1: now destruct compare_cont; split; try apply comparison_eq_stable).	12.2548701763	27421
Coq.PArith.BinPos.Pos.compare_sub_mask	40
Coq.PArith.BinPos.Pos.lt_iff_add	40
Coq.PArith.BinPos.Pos.gt_iff_add	40
Coq.PArith.BinPos.Pos.compare_cont_refl	40	578.3.1.1.7	synth with cache (only 1: induction p; only 1: now f_equal; only 1: simpl; only 1: now destruct p; only 1: firstorder).	0.774142980576	2905
Coq.PArith.BinPos.Pos.compare_cont_antisym	40
Coq.PArith.BinPos.Pos.compare_eq_iff	40
Coq.PArith.BinPos.Pos.compare_antisym	40
Coq.PArith.BinPos.Pos.compare_lt_iff	40	1.0	synth with cache (only 1: unfold lt; only 1: now split).	0.0756568908691	36
Coq.PArith.BinPos.Pos.compare_le_iff	40	0.0.1	synth with cache (only 1: unfold le; only 1: unfold compare; only 1: now destruct compare_cont; split; try apply comparison_eq_stable).	0.0288400650024	4
Coq.PArith.BinPos.Pos.gt_lt_iff	40	2.1	synth with cache (only 1: unfold gt; only 1: now rewrite <- compare_lt_iff, compare_antisym, CompOpp_iff).	2.99637103081	4704
Coq.PArith.BinPos.Pos.gt_lt	40	0.0	synth with cache (only 1: unfold lt, gt; only 1: now rewrite compare_antisym, CompOpp_iff).	0.0268061161041	2
Coq.PArith.BinPos.Pos.lt_gt	40	0	synth with cache (only 1: apply gt_lt_iff).	0.0163660049438	1
Coq.PArith.BinPos.Pos.ge_le_iff	40	1.1.2	synth with cache (only 1: unfold ge; only 1: unfold le; only 1: now rewrite compare_antisym, CompOpp_iff).	0.395732164383	294
Coq.PArith.BinPos.Pos.ge_le	40	0.0	synth with cache (only 1: unfold le, ge; only 1: now rewrite compare_antisym, CompOpp_iff).	0.0282919406891	2
Coq.PArith.BinPos.Pos.le_ge	40	0	synth with cache (only 1: apply ge_le_iff).	0.0155980587006	1
Coq.PArith.BinPos.Pos.compare_succ_r	40
Coq.PArith.BinPos.Pos.compare_succ_l	40
Coq.PArith.BinPos.Pos.lt_succ_r	40
Coq.PArith.BinPos.Pos.lt_succ_diag_r	40
Coq.PArith.BinPos.Pos.compare_succ_succ	40
Coq.PArith.BinPos.Pos.le_1_l	40	2.66.323.3	synth with cache (only 1: induction p using peano_rect; only 1: intro LT; only 1: easy'; only 1: now destruct p).	2.41046595573	7531
Coq.PArith.BinPos.Pos.nlt_1_r	40	5	synth with cache (only 1: now destruct p).	0.242058992386	392
Coq.PArith.BinPos.Pos.lt_1_succ	40	1	synth with cache (only 1: now destruct p).	0.0473167896271	62
Coq.PArith.BinPos.Pos.le_nlt	40	0.0	synth with cache (only 1: unfold lt, le; only 1: now rewrite compare_antisym, CompOpp_iff).	0.0222008228302	2
Coq.PArith.BinPos.Pos.lt_nle	40	0.4	synth with cache (only 1: unfold ltb, lt; only 1: now rewrite <- compare_nle_iff, compare_antisym, CompOpp_iff).	0.788010120392	640
Coq.PArith.BinPos.Pos.lt_le_incl	40	0.0.3	synth with cache (only 1: unfold lt, le; only 1: rewrite compare_antisym; only 1: now do 2 destruct compare).	0.932317018509	1356
Coq.PArith.BinPos.Pos.lt_lt_succ	40	449.513.68	synth with cache (only 1: rewrite PeanoNat.Nat.lt_succ_r; only 1: intro A; only 1: congruence).	1.46782398224	3081
Coq.PArith.BinPos.Pos.succ_lt_mono	40
Coq.PArith.BinPos.Pos.succ_le_mono	40
Coq.PArith.BinPos.Pos.lt_trans	40
Coq.PArith.BinPos.Pos.lt_ind	40
Coq.PArith.BinPos.Pos.lt_strorder	40
Coq.PArith.BinPos.Pos.lt_compat	40	257.1.512	synth with cache (only 1: intros m Hm IHm; only 1: unfold lt; only 1: simpl_relation).	0.109724998474	146
Coq.PArith.BinPos.Pos.lt_total	40
Coq.PArith.BinPos.Pos.le_refl	40	0.1	synth with cache (only 1: apply lt_eq_cases; only 1: now right).	0.0261180400848	3
Coq.PArith.BinPos.Pos.le_lt_trans	40
Coq.PArith.BinPos.Pos.lt_le_trans	40	0.0.0.0.449	synth with cache (only 1: intros a H; only 1: apply le_lteq in H; only 1: destruct H; only 1: now apply lt_trans with m; only 1: now subst).	0.313162088394	287
Coq.PArith.BinPos.Pos.le_trans	40
Coq.PArith.BinPos.Pos.le_succ_l	40
Coq.PArith.BinPos.Pos.le_antisym	40
Coq.PArith.BinPos.Pos.le_preorder	40	1.0.68.5.0	synth with cache (only 1: split; only 1: unfold gt, le, compare; only 1: intro p; only 1: now rewrite compare_refl; only 1: exact PeanoNat.Nat.le_trans).	1.39596104622	3905
Coq.PArith.BinPos.Pos.le_partorder	40
Coq.PArith.BinPos.Pos.add_compare_mono_l	40
Coq.PArith.BinPos.Pos.add_compare_mono_r	40
Coq.PArith.BinPos.Pos.lt_add_diag_r	40
Coq.PArith.BinPos.Pos.add_lt_mono_l	40
Coq.PArith.BinPos.Pos.add_lt_mono_r	40	0.0.0.1	synth with cache (only 1: rewrite 2!(add_comm _ p); only 1: unfold lt; only 1: rewrite add_compare_mono_l; only 1: apply iff_refl).	0.0718688964844	63
Coq.PArith.BinPos.Pos.add_lt_mono	40
Coq.PArith.BinPos.Pos.add_le_mono_l	40
Coq.PArith.BinPos.Pos.add_le_mono_r	40	0.2.0	synth with cache (only 1: unfold le; only 1: rewrite add_compare_mono_r; only 1: apply iff_refl).	0.0874669551849	95
Coq.PArith.BinPos.Pos.add_le_mono	40
Coq.PArith.BinPos.Pos.mul_compare_mono_l	40
Coq.PArith.BinPos.Pos.mul_compare_mono_r	40
Coq.PArith.BinPos.Pos.mul_lt_mono_l	40
Coq.PArith.BinPos.Pos.mul_lt_mono_r	40	0.0.0.3	synth with cache (only 1: rewrite 2!(mul_comm _ p); only 1: unfold lt; only 1: rewrite mul_compare_mono_l; only 1: apply iff_refl).	0.885334968567	1056
Coq.PArith.BinPos.Pos.mul_lt_mono	40
Coq.PArith.BinPos.Pos.mul_le_mono_l	40	0.3.64.64.0	synth with cache (only 1: unfold le; only 1: rewrite (PeanoNat.Nat.mul_comm p); only 1: rewrite (PeanoNat.Nat.mul_comm p); only 1: rewrite mul_compare_mono_r; only 1: apply iff_refl).	0.615540027618	453
Coq.PArith.BinPos.Pos.mul_le_mono_r	40	0.4.0	synth with cache (only 1: unfold le; only 1: rewrite mul_compare_mono_r; only 1: apply iff_refl).	0.692320823669	602
Coq.PArith.BinPos.Pos.mul_le_mono	40
Coq.PArith.BinPos.Pos.lt_add_r	40	0.0	synth with cache (only 1: rewrite lt_iff_add; only 1: now exists q).	0.0196869373322	2
Coq.PArith.BinPos.Pos.lt_not_add_l	40	1.2.0.324.3.450	synth with cache (only 1: hnf; only 1: rewrite lt_iff_add; only 1: destruct 1; only 1: rewrite <- add_assoc, add_comm in H; only 1: set (m := (p * q)~0); only 1: elim (add_no_neutral _ _ H)).	30.8098888397	80059
Coq.PArith.BinPos.Pos.pow_gt_1	40
Coq.PArith.BinPos.Pos.sub_1_r	40	1.0.1.0.1.0.2	synth with cache (only 1: induction p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: trivial).	0.197263002396	253
Coq.PArith.BinPos.Pos.pred_sub	40	0	synth with cache (only 1: now destruct p).	0.0153889656067	1
Coq.PArith.BinPos.Pos.sub_succ_r	40
Coq.PArith.BinPos.Pos.sub_mask_pos'	40
Coq.PArith.BinPos.Pos.sub_mask_pos	40	1.0.0.0	synth with cache (only 1: rewrite lt_iff_add; only 1: intros (r, Hr); only 1: exists r; only 1: now apply sub_mask_pos_iff).	0.0356738567352	5
Coq.PArith.BinPos.Pos.sub_add	40
Coq.PArith.BinPos.Pos.add_sub	40
Coq.PArith.BinPos.Pos.mul_sub_distr_l	40
Coq.PArith.BinPos.Pos.mul_sub_distr_r	40
Coq.PArith.BinPos.Pos.sub_lt_mono_l	40
Coq.PArith.BinPos.Pos.sub_compare_mono_l	40
Coq.PArith.BinPos.Pos.sub_compare_mono_r	40
Coq.PArith.BinPos.Pos.sub_lt_mono_r	40
Coq.PArith.BinPos.Pos.sub_decr	40
Coq.PArith.BinPos.Pos.add_sub_assoc	40
Coq.PArith.BinPos.Pos.sub_add_distr	40
Coq.PArith.BinPos.Pos.sub_sub_distr	40
Coq.PArith.BinPos.Pos.sub_xO_xO	40
Coq.PArith.BinPos.Pos.sub_xI_xI	40	0.0.0.0	synth with cache (only 1: intros H; only 1: unfold sub; only 1: simpl; only 1: now destruct (sub_mask_pos n m H) as (p, ->)).	0.0299289226532	4
Coq.PArith.BinPos.Pos.sub_xI_xO	40	0.0.0.0	synth with cache (only 1: intros H; only 1: unfold sub; only 1: simpl; only 1: now destruct (sub_mask_pos n m H) as (p, ->)).	0.0296220779419	4
Coq.PArith.BinPos.Pos.sub_xO_xI	40
Coq.PArith.BinPos.Pos.sub_mask_neg_iff'	40
Coq.PArith.BinPos.Pos.sub_mask_neg	40
Coq.PArith.BinPos.Pos.sub_le	40
Coq.PArith.BinPos.Pos.sub_lt	40	0.0.0.0.0.0.5	synth with cache (only 1: unfold lt; only 1: unfold le, sub; only 1: rewrite compare_sub_mask; only 1: destruct sub_mask; only 1: congruence; only 1: easy'; only 1: easy').	4.72180199623	4642
Coq.PArith.BinPos.Pos.sub_diag	40
Coq.PArith.BinPos.Pos.size_nat_monotone	40
Coq.PArith.BinPos.Pos.size_gt	40
Coq.PArith.BinPos.Pos.size_le	40
Coq.PArith.BinPos.Pos.max_l	40
Coq.PArith.BinPos.Pos.max_r	40	0.0.1.0.0.0.0.0	synth with cache (only 1: intros x y H; only 1: unfold max; only 1: case compare_spec; only 1: auto; only 1: auto; only 1: intros H'; only 1: apply le_nlt in H; only 1: now elim H).	0.219419002533	203
Coq.PArith.BinPos.Pos.min_l	40
Coq.PArith.BinPos.Pos.min_r	40	128.1.1.0.0.0.2.1.0.0.320.0.0	synth with cache (only 1: unfold le, min; only 1: intros x y; only 1: firstorder; only 1: case compare_spec; only 1: auto; only 1: intros H'; only 1: rewrite compare_antisym, CompOpp_iff in H; only 1: apply le_nlt in H; only 1: apply le_nlt in H; only 1: now elim H; only 1: rewrite compare_antisym, CompOpp_iff in H; only 1: rewrite compare_antisym, CompOpp_iff in H; only 1: now split).	19.9862170219	34378
Coq.PArith.BinPos.Pos.max_1_l	40	388	synth with cache (only 1: now induction n).	0.0602471828461	80
Coq.PArith.BinPos.Pos.max_1_r	40	0.0.0.0.0.0.0.0	synth with cache (only 1: unfold max; only 1: case compare_spec; only 1: auto; only 1: intros H; only 1: apply lt_nle in H; only 1: elim H; only 1: apply le_1_l; only 1: auto).	0.0450260639191	8
Coq.PArith.BinPos.Pos.min_1_l	40	0.1	synth with cache (only 1: apply min_l; only 1: apply le_1_l).	0.0168440341949	3
Coq.PArith.BinPos.Pos.min_1_r	40	0.0.0.0.0.0.0.0	synth with cache (only 1: unfold min; only 1: case compare_spec; only 1: auto; only 1: intros H; only 1: apply lt_nle in H; only 1: elim H; only 1: apply le_1_l; only 1: auto).	0.0452299118042	8
Coq.PArith.BinPos.Pos.succ_max_distr	40
Coq.PArith.BinPos.Pos.succ_min_distr	40
Coq.PArith.BinPos.Pos.add_max_distr_l	40	1.0.768.512.320.2	synth with cache (only 1: apply max_monotone; only 1: intros q; only 1: intros H ?; only 1: induction m using peano_ind; only 1: now apply add_le_mono_l; only 1: auto).	0.70249414444	928
Coq.PArith.BinPos.Pos.add_max_distr_r	40
Coq.PArith.BinPos.Pos.add_min_distr_l	40	0.0.0.4	synth with cache (only 1: apply min_mono; only 1: eauto with *; only 1: intros x x'; only 1: apply add_le_mono_l).	0.234894037247	240
Coq.PArith.BinPos.Pos.add_min_distr_r	40	0.0.0.2	synth with cache (only 1: rewrite 3!(add_comm _ p); only 1: apply min_monotone; only 1: intros x x'; only 1: apply add_le_mono_l).	0.0855829715729	61
Coq.PArith.BinPos.Pos.mul_max_distr_l	40	0.0.0.64.2	synth with cache (only 1: apply max_monotone; only 1: intros [q| q| ] r H; only 1: now apply mul_le_mono_l; only 1: now apply mul_le_mono_l; only 1: now apply mul_le_mono_l).	0.367254972458	344
Coq.PArith.BinPos.Pos.mul_max_distr_r	40
Coq.PArith.BinPos.Pos.mul_min_distr_l	40	0.0.4	synth with cache (only 1: apply min_monotone; only 1: intros x x'; only 1: apply mul_le_mono_l).	1.81173491478	1216
Coq.PArith.BinPos.Pos.mul_min_distr_r	40	0.0.0.1	synth with cache (only 1: rewrite 3!(mul_comm _ p); only 1: apply min_monotone; only 1: intros x x'; only 1: apply mul_le_mono_l).	0.0323739051819	5
Coq.PArith.BinPos.Pos.iter_op_succ	40	1.4.0.1.0.513.66.0	synth with cache (only 1: induction p; only 1: intro; only 1: pose proof H as H'; only 1: simpl; only 1: now rewrite ?H, ?IHp; only 1: simpl; only 1: trivial; only 1: firstorder).	25.7021050453	59266
Coq.PArith.BinPos.Pos.of_nat_succ	40	0.7.0.0.2.0.0.72	synth with cache (only 1: destruct n; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: induction n; only 1: auto; only 1: f_equal; only 1: trivial).	3.63324403763	3538
Coq.PArith.BinPos.Pos.pred_of_succ_nat	40
Coq.PArith.BinPos.Pos.succ_of_nat	40
Coq.PArith.BinPos.Pos.sqrtrem_step_spec	40
Coq.PArith.BinPos.Pos.sqrtrem_spec	40
Coq.PArith.BinPos.Pos.sqrt_spec	40
Coq.PArith.BinPos.Pos.divide_add_cancel_l	40
Coq.PArith.BinPos.Pos.divide_xO_xI	40
Coq.PArith.BinPos.Pos.divide_xO_xO	40
Coq.PArith.BinPos.Pos.divide_mul_l	40
Coq.PArith.BinPos.Pos.divide_mul_r	40
Coq.PArith.BinPos.Pos.ggcdn_gcdn	40
Coq.PArith.BinPos.Pos.ggcd_gcd	40
Coq.PArith.BinPos.Pos.ggcdn_correct_divisors	40
Coq.PArith.BinPos.Pos.ggcd_correct_divisors	40
Coq.PArith.BinPos.Pos.gcd_divide_l	40
Coq.PArith.BinPos.Pos.gcd_divide_r	40
Coq.PArith.BinPos.Pos.gcdn_greatest	40
Coq.PArith.BinPos.Pos.gcd_greatest	40
Coq.PArith.BinPos.Pos.ggcd_greatest	40
Coq.PArith.BinPos.Peqb_true_eq	40
Coq.PArith.BinPos.Pcompare_eq_Gt	40	2	synth with cache (only 1: reflexivity).	0.0175378322601	3
Coq.PArith.BinPos.Pminus_mask_Gt	40
Coq.PArith.BinPos.Pplus_minus	40
Coq.PArith.BinPos.Dcompare	40	0.4.0.64.25	synth with cache (only 1: intro H; only 1: destruct H; only 1: now intuition; only 1: tauto; only 1: now intuition).	7.99025797844	37150
Coq.Arith.Le.le_n_0_eq	40	0.1	synth with cache (only 1: inversion 1; only 1: now subst).	0.221944093704	113
Coq.Arith.Le.le_elim_rel	40
Coq.Arith.Even.even_equiv	40
Coq.Arith.Even.odd_equiv	40
Coq.Arith.Even.even_or_odd	40	197.64.129.74.64.131	synth with cache (only 1: Nat.cases ltac:(n); only 1: intuition; only 1: Nat.induct n; only 1: intuition; only 1: intro H; only 1: CRelationClasses.simpl_crelation).	16.7626137733	45060
Coq.Arith.Even.even_odd_dec	40	0.0.0.0.0	synth with cache (only 1: induction n; only 1: auto with arith; only 1: elim IHn; only 1: auto with arith; only 1: auto with arith).	0.0271701812744	5
Coq.Arith.Even.not_even_and_odd	40	4.0.2.0.4.0	synth with cache (only 1: induction n; only 1: inversion_clear 1; only 1: inversion_clear 1; only 1: inversion_clear 1; only 1: inversion_clear 1; only 1: tauto).	11.3848907948	15406
Coq.Arith.Even.even_plus_split	40
Coq.Arith.Even.odd_plus_split	40	0	synth with cache (only 1: parity_binop).	0.150540828705	1
Coq.Arith.Even.even_even_plus	40
Coq.Arith.Even.odd_plus_l	40	0	synth with cache (only 1: parity_binop).	0.0747919082642	1
Coq.Arith.Even.odd_plus_r	40	0	synth with cache (only 1: parity_binop).	0.197978019714	1
Coq.Arith.Even.odd_even_plus	40	0	synth with cache (only 1: parity_binop).	0.0714190006256	1
Coq.Arith.Even.even_plus_aux	40	0.0.4	synth with cache (only 1: split; only 1: parity_binop; only 1: parity_binop).	1.06419706345	371
Coq.Arith.Even.even_plus_even_inv_r	40	0	synth with cache (only 1: parity_binop).	0.12423992157	1
Coq.Arith.Even.even_plus_even_inv_l	40	0	synth with cache (only 1: parity_binop).	0.084009885788	1
Coq.Arith.Even.even_plus_odd_inv_r	40	0	synth with cache (only 1: parity_binop).	0.0863430500031	1
Coq.Arith.Even.even_plus_odd_inv_l	40	0	synth with cache (only 1: parity_binop).	0.0914130210876	1
Coq.Arith.Even.odd_plus_even_inv_l	40	0	synth with cache (only 1: parity_binop).	0.0731129646301	1
Coq.Arith.Even.odd_plus_even_inv_r	40	0	synth with cache (only 1: parity_binop).	0.0718438625336	1
Coq.Arith.Even.odd_plus_odd_inv_l	40	0	synth with cache (only 1: parity_binop).	0.0721809864044	1
Coq.Arith.Even.odd_plus_odd_inv_r	40	0	synth with cache (only 1: parity_binop).	0.0790410041809	1
Coq.Arith.Even.even_mult_aux	40	0	synth with cache (only 1: parity_binop).	0.207757949829	1
Coq.Arith.Even.even_mult_l	40	1.450	synth with cache (only 1: compute; only 1: parity_binop).	0.761636018753	740
Coq.Arith.Even.even_mult_r	40	0	synth with cache (only 1: parity_binop).	0.0569410324097	1
Coq.Arith.Even.even_mult_inv_r	40	0	synth with cache (only 1: parity_binop).	0.143676042557	1
Coq.Arith.Even.even_mult_inv_l	40	0	synth with cache (only 1: parity_binop).	0.08349609375	1
Coq.Arith.Even.odd_mult	40	0	synth with cache (only 1: parity_binop).	0.0868299007416	1
Coq.Arith.Even.odd_mult_inv_l	40	0	synth with cache (only 1: parity_binop).	0.0765829086304	1
Coq.Arith.Even.odd_mult_inv_r	40	0	synth with cache (only 1: parity_binop).	0.0576949119568	1
Coq.Arith.Minus.minus_n_O	40	0	synth with cache (only 1: now destruct n).	0.0181639194489	1
Coq.Arith.Minus.minus_Sn_m	40
Coq.Arith.Minus.pred_of_minus	40	0	synth with cache (only 1: now Nat.nzsimpl').	0.0380601882935	1
Coq.Arith.Minus.minus_diag_reverse	40	386.193.192.391.9	synth with cache (only 1: induction n; only 1: reflexivity || destruct H; only 1: induction n; only 1: Nat.auto'; only 1: apply IHn).	1.49356603622	6965
Coq.Arith.Minus.minus_plus_simpl_l_reverse	40	65.0.0.0	synth with cache (only 1: nzinduct p; only 1: now Nat.nzsimpl; only 1: intro p; only 1: intuition).	0.246646165848	35
Coq.Arith.Minus.plus_minus	40
Coq.Arith.Minus.minus_plus	40	256.0.10.71	synth with cache (only 1: nzinduct n; only 1: apply Nat.sub_0_r; only 1: intro; only 1: auto with *).	21.1805779934	21851
Coq.Arith.Minus.le_plus_minus_r	40
Coq.Arith.Minus.le_plus_minus	40
Coq.Arith.Minus.lt_O_minus_lt	40
Coq.Arith.Minus.not_le_minus_0	40
Coq.Arith.Between.Between.bet_eq	40	517.65	synth with cache (only 1: intros n IH; only 1: RelationClasses.simpl_relation).	0.299705982208	717
Coq.Arith.Between.Between.between_le	40	256.0.5	synth with cache (only 1: induction 1; only 1: auto with arith; only 1: firstorder).	0.883683204651	1888
Coq.Arith.Between.Between.between_Sk_l	40
Coq.Arith.Between.Between.between_restr	40	259.2.1.195.65	synth with cache (only 1: intro EQ; only 1: intros op Hop; only 1: induction 1; only 1: trivial; only 1: firstorder).	27.9059250355	59843
Coq.Arith.Between.Between.exists_le_S	40	64.704.5	synth with cache (only 1: induction 1; only 1: now constructor; only 1: auto with *).	1.56161403656	2592
Coq.Arith.Between.Between.exists_S_le	40
Coq.Arith.Between.Between.in_int_intro	40	256.65	synth with cache (only 1: intro H; only 1: CRelationClasses.simpl_crelation).	0.0387740135193	25
Coq.Arith.Between.Between.in_int_lt	40	2.192	synth with cache (only 1: inversion 1; only 1: PeanoNat.Nat.order).	0.0425410270691	25
Coq.Arith.Between.Between.in_int_p_Sq	40
Coq.Arith.Between.Between.in_int_S	40	0.0	synth with cache (only 1: intros p q r []; only 1: auto with arith).	0.0199069976807	2
Coq.Arith.Between.Between.in_int_Sp_q	40	0.0	synth with cache (only 1: intros * []; only 1: auto with arith).	0.0191910266876	2
Coq.Arith.Between.Between.between_in_int	40
Coq.Arith.Between.Between.in_int_between	40	0.1.0.2	synth with cache (only 1: induction 1; only 1: intros; only 1: auto with arith; only 1: auto with arith).	0.346652984619	397
Coq.Arith.Between.Between.exists_in_int	40
Coq.Arith.Between.Between.in_int_exists	40	65.0.322.64.8.128	synth with cache (only 1: intros a b Hab; only 1: inversion 1; only 1: intuition; only 1: elim H1; only 1: auto with arith; only 1: CRelationClasses.simpl_crelation).	36.9041790962	109372
Coq.Arith.Between.Between.between_or_exists	40
Coq.Arith.Between.Between.between_not_exists	40
Coq.Arith.Between.Between.nth_le	40
Coq.Arith.Between.Between.event_O	40	258.130.269.1	synth with cache (only 1: inversion 1; only 1: firstorder; only 1: inversion H; only 1: Tactics.program_simpl).	2.29685711861	13925
Coq.Arith.Peano_dec.O_or_S	40
Coq.Arith.Peano_dec.dec_eq_nat	40	641.1.0.0.576.193.0.5.454	synth with cache (only 1: Nat.double_induct n m; only 1: destruct m; only 1: (right; Nat.order) || (left; Nat.order); only 1: now constructor; only 1: compute; only 1: intro n; only 1: now right; only 1: intros n m H; only 1: firstorder).	32.4257547855	51076
Coq.Arith.Peano_dec.le_unique	40
Coq.Arith.Mult.mult_assoc_reverse	40
Coq.Arith.Mult.mult_is_O	40	192.0.0.0.0.65.133.1.2	synth with cache (only 1: destruct n; only 1: intro H; only 1: (right; Nat.order) || (left; Nat.order); only 1: revert m; only 1: destruct m; only 1: intro; only 1: now right; only 1: intro H; only 1: now Nat.nzsimpl').	6.11224007607	15060
Coq.Arith.Mult.mult_is_one	40
Coq.Arith.Mult.mult_O_le	40
Coq.Arith.Mult.mult_le_compat_l	40
Coq.Arith.Mult.mult_le_compat_r	40
Coq.Arith.Mult.mult_le_compat	40
Coq.Arith.Mult.mult_S_lt_compat_l	40
Coq.Arith.Mult.mult_lt_compat_l	40
Coq.Arith.Mult.mult_lt_compat_r	40
Coq.Arith.Mult.mult_S_le_reg_l	40
Coq.Arith.Mult.odd_even_lem	40
Coq.Arith.Mult.mult_acc_aux	40
Coq.Arith.Mult.mult_tail_mult	40
Coq.Arith.Div2.ind_0_1_SS	40
Coq.Arith.Div2.lt_div2	40
Coq.Arith.Div2.even_div2	40
Coq.Arith.Div2.odd_div2	40
Coq.Arith.Div2.div2_even	40
Coq.Arith.Div2.div2_odd	40
Coq.Arith.Div2.even_odd_div2	40	515.0.1.0.0.0.0.0.129.0.0.0.1.0.1.0.0.0.0.1.5	synth with cache (only 1: split; only 1: split; only 1: rewrite even_equiv; only 1: intros (p, ->); only 1: rewrite Nat.div2_succ_double; only 1: apply Nat.div2_double; only 1: destruct (even_or_odd n) as [Ev| Od]; only 1: trivial; only 1: apply odd_div2 in Od; only 1: rewrite <- Od; only 1: intro Od'; only 1: elim (n_Sn _ Od'); only 1: constructor; only 1: rewrite odd_equiv; only 1: intros (p, ->); only 1: rewrite Nat.add_1_r, Nat.div2_succ_double; only 1: simpl; only 1: f_equal; only 1: symmetry; only 1: apply Nat.div2_double; only 1: firstorder).	10.1828410625	9222
Coq.Arith.Div2.double_S	40	2.449.256.2.261.0.7.201	synth with cache (only 1: nzinduct n; only 1: now Nat.nzsimpl'; only 1: intro n; only 1: Nat.induct n; only 1: now Nat.nzsimpl; only 1: RelationClasses.reduce_goal; only 1: compute; only 1: auto).	15.2591512203	26787
Coq.Arith.Div2.double_plus	40
Coq.Arith.Div2.even_odd_double	40
Coq.Arith.Div2.even_2n	40	131.514.0	synth with cache (only 1: intros; only 1: eexists; only 1: intuition).	2.83450508118	710
Coq.Arith.Div2.odd_S2n	40	0.0.1	synth with cache (only 1: intros n H; only 1: exists (Nat.div2 n); only 1: auto with arith).	0.0419039726257	28
Coq.Arith.Div2.div2_double	40	1	synth with cache (only 1: apply Nat.div2_double).	0.0565390586853	50
Coq.Arith.Div2.div2_double_plus_one	40	513.66.1.0.65	synth with cache (only 1: Nat.induct n; only 1: trivial; only 1: simpl; only 1: intros a Ha; only 1: eauto using Nat.Private_Tac.eq_trans, Nat.Private_Tac.eq_sym).	7.8602399826	5744
Coq.Arith.Plus.plus_assoc_reverse	40	391.0.0.0.0	synth with cache (only 1: nzinduct n; only 1: now Nat.nzsimpl; only 1: intro; only 1: Nat.nzsimpl; only 1: auto with *).	9.47318100929	3972
Coq.Arith.Plus.plus_reg_l	40
Coq.Arith.Plus.plus_le_reg_l	40
Coq.Arith.Plus.plus_lt_reg_l	40
Coq.Arith.Plus.plus_le_compat_l	40	1	synth with cache (only 1: apply Nat.add_le_mono_l).	0.0557909011841	29
Coq.Arith.Plus.plus_le_compat_r	40	0.0.11	synth with cache (only 1: induction 1; only 1: now rewrite <- ?Nat.add_le_mono_r; only 1: now right).	2.61326217651	3604
Coq.Arith.Plus.plus_lt_compat_l	40	2	synth with cache (only 1: apply Nat.add_lt_mono_l).	0.0245668888092	3
Coq.Arith.Plus.plus_lt_compat_r	40
Coq.Arith.Plus.plus_le_compat	40
Coq.Arith.Plus.plus_le_lt_compat	40
Coq.Arith.Plus.plus_lt_le_compat	40	1	synth with cache (only 1: apply Nat.add_le_mono).	0.0207991600037	2
Coq.Arith.Plus.plus_lt_compat	40	3.0.66.322	synth with cache (only 1: red; only 1: intros H; only 1: apply Nat.add_le_lt_mono; only 1: Nat.order).	0.955454826355	1171
Coq.Arith.Plus.le_plus_l	40	385.1.1.193.8.0.16	synth with cache (only 1: revert m; only 1: Nat.induct ltac:(m); only 1: now Nat.nzsimpl; only 1: intros LE; only 1: intro H; only 1: Nat.nzsimpl; only 1: auto with sets).	10.0372149944	14747
Coq.Arith.Plus.le_plus_r	40	450.1.0.64.1.2.512	synth with cache (only 1: Nat.induct ltac:(n); only 1: Nat.nzsimpl; only 1: left; only 1: intro z; only 1: intro H; only 1: Nat.nzsimpl; only 1: Nat.auto').	0.794747114182	835
Coq.Arith.Plus.le_plus_trans	40
Coq.Arith.Plus.lt_plus_trans	40	3.449.388	synth with cache (only 1: revert n; only 1: RelationClasses.reduce_goal; only 1: now rewrite <- Nat.le_add_r).	3.82155895233	5582
Coq.Arith.Plus.plus_is_O	40	193.0.0.0.0.0.6	synth with cache (only 1: Nat.induct n; only 1: split; only 1: auto; only 1: auto; only 1: intros n IH; only 1: Nat.nzsimpl; only 1: congruence).	14.2528028488	2408
Coq.Arith.Plus.plus_is_one	40
Coq.Arith.Plus.plus_tail_plus	40
Coq.Arith.Plus.succ_plus_discr	40	0.2.0.258.5.8	synth with cache (only 1: Nat.induct n; only 1: auto; only 1: intro x; only 1: Nat.nzsimpl; only 1: intro H; only 1: auto).	11.4915049076	22070
Coq.Arith.Lt.lt_le_S	40	64	synth with cache (only 1: now Nat.order).	0.0501577854156	9
Coq.Arith.Lt.lt_n_Sm_le	40	0	synth with cache (only 1: apply le_S_n).	0.0115129947662	1
Coq.Arith.Lt.le_lt_n_Sm	40	2	synth with cache (only 1: apply Nat.lt_succ_r).	0.0238590240479	6
Coq.Arith.Lt.le_not_lt	40	129.3	synth with cache (only 1: intros LT EQ; only 1: Nat.order').	0.751850128174	429
Coq.Arith.Lt.lt_not_le	40	129.1	synth with cache (only 1: intros LT EQ; only 1: Nat.order').	0.145668029785	8
Coq.Arith.Lt.neq_0_lt	40	0.0	synth with cache (only 1: intro H; only 1: Nat.auto').	0.0201079845428	2
Coq.Arith.Lt.lt_0_neq	40	0.0.0.0	synth with cache (only 1: intro H; only 1: intro H1; only 1: rewrite H1 in H; only 1: false_hyp H Nat.lt_irrefl).	0.0265419483185	4
Coq.Arith.Lt.lt_n_S	40	0	synth with cache (only 1: apply le_n_S).	0.0121638774872	1
Coq.Arith.Lt.lt_S_n	40	2	synth with cache (only 1: apply Nat.succ_lt_mono).	0.0327050685883	53
Coq.Arith.Lt.S_pred	40	256.0.128.1.0.1.0	synth with cache (only 1: revert m; only 1: induction n; only 1: intros n H; only 1: exfalso; only 1: inversion H; only 1: intros m H; only 1: f_equal).	0.59272313118	1302
Coq.Arith.Lt.S_pred_pos	40	1.128.195.3	synth with cache (only 1: intro m; only 1: destruct m; only 1: constructor; only 1: Morphisms.f_equiv).	0.758239030838	1712
Coq.Arith.Lt.lt_pred	40
Coq.Arith.Lt.lt_pred_n_n	40	193.0.0.0	synth with cache (only 1: destruct n; only 1: inversion 1; only 1: intros _; only 1: Nat.auto').	0.0301878452301	14
Coq.Arith.Lt.le_lt_or_eq	40
Coq.Arith.Lt.nat_total_order	40
Coq.Arith.Wf_nat.Well_founded_Nat.well_founded_ltof	40
Coq.Arith.Wf_nat.Well_founded_Nat.well_founded_gtof	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: assert (H : forall (n : nat) (a : A), f a < n -> Acc ltof a); only 1: induction n; only 1: intros; only 1: absurd (f a < 0); only 1: auto with arith; only 1: auto with arith; only 1: intros a Ha; only 1: apply Acc_intro; only 1: unfold ltof at 1; only 1: intros b Hb; only 1: apply IHn; only 1: apply Nat.lt_le_trans with (f a); only 1: auto with arith; only 1: auto with arith; only 1: intros a; only 1: apply (H (S (f a))); only 1: auto with arith).	17.4427769184	874
Coq.Arith.Wf_nat.Well_founded_Nat.induction_ltof1	40
Coq.Arith.Wf_nat.Well_founded_Nat.induction_gtof1	40	0.0.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros P F; only 1: assert (H : forall (n : nat) (a : A), f a < n -> P a); only 1: induction n; only 1: intros; only 1: absurd (f a < 0); only 1: auto with arith; only 1: auto with arith; only 1: intros a Ha; only 1: apply F; only 1: intros b Hb; only 1: apply IHn; only 1: apply Nat.lt_le_trans with (f a); only 1: auto with arith; only 1: auto with arith; only 1: intros a; only 1: apply (H (S (f a))); only 1: auto with arith).	1.04368805885	2027
Coq.Arith.Wf_nat.Well_founded_Nat.induction_ltof2	40	1	synth with cache (only 1: exact induction_ltof1).	0.122806072235	155
Coq.Arith.Wf_nat.Well_founded_Nat.induction_gtof2	40	0	synth with cache (only 1: exact induction_ltof1).	0.00617790222168	1
Coq.Arith.Wf_nat.Well_founded_Nat.well_founded_lt_compat	40
Coq.Arith.Wf_nat.lt_wf	40
Coq.Arith.Wf_nat.lt_wf_rec1	40
Coq.Arith.Wf_nat.lt_wf_rec	40	0	synth with cache (only 1: exact (fun (p : nat) P F => induction_ltof1 nat (fun m : nat => m) P F p)).	0.0101130008698	1
Coq.Arith.Wf_nat.lt_wf_ind	40	0	synth with cache (only 1: exact (fun (p : nat) P F => induction_ltof2 nat (fun m : nat => m) P F p)).	0.0103921890259	1
Coq.Arith.Wf_nat.gt_wf_rec	40	0	synth with cache (only 1: exact (fun (p : nat) P F => induction_ltof2 nat (fun m : nat => m) P F p)).	0.0132279396057	1
Coq.Arith.Wf_nat.lt_wf_double_rec	40
Coq.Arith.Wf_nat.lt_wf_double_ind	40	0.0.0.0.0.0.0	synth with cache (only 1: intros P Hrec p; only 1: pattern p; only 1: apply lt_wf_rec; only 1: intros n H q; only 1: pattern q; only 1: apply lt_wf_rec; only 1: auto with arith).	0.0302658081055	7
Coq.Arith.Wf_nat.LT_WF_REL.acc_lt_rel	40
Coq.Arith.Wf_nat.LT_WF_REL.well_founded_inv_lt_rel_compat	40
Coq.Arith.Wf_nat.well_founded_inv_rel_inv_lt_rel	40
Coq.Arith.Wf_nat.dec_inh_nat_subset_has_unique_least_element	40
Coq.Arith.Factorial.lt_O_fact	40
Coq.Arith.Factorial.fact_neq_0	40
Coq.Arith.Factorial.fact_le	40	386.0.2.0.0.0.8	synth with cache (only 1: induction 1; only 1: auto; only 1: destruct m; only 1: simpl; only 1: auto; only 1: simpl; only 1: eauto with *).	11.1151711941	11116
Coq.Arith.Compare_dec.zerop	40	5.0.0.1	synth with cache (only 1: destruct n; only 1: now left; only 1: right; only 1: apply Peano.le_n_S, Peano.le_0_n).	0.382225990295	651
Coq.Arith.Compare_dec.lt_eq_lt_dec	40
Coq.Arith.Compare_dec.gt_eq_gt_dec	40	0.0.0.0.1.0.0.0.0.0.0	synth with cache (only 1: induction n in m |- *; only 1: destruct m; only 1: auto with arith; only 1: auto with arith; only 1: destruct m; only 1: auto with arith; only 1: destruct (IHn m) as [H| H]; only 1: destruct H; only 1: auto with arith; only 1: auto with arith; only 1: auto with arith).	0.313152074814	133
Coq.Arith.Compare_dec.le_lt_dec	40
Coq.Arith.Compare_dec.le_le_S_dec	40
Coq.Arith.Compare_dec.le_ge_dec	40	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction n in m |- *; only 1: left; only 1: auto with arith; only 1: destruct m; only 1: right; only 1: auto with arith; only 1: elim (IHn m); only 1: left; only 1: auto with arith; only 1: right; only 1: auto with arith).	0.280025005341	181
Coq.Arith.Compare_dec.le_gt_dec	40	0.0.1	synth with cache (only 1: elim (le_lt_dec n m); only 1: auto with arith; only 1: auto with arith).	0.106982946396	85
Coq.Arith.Compare_dec.le_lt_eq_dec	40	2.1.1.1.320.0.0.0.2.2.0.7	synth with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: auto with arith; only 1: auto with arith; only 1: destruct m; only 1: auto with arith; only 1: intro H1; only 1: elim (IHn m); only 1: auto with arith; only 1: auto with arith; only 1: now apply Peano.le_S_n).	20.3083078861	23289
Coq.Arith.Compare_dec.le_dec	40	0.386.0.6.455	synth with cache (only 1: compute; only 1: elim (le_lt_dec n m); only 1: auto with arith; only 1: firstorder; only 1: intuition Nat.order).	34.1113870144	32713
Coq.Arith.Compare_dec.lt_dec	40
Coq.Arith.Compare_dec.gt_dec	40	0	synth with cache (only 1: apply le_dec).	0.0157828330994	1
Coq.Arith.Compare_dec.ge_dec	40	1.3.1	synth with cache (only 1: destruct (le_gt_dec n m); only 1: apply le_dec; only 1: apply le_dec).	0.391170978546	548
Coq.Arith.Compare_dec.dec_le	40	0.0.0.1.580.67	synth with cache (only 1: revert m; only 1: CRelationClasses.reduce; only 1: destruct (le_gt_dec n m); only 1: now left; only 1: right; only 1: now apply gt_not_le).	33.735738039	16930
Coq.Arith.Compare_dec.dec_lt	40	5	synth with cache (only 1: apply Nat.le_decidable).	0.656304836273	690
Coq.Arith.Compare_dec.dec_gt	40	2	synth with cache (only 1: apply Nat.lt_decidable).	0.0163760185242	3
Coq.Arith.Compare_dec.dec_ge	40
Coq.Arith.Compare_dec.not_eq	40	0	synth with cache (only 1: apply Nat.lt_gt_cases).	0.0166518688202	1
Coq.Arith.Compare_dec.not_le	40	0	synth with cache (only 1: apply Nat.lt_nge).	0.0140869617462	1
Coq.Arith.Compare_dec.not_gt	40	2	synth with cache (only 1: apply Nat.le_ngt).	0.018627166748	3
Coq.Arith.Compare_dec.not_ge	40	1	synth with cache (only 1: apply Nat.nle_gt).	0.017856836319	2
Coq.Arith.Compare_dec.not_lt	40	1	synth with cache (only 1: apply Nat.nlt_ge).	0.0174851417542	2
Coq.Arith.Compare_dec.nat_compare_lt	40	513.1.5.0.0.1.0.0.0.0.0.1.0.0.0.1.0.0.0.0	synth with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: split; only 1: easy; only 1: easy; only 1: simpl; only 1: split; only 1: easy; only 1: intros _; only 1: apply Peano.le_n_S, Peano.le_0_n; only 1: destruct m; only 1: simpl; only 1: split; only 1: easy; only 1: easy; only 1: revert m; only 1: simpl; only 1: firstorder).	9.58739805222	15600
Coq.Arith.Compare_dec.nat_compare_gt	40
Coq.Arith.Compare_dec.nat_compare_le	40	450.0.0.0.1.0.0.0.0.0.0.1.0.1.0.0.0.0	synth with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: now split; only 1: simpl; only 1: split; only 1: intros; only 1: easy; only 1: intros; only 1: apply Peano.le_0_n; only 1: destruct m; only 1: simpl; only 1: split; only 1: inversion 1; only 1: now destruct 1; only 1: simpl; only 1: firstorder).	2.96617388725	1303
Coq.Arith.Compare_dec.nat_compare_ge	40
Coq.Arith.Compare_dec.nat_compare_eq	40
Coq.Arith.Compare_dec.nat_compare_Lt_lt	40	1	synth with cache (only 1: apply Nat.compare_lt_iff).	0.0172460079193	2
Coq.Arith.Compare_dec.nat_compare_Gt_gt	40	0	synth with cache (only 1: apply Nat.compare_gt_iff).	0.0157639980316	1
Coq.Arith.Compare_dec.nat_compare_equiv	40
Coq.Arith.Compare_dec.leb_iff_conv	40
Coq.Arith.Compare_dec.leb_correct	40	512.0.1.3.0.0.0.0.0.0.1	synth with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy; only 1: intros m H; only 1: destruct m; only 1: now split; only 1: firstorder).	1.89004611969	1103
Coq.Arith.Compare_dec.leb_complete	40	0	synth with cache (only 1: apply Nat.leb_le).	0.0154700279236	1
Coq.Arith.Compare_dec.leb_correct_conv	40	0.1	synth with cache (only 1: rewrite Nat.leb_nle; only 1: apply Nat.lt_nge).	0.0307509899139	3
Coq.Arith.Compare_dec.leb_complete_conv	40	0.0	synth with cache (only 1: rewrite Nat.leb_nle; only 1: apply Nat.nle_gt).	0.0277910232544	2
Coq.Arith.Compare_dec.leb_compare	40	64.64.1.0.0.1.0.0.1.0.0.0.1.0.1.0.0.0.1	synth with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: now intuition; only 1: simpl; only 1: split; only 1: intros; only 1: easy; only 1: intros; only 1: easy; only 1: destruct m; only 1: simpl; only 1: now split; only 1: simpl; only 1: rewrite ?IHn; only 1: split; only 1: auto with arith; only 1: auto with arith).	39.4405949116	10819
Coq.Arith.EqNat.eq_nat_refl	40	513.322.13	synth with cache (only 1: induction n; only 1: reflexivity || destruct H; only 1: now intuition).	0.486884117126	1785
Coq.Arith.EqNat.eq_nat_is_eq	40
Coq.Arith.EqNat.eq_eq_nat	40	0.0.0.0.0.0	synth with cache (only 1: intros <-; only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0313110351562	6
Coq.Arith.EqNat.eq_nat_eq	40	2	synth with cache (only 1: apply eq_nat_is_eq).	0.379948854446	81
Coq.Arith.EqNat.eq_nat_elim	40
Coq.Arith.EqNat.eq_nat_decide	40	257.2.0.1.0.0.3.0.1.1.1	synth with cache (only 1: intros n m; only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: auto; only 1: now right; only 1: destruct m; only 1: now right; only 1: simpl; only 1: now try Nat.order').	10.1247859001	30483
Coq.Arith.EqNat.beq_nat_refl	40	704.128.1.1.66.0.1.4.258	synth with cache (only 1: Nat.cases n; only 1: simpl; only 1: trivial; only 1: intros; only 1: Nat.induct ltac:(n); only 1: simpl; only 1: trivial; only 1: intros q; only 1: now intuition).	0.708924055099	1832
Coq.Arith.EqNat.beq_nat_true	40	512.0.3.0.0.0.1.0.0.3	synth with cache (only 1: revert m; only 1: induction n; only 1: simpl; only 1: destruct m; only 1: easy; only 1: easy; only 1: simpl; only 1: destruct m; only 1: easy; only 1: auto with sets).	1.13822698593	2081
Coq.Arith.EqNat.beq_nat_false	40
Coq.Arith.EqNat.beq_nat_eq	40	128.0.3.0.0.0.1.0.0.64	synth with cache (only 1: intro n; only 1: induction n; only 1: simpl; only 1: destruct m; only 1: easy; only 1: easy; only 1: simpl; only 1: destruct m; only 1: easy; only 1: intuition auto; Nat.Private_OrderTac.Tac.subst_eqns; eauto using (RelationClasses.StrictOrder_Transitive x y z) with *).	1.15622901917	2078
Coq.Arith.Euclid.eucl_dev	40
Coq.Arith.Euclid.quotient	40
Coq.Arith.Euclid.modulo	40
Coq.Arith.PeanoNat.Nat.bi_induction	40
Coq.Arith.PeanoNat.Nat.recursion_wd	40
Coq.Arith.PeanoNat.Nat.recursion_0	40	0	synth with cache (only 1: destr_bool).	0.0146420001984	1
Coq.Arith.PeanoNat.Nat.recursion_succ	40	1.1.2.193.256.128.199	synth with cache (only 1: intros h1 h2; only 1: intros x; only 1: intros H; only 1: compute; only 1: induction n; only 1: eauto; only 1: auto).	16.1145629883	43158
Coq.Arith.PeanoNat.Nat.pred_succ	40	0.0.0	synth with cache (only 1: induction n; only 1: auto; only 1: auto).	0.0242609977722	3
Coq.Arith.PeanoNat.Nat.pred_0	40	0	synth with cache (only 1: reflexivity).	0.0132858753204	1
Coq.Arith.PeanoNat.Nat.one_succ	40	0	synth with cache (only 1: auto).	0.0133078098297	1
Coq.Arith.PeanoNat.Nat.two_succ	40	0	synth with cache (only 1: reflexivity).	0.01145195961	1
Coq.Arith.PeanoNat.Nat.add_0_l	40	0.0	synth with cache (only 1: simpl; only 1: auto).	0.0142648220062	2
Coq.Arith.PeanoNat.Nat.add_succ_l	40	0.0.0.0.0	synth with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0294830799103	5
Coq.Arith.PeanoNat.Nat.sub_0_r	40	0.0.0.0.5	synth with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.1127140522	169
Coq.Arith.PeanoNat.Nat.sub_succ_r	40
Coq.Arith.PeanoNat.Nat.mul_0_l	40	0	synth with cache (only 1: auto).	0.0119781494141	1
Coq.Arith.PeanoNat.Nat.mul_succ_l	40
Coq.Arith.PeanoNat.Nat.lt_succ_r	40
Coq.Arith.PeanoNat.Nat.eqb_eq	40
Coq.Arith.PeanoNat.Nat.leb_le	40
Coq.Arith.PeanoNat.Nat.ltb_lt	40
Coq.Arith.PeanoNat.Nat.eq_dec	40	0	synth with cache (only 1: decide equality).	0.0222799777985	1
Coq.Arith.PeanoNat.Nat.compare_eq_iff	40	0.0.0.0.0.0.0.1.0.0.0.0.1.0.0.0.1.0.0.0.0	synth with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: split; only 1: easy; only 1: easy; only 1: simpl; only 1: split; only 1: easy; only 1: easy; only 1: destruct m; only 1: simpl; only 1: split; only 1: easy; only 1: easy; only 1: simpl; only 1: rewrite ?IHn; only 1: split; only 1: now intros ->; only 1: now injection 1).	0.944974184036	1075
Coq.Arith.PeanoNat.Nat.compare_lt_iff	40
Coq.Arith.PeanoNat.Nat.compare_le_iff	40	0.0.0.0.0.0.0.0.1.0.2.0.0.1.0.0.0.0	synth with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: now split; only 1: simpl; only 1: split; only 1: intros; only 1: apply le_0_n; only 1: easy; only 1: destruct m; only 1: simpl; only 1: now split; only 1: simpl; only 1: rewrite ?IHn; only 1: split; only 1: apply le_n_S; only 1: apply le_S_n).	1.8322789669	2164
Coq.Arith.PeanoNat.Nat.compare_antisym	40	130.1.0.1.2.0.0.0.0.0.0	synth with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: reflexivity || destruct H; only 1: simpl; only 1: reflexivity || destruct H; only 1: simpl; only 1: destruct m; only 1: split; only 1: eauto).	0.678832054138	939
Coq.Arith.PeanoNat.Nat.compare_succ	40	66.0	synth with cache (only 1: revert m; only 1: auto with sets).	0.0472021102905	28
Coq.Arith.PeanoNat.Nat.max_l	40	0.0.1.0.0.0.0.1.0.0.0.0.1	synth with cache (only 1: induction n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: inversion 1; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	0.409476995468	442
Coq.Arith.PeanoNat.Nat.max_r	40	0.0.1.0.1.0.0.0.0.0.0.0.2	synth with cache (only 1: induction n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: destruct m; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	0.634536981583	472
Coq.Arith.PeanoNat.Nat.min_l	40	0.0.1.0.1.0.0.0.0.0.0.0.0.257	synth with cache (only 1: intro; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: destruct m; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	0.469000101089	408
Coq.Arith.PeanoNat.Nat.min_r	40	0.0.1.0.0.0.0.1.0.0.0.0.0.258	synth with cache (only 1: intro; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: inversion 1; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	0.453236103058	455
Coq.Arith.PeanoNat.Nat.pow_neg_r	40	1.0	synth with cache (only 1: intro H; only 1: false_hyp H nlt_0_r).	0.0211098194122	3
Coq.Arith.PeanoNat.Nat.pow_0_r	40	0	synth with cache (only 1: now nzsimpl').	0.0200569629669	1
Coq.Arith.PeanoNat.Nat.pow_succ_r	40	64.2	synth with cache (only 1: simpl; only 1: intuition).	0.0752830505371	27
Coq.Arith.PeanoNat.Nat.square_spec	40	0	synth with cache (only 1: now nzsimpl').	0.0206758975983	1
Coq.Arith.PeanoNat.Nat.Private_Parity.Even_1	40
Coq.Arith.PeanoNat.Nat.Private_Parity.Even_2	40
Coq.Arith.PeanoNat.Nat.Private_Parity.Odd_0	40	323.1.2.128.138	synth with cache (only 1: red; only 1: induction 1; only 1: rewrite add_succ_r in H; only 1: simpl in H; only 1: CRelationClasses.simpl_crelation).	1.33745312691	3326
Coq.Arith.PeanoNat.Nat.Private_Parity.Odd_2	40
Coq.Arith.PeanoNat.Nat.even_spec	40
Coq.Arith.PeanoNat.Nat.odd_spec	40
Coq.Arith.PeanoNat.Nat.divmod_spec	40
Coq.Arith.PeanoNat.Nat.div_mod	40
Coq.Arith.PeanoNat.Nat.mod_bound_pos	40
Coq.Arith.PeanoNat.Nat.sqrt_iter_spec	40
Coq.Arith.PeanoNat.Nat.sqrt_specif	40
Coq.Arith.PeanoNat.Nat.sqrt_neg	40	2.0	synth with cache (only 1: intro H; only 1: false_hyp ltac:(H) nlt_0_r).	0.0237131118774	4
Coq.Arith.PeanoNat.Nat.log2_iter_spec	40
Coq.Arith.PeanoNat.Nat.log2_spec	40
Coq.Arith.PeanoNat.Nat.log2_nonpos	40	0.2	synth with cache (only 1: inversion 1; only 1: now apply pred_0).	0.0680940151215	46
Coq.Arith.PeanoNat.Nat.gcd_divide	40
Coq.Arith.PeanoNat.Nat.gcd_divide_l	40
Coq.Arith.PeanoNat.Nat.gcd_divide_r	40	0.0	synth with cache (only 1: intros; only 1: apply gcd_divide).	0.0179598331451	2
Coq.Arith.PeanoNat.Nat.gcd_greatest	40
Coq.Arith.PeanoNat.Nat.gcd_nonneg	40	13	synth with cache (only 1: apply le_0_l).	0.424049854279	750
Coq.Arith.PeanoNat.Nat.div2_double	40	0.0.193.2.1.0.64.0.0.386	synth with cache (only 1: induct ltac:(n); only 1: simpl; only 1: reflexivity; only 1: intro m; only 1: intro H; only 1: simpl; only 1: simpl in H; only 1: assert (succ_r : forall x y, x + S y = S (x + y)) by now induction x; only 1: rewrite succ_r; only 1: auto).	5.04632496834	1843
Coq.Arith.PeanoNat.Nat.div2_succ_double	40	1.0.0.0.1.1	synth with cache (only 1: induction n; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: rewrite add_succ_r; only 1: now f_equal).	0.843008995056	871
Coq.Arith.PeanoNat.Nat.le_div2	40
Coq.Arith.PeanoNat.Nat.lt_div2	40
Coq.Arith.PeanoNat.Nat.div2_decr	40
Coq.Arith.PeanoNat.Nat.double_twice	40	0.0	synth with cache (only 1: intro n; only 1: now nzsimpl').	0.034726858139	2
Coq.Arith.PeanoNat.Nat.testbit_0_l	40	1.0.3	synth with cache (only 1: induct ltac:(n); only 1: trivial; only 1: destr_bool).	0.209155082703	183
Coq.Arith.PeanoNat.Nat.testbit_odd_0	40
Coq.Arith.PeanoNat.Nat.testbit_even_0	40
Coq.Arith.PeanoNat.Nat.testbit_odd_succ'	40
Coq.Arith.PeanoNat.Nat.testbit_even_succ'	40
Coq.Arith.PeanoNat.Nat.shiftr_specif	40
Coq.Arith.PeanoNat.Nat.shiftl_specif_high	40
Coq.Arith.PeanoNat.Nat.shiftl_spec_low	40
Coq.Arith.PeanoNat.Nat.div2_bitwise	40
Coq.Arith.PeanoNat.Nat.odd_bitwise	40
Coq.Arith.PeanoNat.Nat.testbit_bitwise_1	40
Coq.Arith.PeanoNat.Nat.testbit_bitwise_2	40
Coq.Arith.PeanoNat.Nat.land_spec	40
Coq.Arith.PeanoNat.Nat.ldiff_spec	40	65.0.1.0.133.4	synth with cache (only 1: unfold testbit; only 1: set (a' := S a) in *; only 1: fold testbit; only 1: apply testbit_bitwise_1; only 1: destr_bool; only 1: left).	13.793115139	1430
Coq.Arith.PeanoNat.Nat.lor_spec	40
Coq.Arith.PeanoNat.Nat.lxor_spec	40
Coq.Arith.PeanoNat.Nat.div2_spec	40	3	synth with cache (only 1: now nzsimpl').	0.0201210975647	4
Coq.Arith.PeanoNat.Nat.testbit_neg_r	40	0	synth with cache (only 1: inversion H).	0.0148890018463	1
Coq.Arith.PeanoNat.Nat.tail_add_spec	40
Coq.Arith.PeanoNat.Nat.tail_addmul_spec	40
Coq.Arith.PeanoNat.Nat.tail_mul_spec	40
Coq.Arith.PeanoNat.TestOrder.test	40	449.65.0	synth with cache (only 1: intros x y; only 1: symmetry; only 1: now Nat.order).	0.0556659698486	30
Coq.Arith.Compare.discrete_nat	40
Coq.Arith.Gt.gt_n_S	40	325	synth with cache (only 1: auto with *).	0.311483860016	299
Coq.Arith.Gt.gt_S_n	40	0	synth with cache (only 1: apply Nat.succ_lt_mono).	0.0148160457611	1
Coq.Arith.Gt.gt_S	40
Coq.Arith.Gt.gt_pred	40	1	synth with cache (only 1: apply Nat.lt_succ_lt_pred).	0.0205628871918	2
Coq.Arith.Gt.le_not_gt	40	0	synth with cache (only 1: apply Nat.le_ngt).	0.0186769962311	1
Coq.Arith.Gt.gt_not_le	40	1	synth with cache (only 1: apply Nat.lt_nge).	0.019917011261	2
Coq.Arith.Gt.le_S_gt	40	257	synth with cache (only 1: now Nat.nzsimpl').	0.0340750217438	18
Coq.Arith.Gt.gt_S_le	40	0	synth with cache (only 1: apply Peano.le_S_n).	0.0177841186523	1
Coq.Arith.Gt.gt_le_S	40	1	synth with cache (only 1: apply Nat.le_succ_l).	0.0222640037537	2
Coq.Arith.Gt.le_gt_S	40	0	synth with cache (only 1: apply Nat.succ_le_mono).	0.0195469856262	1
Coq.Arith.Gt.le_gt_trans	40	192.5	synth with cache (only 1: intros Hnm Hpq; only 1: eauto with *).	7.1166369915	7777
Coq.Arith.Gt.gt_le_trans	40	322.0.457	synth with cache (only 1: induction 1; only 1: apply Nat.succ_le_mono; only 1: intuition auto; Nat.Private_Tac.subst_eqns; eauto using (RelationClasses.StrictOrder_Transitive x y z) with *).	30.4599509239	40800
Coq.Arith.Gt.gt_trans	40
Coq.Arith.Gt.gt_trans_S	40	200.450.387.0	synth with cache (only 1: intros; only 1: red in H, H0; only 1: CRelationClasses.simpl_crelation; only 1: eauto with *).	14.2783751488	21247
Coq.Arith.Gt.gt_0_eq	40	259.2.0.192.0.139	synth with cache (only 1: nzinduct n; only 1: now apply Nat.lt_eq_cases, Nat.succ_le_mono; only 1: compute; only 1: Nat.cases ltac:(n); only 1: intuition; only 1: CRelationClasses.simpl_crelation).	3.34675192833	5291
Coq.Arith.Gt.plus_gt_reg_l	40	0	synth with cache (only 1: apply Nat.add_lt_mono_l).	0.0188641548157	1
Coq.Arith.Gt.plus_gt_compat_l	40	0	synth with cache (only 1: apply Nat.add_lt_mono_l).	0.0217280387878	1
Coq.Logic.SetoidChoice.setoid_choice	40
Coq.Logic.SetoidChoice.representative_choice	40
Coq.Logic.PropFacts.injection_is_involution_in_Prop	40
Coq.Logic.JMeq.JMeq_sym	40	0.67.135	synth with cache (only 1: intro; only 1: destruct 1; only 1: auto).	0.148624897003	458
Coq.Logic.JMeq.JMeq_trans	40	1.0.4	synth with cache (only 1: intros; only 1: destruct H; only 1: assumption).	0.0463380813599	56
Coq.Logic.JMeq.JMeq_ind	40
Coq.Logic.JMeq.JMeq_rec	40	0.0.0	synth with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := H'); only 1: trivial).	0.0155799388885	3
Coq.Logic.JMeq.JMeq_rect	40	0.0.0	synth with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := H'); only 1: trivial).	0.0159990787506	3
Coq.Logic.JMeq.JMeq_ind_r	40
Coq.Logic.JMeq.JMeq_rec_r	40	0.1.0	synth with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := JMeq_sym H'); only 1: trivial).	0.0168998241425	4
Coq.Logic.JMeq.JMeq_rect_r	40	0.1.0	synth with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := JMeq_sym H'); only 1: trivial).	0.0172600746155	4
Coq.Logic.JMeq.JMeq_congr	40	0.0.0	synth with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := H'); only 1: trivial).	0.0198459625244	3
Coq.Logic.JMeq.JMeq_eq_dep_id	40	0.0.0	synth with cache (only 1: intros; only 1: destruct H; only 1: auto).	0.0170052051544	3
Coq.Logic.JMeq.eq_dep_id_JMeq	40	0.0	synth with cache (only 1: destruct 1; only 1: trivial).	0.0146889686584	2
Coq.Logic.JMeq.eq_dep_JMeq	40	0.0	synth with cache (only 1: destruct 1; only 1: reflexivity).	0.0162010192871	2
Coq.Logic.JMeq.eq_dep_strictly_stronger_JMeq	40
Coq.Logic.JMeq.JMeq_eq_dep	40	1.2.2.1	synth with cache (only 1: destruct 1; only 1: intros; only 1: dependent rewrite H; only 1: trivial).	0.293282032013	377
Coq.Logic.ExtensionalityFacts.diagonal_projs_same_behavior	40	1.4.70	synth with cache (only 1: intro H; only 1: intros [x y]; only 1: assumption).	0.276581048965	999
Coq.Logic.ExtensionalityFacts.diagonal_inverse1	40	0.29.0.66.0.1.66.1	synth with cache (only 1: intro z; only 1: split; only 1: simpl; only 1: reflexivity; only 1: symmetry; only 1: destruct b; only 1: subst; only 1: reflexivity).	4.68126797676	34525
Coq.Logic.ExtensionalityFacts.diagonal_inverse2	40	0.0.0.0	synth with cache (only 1: split; only 1: trivial; only 1: destruct b as (a1, a2, []); only 1: reflexivity).	0.0183939933777	4
Coq.Logic.ExtensionalityFacts.FunctExt_iff_EqDeltaProjs	40
Coq.Logic.ExtensionalityFacts.FunctExt_UniqInverse	40
Coq.Logic.ExtensionalityFacts.UniqInverse_EqDeltaProjs	40
Coq.Logic.ExtensionalityFacts.FunctExt_iff_UniqInverse	40
Coq.Logic.ExtensionalityFacts.FunctExt_BijComp	40
Coq.Logic.ExtensionalityFacts.BijComp_FunctExt	40
Coq.Logic.Classical_Prop.NNPP	40
Coq.Logic.Classical_Prop.Peirce	40	1.451	synth with cache (only 1: intros n IH; only 1: tauto).	0.235897064209	514
Coq.Logic.Classical_Prop.not_imply_elim	40	576.65.0.1.0.0.196	synth with cache (only 1: intuition; only 1: destruct (classic P); only 1: auto; only 1: destruct (classic P); only 1: auto; only 1: reflexivity || destruct H; only 1: contradiction).	0.669049024582	1408
Coq.Logic.Classical_Prop.not_imply_elim2	40	128.1.64.0.64	synth with cache (only 1: intros n Hn; only 1: intro H; only 1: RelationClasses.reduce; only 1: apply H; only 1: auto with relations).	0.036544084549	24
Coq.Logic.Classical_Prop.imply_to_or	40	0.66.64	synth with cache (only 1: intro H1; only 1: intro m; only 1: tauto).	0.240781068802	345
Coq.Logic.Classical_Prop.imply_to_and	40	128.0.0.0.0.0.0.0.0.0.0.0.192	synth with cache (only 1: constructor 1; only 1: apply NNPP; only 1: red; only 1: intro; only 1: apply H; only 1: intro; only 1: absurd P; only 1: trivial; only 1: trivial; only 1: intro; only 1: apply H; only 1: intro; only 1: now simpl).	0.165666103363	144
Coq.Logic.Classical_Prop.or_to_imply	40	130.0	synth with cache (only 1: intros; only 1: intuition).	0.0260620117188	10
Coq.Logic.Classical_Prop.not_and_or	40	0.514	synth with cache (only 1: intros m H1; only 1: tauto).	0.0933928489685	46
Coq.Logic.Classical_Prop.or_not_and	40	1	synth with cache (only 1: tauto).	0.0490820407867	68
Coq.Logic.Classical_Prop.not_or_and	40	0	synth with cache (only 1: tauto).	0.0201251506805	1
Coq.Logic.Classical_Prop.and_not_or	40	0	synth with cache (only 1: tauto).	0.0200660228729	1
Coq.Logic.Classical_Prop.imply_and_or	40	64.129	synth with cache (only 1: intros a b c0; only 1: RelationClasses.simpl_relation).	0.0744631290436	65
Coq.Logic.Classical_Prop.imply_and_or2	40	0.2	synth with cache (only 1: intros x y z; only 1: intuition auto; PeanoNat.Nat.Private_OrderTac.Tac.subst_eqns; eauto using (RelationClasses.StrictOrder_Transitive x y z) with *).	0.0246450901031	4
Coq.Logic.Classical_Prop.Eq_rect_eq.eq_rect_eq	40
Coq.Logic.Hurkens.Generic.Paradox.Omega	40
Coq.Logic.Hurkens.Generic.Paradox.lemma1	40
Coq.Logic.Hurkens.Generic.Paradox.lemma2	40
Coq.Logic.Hurkens.Generic.Paradox.paradox	40
Coq.Logic.Hurkens.NoRetractToImpredicativeUniverse.Paradox.paradox	40
Coq.Logic.Hurkens.NoRetractToModalProposition.Paradox.strength	40
Coq.Logic.Hurkens.NoRetractToModalProposition.Paradox.modal	40	0.16.74	synth with cache (only 1: intro H; only 1: destruct H; only 1: eauto).	2.01465916634	10676
Coq.Logic.Hurkens.NoRetractToModalProposition.Paradox.Forall	40	1.6	synth with cache (only 1: red; only 1: eauto).	0.0821340084076	150
Coq.Logic.Hurkens.NoRetractToModalProposition.Paradox.paradox	40
Coq.Logic.Hurkens.NoRetractToNegativeProp.Paradox.paradox	40
Coq.Logic.Hurkens.NoRetractFromSmallPropositionToProp.MParadox.mparadox	40
Coq.Logic.Hurkens.NoRetractFromSmallPropositionToProp.Paradox.paradox	40
Coq.Logic.Hurkens.NoRetractFromTypeToProp.Paradox.paradox	40
Coq.Logic.Hurkens.TypeNeqSmallType.Paradox.up_down	40	0.22.134	synth with cache (only 1: intros q; only 1: subst; only 1: reflexivity).	1.10465121269	6646
Coq.Logic.Hurkens.TypeNeqSmallType.Paradox.paradox	40
Coq.Logic.Hurkens.PropNeqType.paradox	40
Coq.Logic.ClassicalChoice.singleton_choice	40
Coq.Logic.ClassicalChoice.choice	40
Coq.Logic.Eqdep_dec.EqdepDec.trans_sym_eq	40	0.75.0	synth with cache (only 1: intros; only 1: subst; only 1: reflexivity).	0.220550060272	595
Coq.Logic.Eqdep_dec.EqdepDec.nu_constant	40
Coq.Logic.Eqdep_dec.EqdepDec.nu_left_inv_on	40
Coq.Logic.Eqdep_dec.EqdepDec.eq_proofs_unicity_on	40
Coq.Logic.Eqdep_dec.EqdepDec.K_dec_on	40
Coq.Logic.Eqdep_dec.EqdepDec.inj_right_pair_on	40
Coq.Logic.Eqdep_dec.K_dec_type	40
Coq.Logic.Eqdep_dec.eq_rect_eq_dec	40	0.0.0.0.0.0.0.2.0	synth with cache (only 1: intros A eq_dec x P H p; only 1: elim p using K_dec; only 1: intros; only 1: case (eq_dec x0 y); only 1: left; only 1: assumption; only 1: right; only 1: assumption; only 1: trivial).	0.199244022369	172
Coq.Logic.Eqdep_dec.DecidableEqDep.inj_pairP2	40
Coq.Logic.Eqdep_dec.inj_pair2_eq_dec	40
Coq.Logic.Eqdep_dec.UIP_refl_unit	40
Coq.Logic.Eqdep_dec.UIP_refl_bool	40
Coq.Logic.Eqdep_dec.UIP_refl_nat	40
Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Direct.linear_search_smallest	40	128.576	synth with cache (only 1: intros x y Hxy; only 1: firstorder).	0.329104185104	219
Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Direct.epsilon_smallest	40
Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Acc.P_implies_acc	40
Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Acc.P_eventually_implies_acc	40
Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Acc.P_eventually_implies_acc_ex	40
Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Acc.acc_implies_P_eventually	40
Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Acc.constructive_indefinite_ground_description_nat_Acc	40	0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.0.1.1.0.2.1	synth with cache (only 1: intros H; only 1: pattern 0; only 1: apply Fix_F with (R := R); only 1: intros x IH; only 1: destruct (P_decidable x) as [Px| not_Px]; only 1: exists x; only 1: assumption; only 1: set (y := S x); only 1: assert (Ryx : R y x); only 1: unfold R; only 1: split; only 1: auto; only 1: auto; only 1: destruct (IH y Ryx) as [n Hn]; only 1: exists n; only 1: assumption; only 1: elim H; only 1: intros x Px; only 1: apply P_eventually_implies_acc with (n := x); only 1: replace (x + 0) with x; only 1: auto with arith; only 1: auto with arith).	15.1623730659	21456
Coq.Logic.ConstructiveEpsilon.ConstructiveGroundEpsilon.P'_decidable	40	389.133	synth with cache (only 1: intros H0; only 1: eauto).	1.86415600777	2588
Coq.Logic.ConstructiveEpsilon.ConstructiveGroundEpsilon.constructive_indefinite_ground_description	40
Coq.Logic.ConstructiveEpsilon.ConstructiveGroundEpsilon.constructive_definite_ground_description	40
Coq.Logic.ChoiceFacts.functional_rel_reification_and_rel_choice_imp_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_imp_rel_choice	40
Coq.Logic.ChoiceFacts.fun_choice_imp_functional_rel_reification	40	1.133.9.1.3	synth with cache (only 1: intros; only 1: intro x; only 1: firstorder; only 1: apply H; only 1: firstorder).	5.764316082	12817
Coq.Logic.ChoiceFacts.fun_choice_iff_rel_choice_and_functional_rel_reification	40
Coq.Logic.ChoiceFacts.rel_choice_and_proof_irrel_imp_guarded_rel_choice	40
Coq.Logic.ChoiceFacts.rel_choice_indep_of_general_premises_imp_guarded_rel_choice	40
Coq.Logic.ChoiceFacts.guarded_rel_choice_imp_rel_choice	40
Coq.Logic.ChoiceFacts.subset_types_imp_guarded_rel_choice_iff_rel_choice	40
Coq.Logic.ChoiceFacts.guarded_iff_omniscient_rel_choice	40
Coq.Logic.ChoiceFacts.guarded_fun_choice_imp_indep_of_general_premises	40
Coq.Logic.ChoiceFacts.guarded_fun_choice_imp_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_indep_general_prem_imp_guarded_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_indep_general_prem_iff_guarded_fun_choice	40
Coq.Logic.ChoiceFacts.omniscient_fun_choice_imp_small_drinker	40
Coq.Logic.ChoiceFacts.omniscient_fun_choice_imp_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_small_drinker_imp_omniscient_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_small_drinker_iff_omniscient_fun_choice	40
Coq.Logic.ChoiceFacts.guarded_iff_omniscient_fun_choice	40	0.0.0.5.6.1.0.0.13.2.2.0	synth with cache (only 1: split; only 1: intros GAC_rel A B R; only 1: firstorder; only 1: apply (GAC_rel A B (fun x => exists y, R x y) R); only 1: firstorder; only 1: auto; only 1: intros OAC_rel A B P R H; only 1: firstorder; only 1: destruct (OAC_rel A B R) as (f, Hf); only 1: eauto; only 1: exists f; only 1: firstorder).	13.2635099888	39518
Coq.Logic.ChoiceFacts.iota_imp_constructive_definite_description	40
Coq.Logic.ChoiceFacts.epsilon_imp_constructive_indefinite_description	40	1.0.0.0.0.1.1.0.0	synth with cache (only 1: intros D_iota A P H; only 1: destruct D_iota with (P := P) as (x, H1); only 1: destruct H; only 1: auto; only 1: exists x; only 1: apply H1; only 1: exists x; only 1: apply H1; only 1: assumption).	0.12322306633	104
Coq.Logic.ChoiceFacts.constructive_indefinite_description_and_small_drinker_imp_epsilon	40	1.0.12	synth with cache (only 1: compute; only 1: intros A B P R H; only 1: eauto).	2.04906105995	7182
Coq.Logic.ChoiceFacts.epsilon_imp_small_drinker	40	0.4.0.6.0	synth with cache (only 1: intros D_epsilon A P H; only 1: destruct D_epsilon with (P := P) as (x, H1); only 1: auto; only 1: exists x; only 1: assumption).	0.576767921448	1207
Coq.Logic.ChoiceFacts.constructive_indefinite_description_and_small_drinker_iff_epsilon	40
Coq.Logic.ChoiceFacts.classical_denumerable_description_imp_fun_choice	40
Coq.Logic.ChoiceFacts.dep_non_dep_functional_choice	40	256.0.64.128.3.322.130	synth with cache (only 1: red; only 1: intros H; only 1: intros P H0 HS; only 1: intro n; only 1: apply H; only 1: intro x; only 1: now try PeanoNat.Nat.order').	4.16428089142	15998
Coq.Logic.ChoiceFacts.non_dep_dep_functional_choice	40	8.0.640.389.135	synth with cache (only 1: intro z; only 1: intros n1 m1 H; only 1: eexists; only 1: firstorder; only 1: apply proj2_sig).	22.8326480389	121192
Coq.Logic.ChoiceFacts.functional_choice_to_inhabited_forall_commute	40
Coq.Logic.ChoiceFacts.inhabited_forall_commute_to_functional_choice	40	3.133.451.0.193.0.64	synth with cache (only 1: intro n; only 1: red; only 1: intros A B; only 1: intros x; only 1: eexists; only 1: intro m; only 1: apply proj2_sig).	21.3949759007	60185
Coq.Logic.ChoiceFacts.dep_non_dep_functional_rel_reification	40	1.0.4.1	synth with cache (only 1: intros AC_depfun A B R H; only 1: destruct (AC_depfun A (fun _ => B) R H) as (f, Hf); only 1: exists f; only 1: trivial).	1.41677498817	3025
Coq.Logic.ChoiceFacts.non_dep_dep_functional_rel_reification	40
Coq.Logic.ChoiceFacts.dep_iff_non_dep_functional_rel_reification	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.2	synth with cache (only 1: split; only 1: intros AC_fun A B R H; only 1: pose (B' := {x : A & B x}); only 1: pose (R' := fun (x : A) (y : B') => projT1 y = x /\ R (projT1 y) (projT2 y)); only 1: destruct (AC_fun A B' R') as (f, Hf); only 1: intros x; only 1: destruct (H x) as (y, (Hy, Huni)); only 1: exists (existT (fun x => B x) x y); only 1: repeat split; only 1: trivial; only 1: intros (x', y') (Heqx', Hy'); only 1: simpl in *; only 1: destruct Heqx'; only 1: rewrite (Huni y'); only 1: trivial; only 1: trivial; only 1: exists (fun x => eq_rect _ _ (projT2 (f x)) _ (proj1_inf (Hf x))); only 1: intro x; only 1: destruct (Hf x) as (Heq, HR) using and_indd; only 1: destruct (f x); only 1: simpl in *; only 1: destruct Heq using eq_indd; only 1: trivial; only 1: intros DepFunReify A B R H; only 1: destruct (DepFunReify A (fun _ => B) R H) as (f, Hf); only 1: exists f; only 1: trivial).	1.32863306999	2353
Coq.Logic.ChoiceFacts.relative_non_contradiction_of_indefinite_descr	40
Coq.Logic.ChoiceFacts.constructive_indefinite_descr_fun_choice	40
Coq.Logic.ChoiceFacts.relative_non_contradiction_of_definite_descr	40
Coq.Logic.ChoiceFacts.constructive_definite_descr_fun_reification	40	0.0.3.0	synth with cache (only 1: intros IndefDescr A B R H; only 1: exists (fun x => proj1_sig (IndefDescr B (R x) (H x))); only 1: intro x; only 1: apply (proj2_sig (IndefDescr B (R x) (H x)))).	0.699402093887	1000
Coq.Logic.ChoiceFacts.constructive_definite_descr_excluded_middle	40
Coq.Logic.ChoiceFacts.fun_reification_descr_computational_excluded_middle_in_prop_context	40
Coq.Logic.ChoiceFacts.functional_choice_imp_functional_dependent_choice	40
Coq.Logic.ChoiceFacts.functional_dependent_choice_imp_functional_countable_choice	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_prop_repr	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_pred_repr	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_function_repr	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_excluded_middle	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_relational_choice	40
Coq.Logic.ChoiceFacts.gen_setoid_fun_choice_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_gen_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_iff_gen_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_simple_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.simple_setoid_fun_choice_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_iff_simple_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_functional_rel_reification	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_repr_fun_choice	40	448.1.256.193.448.64.515.449.1	synth with cache (only 1: intros; only 1: intro; only 1: generalize H; only 1: firstorder  (subst; auto); only 1: apply H; only 1: now subst; only 1: intros Hb; only 1: firstorder; only 1: eauto using Nat.Private_OrderTac.Tac.eq_trans, Nat.Private_OrderTac.Tac.eq_sym).	31.958646059	15922
Coq.Logic.ChoiceFacts.functional_rel_reification_and_repr_fun_choice_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.functional_rel_reification_and_repr_fun_choice_iff_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_ext_functions_repr_and_excluded_middle_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_functional_choice_first_characterization	40
Coq.Logic.ChoiceFacts.fun_choice_and_ext_pred_ext_and_proof_irrel_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_functional_choice_second_characterization	40
Coq.Logic.PropExtensionality.proof_irrelevance	40
Coq.Logic.StrictProp.Spr1_inj	40	0.134.15.36	synth with cache (only 1: destruct b; only 1: simpl in *; only 1: destruct e; only 1: auto).	1.48609495163	12360
Coq.Logic.ClassicalFacts.prop_degen_ext	40
Coq.Logic.ClassicalFacts.prop_degen_em	40
Coq.Logic.ClassicalFacts.prop_ext_em_degen	40
Coq.Logic.ClassicalFacts.provable_prop_ext	40	129.0.0.4.1	synth with cache (only 1: intros Ext EM A; only 1: apply Ext; only 1: split; only 1: exact (fun _ => I); only 1: firstorder using PredExt_imp_PropExt, PredExt_imp_PropFunExt, PropExt_and_PropFunExt_imp_PredExt).	0.0672371387482	207
Coq.Logic.ClassicalFacts.prop_ext_A_eq_A_imp_A	40	142	synth with cache (only 1: firstorder using PredExt_imp_PropExt, PredExt_imp_PropFunExt, PropExt_and_PropFunExt_imp_PredExt).	0.647201061249	930
Coq.Logic.ClassicalFacts.prop_ext_retract_A_A_imp_A	40
Coq.Logic.ClassicalFacts.ext_prop_fixpoint	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_gen.aux	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_gen.ext_prop_dep_proof_irrel_gen	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_Prop_Ext_CC.ext_prop_dep_proof_irrel_cc	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_CIC.ext_prop_dep_proof_irrel_cic	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_EM_CC.p2p1	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_EM_CC.p2p2	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_EM_CC.proof_irrelevance_cc	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_WEM_CC.wp2p1	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_WEM_CC.wp2p2	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_WEM_CC.wproof_irrelevance_cc	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_CCI.proof_irrelevance_cci	40
Coq.Logic.ClassicalFacts.Weak_proof_irrelevance_CCI.wem_proof_irrelevance_cci	40
Coq.Logic.ClassicalFacts.excluded_middle_Godel_Dummett	40
Coq.Logic.ClassicalFacts.Godel_Dummett_iff_right_distr_implication_over_disjunction	40
Coq.Logic.ClassicalFacts.Godel_Dummett_weak_excluded_middle	40
Coq.Logic.ClassicalFacts.weak_excluded_middle_iff_classical_de_morgan_law	40
Coq.Logic.ClassicalFacts.independence_general_premises_right_distr_implication_over_disjunction	40
Coq.Logic.ClassicalFacts.independence_general_premises_Godel_Dummett	40
Coq.Logic.ClassicalFacts.independence_general_premises_drinker	40
Coq.Logic.ClassicalFacts.excluded_middle_independence_general_premises	40
Coq.Logic.ClassicalFacts.Unrestricted_minimization_entails_excluded_middle.unrestricted_minimization_entails_excluded_middle	40
Coq.Logic.ClassicalFacts.Excluded_middle_entails_unrestricted_minimization.excluded_middle_entails_unrestricted_minimization	40
Coq.Logic.ClassicalFacts.Example_of_undecidable_predicate_with_the_minimization_property.undecidable_predicate_with_the_minimization_property	40
Coq.Logic.ClassicalFacts.representative_boolean_partition_imp_excluded_middle	40
Coq.Logic.ClassicalFacts.excluded_middle_imp_representative_boolean_partition	40
Coq.Logic.ClassicalFacts.excluded_middle_iff_representative_boolean_partition	40
Coq.Logic.Classical_Pred_Type.Generic.not_all_not_ex	40
Coq.Logic.Classical_Pred_Type.Generic.not_all_ex_not	40
Coq.Logic.Classical_Pred_Type.Generic.not_ex_all_not	40	130.64.0	synth with cache (only 1: unfold not; only 1: intros n1 m1 H; only 1: firstorder).	0.0514781475067	42
Coq.Logic.Classical_Pred_Type.Generic.not_ex_not_all	40
Coq.Logic.Classical_Pred_Type.Generic.ex_not_not_all	40	129.0.384.0	synth with cache (only 1: unfold not; only 1: intros H; only 1: intros P notall; only 1: firstorder).	0.0468831062317	49
Coq.Logic.Classical_Pred_Type.Generic.all_not_not_ex	40	69	synth with cache (only 1: firstorder).	0.337000131607	729
Coq.Logic.ProofIrrelevanceFacts.ProofIrrelevanceTheory.Eq_rect_eq.eq_rect_eq	40
Coq.Logic.ProofIrrelevanceFacts.ProofIrrelevanceTheory.subset_eq_compat	40
Coq.Logic.ProofIrrelevanceFacts.ProofIrrelevanceTheory.subsetT_eq_compat	40	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite M.proof_irrelevance with (p1 := q) (p2 := (eq_rect x P p y H)); only 1: elim H using eq_indd; only 1: reflexivity).	0.0270850658417	4
Coq.Logic.FinFun.Finite_alt	40
Coq.Logic.FinFun.Injective_map_NoDup	40
Coq.Logic.FinFun.Injective_list_carac	40
Coq.Logic.FinFun.Injective_carac	40
Coq.Logic.FinFun.Surjective_list_carac	40
Coq.Logic.FinFun.Surjective_carac	40
Coq.Logic.FinFun.Endo_Injective_Surjective	40
Coq.Logic.FinFun.Finite_Empty_or_not	40	64.320.2.5.10	synth with cache (only 1: intros (l, L); only 1: induction l; only 1: left; only 1: now PeanoNat.Nat.nzsimpl; only 1: eauto).	4.63637900352	12929
Coq.Logic.FinFun.Surjective_inverse	40
Coq.Logic.FinFun.Injective_Surjective_Bijective	40
Coq.Logic.FinFun.Fin_Finite	40
Coq.Logic.FinFun.Fin2Restrict.extend_ok	40
Coq.Logic.FinFun.Fin2Restrict.extend_f2n	40
Coq.Logic.FinFun.Fin2Restrict.extend_n2f	40
Coq.Logic.FinFun.Fin2Restrict.restrict_f2n	40
Coq.Logic.FinFun.Fin2Restrict.restrict_n2f	40
Coq.Logic.FinFun.Fin2Restrict.extend_surjective	40
Coq.Logic.FinFun.Fin2Restrict.extend_injective	40
Coq.Logic.FinFun.Fin2Restrict.restrict_surjective	40
Coq.Logic.FinFun.Fin2Restrict.restrict_injective	40
Coq.Logic.FinFun.bInjective_bSurjective	40
Coq.Logic.FinFun.bSurjective_bBijective	40
Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.prop_ext	40
Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.proof_irrel	40
Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.guarded_rel_choice	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: red; only 1: intros A B P R H; only 1: destruct (rel_choice _ _ (fun (x : {x : _ & P x}) (y : B) => R (projT1 x) y)) as (R', (HR'R, H0)); only 1: intros (x, HPx); only 1: destruct (H x HPx) as (y, HRxy); only 1: exists y; only 1: exact HRxy; only 1: set (R'' := fun (x : A) (y : B) => exists H : P x, R' (existT P x H) y); only 1: exists R''; only 1: split; only 1: intros x y (HPx, HR'xy); only 1: change x with (projT1 (existT P x HPx)); only 1: apply HR'R; only 1: exact HR'xy; only 1: intros x HPx; only 1: destruct (H0 (existT P x HPx)) as (y, (HR'xy, Huniq)); only 1: exists y; only 1: split; only 1: exists HPx; only 1: exact HR'xy; only 1: intros y' (H'Px, HR'xy'); only 1: apply Huniq; only 1: rewrite proof_irrel with (a1 := HPx) (a2 := H'Px); only 1: exact HR'xy').	2.09269213676	1868
Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.AC_bool_subset_to_bool	40
Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.pred_ext_and_rel_choice_imp_EM	40
Coq.Logic.Diaconescu.ProofIrrel_RelChoice_imp_EqEM.a1'	40	209.134	synth with cache (only 1: compute; only 1: eauto).	1.26923894882	4312
Coq.Logic.Diaconescu.ProofIrrel_RelChoice_imp_EqEM.a2'	40	0.0	synth with cache (only 1: exists a1; only 1: auto).	0.0236549377441	2
Coq.Logic.Diaconescu.ProofIrrel_RelChoice_imp_EqEM.projT1_injective	40	0.333.711.3.0.73	synth with cache (only 1: compute; only 1: intros; only 1: inversion H; only 1: inversion_clear H; only 1: Morphisms.f_equiv; only 1: auto).	29.3021600246	92720
Coq.Logic.Diaconescu.ProofIrrel_RelChoice_imp_EqEM.decide	40
Coq.Logic.Diaconescu.ProofIrrel_RelChoice_imp_EqEM.proof_irrel_rel_choice_imp_eq_dec	40
Coq.Logic.Diaconescu.ProofIrrel_RelChoice_imp_EqEM.proof_irrel_rel_choice_imp_eq_dec'	40
Coq.Logic.Diaconescu.ExtensionalEpsilon_imp_EM.extensional_epsilon_imp_EM	40
Coq.Logic.FunctionalExtensionality.equal_f	40	0.69.0	synth with cache (only 1: intros; only 1: subst; only 1: trivial).	0.124762058258	212
Coq.Logic.FunctionalExtensionality.equal_f_dep	40	0.0.0	synth with cache (only 1: intros; only 1: rewrite H; only 1: auto).	0.0168290138245	3
Coq.Logic.FunctionalExtensionality.functional_extensionality	40
Coq.Logic.FunctionalExtensionality.forall_extensionality	40
Coq.Logic.FunctionalExtensionality.forall_extensionalityP	40	0.0.0	synth with cache (only 1: apply functional_extensionality in H; only 1: destruct H; only 1: reflexivity).	0.0174431800842	3
Coq.Logic.FunctionalExtensionality.forall_extensionalityS	40	0.0.0	synth with cache (only 1: apply functional_extensionality in H; only 1: destruct H; only 1: reflexivity).	0.0178101062775	3
Coq.Logic.FunctionalExtensionality.functional_extensionality_dep_good_refl	40
Coq.Logic.FunctionalExtensionality.forall_sig_eq_rect	40
Coq.Logic.FunctionalExtensionality.forall_eq_rect_comp	40
Coq.Logic.FunctionalExtensionality.f_equal__functional_extensionality_dep_good	40
Coq.Logic.FunctionalExtensionality.f_equal__functional_extensionality_dep_good__fun	40	2.14.0.0	synth with cache (only 1: apply forall_eq_rect with (H := H); only 1: clear H g; only 1: rewrite functional_extensionality_dep_good_refl; only 1: reflexivity).	0.617718219757	1745
Coq.Logic.FunctionalExtensionality.eta_expansion_dep	40	1	synth with cache (only 1: reflexivity).	0.0139009952545	2
Coq.Logic.FunctionalExtensionality.eta_expansion	40	1	synth with cache (only 1: reflexivity).	0.0106828212738	2
Coq.Logic.HLevels.forall_hprop	40	128.131.7.194.147.66	synth with cache (only 1: intros n m; only 1: intros H ?; only 1: intro A; only 1: apply functional_extensionality_dep_good; only 1: intro z; only 1: apply H).	37.0024290085	237990
Coq.Logic.HLevels.and_hprop	40
Coq.Logic.HLevels.impl_hprop	40	0.0.0.0	synth with cache (only 1: intros A P H p q; only 1: apply functional_extensionality_dep; only 1: intro x; only 1: apply H).	0.0201590061188	4
Coq.Logic.HLevels.false_hprop	40	0.0	synth with cache (only 1: intros p q; only 1: destruct p, q).	0.0135099887848	2
Coq.Logic.HLevels.true_hprop	40	5.1.0	synth with cache (only 1: intros p q; only 1: destruct p, q; only 1: auto).	0.0886480808258	204
Coq.Logic.HLevels.not_hprop	40	0.0.1.1.0	synth with cache (only 1: intros p q; only 1: intro x; only 1: apply functional_extensionality; only 1: intros; only 1: contradiction).	0.0796749591827	68
Coq.Logic.HLevels.hset_hprop	40
Coq.Logic.HLevels.eq_trans_cancel	40	0.0.1.67.65.193.3.2.129.64	synth with cache (only 1: intro x; only 1: intros p q; only 1: unfold eq_trans, eq_sym, eq_ind; only 1: intro; only 1: intro A; only 1: subst; only 1: intro p; only 1: destruct r, 1; only 1: destruct p; only 1: reflexivity).	13.4285149574	50529
Coq.Logic.HLevels.hset_hOneType	40
Coq.Logic.HLevels.hprop_hprop	40
Coq.Logic.HLevels.hprop_hset	40
Coq.Logic.ClassicalUniqueChoice.unique_choice	40
Coq.Logic.ClassicalUniqueChoice.classic_set_in_prop_context	40
Coq.Logic.ClassicalUniqueChoice.not_not_classic_set	40
Coq.Logic.WKL.is_path_from_characterization	40
Coq.Logic.WKL.is_path_from_restrict	40
Coq.Logic.WKL.inductively_barred_at_monotone	40
Coq.Logic.WKL.inductively_barred_at_imp_is_path_from	40
Coq.Logic.WKL.is_path_from_imp_inductively_barred_at	40
Coq.Logic.WKL.find_left_path	40
Coq.Logic.WKL.Y_unique	40
Coq.Logic.WKL.Y_approx	40
Coq.Logic.WKL.PreWeakKonigsLemma	40
Coq.Logic.WKL.inductively_barred_at_decidable	40
Coq.Logic.WKL.inductively_barred_at_is_path_from_decidable	40
Coq.Logic.WKL.WeakKonigsLemma	40
Coq.Logic.Epsilon.constructive_indefinite_description	40
Coq.Logic.Epsilon.small_drinkers'_paradox	40
Coq.Logic.Epsilon.iota_statement	40
Coq.Logic.Epsilon.constructive_definite_description	40
Coq.Logic.ClassicalDescription.excluded_middle_informative	40
Coq.Logic.ClassicalDescription.classical_definite_description	40
Coq.Logic.ClassicalDescription.dependent_unique_choice	40
Coq.Logic.ClassicalDescription.unique_choice	40
Coq.Logic.EqdepFacts.Dependent_Equality.eq_dep_sym	40	1.3.129.128.3	synth with cache (only 1: intro; only 1: intros H ?; only 1: intro z; only 1: destruct 1; only 1: auto).	0.225756883621	418
Coq.Logic.EqdepFacts.Dependent_Equality.eq_dep_trans	40	0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: auto).	0.0141940116882	3
Coq.Logic.EqdepFacts.Dependent_Equality.eq_dep1_dep	40	0.68.65.3.81.6	synth with cache (only 1: intro; only 1: intro H; only 1: intro x; only 1: inversion 1; only 1: subst; only 1: reflexivity).	2.30762314796	14597
Coq.Logic.EqdepFacts.Dependent_Equality.eq_dep_dep1	40	3.70.65.69	synth with cache (only 1: intro H; only 1: inversion 1; only 1: exists eq_refl; only 1: reflexivity).	0.634211778641	2522
Coq.Logic.EqdepFacts.eq_sigT_eq_dep	40	3.4.64	synth with cache (only 1: inversion 1; only 1: destruct H; only 1: apply eq_dep_intro).	0.224620819092	361
Coq.Logic.EqdepFacts.eq_dep_eq_sigT	40	128.7.131	synth with cache (only 1: intros x' x'' Hx' Hx''; only 1: induction 1; only 1: reflexivity || destruct H).	0.508530855179	1099
Coq.Logic.EqdepFacts.eq_sigT_iff_eq_dep	40	0.1.0.137.7.65.130	synth with cache (only 1: intros h1 h2; only 1: intros A P; only 1: split; only 1: inversion 1; only 1: apply eq_dep_intro; only 1: destruct 1; only 1: reflexivity).	2.55226016045	10576
Coq.Logic.EqdepFacts.eq_sig_eq_dep	40	0.0.0	synth with cache (only 1: intros; only 1: dependent rewrite H; only 1: apply eq_dep_intro).	0.0212759971619	3
Coq.Logic.EqdepFacts.eq_dep_eq_sig	40	0.1	synth with cache (only 1: destruct 1; only 1: reflexivity).	0.0207960605621	12
Coq.Logic.EqdepFacts.eq_sig_iff_eq_dep	40	0.4.128.67.0.0.13.0	synth with cache (only 1: split; only 1: intros; only 1: dependent rewrite H; only 1: apply eq_dep_intro; only 1: inversion 1; only 1: destruct H2; only 1: rewrite H; only 1: reflexivity).	2.72259616852	9898
Coq.Logic.EqdepFacts.eq_sigT_sig_eq	40	0.77.133.5.3.4.2.0.0	synth with cache (only 1: split; only 1: intro; only 1: dependent rewrite H; only 1: exists eq_refl; only 1: reflexivity; only 1: intro; only 1: inversion_clear H; only 1: subst; only 1: reflexivity).	32.0968401432	113317
Coq.Logic.EqdepFacts.eq_sigT_fst	40	0.1.1.0	synth with cache (only 1: intros; only 1: change x2 with (projT1 (existT P x2 H2)); only 1: destruct H; only 1: split).	0.0630419254303	72
Coq.Logic.EqdepFacts.eq_sigT_snd	40
Coq.Logic.EqdepFacts.eq_sig_fst	40	1.131.0	synth with cache (only 1: intros; only 1: inversion_clear H; only 1: split).	0.221189975739	260
Coq.Logic.EqdepFacts.eq_sig_snd	40
Coq.Logic.EqdepFacts.Equivalences.eq_rect_eq_on__eq_dep1_eq_on	40	6.67.67.72	synth with cache (only 1: intro H; only 1: destruct 1; only 1: subst; only 1: auto using eq_sigT_eq_dep, eq_dep_eq_sigT).	0.836490869522	2415
Coq.Logic.EqdepFacts.Equivalences.eq_rect_eq_on__eq_dep_eq_on	40
Coq.Logic.EqdepFacts.Equivalences.eq_dep_eq_on__UIP_on	40
Coq.Logic.EqdepFacts.Equivalences.UIP_on__UIP_refl_on	40	7.130.0	synth with cache (only 1: intro eq_dep_eq; only 1: intro A; only 1: auto).	0.613677978516	1416
Coq.Logic.EqdepFacts.Equivalences.UIP_refl_on__Streicher_K_on	40	2.8.0.2.6.3	synth with cache (only 1: red; only 1: intro; only 1: intro UIP; only 1: intros; only 1: rewrite H; only 1: apply UIP).	5.5727558136	31778
Coq.Logic.EqdepFacts.Equivalences.Streicher_K_on__eq_rect_eq_on	40	73.195.0	synth with cache (only 1: intros eq_rect_eq; only 1: intro A; only 1: auto using eq_sigT_eq_dep, eq_dep_eq_sigT).	0.827100038528	1913
Coq.Logic.EqdepFacts.UIP_shift_on	40
Coq.Logic.EqdepFacts.Corollaries.eq_dep_eq_on__inj_pair2_on	40	3.0.0	synth with cache (only 1: intros eq_rect_eq; only 1: red; only 1: auto using eq_sigT_eq_dep, eq_dep_eq_sigT).	0.0822651386261	96
Coq.Logic.EqdepFacts.f_eq_dep	40	1.2	synth with cache (only 1: destruct 1; only 1: reflexivity).	0.0370650291443	40
Coq.Logic.EqdepFacts.eq_dep_non_dep	40	0.1	synth with cache (only 1: destruct 1; only 1: trivial).	0.0349941253662	23
Coq.Logic.EqdepFacts.f_eq_dep_non_dep	40	0.0	synth with cache (only 1: intros * []; only 1: reflexivity).	0.0147881507874	2
Coq.Logic.PropExtensionalityFacts.PredExt_imp_PropExt	40
Coq.Logic.PropExtensionalityFacts.PredExt_imp_PropFunExt	40
Coq.Logic.PropExtensionalityFacts.PropExt_and_PropFunExt_imp_PredExt	40	6.0.0	synth with cache (only 1: intros Ext A P Q Eq; only 1: intros x; only 1: auto).	0.438556909561	809
Coq.Logic.PropExtensionalityFacts.PropExt_and_PropFunExt_iff_PredExt	40
Coq.Logic.PropExtensionalityFacts.PropExt_imp_ProvPropExt	40	3.64.131.65.70.3.11	synth with cache (only 1: intros; only 1: change A with ((fun _ => A) I); only 1: apply H; only 1: constructor; only 1: firstorder using PredExt_imp_PropExt, PredExt_imp_PropFunExt, PropExt_and_PropFunExt_imp_PredExt; only 1: inversion 1; only 1: auto).	1.87159204483	7520
Coq.Logic.PropExtensionalityFacts.PropExt_imp_RefutPropExt	40	64.0.0.0.0	synth with cache (only 1: intros Ext A Ha; only 1: apply Ext; only 1: split; only 1: trivial; only 1: induction 1).	0.0249559879303	8
Coq.Logic.IndefiniteDescription.constructive_definite_description	40
Coq.Logic.IndefiniteDescription.functional_choice	40
Coq.Logic.Berardi.Berardis_paradox.AC_IF	40
Coq.Logic.Berardi.Berardis_paradox.Retracts.AC	40	2.129.69	synth with cache (only 1: intro H; only 1: reflexivity || destruct H; only 1: assumption).	0.910655975342	1479
Coq.Logic.Berardi.Berardis_paradox.L1	40
Coq.Logic.Berardi.Berardis_paradox.retract_pow_U_U	40
Coq.Logic.Berardi.Berardis_paradox.not_has_fixpoint	40
Coq.Logic.Berardi.Berardis_paradox.classical_proof_irrelevance	40
Coq.Logic.ClassicalEpsilon.constructive_definite_description	40
Coq.Logic.ClassicalEpsilon.excluded_middle_informative	40
Coq.Logic.ClassicalEpsilon.classical_indefinite_description	40
Coq.Logic.ClassicalEpsilon.epsilon_inh_irrelevance	40
Coq.Logic.ClassicalEpsilon.choice	40
Coq.Logic.Decidable.dec_not_not	40	4.0.64.66	synth with cache (only 1: intro z; only 1: destruct 1; only 1: auto; only 1: contradiction).	0.51745390892	1235
Coq.Logic.Decidable.dec_True	40	1.1.0	synth with cache (only 1: unfold decidable; only 1: constructor; only 1: trivial).	0.0160558223724	14
Coq.Logic.Decidable.dec_False	40	0.0	synth with cache (only 1: unfold decidable; only 1: auto).	0.0106081962585	2
Coq.Logic.Decidable.dec_or	40	1.130.67	synth with cache (only 1: unfold decidable; only 1: intros H; only 1: tauto).	0.124675035477	274
Coq.Logic.Decidable.dec_and	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0289499759674	2
Coq.Logic.Decidable.dec_not	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0176150798798	2
Coq.Logic.Decidable.dec_imp	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0239050388336	2
Coq.Logic.Decidable.dec_iff	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.033362865448	2
Coq.Logic.Decidable.not_not	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0153360366821	2
Coq.Logic.Decidable.not_or	40	0	synth with cache (only 1: tauto).	0.0164339542389	1
Coq.Logic.Decidable.not_and	40	0.1	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0263500213623	3
Coq.Logic.Decidable.not_imp	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0682649612427	2
Coq.Logic.Decidable.imp_simp	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0223891735077	2
Coq.Logic.Decidable.not_iff	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0581479072571	2
Coq.Logic.Decidable.not_true_iff	40	8	synth with cache (only 1: tauto).	0.0761258602142	154
Coq.Logic.Decidable.not_false_iff	40	0	synth with cache (only 1: tauto).	0.0108940601349	1
Coq.Logic.Decidable.not_not_iff	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0203468799591	2
Coq.Logic.Decidable.contrapositive	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0241360664368	2
Coq.Logic.Decidable.or_not_l_iff_1	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0282330513	2
Coq.Logic.Decidable.or_not_l_iff_2	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0282678604126	2
Coq.Logic.Decidable.or_not_r_iff_1	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0280289649963	2
Coq.Logic.Decidable.or_not_r_iff_2	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0289568901062	2
Coq.Logic.Decidable.imp_not_l	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0504148006439	2
Coq.Logic.Decidable.not_or_iff	40	1	synth with cache (only 1: tauto).	0.0278151035309	20
Coq.Logic.Decidable.not_and_iff	40	0	synth with cache (only 1: tauto).	0.0184788703918	1
Coq.Logic.Decidable.not_imp_iff	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0370190143585	2
Coq.Logic.Decidable.not_imp_rev_iff	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0372350215912	2
Coq.Logic.Decidable.dec_functional_relation	40
Coq.Logic.WeakFan.Y_unique	40
Coq.Logic.WeakFan.Y_approx	40
Coq.Logic.WeakFan.WeakFanTheorem	40
Coq.MSets.MSetRBT.MakeRaw.singleton_spec	40	2.1.6.130	synth with cache (only 1: compute; only 1: intuition; only 1: inv; only 1: easy).	3.1984372139	4166
Coq.MSets.MSetRBT.MakeRaw.singleton_ok	40	0.1	synth with cache (only 1: red; only 1: auto_tc).	0.0199987888336	3
Coq.MSets.MSetRBT.MakeRaw.makeBlack_spec	40
Coq.MSets.MSetRBT.MakeRaw.makeRed_spec	40	0.0.0.0.0	synth with cache (only 1: destruct s; only 1: simpl; only 1: intuition_in; only 1: simpl; only 1: intuition_in).	0.0962018966675	5
Coq.MSets.MSetRBT.MakeRaw.makeBlack_ok	40	0.0.0.0.1.0.1.1.393	synth with cache (only 1: inversion H; only 1: destruct s; only 1: intuition_in; only 1: intuition; only 1: constructor; only 1: auto; only 1: auto; only 1: auto; only 1: auto).	3.70935201645	1615
Coq.MSets.MSetRBT.MakeRaw.makeRed_ok	40	0.0.0.0.0	synth with cache (only 1: destruct s; only 1: simpl; only 1: ok; only 1: simpl; only 1: ok).	0.0467360019684	5
Coq.MSets.MSetRBT.MakeRaw.rmatch	40
Coq.MSets.MSetRBT.MakeRaw.rrmatch	40
Coq.MSets.MSetRBT.MakeRaw.rrmatch'	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct t as [| [| ] l x r]; only 1: simpl; only 1: now constructor; only 1: simpl; only 1: destruct l as [| [| ] ll lx lr], r as [| [| ] rl rx rr]; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: simpl; only 1: now constructor).	0.237159013748	169
Coq.MSets.MSetRBT.MakeRaw.lbal_match	40
Coq.MSets.MSetRBT.MakeRaw.rbal_match	40	0	synth with cache (only 1: exact (rrmatch _ _ _)).	0.0188508033752	1
Coq.MSets.MSetRBT.MakeRaw.rbal'_match	40
Coq.MSets.MSetRBT.MakeRaw.lbalS_match	40
Coq.MSets.MSetRBT.MakeRaw.rbalS_match	40	0	synth with cache (only 1: exact (rmatch _ _ _)).	0.0200510025024	1
Coq.MSets.MSetRBT.MakeRaw.lbal_spec	40
Coq.MSets.MSetRBT.MakeRaw.lbal_ok	40
Coq.MSets.MSetRBT.MakeRaw.rbal_spec	40
Coq.MSets.MSetRBT.MakeRaw.rbal_ok	40
Coq.MSets.MSetRBT.MakeRaw.rbal'_spec	40
Coq.MSets.MSetRBT.MakeRaw.rbal'_ok	40
Coq.MSets.MSetRBT.MakeRaw.ins_spec	40
Coq.MSets.MSetRBT.MakeRaw.ins_ok	40
Coq.MSets.MSetRBT.MakeRaw.add_spec'	40
Coq.MSets.MSetRBT.MakeRaw.add_spec	40	0.0	synth with cache (only 1: unfold add; only 1: now autorew).	0.058737039566	2
Coq.MSets.MSetRBT.MakeRaw.add_ok	40	3	synth with cache (only 1: eauto with *).	0.0939240455627	64
Coq.MSets.MSetRBT.MakeRaw.lbalS_spec	40
Coq.MSets.MSetRBT.MakeRaw.lbalS_ok	40
Coq.MSets.MSetRBT.MakeRaw.rbalS_spec	40
Coq.MSets.MSetRBT.MakeRaw.rbalS_ok	40
Coq.MSets.MSetRBT.MakeRaw.append_rr_match	40	1	synth with cache (only 1: exact (rmatch _ _ _)).	0.0208749771118	2
Coq.MSets.MSetRBT.MakeRaw.append_bb_match	40	0	synth with cache (only 1: exact (rmatch _ _ _)).	0.0206050872803	1
Coq.MSets.MSetRBT.MakeRaw.append_spec	40
Coq.MSets.MSetRBT.MakeRaw.append_ok	40
Coq.MSets.MSetRBT.MakeRaw.del_spec	40
Coq.MSets.MSetRBT.MakeRaw.del_ok	40
Coq.MSets.MSetRBT.MakeRaw.remove_spec	40
Coq.MSets.MSetRBT.MakeRaw.remove_ok	40	0.0.0.193	synth with cache (only 1: inversion H; only 1: unfold remove; only 1: auto_tc; only 1: ok).	0.221283912659	22
Coq.MSets.MSetRBT.MakeRaw.delmin_spec	40
Coq.MSets.MSetRBT.MakeRaw.remove_min_spec1	40
Coq.MSets.MSetRBT.MakeRaw.remove_min_spec2	40
Coq.MSets.MSetRBT.MakeRaw.remove_min_ok	40
Coq.MSets.MSetRBT.MakeRaw.treeify_zero_spec	40	130	synth with cache (only 1: now destruct 1).	0.0277161598206	11
Coq.MSets.MSetRBT.MakeRaw.treeify_one_spec	40	256.0.384.192.834.13	synth with cache (only 1: setoid_replace 1 with (1 * 1) by now Nat.nzsimpl; only 1: intros n EQ; only 1: Nat.nzsimpl; only 1: induction n as [| k iHk]; only 1: easy; only 1: now simpl).	1.98038387299	6541
Coq.MSets.MSetRBT.MakeRaw.treeify_cont_spec	40
Coq.MSets.MSetRBT.MakeRaw.treeify_aux_spec	40
Coq.MSets.MSetRBT.MakeRaw.plength_aux_spec	40
Coq.MSets.MSetRBT.MakeRaw.plength_spec	40
Coq.MSets.MSetRBT.MakeRaw.treeify_elements	40
Coq.MSets.MSetRBT.MakeRaw.treeify_spec	40
Coq.MSets.MSetRBT.MakeRaw.treeify_ok	40
Coq.MSets.MSetRBT.MakeRaw.filter_aux_elements	40
Coq.MSets.MSetRBT.MakeRaw.filter_elements	40
Coq.MSets.MSetRBT.MakeRaw.filter_spec	40
Coq.MSets.MSetRBT.MakeRaw.filter_ok	40
Coq.MSets.MSetRBT.MakeRaw.partition_aux_spec	40
Coq.MSets.MSetRBT.MakeRaw.partition_spec	40
Coq.MSets.MSetRBT.MakeRaw.partition_spec1	40
Coq.MSets.MSetRBT.MakeRaw.partition_spec2	40	0	synth with cache (only 1: now rewrite partition_spec).	0.020574092865	1
Coq.MSets.MSetRBT.MakeRaw.partition_ok1	40
Coq.MSets.MSetRBT.MakeRaw.partition_ok2	40	0.0	synth with cache (only 1: rewrite partition_spec; only 1: now apply filter_ok).	0.0247659683228	2
Coq.MSets.MSetRBT.MakeRaw.INV_init	40
Coq.MSets.MSetRBT.MakeRaw.INV_sym	40	1.0.0.2.1.1.258.8	synth with cache (only 1: destruct 1; only 1: repeat split; only 1: auto; only 1: trivial; only 1: auto; only 1: intros; only 1: intuition; only 1: auto).	1.173817873	2643
Coq.MSets.MSetRBT.MakeRaw.INV_drop	40
Coq.MSets.MSetRBT.MakeRaw.INV_eq	40
Coq.MSets.MSetRBT.MakeRaw.INV_lt	40
Coq.MSets.MSetRBT.MakeRaw.INV_rev	40
Coq.MSets.MSetRBT.MakeRaw.union_list_ok	40
Coq.MSets.MSetRBT.MakeRaw.linear_union_ok	40
Coq.MSets.MSetRBT.MakeRaw.fold_add_ok	40
Coq.MSets.MSetRBT.MakeRaw.union_ok	40
Coq.MSets.MSetRBT.MakeRaw.union_list_spec	40
Coq.MSets.MSetRBT.MakeRaw.linear_union_spec	40
Coq.MSets.MSetRBT.MakeRaw.fold_add_spec	40
Coq.MSets.MSetRBT.MakeRaw.union_spec'	40
Coq.MSets.MSetRBT.MakeRaw.union_spec	40	0.1.0.1.0.0.0.0.0.0.2	synth with cache (only 1: intros s1 s2 B1 B2; only 1: unfold union; only 1: destruct compare_height; only 1: unfold linear_union; only 1: rewrite treeify_spec, union_list_spec, !rev_elements_rev; only 1: rewrite !InA_rev, InA_nil, !elements_spec1 by auto_tc; only 1: tauto; only 1: rewrite fold_add_spec; only 1: tauto; only 1: rewrite fold_add_spec; only 1: tauto).	16.6707980633	14808
Coq.MSets.MSetRBT.MakeRaw.inter_list_ok	40
Coq.MSets.MSetRBT.MakeRaw.linear_inter_ok	40
Coq.MSets.MSetRBT.MakeRaw.inter_ok	40
Coq.MSets.MSetRBT.MakeRaw.inter_list_spec	40
Coq.MSets.MSetRBT.MakeRaw.linear_inter_spec	40
Coq.MSets.MSetRBT.MakeRaw.mem_proper	40
Coq.MSets.MSetRBT.MakeRaw.inter_spec	40
Coq.MSets.MSetRBT.MakeRaw.diff_list_ok	40
Coq.MSets.MSetRBT.MakeRaw.diff_inter_ok	40
Coq.MSets.MSetRBT.MakeRaw.fold_remove_ok	40	450.0.0.0.0.0.0.0	synth with cache (only 1: rewrite fold_spec, <- fold_left_rev_right; only 1: unfold elt in *; only 1: induction (rev (elements s1)); only 1: simpl; only 1: auto_tc; only 1: simpl; only 1: unfold flip in *; only 1: inA).	0.500326871872	364
Coq.MSets.MSetRBT.MakeRaw.diff_ok	40
Coq.MSets.MSetRBT.MakeRaw.diff_list_spec	40
Coq.MSets.MSetRBT.MakeRaw.linear_diff_spec	40
Coq.MSets.MSetRBT.MakeRaw.fold_remove_spec	40
Coq.MSets.MSetRBT.MakeRaw.diff_spec	40
Coq.MSets.MSetRBT.BalanceProps.rr_nrr_rb	40
Coq.MSets.MSetRBT.BalanceProps.arb_nrr_rb	40	193.0.1.7	synth with cache (only 1: inversion 1; only 1: invrb; only 1: auto; only 1: auto with *).	1.328125	4228
Coq.MSets.MSetRBT.BalanceProps.arb_nr_rb	40	384.458.0.0	synth with cache (only 1: destruct 1; only 1: auto; only 1: generalize H; only 1: easy || now destruct 1).	1.60227298737	4502
Coq.MSets.MSetRBT.BalanceProps.rb_maxdepth	40
Coq.MSets.MSetRBT.BalanceProps.rb_mindepth	40
Coq.MSets.MSetRBT.BalanceProps.maxdepth_upperbound	40
Coq.MSets.MSetRBT.BalanceProps.maxdepth_lowerbound	40	0.0.0.0.0.0.0.0	synth with cache (only 1: intros H; only 1: apply Nat.log2_lt_pow2; only 1: destruct s; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: apply maxdepth_cardinal).	0.0470259189606	8
Coq.MSets.MSetRBT.BalanceProps.singleton_rb	40
Coq.MSets.MSetRBT.BalanceProps.makeBlack_rb	40
Coq.MSets.MSetRBT.BalanceProps.makeRed_rr	40	256.0.0.0.1.0.1	synth with cache (only 1: intros H; only 1: destruct t; only 1: invrb; only 1: descolor; only 1: invrb; only 1: invrb; only 1: now auto).	0.598534822464	611
Coq.MSets.MSetRBT.BalanceProps.lbal_rb	40
Coq.MSets.MSetRBT.BalanceProps.rbal_rb	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.1	synth with cache (only 1: case rbal_match; only 1: intros; only 1: desarb; only 1: invrb; only 1: invrb; only 1: auto; only 1: intros; only 1: desarb; only 1: invrb; only 1: invrb; only 1: auto; only 1: intros; only 1: desarb; only 1: auto; only 1: auto).	0.946460008621	477
Coq.MSets.MSetRBT.BalanceProps.rbal'_rb	40
Coq.MSets.MSetRBT.BalanceProps.lbalS_rb	40
Coq.MSets.MSetRBT.BalanceProps.lbalS_arb	40
Coq.MSets.MSetRBT.BalanceProps.rbalS_rb	40
Coq.MSets.MSetRBT.BalanceProps.rbalS_arb	40
Coq.MSets.MSetRBT.BalanceProps.ifred_notred	40	3.192.1.128.130.1.138	synth with cache (only 1: induction s as [| c l IHl y r IHr]; only 1: firstorder  (subst; auto); only 1: simpl in *; only 1: intro LT; only 1: descolor; only 1: now subst; only 1: intuition_in).	9.06574511528	16323
Coq.MSets.MSetRBT.BalanceProps.ifred_or	40	0.0.1.0.1.6.452	synth with cache (only 1: intros a; only 1: destruct s; only 1: right; only 1: assumption; only 1: descolor; only 1: ok; only 1: ok).	2.08017086983	7627
Coq.MSets.MSetRBT.BalanceProps.ins_rr_rb	40
Coq.MSets.MSetRBT.BalanceProps.ins_arb	40
Coq.MSets.MSetRBT.BalanceProps.add_rb	40
Coq.MSets.MSetRBT.BalanceProps.append_arb_rb	40
Coq.MSets.MSetRBT.BalanceProps.del_arb	40	1.0	synth with cache (only 1: invrb; only 1: auto).	0.0241940021515	3
Coq.MSets.MSetRBT.BalanceProps.remove_rb	40
Coq.MSets.MSetRBT.BalanceProps.treeify_zero_rb	40	66	synth with cache (only 1: now split).	0.0273489952087	7
Coq.MSets.MSetRBT.BalanceProps.treeify_one_rb	40	0.640.64.0.196.64.0.579.321	synth with cache (only 1: repeat red; only 1: intro H0; only 1: simpl; only 1: intro n; only 1: destruct H0; only 1: simpl in *; only 1: Nat.order_nz; only 1: destr_bool; only 1: auto).	38.3691060543	106905
Coq.MSets.MSetRBT.BalanceProps.treeify_cont_rb	40
Coq.MSets.MSetRBT.BalanceProps.treeify_aux_rb	40
Coq.MSets.MSetRBT.BalanceProps.treeify_rb	40
Coq.MSets.MSetRBT.BalanceProps.filter_rb	40	71	synth with cache (only 1: ok).	0.139492034912	367
Coq.MSets.MSetRBT.BalanceProps.partition_rb1	40	643.2.0	synth with cache (only 1: rewrite partition_spec; only 1: unfold filter; only 1: ok).	0.392942905426	862
Coq.MSets.MSetRBT.BalanceProps.partition_rb2	40	0.0.0.1	synth with cache (only 1: unfold partition; only 1: destruct partition_aux; only 1: simpl; only 1: auto_tc).	0.0849339962006	90
Coq.MSets.MSetRBT.BalanceProps.fold_add_rb	40	0.0.0.0.0.0.0.0.704	synth with cache (only 1: intros a; only 1: rewrite fold_spec, <- fold_left_rev_right; only 1: unfold elt in *; only 1: induction (rev (elements s1)); only 1: simpl; only 1: auto_tc; only 1: simpl; only 1: unfold flip in *; only 1: auto_tc).	1.44577598572	2231
Coq.MSets.MSetRBT.BalanceProps.fold_remove_rb	40	0.0.0.1.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite fold_spec, <- fold_left_rev_right; only 1: unfold elt in *; only 1: induction (rev (elements s1)); only 1: simpl; only 1: auto_tc; only 1: simpl; only 1: unfold flip in *; only 1: auto_tc).	0.285355091095	268
Coq.MSets.MSetRBT.BalanceProps.union_rb	40	1.0.0.0.0.0.0.0.0.2.0.0.640.1.133	synth with cache (only 1: assert (le0 : forall n, 0 <= n) by (induction n; auto); only 1: unfold union; only 1: intros a Ha; only 1: destruct compare_height; only 1: unfold linear_union; only 1: auto_tc; only 1: rewrite fold_spec, <- fold_left_rev_right; only 1: unfold elt in *; only 1: induction (rev (elements s1)); only 1: simpl; only 1: auto; only 1: simpl; only 1: unfold flip in *; only 1: auto_tc; only 1: auto_tc).	30.1255970001	46505
Coq.MSets.MSetRBT.BalanceProps.inter_rb	40	0.0.1.0.0.0.0	synth with cache (only 1: intros; only 1: unfold inter; only 1: destruct compare_height; only 1: unfold linear_inter; only 1: auto_tc; only 1: auto_tc; only 1: auto_tc).	0.271610975266	251
Coq.MSets.MSetRBT.BalanceProps.diff_rb	40
Coq.MSets.MSetRBT.Make.remove_min_spec1	40
Coq.MSets.MSetRBT.Make.remove_min_spec2	40
Coq.MSets.MSetPositive.PositiveSet.In_compat	40	3	synth with cache (only 1: solve_proper).	0.147066116333	138
Coq.MSets.MSetPositive.PositiveSet.eq_equiv	40	1.0.0.477	synth with cache (only 1: constructor; only 1: firstorder; only 1: firstorder; only 1: firstorder).	8.41449999809	9462
Coq.MSets.MSetPositive.PositiveSet.mem_spec	40	0.0.0.0	synth with cache (only 1: destr_bool; only 1: split; only 1: congruence; only 1: easy).	0.0332078933716	4
Coq.MSets.MSetPositive.PositiveSet.mem_Leaf	40	0	synth with cache (only 1: trivial).	0.0192890167236	1
Coq.MSets.MSetPositive.PositiveSet.empty_spec	40	640	synth with cache (only 1: reflexivity || discriminate).	0.0251059532166	41
Coq.MSets.MSetPositive.PositiveSet.mem_node	40
Coq.MSets.MSetPositive.PositiveSet.is_empty_spec	40
Coq.MSets.MSetPositive.PositiveSet.subset_Leaf_s	40	128.2	synth with cache (only 1: intros; only 1: now PeanoNat.Nat.nzsimpl).	0.146696090698	45
Coq.MSets.MSetPositive.PositiveSet.subset_spec	40
Coq.MSets.MSetPositive.PositiveSet.equal_subset	40
Coq.MSets.MSetPositive.PositiveSet.equal_spec	40
Coq.MSets.MSetPositive.PositiveSet.eq_dec	40
Coq.MSets.MSetPositive.PositiveSet.lex_Opp	40
Coq.MSets.MSetPositive.PositiveSet.compare_bool_inv	40	448.388	synth with cache (only 1: intros RS' n; only 1: destr_bool).	0.658743143082	292
Coq.MSets.MSetPositive.PositiveSet.compare_inv	40
Coq.MSets.MSetPositive.PositiveSet.lex_Eq	40	128.0.0.0.0.1.1	synth with cache (only 1: intros n m; only 1: split; only 1: destruct n; only 1: now split; only 1: discriminate; only 1: discriminate; only 1: now destruct n).	1.74086618423	1087
Coq.MSets.MSetPositive.PositiveSet.compare_bool_Eq	40	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: easy'; only 1: easy'; only 1: easy'; only 1: easy').	0.114176988602	5
Coq.MSets.MSetPositive.PositiveSet.compare_equal	40
Coq.MSets.MSetPositive.PositiveSet.compare_gt	40
Coq.MSets.MSetPositive.PositiveSet.compare_eq	40
Coq.MSets.MSetPositive.PositiveSet.compare_spec	40
Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_cxe	40
Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_xce	40	0.0.0.0	synth with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0415198802948	4
Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_lxl	40
Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_gxg	40	0.0.0.0	synth with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0361971855164	4
Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_xll	40	0.0.0.0	synth with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0387289524078	4
Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_xgg	40	0.0.0.0	synth with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0344231128693	4
Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_lex	40
Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_compare_bool	40	0.0.0.0.0.0.0.0.0.65	synth with cache (only 1: intro n; only 1: destr_bool; only 1: constructor; only 1: constructor; only 1: ct; only 1: constructor; only 1: constructor; only 1: ct; only 1: constructor; only 1: constructor).	2.3603849411	1190
Coq.MSets.MSetPositive.PositiveSet.lt_spec.compare_x_Leaf	40	0.0.0.3	synth with cache (only 1: induction s as [| l IHl o r IHr]; only 1: reflexivity; only 1: simpl; only 1: trivial).	0.34845995903	139
Coq.MSets.MSetPositive.PositiveSet.lt_spec.compare_empty_x	40
Coq.MSets.MSetPositive.PositiveSet.lt_spec.compare_x_empty	40
Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_compare	40
Coq.MSets.MSetPositive.PositiveSet.lt_strorder	40
Coq.MSets.MSetPositive.PositiveSet.compare_compat_1	40
Coq.MSets.MSetPositive.PositiveSet.compare_compat	40
Coq.MSets.MSetPositive.PositiveSet.lt_compat	40
Coq.MSets.MSetPositive.PositiveSet.add_spec	40
Coq.MSets.MSetPositive.PositiveSet.remove_spec	40
Coq.MSets.MSetPositive.PositiveSet.singleton_spec	40
Coq.MSets.MSetPositive.PositiveSet.union_spec	40
Coq.MSets.MSetPositive.PositiveSet.inter_spec	40
Coq.MSets.MSetPositive.PositiveSet.diff_spec	40
Coq.MSets.MSetPositive.PositiveSet.fold_spec	40
Coq.MSets.MSetPositive.PositiveSet.cardinal_spec	40
Coq.MSets.MSetPositive.PositiveSet.xfilter_spec	40
Coq.MSets.MSetPositive.PositiveSet.filter_spec	40
Coq.MSets.MSetPositive.PositiveSet.xforall_spec	40
Coq.MSets.MSetPositive.PositiveSet.for_all_spec	40
Coq.MSets.MSetPositive.PositiveSet.xexists_spec	40
Coq.MSets.MSetPositive.PositiveSet.exists_spec	40
Coq.MSets.MSetPositive.PositiveSet.partition_filter	40
Coq.MSets.MSetPositive.PositiveSet.partition_spec1	40
Coq.MSets.MSetPositive.PositiveSet.partition_spec2	40	0.0.5	synth with cache (only 1: intros; only 1: rewrite partition_filter; only 1: reflexivity).	12.7397961617	12628
Coq.MSets.MSetPositive.PositiveSet.xelements_spec	40
Coq.MSets.MSetPositive.PositiveSet.elements_spec1	40
Coq.MSets.MSetPositive.PositiveSet.lt_rev_append	40
Coq.MSets.MSetPositive.PositiveSet.elements_spec2	40
Coq.MSets.MSetPositive.PositiveSet.elements_spec2w	40
Coq.MSets.MSetPositive.PositiveSet.choose_spec1	40
Coq.MSets.MSetPositive.PositiveSet.choose_spec2	40
Coq.MSets.MSetPositive.PositiveSet.choose_empty	40
Coq.MSets.MSetPositive.PositiveSet.choose_spec3'	40
Coq.MSets.MSetPositive.PositiveSet.choose_spec3	40
Coq.MSets.MSetPositive.PositiveSet.min_elt_spec1	40
Coq.MSets.MSetPositive.PositiveSet.min_elt_spec3	40
Coq.MSets.MSetPositive.PositiveSet.min_elt_spec2	40
Coq.MSets.MSetPositive.PositiveSet.max_elt_spec1	40
Coq.MSets.MSetPositive.PositiveSet.max_elt_spec3	40
Coq.MSets.MSetPositive.PositiveSet.max_elt_spec2	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.In_1	40	64.13.128	synth with cache (only 1: intro H; only 1: rewrite H; only 1: firstorder).	3.38136720657	11034
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.mem_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.mem_2	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.equal_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.equal_2	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.subset_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.subset_2	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.is_empty_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.is_empty_2	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.add_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.add_2	40	0.0.0	synth with cache (only 1: intros; only 1: apply <- add_spec; only 1: auto with relations).	0.0342819690704	3
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.add_3	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.remove_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.remove_2	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.remove_3	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.singleton_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.singleton_2	40	0.0	synth with cache (only 1: rewrite singleton_spec; only 1: auto with relations).	0.0294020175934	2
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.union_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.union_2	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.union_3	40	1.0	synth with cache (only 1: rewrite union_spec; only 1: auto).	0.0291879177094	3
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.inter_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.inter_2	40	0.0	synth with cache (only 1: rewrite inter_spec; only 1: intuition).	0.0277380943298	2
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.inter_3	40	0.0	synth with cache (only 1: rewrite inter_spec; only 1: intuition).	0.0333769321442	2
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.diff_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.diff_2	40	0.0	synth with cache (only 1: rewrite diff_spec; only 1: intuition).	0.0285999774933	2
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.diff_3	40	0.1	synth with cache (only 1: rewrite diff_spec; only 1: intuition).	0.0394198894501	3
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.filter_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.filter_2	40	0.0.0.0	synth with cache (only 1: intros P; only 1: rewrite filter_spec; only 1: intuition; only 1: intuition).	0.0461730957031	4
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.filter_3	40	0.0.0.136.0	synth with cache (only 1: intros P; only 1: intros m; only 1: rewrite filter_spec; only 1: intuition; only 1: intuition).	2.08237791061	2808
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.for_all_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.for_all_2	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.exists_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.exists_2	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.elements_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.elements_2	40
Coq.MSets.MSetFacts.WFactsOn.IffSpec.In_eq_iff	40	0.513.0	synth with cache (only 1: intros; only 1: rewrite ?BinNat.N.add_0_l, ?BinNat.N.add_0_r, ?H; only 1: intuition).	0.15279006958	28
Coq.MSets.MSetFacts.WFactsOn.IffSpec.mem_iff	40	259	synth with cache (only 1: auto with *).	0.175233840942	47
Coq.MSets.MSetFacts.WFactsOn.IffSpec.not_mem_iff	40
Coq.MSets.MSetFacts.WFactsOn.IffSpec.equal_iff	40	0.387	synth with cache (only 1: red; only 1: intuition).	0.371861934662	83
Coq.MSets.MSetFacts.WFactsOn.IffSpec.subset_iff	40	8	synth with cache (only 1: intuition).	0.381232023239	339
Coq.MSets.MSetFacts.WFactsOn.IffSpec.empty_iff	40
Coq.MSets.MSetFacts.WFactsOn.IffSpec.is_empty_iff	40	1	synth with cache (only 1: intuition).	0.0301620960236	2
Coq.MSets.MSetFacts.WFactsOn.IffSpec.singleton_iff	40	1	synth with cache (only 1: intuition).	0.0233018398285	2
Coq.MSets.MSetFacts.WFactsOn.IffSpec.add_iff	40
Coq.MSets.MSetFacts.WFactsOn.IffSpec.add_neq_iff	40	0.2.0.398.0.65	synth with cache (only 1: constructor; only 1: intros P; only 1: eauto with *; only 1: intros; only 1: apply <- add_spec; only 1: auto with relations).	35.7302050591	93619
Coq.MSets.MSetFacts.WFactsOn.IffSpec.remove_iff	40
Coq.MSets.MSetFacts.WFactsOn.IffSpec.remove_neq_iff	40
Coq.MSets.MSetFacts.WFactsOn.IffSpec.for_all_iff	40	0.0	synth with cache (only 1: intros; only 1: intuition).	0.0373871326447	2
Coq.MSets.MSetFacts.WFactsOn.IffSpec.exists_iff	40	1.0	synth with cache (only 1: intros; only 1: intuition).	0.0384650230408	3
Coq.MSets.MSetFacts.WFactsOn.IffSpec.elements_iff	40	515	synth with cache (only 1: CRelationClasses.simpl_crelation).	0.0349881649017	36
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.mem_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.empty_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.add_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.add_neq_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.remove_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.remove_neq_b	40	64.3.0.0.0.0.0.0.0.384.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_neq_iff s H); only 1: destruct (mem y s); only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition; only 1: intros a Ha; only 1: intuition; only 1: generalize (mem_iff (remove x s) y), (mem_iff s y), (remove_iff s x y); only 1: destruct (mem y s); only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: easy').	6.24712395668	3103
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.singleton_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.union_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.inter_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.diff_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.elements_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.filter_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.for_all_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.exists_b	40
Coq.MSets.MSetFacts.WFactsOn.In_m	40	195.0.320.0.64.2.69	synth with cache (only 1: intro; only 1: intros; only 1: generalize (mem_iff (singleton x) y), (singleton_iff x y); only 1: intuition; only 1: intro n; only 1: intros; only 1: now rewrite <- H).	33.7886309624	36796
Coq.MSets.MSetFacts.WFactsOn.Empty_m	40	66	synth with cache (only 1: firstorder).	0.0339369773865	7
Coq.MSets.MSetFacts.WFactsOn.is_empty_m	40
Coq.MSets.MSetFacts.WFactsOn.mem_m	40
Coq.MSets.MSetFacts.WFactsOn.singleton_m	40
Coq.MSets.MSetFacts.WFactsOn.add_m	40
Coq.MSets.MSetFacts.WFactsOn.remove_m	40
Coq.MSets.MSetFacts.WFactsOn.union_m	40
Coq.MSets.MSetFacts.WFactsOn.inter_m	40
Coq.MSets.MSetFacts.WFactsOn.diff_m	40
Coq.MSets.MSetFacts.WFactsOn.Subset_m	40	0.0	synth with cache (only 1: unfold Equal; only 1: firstorder).	0.0282468795776	2
Coq.MSets.MSetFacts.WFactsOn.subset_m	40
Coq.MSets.MSetFacts.WFactsOn.equal_m	40
Coq.MSets.MSetFacts.WFactsOn.SubsetSetoid	40	0.0.0.64.0.0	synth with cache (only 1: split; only 1: congruence; only 1: intros EQ; only 1: intros; only 1: intro; only 1: intuition).	0.0407199859619	9
Coq.MSets.MSetFacts.WFactsOn.In_s_m	40	0.448.0.1	synth with cache (only 1: intros x y H s s' H0; only 1: rewrite (In_eq_iff s H); only 1: intros Ha; only 1: auto).	0.168197154999	40
Coq.MSets.MSetFacts.WFactsOn.Empty_s_m	40	0.4.448	synth with cache (only 1: intros Hnm Hpq; only 1: compute; only 1: eauto).	2.14802408218	2974
Coq.MSets.MSetFacts.WFactsOn.add_s_m	40	1.0.0.0	synth with cache (only 1: intros x x' Hx s s' Hs a; only 1: rewrite !add_iff, Hx, Hs; only 1: rewrite mem_iff; only 1: intuition).	0.173894166946	25
Coq.MSets.MSetFacts.WFactsOn.remove_s_m	40	1.1.0	synth with cache (only 1: intros x x' Hx s s' Hs a; only 1: rewrite !remove_iff, Hx, Hs; only 1: intuition).	0.0925869941711	5
Coq.MSets.MSetFacts.WFactsOn.union_s_m	40	3.0.448.2	synth with cache (only 1: intros x1 x2 H1 x3 x4 H2; only 1: intros a; only 1: rewrite union_spec; only 1: intuition).	1.625674963	1597
Coq.MSets.MSetFacts.WFactsOn.inter_s_m	40	387.321.65.0.129.320	synth with cache (only 1: intros Hz; only 1: intro; only 1: intros; only 1: intros f Hf; only 1: repeat red; only 1: eauto with *).	5.76801800728	7505
Coq.MSets.MSetFacts.WFactsOn.diff_s_m	40	0.2.0	synth with cache (only 1: intros s1 s1' Hs1 s2 s2' Hs2 a; only 1: rewrite !diff_spec, Hs1, Hs2; only 1: intuition).	0.419219970703	140
Coq.MSets.MSetFacts.WFactsOn.filter_equal	40	0.0.323.320.0.0.388.128.0	synth with cache (only 1: intros f Hf; only 1: intros a b Hb; only 1: intros q; only 1: rewrite filter_spec; only 1: rewrite filter_spec; only 1: unfold respectful, relation_equivalence, predicate_equivalence in *; only 1: firstorder using Sorted_inv; only 1: intuition; only 1: intuition).	15.1602330208	20635
Coq.MSets.MSetFacts.WFactsOn.filter_subset	40	0.0.0	synth with cache (only 1: intros f Hf s s' Hs a; only 1: rewrite !filter_spec, Hs by auto; only 1: intuition).	0.0628459453583	3
Coq.MSets.MSetFacts.WFactsOn.filter_ext	40
Coq.MSets.MSetProperties.WPropertiesOn.In_dec	40	0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (F.mem_iff s x); only 1: case (mem x s); only 1: intuition; only 1: intuition).	0.217373132706	5
Coq.MSets.MSetProperties.WPropertiesOn.Add_Equal	40
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.equal_refl	40	1.0	synth with cache (only 1: intros P; only 1: intuition).	0.0247070789337	3
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.equal_sym	40	2	synth with cache (only 1: intuition).	0.0524399280548	48
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.equal_trans	40	65.264.1	synth with cache (only 1: intros; only 1: rewrite H  at 1; only 1: firstorder).	1.32283997536	1988
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_refl	40	1.448	synth with cache (only 1: intro; only 1: auto).	0.0239989757538	31
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_trans	40	0	synth with cache (only 1: fsetdec).	0.0508081912994	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_antisym	40	1.65	synth with cache (only 1: intros y H0 H1; only 1: intuition).	0.0469300746918	32
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_equal	40	1.0	synth with cache (only 1: intros; only 1: fsetdec).	0.0560669898987	3
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_empty	40	1.576	synth with cache (only 1: intros H; only 1: fsetdec).	0.0940082073212	66
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_remove_3	40	0	synth with cache (only 1: fsetdec).	0.0564661026001	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_diff	40	0.1.64.261.1.1	synth with cache (only 1: intros; only 1: red; only 1: intro H2; only 1: rewrite <- H; only 1: rewrite diff_spec; only 1: intuition).	9.86307191849	14212
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_add_3	40	0.1	synth with cache (only 1: intros H1; only 1: fsetdec).	0.0814039707184	3
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_add_2	40	0	synth with cache (only 1: fsetdec).	0.209449052811	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.in_subset	40	0	synth with cache (only 1: fsetdec).	0.0441980361938	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.double_inclusion	40	0.0.0.8	synth with cache (only 1: intuition; only 1: fsetdec; only 1: fsetdec; only 1: fsetdec).	0.689070940018	951
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_is_empty_1	40	0	synth with cache (only 1: fsetdec).	0.0609481334686	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_is_empty_2	40	0	synth with cache (only 1: fsetdec).	0.0555109977722	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.add_equal	40	2.0	synth with cache (only 1: intros; only 1: fsetdec).	0.0985350608826	22
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.add_add	40	0	synth with cache (only 1: fsetdec).	0.169638872147	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.remove_equal	40	1	synth with cache (only 1: fsetdec).	0.108689069748	2
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.Equal_remove	40	0	synth with cache (only 1: fsetdec).	0.136757135391	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.add_remove	40	0	synth with cache (only 1: fsetdec).	0.272025108337	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.remove_add	40	0	synth with cache (only 1: fsetdec).	0.143096923828	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.singleton_equal_add	40	0	synth with cache (only 1: fsetdec).	0.106827020645	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.remove_singleton_empty	40	0	synth with cache (only 1: fsetdec).	0.291176080704	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_sym	40	0	synth with cache (only 1: fsetdec).	0.10178399086	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_equal	40	1	synth with cache (only 1: intuition fsetdec).	0.0778999328613	2
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_equal_1	40	0	synth with cache (only 1: fsetdec).	0.11292219162	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_equal_2	40	0	synth with cache (only 1: fsetdec).	0.112262010574	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_assoc	40	0	synth with cache (only 1: fsetdec).	0.180042028427	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.add_union_singleton	40	0	synth with cache (only 1: fsetdec).	0.103016853333	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_add	40	0	synth with cache (only 1: fsetdec).	0.188503980637	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_remove_add_1	40	0	synth with cache (only 1: fsetdec).	0.339359998703	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_remove_add_2	40	0	synth with cache (only 1: fsetdec).	0.289866924286	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_1	40	0	synth with cache (only 1: fsetdec).	0.0411701202393	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_2	40	0	synth with cache (only 1: fsetdec).	0.0404858589172	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_3	40	0	synth with cache (only 1: fsetdec).	0.0667090415955	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_4	40	0	synth with cache (only 1: fsetdec).	0.0619261264801	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_5	40	0	synth with cache (only 1: fsetdec).	0.0623018741608	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_union_1	40	0	synth with cache (only 1: fsetdec).	0.0769600868225	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_union_2	40	0	synth with cache (only 1: fsetdec).	0.0771491527557	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.not_in_union	40	0.130	synth with cache (only 1: intros k H1 H2; only 1: fsetdec).	0.0941870212555	21
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_sym	40	0	synth with cache (only 1: fsetdec).	0.0889430046082	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_subset_equal	40	0	synth with cache (only 1: fsetdec).	0.0811219215393	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_equal_1	40	0	synth with cache (only 1: fsetdec).	0.105726957321	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_equal_2	40	0	synth with cache (only 1: fsetdec).	0.106276988983	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_assoc	40	0	synth with cache (only 1: fsetdec).	0.145267963409	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_inter_1	40	0	synth with cache (only 1: fsetdec).	0.205482006073	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_inter_2	40	0	synth with cache (only 1: fsetdec).	0.211930990219	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_add_1	40	0	synth with cache (only 1: fsetdec).	0.182528972626	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_add_2	40	0	synth with cache (only 1: fsetdec).	0.146039009094	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_inter_1	40	0	synth with cache (only 1: fsetdec).	0.0578410625458	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_inter_2	40	0	synth with cache (only 1: fsetdec).	0.0534629821777	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_subset_1	40	0	synth with cache (only 1: fsetdec).	0.0398869514465	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_subset_2	40	0	synth with cache (only 1: fsetdec).	0.0392649173737	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_subset_3	40	0	synth with cache (only 1: fsetdec).	0.055703163147	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_diff_1	40	0	synth with cache (only 1: fsetdec).	0.0693130493164	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_diff_2	40	0	synth with cache (only 1: fsetdec).	0.0794548988342	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.diff_subset	40	0	synth with cache (only 1: fsetdec).	0.0440640449524	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.diff_subset_equal	40	0	synth with cache (only 1: fsetdec).	0.119225978851	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.remove_diff_singleton	40	0	synth with cache (only 1: fsetdec).	0.110110998154	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.diff_inter_empty	40	0	synth with cache (only 1: fsetdec).	0.185348987579	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.diff_inter_all	40	0	synth with cache (only 1: fsetdec).	0.151937961578	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.Add_add	40	2.128.128.0.1	synth with cache (only 1: generalize (F.mem_iff s x); only 1: rewrite F.mem_iff; only 1: intros H; only 1: intro n; only 1: fsetdec).	0.431846857071	132
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.Add_remove	40	0.0.1	synth with cache (only 1: intros; only 1: expAdd; only 1: fsetdec).	0.172842979431	4
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_Add	40	1.1	synth with cache (only 1: expAdd; only 1: fsetdec).	0.238515138626	4
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_Add	40	0.1	synth with cache (only 1: expAdd; only 1: fsetdec).	0.394383907318	3
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_Equal	40	0.0.65.512.11	synth with cache (only 1: generalize (F.mem_iff (inter s s') x), (F.mem_iff s x), (F.mem_iff s' x), (inter_spec s s' x); only 1: intros le_mn2; only 1: intros LT; only 1: expAdd; only 1: fsetdec).	11.3189110756	6062
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_Add_2	40	0.0	synth with cache (only 1: expAdd; only 1: fsetdec).	0.286638975143	2
Coq.MSets.MSetProperties.WPropertiesOn.elements_Empty	40
Coq.MSets.MSetProperties.WPropertiesOn.elements_empty	40
Coq.MSets.MSetProperties.WPropertiesOn.of_list_1	40
Coq.MSets.MSetProperties.WPropertiesOn.of_list_2	40
Coq.MSets.MSetProperties.WPropertiesOn.of_list_3	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_spec_right	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rec	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rec_bis	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rec_nodep	40	193.3.0.457.385	synth with cache (only 1: intros H H'; only 1: intros a b n; only 1: apply fold_rec; only 1: auto with sets; only 1: firstorder).	12.8495600224	35708
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rec_weak	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rel	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.set_induction	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.set_induction_bis	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_identity	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_0	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_1	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_2	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_1b	40	65.129.0.0.0.451.1.451.128.64	synth with cache (only 1: intro EQ; only 1: intro; only 1: intros a b; only 1: intros; only 1: red in H; only 1: apply fold_rec_bis; only 1: eauto; only 1: auto with *; only 1: pose proof H as H'; only 1: firstorder).	29.5867681503	71749
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_commutes	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_init	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_equal	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_empty	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_add	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.add_fold	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.remove_fold_1	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.remove_fold_2	40	0.0.0	synth with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set relations).	0.036712884903	3
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_union_inter	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_diff_inter	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_union	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_plus	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_fold	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_0	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_1	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_2	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_Empty	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_inv_1	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_inv_2	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_inv_2b	40	0.0.512.128.0.0.0.1	synth with cache (only 1: intros; only 1: rewrite cardinal_spec in H; only 1: generalize (elements_2 (s:=s)); only 1: destruct (elements s); only 1: simpl in *; only 1: intuition auto; PeanoNat.Nat.Private_Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: exists e; only 1: auto with relations).	0.33354306221	265
Coq.MSets.MSetProperties.WPropertiesOn.Equal_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_m	40
Coq.MSets.MSetProperties.WPropertiesOn.empty_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.singleton_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.diff_inter_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.union_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.subset_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.subset_cardinal_lt	40
Coq.MSets.MSetProperties.WPropertiesOn.union_inter_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.union_cardinal_inter	40
Coq.MSets.MSetProperties.WPropertiesOn.union_cardinal_le	40	517.0.8	synth with cache (only 1: intros a Ha; only 1: rewrite <- union_inter_cardinal; only 1: CRelationClasses.simpl_crelation).	3.24778294563	6481
Coq.MSets.MSetProperties.WPropertiesOn.add_cardinal_1	40	0.0	synth with cache (only 1: intros a b H; only 1: auto with set).	0.0254390239716	2
Coq.MSets.MSetProperties.WPropertiesOn.add_cardinal_2	40	0.0.0.4	synth with cache (only 1: intros; only 1: apply cardinal_2 with x; only 1: auto with set; only 1: auto with set).	4.10108804703	2349
Coq.MSets.MSetProperties.WPropertiesOn.remove_cardinal_1	40
Coq.MSets.MSetProperties.WPropertiesOn.remove_cardinal_2	40	1.0	synth with cache (only 1: intros; only 1: auto with set).	0.0743579864502	60
Coq.MSets.MSetProperties.OrdProperties.sort_equivlistA_eqlistA	40
Coq.MSets.MSetProperties.OrdProperties.gtb_1	40
Coq.MSets.MSetProperties.OrdProperties.leb_1	40
Coq.MSets.MSetProperties.OrdProperties.gtb_compat	40	66.326.1.0.193	synth with cache (only 1: intros s2; only 1: intro H; only 1: intros m; only 1: compute; only 1: Dec.fsetdec).	14.0792460442	7445
Coq.MSets.MSetProperties.OrdProperties.leb_compat	40	0.1.195.769.0	synth with cache (only 1: intros a b H; only 1: apply eq_iff_eq_true; only 1: compute; only 1: rewrite H; only 1: auto).	2.2860250473	1468
Coq.MSets.MSetProperties.OrdProperties.elements_split	40
Coq.MSets.MSetProperties.OrdProperties.elements_Add	40
Coq.MSets.MSetProperties.OrdProperties.elements_Add_Above	40
Coq.MSets.MSetProperties.OrdProperties.elements_Add_Below	40
Coq.MSets.MSetProperties.OrdProperties.set_induction_max	40
Coq.MSets.MSetProperties.OrdProperties.set_induction_min	40
Coq.MSets.MSetProperties.OrdProperties.fold_3	40
Coq.MSets.MSetProperties.OrdProperties.fold_4	40
Coq.MSets.MSetProperties.OrdProperties.FoldOpt.fold_equal	40
Coq.MSets.MSetProperties.OrdProperties.FoldOpt.add_fold	40	0.0.0	synth with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).	0.0355360507965	3
Coq.MSets.MSetProperties.OrdProperties.FoldOpt.remove_fold_2	40	0.0.0	synth with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).	0.0392498970032	3
Coq.MSets.MSetProperties.OrdProperties.choose_equal	40
Coq.MSets.MSetAVL.MakeRaw.singleton_spec	40
Coq.MSets.MSetAVL.MakeRaw.singleton_ok	40	11	synth with cache (only 1: intuition_in).	0.335232973099	570
Coq.MSets.MSetAVL.MakeRaw.create_spec	40	0.0.193.706.835.65	synth with cache (only 1: intros n; only 1: intros E; only 1: intros a; only 1: compute; only 1: intuition; only 1: intuition_in).	27.8642477989	26935
Coq.MSets.MSetAVL.MakeRaw.create_ok	40	270	synth with cache (only 1: now right).	1.05990004539	2244
Coq.MSets.MSetAVL.MakeRaw.bal_spec	40
Coq.MSets.MSetAVL.MakeRaw.bal_ok	40
Coq.MSets.MSetAVL.MakeRaw.add_spec'	40
Coq.MSets.MSetAVL.MakeRaw.add_spec	40	0.0.0.0.0.0.1.0.0.0	synth with cache (only 1: induct ltac:(s) ltac:(x); only 1: intuition_in; only 1: intuition_in; only 1: eauto; only 1: rewrite ?bal_spec, ?IHl, ?IHr; only 1: intuition_in; only 1: intuition_in; only 1: rewrite ?bal_spec, ?IHl, ?IHr; only 1: intuition_in; only 1: eauto).	1.82005500793	584
Coq.MSets.MSetAVL.MakeRaw.add_ok	40
Coq.MSets.MSetAVL.MakeRaw.join_spec	40
Coq.MSets.MSetAVL.MakeRaw.join_ok	40
Coq.MSets.MSetAVL.MakeRaw.remove_min_spec	40
Coq.MSets.MSetAVL.MakeRaw.remove_min_ok	40
Coq.MSets.MSetAVL.MakeRaw.remove_min_gt_tree	40
Coq.MSets.MSetAVL.MakeRaw.merge_spec	40
Coq.MSets.MSetAVL.MakeRaw.merge_ok	40
Coq.MSets.MSetAVL.MakeRaw.remove_spec	40
Coq.MSets.MSetAVL.MakeRaw.remove_ok	40
Coq.MSets.MSetAVL.MakeRaw.concat_spec	40
Coq.MSets.MSetAVL.MakeRaw.concat_ok	40
Coq.MSets.MSetAVL.MakeRaw.split_spec1	40
Coq.MSets.MSetAVL.MakeRaw.split_spec2	40
Coq.MSets.MSetAVL.MakeRaw.split_spec3	40
Coq.MSets.MSetAVL.MakeRaw.split_ok	40
Coq.MSets.MSetAVL.MakeRaw.split_ok1	40
Coq.MSets.MSetAVL.MakeRaw.split_ok2	40	0.0.1	synth with cache (only 1: destruct (@split_ok s x); only 1: auto; only 1: auto).	0.0258140563965	4
Coq.MSets.MSetAVL.MakeRaw.inter_spec_ok	40
Coq.MSets.MSetAVL.MakeRaw.inter_spec	40
Coq.MSets.MSetAVL.MakeRaw.inter_ok	40
Coq.MSets.MSetAVL.MakeRaw.diff_spec_ok	40
Coq.MSets.MSetAVL.MakeRaw.diff_spec	40
Coq.MSets.MSetAVL.MakeRaw.diff_ok	40
Coq.MSets.MSetAVL.MakeRaw.union_spec	40
Coq.MSets.MSetAVL.MakeRaw.union_ok	40
Coq.MSets.MSetAVL.MakeRaw.filter_spec	40
Coq.MSets.MSetAVL.MakeRaw.filter_weak_spec	40
Coq.MSets.MSetAVL.MakeRaw.filter_ok	40
Coq.MSets.MSetAVL.MakeRaw.partition_spec1'	40
Coq.MSets.MSetAVL.MakeRaw.partition_spec2'	40	0.0.0.0.0.0	synth with cache (only 1: induction s as [| h l Hl x r Hr]; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite <- Hl, <- Hr; only 1: now destruct (partition f l), (partition f r), (f x)).	0.0618660449982	6
Coq.MSets.MSetAVL.MakeRaw.partition_spec1	40
Coq.MSets.MSetAVL.MakeRaw.partition_spec2	40
Coq.MSets.MSetAVL.MakeRaw.partition_ok1	40
Coq.MSets.MSetAVL.MakeRaw.partition_ok2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.mem_eq	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (mem_iff s x), (mem_iff s y), (In_eq_iff s H); only 1: destruct (mem x s); only 1: destruct (mem y s); only 1: intuition; only 1: intuition; only 1: destruct (mem y s); only 1: intuition; only 1: intuition).	2.76520013809	428
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_mem_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_mem_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.subset_mem_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.subset_mem_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.empty_mem	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.is_empty_equal_empty	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.choose_mem_1	40	261	synth with cache (only 1: auto with *).	1.19032907486	656
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.choose_mem_2	40	0	synth with cache (only 1: auto with set).	0.0388309955597	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_mem_1	40	128.0	synth with cache (only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_iff s x y); only 1: simpl_relation).	0.868371009827	49
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_mem_2	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_neq_iff s H); only 1: destruct (mem y s); only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition).	1.16713500023	335
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.remove_mem_1	40	1.0.1	synth with cache (only 1: rewrite <- not_mem_iff; only 1: rewrite remove_spec; only 1: intuition).	0.0431900024414	5
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.remove_mem_2	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (mem_iff (remove x s) y), (mem_iff s y), (remove_neq_iff s H); only 1: destruct (mem y s); only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition).	0.968786001205	463
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.singleton_equal_add	40	0.1.128.0	synth with cache (only 1: generalize (mem_iff (singleton x) y), (singleton_iff x y); only 1: intro n; only 1: intros; only 1: auto with set).	0.0989110469818	21
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_mem	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: generalize (mem_iff (union s s') x), (mem_iff s x), (mem_iff s' x), (union_spec s s' x); only 1: destruct (mem x s); only 1: destruct (mem x s'); only 1: destruct (mem x (union s s')); only 1: intuition; only 1: intuition; only 1: destruct (mem x (union s s')); only 1: intuition; only 1: intuition; only 1: destruct (mem x s'); only 1: destruct (mem x (union s s')); only 1: intuition; only 1: intuition; only 1: destruct (mem x (union s s')); only 1: intuition; only 1: intuition).	3.51204013824	596
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_mem	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: generalize (mem_iff (inter s s') x), (mem_iff s x), (mem_iff s' x), (inter_spec s s' x); only 1: destruct (mem x s); only 1: destruct (mem x s'); only 1: destruct (mem x (inter s s')); only 1: intuition; only 1: intuition; only 1: destruct (mem x (inter s s')); only 1: intuition; only 1: intuition; only 1: destruct (mem x s'); only 1: destruct (mem x (inter s s')); only 1: intuition; only 1: intuition; only 1: destruct (mem x (inter s s')); only 1: intuition; only 1: intuition).	2.85297489166	854
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.diff_mem	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: generalize (mem_iff (diff s s') x), (mem_iff s x), (mem_iff s' x), (diff_spec s s' x); only 1: destruct (mem x s); only 1: destruct (mem x s'); only 1: destruct (mem x (diff s s')); only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: destruct (mem x (diff s s')); only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: destruct (mem x s'); only 1: destruct (mem x (diff s s')); only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: destruct (mem x (diff s s')); only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).	5.78305506706	1419
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.mem_3	40	0.2	synth with cache (only 1: rewrite <- not_mem_iff; only 1: intuition).	0.043182849884	4
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.mem_4	40	0.2	synth with cache (only 1: rewrite <- not_mem_iff; only 1: intuition).	0.102694988251	33
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_refl	40	1.0	synth with cache (only 1: apply eq_true_iff_eq; only 1: intuition).	0.0497040748596	3
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_sym	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_trans	40	390.132	synth with cache (only 1: intro; only 1: eauto with *).	31.6631140709	22661
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_equal	40	0.1.7	synth with cache (only 1: intros H; only 1: rewrite (equal_2 H); only 1: auto).	0.904575109482	703
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_cardinal	40	1.0	synth with cache (only 1: intros; only 1: auto with set).	0.0331621170044	3
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.subset_refl	40	1.0	synth with cache (only 1: apply subset_1; only 1: auto with set).	0.0227398872375	3
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.subset_antisym	40	195	synth with cache (only 1: auto with *).	1.33424305916	135
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.subset_trans	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.subset_equal	40	2	synth with cache (only 1: auto with set).	0.0256929397583	3
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.choose_mem_3	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.choose_mem_4	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_mem_3	40	1.0	synth with cache (only 1: intro; only 1: auto with set relations).	0.0334489345551	3
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_equal	40	0	synth with cache (only 1: auto with set).	0.0252950191498	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.remove_mem_3	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.remove_equal	40	0.3	synth with cache (only 1: rewrite <- not_mem_iff; only 1: auto with set).	0.447316884995	100
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_remove	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.remove_add	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.is_empty_cardinal	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.singleton_mem_1	40	1.0.0.0	synth with cache (only 1: generalize (mem_iff (singleton x) y), (singleton_iff x y); only 1: destruct (mem y (singleton x)); only 1: intuition; only 1: intuition).	0.468387126923	27
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.singleton_mem_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.singleton_mem_3	40	0.0.1.0	synth with cache (only 1: generalize (mem_iff (singleton x) y), (singleton_iff x y); only 1: destruct (mem y (singleton x)); only 1: intuition; only 1: intuition).	0.0554909706116	5
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_sym	40	0	synth with cache (only 1: auto with set).	0.0216479301453	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_subset_equal	40	0	synth with cache (only 1: auto with set).	0.0401709079742	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_equal_1	40	0	synth with cache (only 1: auto with set).	0.028687953949	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_equal_2	40	0	synth with cache (only 1: auto with set).	0.0266461372375	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_assoc	40	0	synth with cache (only 1: auto with set).	0.0238192081451	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_union_singleton	40	0	synth with cache (only 1: auto with set relations).	0.0226681232452	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_add	40	0	synth with cache (only 1: auto with set).	0.0217700004578	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_subset_1	40	1	synth with cache (only 1: auto with set).	0.0249600410461	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_subset_2	40	0	synth with cache (only 1: auto with set).	0.0217480659485	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_subset_3	40	0.0	synth with cache (only 1: do 3 rewrite <- subset_iff; only 1: Dec.fsetdec).	0.104973077774	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_sym	40	0	synth with cache (only 1: auto with set).	0.022656917572	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_subset_equal	40	0	synth with cache (only 1: auto with set).	0.0282089710236	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_equal_1	40	0	synth with cache (only 1: auto with set).	0.0265698432922	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_equal_2	40	0	synth with cache (only 1: auto with set).	0.0258858203888	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_assoc	40	0	synth with cache (only 1: auto with set).	0.0228469371796	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_inter_1	40	0	synth with cache (only 1: auto with set).	0.0223441123962	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_inter_2	40	0	synth with cache (only 1: auto with set).	0.0225520133972	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_add_1	40	0	synth with cache (only 1: auto with set).	0.0248830318451	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_add_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_subset_1	40	0	synth with cache (only 1: auto with set).	0.0229439735413	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_subset_2	40	0	synth with cache (only 1: auto with set).	0.0225739479065	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_subset_3	40	1.0.0	synth with cache (only 1: intros; only 1: apply subset_1; only 1: auto with set).	0.0652720928192	4
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.diff_subset	40	0	synth with cache (only 1: auto with set).	0.0219168663025	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.diff_subset_equal	40	0	synth with cache (only 1: auto with set).	0.0299160480499	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.remove_inter_singleton	40	1	synth with cache (only 1: auto with set).	0.021833896637	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.diff_inter_empty	40	0	synth with cache (only 1: auto with set).	0.0218098163605	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.diff_inter_all	40	0	synth with cache (only 1: auto with set).	0.021913766861	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.set_rec	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.exclusive_set	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.fold_empty	40	0.0	synth with cache (only 1: apply fold_1b; only 1: auto with set).	0.0356979370117	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.fold_equal	40	67.0.0.0.0.1.128	synth with cache (only 1: intros E; only 1: apply fold_equal; only 1: auto with set; only 1: auto with set; only 1: auto with set relations; only 1: destruct (fold_0 s i f) as (l, (Hl, (Hl1, Hl2))); only 1: eauto with *).	16.5929389	5113
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.fold_add	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.add_fold	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.remove_fold_1	40	2.2.1.0.0.0.2.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: rewrite not_mem_iff; only 1: auto with set; only 1: auto with set relations).	4.89654898643	6253
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.remove_fold_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.fold_union	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_cardinal_1	40	0	synth with cache (only 1: auto with set).	0.021595954895	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_cardinal_2	40	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: change S with ((fun _ => S) x); only 1: apply MP.fold_add with (eqA := Logic.eq); only 1: auto with *; only 1: congruence; only 1: auto with *; only 1: auto).	0.0648658275604	8
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_cardinal_1	40	0.0.0.2.0.0.0.0	synth with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: change S with ((fun _ => S) x); only 1: apply MP.remove_fold_1 with (eqA := Logic.eq); only 1: auto with *; only 1: congruence; only 1: auto with *; only 1: auto).	1.28648710251	1255
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_cardinal_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_cardinal	40	0.0.0.0.0.0.2.0.0.0.0.512	synth with cache (only 1: intros H4; only 1: intros; only 1: do 3 rewrite cardinal_fold; only 1: rewrite <- fold_plus; only 1: apply MP.fold_union; only 1: split; only 1: congruence; only 1: auto; only 1: congruence; only 1: congruence; only 1: auto; only 1: auto).	5.0529589653	7250
Coq.MSets.MSetEqProperties.WEqPropertiesOn.subset_cardinal	40	65.0	synth with cache (only 1: intros; only 1: firstorder).	0.0456750392914	6
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.Comp'	40	0.640.2.66.385	synth with cache (only 1: intros H; only 1: intros m; only 1: intuition; only 1: f_equiv; only 1: intuition).	1.09629297256	779
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.filter_mem	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_filter	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.exists_filter	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.partition_filter_1	40	706	synth with cache (only 1: CRelationClasses.simpl_crelation).	0.0943431854248	71
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.partition_filter_2	40	0	synth with cache (only 1: auto with set).	0.027820110321	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.filter_add_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.filter_add_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.add_filter_1	40	0.0.0.768.0.67.0.0	synth with cache (only 1: red; only 1: intros; only 1: intros H1; only 1: do 2 (rewrite filter_spec; auto); only 1: firstorder using Sorted_inv; only 1: rewrite <- H; only 1: apply Comp; only 1: auto with relations).	3.59853100777	1436
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.add_filter_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.union_filter	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.filter_union	40	0.0.0.64.1.0.194.0.577	synth with cache (only 1: intros LE EQ; only 1: red; only 1: intro H1; only 1: set_iff; only 1: repeat rewrite filter_spec; only 1: Dec.fsetdec; only 1: auto; only 1: auto; only 1: auto).	8.65140509605	6758
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_mem_1	40	450.0.769.0.0.1	synth with cache (only 1: intros; only 1: apply for_all_1; only 1: auto; only 1: vm_compute; only 1: intros; only 1: eauto with *).	1.01864600182	654
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_mem_2	40	0.66.1.0	synth with cache (only 1: intros; only 1: rewrite <- (for_all_iff s (f:=f)) in H; only 1: auto with set; only 1: auto).	0.658587932587	699
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_mem_3	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_mem_4	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_exists	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool'.Comp'	40	0.0.0.0	synth with cache (only 1: repeat red; only 1: intros; only 1: f_equal; only 1: auto).	0.0457079410553	4
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool'.exists_mem_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool'.exists_mem_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool'.exists_mem_3	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool'.exists_mem_4	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Sum.sum_plus	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Sum.sum_filter	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Sum.fold_compat	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Sum.sum_compat	40
Coq.MSets.MSetDecide.WDecideOn.MSetLogicalFacts.test_push	40	1.0.0	synth with cache (only 1: unfold decidable; only 1: intros A R1 Sym1 B R2 Sym2 C R3 f Hf; only 1: auto).	0.0392270088196	4
Coq.MSets.MSetDecide.WDecideOn.MSetLogicalFacts.test_pull	40	1	synth with cache (only 1: tauto).	0.809029102325	2
Coq.MSets.MSetDecide.WDecideOn.MSetDecideAuxiliary.eq_refl_iff	40	2	synth with cache (only 1: intuition).	0.0181639194489	3
Coq.MSets.MSetDecide.WDecideOn.MSetDecideAuxiliary.dec_In	40
Coq.MSets.MSetDecide.WDecideOn.MSetDecideAuxiliary.dec_eq	40
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_trans_1	40
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_trans_2	40
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_neq_trans_1	40
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_neq_trans_2	40	0.65	synth with cache (only 1: intros n EQ; only 1: fsetdec).	0.44534611702	197
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_In_singleton	40	0	synth with cache (only 1: fsetdec).	0.0296189785004	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_add_In	40	2.73	synth with cache (only 1: intros H2 H3; only 1: fsetdec).	7.35119700432	17155
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_Subset_add_remove	40	3.576.258.2	synth with cache (only 1: intro n; only 1: intros EQ; only 1: intros s; only 1: fsetdec).	1.62668085098	1791
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_disjunction	40	8.64	synth with cache (only 1: intros a b Ha Hb; only 1: fsetdec).	3.88000488281	6201
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_not_In_disj	40	0.320.0	synth with cache (only 1: intros n m; only 1: intro EQ; only 1: fsetdec).	0.660368919373	69
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_not_In_conj	40	0	synth with cache (only 1: fsetdec).	0.313501119614	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_iff_conj	40	0	synth with cache (only 1: fsetdec).	0.073940038681	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_set_ops_1	40	321.0.64.64.454.0	synth with cache (only 1: red; only 1: intros x y; only 1: intros H4; only 1: intros a Ha; only 1: intuition; only 1: fsetdec).	12.2111680508	4959
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.eq_chain_test	40	0.1	synth with cache (only 1: intros f Hf s s' Hs a; only 1: fsetdec).	0.355822086334	3
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_too_complex	40	0.0.451.384.192	synth with cache (only 1: intros a m; only 1: intros N; only 1: intros P F; only 1: rewrite singleton_spec; only 1: intuition).	3.46400117874	4517
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.function_test_1	40	0	synth with cache (only 1: fsetdec).	0.0854229927063	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.function_test_2	40	0	synth with cache (only 1: fsetdec).	0.157248973846	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_baydemir	40	0	synth with cache (only 1: fsetdec).	0.0658349990845	1
Coq.MSets.MSetGenTree.Props.ltb_tree_iff	40
Coq.MSets.MSetGenTree.Props.gtb_tree_iff	40
Coq.MSets.MSetGenTree.Props.isok_iff	40
Coq.MSets.MSetGenTree.Props.isok_Ok	40
Coq.MSets.MSetGenTree.Props.In_1	40
Coq.MSets.MSetGenTree.Props.In_compat	40
Coq.MSets.MSetGenTree.Props.In_node_iff	40	0.256.1	synth with cache (only 1: intros x y z; only 1: intros Hfst Hsnd; only 1: intuition_in).	0.128017902374	30
Coq.MSets.MSetGenTree.Props.In_leaf_iff	40	0.66	synth with cache (only 1: repeat red; only 1: intuition_in).	0.0565569400787	32
Coq.MSets.MSetGenTree.Props.lt_leaf	40	1.128.193	synth with cache (only 1: intros N; only 1: intros n IH; only 1: now rewrite <- ?Nat.succ_le_mono).	0.0371210575104	21
Coq.MSets.MSetGenTree.Props.gt_leaf	40	0.0	synth with cache (only 1: red; only 1: inversion 1).	0.023756980896	2
Coq.MSets.MSetGenTree.Props.lt_tree_node	40	0.0.0	synth with cache (only 1: unfold lt_tree; only 1: intuition_in; only 1: order).	0.0630829334259	3
Coq.MSets.MSetGenTree.Props.gt_tree_node	40	0.0.1	synth with cache (only 1: unfold gt_tree; only 1: intuition_in; only 1: order).	0.137907028198	4
Coq.MSets.MSetGenTree.Props.lt_tree_not_in	40	0.3.0.512.0.192	synth with cache (only 1: intro Eq; only 1: firstorder  (subst; auto); only 1: repeat red; only 1: intuition_in; only 1: eapply Nat.Private_OrderTac.Tac.lt_irrefl; only 1: eauto).	1.41195416451	2377
Coq.MSets.MSetGenTree.Props.lt_tree_trans	40	0.577.0.128	synth with cache (only 1: intro m; only 1: intros; only 1: intros LE EQ; only 1: order).	0.162105083466	123
Coq.MSets.MSetGenTree.Props.gt_tree_not_in	40	0.0.0	synth with cache (only 1: intros; only 1: intro; only 1: order).	0.0267050266266	3
Coq.MSets.MSetGenTree.Props.gt_tree_trans	40	0	synth with cache (only 1: eauto).	0.0184020996094	1
Coq.MSets.MSetGenTree.Props.lt_tree_compat	40	2.128.512.3.0.0.0	synth with cache (only 1: apply proper_sym_impl_iff_2; only 1: auto with *; only 1: auto with *; only 1: intros x x' Hxx' l l' Hll'; only 1: intros op Hop; only 1: simpl_relation; only 1: order).	8.39944386482	10413
Coq.MSets.MSetGenTree.Props.gt_tree_compat	40	130.128.512.448.384.0.64.384.0.0.0	synth with cache (only 1: apply proper_sym_impl_iff_2; only 1: auto with *; only 1: auto with *; only 1: red; only 1: red; only 1: intros; only 1: intro m; only 1: intros P H0 HS; only 1: intros N; only 1: rewrite <- H; only 1: CRelationClasses.simpl_crelation).	1.92928099632	2311
Coq.MSets.MSetGenTree.Props.empty_spec	40	642.513	synth with cache (only 1: intro Ha; only 1: Nat.auto').	0.132971048355	234
Coq.MSets.MSetGenTree.Props.empty_ok	40	130	synth with cache (only 1: auto with datatypes).	0.0153620243073	11
Coq.MSets.MSetGenTree.Props.is_empty_spec	40	9.0.192.0.0.0.0.68.256.1.64.0.0.0	synth with cache (only 1: induction s as [| c l IHl y r IHr]; only 1: simpl; only 1: intuition_in; only 1: intro Eq; only 1: intuition; only 1: destruct H; only 1: easy; only 1: simpl; only 1: split; only 1: intros; only 1: discriminate; only 1: compute; only 1: intros; only 1: eauto).	21.7416181564	19277
Coq.MSets.MSetGenTree.Props.mem_spec	40
Coq.MSets.MSetGenTree.Props.min_elt_spec1	40
Coq.MSets.MSetGenTree.Props.min_elt_spec2	40
Coq.MSets.MSetGenTree.Props.min_elt_spec3	40
Coq.MSets.MSetGenTree.Props.max_elt_spec1	40
Coq.MSets.MSetGenTree.Props.max_elt_spec2	40
Coq.MSets.MSetGenTree.Props.max_elt_spec3	40	0.0.0.0.0.0.0.1	synth with cache (only 1: functional induction (max_elt s); only 1: red; only 1: red; only 1: inversion 2; only 1: inversion 1; only 1: intro H0; only 1: destruct (IHo H0 _x3); only 1: auto).	0.335016965866	227
Coq.MSets.MSetGenTree.Props.choose_spec1	40	0.0.0.1.128.128.1.320.13	synth with cache (only 1: induction s as [| c l IHl y r IHr]; only 1: intros Base Step; only 1: easy; only 1: destruct l; only 1: intros l; only 1: simpl; only 1: inversion 1; only 1: auto; only 1: auto).	19.5293450356	30400
Coq.MSets.MSetGenTree.Props.choose_spec2	40
Coq.MSets.MSetGenTree.Props.choose_spec3	40
Coq.MSets.MSetGenTree.Props.elements_spec1'	40
Coq.MSets.MSetGenTree.Props.elements_spec1	40
Coq.MSets.MSetGenTree.Props.elements_spec2'	40
Coq.MSets.MSetGenTree.Props.elements_spec2	40
Coq.MSets.MSetGenTree.Props.elements_spec2w	40
Coq.MSets.MSetGenTree.Props.elements_aux_cardinal	40
Coq.MSets.MSetGenTree.Props.elements_cardinal	40
Coq.MSets.MSetGenTree.Props.elements_app	40
Coq.MSets.MSetGenTree.Props.elements_node	40
Coq.MSets.MSetGenTree.Props.rev_elements_app	40
Coq.MSets.MSetGenTree.Props.rev_elements_node	40
Coq.MSets.MSetGenTree.Props.rev_elements_rev	40
Coq.MSets.MSetGenTree.Props.sorted_app_inv	40
Coq.MSets.MSetGenTree.Props.elements_sort_ok	40
Coq.MSets.MSetGenTree.Props.for_all_spec	40
Coq.MSets.MSetGenTree.Props.exists_spec	40
Coq.MSets.MSetGenTree.Props.fold_spec'	40
Coq.MSets.MSetGenTree.Props.fold_spec	40
Coq.MSets.MSetGenTree.Props.subsetl_spec	40
Coq.MSets.MSetGenTree.Props.subsetr_spec	40
Coq.MSets.MSetGenTree.Props.subset_spec	40
Coq.MSets.MSetGenTree.Props.eq_equiv	40	0	synth with cache (only 1: firstorder).	0.123435974121	1
Coq.MSets.MSetGenTree.Props.eq_Leq	40
Coq.MSets.MSetGenTree.Props.lt_strorder	40
Coq.MSets.MSetGenTree.Props.lt_compat	40
Coq.MSets.MSetGenTree.Props.flatten_e_elements	40
Coq.MSets.MSetGenTree.Props.cons_1	40
Coq.MSets.MSetGenTree.Props.compare_end_Cmp	40
Coq.MSets.MSetGenTree.Props.compare_more_Cmp	40
Coq.MSets.MSetGenTree.Props.compare_cont_Cmp	40
Coq.MSets.MSetGenTree.Props.compare_Cmp	40
Coq.MSets.MSetGenTree.Props.compare_spec	40
Coq.MSets.MSetGenTree.Props.equal_spec	40
Coq.MSets.MSetGenTree.Props.mindepth_maxdepth	40
Coq.MSets.MSetGenTree.Props.maxdepth_cardinal	40
Coq.MSets.MSetGenTree.Props.mindepth_cardinal	40
Coq.MSets.MSetGenTree.Props.maxdepth_log_cardinal	40
Coq.MSets.MSetGenTree.Props.mindepth_log_cardinal	40
Coq.MSets.MSetInterface.WRaw2SetsOn.In_compat	40
Coq.MSets.MSetInterface.WRaw2SetsOn.eq_equiv	40	128.448.515.128.576.66.0.71.66	synth with cache (only 1: split; only 1: firstorder; only 1: repeat red; only 1: intros a b; only 1: firstorder; only 1: intro H; only 1: intros (q, Hq); only 1: intros l m n; only 1: firstorder  (subst; auto)).	2.01798701286	4317
Coq.MSets.MSetInterface.WRaw2SetsOn.eq_dec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.mem_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.equal_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.subset_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.empty_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.is_empty_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.add_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.remove_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.singleton_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.union_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.inter_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.diff_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.fold_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.cardinal_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.filter_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.for_all_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.exists_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.partition_spec1	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.partition_spec2	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.elements_spec1	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.elements_spec2w	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.choose_spec1	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.choose_spec2	40
Coq.MSets.MSetInterface.Raw2SetsOn.lt_strorder	40
Coq.MSets.MSetInterface.Raw2SetsOn.lt_compat	40
Coq.MSets.MSetInterface.Raw2SetsOn.Spec.compare_spec	40
Coq.MSets.MSetInterface.Raw2SetsOn.Spec.elements_spec2	40
Coq.MSets.MSetInterface.Raw2SetsOn.Spec.min_elt_spec1	40
Coq.MSets.MSetInterface.Raw2SetsOn.Spec.min_elt_spec2	40
Coq.MSets.MSetInterface.Raw2SetsOn.Spec.min_elt_spec3	40
Coq.MSets.MSetInterface.Raw2SetsOn.Spec.max_elt_spec1	40
Coq.MSets.MSetInterface.Raw2SetsOn.Spec.max_elt_spec2	40
Coq.MSets.MSetInterface.Raw2SetsOn.Spec.max_elt_spec3	40
Coq.MSets.MSetInterface.Raw2SetsOn.Spec.choose_spec3	40
Coq.MSets.MSetInterface.MakeSetOrdering.eq_equiv	40	398	synth with cache (only 1: firstorder using StronglySorted_inv).	0.905820131302	2346
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_0	40
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_1	40
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_2	40
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_3	40
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_4	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_compat	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_strorder	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_empty_r	40	384.385	synth with cache (only 1: intros x y; only 1: firstorder  (subst; auto)).	0.127183914185	116
Coq.MSets.MSetInterface.MakeSetOrdering.lt_empty_l	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_add_lt	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_add_eq	40
Coq.MSets.MSetInterface.MakeListOrdering.lt_strorder	40
Coq.MSets.MSetInterface.MakeListOrdering.lt_compat'	40
Coq.MSets.MSetInterface.MakeListOrdering.eq_cons	40	67.0.3.384.0.3	synth with cache (only 1: intros x y z; only 1: intros; only 1: intuition auto; MO.OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: intro H; only 1: rewrite 2!InA_cons; only 1: firstorder).	35.9689421654	97960
Coq.MSets.MSetInterface.MakeListOrdering.cons_CompSpec	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.In_In	40	577.1	synth with cache (only 1: intros n m; only 1: let rec add_permut := let rec add_permut_rec := let rec add_push := Ring_theory.gen_add_push radd Rsth Reqe ARth in fun t => match t with | radd ?x ?y => add_permut_rec y || add_permut_rec x | _ => add_push t; apply (Ring_theory.Radd_ext Reqe); [  | reflexivity ] end in repeat reflexivity || match goal with | |- req ?t _ => add_permut_rec t end in add_permut).	0.17698097229	22
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Subset_Included	40	320.0	synth with cache (only 1: intros; only 1: now BinInt.Z.nzsimpl').	0.209161996841	17
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Equal_Same_set	40	70.1.0	synth with cache (only 1: unfold Subset, Included, In, mkEns; only 1: intros; only 1: firstorder).	19.7706580162	13416
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.empty_Empty_Set	40	2.7.4.131.2.388.259	synth with cache (only 1: constructor; only 1: intros NF; only 1: intros; only 1: vm_compute in H; only 1: red; only 1: Dec.fsetdec; only 1: trivial with sets).	25.807970047	61668
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Empty_Empty_set	40	129.0.0.1.0.0.1.0.0.0	synth with cache (only 1: unfold Same_set, Included, mkEns, In; only 1: split; only 1: intro; only 1: rewrite elements_Empty in H; only 1: intros; only 1: rewrite elements_iff in H0; only 1: rewrite H in H0; only 1: inversion H0; only 1: intro; only 1: intuition PeanoNat.Nat.order).	1.20128417015	1096
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.singleton_Singleton	40	0.1.137.64	synth with cache (only 1: intro H; only 1: red in H; only 1: unfold Subset, Included, Same_set, In, mkEns; only 1: intuition).	4.76264500618	4869
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.union_Union	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.inter_Intersection	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.add_Add	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Add_Add	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.remove_Subtract	40	514.1.0.1.4.0.0.0.0	synth with cache (only 1: unfold Same_set, Included, mkEns, In; only 1: split; only 1: intro; only 1: set_iff; only 1: intuition; only 1: constructor 1; only 1: auto; only 1: auto with sets; only 1: firstorder).	12.5337359905	10281
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.mkEns_Finite	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.mkEns_cardinal	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Ens_to_MSet	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.In_compat	40	0	synth with cache (only 1: solve_proper).	0.0296909809113	1
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.mem_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.isok_iff	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.isok_Ok	40	0.0.0.0.0.0.0.0.0.0.0.3	synth with cache (only 1: induction l; only 1: intuition; only 1: simpl; only 1: rewrite andb_true_iff; only 1: rewrite negb_true_iff; only 1: intros H; only 1: destruct H; only 1: constructors; only 1: rewrite <- mem_spec; only 1: congruence; only 1: auto; only 1: auto).	4.28735899925	3531
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.add_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.add_ok	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.remove_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.remove_ok	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.singleton_ok	40	0.3.0	synth with cache (only 1: intros H; only 1: apply <- isok_iff; only 1: auto).	0.0811519622803	233
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.singleton_spec	40	0.64.0.0.0.5.1.0	synth with cache (only 1: intros; only 1: split; only 1: unfold singleton; only 1: intros; only 1: inv; only 1: auto; only 1: left; only 1: auto).	6.59521102905	3546
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.empty_ok	40	1.0	synth with cache (only 1: apply <- isok_iff; only 1: intuition).	0.0152730941772	3
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.empty_spec	40	130.0	synth with cache (only 1: unfold empty; only 1: now subst).	0.0213069915771	10
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.is_empty_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.elements_spec1	40	0.2	synth with cache (only 1: repeat red; only 1: auto).	0.0159869194031	4
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.elements_spec2w	40	64.1.0.0	synth with cache (only 1: intros; only 1: induction s; only 1: intuition; only 1: trivial).	0.0348889827728	7
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.fold_spec	40	2	synth with cache (only 1: constructors).	0.00888919830322	3
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.union_ok	40	129.1.64.1.0.2	synth with cache (only 1: repeat red; only 1: induction s; only 1: auto; only 1: intros n IH; only 1: inv; only 1: firstorder).	4.0283870697	3108
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.union_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.inter_ok	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.inter_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.diff_ok	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.diff_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.subset_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.equal_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.choose_spec1	40	385.576.2.65.65.0.0.0	synth with cache (only 1: induction s; only 1: intros; only 1: discriminate; only 1: intros l; only 1: rewrite InA_cons; only 1: simpl; only 1: intro Hxz; only 1: CRelationClasses.simpl_crelation).	4.71064901352	4201
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.choose_spec2	40	1.0.129.0.0.0	synth with cache (only 1: intros; only 1: inversion H; only 1: induction s; only 1: intros Base Step; only 1: inv; only 1: inversion H).	1.28215909004	322
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.cardinal_spec	40	1.0	synth with cache (only 1: unfold elements; only 1: auto).	0.0169169902802	3
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.filter_spec'	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.filter_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.filter_ok	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.for_all_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.exists_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_spec1	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_spec2	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_ok1'	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_ok2'	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction s; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: inv; only 1: generalize (IHs H1 f x); only 1: destruct (f a); only 1: destruct (partition f s); only 1: simpl in *; only 1: auto; only 1: destruct (partition f s); only 1: simpl in *; only 1: inversion_clear H; only 1: auto; only 1: auto).	0.456593036652	390
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_ok1	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_ok2	40
Coq.MSets.MSetList.MakeRaw.ForNotations.inf_iff	40
Coq.MSets.MSetList.MakeRaw.ForNotations.isok_iff	40
Coq.MSets.MSetList.MakeRaw.ForNotations.isok_Ok	40	64	synth with cache (only 1: auto using Sorted, LocallySorted, HdRel).	0.0135779380798	5
Coq.MSets.MSetList.MakeRaw.ForNotations.mem_spec	40
Coq.MSets.MSetList.MakeRaw.ForNotations.add_inf	40
Coq.MSets.MSetList.MakeRaw.ForNotations.add_ok	40
Coq.MSets.MSetList.MakeRaw.ForNotations.add_spec	40
Coq.MSets.MSetList.MakeRaw.ForNotations.remove_inf	40
Coq.MSets.MSetList.MakeRaw.ForNotations.remove_ok	40	0.0.0.0.0.0.0.1.0.0.0.0.0	synth with cache (only 1: repeat rewrite <- isok_iff; only 1: revert s x; only 1: simple induction s; only 1: intuition; only 1: simpl; only 1: intros; only 1: elim_compare x a; only 1: inv; only 1: auto; only 1: inv; only 1: auto; only 1: inv; only 1: auto).	1.52227115631	894
Coq.MSets.MSetList.MakeRaw.ForNotations.remove_spec	40
Coq.MSets.MSetList.MakeRaw.ForNotations.singleton_ok	40	64	synth with cache (only 1: eauto).	0.0198521614075	5
Coq.MSets.MSetList.MakeRaw.ForNotations.singleton_spec	40	452.512.1.0.66.0.320.202	synth with cache (only 1: intro m; only 1: intros N; only 1: intuition; only 1: inversion H; only 1: auto; only 1: subst; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: now constructor).	17.3297889233	37480
Coq.MSets.MSetList.MakeRaw.ForNotations.union_inf	40
Coq.MSets.MSetList.MakeRaw.ForNotations.union_ok	40
Coq.MSets.MSetList.MakeRaw.ForNotations.union_spec	40
Coq.MSets.MSetList.MakeRaw.ForNotations.inter_inf	40
Coq.MSets.MSetList.MakeRaw.ForNotations.inter_ok	40	0.1.0.4.0.387.0.0.0	synth with cache (only 1: repeat rewrite <- isok_iff; only 1: revert s s'; only 1: induction2; only 1: induction l as [| a l IH]; only 1: constructors; only 1: destruct l'; only 1: auto; only 1: inv; only 1: auto).	36.3616051674	15092
Coq.MSets.MSetList.MakeRaw.ForNotations.inter_spec	40
Coq.MSets.MSetList.MakeRaw.ForNotations.diff_inf	40	128.0.1.6.0	synth with cache (only 1: induction2; only 1: eauto; only 1: apply Inf_lt with x'; only 1: auto; only 1: simpl_relation).	7.35080099106	5719
Coq.MSets.MSetList.MakeRaw.ForNotations.diff_ok	40	0.0.0	synth with cache (only 1: repeat rewrite <- isok_iff; only 1: revert s s'; only 1: induction2).	0.209680080414	3
Coq.MSets.MSetList.MakeRaw.ForNotations.diff_spec	40
Coq.MSets.MSetList.MakeRaw.ForNotations.equal_spec	40
Coq.MSets.MSetList.MakeRaw.ForNotations.subset_spec	40
Coq.MSets.MSetList.MakeRaw.ForNotations.empty_ok	40	0	synth with cache (only 1: auto).	0.0151190757751	1
Coq.MSets.MSetList.MakeRaw.ForNotations.empty_spec	40	323	synth with cache (only 1: now PeanoNat.Nat.nzsimpl').	0.0354559421539	24
Coq.MSets.MSetList.MakeRaw.ForNotations.is_empty_spec	40
Coq.MSets.MSetList.MakeRaw.ForNotations.elements_spec1	40	322.0.1	synth with cache (only 1: split; only 1: intuition; only 1: now auto with arith).	0.141039848328	143
Coq.MSets.MSetList.MakeRaw.ForNotations.elements_spec2	40	194.4.0.64	synth with cache (only 1: intros m; only 1: intro H; only 1: inv; only 1: tauto).	0.321022033691	777
Coq.MSets.MSetList.MakeRaw.ForNotations.elements_spec2w	40	2.0.0	synth with cache (only 1: intro s; only 1: repeat rewrite <- isok_iff; only 1: auto).	0.0309510231018	5
Coq.MSets.MSetList.MakeRaw.ForNotations.min_elt_spec1	40	263.195.320.0.0.0.0.256.66	synth with cache (only 1: intros l H; only 1: induction l as [| a l IHl]; only 1: intuition; only 1: discriminate; only 1: simpl; only 1: injection 1; only 1: intros Ha; only 1: induction H0; only 1: CRelationClasses.simpl_crelation).	27.2798421383	84207
Coq.MSets.MSetList.MakeRaw.ForNotations.min_elt_spec2	40	0.3.0.0.384.0.0.1.512.1.128	synth with cache (only 1: intros n m H; only 1: intros; only 1: induction n; only 1: simpl in *; only 1: inv; only 1: simpl in *; only 1: CRelationClasses.simpl_crelation; only 1: inv; only 1: intuition; only 1: sort_inf_in; only 1: order).	38.819986105	31125
Coq.MSets.MSetList.MakeRaw.ForNotations.min_elt_spec3	40	449.1.451.320.1	synth with cache (only 1: intros; only 1: intros a m; only 1: induction s; only 1: inv; only 1: now PeanoNat.Nat.nzsimpl').	0.943734169006	1659
Coq.MSets.MSetList.MakeRaw.ForNotations.max_elt_spec1	40
Coq.MSets.MSetList.MakeRaw.ForNotations.max_elt_spec2	40
Coq.MSets.MSetList.MakeRaw.ForNotations.max_elt_spec3	40
Coq.MSets.MSetList.MakeRaw.ForNotations.choose_spec3	40
Coq.MSets.MSetList.MakeRaw.ForNotations.fold_spec	40	129.1	synth with cache (only 1: intro s; only 1: auto using in_app_or, in_or_app).	0.0200610160828	8
Coq.MSets.MSetList.MakeRaw.ForNotations.cardinal_spec	40	1.0	synth with cache (only 1: intros n H; only 1: auto).	0.0194540023804	3
Coq.MSets.MSetList.MakeRaw.ForNotations.filter_inf	40	0.0.0.0.513.0.0.0.0.0.0.384.0.0.0.0.0	synth with cache (only 1: induction s; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intros; only 1: compute; only 1: elim_compare x a; only 1: inv; only 1: auto; only 1: inv; only 1: destruct (f a); only 1: auto; only 1: eauto using OrderTac.eq_trans, OrderTac.eq_sym; only 1: inv; only 1: destruct (f a); only 1: auto; only 1: auto).	7.96773314476	6915
Coq.MSets.MSetList.MakeRaw.ForNotations.filter_ok	40
Coq.MSets.MSetList.MakeRaw.ForNotations.filter_spec	40
Coq.MSets.MSetList.MakeRaw.ForNotations.for_all_spec	40
Coq.MSets.MSetList.MakeRaw.ForNotations.exists_spec	40
Coq.MSets.MSetList.MakeRaw.ForNotations.partition_inf1	40
Coq.MSets.MSetList.MakeRaw.ForNotations.partition_inf2	40	0.0.0.448.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros s f x; only 1: repeat rewrite <- isok_iff; only 1: revert s f x; only 1: simple induction s; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intros x l Hrec f a Hs Ha; only 1: inv; only 1: generalize (Hrec f a H); only 1: case (f x); only 1: case (partition f l); only 1: eauto using PeanoNat.Nat.Private_OrderTac.Tac.eq_trans, PeanoNat.Nat.Private_OrderTac.Tac.eq_sym; only 1: case (partition f l); only 1: simpl; only 1: auto).	0.789452075958	569
Coq.MSets.MSetList.MakeRaw.ForNotations.partition_ok1	40
Coq.MSets.MSetList.MakeRaw.ForNotations.partition_ok2	40
Coq.MSets.MSetList.MakeRaw.ForNotations.partition_spec1	40
Coq.MSets.MSetList.MakeRaw.ForNotations.partition_spec2	40	0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: simple induction s; only 1: simpl; only 1: unfold Equal; only 1: split; only 1: auto; only 1: auto; only 1: simpl; only 1: unfold Equal; only 1: intros x l Hrec f Hf; only 1: generalize (Hrec f Hf); only 1: clear Hrec; only 1: destruct (partition f l) as [s1 s2]; only 1: simpl; only 1: intros; only 1: case (f x); only 1: simpl; only 1: auto; only 1: simpl; only 1: split; only 1: inversion_clear 1; only 1: auto; only 1: constructor 2; only 1: rewrite <- H; only 1: auto; only 1: inversion_clear 1; only 1: auto; only 1: constructor 2; only 1: rewrite H; only 1: auto).	21.0106258392	15822
Coq.MSets.MSetList.MakeRaw.In_compat	40	1.576.384.448.256.0.0.1	synth with cache (only 1: apply proper_sym_impl_iff_2; only 1: auto with *; only 1: congruence; only 1: intros x y H; only 1: intros RS' n; only 1: rewrite <- H in *; only 1: inversion_clear 1; only 1: easy).	4.86343598366	1480
Coq.MSets.MSetList.MakeRaw.lt_strorder	40
Coq.MSets.MSetList.MakeRaw.lt_compat	40
Coq.MSets.MSetList.MakeRaw.compare_spec_aux	40
Coq.MSets.MSetList.MakeRaw.compare_spec	40
Coq.MSets.MSetList.MakeWithLeibniz.eq_leibniz_list	40
Coq.MSets.MSetList.MakeWithLeibniz.eq_leibniz	40
Coq.Floats.FloatAxioms.Prim2SF_inj	40
Coq.Floats.FloatAxioms.SF2Prim_inj	40
Coq.Floats.FloatLemmas.shift_value	40	0	synth with cache (only 1: now Z.nzsimpl).	0.117375135422	1
Coq.Floats.FloatLemmas.frexp_spec	40
Coq.Floats.FloatLemmas.ldexp_spec	40
Coq.Relations.Operators_Properties.Properties.Clos_Refl_Trans.clos_rt_is_preorder	40
Coq.Relations.Operators_Properties.Properties.Clos_Refl_Trans.clos_rt_idempotent	40
Coq.Relations.Operators_Properties.Properties.Clos_Refl_Sym_Trans.clos_rt_clos_rst	40
Coq.Relations.Operators_Properties.Properties.Clos_Refl_Sym_Trans.clos_r_clos_rt	40	0.0.0.0	synth with cache (only 1: red; only 1: induction 1; only 1: auto with sets; only 1: auto with sets).	0.0243248939514	4
Coq.Relations.Operators_Properties.Properties.Clos_Refl_Sym_Trans.clos_rt_t	40
Coq.Relations.Operators_Properties.Properties.Clos_Refl_Sym_Trans.clos_rst_is_equiv	40	4.0.0.1.11.1.1.1.8	synth with cache (only 1: constructor; only 1: red; only 1: auto with sets; only 1: red; only 1: intros; only 1: apply rst_trans with y; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets).	4.76380491257	15855
Coq.Relations.Operators_Properties.Properties.Clos_Refl_Sym_Trans.clos_rst_idempotent	40	0.0.3.0.0.0.0.0	synth with cache (only 1: red; only 1: induction 1; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets; only 1: apply rst_trans with y; only 1: auto with sets; only 1: auto with sets).	0.135262966156	130
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_t1n_trans	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_trans_t1n	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_trans_t1n_iff	40	2.0.0.2.129.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.14.64	synth with cache (only 1: repeat split; only 1: induction 1; only 1: left; only 1: auto; only 1: generalize IHclos_trans2; only 1: clear IHclos_trans2; only 1: induction IHclos_trans1; only 1: right with y; only 1: auto; only 1: auto; only 1: right with y; only 1: auto; only 1: eapply IHIHclos_trans1; only 1: apply clos_t1n_trans; only 1: auto; only 1: auto; only 1: auto; only 1: inversion 1; only 1: left; only 1: auto; only 1: apply clos_t1n_trans; only 1: auto).	3.97534704208	15282
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_tn1_trans	40	0.2.2.0.0.0.0	synth with cache (only 1: induction 1; only 1: left; only 1: auto; only 1: right with y; only 1: auto; only 1: left; only 1: auto).	1.50326776505	2765
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_trans_tn1	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_trans_tn1_iff	40	0.0.0.0.0.0.7.0.0.0.0.0.0.0.0.0.0.0.7.0	synth with cache (only 1: split; only 1: induction 1; only 1: left; only 1: auto; only 1: elim IHclos_trans2; only 1: intro y0; only 1: right with y; only 1: auto; only 1: auto; only 1: intros; only 1: right with y0; only 1: auto; only 1: auto; only 1: induction 1; only 1: left; only 1: auto; only 1: right with y; only 1: auto; only 1: left; only 1: assumption).	2.13348984718	6413
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt1n_step	40	1.0.5.17	synth with cache (only 1: intros; only 1: right with y; only 1: auto; only 1: left).	0.52320599556	1885
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rtn1_step	40	2.0.5.128.12	synth with cache (only 1: intro y0; only 1: intros n m; only 1: right with y0; only 1: auto; only 1: left).	0.548779010773	1676
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt1n_rt	40	0.0.5.0.0	synth with cache (only 1: induction 1; only 1: auto with sets; only 1: apply rt_trans with y; only 1: auto with sets; only 1: auto).	0.20804309845	237
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt_rt1n	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt_rt1n_iff	40	0.0.0.0.0.10.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.8.1	synth with cache (only 1: split; only 1: induction 1; only 1: right with y; only 1: auto; only 1: left; only 1: left; only 1: generalize IHclos_refl_trans2; only 1: clear IHclos_refl_trans2; only 1: induction IHclos_refl_trans1; only 1: auto; only 1: right with y; only 1: auto; only 1: eapply IHIHclos_refl_trans1; only 1: apply clos_rt1n_rt; only 1: auto; only 1: auto; only 1: auto; only 1: induction 1; only 1: auto with sets; only 1: constructor 3 with y; only 1: constructor 1; only 1: auto; only 1: auto).	3.19722700119	8932
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rtn1_rt	40	0.2.2.0.0.0	synth with cache (only 1: induction 1; only 1: auto with sets; only 1: constructor 3 with y; only 1: auto; only 1: constructor 1; only 1: assumption).	1.29808402061	2768
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt_rtn1	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt_rtn1_iff	40	0.0.1.2.0.7.0.0.0.0.0.0.0.0.0.0.7.67.0.67	synth with cache (only 1: intros H x0; only 1: red; only 1: repeat split; only 1: induction 1; only 1: right with x; only 1: auto; only 1: left; only 1: left; only 1: elim IHclos_refl_trans2; only 1: auto; only 1: intros; only 1: right with y0; only 1: auto; only 1: auto; only 1: induction 1; only 1: auto with sets; only 1: constructor 3 with y; only 1: auto; only 1: constructor 1; only 1: assumption).	4.73797798157	15722
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_refl_trans_ind_left	40
Coq.Relations.Operators_Properties.Properties.Equivalences.rt1n_ind_right	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_refl_trans_ind_right	40	0.0.1.0.0.1.0.1.1.0.0.0.0.2.1	synth with cache (only 1: induction 3; only 1: apply H0 with y; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets; only 1: apply IHclos_refl_trans1; only 1: auto with sets; only 1: intros; only 1: apply H0 with y0; only 1: auto with sets; only 1: auto with sets; only 1: apply rt_trans with y; only 1: auto with sets; only 1: auto with sets).	2.35882496834	5982
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst1n_rst	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst1n_trans	40	0.4.0.0.1.197	synth with cache (only 1: intros H; only 1: induction 1; only 1: auto; only 1: right with y; only 1: auto; only 1: auto).	0.736177921295	1915
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst1n_sym	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst_rst1n	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst_rst1n_iff	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rstn1_rst	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rstn1_trans	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rstn1_sym	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst_rstn1	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst_rstn1_iff	40
Coq.Relations.Operators_Properties.Properties.clos_trans_transp_permute	40
Coq.Relations.Relations.inverse_image_of_equivalence	40
Coq.Relations.Relations.inverse_image_of_eq	40	0.2.0.4.2.1.0.1	synth with cache (only 1: intros; only 1: split; only 1: split; only 1: red; only 1: destruct 2; only 1: assumption; only 1: red; only 1: auto).	0.734071969986	1201
Coq.Sets.Uniset.defs.leb_refl	40	0	synth with cache (only 1: destr_bool).	0.0110418796539	1
Coq.Sets.Uniset.defs.incl_left	40	1.2.3.132.129.130.130.128.65	synth with cache (only 1: intros H H'; only 1: inversion_clear H; only 1: inversion_clear H; only 1: inversion_clear H; only 1: reflexivity || destruct H; only 1: destruct H'; only 1: intros Hfst Hsnd; only 1: rewrite Hfst; only 1: auto).	2.97099685669	9518
Coq.Sets.Uniset.defs.incl_right	40	0.0.0.0	synth with cache (only 1: unfold incl; only 1: intros s1 s2 E a; only 1: elim (E a); only 1: auto).	0.0213670730591	4
Coq.Sets.Uniset.defs.seq_refl	40	3	synth with cache (only 1: auto).	0.0114140510559	4
Coq.Sets.Uniset.defs.seq_trans	40	1.128.129.4.0.1	synth with cache (only 1: destruct x; only 1: unfold seq; only 1: simpl; only 1: symmetry; only 1: rewrite H; only 1: auto).	0.541330814362	669
Coq.Sets.Uniset.defs.seq_sym	40	0.0.1	synth with cache (only 1: intros s1 s2 E a; only 1: elim (E a); only 1: auto).	0.0201749801636	4
Coq.Sets.Uniset.defs.union_empty_left	40	0.0.0	synth with cache (only 1: destruct x; only 1: unfold seq; only 1: auto).	0.0198647975922	3
Coq.Sets.Uniset.defs.union_empty_right	40
Coq.Sets.Uniset.defs.union_comm	40	12.65.1.1.1.3	synth with cache (only 1: destruct x; only 1: unfold seq; only 1: unfold union; only 1: simpl; only 1: intro; only 1: intuition).	34.0028369427	101793
Coq.Sets.Uniset.defs.union_ass	40	1.0.0.1.0.0.1	synth with cache (only 1: unfold seq; only 1: unfold charac; only 1: destruct x; only 1: destruct y; only 1: destruct z; only 1: simpl; only 1: auto with bool).	0.29829287529	187
Coq.Sets.Uniset.defs.seq_left	40	1.0.128.1.0.0	synth with cache (only 1: unfold seq; only 1: destruct y; only 1: simpl; only 1: symmetry; only 1: rewrite H; only 1: auto).	0.215143918991	89
Coq.Sets.Uniset.defs.seq_right	40	1.0.0.0.0.64.128	synth with cache (only 1: intros Hfst Hsnd; only 1: intro x; only 1: unfold seq; only 1: simpl; only 1: intros; only 1: elim H; only 1: auto).	0.266315937042	148
Coq.Sets.Uniset.defs.union_rotate	40
Coq.Sets.Uniset.defs.seq_congr	40
Coq.Sets.Uniset.defs.union_perm_left	40	0.0.0.1.0.0.65.2.6	synth with cache (only 1: destruct x; only 1: destruct y; only 1: apply perm_left; only 1: auto; only 1: intros; only 1: auto; only 1: auto; only 1: exact seq_trans; only 1: auto).	38.2978298664	69985
Coq.Sets.Uniset.defs.uniset_twist1	40
Coq.Sets.Uniset.defs.uniset_twist2	40
Coq.Sets.Uniset.defs.treesort_twist1	40
Coq.Sets.Uniset.defs.treesort_twist2	40	2.1.1.1.4.0.0.0.0.0.2	synth with cache (only 1: unfold seq; only 1: intros; only 1: apply seq_trans with (union x (union (union y z) t)); only 1: apply seq_right; only 1: apply seq_left; only 1: trivial; only 1: apply seq_sym; only 1: apply seq_trans with (union (union x (union y z)) t); only 1: apply seq_left; only 1: apply union_perm_left; only 1: apply union_ass).	8.66178488731	10831
Coq.Sets.Multiset.multiset_defs.meq_refl	40	0.1	synth with cache (only 1: intuition; only 1: split).	0.0224459171295	3
Coq.Sets.Multiset.multiset_defs.meq_trans	40	129.448.128.0.0.0	synth with cache (only 1: destruct x; only 1: unfold meq; only 1: simpl; only 1: intros m; only 1: intros a0 a; only 1: congruence).	0.0832459926605	64
Coq.Sets.Multiset.multiset_defs.meq_sym	40	257.0	synth with cache (only 1: unfold meq; only 1: easy).	0.0463778972626	37
Coq.Sets.Multiset.multiset_defs.munion_empty_left	40	0.0.0	synth with cache (only 1: destruct x; only 1: unfold meq; only 1: reflexivity).	0.0257849693298	3
Coq.Sets.Multiset.multiset_defs.munion_empty_right	40	0.0.0.0	synth with cache (only 1: unfold meq; only 1: unfold munion; only 1: simpl; only 1: auto).	0.0300538539886	4
Coq.Sets.Multiset.multiset_defs.munion_comm	40	194.64.1	synth with cache (only 1: destruct x; only 1: intro H; only 1: CRelationClasses.simpl_crelation).	0.760143041611	456
Coq.Sets.Multiset.multiset_defs.munion_ass	40	0.258.0.0.1.0.0.0	synth with cache (only 1: unfold meq; only 1: destruct x; only 1: unfold multiplicity; only 1: destruct y; only 1: destruct z; only 1: intros; only 1: Bool.destr_bool; only 1: auto with arith).	1.73483705521	1609
Coq.Sets.Multiset.multiset_defs.meq_left	40	577.128.0	synth with cache (only 1: unfold meq; only 1: intros n H; only 1: simpl_relation).	0.334115982056	348
Coq.Sets.Multiset.multiset_defs.meq_right	40	384.0.0.0.0.0.0.0	synth with cache (only 1: unfold meq; only 1: unfold munion; only 1: unfold multiplicity; only 1: destruct x; only 1: destruct y; only 1: destruct z; only 1: intros; only 1: auto with sets).	0.0603611469269	14
Coq.Sets.Multiset.multiset_defs.munion_rotate	40
Coq.Sets.Multiset.multiset_defs.meq_congr	40	193.0.0	synth with cache (only 1: unfold meq; only 1: destruct x; only 1: CRelationClasses.simpl_crelation).	0.196457862854	78
Coq.Sets.Multiset.multiset_defs.munion_perm_left	40
Coq.Sets.Multiset.multiset_defs.multiset_twist1	40
Coq.Sets.Multiset.multiset_defs.multiset_twist2	40
Coq.Sets.Multiset.multiset_defs.treesort_twist1	40
Coq.Sets.Multiset.multiset_defs.treesort_twist2	40
Coq.Sets.Multiset.multiset_defs.meq_singleton	40
Coq.Sets.Integers.Integers_sect.le_reflexive	40	448	synth with cache (only 1: auto  6 with sets).	0.0171020030975	29
Coq.Sets.Integers.Integers_sect.le_antisym	40	0.192	synth with cache (only 1: intro H'0; only 1: PeanoNat.Nat.order).	0.032488822937	14
Coq.Sets.Integers.Integers_sect.le_trans	40	0.256.1.0	synth with cache (only 1: red; only 1: intros n m p; only 1: intros nna a; only 1: PeanoNat.Nat.Private_Tac.order).	0.0901160240173	94
Coq.Sets.Integers.Integers_sect.le_Order	40	0.0.0.0.0.0.0.0.0.0.0.3.0.0.3	synth with cache (only 1: split; only 1: red; only 1: intros; only 1: PeanoNat.Nat.Private_Tac.order; only 1: red; only 1: intros; only 1: apply PeanoNat.Nat.le_trans with y; only 1: auto; only 1: auto; only 1: red; only 1: intros x y H H'; only 1: rewrite (PeanoNat.Nat.le_antisymm x y); only 1: auto; only 1: auto; only 1: auto).	0.376576185226	605
Coq.Sets.Integers.Integers_sect.triv_nat	40	129.0	synth with cache (only 1: intro n; only 1: easy).	0.0229339599609	9
Coq.Sets.Integers.Integers_sect.nat_po	40	0.0.0.0.0.1.129.0.64.66.0.0.2.448.64.67.263.328.197	synth with cache (only 1: generalize Inclusion_is_transitive; only 1: intro H'0; only 1: generalize Inclusion_is_transitive; only 1: generalize Inclusion_is_transitive; only 1: intros H'9 H'10; only 1: eexists; only 1: auto with sets; only 1: split; only 1: red; only 1: Bool.destr_bool; only 1: symmetry; only 1: reflexivity; only 1: intros H; only 1: intros; only 1: now rewrite <- H1; only 1: intros x y; only 1: intro; only 1: symmetry; only 1: auto).	29.7000710964	119745
Coq.Sets.Integers.Integers_sect.le_total_order	40
Coq.Sets.Integers.Integers_sect.Finite_subset_has_lub	40
Coq.Sets.Integers.Integers_sect.Integers_has_no_ub	40	512.4.257.64.2.5.2	synth with cache (only 1: intro H'4; only 1: elim H'4; only 1: elim le_total_order; only 1: intro H'8; only 1: RelationClasses.simpl_relation; only 1: eapply PeanoNat.Nat.Private_OrderTac.Tac.lt_irrefl; only 1: now apply H).	28.6534619331	34818
Coq.Sets.Integers.Integers_sect.Integers_infinite	40
Coq.Sets.Relations_1_facts.Rsym_imp_notRsym	40	0.4.3.1	synth with cache (only 1: intros; only 1: intro p; only 1: red; only 1: auto).	0.42403793335	1050
Coq.Sets.Relations_1_facts.Equiv_from_preorder	40
Coq.Sets.Relations_1_facts.Equiv_from_order	40	2.1.0.0.0	synth with cache (only 1: intros U R H'; only 1: elim H'; only 1: intros H'0 H'1; only 1: red in H'1; only 1: auto  10 with sets).	0.514224052429	271
Coq.Sets.Relations_1_facts.contains_is_preorder	40	2.0.1.2.2	synth with cache (only 1: intro A; only 1: split; only 1: intros H'0 H'1; only 1: trivial; only 1: auto  10 with sets).	0.0696320533752	163
Coq.Sets.Relations_1_facts.same_relation_is_equivalence	40	0.64.2.131.1.0.136.2.3.3	synth with cache (only 1: intro A; only 1: split; only 1: auto  10 with sets; only 1: intros ? ? ? [Hl Hr]; only 1: destruct 1; only 1: auto  10 with sets; only 1: intros n m; only 1: destruct 1; only 1: red; only 1: auto).	2.2739109993	8060
Coq.Sets.Relations_1_facts.cong_reflexive_same_relation	40	1.64.2.2.1	synth with cache (only 1: intros ? ? ? [Hl Hr]; only 1: intro p; only 1: red; only 1: intro x; only 1: auto  10 with sets).	0.320470809937	455
Coq.Sets.Relations_1_facts.cong_symmetric_same_relation	40	0.0	synth with cache (only 1: unfold same_relation; only 1: intuition).	0.0182020664215	2
Coq.Sets.Relations_1_facts.cong_antisymmetric_same_relation	40	0.1	synth with cache (only 1: unfold same_relation; only 1: intuition).	0.0356500148773	30
Coq.Sets.Relations_1_facts.cong_transitive_same_relation	40
Coq.Sets.Relations_2_facts.Rstar_reflexive	40	3	synth with cache (only 1: auto  10 with sets).	0.0120210647583	7
Coq.Sets.Relations_2_facts.Rplus_contains_R	40	0	synth with cache (only 1: auto with sets).	0.00987100601196	1
Coq.Sets.Relations_2_facts.Rstar_contains_R	40
Coq.Sets.Relations_2_facts.Rstar_contains_Rplus	40	1.0.0.0.0.0.71	synth with cache (only 1: induction 1; only 1: apply Rstar_n with y; only 1: auto with sets; only 1: auto with sets; only 1: apply Rstar_n with y; only 1: auto with sets; only 1: auto with sets).	0.863264083862	2665
Coq.Sets.Relations_2_facts.Rstar_transitive	40	0.1.0.2.1.1.67.66.1	synth with cache (only 1: intros U R; only 1: intro x; only 1: induction 1; only 1: intro T; only 1: auto with sets; only 1: intro H'1; only 1: apply Rstar_n with y; only 1: auto with sets; only 1: auto with sets).	35.8209779263	97054
Coq.Sets.Relations_2_facts.Rstar_cases	40
Coq.Sets.Relations_2_facts.Rstar_equiv_Rstar1	40
Coq.Sets.Relations_2_facts.Rsym_imp_Rstarsym	40	0.0.0.1.0.2.0.0.0.0.1.64.1.0.2	synth with cache (only 1: generalize Rstar_contains_R; only 1: intro T; only 1: unfold Symmetric, Complement; only 1: intro H1; only 1: intros U R; only 1: red in T; only 1: intros x y H'; only 1: elim H'; only 1: auto with sets; only 1: generalize Rstar_transitive; only 1: intro T1; only 1: intros x0 y0 z H'0 H'1 H'2; only 1: apply T1 with y0; only 1: auto with sets; only 1: auto with sets).	8.51270389557	19372
Coq.Sets.Relations_2_facts.Sstar_contains_Rstar	40	0.0.0.0.0.2.1.0.0.0.2.0	synth with cache (only 1: intuition; only 1: red; only 1: intros x y H'0; only 1: elim H'0; only 1: auto with sets; only 1: intros x0 y0 z H'1 H'2 H'3; only 1: generalize Rstar_transitive; only 1: intro T1; only 1: red in T1; only 1: apply T1 with y0; only 1: auto with sets; only 1: auto with sets).	1.6265399456	3073
Coq.Sets.Relations_2_facts.star_monotone	40	0.0.6.0.0.0.1.0.0.0.192.0	synth with cache (only 1: unfold contains; only 1: intros A C h1 h2; only 1: intros x y H'0; only 1: elim H'0; only 1: auto with sets; only 1: generalize Rstar_transitive; only 1: intro T1; only 1: red in T1; only 1: intros x0 y0 z H'1 H'2 H'3; only 1: apply Rstar_n with y0; only 1: auto with sets; only 1: auto with sets).	20.3920109272	42065
Coq.Sets.Relations_2_facts.RstarRplus_RRstar	40
Coq.Sets.Relations_2_facts.Lemma1	40
Coq.Sets.Permut.Axiomatisation.cong_congr	40
Coq.Sets.Permut.Axiomatisation.comm_right	40	3.1.0	synth with cache (only 1: intros; only 1: apply cong_right; only 1: trivial).	0.0904309749603	85
Coq.Sets.Permut.Axiomatisation.comm_left	40	0.2.0	synth with cache (only 1: intros; only 1: apply cong_left; only 1: apply op_comm).	0.0386860370636	26
Coq.Sets.Permut.Axiomatisation.perm_right	40
Coq.Sets.Permut.Axiomatisation.perm_left	40
Coq.Sets.Permut.Axiomatisation.op_rotate	40
Coq.Sets.Permut.Axiomatisation.twist	40
Coq.Sets.Image.Image.Im_def	40
Coq.Sets.Image.Image.Im_add	40
Coq.Sets.Image.Image.image_empty	40	0.512.128.449.0.0.193	synth with cache (only 1: intros H; only 1: apply Extensionality_Ensembles; only 1: split; only 1: unfold Included; only 1: intros n; only 1: easy || now destruct 1; only 1: intuition).	0.419106006622	514
Coq.Sets.Image.Image.finite_image	40
Coq.Sets.Image.Image.Im_inv	40	448.577.0.1.64.1.576.320	synth with cache (only 1: intro not_eq_b1_b2; only 1: intro Hx; only 1: intros x H'; only 1: generalize (Inclusion_is_transitive U); only 1: elim H'; only 1: elim H'; only 1: intros H'5 H'6; only 1: eauto).	1.21112513542	2774
Coq.Sets.Image.Image.not_injective_elim	40
Coq.Sets.Image.Image.cardinal_Im_intro	40
Coq.Sets.Image.Image.In_Image_elim	40
Coq.Sets.Image.Image.injective_preserves_cardinal	40
Coq.Sets.Image.Image.cardinal_decreases	40
Coq.Sets.Image.Image.Pigeonhole	40
Coq.Sets.Image.Image.Pigeonhole_principle	40
Coq.Sets.Infinite_sets.Infinite_sets.make_new_approximant	40	128.0.129.65.0.320.1.0.257.130	synth with cache (only 1: intro H'0; only 1: intros LT; only 1: intros x YX; only 1: apply Strict_super_set_contains_new_element; only 1: intros B; only 1: intro H'4; only 1: firstorder; only 1: firstorder; only 1: red; only 1: CRelationClasses.simpl_crelation).	7.84062409401	17884
Coq.Sets.Infinite_sets.Infinite_sets.approximants_grow	40
Coq.Sets.Infinite_sets.Infinite_sets.approximants_grow'	40
Coq.Sets.Infinite_sets.Infinite_sets.approximant_can_be_any_size	40
Coq.Sets.Infinite_sets.Infinite_sets.Image_set_continuous	40
Coq.Sets.Infinite_sets.Infinite_sets.Image_set_continuous'	40
Coq.Sets.Infinite_sets.Infinite_sets.Pigeonhole_bis	40
Coq.Sets.Infinite_sets.Infinite_sets.Pigeonhole_ter	40
Coq.Sets.Powerset.The_power_set_partial_order.Empty_set_minimal	40	64	synth with cache (only 1: destruct 1).	0.0121068954468	5
Coq.Sets.Powerset.The_power_set_partial_order.Power_set_Inhabited	40
Coq.Sets.Powerset.The_power_set_partial_order.Inclusion_is_an_order	40	0.0.0.8	synth with cache (only 1: constructor; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets).	0.344007015228	318
Coq.Sets.Powerset.The_power_set_partial_order.Inclusion_is_transitive	40	0	synth with cache (only 1: auto  6 with sets).	0.0131249427795	1
Coq.Sets.Powerset.The_power_set_partial_order.Power_set_PO	40
Coq.Sets.Powerset.The_power_set_partial_order.Strict_Rel_is_Strict_Included	40	0.0	synth with cache (only 1: red; only 1: auto with sets).	0.016389131546	2
Coq.Sets.Powerset.The_power_set_partial_order.Strict_inclusion_is_transitive_with_inclusion	40
Coq.Sets.Powerset.The_power_set_partial_order.Strict_inclusion_is_transitive_with_inclusion_left	40
Coq.Sets.Powerset.The_power_set_partial_order.Strict_inclusion_is_transitive	40
Coq.Sets.Powerset.The_power_set_partial_order.Empty_set_is_Bottom	40	128.128.0.0.0.128.0.129.0.0.0.0.2.135	synth with cache (only 1: constructor; only 1: split; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: intros x H'; only 1: intro z; only 1: intro X; only 1: compute; only 1: elim H'; only 1: elim H'; only 1: elim H'; only 1: intro H; only 1: contradiction).	2.04157590866	4067
Coq.Sets.Powerset.The_power_set_partial_order.Union_minimal	40	2.2.64.0.0.1.64.65.0	synth with cache (only 1: intros x y z H' H'0; only 1: intro H1; only 1: red in H'0; only 1: elim Strict_Rel_is_Strict_Included; only 1: unfold contains; only 1: intros H'1 H'2; only 1: destruct 1; only 1: auto with sets; only 1: auto with sets).	2.78600120544	2915
Coq.Sets.Powerset.The_power_set_partial_order.Intersection_maximal	40	2.0.0.0	synth with cache (only 1: intros a b X H' H'0; only 1: red; only 1: intros x H'1; only 1: auto with sets).	0.0294361114502	9
Coq.Sets.Powerset.The_power_set_partial_order.Union_increases_l	40	0	synth with cache (only 1: auto with sets).	0.0137619972229	1
Coq.Sets.Powerset.The_power_set_partial_order.Union_increases_r	40	0	synth with cache (only 1: auto with sets).	0.013601064682	1
Coq.Sets.Powerset.The_power_set_partial_order.Intersection_decreases_l	40	1.130.2	synth with cache (only 1: intro X; only 1: inversion 1; only 1: auto with sets).	0.230386972427	160
Coq.Sets.Powerset.The_power_set_partial_order.Intersection_decreases_r	40	0.0.0.0.0	synth with cache (only 1: intros a b; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: auto with sets).	0.0271780490875	5
Coq.Sets.Powerset.The_power_set_partial_order.Union_is_Lub	40
Coq.Sets.Powerset.The_power_set_partial_order.Intersection_is_Glb	40
Coq.Sets.Classical_sets.Ensembles_classical.not_included_empty_Inhabited	40
Coq.Sets.Classical_sets.Ensembles_classical.not_empty_Inhabited	40
Coq.Sets.Classical_sets.Ensembles_classical.Inhabited_Setminus	40
Coq.Sets.Classical_sets.Ensembles_classical.Strict_super_set_contains_new_element	40
Coq.Sets.Classical_sets.Ensembles_classical.Subtract_intro	40	65.384.3	synth with cache (only 1: intro X; only 1: intros c Hc IH; only 1: CRelationClasses.simpl_crelation).	1.01793813705	1178
Coq.Sets.Classical_sets.Ensembles_classical.Subtract_inv	40	2.320.384.192.0	synth with cache (only 1: unfold Subtract at 1; only 1: intro H1; only 1: intros LT; only 1: intros * []; only 1: auto using Noone_in_empty with sets).	0.222324132919	219
Coq.Sets.Classical_sets.Ensembles_classical.Included_Strict_Included	40	0.0.386.3.4	synth with cache (only 1: intros x y; only 1: intros; only 1: apply NNPP; only 1: red; only 1: intuition).	22.5674901009	36830
Coq.Sets.Classical_sets.Ensembles_classical.Strict_Included_inv	40	4.65.129.68	synth with cache (only 1: intros n IH; only 1: Bool.destr_bool; only 1: firstorder; only 1: auto  7 using Inhabited_Setminus with sets).	14.2401249409	19371
Coq.Sets.Classical_sets.Ensembles_classical.not_SIncl_empty	40	1.192.0.0.0.0	synth with cache (only 1: intro X; only 1: red; only 1: intro H'; only 1: elim H'; only 1: intros EQ; only 1: auto with sets).	0.0751850605011	52
Coq.Sets.Classical_sets.Ensembles_classical.Complement_Complement	40
Coq.Sets.Relations_3_facts.Rstar_imp_coherent	40	0.0.0.1.0.65.0.0	synth with cache (only 1: generalize Rstar_transitive; only 1: intro T1; only 1: compute; only 1: red in T1; only 1: intros x0 H'0; only 1: intros x1 y0 H'1; only 1: exists y0; only 1: auto with sets).	0.729110002518	815
Coq.Sets.Relations_3_facts.coherent_symmetric	40
Coq.Sets.Relations_3_facts.Strong_confluence	40
Coq.Sets.Relations_3_facts.Strong_confluence_direct	40
Coq.Sets.Relations_3_facts.Noetherian_contains_Noetherian	40
Coq.Sets.Relations_3_facts.Newman	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.sincl_add_x	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.incl_soustr_in	40	64.128.0	synth with cache (only 1: intros X x H'; only 1: compute; only 1: CRelationClasses.simpl_crelation).	0.246104955673	187
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.incl_soustr	40	0.129.0.0	synth with cache (only 1: intros A B x H'; only 1: red; only 1: induction 1; only 1: auto with sets).	0.245944976807	38
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.incl_soustr_add_l	40	516.0.0.0.64.320.0	synth with cache (only 1: unfold Add at 1; only 1: intro H2; only 1: intros A; only 1: red; only 1: intros x0 H'0; only 1: elim H'0; only 1: easy || now destruct 1).	2.8793721199	5957
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.incl_soustr_add_r	40	1.193.0.64.1.0.0.256.0	synth with cache (only 1: intros X x H'; only 1: intros a b; only 1: red; only 1: apply Setminus_intro; only 1: red; only 1: left; only 1: auto with sets; only 1: induction 1; only 1: auto with sets).	8.43903589249	3805
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.add_soustr_2	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.add_soustr_1	40	0.0.0.0.0.1.1.0.0.0	synth with cache (only 1: intros X x H'; only 1: red; only 1: intros x0 H'0; only 1: elim H'0; only 1: intros t H'1; only 1: elim H'1; only 1: auto with sets; only 1: intros t H'1; only 1: elim H'1; only 1: auto with sets).	1.23661804199	1427
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.add_soustr_xy	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.incl_st_add_soustr	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.Sub_Add_new	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.Simplify_add	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.Included_Add	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.setcover_inv	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.Add_covers	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.covers_Add	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.covers_is_Add	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.Singleton_atomic	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.less_than_singleton	40
Coq.Sets.Partial_Order.Partial_order_facts.Strict_Rel_Transitive_with_Rel	40
Coq.Sets.Partial_Order.Partial_order_facts.Strict_Rel_Transitive_with_Rel_left	40
Coq.Sets.Partial_Order.Partial_order_facts.Strict_Rel_Transitive	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Empty_set_zero	40	66.0	synth with cache (only 1: intro A; only 1: auto  10 with sets).	0.0366230010986	13
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Empty_set_zero_right	40	0	synth with cache (only 1: auto  6 with sets).	0.0141379833221	1
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Empty_set_zero'	40	0.7	synth with cache (only 1: unfold Add at 1; only 1: auto  6 with sets).	0.263851165771	239
Coq.Sets.Powerset_facts.Sets_as_an_algebra.less_than_empty	40	0	synth with cache (only 1: auto with sets).	0.0131120681763	1
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_commutative	40	0	synth with cache (only 1: auto with sets).	0.0142769813538	1
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_associative	40	68.6	synth with cache (only 1: intros X H'; only 1: auto  10 with sets).	0.501758098602	423
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_idempotent	40	0	synth with cache (only 1: auto  6 with sets).	0.0154039859772	1
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_absorbs	40	1.65	synth with cache (only 1: intro H'; only 1: auto  6 with sets).	0.108693122864	22
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Couple_as_union	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Triple_as_union	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Triple_as_Couple	40	0.0.0.0.0.0.0.0.0.0.0.0.0.128.129	synth with cache (only 1: intro A; only 1: intro h; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: auto with sets; only 1: auto with sets; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets).	2.01392316818	1474
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Triple_as_Couple_Singleton	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Intersection_commutative	40	0.2.0.0.0.2.0.0.0.3.66.64	synth with cache (only 1: intro x; only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x2 H'1; only 1: elim H'1; only 1: auto with sets; only 1: red; only 1: intros x2 H'1; only 1: elim H'1; only 1: auto with sets).	1.16306614876	1833
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Distributivity	40	0.0.0.0.0.0.0.0.0.0.1.69.0.0.0.0.0.2	synth with cache (only 1: intros x y z; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: destruct 2; only 1: auto with sets; only 1: auto with sets; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: intros x1 H'0; only 1: elim H'0; only 1: auto with sets; only 1: intros x1 H'0; only 1: elim H'0; only 1: auto with sets).	3.25991010666	3757
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Distributivity_l	40	0.0.0.0.0.0.0.0.0.0.0.192.64.1.1.5.2.0.2.0.0.0.0.0.0.0.0	synth with cache (only 1: intros A B C; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: intros x0 H'0 H'1; only 1: generalize H'0; only 1: generalize H'0; only 1: generalize H'0; only 1: generalize H'0; only 1: elim H'; only 1: generalize H'0; only 1: generalize H'0; only 1: intros H ?; only 1: reflexivity || destruct H; only 1: auto with sets; only 1: auto with sets; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: intros x0 H'0; only 1: elim H'0; only 1: auto with sets; only 1: intros x0 H'0; only 1: elim H'0; only 1: auto with sets).	25.5128369331	35452
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Distributivity'	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_add	40	1.0.1.64	synth with cache (only 1: intros x H; only 1: unfold Add at 1; only 1: unfold Add at 1; only 1: auto  9 with sets).	0.287996053696	117
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Non_disjoint_union	40	1.1.1.0.0.1.0.0.0.4.2.1.2.3	synth with cache (only 1: unfold Add; only 1: intros x y H'; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x1 H'0; only 1: elim H'0; only 1: auto with sets; only 1: intros x2 H'1; only 1: elim H'1; only 1: elim H'0; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets).	32.9527108669	62154
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Non_disjoint_union'	40	1.194.1.128.64.1.0.1.0.0.0.1.1.195.64	synth with cache (only 1: intro H'1; only 1: intro z; only 1: intro H; only 1: apply Extensionality_Ensembles; only 1: red; only 1: split; only 1: red; only 1: intros x0 H'0; only 1: elim H'0; only 1: auto with sets; only 1: intros x0 H'; only 1: constructor; only 1: assumption; only 1: destruct 1; only 1: auto with sets).	20.9922230244	39253
Coq.Sets.Powerset_facts.Sets_as_an_algebra.singlx	40	0.0.0.0.0.0.0.2	synth with cache (only 1: unfold Add at 1; only 1: intros x y H'; only 1: elim H'; only 1: intros t H'1; only 1: elim H'1; only 1: intros t H'1; only 1: elim H'1; only 1: auto with sets).	0.790999889374	669
Coq.Sets.Powerset_facts.Sets_as_an_algebra.incl_add	40	0.1.0.65.0	synth with cache (only 1: intros B C x H'; only 1: destruct 1; only 1: auto using Add_intro2 with sets; only 1: right; only 1: assumption).	0.183495044708	64
Coq.Sets.Powerset_facts.Sets_as_an_algebra.incl_add_x	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Add_commutative	40	1.2.200	synth with cache (only 1: intros H H'; only 1: unfold Add; only 1: auto  9 with sets).	14.0589461327	20636
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Add_commutative'	40	65.65.0.0.192.64.1.1.128	synth with cache (only 1: intros x2 H'1; only 1: intros x H'0; only 1: apply Extensionality_Ensembles; only 1: generalize H'1; only 1: intro X; only 1: unfold Add; only 1: split; only 1: auto  10 with sets; only 1: auto  10 with sets).	2.91603803635	2154
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Add_distributes	40	65.0.0.65.128.192	synth with cache (only 1: intro H; only 1: intro p; only 1: intro X; only 1: intros x y; only 1: unfold Add; only 1: auto  10 with sets).	0.962458133698	805
Coq.Sets.Powerset_facts.Sets_as_an_algebra.setcover_intro	40	0.192.192.64	synth with cache (only 1: intros H'0 H'1; only 1: intros x y; only 1: intros [Hl Hr]; only 1: auto with sets).	0.0622689723969	60
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Disjoint_Intersection	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Intersection_Empty_set_l	40	0	synth with cache (only 1: auto with sets).	0.0159199237823	1
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Intersection_Empty_set_r	40	0.0	synth with cache (only 1: intros; only 1: auto with sets).	0.0189490318298	2
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Seminus_Empty_set_l	40	0.0.1.1.1.1.1.0	synth with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x0 H'0; only 1: elim H'0; only 1: auto with sets; only 1: auto with sets).	0.646291017532	682
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Seminus_Empty_set_r	40	0.0.0.0.1.0.0.0	synth with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x H1; only 1: destruct H1; only 1: unfold In in *; only 1: assumption; only 1: intuition).	0.158930063248	109
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Setminus_Union_l	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Setminus_Union_r	40	0.0.0.192.1.1.0.0.0.0.0.0.0.1.1.2.1.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x H; only 1: inversion H; only 1: intuition; only 1: constructor; only 1: intuition; only 1: intuition; only 1: intros x H; only 1: constructor; only 1: inversion H; only 1: inversion H0; only 1: intuition; only 1: inversion H; only 1: inversion H0; only 1: inversion H0; only 1: inversion H0; only 1: induction 1; only 1: inversion H0; only 1: intuition; only 1: intuition).	4.40331411362	5075
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Setminus_Disjoint_noop	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Setminus_Included_empty	40	1.0.0.2.0.0.2.0.0.0	synth with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x H1; only 1: unfold In in *; only 1: exfalso; only 1: inversion_clear H1; only 1: contradict H; only 1: intuition; only 1: intuition).	1.45051980019	1995
Coq.Sets.Constructive_sets.Ensembles_facts.Extension	40	0.129.0.129.0.0.9	synth with cache (only 1: red; only 1: intros A B []; only 1: split; only 1: intros n m; only 1: trivial; only 1: intros n m; only 1: trivial).	0.65628194809	2046
Coq.Sets.Constructive_sets.Ensembles_facts.Noone_in_empty	40	12.64.68	synth with cache (only 1: intro; only 1: intro H1; only 1: elim H1).	0.535900831223	2382
Coq.Sets.Constructive_sets.Ensembles_facts.Included_Empty	40	0	synth with cache (only 1: destruct 1).	0.00898694992065	1
Coq.Sets.Constructive_sets.Ensembles_facts.Add_intro1	40	1.65.1	synth with cache (only 1: intros x H; only 1: constructor; only 1: auto with sets).	0.115587949753	170
Coq.Sets.Constructive_sets.Ensembles_facts.Add_intro2	40	0.0	synth with cache (only 1: unfold Add at 1; only 1: auto with sets).	0.0146858692169	2
Coq.Sets.Constructive_sets.Ensembles_facts.Inhabited_add	40	0.10.2.2.0	synth with cache (only 1: unfold Add at 1; only 1: intro; only 1: intro; only 1: exists x; only 1: auto with sets).	1.02849793434	5110
Coq.Sets.Constructive_sets.Ensembles_facts.Inhabited_not_empty	40	1.66.1.2.2.134	synth with cache (only 1: induction 1; only 1: red; only 1: intro; only 1: elim (Noone_in_empty x); only 1: destruct H0 in H; only 1: auto with sets).	1.07313513756	4717
Coq.Sets.Constructive_sets.Ensembles_facts.Add_not_Empty	40	0.70.4.129.65.3.3.3	synth with cache (only 1: unfold Add at 1; only 1: red; only 1: intro H'1; only 1: intro x; only 1: intros H; only 1: elim (Noone_in_empty x); only 1: reflexivity || destruct H; only 1: auto using Add_intro2 with sets).	13.4406950474	81526
Coq.Sets.Constructive_sets.Ensembles_facts.not_Empty_Add	40	0.2.3.1.1.0	synth with cache (only 1: intros A x; only 1: red; only 1: intro H'1; only 1: elim (Noone_in_empty x); only 1: rewrite H'1; only 1: auto using Add_intro2 with sets).	0.625037908554	1203
Coq.Sets.Constructive_sets.Ensembles_facts.Singleton_inv	40	1.1.1	synth with cache (only 1: intros B C H'; only 1: rewrite H'; only 1: auto with sets).	0.0290150642395	24
Coq.Sets.Constructive_sets.Ensembles_facts.Singleton_intro	40	0.0.0	synth with cache (only 1: intros x y H'; only 1: elim H'; only 1: auto using Add_intro2 with sets).	0.017196893692	3
Coq.Sets.Constructive_sets.Ensembles_facts.Union_inv	40	0.0.2.5	synth with cache (only 1: intros A x; only 1: destruct 1; only 1: auto with sets; only 1: auto with sets).	0.421592950821	573
Coq.Sets.Constructive_sets.Ensembles_facts.Add_inv	40	0.131.1.64.2.130	synth with cache (only 1: intros A P H; only 1: unfold Add at 1; only 1: destruct 1; only 1: auto with sets; only 1: reflexivity || destruct H; only 1: auto using Add_intro2 with sets).	3.58250713348	7490
Coq.Sets.Constructive_sets.Ensembles_facts.Intersection_inv	40	0.0.0	synth with cache (only 1: intros B C x H'; only 1: elim H'; only 1: auto with sets).	0.0189180374146	3
Coq.Sets.Constructive_sets.Ensembles_facts.Couple_inv	40	1.1.0.1	synth with cache (only 1: intros B C x H'; only 1: elim H'; only 1: auto with sets; only 1: auto with sets).	0.263581037521	194
Coq.Sets.Constructive_sets.Ensembles_facts.Setminus_intro	40	1.0	synth with cache (only 1: intros B C x H'; only 1: auto with sets).	0.0165209770203	3
Coq.Sets.Constructive_sets.Ensembles_facts.Strict_Included_intro	40	1.0	synth with cache (only 1: intros B C H'; only 1: auto with sets).	0.0157787799835	3
Coq.Sets.Constructive_sets.Ensembles_facts.Strict_Included_strict	40	3.128.1	synth with cache (only 1: intro; only 1: intros [Hl Hr]; only 1: auto with sets).	0.0846128463745	141
Coq.Sets.Finite_sets_facts.Finite_sets_facts.finite_cardinal	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.cardinal_finite	40	0.1.65	synth with cache (only 1: induction 1; only 1: auto with sets; only 1: auto with sets).	0.337180137634	451
Coq.Sets.Finite_sets_facts.Finite_sets_facts.Add_preserves_Finite	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.Singleton_is_finite	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.Union_preserves_Finite	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.Finite_downward_closed	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.Intersection_preserves_finite	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.cardinalO_empty	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.inh_card_gt_O	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.card_soustr_1	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.cardinal_is_functional	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.cardinal_Empty	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.cardinal_unicity	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.card_Add_gen	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.incl_st_card_lt	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.incl_card_le	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.G_aux	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.Generalized_induction_on_finite_sets	40
Coq.Sets.Finite_sets.Ensembles_finis_facts.cardinal_invert	40
Coq.Sets.Finite_sets.Ensembles_finis_facts.cardinal_elim	40	4.0.0	synth with cache (only 1: induction 1; only 1: auto; only 1: auto using Noone_in_empty with sets).	0.0901618003845	111