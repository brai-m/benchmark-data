
Coq.btauto.Reflect.poly_of_formula_eval_compat	40
Coq.btauto.Reflect.poly_of_formula_valid_compat	40
Coq.btauto.Reflect.poly_of_formula_sound	40
Coq.btauto.Reflect.reduce_poly_of_formula_sound	40
Coq.btauto.Reflect.list_nth_base	40	4.2	search with cache (only 1: zify; only 1: now auto).	0.0331971645355	8
Coq.btauto.Reflect.list_nth_succ	40
Coq.btauto.Reflect.list_nth_nil	40
Coq.btauto.Reflect.make_last_nth_1	40
Coq.btauto.Reflect.make_last_nth_2	40	3.0.0.0.0.3.3.7	search with cache (only 1: induction n using Pos.peano_rect; only 1: reflexivity; only 1: zify; only 1: unfold make_last; only 1: rewrite Pos.peano_rect_succ; only 1: fold (make_last n x def); only 1: rewrite list_nth_succ; only 1: apply IHn).	5.66999602318	2524
Coq.btauto.Reflect.list_replace_nth_1	40
Coq.btauto.Reflect.list_replace_nth_2	40
Coq.btauto.Reflect.boolean_witness_nonzero	40
Coq.btauto.Reflect.reduce_poly_of_formula_sound_alt	40
Coq.btauto.Algebra.Decidable_sound	40	15.46.0.23	search with cache (only 1: compute; only 1: intros; only 1: apply H; only 1: tauto).	28.0787689686	47609
Coq.btauto.Algebra.Decidable_complete	40	1.49.0.26	search with cache (only 1: compute; only 1: intros P H Hp; only 1: apply H; only 1: assumption).	30.8203771114	33522
Coq.btauto.Algebra.Decidable_sound_alt	40
Coq.btauto.Algebra.Decidable_complete_alt	40	3.0.22	search with cache (only 1: compute; only 1: intros P [wit spec] Hd; only 1: intuition congruence).	3.02531504631	2585
Coq.btauto.Algebra.Decidable_PosEq_obligation_1	40
Coq.btauto.Algebra.Decidable_PosLt_obligation_1	40
Coq.btauto.Algebra.Decidable_PosLe_obligation_1	40
Coq.btauto.Algebra.Decidable_eq_poly_obligation_1	40
Coq.btauto.Algebra.Decidable_null_obligation_3	40
Coq.btauto.Algebra.Decidable_valid_obligation_1	40
Coq.btauto.Algebra.valid_le_compat	40
Coq.btauto.Algebra.linear_le_compat	40	1.1.1.1.0.0.0.0	search with cache (only 1: intros k l p H Hl; only 1: induction H; only 1: constructor; only 1: constructor; only 1: now eapply Pos.lt_le_trans; eassumption; only 1: eauto; only 1: eauto; only 1: eauto).	0.656299114227	153
Coq.btauto.Algebra.linear_valid_incl	40
Coq.btauto.Algebra.eval_null_zero	40	0.5	search with cache (only 1: inversion 1; only 1: trivial).	0.195322990417	22
Coq.btauto.Algebra.eval_extensional_eq_compat	40
Coq.btauto.Algebra.eval_suffix_compat	40
Coq.btauto.Algebra.poly_add_compat	40
Coq.btauto.Algebra.poly_mul_cst_compat	40
Coq.btauto.Algebra.poly_mul_mon_compat	40
Coq.btauto.Algebra.poly_mul_compat	40
Coq.btauto.Algebra.poly_add_valid_compat	40
Coq.btauto.Algebra.poly_mul_cst_valid_compat	40
Coq.btauto.Algebra.poly_mul_mon_null_compat	40
Coq.btauto.Algebra.poly_mul_mon_valid_compat	40
Coq.btauto.Algebra.poly_mul_valid_compat	40
Coq.btauto.Algebra.poly_add_linear_compat	40
Coq.btauto.Algebra.reduce_aux_eval_compat	40
Coq.btauto.Algebra.reduce_eval_compat	40
Coq.btauto.Algebra.reduce_aux_le_compat	40
Coq.btauto.Algebra.linear_reduce_aux	40
Coq.btauto.Algebra.linear_reduce	40
Coq.funind.Recdef.le_lt_SS	40	14	search with cache (only 1: auto with arith).	0.341174840927	75
Coq.funind.Recdef.Splus_lt	40	24	search with cache (only 1: auto with arith).	0.50177192688	360
Coq.funind.Recdef.SSplus_lt	40
Coq.funind.Recdef.max	40
Coq.micromega.Fourier_util.Rlt_mult_inv_pos	40	1.1.2.0	search with cache (only 1: intros; only 1: apply Rmult_lt_0_compat; only 1: auto with real; only 1: auto with real).	0.197876930237	8
Coq.micromega.Fourier_util.Rlt_zero_pos_plus1	40
Coq.micromega.Fourier_util.Rle_zero_pos_plus1	40	3.2.1.0	search with cache (only 1: intros x H; only 1: rewrite Rplus_comm; only 1: red; only 1: auto with real).	0.244299888611	23
Coq.micromega.Fourier_util.Rle_mult_inv_pos	40	0.3.0.0	search with cache (only 1: intros x y H H0; only 1: replace 0 with x * 0; only 1: auto with real; only 1: ring).	0.28546500206	20
Coq.micromega.RMicromega.Rsrt	40
Coq.micromega.RMicromega.Rsor	40
Coq.micromega.RMicromega.Rinv_1	40	7.1	search with cache (only 1: intros; only 1: field).	0.135098934174	10
Coq.micromega.RMicromega.Qeq_true	40
Coq.micromega.RMicromega.Qeq_false	40
Coq.micromega.RMicromega.Qle_true	40
Coq.micromega.RMicromega.Q2R_0	40	3.0.0	search with cache (only 1: unfold Qinv, Q2R, Qeq; only 1: unfold Qnum, Qden; only 1: field).	0.121371030807	6
Coq.micromega.RMicromega.Q2R_1	40	1.0.1	search with cache (only 1: unfold Qinv, Q2R, Qeq; only 1: unfold Qnum, Qden; only 1: field).	0.161716938019	5
Coq.micromega.RMicromega.Q2R_inv_ext	40
Coq.micromega.RMicromega.QSORaddon	40
Coq.micromega.RMicromega.is_neg_true	40
Coq.micromega.RMicromega.is_neg_false	40
Coq.micromega.RMicromega.Q2R_m_Proper	40
Coq.micromega.RMicromega.Q2R_pow_pos	40
Coq.micromega.RMicromega.Q2R_pow_N	40
Coq.micromega.RMicromega.Qmult_integral	40
Coq.micromega.RMicromega.Qpower_positive_eq_zero	40
Coq.micromega.RMicromega.Qpower_positive_zero	40
Coq.micromega.RMicromega.Q2RpowerRZ	40
Coq.micromega.RMicromega.Qpower0	40
Coq.micromega.RMicromega.Q_of_RcstR	40
Coq.micromega.RMicromega.Reval_formula_compat	40
Coq.micromega.RMicromega.Reval_nformula_dec	40
Coq.micromega.RMicromega.RWeakChecker_sound	40
Coq.micromega.RMicromega.RTautoChecker_sound	40
Coq.micromega.ZMicromega.eq_le_iff	40
Coq.micromega.ZMicromega.lt_le_iff	40
Coq.micromega.ZMicromega.le_0_iff	40	0.0.0	search with cache (only 1: split; only 1: now rewrite Z.le_0_sub; only 1: now rewrite Z.le_0_sub).	0.115512132645	3
Coq.micromega.ZMicromega.le_neg	40	13.13.0.6.0	search with cache (only 1: intros; only 1: rewrite ?Z.opp_pos_neg; only 1: split; only 1: Z.order; only 1: Z.order).	9.78611302376	9161
Coq.micromega.ZMicromega.eq_cnf	40
Coq.micromega.ZMicromega.Zsor	40
Coq.micromega.ZMicromega.ZSORaddon	40
Coq.micromega.ZMicromega.ZNpower	40
Coq.micromega.ZMicromega.Zeval_expr_compat	40
Coq.micromega.ZMicromega.Zeval_formula_compat'	40
Coq.micromega.ZMicromega.Zeval_nformula_dec	40
Coq.micromega.ZMicromega.ZWeakChecker_sound	40
Coq.micromega.ZMicromega.eval_pol_sub	40
Coq.micromega.ZMicromega.eval_pol_add	40
Coq.micromega.ZMicromega.eval_pol_mul	40
Coq.micromega.ZMicromega.eval_pol_norm	40
Coq.micromega.ZMicromega.Zunsat_sound	40
Coq.micromega.ZMicromega.xnnormalise_correct	40
Coq.micromega.ZMicromega.eval_pol_Pc	40	8.0	search with cache (only 1: intros; only 1: intuition auto using Z.le_ge, Z.ge_le, Z.lt_gt, Z.gt_lt).	0.0543458461761	10
Coq.micromega.ZMicromega.xnormalise_correct	40
Coq.micromega.ZMicromega.cnf_of_list_correct	40
Coq.micromega.ZMicromega.normalise_correct	40
Coq.micromega.ZMicromega.xnegate_correct	40
Coq.micromega.ZMicromega.negate_correct	40
Coq.micromega.ZMicromega.Zdivide_ceiling	40
Coq.micromega.ZMicromega.narrow_interval_lower_bound	40
Coq.micromega.ZMicromega.isZ0_0	40
Coq.micromega.ZMicromega.isZ0_n0	40	0.0.0.0.0.0.0	search with cache (only 1: destruct x; only 1: simpl; only 1: intuition congruence; only 1: simpl; only 1: intuition congruence; only 1: simpl; only 1: intuition congruence).	0.423111200333	7
Coq.micromega.ZMicromega.Zdiv_pol_correct	40
Coq.micromega.ZMicromega.Zgcd_pol_ge	40
Coq.micromega.ZMicromega.Zdivide_pol_Zdivide	40
Coq.micromega.ZMicromega.Zdivide_pol_one	40	0.0.5.0.1.59.0.11	search with cache (only 1: induction p; only 1: constructor; only 1: intuition; only 1: constructor; only 1: easy; only 1: constructor; only 1: easy; only 1: easy).	15.966023922	21475
Coq.micromega.ZMicromega.Zgcd_minus	40
Coq.micromega.ZMicromega.Zdivide_pol_sub	40
Coq.micromega.ZMicromega.Zdivide_pol_sub_0	40
Coq.micromega.ZMicromega.Zgcd_pol_div	40
Coq.micromega.ZMicromega.Zgcd_pol_correct_lt	40
Coq.micromega.ZMicromega.is_pol_Z0_eval_pol	40
Coq.micromega.ZMicromega.pos_le_add	40
Coq.micromega.ZMicromega.max_var_le	40
Coq.micromega.ZMicromega.max_var_correct	40
Coq.micromega.ZMicromega.max_var_nformulae_mono_aux	40
Coq.micromega.ZMicromega.max_var_nformulae_mono_aux'	40
Coq.micromega.ZMicromega.max_var_nformulae_correct_aux	40
Coq.micromega.ZMicromega.max_var_nformalae_correct	40
Coq.micromega.ZMicromega.in_bdepth	40
Coq.micromega.ZMicromega.eval_Psatz_sound	40
Coq.micromega.ZMicromega.makeCuttingPlane_ns_sound	40
Coq.micromega.ZMicromega.cutting_plane_sound	40
Coq.micromega.ZMicromega.genCuttingPlaneNone	40
Coq.micromega.ZMicromega.eval_nformula_mk_eq_pos	40
Coq.micromega.ZMicromega.eval_nformula_bound_var	40	1.0.0.0	search with cache (only 1: intros; only 1: rewrite xnnormalise_correct; only 1: simpl; only 1: auto).	0.284458875656	5
Coq.micromega.ZMicromega.agree_env_subset	40
Coq.micromega.ZMicromega.agree_env_jump	40	8.2.5.2.1.5.0	search with cache (only 1: intros; only 1: unfold agree_env; only 1: intros; only 1: apply H; only 1: apply Pos.add_le_mono; only 1: eauto; only 1: apply Pos.le_refl).	36.9936299324	11952
Coq.micromega.ZMicromega.agree_env_tail	40
Coq.micromega.ZMicromega.max_var_acc	40
Coq.micromega.ZMicromega.agree_env_eval_nformula	40
Coq.micromega.ZMicromega.agree_env_eval_nformulae	40
Coq.micromega.ZMicromega.eq_true_iff_eq	40	0.0.13.1.20.36	search with cache (only 1: intros H0 H1; only 1: case H1; only 1: intuition congruence; only 1: destruct H0; only 1: intuition congruence; only 1: intuition congruence).	10.6348149776	13585
Coq.micromega.ZMicromega.ZChecker_sound	40
Coq.micromega.ZMicromega.ZTautoChecker_sound	40
Coq.micromega.QMicromega.Qsor	40
Coq.micromega.QMicromega.QSORaddon	40
Coq.micromega.QMicromega.Qeval_expr_simpl	40
Coq.micromega.QMicromega.QNpower	40
Coq.micromega.QMicromega.Qeval_expr_compat	40
Coq.micromega.QMicromega.Qeval_formula_compat	40
Coq.micromega.QMicromega.Qeval_nformula_dec	40
Coq.micromega.QMicromega.QWeakChecker_sound	40
Coq.micromega.QMicromega.QTautoChecker_sound	40
Coq.micromega.ZCoeff.req_refl	40
Coq.micromega.ZCoeff.req_sym	40
Coq.micromega.ZCoeff.req_trans	40
Coq.micromega.ZCoeff.rplus_morph_Proper	40
Coq.micromega.ZCoeff.rtimes_morph_Proper	40
Coq.micromega.ZCoeff.ropp_morph_Proper	40
Coq.micromega.ZCoeff.rle_morph_Proper	40
Coq.micromega.ZCoeff.rlt_morph_Proper	40
Coq.micromega.ZCoeff.rminus_morph_Proper	40
Coq.micromega.ZCoeff.ring_ops_wd	40
Coq.micromega.ZCoeff.Zring_morph	40
Coq.micromega.ZCoeff.phi_pos1_pos	40
Coq.micromega.ZCoeff.phi_pos1_succ	40
Coq.micromega.ZCoeff.clt_pos_morph	40
Coq.micromega.ZCoeff.clt_morph	40
Coq.micromega.ZCoeff.Zcleb_morph	40
Coq.micromega.ZCoeff.Zcneqb_morph	40
Coq.micromega.RingMicromega.rplus_morph_Proper	40
Coq.micromega.RingMicromega.rtimes_morph_Proper	40
Coq.micromega.RingMicromega.ropp_morph_Proper	40
Coq.micromega.RingMicromega.rle_morph_Proper	40
Coq.micromega.RingMicromega.rlt_morph_Proper	40
Coq.micromega.RingMicromega.rminus_morph_Proper	40
Coq.micromega.RingMicromega.cleb_sound	40
Coq.micromega.RingMicromega.cneqb_sound	40
Coq.micromega.RingMicromega.cltb_sound	40
Coq.micromega.RingMicromega.OpMult_sound	40
Coq.micromega.RingMicromega.OpAdd_sound	40
Coq.micromega.RingMicromega.pexpr_times_nformula_correct	40
Coq.micromega.RingMicromega.nformula_times_nformula_correct	40
Coq.micromega.RingMicromega.nformula_plus_nformula_correct	40
Coq.micromega.RingMicromega.eval_Psatz_Sound	40
Coq.micromega.RingMicromega.ge_bool_cases	40
Coq.micromega.RingMicromega.extract_hyps_app	40
Coq.micromega.RingMicromega.nhyps_of_psatz_correct	40
Coq.micromega.RingMicromega.check_inconsistent_sound	40
Coq.micromega.RingMicromega.checker_nf_sound	40
Coq.micromega.RingMicromega.eval_pol_sub	40
Coq.micromega.RingMicromega.eval_pol_add	40	49.2.4.0	search with cache (only 1: intros; only 1: unfold eval_pol in *; only 1: rewrite (Padd_ok (SORsetoid sor) Rops_wd (Rth_ARth (SORsetoid sor) Rops_wd (SORrt sor)) (SORrm addon)); only 1: reflexivity).	31.5422439575	15267
Coq.micromega.RingMicromega.eval_pol_mul	40	51.4.5.0	search with cache (only 1: intros; only 1: unfold eval_pol in *; only 1: rewrite (Pmul_ok (SORsetoid sor) Rops_wd (Rth_ARth (SORsetoid sor) Rops_wd (SORrt sor)) (SORrm addon)); only 1: reflexivity).	33.9082510471	17705
Coq.micromega.RingMicromega.eval_pol_opp	40
Coq.micromega.RingMicromega.eval_pol_norm	40
Coq.micromega.RingMicromega.normalise_sound	40
Coq.micromega.RingMicromega.negate_correct	40
Coq.micromega.RingMicromega.cnf_of_list_correct	40
Coq.micromega.RingMicromega.eq0_cnf	40
Coq.micromega.RingMicromega.xnormalise_correct	40
Coq.micromega.RingMicromega.xnegate_correct	40
Coq.micromega.RingMicromega.cnf_normalise_correct	40
Coq.micromega.RingMicromega.cnf_negate_correct	40
Coq.micromega.RingMicromega.eval_nformula_dec	40
Coq.micromega.RingMicromega.xdenorm_correct	40
Coq.micromega.RingMicromega.denorm_correct	40
Coq.micromega.RingMicromega.eval_pexprSC	40
Coq.micromega.RingMicromega.eval_formulaSC	40
Coq.micromega.ZifyBool.Z_of_bool_bound	40
Coq.micromega.ZifyBool.Z_eqb_isZero	40
Coq.micromega.ZifyBool.Z_leb_sub	40
Coq.micromega.ZifyBool.Z_ltb_leb	40
Coq.micromega.ZifyBool.Z_of_nat_eqb_iff	40
Coq.micromega.ZifyBool.Z_of_nat_leb_iff	40
Coq.micromega.ZifyBool.Z_of_nat_ltb_iff	40
Coq.micromega.ZifyBool.Z_eqb_ZSpec_ok	40	2.15.0.25	search with cache (only 1: destruct x; only 1: intuition try easy; only 1: intuition try easy; only 1: easy).	26.8888008595	20388
Coq.micromega.ZifyBool.leZeroSpec_ok	40
Coq.micromega.ZifyComparison.Z_of_comparison_bound	40
Coq.micromega.ZifyComparison.Zcompare_spec	40
Coq.micromega.ZifyInst.PropAnd	40
Coq.micromega.ZifyInst.PropOr	40	0.0	search with cache (only 1: constructor; only 1: tauto).	0.134178161621	2
Coq.micromega.ZifyInst.PropArrow	40	0.0	search with cache (only 1: constructor; only 1: tauto).	0.0677139759064	2
Coq.micromega.ZifyInst.PropIff	40	0.0	search with cache (only 1: constructor; only 1: tauto).	0.107343912125	2
Coq.micromega.ZifyInst.PropNot	40	7.21	search with cache (only 1: split; only 1: tauto).	0.668890953064	448
Coq.micromega.ZifyInst.of_nat_to_nat_eq	40	1.4.2.77.4	search with cache (only 1: intros; only 1: destruct x; only 1: now rewrite <- Z_N_nat, <- nat_N_Z, N2Nat.id, Z2N.id; only 1: now rewrite <- Z_N_nat, <- nat_N_Z, N2Nat.id, Z2N.id; only 1: trivial).	17.9215500355	24991
Coq.micromega.ZifyInst.z_max_spec	40
Coq.micromega.ZifyInst.z_min_spec	40
Coq.micromega.Ztac.eq_incl	40	0.0.5	search with cache (only 1: split; only 1: now subst; only 1: now subst).	0.118357181549	8
Coq.micromega.Ztac.elim_concl_eq	40
Coq.micromega.Ztac.elim_concl_le	40	6.0	search with cache (only 1: intros; only 1: Z.order).	1.17427492142	137
Coq.micromega.Ztac.elim_concl_lt	40	7.0	search with cache (only 1: intros; only 1: Z.order).	2.22824501991	294
Coq.micromega.Ztac.Zlt_le_add_1	40
Coq.micromega.Ztac.add_le	40	25	search with cache (only 1: now apply Z.add_nonneg_nonneg).	1.38440179825	474
Coq.micromega.Ztac.mul_le	40	11.1.1	search with cache (only 1: intros; only 1: change_no_check 0 with (0 + 0); only 1: Z.order_pos).	1.6410369873	413
Coq.micromega.OrderedRing.rplus_morph_Proper	40
Coq.micromega.OrderedRing.rtimes_morph_Proper	40
Coq.micromega.OrderedRing.ropp_morph_Proper	40
Coq.micromega.OrderedRing.rle_morph_Proper	40
Coq.micromega.OrderedRing.rlt_morph_Proper	40
Coq.micromega.OrderedRing.rminus_morph_Proper	40
Coq.micromega.OrderedRing.Rneq_symm	40	48.31.41	search with cache (only 1: intros; only 1: intros H0; only 1: now elim H).	28.2803330421	43410
Coq.micromega.OrderedRing.Rplus_0_l	40
Coq.micromega.OrderedRing.Rplus_0_r	40	0.0	search with cache (only 1: intro; only 1: ring).	0.0779399871826	2
Coq.micromega.OrderedRing.Rtimes_0_r	40	2.12	search with cache (only 1: intro; only 1: ring).	0.441253900528	94
Coq.micromega.OrderedRing.Rplus_comm	40	0.2.1	search with cache (only 1: intro; only 1: intro; only 1: ring).	0.207992076874	6
Coq.micromega.OrderedRing.Rtimes_0_l	40	0.0	search with cache (only 1: intro; only 1: ring).	0.128986120224	2
Coq.micromega.OrderedRing.Rtimes_comm	40	0.2.1	search with cache (only 1: intro; only 1: intro; only 1: ring).	0.222516059875	6
Coq.micromega.OrderedRing.Rminus_eq_0	40
Coq.micromega.OrderedRing.Rplus_cancel_l	40
Coq.micromega.OrderedRing.Req_em	40
Coq.micromega.OrderedRing.Req_dne	40
Coq.micromega.OrderedRing.Rle_lt_eq	40
Coq.micromega.OrderedRing.Rlt_trans	40
Coq.micromega.OrderedRing.Rle_lt_trans	40
Coq.micromega.OrderedRing.Rlt_le_trans	40
Coq.micromega.OrderedRing.Rle_gt_cases	40
Coq.micromega.OrderedRing.Rlt_neq	40	0.1.3.1	search with cache (only 1: intros n m; only 1: rewrite Rlt_le_neq; only 1: intro H; only 1: now destruct H).	0.1815969944	20
Coq.micromega.OrderedRing.Rle_ngt	40
Coq.micromega.OrderedRing.Rlt_nge	40
Coq.micromega.OrderedRing.Rplus_le_mono_l	40
Coq.micromega.OrderedRing.Rplus_le_mono_r	40
Coq.micromega.OrderedRing.Rplus_lt_mono_l	40
Coq.micromega.OrderedRing.Rplus_lt_mono_r	40	1.0.0.5.3.0	search with cache (only 1: intros n m p; only 1: rewrite (Rplus_comm m p); only 1: rewrite (Rplus_comm n p); only 1: do 2 rewrite Rlt_le_neq; only 1: rewrite Rplus_cancel_l; only 1: now rewrite <- Rplus_le_mono_l).	5.41384911537	824
Coq.micromega.OrderedRing.Rplus_lt_mono	40
Coq.micromega.OrderedRing.Rplus_le_mono	40
Coq.micromega.OrderedRing.Rplus_lt_le_mono	40
Coq.micromega.OrderedRing.Rplus_le_lt_mono	40
Coq.micromega.OrderedRing.Rplus_pos_pos	40
Coq.micromega.OrderedRing.Rplus_pos_nonneg	40
Coq.micromega.OrderedRing.Rplus_nonneg_pos	40
Coq.micromega.OrderedRing.Rplus_nonneg_nonneg	40
Coq.micromega.OrderedRing.Rle_le_minus	40
Coq.micromega.OrderedRing.Rlt_lt_minus	40
Coq.micromega.OrderedRing.Ropp_lt_mono	40
Coq.micromega.OrderedRing.Ropp_pos_neg	40
Coq.micromega.OrderedRing.Rtimes_nonneg_nonneg	40
Coq.micromega.OrderedRing.Rtimes_pos_neg	40
Coq.micromega.OrderedRing.Rtimes_neg_neg	40
Coq.micromega.OrderedRing.Rtimes_square_nonneg	40
Coq.micromega.OrderedRing.Rtimes_neq_0	40
Coq.micromega.OrderedRing.Ropp_neg_pos	40
Coq.micromega.OrderedRing.Rlt_0_1	40
Coq.micromega.OrderedRing.Rlt_succ_r	40
Coq.micromega.OrderedRing.Rlt_lt_succ	40
Coq.micromega.EnvRing.radd_ext_Proper	40	34	search with cache (only 1: exact (Radd_ext Reqe)).	2.02026510239	1213
Coq.micromega.EnvRing.rmul_ext_Proper	40	40	search with cache (only 1: exact (Rmul_ext Reqe)).	3.45623397827	1739
Coq.micromega.EnvRing.ropp_ext_Proper	40	36	search with cache (only 1: exact (Ropp_ext Reqe)).	1.95498514175	1227
Coq.micromega.EnvRing.rsub_ext_Proper	40	3.31	search with cache (only 1: intros x1 x2 Ex y1 y2 Ey; only 1: now rewrite !(ARsub_def ARth), Ex, Ey).	1.66702413559	1129
Coq.micromega.EnvRing.Peq_ok	40
Coq.micromega.EnvRing.Peq_spec	40
Coq.micromega.EnvRing.Pphi0	40
Coq.micromega.EnvRing.Pphi1	40
Coq.micromega.EnvRing.env_morph	40
Coq.micromega.EnvRing.Pjump_add	40
Coq.micromega.EnvRing.Pjump_xO_tail	40
Coq.micromega.EnvRing.Pjump_pred_double	40
Coq.micromega.EnvRing.mkPinj_ok	40
Coq.micromega.EnvRing.pow_pos_add	40
Coq.micromega.EnvRing.ceqb_spec	40
Coq.micromega.EnvRing.mkPX_ok	40
Coq.micromega.EnvRing.PaddC_ok	40
Coq.micromega.EnvRing.PsubC_ok	40
Coq.micromega.EnvRing.PmulC_aux_ok	40
Coq.micromega.EnvRing.PmulC_ok	40
Coq.micromega.EnvRing.Popp_ok	40
Coq.micromega.EnvRing.PaddX_ok	40
Coq.micromega.EnvRing.Padd_ok	40
Coq.micromega.EnvRing.PsubX_ok	40
Coq.micromega.EnvRing.Psub_ok	40
Coq.micromega.EnvRing.PmulI_ok	40
Coq.micromega.EnvRing.Pmul_ok	40
Coq.micromega.EnvRing.Psquare_ok	40
Coq.micromega.EnvRing.Mphi_morph	40
Coq.micromega.EnvRing.Mjump_xO_tail	40
Coq.micromega.EnvRing.Mjump_pred_double	40	0.0.0.0	search with cache (only 1: apply Mphi_morph; only 1: intros; only 1: rewrite jump_pred_double; only 1: now jump_simpl).	0.176851987839	4
Coq.micromega.EnvRing.Mjump_add	40	0.1.0.1.3	search with cache (only 1: apply Mphi_morph; only 1: intros; only 1: rewrite <- jump_add; only 1: f_equal; only 1: apply Pos.add_comm).	0.270242929459	10
Coq.micromega.EnvRing.mkZmon_ok	40	3.0.8.0.3.2	search with cache (only 1: induction M; only 1: rsimpl; only 1: simpl; only 1: rsimpl; only 1: simpl; only 1: rsimpl).	6.47806286812	1485
Coq.micromega.EnvRing.zmon_pred_ok	40
Coq.micromega.EnvRing.mkVmon_ok	40
Coq.micromega.EnvRing.Mphi_ok	40
Coq.micromega.EnvRing.POneSubst_ok	40
Coq.micromega.EnvRing.PNSubst1_ok	40
Coq.micromega.EnvRing.PNSubst_ok	40
Coq.micromega.EnvRing.PSubstL1_ok	40
Coq.micromega.EnvRing.PSubstL_ok	40
Coq.micromega.EnvRing.PNSubstL_ok	40
Coq.micromega.EnvRing.mkX_ok	40
Coq.micromega.EnvRing.Ppow_pos_ok	40
Coq.micromega.EnvRing.Ppow_N_ok	40
Coq.micromega.EnvRing.norm_aux_PEadd	40
Coq.micromega.EnvRing.norm_aux_PEopp	40
Coq.micromega.EnvRing.norm_aux_spec	40
Coq.micromega.Env.jump_add	40
Coq.micromega.Env.jump_simpl	40
Coq.micromega.Env.jump_tl	40
Coq.micromega.Env.jump_succ	40
Coq.micromega.Env.jump_pred_double	40
Coq.micromega.Env.nth_spec	40
Coq.micromega.Env.nth_jump	40	4.0.0	search with cache (only 1: unfold hd, nth, tail, jump; only 1: f_equal; only 1: apply Pos.add_comm).	0.104678869247	11
Coq.micromega.Env.nth_pred_double	40	0.0.0	search with cache (only 1: unfold hd, nth, tail, jump; only 1: f_equal; only 1: now rewrite Pos.add_1_r, Pos.succ_pred_double, Pos.add_diag).	0.0578761100769	3
Coq.micromega.Tauto.eval_f_morph	40
Coq.micromega.Tauto.map_simpl	40	3.3.3	search with cache (only 1: induction l as [| a l IH]; only 1: constructor; only 1: constructor).	0.405286073685	119
Coq.micromega.Tauto.is_X_inv	40
Coq.micromega.Tauto.if_same	40	1.1.26.16.25	search with cache (only 1: intro Ha; only 1: intros H; only 1: induction H as [| a l Hal Hl IH]; only 1: congruence; only 1: congruence).	4.48995995522	7405
Coq.micromega.Tauto.is_cnf_tt_cnf_ff	40	1	search with cache (only 1: reflexivity).	0.0115520954132	2
Coq.micromega.Tauto.is_cnf_ff_cnf_ff	40	0	search with cache (only 1: reflexivity).	0.0210490226746	1
Coq.micromega.Tauto.is_cnf_tt_inv	40	1.2.0.28.18	search with cache (only 1: intros H; only 1: induction H as [| a l Hal Hl IH]; only 1: reflexivity; only 1: simpl; only 1: congruence).	1.88599586487	2526
Coq.micromega.Tauto.is_cnf_ff_inv	40
Coq.micromega.Tauto.if_cnf_tt	40	0.0.0.0.7.0	search with cache (only 1: unfold cnf_tt; only 1: destruct f; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence).	0.602976083755	101
Coq.micromega.Tauto.or_cnf_opt_cnf_ff	40
Coq.micromega.Tauto.abs_and_pol	40
Coq.micromega.Tauto.abs_or_pol	40
Coq.micromega.Tauto.xcnf_true_mk_arrow_l	40
Coq.micromega.Tauto.or_cnf_opt_cnf_ff_r	40	1.0.5.0.0.0.5.3.1	search with cache (only 1: intros; only 1: unfold or_cnf_opt; only 1: destruct (is_cnf_tt f) eqn:EQ; only 1: rewrite is_cnf_tt_cnf_ff; only 1: simpl; only 1: apply is_cnf_tt_inv in EQ; only 1: auto; only 1: simpl; only 1: congruence).	12.7592020035	4229
Coq.micromega.Tauto.xcnf_true_mk_arrow_r	40
Coq.micromega.Tauto.abst_form_correct	40
Coq.micromega.Tauto.radd_term_term	40
Coq.micromega.Tauto.radd_term_term'	40
Coq.micromega.Tauto.xror_clause_clause	40
Coq.micromega.Tauto.ror_clause_clause	40
Coq.micromega.Tauto.ror_cnf_cnf	40
Coq.micromega.Tauto.ror_opt_cnf_cnf	40
Coq.micromega.Tauto.ratom_cnf	40
Coq.micromega.Tauto.rxcnf_xcnf	40
Coq.micromega.Tauto.eval_cnf_app	40
Coq.micromega.Tauto.eval_cnf_ff	40
Coq.micromega.Tauto.eval_cnf_tt	40	2.0.0	search with cache (only 1: unfold eval_cnf; only 1: intros; only 1: tauto).	0.046373128891	5
Coq.micromega.Tauto.eval_cnf_and_opt	40
Coq.micromega.Tauto.add_term_correct	40
Coq.micromega.Tauto.no_middle_eval_tt	40
Coq.micromega.Tauto.or_clause_correct	40
Coq.micromega.Tauto.or_clause_cnf_correct	40
Coq.micromega.Tauto.eval_cnf_cons	40	0.2.13.10.5	search with cache (only 1: unfold eval_cnf; only 1: intros; only 1: unfold eval_clause; only 1: rewrite !make_conj_cons in *; only 1: tauto).	21.1818041801	4622
Coq.micromega.Tauto.eval_cnf_cons_iff	40	0.0.0.0.0	search with cache (only 1: intros; only 1: unfold eval_cnf in *; only 1: rewrite make_conj_cons; only 1: unfold eval_clause at 2; only 1: tauto).	0.14040017128	5
Coq.micromega.Tauto.or_cnf_correct	40
Coq.micromega.Tauto.or_cnf_opt_correct	40
Coq.micromega.Tauto.xcnf_correct	40
Coq.micromega.Tauto.cnf_checker_sound	40
Coq.micromega.Tauto.tauto_checker_sound	40
Coq.micromega.Tauto.eval_bf_map	40
Coq.micromega.Refl.make_impl_true	40	1.8.25	search with cache (only 1: induction l as [| x xs Hl]; only 1: easy; only 1: now simpl).	5.12027192116	2590
Coq.micromega.Refl.make_impl_map	40
Coq.micromega.Refl.make_conj_cons	40	2.1.6.2.3.12	search with cache (only 1: intros Q H H'; only 1: induction l; only 1: simpl in *; only 1: intuition auto with arith; only 1: simpl in *; only 1: intuition).	11.0371170044	9157
Coq.micromega.Refl.make_conj_impl	40	2.1.1.0.0.0.9.0	search with cache (only 1: intros; only 1: induction l as [| a l IH]; only 1: simpl; only 1: tauto; only 1: simpl; only 1: destruct l; only 1: tauto; only 1: tauto).	15.8168699741	4362
Coq.micromega.Refl.make_conj_in	40
Coq.micromega.Refl.make_conj_app	40
Coq.micromega.Refl.make_conj_rapp	40
Coq.micromega.Refl.not_make_conj_cons	40	3.3.0	search with cache (only 1: intros; only 1: rewrite make_conj_cons; only 1: tauto).	0.209021091461	9
Coq.micromega.Refl.not_make_conj_app	40
Coq.micromega.ZifyClasses.mkapp2	40
Coq.micromega.ZifyClasses.mkapp	40
Coq.micromega.ZifyClasses.mkapp0	40
Coq.micromega.ZifyClasses.mkrel	40
Coq.nsatz.Nsatz.psos_r1b	40
Coq.nsatz.Nsatz.psos_r1	40	0.0.2.0.1	search with cache (only 1: intros x y H; only 1: setoid_replace x with x - y + y; only 1: setoid_rewrite H; only 1: cring; only 1: cring).	0.664590120316	8
Coq.nsatz.Nsatz.nsatzR_diff	40
Coq.nsatz.Nsatz.P0Z_correct	40	23	search with cache (only 1: tauto).	5.66610598564	893
Coq.nsatz.Nsatz.Rext	40
Coq.nsatz.Nsatz.Rset	40
Coq.nsatz.Nsatz.Rtheory	40	0.0.0.0.0.0.0.0.0.9	search with cache (only 1: constructor; only 1: cring; only 1: cring; only 1: cring; only 1: cring; only 1: cring; only 1: cring; only 1: cring; only 1: cring; only 1: cring).	6.15058588982	295
Coq.nsatz.Nsatz.PolZadd_correct	40
Coq.nsatz.Nsatz.PolZmul_correct	40
Coq.nsatz.Nsatz.R_power_theory	40
Coq.nsatz.Nsatz.norm_correct	40
Coq.nsatz.Nsatz.PolZeq_correct	40
Coq.nsatz.Nsatz.mult_l_correct	40
Coq.nsatz.Nsatz.compute_list_correct	40
Coq.nsatz.Nsatz.check_correct	40
Coq.nsatz.Nsatz.Rsth	40
Coq.nsatz.Nsatz.Rri	40
Coq.nsatz.Nsatz.R_one_zero	40	19	search with cache (only 1: Lra.lra).	0.251777887344	165
Coq.nsatz.Nsatz.Rcri	40
Coq.nsatz.Nsatz.Rdi	40
Coq.nsatz.Nsatz.Qri	40
Coq.nsatz.Nsatz.Q_one_zero	40
Coq.nsatz.Nsatz.Qcri	40
Coq.nsatz.Nsatz.Qdi	40
Coq.nsatz.Nsatz.Z_one_zero	40	0	search with cache (only 1: auto with *).	0.0400059223175	1
Coq.nsatz.Nsatz.Zcri	40	2	search with cache (only 1: auto with *).	0.0978729724884	21
Coq.nsatz.Nsatz.Zdi	40
Coq.omega.PreOmega.Z.mod_0_r_ext	40	0.6.1.10.0.17.5	search with cache (only 1: intros Hm; only 1: destruct x; only 1: trivial; only 1: subst; only 1: trivial; only 1: subst; only 1: trivial).	9.91211104393	11552
Coq.omega.PreOmega.Z.div_0_r_ext	40	0.1.0.6.0.1	search with cache (only 1: intro; only 1: subst; only 1: destruct x; only 1: trivial; only 1: trivial; only 1: trivial).	1.2794649601	164
Coq.omega.PreOmega.Z.rem_0_r_ext	40	0.0.3.6.0.1	search with cache (only 1: intro; only 1: subst; only 1: destruct x; only 1: trivial; only 1: trivial; only 1: trivial).	1.68260097504	363
Coq.omega.PreOmega.Z.quot_0_r_ext	40	0.0.3.4.0.1	search with cache (only 1: intro; only 1: subst; only 1: destruct x; only 1: trivial; only 1: trivial; only 1: trivial).	0.628405094147	206
Coq.omega.PreOmega.Z.rem_bound_pos_pos	40
Coq.omega.PreOmega.Z.rem_bound_neg_pos	40
Coq.omega.PreOmega.Z.rem_bound_pos_neg	40
Coq.omega.PreOmega.Z.rem_bound_neg_neg	40
Coq.omega.OmegaLemmas.Zred_factor0	40
Coq.omega.OmegaLemmas.Zred_factor1	40
Coq.omega.OmegaLemmas.Zred_factor2	40
Coq.omega.OmegaLemmas.Zred_factor3	40	1	search with cache (only 1: now Z.nzsimpl).	0.866616010666	20
Coq.omega.OmegaLemmas.Zred_factor4	40	0.1	search with cache (only 1: rewrite Z.mul_add_distr_l; only 1: now Z.nzsimpl).	0.174882888794	3
Coq.omega.OmegaLemmas.Zred_factor5	40	0	search with cache (only 1: now Z.nzsimpl).	0.117120027542	1
Coq.omega.OmegaLemmas.Zred_factor6	40	0	search with cache (only 1: now Z.nzsimpl).	0.123978853226	1
Coq.omega.OmegaLemmas.new_var	40	0.2.24	search with cache (only 1: intros; only 1: exists x; only 1: trivial).	0.701288938522	646
Coq.omega.OmegaLemmas.OMEGA1	40	12	search with cache (only 1: now destruct 1 || trivial).	0.329573154449	49
Coq.omega.OmegaLemmas.OMEGA2	40	2	search with cache (only 1: now apply Z.add_nonneg_nonneg).	0.46329498291	3
Coq.omega.OmegaLemmas.OMEGA3	40
Coq.omega.OmegaLemmas.OMEGA4	40
Coq.omega.OmegaLemmas.OMEGA5	40	20.1	search with cache (only 1: intros Hx Hxy; only 1: now subst).	2.30193305016	523
Coq.omega.OmegaLemmas.OMEGA6	40
Coq.omega.OmegaLemmas.OMEGA7	40
Coq.omega.OmegaLemmas.OMEGA8	40
Coq.omega.OmegaLemmas.OMEGA9	40
Coq.omega.OmegaLemmas.OMEGA10	40
Coq.omega.OmegaLemmas.OMEGA11	40	2.1.0	search with cache (only 1: rewrite ?Z.mul_add_distr_r, ?Z.mul_add_distr_l, ?Z.mul_assoc; only 1: rewrite <- !Z.add_assoc; only 1: f_equal).	0.118211984634	6
Coq.omega.OmegaLemmas.OMEGA12	40	2.0	search with cache (only 1: rewrite ?Z.mul_add_distr_r, ?Z.mul_add_distr_l, ?Z.mul_assoc; only 1: apply Z.add_shuffle3).	0.120133876801	4
Coq.omega.OmegaLemmas.OMEGA13	40
Coq.omega.OmegaLemmas.OMEGA14	40	0.1.0.0.0.0.0.0.0	search with cache (only 1: rewrite Z.add_shuffle1; only 1: rewrite Z.add_shuffle1; only 1: rewrite Z.add_shuffle1; only 1: rewrite Z.add_shuffle1; only 1: rewrite Z.add_shuffle1; only 1: rewrite Z.add_shuffle1; only 1: rewrite Z.add_shuffle1; only 1: rewrite <- Z.mul_add_distr_l, <- Pos2Z.opp_neg, Z.add_opp_diag_r; only 1: now Z.nzsimpl).	0.574267148972	13
Coq.omega.OmegaLemmas.OMEGA15	40	1.1.0.0	search with cache (only 1: rewrite ?Z.mul_add_distr_r, ?Z.mul_add_distr_l, ?Z.mul_assoc; only 1: rewrite <- !Z.add_assoc; only 1: f_equal; only 1: apply Z.add_shuffle3).	0.0836989879608	6
Coq.omega.OmegaLemmas.OMEGA16	40	2.4	search with cache (only 1: rewrite ?Z.mul_add_distr_r, ?Z.mul_add_distr_l, ?Z.mul_assoc; only 1: f_equal).	0.390619039536	17
Coq.omega.OmegaLemmas.OMEGA17	40	0.0	search with cache (only 1: intros H ->; only 1: now Z.nzsimpl).	0.177356004715	2
Coq.omega.OmegaLemmas.OMEGA18	40	2.2.7.0	search with cache (only 1: unfold Zne, not; only 1: intros; only 1: subst; only 1: now rewrite ?Z.mul_add_distr_r, ?Z.mul_add_distr_l, ?Z.mul_assoc).	1.24357104301	250
Coq.omega.OmegaLemmas.OMEGA19	40
Coq.omega.OmegaLemmas.OMEGA20	40	0.0.1.0	search with cache (only 1: unfold Zne, not; only 1: intros NE EQ; only 1: subst; only 1: now Z.nzsimpl).	0.14709186554	5
Coq.omega.OmegaLemmas.intro_Z	40
Coq.rtauto.Rtauto.pos_eq_refl	40
Coq.rtauto.Rtauto.form_eq_refl	40
Coq.rtauto.Rtauto.compose0	40
Coq.rtauto.Rtauto.compose1	40
Coq.rtauto.Rtauto.compose2	40	1.0.0.8.0.4.0.0	search with cache (only 1: induction F; only 1: intros A B H; only 1: auto; only 1: intros A B H; only 1: intro i; only 1: simpl; only 1: apply IHF; only 1: auto).	17.336717844	9939
Coq.rtauto.Rtauto.compose3	40	1.0.0.9.1.1.0.1.0	search with cache (only 1: induction F; only 1: intros A B C H; only 1: simpl; only 1: auto; only 1: intros A B C H; only 1: intro i; only 1: simpl; only 1: apply IHF; only 1: auto).	22.8668060303	14407
Coq.rtauto.Rtauto.weaken	40
Coq.rtauto.Rtauto.project_In	40
Coq.rtauto.Rtauto.project	40
Coq.rtauto.Rtauto.interp_proof	40
Coq.rtauto.Rtauto.Reflect	40
Coq.rtauto.Bintree.Gt_Psucc	40
Coq.rtauto.Bintree.Psucc_Gt	40
Coq.rtauto.Bintree.map_app	40
Coq.rtauto.Bintree.length_map	40	1.2.0.0.0	search with cache (only 1: induction l; only 1: reflexivity; only 1: simpl; only 1: apply f_equal; only 1: apply IHl).	0.128125905991	8
Coq.rtauto.Bintree.Lget_map	40
Coq.rtauto.Bintree.Lget_app	40	0.1.0.6.0.0.5.5	search with cache (only 1: induction l; only 1: induction i; only 1: trivial; only 1: trivial; only 1: induction i; only 1: trivial; only 1: simpl; only 1: trivial).	10.8799619675	4693
Coq.rtauto.Bintree.Lget_app_Some	40
Coq.rtauto.Bintree.Tget_Tempty	40	2.0.0.0.0.0.43	search with cache (only 1: induction p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	3.31253290176	5087
Coq.rtauto.Bintree.Tget_Tadd	40
Coq.rtauto.Bintree.get_empty	40	1.4.4.4	search with cache (only 1: destruct i; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	1.16381692886	285
Coq.rtauto.Bintree.get_Full_Gt	40
Coq.rtauto.Bintree.get_Full_Eq	40
Coq.rtauto.Bintree.get_push_Full	40
Coq.rtauto.Bintree.Full_push_compat	40
Coq.rtauto.Bintree.Full_index_one_empty	40
Coq.rtauto.Bintree.push_not_empty	40
Coq.rtauto.Bintree.get_In	40
Coq.rtauto.Bintree.Tget_Tmap	40
Coq.rtauto.Bintree.Tmap_Tadd	40
Coq.rtauto.Bintree.get_map	40
Coq.rtauto.Bintree.map_push	40
Coq.rtauto.Bintree.Full_map	40
Coq.setoid_ring.Rings_R.Rsth	40
Coq.setoid_ring.Rings_R.Rri	40
Coq.setoid_ring.Rings_R.Rcri	40
Coq.setoid_ring.Rings_R.R_one_zero	40	21	search with cache (only 1: Lra.lra).	0.73444890976	455
Coq.setoid_ring.Rings_R.Rdi	40
Coq.setoid_ring.RealField.RTheory	40
Coq.setoid_ring.RealField.Rfield	40
Coq.setoid_ring.RealField.Rlt_n_Sn	40
Coq.setoid_ring.RealField.Rlt_0_2	40
Coq.setoid_ring.RealField.Rgen_phiPOS	40
Coq.setoid_ring.RealField.Rgen_phiPOS_not_0	40
Coq.setoid_ring.RealField.Rdef_pow_add	40
Coq.setoid_ring.RealField.R_power_theory	40
Coq.setoid_ring.Rings_Q.Qri	40
Coq.setoid_ring.Rings_Q.Qcri	40	7.22.1.21	search with cache (only 1: intro; only 1: intros; only 1: rewrite Qmult_comm; only 1: apply Q_Setoid).	15.8439850807	5751
Coq.setoid_ring.Rings_Q.Q_one_zero	40	1	search with cache (only 1: discriminate).	0.103782176971	2
Coq.setoid_ring.Rings_Q.Qdi	40
Coq.setoid_ring.Rings_Z.Zcri	40	1.0	search with cache (only 1: red; only 1: exact Z.mul_comm).	0.0311269760132	3
Coq.setoid_ring.Rings_Z.Z_one_zero	40	6.1	search with cache (only 1: intro; only 1: now Z.nzsimpl).	0.054652929306	9
Coq.setoid_ring.Rings_Z.Zdi	40
Coq.setoid_ring.Integral_domain.integral_domain_minus_one_zero	40
Coq.setoid_ring.Integral_domain.pow_not_zero	40
Coq.setoid_ring.Integral_domain.Rintegral_domain_pow	40
Coq.setoid_ring.Cring.cring_eq_ext	40
Coq.setoid_ring.Cring.cring_almost_ring_theory	40
Coq.setoid_ring.Cring.cring_morph	40
Coq.setoid_ring.Cring.cring_power_theory	40
Coq.setoid_ring.Cring.cring_div_theory	40
Coq.setoid_ring.Cring.Zcri	40
Coq.setoid_ring.Ncring_tac.Zeqb_ok	40	1.0.3.8.22	search with cache (only 1: intros x y H7; only 1: apply Zsth; only 1: pose proof (Zeq_bool_eq x y H7) as H10; only 1: rewrite H10; only 1: reflexivity).	6.93621683121	2023
Coq.setoid_ring.Ncring_tac.comm	40
Coq.setoid_ring.Ncring_initial.Zsth	40
Coq.setoid_ring.Ncring_initial.Zr	40
Coq.setoid_ring.Ncring_initial.same_gen	40
Coq.setoid_ring.Ncring_initial.ARgen_phiPOS_Psucc	40
Coq.setoid_ring.Ncring_initial.ARgen_phiPOS_add	40
Coq.setoid_ring.Ncring_initial.ARgen_phiPOS_mult	40
Coq.setoid_ring.Ncring_initial.same_genZ	40
Coq.setoid_ring.Ncring_initial.gen_Zeqb_ok	40
Coq.setoid_ring.Ncring_initial.gen_phiZ1_add_pos_neg	40
Coq.setoid_ring.Ncring_initial.match_compOpp	40
Coq.setoid_ring.Ncring_initial.gen_phiZ_add	40
Coq.setoid_ring.Ncring_initial.gen_phiZ_opp	40
Coq.setoid_ring.Ncring_initial.gen_phiZ_mul	40
Coq.setoid_ring.Ncring_initial.gen_phiZ_ext	40	2.6.0	search with cache (only 1: intros x y H7; only 1: subst; only 1: reflexivity).	1.56189393997	96
Coq.setoid_ring.Ncring_initial.gen_phiZ_morph	40
Coq.setoid_ring.ArithRing.natSRth	40
Coq.setoid_ring.ArithRing.nat_morph_N	40
Coq.setoid_ring.Field_theory.radd_ext_Proper	40
Coq.setoid_ring.Field_theory.rmul_ext_Proper	40
Coq.setoid_ring.Field_theory.ropp_ext_Proper	40
Coq.setoid_ring.Field_theory.rsub_ext_Proper	40
Coq.setoid_ring.Field_theory.rinv_ext_Proper	40	7	search with cache (only 1: trivial).	0.0254080295563	8
Coq.setoid_ring.Field_theory.ceqb_spec	40
Coq.setoid_ring.Field_theory.NPEequiv_eq	40
Coq.setoid_ring.Field_theory.NPEeval_ext	40
Coq.setoid_ring.Field_theory.rsub_0_l	40	6	search with cache (only 1: eauto).	0.194305896759	11
Coq.setoid_ring.Field_theory.rsub_0_r	40
Coq.setoid_ring.Field_theory.rdiv_simpl	40
Coq.setoid_ring.Field_theory.rdiv_ext	40
Coq.setoid_ring.Field_theory.rmul_reg_l	40
Coq.setoid_ring.Field_theory.field_is_integral_domain	40
Coq.setoid_ring.Field_theory.ropp_neq_0	40
Coq.setoid_ring.Field_theory.rdiv_r_r	40	25	search with cache (only 1: eauto).	1.73834490776	598
Coq.setoid_ring.Field_theory.rdiv1	40
Coq.setoid_ring.Field_theory.rdiv2	40
Coq.setoid_ring.Field_theory.rdiv2b	40
Coq.setoid_ring.Field_theory.rdiv5	40
Coq.setoid_ring.Field_theory.rdiv3b	40
Coq.setoid_ring.Field_theory.rdiv6	40
Coq.setoid_ring.Field_theory.rdiv4	40
Coq.setoid_ring.Field_theory.rdiv4b	40
Coq.setoid_ring.Field_theory.rdiv7	40
Coq.setoid_ring.Field_theory.rdiv7b	40
Coq.setoid_ring.Field_theory.rinv_nz	40
Coq.setoid_ring.Field_theory.rdiv8	40
Coq.setoid_ring.Field_theory.cross_product_eq	40
Coq.setoid_ring.Field_theory.pow_ext	40
Coq.setoid_ring.Field_theory.pow_N_ext	40
Coq.setoid_ring.Field_theory.pow_pos_0	40	1.1.0.0.0.1	search with cache (only 1: induction p as [p IH| p IH| ]; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite !IH, ?H; only 1: trivial).	0.572457075119	11
Coq.setoid_ring.Field_theory.pow_pos_1	40
Coq.setoid_ring.Field_theory.pow_pos_cst	40
Coq.setoid_ring.Field_theory.pow_pos_mul_l	40
Coq.setoid_ring.Field_theory.pow_pos_add_r	40
Coq.setoid_ring.Field_theory.pow_pos_mul_r	40
Coq.setoid_ring.Field_theory.pow_pos_nz	40
Coq.setoid_ring.Field_theory.pow_pos_div	40
Coq.setoid_ring.Field_theory.PEadd_ext	40
Coq.setoid_ring.Field_theory.PEsub_ext	40	0.0.1	search with cache (only 1: intros ? ? E ? ? E' l; only 1: simpl; only 1: now rewrite E, E').	0.233804941177	4
Coq.setoid_ring.Field_theory.PEmul_ext	40	0.0.1	search with cache (only 1: intros ? ? E ? ? E' l; only 1: simpl; only 1: now rewrite E, E').	0.270924091339	4
Coq.setoid_ring.Field_theory.PEopp_ext	40
Coq.setoid_ring.Field_theory.PEpow_ext	40
Coq.setoid_ring.Field_theory.PE_1_l	40
Coq.setoid_ring.Field_theory.PE_1_r	40	5.0.0.0	search with cache (only 1: intros l; only 1: simpl; only 1: rewrite phi_1; only 1: trivial).	0.383946180344	9
Coq.setoid_ring.Field_theory.PEpow_0_r	40	8.0	search with cache (only 1: intros l; only 1: eauto).	0.759913921356	32
Coq.setoid_ring.Field_theory.PEpow_1_r	40	0.0.0	search with cache (only 1: intros l; only 1: simpl; only 1: now rewrite !rpow_pow).	0.31840801239	3
Coq.setoid_ring.Field_theory.PEpow_1_l	40
Coq.setoid_ring.Field_theory.PEpow_add_r	40
Coq.setoid_ring.Field_theory.PEpow_mul_l	40
Coq.setoid_ring.Field_theory.PEpow_mul_r	40
Coq.setoid_ring.Field_theory.PEpow_nz	40
Coq.setoid_ring.Field_theory.if_true	40
Coq.setoid_ring.Field_theory.PExpr_eq_semi_ok	40
Coq.setoid_ring.Field_theory.PExpr_eq_spec	40
Coq.setoid_ring.Field_theory.NPEadd_ok	40
Coq.setoid_ring.Field_theory.NPEsub_ok	40
Coq.setoid_ring.Field_theory.NPEopp_ok	40
Coq.setoid_ring.Field_theory.NPEpow_ok	40
Coq.setoid_ring.Field_theory.NPEmul_ok	40
Coq.setoid_ring.Field_theory.PEsimp_ok	40
Coq.setoid_ring.Field_theory.PCond_cons	40
Coq.setoid_ring.Field_theory.PCond_cons_inv_l	40	3.4.1.0.0	search with cache (only 1: destruct l1; only 1: simpl; only 1: trivial; only 1: destruct 1; only 1: trivial).	20.5166749954	418
Coq.setoid_ring.Field_theory.PCond_cons_inv_r	40	1.3.0.0.0	search with cache (only 1: destruct l1; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now destruct 1).	2.92360687256	30
Coq.setoid_ring.Field_theory.PCond_app	40
Coq.setoid_ring.Field_theory.absurd_PCond_bottom	40	3.6	search with cache (only 1: destruct 1; only 1: trivial).	1.12192106247	25
Coq.setoid_ring.Field_theory.Z_pos_sub_gt	40
Coq.setoid_ring.Field_theory.default_isIn_ok	40
Coq.setoid_ring.Field_theory.isIn_ok	40
Coq.setoid_ring.Field_theory.split_aux_ok1	40
Coq.setoid_ring.Field_theory.split_aux_ok	40
Coq.setoid_ring.Field_theory.split_ok_l	40
Coq.setoid_ring.Field_theory.split_ok_r	40
Coq.setoid_ring.Field_theory.split_nz_l	40
Coq.setoid_ring.Field_theory.split_nz_r	40
Coq.setoid_ring.Field_theory.Pcond_Fnorm	40
Coq.setoid_ring.Field_theory.Fnorm_FEeval_PEeval	40
Coq.setoid_ring.Field_theory.Fnorm_crossproduct	40
Coq.setoid_ring.Field_theory.Fnorm_ok	40
Coq.setoid_ring.Field_theory.Field_rw_correct	40
Coq.setoid_ring.Field_theory.Field_rw_pow_correct	40
Coq.setoid_ring.Field_theory.Field_correct	40
Coq.setoid_ring.Field_theory.Field_simplify_eq_correct	40
Coq.setoid_ring.Field_theory.Field_simplify_eq_pow_correct	40
Coq.setoid_ring.Field_theory.Field_simplify_aux_ok	40
Coq.setoid_ring.Field_theory.Field_simplify_eq_pow_in_correct	40
Coq.setoid_ring.Field_theory.Field_simplify_eq_in_correct	40
Coq.setoid_ring.Field_theory.fcons_ok	40
Coq.setoid_ring.Field_theory.PFcons_fcons_inv	40
Coq.setoid_ring.Field_theory.PFcons0_fcons_inv	40
Coq.setoid_ring.Field_theory.PFcons00_fcons_inv	40
Coq.setoid_ring.Field_theory.ceqb_spec'	40
Coq.setoid_ring.Field_theory.PFcons1_fcons_inv	40
Coq.setoid_ring.Field_theory.PFcons2_fcons_inv	40
Coq.setoid_ring.Field_theory.radd_ext3_Proper	40
Coq.setoid_ring.Field_theory.rmul_ext3_Proper	40
Coq.setoid_ring.Field_theory.ropp_ext3_Proper	40
Coq.setoid_ring.Field_theory.add_inj_r	40
Coq.setoid_ring.Field_theory.gen_phiPOS_inj	40
Coq.setoid_ring.Field_theory.gen_phiN_inj	40
Coq.setoid_ring.Field_theory.gen_phiN_complete	40
Coq.setoid_ring.Field_theory.ring_S_inj	40
Coq.setoid_ring.Field_theory.gen_phiPOS_discr_sgn	40
Coq.setoid_ring.Field_theory.gen_phiZ_inj	40
Coq.setoid_ring.Field_theory.gen_phiZ_complete	40
Coq.setoid_ring.Ncring_polynom.cO	40	69	search with cache (only 1: auto).	2.33448290825	2440
Coq.setoid_ring.Ncring_polynom.cI	40	0	search with cache (only 1: exact ring0).	0.0283789634705	1
Coq.setoid_ring.Ncring_polynom.Peq_ok	40
Coq.setoid_ring.Ncring_polynom.Pphi0	40
Coq.setoid_ring.Ncring_polynom.Pphi1	40
Coq.setoid_ring.Ncring_polynom.mkPX_ok	40
Coq.setoid_ring.Ncring_polynom.PaddCl_ok	40
Coq.setoid_ring.Ncring_polynom.PmulC_aux_ok	40
Coq.setoid_ring.Ncring_polynom.PmulC_ok	40
Coq.setoid_ring.Ncring_polynom.Popp_ok	40
Coq.setoid_ring.Ncring_polynom.PaddXPX	40
Coq.setoid_ring.Ncring_polynom.PaddX_ok2	40
Coq.setoid_ring.Ncring_polynom.Padd_ok	40
Coq.setoid_ring.Ncring_polynom.PaddX_ok	40
Coq.setoid_ring.Ncring_polynom.Psub_ok	40
Coq.setoid_ring.Ncring_polynom.Pmul_ok	40
Coq.setoid_ring.Ncring_polynom.Psquare_ok	40
Coq.setoid_ring.Ncring_polynom.mkX_ok	40	2.3.21	search with cache (only 1: Esimpl; only 1: intros; only 1: Esimpl).	4.61093997955	492
Coq.setoid_ring.Ncring_polynom.Ppow_pos_ok	40
Coq.setoid_ring.Ncring_polynom.Ppow_N_ok	40
Coq.setoid_ring.Ncring_polynom.norm_aux_spec	40
Coq.setoid_ring.Ncring_polynom.norm_subst_spec	40
Coq.setoid_ring.Ncring_polynom.norm_subst_ok	40	15.0.0	search with cache (only 1: intros; only 1: unfold norm_subst; only 1: apply norm_aux_spec).	13.9222838879	540
Coq.setoid_ring.Ncring_polynom.ring_correct	40
Coq.setoid_ring.Ring.BoolTheory	40
Coq.setoid_ring.Ring.bool_eq_ok	40
Coq.setoid_ring.Ncring.pow_pos_comm	40
Coq.setoid_ring.Ncring.pow_pos_succ	40
Coq.setoid_ring.Ncring.pow_pos_add	40
Coq.setoid_ring.Ncring.pow_N_pow_N	40	8	search with cache (only 1: reflexivity).	0.109432935715	16
Coq.setoid_ring.Ncring.ring_mul_0_l	40
Coq.setoid_ring.Ncring.ring_mul_0_r	40
Coq.setoid_ring.Ncring.ring_opp_mul_l	40
Coq.setoid_ring.Ncring.ring_opp_mul_r	40
Coq.setoid_ring.Ncring.ring_opp_add	40
Coq.setoid_ring.Ncring.ring_opp_opp	40
Coq.setoid_ring.Ncring.ring_sub_ext	40
Coq.setoid_ring.Ncring.ring_add_0_r	40	3.0.1.15	search with cache (only 1: intro x; only 1: rewrite (ring_add_comm x); only 1: rewrite ring_add_0_l; only 1: reflexivity).	1.18645215034	288
Coq.setoid_ring.Ncring.ring_add_assoc1	40
Coq.setoid_ring.Ncring.ring_add_assoc2	40	0.2.1.9.3	search with cache (only 1: intros; only 1: rewrite (ring_add_comm y); only 1: rewrite <- (ring_add_assoc x); only 1: rewrite (ring_add_comm x); only 1: reflexivity).	1.4182767868	297
Coq.setoid_ring.Ncring.ring_opp_zero	40
Coq.setoid_ring.InitialRing.Zth	40
Coq.setoid_ring.InitialRing.radd_ext3_Proper	40
Coq.setoid_ring.InitialRing.rmul_ext3_Proper	40
Coq.setoid_ring.InitialRing.ropp_ext3_Proper	40
Coq.setoid_ring.InitialRing.get_signZ_th	40
Coq.setoid_ring.InitialRing.rsub_ext3_Proper	40
Coq.setoid_ring.InitialRing.same_gen	40
Coq.setoid_ring.InitialRing.ARgen_phiPOS_Psucc	40
Coq.setoid_ring.InitialRing.ARgen_phiPOS_add	40
Coq.setoid_ring.InitialRing.ARgen_phiPOS_mult	40
Coq.setoid_ring.InitialRing.rsub_ext4_Proper	40	0	search with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).	0.0651531219482	1
Coq.setoid_ring.InitialRing.same_genZ	40
Coq.setoid_ring.InitialRing.gen_Zeqb_ok	40
Coq.setoid_ring.InitialRing.gen_phiZ1_pos_sub	40
Coq.setoid_ring.InitialRing.gen_phiZ_add	40
Coq.setoid_ring.InitialRing.gen_phiZ_mul	40
Coq.setoid_ring.InitialRing.gen_phiZ_ext	40	1.7.0	search with cache (only 1: intros x y H; only 1: rewrite H; only 1: rrefl).	0.72031712532	88
Coq.setoid_ring.InitialRing.gen_phiZ_morph	40
Coq.setoid_ring.InitialRing.Nth	40
Coq.setoid_ring.InitialRing.Neqb_ok	40
Coq.setoid_ring.InitialRing.radd_ext4_Proper	40	0	search with cache (only 1: exact (Radd_ext Reqe)).	0.0400168895721	1
Coq.setoid_ring.InitialRing.rmul_ext4_Proper	40	2	search with cache (only 1: exact (Rmul_ext Reqe)).	0.057981967926	3
Coq.setoid_ring.InitialRing.same_genN	40
Coq.setoid_ring.InitialRing.gen_phiN_add	40
Coq.setoid_ring.InitialRing.gen_phiN_mult	40
Coq.setoid_ring.InitialRing.gen_phiN_sub	40
Coq.setoid_ring.InitialRing.gen_phiN_morph	40
Coq.setoid_ring.InitialRing.radd_ext5_Proper	40	0	search with cache (only 1: exact (Radd_ext Reqe)).	0.0804898738861	1
Coq.setoid_ring.InitialRing.rmul_ext5_Proper	40	0	search with cache (only 1: exact (Rmul_ext Reqe)).	0.0899450778961	1
Coq.setoid_ring.InitialRing.ropp_ext5_Proper	40	0	search with cache (only 1: exact (Ropp_ext Reqe)).	0.0796461105347	1
Coq.setoid_ring.InitialRing.rsub_ext7_Proper	40	0	search with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).	0.0990397930145	1
Coq.setoid_ring.InitialRing.gen_phiNword0_ok	40
Coq.setoid_ring.InitialRing.gen_phiNword_cons	40
Coq.setoid_ring.InitialRing.gen_phiNword_Nwcons	40	0.0.0.1.0.0.0.0.0.0	search with cache (only 1: induction w; only 1: destruct n; only 1: simpl; only 1: norm; only 1: simpl; only 1: norm; only 1: intros; only 1: destruct n; only 1: norm; only 1: norm).	3.30131983757	194
Coq.setoid_ring.InitialRing.gen_phiNword_ok	40
Coq.setoid_ring.InitialRing.Nwadd_ok	40
Coq.setoid_ring.InitialRing.Nwopp_ok	40	0.0.19	search with cache (only 1: induction x; only 1: norm; only 1: norm).	1.14474201202	339
Coq.setoid_ring.InitialRing.Nwscal_ok	40
Coq.setoid_ring.InitialRing.Nwmul_ok	40
Coq.setoid_ring.InitialRing.gen_phiNword_morph	40
Coq.setoid_ring.InitialRing.radd_ext_Proper	40
Coq.setoid_ring.InitialRing.rmul_ext_Proper	40
Coq.setoid_ring.InitialRing.ropp_ext_Proper	40
Coq.setoid_ring.InitialRing.rsub_ext_Proper	40
Coq.setoid_ring.InitialRing.triv_div_th	40
Coq.setoid_ring.InitialRing.Ztriv_div_th	40
Coq.setoid_ring.InitialRing.Ntriv_div_th	40
Coq.setoid_ring.Ring_polynom.radd_ext_Proper	40	34	search with cache (only 1: exact (Radd_ext Reqe)).	2.26804113388	1213
Coq.setoid_ring.Ring_polynom.rmul_ext_Proper	40	40	search with cache (only 1: exact (Rmul_ext Reqe)).	2.94577980042	1775
Coq.setoid_ring.Ring_polynom.ropp_ext_Proper	40	36	search with cache (only 1: exact (Ropp_ext Reqe)).	1.66179394722	1245
Coq.setoid_ring.Ring_polynom.rsub_ext_Proper	40	3.31	search with cache (only 1: intros x1 x2 Ex y1 y2 Ey; only 1: now rewrite !(ARsub_def ARth), Ex, Ey).	1.73736906052	1129
Coq.setoid_ring.Ring_polynom.Pequiv_eq	40
Coq.setoid_ring.Ring_polynom.Pphi_ext	40
Coq.setoid_ring.Ring_polynom.Pinj_ext	40
Coq.setoid_ring.Ring_polynom.PX_ext	40
Coq.setoid_ring.Ring_polynom.jump_add'	40
Coq.setoid_ring.Ring_polynom.Peq_ok	40
Coq.setoid_ring.Ring_polynom.Peq_spec	40
Coq.setoid_ring.Ring_polynom.Pphi0	40
Coq.setoid_ring.Ring_polynom.Pphi1	40
Coq.setoid_ring.Ring_polynom.mkPinj_ok	40
Coq.setoid_ring.Ring_polynom.mkPinj_ext	40
Coq.setoid_ring.Ring_polynom.pow_pos_add	40
Coq.setoid_ring.Ring_polynom.ceqb_spec	40
Coq.setoid_ring.Ring_polynom.mkPX_ok	40
Coq.setoid_ring.Ring_polynom.mkPX_ext	40
Coq.setoid_ring.Ring_polynom.PaddC_ok	40
Coq.setoid_ring.Ring_polynom.PsubC_ok	40
Coq.setoid_ring.Ring_polynom.PmulC_aux_ok	40
Coq.setoid_ring.Ring_polynom.PmulC_ok	40
Coq.setoid_ring.Ring_polynom.Popp_ok	40
Coq.setoid_ring.Ring_polynom.PaddX_ok	40
Coq.setoid_ring.Ring_polynom.Padd_ok	40
Coq.setoid_ring.Ring_polynom.Psub_opp	40
Coq.setoid_ring.Ring_polynom.Psub_ok	40
Coq.setoid_ring.Ring_polynom.PmulI_ok	40
Coq.setoid_ring.Ring_polynom.Pmul_ok	40
Coq.setoid_ring.Ring_polynom.mkZmon_ok	40
Coq.setoid_ring.Ring_polynom.zmon_pred_ok	40
Coq.setoid_ring.Ring_polynom.mkVmon_ok	40
Coq.setoid_ring.Ring_polynom.Mcphi_ok	40
Coq.setoid_ring.Ring_polynom.Mphi_ok	40
Coq.setoid_ring.Ring_polynom.POneSubst_ok	40
Coq.setoid_ring.Ring_polynom.PNSubst1_ok	40
Coq.setoid_ring.Ring_polynom.PNSubst_ok	40
Coq.setoid_ring.Ring_polynom.PSubstL1_ok	40
Coq.setoid_ring.Ring_polynom.PSubstL_ok	40
Coq.setoid_ring.Ring_polynom.PNSubstL_ok	40
Coq.setoid_ring.Ring_polynom.mkX_ok	40
Coq.setoid_ring.Ring_polynom.Ppow_pos_ok	40
Coq.setoid_ring.Ring_polynom.Ppow_N_ok	40
Coq.setoid_ring.Ring_polynom.norm_aux_PEadd	40
Coq.setoid_ring.Ring_polynom.norm_aux_PEopp	40
Coq.setoid_ring.Ring_polynom.norm_aux_spec	40
Coq.setoid_ring.Ring_polynom.norm_subst_spec	40
Coq.setoid_ring.Ring_polynom.mon_of_pol_ok	40
Coq.setoid_ring.Ring_polynom.interp_PElist_ok	40
Coq.setoid_ring.Ring_polynom.norm_subst_ok	40
Coq.setoid_ring.Ring_polynom.ring_correct	40
Coq.setoid_ring.Ring_polynom.mkmult_rec_ok	40
Coq.setoid_ring.Ring_polynom.mkmult1_ok	40
Coq.setoid_ring.Ring_polynom.mkmultm1_ok	40
Coq.setoid_ring.Ring_polynom.r_list_pow_rev	40
Coq.setoid_ring.Ring_polynom.mkmult_c_pos_ok	40
Coq.setoid_ring.Ring_polynom.mkmult_c_ok	40
Coq.setoid_ring.Ring_polynom.mkadd_mult_ok	40
Coq.setoid_ring.Ring_polynom.add_pow_list_ok	40
Coq.setoid_ring.Ring_polynom.add_mult_dev_ok	40
Coq.setoid_ring.Ring_polynom.mult_dev_ok	40
Coq.setoid_ring.Ring_polynom.Pphi_avoid_ok	40
Coq.setoid_ring.Ring_polynom.local_mkpow_ok	40
Coq.setoid_ring.Ring_polynom.Pphi_pow_ok	40
Coq.setoid_ring.Ring_polynom.ring_rw_pow_correct	40
Coq.setoid_ring.Ring_polynom.mkmult_pow_ok	40
Coq.setoid_ring.Ring_polynom.mkpow_ok	40
Coq.setoid_ring.Ring_polynom.mkopp_pow_ok	40
Coq.setoid_ring.Ring_polynom.Pphi_dev_ok	40
Coq.setoid_ring.Ring_polynom.ring_rw_correct	40
Coq.setoid_ring.Ring_theory.pow_pos_swap	40
Coq.setoid_ring.Ring_theory.pow_pos_succ	40
Coq.setoid_ring.Ring_theory.pow_pos_add	40
Coq.setoid_ring.Ring_theory.pow_N_pow_N	40	3	search with cache (only 1: reflexivity).	0.0337860584259	4
Coq.setoid_ring.Ring_theory.get_sign_None_th	40	37.130	search with cache (only 1: split; only 1: discriminate).	5.48359704018	17480
Coq.setoid_ring.Ring_theory.IDmorph	40
Coq.setoid_ring.Ring_theory.Eqsth	40
Coq.setoid_ring.Ring_theory.Eq_s_ext	40	11.11.41	search with cache (only 1: split; only 1: solve_proper; only 1: solve_proper).	2.18900704384	2508
Coq.setoid_ring.Ring_theory.Eq_ext	40	0.0.0.1	search with cache (only 1: constructor; only 1: solve_proper; only 1: solve_proper; only 1: solve_proper).	0.343601942062	5
Coq.setoid_ring.Ring_theory.radd_ext1_Proper	40
Coq.setoid_ring.Ring_theory.rmul_ext1_Proper	40
Coq.setoid_ring.Ring_theory.SRopp_ext	40	28	search with cache (only 1: trivial).	0.907898902893	457
Coq.setoid_ring.Ring_theory.SReqe_Reqe	40	0.1.2.3.5	search with cache (only 1: constructor; only 1: exact (SRadd_ext SReqe); only 1: exact (SRmul_ext SReqe); only 1: intros x y H; only 1: exact H).	0.690781116486	193
Coq.setoid_ring.Ring_theory.SRopp_mul_l	40	10	search with cache (only 1: reflexivity).	0.118098020554	21
Coq.setoid_ring.Ring_theory.SRopp_add	40	1	search with cache (only 1: reflexivity).	0.0584349632263	2
Coq.setoid_ring.Ring_theory.SRsub_def	40	0	search with cache (only 1: reflexivity).	0.0589680671692	1
Coq.setoid_ring.Ring_theory.SRIDmorph	40
Coq.setoid_ring.Ring_theory.SRmorph_Rmorph	40
Coq.setoid_ring.Ring_theory.radd_ext2_Proper	40
Coq.setoid_ring.Ring_theory.rmul_ext2_Proper	40
Coq.setoid_ring.Ring_theory.ropp_ext2_Proper	40
Coq.setoid_ring.Ring_theory.Rmul_0_l	40
Coq.setoid_ring.Ring_theory.Ropp_mul_l	40
Coq.setoid_ring.Ring_theory.Ropp_add	40
Coq.setoid_ring.Ring_theory.Ropp_opp	40
Coq.setoid_ring.Ring_theory.cadd_ext_Proper	40
Coq.setoid_ring.Ring_theory.cmul_ext_Proper	40
Coq.setoid_ring.Ring_theory.copp_ext_Proper	40
Coq.setoid_ring.Ring_theory.phi_ext1_Proper	40
Coq.setoid_ring.Ring_theory.Smorph_opp	40
Coq.setoid_ring.Ring_theory.Smorph_sub	40
Coq.setoid_ring.Ring_theory.ARth_SRth	40
Coq.setoid_ring.Ring_theory.ARsub_ext	40
Coq.setoid_ring.Ring_theory.ARadd_0_r	40
Coq.setoid_ring.Ring_theory.ARmul_1_r	40	3	search with cache (only 1: mrewrite).	0.0466978549957	4
Coq.setoid_ring.Ring_theory.ARmul_0_r	40	3	search with cache (only 1: mrewrite).	0.0476770401001	4
Coq.setoid_ring.Ring_theory.ARdistr_r	40
Coq.setoid_ring.Ring_theory.ARadd_assoc1	40
Coq.setoid_ring.Ring_theory.ARadd_assoc2	40
Coq.setoid_ring.Ring_theory.ARmul_assoc1	40
Coq.setoid_ring.Ring_theory.ARmul_assoc2	40
Coq.setoid_ring.Ring_theory.ARopp_mul_r	40
Coq.setoid_ring.Ring_theory.ARopp_zero	40
Coq.setoid_ring.BinList.jump_tl	40
Coq.setoid_ring.BinList.jump_succ	40
Coq.setoid_ring.BinList.jump_add	40
Coq.setoid_ring.BinList.jump_pred_double	40
Coq.setoid_ring.BinList.nth_jump	40
Coq.setoid_ring.BinList.nth_pred_double	40
Coq.ssr.ssrbool.prop_congr	40	0.5	search with cache (only 1: destruct 1; only 1: trivial).	0.204368114471	53
Coq.ssr.ssrbool.is_true_true	40	6	search with cache (only 1: repeat split).	0.0359599590302	7
Coq.ssr.ssrbool.not_false_is_true	40	1	search with cache (only 1: by [  ]).	0.0511891841888	2
Coq.ssr.ssrbool.is_true_locked_true	40	0.0	search with cache (only 1: unlock; only 1: by [  ]).	0.0440340042114	2
Coq.ssr.ssrbool.negbT	40	2	search with cache (only 1: Bool.destr_bool).	0.0535140037537	3
Coq.ssr.ssrbool.negbTE	40	0	search with cache (only 1: by case : {}b {}).	0.0516610145569	1
Coq.ssr.ssrbool.negbF	40	0	search with cache (only 1: by case : {}b {}).	0.0524160861969	1
Coq.ssr.ssrbool.negbFE	40	0	search with cache (only 1: by case : {}b {}).	0.0445449352264	1
Coq.ssr.ssrbool.negbK	40	0.12	search with cache (only 1: intro H; only 1: Bool.destr_bool).	0.105522155762	60
Coq.ssr.ssrbool.negbNE	40	0	search with cache (only 1: by case : {}b {}).	0.0165219306946	1
Coq.ssr.ssrbool.negb_inj	40	0.23	search with cache (only 1: intro H; only 1: Bool.destr_bool).	0.387219905853	280
Coq.ssr.ssrbool.negbLR	40	9	search with cache (only 1: Bool.destr_bool).	0.0821590423584	10
Coq.ssr.ssrbool.negbRL	40	10	search with cache (only 1: Bool.destr_bool).	0.113156080246	21
Coq.ssr.ssrbool.contra	40	8.17	search with cache (only 1: Bool.destr_bool; only 1: tauto).	0.896723031998	398
Coq.ssr.ssrbool.contraL	40	0	search with cache (only 1: by case : {}b {} =>//; case : {}c {}).	0.0609889030457	1
Coq.ssr.ssrbool.contraR	40	0	search with cache (only 1: by case : {}b {} =>//; case : {}c {}).	0.0597288608551	1
Coq.ssr.ssrbool.contraLR	40	0	search with cache (only 1: by case : {}b {} =>//; case : {}c {}).	0.0358769893646	1
Coq.ssr.ssrbool.contraT	40	19.13	search with cache (only 1: Bool.destr_bool; only 1: intuition).	1.38159704208	750
Coq.ssr.ssrbool.wlog_neg	40	1	search with cache (only 1: by case : {}b {} =>// {+}->).	0.060075044632	2
Coq.ssr.ssrbool.contraFT	40	12.15	search with cache (only 1: Bool.destr_bool; only 1: intuition).	2.17471694946	549
Coq.ssr.ssrbool.contraFN	40	13.16	search with cache (only 1: Bool.destr_bool; only 1: intuition).	2.14437198639	642
Coq.ssr.ssrbool.contraTF	40	14.15	search with cache (only 1: Bool.destr_bool; only 1: intuition).	2.47153282166	676
Coq.ssr.ssrbool.contraNF	40	15.16	search with cache (only 1: Bool.destr_bool; only 1: intuition).	1.98387980461	781
Coq.ssr.ssrbool.contraFF	40	0.0.58.42	search with cache (only 1: Bool.destr_bool; only 1: destruct H; only 1: by [  ]; only 1: tauto).	23.4678010941	36649
Coq.ssr.ssrbool.ifP	40
Coq.ssr.ssrbool.ifPn	40	0	search with cache (only 1: by case  def_b: {}b {}; constructor).	0.0233490467072	1
Coq.ssr.ssrbool.ifT	40	4	search with cache (only 1: by case : {}b {}).	0.0258870124817	5
Coq.ssr.ssrbool.ifF	40	1	search with cache (only 1: by move {+}->).	0.0235579013824	2
Coq.ssr.ssrbool.ifN	40	3	search with cache (only 1: by case : {}b {}).	0.0283999443054	4
Coq.ssr.ssrbool.if_same	40	2	search with cache (only 1: by case  def_b: {}b {}; constructor).	0.0226991176605	3
Coq.ssr.ssrbool.if_neg	40	1	search with cache (only 1: by case  def_b: {}b {}; constructor; rewrite ?def_b).	0.0233819484711	2
Coq.ssr.ssrbool.fun_if	40	0	search with cache (only 1: by case b).	0.0215890407562	1
Coq.ssr.ssrbool.if_arg	40	0	search with cache (only 1: by case b).	0.0402138233185	1
Coq.ssr.ssrbool.ifE	40	6	search with cache (only 1: reflexivity).	0.0592858791351	7
Coq.ssr.ssrbool.introNTF	40
Coq.ssr.ssrbool.introTF	40	0	search with cache (only 1: by case c; case Hb).	0.0575461387634	1
Coq.ssr.ssrbool.elimNTF	40	0	search with cache (only 1: by case c; case Hb).	0.057676076889	1
Coq.ssr.ssrbool.elimTF	40	0	search with cache (only 1: by case c; case Hb).	0.0570058822632	1
Coq.ssr.ssrbool.equivPif	40
Coq.ssr.ssrbool.xorPif	40	0.0.7	search with cache (only 1: intuition; only 1: by case Hb; auto; only 1: by case Hb; auto).	0.300910949707	13
Coq.ssr.ssrbool.introTFn	40
Coq.ssr.ssrbool.elimTFn	40
Coq.ssr.ssrbool.equivPifn	40
Coq.ssr.ssrbool.xorPifn	40
Coq.ssr.ssrbool.introT	40
Coq.ssr.ssrbool.introF	40
Coq.ssr.ssrbool.introN	40
Coq.ssr.ssrbool.introNf	40
Coq.ssr.ssrbool.introTn	40
Coq.ssr.ssrbool.introFn	40
Coq.ssr.ssrbool.elimT	40
Coq.ssr.ssrbool.elimF	40
Coq.ssr.ssrbool.elimN	40
Coq.ssr.ssrbool.elimNf	40
Coq.ssr.ssrbool.elimTn	40
Coq.ssr.ssrbool.elimFn	40
Coq.ssr.ssrbool.introP	40
Coq.ssr.ssrbool.iffP	40
Coq.ssr.ssrbool.equivP	40	1.22	search with cache (only 1: intuition; only 1: by case : {}Pb {}; constructor; auto).	0.376045942307	281
Coq.ssr.ssrbool.sumboolP	40
Coq.ssr.ssrbool.appP	40
Coq.ssr.ssrbool.sameP	40
Coq.ssr.ssrbool.decPcases	40
Coq.ssr.ssrbool.decP	40
Coq.ssr.ssrbool.rwP	40	17	search with cache (only 1: by case Pb).	0.323698997498	126
Coq.ssr.ssrbool.rwP2	40
Coq.ssr.ssrbool.altP	40
Coq.ssr.ssrbool.impliesP	40	28.12.40	search with cache (only 1: intro p; only 1: destruct p; only 1: auto).	3.24848389626	6591
Coq.ssr.ssrbool.impliesPn	40	30.2.12	search with cache (only 1: intuition; only 1: destruct H; only 1: auto).	1.38669705391	2109
Coq.ssr.ssrbool.unlessL	40	44.7.8	search with cache (only 1: repeat split; only 1: intros; only 1: by move  {}=>fK injf' x; apply : {}injf' {}).	2.99691605568	4794
Coq.ssr.ssrbool.unlessR	40	33.41.9	search with cache (only 1: repeat split; only 1: intros H ?; only 1: auto).	7.46908092499	12039
Coq.ssr.ssrbool.unless_sym	40	5.5.25.9.42.10	search with cache (only 1: repeat split; only 1: intros H ?; only 1: intros; only 1: apply H; only 1: by [  ]; only 1: by [  ]).	8.48965001106	22588
Coq.ssr.ssrbool.unlessP	40
Coq.ssr.ssrbool.bind_unless	40
Coq.ssr.ssrbool.unless_contra	40
Coq.ssr.ssrbool.classicP	40
Coq.ssr.ssrbool.classicW	40	0.24	search with cache (only 1: red; only 1: by move  {}=>b b' {+}->).	0.299548864365	306
Coq.ssr.ssrbool.classic_bind	40
Coq.ssr.ssrbool.classic_EM	40
Coq.ssr.ssrbool.classic_pick	40
Coq.ssr.ssrbool.classic_imply	40
Coq.ssr.ssrbool.all_and2	40
Coq.ssr.ssrbool.all_and3	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtclintros@0> split =>haveP; <ssreflect_plugin::ssrtclintros@0> split =>x; case : {}(haveP x) {}).	0.0233159065247	1
Coq.ssr.ssrbool.all_and4	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtclintros@0> split =>haveP; <ssreflect_plugin::ssrtclintros@0> split =>x; case : {}(haveP x) {}).	0.0261270999908	1
Coq.ssr.ssrbool.all_and5	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtclintros@0> split =>haveP; <ssreflect_plugin::ssrtclintros@0> split =>x; case : {}(haveP x) {}).	0.0520441532135	1
Coq.ssr.ssrbool.pair_andP	40	14	search with cache (only 1: intuition).	0.284350156784	102
Coq.ssr.ssrbool.idP	40
Coq.ssr.ssrbool.boolP	40	0	search with cache (only 1: by case b1; constructor).	0.0437078475952	1
Coq.ssr.ssrbool.idPn	40	0	search with cache (only 1: by case b1; constructor).	0.0396299362183	1
Coq.ssr.ssrbool.negP	40	0	search with cache (only 1: by case b1; constructor).	0.0841679573059	1
Coq.ssr.ssrbool.negPn	40	0	search with cache (only 1: by case b1; constructor).	0.0677990913391	1
Coq.ssr.ssrbool.negPf	40	0	search with cache (only 1: by case b1; constructor; auto).	0.0313148498535	1
Coq.ssr.ssrbool.andP	40
Coq.ssr.ssrbool.and3P	40
Coq.ssr.ssrbool.and4P	40
Coq.ssr.ssrbool.and5P	40
Coq.ssr.ssrbool.orP	40
Coq.ssr.ssrbool.or3P	40
Coq.ssr.ssrbool.or4P	40
Coq.ssr.ssrbool.nandP	40	0	search with cache (only 1: by case b1; case b2; constructor; auto; case).	0.0480298995972	1
Coq.ssr.ssrbool.norP	40	0	search with cache (only 1: by case b1; case b2; constructor; auto; case; auto).	0.0557630062103	1
Coq.ssr.ssrbool.implyP	40	3	search with cache (only 1: by case b1; case b2; constructor; auto; case).	0.0899639129639	4
Coq.ssr.ssrbool.andTb	40	0	search with cache (only 1: repeat split).	0.0491919517517	1
Coq.ssr.ssrbool.andFb	40	1	search with cache (only 1: repeat split).	0.0370020866394	2
Coq.ssr.ssrbool.andbT	40	48	search with cache (only 1: by case).	0.857970952988	1180
Coq.ssr.ssrbool.andbF	40	11	search with cache (only 1: by case).	0.105445861816	33
Coq.ssr.ssrbool.andbb	40	5	search with cache (only 1: by case).	0.057639837265	6
Coq.ssr.ssrbool.andbC	40	4.121	search with cache (only 1: intro H; only 1: Bool.destr_bool).	4.24446892738	8107
Coq.ssr.ssrbool.andbA	40	1	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 2!case).	0.0205550193787	2
Coq.ssr.ssrbool.andbCA	40	1	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 2!case).	0.0220232009888	2
Coq.ssr.ssrbool.andbAC	40	13	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.131566047668	60
Coq.ssr.ssrbool.andbACA	40	13	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0889608860016	60
Coq.ssr.ssrbool.orTb	40	0	search with cache (only 1: reflexivity).	0.0192658901215	1
Coq.ssr.ssrbool.orFb	40	0	search with cache (only 1: by [  ]).	0.0183610916138	1
Coq.ssr.ssrbool.orbT	40	2	search with cache (only 1: Bool.destr_bool).	0.04012799263	3
Coq.ssr.ssrbool.orbF	40	0	search with cache (only 1: by case).	0.0201189517975	1
Coq.ssr.ssrbool.orbb	40	0	search with cache (only 1: by case).	0.0198419094086	1
Coq.ssr.ssrbool.orbC	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 2!case).	0.0254321098328	1
Coq.ssr.ssrbool.orbA	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.060781955719	1
Coq.ssr.ssrbool.orbCA	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0675029754639	1
Coq.ssr.ssrbool.orbAC	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0418388843536	1
Coq.ssr.ssrbool.orbACA	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 4!case).	0.0305759906769	1
Coq.ssr.ssrbool.andbN	40	0	search with cache (only 1: Bool.destr_bool).	0.022323846817	1
Coq.ssr.ssrbool.andNb	40	0	search with cache (only 1: by case : {}b {}).	0.0208730697632	1
Coq.ssr.ssrbool.orbN	40	2	search with cache (only 1: Bool.destr_bool).	0.0218381881714	3
Coq.ssr.ssrbool.orNb	40	0	search with cache (only 1: by case : {}b {}).	0.0426008701324	1
Coq.ssr.ssrbool.andb_orl	40	21	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.542504072189	208
Coq.ssr.ssrbool.andb_orr	40	1	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0690979957581	2
Coq.ssr.ssrbool.orb_andl	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0422251224518	1
Coq.ssr.ssrbool.orb_andr	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.023060798645	1
Coq.ssr.ssrbool.andb_idl	40	3.46	search with cache (only 1: Bool.destr_bool; only 1: intuition).	2.82178592682	1385
Coq.ssr.ssrbool.andb_idr	40	0	search with cache (only 1: by case : {}a {}; case : {}b {} =>// {+}->).	0.0265169143677	1
Coq.ssr.ssrbool.andb_id2l	40	0	search with cache (only 1: by case : {}a {}; case : {}b {} =>// {+}->).	0.0289499759674	1
Coq.ssr.ssrbool.andb_id2r	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}; case : {}c {} =>// {+}->).	0.0943198204041	1
Coq.ssr.ssrbool.orb_idl	40	2	search with cache (only 1: by case : {}a {}; case : {}b {} =>// {+}->).	0.0363140106201	3
Coq.ssr.ssrbool.orb_idr	40	0	search with cache (only 1: by case : {}a {}; case : {}b {} =>// {+}->).	0.0636520385742	1
Coq.ssr.ssrbool.orb_id2l	40	0	search with cache (only 1: by case : {}a {}; case : {}b {} =>// {+}->).	0.0850999355316	1
Coq.ssr.ssrbool.orb_id2r	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}; case : {}c {} =>// {+}->).	0.0471799373627	1
Coq.ssr.ssrbool.negb_and	40	0	search with cache (only 1: Bool.destr_bool).	0.0296840667725	1
Coq.ssr.ssrbool.negb_or	40	1	search with cache (only 1: by case : {}a {}; case : {}b {}).	0.0313630104065	2
Coq.ssr.ssrbool.andbK	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}).	0.0261929035187	1
Coq.ssr.ssrbool.andKb	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}).	0.0252950191498	1
Coq.ssr.ssrbool.orbK	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}).	0.0232858657837	1
Coq.ssr.ssrbool.orKb	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}).	0.023756980896	1
Coq.ssr.ssrbool.implybT	40	1	search with cache (only 1: Bool.destr_bool).	0.0185689926147	2
Coq.ssr.ssrbool.implybF	40	0	search with cache (only 1: by case : {}b {}).	0.020092010498	1
Coq.ssr.ssrbool.implyFb	40	0	search with cache (only 1: by case : {}b {}).	0.0194690227509	1
Coq.ssr.ssrbool.implyTb	40	0	search with cache (only 1: by case : {}b {}).	0.0203959941864	1
Coq.ssr.ssrbool.implybb	40	1	search with cache (only 1: by case : {}b {}).	0.0209560394287	2
Coq.ssr.ssrbool.negb_imply	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}).	0.0224969387054	1
Coq.ssr.ssrbool.implybE	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}).	0.0257329940796	1
Coq.ssr.ssrbool.implyNb	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}).	0.0223920345306	1
Coq.ssr.ssrbool.implybN	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}).	0.0398030281067	1
Coq.ssr.ssrbool.implybNN	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}).	0.0439720153809	1
Coq.ssr.ssrbool.implyb_idl	40	10	search with cache (only 1: by case : {}a {}; case : {}b {} =>// {+}->).	0.230255126953	21
Coq.ssr.ssrbool.implyb_idr	40	0	search with cache (only 1: by case : {}a {}; case : {}b {} =>// {+}->).	0.0504531860352	1
Coq.ssr.ssrbool.implyb_id2l	40	0	search with cache (only 1: by case : {}a {}; case : {}b {} =>// {+}->).	0.0644721984863	1
Coq.ssr.ssrbool.addFb	40	0	search with cache (only 1: by [  ]).	0.0211689472198	1
Coq.ssr.ssrbool.addbF	40	0	search with cache (only 1: by case).	0.0219788551331	1
Coq.ssr.ssrbool.addbb	40	1	search with cache (only 1: by case).	0.108069896698	2
Coq.ssr.ssrbool.addbC	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 2!case).	0.105525970459	1
Coq.ssr.ssrbool.addbA	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.108052968979	1
Coq.ssr.ssrbool.addbCA	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0211839675903	1
Coq.ssr.ssrbool.addbAC	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0265610218048	1
Coq.ssr.ssrbool.addbACA	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 4!case).	0.0308480262756	1
Coq.ssr.ssrbool.andb_addl	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0259249210358	1
Coq.ssr.ssrbool.andb_addr	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0253789424896	1
Coq.ssr.ssrbool.addKb	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 2!case).	0.0229640007019	1
Coq.ssr.ssrbool.addbK	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 2!case).	0.0223181247711	1
Coq.ssr.ssrbool.addIb	40	4	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0362551212311	5
Coq.ssr.ssrbool.addbI	40	4	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0360000133514	5
Coq.ssr.ssrbool.addTb	40	0	search with cache (only 1: by case : {}b {}).	0.0183441638947	1
Coq.ssr.ssrbool.addbT	40	1	search with cache (only 1: by case : {}b {}).	0.0242319107056	2
Coq.ssr.ssrbool.addbN	40	2	search with cache (only 1: by case : {}a {}; case : {}b {}).	0.0280420780182	3
Coq.ssr.ssrbool.addNb	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}).	0.0288560390472	1
Coq.ssr.ssrbool.addbP	40	0.0.0.0.51	search with cache (only 1: Bool.destr_bool; only 1: intuition; only 1: intuition; only 1: now constructor; only 1: intuition).	2.71215796471	1562
Coq.ssr.ssrbool.subrelUl	40	30.6.98.43	search with cache (only 1: intro H; only 1: red; only 1: Bool.destr_bool; only 1: intuition).	38.4345729351	56625
Coq.ssr.ssrbool.subrelUr	40
Coq.ssr.ssrbool.sub_refl	40	7.45	search with cache (only 1: intro H; only 1: case  {}=>// undecP).	1.7669467926	1471
Coq.ssr.ssrbool.mem_topred	40
Coq.ssr.ssrbool.topredE	40	0	search with cache (only 1: by case : {}pT {}pp {}).	0.0862400531769	1
Coq.ssr.ssrbool.app_predE	40
Coq.ssr.ssrbool.in_applicative	40
Coq.ssr.ssrbool.in_collective	40
Coq.ssr.ssrbool.in_simpl	40	0	search with cache (only 1: by case : {}msp {} =>_ /= {+}->).	0.0605881214142	1
Coq.ssr.ssrbool.unfold_in	40	4	search with cache (only 1: by rewrite -mem_topred).	0.0629279613495	5
Coq.ssr.ssrbool.simpl_predE	40	2	search with cache (only 1: by [  ]).	0.0301899909973	3
Coq.ssr.ssrbool.mem_simpl	40	1	search with cache (only 1: by [  ]).	0.0624301433563	2
Coq.ssr.ssrbool.mem_mem	40
Coq.ssr.ssrbool.qualifE	40	1	search with cache (only 1: by [  ]).	0.0281219482422	2
Coq.ssr.ssrbool.keyed_predE	40
Coq.ssr.ssrbool.keyed_qualifier_suproof	40
Coq.ssr.ssrbool.all_tag_cond_dep	40
Coq.ssr.ssrbool.all_tag_cond	40
Coq.ssr.ssrbool.all_sig_cond_dep	40
Coq.ssr.ssrbool.all_sig_cond	40
Coq.ssr.ssrbool.symmetric_from_pre	40
Coq.ssr.ssrbool.sym_left_transitive	40
Coq.ssr.ssrbool.sym_right_transitive	40
Coq.ssr.ssrbool.equivalence_relP	40
Coq.ssr.ssrbool.rev_trans	40
Coq.ssr.ssrbool.forE	40	0	search with cache (only 1: reflexivity).	0.0430068969727	1
Coq.ssr.ssrbool.in1W	40	0.27	search with cache (only 1: red; only 1: by [  ]).	0.783616065979	390
Coq.ssr.ssrbool.in2W	40	0	search with cache (only 1: by move  {}=>? ?).	0.0262088775635	1
Coq.ssr.ssrbool.in3W	40	0	search with cache (only 1: by move  {}=>? ?).	0.054808139801	1
Coq.ssr.ssrbool.in1T	40	30.30	search with cache (only 1: intros; only 1: auto).	3.55387616158	2724
Coq.ssr.ssrbool.in2T	40	1	search with cache (only 1: by move  {}=>? ?; auto).	0.132698059082	2
Coq.ssr.ssrbool.in3T	40	1	search with cache (only 1: by move  {}=>? ?; auto).	0.138355970383	2
Coq.ssr.ssrbool.sub_in1	40	1	search with cache (only 1: by move  {}=>? ?; auto).	0.0265209674835	2
Coq.ssr.ssrbool.sub_in11	40	1	search with cache (only 1: by move  {}=>? ?; auto).	0.0286700725555	2
Coq.ssr.ssrbool.sub_in111	40	1	search with cache (only 1: by move  {}=>? ?; auto).	0.0303449630737	2
Coq.ssr.ssrbool.on1W	40	0	search with cache (only 1: by move  {}=>? ?).	0.0244138240814	1
Coq.ssr.ssrbool.on1lW	40	0	search with cache (only 1: by move  {}=>? ?).	0.0236599445343	1
Coq.ssr.ssrbool.on2W	40	0	search with cache (only 1: by move  {}=>? ?).	0.0236501693726	1
Coq.ssr.ssrbool.on1T	40	1	search with cache (only 1: by move  {}=>? ?; auto).	0.0287518501282	2
Coq.ssr.ssrbool.on1lT	40	1	search with cache (only 1: by move  {}=>? ?; auto).	0.0278239250183	2
Coq.ssr.ssrbool.on2T	40	1	search with cache (only 1: by move  {}=>? ?; auto).	0.0280621051788	2
Coq.ssr.ssrbool.subon1	40	1	search with cache (only 1: by move  {}=>? ?; auto).	0.0291149616241	2
Coq.ssr.ssrbool.subon1l	40	1	search with cache (only 1: by move  {}=>? ?; auto).	0.0296220779419	2
Coq.ssr.ssrbool.subon2	40	1	search with cache (only 1: by move  {}=>? ?; auto).	0.0297560691833	2
Coq.ssr.ssrbool.can_in_inj	40
Coq.ssr.ssrbool.canLR_in	40
Coq.ssr.ssrbool.canRL_in	40
Coq.ssr.ssrbool.on_can_inj	40	0	search with cache (only 1: by move  {}=>fK x y /fK {+2}<- /fK {+2}<- {+}->).	0.0483469963074	1
Coq.ssr.ssrbool.canLR_on	40	1	search with cache (only 1: by move  {}=>fK D1y {+}->; rewrite fK).	0.0620670318604	2
Coq.ssr.ssrbool.canRL_on	40	2	search with cache (only 1: by move  {}=>fK D1x {+}<-; rewrite fK).	0.0394248962402	3
Coq.ssr.ssrbool.inW_bij	40
Coq.ssr.ssrbool.onW_bij	40	0	search with cache (only 1: by case  {}=>g' fK g'K; <ssreflect_plugin::ssrtclintros@0> exists g' =>* ? *; auto).	0.0401041507721	1
Coq.ssr.ssrbool.inT_bij	40	0	search with cache (only 1: by case  {}=>g' fK g'K; <ssreflect_plugin::ssrtclintros@0> exists g' =>* ? *; auto).	0.073399066925	1
Coq.ssr.ssrbool.onT_bij	40	0	search with cache (only 1: by case  {}=>g' fK g'K; <ssreflect_plugin::ssrtclintros@0> exists g' =>* ? *; auto).	0.0598759651184	1
Coq.ssr.ssrbool.sub_in_bij	40	0.126	search with cache (only 1: intro; only 1: by case  {}=>g' fK g'K; <ssreflect_plugin::ssrtclintros@0> exists g' =>* ? *; auto).	11.37738204	15700
Coq.ssr.ssrbool.subon_bij	40	5	search with cache (only 1: by move  {}=>subD [g' fK g'K]; <ssreflect_plugin::ssrtclintros@0> exists g' =>x; move /subD {}; [ apply : {}fK {} | apply : {}g'K {} ]).	0.0616910457611	6
Coq.ssr.ssrbool.sub_in2	40	5.11.45	search with cache (only 1: intro; only 1: case  {}=>// undecP; only 1: by move  {}=>? ?; auto).	3.03425002098	3071
Coq.ssr.ssrbool.sub_in3	40	5.11.46	search with cache (only 1: intro; only 1: case  {}=>// undecP; only 1: by move  {}=>? ?; auto).	4.04221892357	3136
Coq.ssr.ssrbool.sub_in12	40	1.47	search with cache (only 1: intro; only 1: by move  {}=>/= sub_dd'; apply : {}sub_in111 {}).	3.84397506714	1406
Coq.ssr.ssrbool.sub_in21	40	1	search with cache (only 1: by move  {}=>/= sub_dd'; apply : {}sub_in111 {}).	0.0865080356598	2
Coq.ssr.ssrbool.equivalence_relP_in	40
Coq.ssr.ssrbool.monoW	40	131	search with cache (only 1: by move  {}=>eq_fg eq_gh x; rewrite eq_fg).	9.39002799988	16359
Coq.ssr.ssrbool.mono2W	40	0	search with cache (only 1: by move  {}=>hf x ax; rewrite hf).	0.0206010341644	1
Coq.ssr.ssrbool.homoRL	40
Coq.ssr.ssrbool.homoLR	40	0	search with cache (only 1: by move  {}=>Hf x y /Hf; rewrite fgK).	0.0507650375366	1
Coq.ssr.ssrbool.homo_mono	40
Coq.ssr.ssrbool.monoLR	40
Coq.ssr.ssrbool.monoRL	40
Coq.ssr.ssrbool.can_mono	40
Coq.ssr.ssrbool.monoW_in	40
Coq.ssr.ssrbool.mono2W_in	40	0	search with cache (only 1: by move  {}=>hf x ax; rewrite hf).	0.148295164108	1
Coq.ssr.ssrbool.homoRL_in	40
Coq.ssr.ssrbool.homoLR_in	40	0	search with cache (only 1: by move  {}=>Hf x y hx hy /Hf; rewrite fgK_on //; apply).	0.0397000312805	1
Coq.ssr.ssrbool.homo_mono_in	40
Coq.ssr.ssrbool.monoLR_in	40
Coq.ssr.ssrbool.monoRL_in	40
Coq.ssr.ssrbool.can_mono_in	40
Coq.ssr.ssrfun.unitE	40	3.3.10.15	search with cache (only 1: intro H; only 1: simpl; only 1: destruct H; only 1: tauto).	0.792848110199	965
Coq.ssr.ssrfun.frefl	40	20	search with cache (only 1: split).	0.125715017319	186
Coq.ssr.ssrfun.fsym	40	1.30	search with cache (only 1: red; only 1: by [  ]).	0.361944913864	517
Coq.ssr.ssrfun.ftrans	40	2.51.28.31	search with cache (only 1: red; only 1: intros; only 1: rewrite H; only 1: by [  ]).	10.9144711494	34526
Coq.ssr.ssrfun.rrefl	40	6	search with cache (only 1: repeat split).	0.0410718917847	7
Coq.ssr.ssrfun.eq_comp	40
Coq.ssr.ssrfun.all_tag	40	0.0.0.1.0	search with cache (only 1: intro H; only 1: exists (fun z => projT1 (H z)); only 1: intro z; only 1: destruct (H z); only 1: assumption).	0.0673961639404	6
Coq.ssr.ssrfun.all_tag2	40	0	search with cache (only 1: by move  {}=>fP; <ssreflect_plugin::ssrtclintros@0> exists (fun x => tag (fP x)) =>x; case : {}(fP x) {}).	0.031268119812	1
Coq.ssr.ssrfun.svalP	40	24	search with cache (only 1: apply proj2_sig).	0.274968147278	280
Coq.ssr.ssrfun.s2valP	40	13	search with cache (only 1: by case : {}u {}).	0.103974103928	60
Coq.ssr.ssrfun.s2valP'	40	0	search with cache (only 1: by case : {}u {}).	0.045793056488	1
Coq.ssr.ssrfun.all_sig	40	0	search with cache (only 1: by move  {}=>fP; <ssreflect_plugin::ssrtclintros@0> exists (fun x => tag (fP x)) =>x; case : {}(fP x) {}).	0.0427129268646	1
Coq.ssr.ssrfun.all_sig2	40	1	search with cache (only 1: by move  {}=>fP; <ssreflect_plugin::ssrtclintros@0> exists (fun x => tag (fP x)) =>x; case : {}(fP x) {}).	0.0526609420776	2
Coq.ssr.ssrfun.can_pcan	40
Coq.ssr.ssrfun.pcan_inj	40
Coq.ssr.ssrfun.can_inj	40	1	search with cache (only 1: by move  {}=>fK x y /(congr1 g); <ssreflect_plugin::ssrtclintros@0> rewrite !fK =>[[]]).	0.040559053421	2
Coq.ssr.ssrfun.canLR	40	10.35.10	search with cache (only 1: intros h1 h2; only 1: subst; only 1: trivial).	1.88441300392	4597
Coq.ssr.ssrfun.canRL	40	30.16	search with cache (only 1: destruct 2; only 1: auto).	1.534263134	2842
Coq.ssr.ssrfun.Some_inj	40
Coq.ssr.ssrfun.of_voidK	40	32	search with cache (only 1: by [  ]).	0.654378890991	562
Coq.ssr.ssrfun.esymK	40	0.0.57	search with cache (only 1: intro H; only 1: destruct H; only 1: reflexivity).	2.12752389908	4185
Coq.ssr.ssrfun.etrans_id	40	4.24	search with cache (only 1: rewrite eq_trans_refl_l; only 1: reflexivity).	0.286415815353	430
Coq.ssr.ssrfun.inj_id	40	1	search with cache (only 1: by move  {}=>x y []).	0.0577549934387	2
Coq.ssr.ssrfun.inj_can_sym	40	37.68	search with cache (only 1: red; only 1: auto).	9.71849489212	15563
Coq.ssr.ssrfun.inj_comp	40	33.67	search with cache (only 1: red; only 1: auto).	11.9803109169	18899
Coq.ssr.ssrfun.inj_compr	40
Coq.ssr.ssrfun.can_comp	40	5.21.69	search with cache (only 1: red; only 1: simpl; only 1: by move  {}=>eq_fg eq_gh x; rewrite eq_fg).	4.64935517311	11154
Coq.ssr.ssrfun.pcan_pcomp	40
Coq.ssr.ssrfun.eq_inj	40
Coq.ssr.ssrfun.eq_can	40
Coq.ssr.ssrfun.inj_can_eq	40
Coq.ssr.ssrfun.bij_inj	40
Coq.ssr.ssrfun.bij_can_sym	40
Coq.ssr.ssrfun.bij_can_eq	40
Coq.ssr.ssrfun.eq_bij	40
Coq.ssr.ssrfun.bij_comp	40
Coq.ssr.ssrfun.bij_can_bij	40
Coq.ssr.ssrfun.inv_inj	40
Coq.ssr.ssrfun.inv_bij	40	33.33.101.31	search with cache (only 1: set (Hfsymf := fun a => eq_sym (Hf a)); only 1: exists f; only 1: trivial; only 1: trivial).	9.69946718216	49098
Coq.ssr.ssrsetoid.compat_Reflexive	40	0	search with cache (only 1: tauto).	0.0352520942688	1
Coq.ssr.ssreflect.master_key	40	2	search with cache (only 1: tauto).	0.0339739322662	3
Coq.ssr.ssreflect.lock	40
Coq.ssr.ssreflect.not_locked_false_eq_true	40	0.3	search with cache (only 1: unlock; only 1: discriminate).	0.0884790420532	13
Coq.ssr.ssreflect.unlock	40
Coq.ssr.ssreflect.locked_withE	40
Coq.ssr.ssreflect.unlock_with	40	1	search with cache (only 1: by case : {}k {}).	0.0132548809052	2
Coq.ssr.ssreflect.nary_congruence	40
Coq.ssr.ssreflect.ssr_congr_arrow	40	2.5.8	search with cache (only 1: intro H; only 1: destruct H; only 1: tauto).	0.248100996017	165
Coq.ssr.ssreflect.iffLR	40	0	search with cache (only 1: intuition).	0.0431251525879	1
Coq.ssr.ssreflect.iffRL	40	0	search with cache (only 1: by case : {}eqPQ {}).	0.0372710227966	1
Coq.ssr.ssreflect.iffLRn	40	2	search with cache (only 1: intuition).	0.0400378704071	3
Coq.ssr.ssreflect.iffRLn	40	0	search with cache (only 1: by move  {}=>nP tQ; case : {}nP {}; case : {}eqPQ {}tQ {}).	0.0509240627289	1
Coq.ssr.ssreflect.abstract_context	40	1.113.55	search with cache (only 1: intro H; only 1: apply H; only 1: reflexivity).	12.8699300289	55265
Coq.ssr.ssrunder.Under_rel.Under_rel_from_rel	40	1.2.4	search with cache (only 1: intro H; only 1: intro z; only 1: auto).	0.0568242073059	10
Coq.ssr.ssrunder.Under_rel.Under_relE	40	0	search with cache (only 1: now trivial).	0.0245950222015	1
Coq.ssr.ssrunder.Under_rel.over_rel	40	0	search with cache (only 1: now trivial).	0.0341260433197	1
Coq.ssr.ssrunder.Under_rel.over_rel_done	40	0	search with cache (only 1: now trivial).	0.033686876297	1
Coq.ssr.ssrunder.Under_rel.under_rel_done	40	0	search with cache (only 1: now unfold Over_rel).	0.0234560966492	1
Coq.Arith.Compare.discrete_nat	40
Coq.Arith.Compare_dec.zerop	40
Coq.Arith.Compare_dec.lt_eq_lt_dec	40
Coq.Arith.Compare_dec.gt_eq_gt_dec	40	1.1.1.0.2.0.2.0.0.0.1	search with cache (only 1: induction n in m |- *; only 1: destruct m; only 1: auto with arith; only 1: auto with arith; only 1: destruct m; only 1: auto with arith; only 1: destruct (IHn m) as [H| H]; only 1: destruct H; only 1: auto with arith; only 1: auto with arith; only 1: auto with arith).	12.2838950157	2023
Coq.Arith.Compare_dec.le_lt_dec	40	1.1.2.0.2.1.1	search with cache (only 1: induction n in m |- *; only 1: auto with arith; only 1: destruct m; only 1: auto with arith; only 1: destruct (IHn m) as [H| H]; only 1: auto with arith; only 1: auto with arith).	3.70023918152	682
Coq.Arith.Compare_dec.le_le_S_dec	40	2.1.1.3.4.1.5	search with cache (only 1: induction n in m |- *; only 1: auto with arith; only 1: destruct m; only 1: auto with arith; only 1: elim (IHn m); only 1: auto with arith; only 1: auto with arith).	24.5437150002	6138
Coq.Arith.Compare_dec.le_ge_dec	40	2.1.1.0.0.2.2.0.0	search with cache (only 1: induction n in m |- *; only 1: left; only 1: auto with arith; only 1: destruct m; only 1: right; only 1: auto with arith; only 1: elim (IHn m); only 1: auto with arith; only 1: auto with arith).	7.93923187256	1935
Coq.Arith.Compare_dec.le_gt_dec	40	10	search with cache (only 1: exact (le_lt_dec n m)).	0.192281961441	30
Coq.Arith.Compare_dec.le_lt_eq_dec	40
Coq.Arith.Compare_dec.le_dec	40	2.4.6	search with cache (only 1: elim (le_lt_dec n m); only 1: auto with arith; only 1: auto with arith).	4.78905797005	772
Coq.Arith.Compare_dec.lt_dec	40	1.1.2.0.3.0.2.1.1.5	search with cache (only 1: induction n in m |- *; only 1: destruct m; only 1: right; only 1: auto with arith; only 1: auto with arith; only 1: destruct m; only 1: auto with arith; only 1: elim (IHn m); only 1: auto with arith; only 1: auto with arith).	36.9630520344	13065
Coq.Arith.Compare_dec.gt_dec	40	17	search with cache (only 1: apply le_dec).	3.69909906387	779
Coq.Arith.Compare_dec.ge_dec	40	3	search with cache (only 1: apply le_dec).	0.49875497818	49
Coq.Arith.Compare_dec.dec_le	40
Coq.Arith.Compare_dec.dec_lt	40	0	search with cache (only 1: apply Nat.le_decidable).	0.0425050258636	1
Coq.Arith.Compare_dec.dec_gt	40	22	search with cache (only 1: apply Nat.lt_decidable).	1.5805888176	497
Coq.Arith.Compare_dec.dec_ge	40	4	search with cache (only 1: apply Nat.le_decidable).	0.135811090469	21
Coq.Arith.Compare_dec.not_eq	40	0	search with cache (only 1: apply Nat.lt_gt_cases).	0.0525710582733	1
Coq.Arith.Compare_dec.not_le	40	1	search with cache (only 1: apply Nat.lt_nge).	0.0385520458221	2
Coq.Arith.Compare_dec.not_gt	40	0	search with cache (only 1: apply Nat.le_ngt).	0.0386719703674	1
Coq.Arith.Compare_dec.not_ge	40	7	search with cache (only 1: apply Nat.lt_nge).	0.149696111679	17
Coq.Arith.Compare_dec.not_lt	40	5	search with cache (only 1: apply Nat.le_ngt).	0.0553479194641	13
Coq.Arith.Compare_dec.nat_compare_lt	40
Coq.Arith.Compare_dec.nat_compare_gt	40
Coq.Arith.Compare_dec.nat_compare_le	40
Coq.Arith.Compare_dec.nat_compare_ge	40
Coq.Arith.Compare_dec.nat_compare_eq	40
Coq.Arith.Compare_dec.nat_compare_Lt_lt	40	0	search with cache (only 1: apply Nat.compare_lt_iff).	0.0549468994141	1
Coq.Arith.Compare_dec.nat_compare_Gt_gt	40	0	search with cache (only 1: apply Nat.compare_gt_iff).	0.0317571163177	1
Coq.Arith.Compare_dec.nat_compare_equiv	40
Coq.Arith.Compare_dec.leb_iff_conv	40
Coq.Arith.Compare_dec.leb_correct	40
Coq.Arith.Compare_dec.leb_complete	40	0	search with cache (only 1: apply Nat.leb_le).	0.0398368835449	1
Coq.Arith.Compare_dec.leb_correct_conv	40	0.0	search with cache (only 1: rewrite Nat.leb_nle; only 1: apply Nat.lt_nge).	0.0826361179352	2
Coq.Arith.Compare_dec.leb_complete_conv	40	0	search with cache (only 1: apply leb_iff_conv).	0.039088010788	1
Coq.Arith.Compare_dec.leb_compare	40
Coq.Arith.Euclid.eucl_dev	40
Coq.Arith.Euclid.quotient	40
Coq.Arith.Euclid.modulo	40
Coq.Arith.Factorial.lt_O_fact	40
Coq.Arith.Factorial.fact_neq_0	40
Coq.Arith.Factorial.fact_le	40
Coq.Arith.Gt.gt_n_S	40	0	search with cache (only 1: apply Nat.succ_lt_mono).	0.0443871021271	1
Coq.Arith.Gt.gt_S_n	40	0	search with cache (only 1: apply Nat.succ_lt_mono).	0.0429971218109	1
Coq.Arith.Gt.gt_S	40	1.1.9	search with cache (only 1: intros H; only 1: apply Nat.lt_eq_cases; only 1: auto with arith).	0.903389930725	97
Coq.Arith.Gt.gt_pred	40	3	search with cache (only 1: apply Nat.lt_succ_lt_pred).	0.663791179657	42
Coq.Arith.Gt.le_not_gt	40	6	search with cache (only 1: apply Nat.le_ngt).	0.277638912201	22
Coq.Arith.Gt.gt_not_le	40	6	search with cache (only 1: apply Nat.lt_nge).	0.115367889404	16
Coq.Arith.Gt.le_S_gt	40	0.0.0.3	search with cache (only 1: intro; only 1: apply Nat.succ_lt_mono; only 1: apply Nat.lt_succ_r; only 1: auto with arith).	0.194375038147	7
Coq.Arith.Gt.gt_S_le	40	7	search with cache (only 1: apply Nat.lt_succ_r).	0.16432595253	15
Coq.Arith.Gt.gt_le_S	40	0	search with cache (only 1: apply Nat.le_succ_l).	0.0532169342041	1
Coq.Arith.Gt.le_gt_S	40	0	search with cache (only 1: apply Nat.succ_le_mono).	0.0657548904419	1
Coq.Arith.Gt.le_gt_trans	40
Coq.Arith.Gt.gt_le_trans	40
Coq.Arith.Gt.gt_trans	40
Coq.Arith.Gt.gt_trans_S	40	3.4.1	search with cache (only 1: intros; only 1: apply Nat.succ_lt_mono; only 1: now apply Nat.le_lt_trans with m).	0.404565095901	34
Coq.Arith.Gt.gt_0_eq	40	29.2	search with cache (only 1: apply Nat.lt_eq_cases; only 1: auto with arith).	2.58524894714	1404
Coq.Arith.Gt.plus_gt_reg_l	40	9	search with cache (only 1: apply Nat.add_lt_mono_l).	0.18198299408	23
Coq.Arith.Gt.plus_gt_compat_l	40	0	search with cache (only 1: apply Nat.add_lt_mono_l).	0.067174911499	1
Coq.Arith.Mult.mult_assoc_reverse	40
Coq.Arith.Mult.mult_is_O	40
Coq.Arith.Mult.mult_is_one	40
Coq.Arith.Mult.mult_O_le	40	4.1.21.13.50	search with cache (only 1: destruct m as [| m]; only 1: now left; only 1: right; only 1: simpl; only 1: apply Nat.le_add_r).	27.92922616	27606
Coq.Arith.Mult.mult_le_compat_l	40
Coq.Arith.Mult.mult_le_compat_r	40
Coq.Arith.Mult.mult_le_compat	40
Coq.Arith.Mult.mult_S_lt_compat_l	40
Coq.Arith.Mult.mult_lt_compat_l	40
Coq.Arith.Mult.mult_lt_compat_r	40
Coq.Arith.Mult.mult_S_le_reg_l	40
Coq.Arith.Mult.odd_even_lem	40
Coq.Arith.Mult.mult_acc_aux	40
Coq.Arith.Mult.mult_tail_mult	40
Coq.Arith.Wf_nat.well_founded_ltof	40
Coq.Arith.Wf_nat.well_founded_gtof	40
Coq.Arith.Wf_nat.induction_ltof1	40
Coq.Arith.Wf_nat.induction_gtof1	40
Coq.Arith.Wf_nat.induction_ltof2	40	15	search with cache (only 1: exact induction_ltof1).	15.1010539532	2915
Coq.Arith.Wf_nat.induction_gtof2	40	0	search with cache (only 1: exact induction_ltof1).	0.0359580516815	1
Coq.Arith.Wf_nat.well_founded_lt_compat	40
Coq.Arith.Wf_nat.lt_wf	40
Coq.Arith.Wf_nat.lt_wf_rec1	40
Coq.Arith.Wf_nat.lt_wf_rec	40	2	search with cache (only 1: exact (fun (p : nat) P F => induction_ltof1 nat (fun m : nat => m) P F p)).	0.0889580249786	17
Coq.Arith.Wf_nat.lt_wf_ind	40	1	search with cache (only 1: exact (fun (p : nat) P F => induction_ltof2 nat (fun m : nat => m) P F p)).	0.0672800540924	14
Coq.Arith.Wf_nat.gt_wf_rec	40	2	search with cache (only 1: exact (fun (p : nat) P F => induction_ltof2 nat (fun m : nat => m) P F p)).	0.045814037323	19
Coq.Arith.Wf_nat.lt_wf_double_rec	40
Coq.Arith.Wf_nat.lt_wf_double_ind	40	0.1.1.1.1.3	search with cache (only 1: intros P Hrec p; only 1: pattern p; only 1: apply lt_wf_rec; only 1: intros n H q; only 1: apply lt_wf_rec; only 1: auto with arith).	1.35787606239	330
Coq.Arith.Wf_nat.acc_lt_rel	40
Coq.Arith.Wf_nat.well_founded_inv_lt_rel_compat	40
Coq.Arith.Wf_nat.well_founded_inv_rel_inv_lt_rel	40
Coq.Arith.Wf_nat.dec_inh_nat_subset_has_unique_least_element	40
Coq.Arith.Between.bet_eq	40	7.23.9.15	search with cache (only 1: intros a n; only 1: intros EQ; only 1: rewrite EQ; only 1: now left).	20.9803960323	22119
Coq.Arith.Between.between_le	40	0.0.27.4.5	search with cache (only 1: intro n; only 1: intros m Le; only 1: elim Le; only 1: auto with arith; only 1: auto with arith).	5.55054211617	3014
Coq.Arith.Between.between_Sk_l	40
Coq.Arith.Between.between_restr	40	0.0.0.0	search with cache (only 1: induction 1 as [| * [| ]]; only 1: auto with arith; only 1: auto with arith; only 1: auto with arith).	0.118382930756	4
Coq.Arith.Between.exists_le_S	40	12.1.0.1	search with cache (only 1: induction 1 as [| * [| ]]; only 1: auto with arith; only 1: Morphisms.solve_proper; only 1: auto with arith).	1.75375509262	490
Coq.Arith.Between.exists_S_le	40
Coq.Arith.Between.in_int_intro	40	1.1.7.31	search with cache (only 1: intros a b c0; only 1: repeat split; only 1: PeanoNat.Nat.order; only 1: PeanoNat.Nat.order).	7.39037680626	4043
Coq.Arith.Between.in_int_lt	40	10.8.75	search with cache (only 1: intros f Hf H0; only 1: intros (a, H); only 1: PeanoNat.Nat.order').	32.6913430691	63290
Coq.Arith.Between.in_int_p_Sq	40
Coq.Arith.Between.in_int_S	40	0.0	search with cache (only 1: intros p q r []; only 1: auto with arith).	0.0697810649872	2
Coq.Arith.Between.in_int_Sp_q	40	0.0	search with cache (only 1: intros p q r []; only 1: auto with arith).	0.0688219070435	2
Coq.Arith.Between.between_in_int	40
Coq.Arith.Between.in_int_between	40	2.2.1.0	search with cache (only 1: induction 1; only 1: intros; only 1: auto with arith; only 1: auto with arith).	0.141716957092	11
Coq.Arith.Between.exists_in_int	40
Coq.Arith.Between.in_int_exists	40
Coq.Arith.Between.between_or_exists	40
Coq.Arith.Between.between_not_exists	40
Coq.Arith.Between.nth_le	40
Coq.Arith.Between.event_O	40
Coq.Arith.Minus.minus_n_O	40	106	search with cache (only 1: now Nat.nzsimpl).	16.8133580685	37401
Coq.Arith.Minus.minus_Sn_m	40
Coq.Arith.Minus.pred_of_minus	40	7	search with cache (only 1: now Nat.nzsimpl').	0.129788160324	20
Coq.Arith.Minus.minus_diag_reverse	40
Coq.Arith.Minus.minus_plus_simpl_l_reverse	40
Coq.Arith.Minus.plus_minus	40
Coq.Arith.Minus.minus_plus	40	3	search with cache (only 1: now apply Nat.add_sub_eq_l).	0.0673551559448	4
Coq.Arith.Minus.le_plus_minus_r	40
Coq.Arith.Minus.le_plus_minus	40	6.1.18.0	search with cache (only 1: rewrite Nat.add_comm; only 1: symmetry; only 1: apply Nat.sub_add; only 1: trivial).	11.7491481304	7365
Coq.Arith.Minus.lt_O_minus_lt	40
Coq.Arith.Minus.not_le_minus_0	40
Coq.Arith.Peano_dec.O_or_S	40
Coq.Arith.Peano_dec.dec_eq_nat	40
Coq.Arith.Peano_dec.le_unique	40
Coq.Arith.Plus.plus_assoc_reverse	40	0.5.4.1.0.0.3.1	search with cache (only 1: revert m; only 1: induction n as [| n IH]; only 1: trivial; only 1: simpl; only 1: intros; only 1: f_equal; only 1: revert m; only 1: trivial).	12.1505889893	3392
Coq.Arith.Plus.plus_reg_l	40
Coq.Arith.Plus.plus_le_reg_l	40
Coq.Arith.Plus.plus_lt_reg_l	40
Coq.Arith.Plus.plus_le_compat_l	40	0	search with cache (only 1: apply Nat.add_le_mono_l).	0.0282459259033	1
Coq.Arith.Plus.plus_le_compat_r	40
Coq.Arith.Plus.plus_lt_compat_l	40	0	search with cache (only 1: apply Nat.add_lt_mono_l).	0.040050983429	1
Coq.Arith.Plus.plus_lt_compat_r	40
Coq.Arith.Plus.plus_le_compat	40
Coq.Arith.Plus.plus_le_lt_compat	40
Coq.Arith.Plus.plus_lt_le_compat	40	0	search with cache (only 1: apply Nat.add_le_mono).	0.0426769256592	1
Coq.Arith.Plus.plus_lt_compat	40	6.4.0.21.19	search with cache (only 1: revert m; only 1: intros a b c0; only 1: apply Nat.add_le_lt_mono; only 1: Nat.order; only 1: trivial).	3.95501303673	3193
Coq.Arith.Plus.le_plus_l	40
Coq.Arith.Plus.le_plus_r	40
Coq.Arith.Plus.le_plus_trans	40
Coq.Arith.Plus.lt_plus_trans	40
Coq.Arith.Plus.plus_is_O	40	20.2.2.0.9.3.7	search with cache (only 1: revert m; only 1: Nat.induct n; only 1: simpl; only 1: intros a b; only 1: now repeat split; only 1: intros a b c0; only 1: now repeat split).	15.701351881	15274
Coq.Arith.Plus.plus_is_one	40
Coq.Arith.Plus.plus_tail_plus	40
Coq.Arith.Plus.succ_plus_discr	40
Coq.Arith.Div2.ind_0_1_SS	40
Coq.Arith.Div2.lt_div2	40
Coq.Arith.Div2.even_div2	40
Coq.Arith.Div2.odd_div2	40
Coq.Arith.Div2.div2_even	40
Coq.Arith.Div2.div2_odd	40
Coq.Arith.Div2.even_odd_div2	40
Coq.Arith.Div2.double_S	40
Coq.Arith.Div2.double_plus	40
Coq.Arith.Div2.even_odd_double	40
Coq.Arith.Div2.even_2n	40	1.11	search with cache (only 1: fix even_odd_double 1; only 1: auto with arith).	0.334266901016	86
Coq.Arith.Div2.odd_S2n	40	0.0.0	search with cache (only 1: intros n H; only 1: exists (Nat.div2 n); only 1: auto with arith).	0.0534770488739	3
Coq.Arith.Div2.div2_double	40	1	search with cache (only 1: apply Nat.div2_double).	0.0523128509521	2
Coq.Arith.Div2.div2_double_plus_one	40	2.0	search with cache (only 1: rewrite Nat.div2_succ_double; only 1: trivial).	0.0618550777435	4
Coq.Arith.Lt.lt_le_S	40	3	search with cache (only 1: Nat.order').	0.0558729171753	4
Coq.Arith.Lt.lt_n_Sm_le	40
Coq.Arith.Lt.le_lt_n_Sm	40	0	search with cache (only 1: apply Nat.lt_succ_r).	0.0302789211273	1
Coq.Arith.Lt.le_not_lt	40	0	search with cache (only 1: Nat.order).	0.0577759742737	1
Coq.Arith.Lt.lt_not_le	40	2.0	search with cache (only 1: intro H'; only 1: Nat.order).	0.0680179595947	4
Coq.Arith.Lt.neq_0_lt	40
Coq.Arith.Lt.lt_0_neq	40	2.0	search with cache (only 1: intros; only 1: Nat.order).	0.0519199371338	4
Coq.Arith.Lt.lt_n_S	40	0	search with cache (only 1: apply Nat.lt_succ_r).	0.0513119697571	1
Coq.Arith.Lt.lt_S_n	40	0	search with cache (only 1: apply Nat.succ_lt_mono).	0.0244410037994	1
Coq.Arith.Lt.S_pred	40
Coq.Arith.Lt.S_pred_pos	40
Coq.Arith.Lt.lt_pred	40
Coq.Arith.Lt.lt_pred_n_n	40
Coq.Arith.Lt.le_lt_or_eq	40
Coq.Arith.Lt.nat_total_order	40
Coq.Arith.EqNat.eq_nat_refl	40	5.11.139	search with cache (only 1: induction n as [| n IH]; only 1: Morphisms.solve_proper; only 1: trivial).	2.62175107002	12684
Coq.Arith.EqNat.eq_nat_is_eq	40
Coq.Arith.EqNat.eq_eq_nat	40	1.1.0.1.0.1	search with cache (only 1: intros <-; only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: apply eq_nat_refl).	0.668073177338	81
Coq.Arith.EqNat.eq_nat_eq	40	6.0	search with cache (only 1: revert m; only 1: apply eq_nat_is_eq).	0.788161993027	89
Coq.Arith.EqNat.eq_nat_elim	40
Coq.Arith.EqNat.eq_nat_decide	40	0.0.0.0.0.1.0.1.0.0	search with cache (only 1: induction n; only 1: destruct m; only 1: simpl; only 1: auto; only 1: contradiction || auto; only 1: destruct m; only 1: simpl; only 1: contradiction || auto; only 1: simpl; only 1: contradiction || auto).	1.45520401001	372
Coq.Arith.EqNat.beq_nat_refl	40	4.0.10.146	search with cache (only 1: Nat.induct n; only 1: trivial; only 1: intros; only 1: now rewrite H).	2.97266602516	14871
Coq.Arith.EqNat.beq_nat_true	40
Coq.Arith.EqNat.beq_nat_false	40
Coq.Arith.EqNat.beq_nat_eq	40	6.0.0	search with cache (only 1: intros; only 1: apply Nat.eqb_eq; only 1: now rewrite H).	0.162496089935	19
Coq.Arith.Even.even_equiv	40
Coq.Arith.Even.odd_equiv	40	20.6	search with cache (only 1: fix even_equiv 1; only 1: trivial).	1.87673616409	1366
Coq.Arith.Even.even_or_odd	40
Coq.Arith.Even.even_odd_dec	40	1.1.1.0.0.0.0	search with cache (only 1: induction n; only 1: auto with arith; only 1: elim IHn; only 1: elim IHn; only 1: auto with arith; only 1: auto with arith; only 1: auto with arith).	0.542673826218	45
Coq.Arith.Even.not_even_and_odd	40	2.5.5.3.7.0	search with cache (only 1: induction n; only 1: inversion_clear 1; only 1: inversion_clear 1; only 1: inversion_clear 1; only 1: inversion_clear 1; only 1: auto with arith).	15.6228280067	4290
Coq.Arith.Even.even_plus_split	40
Coq.Arith.Even.odd_plus_split	40	0	search with cache (only 1: parity_binop).	0.203497886658	1
Coq.Arith.Even.even_even_plus	40	0	search with cache (only 1: parity_binop).	0.133328914642	1
Coq.Arith.Even.odd_plus_l	40	0	search with cache (only 1: parity_binop).	0.20224404335	1
Coq.Arith.Even.odd_plus_r	40	0	search with cache (only 1: parity_binop).	0.145818948746	1
Coq.Arith.Even.odd_even_plus	40	0	search with cache (only 1: parity_binop).	0.118898153305	1
Coq.Arith.Even.even_plus_aux	40	0	search with cache (only 1: parity_binop).	0.283965110779	1
Coq.Arith.Even.even_plus_even_inv_r	40	0	search with cache (only 1: parity_binop).	0.133059024811	1
Coq.Arith.Even.even_plus_even_inv_l	40	0	search with cache (only 1: parity_binop).	0.131540060043	1
Coq.Arith.Even.even_plus_odd_inv_r	40	0	search with cache (only 1: parity_binop).	0.36474609375	1
Coq.Arith.Even.even_plus_odd_inv_l	40	0	search with cache (only 1: parity_binop).	0.123342990875	1
Coq.Arith.Even.odd_plus_even_inv_l	40	0	search with cache (only 1: parity_binop).	0.0975141525269	1
Coq.Arith.Even.odd_plus_even_inv_r	40	0	search with cache (only 1: parity_binop).	0.104957103729	1
Coq.Arith.Even.odd_plus_odd_inv_l	40	0	search with cache (only 1: parity_binop).	0.0658249855042	1
Coq.Arith.Even.odd_plus_odd_inv_r	40	0	search with cache (only 1: parity_binop).	0.095841884613	1
Coq.Arith.Even.even_mult_aux	40	0	search with cache (only 1: parity_binop).	0.317250967026	1
Coq.Arith.Even.even_mult_l	40	0	search with cache (only 1: parity_binop).	0.13591504097	1
Coq.Arith.Even.even_mult_r	40	0	search with cache (only 1: parity_binop).	0.137289047241	1
Coq.Arith.Even.even_mult_inv_r	40	0	search with cache (only 1: parity_binop).	0.135457992554	1
Coq.Arith.Even.even_mult_inv_l	40	0	search with cache (only 1: parity_binop).	0.136690855026	1
Coq.Arith.Even.odd_mult	40	0	search with cache (only 1: parity_binop).	0.0480399131775	1
Coq.Arith.Even.odd_mult_inv_l	40	0	search with cache (only 1: parity_binop).	0.0344920158386	1
Coq.Arith.Even.odd_mult_inv_r	40	0	search with cache (only 1: parity_binop).	0.0445871353149	1
Coq.Arith.Le.le_n_0_eq	40
Coq.Arith.Le.le_elim_rel	40
Coq.Arith.PeanoNat.Nat.bi_induction	40
Coq.Arith.PeanoNat.Nat.recursion_wd	40
Coq.Arith.PeanoNat.Nat.recursion_0	40	2.0.0	search with cache (only 1: simpl; only 1: intros; only 1: auto).	0.0513181686401	5
Coq.Arith.PeanoNat.Nat.recursion_succ	40
Coq.Arith.PeanoNat.Nat.pred_succ	40	1	search with cache (only 1: auto).	0.0379090309143	2
Coq.Arith.PeanoNat.Nat.pred_0	40	0	search with cache (only 1: reflexivity).	0.0344140529633	1
Coq.Arith.PeanoNat.Nat.one_succ	40	6	search with cache (only 1: reflexivity).	0.0612950325012	17
Coq.Arith.PeanoNat.Nat.two_succ	40	0	search with cache (only 1: reflexivity).	0.0383632183075	1
Coq.Arith.PeanoNat.Nat.add_0_l	40	0	search with cache (only 1: reflexivity).	0.0339319705963	1
Coq.Arith.PeanoNat.Nat.add_succ_l	40	0	search with cache (only 1: reflexivity).	0.0383939743042	1
Coq.Arith.PeanoNat.Nat.sub_0_r	40	0.0.4	search with cache (only 1: induction n; only 1: reflexivity; only 1: reflexivity).	0.0607979297638	7
Coq.Arith.PeanoNat.Nat.sub_succ_r	40
Coq.Arith.PeanoNat.Nat.mul_0_l	40	0	search with cache (only 1: reflexivity).	0.0320999622345	1
Coq.Arith.PeanoNat.Nat.mul_succ_l	40
Coq.Arith.PeanoNat.Nat.lt_succ_r	40
Coq.Arith.PeanoNat.Nat.eqb_eq	40
Coq.Arith.PeanoNat.Nat.leb_le	40
Coq.Arith.PeanoNat.Nat.ltb_lt	40
Coq.Arith.PeanoNat.Nat.eq_dec	40
Coq.Arith.PeanoNat.Nat.compare_eq_iff	40
Coq.Arith.PeanoNat.Nat.compare_lt_iff	40
Coq.Arith.PeanoNat.Nat.compare_le_iff	40
Coq.Arith.PeanoNat.Nat.compare_antisym	40	2.1.0.2.0.1.0.2.0.1.1	search with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: easy; only 1: simpl; only 1: easy; only 1: destruct m; only 1: easy; only 1: simpl; only 1: revert m; only 1: easy).	8.68820595741	4117
Coq.Arith.PeanoNat.Nat.compare_succ	40	0.1	search with cache (only 1: simpl; only 1: trivial).	0.0341889858246	3
Coq.Arith.PeanoNat.Nat.max_l	40
Coq.Arith.PeanoNat.Nat.max_r	40
Coq.Arith.PeanoNat.Nat.min_l	40
Coq.Arith.PeanoNat.Nat.min_r	40
Coq.Arith.PeanoNat.Nat.pow_neg_r	40	36.20	search with cache (only 1: intros; only 1: false_hyp ltac:(H) nle_succ_0).	2.76120591164	4528
Coq.Arith.PeanoNat.Nat.pow_0_r	40	12	search with cache (only 1: now split).	0.103935956955	46
Coq.Arith.PeanoNat.Nat.pow_succ_r	40	1.0.0	search with cache (only 1: inversion 1; only 1: reflexivity; only 1: reflexivity).	0.060259103775	4
Coq.Arith.PeanoNat.Nat.square_spec	40	15.2.6	search with cache (only 1: induct n; only 1: apply mul_0_l; only 1: reflexivity).	1.79555606842	1071
Coq.Arith.PeanoNat.Nat.Private_Parity.Even_1	40
Coq.Arith.PeanoNat.Nat.Private_Parity.Even_2	40
Coq.Arith.PeanoNat.Nat.Private_Parity.Odd_0	40	1.0.0.22	search with cache (only 1: intros ([| ], H); only 1: discriminate; only 1: rewrite <- plus_n_Sm in H; only 1: now inversion H).	1.03638195992	948
Coq.Arith.PeanoNat.Nat.Private_Parity.Odd_2	40
Coq.Arith.PeanoNat.Nat.even_spec	40
Coq.Arith.PeanoNat.Nat.odd_spec	40	1.0.3	search with cache (only 1: fix even_spec 1; only 1: intro H; only 1: trivial).	0.11372590065	16
Coq.Arith.PeanoNat.Nat.divmod_spec	40
Coq.Arith.PeanoNat.Nat.div_mod	40
Coq.Arith.PeanoNat.Nat.mod_bound_pos	40
Coq.Arith.PeanoNat.Nat.sqrt_iter_spec	40
Coq.Arith.PeanoNat.Nat.sqrt_specif	40
Coq.Arith.PeanoNat.Nat.sqrt_neg	40	0	search with cache (only 1: inversion 1).	0.0182120800018	1
Coq.Arith.PeanoNat.Nat.log2_iter_spec	40
Coq.Arith.PeanoNat.Nat.log2_spec	40
Coq.Arith.PeanoNat.Nat.log2_nonpos	40
Coq.Arith.PeanoNat.Nat.gcd_divide	40
Coq.Arith.PeanoNat.Nat.gcd_divide_l	40	2.0.1.0.0.0.0.3	search with cache (only 1: intros [| a] b; only 1: simpl; only 1: now exists 0; only 1: simpl; only 1: fold (b mod S a); only 1: destruct (gcd_divide (b mod S a) (S a)) as (H, H'); only 1: set (a' := S a) in *; only 1: auto).	2.4255361557	644
Coq.Arith.PeanoNat.Nat.gcd_divide_r	40	0.2	search with cache (only 1: intros; only 1: apply gcd_divide).	0.115495920181	27
Coq.Arith.PeanoNat.Nat.gcd_greatest	40	6.2.5	search with cache (only 1: fix gcd_divide 1; only 1: intros; only 1: auto).	3.03621983528	804
Coq.Arith.PeanoNat.Nat.gcd_nonneg	40	26	search with cache (only 1: apply le_0_l).	1.63033008575	703
Coq.Arith.PeanoNat.Nat.div2_double	40
Coq.Arith.PeanoNat.Nat.div2_succ_double	40	0.0.1.1.0.3	search with cache (only 1: induction n; only 1: trivial; only 1: simpl; only 1: rewrite add_succ_r; only 1: simpl; only 1: now f_equal).	0.37401008606	65
Coq.Arith.PeanoNat.Nat.le_div2	40
Coq.Arith.PeanoNat.Nat.lt_div2	40	1.3.6.6.0.1	search with cache (only 1: destruct n; only 1: simpl; only 1: inversion 1; only 1: revert n; only 1: fix le_div2 1; only 1: trivial).	10.4896080494	3442
Coq.Arith.PeanoNat.Nat.div2_decr	40	0.6	search with cache (only 1: fix le_div2 1; only 1: trivial).	0.161164999008	17
Coq.Arith.PeanoNat.Nat.double_twice	40	0.18.9	search with cache (only 1: simpl; only 1: intuition; only 1: now rewrite !add_0_r).	2.26654410362	1190
Coq.Arith.PeanoNat.Nat.testbit_0_l	40	5.10	search with cache (only 1: fix even_spec 1; only 1: trivial).	0.452305078506	250
Coq.Arith.PeanoNat.Nat.testbit_odd_0	40
Coq.Arith.PeanoNat.Nat.testbit_even_0	40
Coq.Arith.PeanoNat.Nat.testbit_odd_succ'	40
Coq.Arith.PeanoNat.Nat.testbit_even_succ'	40
Coq.Arith.PeanoNat.Nat.shiftr_specif	40	3.7.1.0	search with cache (only 1: unfold testbit; only 1: unfold odd; only 1: fix odd_spec 1; only 1: trivial).	3.84841990471	1060
Coq.Arith.PeanoNat.Nat.shiftl_specif_high	40	3.7.6	search with cache (only 1: unfold testbit, odd; only 1: fix odd_spec 1; only 1: trivial).	4.26043796539	1724
Coq.Arith.PeanoNat.Nat.shiftl_spec_low	40
Coq.Arith.PeanoNat.Nat.div2_bitwise	40	1.16.21	search with cache (only 1: intros Hq Hr; only 1: fix le_div2 1; only 1: now f_equal).	6.56530499458	4467
Coq.Arith.PeanoNat.Nat.odd_bitwise	40
Coq.Arith.PeanoNat.Nat.testbit_bitwise_1	40
Coq.Arith.PeanoNat.Nat.testbit_bitwise_2	40
Coq.Arith.PeanoNat.Nat.land_spec	40
Coq.Arith.PeanoNat.Nat.ldiff_spec	40	1.0.1	search with cache (only 1: apply testbit_bitwise_1; only 1: trivial; only 1: trivial).	0.0706050395966	5
Coq.Arith.PeanoNat.Nat.lor_spec	40
Coq.Arith.PeanoNat.Nat.lxor_spec	40
Coq.Arith.PeanoNat.Nat.div2_spec	40	7	search with cache (only 1: trivial).	0.170536994934	8
Coq.Arith.PeanoNat.Nat.testbit_neg_r	40	6	search with cache (only 1: inversion H).	0.180104017258	7
Coq.Arith.PeanoNat.Nat.tail_add_spec	40
Coq.Arith.PeanoNat.Nat.tail_addmul_spec	40
Coq.Arith.PeanoNat.Nat.tail_mul_spec	40
Coq.Arith.PeanoNat.test	40	7.1	search with cache (only 1: intro n; only 1: Nat.order').	0.0338430404663	10
Coq.Bool.Zerob.zerob_true_intro	40	27.26	search with cache (only 1: intros; only 1: now subst).	1.18057990074	1904
Coq.Bool.Zerob.zerob_true_elim	40	0.0.0	search with cache (only 1: destruct n; only 1: trivial with bool; only 1: inversion 1).	0.0912520885468	3
Coq.Bool.Zerob.zerob_false_intro	40	2.30.0	search with cache (only 1: destruct n; only 1: now subst; only 1: trivial with bool).	1.40851783752	1280
Coq.Bool.Zerob.zerob_false_elim	40	1.1.3.0	search with cache (only 1: destruct n; only 1: inversion 1; only 1: inversion 1; only 1: inversion 1).	0.116286039352	27
Coq.Bool.BoolEq.beq_eq_true	40	7.1.1	search with cache (only 1: intros; only 1: destruct H; only 1: destr_bool).	0.408438920975	167
Coq.Bool.BoolEq.beq_eq_not_false	40
Coq.Bool.BoolEq.beq_false_not_eq	40
Coq.Bool.BoolEq.exists_beq_eq	40
Coq.Bool.BoolEq.not_eq_false_beq	40
Coq.Bool.BoolEq.eq_dec	40
Coq.Bool.IfProp.Iftrue_inv	40	4.0.3	search with cache (only 1: destruct 1; only 1: tauto; only 1: discriminate).	0.205597162247	45
Coq.Bool.IfProp.Iffalse_inv	40	2.2.1.0.0	search with cache (only 1: destruct 1; only 1: intros; only 1: case diff_true_false; only 1: auto with bool; only 1: auto with bool).	0.136458873749	13
Coq.Bool.IfProp.IfProp_true	40
Coq.Bool.IfProp.IfProp_false	40	1.0.0.0.0.0.0.1	search with cache (only 1: intros; only 1: inversion H; only 1: inversion H; only 1: inversion H; only 1: inversion H; only 1: inversion H; only 1: inversion H; only 1: assumption).	0.125940799713	20
Coq.Bool.IfProp.IfProp_or	40	1.1.0.8	search with cache (only 1: intro z; only 1: destruct 1; only 1: auto; only 1: auto).	1.65677285194	645
Coq.Bool.IfProp.IfProp_sum	40
Coq.Bool.Bool.bool_dec	40
Coq.Bool.Bool.diff_true_false	40	19	search with cache (only 1: discriminate).	0.420432090759	441
Coq.Bool.Bool.diff_false_true	40	0	search with cache (only 1: discriminate).	0.013769865036	1
Coq.Bool.Bool.eq_true_false_abs	40	3.3.18.0	search with cache (only 1: intro H; only 1: destruct H; only 1: discriminate; only 1: discriminate).	1.37058091164	1834
Coq.Bool.Bool.not_true_is_false	40	2.23.4	search with cache (only 1: destr_bool; only 1: reflexivity || destruct H; only 1: repeat split).	2.44400691986	2789
Coq.Bool.Bool.not_false_is_true	40	1.0	search with cache (only 1: destr_bool; only 1: intuition).	0.0575828552246	3
Coq.Bool.Bool.not_true_iff_false	40	1.1.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.064756155014	5
Coq.Bool.Bool.not_false_iff_true	40	0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0665609836578	3
Coq.Bool.Bool.leb_implb	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0911910533905	5
Coq.Bool.Bool.eqb_subst	40	7.0.0	search with cache (only 1: intro H; only 1: intro z; only 1: destr_bool).	0.0343577861786	11
Coq.Bool.Bool.eqb_reflx	40	0	search with cache (only 1: destr_bool).	0.0346488952637	1
Coq.Bool.Bool.eqb_prop	40	0	search with cache (only 1: destr_bool).	0.0371830463409	1
Coq.Bool.Bool.eqb_true_iff	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0874140262604	5
Coq.Bool.Bool.eqb_false_iff	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0455529689789	5
Coq.Bool.Bool.negb_orb	40	0.0.0.0.0.1.2	search with cache (only 1: destruct b1; only 1: destruct b2; only 1: repeat split; only 1: repeat split; only 1: destruct b2; only 1: repeat split; only 1: repeat split).	0.162800788879	30
Coq.Bool.Bool.negb_andb	40	0	search with cache (only 1: destr_bool).	0.0159859657288	1
Coq.Bool.Bool.negb_involutive	40	0	search with cache (only 1: destr_bool).	0.0369958877563	1
Coq.Bool.Bool.negb_involutive_reverse	40	0	search with cache (only 1: destr_bool).	0.0354878902435	1
Coq.Bool.Bool.negb_sym	40	0	search with cache (only 1: destr_bool).	0.0366859436035	1
Coq.Bool.Bool.no_fixpoint_negb	40	0	search with cache (only 1: destr_bool).	0.0262870788574	1
Coq.Bool.Bool.eqb_negb1	40	0	search with cache (only 1: destr_bool).	0.0366299152374	1
Coq.Bool.Bool.eqb_negb2	40	0	search with cache (only 1: destr_bool).	0.0361449718475	1
Coq.Bool.Bool.if_negb	40	0	search with cache (only 1: destr_bool).	0.015743970871	1
Coq.Bool.Bool.negb_true_iff	40	0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0677590370178	3
Coq.Bool.Bool.negb_false_iff	40	0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0467808246613	3
Coq.Bool.Bool.orb_true_iff	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0977070331573	5
Coq.Bool.Bool.orb_false_iff	40	0.1.0.1.0.0.2.4	search with cache (only 1: split; only 1: split; only 1: destr_bool; only 1: destr_bool; only 1: intros; only 1: destruct H; only 1: subst; only 1: destr_bool).	4.21894311905	1729
Coq.Bool.Bool.orb_true_elim	40	4.4.5.0	search with cache (only 1: destr_bool; only 1: auto; only 1: auto; only 1: auto).	1.30584001541	765
Coq.Bool.Bool.orb_prop	40	0.0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition).	0.0601711273193	4
Coq.Bool.Bool.orb_true_intro	40	0.1.0	search with cache (only 1: intros; only 1: destr_bool; only 1: intuition).	0.0803160667419	4
Coq.Bool.Bool.orb_false_intro	40	0	search with cache (only 1: destr_bool).	0.0305721759796	1
Coq.Bool.Bool.orb_false_elim	40	2.0	search with cache (only 1: destr_bool; only 1: repeat split).	0.0490980148315	4
Coq.Bool.Bool.orb_diag	40	6.0	search with cache (only 1: intros; only 1: destr_bool).	0.0349349975586	8
Coq.Bool.Bool.orb_true_r	40	4.0.1.1	search with cache (only 1: intros; only 1: apply orb_true_iff; only 1: apply orb_true_iff; only 1: destr_bool).	0.203711986542	15
Coq.Bool.Bool.orb_true_l	40	0	search with cache (only 1: destr_bool).	0.0416309833527	1
Coq.Bool.Bool.orb_false_r	40	7.1	search with cache (only 1: intros; only 1: destr_bool).	0.0619640350342	10
Coq.Bool.Bool.orb_false_l	40	0	search with cache (only 1: destr_bool).	0.0415160655975	1
Coq.Bool.Bool.orb_negb_r	40	0	search with cache (only 1: destr_bool).	0.0401802062988	1
Coq.Bool.Bool.orb_comm	40	6.0	search with cache (only 1: intros; only 1: destr_bool).	0.0515360832214	8
Coq.Bool.Bool.orb_assoc	40	6.0	search with cache (only 1: intros; only 1: destr_bool).	0.0663890838623	8
Coq.Bool.Bool.andb_true_iff	40	0.0.0.0.6	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	1.35318398476	227
Coq.Bool.Bool.andb_false_iff	40	0.0.0.0.2	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.437736034393	46
Coq.Bool.Bool.andb_true_eq	40	2.2	search with cache (only 1: destr_bool; only 1: repeat split).	0.602612018585	92
Coq.Bool.Bool.andb_false_intro1	40	1	search with cache (only 1: destr_bool).	0.183043956757	13
Coq.Bool.Bool.andb_false_intro2	40	0.0.0	search with cache (only 1: intros; only 1: apply andb_false_iff; only 1: auto).	0.0639281272888	3
Coq.Bool.Bool.andb_false_r	40	1.4.1	search with cache (only 1: intros; only 1: apply andb_false_iff; only 1: intuition).	0.0613207817078	9
Coq.Bool.Bool.andb_false_l	40	1	search with cache (only 1: destr_bool).	0.0352909564972	2
Coq.Bool.Bool.andb_diag	40	7.0	search with cache (only 1: intros; only 1: destr_bool).	0.0565340518951	9
Coq.Bool.Bool.andb_true_r	40	2	search with cache (only 1: destr_bool).	0.0357890129089	3
Coq.Bool.Bool.andb_true_l	40	1	search with cache (only 1: destr_bool).	0.0351800918579	2
Coq.Bool.Bool.andb_false_elim	40	0.0.0.2	search with cache (only 1: destr_bool; only 1: auto; only 1: auto; only 1: auto).	0.116459131241	24
Coq.Bool.Bool.andb_negb_r	40	0	search with cache (only 1: destr_bool).	0.0271899700165	1
Coq.Bool.Bool.andb_comm	40	4	search with cache (only 1: destr_bool).	0.0862679481506	21
Coq.Bool.Bool.andb_assoc	40	4	search with cache (only 1: destr_bool).	0.0994107723236	25
Coq.Bool.Bool.andb_orb_distrib_r	40	0	search with cache (only 1: destr_bool).	0.0220458507538	1
Coq.Bool.Bool.andb_orb_distrib_l	40	0	search with cache (only 1: destr_bool).	0.0231258869171	1
Coq.Bool.Bool.orb_andb_distrib_r	40	0	search with cache (only 1: destr_bool).	0.0224521160126	1
Coq.Bool.Bool.orb_andb_distrib_l	40	0	search with cache (only 1: destr_bool).	0.0232479572296	1
Coq.Bool.Bool.absorption_andb	40	0	search with cache (only 1: destr_bool).	0.0388371944427	1
Coq.Bool.Bool.absorption_orb	40	0	search with cache (only 1: destr_bool).	0.0261480808258	1
Coq.Bool.Bool.xorb_false_r	40	4	search with cache (only 1: destr_bool).	0.0332210063934	22
Coq.Bool.Bool.xorb_false_l	40	0	search with cache (only 1: destr_bool).	0.0181691646576	1
Coq.Bool.Bool.xorb_true_r	40	0	search with cache (only 1: destr_bool).	0.0184731483459	1
Coq.Bool.Bool.xorb_true_l	40	0	search with cache (only 1: reflexivity).	0.0167260169983	1
Coq.Bool.Bool.xorb_nilpotent	40	0	search with cache (only 1: destr_bool).	0.0180971622467	1
Coq.Bool.Bool.xorb_comm	40	1	search with cache (only 1: destr_bool).	0.0184180736542	2
Coq.Bool.Bool.xorb_assoc_reverse	40	1	search with cache (only 1: destr_bool).	0.0336680412292	2
Coq.Bool.Bool.xorb_eq	40	0	search with cache (only 1: destr_bool).	0.0423650741577	1
Coq.Bool.Bool.xorb_move_l_r_1	40	0	search with cache (only 1: destr_bool).	0.0606269836426	1
Coq.Bool.Bool.xorb_move_l_r_2	40	0	search with cache (only 1: destr_bool).	0.0657198429108	1
Coq.Bool.Bool.xorb_move_r_l_1	40	0	search with cache (only 1: destr_bool).	0.0531289577484	1
Coq.Bool.Bool.xorb_move_r_l_2	40	0	search with cache (only 1: destr_bool).	0.0472099781036	1
Coq.Bool.Bool.negb_xorb_l	40	1	search with cache (only 1: destr_bool).	0.0397629737854	2
Coq.Bool.Bool.negb_xorb_r	40	0.0.0.0.0	search with cache (only 1: destruct b, b'; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial).	0.110002994537	5
Coq.Bool.Bool.xorb_negb_negb	40	0.0.0.0.0	search with cache (only 1: destruct b, b'; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial).	0.111956119537	5
Coq.Bool.Bool.eq_iff_eq_true	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.133365154266	5
Coq.Bool.Bool.eq_true_iff_eq	40	0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0848281383514	3
Coq.Bool.Bool.eq_true_negb_classical	40	1.0	search with cache (only 1: destr_bool; only 1: intuition).	0.0344681739807	3
Coq.Bool.Bool.eq_true_not_negb	40	1.0	search with cache (only 1: destr_bool; only 1: intuition).	0.049996137619	3
Coq.Bool.Bool.absurd_eq_bool	40	6.6.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.641473054886	327
Coq.Bool.Bool.absurd_eq_true	40	6.0	search with cache (only 1: destr_bool; only 1: intuition).	0.028902053833	8
Coq.Bool.Bool.trans_eq_bool	40	0.5.1	search with cache (only 1: intros; only 1: destruct H; only 1: trivial).	0.0710339546204	29
Coq.Bool.Bool.Is_true_eq_true	40	6.6	search with cache (only 1: destr_bool; only 1: intuition).	0.448199987411	263
Coq.Bool.Bool.Is_true_eq_left	40	0	search with cache (only 1: destr_bool).	0.0188510417938	1
Coq.Bool.Bool.Is_true_eq_right	40	0.0.0	search with cache (only 1: intros; only 1: subst; only 1: auto with bool).	0.0348138809204	3
Coq.Bool.Bool.eqb_refl	40	0	search with cache (only 1: destr_bool).	0.0192978382111	1
Coq.Bool.Bool.eqb_eq	40	0.0.0	search with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.065192937851	3
Coq.Bool.Bool.orb_prop_elim	40	1.0.0.0.1	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: tauto).	0.0696740150452	16
Coq.Bool.Bool.orb_prop_intro	40	0.0	search with cache (only 1: destr_bool; only 1: tauto).	0.0560810565948	2
Coq.Bool.Bool.andb_prop_intro	40	1.0.0.1	search with cache (only 1: destr_bool; only 1: tauto; only 1: tauto; only 1: tauto).	0.105384111404	21
Coq.Bool.Bool.andb_prop_elim	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: tauto; only 1: tauto; only 1: tauto; only 1: tauto).	0.100914955139	5
Coq.Bool.Bool.eq_bool_prop_intro	40	0.0.1	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.147355079651	16
Coq.Bool.Bool.eq_bool_prop_elim	40	0.0.0	search with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.104509115219	3
Coq.Bool.Bool.negb_prop_elim	40	0.0.0	search with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.0459249019623	3
Coq.Bool.Bool.negb_prop_intro	40	0.0	search with cache (only 1: destr_bool; only 1: tauto).	0.0810370445251	2
Coq.Bool.Bool.negb_prop_classical	40	0.0	search with cache (only 1: destr_bool; only 1: tauto).	0.0704298019409	2
Coq.Bool.Bool.negb_prop_involutive	40	0.0.0	search with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.0481650829315	3
Coq.Bool.Bool.andb_if	40	4	search with cache (only 1: destr_bool).	0.073294878006	14
Coq.Bool.Bool.negb_if	40	0	search with cache (only 1: destr_bool).	0.0227589607239	1
Coq.Bool.Bool.andb_lazy_alt	40	1.0	search with cache (only 1: intros; only 1: repeat split).	0.08238697052	3
Coq.Bool.Bool.orb_lazy_alt	40	0.0	search with cache (only 1: intros; only 1: trivial).	0.0564980506897	2
Coq.Bool.Bool.reflect_iff	40	1.0.0.30	search with cache (only 1: intros A B []; only 1: intuition; only 1: intuition; only 1: destr_bool).	12.3986649513	12455
Coq.Bool.Bool.iff_reflect	40	0.0.1	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0958969593048	13
Coq.Bool.Bool.reflect_dec	40	1.1.1	search with cache (only 1: destruct 1; only 1: intuition; only 1: intuition).	0.0561981201172	6
Coq.Bool.Bool.eqb_spec	40	0.0.0.0.7	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.278177976608	42
Coq.Bool.DecBool.ifdec_left	40	10.0.0.0	search with cache (only 1: intros; only 1: destruct H; only 1: reflexivity; only 1: contradiction).	1.82262897491	761
Coq.Bool.DecBool.ifdec_right	40	0.5.0.0	search with cache (only 1: intros; only 1: case H; only 1: contradiction; only 1: auto).	0.192754030228	44
Coq.Bool.Sumbool.sumbool_of_bool	40	4.4.14.0	search with cache (only 1: intro H; only 1: destruct H; only 1: auto; only 1: auto).	0.545624017715	896
Coq.Bool.Sumbool.bool_eq_rec	40	1.2.1.2.3	search with cache (only 1: destruct b; only 1: intro z; only 1: auto; only 1: intro z; only 1: auto).	0.518893003464	341
Coq.Bool.Sumbool.bool_eq_ind	40	0.0.0	search with cache (only 1: destruct b; only 1: auto; only 1: auto).	0.0640959739685	3
Coq.Bool.Sumbool.sumbool_and	40
Coq.Bool.Sumbool.sumbool_or	40	2.2.1.2.0	search with cache (only 1: case H1; only 1: auto; only 1: case H2; only 1: auto; only 1: auto).	21.6916840076	3257
Coq.Bool.Sumbool.sumbool_not	40	2.2.0	search with cache (only 1: case H1; only 1: auto; only 1: auto).	2.280823946	369
Coq.Bool.Sumbool.bool_of_sumbool	40
Coq.Classes.DecidableClass.Decidable_sound	40	1.9.6.25.37	search with cache (only 1: intros n m; only 1: elim m; only 1: intro z; only 1: intros [? ?]; only 1: auto).	31.4855041504	98088
Coq.Classes.DecidableClass.Decidable_complete	40	1.12.3.27.39	search with cache (only 1: intros n m; only 1: elim m; only 1: intro H; only 1: intros [? ?]; only 1: assumption).	38.0597600937	101488
Coq.Classes.DecidableClass.Decidable_sound_alt	40
Coq.Classes.DecidableClass.Decidable_complete_alt	40
Coq.Classes.DecidableClass.Decidable_eq_bool_obligation_1	40
Coq.Classes.DecidableClass.Decidable_eq_nat_obligation_1	40
Coq.Classes.DecidableClass.Decidable_le_nat_obligation_1	40
Coq.Classes.DecidableClass.Decidable_eq_Z_obligation_1	40
Coq.Classes.SetoidDec.unit_eqdec_obligation_1	40
Coq.Classes.SetoidDec.bool_function_eqdec_obligation_1	40
Coq.Classes.EquivDec.unit_eqdec_obligation_1	40
Coq.Classes.EquivDec.bool_function_eqdec_obligation_1	40
Coq.Classes.EquivDec.list_eqdec_obligation_5	40
Coq.Classes.Morphisms_Relations.relation_conjunction_morphism	40
Coq.Classes.Morphisms_Relations.relation_disjunction_morphism	40	0	search with cache (only 1: firstorder).	0.798009872437	1
Coq.Classes.Morphisms_Relations.predicate_equivalence_pointwise	40	0	search with cache (only 1: firstorder).	0.0682590007782	1
Coq.Classes.Morphisms_Relations.predicate_implication_pointwise	40	1.0	search with cache (only 1: do 2 red; only 1: auto).	0.131443977356	3
Coq.Classes.Morphisms_Relations.relation_equivalence_pointwise	40	0	search with cache (only 1: firstorder).	0.0924808979034	1
Coq.Classes.Morphisms_Relations.subrelation_pointwise	40	4.1.1.0	search with cache (only 1: intro; only 1: intro; only 1: intro; only 1: auto).	0.183048963547	15
Coq.Classes.Morphisms_Relations.flip_pointwise_relation	40	3	search with cache (only 1: firstorder).	0.243963003159	16
Coq.Classes.SetoidClass.setoid_refl	40	2	search with cache (only 1: now f_equal).	0.0958771705627	3
Coq.Classes.SetoidClass.setoid_sym	40	0	search with cache (only 1: typeclasses eauto).	0.0718641281128	1
Coq.Classes.SetoidClass.setoid_trans	40	0	search with cache (only 1: typeclasses eauto).	0.0745551586151	1
Coq.Classes.SetoidClass.nequiv_equiv_trans	40
Coq.Classes.SetoidClass.equiv_nequiv_trans	40
Coq.Classes.RelationPairs.RelCompFun_Reflexive	40	13.21	search with cache (only 1: repeat red; only 1: reflexivity).	1.13340306282	863
Coq.Classes.RelationPairs.RelCompFun_Symmetric	40	0	search with cache (only 1: firstorder).	0.218113899231	1
Coq.Classes.RelationPairs.RelCompFun_Transitive	40	0	search with cache (only 1: firstorder).	0.263286113739	1
Coq.Classes.RelationPairs.RelCompFun_Irreflexive	40	0	search with cache (only 1: firstorder).	0.0421929359436	1
Coq.Classes.RelationPairs.RelProd_Reflexive	40	0	search with cache (only 1: firstorder).	0.0519199371338	1
Coq.Classes.RelationPairs.RelProd_Symmetric	40	0	search with cache (only 1: firstorder).	0.0522999763489	1
Coq.Classes.RelationPairs.RelProd_Transitive	40	0	search with cache (only 1: firstorder).	0.368331193924	1
Coq.Classes.RelationPairs.FstRel_ProdRel	40	0	search with cache (only 1: firstorder).	0.060623884201	1
Coq.Classes.RelationPairs.SndRel_ProdRel	40	0	search with cache (only 1: firstorder).	0.0600218772888	1
Coq.Classes.RelationPairs.FstRel_sub	40	0	search with cache (only 1: firstorder).	0.0528819561005	1
Coq.Classes.RelationPairs.SndRel_sub	40	0	search with cache (only 1: firstorder).	0.0400669574738	1
Coq.Classes.RelationPairs.pair_compat	40	0	search with cache (only 1: firstorder).	0.0554192066193	1
Coq.Classes.RelationPairs.fst_compat	40	0	search with cache (only 1: firstorder).	0.0527741909027	1
Coq.Classes.RelationPairs.snd_compat	40	0	search with cache (only 1: firstorder).	0.0416898727417	1
Coq.Classes.RelationPairs.RelCompFun_compat	40	2.0	search with cache (only 1: compute in *; only 1: auto).	0.0682618618011	4
Coq.Classes.CEquivalence.equiv_transitive_obligation_1	40	0.7	search with cache (only 1: compute; only 1: firstorder).	1.39879608154	48
Coq.Classes.CEquivalence.respecting_equiv_obligation_3	40
Coq.Classes.CEquivalence.pointwise_reflexive	40	0	search with cache (only 1: simpl_crelation).	0.0228080749512	1
Coq.Classes.CEquivalence.pointwise_symmetric	40	0	search with cache (only 1: firstorder).	0.0425598621368	1
Coq.Classes.CEquivalence.pointwise_transitive	40	0	search with cache (only 1: firstorder).	0.0588819980621	1
Coq.Classes.CEquivalence.pointwise_equivalence	40	0	search with cache (only 1: firstorder).	0.753837108612	1
Coq.Classes.CMorphisms.eq_proper_proxy	40	1.5	search with cache (only 1: red; only 1: trivial).	0.0522000789642	8
Coq.Classes.CMorphisms.reflexive_proper_proxy	40	1	search with cache (only 1: firstorder).	0.0346848964691	2
Coq.Classes.CMorphisms.proper_proper_proxy	40	0	search with cache (only 1: firstorder).	0.0334630012512	1
Coq.Classes.CMorphisms.pointwise_pointwise	40	11.1.22.2	search with cache (only 1: split; only 1: destruct 2; only 1: firstorder; only 1: firstorder).	27.308743	21754
Coq.Classes.CMorphisms.subrelation_id_proper	40	0	search with cache (only 1: firstorder).	0.0327990055084	1
Coq.Classes.CMorphisms.subrelation_respectful	40	0	search with cache (only 1: firstorder).	0.0369799137115	1
Coq.Classes.CMorphisms.subrelation_refl	40	5.0.0	search with cache (only 1: hnf; only 1: intros; only 1: firstorder).	0.0598840713501	8
Coq.Classes.CMorphisms.subrelation_proper	40	0	search with cache (only 1: simpl_crelation).	0.0458250045776	1
Coq.Classes.CMorphisms.proper_subrelation_proper_arrow	40	4	search with cache (only 1: simpl_crelation).	0.090479850769	5
Coq.Classes.CMorphisms.pointwise_subrelation	40	1	search with cache (only 1: simpl_crelation).	0.0584900379181	2
Coq.Classes.CMorphisms.forall_subrelation	40	9	search with cache (only 1: firstorder).	0.18733382225	36
Coq.Classes.CMorphisms.iff_impl_subrelation	40	4.1.1	search with cache (only 1: hnf; only 1: intros A B [H1 H2]; only 1: trivial).	0.105739116669	20
Coq.Classes.CMorphisms.iff_flip_impl_subrelation	40	0	search with cache (only 1: firstorder).	0.0272011756897	1
Coq.Classes.CMorphisms.iffT_arrow_subrelation	40	0.0	search with cache (only 1: reduce; only 1: firstorder).	0.0389440059662	2
Coq.Classes.CMorphisms.iffT_flip_arrow_subrelation	40	0	search with cache (only 1: firstorder).	0.0149891376495	1
Coq.Classes.CMorphisms.respectful_per_obligation_2	40
Coq.Classes.CMorphisms.flip_proper_obligation_1	40	5	search with cache (only 1: firstorder).	0.237315177917	6
Coq.Classes.CMorphisms.trans_contra_co_type_morphism_obligation_1	40	11	search with cache (only 1: firstorder).	6.95746397972	1932
Coq.Classes.CMorphisms.trans_contra_inv_impl_type_morphism_obligation_1	40	11	search with cache (only 1: firstorder).	24.0515527725	4431
Coq.Classes.CMorphisms.trans_co_impl_type_morphism_obligation_1	40
Coq.Classes.CMorphisms.trans_sym_co_inv_impl_type_morphism_obligation_1	40	12	search with cache (only 1: firstorder).	5.09188389778	1231
Coq.Classes.CMorphisms.trans_sym_contra_arrow_morphism_obligation_1	40
Coq.Classes.CMorphisms.per_partial_app_type_morphism_obligation_1	40	12	search with cache (only 1: firstorder).	4.73539590836	626
Coq.Classes.CMorphisms.trans_co_eq_inv_arrow_morphism_obligation_1	40	14	search with cache (only 1: firstorder).	25.854667902	5523
Coq.Classes.CMorphisms.PER_type_morphism_obligation_1	40	11	search with cache (only 1: firstorder).	18.1066930294	2526
Coq.Classes.CMorphisms.symmetric_equiv_flip	40	7.0	search with cache (only 1: hnf; only 1: firstorder).	0.087883234024	14
Coq.Classes.CMorphisms.compose_proper_obligation_1	40	7	search with cache (only 1: firstorder).	0.0808069705963	8
Coq.Classes.CMorphisms.reflexive_eq_dom_reflexive	40	5	search with cache (only 1: simpl_crelation).	0.0642559528351	11
Coq.Classes.CMorphisms.respectful_morphism	40
Coq.Classes.CMorphisms.Reflexive_partial_app_morphism	40	0.4	search with cache (only 1: unfold respectful, relation_equivalence in *; only 1: firstorder).	0.057774066925	6
Coq.Classes.CMorphisms.flip_respectful	40	5.3	search with cache (only 1: simpl_crelation; only 1: firstorder).	0.238242864609	20
Coq.Classes.CMorphisms.flip1	40	3.0.0	search with cache (only 1: hnf; only 1: intros; only 1: auto).	0.063248872757	6
Coq.Classes.CMorphisms.flip2	40	0	search with cache (only 1: firstorder).	0.037337064743	1
Coq.Classes.CMorphisms.eq_subrelation	40	3	search with cache (only 1: simpl_crelation).	0.027646780014	4
Coq.Classes.CMorphisms.reflexive_proper	40	0	search with cache (only 1: firstorder).	0.0370001792908	1
Coq.Classes.CMorphisms.proper_eq	40	1	search with cache (only 1: firstorder).	0.0369319915771	2
Coq.Classes.CMorphisms.proper_proper	40	0.0.1	search with cache (only 1: reduce; only 1: subst; only 1: firstorder).	0.0662870407104	4
Coq.Classes.CMorphisms.proper_normalizes_proper	40	11	search with cache (only 1: firstorder).	0.297055959702	72
Coq.Classes.CMorphisms.flip_atom	40	0	search with cache (only 1: firstorder).	0.0378909111023	1
Coq.Classes.CMorphisms.flip_arrow	40
Coq.Classes.CMorphisms.proper_sym_flip	40	0.1.1	search with cache (only 1: intros A B R R' HRR' S S' HSS' f g; only 1: unfold flip, respectful; only 1: simpl_crelation).	0.0859360694885	5
Coq.Classes.CMorphisms.proper_sym_flip_2	40	3.0.4.5	search with cache (only 1: unfold flip, respectful; only 1: intros; only 1: intros x x' Hxx'; only 1: auto).	8.35426998138	1809
Coq.Classes.CMorphisms.proper_sym_impl_iff	40	18.4	search with cache (only 1: simpl_crelation; only 1: firstorder).	5.71902298927	1640
Coq.Classes.CMorphisms.proper_sym_arrow_iffT	40	0.0.1.0.1	search with cache (only 1: intros A R Sym f Hf x x' Hxx'; only 1: repeat red in Hf; only 1: split; only 1: eauto; only 1: eauto).	0.0939030647278	7
Coq.Classes.CMorphisms.proper_sym_impl_iff_2	40
Coq.Classes.CMorphisms.proper_sym_arrow_iffT_2	40	0.0.1.0.4	search with cache (only 1: intros A R Sym B R' Sym' f Hf x x' Hxx' y y' Hyy'; only 1: repeat red in Hf; only 1: split; only 1: eauto; only 1: eauto).	0.237553834915	45
Coq.Classes.CMorphisms.PartialOrder_proper_type	40
Coq.Classes.CMorphisms.PartialOrder_StrictOrder	40
Coq.Classes.CMorphisms.StrictOrder_PreOrder	40
Coq.Classes.CMorphisms.StrictOrder_PartialOrder	40
Coq.Classes.Equivalence.equiv_transitive_obligation_1	40	0.9	search with cache (only 1: compute; only 1: firstorder).	0.866073131561	147
Coq.Classes.Equivalence.respecting_equiv_obligation_3	40
Coq.Classes.Equivalence.pointwise_reflexive	40	0	search with cache (only 1: simpl_relation).	0.0286231040955	1
Coq.Classes.Equivalence.pointwise_symmetric	40	0	search with cache (only 1: firstorder).	0.0309770107269	1
Coq.Classes.Equivalence.pointwise_transitive	40	0	search with cache (only 1: firstorder).	0.0406260490417	1
Coq.Classes.Equivalence.pointwise_equivalence	40	0	search with cache (only 1: firstorder).	0.551874160767	1
Coq.Classes.Morphisms.eq_proper_proxy	40	1.5	search with cache (only 1: red; only 1: trivial).	0.0524208545685	8
Coq.Classes.Morphisms.reflexive_proper_proxy	40	0	search with cache (only 1: firstorder).	0.0258309841156	1
Coq.Classes.Morphisms.proper_proper_proxy	40	0	search with cache (only 1: firstorder).	0.013689994812	1
Coq.Classes.Morphisms.pointwise_pointwise	40	0.21.0.0.1	search with cache (only 1: unfold relation_equivalence in *; only 1: compute; only 1: firstorder; only 1: elim eq_sym with (1 := H0); only 1: firstorder).	13.9777698517	7444
Coq.Classes.Morphisms.subrelation_id_proper	40	4.0	search with cache (only 1: compute; only 1: firstorder).	0.0525140762329	6
Coq.Classes.Morphisms.subrelation_respectful	40	0	search with cache (only 1: firstorder).	0.0531761646271	1
Coq.Classes.Morphisms.subrelation_refl	40	0.0	search with cache (only 1: compute; only 1: firstorder).	0.0534329414368	2
Coq.Classes.Morphisms.subrelation_proper	40	1	search with cache (only 1: firstorder).	0.0346939563751	2
Coq.Classes.Morphisms.proper_subrelation_proper	40	0.4.3.4	search with cache (only 1: unfold subrelation in *; only 1: reduce; only 1: subst; only 1: firstorder).	1.0829808712	177
Coq.Classes.Morphisms.pointwise_subrelation	40	1.4	search with cache (only 1: reduce; only 1: firstorder).	0.0275239944458	7
Coq.Classes.Morphisms.forall_subrelation	40	0.4	search with cache (only 1: unfold subrelation; only 1: firstorder).	0.135880947113	20
Coq.Classes.Morphisms.iff_impl_subrelation	40	0.0	search with cache (only 1: reduce; only 1: firstorder).	0.0459060668945	2
Coq.Classes.Morphisms.iff_flip_impl_subrelation	40	0	search with cache (only 1: firstorder).	0.0264580249786	1
Coq.Classes.Morphisms.respectful_per_obligation_2	40
Coq.Classes.Morphisms.complement_proper_obligation_1	40
Coq.Classes.Morphisms.flip_proper_obligation_1	40	4	search with cache (only 1: firstorder).	0.0622589588165	5
Coq.Classes.Morphisms.trans_contra_co_morphism_obligation_1	40	7	search with cache (only 1: firstorder).	0.577649116516	36
Coq.Classes.Morphisms.trans_contra_inv_impl_morphism_obligation_1	40	5	search with cache (only 1: firstorder).	3.11350011826	369
Coq.Classes.Morphisms.trans_co_impl_morphism_obligation_1	40	6	search with cache (only 1: firstorder).	4.52837014198	720
Coq.Classes.Morphisms.trans_sym_co_inv_impl_morphism_obligation_1	40	10	search with cache (only 1: firstorder).	1.2141418457	312
Coq.Classes.Morphisms.trans_sym_contra_impl_morphism_obligation_1	40	10	search with cache (only 1: firstorder).	8.11187314987	1538
Coq.Classes.Morphisms.per_partial_app_morphism_obligation_1	40	10	search with cache (only 1: firstorder).	2.18175792694	269
Coq.Classes.Morphisms.trans_co_eq_inv_impl_morphism_obligation_1	40	3.3.2	search with cache (only 1: transitivity y; only 1: intuition; only 1: intuition).	2.89711904526	477
Coq.Classes.Morphisms.PER_morphism_obligation_1	40
Coq.Classes.Morphisms.symmetric_equiv_flip	40	5.1.0.0	search with cache (only 1: hnf; only 1: intros; only 1: compute; only 1: firstorder).	0.0950260162354	12
Coq.Classes.Morphisms.compose_proper_obligation_1	40	7	search with cache (only 1: firstorder).	0.0631318092346	8
Coq.Classes.Morphisms.reflexive_eq_dom_reflexive	40	9	search with cache (only 1: simpl_relation).	0.0714149475098	13
Coq.Classes.Morphisms.respectful_morphism	40	1.2.4.2.1.0.9.2	search with cache (only 1: reduce; only 1: unfold relation_equivalence in *; only 1: compute; only 1: firstorder; only 1: apply H0; only 1: firstorder; only 1: apply H0; only 1: firstorder).	26.1117789745	2691
Coq.Classes.Morphisms.Reflexive_partial_app_morphism	40	7	search with cache (only 1: firstorder).	0.0314991474152	11
Coq.Classes.Morphisms.flip_respectful	40	7	search with cache (only 1: firstorder).	0.464600086212	34
Coq.Classes.Morphisms.flip1	40	4.0.3	search with cache (only 1: hnf; only 1: unfold flip, respectful; only 1: apply H).	0.145900011063	15
Coq.Classes.Morphisms.flip2	40	0	search with cache (only 1: firstorder).	0.118795871735	1
Coq.Classes.Morphisms.eq_subrelation	40	0.2.0.3	search with cache (only 1: unfold subrelation; only 1: firstorder; only 1: subst; only 1: firstorder).	0.104694128036	9
Coq.Classes.Morphisms.reflexive_proper	40	0	search with cache (only 1: firstorder).	0.0285329818726	1
Coq.Classes.Morphisms.proper_eq	40	1	search with cache (only 1: firstorder).	0.0283892154694	2
Coq.Classes.Morphisms.proper_proper	40	0.0.0.0.0	search with cache (only 1: reduce; only 1: subst; only 1: unfold respectful, relation_equivalence, predicate_equivalence in *; only 1: simpl in *; only 1: firstorder).	0.0792670249939	5
Coq.Classes.Morphisms.proper_normalizes_proper	40	12	search with cache (only 1: firstorder).	0.575702905655	154
Coq.Classes.Morphisms.flip_atom	40	0	search with cache (only 1: firstorder).	0.0509169101715	1
Coq.Classes.Morphisms.flip_arrow	40
Coq.Classes.Morphisms.proper_sym_flip	40	0	search with cache (only 1: simpl_relation).	0.0541090965271	1
Coq.Classes.Morphisms.proper_sym_flip_2	40	1.6	search with cache (only 1: unfold flip, respectful; only 1: simpl_relation).	0.701020002365	102
Coq.Classes.Morphisms.proper_sym_impl_iff	40	15.2	search with cache (only 1: simpl_relation; only 1: firstorder).	3.40883898735	1116
Coq.Classes.Morphisms.proper_sym_impl_iff_2	40
Coq.Classes.Morphisms.PartialOrder_proper	40
Coq.Classes.Morphisms.PartialOrder_StrictOrder	40
Coq.Classes.Morphisms.StrictOrder_PreOrder	40
Coq.Classes.Morphisms.StrictOrder_PartialOrder	40
Coq.Classes.Morphisms_Prop.Acc_pt_morphism	40
Coq.Classes.Morphisms_Prop.Acc_rel_morphism	40
Coq.Classes.Morphisms_Prop.well_founded_morphism	40
Coq.Classes.CRelationClasses.complement_inverse	40	5	search with cache (only 1: trivial).	0.0339479446411	6
Coq.Classes.CRelationClasses.StrictOrder_Asymmetric	40
Coq.Classes.CRelationClasses.subrelation_symmetric	40	1	search with cache (only 1: firstorder).	0.0176110267639	2
Coq.Classes.CRelationClasses.flip_Reflexive	40	5.0	search with cache (only 1: hnf; only 1: firstorder).	0.0237619876862	7
Coq.Classes.CRelationClasses.flip_Antisymmetric	40	6.1	search with cache (only 1: hnf; only 1: firstorder).	0.0557188987732	14
Coq.Classes.CRelationClasses.flip_PreOrder	40	5	search with cache (only 1: firstorder).	0.0482571125031	6
Coq.Classes.CRelationClasses.flip_StrictOrder	40	5	search with cache (only 1: firstorder).	0.0532238483429	6
Coq.Classes.CRelationClasses.flip_PER	40	5	search with cache (only 1: firstorder).	0.0770378112793	6
Coq.Classes.CRelationClasses.flip_Equivalence	40	0	search with cache (only 1: firstorder).	0.0863089561462	1
Coq.Classes.CRelationClasses.complement_Irreflexive	40	6	search with cache (only 1: firstorder).	0.059910774231	13
Coq.Classes.CRelationClasses.complement_Symmetric	40	1	search with cache (only 1: firstorder).	0.034863948822	2
Coq.Classes.CRelationClasses.iffT_Reflexive	40	1	search with cache (only 1: firstorder).	0.0348160266876	2
Coq.Classes.CRelationClasses.iffT_Symmetric	40	0	search with cache (only 1: firstorder).	0.0357987880707	1
Coq.Classes.CRelationClasses.iffT_Transitive	40	0	search with cache (only 1: firstorder).	0.0369300842285	1
Coq.Classes.CRelationClasses.relation_equivalence_equivalence	40
Coq.Classes.CRelationClasses.relation_implication_preorder	40	1	search with cache (only 1: firstorder).	0.0533540248871	2
Coq.Classes.CRelationClasses.partial_order_antisym	40	0	search with cache (only 1: firstorder).	0.0561330318451	1
Coq.Classes.CRelationClasses.PartialOrder_inverse	40	0	search with cache (only 1: firstorder).	0.229447841644	1
Coq.Classes.RelationClasses.complement_inverse	40	5	search with cache (only 1: trivial).	0.0356760025024	6
Coq.Classes.RelationClasses.StrictOrder_Asymmetric	40
Coq.Classes.RelationClasses.subrelation_symmetric	40	1	search with cache (only 1: firstorder).	0.0135049819946	2
Coq.Classes.RelationClasses.flip_Reflexive	40	6.1.0	search with cache (only 1: hnf; only 1: intros; only 1: firstorder).	0.0771658420563	15
Coq.Classes.RelationClasses.flip_Antisymmetric	40	6.1	search with cache (only 1: hnf; only 1: firstorder).	0.0595440864563	18
Coq.Classes.RelationClasses.flip_PreOrder	40	5	search with cache (only 1: firstorder).	0.0600690841675	6
Coq.Classes.RelationClasses.flip_StrictOrder	40	5	search with cache (only 1: firstorder).	0.0296409130096	6
Coq.Classes.RelationClasses.flip_PER	40	5	search with cache (only 1: firstorder).	0.101646184921	6
Coq.Classes.RelationClasses.flip_Equivalence	40	0	search with cache (only 1: firstorder).	0.0824909210205	1
Coq.Classes.RelationClasses.complement_Irreflexive	40	6.2	search with cache (only 1: hnf; only 1: firstorder).	0.0284149646759	12
Coq.Classes.RelationClasses.complement_Symmetric	40	1	search with cache (only 1: firstorder).	0.0208468437195	2
Coq.Classes.RelationClasses.predicate_equivalence_equivalence_obligation_1	40
Coq.Classes.RelationClasses.predicate_equivalence_equivalence_obligation_2	40	0.0.1	search with cache (only 1: induction l; only 1: firstorder; only 1: firstorder).	0.225607156754	4
Coq.Classes.RelationClasses.predicate_equivalence_equivalence_obligation_3	40
Coq.Classes.RelationClasses.predicate_implication_preorder_obligation_1	40	1.0.5	search with cache (only 1: induction l; only 1: firstorder; only 1: firstorder).	0.0832080841064	12
Coq.Classes.RelationClasses.predicate_implication_preorder_obligation_2	40	0.1.0.0.5	search with cache (only 1: induction l; only 1: firstorder; only 1: intros; only 1: pose (IHl (x x0) (y x0) (z x0)); only 1: firstorder).	0.660347938538	35
Coq.Classes.RelationClasses.relation_equivalence_equivalence	40
Coq.Classes.RelationClasses.relation_implication_preorder	40	1	search with cache (only 1: firstorder).	0.0400071144104	2
Coq.Classes.RelationClasses.partial_order_antisym	40	0	search with cache (only 1: firstorder).	0.0447170734406	1
Coq.Classes.RelationClasses.PartialOrder_inverse	40	2	search with cache (only 1: firstorder).	0.11593914032	3
Coq.Classes.RelationClasses.subrelation_partial_order_obligation_1	40	0	search with cache (only 1: firstorder).	0.0552608966827	1
Coq.FSets.FMapFullAVL.AvlProofs.height_non_negative	40
Coq.FSets.FMapFullAVL.AvlProofs.avl_node	40	0	search with cache (only 1: intuition).	0.104465961456	1
Coq.FSets.FMapFullAVL.AvlProofs.height_0	40
Coq.FSets.FMapFullAVL.AvlProofs.empty_avl	40	2	search with cache (only 1: intuition).	0.079460144043	3
Coq.FSets.FMapFullAVL.AvlProofs.create_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.create_height	40	0	search with cache (only 1: intuition).	0.0896179676056	1
Coq.FSets.FMapFullAVL.AvlProofs.bal_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.bal_height_1	40
Coq.FSets.FMapFullAVL.AvlProofs.bal_height_2	40
Coq.FSets.FMapFullAVL.AvlProofs.add_avl_1	40
Coq.FSets.FMapFullAVL.AvlProofs.add_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.remove_min_avl_1	40
Coq.FSets.FMapFullAVL.AvlProofs.remove_min_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.merge_avl_1	40
Coq.FSets.FMapFullAVL.AvlProofs.merge_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.remove_avl_1	40
Coq.FSets.FMapFullAVL.AvlProofs.remove_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.join_avl_1	40
Coq.FSets.FMapFullAVL.AvlProofs.join_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.concat_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.split_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.map_height	40
Coq.FSets.FMapFullAVL.AvlProofs.map_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.mapi_height	40	1.0.0.0.0	search with cache (only 1: destruct m; only 1: simpl; only 1: auto; only 1: simpl; only 1: constructor).	0.224799871445	6
Coq.FSets.FMapFullAVL.AvlProofs.mapi_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.map_option_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.map2_opt_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.map2_avl	40
Coq.FSets.FMapFullAVL.IntMake.MapsTo_1	40
Coq.FSets.FMapFullAVL.IntMake.mem_1	40
Coq.FSets.FMapFullAVL.IntMake.mem_2	40
Coq.FSets.FMapFullAVL.IntMake.empty_1	40	13.7.6.29	search with cache (only 1: intros m x; only 1: simpl; only 1: intuition; only 1: inversion_clear H).	7.5240881443	4644
Coq.FSets.FMapFullAVL.IntMake.is_empty_1	40
Coq.FSets.FMapFullAVL.IntMake.is_empty_2	40
Coq.FSets.FMapFullAVL.IntMake.add_1	40
Coq.FSets.FMapFullAVL.IntMake.add_2	40
Coq.FSets.FMapFullAVL.IntMake.add_3	40
Coq.FSets.FMapFullAVL.IntMake.remove_1	40
Coq.FSets.FMapFullAVL.IntMake.remove_2	40
Coq.FSets.FMapFullAVL.IntMake.remove_3	40
Coq.FSets.FMapFullAVL.IntMake.find_1	40
Coq.FSets.FMapFullAVL.IntMake.find_2	40
Coq.FSets.FMapFullAVL.IntMake.fold_1	40
Coq.FSets.FMapFullAVL.IntMake.elements_1	40
Coq.FSets.FMapFullAVL.IntMake.elements_2	40	0.0.5.1	search with cache (only 1: unfold elements, MapsTo, eq_key_elt; only 1: intros m x y; only 1: rewrite elements_mapsto; only 1: auto).	0.337595939636	36
Coq.FSets.FMapFullAVL.IntMake.elements_3	40
Coq.FSets.FMapFullAVL.IntMake.elements_3w	40
Coq.FSets.FMapFullAVL.IntMake.cardinal_1	40
Coq.FSets.FMapFullAVL.IntMake.Equivb_Equivb	40
Coq.FSets.FMapFullAVL.IntMake.equal_1	40
Coq.FSets.FMapFullAVL.IntMake.equal_2	40	3.3.0.0.1.0.0.0	search with cache (only 1: unfold equal; only 1: intros (m, b, a) (m', b', a') cmp; only 1: rewrite Equivb_Equivb; only 1: simpl in *; only 1: rewrite equal_Equivb; only 1: auto; only 1: auto; only 1: auto).	17.905659914	2704
Coq.FSets.FMapFullAVL.IntMake.map_1	40
Coq.FSets.FMapFullAVL.IntMake.map_2	40
Coq.FSets.FMapFullAVL.IntMake.mapi_1	40
Coq.FSets.FMapFullAVL.IntMake.mapi_2	40
Coq.FSets.FMapFullAVL.IntMake.map2_1	40
Coq.FSets.FMapFullAVL.IntMake.map2_2	40
Coq.FSets.FMapFullAVL.IntMake_ord.cons_cardinal_e	40
Coq.FSets.FMapFullAVL.IntMake_ord.compare_aux_tcc	40
Coq.FSets.FMapFullAVL.IntMake_ord.cons_Cmp	40
Coq.FSets.FMapFullAVL.IntMake_ord.compare_aux_Cmp	40
Coq.FSets.FMapFullAVL.IntMake_ord.compare_Cmp	40
Coq.FSets.FMapFullAVL.IntMake_ord.compare	40
Coq.FSets.FMapFullAVL.IntMake_ord.eq_seq	40	15	search with cache (only 1: intuition).	1.94991993904	408
Coq.FSets.FMapFullAVL.IntMake_ord.lt_slt	40	7.1	search with cache (only 1: intros; only 1: intuition).	0.121877193451	15
Coq.FSets.FMapFullAVL.IntMake_ord.eq_1	40
Coq.FSets.FMapFullAVL.IntMake_ord.eq_2	40
Coq.FSets.FMapFullAVL.IntMake_ord.eq_refl	40
Coq.FSets.FMapFullAVL.IntMake_ord.eq_sym	40
Coq.FSets.FMapFullAVL.IntMake_ord.eq_trans	40
Coq.FSets.FMapFullAVL.IntMake_ord.lt_trans	40
Coq.FSets.FMapFullAVL.IntMake_ord.lt_not_eq	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.mem_eq	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.equal_mem_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.equal_mem_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.subset_mem_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.subset_mem_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.empty_mem	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.is_empty_equal_empty	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.choose_mem_1	40	0.0.0.0.0.0.0.11	search with cache (only 1: generalize (FM.mem_iff s x), (FM.mem_iff s' y); only 1: destruct (mem x s); only 1: destruct (mem y s'); only 1: intuition; only 1: intuition; only 1: destruct (mem y s'); only 1: intuition; only 1: intuition).	3.27963805199	1362
Coq.FSets.FSetEqProperties.WEqProperties_fun.choose_mem_2	40	0	search with cache (only 1: auto with set).	0.0345339775085	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_mem_1	40	2.2.1	search with cache (only 1: destruct (mem x s); only 1: auto with set; only 1: auto with set).	0.320301055908	32
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_mem_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_mem_1	40	0.1	search with cache (only 1: rewrite <- not_mem_iff; only 1: auto with set).	0.0723788738251	3
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_mem_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.singleton_equal_add	40	3	search with cache (only 1: auto with set).	0.0421240329742	4
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_mem	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_mem	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.diff_mem	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.mem_3	40	0.0.0.0.0.0.0.6	search with cache (only 1: generalize (FM.mem_iff s x), (FM.mem_iff s' y); only 1: destruct (mem x s); only 1: destruct (mem y s'); only 1: intuition; only 1: intuition; only 1: destruct (mem y s'); only 1: intuition; only 1: intuition).	2.26393198967	429
Coq.FSets.FSetEqProperties.WEqProperties_fun.mem_4	40	8.1	search with cache (only 1: rewrite <- not_mem_iff; only 1: auto with *).	1.1658449173	175
Coq.FSets.FSetEqProperties.WEqProperties_fun.equal_refl	40	0.3.1	search with cache (only 1: apply equal_1; only 1: repeat red; only 1: tauto).	0.260760068893	7
Coq.FSets.FSetEqProperties.WEqProperties_fun.equal_sym	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.equal_trans	40	5.6.2	search with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto).	19.5340960026	4842
Coq.FSets.FSetEqProperties.WEqProperties_fun.equal_equal	40	1.2.0	search with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto).	0.0516879558563	6
Coq.FSets.FSetEqProperties.WEqProperties_fun.equal_cardinal	40	3.4.0	search with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto).	0.0510420799255	10
Coq.FSets.FSetEqProperties.WEqProperties_fun.subset_refl	40	1.1.1	search with cache (only 1: apply subset_1; only 1: unfold Subset; only 1: tauto).	0.0461440086365	6
Coq.FSets.FSetEqProperties.WEqProperties_fun.subset_antisym	40	9	search with cache (only 1: auto with set fset).	0.131383180618	34
Coq.FSets.FSetEqProperties.WEqProperties_fun.subset_trans	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.subset_equal	40	0	search with cache (only 1: auto with set).	0.0309138298035	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.choose_mem_3	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.choose_mem_4	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_mem_3	40	1	search with cache (only 1: auto with set).	0.0606861114502	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_equal	40	0	search with cache (only 1: auto with set).	0.0566689968109	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_mem_3	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_equal	40	0.1	search with cache (only 1: rewrite <- not_mem_iff; only 1: auto with set).	0.0958969593048	3
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_remove	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_add	40	0.1.0.6	search with cache (only 1: rewrite <- not_mem_iff; only 1: intros; only 1: apply equal_1; only 1: Dec.fsetdec).	0.584861040115	60
Coq.FSets.FSetEqProperties.WEqProperties_fun.is_empty_cardinal	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.singleton_mem_1	40	4	search with cache (only 1: auto with set).	0.0317211151123	5
Coq.FSets.FSetEqProperties.WEqProperties_fun.singleton_mem_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.singleton_mem_3	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_sym	40	2.1	search with cache (only 1: apply equal_1; only 1: Dec.fsetdec).	0.205309867859	5
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_subset_equal	40	0	search with cache (only 1: auto with set).	0.0349380970001	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_equal_1	40	0	search with cache (only 1: auto with set).	0.0306000709534	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_equal_2	40	0	search with cache (only 1: auto with set).	0.0308520793915	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_assoc	40	0	search with cache (only 1: auto with set).	0.029149055481	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_union_singleton	40	2	search with cache (only 1: auto with set).	0.111030817032	3
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_add	40	0	search with cache (only 1: auto with set).	0.0987391471863	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_subset_1	40	0	search with cache (only 1: auto with set).	0.112747907639	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_subset_2	40	0	search with cache (only 1: auto with set).	0.118660926819	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_subset_3	40	0	search with cache (only 1: auto with set).	0.17848610878	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_sym	40	1.1	search with cache (only 1: apply equal_1; only 1: Dec.fsetdec).	0.143337011337	4
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_subset_equal	40	0	search with cache (only 1: auto with set).	0.031751871109	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_equal_1	40	0	search with cache (only 1: auto with set).	0.0310049057007	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_equal_2	40	0	search with cache (only 1: auto with set).	0.0301139354706	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_assoc	40	0	search with cache (only 1: auto with set).	0.0294849872589	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_inter_1	40	0	search with cache (only 1: auto with set).	0.0314559936523	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_inter_2	40	0	search with cache (only 1: auto with set).	0.0315370559692	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_add_1	40	0	search with cache (only 1: auto with set).	0.0383901596069	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_add_2	40	0.15	search with cache (only 1: rewrite <- not_mem_iff; only 1: auto with set).	3.22689890862	438
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_subset_1	40	0	search with cache (only 1: auto with set).	0.0460209846497	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_subset_2	40	0	search with cache (only 1: auto with set).	0.0441479682922	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_subset_3	40	0	search with cache (only 1: auto with set).	0.0670828819275	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.diff_subset	40	0.3	search with cache (only 1: apply subset_1; only 1: Dec.fsetdec).	0.0717208385468	5
Coq.FSets.FSetEqProperties.WEqProperties_fun.diff_subset_equal	40	0	search with cache (only 1: auto with set).	0.0738849639893	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_inter_singleton	40	0.2	search with cache (only 1: apply equal_1; only 1: Dec.fsetdec).	0.185600042343	4
Coq.FSets.FSetEqProperties.WEqProperties_fun.diff_inter_empty	40	0	search with cache (only 1: auto with set).	0.0316889286041	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.diff_inter_all	40	0	search with cache (only 1: auto with set).	0.0332021713257	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.set_rec	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.exclusive_set	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.fold_empty	40	0.0	search with cache (only 1: apply fold_1b; only 1: auto with set).	0.0867178440094	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.fold_equal	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.fold_add	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_fold	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_fold_1	40	0.0.2.2.2.0.1	search with cache (only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set).	1.81655812263	451
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_fold_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.fold_union	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_cardinal_1	40	1	search with cache (only 1: auto with set fset).	0.270952939987	31
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_cardinal_2	40	6.0.0.3.0.1.0	search with cache (only 1: intros; only 1: apply cardinal_2 with x; only 1: rewrite not_mem_iff; only 1: destruct (mem x s); only 1: tauto; only 1: tauto; only 1: auto with set).	6.61082696915	2065
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_cardinal_1	40	6.0.0.5.1.0.0.0	search with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: change_no_check S with ((fun _ => S) x); only 1: apply MP.remove_fold_1 with (eqA := Logic.eq); only 1: auto with fset; only 1: auto with fset; only 1: auto with fset; only 1: auto with set).	9.61288690567	3026
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_cardinal_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_cardinal	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.subset_cardinal	40	12	search with cache (only 1: auto with set fset).	0.369027137756	136
Coq.FSets.FSetEqProperties.WEqProperties_fun.Comp'	40	0.13.2	search with cache (only 1: simpl_relation; only 1: rewrite H; only 1: auto with *).	1.84828305244	364
Coq.FSets.FSetEqProperties.WEqProperties_fun.filter_mem	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.for_all_filter	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.exists_filter	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.partition_filter_1	40	15	search with cache (only 1: auto with set).	1.71736001968	692
Coq.FSets.FSetEqProperties.WEqProperties_fun.partition_filter_2	40	0	search with cache (only 1: auto with set).	0.0376169681549	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.filter_add_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.filter_add_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_filter_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_filter_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_filter	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.filter_union	40	0.0.0.0.1.0.2.0.1	search with cache (only 1: red; only 1: intros; only 1: set_iff; only 1: repeat rewrite filter_iff; only 1: set_iff; only 1: intuition; only 1: auto; only 1: auto; only 1: auto).	6.71032214165	390
Coq.FSets.FSetEqProperties.WEqProperties_fun.for_all_mem_1	40	14.1.0.0.1.0	search with cache (only 1: intros; only 1: apply for_all_1; only 1: auto; only 1: red; only 1: intros; only 1: intuition).	10.6312589645	2770
Coq.FSets.FSetEqProperties.WEqProperties_fun.for_all_mem_2	40	0.20.2.0	search with cache (only 1: intros; only 1: rewrite <- (for_all_iff s (f:=f)) in H; only 1: intuition; only 1: auto).	6.96000695229	2790
Coq.FSets.FSetEqProperties.WEqProperties_fun.for_all_mem_3	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.for_all_mem_4	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.for_all_exists	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Comp'	40	2.3.1.5	search with cache (only 1: intro H3; only 1: intros; only 1: f_equal; only 1: auto).	0.410113811493	129
Coq.FSets.FSetEqProperties.WEqProperties_fun.exists_mem_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.exists_mem_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.exists_mem_3	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.exists_mem_4	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.sum_plus	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.sum_filter	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.fold_compat	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.sum_compat	40
Coq.FSets.FSetProperties.WProperties_fun.In_dec	40	3.4.1.10.4	search with cache (only 1: intros; only 1: generalize (F.mem_iff s x); only 1: destruct (mem x s); only 1: intuition; only 1: intuition).	13.5366671085	2817
Coq.FSets.FSetProperties.WProperties_fun.Add_Equal	40
Coq.FSets.FSetProperties.WProperties_fun.equal_refl	40	0.2	search with cache (only 1: repeat red; only 1: tauto).	0.11482000351	4
Coq.FSets.FSetProperties.WProperties_fun.equal_sym	40	4.3	search with cache (only 1: intros; only 1: intuition).	0.443742990494	29
Coq.FSets.FSetProperties.WProperties_fun.equal_trans	40	2.1.0	search with cache (only 1: intros g_eq; only 1: rewrite <- g_eq; only 1: fsetdec).	0.236176967621	6
Coq.FSets.FSetProperties.WProperties_fun.subset_refl	40	1	search with cache (only 1: intuition).	0.0823130607605	2
Coq.FSets.FSetProperties.WProperties_fun.subset_trans	40	0	search with cache (only 1: fsetdec).	0.185899019241	1
Coq.FSets.FSetProperties.WProperties_fun.subset_antisym	40	0.0.11	search with cache (only 1: split; only 1: intuition; only 1: intuition).	0.994282007217	236
Coq.FSets.FSetProperties.WProperties_fun.subset_equal	40	0	search with cache (only 1: fsetdec).	0.134528160095	1
Coq.FSets.FSetProperties.WProperties_fun.subset_empty	40	5	search with cache (only 1: fsetdec).	0.143162965775	6
Coq.FSets.FSetProperties.WProperties_fun.subset_remove_3	40	0	search with cache (only 1: fsetdec).	0.115040063858	1
Coq.FSets.FSetProperties.WProperties_fun.subset_diff	40	0	search with cache (only 1: fsetdec).	0.168143033981	1
Coq.FSets.FSetProperties.WProperties_fun.subset_add_3	40	0	search with cache (only 1: fsetdec).	0.273591995239	1
Coq.FSets.FSetProperties.WProperties_fun.subset_add_2	40	0	search with cache (only 1: fsetdec).	0.146145105362	1
Coq.FSets.FSetProperties.WProperties_fun.in_subset	40	0	search with cache (only 1: fsetdec).	0.124122858047	1
Coq.FSets.FSetProperties.WProperties_fun.double_inclusion	40	0.0.0.6	search with cache (only 1: intuition; only 1: fsetdec; only 1: fsetdec; only 1: fsetdec).	0.790575027466	21
Coq.FSets.FSetProperties.WProperties_fun.empty_is_empty_1	40	10	search with cache (only 1: fsetdec).	9.27109718323	1182
Coq.FSets.FSetProperties.WProperties_fun.empty_is_empty_2	40	0	search with cache (only 1: fsetdec).	0.14574098587	1
Coq.FSets.FSetProperties.WProperties_fun.add_equal	40	1.0.0	search with cache (only 1: red; only 1: intros; only 1: fsetdec).	0.256339073181	4
Coq.FSets.FSetProperties.WProperties_fun.add_add	40	0.0.0.0	search with cache (only 1: red; only 1: intros; only 1: do 2 rewrite add_iff; only 1: fsetdec).	0.292474985123	4
Coq.FSets.FSetProperties.WProperties_fun.remove_equal	40	20	search with cache (only 1: fsetdec).	3.83458185196	1232
Coq.FSets.FSetProperties.WProperties_fun.Equal_remove	40	0	search with cache (only 1: fsetdec).	0.340002059937	1
Coq.FSets.FSetProperties.WProperties_fun.add_remove	40	0	search with cache (only 1: fsetdec).	0.338073015213	1
Coq.FSets.FSetProperties.WProperties_fun.remove_add	40	0	search with cache (only 1: fsetdec).	0.279628038406	1
Coq.FSets.FSetProperties.WProperties_fun.singleton_equal_add	40	0.0	search with cache (only 1: red; only 1: fsetdec).	0.256575107574	2
Coq.FSets.FSetProperties.WProperties_fun.remove_singleton_empty	40	0	search with cache (only 1: fsetdec).	0.678780078888	1
Coq.FSets.FSetProperties.WProperties_fun.union_sym	40	0.0.0.0.9	search with cache (only 1: split; only 1: do 2 rewrite union_iff; only 1: intuition; only 1: do 2 rewrite union_iff; only 1: intuition).	4.34243893623	815
Coq.FSets.FSetProperties.WProperties_fun.union_subset_equal	40	2	search with cache (only 1: fsetdec).	0.235992908478	3
Coq.FSets.FSetProperties.WProperties_fun.union_equal_1	40	0	search with cache (only 1: fsetdec).	0.151616096497	1
Coq.FSets.FSetProperties.WProperties_fun.union_equal_2	40	0	search with cache (only 1: fsetdec).	0.338310956955	1
Coq.FSets.FSetProperties.WProperties_fun.union_assoc	40	0	search with cache (only 1: fsetdec).	0.172528028488	1
Coq.FSets.FSetProperties.WProperties_fun.add_union_singleton	40	0	search with cache (only 1: fsetdec).	0.151752948761	1
Coq.FSets.FSetProperties.WProperties_fun.union_add	40	0	search with cache (only 1: fsetdec).	0.215564966202	1
Coq.FSets.FSetProperties.WProperties_fun.union_remove_add_1	40	0	search with cache (only 1: fsetdec).	0.892145872116	1
Coq.FSets.FSetProperties.WProperties_fun.union_remove_add_2	40	0	search with cache (only 1: fsetdec).	0.412276029587	1
Coq.FSets.FSetProperties.WProperties_fun.union_subset_1	40	0	search with cache (only 1: fsetdec).	0.111248016357	1
Coq.FSets.FSetProperties.WProperties_fun.union_subset_2	40	0	search with cache (only 1: fsetdec).	0.112619876862	1
Coq.FSets.FSetProperties.WProperties_fun.union_subset_3	40	2	search with cache (only 1: fsetdec).	0.17786192894	3
Coq.FSets.FSetProperties.WProperties_fun.union_subset_4	40	0	search with cache (only 1: fsetdec).	0.108105182648	1
Coq.FSets.FSetProperties.WProperties_fun.union_subset_5	40	0	search with cache (only 1: fsetdec).	0.184606075287	1
Coq.FSets.FSetProperties.WProperties_fun.empty_union_1	40	0	search with cache (only 1: fsetdec).	0.2423350811	1
Coq.FSets.FSetProperties.WProperties_fun.empty_union_2	40	0	search with cache (only 1: fsetdec).	0.211517810822	1
Coq.FSets.FSetProperties.WProperties_fun.not_in_union	40	11	search with cache (only 1: fsetdec).	31.4631850719	3345
Coq.FSets.FSetProperties.WProperties_fun.inter_sym	40	0.0.0.0.9	search with cache (only 1: split; only 1: do 2 rewrite inter_iff; only 1: tauto; only 1: do 2 rewrite inter_iff; only 1: tauto).	3.1261780262	788
Coq.FSets.FSetProperties.WProperties_fun.inter_subset_equal	40	2	search with cache (only 1: fsetdec).	0.120812177658	3
Coq.FSets.FSetProperties.WProperties_fun.inter_equal_1	40	0	search with cache (only 1: fsetdec).	0.267500162125	1
Coq.FSets.FSetProperties.WProperties_fun.inter_equal_2	40	0	search with cache (only 1: fsetdec).	0.283232927322	1
Coq.FSets.FSetProperties.WProperties_fun.inter_assoc	40	0	search with cache (only 1: fsetdec).	0.299299001694	1
Coq.FSets.FSetProperties.WProperties_fun.union_inter_1	40	0	search with cache (only 1: fsetdec).	0.549874067307	1
Coq.FSets.FSetProperties.WProperties_fun.union_inter_2	40	0	search with cache (only 1: fsetdec).	0.50907087326	1
Coq.FSets.FSetProperties.WProperties_fun.inter_add_1	40	2.1	search with cache (only 1: intros; only 1: fsetdec).	6.73350811005	470
Coq.FSets.FSetProperties.WProperties_fun.inter_add_2	40	0	search with cache (only 1: fsetdec).	0.34080696106	1
Coq.FSets.FSetProperties.WProperties_fun.empty_inter_1	40	0	search with cache (only 1: fsetdec).	0.118716001511	1
Coq.FSets.FSetProperties.WProperties_fun.empty_inter_2	40	0	search with cache (only 1: fsetdec).	0.112154006958	1
Coq.FSets.FSetProperties.WProperties_fun.inter_subset_1	40	1	search with cache (only 1: fsetdec).	0.0937359333038	2
Coq.FSets.FSetProperties.WProperties_fun.inter_subset_2	40	0	search with cache (only 1: fsetdec).	0.0926179885864	1
Coq.FSets.FSetProperties.WProperties_fun.inter_subset_3	40	2	search with cache (only 1: fsetdec).	0.10685300827	3
Coq.FSets.FSetProperties.WProperties_fun.empty_diff_1	40
Coq.FSets.FSetProperties.WProperties_fun.empty_diff_2	40	0	search with cache (only 1: fsetdec).	0.145169973373	1
Coq.FSets.FSetProperties.WProperties_fun.diff_subset	40	0	search with cache (only 1: fsetdec).	0.139365911484	1
Coq.FSets.FSetProperties.WProperties_fun.diff_subset_equal	40	0	search with cache (only 1: fsetdec).	0.261417865753	1
Coq.FSets.FSetProperties.WProperties_fun.remove_diff_singleton	40	0	search with cache (only 1: fsetdec).	0.355953931808	1
Coq.FSets.FSetProperties.WProperties_fun.diff_inter_empty	40	0	search with cache (only 1: fsetdec).	0.355349063873	1
Coq.FSets.FSetProperties.WProperties_fun.diff_inter_all	40	0	search with cache (only 1: fsetdec).	0.371753931046	1
Coq.FSets.FSetProperties.WProperties_fun.Add_add	40	4.1	search with cache (only 1: intro H; only 1: fsetdec).	0.289346933365	14
Coq.FSets.FSetProperties.WProperties_fun.Add_remove	40	0.0	search with cache (only 1: expAdd; only 1: fsetdec).	0.310281038284	2
Coq.FSets.FSetProperties.WProperties_fun.union_Add	40	0.0	search with cache (only 1: expAdd; only 1: fsetdec).	0.336083889008	2
Coq.FSets.FSetProperties.WProperties_fun.inter_Add	40	0.0	search with cache (only 1: expAdd; only 1: fsetdec).	0.570859193802	2
Coq.FSets.FSetProperties.WProperties_fun.union_Equal	40	0.0	search with cache (only 1: expAdd; only 1: fsetdec).	0.848163127899	2
Coq.FSets.FSetProperties.WProperties_fun.inter_Add_2	40	0.0	search with cache (only 1: expAdd; only 1: fsetdec).	0.439033031464	2
Coq.FSets.FSetProperties.WProperties_fun.elements_Empty	40
Coq.FSets.FSetProperties.WProperties_fun.elements_empty	40
Coq.FSets.FSetProperties.WProperties_fun.of_list_1	40
Coq.FSets.FSetProperties.WProperties_fun.of_list_2	40
Coq.FSets.FSetProperties.WProperties_fun.of_list_3	40
Coq.FSets.FSetProperties.WProperties_fun.fold_spec_right	40
Coq.FSets.FSetProperties.WProperties_fun.fold_rec	40
Coq.FSets.FSetProperties.WProperties_fun.fold_rec_bis	40
Coq.FSets.FSetProperties.WProperties_fun.fold_rec_nodep	40	1.1.1.0	search with cache (only 1: intros A P f i s Pempty Pstep; only 1: apply fold_rec; only 1: auto with *; only 1: auto with *).	1.20180892944	79
Coq.FSets.FSetProperties.WProperties_fun.fold_rec_weak	40
Coq.FSets.FSetProperties.WProperties_fun.fold_rel	40
Coq.FSets.FSetProperties.WProperties_fun.set_induction	40
Coq.FSets.FSetProperties.WProperties_fun.set_induction_bis	40
Coq.FSets.FSetProperties.WProperties_fun.fold_identity	40	2.0.0.0.1.0	search with cache (only 1: intros; only 1: apply fold_rec; only 1: auto with set; only 1: intros; only 1: rewrite Add_Equal in H1; only 1: fsetdec).	0.613903045654	34
Coq.FSets.FSetProperties.WProperties_fun.fold_0	40
Coq.FSets.FSetProperties.WProperties_fun.fold_1	40	9.1.4.1.2.0	search with cache (only 1: intros A P f i s Pempty Pstep; only 1: apply fold_rec; only 1: auto with *; only 1: intros; only 1: rewrite Add_Equal in H1; only 1: fsetdec).	25.8443012238	10506
Coq.FSets.FSetProperties.WProperties_fun.fold_2	40
Coq.FSets.FSetProperties.WProperties_fun.fold_1b	40	1.0.8.11.1.0	search with cache (only 1: intros; only 1: rewrite M.fold_1; only 1: split; only 1: auto with *; only 1: intro x; only 1: auto with *).	7.10128808022	2819
Coq.FSets.FSetProperties.WProperties_fun.fold_commutes	40
Coq.FSets.FSetProperties.WProperties_fun.fold_init	40
Coq.FSets.FSetProperties.WProperties_fun.fold_equal	40
Coq.FSets.FSetProperties.WProperties_fun.fold_empty	40	12.8.15.6	search with cache (only 1: intros; only 1: apply fold_1; only 1: auto with *; only 1: auto with *).	35.7534110546	17135
Coq.FSets.FSetProperties.WProperties_fun.fold_add	40	4.4.4.4.4.0.2	search with cache (only 1: intros; only 1: apply fold_2 with (eqA := eqA); only 1: auto with *; only 1: auto with *; only 1: auto with *; only 1: auto with *; only 1: auto with *).	34.5079050064	15021
Coq.FSets.FSetProperties.WProperties_fun.add_fold	40
Coq.FSets.FSetProperties.WProperties_fun.remove_fold_1	40	4.4.4.4.4.0.2	search with cache (only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto with *; only 1: auto with *; only 1: auto with *; only 1: auto with *; only 1: auto with *).	37.6236171722	16322
Coq.FSets.FSetProperties.WProperties_fun.remove_fold_2	40	0.11.0	search with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set).	3.28465509415	618
Coq.FSets.FSetProperties.WProperties_fun.fold_union_inter	40
Coq.FSets.FSetProperties.WProperties_fun.fold_diff_inter	40
Coq.FSets.FSetProperties.WProperties_fun.fold_union	40
Coq.FSets.FSetProperties.WProperties_fun.fold_plus	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_fold	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_0	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_1	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_2	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_Empty	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_inv_1	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_inv_2	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_inv_2b	40	0.0.3.0.0.0.0	search with cache (only 1: intros; only 1: rewrite M.cardinal_1 in H; only 1: generalize (elements_2 (s:=s)); only 1: destruct (elements s); only 1: intuition; only 1: exists e; only 1: auto).	0.379848957062	16
Coq.FSets.FSetProperties.WProperties_fun.Equal_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_m_Proper	40
Coq.FSets.FSetProperties.WProperties_fun.empty_cardinal	40	0.4	search with cache (only 1: apply cardinal_1; only 1: auto with set).	0.0794429779053	6
Coq.FSets.FSetProperties.WProperties_fun.singleton_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.diff_inter_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.union_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.subset_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.subset_cardinal_lt	40
Coq.FSets.FSetProperties.WProperties_fun.union_inter_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.union_cardinal_inter	40
Coq.FSets.FSetProperties.WProperties_fun.union_cardinal_le	40	4.4.3	search with cache (only 1: intros; only 1: rewrite <- union_inter_cardinal; only 1: auto with arith).	0.995406150818	115
Coq.FSets.FSetProperties.WProperties_fun.add_cardinal_1	40	4.4	search with cache (only 1: intro; only 1: intuition).	0.420016050339	39
Coq.FSets.FSetProperties.WProperties_fun.add_cardinal_2	40	0.10.0.2	search with cache (only 1: intros; only 1: apply cardinal_2 with x; only 1: auto with *; only 1: auto with set).	3.38359689713	837
Coq.FSets.FSetProperties.WProperties_fun.remove_cardinal_1	40	0.0.0.0.5.3	search with cache (only 1: intros; only 1: rewrite (cardinal_2 (s:=remove x s) (s':=s) (x:=x)); only 1: eauto with set; only 1: auto with set; only 1: expAdd; only 1: fsetdec).	1.30532288551	150
Coq.FSets.FSetProperties.WProperties_fun.remove_cardinal_2	40	6	search with cache (only 1: auto with set fset).	0.396704912186	44
Coq.FSets.FSetProperties.OrdProperties.sort_equivlistA_eqlistA	40
Coq.FSets.FSetProperties.OrdProperties.gtb_1	40
Coq.FSets.FSetProperties.OrdProperties.leb_1	40
Coq.FSets.FSetProperties.OrdProperties.gtb_compat	40
Coq.FSets.FSetProperties.OrdProperties.leb_compat	40
Coq.FSets.FSetProperties.OrdProperties.elements_split	40
Coq.FSets.FSetProperties.OrdProperties.elements_Add	40
Coq.FSets.FSetProperties.OrdProperties.elements_Add_Above	40
Coq.FSets.FSetProperties.OrdProperties.elements_Add_Below	40
Coq.FSets.FSetProperties.OrdProperties.set_induction_max	40
Coq.FSets.FSetProperties.OrdProperties.set_induction_min	40
Coq.FSets.FSetProperties.OrdProperties.fold_3	40
Coq.FSets.FSetProperties.OrdProperties.fold_4	40
Coq.FSets.FSetProperties.OrdProperties.fold_equal	40
Coq.FSets.FSetProperties.OrdProperties.add_fold	40	0.1.0	search with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).	0.165096998215	4
Coq.FSets.FSetProperties.OrdProperties.remove_fold_2	40	0.0.0	search with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).	0.145382165909	3
Coq.FSets.FSetProperties.OrdProperties.choose_equal	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.In_In	40	0	search with cache (only 1: tauto).	0.0632970333099	1
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Subset_Included	40	0.1	search with cache (only 1: compute; only 1: tauto).	0.0747258663177	3
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Equal_Same_set	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.empty_Empty_Set	40	5.0.1.0.2	search with cache (only 1: unfold Subset, Included, Same_set, In, mkEns; only 1: intuition; only 1: unfold Subset, Included, In, mkEns; only 1: intro x; only 1: Dec.fsetdec).	0.745219945908	201
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Empty_Empty_set	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.singleton_Singleton	40	0.2.0	search with cache (only 1: intros; only 1: unfold Subset, Included, Same_set, In, mkEns; only 1: intuition).	0.150638103485	5
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.union_Union	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.inter_Intersection	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.add_Add	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Add_Add	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.remove_Subtract	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.mkEns_Finite	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.mkEns_cardinal	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Ens_to_FSet	40
Coq.FSets.FSetCompat.Backport_Sets.lt_not_eq	40
Coq.FSets.FSetCompat.Backport_Sets.compare	40
Coq.FSets.FSetCompat.Update_WSets.In_compat	40	1.13.3	search with cache (only 1: simpl_relation; only 1: rewrite H; only 1: intuition).	9.19947099686	3756
Coq.FSets.FSetCompat.Update_WSets.mem_spec	40
Coq.FSets.FSetCompat.Update_WSets.equal_spec	40
Coq.FSets.FSetCompat.Update_WSets.subset_spec	40
Coq.FSets.FSetCompat.Update_WSets.is_empty_spec	40
Coq.FSets.FSetCompat.Update_WSets.add_spec	40
Coq.FSets.FSetCompat.Update_WSets.remove_spec	40
Coq.FSets.FSetCompat.Update_WSets.singleton_spec	40
Coq.FSets.FSetCompat.Update_WSets.elements_spec1	40
Coq.FSets.FSetCompat.Update_WSets.for_all_spec	40
Coq.FSets.FSetCompat.Update_WSets.exists_spec	40
Coq.FSets.FSetCompat.Update_Sets.lt_strorder	40
Coq.FSets.FSetCompat.Update_Sets.lt_compat	40
Coq.FSets.FSetCompat.Update_Sets.compare_spec	40
Coq.FSets.FSetDecide.WDecide_fun.FSetLogicalFacts.test_push	40	0	search with cache (only 1: auto).	0.0643858909607	1
Coq.FSets.FSetDecide.WDecide_fun.FSetLogicalFacts.test_pull	40	0.0.0	search with cache (only 1: intros; only 1: push not in *; only 1: tauto).	0.391097784042	3
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideAuxiliary.eq_refl_iff	40	3	search with cache (only 1: intuition).	0.170724868774	13
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideAuxiliary.dec_In	40
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideAuxiliary.dec_eq	40
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_trans_1	40
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_trans_2	40	5	search with cache (only 1: fsetdec).	0.611137866974	37
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_neq_trans_1	40	1	search with cache (only 1: fsetdec).	0.310147047043	14
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_neq_trans_2	40	0	search with cache (only 1: fsetdec).	0.392508029938	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_In_singleton	40	0	search with cache (only 1: fsetdec).	0.0758910179138	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_add_In	40	1	search with cache (only 1: fsetdec).	0.106976032257	2
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_Subset_add_remove	40	0.0	search with cache (only 1: unfold Subset; only 1: fsetdec).	0.115485906601	2
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_disjunction	40	0	search with cache (only 1: fsetdec).	0.149496793747	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_not_In_disj	40	0	search with cache (only 1: fsetdec).	0.310531139374	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_not_In_conj	40	0	search with cache (only 1: fsetdec).	0.313679933548	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_iff_conj	40	0	search with cache (only 1: fsetdec).	0.197807073593	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_set_ops_1	40	0	search with cache (only 1: fsetdec).	0.325192213058	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.eq_chain_test	40	0	search with cache (only 1: fsetdec).	0.432729005814	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_too_complex	40	4.1	search with cache (only 1: unfold Subset; only 1: intuition).	0.182279109955	7
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.function_test_1	40	7	search with cache (only 1: fsetdec).	0.677402973175	44
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.function_test_2	40	0	search with cache (only 1: fsetdec).	0.175724029541	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_baydemir	40	0	search with cache (only 1: fsetdec).	0.176316022873	1
Coq.FSets.FMapFacts.WFacts_fun.eq_bool_alt	40
Coq.FSets.FMapFacts.WFacts_fun.eq_option_alt	40
Coq.FSets.FMapFacts.WFacts_fun.MapsTo_fun	40
Coq.FSets.FMapFacts.WFacts_fun.In_iff	40
Coq.FSets.FMapFacts.WFacts_fun.MapsTo_iff	40	2.7.0.7.0	search with cache (only 1: split; only 1: intros; only 1: apply (MapsTo_1 H H0); only 1: intros; only 1: apply (MapsTo_1 (E.eq_sym H) H0)).	0.802663803101	571
Coq.FSets.FMapFacts.WFacts_fun.mem_in_iff	40	19	search with cache (only 1: intuition).	1.77213406563	1615
Coq.FSets.FMapFacts.WFacts_fun.not_mem_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.In_dec	40
Coq.FSets.FMapFacts.WFacts_fun.find_mapsto_iff	40	18	search with cache (only 1: intuition).	0.972763061523	507
Coq.FSets.FMapFacts.WFacts_fun.not_find_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.in_find_iff	40
Coq.FSets.FMapFacts.WFacts_fun.equal_iff	40
Coq.FSets.FMapFacts.WFacts_fun.empty_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.empty_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.is_empty_iff	40	1.1.0	search with cache (only 1: split; only 1: intuition; only 1: intuition).	0.146675109863	5
Coq.FSets.FMapFacts.WFacts_fun.add_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.add_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.add_neq_mapsto_iff	40	3.1.4.0.0	search with cache (only 1: intros; only 1: intuition; only 1: apply add_3 with x e; only 1: auto; only 1: auto).	2.15431499481	407
Coq.FSets.FMapFacts.WFacts_fun.add_neq_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.remove_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.remove_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.remove_neq_mapsto_iff	40	10.9.9	search with cache (only 1: intuition; only 1: apply remove_3 with x; only 1: auto).	18.3107030392	14266
Coq.FSets.FMapFacts.WFacts_fun.remove_neq_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.elements_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.elements_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.map_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.map_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.mapi_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.mapi_inv	40
Coq.FSets.FMapFacts.WFacts_fun.mapi_1bis	40
Coq.FSets.FMapFacts.WFacts_fun.mapi_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.mem_find_b	40
Coq.FSets.FMapFacts.WFacts_fun.mem_b	40
Coq.FSets.FMapFacts.WFacts_fun.find_o	40
Coq.FSets.FMapFacts.WFacts_fun.empty_o	40
Coq.FSets.FMapFacts.WFacts_fun.empty_a	40
Coq.FSets.FMapFacts.WFacts_fun.add_eq_o	40	2.1	search with cache (only 1: intros; only 1: auto with map).	0.107084035873	5
Coq.FSets.FMapFacts.WFacts_fun.add_neq_o	40	2.1.3.4.0.6.2.1	search with cache (only 1: intros; only 1: rewrite eq_option_alt; only 1: repeat split; only 1: rewrite <- 2!find_mapsto_iff; only 1: apply add_3; only 1: intro H1; only 1: auto; only 1: auto with map).	8.31984591484	3219
Coq.FSets.FMapFacts.WFacts_fun.add_o	40
Coq.FSets.FMapFacts.WFacts_fun.add_eq_b	40
Coq.FSets.FMapFacts.WFacts_fun.add_neq_b	40
Coq.FSets.FMapFacts.WFacts_fun.add_b	40
Coq.FSets.FMapFacts.WFacts_fun.remove_eq_o	40
Coq.FSets.FMapFacts.WFacts_fun.remove_neq_o	40	0.0.0.2.0	search with cache (only 1: intros; only 1: rewrite eq_option_alt; only 1: intro e; only 1: rewrite <- find_mapsto_iff, remove_mapsto_iff; only 1: now intuition).	0.170506000519	7
Coq.FSets.FMapFacts.WFacts_fun.remove_o	40	0.0.0.0.0.0.1.4.0	search with cache (only 1: intros; only 1: rewrite eq_option_alt; only 1: intro e; only 1: destruct (eq_dec x y); only 1: rewrite <- find_mapsto_iff, remove_mapsto_iff; only 1: now intuition; only 1: rewrite <- find_mapsto_iff, remove_neq_mapsto_iff; only 1: now intuition; only 1: auto with map).	2.26033306122	428
Coq.FSets.FMapFacts.WFacts_fun.remove_eq_b	40
Coq.FSets.FMapFacts.WFacts_fun.remove_neq_b	40
Coq.FSets.FMapFacts.WFacts_fun.remove_b	40	0.2.0.0.2.1.0.2.0.0	search with cache (only 1: intros; only 1: do 2 rewrite mem_find_b; only 1: unfold eqb; only 1: destruct (eq_dec x y); only 1: rewrite remove_eq_o; only 1: auto; only 1: auto with map; only 1: rewrite remove_neq_o; only 1: auto; only 1: auto with map).	26.1842901707	5935
Coq.FSets.FMapFacts.WFacts_fun.map_o	40
Coq.FSets.FMapFacts.WFacts_fun.map_b	40
Coq.FSets.FMapFacts.WFacts_fun.mapi_b	40
Coq.FSets.FMapFacts.WFacts_fun.mapi_o	40
Coq.FSets.FMapFacts.WFacts_fun.map2_1bis	40
Coq.FSets.FMapFacts.WFacts_fun.elements_o	40
Coq.FSets.FMapFacts.WFacts_fun.elements_b	40
Coq.FSets.FMapFacts.WFacts_fun.Equal_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.Equal_Equiv	40
Coq.FSets.FMapFacts.WFacts_fun.Equiv_Equivb	40
Coq.FSets.FMapFacts.WFacts_fun.Equal_Equivb	40
Coq.FSets.FMapFacts.WFacts_fun.Equal_Equivb_eqdec	40
Coq.FSets.FMapFacts.WFacts_fun.Equal_refl	40	0.4.0	search with cache (only 1: intros; only 1: intros Hiff; only 1: auto with map).	0.19082903862	22
Coq.FSets.FMapFacts.WFacts_fun.Equal_sym	40	3.1.0	search with cache (only 1: red; only 1: intros; only 1: auto with map).	0.115504026413	7
Coq.FSets.FMapFacts.WFacts_fun.Equal_trans	40	1.6.2.0	search with cache (only 1: unfold Equal; only 1: intros; only 1: rewrite <- H0; only 1: auto with map).	1.33161997795	354
Coq.FSets.FMapFacts.WFacts_fun.Equal_ST	40	2.0	search with cache (only 1: unfold Equal; only 1: auto).	0.076514005661	4
Coq.FSets.FMapFacts.WFacts_fun.In_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.MapsTo_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.Empty_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.is_empty_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.mem_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.find_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.add_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.remove_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.map_m_Proper	40
Coq.FSets.FMapFacts.WProperties_fun.eqk_equiv	40
Coq.FSets.FMapFacts.WProperties_fun.eqke_equiv	40
Coq.FSets.FMapFacts.WProperties_fun.InA_eqke_eqk	40
Coq.FSets.FMapFacts.WProperties_fun.NoDupA_eqk_eqke	40
Coq.FSets.FMapFacts.WProperties_fun.findA_rev	40
Coq.FSets.FMapFacts.WProperties_fun.elements_Empty	40
Coq.FSets.FMapFacts.WProperties_fun.elements_empty	40
Coq.FSets.FMapFacts.WProperties_fun.of_list_1	40
Coq.FSets.FMapFacts.WProperties_fun.of_list_1b	40
Coq.FSets.FMapFacts.WProperties_fun.of_list_2	40
Coq.FSets.FMapFacts.WProperties_fun.of_list_3	40
Coq.FSets.FMapFacts.WProperties_fun.fold_spec_right	40
Coq.FSets.FMapFacts.WProperties_fun.fold_rec	40
Coq.FSets.FMapFacts.WProperties_fun.fold_rec_bis	40
Coq.FSets.FMapFacts.WProperties_fun.fold_rec_nodep	40	1.1.1.1	search with cache (only 1: intros A P f i m Hempty Hstep; only 1: apply fold_rec; only 1: auto with *; only 1: auto with *).	1.05063700676	51
Coq.FSets.FMapFacts.WProperties_fun.fold_rec_weak	40
Coq.FSets.FMapFacts.WProperties_fun.fold_rel	40
Coq.FSets.FMapFacts.WProperties_fun.map_induction	40
Coq.FSets.FMapFacts.WProperties_fun.map_induction_bis	40
Coq.FSets.FMapFacts.WProperties_fun.fold_identity	40
Coq.FSets.FMapFacts.WProperties_fun.fold_init	40
Coq.FSets.FMapFacts.WProperties_fun.fold_Empty	40
Coq.FSets.FMapFacts.WProperties_fun.fold_commutes	40
Coq.FSets.FMapFacts.WProperties_fun.fold_Equal	40
Coq.FSets.FMapFacts.WProperties_fun.fold_Equal2	40
Coq.FSets.FMapFacts.WProperties_fun.fold_Add	40
Coq.FSets.FMapFacts.WProperties_fun.fold_add	40
Coq.FSets.FMapFacts.WProperties_fun.cardinal_fold	40
Coq.FSets.FMapFacts.WProperties_fun.cardinal_Empty	40
Coq.FSets.FMapFacts.WProperties_fun.Equal_cardinal	40
Coq.FSets.FMapFacts.WProperties_fun.cardinal_1	40
Coq.FSets.FMapFacts.WProperties_fun.cardinal_2	40
Coq.FSets.FMapFacts.WProperties_fun.cardinal_inv_1	40	2.1.21	search with cache (only 1: intros k; only 1: rewrite <- cardinal_Empty; only 1: auto with *).	6.21053004265	2012
Coq.FSets.FMapFacts.WProperties_fun.cardinal_inv_2	40
Coq.FSets.FMapFacts.WProperties_fun.cardinal_inv_2b	40
Coq.FSets.FMapFacts.WProperties_fun.filter_iff	40
Coq.FSets.FMapFacts.WProperties_fun.for_all_iff	40
Coq.FSets.FMapFacts.WProperties_fun.exists_iff	40
Coq.FSets.FMapFacts.WProperties_fun.Disjoint_alt	40
Coq.FSets.FMapFacts.WProperties_fun.partition_iff_1	40
Coq.FSets.FMapFacts.WProperties_fun.partition_iff_2	40
Coq.FSets.FMapFacts.WProperties_fun.partition_Partition	40
Coq.FSets.FMapFacts.WProperties_fun.Partition_In	40
Coq.FSets.FMapFacts.WProperties_fun.Disjoint_sym	40	10.10.0	search with cache (only 1: unfold Disjoint; only 1: intuition; only 1: intuition eauto).	1.86856389046	749
Coq.FSets.FMapFacts.WProperties_fun.Partition_sym	40
Coq.FSets.FMapFacts.WProperties_fun.Partition_Empty	40
Coq.FSets.FMapFacts.WProperties_fun.Partition_Add	40
Coq.FSets.FMapFacts.WProperties_fun.Partition_fold	40
Coq.FSets.FMapFacts.WProperties_fun.Partition_cardinal	40
Coq.FSets.FMapFacts.WProperties_fun.Partition_partition	40
Coq.FSets.FMapFacts.WProperties_fun.update_mapsto_iff	40
Coq.FSets.FMapFacts.WProperties_fun.update_dec	40
Coq.FSets.FMapFacts.WProperties_fun.update_in_iff	40
Coq.FSets.FMapFacts.WProperties_fun.diff_mapsto_iff	40
Coq.FSets.FMapFacts.WProperties_fun.diff_in_iff	40
Coq.FSets.FMapFacts.WProperties_fun.restrict_mapsto_iff	40
Coq.FSets.FMapFacts.WProperties_fun.restrict_in_iff	40
Coq.FSets.FMapFacts.WProperties_fun.cardinal_m_Proper	40	0.0.0.0.0.1.0.0.0	search with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: apply fold_Equal with (eqA := eq); only 1: auto; only 1: compute; only 1: auto; only 1: compute; only 1: auto; only 1: auto).	0.0978901386261	10
Coq.FSets.FMapFacts.WProperties_fun.Disjoint_m_Proper	40
Coq.FSets.FMapFacts.WProperties_fun.Partition_m_Proper	40
Coq.FSets.FMapFacts.WProperties_fun.update_m_Proper	40
Coq.FSets.FMapFacts.WProperties_fun.restrict_m_Proper	40
Coq.FSets.FMapFacts.WProperties_fun.diff_m_Proper	40
Coq.FSets.FMapFacts.OrdProperties.sort_equivlistA_eqlistA	40
Coq.FSets.FMapFacts.OrdProperties.gtb_1	40
Coq.FSets.FMapFacts.OrdProperties.leb_1	40
Coq.FSets.FMapFacts.OrdProperties.gtb_compat	40
Coq.FSets.FMapFacts.OrdProperties.leb_compat	40
Coq.FSets.FMapFacts.OrdProperties.elements_split	40
Coq.FSets.FMapFacts.OrdProperties.elements_Add	40
Coq.FSets.FMapFacts.OrdProperties.elements_Add_Above	40
Coq.FSets.FMapFacts.OrdProperties.elements_Add_Below	40
Coq.FSets.FMapFacts.OrdProperties.elements_Equal_eqlistA	40
Coq.FSets.FMapFacts.OrdProperties.max_elt_Above	40
Coq.FSets.FMapFacts.OrdProperties.max_elt_MapsTo	40
Coq.FSets.FMapFacts.OrdProperties.max_elt_Empty	40
Coq.FSets.FMapFacts.OrdProperties.min_elt_Below	40
Coq.FSets.FMapFacts.OrdProperties.min_elt_MapsTo	40
Coq.FSets.FMapFacts.OrdProperties.min_elt_Empty	40
Coq.FSets.FMapFacts.OrdProperties.map_induction_max	40
Coq.FSets.FMapFacts.OrdProperties.map_induction_min	40
Coq.FSets.FMapFacts.OrdProperties.fold_Equal	40
Coq.FSets.FMapFacts.OrdProperties.fold_Add_Above	40
Coq.FSets.FMapFacts.OrdProperties.fold_Add_Below	40
Coq.FSets.FSetFacts.WFacts_fun.In_eq_iff	40
Coq.FSets.FSetFacts.WFacts_fun.mem_iff	40	6	search with cache (only 1: intuition).	0.196492910385	31
Coq.FSets.FSetFacts.WFacts_fun.not_mem_iff	40	10.56	search with cache (only 1: Ndec.eqb2eq; only 1: intuition).	13.2576069832	21527
Coq.FSets.FSetFacts.WFacts_fun.equal_iff	40	3.3.1	search with cache (only 1: destruct (mem x s); only 1: intuition; only 1: intuition).	0.401313066483	70
Coq.FSets.FSetFacts.WFacts_fun.subset_iff	40	5	search with cache (only 1: intuition).	0.316102027893	59
Coq.FSets.FSetFacts.WFacts_fun.empty_iff	40
Coq.FSets.FSetFacts.WFacts_fun.is_empty_iff	40	3.3.1	search with cache (only 1: destruct (mem x s); only 1: intuition; only 1: intuition).	0.389751911163	58
Coq.FSets.FSetFacts.WFacts_fun.singleton_iff	40	3	search with cache (only 1: intuition).	0.0793681144714	17
Coq.FSets.FSetFacts.WFacts_fun.add_iff	40
Coq.FSets.FSetFacts.WFacts_fun.add_neq_iff	40
Coq.FSets.FSetFacts.WFacts_fun.remove_iff	40
Coq.FSets.FSetFacts.WFacts_fun.remove_neq_iff	40	7.0.2.6.4.0	search with cache (only 1: split; only 1: intro; only 1: apply remove_3 with x; only 1: auto; only 1: apply remove_2; only 1: auto).	3.23301887512	2407
Coq.FSets.FSetFacts.WFacts_fun.union_iff	40	7	search with cache (only 1: intuition).	0.410413980484	93
Coq.FSets.FSetFacts.WFacts_fun.inter_iff	40
Coq.FSets.FSetFacts.WFacts_fun.diff_iff	40
Coq.FSets.FSetFacts.WFacts_fun.filter_iff	40
Coq.FSets.FSetFacts.WFacts_fun.for_all_iff	40	7	search with cache (only 1: intuition).	0.133982896805	22
Coq.FSets.FSetFacts.WFacts_fun.exists_iff	40	9	search with cache (only 1: intuition).	0.161380052567	23
Coq.FSets.FSetFacts.WFacts_fun.elements_iff	40	8	search with cache (only 1: intuition).	0.145658016205	24
Coq.FSets.FSetFacts.WFacts_fun.mem_b	40
Coq.FSets.FSetFacts.WFacts_fun.empty_b	40
Coq.FSets.FSetFacts.WFacts_fun.add_b	40
Coq.FSets.FSetFacts.WFacts_fun.add_neq_b	40
Coq.FSets.FSetFacts.WFacts_fun.remove_b	40
Coq.FSets.FSetFacts.WFacts_fun.remove_neq_b	40	0.0.0.4.1.4	search with cache (only 1: generalize (mem_iff (remove x s) y), (mem_iff s y), (remove_iff s x y); only 1: destruct (mem y s); only 1: intuition; only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition).	24.0510628223	3991
Coq.FSets.FSetFacts.WFacts_fun.singleton_b	40
Coq.FSets.FSetFacts.WFacts_fun.union_b	40
Coq.FSets.FSetFacts.WFacts_fun.inter_b	40
Coq.FSets.FSetFacts.WFacts_fun.diff_b	40
Coq.FSets.FSetFacts.WFacts_fun.elements_b	40
Coq.FSets.FSetFacts.WFacts_fun.filter_b	40
Coq.FSets.FSetFacts.WFacts_fun.for_all_b	40
Coq.FSets.FSetFacts.WFacts_fun.exists_b	40
Coq.FSets.FSetFacts.WFacts_fun.E_ST	40	46.23.23.47	search with cache (only 1: split; only 1: intuition; only 1: intuition; only 1: eauto).	8.38184189796	22673
Coq.FSets.FSetFacts.WFacts_fun.Equal_ST	40
Coq.FSets.FSetFacts.WFacts_fun.In_m	40
Coq.FSets.FSetFacts.WFacts_fun.is_empty_m	40
Coq.FSets.FSetFacts.WFacts_fun.Empty_m	40
Coq.FSets.FSetFacts.WFacts_fun.mem_m	40
Coq.FSets.FSetFacts.WFacts_fun.singleton_m	40
Coq.FSets.FSetFacts.WFacts_fun.add_m	40
Coq.FSets.FSetFacts.WFacts_fun.remove_m	40
Coq.FSets.FSetFacts.WFacts_fun.union_m	40
Coq.FSets.FSetFacts.WFacts_fun.inter_m	40
Coq.FSets.FSetFacts.WFacts_fun.diff_m	40
Coq.FSets.FSetFacts.WFacts_fun.Subset_m	40
Coq.FSets.FSetFacts.WFacts_fun.subset_m	40
Coq.FSets.FSetFacts.WFacts_fun.equal_m	40
Coq.FSets.FSetFacts.WFacts_fun.Subset_refl	40	3.10.7	search with cache (only 1: unfold Equal, Subset; only 1: intros; only 1: intuition).	1.9992249012	1373
Coq.FSets.FSetFacts.WFacts_fun.Subset_trans	40	1.10.0	search with cache (only 1: red; only 1: intros x y H s s' H0 a; only 1: intuition).	0.628319978714	195
Coq.FSets.FSetFacts.WFacts_fun.In_s_m	40
Coq.FSets.FSetFacts.WFacts_fun.Empty_s_m_Proper	40	1.6.14.0	search with cache (only 1: intros; only 1: red; only 1: unfold Empty; only 1: eauto with set).	22.1292459965	10069
Coq.FSets.FSetFacts.WFacts_fun.add_s_m_Proper	40	0.2.0.4.0	search with cache (only 1: unfold Subset; only 1: intros x y H s s' H0 a; only 1: do 2 rewrite add_iff; only 1: rewrite H; only 1: intuition).	0.735234022141	76
Coq.FSets.FSetFacts.WFacts_fun.remove_s_m_Proper	40	0.2.0.1.0	search with cache (only 1: unfold Subset; only 1: intros x y H s s' H0 a; only 1: do 2 rewrite remove_iff; only 1: rewrite H; only 1: intuition).	0.314517021179	13
Coq.FSets.FSetFacts.WFacts_fun.union_s_m_Proper	40	0.0.4	search with cache (only 1: intros s s' H s'' s''' H0 a; only 1: do 2 rewrite union_iff; only 1: intuition).	0.644429922104	57
Coq.FSets.FSetFacts.WFacts_fun.inter_s_m_Proper	40	0.3.0	search with cache (only 1: unfold Subset; only 1: intuition; only 1: eauto with set).	0.125507116318	6
Coq.FSets.FSetFacts.WFacts_fun.diff_s_m_Proper	40	0.0.4.1	search with cache (only 1: red; only 1: intros s s' H s'' s''' H0 a; only 1: do 2 rewrite diff_iff; only 1: intuition).	0.299168109894	33
Coq.FSets.FSetFacts.WFacts_fun.filter_equal	40
Coq.FSets.FSetFacts.WFacts_fun.filter_ext	40
Coq.FSets.FSetFacts.WFacts_fun.filter_subset	40
Coq.FSets.FMapAVL.Raw.Proofs.MapsTo_In	40
Coq.FSets.FMapAVL.Raw.Proofs.In_MapsTo	40
Coq.FSets.FMapAVL.Raw.Proofs.In_alt	40
Coq.FSets.FMapAVL.Raw.Proofs.MapsTo_1	40
Coq.FSets.FMapAVL.Raw.Proofs.In_1	40	0.0.0.0.0.10	search with cache (only 1: induction m; only 1: intuition_in; only 1: intuition_in; only 1: eauto with ordered_type; only 1: eauto with ordered_type; only 1: eauto with ordered_type).	2.25125408173	132
Coq.FSets.FMapAVL.Raw.Proofs.In_node_iff	40	0	search with cache (only 1: intuition_in).	0.0977780818939	1
Coq.FSets.FMapAVL.Raw.Proofs.lt_leaf	40	0.27	search with cache (only 1: red; only 1: intuition_in).	0.603981971741	760
Coq.FSets.FMapAVL.Raw.Proofs.gt_leaf	40	0.0.29	search with cache (only 1: red; only 1: intros; only 1: intuition_in).	1.17643880844	1381
Coq.FSets.FMapAVL.Raw.Proofs.lt_tree_node	40	5.0.1	search with cache (only 1: unfold lt_tree; only 1: intuition_in; only 1: eauto with ordered_type).	0.269443035126	20
Coq.FSets.FMapAVL.Raw.Proofs.gt_tree_node	40	0.0.2	search with cache (only 1: unfold gt_tree; only 1: intuition_in; only 1: order).	0.462808132172	13
Coq.FSets.FMapAVL.Raw.Proofs.lt_left	40	0.0	search with cache (only 1: unfold lt_tree in *; only 1: intuition_in).	0.0988399982452	2
Coq.FSets.FMapAVL.Raw.Proofs.lt_right	40	0	search with cache (only 1: intuition_in).	0.0698909759521	1
Coq.FSets.FMapAVL.Raw.Proofs.gt_left	40	0.0	search with cache (only 1: unfold gt_tree in *; only 1: intuition_in).	0.0914289951324	2
Coq.FSets.FMapAVL.Raw.Proofs.gt_right	40	0	search with cache (only 1: intuition_in).	0.0664927959442	1
Coq.FSets.FMapAVL.Raw.Proofs.lt_tree_not_in	40	7.0.0.1	search with cache (only 1: intuition_in; only 1: induction m; only 1: intuition_in; only 1: order).	5.5231821537	267
Coq.FSets.FMapAVL.Raw.Proofs.lt_tree_trans	40	0.2.2.1	search with cache (only 1: intros; only 1: intro; only 1: intro; only 1: order).	0.295470952988	33
Coq.FSets.FMapAVL.Raw.Proofs.gt_tree_not_in	40	0.0.0	search with cache (only 1: intros; only 1: intro; only 1: order).	0.0814430713654	3
Coq.FSets.FMapAVL.Raw.Proofs.gt_tree_trans	40	0.2.2.1	search with cache (only 1: intros; only 1: intro; only 1: intro; only 1: order).	0.400055170059	33
Coq.FSets.FMapAVL.Raw.Proofs.empty_bst	40	18	search with cache (only 1: trivial).	0.333864927292	145
Coq.FSets.FMapAVL.Raw.Proofs.empty_1	40	0.19.0	search with cache (only 1: unfold empty; only 1: intros m x f; only 1: intuition_in).	0.889935970306	403
Coq.FSets.FMapAVL.Raw.Proofs.is_empty_1	40
Coq.FSets.FMapAVL.Raw.Proofs.is_empty_2	40	1.0.10.12	search with cache (only 1: intros m x y; only 1: induction m; only 1: intuition_in; only 1: intuition_in).	12.4800231457	5374
Coq.FSets.FMapAVL.Raw.Proofs.mem_1	40
Coq.FSets.FMapAVL.Raw.Proofs.mem_2	40	2.0.2.13.0.0	search with cache (only 1: intros m x; only 1: functional induction mem x m; only 1: discriminate; only 1: auto; only 1: auto; only 1: auto).	6.45093607903	3104
Coq.FSets.FMapAVL.Raw.Proofs.find_1	40
Coq.FSets.FMapAVL.Raw.Proofs.find_2	40
Coq.FSets.FMapAVL.Raw.Proofs.find_iff	40
Coq.FSets.FMapAVL.Raw.Proofs.find_in	40	3.3.3.5.0.0	search with cache (only 1: intros m x; only 1: functional induction find x m; only 1: intuition_in; only 1: auto; only 1: auto; only 1: auto).	20.2653460503	2720
Coq.FSets.FMapAVL.Raw.Proofs.in_find	40
Coq.FSets.FMapAVL.Raw.Proofs.find_in_iff	40
Coq.FSets.FMapAVL.Raw.Proofs.not_find_iff	40
Coq.FSets.FMapAVL.Raw.Proofs.find_find	40
Coq.FSets.FMapAVL.Raw.Proofs.find_mapsto_equiv	40
Coq.FSets.FMapAVL.Raw.Proofs.find_in_equiv	40
Coq.FSets.FMapAVL.Raw.Proofs.create_bst	40	1.1.1.1.18.0	search with cache (only 1: intuition_in; only 1: constructor 2; only 1: intuition_in; only 1: intuition_in; only 1: intuition_in; only 1: intuition_in).	24.7140831947	7027
Coq.FSets.FMapAVL.Raw.Proofs.create_in	40	1.1	search with cache (only 1: unfold create; only 1: intuition_in).	0.252345085144	13
Coq.FSets.FMapAVL.Raw.Proofs.bal_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.bal_in	40
Coq.FSets.FMapAVL.Raw.Proofs.bal_mapsto	40
Coq.FSets.FMapAVL.Raw.Proofs.bal_find	40
Coq.FSets.FMapAVL.Raw.Proofs.add_in	40
Coq.FSets.FMapAVL.Raw.Proofs.add_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.add_1	40
Coq.FSets.FMapAVL.Raw.Proofs.add_2	40
Coq.FSets.FMapAVL.Raw.Proofs.add_3	40
Coq.FSets.FMapAVL.Raw.Proofs.add_find	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_min_in	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_min_mapsto	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_min_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_min_gt_tree	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_min_find	40
Coq.FSets.FMapAVL.Raw.Proofs.merge_in	40
Coq.FSets.FMapAVL.Raw.Proofs.merge_mapsto	40
Coq.FSets.FMapAVL.Raw.Proofs.merge_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_in	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_1	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_2	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_3	40
Coq.FSets.FMapAVL.Raw.Proofs.join_in	40
Coq.FSets.FMapAVL.Raw.Proofs.join_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.join_find	40
Coq.FSets.FMapAVL.Raw.Proofs.split_in_1	40
Coq.FSets.FMapAVL.Raw.Proofs.split_in_2	40
Coq.FSets.FMapAVL.Raw.Proofs.split_in_3	40
Coq.FSets.FMapAVL.Raw.Proofs.split_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.split_lt_tree	40
Coq.FSets.FMapAVL.Raw.Proofs.split_gt_tree	40
Coq.FSets.FMapAVL.Raw.Proofs.split_find	40
Coq.FSets.FMapAVL.Raw.Proofs.concat_in	40
Coq.FSets.FMapAVL.Raw.Proofs.concat_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.concat_find	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_aux_mapsto	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_mapsto	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_in	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_aux_sort	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_sort	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_nodup	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_aux_cardinal	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_cardinal	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_app	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_node	40
Coq.FSets.FMapAVL.Raw.Proofs.fold_equiv_aux	40
Coq.FSets.FMapAVL.Raw.Proofs.fold_equiv	40
Coq.FSets.FMapAVL.Raw.Proofs.fold_1	40
Coq.FSets.FMapAVL.Raw.Proofs.flatten_e_elements	40	0.1.2.0.0	search with cache (only 1: unfold elements; only 1: simpl; only 1: intros; only 1: rewrite !elements_app, !app_nil_r, !app_assoc_reverse; only 1: auto).	0.0990190505981	8
Coq.FSets.FMapAVL.Raw.Proofs.cons_1	40
Coq.FSets.FMapAVL.Raw.Proofs.cons_IfEq	40
Coq.FSets.FMapAVL.Raw.Proofs.equal_end_IfEq	40
Coq.FSets.FMapAVL.Raw.Proofs.equal_more_IfEq	40
Coq.FSets.FMapAVL.Raw.Proofs.equal_cont_IfEq	40
Coq.FSets.FMapAVL.Raw.Proofs.equal_IfEq	40
Coq.FSets.FMapAVL.Raw.Proofs.Equivb_elements	40
Coq.FSets.FMapAVL.Raw.Proofs.equal_Equivb	40
Coq.FSets.FMapAVL.Raw.Proofs.map_1	40
Coq.FSets.FMapAVL.Raw.Proofs.map_2	40	2.2.2.0.0.0.0.0	search with cache (only 1: induction m; only 1: simpl; only 1: inversion_clear 1; only 1: simpl; only 1: inversion_clear 1; only 1: auto; only 1: auto; only 1: auto).	4.33861088753	797
Coq.FSets.FMapAVL.Raw.Proofs.map_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.mapi_1	40
Coq.FSets.FMapAVL.Raw.Proofs.mapi_2	40	2.2.2.0.0.0.0.0	search with cache (only 1: induction m; only 1: simpl; only 1: inversion_clear 1; only 1: simpl; only 1: inversion_clear 1; only 1: auto; only 1: auto; only 1: auto).	2.72854018211	534
Coq.FSets.FMapAVL.Raw.Proofs.mapi_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.map_option_2	40
Coq.FSets.FMapAVL.Raw.Proofs.map_option_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.map_option_find	40
Coq.FSets.FMapAVL.Raw.Proofs.map2_opt_2	40
Coq.FSets.FMapAVL.Raw.Proofs.map2_opt_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.map2_opt_1	40
Coq.FSets.FMapAVL.Raw.Proofs.map2_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.map2_1	40
Coq.FSets.FMapAVL.Raw.Proofs.map2_2	40
Coq.FSets.FMapAVL.IntMake.MapsTo_1	40
Coq.FSets.FMapAVL.IntMake.mem_1	40
Coq.FSets.FMapAVL.IntMake.mem_2	40
Coq.FSets.FMapAVL.IntMake.empty_1	40	6.3.4.0.47	search with cache (only 1: red; only 1: intros m x; only 1: simpl; only 1: intuition; only 1: inversion H).	11.2788870335	5685
Coq.FSets.FMapAVL.IntMake.is_empty_1	40
Coq.FSets.FMapAVL.IntMake.is_empty_2	40
Coq.FSets.FMapAVL.IntMake.add_1	40
Coq.FSets.FMapAVL.IntMake.add_2	40
Coq.FSets.FMapAVL.IntMake.add_3	40
Coq.FSets.FMapAVL.IntMake.remove_1	40
Coq.FSets.FMapAVL.IntMake.remove_2	40
Coq.FSets.FMapAVL.IntMake.remove_3	40
Coq.FSets.FMapAVL.IntMake.find_1	40
Coq.FSets.FMapAVL.IntMake.find_2	40
Coq.FSets.FMapAVL.IntMake.fold_1	40
Coq.FSets.FMapAVL.IntMake.elements_1	40
Coq.FSets.FMapAVL.IntMake.elements_2	40	0.0.0.6	search with cache (only 1: intros m x e; only 1: unfold elements, MapsTo, eq_key_elt; only 1: rewrite elements_mapsto; only 1: auto).	0.57791686058	73
Coq.FSets.FMapAVL.IntMake.elements_3	40	0.0.0.0.0.0.1.3.12.1.0	search with cache (only 1: intros; only 1: unfold elements, MapsTo, eq_key_elt; only 1: unfold Raw.elements; only 1: apply elements_aux_sort; only 1: apply (is_bst m); only 1: auto; only 1: intros; only 1: inversion H0; only 1: inversion_clear H; only 1: inversion_clear H; only 1: inversion_clear H).	5.32801604271	2339
Coq.FSets.FMapAVL.IntMake.elements_3w	40	0.8.0	search with cache (only 1: intros; only 1: apply PX.Sort_NoDupA; only 1: exact (elements_sort (is_bst m))).	0.417838096619	67
Coq.FSets.FMapAVL.IntMake.cardinal_1	40	4	search with cache (only 1: exact (fun m : Raw.tree elt => elements_aux_cardinal nil)).	0.212443113327	31
Coq.FSets.FMapAVL.IntMake.Equivb_Equivb	40
Coq.FSets.FMapAVL.IntMake.equal_1	40
Coq.FSets.FMapAVL.IntMake.equal_2	40
Coq.FSets.FMapAVL.IntMake.map_1	40
Coq.FSets.FMapAVL.IntMake.map_2	40
Coq.FSets.FMapAVL.IntMake.mapi_1	40
Coq.FSets.FMapAVL.IntMake.mapi_2	40
Coq.FSets.FMapAVL.IntMake.map2_1	40
Coq.FSets.FMapAVL.IntMake.map2_2	40
Coq.FSets.FMapAVL.IntMake_ord.cons_Cmp	40
Coq.FSets.FMapAVL.IntMake_ord.compare_end_Cmp	40	2.0.0.0.0.9.8.0.1.0.0	search with cache (only 1: destruct e2; only 1: red; only 1: red; only 1: red; only 1: simpl P.flatten_e; only 1: intuition; only 1: red; only 1: red; only 1: red; only 1: red; only 1: auto with ordered_type).	17.4542691708	12026
Coq.FSets.FMapAVL.IntMake_ord.compare_more_Cmp	40
Coq.FSets.FMapAVL.IntMake_ord.compare_cont_Cmp	40
Coq.FSets.FMapAVL.IntMake_ord.compare_Cmp	40
Coq.FSets.FMapAVL.IntMake_ord.compare	40
Coq.FSets.FMapAVL.IntMake_ord.eq_seq	40	10.1	search with cache (only 1: intros; only 1: intuition).	0.783357143402	344
Coq.FSets.FMapAVL.IntMake_ord.lt_slt	40	7.1	search with cache (only 1: intros; only 1: intuition).	0.213434934616	53
Coq.FSets.FMapAVL.IntMake_ord.eq_1	40
Coq.FSets.FMapAVL.IntMake_ord.eq_2	40
Coq.FSets.FMapAVL.IntMake_ord.eq_refl	40
Coq.FSets.FMapAVL.IntMake_ord.eq_sym	40
Coq.FSets.FMapAVL.IntMake_ord.eq_trans	40
Coq.FSets.FMapAVL.IntMake_ord.lt_trans	40
Coq.FSets.FMapAVL.IntMake_ord.lt_not_eq	40
Coq.FSets.FMapPositive.append_assoc_0	40
Coq.FSets.FMapPositive.append_assoc_1	40
Coq.FSets.FMapPositive.append_neutral_r	40
Coq.FSets.FMapPositive.append_neutral_l	40	0.0.0.0.0.0.0	search with cache (only 1: induction i; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence).	0.208258152008	7
Coq.FSets.FMapPositive.PositiveMap.gempty	40	6.2.3.2.3.45	search with cache (only 1: induction i; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: auto).	6.54093384743	9759
Coq.FSets.FMapPositive.PositiveMap.gss	40
Coq.FSets.FMapPositive.PositiveMap.gleaf	40	0.0.0.0.0.0.0	search with cache (only 1: destruct i; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.10906291008	7
Coq.FSets.FMapPositive.PositiveMap.gso	40
Coq.FSets.FMapPositive.PositiveMap.rleaf	40	1.2.2.9	search with cache (only 1: induction i; only 1: auto; only 1: auto; only 1: auto).	0.654362916946	265
Coq.FSets.FMapPositive.PositiveMap.grs	40
Coq.FSets.FMapPositive.PositiveMap.gro	40
Coq.FSets.FMapPositive.PositiveMap.xelements_correct	40
Coq.FSets.FMapPositive.PositiveMap.elements_correct	40
Coq.FSets.FMapPositive.PositiveMap.xfind_left	40
Coq.FSets.FMapPositive.PositiveMap.xelements_ii	40
Coq.FSets.FMapPositive.PositiveMap.xelements_io	40
Coq.FSets.FMapPositive.PositiveMap.xelements_oo	40
Coq.FSets.FMapPositive.PositiveMap.xelements_oi	40
Coq.FSets.FMapPositive.PositiveMap.xelements_ih	40
Coq.FSets.FMapPositive.PositiveMap.xelements_oh	40
Coq.FSets.FMapPositive.PositiveMap.xelements_hi	40
Coq.FSets.FMapPositive.PositiveMap.xelements_ho	40
Coq.FSets.FMapPositive.PositiveMap.find_xfind_h	40	1.5.5.1.0	search with cache (only 1: intros; only 1: destruct i; only 1: auto; only 1: auto; only 1: auto).	4.87965297699	1297
Coq.FSets.FMapPositive.PositiveMap.xelements_complete	40
Coq.FSets.FMapPositive.PositiveMap.elements_complete	40
Coq.FSets.FMapPositive.PositiveMap.cardinal_1	40
Coq.FSets.FMapPositive.PositiveMap.mem_find	40
Coq.FSets.FMapPositive.PositiveMap.Empty_alt	40
Coq.FSets.FMapPositive.PositiveMap.Empty_Node	40
Coq.FSets.FMapPositive.PositiveMap.mem_1	40
Coq.FSets.FMapPositive.PositiveMap.mem_2	40
Coq.FSets.FMapPositive.PositiveMap.MapsTo_1	40	7.1.11	search with cache (only 1: intros; only 1: rewrite H in H0; only 1: auto).	2.00595092773	789
Coq.FSets.FMapPositive.PositiveMap.find_1	40	2.1.0	search with cache (only 1: intros; only 1: rewrite <- H; only 1: auto).	0.155100822449	6
Coq.FSets.FMapPositive.PositiveMap.find_2	40	0.0	search with cache (only 1: unfold MapsTo; only 1: auto).	0.141329050064	2
Coq.FSets.FMapPositive.PositiveMap.empty_1	40	8.5	search with cache (only 1: rewrite Empty_alt; only 1: exact gempty).	0.987395048141	254
Coq.FSets.FMapPositive.PositiveMap.is_empty_1	40
Coq.FSets.FMapPositive.PositiveMap.is_empty_2	40
Coq.FSets.FMapPositive.PositiveMap.add_1	40
Coq.FSets.FMapPositive.PositiveMap.add_2	40
Coq.FSets.FMapPositive.PositiveMap.add_3	40	0.2.1.2.0	search with cache (only 1: unfold MapsTo; only 1: intro H; only 1: rewrite gso; only 1: auto; only 1: auto).	0.398437023163	54
Coq.FSets.FMapPositive.PositiveMap.remove_1	40
Coq.FSets.FMapPositive.PositiveMap.remove_2	40
Coq.FSets.FMapPositive.PositiveMap.remove_3	40
Coq.FSets.FMapPositive.PositiveMap.elements_1	40
Coq.FSets.FMapPositive.PositiveMap.elements_2	40
Coq.FSets.FMapPositive.PositiveMap.xelements_bits_lt_1	40
Coq.FSets.FMapPositive.PositiveMap.xelements_bits_lt_2	40
Coq.FSets.FMapPositive.PositiveMap.xelements_sort	40
Coq.FSets.FMapPositive.PositiveMap.elements_3	40
Coq.FSets.FMapPositive.PositiveMap.elements_3w	40
Coq.FSets.FMapPositive.PositiveMap.xgmapi	40
Coq.FSets.FMapPositive.PositiveMap.gmapi	40
Coq.FSets.FMapPositive.PositiveMap.mapi_1	40
Coq.FSets.FMapPositive.PositiveMap.mapi_2	40
Coq.FSets.FMapPositive.PositiveMap.map_1	40
Coq.FSets.FMapPositive.PositiveMap.map_2	40	0.0.0.0.1.0.0.0.0.0.0.0.2	search with cache (only 1: unfold map; only 1: intros; only 1: apply mem_2; only 1: rewrite mem_find; only 1: destruct H as (v, H); only 1: generalize (find_1 H); only 1: clear H; only 1: intros; only 1: rewrite gmapi in H; only 1: destruct (find x m); only 1: auto; only 1: simpl in *; only 1: discriminate).	18.0489571095	3976
Coq.FSets.FMapPositive.PositiveMap.xgmap2_l	40
Coq.FSets.FMapPositive.PositiveMap.xgmap2_r	40
Coq.FSets.FMapPositive.PositiveMap.gmap2	40
Coq.FSets.FMapPositive.PositiveMap.map2_1	40
Coq.FSets.FMapPositive.PositiveMap.map2_2	40
Coq.FSets.FMapPositive.PositiveMap.xfoldi_1	40
Coq.FSets.FMapPositive.PositiveMap.fold_1	40
Coq.FSets.FMapPositive.PositiveMap.equal_1	40
Coq.FSets.FMapPositive.PositiveMap.equal_2	40
Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.gsspec	40
Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.gsident	40
Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.xmap2_lr	40
Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.map2_commut	40
Coq.FSets.FSetPositive.PositiveSet.In_1	40	0.1.5.7.0	search with cache (only 1: intros; only 1: inversion H; only 1: subst y; only 1: red; only 1: auto).	1.22701883316	676
Coq.FSets.FSetPositive.PositiveSet.eq_refl	40	10.2	search with cache (only 1: intros EQ; only 1: now subst).	0.106757164001	94
Coq.FSets.FSetPositive.PositiveSet.eq_sym	40
Coq.FSets.FSetPositive.PositiveSet.eq_trans	40
Coq.FSets.FSetPositive.PositiveSet.mem_1	40	0	search with cache (only 1: trivial).	0.0512130260468	1
Coq.FSets.FSetPositive.PositiveSet.mem_2	40	0.0	search with cache (only 1: unfold In; only 1: trivial).	0.0698220729828	2
Coq.FSets.FSetPositive.PositiveSet.mem_Leaf	40	0	search with cache (only 1: trivial).	0.0500390529633	1
Coq.FSets.FSetPositive.PositiveSet.empty_1	40	8	search with cache (only 1: now subst).	0.0636038780212	21
Coq.FSets.FSetPositive.PositiveSet.mem_node	40
Coq.FSets.FSetPositive.PositiveSet.is_empty_spec	40
Coq.FSets.FSetPositive.PositiveSet.is_empty_1	40
Coq.FSets.FSetPositive.PositiveSet.is_empty_2	40	0.0.1	search with cache (only 1: intro; only 1: rewrite is_empty_spec; only 1: trivial).	1.12061810493	92
Coq.FSets.FSetPositive.PositiveSet.subset_Leaf_s	40	8.22	search with cache (only 1: intros x y H; only 1: now destruct x).	2.15850186348	1821
Coq.FSets.FSetPositive.PositiveSet.subset_spec	40
Coq.FSets.FSetPositive.PositiveSet.subset_1	40
Coq.FSets.FSetPositive.PositiveSet.subset_2	40
Coq.FSets.FSetPositive.PositiveSet.equal_subset	40
Coq.FSets.FSetPositive.PositiveSet.equal_spec	40
Coq.FSets.FSetPositive.PositiveSet.equal_1	40	0.0.0.0.0.0	search with cache (only 1: intros; only 1: rewrite equal_subset; only 1: rewrite andb_true_iff; only 1: rewrite <- 2!subset_spec; only 1: unfold Equal, Subset; only 1: firstorder).	0.200064897537	6
Coq.FSets.FSetPositive.PositiveSet.equal_2	40	0.0.0.0.0.1	search with cache (only 1: intros s s'; only 1: rewrite equal_subset; only 1: rewrite andb_true_iff; only 1: rewrite <- 2!subset_spec; only 1: unfold Equal, Subset; only 1: firstorder).	0.289088010788	23
Coq.FSets.FSetPositive.PositiveSet.eq_dec	40
Coq.FSets.FSetPositive.PositiveSet.lex_Opp	40
Coq.FSets.FSetPositive.PositiveSet.compare_bool_inv	40
Coq.FSets.FSetPositive.PositiveSet.compare_inv	40
Coq.FSets.FSetPositive.PositiveSet.lex_Eq	40
Coq.FSets.FSetPositive.PositiveSet.compare_bool_Eq	40	2.2.2.2.0	search with cache (only 1: intros [| ] [| ]; only 1: intuition discriminate; only 1: intuition discriminate; only 1: intuition discriminate; only 1: intuition discriminate).	0.751502037048	163
Coq.FSets.FSetPositive.PositiveSet.compare_equal	40
Coq.FSets.FSetPositive.PositiveSet.compare_gt	40
Coq.FSets.FSetPositive.PositiveSet.compare_eq	40
Coq.FSets.FSetPositive.PositiveSet.compare	40
Coq.FSets.FSetPositive.PositiveSet.ct_cxe	40
Coq.FSets.FSetPositive.PositiveSet.ct_xce	40	0.0.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.126091957092	4
Coq.FSets.FSetPositive.PositiveSet.ct_lxl	40	0.0.0.1	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.130623102188	5
Coq.FSets.FSetPositive.PositiveSet.ct_gxg	40	0.0.0.1	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.186503887177	5
Coq.FSets.FSetPositive.PositiveSet.ct_xll	40	0.1.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.192753076553	5
Coq.FSets.FSetPositive.PositiveSet.ct_xgg	40	1.0.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.117970943451	5
Coq.FSets.FSetPositive.PositiveSet.ct_lex	40
Coq.FSets.FSetPositive.PositiveSet.ct_compare_bool	40
Coq.FSets.FSetPositive.PositiveSet.compare_x_Leaf	40	3.0.1.0.11	search with cache (only 1: induction s as [| l IHl o r IHr]; only 1: unfold compare_fun, equal; only 1: simpl; only 1: tauto; only 1: trivial).	2.01837611198	1215
Coq.FSets.FSetPositive.PositiveSet.compare_empty_x	40
Coq.FSets.FSetPositive.PositiveSet.compare_x_empty	40
Coq.FSets.FSetPositive.PositiveSet.ct_compare_fun	40
Coq.FSets.FSetPositive.PositiveSet.lt_trans	40
Coq.FSets.FSetPositive.PositiveSet.lt_not_eq	40
Coq.FSets.FSetPositive.PositiveSet.add_spec	40
Coq.FSets.FSetPositive.PositiveSet.add_1	40
Coq.FSets.FSetPositive.PositiveSet.add_2	40	2.2.0.0	search with cache (only 1: intros; only 1: apply <- add_spec; only 1: unfold In; only 1: intuition congruence).	0.106564998627	20
Coq.FSets.FSetPositive.PositiveSet.add_3	40
Coq.FSets.FSetPositive.PositiveSet.remove_spec	40
Coq.FSets.FSetPositive.PositiveSet.remove_1	40
Coq.FSets.FSetPositive.PositiveSet.remove_2	40	0.0.1	search with cache (only 1: intros; only 1: rewrite remove_spec; only 1: tauto).	0.183299064636	15
Coq.FSets.FSetPositive.PositiveSet.remove_3	40
Coq.FSets.FSetPositive.PositiveSet.singleton_1	40
Coq.FSets.FSetPositive.PositiveSet.singleton_2	40	1.0.0.0.0.0	search with cache (only 1: unfold singleton; only 1: intros x y; only 1: rewrite add_spec; only 1: unfold In; only 1: rewrite mem_Leaf; only 1: intuition discriminate).	0.141975164413	7
Coq.FSets.FSetPositive.PositiveSet.union_spec	40
Coq.FSets.FSetPositive.PositiveSet.union_1	40
Coq.FSets.FSetPositive.PositiveSet.union_2	40
Coq.FSets.FSetPositive.PositiveSet.union_3	40	5.1.0	search with cache (only 1: intros; only 1: apply <- union_spec; only 1: firstorder).	0.263022899628	27
Coq.FSets.FSetPositive.PositiveSet.inter_spec	40
Coq.FSets.FSetPositive.PositiveSet.inter_1	40
Coq.FSets.FSetPositive.PositiveSet.inter_2	40	0.0.0	search with cache (only 1: intros s s' x; only 1: rewrite inter_spec; only 1: tauto).	0.165905952454	3
Coq.FSets.FSetPositive.PositiveSet.inter_3	40	0.0.0	search with cache (only 1: intros s s' x; only 1: rewrite inter_spec; only 1: tauto).	0.0886127948761	3
Coq.FSets.FSetPositive.PositiveSet.diff_spec	40
Coq.FSets.FSetPositive.PositiveSet.diff_1	40
Coq.FSets.FSetPositive.PositiveSet.diff_2	40	0.0.1	search with cache (only 1: intros s s' x; only 1: rewrite diff_spec; only 1: tauto).	0.367882966995	41
Coq.FSets.FSetPositive.PositiveSet.diff_3	40	0.0.0	search with cache (only 1: intros s s' x; only 1: rewrite diff_spec; only 1: tauto).	0.0913879871368	3
Coq.FSets.FSetPositive.PositiveSet.fold_1	40
Coq.FSets.FSetPositive.PositiveSet.cardinal_1	40
Coq.FSets.FSetPositive.PositiveSet.xfilter_spec	40
Coq.FSets.FSetPositive.PositiveSet.filter_1	40
Coq.FSets.FSetPositive.PositiveSet.filter_2	40	0.0.0.0	search with cache (only 1: unfold filter; only 1: intros s x f _; only 1: rewrite xfilter_spec; only 1: tauto).	0.180122852325	4
Coq.FSets.FSetPositive.PositiveSet.filter_3	40	0.0.0.0	search with cache (only 1: unfold filter; only 1: intros s x f _; only 1: rewrite xfilter_spec; only 1: tauto).	0.121278047562	4
Coq.FSets.FSetPositive.PositiveSet.xforall_spec	40
Coq.FSets.FSetPositive.PositiveSet.for_all_1	40
Coq.FSets.FSetPositive.PositiveSet.for_all_2	40	0.0.0.0	search with cache (only 1: intros s f _; only 1: unfold for_all; only 1: rewrite xforall_spec; only 1: trivial).	0.0946969985962	4
Coq.FSets.FSetPositive.PositiveSet.xexists_spec	40
Coq.FSets.FSetPositive.PositiveSet.exists_1	40
Coq.FSets.FSetPositive.PositiveSet.exists_2	40	0.0.0.0	search with cache (only 1: intros s f _; only 1: unfold exists_; only 1: rewrite xexists_spec; only 1: trivial).	0.0797479152679	4
Coq.FSets.FSetPositive.PositiveSet.partition_filter	40
Coq.FSets.FSetPositive.PositiveSet.partition_1	40
Coq.FSets.FSetPositive.PositiveSet.partition_2	40	0.0.0	search with cache (only 1: intros; only 1: rewrite partition_filter; only 1: apply eq_refl).	0.0854380130768	3
Coq.FSets.FSetPositive.PositiveSet.xelements_spec	40
Coq.FSets.FSetPositive.PositiveSet.elements_1	40
Coq.FSets.FSetPositive.PositiveSet.elements_2	40
Coq.FSets.FSetPositive.PositiveSet.lt_rev_append	40
Coq.FSets.FSetPositive.PositiveSet.elements_3	40
Coq.FSets.FSetPositive.PositiveSet.elements_3w	40
Coq.FSets.FSetPositive.PositiveSet.choose_1	40
Coq.FSets.FSetPositive.PositiveSet.choose_2	40
Coq.FSets.FSetPositive.PositiveSet.choose_empty	40
Coq.FSets.FSetPositive.PositiveSet.choose_3'	40
Coq.FSets.FSetPositive.PositiveSet.choose_3	40
Coq.FSets.FSetPositive.PositiveSet.min_elt_1	40
Coq.FSets.FSetPositive.PositiveSet.min_elt_3	40
Coq.FSets.FSetPositive.PositiveSet.min_elt_2	40
Coq.FSets.FSetPositive.PositiveSet.max_elt_1	40
Coq.FSets.FSetPositive.PositiveSet.max_elt_3	40
Coq.FSets.FSetPositive.PositiveSet.max_elt_2	40
Coq.FSets.FMapList.Raw.empty_1	40
Coq.FSets.FMapList.Raw.empty_sorted	40	6	search with cache (only 1: left).	0.0359969139099	7
Coq.FSets.FMapList.Raw.is_empty_1	40
Coq.FSets.FMapList.Raw.is_empty_2	40	7.0.0.1	search with cache (only 1: intros m; only 1: case m; only 1: auto; only 1: inversion 1).	4.75974011421	308
Coq.FSets.FMapList.Raw.mem_1	40
Coq.FSets.FMapList.Raw.mem_2	40
Coq.FSets.FMapList.Raw.find_2	40
Coq.FSets.FMapList.Raw.find_1	40
Coq.FSets.FMapList.Raw.add_1	40
Coq.FSets.FMapList.Raw.add_2	40
Coq.FSets.FMapList.Raw.add_3	40
Coq.FSets.FMapList.Raw.add_Inf	40
Coq.FSets.FMapList.Raw.add_sorted	40
Coq.FSets.FMapList.Raw.remove_1	40
Coq.FSets.FMapList.Raw.remove_2	40
Coq.FSets.FMapList.Raw.remove_3	40
Coq.FSets.FMapList.Raw.remove_Inf	40
Coq.FSets.FMapList.Raw.remove_sorted	40	0.0.0.0.2.2.0.0.2.1	search with cache (only 1: induction m; only 1: intuition; only 1: intros; only 1: destruct a as (x'', e''); only 1: simpl; only 1: inversion_clear Hm; only 1: case (X.compare x x''); only 1: intuition; only 1: intuition; only 1: intuition).	21.9351668358	3993
Coq.FSets.FMapList.Raw.elements_1	40	0	search with cache (only 1: auto).	0.146914958954	1
Coq.FSets.FMapList.Raw.elements_2	40	0	search with cache (only 1: auto).	0.187521934509	1
Coq.FSets.FMapList.Raw.elements_3	40	0	search with cache (only 1: auto).	0.0423390865326	1
Coq.FSets.FMapList.Raw.elements_3w	40
Coq.FSets.FMapList.Raw.fold_1	40	1.1.1.40	search with cache (only 1: induction m; only 1: intuition; only 1: simpl in *; only 1: intuition).	11.1295030117	7806
Coq.FSets.FMapList.Raw.equal_1	40
Coq.FSets.FMapList.Raw.equal_2	40
Coq.FSets.FMapList.Raw.equal_cons	40
Coq.FSets.FMapList.Raw.map_1	40
Coq.FSets.FMapList.Raw.map_2	40
Coq.FSets.FMapList.Raw.map_lelistA	40	1.2.5.1.0.0.3	search with cache (only 1: induction m; only 1: intuition; only 1: constructor 1; only 1: destruct a as (x', e'); only 1: inversion_clear 1; only 1: constructor; only 1: auto).	13.1221427917	2942
Coq.FSets.FMapList.Raw.map_sorted	40
Coq.FSets.FMapList.Raw.mapi_1	40
Coq.FSets.FMapList.Raw.mapi_2	40
Coq.FSets.FMapList.Raw.mapi_lelistA	40	0.0.0.0.2.0.1.0	search with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: destruct a as (x0, e0); only 1: inversion_clear H; only 1: auto).	1.32268190384	125
Coq.FSets.FMapList.Raw.mapi_sorted	40	1.5.1.0.0.0.5	search with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: simpl; only 1: destruct a as (x', e'); only 1: inversion_clear 1; only 1: auto).	8.41600608826	1586
Coq.FSets.FMapList.Raw.map2_alt_equiv	40
Coq.FSets.FMapList.Raw.combine_lelistA	40
Coq.FSets.FMapList.Raw.combine_sorted	40
Coq.FSets.FMapList.Raw.map2_sorted	40
Coq.FSets.FMapList.Raw.combine_1	40
Coq.FSets.FMapList.Raw.map2_0	40
Coq.FSets.FMapList.Raw.map2_1	40
Coq.FSets.FMapList.Raw.map2_2	40
Coq.FSets.FMapList.Make.MapsTo_1	40
Coq.FSets.FMapList.Make.mem_1	40
Coq.FSets.FMapList.Make.mem_2	40
Coq.FSets.FMapList.Make.empty_1	40	24.31	search with cache (only 1: compute; only 1: inversion_clear 1).	5.36142921448	5163
Coq.FSets.FMapList.Make.is_empty_1	40
Coq.FSets.FMapList.Make.is_empty_2	40
Coq.FSets.FMapList.Make.add_1	40
Coq.FSets.FMapList.Make.add_2	40
Coq.FSets.FMapList.Make.add_3	40
Coq.FSets.FMapList.Make.remove_1	40
Coq.FSets.FMapList.Make.remove_2	40
Coq.FSets.FMapList.Make.remove_3	40
Coq.FSets.FMapList.Make.find_1	40
Coq.FSets.FMapList.Make.find_2	40
Coq.FSets.FMapList.Make.elements_1	40	12	search with cache (only 1: auto).	0.364388942719	68
Coq.FSets.FMapList.Make.elements_2	40	0.0	search with cache (only 1: intros m; only 1: exact (Raw.elements_1 (m:=m))).	0.101319789886	2
Coq.FSets.FMapList.Make.elements_3	40	5.63.0	search with cache (only 1: intros m; only 1: induction m; only 1: intuition).	2.61371588707	5572
Coq.FSets.FMapList.Make.elements_3w	40
Coq.FSets.FMapList.Make.cardinal_1	40	24	search with cache (only 1: trivial).	0.867290019989	544
Coq.FSets.FMapList.Make.fold_1	40
Coq.FSets.FMapList.Make.equal_1	40
Coq.FSets.FMapList.Make.equal_2	40
Coq.FSets.FMapList.Make.map_1	40
Coq.FSets.FMapList.Make.map_2	40
Coq.FSets.FMapList.Make.mapi_1	40
Coq.FSets.FMapList.Make.mapi_2	40
Coq.FSets.FMapList.Make.map2_1	40
Coq.FSets.FMapList.Make.map2_2	40
Coq.FSets.FMapList.Make_ord.eq_equal	40
Coq.FSets.FMapList.Make_ord.eq_1	40
Coq.FSets.FMapList.Make_ord.eq_2	40
Coq.FSets.FMapList.Make_ord.eq_refl	40
Coq.FSets.FMapList.Make_ord.eq_sym	40
Coq.FSets.FMapList.Make_ord.eq_trans	40
Coq.FSets.FMapList.Make_ord.lt_trans	40
Coq.FSets.FMapList.Make_ord.lt_not_eq	40
Coq.FSets.FMapList.Make_ord.compare	40
Coq.FSets.FMapWeakList.Raw.empty_1	40	2.45	search with cache (only 1: compute; only 1: inversion_clear 1).	0.994062900543	1188
Coq.FSets.FMapWeakList.Raw.empty_NoDup	40	35	search with cache (only 1: left).	0.893252849579	982
Coq.FSets.FMapWeakList.Raw.is_empty_1	40
Coq.FSets.FMapWeakList.Raw.is_empty_2	40	7.0.0.1	search with cache (only 1: intros m; only 1: case m; only 1: auto; only 1: inversion 1).	2.88127112389	462
Coq.FSets.FMapWeakList.Raw.mem_1	40
Coq.FSets.FMapWeakList.Raw.mem_2	40
Coq.FSets.FMapWeakList.Raw.find_2	40
Coq.FSets.FMapWeakList.Raw.find_1	40
Coq.FSets.FMapWeakList.Raw.find_eq	40
Coq.FSets.FMapWeakList.Raw.add_1	40
Coq.FSets.FMapWeakList.Raw.add_2	40
Coq.FSets.FMapWeakList.Raw.add_3	40
Coq.FSets.FMapWeakList.Raw.add_3'	40
Coq.FSets.FMapWeakList.Raw.add_NoDup	40
Coq.FSets.FMapWeakList.Raw.add_eq	40
Coq.FSets.FMapWeakList.Raw.add_not_eq	40
Coq.FSets.FMapWeakList.Raw.remove_1	40
Coq.FSets.FMapWeakList.Raw.remove_2	40
Coq.FSets.FMapWeakList.Raw.remove_3	40	2.0.1.1.1.0.2.0.0	search with cache (only 1: intros m Hm x y e; only 1: clear Hm; only 1: unfold PX.MapsTo; only 1: functional induction remove x m; only 1: auto; only 1: auto; only 1: inversion_clear 1; only 1: auto; only 1: auto).	18.769505024	2654
Coq.FSets.FMapWeakList.Raw.remove_3'	40	0.4.0.3.0.0.0.8	search with cache (only 1: intros m Hm x y e; only 1: functional induction remove x m; only 1: auto; only 1: auto; only 1: inversion_clear 1; only 1: auto; only 1: inversion_clear Hm; only 1: auto).	16.4989550114	3400
Coq.FSets.FMapWeakList.Raw.remove_NoDup	40
Coq.FSets.FMapWeakList.Raw.elements_1	40	0	search with cache (only 1: auto).	0.0615191459656	1
Coq.FSets.FMapWeakList.Raw.elements_2	40	0	search with cache (only 1: auto).	0.0609569549561	1
Coq.FSets.FMapWeakList.Raw.elements_3w	40	0	search with cache (only 1: auto).	0.0486772060394	1
Coq.FSets.FMapWeakList.Raw.fold_1	40	0.3.2.0.16.9	search with cache (only 1: compute; only 1: induction m; only 1: intros; only 1: constructor; only 1: destruct a; only 1: trivial).	4.55516004562	3181
Coq.FSets.FMapWeakList.Raw.submap_1	40
Coq.FSets.FMapWeakList.Raw.submap_2	40
Coq.FSets.FMapWeakList.Raw.equal_1	40
Coq.FSets.FMapWeakList.Raw.equal_2	40
Coq.FSets.FMapWeakList.Raw.map_1	40
Coq.FSets.FMapWeakList.Raw.map_2	40
Coq.FSets.FMapWeakList.Raw.map_NoDup	40
Coq.FSets.FMapWeakList.Raw.mapi_1	40
Coq.FSets.FMapWeakList.Raw.mapi_2	40
Coq.FSets.FMapWeakList.Raw.mapi_NoDup	40
Coq.FSets.FMapWeakList.Raw.fold_right_pair_NoDup	40
Coq.FSets.FMapWeakList.Raw.combine_NoDup	40
Coq.FSets.FMapWeakList.Raw.combine_l_1	40
Coq.FSets.FMapWeakList.Raw.combine_r_1	40
Coq.FSets.FMapWeakList.Raw.combine_1	40
Coq.FSets.FMapWeakList.Raw.map2_NoDup	40
Coq.FSets.FMapWeakList.Raw.map2_0	40
Coq.FSets.FMapWeakList.Raw.map2_1	40
Coq.FSets.FMapWeakList.Raw.map2_2	40
Coq.FSets.FMapWeakList.Make.MapsTo_1	40
Coq.FSets.FMapWeakList.Make.mem_1	40
Coq.FSets.FMapWeakList.Make.mem_2	40
Coq.FSets.FMapWeakList.Make.empty_1	40	15.35	search with cache (only 1: compute; only 1: inversion 1).	2.8409512043	2686
Coq.FSets.FMapWeakList.Make.is_empty_1	40
Coq.FSets.FMapWeakList.Make.is_empty_2	40
Coq.FSets.FMapWeakList.Make.add_1	40
Coq.FSets.FMapWeakList.Make.add_2	40
Coq.FSets.FMapWeakList.Make.add_3	40
Coq.FSets.FMapWeakList.Make.remove_1	40
Coq.FSets.FMapWeakList.Make.remove_2	40
Coq.FSets.FMapWeakList.Make.remove_3	40
Coq.FSets.FMapWeakList.Make.find_1	40
Coq.FSets.FMapWeakList.Make.find_2	40
Coq.FSets.FMapWeakList.Make.elements_1	40	20	search with cache (only 1: intuition).	0.543075084686	303
Coq.FSets.FMapWeakList.Make.elements_2	40	0.0	search with cache (only 1: intros m; only 1: exact (Raw.elements_1 (m:=m))).	0.0503599643707	2
Coq.FSets.FMapWeakList.Make.elements_3w	40	11.78	search with cache (only 1: induction m; only 1: auto).	4.89163017273	11576
Coq.FSets.FMapWeakList.Make.cardinal_1	40	28	search with cache (only 1: trivial).	0.764271020889	760
Coq.FSets.FMapWeakList.Make.fold_1	40
Coq.FSets.FMapWeakList.Make.equal_1	40
Coq.FSets.FMapWeakList.Make.equal_2	40
Coq.FSets.FMapWeakList.Make.map_1	40
Coq.FSets.FMapWeakList.Make.map_2	40
Coq.FSets.FMapWeakList.Make.mapi_1	40
Coq.FSets.FMapWeakList.Make.mapi_2	40
Coq.FSets.FMapWeakList.Make.map2_1	40
Coq.FSets.FMapWeakList.Make.map2_2	40
Coq.FSets.FSetBridge.DepOfNodep.empty	40
Coq.FSets.FSetBridge.DepOfNodep.is_empty	40
Coq.FSets.FSetBridge.DepOfNodep.mem	40
Coq.FSets.FSetBridge.DepOfNodep.add	40
Coq.FSets.FSetBridge.DepOfNodep.singleton	40
Coq.FSets.FSetBridge.DepOfNodep.remove	40
Coq.FSets.FSetBridge.DepOfNodep.union	40
Coq.FSets.FSetBridge.DepOfNodep.inter	40
Coq.FSets.FSetBridge.DepOfNodep.diff	40
Coq.FSets.FSetBridge.DepOfNodep.equal	40
Coq.FSets.FSetBridge.DepOfNodep.subset	40
Coq.FSets.FSetBridge.DepOfNodep.elements	40
Coq.FSets.FSetBridge.DepOfNodep.fold	40	19.0.37	search with cache (only 1: simpl in *; only 1: intuition; only 1: eauto with set).	4.4039170742	7062
Coq.FSets.FSetBridge.DepOfNodep.cardinal	40	19.13.0	search with cache (only 1: intros; only 1: simpl; only 1: eauto with set).	2.18630099297	2428
Coq.FSets.FSetBridge.DepOfNodep.compat_P_aux	40
Coq.FSets.FSetBridge.DepOfNodep.filter	40
Coq.FSets.FSetBridge.DepOfNodep.for_all	40
Coq.FSets.FSetBridge.DepOfNodep.exists_	40
Coq.FSets.FSetBridge.DepOfNodep.partition	40
Coq.FSets.FSetBridge.DepOfNodep.choose_aux	40
Coq.FSets.FSetBridge.DepOfNodep.choose	40
Coq.FSets.FSetBridge.DepOfNodep.choose_ok1	40
Coq.FSets.FSetBridge.DepOfNodep.choose_ok2	40
Coq.FSets.FSetBridge.DepOfNodep.choose_equal	40
Coq.FSets.FSetBridge.DepOfNodep.min_elt	40
Coq.FSets.FSetBridge.DepOfNodep.max_elt	40
Coq.FSets.FSetBridge.NodepOfDep.empty_1	40
Coq.FSets.FSetBridge.NodepOfDep.is_empty_1	40
Coq.FSets.FSetBridge.NodepOfDep.is_empty_2	40
Coq.FSets.FSetBridge.NodepOfDep.mem_1	40
Coq.FSets.FSetBridge.NodepOfDep.mem_2	40
Coq.FSets.FSetBridge.NodepOfDep.equal_1	40
Coq.FSets.FSetBridge.NodepOfDep.equal_2	40	4.0.1.0.0.5	search with cache (only 1: intros s x; only 1: unfold equal; only 1: case M.equal; only 1: intuition; only 1: intuition; only 1: discriminate H).	4.02701687813	1293
Coq.FSets.FSetBridge.NodepOfDep.subset_1	40
Coq.FSets.FSetBridge.NodepOfDep.subset_2	40	3.0.0.0.0.5	search with cache (only 1: intros s s'; only 1: unfold subset; only 1: case M.subset; only 1: intuition; only 1: intuition; only 1: inversion H).	2.98253202438	837
Coq.FSets.FSetBridge.NodepOfDep.choose_1	40
Coq.FSets.FSetBridge.NodepOfDep.choose_2	40
Coq.FSets.FSetBridge.NodepOfDep.choose_3	40
Coq.FSets.FSetBridge.NodepOfDep.elements_1	40
Coq.FSets.FSetBridge.NodepOfDep.elements_2	40
Coq.FSets.FSetBridge.NodepOfDep.elements_3	40	1.0.2.0.0.1	search with cache (only 1: firstorder; only 1: case (M.elements s); only 1: case (M.elements s); only 1: unfold elements; only 1: case (M.elements s); only 1: firstorder).	1.05001711845	53
Coq.FSets.FSetBridge.NodepOfDep.elements_3w	40	5.1	search with cache (only 1: intros; only 1: firstorder).	0.879055976868	64
Coq.FSets.FSetBridge.NodepOfDep.min_elt_1	40
Coq.FSets.FSetBridge.NodepOfDep.min_elt_2	40
Coq.FSets.FSetBridge.NodepOfDep.min_elt_3	40
Coq.FSets.FSetBridge.NodepOfDep.max_elt_1	40
Coq.FSets.FSetBridge.NodepOfDep.max_elt_2	40
Coq.FSets.FSetBridge.NodepOfDep.max_elt_3	40
Coq.FSets.FSetBridge.NodepOfDep.add_1	40
Coq.FSets.FSetBridge.NodepOfDep.add_2	40	0.0.0.0.0	search with cache (only 1: intros; only 1: unfold add; only 1: case (M.add x s); only 1: unfold Add; only 1: firstorder).	0.06658411026	5
Coq.FSets.FSetBridge.NodepOfDep.add_3	40	0.0.0.0.8	search with cache (only 1: intros s x; only 1: unfold add; only 1: case (M.add x s); only 1: unfold Add; only 1: firstorder).	9.44312596321	1011
Coq.FSets.FSetBridge.NodepOfDep.remove_1	40
Coq.FSets.FSetBridge.NodepOfDep.remove_2	40	1.0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: unfold remove; only 1: case (M.remove x s); only 1: case (M.remove x s); only 1: case (M.remove x s); only 1: case (M.remove x s); only 1: case (M.remove x s); only 1: case (M.remove x s); only 1: firstorder).	0.351248979568	11
Coq.FSets.FSetBridge.NodepOfDep.remove_3	40	1.0.4.1	search with cache (only 1: unfold remove; only 1: intros s x y; only 1: case (M.remove x s); only 1: firstorder).	3.16173100471	149
Coq.FSets.FSetBridge.NodepOfDep.singleton_1	40
Coq.FSets.FSetBridge.NodepOfDep.singleton_2	40	1.0.0.0.0.0.0.0.0	search with cache (only 1: intros x y; only 1: unfold singleton; only 1: case (M.singleton x); only 1: case (M.singleton x); only 1: case (M.singleton x); only 1: case (M.singleton x); only 1: case (M.singleton x); only 1: case (M.singleton x); only 1: firstorder).	0.191693067551	11
Coq.FSets.FSetBridge.NodepOfDep.union_1	40
Coq.FSets.FSetBridge.NodepOfDep.union_2	40	1.0.0.0.0.0.0.0.0	search with cache (only 1: intros s s' x; only 1: unfold union; only 1: case (M.union s s'); only 1: case (M.union s s'); only 1: case (M.union s s'); only 1: case (M.union s s'); only 1: case (M.union s s'); only 1: case (M.union s s'); only 1: firstorder).	0.314989089966	11
Coq.FSets.FSetBridge.NodepOfDep.union_3	40	1.0.0.0.0.0.0.0.0	search with cache (only 1: intros s s' x; only 1: unfold union; only 1: case (M.union s s'); only 1: case (M.union s s'); only 1: case (M.union s s'); only 1: case (M.union s s'); only 1: case (M.union s s'); only 1: case (M.union s s'); only 1: firstorder).	0.343986034393	11
Coq.FSets.FSetBridge.NodepOfDep.inter_1	40
Coq.FSets.FSetBridge.NodepOfDep.inter_2	40	1.0.0.0.0.0.0.0.0	search with cache (only 1: intros s s' x; only 1: unfold inter; only 1: case (M.inter s s'); only 1: case (M.inter s s'); only 1: case (M.inter s s'); only 1: case (M.inter s s'); only 1: case (M.inter s s'); only 1: case (M.inter s s'); only 1: firstorder).	0.311327934265	11
Coq.FSets.FSetBridge.NodepOfDep.inter_3	40	1.0.0.0.0.0.0.0.0	search with cache (only 1: intros s s' x; only 1: unfold inter; only 1: case (M.inter s s'); only 1: case (M.inter s s'); only 1: case (M.inter s s'); only 1: case (M.inter s s'); only 1: case (M.inter s s'); only 1: case (M.inter s s'); only 1: firstorder).	0.400261163712	11
Coq.FSets.FSetBridge.NodepOfDep.diff_1	40
Coq.FSets.FSetBridge.NodepOfDep.diff_2	40	1.0.0.0.0.0.0.0.0	search with cache (only 1: intros s s' x; only 1: unfold diff; only 1: case (M.diff s s'); only 1: case (M.diff s s'); only 1: case (M.diff s s'); only 1: case (M.diff s s'); only 1: case (M.diff s s'); only 1: case (M.diff s s'); only 1: firstorder).	0.1195499897	11
Coq.FSets.FSetBridge.NodepOfDep.diff_3	40	1.0.0.0.0.0.0.0.0	search with cache (only 1: intros s s' x; only 1: unfold diff; only 1: case (M.diff s s'); only 1: case (M.diff s s'); only 1: case (M.diff s s'); only 1: case (M.diff s s'); only 1: case (M.diff s s'); only 1: case (M.diff s s'); only 1: firstorder).	0.121267080307	11
Coq.FSets.FSetBridge.NodepOfDep.cardinal_1	40
Coq.FSets.FSetBridge.NodepOfDep.fold_1	40
Coq.FSets.FSetBridge.NodepOfDep.f_dec	40
Coq.FSets.FSetBridge.NodepOfDep.compat_P_aux	40	4.3.4.35.0	search with cache (only 1: intros; only 1: intros s x; only 1: intuition; only 1: rewrite (H _ _ H0); only 1: intuition).	5.53129982948	6784
Coq.FSets.FSetBridge.NodepOfDep.filter_1	40
Coq.FSets.FSetBridge.NodepOfDep.filter_2	40	2.0.0.1.0.0.0	search with cache (only 1: intros s x f; only 1: unfold filter; only 1: destruct M.filter as (x0, Hiff); only 1: intuition; only 1: generalize (Hiff (compat_P_aux H)); only 1: generalize (Hiff (compat_P_aux H)); only 1: firstorder).	0.694610834122	14
Coq.FSets.FSetBridge.NodepOfDep.filter_3	40	2.0.0.1.0.0.0	search with cache (only 1: intros s x f; only 1: unfold filter; only 1: destruct M.filter as (x0, Hiff); only 1: intuition; only 1: generalize (Hiff (compat_P_aux H)); only 1: generalize (Hiff (compat_P_aux H)); only 1: firstorder).	0.739330053329	14
Coq.FSets.FSetBridge.NodepOfDep.for_all_1	40
Coq.FSets.FSetBridge.NodepOfDep.for_all_2	40	4.0.0.0.0.0	search with cache (only 1: intros s f; only 1: unfold for_all; only 1: case M.for_all; only 1: intuition; only 1: intuition; only 1: firstorder).	0.0943379402161	10
Coq.FSets.FSetBridge.NodepOfDep.exists_1	40
Coq.FSets.FSetBridge.NodepOfDep.exists_2	40	2.0.1.0.0.0	search with cache (only 1: intros s f; only 1: unfold exists_; only 1: case M.exists_; only 1: intuition; only 1: intuition; only 1: inversion H0).	0.122808933258	9
Coq.FSets.FSetBridge.NodepOfDep.partition_1	40
Coq.FSets.FSetBridge.NodepOfDep.partition_2	40
Coq.Floats.FloatLemmas.shift_value	40	6	search with cache (only 1: repeat split).	0.0410487651825	7
Coq.Floats.FloatLemmas.frexp_spec	40
Coq.Floats.FloatLemmas.ldexp_spec	40
Coq.Floats.FloatAxioms.Prim2SF_inj	40
Coq.Floats.FloatAxioms.SF2Prim_inj	40
Coq.Init.Tactics.decide_left	40	0.1.0.1.2.13.8.5.3	search with cache (only 1: unfold not; only 1: intro A; only 1: intro H1; only 1: elim H1; only 1: intro z; only 1: auto; only 1: intro H; only 1: intro z; only 1: destruct (H z)).	26.8389911652	45088
Coq.Init.Tactics.decide_right	40	1.0.1.0	search with cache (only 1: intros; only 1: destruct decide; only 1: contradiction; only 1: apply H0).	0.0268499851227	6
Coq.Init.Specif.sigT_eta	40	4.1	search with cache (only 1: destruct p; only 1: reflexivity).	0.0117201805115	7
Coq.Init.Specif.sig_eta	40	0.0	search with cache (only 1: destruct p; only 1: reflexivity).	0.00967383384705	2
Coq.Init.Specif.sigT2_eta	40	0.0	search with cache (only 1: destruct p; only 1: reflexivity).	0.0108609199524	2
Coq.Init.Specif.sig2_eta	40	0.0	search with cache (only 1: destruct p; only 1: reflexivity).	0.011234998703	2
Coq.Init.Specif.exists_to_inhabited_sig	40	1.13.16.15	search with cache (only 1: destruct 1; only 1: split; only 1: exists x; only 1: trivial).	0.49871301651	3670
Coq.Init.Specif.inhabited_sig_to_exists	40	4.7.0.89.83	search with cache (only 1: intro H1; only 1: elim H1; only 1: intros [x y]; only 1: exists x; only 1: auto).	5.72021603584	90271
Coq.Init.Specif.eq_existT_uncurried	40	0.1.1.0	search with cache (only 1: destruct pq as [p q]; only 1: destruct q; only 1: destruct p; only 1: reflexivity).	0.064847946167	6
Coq.Init.Specif.eq_sigT_uncurried	40
Coq.Init.Specif.eq_existT_curried	40	0.0.0	search with cache (only 1: destruct q; only 1: destruct p; only 1: reflexivity).	0.0452830791473	3
Coq.Init.Specif.eq_existT_curried_map	40	0.0	search with cache (only 1: destruct p, q; only 1: reflexivity).	0.0598969459534	2
Coq.Init.Specif.eq_existT_curried_trans	40
Coq.Init.Specif.eq_existT_curried_congr	40	0.8.14.18	search with cache (only 1: intros; only 1: destruct H; only 1: destruct r, q, p; only 1: reflexivity).	14.0129990578	13867
Coq.Init.Specif.eq_sigT_uncurried_iff	40
Coq.Init.Specif.eq_sigT_rect	40
Coq.Init.Specif.rew_sigT	40	0.0	search with cache (only 1: destruct H, u; only 1: reflexivity).	0.0583519935608	2
Coq.Init.Specif.eq_exist_uncurried	40	0.0.0	search with cache (only 1: destruct pq as [p q]; only 1: destruct p, q; only 1: reflexivity).	0.0503189563751	3
Coq.Init.Specif.eq_sig_uncurried	40	0.0.0.3.0.5	search with cache (only 1: destruct u as [u1 u2], v as [v1 v2]; only 1: destruct pq as [p q]; only 1: simpl in *; only 1: destruct q; only 1: destruct p; only 1: reflexivity).	0.550893068314	143
Coq.Init.Specif.eq_sig_rect	40
Coq.Init.Specif.eq_sig_uncurried_iff	40	0.0.0.5.10.5.2.4	search with cache (only 1: split; only 1: intro p; only 1: subst; only 1: exists eq_refl; only 1: reflexivity; only 1: destruct u as [u1 u2], v as [v1 v2]; only 1: simpl in *; only 1: apply eq_exist_uncurried).	3.39513897896	6519
Coq.Init.Specif.rew_sig	40	0.0	search with cache (only 1: destruct H, u; only 1: reflexivity).	0.0222229957581	2
Coq.Init.Specif.eq_existT2_uncurried	40
Coq.Init.Specif.eq_sigT2_uncurried	40	2.0.0.4.6.11	search with cache (only 1: destruct pqr as [p q r]; only 1: destruct u as [u1 u2], v as [v1 v2]; only 1: simpl in *; only 1: destruct r, q, p; only 1: simpl; only 1: reflexivity).	2.4033138752	1623
Coq.Init.Specif.eq_sigT2_uncurried_iff	40	0.0.0.3.2.7.6.2.2	search with cache (only 1: split; only 1: intro p; only 1: subst; only 1: exists eq_refl; only 1: reflexivity; only 1: reflexivity; only 1: destruct u as [u1 u2 u3], v as [v1 v2 v3]; only 1: simpl in *; only 1: apply eq_existT2_uncurried).	11.8599221706	15696
Coq.Init.Specif.eq_sigT2_rect	40
Coq.Init.Specif.rew_sigT2	40	0.0	search with cache (only 1: destruct H, u; only 1: reflexivity).	0.0288140773773	2
Coq.Init.Specif.eq_exist2_uncurried	40	1.0.0.0	search with cache (only 1: destruct pqr as [p q r]; only 1: destruct r, q, p; only 1: simpl in *; only 1: reflexivity).	0.164926052094	5
Coq.Init.Specif.eq_sig2_uncurried	40	2.0.0.4.0.13	search with cache (only 1: destruct u as [u1 u2 u3], v as [v1 v2 v3]; only 1: destruct pqr as [p q r]; only 1: simpl in *; only 1: destruct r, q, p; only 1: simpl; only 1: reflexivity).	2.52941703796	1335
Coq.Init.Specif.eq_sig2_uncurried_iff	40	0.0.0.2.1.9.4.1.2.2	search with cache (only 1: split; only 1: intro p; only 1: simpl in *; only 1: subst; only 1: exists eq_refl; only 1: reflexivity; only 1: reflexivity; only 1: destruct u as [u1 u2 u3], v as [v1 v2 v3]; only 1: simpl in *; only 1: apply eq_exist2_uncurried).	13.1051809788	15683
Coq.Init.Specif.eq_sig2_rect	40
Coq.Init.Specif.rew_sig2	40	0.0	search with cache (only 1: destruct H, u; only 1: reflexivity).	0.0634579658508	2
Coq.Init.Specif.Choice	40
Coq.Init.Specif.Choice2	40
Coq.Init.Specif.bool_choice	40
Coq.Init.Specif.dependent_choice	40
Coq.Init.Specif.absurd_set	40	0.1.1	search with cache (only 1: unfold not; only 1: intros A C h1 h2; only 1: destruct (h2 h1)).	0.191834211349	26
Coq.Init.Peano.pred_Sn	40	2	search with cache (only 1: trivial).	0.00647878646851	3
Coq.Init.Peano.not_eq_S	40	2.25	search with cache (only 1: intros x' x'' Hx' Hx''; only 1: auto).	1.46725010872	4454
Coq.Init.Peano.O_S	40	8	search with cache (only 1: discriminate).	0.0284848213196	31
Coq.Init.Peano.n_Sn	40
Coq.Init.Peano.plus_n_O	40	0.4.1.2	search with cache (only 1: induction n; only 1: auto; only 1: simpl; only 1: auto).	0.105489015579	44
Coq.Init.Peano.plus_O_n	40	0.0.1.0.0	search with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0487279891968	6
Coq.Init.Peano.plus_n_Sm	40	1.1.0.2	search with cache (only 1: induction n; only 1: auto; only 1: simpl; only 1: auto).	0.0631659030914	8
Coq.Init.Peano.plus_Sn_m	40	0.0.1.0.0.0.0	search with cache (only 1: intros n m; only 1: simpl; only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0313639640808	8
Coq.Init.Peano.mult_n_O	40	0.1.3	search with cache (only 1: induction n; only 1: auto; only 1: auto).	0.0577161312103	7
Coq.Init.Peano.mult_n_Sm	40
Coq.Init.Peano.le_pred	40
Coq.Init.Peano.le_S_n	40
Coq.Init.Peano.le_0_n	40	2.0.4	search with cache (only 1: induction n; only 1: auto; only 1: auto).	0.0546729564667	9
Coq.Init.Peano.le_n_S	40	3.0.6	search with cache (only 1: induction 1; only 1: constructor; only 1: auto).	0.39444899559	266
Coq.Init.Peano.nat_case	40	1.7.1	search with cache (only 1: induction n; only 1: auto; only 1: auto).	0.234680891037	94
Coq.Init.Peano.nat_double_ind	40	0.0.13.1.0	search with cache (only 1: induction n; only 1: auto; only 1: destruct m; only 1: auto; only 1: auto).	0.976984977722	968
Coq.Init.Peano.max_l	40
Coq.Init.Peano.max_r	40
Coq.Init.Peano.min_l	40	0.1.3.2.2.3.0.0.0	search with cache (only 1: revert m; only 1: induction n; only 1: trivial; only 1: destruct m; only 1: inversion 1; only 1: intros; only 1: simpl; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	13.2857999802	10545
Coq.Init.Peano.min_r	40	0.1.2.0.0.0.0.1.1.1.0.0	search with cache (only 1: revert m; only 1: induction n; only 1: simpl; only 1: inversion 1; only 1: trivial; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	13.1809430122	7447
Coq.Init.Peano.nat_rect_succ_r	40	1.0.3.1.13	search with cache (only 1: induction n as [| p H]; only 1: reflexivity; only 1: simpl; only 1: destruct H; only 1: auto).	1.2341709137	581
Coq.Init.Peano.nat_rect_plus	40	0.1.4.2.1.0	search with cache (only 1: induction n; only 1: reflexivity; only 1: intros; only 1: simpl; only 1: rewrite <- ?IHn; only 1: trivial).	5.71374988556	1363
Coq.Init.Logic_Type.identity_sym	40	1.6	search with cache (only 1: destruct 1; only 1: trivial).	0.0111329555511	9
Coq.Init.Logic_Type.identity_trans	40	0.0	search with cache (only 1: destruct 1; only 1: trivial).	0.00973415374756	2
Coq.Init.Logic_Type.identity_congr	40	1.1	search with cache (only 1: destruct 1; only 1: trivial).	0.0103142261505	4
Coq.Init.Logic_Type.not_identity_sym	40	0.13.2	search with cache (only 1: destruct 2; only 1: destruct H; only 1: trivial).	0.191097974777	546
Coq.Init.Logic_Type.identity_ind_r	40	3.6	search with cache (only 1: destruct 2; only 1: assumption).	0.0228838920593	39
Coq.Init.Logic_Type.identity_rec_r	40	0.0.0	search with cache (only 1: intros A x P H y H0; only 1: case identity_sym with (1 := H0); only 1: trivial).	0.0111999511719	3
Coq.Init.Logic_Type.identity_rect_r	40	0.0.0	search with cache (only 1: intros A x P H y H0; only 1: case identity_sym with (1 := H0); only 1: trivial).	0.0121130943298	3
Coq.Init.Wf.Acc_inv	40	2.16	search with cache (only 1: destruct 1; only 1: trivial).	0.152209997177	324
Coq.Init.Wf.well_founded_induction_type	40
Coq.Init.Wf.well_founded_induction	40	0.0.0.1	search with cache (only 1: intros; only 1: apply Acc_rect; only 1: auto; only 1: auto).	0.0246720314026	5
Coq.Init.Wf.well_founded_ind	40	0.0.0.1	search with cache (only 1: intros; only 1: apply Acc_rect; only 1: auto; only 1: auto).	0.0237910747528	5
Coq.Init.Wf.Fix_F_eq	40	0.116	search with cache (only 1: intros f [x]; only 1: auto).	12.7518620491	62536
Coq.Init.Wf.Fix_F_inv	40
Coq.Init.Wf.Fix_eq	40
Coq.Init.Wf.well_founded_induction_type_2	40
Coq.Init.Datatypes.andb_prop	40
Coq.Init.Datatypes.andb_true_intro	40	1.1.3.25.85	search with cache (only 1: intro H; only 1: destruct 1; only 1: destruct H; only 1: assumption; only 1: assumption).	30.5050179958	250616
Coq.Init.Datatypes.eq_true_ind_r	40	6.63.19	search with cache (only 1: intros A P H; only 1: destruct 1; only 1: assumption).	2.00134515762	18153
Coq.Init.Datatypes.eq_true_rec_r	40	1.0.0	search with cache (only 1: intros P b H H0; only 1: destruct H0 in H; only 1: assumption).	0.0148248672485	4
Coq.Init.Datatypes.eq_true_rect_r	40	1.0.0	search with cache (only 1: intros P b H H0; only 1: destruct H0 in H; only 1: assumption).	0.0351710319519	4
Coq.Init.Datatypes.surjective_pairing	40	0.1.6	search with cache (only 1: intros; only 1: destruct p; only 1: reflexivity).	0.0520269870758	10
Coq.Init.Datatypes.injective_projections	40
Coq.Init.Datatypes.pair_equal_spec	40
Coq.Init.Datatypes.rew_pair	40	1.4	search with cache (only 1: destruct H; only 1: trivial).	0.0481238365173	7
Coq.Init.Datatypes.comparison_eq_stable	40
Coq.Init.Datatypes.CompOpp_involutive	40	2.2.2.3.1	search with cache (only 1: intro H; only 1: reflexivity || destruct H; only 1: reflexivity || destruct H; only 1: reflexivity || destruct H; only 1: reflexivity || destruct H).	0.336431980133	215
Coq.Init.Datatypes.CompOpp_inj	40	0.2.2.2.0.2.2.2.0.2	search with cache (only 1: destruct c, c'; only 1: reflexivity; only 1: discriminate; only 1: discriminate; only 1: discriminate; only 1: reflexivity; only 1: discriminate; only 1: discriminate; only 1: discriminate; only 1: reflexivity).	6.35638523102	9298
Coq.Init.Datatypes.CompOpp_iff	40
Coq.Init.Datatypes.CompareSpec2Type	40
Coq.Init.Datatypes.CompSpec2Type	40
Coq.Init.Logic.proj1	40
Coq.Init.Logic.proj2	40	0.0	search with cache (only 1: destruct 1; only 1: trivial).	0.00345611572266	2
Coq.Init.Logic.iff_refl	40
Coq.Init.Logic.iff_trans	40	2.2.0.2.2	search with cache (only 1: destruct 1; only 1: destruct 1; only 1: split; only 1: auto; only 1: auto).	0.0169439315796	95
Coq.Init.Logic.iff_sym	40	0.0.0.3	search with cache (only 1: destruct 1; only 1: split; only 1: trivial; only 1: trivial).	0.00517702102661	12
Coq.Init.Logic.and_iff_compat_l	40	0.0.2.0.0.0.2.0.1.3	search with cache (only 1: destruct 1; only 1: split; only 1: destruct 1; only 1: split; only 1: auto; only 1: auto; only 1: destruct 1; only 1: split; only 1: auto; only 1: auto).	0.052973985672	625
Coq.Init.Logic.and_iff_compat_r	40	2.2.1.0.2.2.1.0.0.0	search with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: intros [? ?]; only 1: split; only 1: auto; only 1: auto; only 1: intros [? ?]; only 1: split; only 1: auto; only 1: auto).	0.225919008255	2959
Coq.Init.Logic.or_iff_compat_l	40
Coq.Init.Logic.or_iff_compat_r	40	4.1.4.0.1.4.1.4.0.1.0.0	search with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: intros [?| ?]; only 1: left; only 1: auto; only 1: right; only 1: auto; only 1: intros [?| ?]; only 1: left; only 1: auto; only 1: right; only 1: auto).	0.713670969009	13174
Coq.Init.Logic.imp_iff_compat_l	40	4.4.0.3	search with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: auto; only 1: auto).	0.0315809249878	233
Coq.Init.Logic.imp_iff_compat_r	40	5.5.0.3	search with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: auto; only 1: auto).	0.0414319038391	357
Coq.Init.Logic.not_iff_compat	40	8.8.0.0	search with cache (only 1: intros A B [H1 H2]; only 1: split; only 1: auto; only 1: auto).	0.0757739543915	721
Coq.Init.Logic.neg_false	40	2.11.9.2.2.2.0	search with cache (only 1: intros; only 1: split; only 1: split; only 1: trivial; only 1: destruct 1; only 1: intros [? ?]; only 1: trivial).	1.1800429821	11890
Coq.Init.Logic.and_cancel_l	40
Coq.Init.Logic.and_cancel_r	40
Coq.Init.Logic.and_comm	40	0.1.7.3.0.1.7.3.3	search with cache (only 1: split; only 1: intros [HypL HypR]; only 1: split; only 1: trivial; only 1: apply HypL; only 1: intros [HypL HypR]; only 1: split; only 1: trivial; only 1: apply HypL).	1.91464209557	10042
Coq.Init.Logic.and_assoc	40	5.5.0.6.6.3.5.0.6.0.6.3.1.0	search with cache (only 1: intros; only 1: split; only 1: intros [HypL HypR]; only 1: split; only 1: apply HypL; only 1: split; only 1: apply HypL; only 1: apply HypR; only 1: intros [HypL HypR]; only 1: split; only 1: split; only 1: apply HypL; only 1: apply HypR; only 1: apply HypR).	18.6163048744	127730
Coq.Init.Logic.or_cancel_l	40
Coq.Init.Logic.or_cancel_r	40
Coq.Init.Logic.or_comm	40	0.2.1.5.10.1.2.0.5.10.5	search with cache (only 1: split; only 1: intros [?| ?]; only 1: right; only 1: exact H; only 1: left; only 1: trivial; only 1: intros [?| ?]; only 1: right; only 1: trivial; only 1: left; only 1: exact H).	7.31288504601	42981
Coq.Init.Logic.or_assoc	40
Coq.Init.Logic.iff_and	40	2.2	search with cache (only 1: intros; only 1: assumption).	0.0358719825745	12
Coq.Init.Logic.iff_to_and	40	1.1.4.3.5	search with cache (only 1: intros; only 1: apply and_iff_compat_r; only 1: split; only 1: trivial; only 1: trivial).	0.748908042908	1676
Coq.Init.Logic.inst	40	12	search with cache (only 1: trivial).	0.0459311008453	89
Coq.Init.Logic.gen	40	1.0	search with cache (only 1: unfold all; only 1: auto).	0.0348360538483	3
Coq.Init.Logic.absurd	40	3.16.2.14	search with cache (only 1: unfold not; only 1: intro H; only 1: intros A B []; only 1: trivial).	1.33940696716	8818
Coq.Init.Logic.eq_sym	40	1.17	search with cache (only 1: destruct 1; only 1: trivial).	0.121812105179	265
Coq.Init.Logic.eq_trans	40	0.0	search with cache (only 1: destruct 1; only 1: trivial).	0.0225448608398	2
Coq.Init.Logic.eq_trans_r	40	1.0	search with cache (only 1: destruct 2; only 1: trivial).	0.022411108017	3
Coq.Init.Logic.f_equal	40	0.1	search with cache (only 1: destruct 1; only 1: trivial).	0.0330228805542	3
Coq.Init.Logic.not_eq_sym	40	0.7.1.5.16	search with cache (only 1: unfold not; only 1: intro H1; only 1: destruct 1; only 1: elim H1; only 1: trivial).	0.701254844666	3092
Coq.Init.Logic.eq_sind_r	40	2.6	search with cache (only 1: destruct 2; only 1: auto).	0.0258100032806	16
Coq.Init.Logic.eq_ind_r	40	1.0.0	search with cache (only 1: intros A x P H y H0; only 1: elim eq_sym with (1 := H0); only 1: assumption).	0.0253448486328	4
Coq.Init.Logic.eq_rec_r	40	1.0.0	search with cache (only 1: intros A x P H y H0; only 1: elim eq_sym with (1 := H0); only 1: assumption).	0.0374500751495	4
Coq.Init.Logic.eq_rect_r	40	1.0.0	search with cache (only 1: intros A x P H y H0; only 1: elim eq_sym with (1 := H0); only 1: assumption).	0.0382440090179	4
Coq.Init.Logic.f_equal_dep	40
Coq.Init.Logic.f_equal_dep2	40	0.3.0	search with cache (only 1: destruct H; only 1: destruct 1; only 1: reflexivity).	0.0424799919128	6
Coq.Init.Logic.rew_opp_r	40	0.1	search with cache (only 1: destruct H; only 1: reflexivity).	0.0263180732727	3
Coq.Init.Logic.rew_opp_l	40	0.0.0	search with cache (only 1: intros; only 1: destruct H; only 1: reflexivity).	0.0360641479492	3
Coq.Init.Logic.f_equal2	40	1.11.1.0	search with cache (only 1: intros; only 1: destruct H; only 1: elim eq_sym with (1 := H0); only 1: trivial).	0.531754970551	482
Coq.Init.Logic.f_equal3	40	0.1.0.1	search with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	0.0567948818207	21
Coq.Init.Logic.f_equal4	40	0.1.0.0.1	search with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	0.058650970459	22
Coq.Init.Logic.f_equal5	40	0.1.0.0.0.1	search with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	0.0623769760132	23
Coq.Init.Logic.f_equal_compose	40	0.4.7.3	search with cache (only 1: intros A x P H y H0; only 1: intros h1 h2; only 1: destruct h2; only 1: reflexivity).	0.349782943726	345
Coq.Init.Logic.eq_trans_refl_l	40	0.1	search with cache (only 1: destruct e; only 1: reflexivity).	0.0381550788879	3
Coq.Init.Logic.eq_trans_refl_r	40	0.0	search with cache (only 1: destruct e; only 1: reflexivity).	0.038614988327	2
Coq.Init.Logic.eq_sym_involutive	40	0.0	search with cache (only 1: destruct e; only 1: reflexivity).	0.0393221378326	2
Coq.Init.Logic.eq_trans_sym_inv_l	40	0.0	search with cache (only 1: destruct e; only 1: reflexivity).	0.0206489562988	2
Coq.Init.Logic.eq_trans_sym_inv_r	40	0.0	search with cache (only 1: destruct e; only 1: reflexivity).	0.0362288951874	2
Coq.Init.Logic.eq_trans_assoc	40	0.5.8.0	search with cache (only 1: destruct e; only 1: intros h1 h2; only 1: destruct h2; only 1: reflexivity).	0.451217889786	349
Coq.Init.Logic.rew_map	40	0.0.1	search with cache (only 1: intros; only 1: destruct H; only 1: reflexivity).	0.040463924408	4
Coq.Init.Logic.eq_trans_map	40	3.23.2.22.7	search with cache (only 1: intros A x P H y H0; only 1: intros ? ? ? Fl Fr; only 1: destruct 1; only 1: destruct Fl; only 1: assumption).	10.5500981808	53261
Coq.Init.Logic.map_subst	40	0.0	search with cache (only 1: destruct H; only 1: reflexivity).	0.0371799468994	2
Coq.Init.Logic.map_subst_map	40	0.0	search with cache (only 1: destruct H; only 1: reflexivity).	0.0381078720093	2
Coq.Init.Logic.rew_swap	40	0.2.3.1	search with cache (only 1: destruct H; only 1: intros; only 1: destruct H; only 1: reflexivity).	0.0531680583954	25
Coq.Init.Logic.rew_compose	40	2.0.0	search with cache (only 1: intros; only 1: destruct H2; only 1: trivial).	0.0414140224457	5
Coq.Init.Logic.eq_id_comm_l	40
Coq.Init.Logic.eq_id_comm_r	40
Coq.Init.Logic.eq_refl_map_distr	40	0.0	search with cache (only 1: intros; only 1: reflexivity).	0.0493059158325	2
Coq.Init.Logic.eq_trans_map_distr	40	0.1.1.18.7.0	search with cache (only 1: intros; only 1: unfold f_equal; only 1: destruct e; only 1: rewrite eq_trans_refl_l; only 1: rewrite eq_trans_refl_l; only 1: reflexivity).	1.06915092468	3266
Coq.Init.Logic.eq_sym_map_distr	40	0.5	search with cache (only 1: destruct e; only 1: reflexivity).	0.0550968647003	14
Coq.Init.Logic.eq_trans_sym_distr	40	0.3.8	search with cache (only 1: destruct e'; only 1: rewrite eq_trans_refl_l; only 1: reflexivity).	0.278753995895	168
Coq.Init.Logic.eq_trans_rew_distr	40	0.6	search with cache (only 1: destruct e'; only 1: reflexivity).	0.0232000350952	16
Coq.Init.Logic.rew_const	40	0.23	search with cache (only 1: destruct e; only 1: reflexivity).	0.239502906799	522
Coq.Init.Logic.unique_existence	40
Coq.Init.Logic.forall_exists_unique_domain_coincide	40
Coq.Init.Logic.forall_exists_coincide_unique_domain	40
Coq.Init.Logic.exists_inhabited	40	13.11.1	search with cache (only 1: intros A P H; only 1: destruct H; only 1: auto).	0.608936071396	1708
Coq.Init.Logic.inhabited_covariant	40	0.2.10	search with cache (only 1: intros; only 1: destruct H; only 1: auto).	0.12833404541	102
Coq.Init.Logic.eq_stepl	40	0.7.3.6	search with cache (only 1: intros; only 1: destruct H; only 1: elim eq_sym with (1 := H0); only 1: trivial).	0.187547922134	290
Coq.Init.Logic.iff_stepl	40	22.22.4.2	search with cache (only 1: intros A B C [H1 H2] [H3 H4]; only 1: split; only 1: auto; only 1: auto).	25.3685121536	56479
Coq.Init.Logic.eq_ex_uncurried	40
Coq.Init.Logic.rew_ex	40
Coq.Init.Logic.eq_ex2_uncurried	40	0.0.0.5.0	search with cache (only 1: destruct pq as [p q]; only 1: destruct H; only 1: destruct q; only 1: destruct p; only 1: reflexivity).	0.110359191895	37
Coq.Init.Logic.rew_ex2	40	0.0	search with cache (only 1: destruct H, u; only 1: reflexivity).	0.0530889034271	2
Coq.Lists.SetoidPermutation.Equivalence_instance_0	40
Coq.Lists.SetoidPermutation.PermutationA_cons	40	0.0.6	search with cache (only 1: constructor; only 1: eauto; only 1: eauto).	0.274101018906	18
Coq.Lists.SetoidPermutation.PermutationA_app_head	40	1.1.0.1.4.1	search with cache (only 1: intuition; only 1: induction l; only 1: intuition; only 1: apply permA_skip; only 1: intuition; only 1: eauto).	4.22597718239	731
Coq.Lists.SetoidPermutation.PermutationA_app	40
Coq.Lists.SetoidPermutation.PermutationA_app_tail	40	0.1.1.0.1.10	search with cache (only 1: induction 1; only 1: easy; only 1: now apply permA_skip; only 1: rewrite <- !app_comm_cons; only 1: now apply permA_swap; only 1: do 2 (etransitivity; try eassumption)).	6.11250901222	1347
Coq.Lists.SetoidPermutation.PermutationA_cons_append	40	9.0.4.2.2.13	search with cache (only 1: induction l; only 1: easy; only 1: rewrite <- !app_comm_cons; only 1: etransitivity; only 1: now apply permA_swap; only 1: intuition).	23.1126859188	6619
Coq.Lists.SetoidPermutation.PermutationA_app_comm	40
Coq.Lists.SetoidPermutation.PermutationA_cons_app	40
Coq.Lists.SetoidPermutation.PermutationA_middle	40	0	search with cache (only 1: now rewrite app_comm_cons, (PermutationA_cons_append l₁ x), <- app_assoc).	0.0683958530426	1
Coq.Lists.SetoidPermutation.PermutationA_equivlistA	40
Coq.Lists.SetoidPermutation.NoDupA_equivlistA_PermutationA	40
Coq.Lists.SetoidPermutation.Permutation_eqlistA_commute	40
Coq.Lists.SetoidPermutation.PermutationA_decompose	40
Coq.Lists.SetoidPermutation.Permutation_PermutationA	40	13.1.13.2.8	search with cache (only 1: induction 1; only 1: intuition; only 1: intuition; only 1: eauto; only 1: eauto).	11.3400828838	7121
Coq.Lists.SetoidPermutation.eqlistA_PermutationA	40	0.2.1	search with cache (only 1: induction 1; only 1: intuition; only 1: now constructor).	0.15248799324	6
Coq.Lists.SetoidPermutation.NoDupA_equivlistA_decompose	40
Coq.Lists.SetoidPermutation.PermutationA_preserves_NoDupA	40
Coq.Lists.SetoidList.InA_altdef	40
Coq.Lists.SetoidList.InA_cons	40	0.0.1.0.0.13.0	search with cache (only 1: split; only 1: inversion 1; only 1: auto; only 1: auto; only 1: induction 1; only 1: auto; only 1: auto).	5.83239889145	1382
Coq.Lists.SetoidList.InA_nil	40	1.0	search with cache (only 1: intuition; only 1: invlist InA).	0.174310207367	3
Coq.Lists.SetoidList.InA_alt	40	0.3.2.0.5.2.0.0.1	search with cache (only 1: split; only 1: induction 1; only 1: firstorder; only 1: firstorder; only 1: induction l; only 1: firstorder; only 1: firstorder; only 1: subst; only 1: auto).	21.7023451328	6396
Coq.Lists.SetoidList.NoDupA_altdef	40
Coq.Lists.SetoidList.incl_nil	40	6	search with cache (only 1: now simpl).	0.563361883163	43
Coq.Lists.SetoidList.eqlistA_altdef	40
Coq.Lists.SetoidList.equivlist_equiv	40	17	search with cache (only 1: firstorder).	0.214551925659	137
Coq.Lists.SetoidList.eqlistA_equiv	40
Coq.Lists.SetoidList.eqlistA_equivlistA	40
Coq.Lists.SetoidList.InA_compat	40
Coq.Lists.SetoidList.InA_eqA	40	0.1.10	search with cache (only 1: intros x y z H; only 1: rewrite 2!InA_alt; only 1: firstorder).	3.56888198853	277
Coq.Lists.SetoidList.In_InA	40	0.5.0	search with cache (only 1: intros; only 1: rewrite InA_altdef, Exists_exists; only 1: firstorder).	0.0931849479675	8
Coq.Lists.SetoidList.InA_split	40
Coq.Lists.SetoidList.InA_app	40
Coq.Lists.SetoidList.InA_app_iff	40
Coq.Lists.SetoidList.InA_rev	40
Coq.Lists.SetoidList.InA_singleton	40	0.0.0.22	search with cache (only 1: rewrite InA_altdef, Exists_exists; only 1: firstorder; only 1: subst; only 1: intuition).	6.21160197258	681
Coq.Lists.SetoidList.InA_double_head	40	1.2	search with cache (only 1: rewrite 2!InA_cons; only 1: intuition).	0.114416122437	5
Coq.Lists.SetoidList.InA_permute_heads	40	0.0	search with cache (only 1: rewrite !InA_cons; only 1: tauto).	0.416448831558	2
Coq.Lists.SetoidList.InA_app_idem	40
Coq.Lists.SetoidList.NoDupA_app	40
Coq.Lists.SetoidList.NoDupA_rev	40
Coq.Lists.SetoidList.NoDupA_split	40
Coq.Lists.SetoidList.NoDupA_swap	40
Coq.Lists.SetoidList.NoDupA_singleton	40	0.0.2.1	search with cache (only 1: constructor; only 1: intro; only 1: inv; only 1: auto).	0.0875520706177	7
Coq.Lists.SetoidList.equivlistA_cons_proper	40
Coq.Lists.SetoidList.equivlistA_app_proper	40
Coq.Lists.SetoidList.equivlistA_cons_nil	40
Coq.Lists.SetoidList.equivlistA_nil_eq	40
Coq.Lists.SetoidList.equivlistA_double_head	40	1.0.0.0	search with cache (only 1: red; only 1: intros; only 1: rewrite 2!InA_cons; only 1: intuition).	0.243200063705	5
Coq.Lists.SetoidList.equivlistA_permute_heads	40	1.2.0	search with cache (only 1: intro; only 1: rewrite !InA_cons; only 1: intuition).	0.466726064682	20
Coq.Lists.SetoidList.equivlistA_app_idem	40	0.0.0.0.1.2	search with cache (only 1: red; only 1: split; only 1: rewrite InA_app_iff; only 1: tauto; only 1: rewrite InA_app_iff; only 1: tauto).	0.421601057053	34
Coq.Lists.SetoidList.equivlistA_NoDupA_split	40
Coq.Lists.SetoidList.fold_right_eqlistA	40
Coq.Lists.SetoidList.ForallOrdPairs_inclA	40
Coq.Lists.SetoidList.fold_right_commutes_restr	40
Coq.Lists.SetoidList.fold_right_equivlistA_restr	40
Coq.Lists.SetoidList.fold_right_add_restr	40
Coq.Lists.SetoidList.fold_right_commutes	40	4.1.0.2.1.1.0.0.0.0.6	search with cache (only 1: induction s1; only 1: simpl; only 1: intros; only 1: reflexivity; only 1: simpl; only 1: intros; only 1: transitivity (f a (f x (fold_right f i (s1 ++ s2)))); only 1: apply Comp; only 1: auto; only 1: apply IHs1; only 1: auto).	6.07432484627	2446
Coq.Lists.SetoidList.fold_right_equivlistA	40
Coq.Lists.SetoidList.fold_right_add	40
Coq.Lists.SetoidList.fold_right_eqlistA2	40
Coq.Lists.SetoidList.fold_right_commutes_restr2	40
Coq.Lists.SetoidList.fold_right_equivlistA_restr2	40
Coq.Lists.SetoidList.fold_right_add_restr2	40
Coq.Lists.SetoidList.fold_right_commutes2	40
Coq.Lists.SetoidList.fold_right_equivlistA2	40
Coq.Lists.SetoidList.fold_right_add2	40
Coq.Lists.SetoidList.InA_dec	40
Coq.Lists.SetoidList.removeA_filter	40
Coq.Lists.SetoidList.removeA_InA	40
Coq.Lists.SetoidList.removeA_NoDupA	40
Coq.Lists.SetoidList.removeA_equivlistA	40
Coq.Lists.SetoidList.InfA_ltA	40
Coq.Lists.SetoidList.InfA_compat	40
Coq.Lists.SetoidList.InfA_eqA	40
Coq.Lists.SetoidList.SortA_InfA_InA	40
Coq.Lists.SetoidList.In_InfA	40	11.0.0.0.0	search with cache (only 1: simple induction l; only 1: intros; only 1: intuition; only 1: intros; only 1: intuition).	25.5947790146	3115
Coq.Lists.SetoidList.InA_InfA	40	2.1.0.0.0.0	search with cache (only 1: simple induction l; only 1: intros; only 1: constructor; only 1: intros; only 1: constructor; only 1: eauto).	0.383963108063	11
Coq.Lists.SetoidList.InfA_alt	40
Coq.Lists.SetoidList.InfA_app	40	2.4.2.44.2	search with cache (only 1: intros; only 1: inversion H; only 1: auto; only 1: constructor; only 1: auto).	38.5428249836	24697
Coq.Lists.SetoidList.SortA_app	40
Coq.Lists.SetoidList.SortA_NoDupA	40
Coq.Lists.SetoidList.eqlistA_length	40
Coq.Lists.SetoidList.app_eqlistA_compat	40	0.0.5.3.1.2	search with cache (only 1: induction 1; only 1: simpl in *; only 1: congruence; only 1: constructor; only 1: congruence; only 1: auto).	7.65887093544	967
Coq.Lists.SetoidList.eqlistA_app	40	0.0.3.0.0	search with cache (only 1: induction 1; only 1: simpl; only 1: congruence; only 1: simpl; only 1: auto).	0.211374998093	16
Coq.Lists.SetoidList.eqlistA_rev_app	40
Coq.Lists.SetoidList.rev_eqlistA_compat	40
Coq.Lists.SetoidList.eqlistA_rev	40	3.1.4.1.0.1	search with cache (only 1: induction 1; only 1: auto; only 1: simpl; only 1: apply eqlistA_rev_app; only 1: auto; only 1: auto).	1.53963899612	464
Coq.Lists.SetoidList.SortA_equivlistA_eqlistA	40
Coq.Lists.SetoidList.filter_sort	40
Coq.Lists.SetoidList.filter_InA	40
Coq.Lists.SetoidList.filter_split	40
Coq.Lists.SetoidList.findA_NoDupA	40
Coq.Lists.List.nil_cons	40	3.2	search with cache (only 1: intros a n Ha; only 1: discriminate).	0.0530059337616	7
Coq.Lists.List.destruct_list	40
Coq.Lists.List.hd_error_tl_repr	40
Coq.Lists.List.hd_error_some_nil	40	0.0.1.0.0.0.1	search with cache (only 1: destruct l as [| x xs]; only 1: unfold hd_error, tl; only 1: intros a r; only 1: firstorder  discriminate; only 1: simpl; only 1: intros; only 1: inversion 1).	0.398489952087	41
Coq.Lists.List.length_zero_iff_nil	40	0.0.3.0.0.3.2	search with cache (only 1: split; only 1: destruct l; only 1: firstorder  discriminate; only 1: now discriminate; only 1: destruct l; only 1: firstorder  discriminate; only 1: now discriminate).	1.46534705162	293
Coq.Lists.List.hd_error_nil	40	0.0	search with cache (only 1: unfold hd_error, tl; only 1: firstorder  discriminate).	0.0638151168823	2
Coq.Lists.List.hd_error_cons	40	0.1.0	search with cache (only 1: intros; only 1: simpl; only 1: reflexivity).	0.0835340023041	4
Coq.Lists.List.in_eq	40	4.0	search with cache (only 1: intros; only 1: firstorder  discriminate).	0.0852320194244	12
Coq.Lists.List.in_cons	40	0.0	search with cache (only 1: simpl; only 1: auto).	0.0632629394531	2
Coq.Lists.List.not_in_cons	40	0.0.7.7.0.4.5	search with cache (only 1: simpl; only 1: split; only 1: auto; only 1: inversion 1; only 1: inversion 1; only 1: auto; only 1: auto).	4.30060601234	2734
Coq.Lists.List.in_nil	40	0	search with cache (only 1: intuition).	0.0430960655212	1
Coq.Lists.List.in_split	40
Coq.Lists.List.in_inv	40	0.0.0	search with cache (only 1: destruct 1; only 1: intuition; only 1: intuition).	0.0935969352722	3
Coq.Lists.List.in_dec	40
Coq.Lists.List.app_cons_not_nil	40
Coq.Lists.List.app_nil_l	40	0	search with cache (only 1: auto).	0.0312900543213	1
Coq.Lists.List.app_nil_r	40	0.3.8.1.6	search with cache (only 1: induction l; only 1: reflexivity; only 1: simpl; only 1: apply f_equal; only 1: auto).	1.83127403259	919
Coq.Lists.List.app_nil_end	40	1.0.0.1.0.1	search with cache (only 1: induction l; only 1: simpl; only 1: firstorder  discriminate; only 1: simpl; only 1: f_equal; only 1: auto).	0.145401954651	9
Coq.Lists.List.app_assoc	40	6.0.2.5.0.11	search with cache (only 1: induction l; only 1: reflexivity; only 1: simpl; only 1: intros; only 1: apply f_equal; only 1: auto).	7.87139487267	3470
Coq.Lists.List.app_assoc_reverse	40	1.0.0.0.0.2.0	search with cache (only 1: intros l m n; only 1: induction l; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: f_equal; only 1: auto).	0.338622093201	29
Coq.Lists.List.app_comm_cons	40	6	search with cache (only 1: auto).	0.0490279197693	7
Coq.Lists.List.app_eq_nil	40	4.3.0.3.6	search with cache (only 1: induction l; only 1: auto; only 1: simpl; only 1: intros; only 1: discriminate H).	2.25222706795	1101
Coq.Lists.List.app_eq_unit	40
Coq.Lists.List.app_inj_tail	40
Coq.Lists.List.app_length	40
Coq.Lists.List.in_app_or	40
Coq.Lists.List.in_or_app	40
Coq.Lists.List.in_app_iff	40
Coq.Lists.List.app_inv_head	40
Coq.Lists.List.app_inv_tail	40
Coq.Lists.List.nth_in_or_default	40
Coq.Lists.List.nth_S_cons	40	1.0	search with cache (only 1: simpl; only 1: auto).	0.173217773438	12
Coq.Lists.List.nth_default_eq	40
Coq.Lists.List.nth_In	40
Coq.Lists.List.In_nth	40
Coq.Lists.List.nth_overflow	40
Coq.Lists.List.nth_indep	40	0.0.0.0.6.0.6	search with cache (only 1: induction l as [| a l IH]; only 1: easy; only 1: destruct n; only 1: simpl; only 1: auto with arith; only 1: simpl; only 1: auto with arith).	3.27480602264	765
Coq.Lists.List.app_nth1	40	0.0.0.0.7.0.0	search with cache (only 1: induction l; only 1: easy; only 1: destruct n; only 1: simpl; only 1: auto with arith; only 1: simpl; only 1: auto with arith).	2.43071985245	538
Coq.Lists.List.app_nth2	40	0.1.0.1.3.1.1.0.0.0	search with cache (only 1: induction l; only 1: inversion 1; only 1: auto with arith; only 1: auto with arith; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: auto with arith; only 1: simpl; only 1: auto with arith).	29.4071888924	5364
Coq.Lists.List.nth_split	40
Coq.Lists.List.nth_error_In	40
Coq.Lists.List.In_nth_error	40
Coq.Lists.List.nth_error_None	40
Coq.Lists.List.nth_error_Some	40
Coq.Lists.List.nth_error_split	40
Coq.Lists.List.nth_error_app1	40	1.0.0.0.0.3.5.0	search with cache (only 1: revert n; only 1: induction l; only 1: easy; only 1: destruct n; only 1: simpl; only 1: now auto with arith; only 1: simpl; only 1: auto with arith).	10.7326161861	1227
Coq.Lists.List.nth_error_app2	40	0.0.0.1.3.0.1.1.0.0.1	search with cache (only 1: revert l; only 1: induction n; only 1: intros [| a l] H; only 1: auto; only 1: simpl in *; only 1: now auto with arith; only 1: intros [| a l] H; only 1: auto; only 1: simpl in *; only 1: apply IHn; only 1: auto with arith).	8.22593307495	1597
Coq.Lists.List.nth_error_nth	40
Coq.Lists.List.nth_error_nth'	40
Coq.Lists.List.remove_In	40
Coq.Lists.List.app_removelast_last	40
Coq.Lists.List.exists_last	40
Coq.Lists.List.removelast_app	40
Coq.Lists.List.count_occ_In	40
Coq.Lists.List.count_occ_not_In	40
Coq.Lists.List.count_occ_nil	40	6.0	search with cache (only 1: simpl; only 1: intuition).	0.0667760372162	8
Coq.Lists.List.count_occ_inv_nil	40
Coq.Lists.List.count_occ_cons_eq	40	4.4.0.8	search with cache (only 1: simpl; only 1: destruct eq_dec as [->| Hneq]; only 1: intuition; only 1: intuition).	2.61019086838	631
Coq.Lists.List.count_occ_cons_neq	40	0.1.0	search with cache (only 1: intros H; only 1: simpl; only 1: now destruct (eq_dec x y)).	0.0464498996735	4
Coq.Lists.List.rev_app_distr	40
Coq.Lists.List.rev_unit	40	0.1.0.0.2.27	search with cache (only 1: induction l; only 1: trivial; only 1: intro y; only 1: simpl; only 1: rewrite (IHl y); only 1: trivial).	37.8747310638	20717
Coq.Lists.List.rev_involutive	40
Coq.Lists.List.in_rev	40
Coq.Lists.List.rev_length	40
Coq.Lists.List.rev_nth	40
Coq.Lists.List.rev_append_rev	40
Coq.Lists.List.rev_alt	40
Coq.Lists.List.rev_list_ind	40	5.0.0.39.0.1	search with cache (only 1: intro y; only 1: simpl; only 1: induction l; only 1: trivial; only 1: simpl; only 1: auto).	26.7190921307	22367
Coq.Lists.List.rev_ind	40
Coq.Lists.List.concat_nil	40	4	search with cache (only 1: trivial).	0.0225331783295	5
Coq.Lists.List.concat_cons	40	0	search with cache (only 1: reflexivity).	0.0212700366974	1
Coq.Lists.List.concat_app	40
Coq.Lists.List.list_eq_dec	40
Coq.Lists.List.map_cons	40	0	search with cache (only 1: now f_equal).	0.0437641143799	1
Coq.Lists.List.in_map	40
Coq.Lists.List.in_map_iff	40	0.0.0	search with cache (only 1: induction l; only 1: firstorder  (subst; auto); only 1: firstorder  (subst; auto)).	0.175848960876	3
Coq.Lists.List.map_length	40	3.3.0.0	search with cache (only 1: induction l; only 1: firstorder  (subst; auto); only 1: simpl; only 1: auto with arith).	0.271450042725	13
Coq.Lists.List.map_nth	40
Coq.Lists.List.map_nth_error	40
Coq.Lists.List.map_app	40	0.5.1.7.0.6	search with cache (only 1: induction l; only 1: reflexivity; only 1: intro y; only 1: simpl; only 1: rewrite (IHl y); only 1: reflexivity).	36.975785017	10906
Coq.Lists.List.map_rev	40
Coq.Lists.List.map_eq_nil	40
Coq.Lists.List.count_occ_map	40
Coq.Lists.List.in_flat_map	40
Coq.Lists.List.flat_map_concat_map	40	3.0.0.1.0.8	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite IHl; only 1: auto).	3.65720701218	877
Coq.Lists.List.concat_map	40	1.0.7.0.1.0.2.0	search with cache (only 1: intros A B f l; only 1: induction l as [| x l IH]; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: rewrite map_app; only 1: rewrite IH; only 1: reflexivity).	4.85904812813	1891
Coq.Lists.List.map_id	40	1.1.0.3.5	search with cache (only 1: induction l; only 1: reflexivity; only 1: simpl; only 1: rewrite IHl; only 1: reflexivity).	2.05302095413	629
Coq.Lists.List.map_map	40	2.4.0.1.0.1	search with cache (only 1: induction l; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: rewrite IHl; only 1: reflexivity).	3.56741285324	745
Coq.Lists.List.map_ext_in	40
Coq.Lists.List.ext_in_map	40
Coq.Lists.List.map_ext_in_iff	40
Coq.Lists.List.map_ext	40	3.0.1.1.0.1.1	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite H by intuition; only 1: rewrite IHl; only 1: auto).	0.890962123871	369
Coq.Lists.List.fold_left_app	40	2.0.3.3	search with cache (only 1: induction l; only 1: auto; only 1: simpl; only 1: auto).	0.383427858353	103
Coq.Lists.List.fold_left_length	40
Coq.Lists.List.fold_right_app	40	0.1.1.0.2.2	search with cache (only 1: induction l; only 1: firstorder  (subst; auto); only 1: simpl; only 1: intros; only 1: rewrite IHl; only 1: auto).	1.8194630146	367
Coq.Lists.List.fold_left_rev_right	40
Coq.Lists.List.fold_symmetric	40
Coq.Lists.List.existsb_exists	40
Coq.Lists.List.existsb_nth	40
Coq.Lists.List.existsb_app	40
Coq.Lists.List.forallb_forall	40
Coq.Lists.List.forallb_app	40	1.0.7.6.1.10	search with cache (only 1: induction l1; only 1: intuition; only 1: simpl; only 1: case (f a); only 1: auto; only 1: intuition).	11.3533718586	2988
Coq.Lists.List.filter_In	40
Coq.Lists.List.filter_app	40
Coq.Lists.List.concat_filter_map	40
Coq.Lists.List.find_some	40	1.2.0.0.1.0.17	search with cache (only 1: induction l as [| a l IH]; only 1: simpl; only 1: easy; only 1: simpl; only 1: case_eq (f a); only 1: intuition congruence; only 1: intuition congruence).	10.5941870213	2670
Coq.Lists.List.find_none	40
Coq.Lists.List.partition_cons1	40
Coq.Lists.List.partition_cons2	40	0.0	search with cache (only 1: simpl; only 1: now intros -> ->).	0.0556740760803	2
Coq.Lists.List.partition_length	40
Coq.Lists.List.partition_inv_nil	40
Coq.Lists.List.elements_in_partition	40
Coq.Lists.List.filter_map	40
Coq.Lists.List.filter_ext_in	40
Coq.Lists.List.ext_in_filter	40	33.0.0.0.2	search with cache (only 1: induction l as [| a l IHl]; only 1: rewrite filter_map; only 1: intros [=] ? []; only 1: rewrite filter_map; only 1: apply ext_in_map).	34.9645340443	27760
Coq.Lists.List.filter_ext_in_iff	40	0.1.1.1.22	search with cache (only 1: split; only 1: rewrite filter_map; only 1: apply ext_in_map; only 1: rewrite filter_map; only 1: apply map_ext_in).	4.58849692345	3106
Coq.Lists.List.filter_ext	40	6.2.0	search with cache (only 1: intros f g l H; only 1: apply filter_ext_in; only 1: auto).	0.56723690033	88
Coq.Lists.List.in_split_l	40
Coq.Lists.List.in_split_r	40
Coq.Lists.List.split_nth	40
Coq.Lists.List.split_length_l	40	2.0.0.1.2.2.2.0	search with cache (only 1: induction l; only 1: simpl; only 1: trivial; only 1: simpl; only 1: destruct a; only 1: destruct (split l); only 1: simpl in *; only 1: auto).	4.25573611259	825
Coq.Lists.List.split_length_r	40	0.0.0.1.0.2.0.0	search with cache (only 1: induction l; only 1: simpl; only 1: trivial; only 1: simpl; only 1: destruct a; only 1: destruct (split l); only 1: simpl; only 1: auto).	0.842490911484	76
Coq.Lists.List.split_combine	40
Coq.Lists.List.combine_split	40
Coq.Lists.List.in_combine_l	40
Coq.Lists.List.in_combine_r	40
Coq.Lists.List.combine_length	40	6.0.0.0.0.0.1.3	search with cache (only 1: induction l, l'; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: auto).	12.8014140129	3846
Coq.Lists.List.combine_nth	40
Coq.Lists.List.in_prod_aux	40	15.4.7	search with cache (only 1: induction l; only 1: auto; only 1: firstorder  (subst; auto)).	7.13594412804	2874
Coq.Lists.List.in_prod	40
Coq.Lists.List.in_prod_iff	40
Coq.Lists.List.prod_length	40
Coq.Lists.List.lel_refl	40	68	search with cache (only 1: left).	7.26591706276	6277
Coq.Lists.List.lel_trans	40
Coq.Lists.List.lel_cons_cons	40	3.10.0	search with cache (only 1: unfold lel; only 1: simpl in *; only 1: auto with arith).	3.2460308075	804
Coq.Lists.List.lel_cons	40	0.0.0	search with cache (only 1: unfold lel; only 1: simpl; only 1: auto with arith).	0.151977062225	3
Coq.Lists.List.lel_tail	40	0.0.0	search with cache (only 1: unfold lel; only 1: simpl; only 1: auto with arith).	0.104892969131	3
Coq.Lists.List.lel_nil	40
Coq.Lists.List.incl_refl	40	4	search with cache (only 1: now f_equal).	0.180508852005	40
Coq.Lists.List.incl_tl	40	0.0.9.10	search with cache (only 1: intros; only 1: intro y; only 1: simpl; only 1: auto).	2.05189800262	607
Coq.Lists.List.incl_tran	40	0	search with cache (only 1: auto with datatypes).	0.0223710536957	1
Coq.Lists.List.incl_appl	40	0	search with cache (only 1: auto with datatypes).	0.0266618728638	1
Coq.Lists.List.incl_appr	40	0	search with cache (only 1: auto with datatypes).	0.0271661281586	1
Coq.Lists.List.incl_cons	40	12	search with cache (only 1: firstorder  (subst; auto)).	0.347683906555	105
Coq.Lists.List.incl_app	40
Coq.Lists.List.firstn_nil	40	0.1.48	search with cache (only 1: destruct n; only 1: trivial; only 1: easy).	0.903465032578	1336
Coq.Lists.List.firstn_cons	40	0	search with cache (only 1: now simpl).	0.0179378986359	1
Coq.Lists.List.firstn_all	40	1.8.2.1.20	search with cache (only 1: induction l as [| a l' Hrec]; only 1: now simpl; only 1: simpl; only 1: f_equal; only 1: now simpl).	3.28139400482	1617
Coq.Lists.List.firstn_all2	40
Coq.Lists.List.firstn_O	40	1	search with cache (only 1: now simpl).	0.0234429836273	2
Coq.Lists.List.firstn_le_length	40
Coq.Lists.List.firstn_length_le	40
Coq.Lists.List.firstn_app	40	5.0.0.2.1.0.0.1	search with cache (only 1: induction n; only 1: intros [| a l] H; only 1: auto; only 1: auto; only 1: intros [| a l] H; only 1: auto; only 1: simpl in *; only 1: now f_equal).	23.2405750751	4959
Coq.Lists.List.firstn_app_2	40
Coq.Lists.List.firstn_firstn	40
Coq.Lists.List.firstn_skipn_comm	40
Coq.Lists.List.skipn_firstn_comm	40
Coq.Lists.List.skipn_O	40	0.3.2	search with cache (only 1: induction l as [| x l]; only 1: trivial; only 1: trivial).	0.0774328708649	8
Coq.Lists.List.skipn_nil	40	0.0.15	search with cache (only 1: induction n; only 1: reflexivity; only 1: now simpl).	0.303484916687	142
Coq.Lists.List.skipn_cons	40	0	search with cache (only 1: now simpl).	0.0443389415741	1
Coq.Lists.List.skipn_none	40	4.1.34	search with cache (only 1: induction l as [| x l]; only 1: now simpl; only 1: trivial).	5.17047786713	3002
Coq.Lists.List.skipn_all2	40	2.1.0.0.0.0.4.0.2	search with cache (only 1: induction n as [| k iHk]; only 1: now induction l; only 1: destruct l as [| x xs]; only 1: simpl; only 1: now reflexivity; only 1: simpl; only 1: intro H; only 1: apply Peano.le_S_n in H; only 1: apply iHk, H).	4.83902287483	1202
Coq.Lists.List.firstn_skipn	40
Coq.Lists.List.firstn_length	40
Coq.Lists.List.skipn_length	40
Coq.Lists.List.skipn_all	40	2.1.1.1.0	search with cache (only 1: rewrite <- (firstn_all l)  at 1; only 1: rewrite <- (firstn_all l)  at 1; only 1: rewrite <- (firstn_all l)  at 1; only 1: rewrite <- (firstn_all l)  at 1; only 1: now induction l).	0.586225986481	11
Coq.Lists.List.skipn_app	40	1.0.0.1.0.0.0.1.6	search with cache (only 1: induction n as [| k iHk]; only 1: intros l1 l2; only 1: now simpl; only 1: intros l1 l2; only 1: destruct l1 as [| x xs]; only 1: now rewrite 2!app_nil_l, <- minus_n_O; only 1: rewrite <- app_comm_cons; only 1: simpl; only 1: apply iHk).	24.8517510891	6079
Coq.Lists.List.firstn_skipn_rev	40
Coq.Lists.List.firstn_rev	40
Coq.Lists.List.skipn_rev	40
Coq.Lists.List.removelast_firstn	40
Coq.Lists.List.firstn_removelast	40
Coq.Lists.List.combine_nil	40	3.2.0.0.5	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.946331977844	243
Coq.Lists.List.combine_firstn_l	40
Coq.Lists.List.combine_firstn_r	40	0.1.0.0.0.0.1.1.0.3.0	search with cache (only 1: induction l as [| x l IHl]; only 1: destruct l' as [| x' l']; only 1: reflexivity; only 1: reflexivity; only 1: intros l'; only 1: destruct l' as [| x' l']; only 1: reflexivity; only 1: simpl; only 1: specialize IHl with (l' := l'); only 1: rewrite <- IHl; only 1: reflexivity).	12.0437431335	2545
Coq.Lists.List.combine_firstn	40
Coq.Lists.List.Add_app	40
Coq.Lists.List.Add_split	40
Coq.Lists.List.Add_in	40	10.0.6	search with cache (only 1: induction 1; only 1: firstorder  (subst; auto); only 1: firstorder  (subst; auto)).	3.07820415497	869
Coq.Lists.List.Add_length	40	2.7.0.9	search with cache (only 1: induction 1; only 1: trivial; only 1: simpl in *; only 1: auto).	1.19481706619	434
Coq.Lists.List.Add_inv	40
Coq.Lists.List.incl_Add_inv	40
Coq.Lists.List.NoDup_Add	40
Coq.Lists.List.NoDup_remove	40
Coq.Lists.List.NoDup_remove_1	40
Coq.Lists.List.NoDup_remove_2	40	0.0	search with cache (only 1: apply NoDup_Add; only 1: apply Add_app).	0.0567791461945	2
Coq.Lists.List.NoDup_cons_iff	40	1.2.2.1	search with cache (only 1: split; only 1: inversion_clear 1; only 1: intuition; only 1: now constructor).	0.0836098194122	10
Coq.Lists.List.nodup_fixed_point	40
Coq.Lists.List.nodup_In	40
Coq.Lists.List.NoDup_nodup	40
Coq.Lists.List.nodup_inv	40
Coq.Lists.List.NoDup_count_occ	40
Coq.Lists.List.NoDup_count_occ'	40
Coq.Lists.List.NoDup_nth_error	40
Coq.Lists.List.NoDup_nth	40
Coq.Lists.List.NoDup_incl_length	40
Coq.Lists.List.NoDup_length_incl	40
Coq.Lists.List.NoDup_map_inv	40
Coq.Lists.List.seq_length	40	7.8.0.3.11	search with cache (only 1: intros l; only 1: induction l as [| a l' Hrec]; only 1: trivial; only 1: simpl; only 1: auto).	7.88925790787	5479
Coq.Lists.List.seq_nth	40
Coq.Lists.List.seq_shift	40	3.2.1.0.1.0.8	search with cache (only 1: induction len; only 1: auto; only 1: intros; only 1: simpl seq; only 1: simpl; only 1: rewrite IHlen; only 1: auto).	4.28332400322	1279
Coq.Lists.List.in_seq	40
Coq.Lists.List.seq_NoDup	40
Coq.Lists.List.seq_app	40
Coq.Lists.List.Exists_exists	40
Coq.Lists.List.Exists_nil	40	5.0	search with cache (only 1: firstorder; only 1: inversion_clear H).	0.0801148414612	7
Coq.Lists.List.Exists_cons	40
Coq.Lists.List.Exists_dec	40
Coq.Lists.List.Forall_forall	40	0.0.5.2.1.0.0.1.0	search with cache (only 1: split; only 1: induction 1; only 1: firstorder; only 1: firstorder; only 1: subst; only 1: auto; only 1: induction l; only 1: firstorder; only 1: firstorder).	9.94200491905	2640
Coq.Lists.List.Forall_inv	40	10	search with cache (only 1: abstract now inversion 1).	0.302818059921	71
Coq.Lists.List.Forall_rect	40
Coq.Lists.List.Forall_dec	40
Coq.Lists.List.Forall_inv_tail	40	1.4.2	search with cache (only 1: intros; only 1: inversion H; only 1: auto).	0.249156951904	29
Coq.Lists.List.Exists_impl	40	2.7.6.11.0.9	search with cache (only 1: intro Pdec; only 1: intros f g H l; only 1: induction l as [| a l' Hrec]; only 1: left; only 1: auto; only 1: now apply Exists_cons_tl).	33.5555419922	23830
Coq.Lists.List.Forall_Exists_neg	40
Coq.Lists.List.Exists_Forall_neg	40
Coq.Lists.List.neg_Forall_Exists_neg	40
Coq.Lists.List.Forall_Exists_dec	40
Coq.Lists.List.Forall_impl	40	1.0.0.1.8.1.6	search with cache (only 1: intros P Q H xs H0; only 1: apply Forall_forall with (l := xs); only 1: induction H0; only 1: firstorder; only 1: firstorder; only 1: subst; only 1: auto).	31.177560091	14926
Coq.Lists.List.Forall2_refl	40	0	search with cache (only 1: trivial).	0.0435240268707	1
Coq.Lists.List.Forall2_app_inv_l	40
Coq.Lists.List.Forall2_app_inv_r	40
Coq.Lists.List.Forall2_app	40	1.0.0.18	search with cache (only 1: induction 1; only 1: auto; only 1: simpl; only 1: auto).	5.1451830864	1796
Coq.Lists.List.ForallOrdPairs_In	40
Coq.Lists.List.ForallPairs_ForallOrdPairs	40
Coq.Lists.List.ForallOrdPairs_ForallPairs	40
Coq.Lists.List.repeat_length	40	4.0.0.9	search with cache (only 1: induction n; only 1: now simpl; only 1: simpl; only 1: auto).	1.23334002495	372
Coq.Lists.List.repeat_spec	40	6.0.3.0.0.2.0.0	search with cache (only 1: induction n as [| k Hrec]; only 1: simpl; only 1: destruct 1; only 1: simpl; only 1: destruct 1; only 1: subst; only 1: reflexivity; only 1: auto).	7.93871498108	2683
Coq.Lists.ListDec.In_decidable	40	6.0.2.10	search with cache (only 1: induction l as [| a l' Hrec]; only 1: firstorder; only 1: simpl; only 1: intuition).	11.8289670944	2247
Coq.Lists.ListDec.incl_decidable	40
Coq.Lists.ListDec.NoDup_decidable	40
Coq.Lists.ListDec.incl_dec	40
Coq.Lists.ListDec.NoDup_dec	40
Coq.Lists.ListDec.uniquify_map	40
Coq.Lists.ListDec.uniquify	40
Coq.Lists.ListSet.set_In_dec	40
Coq.Lists.ListSet.set_mem_ind	40
Coq.Lists.ListSet.set_mem_ind2	40
Coq.Lists.ListSet.set_mem_correct1	40
Coq.Lists.ListSet.set_mem_correct2	40
Coq.Lists.ListSet.set_mem_complete1	40
Coq.Lists.ListSet.set_mem_complete2	40
Coq.Lists.ListSet.set_add_intro1	40
Coq.Lists.ListSet.set_add_intro2	40
Coq.Lists.ListSet.set_add_intro	40	2.1.3	search with cache (only 1: intros a0 l H [Ha0a| Hal]; only 1: auto with datatypes; only 1: auto with datatypes).	0.205046892166	77
Coq.Lists.ListSet.set_add_elim	40
Coq.Lists.ListSet.set_add_elim2	40	0.0.0.0.0.0.0.0.0.1.0.0.1	search with cache (only 1: unfold set_In; only 1: simple induction x; only 1: simpl; only 1: intros [H1| H2]; only 1: auto with datatypes; only 1: auto with datatypes; only 1: simpl; only 1: do 3 intro; only 1: elim (Aeq_dec b a0); only 1: simpl; only 1: tauto; only 1: simpl; only 1: tauto).	3.82849097252	668
Coq.Lists.ListSet.set_add_not_empty	40
Coq.Lists.ListSet.set_add_iff	40
Coq.Lists.ListSet.set_add_nodup	40
Coq.Lists.ListSet.set_remove_1	40
Coq.Lists.ListSet.set_remove_2	40
Coq.Lists.ListSet.set_remove_3	40
Coq.Lists.ListSet.set_remove_iff	40
Coq.Lists.ListSet.set_remove_nodup	40
Coq.Lists.ListSet.set_union_intro1	40
Coq.Lists.ListSet.set_union_intro2	40	0.0.1.0.5.0.0.4	search with cache (only 1: intros a0 l; only 1: simple induction y; only 1: simpl; only 1: tauto; only 1: simpl; only 1: intros a b x [H1| H2]; only 1: auto with datatypes; only 1: auto with datatypes).	5.18255782127	1423
Coq.Lists.ListSet.set_union_intro	40	0.0.1.1.0.0.1	search with cache (only 1: simple induction y; only 1: simpl; only 1: tauto; only 1: intros; only 1: elim H0; only 1: auto with datatypes; only 1: auto with datatypes).	0.210309028625	35
Coq.Lists.ListSet.set_union_elim	40
Coq.Lists.ListSet.set_union_iff	40
Coq.Lists.ListSet.set_union_nodup	40
Coq.Lists.ListSet.set_union_emptyL	40	0.1.4.2.0.0.0.0.12	search with cache (only 1: simple induction x; only 1: simpl; only 1: tauto; only 1: simpl; only 1: intros; only 1: generalize (set_add_elim _ _ _ H0); only 1: intros [H1| H1]; only 1: auto with datatypes; only 1: tauto).	16.2043828964	3763
Coq.Lists.ListSet.set_union_emptyR	40	0.0.0.1.0.0.0.0	search with cache (only 1: intros a x H; only 1: case (set_union_elim _ _ _ H); only 1: case (set_union_elim _ _ _ H); only 1: case (set_union_elim _ _ _ H); only 1: auto || contradiction; only 1: auto || contradiction; only 1: auto || contradiction; only 1: auto || contradiction).	0.772339105606	40
Coq.Lists.ListSet.set_inter_intro	40
Coq.Lists.ListSet.set_inter_elim1	40
Coq.Lists.ListSet.set_inter_elim2	40
Coq.Lists.ListSet.set_inter_elim	40	3.2	search with cache (only 1: intro Hr; only 1: eauto with datatypes).	0.234513998032	7
Coq.Lists.ListSet.set_inter_iff	40
Coq.Lists.ListSet.set_inter_nodup	40
Coq.Lists.ListSet.set_diff_intro	40
Coq.Lists.ListSet.set_diff_elim1	40
Coq.Lists.ListSet.set_diff_elim2	40
Coq.Lists.ListSet.set_diff_iff	40
Coq.Lists.ListSet.set_diff_nodup	40
Coq.Lists.ListSet.set_diff_trivial	40
Coq.Lists.StreamMemo.memo_get_correct	40
Coq.Lists.StreamMemo.imemo_get_correct	40
Coq.Lists.StreamMemo.dmemo_get_correct	40
Coq.Lists.StreamMemo.dimemo_get_correct	40
Coq.Lists.Streams.unfold_Stream	40
Coq.Lists.Streams.tl_nth_tl	40	0.0.1.0.6	search with cache (only 1: induction n; only 1: trivial; only 1: intro x; only 1: case x; only 1: trivial).	0.780303001404	239
Coq.Lists.Streams.Str_nth_tl_plus	40
Coq.Lists.Streams.Str_nth_plus	40
Coq.Lists.Streams.EqSt_reflex	40
Coq.Lists.Streams.sym_EqSt	40	2.4.15.0.3	search with cache (only 1: intro x; only 1: coinduction ltac:(EqSt_reflex); only 1: destruct H; only 1: auto with datatypes; only 1: trivial).	26.0082550049	10100
Coq.Lists.Streams.trans_EqSt	40
Coq.Lists.Streams.eqst_ntheq	40
Coq.Lists.Streams.ntheq_eqst	40
Coq.Lists.Streams.ForAll_Str_nth_tl	40
Coq.Lists.Streams.ForAll_coind	40	6.3.23	search with cache (only 1: coinduction ltac:(EqSt_reflex); only 1: auto; only 1: auto).	2.24114990234	1726
Coq.Lists.Streams.Str_nth_tl_map	40	2.0.4.0.3	search with cache (only 1: simple induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.787375926971	246
Coq.Lists.Streams.Str_nth_map	40	0.0.0.0.0.5	search with cache (only 1: unfold Str_nth; only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: intros s; only 1: apply IHn).	0.523357868195	137
Coq.Lists.Streams.ForAll_map	40
Coq.Lists.Streams.Exists_map	40
Coq.Lists.Streams.Str_nth_tl_zipWith	40	0.5.0.0.0	search with cache (only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: intros; only 1: apply IHn).	0.0903611183167	21
Coq.Lists.Streams.Str_nth_zipWith	40	0.0.2.0.2.1	search with cache (only 1: unfold Str_nth; only 1: induction n; only 1: reflexivity; only 1: intros [x xs] [y ys]; only 1: simpl in *; only 1: apply IHn).	0.589122056961	159
Coq.Logic.WKL.is_path_from_characterization	40
Coq.Logic.WKL.is_path_from_restrict	40
Coq.Logic.WKL.inductively_barred_at_monotone	40
Coq.Logic.WKL.inductively_barred_at_imp_is_path_from	40
Coq.Logic.WKL.is_path_from_imp_inductively_barred_at	40
Coq.Logic.WKL.find_left_path	40
Coq.Logic.WKL.Y_unique	40
Coq.Logic.WKL.Y_approx	40
Coq.Logic.WKL.PreWeakKonigsLemma	40
Coq.Logic.WKL.inductively_barred_at_decidable	40
Coq.Logic.WKL.inductively_barred_at_is_path_from_decidable	40
Coq.Logic.WKL.WeakKonigsLemma	40
Coq.Logic.ClassicalDescription.excluded_middle_informative	40
Coq.Logic.ClassicalDescription.classical_definite_description	40
Coq.Logic.ClassicalDescription.dependent_unique_choice	40
Coq.Logic.ClassicalDescription.unique_choice	40
Coq.Logic.SetoidChoice.setoid_choice	40
Coq.Logic.SetoidChoice.representative_choice	40
Coq.Logic.ClassicalChoice.singleton_choice	40
Coq.Logic.ClassicalChoice.choice	40
Coq.Logic.ClassicalEpsilon.constructive_definite_description	40
Coq.Logic.ClassicalEpsilon.excluded_middle_informative	40
Coq.Logic.ClassicalEpsilon.classical_indefinite_description	40
Coq.Logic.ClassicalEpsilon.epsilon_inh_irrelevance	40
Coq.Logic.ClassicalEpsilon.choice	40
Coq.Logic.Diaconescu.prop_ext	40
Coq.Logic.Diaconescu.proof_irrel	40
Coq.Logic.Diaconescu.guarded_rel_choice	40
Coq.Logic.Diaconescu.AC_bool_subset_to_bool	40
Coq.Logic.Diaconescu.pred_ext_and_rel_choice_imp_EM	40
Coq.Logic.Diaconescu.a1'	40
Coq.Logic.Diaconescu.a2'	40	0.0	search with cache (only 1: exists a1; only 1: auto).	0.154109954834	2
Coq.Logic.Diaconescu.projT1_injective	40
Coq.Logic.Diaconescu.decide	40
Coq.Logic.Diaconescu.proof_irrel_rel_choice_imp_eq_dec	40
Coq.Logic.Diaconescu.proof_irrel_rel_choice_imp_eq_dec'	40
Coq.Logic.Diaconescu.extensional_epsilon_imp_EM	40
Coq.Logic.Epsilon.constructive_indefinite_description	40
Coq.Logic.Epsilon.small_drinkers'_paradox	40
Coq.Logic.Epsilon.iota_statement	40
Coq.Logic.Epsilon.constructive_definite_description	40	1.0.0.0.3.2	search with cache (only 1: intros; only 1: destruct epsilon_statement with (P := P); only 1: destruct H; only 1: red in H; only 1: auto; only 1: firstorder).	0.527019023895	71
Coq.Logic.IndefiniteDescription.constructive_definite_description	40
Coq.Logic.IndefiniteDescription.functional_choice	40
Coq.Logic.ChoiceFacts.functional_rel_reification_and_rel_choice_imp_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_imp_rel_choice	40
Coq.Logic.ChoiceFacts.fun_choice_imp_functional_rel_reification	40
Coq.Logic.ChoiceFacts.fun_choice_iff_rel_choice_and_functional_rel_reification	40
Coq.Logic.ChoiceFacts.rel_choice_and_proof_irrel_imp_guarded_rel_choice	40
Coq.Logic.ChoiceFacts.rel_choice_indep_of_general_premises_imp_guarded_rel_choice	40
Coq.Logic.ChoiceFacts.guarded_rel_choice_imp_rel_choice	40
Coq.Logic.ChoiceFacts.subset_types_imp_guarded_rel_choice_iff_rel_choice	40
Coq.Logic.ChoiceFacts.guarded_iff_omniscient_rel_choice	40
Coq.Logic.ChoiceFacts.guarded_fun_choice_imp_indep_of_general_premises	40
Coq.Logic.ChoiceFacts.guarded_fun_choice_imp_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_indep_general_prem_imp_guarded_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_indep_general_prem_iff_guarded_fun_choice	40
Coq.Logic.ChoiceFacts.omniscient_fun_choice_imp_small_drinker	40
Coq.Logic.ChoiceFacts.omniscient_fun_choice_imp_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_small_drinker_imp_omniscient_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_small_drinker_iff_omniscient_fun_choice	40
Coq.Logic.ChoiceFacts.guarded_iff_omniscient_fun_choice	40
Coq.Logic.ChoiceFacts.iota_imp_constructive_definite_description	40
Coq.Logic.ChoiceFacts.epsilon_imp_constructive_indefinite_description	40
Coq.Logic.ChoiceFacts.constructive_indefinite_description_and_small_drinker_imp_epsilon	40	4.36	search with cache (only 1: compute; only 1: eauto).	3.96275806427	6328
Coq.Logic.ChoiceFacts.epsilon_imp_small_drinker	40	1.0.1.3.0.4	search with cache (only 1: intros D_epsilon A P H; only 1: destruct H; only 1: destruct D_epsilon with (P := P) as (x, H1); only 1: auto; only 1: exists x; only 1: apply H1).	0.506114006042	179
Coq.Logic.ChoiceFacts.constructive_indefinite_description_and_small_drinker_iff_epsilon	40
Coq.Logic.ChoiceFacts.classical_denumerable_description_imp_fun_choice	40
Coq.Logic.ChoiceFacts.dep_non_dep_functional_choice	40
Coq.Logic.ChoiceFacts.non_dep_dep_functional_choice	40
Coq.Logic.ChoiceFacts.functional_choice_to_inhabited_forall_commute	40
Coq.Logic.ChoiceFacts.inhabited_forall_commute_to_functional_choice	40
Coq.Logic.ChoiceFacts.dep_non_dep_functional_rel_reification	40	0.1.14.26	search with cache (only 1: intros AC_depfun A B R H; only 1: destruct (AC_depfun A (fun _ => B) R H) as (f, Hf); only 1: exists f; only 1: trivial).	23.7159459591	38233
Coq.Logic.ChoiceFacts.non_dep_dep_functional_rel_reification	40
Coq.Logic.ChoiceFacts.dep_iff_non_dep_functional_rel_reification	40
Coq.Logic.ChoiceFacts.relative_non_contradiction_of_indefinite_descr	40
Coq.Logic.ChoiceFacts.constructive_indefinite_descr_fun_choice	40
Coq.Logic.ChoiceFacts.relative_non_contradiction_of_definite_descr	40
Coq.Logic.ChoiceFacts.constructive_definite_descr_fun_reification	40
Coq.Logic.ChoiceFacts.constructive_definite_descr_excluded_middle	40
Coq.Logic.ChoiceFacts.fun_reification_descr_computational_excluded_middle_in_prop_context	40
Coq.Logic.ChoiceFacts.functional_choice_imp_functional_dependent_choice	40
Coq.Logic.ChoiceFacts.functional_dependent_choice_imp_functional_countable_choice	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_prop_repr	40	0.7	search with cache (only 1: intros x; only 1: firstorder using PredExt_imp_PropExt, PredExt_imp_PropFunExt, PropExt_and_PropFunExt_imp_PredExt).	2.27075505257	9
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_pred_repr	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_function_repr	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_excluded_middle	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_relational_choice	40
Coq.Logic.ChoiceFacts.gen_setoid_fun_choice_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_gen_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_iff_gen_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_simple_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.simple_setoid_fun_choice_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_iff_simple_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_functional_rel_reification	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_repr_fun_choice	40
Coq.Logic.ChoiceFacts.functional_rel_reification_and_repr_fun_choice_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.functional_rel_reification_and_repr_fun_choice_iff_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_ext_functions_repr_and_excluded_middle_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_functional_choice_first_characterization	40
Coq.Logic.ChoiceFacts.fun_choice_and_ext_pred_ext_and_proof_irrel_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_functional_choice_second_characterization	40
Coq.Logic.ConstructiveEpsilon.linear_search_smallest	40
Coq.Logic.ConstructiveEpsilon.epsilon_smallest	40
Coq.Logic.ConstructiveEpsilon.P_implies_acc	40
Coq.Logic.ConstructiveEpsilon.P_eventually_implies_acc	40
Coq.Logic.ConstructiveEpsilon.P_eventually_implies_acc_ex	40
Coq.Logic.ConstructiveEpsilon.acc_implies_P_eventually	40
Coq.Logic.ConstructiveEpsilon.constructive_indefinite_ground_description_nat_Acc	40
Coq.Logic.ConstructiveEpsilon.P'_decidable	40
Coq.Logic.ConstructiveEpsilon.constructive_indefinite_ground_description	40
Coq.Logic.ConstructiveEpsilon.constructive_definite_ground_description	40
Coq.Logic.ClassicalUniqueChoice.unique_choice	40
Coq.Logic.ClassicalUniqueChoice.classic_set_in_prop_context	40
Coq.Logic.ClassicalUniqueChoice.not_not_classic_set	40
Coq.Logic.Classical_Pred_Type.not_all_not_ex	40
Coq.Logic.Classical_Pred_Type.not_all_ex_not	40
Coq.Logic.Classical_Pred_Type.not_ex_all_not	40	0.2.3.4.6	search with cache (only 1: intros P notall; only 1: intros n H; only 1: apply notall; only 1: exists n; only 1: exact H).	3.07975697517	876
Coq.Logic.Classical_Pred_Type.not_ex_not_all	40
Coq.Logic.Classical_Pred_Type.ex_not_not_all	40
Coq.Logic.Classical_Pred_Type.all_not_not_ex	40
Coq.Logic.Classical_Prop.NNPP	40
Coq.Logic.Classical_Prop.Peirce	40
Coq.Logic.Classical_Prop.not_imply_elim	40	2.14.9	search with cache (only 1: intro H; only 1: intros A; only 1: tauto).	35.4017159939	12654
Coq.Logic.Classical_Prop.not_imply_elim2	40	3.0.2	search with cache (only 1: unshelve refine (let F := exist (fun P => ~ ~ P -> P) False _ in _); only 1: auto; only 1: auto).	0.106037139893	15
Coq.Logic.Classical_Prop.imply_to_or	40	2.2.13.0	search with cache (only 1: intros A; only 1: pose (P := fun n : nat => n = 0 /\ A \/ n = 1); only 1: intuition; only 1: tauto).	1.55067205429	685
Coq.Logic.Classical_Prop.imply_to_and	40	0.3.4	search with cache (only 1: intro HP; only 1: intro b; only 1: tauto).	1.30734992027	191
Coq.Logic.Classical_Prop.or_to_imply	40	1.1.0	search with cache (only 1: intros A; only 1: intros P n HPn; only 1: intuition).	0.0863192081451	5
Coq.Logic.Classical_Prop.not_and_or	40	1.12.12	search with cache (only 1: intro b; only 1: intros; only 1: tauto).	2.98164510727	1772
Coq.Logic.Classical_Prop.or_not_and	40	1	search with cache (only 1: tauto).	0.238095998764	47
Coq.Logic.Classical_Prop.not_or_and	40	1.1.0.2	search with cache (only 1: intros; only 1: split; only 1: auto; only 1: auto).	0.416558980942	45
Coq.Logic.Classical_Prop.and_not_or	40	0	search with cache (only 1: tauto).	0.0378661155701	1
Coq.Logic.Classical_Prop.imply_and_or	40	0	search with cache (only 1: tauto).	0.0329720973969	1
Coq.Logic.Classical_Prop.imply_and_or2	40	0	search with cache (only 1: tauto).	0.0217740535736	1
Coq.Logic.Classical_Prop.Eq_rect_eq.eq_rect_eq	40
Coq.Logic.FinFun.Finite_alt	40
Coq.Logic.FinFun.Injective_map_NoDup	40
Coq.Logic.FinFun.Injective_list_carac	40
Coq.Logic.FinFun.Injective_carac	40
Coq.Logic.FinFun.Surjective_list_carac	40
Coq.Logic.FinFun.Surjective_carac	40
Coq.Logic.FinFun.Endo_Injective_Surjective	40
Coq.Logic.FinFun.Finite_Empty_or_not	40	15.0.62.6	search with cache (only 1: intros (l, F); only 1: induction l; only 1: intuition; only 1: now constructor).	38.7407250404	54667
Coq.Logic.FinFun.Surjective_inverse	40
Coq.Logic.FinFun.Injective_Surjective_Bijective	40
Coq.Logic.FinFun.Fin_Finite	40
Coq.Logic.FinFun.Fin2Restrict.extend_ok	40
Coq.Logic.FinFun.Fin2Restrict.extend_f2n	40
Coq.Logic.FinFun.Fin2Restrict.extend_n2f	40
Coq.Logic.FinFun.Fin2Restrict.restrict_f2n	40
Coq.Logic.FinFun.Fin2Restrict.restrict_n2f	40
Coq.Logic.FinFun.Fin2Restrict.extend_surjective	40
Coq.Logic.FinFun.Fin2Restrict.extend_injective	40
Coq.Logic.FinFun.Fin2Restrict.restrict_surjective	40
Coq.Logic.FinFun.Fin2Restrict.restrict_injective	40
Coq.Logic.FinFun.bInjective_bSurjective	40
Coq.Logic.FinFun.bSurjective_bBijective	40
Coq.Logic.ClassicalFacts.prop_degen_ext	40
Coq.Logic.ClassicalFacts.prop_degen_em	40
Coq.Logic.ClassicalFacts.prop_ext_em_degen	40
Coq.Logic.ClassicalFacts.provable_prop_ext	40	13.0.0.10.10	search with cache (only 1: intros Ext EM A; only 1: apply Ext; only 1: split; only 1: exact (fun _ => I); only 1: trivial).	1.36609005928	1885
Coq.Logic.ClassicalFacts.prop_ext_A_eq_A_imp_A	40	61	search with cache (only 1: firstorder using PredExt_imp_PropExt, PredExt_imp_PropFunExt, PropExt_and_PropFunExt_imp_PredExt).	4.83185815811	8860
Coq.Logic.ClassicalFacts.prop_ext_retract_A_A_imp_A	40
Coq.Logic.ClassicalFacts.ext_prop_fixpoint	40
Coq.Logic.ClassicalFacts.aux	40
Coq.Logic.ClassicalFacts.ext_prop_dep_proof_irrel_gen	40
Coq.Logic.ClassicalFacts.ext_prop_dep_proof_irrel_cc	40
Coq.Logic.ClassicalFacts.ext_prop_dep_proof_irrel_cic	40
Coq.Logic.ClassicalFacts.p2p1	40
Coq.Logic.ClassicalFacts.p2p2	40
Coq.Logic.ClassicalFacts.proof_irrelevance_cc	40
Coq.Logic.ClassicalFacts.wp2p1	40
Coq.Logic.ClassicalFacts.wp2p2	40
Coq.Logic.ClassicalFacts.wproof_irrelevance_cc	40
Coq.Logic.ClassicalFacts.proof_irrelevance_cci	40
Coq.Logic.ClassicalFacts.wem_proof_irrelevance_cci	40
Coq.Logic.ClassicalFacts.excluded_middle_Godel_Dummett	40
Coq.Logic.ClassicalFacts.Godel_Dummett_iff_right_distr_implication_over_disjunction	40
Coq.Logic.ClassicalFacts.Godel_Dummett_weak_excluded_middle	40
Coq.Logic.ClassicalFacts.weak_excluded_middle_iff_classical_de_morgan_law	40
Coq.Logic.ClassicalFacts.independence_general_premises_right_distr_implication_over_disjunction	40
Coq.Logic.ClassicalFacts.independence_general_premises_Godel_Dummett	40
Coq.Logic.ClassicalFacts.independence_general_premises_drinker	40
Coq.Logic.ClassicalFacts.excluded_middle_independence_general_premises	40
Coq.Logic.ClassicalFacts.unrestricted_minimization_entails_excluded_middle	40
Coq.Logic.ClassicalFacts.excluded_middle_entails_unrestricted_minimization	40
Coq.Logic.ClassicalFacts.undecidable_predicate_with_the_minimization_property	40
Coq.Logic.ClassicalFacts.representative_boolean_partition_imp_excluded_middle	40
Coq.Logic.ClassicalFacts.excluded_middle_imp_representative_boolean_partition	40
Coq.Logic.ClassicalFacts.excluded_middle_iff_representative_boolean_partition	40
Coq.Logic.PropExtensionality.proof_irrelevance	40
Coq.Logic.WeakFan.Y_unique	40
Coq.Logic.WeakFan.Y_approx	40
Coq.Logic.WeakFan.WeakFanTheorem	40
Coq.Logic.Eqdep_dec.trans_sym_eq	40	0.31.34.37	search with cache (only 1: intro; only 1: intros h1 h2; only 1: destruct h2; only 1: reflexivity).	12.2396018505	26893
Coq.Logic.Eqdep_dec.nu_constant	40
Coq.Logic.Eqdep_dec.nu_left_inv_on	40
Coq.Logic.Eqdep_dec.eq_proofs_unicity_on	40
Coq.Logic.Eqdep_dec.K_dec_on	40
Coq.Logic.Eqdep_dec.inj_right_pair_on	40
Coq.Logic.Eqdep_dec.K_dec_type	40
Coq.Logic.Eqdep_dec.eq_rect_eq_dec	40
Coq.Logic.Eqdep_dec.DecidableEqDep.inj_pairP2	40
Coq.Logic.Eqdep_dec.inj_pair2_eq_dec	40
Coq.Logic.Eqdep_dec.UIP_refl_unit	40
Coq.Logic.Eqdep_dec.UIP_refl_bool	40
Coq.Logic.Eqdep_dec.UIP_refl_nat	40
Coq.Logic.HLevels.forall_hprop	40
Coq.Logic.HLevels.and_hprop	40
Coq.Logic.HLevels.impl_hprop	40	0.0.2.2.0	search with cache (only 1: intros; only 1: intros p q; only 1: apply functional_extensionality_dep; only 1: intro x; only 1: apply H).	0.0883338451385	9
Coq.Logic.HLevels.false_hprop	40	0.2	search with cache (only 1: intros p q; only 1: destruct p, q).	0.0541989803314	4
Coq.Logic.HLevels.true_hprop	40	14.0.2	search with cache (only 1: intros p q; only 1: destruct p, q; only 1: trivial).	0.740722894669	551
Coq.Logic.HLevels.not_hprop	40	0.5.1.0	search with cache (only 1: intros p q; only 1: intro x; only 1: apply functional_extensionality_dep; only 1: contradiction).	0.0719120502472	10
Coq.Logic.HLevels.hset_hprop	40
Coq.Logic.HLevels.eq_trans_cancel	40
Coq.Logic.HLevels.hset_hOneType	40
Coq.Logic.HLevels.hprop_hprop	40
Coq.Logic.HLevels.hprop_hset	40
Coq.Logic.Hurkens.Generic.Omega	40
Coq.Logic.Hurkens.Generic.lemma1	40
Coq.Logic.Hurkens.Generic.lemma2	40
Coq.Logic.Hurkens.Generic.paradox	40
Coq.Logic.Hurkens.NoRetractToImpredicativeUniverse.paradox	40
Coq.Logic.Hurkens.NoRetractToModalProposition.strength	40
Coq.Logic.Hurkens.NoRetractToModalProposition.modal	40	2.12.17	search with cache (only 1: intro H; only 1: destruct H; only 1: eauto).	0.872359037399	728
Coq.Logic.Hurkens.NoRetractToModalProposition.Forall	40	2.25	search with cache (only 1: red; only 1: eauto).	0.650898218155	393
Coq.Logic.Hurkens.NoRetractToModalProposition.paradox	40
Coq.Logic.Hurkens.NoRetractToNegativeProp.paradox	40
Coq.Logic.Hurkens.NoRetractFromSmallPropositionToProp.mparadox	40
Coq.Logic.Hurkens.NoRetractFromSmallPropositionToProp.paradox	40
Coq.Logic.Hurkens.NoRetractFromTypeToProp.paradox	40
Coq.Logic.Hurkens.TypeNeqSmallType.up_down	40
Coq.Logic.Hurkens.TypeNeqSmallType.paradox	40
Coq.Logic.Hurkens.PropNeqType.paradox	40
Coq.Logic.JMeq.JMeq_sym	40	4.0.28	search with cache (only 1: intros; only 1: destruct H; only 1: trivial).	0.544415950775	1266
Coq.Logic.JMeq.JMeq_trans	40	1.0.0	search with cache (only 1: intros; only 1: destruct H; only 1: trivial).	0.027939081192	4
Coq.Logic.JMeq.JMeq_ind	40
Coq.Logic.JMeq.JMeq_rec	40	0.0.0	search with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := H'); only 1: trivial).	0.0262370109558	3
Coq.Logic.JMeq.JMeq_rect	40	0.0.0	search with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := H'); only 1: trivial).	0.0378730297089	3
Coq.Logic.JMeq.JMeq_ind_r	40
Coq.Logic.JMeq.JMeq_rec_r	40	0.1.0	search with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := JMeq_sym H'); only 1: trivial).	0.0504159927368	4
Coq.Logic.JMeq.JMeq_rect_r	40	0.1.0	search with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := JMeq_sym H'); only 1: trivial).	0.0627770423889	4
Coq.Logic.JMeq.JMeq_congr	40	0.1.0	search with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := H'); only 1: trivial).	0.0629580020905	4
Coq.Logic.JMeq.JMeq_eq_dep_id	40	2.0.1	search with cache (only 1: intros; only 1: destruct H; only 1: apply eq_dep_intro).	0.0816459655762	6
Coq.Logic.JMeq.eq_dep_id_JMeq	40	1.0	search with cache (only 1: destruct 1; only 1: trivial).	0.0263268947601	3
Coq.Logic.JMeq.eq_dep_JMeq	40	0.0	search with cache (only 1: destruct 1; only 1: trivial).	0.0275988578796	2
Coq.Logic.JMeq.eq_dep_strictly_stronger_JMeq	40
Coq.Logic.JMeq.JMeq_eq_dep	40	0.4.9.0	search with cache (only 1: destruct 1; only 1: intros; only 1: dependent rewrite H; only 1: trivial).	1.02523303032	302
Coq.Logic.ProofIrrelevanceFacts.ProofIrrelevanceTheory.Eq_rect_eq.eq_rect_eq	40
Coq.Logic.ProofIrrelevanceFacts.ProofIrrelevanceTheory.subset_eq_compat	40
Coq.Logic.ProofIrrelevanceFacts.ProofIrrelevanceTheory.subsetT_eq_compat	40	0.0.1.9.0	search with cache (only 1: intros; only 1: rewrite M.proof_irrelevance with (p1 := q) (p2 := (eq_rect x P p y H)); only 1: apply eq_dep_eq; only 1: elim H using eq_indd; only 1: reflexivity).	1.20006012917	319
Coq.Logic.Berardi.AC_IF	40
Coq.Logic.Berardi.AC	40
Coq.Logic.Berardi.L1	40
Coq.Logic.Berardi.retract_pow_U_U	40
Coq.Logic.Berardi.not_has_fixpoint	40
Coq.Logic.Berardi.classical_proof_irrelevance	40
Coq.Logic.Decidable.dec_not_not	40	3.6.0.0.7.4.2.0.0	search with cache (only 1: intro A; only 1: unfold not; only 1: intro H1; only 1: elim H1; only 1: intros H H'; only 1: exact H; only 1: unfold not; only 1: intros h1 h2; only 1: destruct (h2 h1)).	15.2353799343	16458
Coq.Logic.Decidable.dec_True	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0572090148926	2
Coq.Logic.Decidable.dec_False	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0575921535492	2
Coq.Logic.Decidable.dec_or	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0625898838043	2
Coq.Logic.Decidable.dec_and	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0355939865112	2
Coq.Logic.Decidable.dec_not	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.058315038681	2
Coq.Logic.Decidable.dec_imp	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0564520359039	2
Coq.Logic.Decidable.dec_iff	40	1.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0964670181274	3
Coq.Logic.Decidable.not_not	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0560050010681	2
Coq.Logic.Decidable.not_or	40	0	search with cache (only 1: tauto).	0.019758939743	1
Coq.Logic.Decidable.not_and	40	0.1	search with cache (only 1: unfold decidable; only 1: tauto).	0.0779888629913	3
Coq.Logic.Decidable.not_imp	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0673110485077	2
Coq.Logic.Decidable.imp_simp	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0573668479919	2
Coq.Logic.Decidable.not_iff	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.108345985413	2
Coq.Logic.Decidable.not_true_iff	40	1.1.4	search with cache (only 1: split; only 1: auto; only 1: auto).	0.0614759922028	9
Coq.Logic.Decidable.not_false_iff	40	0	search with cache (only 1: tauto).	0.0377321243286	1
Coq.Logic.Decidable.not_not_iff	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0596480369568	2
Coq.Logic.Decidable.contrapositive	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0547139644623	2
Coq.Logic.Decidable.or_not_l_iff_1	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.234508991241	2
Coq.Logic.Decidable.or_not_l_iff_2	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.217376947403	2
Coq.Logic.Decidable.or_not_r_iff_1	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0732939243317	2
Coq.Logic.Decidable.or_not_r_iff_2	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0548410415649	2
Coq.Logic.Decidable.imp_not_l	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0578739643097	2
Coq.Logic.Decidable.not_or_iff	40	0	search with cache (only 1: tauto).	0.0550389289856	1
Coq.Logic.Decidable.not_and_iff	40	1	search with cache (only 1: tauto).	0.051647901535	2
Coq.Logic.Decidable.not_imp_iff	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.109644889832	2
Coq.Logic.Decidable.not_imp_rev_iff	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0839579105377	2
Coq.Logic.Decidable.dec_functional_relation	40
Coq.Logic.EqdepFacts.eq_dep_sym	40	1.6.18	search with cache (only 1: intros; only 1: destruct H; only 1: reflexivity).	0.333020925522	459
Coq.Logic.EqdepFacts.eq_dep_trans	40	0.0	search with cache (only 1: destruct 1; only 1: auto).	0.0517899990082	2
Coq.Logic.EqdepFacts.eq_dep1_dep	40
Coq.Logic.EqdepFacts.eq_dep_dep1	40	3.23.5.40	search with cache (only 1: intros x' x'' Hx' Hx''; only 1: destruct 1; only 1: exists eq_refl; only 1: trivial).	5.31361913681	13388
Coq.Logic.EqdepFacts.eq_sigT_eq_dep	40
Coq.Logic.EqdepFacts.eq_dep_eq_sigT	40	4.3.0	search with cache (only 1: intros; only 1: rewrite H; only 1: reflexivity).	0.0289280414581	10
Coq.Logic.EqdepFacts.eq_sigT_iff_eq_dep	40	0.16.0.0.15.4	search with cache (only 1: split; only 1: intros; only 1: dependent rewrite H; only 1: apply eq_dep_intro; only 1: destruct 1; only 1: reflexivity).	2.72502708435	4224
Coq.Logic.EqdepFacts.eq_sig_eq_dep	40	0.1.8	search with cache (only 1: intros; only 1: dependent rewrite H; only 1: auto using eq_sigT_eq_dep, eq_dep_eq_sigT).	0.186987161636	37
Coq.Logic.EqdepFacts.eq_dep_eq_sig	40	2.5.0	search with cache (only 1: intros; only 1: rewrite H; only 1: auto using eq_sigT_eq_dep, eq_dep_eq_sigT).	0.0747790336609	10
Coq.Logic.EqdepFacts.eq_sig_iff_eq_dep	40	0.14.0.0.13.2	search with cache (only 1: split; only 1: intros; only 1: dependent rewrite H; only 1: apply eq_dep_intro; only 1: destruct 1; only 1: reflexivity).	2.69498705864	3133
Coq.Logic.EqdepFacts.eq_sigT_sig_eq	40
Coq.Logic.EqdepFacts.eq_sigT_fst	40	6.0.2.0	search with cache (only 1: intros; only 1: change_no_check x2 with (projT1 (existT P x2 H2)); only 1: destruct H; only 1: split).	0.360449790955	155
Coq.Logic.EqdepFacts.eq_sigT_snd	40
Coq.Logic.EqdepFacts.eq_sig_fst	40	3.16.0	search with cache (only 1: intros; only 1: dependent rewrite H; only 1: split).	7.91293907166	3838
Coq.Logic.EqdepFacts.eq_sig_snd	40
Coq.Logic.EqdepFacts.eq_rect_eq_on__eq_dep1_eq_on	40	12.3.10.26	search with cache (only 1: intros h1 h2; only 1: destruct 1; only 1: rewrite H; only 1: auto using eq_sigT_eq_dep, eq_dep_eq_sigT).	3.12967801094	3452
Coq.Logic.EqdepFacts.eq_rect_eq_on__eq_dep_eq_on	40
Coq.Logic.EqdepFacts.eq_dep_eq_on__UIP_on	40
Coq.Logic.EqdepFacts.UIP_on__UIP_refl_on	40	8.2.0	search with cache (only 1: red; only 1: intros; only 1: auto).	0.642734050751	309
Coq.Logic.EqdepFacts.UIP_refl_on__Streicher_K_on	40	3.10.3.1.4	search with cache (only 1: intro; only 1: intro UIP; only 1: intro eq_dep_eq; only 1: rewrite H; only 1: apply UIP).	7.29550290108	9409
Coq.Logic.EqdepFacts.Streicher_K_on__eq_rect_eq_on	40	4.0.0	search with cache (only 1: intro; only 1: intro; only 1: auto).	0.0830318927765	7
Coq.Logic.EqdepFacts.UIP_shift_on	40
Coq.Logic.EqdepFacts.eq_dep_eq_on__inj_pair2_on	40	0.0	search with cache (only 1: red; only 1: auto using eq_sigT_eq_dep, eq_dep_eq_sigT).	0.0540568828583	2
Coq.Logic.EqdepFacts.f_eq_dep	40	1.1	search with cache (only 1: destruct 1; only 1: trivial).	0.0881159305573	14
Coq.Logic.EqdepFacts.eq_dep_non_dep	40	0.1	search with cache (only 1: destruct 1; only 1: trivial).	0.107335090637	15
Coq.Logic.EqdepFacts.f_eq_dep_non_dep	40	0.1	search with cache (only 1: destruct 1; only 1: reflexivity).	0.107888936996	13
Coq.Logic.PropFacts.injection_is_involution_in_Prop	40
Coq.Logic.PropExtensionalityFacts.PredExt_imp_PropExt	40
Coq.Logic.PropExtensionalityFacts.PredExt_imp_PropFunExt	40
Coq.Logic.PropExtensionalityFacts.PropExt_and_PropFunExt_imp_PredExt	40	10	search with cache (only 1: auto).	0.175684213638	132
Coq.Logic.PropExtensionalityFacts.PropExt_and_PropFunExt_iff_PredExt	40
Coq.Logic.PropExtensionalityFacts.PropExt_imp_ProvPropExt	40	8	search with cache (only 1: firstorder using PredExt_imp_PropExt, PredExt_imp_PropFunExt, PropExt_and_PropFunExt_imp_PredExt).	0.868322134018	12
Coq.Logic.PropExtensionalityFacts.PropExt_imp_RefutPropExt	40	13	search with cache (only 1: firstorder using PredExt_imp_PropExt, PredExt_imp_PropFunExt, PropExt_and_PropFunExt_imp_PredExt).	1.33286094666	254
Coq.Logic.ExtensionalityFacts.diagonal_projs_same_behavior	40	1.0.48.13	search with cache (only 1: intro x; only 1: intro H; only 1: destruct H; only 1: trivial).	4.03115701675	13031
Coq.Logic.ExtensionalityFacts.diagonal_inverse1	40
Coq.Logic.ExtensionalityFacts.diagonal_inverse2	40	0.0.0.0	search with cache (only 1: split; only 1: trivial; only 1: destruct b as (a1, a2, []); only 1: reflexivity).	0.0847270488739	4
Coq.Logic.ExtensionalityFacts.FunctExt_iff_EqDeltaProjs	40
Coq.Logic.ExtensionalityFacts.FunctExt_UniqInverse	40
Coq.Logic.ExtensionalityFacts.UniqInverse_EqDeltaProjs	40
Coq.Logic.ExtensionalityFacts.FunctExt_iff_UniqInverse	40
Coq.Logic.ExtensionalityFacts.FunctExt_BijComp	40
Coq.Logic.ExtensionalityFacts.BijComp_FunctExt	40
Coq.Logic.FunctionalExtensionality.equal_f	40	1.1.6	search with cache (only 1: intros; only 1: destruct H; only 1: trivial).	0.100699901581	51
Coq.Logic.FunctionalExtensionality.equal_f_dep	40	0.0.6	search with cache (only 1: intros; only 1: rewrite H; only 1: auto).	0.117139101028	20
Coq.Logic.FunctionalExtensionality.functional_extensionality	40
Coq.Logic.FunctionalExtensionality.forall_extensionality	40
Coq.Logic.FunctionalExtensionality.forall_extensionalityP	40	2.1.0	search with cache (only 1: apply functional_extensionality in H; only 1: destruct H; only 1: reflexivity).	0.0614168643951	6
Coq.Logic.FunctionalExtensionality.forall_extensionalityS	40	2.1.0	search with cache (only 1: apply functional_extensionality in H; only 1: destruct H; only 1: reflexivity).	0.0616841316223	6
Coq.Logic.FunctionalExtensionality.functional_extensionality_dep_good_refl	40
Coq.Logic.FunctionalExtensionality.forall_sig_eq_rect	40
Coq.Logic.FunctionalExtensionality.forall_eq_rect_comp	40
Coq.Logic.FunctionalExtensionality.f_equal__functional_extensionality_dep_good	40
Coq.Logic.FunctionalExtensionality.f_equal__functional_extensionality_dep_good__fun	40	3.5.0	search with cache (only 1: apply forall_eq_rect with (H := H); only 1: rewrite functional_extensionality_dep_good_refl; only 1: reflexivity).	0.187557935715	63
Coq.Logic.FunctionalExtensionality.eta_expansion_dep	40	10	search with cache (only 1: reflexivity).	0.0699791908264	21
Coq.Logic.FunctionalExtensionality.eta_expansion	40	11	search with cache (only 1: reflexivity).	0.0630960464478	33
Coq.Logic.StrictProp.Spr1_inj	40	4.2.25.119	search with cache (only 1: destruct a, b; only 1: simpl in *; only 1: subst; only 1: trivial).	3.22965717316	18914
Coq.MSets.MSetEqProperties.WEqPropertiesOn.mem_eq	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.equal_mem_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.equal_mem_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.subset_mem_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.subset_mem_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.empty_mem	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.is_empty_equal_empty	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.choose_mem_1	40	3.8	search with cache (only 1: generalize (FM.mem_iff (diff s s') x), (FM.mem_iff s x), (FM.mem_iff s' x), (diff_spec s s' x); only 1: intuition).	3.14184498787	555
Coq.MSets.MSetEqProperties.WEqPropertiesOn.choose_mem_2	40	0	search with cache (only 1: auto with set).	0.129792928696	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_mem_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_mem_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_mem_1	40	0.5	search with cache (only 1: rewrite <- not_mem_iff; only 1: auto with set relations).	7.1815738678	805
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_mem_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.singleton_equal_add	40	3	search with cache (only 1: auto with set).	0.121881961823	4
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_mem	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_mem	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.diff_mem	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.mem_3	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.mem_4	40	0.4.1	search with cache (only 1: rewrite <- not_mem_iff; only 1: rewrite FM.elements_iff, <- InA_rev; only 1: auto with *).	0.937852859497	82
Coq.MSets.MSetEqProperties.WEqPropertiesOn.equal_refl	40	5	search with cache (only 1: auto with set).	0.288767814636	18
Coq.MSets.MSetEqProperties.WEqPropertiesOn.equal_sym	40	5.0.1.5.0.1.4.4	search with cache (only 1: apply eq_true_iff_eq; only 1: split; only 1: intros; only 1: rewrite (equal_2 H); only 1: auto with set; only 1: intros; only 1: rewrite (equal_2 H); only 1: auto with set).	4.75821495056	1599
Coq.MSets.MSetEqProperties.WEqPropertiesOn.equal_trans	40	4.0.2	search with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto).	0.27769613266	25
Coq.MSets.MSetEqProperties.WEqPropertiesOn.equal_equal	40	2.0.1	search with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto).	0.203487157822	6
Coq.MSets.MSetEqProperties.WEqPropertiesOn.equal_cardinal	40	4.0.2	search with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto).	0.117175102234	9
Coq.MSets.MSetEqProperties.WEqPropertiesOn.subset_refl	40	0.1.3	search with cache (only 1: apply subset_1; only 1: intro H2; only 1: tauto).	0.169059991837	7
Coq.MSets.MSetEqProperties.WEqPropertiesOn.subset_antisym	40	9	search with cache (only 1: auto with set).	0.138020992279	22
Coq.MSets.MSetEqProperties.WEqPropertiesOn.subset_trans	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.subset_equal	40	0	search with cache (only 1: auto with set).	0.0786230564117	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.choose_mem_3	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.choose_mem_4	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_mem_3	40	1	search with cache (only 1: auto with set relations).	0.0800189971924	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_equal	40	0.2.1	search with cache (only 1: intros; only 1: apply equal_1; only 1: auto with set relations).	0.168071985245	6
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_mem_3	40	4.14	search with cache (only 1: do 2 rewrite <- mem_iff; only 1: eauto with set relations).	2.23942112923	522
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_equal	40	0.1	search with cache (only 1: rewrite <- not_mem_iff; only 1: auto with set).	0.128367900848	3
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_remove	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_add	40	0.1.0.7	search with cache (only 1: rewrite <- not_mem_iff; only 1: intros; only 1: apply equal_1; only 1: Dec.fsetdec).	1.52139186859	95
Coq.MSets.MSetEqProperties.WEqPropertiesOn.is_empty_cardinal	40	0.0.0.0.0.1.11.5	search with cache (only 1: apply eq_true_iff_eq; only 1: rewrite <- is_empty_iff; only 1: rewrite elements_Empty, cardinal_spec; only 1: destruct (elements s); only 1: intuition; only 1: intuition; only 1: discriminate; only 1: discriminate).	16.0906221867	5712
Coq.MSets.MSetEqProperties.WEqPropertiesOn.singleton_mem_1	40	8	search with cache (only 1: auto with set relations).	0.439572095871	37
Coq.MSets.MSetEqProperties.WEqPropertiesOn.singleton_mem_2	40	6.15	search with cache (only 1: rewrite <- not_mem_iff; only 1: Dec.fsetdec).	3.05881595612	587
Coq.MSets.MSetEqProperties.WEqPropertiesOn.singleton_mem_3	40	7.0.0.0.0	search with cache (only 1: rewrite singleton_b; only 1: unfold eqb; only 1: destruct (FM.eq_dec x y); only 1: intuition; only 1: discriminate).	3.71213507652	513
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_sym	40	3.3	search with cache (only 1: apply equal_1; only 1: auto with set).	0.0888438224792	8
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_subset_equal	40	0	search with cache (only 1: auto with set).	0.144300937653	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_equal_1	40	0	search with cache (only 1: auto with set).	0.17687702179	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_equal_2	40	0	search with cache (only 1: auto with set).	0.111340999603	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_assoc	40	0	search with cache (only 1: auto with set).	0.1470079422	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_union_singleton	40	2	search with cache (only 1: auto with set).	0.0888609886169	3
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_add	40	0	search with cache (only 1: auto with set).	0.0727119445801	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_subset_1	40	0	search with cache (only 1: auto with set).	0.07190990448	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_subset_2	40	0	search with cache (only 1: auto with set).	0.0629210472107	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_subset_3	40	0.0	search with cache (only 1: do 3 rewrite <- subset_iff; only 1: Dec.fsetdec).	0.175084114075	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_sym	40	4.3	search with cache (only 1: apply equal_1; only 1: Dec.fsetdec).	0.179589986801	9
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_subset_equal	40	0	search with cache (only 1: auto with set).	0.0422630310059	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_equal_1	40	0	search with cache (only 1: auto with set).	0.060907125473	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_equal_2	40	0	search with cache (only 1: auto with set).	0.0801160335541	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_assoc	40	0	search with cache (only 1: auto with set).	0.0779938697815	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_inter_1	40	0	search with cache (only 1: auto with set).	0.0579750537872	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_inter_2	40	0	search with cache (only 1: auto with set).	0.0667159557343	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_add_1	40	0	search with cache (only 1: auto with set).	0.0725069046021	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_add_2	40	0.20	search with cache (only 1: rewrite <- not_mem_iff; only 1: auto with set).	6.15609788895	577
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_subset_1	40	0	search with cache (only 1: auto with set).	0.0645589828491	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_subset_2	40	0	search with cache (only 1: auto with set).	0.090747833252	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_subset_3	40	0	search with cache (only 1: auto with set).	0.140976905823	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.diff_subset	40	0.3	search with cache (only 1: apply subset_1; only 1: Dec.fsetdec).	0.132832050323	5
Coq.MSets.MSetEqProperties.WEqPropertiesOn.diff_subset_equal	40	0	search with cache (only 1: auto with set).	0.111608982086	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_inter_singleton	40	0.2	search with cache (only 1: apply equal_1; only 1: Dec.fsetdec).	0.40588593483	4
Coq.MSets.MSetEqProperties.WEqPropertiesOn.diff_inter_empty	40	0	search with cache (only 1: auto with set).	0.0919239521027	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.diff_inter_all	40	0	search with cache (only 1: auto with set).	0.0906639099121	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.set_rec	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.exclusive_set	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.fold_empty	40	0.0	search with cache (only 1: apply fold_1b; only 1: auto with set).	0.127200841904	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.fold_equal	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.fold_add	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_fold	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_fold_1	40	0.0.2.2.2.1.0	search with cache (only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set relations; only 1: auto with set relations).	3.85020899773	932
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_fold_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.fold_union	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_cardinal_1	40	4.0	search with cache (only 1: intros; only 1: auto with set).	0.405982971191	42
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_cardinal_2	40	6.0.0.3.2.1.0	search with cache (only 1: intros; only 1: apply cardinal_2 with x; only 1: rewrite not_mem_iff; only 1: destruct (mem x s); only 1: tauto; only 1: tauto; only 1: auto with set).	12.4410040379	3991
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_cardinal_1	40	7.0.4.5.0.0.0.0	search with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: change_no_check S with ((fun _ => S) x); only 1: apply MP.remove_fold_1 with (eqA := Logic.eq); only 1: auto with *; only 1: congruence; only 1: auto with *; only 1: auto with set).	12.6331980228	4605
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_cardinal_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_cardinal	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.subset_cardinal	40	8.0	search with cache (only 1: intros; only 1: auto with set).	0.0769798755646	10
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Comp'	40	0.19.0.1.1	search with cache (only 1: red; only 1: red; only 1: intros; only 1: rewrite H; only 1: auto).	3.49748587608	1122
Coq.MSets.MSetEqProperties.WEqPropertiesOn.filter_mem	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.for_all_filter	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.exists_filter	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.partition_filter_1	40	15	search with cache (only 1: auto with set).	1.64904117584	363
Coq.MSets.MSetEqProperties.WEqPropertiesOn.partition_filter_2	40	0	search with cache (only 1: auto with set).	0.0870108604431	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.filter_add_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.filter_add_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_filter_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_filter_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_filter	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.filter_union	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.for_all_mem_1	40	12.2.0.2.1.0	search with cache (only 1: intros; only 1: apply for_all_1; only 1: tauto; only 1: red; only 1: intros; only 1: intuition).	4.26527905464	1616
Coq.MSets.MSetEqProperties.WEqPropertiesOn.for_all_mem_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.for_all_mem_3	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.for_all_mem_4	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.for_all_exists	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Comp'	40	0.0.0.4	search with cache (only 1: intro H; only 1: intros; only 1: f_equal; only 1: intuition).	0.129889011383	8
Coq.MSets.MSetEqProperties.WEqPropertiesOn.exists_mem_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.exists_mem_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.exists_mem_3	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.exists_mem_4	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.sum_plus	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.sum_filter	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.fold_compat	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.sum_compat	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.In_In	40	0.15	search with cache (only 1: red; only 1: tauto).	0.480726957321	200
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Subset_Included	40	0.1	search with cache (only 1: compute; only 1: tauto).	0.186718940735	3
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Equal_Same_set	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.empty_Empty_Set	40	5.0.1.0.2	search with cache (only 1: unfold Subset, Included, Same_set, In, mkEns; only 1: intuition; only 1: unfold Subset, Included, In, mkEns; only 1: intro x; only 1: Dec.fsetdec).	0.585536956787	200
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Empty_Empty_set	40	1.0.8.0.0	search with cache (only 1: unfold Same_set, Included, mkEns, In; only 1: split; only 1: Dec.fsetdec; only 1: intro; only 1: inversion 1).	6.22025585175	1461
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.singleton_Singleton	40	0.2.0	search with cache (only 1: intros; only 1: unfold Subset, Included, Same_set, In, mkEns; only 1: intuition).	0.0480899810791	5
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.union_Union	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.inter_Intersection	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.add_Add	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Add_Add	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.remove_Subtract	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.mkEns_Finite	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.mkEns_cardinal	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Ens_to_MSet	40
Coq.MSets.MSetProperties.WPropertiesOn.In_dec	40	3.4.1.8.2	search with cache (only 1: intros; only 1: generalize (F.mem_iff s x); only 1: case (mem x s); only 1: intuition; only 1: intuition).	8.57768797874	1063
Coq.MSets.MSetProperties.WPropertiesOn.Add_Equal	40
Coq.MSets.MSetProperties.WPropertiesOn.equal_refl	40	6	search with cache (only 1: intuition).	0.07634806633	12
Coq.MSets.MSetProperties.WPropertiesOn.equal_sym	40	6	search with cache (only 1: intuition).	0.160291910172	17
Coq.MSets.MSetProperties.WPropertiesOn.equal_trans	40
Coq.MSets.MSetProperties.WPropertiesOn.subset_refl	40	4.2.1	search with cache (only 1: apply -> subset_spec; only 1: apply <- subset_spec; only 1: intuition).	0.22577881813	13
Coq.MSets.MSetProperties.WPropertiesOn.subset_trans	40	5.0	search with cache (only 1: intuition; only 1: fsetdec).	0.135442972183	7
Coq.MSets.MSetProperties.WPropertiesOn.subset_antisym	40	0.15	search with cache (only 1: red; only 1: intuition).	0.831474781036	260
Coq.MSets.MSetProperties.WPropertiesOn.subset_equal	40	0	search with cache (only 1: fsetdec).	0.0934498310089	1
Coq.MSets.MSetProperties.WPropertiesOn.subset_empty	40	13	search with cache (only 1: fsetdec).	0.709212064743	187
Coq.MSets.MSetProperties.WPropertiesOn.subset_remove_3	40	3.0	search with cache (only 1: intuition; only 1: fsetdec).	0.16509604454	5
Coq.MSets.MSetProperties.WPropertiesOn.subset_diff	40	1	search with cache (only 1: fsetdec).	0.1567299366	2
Coq.MSets.MSetProperties.WPropertiesOn.subset_add_3	40	0	search with cache (only 1: fsetdec).	0.164597034454	1
Coq.MSets.MSetProperties.WPropertiesOn.subset_add_2	40	0	search with cache (only 1: fsetdec).	0.0990018844604	1
Coq.MSets.MSetProperties.WPropertiesOn.in_subset	40	0	search with cache (only 1: fsetdec).	0.096892118454	1
Coq.MSets.MSetProperties.WPropertiesOn.double_inclusion	40	4.4.4.3	search with cache (only 1: intuition; only 1: fsetdec; only 1: fsetdec; only 1: fsetdec).	30.6476309299	3196
Coq.MSets.MSetProperties.WPropertiesOn.empty_is_empty_1	40	10	search with cache (only 1: fsetdec).	0.426327943802	54
Coq.MSets.MSetProperties.WPropertiesOn.empty_is_empty_2	40	0	search with cache (only 1: fsetdec).	0.0948431491852	1
Coq.MSets.MSetProperties.WPropertiesOn.add_equal	40	1.0.0	search with cache (only 1: red; only 1: intros; only 1: fsetdec).	0.254598855972	11
Coq.MSets.MSetProperties.WPropertiesOn.add_add	40	6	search with cache (only 1: fsetdec).	0.232055187225	12
Coq.MSets.MSetProperties.WPropertiesOn.remove_equal	40	21	search with cache (only 1: fsetdec).	1.23408508301	572
Coq.MSets.MSetProperties.WPropertiesOn.Equal_remove	40	2	search with cache (only 1: fsetdec).	0.24357008934	3
Coq.MSets.MSetProperties.WPropertiesOn.add_remove	40	0	search with cache (only 1: fsetdec).	0.175250053406	1
Coq.MSets.MSetProperties.WPropertiesOn.remove_add	40	0	search with cache (only 1: fsetdec).	0.331324100494	1
Coq.MSets.MSetProperties.WPropertiesOn.singleton_equal_add	40	0.0	search with cache (only 1: red; only 1: fsetdec).	0.0902028083801	2
Coq.MSets.MSetProperties.WPropertiesOn.remove_singleton_empty	40	0	search with cache (only 1: fsetdec).	0.292410135269	1
Coq.MSets.MSetProperties.WPropertiesOn.union_sym	40
Coq.MSets.MSetProperties.WPropertiesOn.union_subset_equal	40	0	search with cache (only 1: fsetdec).	0.0906882286072	1
Coq.MSets.MSetProperties.WPropertiesOn.union_equal_1	40	0	search with cache (only 1: fsetdec).	0.13000202179	1
Coq.MSets.MSetProperties.WPropertiesOn.union_equal_2	40	0	search with cache (only 1: fsetdec).	0.192211866379	1
Coq.MSets.MSetProperties.WPropertiesOn.union_assoc	40	0	search with cache (only 1: fsetdec).	0.267837047577	1
Coq.MSets.MSetProperties.WPropertiesOn.add_union_singleton	40	0	search with cache (only 1: fsetdec).	0.146368026733	1
Coq.MSets.MSetProperties.WPropertiesOn.union_add	40	0	search with cache (only 1: fsetdec).	0.235661029816	1
Coq.MSets.MSetProperties.WPropertiesOn.union_remove_add_1	40	0	search with cache (only 1: fsetdec).	0.42694401741	1
Coq.MSets.MSetProperties.WPropertiesOn.union_remove_add_2	40	0	search with cache (only 1: fsetdec).	0.461380004883	1
Coq.MSets.MSetProperties.WPropertiesOn.union_subset_1	40	0	search with cache (only 1: fsetdec).	0.0417070388794	1
Coq.MSets.MSetProperties.WPropertiesOn.union_subset_2	40	0	search with cache (only 1: fsetdec).	0.0662851333618	1
Coq.MSets.MSetProperties.WPropertiesOn.union_subset_3	40	0	search with cache (only 1: fsetdec).	0.117672920227	1
Coq.MSets.MSetProperties.WPropertiesOn.union_subset_4	40	0	search with cache (only 1: fsetdec).	0.122387886047	1
Coq.MSets.MSetProperties.WPropertiesOn.union_subset_5	40	0	search with cache (only 1: fsetdec).	0.131529092789	1
Coq.MSets.MSetProperties.WPropertiesOn.empty_union_1	40	0	search with cache (only 1: fsetdec).	0.133579969406	1
Coq.MSets.MSetProperties.WPropertiesOn.empty_union_2	40	0	search with cache (only 1: fsetdec).	0.167979001999	1
Coq.MSets.MSetProperties.WPropertiesOn.not_in_union	40	5.1	search with cache (only 1: intuition; only 1: fsetdec).	10.3641369343	471
Coq.MSets.MSetProperties.WPropertiesOn.inter_sym	40
Coq.MSets.MSetProperties.WPropertiesOn.inter_subset_equal	40	0	search with cache (only 1: fsetdec).	0.0918009281158	1
Coq.MSets.MSetProperties.WPropertiesOn.inter_equal_1	40	0	search with cache (only 1: fsetdec).	0.199985980988	1
Coq.MSets.MSetProperties.WPropertiesOn.inter_equal_2	40	0	search with cache (only 1: fsetdec).	0.135365962982	1
Coq.MSets.MSetProperties.WPropertiesOn.inter_assoc	40	0	search with cache (only 1: fsetdec).	0.267560005188	1
Coq.MSets.MSetProperties.WPropertiesOn.union_inter_1	40	0	search with cache (only 1: fsetdec).	0.311855077744	1
Coq.MSets.MSetProperties.WPropertiesOn.union_inter_2	40	0	search with cache (only 1: fsetdec).	0.301534891129	1
Coq.MSets.MSetProperties.WPropertiesOn.inter_add_1	40	2.1	search with cache (only 1: intros; only 1: fsetdec).	10.5049240589	252
Coq.MSets.MSetProperties.WPropertiesOn.inter_add_2	40	0	search with cache (only 1: fsetdec).	0.176380157471	1
Coq.MSets.MSetProperties.WPropertiesOn.empty_inter_1	40	0	search with cache (only 1: fsetdec).	0.0611529350281	1
Coq.MSets.MSetProperties.WPropertiesOn.empty_inter_2	40	0	search with cache (only 1: fsetdec).	0.0614459514618	1
Coq.MSets.MSetProperties.WPropertiesOn.inter_subset_1	40	0	search with cache (only 1: fsetdec).	0.0498111248016	1
Coq.MSets.MSetProperties.WPropertiesOn.inter_subset_2	40	0	search with cache (only 1: fsetdec).	0.0562779903412	1
Coq.MSets.MSetProperties.WPropertiesOn.inter_subset_3	40	0	search with cache (only 1: fsetdec).	0.0869109630585	1
Coq.MSets.MSetProperties.WPropertiesOn.empty_diff_1	40	8	search with cache (only 1: fsetdec).	2.99981808662	191
Coq.MSets.MSetProperties.WPropertiesOn.empty_diff_2	40	0	search with cache (only 1: fsetdec).	0.145911931992	1
Coq.MSets.MSetProperties.WPropertiesOn.diff_subset	40	0	search with cache (only 1: fsetdec).	0.13245511055	1
Coq.MSets.MSetProperties.WPropertiesOn.diff_subset_equal	40	0	search with cache (only 1: fsetdec).	0.157741069794	1
Coq.MSets.MSetProperties.WPropertiesOn.remove_diff_singleton	40	0	search with cache (only 1: fsetdec).	0.185744047165	1
Coq.MSets.MSetProperties.WPropertiesOn.diff_inter_empty	40	0	search with cache (only 1: fsetdec).	0.296834945679	1
Coq.MSets.MSetProperties.WPropertiesOn.diff_inter_all	40	0	search with cache (only 1: fsetdec).	0.240666151047	1
Coq.MSets.MSetProperties.WPropertiesOn.Add_add	40	2.1.0.0	search with cache (only 1: unfold Add; only 1: intros; only 1: rewrite add_spec; only 1: intuition).	0.164889097214	7
Coq.MSets.MSetProperties.WPropertiesOn.Add_remove	40	0.0	search with cache (only 1: expAdd; only 1: fsetdec).	0.226773023605	2
Coq.MSets.MSetProperties.WPropertiesOn.union_Add	40	0.1	search with cache (only 1: expAdd; only 1: fsetdec).	0.327826976776	3
Coq.MSets.MSetProperties.WPropertiesOn.inter_Add	40	0.0	search with cache (only 1: expAdd; only 1: fsetdec).	0.485239028931	2
Coq.MSets.MSetProperties.WPropertiesOn.union_Equal	40	0.0	search with cache (only 1: expAdd; only 1: fsetdec).	0.515872955322	2
Coq.MSets.MSetProperties.WPropertiesOn.inter_Add_2	40	0.0	search with cache (only 1: expAdd; only 1: fsetdec).	0.40313410759	2
Coq.MSets.MSetProperties.WPropertiesOn.elements_Empty	40
Coq.MSets.MSetProperties.WPropertiesOn.elements_empty	40
Coq.MSets.MSetProperties.WPropertiesOn.of_list_1	40
Coq.MSets.MSetProperties.WPropertiesOn.of_list_2	40
Coq.MSets.MSetProperties.WPropertiesOn.of_list_3	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_spec_right	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_rec	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_rec_bis	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_rec_nodep	40	1.0.1.0.1.0	search with cache (only 1: intros A P f i s Pempty Pstep; only 1: apply fold_rec; only 1: set (l := rev (elements s)); only 1: auto with *; only 1: set (l := rev (elements s)); only 1: auto with *).	1.33917117119	112
Coq.MSets.MSetProperties.WPropertiesOn.fold_rec_weak	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_rel	40
Coq.MSets.MSetProperties.WPropertiesOn.set_induction	40
Coq.MSets.MSetProperties.WPropertiesOn.set_induction_bis	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_identity	40	2.0.0.0.1.0	search with cache (only 1: intros; only 1: apply fold_rec; only 1: auto with set; only 1: intros; only 1: rewrite Add_Equal in H1; only 1: fsetdec).	0.637406110764	42
Coq.MSets.MSetProperties.WPropertiesOn.fold_0	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_1	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_2	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_1b	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_commutes	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_init	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_equal	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_empty	40	13.10.13.4	search with cache (only 1: intros; only 1: apply fold_1; only 1: intuition; only 1: intuition).	39.1101238728	22515
Coq.MSets.MSetProperties.WPropertiesOn.fold_add	40
Coq.MSets.MSetProperties.WPropertiesOn.add_fold	40
Coq.MSets.MSetProperties.WPropertiesOn.remove_fold_1	40
Coq.MSets.MSetProperties.WPropertiesOn.remove_fold_2	40	0.11.0	search with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set relations).	2.76288819313	587
Coq.MSets.MSetProperties.WPropertiesOn.fold_union_inter	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_diff_inter	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_union	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_plus	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_fold	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_0	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_1	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_2	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_Empty	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_inv_1	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_inv_2	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_inv_2b	40	0.0.3.0.1.0.0	search with cache (only 1: intros; only 1: rewrite cardinal_spec in H; only 1: generalize (elements_2 (s:=s)); only 1: destruct (elements s); only 1: intuition; only 1: exists e; only 1: auto with relations).	1.39086079597	154
Coq.MSets.MSetProperties.WPropertiesOn.Equal_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_m	40
Coq.MSets.MSetProperties.WPropertiesOn.empty_cardinal	40	0.0	search with cache (only 1: apply cardinal_1; only 1: auto with set).	0.0644600391388	2
Coq.MSets.MSetProperties.WPropertiesOn.singleton_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.diff_inter_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.union_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.subset_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.subset_cardinal_lt	40
Coq.MSets.MSetProperties.WPropertiesOn.union_inter_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.union_cardinal_inter	40
Coq.MSets.MSetProperties.WPropertiesOn.union_cardinal_le	40	3.3.0	search with cache (only 1: intros; only 1: rewrite <- union_inter_cardinal; only 1: auto with arith).	0.111536026001	11
Coq.MSets.MSetProperties.WPropertiesOn.add_cardinal_1	40	1.1.2.0.0	search with cache (only 1: replace 0 with cardinal empty; only 1: replace 0 with cardinal empty; only 1: auto with set; only 1: auto with set; only 1: auto with set).	0.833140850067	89
Coq.MSets.MSetProperties.WPropertiesOn.add_cardinal_2	40	0.1.5.0.0	search with cache (only 1: intros; only 1: apply cardinal_2 with x; only 1: intro H2; only 1: intuition; only 1: auto with set).	0.783918857574	87
Coq.MSets.MSetProperties.WPropertiesOn.remove_cardinal_1	40	0.0.0.1.5.3	search with cache (only 1: intros; only 1: rewrite (cardinal_2 (s:=remove x s) (s':=s) (x:=x)); only 1: eauto with set relations; only 1: auto with set relations; only 1: expAdd; only 1: fsetdec).	1.35628008842	231
Coq.MSets.MSetProperties.WPropertiesOn.remove_cardinal_2	40	2.0	search with cache (only 1: intros; only 1: eauto with set relations).	0.15803694725	24
Coq.MSets.MSetProperties.OrdProperties.sort_equivlistA_eqlistA	40
Coq.MSets.MSetProperties.OrdProperties.gtb_1	40
Coq.MSets.MSetProperties.OrdProperties.leb_1	40
Coq.MSets.MSetProperties.OrdProperties.gtb_compat	40
Coq.MSets.MSetProperties.OrdProperties.leb_compat	40	0.0.0.9	search with cache (only 1: intros a b H; only 1: unfold leb, gtb; only 1: rewrite H; only 1: auto).	0.910942077637	299
Coq.MSets.MSetProperties.OrdProperties.elements_split	40
Coq.MSets.MSetProperties.OrdProperties.elements_Add	40
Coq.MSets.MSetProperties.OrdProperties.elements_Add_Above	40
Coq.MSets.MSetProperties.OrdProperties.elements_Add_Below	40
Coq.MSets.MSetProperties.OrdProperties.set_induction_max	40
Coq.MSets.MSetProperties.OrdProperties.set_induction_min	40
Coq.MSets.MSetProperties.OrdProperties.fold_3	40
Coq.MSets.MSetProperties.OrdProperties.fold_4	40
Coq.MSets.MSetProperties.OrdProperties.fold_equal	40
Coq.MSets.MSetProperties.OrdProperties.add_fold	40	0.0.0	search with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).	0.118952989578	3
Coq.MSets.MSetProperties.OrdProperties.remove_fold_2	40	0.0.0	search with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).	0.108892917633	3
Coq.MSets.MSetProperties.OrdProperties.choose_equal	40
Coq.MSets.MSetDecide.WDecideOn.MSetLogicalFacts.test_push	40	0	search with cache (only 1: auto).	0.0660481452942	1
Coq.MSets.MSetDecide.WDecideOn.MSetLogicalFacts.test_pull	40	0.0.0	search with cache (only 1: intros; only 1: push not in *; only 1: tauto).	0.434732913971	3
Coq.MSets.MSetDecide.WDecideOn.MSetDecideAuxiliary.eq_refl_iff	40	0	search with cache (only 1: intuition).	0.162242889404	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideAuxiliary.dec_In	40	0.0.0.10.3.52	search with cache (only 1: red; only 1: intros; only 1: rewrite <- mem_spec; only 1: destruct (mem x s); only 1: intuition; only 1: intuition).	14.4533400536	7245
Coq.MSets.MSetDecide.WDecideOn.MSetDecideAuxiliary.dec_eq	40
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_trans_1	40
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_trans_2	40	3	search with cache (only 1: fsetdec).	0.443315982819	14
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_neq_trans_1	40	0	search with cache (only 1: fsetdec).	0.262567996979	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_neq_trans_2	40	0	search with cache (only 1: fsetdec).	0.631275892258	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_In_singleton	40	0	search with cache (only 1: fsetdec).	0.0859429836273	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_add_In	40	0	search with cache (only 1: fsetdec).	0.0898990631104	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_Subset_add_remove	40	0	search with cache (only 1: fsetdec).	0.125627994537	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_disjunction	40	0	search with cache (only 1: fsetdec).	0.120136022568	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_not_In_disj	40	0	search with cache (only 1: fsetdec).	0.332854986191	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_not_In_conj	40	0	search with cache (only 1: fsetdec).	0.154842853546	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_iff_conj	40	0	search with cache (only 1: fsetdec).	0.152040958405	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_set_ops_1	40	0	search with cache (only 1: fsetdec).	0.54444694519	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.eq_chain_test	40	0	search with cache (only 1: fsetdec).	0.620676994324	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_too_complex	40
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.function_test_1	40	3	search with cache (only 1: fsetdec).	0.432665109634	37
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.function_test_2	40	0	search with cache (only 1: fsetdec).	0.22868180275	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_baydemir	40	0	search with cache (only 1: fsetdec).	0.229697942734	1
Coq.MSets.MSetFacts.WFactsOn.In_1	40
Coq.MSets.MSetFacts.WFactsOn.mem_1	40
Coq.MSets.MSetFacts.WFactsOn.mem_2	40
Coq.MSets.MSetFacts.WFactsOn.equal_1	40
Coq.MSets.MSetFacts.WFactsOn.equal_2	40
Coq.MSets.MSetFacts.WFactsOn.subset_1	40
Coq.MSets.MSetFacts.WFactsOn.subset_2	40
Coq.MSets.MSetFacts.WFactsOn.is_empty_1	40
Coq.MSets.MSetFacts.WFactsOn.is_empty_2	40
Coq.MSets.MSetFacts.WFactsOn.add_1	40
Coq.MSets.MSetFacts.WFactsOn.add_2	40	0.1.0	search with cache (only 1: intros; only 1: apply <- add_spec; only 1: auto with relations).	0.076493024826	4
Coq.MSets.MSetFacts.WFactsOn.add_3	40
Coq.MSets.MSetFacts.WFactsOn.remove_1	40
Coq.MSets.MSetFacts.WFactsOn.remove_2	40	0.1.0	search with cache (only 1: intros; only 1: rewrite remove_spec; only 1: intuition).	0.0847539901733	4
Coq.MSets.MSetFacts.WFactsOn.remove_3	40	0.2	search with cache (only 1: rewrite remove_spec; only 1: intuition).	0.078351020813	13
Coq.MSets.MSetFacts.WFactsOn.singleton_1	40
Coq.MSets.MSetFacts.WFactsOn.singleton_2	40	3.2.0	search with cache (only 1: rewrite singleton_spec; only 1: intros; only 1: intuition).	0.0850620269775	8
Coq.MSets.MSetFacts.WFactsOn.union_1	40
Coq.MSets.MSetFacts.WFactsOn.union_2	40	1.0	search with cache (only 1: rewrite union_spec; only 1: auto).	0.079353094101	3
Coq.MSets.MSetFacts.WFactsOn.union_3	40	1.0	search with cache (only 1: rewrite union_spec; only 1: auto).	0.0969488620758	3
Coq.MSets.MSetFacts.WFactsOn.inter_1	40
Coq.MSets.MSetFacts.WFactsOn.inter_2	40	0.0	search with cache (only 1: rewrite inter_spec; only 1: intuition).	0.0883069038391	2
Coq.MSets.MSetFacts.WFactsOn.inter_3	40	0.0	search with cache (only 1: rewrite inter_spec; only 1: intuition).	0.084392786026	2
Coq.MSets.MSetFacts.WFactsOn.diff_1	40
Coq.MSets.MSetFacts.WFactsOn.diff_2	40	0.0	search with cache (only 1: rewrite diff_spec; only 1: intuition).	0.0506389141083	2
Coq.MSets.MSetFacts.WFactsOn.diff_3	40	0.0	search with cache (only 1: rewrite diff_spec; only 1: intuition).	0.0442838668823	2
Coq.MSets.MSetFacts.WFactsOn.filter_1	40
Coq.MSets.MSetFacts.WFactsOn.filter_2	40	2.0.1.0	search with cache (only 1: intros P; only 1: rewrite filter_spec; only 1: intuition; only 1: intuition).	0.18897485733	7
Coq.MSets.MSetFacts.WFactsOn.filter_3	40	2.0.1.0	search with cache (only 1: intros P; only 1: rewrite filter_spec; only 1: intuition; only 1: intuition).	0.230786085129	7
Coq.MSets.MSetFacts.WFactsOn.for_all_1	40
Coq.MSets.MSetFacts.WFactsOn.for_all_2	40
Coq.MSets.MSetFacts.WFactsOn.exists_1	40
Coq.MSets.MSetFacts.WFactsOn.exists_2	40
Coq.MSets.MSetFacts.WFactsOn.elements_1	40
Coq.MSets.MSetFacts.WFactsOn.elements_2	40
Coq.MSets.MSetFacts.WFactsOn.In_eq_iff	40	2.0.1	search with cache (only 1: intros E; only 1: rewrite E; only 1: intuition).	0.119400978088	6
Coq.MSets.MSetFacts.WFactsOn.mem_iff	40	6	search with cache (only 1: intuition).	0.123384952545	7
Coq.MSets.MSetFacts.WFactsOn.not_mem_iff	40
Coq.MSets.MSetFacts.WFactsOn.equal_iff	40	6	search with cache (only 1: intuition).	0.140970945358	11
Coq.MSets.MSetFacts.WFactsOn.subset_iff	40	7	search with cache (only 1: intuition).	0.161787986755	11
Coq.MSets.MSetFacts.WFactsOn.empty_iff	40
Coq.MSets.MSetFacts.WFactsOn.is_empty_iff	40	8	search with cache (only 1: intuition).	0.156618118286	12
Coq.MSets.MSetFacts.WFactsOn.singleton_iff	40	1.0	search with cache (only 1: rewrite singleton_spec; only 1: intuition).	0.100085020065	3
Coq.MSets.MSetFacts.WFactsOn.add_iff	40	4.0	search with cache (only 1: rewrite add_spec; only 1: intuition).	0.247215032578	6
Coq.MSets.MSetFacts.WFactsOn.add_neq_iff	40	3.5.1.0	search with cache (only 1: rewrite add_spec; only 1: intuition; only 1: elim H; only 1: intuition).	1.06902909279	262
Coq.MSets.MSetFacts.WFactsOn.remove_iff	40	0.4	search with cache (only 1: rewrite remove_spec; only 1: intuition).	0.199585914612	13
Coq.MSets.MSetFacts.WFactsOn.remove_neq_iff	40	1.0	search with cache (only 1: rewrite remove_spec; only 1: intuition).	0.104698896408	3
Coq.MSets.MSetFacts.WFactsOn.for_all_iff	40	8	search with cache (only 1: intuition).	0.221318006516	20
Coq.MSets.MSetFacts.WFactsOn.exists_iff	40	9	search with cache (only 1: intuition).	0.219006061554	21
Coq.MSets.MSetFacts.WFactsOn.elements_iff	40	7	search with cache (only 1: intuition).	0.0842959880829	8
Coq.MSets.MSetFacts.WFactsOn.mem_b	40
Coq.MSets.MSetFacts.WFactsOn.empty_b	40
Coq.MSets.MSetFacts.WFactsOn.add_b	40
Coq.MSets.MSetFacts.WFactsOn.add_neq_b	40
Coq.MSets.MSetFacts.WFactsOn.remove_b	40
Coq.MSets.MSetFacts.WFactsOn.remove_neq_b	40
Coq.MSets.MSetFacts.WFactsOn.singleton_b	40
Coq.MSets.MSetFacts.WFactsOn.union_b	40
Coq.MSets.MSetFacts.WFactsOn.inter_b	40
Coq.MSets.MSetFacts.WFactsOn.diff_b	40
Coq.MSets.MSetFacts.WFactsOn.elements_b	40
Coq.MSets.MSetFacts.WFactsOn.filter_b	40
Coq.MSets.MSetFacts.WFactsOn.for_all_b	40
Coq.MSets.MSetFacts.WFactsOn.exists_b	40
Coq.MSets.MSetFacts.WFactsOn.In_m	40
Coq.MSets.MSetFacts.WFactsOn.Empty_m	40	52.0	search with cache (only 1: unfold Equal; only 1: firstorder).	4.3138449192	4140
Coq.MSets.MSetFacts.WFactsOn.is_empty_m	40
Coq.MSets.MSetFacts.WFactsOn.mem_m	40
Coq.MSets.MSetFacts.WFactsOn.singleton_m	40
Coq.MSets.MSetFacts.WFactsOn.add_m	40
Coq.MSets.MSetFacts.WFactsOn.remove_m	40
Coq.MSets.MSetFacts.WFactsOn.union_m	40	0.7.8.0	search with cache (only 1: intros x x' Hx s s' Hs a; only 1: rewrite union_spec; only 1: rewrite Hs, Hx  at 1; only 1: intuition).	18.1946110725	2304
Coq.MSets.MSetFacts.WFactsOn.inter_m	40	0.4.8.8.0	search with cache (only 1: intros x x' Hx s s' Hs a; only 1: rewrite inter_spec; only 1: rewrite inter_spec; only 1: rewrite Hs, Hx  at 1; only 1: intuition).	37.5033290386	9167
Coq.MSets.MSetFacts.WFactsOn.diff_m	40
Coq.MSets.MSetFacts.WFactsOn.Subset_m	40	9	search with cache (only 1: firstorder).	0.529431819916	77
Coq.MSets.MSetFacts.WFactsOn.subset_m	40
Coq.MSets.MSetFacts.WFactsOn.equal_m	40
Coq.MSets.MSetFacts.WFactsOn.SubsetSetoid	40	0.0.29.3	search with cache (only 1: unfold Equal, Subset; only 1: split; only 1: firstorder; only 1: firstorder).	1.28970098495	1103
Coq.MSets.MSetFacts.WFactsOn.In_s_m	40
Coq.MSets.MSetFacts.WFactsOn.Empty_s_m	40	1.0.2.0.1	search with cache (only 1: repeat red; only 1: unfold Empty; only 1: intros s s' E; only 1: setoid_rewrite E; only 1: auto).	0.332695960999	18
Coq.MSets.MSetFacts.WFactsOn.add_s_m	40	0.0.1	search with cache (only 1: intros x x' Hx s s' Hs a; only 1: rewrite !add_iff, Hx, Hs; only 1: intuition).	0.752367019653	22
Coq.MSets.MSetFacts.WFactsOn.remove_s_m	40	0.0.1	search with cache (only 1: intros x x' Hx s s' Hs a; only 1: rewrite !remove_iff, Hx, Hs; only 1: intuition).	0.779667139053	23
Coq.MSets.MSetFacts.WFactsOn.union_s_m	40	0.0.0	search with cache (only 1: intros s1 s1' Hs1 s2 s2' Hs2 a; only 1: rewrite !union_spec, Hs1, Hs2; only 1: intuition).	0.248296976089	3
Coq.MSets.MSetFacts.WFactsOn.inter_s_m	40	0.0.0	search with cache (only 1: intros s1 s1' Hs1 s2 s2' Hs2 a; only 1: rewrite !inter_spec, Hs1, Hs2; only 1: intuition).	0.163726091385	3
Coq.MSets.MSetFacts.WFactsOn.diff_s_m	40	0.0.1	search with cache (only 1: intros s1 s1' Hs1 s2 s2' Hs2 a; only 1: rewrite !diff_spec, Hs1, Hs2; only 1: intuition).	0.248114824295	4
Coq.MSets.MSetFacts.WFactsOn.filter_equal	40
Coq.MSets.MSetFacts.WFactsOn.filter_subset	40	0.0.0	search with cache (only 1: intros f Hf s s' Hs a; only 1: rewrite !filter_spec, Hs by auto; only 1: intuition).	0.1498670578	3
Coq.MSets.MSetFacts.WFactsOn.filter_ext	40
Coq.MSets.MSetList.MakeRaw.inf_iff	40
Coq.MSets.MSetList.MakeRaw.isok_iff	40
Coq.MSets.MSetList.MakeRaw.isok_Ok	40	0	search with cache (only 1: tauto).	0.0990278720856	1
Coq.MSets.MSetList.MakeRaw.mem_spec	40
Coq.MSets.MSetList.MakeRaw.add_inf	40
Coq.MSets.MSetList.MakeRaw.add_ok	40
Coq.MSets.MSetList.MakeRaw.add_spec	40
Coq.MSets.MSetList.MakeRaw.remove_inf	40
Coq.MSets.MSetList.MakeRaw.remove_ok	40
Coq.MSets.MSetList.MakeRaw.remove_spec	40
Coq.MSets.MSetList.MakeRaw.singleton_ok	40	4	search with cache (only 1: intuition).	0.0746381282806	5
Coq.MSets.MSetList.MakeRaw.singleton_spec	40	1.1.0.10.2	search with cache (only 1: intros; only 1: unfold singleton; only 1: intuition; only 1: inv; only 1: order).	1.65627408028	468
Coq.MSets.MSetList.MakeRaw.union_inf	40
Coq.MSets.MSetList.MakeRaw.union_ok	40
Coq.MSets.MSetList.MakeRaw.union_spec	40
Coq.MSets.MSetList.MakeRaw.inter_inf	40
Coq.MSets.MSetList.MakeRaw.inter_ok	40
Coq.MSets.MSetList.MakeRaw.inter_spec	40
Coq.MSets.MSetList.MakeRaw.diff_inf	40
Coq.MSets.MSetList.MakeRaw.diff_ok	40	5.0.0	search with cache (only 1: repeat rewrite <- isok_iff; only 1: revert s s'; only 1: induction2).	0.228471040726	8
Coq.MSets.MSetList.MakeRaw.diff_spec	40
Coq.MSets.MSetList.MakeRaw.equal_spec	40
Coq.MSets.MSetList.MakeRaw.subset_spec	40
Coq.MSets.MSetList.MakeRaw.empty_ok	40	0.13	search with cache (only 1: red; only 1: tauto).	0.251046895981	75
Coq.MSets.MSetList.MakeRaw.empty_spec	40	29	search with cache (only 1: easy).	2.96090316772	1151
Coq.MSets.MSetList.MakeRaw.is_empty_spec	40
Coq.MSets.MSetList.MakeRaw.elements_spec1	40	3.2	search with cache (only 1: intros; only 1: intuition).	0.0647821426392	7
Coq.MSets.MSetList.MakeRaw.elements_spec2	40	10.13.0	search with cache (only 1: intuition; only 1: inv; only 1: intuition).	1.35583019257	857
Coq.MSets.MSetList.MakeRaw.elements_spec2w	40	1.0.1	search with cache (only 1: intro s; only 1: repeat rewrite <- isok_iff; only 1: auto).	0.196947097778	5
Coq.MSets.MSetList.MakeRaw.min_elt_spec1	40
Coq.MSets.MSetList.MakeRaw.min_elt_spec2	40
Coq.MSets.MSetList.MakeRaw.min_elt_spec3	40	0.0.0.0.2	search with cache (only 1: destruct s; only 1: inversion 1; only 1: inversion 1; only 1: simpl; only 1: inversion 1).	0.49157500267	44
Coq.MSets.MSetList.MakeRaw.max_elt_spec1	40	1.0.3.0.11.0.1	search with cache (only 1: induction s as [| x s IH]; only 1: inversion 1; only 1: destruct s; only 1: inversion 1; only 1: auto; only 1: inversion 1; only 1: intuition).	30.0322971344	8329
Coq.MSets.MSetList.MakeRaw.max_elt_spec2	40
Coq.MSets.MSetList.MakeRaw.max_elt_spec3	40
Coq.MSets.MSetList.MakeRaw.choose_spec3	40
Coq.MSets.MSetList.MakeRaw.fold_spec	40	0	search with cache (only 1: intuition).	0.0604250431061	1
Coq.MSets.MSetList.MakeRaw.cardinal_spec	40	0.0.0	search with cache (only 1: intro s; only 1: repeat rewrite <- isok_iff; only 1: auto).	0.0934879779816	3
Coq.MSets.MSetList.MakeRaw.filter_inf	40
Coq.MSets.MSetList.MakeRaw.filter_ok	40
Coq.MSets.MSetList.MakeRaw.filter_spec	40
Coq.MSets.MSetList.MakeRaw.for_all_spec	40
Coq.MSets.MSetList.MakeRaw.exists_spec	40
Coq.MSets.MSetList.MakeRaw.partition_inf1	40
Coq.MSets.MSetList.MakeRaw.partition_inf2	40
Coq.MSets.MSetList.MakeRaw.partition_ok1	40
Coq.MSets.MSetList.MakeRaw.partition_ok2	40
Coq.MSets.MSetList.MakeRaw.partition_spec1	40
Coq.MSets.MSetList.MakeRaw.partition_spec2	40
Coq.MSets.MSetList.MakeRaw.In_compat	40	5.0	search with cache (only 1: intros x x' Hxx' y y' Hyy'; only 1: now rewrite Hxx', Hyy').	0.135907173157	7
Coq.MSets.MSetList.MakeRaw.lt_strorder	40
Coq.MSets.MSetList.MakeRaw.lt_compat	40
Coq.MSets.MSetList.MakeRaw.compare_spec_aux	40
Coq.MSets.MSetList.MakeRaw.compare_spec	40
Coq.MSets.MSetList.MakeWithLeibniz.eq_leibniz_list	40
Coq.MSets.MSetList.MakeWithLeibniz.eq_leibniz	40
Coq.MSets.MSetPositive.PositiveSet.In_compat	40	1.0.0	search with cache (only 1: intros x x' Hx y y' Hy; only 1: rewrite Hx, Hy; only 1: intuition).	0.142602920532	4
Coq.MSets.MSetPositive.PositiveSet.eq_equiv	40
Coq.MSets.MSetPositive.PositiveSet.mem_spec	40	0	search with cache (only 1: intuition).	0.0573329925537	1
Coq.MSets.MSetPositive.PositiveSet.mem_Leaf	40	1	search with cache (only 1: intuition).	0.0557119846344	2
Coq.MSets.MSetPositive.PositiveSet.empty_spec	40	2.0	search with cache (only 1: intros a b; only 1: intuition).	0.0537588596344	4
Coq.MSets.MSetPositive.PositiveSet.mem_node	40
Coq.MSets.MSetPositive.PositiveSet.is_empty_spec	40
Coq.MSets.MSetPositive.PositiveSet.subset_Leaf_s	40	6.0.1.15	search with cache (only 1: intros a b; only 1: unfold In; only 1: simpl; only 1: discriminate).	4.26412701607	1332
Coq.MSets.MSetPositive.PositiveSet.subset_spec	40
Coq.MSets.MSetPositive.PositiveSet.equal_subset	40
Coq.MSets.MSetPositive.PositiveSet.equal_spec	40
Coq.MSets.MSetPositive.PositiveSet.eq_dec	40
Coq.MSets.MSetPositive.PositiveSet.lex_Opp	40
Coq.MSets.MSetPositive.PositiveSet.compare_bool_inv	40
Coq.MSets.MSetPositive.PositiveSet.compare_inv	40
Coq.MSets.MSetPositive.PositiveSet.lex_Eq	40
Coq.MSets.MSetPositive.PositiveSet.compare_bool_Eq	40	2.2.2.2.0	search with cache (only 1: intros [| ] [| ]; only 1: intuition discriminate; only 1: intuition discriminate; only 1: intuition discriminate; only 1: intuition discriminate).	0.758254051208	187
Coq.MSets.MSetPositive.PositiveSet.compare_equal	40
Coq.MSets.MSetPositive.PositiveSet.compare_gt	40
Coq.MSets.MSetPositive.PositiveSet.compare_eq	40
Coq.MSets.MSetPositive.PositiveSet.compare_spec	40
Coq.MSets.MSetPositive.PositiveSet.ct_cxe	40
Coq.MSets.MSetPositive.PositiveSet.ct_xce	40	0.0.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0501549243927	4
Coq.MSets.MSetPositive.PositiveSet.ct_lxl	40	0.0.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0485198497772	4
Coq.MSets.MSetPositive.PositiveSet.ct_gxg	40	0.0.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0488519668579	4
Coq.MSets.MSetPositive.PositiveSet.ct_xll	40	0.1.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0493180751801	5
Coq.MSets.MSetPositive.PositiveSet.ct_xgg	40	1.0.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0493140220642	5
Coq.MSets.MSetPositive.PositiveSet.ct_lex	40
Coq.MSets.MSetPositive.PositiveSet.ct_compare_bool	40
Coq.MSets.MSetPositive.PositiveSet.compare_x_Leaf	40	3.0.1.0.11	search with cache (only 1: induction s as [| l IHl o r IHr]; only 1: unfold compare, equal; only 1: simpl; only 1: tauto; only 1: trivial).	1.64372801781	1133
Coq.MSets.MSetPositive.PositiveSet.compare_empty_x	40
Coq.MSets.MSetPositive.PositiveSet.compare_x_empty	40
Coq.MSets.MSetPositive.PositiveSet.ct_compare	40
Coq.MSets.MSetPositive.PositiveSet.lt_strorder	40
Coq.MSets.MSetPositive.PositiveSet.compare_compat_1	40
Coq.MSets.MSetPositive.PositiveSet.compare_compat	40
Coq.MSets.MSetPositive.PositiveSet.lt_compat	40	1.1.0.0.7	search with cache (only 1: unfold lt; only 1: intros x x' Hx y y' Hy; only 1: rewrite Hx; only 1: rewrite compare_inv, Hy, <- compare_inv; only 1: reflexivity).	3.51768493652	632
Coq.MSets.MSetPositive.PositiveSet.add_spec	40
Coq.MSets.MSetPositive.PositiveSet.remove_spec	40
Coq.MSets.MSetPositive.PositiveSet.singleton_spec	40
Coq.MSets.MSetPositive.PositiveSet.union_spec	40
Coq.MSets.MSetPositive.PositiveSet.inter_spec	40
Coq.MSets.MSetPositive.PositiveSet.diff_spec	40
Coq.MSets.MSetPositive.PositiveSet.fold_spec	40
Coq.MSets.MSetPositive.PositiveSet.cardinal_spec	40
Coq.MSets.MSetPositive.PositiveSet.xfilter_spec	40
Coq.MSets.MSetPositive.PositiveSet.filter_spec	40
Coq.MSets.MSetPositive.PositiveSet.xforall_spec	40
Coq.MSets.MSetPositive.PositiveSet.for_all_spec	40
Coq.MSets.MSetPositive.PositiveSet.xexists_spec	40
Coq.MSets.MSetPositive.PositiveSet.exists_spec	40
Coq.MSets.MSetPositive.PositiveSet.partition_filter	40
Coq.MSets.MSetPositive.PositiveSet.partition_spec1	40
Coq.MSets.MSetPositive.PositiveSet.partition_spec2	40	0.0.0	search with cache (only 1: intros; only 1: rewrite partition_filter; only 1: reflexivity).	0.089537858963	3
Coq.MSets.MSetPositive.PositiveSet.xelements_spec	40
Coq.MSets.MSetPositive.PositiveSet.elements_spec1	40
Coq.MSets.MSetPositive.PositiveSet.lt_rev_append	40
Coq.MSets.MSetPositive.PositiveSet.elements_spec2	40
Coq.MSets.MSetPositive.PositiveSet.elements_spec2w	40
Coq.MSets.MSetPositive.PositiveSet.choose_spec1	40
Coq.MSets.MSetPositive.PositiveSet.choose_spec2	40
Coq.MSets.MSetPositive.PositiveSet.choose_empty	40
Coq.MSets.MSetPositive.PositiveSet.choose_spec3'	40
Coq.MSets.MSetPositive.PositiveSet.choose_spec3	40
Coq.MSets.MSetPositive.PositiveSet.min_elt_spec1	40
Coq.MSets.MSetPositive.PositiveSet.min_elt_spec3	40
Coq.MSets.MSetPositive.PositiveSet.min_elt_spec2	40
Coq.MSets.MSetPositive.PositiveSet.max_elt_spec1	40
Coq.MSets.MSetPositive.PositiveSet.max_elt_spec3	40
Coq.MSets.MSetPositive.PositiveSet.max_elt_spec2	40
Coq.MSets.MSetAVL.MakeRaw.singleton_spec	40
Coq.MSets.MSetAVL.MakeRaw.singleton_ok	40	0.0	search with cache (only 1: unfold singleton; only 1: intuition_in).	0.065260887146	2
Coq.MSets.MSetAVL.MakeRaw.create_spec	40
Coq.MSets.MSetAVL.MakeRaw.create_ok	40	0.0.0.0.11	search with cache (only 1: constructor; only 1: ok; only 1: ok; only 1: ok; only 1: ok).	4.91088294983	157
Coq.MSets.MSetAVL.MakeRaw.bal_spec	40
Coq.MSets.MSetAVL.MakeRaw.bal_ok	40
Coq.MSets.MSetAVL.MakeRaw.add_spec'	40
Coq.MSets.MSetAVL.MakeRaw.add_spec	40	0.0.0.0.0.0.3.1.0.3	search with cache (only 1: induct ltac:(s) ltac:(x); only 1: intuition_in; only 1: intuition_in; only 1: eauto; only 1: rewrite ?bal_spec, ?IHl, ?IHr; only 1: intuition_in; only 1: intuition_in; only 1: rewrite ?bal_spec, ?IHl, ?IHr; only 1: intuition_in; only 1: intuition_in).	19.8985469341	1391
Coq.MSets.MSetAVL.MakeRaw.add_ok	40
Coq.MSets.MSetAVL.MakeRaw.join_spec	40
Coq.MSets.MSetAVL.MakeRaw.join_ok	40
Coq.MSets.MSetAVL.MakeRaw.remove_min_spec	40
Coq.MSets.MSetAVL.MakeRaw.remove_min_ok	40
Coq.MSets.MSetAVL.MakeRaw.remove_min_gt_tree	40
Coq.MSets.MSetAVL.MakeRaw.merge_spec	40
Coq.MSets.MSetAVL.MakeRaw.merge_ok	40
Coq.MSets.MSetAVL.MakeRaw.remove_spec	40
Coq.MSets.MSetAVL.MakeRaw.remove_ok	40
Coq.MSets.MSetAVL.MakeRaw.concat_spec	40
Coq.MSets.MSetAVL.MakeRaw.concat_ok	40
Coq.MSets.MSetAVL.MakeRaw.split_spec1	40
Coq.MSets.MSetAVL.MakeRaw.split_spec2	40
Coq.MSets.MSetAVL.MakeRaw.split_spec3	40
Coq.MSets.MSetAVL.MakeRaw.split_ok	40
Coq.MSets.MSetAVL.MakeRaw.split_ok1	40
Coq.MSets.MSetAVL.MakeRaw.split_ok2	40	0.3.2	search with cache (only 1: destruct (@split_ok s x); only 1: auto; only 1: auto).	0.164692878723	19
Coq.MSets.MSetAVL.MakeRaw.inter_spec_ok	40
Coq.MSets.MSetAVL.MakeRaw.inter_spec	40
Coq.MSets.MSetAVL.MakeRaw.inter_ok	40	1.3.3.2	search with cache (only 1: destruct (@inter_spec_ok s1 s2); only 1: auto with *; only 1: auto with *; only 1: auto).	8.2006380558	771
Coq.MSets.MSetAVL.MakeRaw.diff_spec_ok	40
Coq.MSets.MSetAVL.MakeRaw.diff_spec	40
Coq.MSets.MSetAVL.MakeRaw.diff_ok	40	1.3.3.2	search with cache (only 1: destruct (@diff_spec_ok s1 s2); only 1: auto with *; only 1: auto with *; only 1: auto).	6.54363512993	868
Coq.MSets.MSetAVL.MakeRaw.union_spec	40
Coq.MSets.MSetAVL.MakeRaw.union_ok	40
Coq.MSets.MSetAVL.MakeRaw.filter_spec	40
Coq.MSets.MSetAVL.MakeRaw.filter_weak_spec	40
Coq.MSets.MSetAVL.MakeRaw.filter_ok	40
Coq.MSets.MSetAVL.MakeRaw.partition_spec1'	40
Coq.MSets.MSetAVL.MakeRaw.partition_spec2'	40	0.0.0.0.0.0	search with cache (only 1: induction s as [| h l Hl x r Hr]; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite <- Hl, <- Hr; only 1: now destruct (partition f l), (partition f r), (f x)).	0.153455972672	6
Coq.MSets.MSetAVL.MakeRaw.partition_spec1	40
Coq.MSets.MSetAVL.MakeRaw.partition_spec2	40
Coq.MSets.MSetAVL.MakeRaw.partition_ok1	40
Coq.MSets.MSetAVL.MakeRaw.partition_ok2	40
Coq.MSets.MSetRBT.MakeRaw.singleton_spec	40
Coq.MSets.MSetRBT.MakeRaw.singleton_ok	40	0.0	search with cache (only 1: unfold singleton; only 1: intuition_in).	0.0523321628571	2
Coq.MSets.MSetRBT.MakeRaw.makeBlack_spec	40
Coq.MSets.MSetRBT.MakeRaw.makeRed_spec	40	0.1.0.2	search with cache (only 1: destruct s; only 1: intuition_in; only 1: simpl; only 1: intuition_in).	0.113614082336	12
Coq.MSets.MSetRBT.MakeRaw.makeBlack_ok	40	0.0.3.0.0	search with cache (only 1: destruct s; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition_in).	0.1748919487	8
Coq.MSets.MSetRBT.MakeRaw.makeRed_ok	40	0.0.3.0.0	search with cache (only 1: destruct s; only 1: simpl; only 1: ok; only 1: simpl; only 1: intuition_in).	0.258481025696	8
Coq.MSets.MSetRBT.MakeRaw.rmatch	40
Coq.MSets.MSetRBT.MakeRaw.rrmatch	40
Coq.MSets.MSetRBT.MakeRaw.rrmatch'	40	0.1.0.0.0.0.0.0.0.0.0.0.1.0.1.0	search with cache (only 1: destruct t as [| [| ] l x r]; only 1: simpl; only 1: now constructor; only 1: simpl; only 1: destruct l as [| [| ] ll lx lr], r as [| [| ] rl rx rr]; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: simpl; only 1: now constructor).	3.27642416954	1232
Coq.MSets.MSetRBT.MakeRaw.lbal_match	40
Coq.MSets.MSetRBT.MakeRaw.rbal_match	40	0	search with cache (only 1: exact (rrmatch _ _ _)).	0.0203249454498	1
Coq.MSets.MSetRBT.MakeRaw.rbal'_match	40
Coq.MSets.MSetRBT.MakeRaw.lbalS_match	40
Coq.MSets.MSetRBT.MakeRaw.rbalS_match	40	0	search with cache (only 1: exact (rmatch _ _ _)).	0.0316388607025	1
Coq.MSets.MSetRBT.MakeRaw.lbal_spec	40
Coq.MSets.MSetRBT.MakeRaw.lbal_ok	40
Coq.MSets.MSetRBT.MakeRaw.rbal_spec	40
Coq.MSets.MSetRBT.MakeRaw.rbal_ok	40
Coq.MSets.MSetRBT.MakeRaw.rbal'_spec	40
Coq.MSets.MSetRBT.MakeRaw.rbal'_ok	40
Coq.MSets.MSetRBT.MakeRaw.ins_spec	40
Coq.MSets.MSetRBT.MakeRaw.ins_ok	40
Coq.MSets.MSetRBT.MakeRaw.add_spec'	40
Coq.MSets.MSetRBT.MakeRaw.add_spec	40	0.0	search with cache (only 1: unfold add; only 1: now autorew).	0.188205957413	2
Coq.MSets.MSetRBT.MakeRaw.add_ok	40	1.0.1.2.1	search with cache (only 1: unfold add; only 1: destruct s; only 1: simpl; only 1: auto; only 1: ok).	0.671042919159	41
Coq.MSets.MSetRBT.MakeRaw.lbalS_spec	40
Coq.MSets.MSetRBT.MakeRaw.lbalS_ok	40
Coq.MSets.MSetRBT.MakeRaw.rbalS_spec	40
Coq.MSets.MSetRBT.MakeRaw.rbalS_ok	40
Coq.MSets.MSetRBT.MakeRaw.append_rr_match	40	8	search with cache (only 1: exact (rmatch _ _ _)).	0.30064201355	50
Coq.MSets.MSetRBT.MakeRaw.append_bb_match	40	0	search with cache (only 1: exact (rmatch _ _ _)).	0.0394067764282	1
Coq.MSets.MSetRBT.MakeRaw.append_spec	40
Coq.MSets.MSetRBT.MakeRaw.append_ok	40
Coq.MSets.MSetRBT.MakeRaw.del_spec	40
Coq.MSets.MSetRBT.MakeRaw.del_ok	40
Coq.MSets.MSetRBT.MakeRaw.remove_spec	40
Coq.MSets.MSetRBT.MakeRaw.remove_ok	40	2.0	search with cache (only 1: unfold remove; only 1: auto_tc).	0.167412996292	19
Coq.MSets.MSetRBT.MakeRaw.delmin_spec	40
Coq.MSets.MSetRBT.MakeRaw.remove_min_spec1	40
Coq.MSets.MSetRBT.MakeRaw.remove_min_spec2	40	6.1.0.0.0	search with cache (only 1: unfold remove_min; only 1: destruct s as [| c l y r]; only 1: easy; only 1: destruct delmin as (x0, s0); only 1: inversion_clear 1).	1.7559659481	440
Coq.MSets.MSetRBT.MakeRaw.remove_min_ok	40
Coq.MSets.MSetRBT.MakeRaw.treeify_zero_spec	40	0.5.22	search with cache (only 1: intros s Hs; only 1: simpl; only 1: auto).	0.668395996094	462
Coq.MSets.MSetRBT.MakeRaw.treeify_one_spec	40	1.0.29.0.2.25	search with cache (only 1: intros s Hs; only 1: induction s; only 1: simpl; only 1: easy; only 1: simpl; only 1: auto).	6.3056499958	10415
Coq.MSets.MSetRBT.MakeRaw.treeify_cont_spec	40
Coq.MSets.MSetRBT.MakeRaw.treeify_aux_spec	40
Coq.MSets.MSetRBT.MakeRaw.plength_aux_spec	40
Coq.MSets.MSetRBT.MakeRaw.plength_spec	40
Coq.MSets.MSetRBT.MakeRaw.treeify_elements	40
Coq.MSets.MSetRBT.MakeRaw.treeify_spec	40
Coq.MSets.MSetRBT.MakeRaw.treeify_ok	40
Coq.MSets.MSetRBT.MakeRaw.filter_aux_elements	40
Coq.MSets.MSetRBT.MakeRaw.filter_elements	40
Coq.MSets.MSetRBT.MakeRaw.filter_spec	40
Coq.MSets.MSetRBT.MakeRaw.filter_ok	40
Coq.MSets.MSetRBT.MakeRaw.partition_aux_spec	40
Coq.MSets.MSetRBT.MakeRaw.partition_spec	40
Coq.MSets.MSetRBT.MakeRaw.partition_spec1	40	0.3.0	search with cache (only 1: intros Hf; only 1: unfold partition, filter; only 1: now rewrite partition_aux_spec).	0.0648078918457	6
Coq.MSets.MSetRBT.MakeRaw.partition_spec2	40	0	search with cache (only 1: now rewrite partition_spec).	0.0265798568726	1
Coq.MSets.MSetRBT.MakeRaw.partition_ok1	40
Coq.MSets.MSetRBT.MakeRaw.partition_ok2	40	0.1	search with cache (only 1: rewrite partition_spec; only 1: now apply filter_ok).	0.0595791339874	3
Coq.MSets.MSetRBT.MakeRaw.INV_init	40
Coq.MSets.MSetRBT.MakeRaw.INV_sym	40	10.5	search with cache (only 1: inversion_clear 1; only 1: now inA).	0.45043182373	219
Coq.MSets.MSetRBT.MakeRaw.INV_drop	40
Coq.MSets.MSetRBT.MakeRaw.INV_eq	40
Coq.MSets.MSetRBT.MakeRaw.INV_lt	40
Coq.MSets.MSetRBT.MakeRaw.INV_rev	40
Coq.MSets.MSetRBT.MakeRaw.union_list_ok	40
Coq.MSets.MSetRBT.MakeRaw.linear_union_ok	40
Coq.MSets.MSetRBT.MakeRaw.fold_add_ok	40
Coq.MSets.MSetRBT.MakeRaw.union_ok	40
Coq.MSets.MSetRBT.MakeRaw.union_list_spec	40
Coq.MSets.MSetRBT.MakeRaw.linear_union_spec	40
Coq.MSets.MSetRBT.MakeRaw.fold_add_spec	40
Coq.MSets.MSetRBT.MakeRaw.union_spec'	40
Coq.MSets.MSetRBT.MakeRaw.union_spec	40	0.0.0.0.1.0.0.18	search with cache (only 1: intros; only 1: unfold union; only 1: destruct compare_height; only 1: apply linear_union_spec; only 1: rewrite fold_add_spec; only 1: tauto; only 1: rewrite fold_add_spec; only 1: tauto).	35.1558721066	9399
Coq.MSets.MSetRBT.MakeRaw.inter_list_ok	40
Coq.MSets.MSetRBT.MakeRaw.linear_inter_ok	40
Coq.MSets.MSetRBT.MakeRaw.inter_ok	40
Coq.MSets.MSetRBT.MakeRaw.inter_list_spec	40
Coq.MSets.MSetRBT.MakeRaw.linear_inter_spec	40
Coq.MSets.MSetRBT.MakeRaw.mem_proper	40
Coq.MSets.MSetRBT.MakeRaw.inter_spec	40
Coq.MSets.MSetRBT.MakeRaw.diff_list_ok	40
Coq.MSets.MSetRBT.MakeRaw.diff_inter_ok	40
Coq.MSets.MSetRBT.MakeRaw.fold_remove_ok	40	0.0.0.0.0.0.0.0	search with cache (only 1: rewrite fold_spec, <- fold_left_rev_right; only 1: unfold elt in *; only 1: induction (rev (elements s1)); only 1: simpl; only 1: tauto; only 1: simpl; only 1: unfold flip in *; only 1: auto_tc).	0.12079501152	8
Coq.MSets.MSetRBT.MakeRaw.diff_ok	40
Coq.MSets.MSetRBT.MakeRaw.diff_list_spec	40
Coq.MSets.MSetRBT.MakeRaw.linear_diff_spec	40
Coq.MSets.MSetRBT.MakeRaw.fold_remove_spec	40
Coq.MSets.MSetRBT.MakeRaw.diff_spec	40
Coq.MSets.MSetRBT.BalanceProps.rr_nrr_rb	40
Coq.MSets.MSetRBT.BalanceProps.arb_nrr_rb	40	4.4.21.23	search with cache (only 1: intros p; only 1: destruct p; only 1: auto; only 1: auto).	24.0122621059	23724
Coq.MSets.MSetRBT.BalanceProps.arb_nr_rb	40	2.0.16.2.0	search with cache (only 1: destruct 1; only 1: auto; only 1: revert H; only 1: destruct 1 as [l x r Hl Hr]; only 1: invrb).	2.65852499008	1660
Coq.MSets.MSetRBT.BalanceProps.rb_maxdepth	40
Coq.MSets.MSetRBT.BalanceProps.rb_mindepth	40
Coq.MSets.MSetRBT.BalanceProps.maxdepth_upperbound	40
Coq.MSets.MSetRBT.BalanceProps.maxdepth_lowerbound	40
Coq.MSets.MSetRBT.BalanceProps.singleton_rb	40
Coq.MSets.MSetRBT.BalanceProps.makeBlack_rb	40
Coq.MSets.MSetRBT.BalanceProps.makeRed_rr	40	5.1.1.0	search with cache (only 1: destruct t; only 1: invrb; only 1: invrb; only 1: now subst).	0.683241844177	114
Coq.MSets.MSetRBT.BalanceProps.lbal_rb	40
Coq.MSets.MSetRBT.BalanceProps.rbal_rb	40
Coq.MSets.MSetRBT.BalanceProps.rbal'_rb	40
Coq.MSets.MSetRBT.BalanceProps.lbalS_rb	40
Coq.MSets.MSetRBT.BalanceProps.lbalS_arb	40
Coq.MSets.MSetRBT.BalanceProps.rbalS_rb	40
Coq.MSets.MSetRBT.BalanceProps.rbalS_arb	40
Coq.MSets.MSetRBT.BalanceProps.ifred_notred	40
Coq.MSets.MSetRBT.BalanceProps.ifred_or	40	1.0.1.0.0.1.1.0	search with cache (only 1: destruct s; only 1: simpl; only 1: intuition; only 1: descolor; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).	1.07273888588	225
Coq.MSets.MSetRBT.BalanceProps.ins_rr_rb	40
Coq.MSets.MSetRBT.BalanceProps.ins_arb	40
Coq.MSets.MSetRBT.BalanceProps.add_rb	40
Coq.MSets.MSetRBT.BalanceProps.append_arb_rb	40
Coq.MSets.MSetRBT.BalanceProps.del_arb	40	1	search with cache (only 1: auto).	0.0299818515778	2
Coq.MSets.MSetRBT.BalanceProps.remove_rb	40
Coq.MSets.MSetRBT.BalanceProps.treeify_zero_rb	40	52	search with cache (only 1: now auto_tc).	20.8574700356	20265
Coq.MSets.MSetRBT.BalanceProps.treeify_one_rb	40
Coq.MSets.MSetRBT.BalanceProps.treeify_cont_rb	40
Coq.MSets.MSetRBT.BalanceProps.treeify_aux_rb	40
Coq.MSets.MSetRBT.BalanceProps.treeify_rb	40
Coq.MSets.MSetRBT.BalanceProps.filter_rb	40
Coq.MSets.MSetRBT.BalanceProps.partition_rb1	40	0.7.1.0	search with cache (only 1: rewrite partition_spec; only 1: unfold partition, filter; only 1: simpl; only 1: auto_tc).	0.315175056458	92
Coq.MSets.MSetRBT.BalanceProps.partition_rb2	40	1.0.0.2	search with cache (only 1: unfold partition; only 1: destruct partition_aux; only 1: simpl; only 1: auto_tc).	0.146620035172	29
Coq.MSets.MSetRBT.BalanceProps.fold_add_rb	40	1.1.0.1.0.1.0	search with cache (only 1: rewrite fold_spec, <- fold_left_rev_right; only 1: unfold elt in *; only 1: induction (rev (elements s1)); only 1: tauto; only 1: simpl; only 1: unfold flip in *; only 1: auto_tc).	0.796198129654	169
Coq.MSets.MSetRBT.BalanceProps.fold_remove_rb	40	1.0.0.4.0.0.0.1	search with cache (only 1: rewrite fold_spec, <- fold_left_rev_right; only 1: unfold elt in *; only 1: induction (rev (elements s1)); only 1: simpl; only 1: auto_tc; only 1: simpl; only 1: unfold flip in *; only 1: auto_tc).	11.9998190403	2688
Coq.MSets.MSetRBT.BalanceProps.union_rb	40	3.3.5.0.0.0	search with cache (only 1: unfold union; only 1: destruct compare_height; only 1: unfold linear_union; only 1: auto_tc; only 1: auto_tc; only 1: auto_tc).	30.9522910118	7622
Coq.MSets.MSetRBT.BalanceProps.inter_rb	40	2.2.2.0.0.0	search with cache (only 1: unfold inter; only 1: destruct compare_height; only 1: unfold linear_inter; only 1: auto_tc; only 1: auto_tc; only 1: auto_tc).	1.6480050087	457
Coq.MSets.MSetRBT.BalanceProps.diff_rb	40	2.0.1.1.0.0	search with cache (only 1: unfold diff; only 1: destruct compare_height; only 1: unfold linear_diff; only 1: auto_tc; only 1: auto_tc; only 1: auto_tc).	0.234750986099	13
Coq.MSets.MSetRBT.Make.remove_min_spec1	40
Coq.MSets.MSetRBT.Make.remove_min_spec2	40
Coq.MSets.MSetGenTree.Props.ltb_tree_iff	40
Coq.MSets.MSetGenTree.Props.gtb_tree_iff	40
Coq.MSets.MSetGenTree.Props.isok_iff	40
Coq.MSets.MSetGenTree.Props.isok_Ok	40
Coq.MSets.MSetGenTree.Props.In_1	40
Coq.MSets.MSetGenTree.Props.In_compat	40
Coq.MSets.MSetGenTree.Props.In_node_iff	40	0	search with cache (only 1: intuition_in).	0.164331912994	1
Coq.MSets.MSetGenTree.Props.In_leaf_iff	40	0	search with cache (only 1: intuition_in).	0.0837190151215	1
Coq.MSets.MSetGenTree.Props.lt_leaf	40	0.1	search with cache (only 1: unfold lt_tree; only 1: intuition_in).	0.134342908859	3
Coq.MSets.MSetGenTree.Props.gt_leaf	40	0.1	search with cache (only 1: unfold gt_tree; only 1: intuition_in).	0.163516044617	3
Coq.MSets.MSetGenTree.Props.lt_tree_node	40	0.0.7	search with cache (only 1: unfold lt_tree; only 1: intuition_in; only 1: order).	0.424690008163	48
Coq.MSets.MSetGenTree.Props.gt_tree_node	40	0.0.7.0	search with cache (only 1: intuition_in; only 1: unfold gt_tree; only 1: intuition_in; only 1: order).	0.490900039673	48
Coq.MSets.MSetGenTree.Props.lt_tree_not_in	40	1.0	search with cache (only 1: intuition_in; only 1: order).	0.13014793396	3
Coq.MSets.MSetGenTree.Props.lt_tree_trans	40	6.0.0	search with cache (only 1: unfold lt_tree; only 1: intuition_in; only 1: eauto).	0.0917239189148	9
Coq.MSets.MSetGenTree.Props.gt_tree_not_in	40	0.0.0	search with cache (only 1: intros; only 1: intro; only 1: order).	0.0824420452118	3
Coq.MSets.MSetGenTree.Props.gt_tree_trans	40	6.0.0	search with cache (only 1: unfold gt_tree; only 1: intuition_in; only 1: eauto).	0.0896029472351	9
Coq.MSets.MSetGenTree.Props.lt_tree_compat	40	0.0.0.1.0.0.0	search with cache (only 1: apply proper_sym_impl_iff_2; only 1: auto with *; only 1: auto with *; only 1: repeat red; only 1: intros; only 1: subst; only 1: order).	0.17308807373	8
Coq.MSets.MSetGenTree.Props.gt_tree_compat	40	0.0.1.1.0.0.0	search with cache (only 1: apply proper_sym_impl_iff_2; only 1: auto with *; only 1: auto with *; only 1: repeat red; only 1: intros; only 1: subst; only 1: order).	0.183473110199	9
Coq.MSets.MSetGenTree.Props.empty_spec	40	6.21	search with cache (only 1: intro H; only 1: inversion 1).	0.776926040649	429
Coq.MSets.MSetGenTree.Props.empty_ok	40	2	search with cache (only 1: intuition_in).	0.0418100357056	3
Coq.MSets.MSetGenTree.Props.is_empty_spec	40
Coq.MSets.MSetGenTree.Props.mem_spec	40
Coq.MSets.MSetGenTree.Props.min_elt_spec1	40
Coq.MSets.MSetGenTree.Props.min_elt_spec2	40
Coq.MSets.MSetGenTree.Props.min_elt_spec3	40
Coq.MSets.MSetGenTree.Props.max_elt_spec1	40
Coq.MSets.MSetGenTree.Props.max_elt_spec2	40
Coq.MSets.MSetGenTree.Props.max_elt_spec3	40	0.0.1.0.0.0.0.1	search with cache (only 1: functional induction max_elt s; only 1: red; only 1: red; only 1: inversion 2; only 1: inversion 1; only 1: intro H0; only 1: destruct (IHo H0 _x3); only 1: auto).	1.42442989349	153
Coq.MSets.MSetGenTree.Props.choose_spec1	40
Coq.MSets.MSetGenTree.Props.choose_spec2	40
Coq.MSets.MSetGenTree.Props.choose_spec3	40
Coq.MSets.MSetGenTree.Props.elements_spec1'	40
Coq.MSets.MSetGenTree.Props.elements_spec1	40
Coq.MSets.MSetGenTree.Props.elements_spec2'	40
Coq.MSets.MSetGenTree.Props.elements_spec2	40
Coq.MSets.MSetGenTree.Props.elements_spec2w	40
Coq.MSets.MSetGenTree.Props.elements_aux_cardinal	40
Coq.MSets.MSetGenTree.Props.elements_cardinal	40
Coq.MSets.MSetGenTree.Props.elements_app	40
Coq.MSets.MSetGenTree.Props.elements_node	40
Coq.MSets.MSetGenTree.Props.rev_elements_app	40
Coq.MSets.MSetGenTree.Props.rev_elements_node	40
Coq.MSets.MSetGenTree.Props.rev_elements_rev	40
Coq.MSets.MSetGenTree.Props.sorted_app_inv	40
Coq.MSets.MSetGenTree.Props.elements_sort_ok	40
Coq.MSets.MSetGenTree.Props.for_all_spec	40
Coq.MSets.MSetGenTree.Props.exists_spec	40
Coq.MSets.MSetGenTree.Props.fold_spec'	40
Coq.MSets.MSetGenTree.Props.fold_spec	40
Coq.MSets.MSetGenTree.Props.subsetl_spec	40
Coq.MSets.MSetGenTree.Props.subsetr_spec	40
Coq.MSets.MSetGenTree.Props.subset_spec	40
Coq.MSets.MSetGenTree.Props.eq_equiv	40
Coq.MSets.MSetGenTree.Props.eq_Leq	40
Coq.MSets.MSetGenTree.Props.lt_strorder	40
Coq.MSets.MSetGenTree.Props.lt_compat	40
Coq.MSets.MSetGenTree.Props.flatten_e_elements	40	1.9.0	search with cache (only 1: intros; only 1: rewrite elements_node; only 1: now rewrite !app_assoc_reverse).	1.20126700401	331
Coq.MSets.MSetGenTree.Props.cons_1	40
Coq.MSets.MSetGenTree.Props.compare_end_Cmp	40
Coq.MSets.MSetGenTree.Props.compare_more_Cmp	40	0.0.0.0.1.11.1.0	search with cache (only 1: intros; only 1: simpl; only 1: elim_compare x1 x2; only 1: auto; only 1: constructor; only 1: auto; only 1: constructor; only 1: auto).	2.54208898544	956
Coq.MSets.MSetGenTree.Props.compare_cont_Cmp	40
Coq.MSets.MSetGenTree.Props.compare_Cmp	40
Coq.MSets.MSetGenTree.Props.compare_spec	40
Coq.MSets.MSetGenTree.Props.equal_spec	40
Coq.MSets.MSetGenTree.Props.mindepth_maxdepth	40
Coq.MSets.MSetGenTree.Props.maxdepth_cardinal	40
Coq.MSets.MSetGenTree.Props.mindepth_cardinal	40
Coq.MSets.MSetGenTree.Props.maxdepth_log_cardinal	40
Coq.MSets.MSetGenTree.Props.mindepth_log_cardinal	40
Coq.MSets.MSetInterface.WRaw2SetsOn.In_compat	40
Coq.MSets.MSetInterface.WRaw2SetsOn.eq_equiv	40
Coq.MSets.MSetInterface.WRaw2SetsOn.eq_dec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.mem_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.equal_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.subset_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.empty_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.is_empty_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.add_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.remove_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.singleton_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.union_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.inter_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.diff_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.fold_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.cardinal_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.filter_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.for_all_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.exists_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.partition_spec1	40
Coq.MSets.MSetInterface.WRaw2SetsOn.partition_spec2	40
Coq.MSets.MSetInterface.WRaw2SetsOn.elements_spec1	40
Coq.MSets.MSetInterface.WRaw2SetsOn.elements_spec2w	40
Coq.MSets.MSetInterface.WRaw2SetsOn.choose_spec1	40
Coq.MSets.MSetInterface.WRaw2SetsOn.choose_spec2	40
Coq.MSets.MSetInterface.Raw2SetsOn.lt_strorder	40
Coq.MSets.MSetInterface.Raw2SetsOn.lt_compat	40
Coq.MSets.MSetInterface.Raw2SetsOn.compare_spec	40
Coq.MSets.MSetInterface.Raw2SetsOn.elements_spec2	40
Coq.MSets.MSetInterface.Raw2SetsOn.min_elt_spec1	40
Coq.MSets.MSetInterface.Raw2SetsOn.min_elt_spec2	40
Coq.MSets.MSetInterface.Raw2SetsOn.min_elt_spec3	40
Coq.MSets.MSetInterface.Raw2SetsOn.max_elt_spec1	40
Coq.MSets.MSetInterface.Raw2SetsOn.max_elt_spec2	40
Coq.MSets.MSetInterface.Raw2SetsOn.max_elt_spec3	40
Coq.MSets.MSetInterface.Raw2SetsOn.choose_spec3	40
Coq.MSets.MSetInterface.MakeSetOrdering.eq_equiv	40
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_0	40
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_1	40
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_2	40
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_3	40
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_4	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_compat	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_strorder	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_empty_r	40	59.18	search with cache (only 1: intros z Hz; only 1: firstorder).	33.2331819534	32083
Coq.MSets.MSetInterface.MakeSetOrdering.lt_empty_l	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_add_lt	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_add_eq	40
Coq.MSets.MSetInterface.MakeListOrdering.lt_strorder	40
Coq.MSets.MSetInterface.MakeListOrdering.lt_compat'	40
Coq.MSets.MSetInterface.MakeListOrdering.eq_cons	40
Coq.MSets.MSetInterface.MakeListOrdering.cons_CompSpec	40
Coq.MSets.MSetWeakList.MakeRaw.In_compat	40
Coq.MSets.MSetWeakList.MakeRaw.mem_spec	40
Coq.MSets.MSetWeakList.MakeRaw.isok_iff	40
Coq.MSets.MSetWeakList.MakeRaw.isok_Ok	40	0.8.0.0.1.0.1.0.0.0.0.15	search with cache (only 1: induction l; only 1: intuition; only 1: simpl; only 1: rewrite andb_true_iff; only 1: rewrite negb_true_iff; only 1: intros H; only 1: destruct H; only 1: constructors; only 1: rewrite <- mem_spec; only 1: congruence; only 1: auto; only 1: auto).	29.0807259083	10552
Coq.MSets.MSetWeakList.MakeRaw.add_spec	40
Coq.MSets.MSetWeakList.MakeRaw.add_ok	40
Coq.MSets.MSetWeakList.MakeRaw.remove_spec	40
Coq.MSets.MSetWeakList.MakeRaw.remove_ok	40
Coq.MSets.MSetWeakList.MakeRaw.singleton_ok	40	6	search with cache (only 1: intuition).	0.125071048737	12
Coq.MSets.MSetWeakList.MakeRaw.singleton_spec	40	3.1.0.0.0	search with cache (only 1: unfold singleton; only 1: intros; only 1: intuition; only 1: inv; only 1: intuition).	0.217624902725	9
Coq.MSets.MSetWeakList.MakeRaw.empty_ok	40	10	search with cache (only 1: intuition).	0.0939919948578	21
Coq.MSets.MSetWeakList.MakeRaw.empty_spec	40	0.1.7.0	search with cache (only 1: unfold empty; only 1: intro; only 1: intuition; only 1: inv).	0.418725967407	56
Coq.MSets.MSetWeakList.MakeRaw.is_empty_spec	40
Coq.MSets.MSetWeakList.MakeRaw.elements_spec1	40	3.1.0.2	search with cache (only 1: induction s; only 1: intros; only 1: intuition; only 1: intuition).	0.329426050186	29
Coq.MSets.MSetWeakList.MakeRaw.elements_spec2w	40	5.1.0.0	search with cache (only 1: unfold elements; only 1: induction s; only 1: intuition; only 1: auto).	0.447478055954	42
Coq.MSets.MSetWeakList.MakeRaw.fold_spec	40	4.1.0.0	search with cache (only 1: unfold elements; only 1: induction s; only 1: auto; only 1: auto).	0.216539144516	28
Coq.MSets.MSetWeakList.MakeRaw.union_ok	40
Coq.MSets.MSetWeakList.MakeRaw.union_spec	40
Coq.MSets.MSetWeakList.MakeRaw.inter_ok	40
Coq.MSets.MSetWeakList.MakeRaw.inter_spec	40
Coq.MSets.MSetWeakList.MakeRaw.diff_ok	40
Coq.MSets.MSetWeakList.MakeRaw.diff_spec	40
Coq.MSets.MSetWeakList.MakeRaw.subset_spec	40
Coq.MSets.MSetWeakList.MakeRaw.equal_spec	40
Coq.MSets.MSetWeakList.MakeRaw.choose_spec1	40
Coq.MSets.MSetWeakList.MakeRaw.choose_spec2	40
Coq.MSets.MSetWeakList.MakeRaw.cardinal_spec	40	2.2.0	search with cache (only 1: unfold elements; only 1: intros; only 1: intuition).	0.159404039383	7
Coq.MSets.MSetWeakList.MakeRaw.filter_spec'	40
Coq.MSets.MSetWeakList.MakeRaw.filter_spec	40
Coq.MSets.MSetWeakList.MakeRaw.filter_ok	40
Coq.MSets.MSetWeakList.MakeRaw.for_all_spec	40
Coq.MSets.MSetWeakList.MakeRaw.exists_spec	40
Coq.MSets.MSetWeakList.MakeRaw.partition_spec1	40
Coq.MSets.MSetWeakList.MakeRaw.partition_spec2	40
Coq.MSets.MSetWeakList.MakeRaw.partition_ok1'	40
Coq.MSets.MSetWeakList.MakeRaw.partition_ok2'	40
Coq.MSets.MSetWeakList.MakeRaw.partition_ok1	40
Coq.MSets.MSetWeakList.MakeRaw.partition_ok2	40
Coq.NArith.NArith.test	40
Coq.NArith.Ndec.Peqb_complete	40
Coq.NArith.Ndec.Peqb_Pcompare	40
Coq.NArith.Ndec.Pcompare_Peqb	40	0	search with cache (only 1: now rewrite Pos.compare_eq_iff, <- Pos.eqb_eq).	0.0511200428009	1
Coq.NArith.Ndec.Neqb_Ncompare	40
Coq.NArith.Ndec.Ncompare_Neqb	40	0	search with cache (only 1: now rewrite N.compare_eq_iff, <- N.eqb_eq).	0.0342700481415	1
Coq.NArith.Ndec.Neqb_complete	40	1	search with cache (only 1: now rewrite N.eqb_eq, <- N.compare_eq_iff).	0.0347290039062	2
Coq.NArith.Ndec.Nxor_eq_true	40
Coq.NArith.Ndec.Nxor_eq_false	40
Coq.NArith.Ndec.Nodd_not_double	40
Coq.NArith.Ndec.Nnot_div2_not_double	40
Coq.NArith.Ndec.Neven_not_double_plus_one	40
Coq.NArith.Ndec.Nnot_div2_not_double_plus_one	40
Coq.NArith.Ndec.Nbit0_neq	40
Coq.NArith.Ndec.Ndiv2_eq	40	8.1	search with cache (only 1: eqb2eq; only 1: now intros <-).	0.916870832443	203
Coq.NArith.Ndec.Ndiv2_neq	40	0.1.1.0	search with cache (only 1: intros; only 1: eqb2eq; only 1: contradict H; only 1: now subst).	0.11496591568	6
Coq.NArith.Ndec.Ndiv2_bit_eq	40
Coq.NArith.Ndec.Ndiv2_bit_neq	40	0.2.1.1	search with cache (only 1: eqb2eq; only 1: intros H H'; only 1: contradict H; only 1: now rewrite (N.div2_odd a), (N.div2_odd a'), H, H').	0.303297042847	40
Coq.NArith.Ndec.Nneq_elim	40
Coq.NArith.Ndec.Ndouble_or_double_plus_un	40
Coq.NArith.Ndec.Nleb_alt	40
Coq.NArith.Ndec.Nleb_Nle	40
Coq.NArith.Ndec.Nleb_refl	40	0	search with cache (only 1: now rewrite Nleb_alt, N.leb_le).	0.0283970832825	1
Coq.NArith.Ndec.Nleb_antisym	40
Coq.NArith.Ndec.Nleb_trans	40	6.8.12.0	search with cache (only 1: rewrite !Nleb_Nle; only 1: intros; only 1: rewrite H; only 1: auto).	26.2626979351	11121
Coq.NArith.Ndec.Nleb_ltb_trans	40
Coq.NArith.Ndec.Nltb_leb_trans	40
Coq.NArith.Ndec.Nltb_trans	40
Coq.NArith.Ndec.Nltb_leb_weak	40
Coq.NArith.Ndec.Nleb_double_mono	40
Coq.NArith.Ndec.Nleb_double_plus_one_mono	40
Coq.NArith.Ndec.Nleb_double_mono_conv	40
Coq.NArith.Ndec.Nleb_double_plus_one_mono_conv	40	3.2.0.3.1.0	search with cache (only 1: unfold Nleb; only 1: rewrite !N2Nat.inj_succ_double; only 1: intro; only 1: apply leb_correct; only 1: apply (mult_S_le_reg_l 1); only 1: now apply leb_complete).	1.82616400719	673
Coq.NArith.Ndec.Nltb_double_mono	40
Coq.NArith.Ndec.Nltb_double_plus_one_mono	40
Coq.NArith.Ndec.Nltb_double_mono_conv	40
Coq.NArith.Ndec.Nltb_double_plus_one_mono_conv	40
Coq.NArith.Ndec.Nltb_Ncompare	40
Coq.NArith.Ndec.Ncompare_Gt_Nltb	40	0	search with cache (only 1: now rewrite N.compare_nle_iff, <- Nleb_Nle, not_true_iff_false).	0.0399968624115	1
Coq.NArith.Ndec.Ncompare_Lt_Nltb	40
Coq.NArith.Ndec.Nmin_le_1	40
Coq.NArith.Ndec.Nmin_le_2	40
Coq.NArith.Ndec.Nmin_le_3	40
Coq.NArith.Ndec.Nmin_le_4	40
Coq.NArith.Ndec.Nmin_le_5	40
Coq.NArith.Ndec.Nmin_lt_3	40
Coq.NArith.Ndec.Nmin_lt_4	40	0.0.1	search with cache (only 1: rewrite <- !not_true_iff_false, !Nleb_Nle; only 1: rewrite N.min_le_iff; only 1: auto).	0.0661611557007	4
Coq.NArith.Ndigits.Ptestbit_Pbit	40
Coq.NArith.Ndigits.Ntestbit_Nbit	40
Coq.NArith.Ndigits.Pbit_Ptestbit	40
Coq.NArith.Ndigits.Nbit_Ntestbit	40	0.0.13.0.0	search with cache (only 1: destruct a; only 1: trivial; only 1: simpl; only 1: intros; only 1: now rewrite <- Ptestbit_Pbit, N2Nat.id).	1.50945305824	781
Coq.NArith.Ndigits.Nshiftr_nat_S	40	2	search with cache (only 1: now subst).	0.149029016495	3
Coq.NArith.Ndigits.Nshiftl_nat_S	40	0	search with cache (only 1: reflexivity).	0.0967299938202	1
Coq.NArith.Ndigits.Nshiftr_nat_equiv	40
Coq.NArith.Ndigits.Nshiftr_equiv_nat	40
Coq.NArith.Ndigits.Nshiftl_nat_equiv	40
Coq.NArith.Ndigits.Nshiftl_equiv_nat	40
Coq.NArith.Ndigits.Nshiftr_nat_spec	40
Coq.NArith.Ndigits.Nshiftl_nat_spec_high	40
Coq.NArith.Ndigits.Nshiftl_nat_spec_low	40
Coq.NArith.Ndigits.Pshiftl_nat_0	40	0	search with cache (only 1: trivial).	0.0577120780945	1
Coq.NArith.Ndigits.Pshiftl_nat_S	40	0	search with cache (only 1: reflexivity).	0.0583338737488	1
Coq.NArith.Ndigits.Pshiftl_nat_N	40	2.10.1.0.0.10	search with cache (only 1: induction n; only 1: unfold N.shiftl_nat; only 1: trivial; only 1: simpl; only 1: rewrite <- IHn; only 1: trivial).	17.6893470287	8391
Coq.NArith.Ndigits.Pshiftl_nat_plus	40	1.0.4.1.0.3.1.6	search with cache (only 1: intros s2 n; only 1: unfold Pos.shiftl_nat, N.shiftl_nat; only 1: induction n; only 1: simpl; only 1: trivial; only 1: intros m; only 1: simpl; only 1: now rewrite <- IHn).	31.4794278145	10810
Coq.NArith.Ndigits.Pxor_semantics	40
Coq.NArith.Ndigits.Nxor_semantics	40
Coq.NArith.Ndigits.Por_semantics	40
Coq.NArith.Ndigits.Nor_semantics	40
Coq.NArith.Ndigits.Pand_semantics	40
Coq.NArith.Ndigits.Nand_semantics	40
Coq.NArith.Ndigits.Pdiff_semantics	40
Coq.NArith.Ndigits.Ndiff_semantics	40
Coq.NArith.Ndigits.Pbit_faithful_0	40
Coq.NArith.Ndigits.Pbit_faithful	40
Coq.NArith.Ndigits.Nbit_faithful	40
Coq.NArith.Ndigits.Nbit_faithful_iff	40
Coq.NArith.Ndigits.Nbit0_correct	40	0.0.2.2.11.3.3.0.5	search with cache (only 1: induction n; only 1: trivial; only 1: simpl; only 1: rewrite <- !Ptestbit_Pbit; only 1: induction p as [p IH| p IH| ]; only 1: trivial; only 1: trivial; only 1: simpl; only 1: trivial).	7.98674297333	5592
Coq.NArith.Ndigits.Ndouble_bit0	40	0.0.0	search with cache (only 1: destruct n; only 1: trivial; only 1: trivial).	0.118825912476	3
Coq.NArith.Ndigits.Ndouble_plus_one_bit0	40	0.0.0	search with cache (only 1: destruct n; only 1: trivial; only 1: trivial).	0.153577804565	3
Coq.NArith.Ndigits.Ndiv2_double	40
Coq.NArith.Ndigits.Ndiv2_double_plus_one	40
Coq.NArith.Ndigits.Ndiv2_correct	40	1.0.0.0.0.5.3.16	search with cache (only 1: destruct a; only 1: trivial; only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: trivial).	3.67924809456	1941
Coq.NArith.Ndigits.Nxor_bit0	40
Coq.NArith.Ndigits.Nxor_div2	40
Coq.NArith.Ndigits.Nneg_bit0	40
Coq.NArith.Ndigits.Nneg_bit0_1	40
Coq.NArith.Ndigits.Nneg_bit0_2	40	0.0.0.0	search with cache (only 1: intros; only 1: apply Nneg_bit0; only 1: rewrite H; only 1: reflexivity).	0.0970480442047	4
Coq.NArith.Ndigits.Nsame_bit0	40
Coq.NArith.Ndigits.Nbit0_less	40
Coq.NArith.Ndigits.Nbit0_gt	40	0.0.1.0.0.0.0.0.2.0.0.0.0.0.0.3.0	search with cache (only 1: intros; only 1: destruct (N.discr (N.lxor a a')) as [(p, H2)| H1]; only 1: unfold Nless; only 1: rewrite H2; only 1: destruct p; only 1: simpl; only 1: rewrite H, H0; only 1: reflexivity; only 1: assert (H1 : N.odd (N.lxor a a') = false) by (rewrite H2; reflexivity); only 1: rewrite (Nxor_bit0 a a'), H, H0 in H1; only 1: discriminate H1; only 1: simpl; only 1: rewrite H, H0; only 1: reflexivity; only 1: assert (H2 : N.odd (N.lxor a a') = false) by (rewrite H1; reflexivity); only 1: rewrite (Nxor_bit0 a a'), H, H0 in H2; only 1: discriminate H2).	10.7540028095	3841
Coq.NArith.Ndigits.Nless_not_refl	40
Coq.NArith.Ndigits.Nless_def_1	40
Coq.NArith.Ndigits.Nless_def_2	40	0.0.0.0.0.0.0.0.0.0.2	search with cache (only 1: destruct a; only 1: destruct a'; only 1: trivial; only 1: trivial; only 1: destruct a'; only 1: trivial; only 1: unfold Nless; only 1: simpl; only 1: destruct (Pos.lxor p p0); only 1: reflexivity; only 1: trivial).	2.8809428215	683
Coq.NArith.Ndigits.Nless_def_3	40	0.0.0.0.0.0.0.0.0.0.1	search with cache (only 1: destruct a; only 1: destruct a'; only 1: trivial; only 1: trivial; only 1: destruct a'; only 1: trivial; only 1: unfold Nless; only 1: simpl; only 1: destruct (Pos.lxor p p0); only 1: reflexivity; only 1: trivial).	2.52312397957	401
Coq.NArith.Ndigits.Nless_def_4	40	0.0.0.0.0.0.0.0.0.1.3	search with cache (only 1: destruct a; only 1: destruct a'; only 1: trivial; only 1: trivial; only 1: destruct a'; only 1: trivial; only 1: unfold Nless; only 1: simpl; only 1: destruct (Pos.lxor p p0); only 1: reflexivity; only 1: trivial).	8.00330996513	1500
Coq.NArith.Ndigits.Nless_z	40
Coq.NArith.Ndigits.N0_less_1	40
Coq.NArith.Ndigits.N0_less_2	40
Coq.NArith.Ndigits.Nless_trans	40
Coq.NArith.Ndigits.Nless_total	40
Coq.NArith.Ndigits.Bv2N_N2Bv	40
Coq.NArith.Ndigits.Bv2N_Nsize	40
Coq.NArith.Ndigits.Bv2N_Nsize_1	40
Coq.NArith.Ndigits.Bv2N_upper_bound	40
Coq.NArith.Ndigits.ByteV2N_upper_bound	40
Coq.NArith.Ndigits.N2Bv_N2Bv_gen	40	3.0.1.0.0.1.0.0.0.3.7	search with cache (only 1: destruct a; only 1: intuition; only 1: induction p; only 1: simpl in *; only 1: rewrite IHp; only 1: auto; only 1: simpl in *; only 1: rewrite IHp; only 1: auto; only 1: simpl in *; only 1: auto).	28.534640789	5993
Coq.NArith.Ndigits.N2Bv_N2Bv_gen_above	40
Coq.NArith.Ndigits.N2Bv_Bv2N	40
Coq.NArith.Ndigits.Nbit0_Blow	40	0.0.1.0.0.0.1.0.0.0.0.0.0.5.0.0.0	search with cache (only 1: apply Vector.rectS; only 1: intros; only 1: simpl; only 1: destruct a; only 1: reflexivity; only 1: trivial; only 1: intros; only 1: simpl; only 1: destruct a, (Bv2N v); only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).	17.402037859	6129
Coq.NArith.Ndigits.Bnth_Nbit	40
Coq.NArith.Ndigits.Nbit_Nsize	40
Coq.NArith.Ndigits.Nbit_Bth	40
Coq.NArith.Ndigits.Nxor_BVxor	40
Coq.NArith.Ndigits.Nand_BVand	40
Coq.NArith.Ndigits.N2Bv_sized_Nsize	40	1.0.0.3.0.0.3.0.2.0.0.0.2	search with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: induction p; only 1: simpl; only 1: unfold Bcons; only 1: congruence; only 1: simpl; only 1: unfold Bcons; only 1: congruence; only 1: simpl; only 1: auto).	30.5407819748	7889
Coq.NArith.Ndigits.N2Bv_sized_Bv2N	40
Coq.NArith.Ndigits.N2Bv_N2Bv_sized_above	40	1.0.2.1.0.2.1.0.6.2.0.0	search with cache (only 1: destruct a; only 1: simpl; only 1: f_equal; only 1: induction p; only 1: simpl; only 1: f_equal; only 1: auto; only 1: simpl; only 1: f_equal; only 1: auto; only 1: simpl; only 1: f_equal).	24.3611330986	11286
Coq.NArith.Ndist.Nplength_infty	40	2.3.0.1.4	search with cache (only 1: induction a as [| p]; only 1: trivial; only 1: intro H; only 1: exfalso; only 1: discriminate || simpl).	1.91076493263	561
Coq.NArith.Ndist.Nplength_zeros	40
Coq.NArith.Ndist.Nplength_one	40
Coq.NArith.Ndist.Nplength_first_one	40
Coq.NArith.Ndist.ni_min_idemp	40
Coq.NArith.Ndist.ni_min_comm	40
Coq.NArith.Ndist.ni_min_assoc	40
Coq.NArith.Ndist.ni_min_O_l	40	1.0.12	search with cache (only 1: simple induction d; only 1: trivial; only 1: trivial).	0.802165985107	241
Coq.NArith.Ndist.ni_min_O_r	40	0.0.4.3.0.0	search with cache (only 1: simple induction d; only 1: trivial; only 1: unfold ni_min; only 1: simple induction n; only 1: trivial; only 1: trivial).	0.566508054733	197
Coq.NArith.Ndist.ni_min_inf_l	40	0	search with cache (only 1: trivial).	0.0406200885773	1
Coq.NArith.Ndist.ni_min_inf_r	40	0.0.2	search with cache (only 1: simple induction d; only 1: trivial; only 1: trivial).	0.0579779148102	5
Coq.NArith.Ndist.ni_le_refl	40
Coq.NArith.Ndist.ni_le_antisym	40
Coq.NArith.Ndist.ni_le_trans	40
Coq.NArith.Ndist.ni_le_min_1	40
Coq.NArith.Ndist.ni_le_min_2	40	2.1.3.1.0	search with cache (only 1: unfold ni_le; only 1: intros; only 1: rewrite ni_min_assoc; only 1: rewrite ni_min_idemp; only 1: trivial).	0.966089010239	262
Coq.NArith.Ndist.ni_min_case	40
Coq.NArith.Ndist.ni_le_total	40
Coq.NArith.Ndist.ni_le_min_induc	40
Coq.NArith.Ndist.le_ni_le	40
Coq.NArith.Ndist.ni_le_le	40
Coq.NArith.Ndist.Nplength_lb	40
Coq.NArith.Ndist.Nplength_ub	40
Coq.NArith.Ndist.Npdist_eq_1	40
Coq.NArith.Ndist.Npdist_eq_2	40
Coq.NArith.Ndist.Npdist_comm	40
Coq.NArith.Ndist.Nplength_ultra_1	40
Coq.NArith.Ndist.Nplength_ultra	40
Coq.NArith.Ndist.Npdist_ultra	40
Coq.NArith.Ndiv_def.Pdiv_eucl_remainder	40
Coq.NArith.Nnat.N2Nat.id	40
Coq.NArith.Nnat.N2Nat.inj	40
Coq.NArith.Nnat.N2Nat.inj_iff	40	2.0.0.1.0.4	search with cache (only 1: split; only 1: intro H; only 1: rewrite <- (id a), <- (id a'); only 1: now f_equal; only 1: intro H; only 1: now f_equal).	2.69842290878	334
Coq.NArith.Nnat.N2Nat.inj_double	40	0.1.1.0.5.1.0.17.3	search with cache (only 1: simpl; only 1: destruct a as [| p]; only 1: now rewrite Nat.add_0_r; only 1: simpl; only 1: unfold Pos.to_nat; only 1: simpl; only 1: rewrite Pmult_nat_mult, Nat.mul_comm; only 1: simpl; only 1: f_equal).	3.57632708549	1979
Coq.NArith.Nnat.N2Nat.inj_succ_double	40	0.4.0.6.0.1.0.0	search with cache (only 1: destruct a; only 1: simpl N.to_nat; only 1: trivial; only 1: simpl N.to_nat; only 1: unfold Pos.to_nat; only 1: simpl; only 1: rewrite Pmult_nat_mult, Nat.mul_comm; only 1: f_equal).	4.50010108948	1506
Coq.NArith.Nnat.N2Nat.inj_succ	40	2.0.0.0.0.0	search with cache (only 1: destruct a; only 1: simpl N.to_nat; only 1: trivial; only 1: simpl N.to_nat; only 1: unfold Pos.to_nat; only 1: now rewrite !Pmult_nat_mult, Pos2Nat.inj_succ).	0.14467716217	8
Coq.NArith.Nnat.N2Nat.inj_add	40
Coq.NArith.Nnat.N2Nat.inj_mul	40
Coq.NArith.Nnat.N2Nat.inj_sub	40
Coq.NArith.Nnat.N2Nat.inj_pred	40
Coq.NArith.Nnat.N2Nat.inj_div2	40
Coq.NArith.Nnat.N2Nat.inj_compare	40
Coq.NArith.Nnat.N2Nat.inj_max	40
Coq.NArith.Nnat.N2Nat.inj_min	40
Coq.NArith.Nnat.N2Nat.inj_iter	40
Coq.NArith.Nnat.Nat2N.id	40	1.0.3.3.8	search with cache (only 1: unfold N.div2, N.to_nat; only 1: destruct n; only 1: trivial; only 1: simpl; only 1: apply SuccNat2Pos.id_succ).	0.904412031174	256
Coq.NArith.Nnat.Nat2N.inj	40
Coq.NArith.Nnat.Nat2N.inj_iff	40	2.0.0.1.0.7	search with cache (only 1: split; only 1: intros H; only 1: rewrite <- (id n), <- (id n'); only 1: now f_equal; only 1: intros H; only 1: now f_equal).	3.56904411316	743
Coq.NArith.Nnat.Nat2N.inj_double	40
Coq.NArith.Nnat.Nat2N.inj_succ_double	40	0	search with cache (only 1: nat2N).	0.0677700042725	1
Coq.NArith.Nnat.Nat2N.inj_succ	40	0	search with cache (only 1: nat2N).	0.0621590614319	1
Coq.NArith.Nnat.Nat2N.inj_pred	40	5	search with cache (only 1: nat2N).	0.0792629718781	6
Coq.NArith.Nnat.Nat2N.inj_add	40	7	search with cache (only 1: nat2N).	0.186105012894	11
Coq.NArith.Nnat.Nat2N.inj_sub	40	5	search with cache (only 1: nat2N).	0.174135923386	6
Coq.NArith.Nnat.Nat2N.inj_mul	40	0	search with cache (only 1: nat2N).	0.204952001572	1
Coq.NArith.Nnat.Nat2N.inj_div2	40	5	search with cache (only 1: nat2N).	0.0933940410614	6
Coq.NArith.Nnat.Nat2N.inj_compare	40
Coq.NArith.Nnat.Nat2N.inj_min	40	5	search with cache (only 1: nat2N).	0.0390138626099	6
Coq.NArith.Nnat.Nat2N.inj_max	40	5	search with cache (only 1: nat2N).	0.0394070148468	6
Coq.NArith.Nnat.Nat2N.inj_iter	40	0.4.16.3.0.13.0.10	search with cache (only 1: induction n; only 1: trivial; only 1: induction n; only 1: trivial; only 1: simpl; only 1: rewrite Pos.iter_succ; only 1: f_equal; only 1: trivial).	20.9697489738	16106
Coq.NArith.BinNat.N.eq_dec	40
Coq.NArith.BinNat.N.discr	40
Coq.NArith.BinNat.N.peano_rect_base	40	2	search with cache (only 1: auto).	0.0369319915771	3
Coq.NArith.BinNat.N.peano_rect_succ	40
Coq.NArith.BinNat.N.peano_rec_base	40	0	search with cache (only 1: reflexivity).	0.0604538917542	1
Coq.NArith.BinNat.N.peano_rec_succ	40	0.1.0.1.1	search with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite Pos.peano_rect_succ).	0.124009132385	8
Coq.NArith.BinNat.N.bi_induction	40
Coq.NArith.BinNat.N.recursion_wd	40
Coq.NArith.BinNat.N.recursion_0	40	0	search with cache (only 1: trivial).	0.0465979576111	1
Coq.NArith.BinNat.N.recursion_succ	40
Coq.NArith.BinNat.N.one_succ	40	0	search with cache (only 1: trivial).	0.0372750759125	1
Coq.NArith.BinNat.N.two_succ	40	0	search with cache (only 1: reflexivity).	0.0470509529114	1
Coq.NArith.BinNat.N.pred_0	40	2	search with cache (only 1: auto).	0.0426330566406	3
Coq.NArith.BinNat.N.pos_pred_spec	40	0	search with cache (only 1: reflexivity).	0.0475099086761	1
Coq.NArith.BinNat.N.succ_pos_spec	40	0.0.1	search with cache (only 1: destruct n; only 1: reflexivity; only 1: reflexivity).	0.0927431583405	4
Coq.NArith.BinNat.N.pos_pred_succ	40
Coq.NArith.BinNat.N.succ_pos_pred	40
Coq.NArith.BinNat.N.pred_succ	40	0.3.0.8	search with cache (only 1: destruct n; only 1: reflexivity; only 1: simpl; only 1: apply Pos.pred_N_succ).	1.0500421524	380
Coq.NArith.BinNat.N.pred_sub	40	0.0.4	search with cache (only 1: destruct n; only 1: reflexivity; only 1: now destruct p).	0.117438077927	7
Coq.NArith.BinNat.N.succ_0_discr	40	0	search with cache (only 1: now destruct n).	0.0921850204468	1
Coq.NArith.BinNat.N.add_0_l	40	1.0.0	search with cache (only 1: destruct n; only 1: trivial; only 1: auto).	0.1110060215	4
Coq.NArith.BinNat.N.add_succ_l	40
Coq.NArith.BinNat.N.sub_0_r	40	0	search with cache (only 1: now destruct n as [| [p| p| ]]).	0.0571100711823	1
Coq.NArith.BinNat.N.sub_succ_r	40
Coq.NArith.BinNat.N.mul_0_l	40	1.0.0	search with cache (only 1: destruct n; only 1: trivial; only 1: auto).	0.119050979614	4
Coq.NArith.BinNat.N.mul_succ_l	40
Coq.NArith.BinNat.N.eqb_eq	40
Coq.NArith.BinNat.N.ltb_lt	40
Coq.NArith.BinNat.N.leb_le	40
Coq.NArith.BinNat.N.compare_eq_iff	40
Coq.NArith.BinNat.N.compare_lt_iff	40	0.1.1.0.2	search with cache (only 1: unfold ltb, lt; only 1: destruct compare; only 1: easy'; only 1: easy'; only 1: easy').	2.06636810303	179
Coq.NArith.BinNat.N.compare_le_iff	40	2	search with cache (only 1: reflexivity).	1.44235920906	215
Coq.NArith.BinNat.N.compare_antisym	40
Coq.NArith.BinNat.N.min_l	40
Coq.NArith.BinNat.N.min_r	40
Coq.NArith.BinNat.N.max_l	40
Coq.NArith.BinNat.N.max_r	40	0.1.0.0.0.0	search with cache (only 1: unfold max, le; only 1: rewrite compare_antisym; only 1: case compare_spec; only 1: trivial; only 1: now destruct 2; only 1: trivial).	0.12881398201	7
Coq.NArith.BinNat.N.lt_succ_r	40
Coq.NArith.BinNat.N.double_spec	40	38	search with cache (only 1: now split).	2.0849840641	1071
Coq.NArith.BinNat.N.succ_double_spec	40
Coq.NArith.BinNat.N.double_add	40
Coq.NArith.BinNat.N.succ_double_add	40	0	search with cache (only 1: now destruct n, m).	0.147100925446	1
Coq.NArith.BinNat.N.double_mul	40	1	search with cache (only 1: now destruct n, m).	0.141947031021	2
Coq.NArith.BinNat.N.succ_double_mul	40
Coq.NArith.BinNat.N.div2_double	40	0.0.1.2	search with cache (only 1: destruct n; only 1: reflexivity; only 1: simpl; only 1: trivial).	0.154572963715	14
Coq.NArith.BinNat.N.div2_succ_double	40	0	search with cache (only 1: now destruct n).	0.0496270656586	1
Coq.NArith.BinNat.N.double_inj	40
Coq.NArith.BinNat.N.succ_double_inj	40
Coq.NArith.BinNat.N.succ_double_lt	40
Coq.NArith.BinNat.N.double_lt_mono	40	3.0.0.0.0.0.0	search with cache (only 1: destruct n as [| n], m as [| m]; only 1: easy; only 1: easy; only 1: easy; only 1: unfold lt in *; only 1: simpl in *; only 1: trivial).	0.200719118118	11
Coq.NArith.BinNat.N.double_le_mono	40	2.0	search with cache (only 1: intro H; only 1: now destruct n, m).	0.0736129283905	4
Coq.NArith.BinNat.N.succ_double_lt_mono	40	2.0.0.0.0.0.0	search with cache (only 1: destruct n as [| n], m as [| m]; only 1: easy; only 1: easy; only 1: easy; only 1: unfold lt in *; only 1: simpl in *; only 1: easy).	0.230417013168	9
Coq.NArith.BinNat.N.succ_double_le_mono	40	0.0.0.0.1.0	search with cache (only 1: intro H; only 1: destruct n as [| n], m as [| m]; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.202168941498	7
Coq.NArith.BinNat.N.compare_0_r	40	11.2.20	search with cache (only 1: intro H; only 1: eapply Private_Tac.lt_irrefl; only 1: now elim (nlt_0_r n)).	1.39802002907	858
Coq.NArith.BinNat.N.pow_0_r	40	0	search with cache (only 1: now destruct n).	0.053542137146	1
Coq.NArith.BinNat.N.pow_succ_r	40
Coq.NArith.BinNat.N.pow_neg_r	40	3.3.0.0.0.6.1	search with cache (only 1: destruct n, p; only 1: order; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy; only 1: easy).	8.76320099831	3174
Coq.NArith.BinNat.N.square_spec	40
Coq.NArith.BinNat.N.size_log2	40
Coq.NArith.BinNat.N.size_gt	40
Coq.NArith.BinNat.N.size_le	40
Coq.NArith.BinNat.N.log2_spec	40
Coq.NArith.BinNat.N.log2_nonpos	40	0.0.6.6.0.0.0	search with cache (only 1: destruct n as [| [n| n| ]]; only 1: discriminate || intros _; only 1: trivial; only 1: easy; only 1: easy; only 1: discriminate || intros _; only 1: trivial).	9.25565290451	3507
Coq.NArith.BinNat.N.even_spec	40
Coq.NArith.BinNat.N.odd_spec	40
Coq.NArith.BinNat.N.pos_div_eucl_spec	40
Coq.NArith.BinNat.N.div_eucl_spec	40
Coq.NArith.BinNat.N.div_mod'	40
Coq.NArith.BinNat.N.div_mod	40	0.0.0	search with cache (only 1: generalize (div_eucl_spec a b); only 1: unfold div, modulo; only 1: now destruct div_eucl).	0.133205890656	3
Coq.NArith.BinNat.N.pos_div_eucl_remainder	40
Coq.NArith.BinNat.N.mod_lt	40
Coq.NArith.BinNat.N.mod_bound_pos	40
Coq.NArith.BinNat.N.sqrtrem_sqrt	40
Coq.NArith.BinNat.N.sqrtrem_spec	40
Coq.NArith.BinNat.N.sqrt_spec	40
Coq.NArith.BinNat.N.sqrt_neg	40	0.0.0.0.0	search with cache (only 1: destruct n; only 1: reflexivity; only 1: unfold sqrtrem, sqrt, Pos.sqrt; only 1: destruct (Pos.sqrtrem p) as (s, r); only 1: now destruct r).	0.192711114883	5
Coq.NArith.BinNat.N.ggcd_gcd	40
Coq.NArith.BinNat.N.ggcd_correct_divisors	40
Coq.NArith.BinNat.N.gcd_divide_l	40
Coq.NArith.BinNat.N.gcd_divide_r	40
Coq.NArith.BinNat.N.gcd_greatest	40
Coq.NArith.BinNat.N.gcd_nonneg	40	4.0.0.0	search with cache (only 1: rewrite <- ggcd_gcd; only 1: destruct ggcd as (g, (aa, bb)); only 1: simpl; only 1: apply le_0_l).	0.192093133926	13
Coq.NArith.BinNat.N.testbit_even_0	40	0.2.1.47	search with cache (only 1: induction a; only 1: now split; only 1: simpl; only 1: easy).	4.03349399567	4142
Coq.NArith.BinNat.N.testbit_odd_0	40	0	search with cache (only 1: now destruct a).	0.0399661064148	1
Coq.NArith.BinNat.N.testbit_succ_r_div2	40
Coq.NArith.BinNat.N.testbit_odd_succ	40
Coq.NArith.BinNat.N.testbit_even_succ	40	0.0.0.1	search with cache (only 1: intros H; only 1: rewrite testbit_succ_r_div2 by trivial; only 1: f_equal; only 1: now destruct a).	0.17116189003	5
Coq.NArith.BinNat.N.testbit_neg_r	40	12	search with cache (only 1: now destruct n).	1.24180388451	232
Coq.NArith.BinNat.N.shiftr_succ_r	40
Coq.NArith.BinNat.N.shiftl_succ_r	40
Coq.NArith.BinNat.N.shiftr_spec	40
Coq.NArith.BinNat.N.shiftl_spec_high	40
Coq.NArith.BinNat.N.shiftl_spec_low	40
Coq.NArith.BinNat.N.div2_spec	40	0.0	search with cache (only 1: simpl; only 1: trivial).	0.0849421024323	2
Coq.NArith.BinNat.N.pos_lxor_spec	40
Coq.NArith.BinNat.N.lxor_spec	40
Coq.NArith.BinNat.N.pos_lor_spec	40
Coq.NArith.BinNat.N.lor_spec	40
Coq.NArith.BinNat.N.pos_land_spec	40
Coq.NArith.BinNat.N.land_spec	40
Coq.NArith.BinNat.N.pos_ldiff_spec	40
Coq.NArith.BinNat.N.ldiff_spec	40
Coq.NArith.BinNat.N.gt_lt_iff	40
Coq.NArith.BinNat.N.gt_lt	40	0.0	search with cache (only 1: unfold lt, gt; only 1: now rewrite compare_antisym, CompOpp_iff).	0.076229095459	2
Coq.NArith.BinNat.N.lt_gt	40	0	search with cache (only 1: apply gt_lt_iff).	0.0497679710388	1
Coq.NArith.BinNat.N.ge_le_iff	40
Coq.NArith.BinNat.N.ge_le	40	0.0	search with cache (only 1: unfold le, ge; only 1: now rewrite compare_antisym, CompOpp_iff).	0.121640205383	2
Coq.NArith.BinNat.N.le_ge	40	0	search with cache (only 1: apply ge_le_iff).	0.0459020137787	1
Coq.NArith.BinNat.N.pos_pred_shiftl_low	40
Coq.NArith.BinNat.N.pos_pred_shiftl_high	40
Coq.NArith.BinNat.N.pred_div2_up	40
Coq.Numbers.DecimalZ.of_to	40
Coq.Numbers.DecimalZ.to_of	40
Coq.Numbers.DecimalZ.to_int_inj	40
Coq.Numbers.DecimalZ.to_int_surj	40
Coq.Numbers.DecimalZ.of_int_norm	40
Coq.Numbers.DecimalZ.of_inj	40
Coq.Numbers.DecimalZ.of_iff	40
Coq.Numbers.DecimalN.Unsigned.of_to	40	6.31.2.8	search with cache (only 1: destruct n; only 1: now f_equal; only 1: simpl; only 1: now rewrite Unsigned.of_to).	6.27508497238	8466
Coq.Numbers.DecimalN.Unsigned.to_of	40	0.33	search with cache (only 1: rewrite <- Unsigned.to_of; only 1: now f_equal).	6.78921222687	4280
Coq.Numbers.DecimalN.Unsigned.to_uint_inj	40
Coq.Numbers.DecimalN.Unsigned.to_uint_surj	40
Coq.Numbers.DecimalN.Unsigned.of_uint_norm	40	20	search with cache (only 1: now induction d).	0.447495937347	345
Coq.Numbers.DecimalN.Unsigned.of_inj	40	3	search with cache (only 1: apply Unsigned.of_inj).	0.0532469749451	4
Coq.Numbers.DecimalN.Unsigned.of_iff	40
Coq.Numbers.DecimalN.Signed.of_to	40
Coq.Numbers.DecimalN.Signed.to_of	40
Coq.Numbers.DecimalN.Signed.to_int_inj	40
Coq.Numbers.DecimalN.Signed.to_int_pos_surj	40	0.0.1.4.3	search with cache (only 1: unfold N.to_int; only 1: exists (N.of_uint d); only 1: rewrite Unsigned.to_of; only 1: simpl; only 1: now f_equal).	1.60381317139	442
Coq.Numbers.DecimalN.Signed.of_int_norm	40
Coq.Numbers.DecimalN.Signed.of_inj_pos	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_eqn	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_revapp	40
Coq.Numbers.DecimalPos.Unsigned.Nadd_simpl	40	0.0.3.43.5	search with cache (only 1: simpl; only 1: induction n; only 1: trivial; only 1: simpl in *; only 1: trivial).	17.6945710182	16658
Coq.Numbers.DecimalPos.Unsigned.of_uint_acc_eqn	40
Coq.Numbers.DecimalPos.Unsigned.of_uint_acc_rev	40
Coq.Numbers.DecimalPos.Unsigned.of_uint_alt	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_rev	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_double_gen	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_double	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_succ_double	40	9	search with cache (only 1: apply of_lu_double_gen).	1.08942890167	12
Coq.Numbers.DecimalPos.Unsigned.of_to	40
Coq.Numbers.DecimalPos.Unsigned.succ_double_alt	40
Coq.Numbers.DecimalPos.Unsigned.double_succ	40
Coq.Numbers.DecimalPos.Unsigned.to_lu_succ	40
Coq.Numbers.DecimalPos.Unsigned.nat_iter_S	40	2.5.0	search with cache (only 1: induction n; only 1: intuition; only 1: intuition).	0.230082988739	19
Coq.Numbers.DecimalPos.Unsigned.nat_iter_0	40	0	search with cache (only 1: reflexivity).	0.0515089035034	1
Coq.Numbers.DecimalPos.Unsigned.to_ldec_tenfold	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_0	40
Coq.Numbers.DecimalPos.Unsigned.to_of_lu_tenfold	40
Coq.Numbers.DecimalPos.Unsigned.Nadd_alt	40
Coq.Numbers.DecimalPos.Unsigned.to_of_lu	40
Coq.Numbers.DecimalPos.Unsigned.to_of	40
Coq.Numbers.DecimalPos.Unsigned.to_uint_nonzero	40
Coq.Numbers.DecimalPos.Unsigned.to_uint_nonnil	40	0.0.0	search with cache (only 1: intro E; only 1: generalize (of_to p); only 1: now rewrite E).	0.099240064621	3
Coq.Numbers.DecimalPos.Unsigned.to_uint_inj	40
Coq.Numbers.DecimalPos.Unsigned.to_uint_pos_surj	40
Coq.Numbers.DecimalPos.Unsigned.of_uint_norm	40
Coq.Numbers.DecimalPos.Unsigned.of_inj	40
Coq.Numbers.DecimalPos.Unsigned.of_iff	40
Coq.Numbers.DecimalPos.Signed.of_to	40
Coq.Numbers.DecimalPos.Signed.to_of	40
Coq.Numbers.DecimalPos.Signed.to_int_inj	40
Coq.Numbers.DecimalPos.Signed.to_int_pos_surj	40	1.0.0.3.1.4.0	search with cache (only 1: simpl norm; only 1: destruct (Pos.of_uint d) eqn:E; only 1: rewrite <- Unsigned.to_of; only 1: now rewrite E; only 1: exists p; only 1: rewrite <- Unsigned.to_of; only 1: now rewrite E).	12.0034730434	3170
Coq.Numbers.DecimalPos.Signed.of_int_norm	40
Coq.Numbers.DecimalPos.Signed.of_inj_pos	40
Coq.Numbers.DecimalString.uint_of_char_spec	40
Coq.Numbers.DecimalString.NilEmpty.usu	40
Coq.Numbers.DecimalString.NilEmpty.sus	40
Coq.Numbers.DecimalString.NilEmpty.isi	40
Coq.Numbers.DecimalString.NilEmpty.sis	40
Coq.Numbers.DecimalString.NilZero.uint_of_string_nonnil	40
Coq.Numbers.DecimalString.NilZero.sus	40
Coq.Numbers.DecimalString.NilZero.usu	40
Coq.Numbers.DecimalString.NilZero.usu_nil	40	2.6	search with cache (only 1: simpl; only 1: auto).	0.0405509471893	10
Coq.Numbers.DecimalString.NilZero.usu_gen	40
Coq.Numbers.DecimalString.NilZero.isi	40
Coq.Numbers.DecimalString.NilZero.isi_posnil	40	5.0	search with cache (only 1: simpl; only 1: auto).	0.0570418834686	7
Coq.Numbers.DecimalString.NilZero.isi_negnil	40	0.0	search with cache (only 1: simpl; only 1: auto).	0.0423848628998	2
Coq.Numbers.DecimalString.NilZero.sis	40
Coq.Numbers.DecimalNat.Unsigned.to_lu_succ	40	0.0	search with cache (only 1: simpl; only 1: easy).	0.0776569843292	2
Coq.Numbers.DecimalNat.Unsigned.to_little_uint_succ	40
Coq.Numbers.DecimalNat.Unsigned.to_lu_equiv	40
Coq.Numbers.DecimalNat.Unsigned.to_uint_alt	40
Coq.Numbers.DecimalNat.Unsigned.of_lu_eqn	40
Coq.Numbers.DecimalNat.Unsigned.of_lu_succ	40
Coq.Numbers.DecimalNat.Unsigned.of_to_lu	40
Coq.Numbers.DecimalNat.Unsigned.of_lu_revapp	40
Coq.Numbers.DecimalNat.Unsigned.of_uint_acc_spec	40
Coq.Numbers.DecimalNat.Unsigned.of_uint_alt	40
Coq.Numbers.DecimalNat.Unsigned.of_to	40
Coq.Numbers.DecimalNat.Unsigned.to_lu_tenfold	40
Coq.Numbers.DecimalNat.Unsigned.of_lu_0	40
Coq.Numbers.DecimalNat.Unsigned.to_of_lu_tenfold	40
Coq.Numbers.DecimalNat.Unsigned.to_of_lu	40
Coq.Numbers.DecimalNat.Unsigned.to_of	40
Coq.Numbers.DecimalNat.Unsigned.to_uint_inj	40
Coq.Numbers.DecimalNat.Unsigned.to_uint_surj	40
Coq.Numbers.DecimalNat.Unsigned.of_uint_norm	40
Coq.Numbers.DecimalNat.Unsigned.of_inj	40
Coq.Numbers.DecimalNat.Unsigned.of_iff	40
Coq.Numbers.DecimalNat.Signed.of_to	40
Coq.Numbers.DecimalNat.Signed.to_of	40
Coq.Numbers.DecimalNat.Signed.to_int_inj	40
Coq.Numbers.DecimalNat.Signed.to_int_pos_surj	40	1.0.0.2.0	search with cache (only 1: simpl; only 1: unfold Nat.to_int; only 1: exists (Nat.of_uint d); only 1: rewrite Unsigned.to_of; only 1: f_equal).	0.146431922913	8
Coq.Numbers.DecimalNat.Signed.of_int_norm	40
Coq.Numbers.DecimalNat.Signed.of_inj_pos	40
Coq.Numbers.DecimalFacts.uint_dec	40
Coq.Numbers.DecimalFacts.rev_revapp	40
Coq.Numbers.DecimalFacts.rev_rev	40
Coq.Numbers.DecimalFacts.nzhead_revapp_0	40
Coq.Numbers.DecimalFacts.nzhead_revapp	40
Coq.Numbers.DecimalFacts.nzhead_rev	40
Coq.Numbers.DecimalFacts.rev_nztail_rev	40
Coq.Numbers.DecimalFacts.revapp_nil_inv	40
Coq.Numbers.DecimalFacts.rev_nil_inv	40	6.0.5.7.6	search with cache (only 1: symmetry; only 1: rewrite <- (rev_rev d); only 1: rewrite H; only 1: unfold rev; only 1: now rewrite ?IHd).	34.2302508354	16571
Coq.Numbers.DecimalFacts.rev_lnorm_rev	40
Coq.Numbers.DecimalFacts.nzhead_nonzero	40
Coq.Numbers.DecimalFacts.unorm_0	40	0.0.0.0.0.0.0.0.0.0.0.2	search with cache (only 1: induction d; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	24.8447649479	3479
Coq.Numbers.DecimalFacts.unorm_nonnil	40
Coq.Numbers.DecimalFacts.nzhead_invol	40
Coq.Numbers.DecimalFacts.unorm_invol	40
Coq.Numbers.DecimalFacts.norm_invol	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.eq_equiv	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.gt_wB_1	40	0.1.1.22	search with cache (only 1: unfold base; only 1: apply Z.pow_gt_1; only 1: easy; only 1: auto with zarith).	1.16861915588	374
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.gt_wB_0	40	2.0	search with cache (only 1: unfold base; only 1: auto with zarith).	0.141767978668	15
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.one_mod_wB	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.succ_mod_wB	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.pred_mod_wB	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.NZ_to_Z_mod	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.pred_succ	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.one_succ	40	2.0.4.12.1	search with cache (only 1: zify; only 1: pose proof gt_wB_1; only 1: rewrite Zmod_small; only 1: lia; only 1: lia).	23.034717083	3569
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.two_succ	40	2.3.1.0	search with cache (only 1: zify; only 1: rewrite <- one_mod_wB  at 2; only 1: simpl Z.add; only 1: now rewrite one_mod_wB).	0.571717977524	18
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.B0	40	7	search with cache (only 1: firstorder).	0.0715208053589	16
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.BS	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.Zbounded_induction	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.B_holds	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.bi_induction	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.add_0_l	40	0.3.1.0	search with cache (only 1: intro n; only 1: zify; only 1: apply Zmod_small; only 1: apply ZnZ.spec_to_Z).	0.38810300827	28
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.add_succ_l	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.sub_0_r	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.sub_succ_r	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.mul_0_l	40	1.4.8.18.2	search with cache (only 1: intro n; only 1: zify; only 1: apply Zmod_small; only 1: pose proof gt_wB_1; only 1: lia).	19.7938861847	11228
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.mul_succ_l	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.spec_WO	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.spec_OW	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.spec_WW	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.of_pos_correct	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.of_Z_correct	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_0_l	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_comm	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_assoc	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_1_l	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_comm	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_assoc	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_add_distr_r	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_opp_r	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_opp_diag_r	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.CyclicRing	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.eqb_eq	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.eqb_correct	40	0.0.1.0.0.1.50	search with cache (only 1: intros f w; only 1: unfold eqb, eq; only 1: rewrite ZnZ.spec_compare; only 1: case Z.compare_spec; only 1: easy || lia; only 1: easy || lia; only 1: easy || lia).	29.9256868362	25255
Coq.Numbers.Cyclic.Int31.Ring31.Int31_canonic	40
Coq.Numbers.Cyclic.Int31.Ring31.ring_theory_switch_eq	40
Coq.Numbers.Cyclic.Int31.Ring31.Int31Ring	40
Coq.Numbers.Cyclic.Int31.Ring31.eqb31_eq	40
Coq.Numbers.Cyclic.Int31.Ring31.eqb31_correct	40	0.0.0.1.0.1.0.0.0	search with cache (only 1: unfold eqb31; only 1: intros x y; only 1: rewrite spec_compare; only 1: case Z.compare_spec; only 1: intuition; only 1: apply Int31_canonic; only 1: intuition; only 1: easy; only 1: easy).	0.967581987381	89
Coq.Numbers.Cyclic.Int31.Ring31.test	40
Coq.Numbers.Cyclic.Int31.Cyclic31.iszero_eq0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.iszero_not_eq0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sneakl_shiftr	40	5.2.0	search with cache (only 1: destruct x; only 1: simpl; only 1: reflexivity).	0.11501288414	10
Coq.Numbers.Cyclic.Int31.Cyclic31.sneakr_shiftl	40	2.0	search with cache (only 1: destruct x; only 1: auto).	0.126959085464	4
Coq.Numbers.Cyclic.Int31.Cyclic31.twice_zero	40
Coq.Numbers.Cyclic.Int31.Cyclic31.twice_or_twice_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_S	40	4.0.1.0	search with cache (only 1: intros; only 1: destruct x; only 1: simpl in *; only 1: auto).	0.1404941082	9
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_S_tail	40
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_n_0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_size	40	5.4	search with cache (only 1: destruct x; only 1: auto).	2.23046016693	35
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_above_size	40
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftl_S	40	4.0.0.0	search with cache (only 1: intros n; only 1: destruct x; only 1: simpl; only 1: auto).	0.176172018051	8
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftl_S_tail	40	2.5.2.0.2.2	search with cache (only 1: intros n; only 1: elim n; only 1: reflexivity; only 1: simpl; only 1: intros; only 1: now f_equal).	15.4501259327	3531
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftl_n_0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftl_size	40	5.5	search with cache (only 1: destruct x; only 1: auto).	6.514950037	75
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftl_above_size	40
Coq.Numbers.Cyclic.Int31.Cyclic31.firstr_firstl	40	2.0.1.0	search with cache (only 1: intros; only 1: destruct x; only 1: simpl in *; only 1: auto).	0.127243995667	7
Coq.Numbers.Cyclic.Int31.Cyclic31.firstl_firstr	40	1.0.0	search with cache (only 1: destruct x; only 1: simpl; only 1: auto).	0.210708141327	4
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_predsize_0_firstl	40	0.9.4.0.0	search with cache (only 1: destruct x; only 1: simpl; only 1: intros; only 1: injection H; only 1: auto).	24.9158189297	1058
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_0_propagates	40
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_0_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.int31_ind_sneakl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.int31_ind_twice	40
Coq.Numbers.Cyclic.Int31.Cyclic31.recr_aux_eqn	40	5.6.1.0.1	search with cache (only 1: destruct x; only 1: simpl; only 1: intros; only 1: rewrite H; only 1: auto).	12.4060089588	3697
Coq.Numbers.Cyclic.Int31.Cyclic31.recr_aux_converges	40
Coq.Numbers.Cyclic.Int31.Cyclic31.recr_eqn	40	5.6.3.1.9.0	search with cache (only 1: intros; only 1: destruct x; only 1: simpl in *; only 1: compute; only 1: rewrite H; only 1: auto).	18.8197748661	4308
Coq.Numbers.Cyclic.Int31.Cyclic31.recrbis_aux_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.recrbis_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.incrbis_aux_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.incr_eqn1	40
Coq.Numbers.Cyclic.Int31.Cyclic31.incr_eqn2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.incr_twice	40
Coq.Numbers.Cyclic.Int31.Cyclic31.incr_twice_plus_one_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phibis_aux_equiv	40	8.3	search with cache (only 1: apply recrbis_aux_equiv; only 1: auto).	1.10716295242	110
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_eqn1	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_eqn2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_twice_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_twice_plus_one_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phibis_aux_pos	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phibis_aux_bounded	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_nonneg	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_bounded	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phibis_aux_lowerbound	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_lowerbound	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_zero	40	2.2.2	search with cache (only 1: split; only 1: auto with zarith; only 1: auto with zarith).	0.993808031082	60
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_size	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_le	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_firstr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_twice	40
Coq.Numbers.Cyclic.Int31.Cyclic31.i2l_length	40	14	search with cache (only 1: auto with arith).	0.526417970657	90
Coq.Numbers.Cyclic.Int31.Cyclic31.l2i_i2l	40	4.3.0	search with cache (only 1: intros; only 1: destruct x; only 1: auto).	0.162847995758	14
Coq.Numbers.Cyclic.Int31.Cyclic31.i2l_sneakr	40	1.0.1	search with cache (only 1: destruct x; only 1: compute; only 1: auto).	2.42305612564	32
Coq.Numbers.Cyclic.Int31.Cyclic31.i2l_sneakl	40	0.0.0	search with cache (only 1: destruct x; only 1: compute; only 1: auto).	0.211655855179	3
Coq.Numbers.Cyclic.Int31.Cyclic31.i2l_l2i	40
Coq.Numbers.Cyclic.Int31.Cyclic31.i2l_nshiftl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_i2l	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_twice_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_shiftr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_incrbis	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_incr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.incr_twice_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.incr_firstr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.incr_inv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_inv_double_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_inv_double	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_inv_incr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_inv_phi_aux	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_inv_phi	40
Coq.Numbers.Cyclic.Int31.Cyclic31.p2ibis_bounded	40
Coq.Numbers.Cyclic.Int31.Cyclic31.p2ibis_spec	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_inv_positive_p2ibis	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_phi_inv_positive	40
Coq.Numbers.Cyclic.Int31.Cyclic31.double_twice_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.double_twice_plus_one_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.p2i_p2ibis	40
Coq.Numbers.Cyclic.Int31.Cyclic31.positive_to_int31_phi_inv_positive	40
Coq.Numbers.Cyclic.Int31.Cyclic31.positive_to_int31_spec	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_twice	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_twice_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_incr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_phi_inv_negative	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_phi_inv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.wB_pos	40	0	search with cache (only 1: auto with zarith).	0.141716003418	1
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_zdigits	40	0	search with cache (only 1: auto).	0.0273649692535	1
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_more_than_1_digit	40	0	search with cache (only 1: reflexivity).	0.043065071106	1
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_0	40	0	search with cache (only 1: auto).	0.0259709358215	1
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_1	40	0	search with cache (only 1: reflexivity).	0.0430800914764	1
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_m1	40	1	search with cache (only 1: auto with zarith).	0.0284910202026	2
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_compare	40	1	search with cache (only 1: auto).	0.0259511470795	2
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_add_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_succ_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_add_carry_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_add	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_add_carry	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_succ	40	1.1	search with cache (only 1: intros; only 1: apply phi_phi_inv).	0.258328914642	53
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_sub_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_sub_carry_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_sub	40	5.3	search with cache (only 1: intros; only 1: apply phi_phi_inv).	0.354635000229	48
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_sub_carry	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_opp_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_opp	40	1.1	search with cache (only 1: intros; only 1: apply phi_phi_inv).	0.529438972473	41
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_opp_carry	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_pred_c	40	0.0	search with cache (only 1: intros; only 1: apply spec_sub_c).	0.0575838088989	2
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_pred	40	1.1	search with cache (only 1: intros; only 1: apply phi_phi_inv).	0.558633089066	75
Coq.Numbers.Cyclic.Int31.Cyclic31.phi2_phi_inv2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_mul_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_mul	40	1.5	search with cache (only 1: intros; only 1: apply phi_phi_inv).	0.0599250793457	8
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_square_c	40	1.7.0.0.0.0	search with cache (only 1: unfold mul31c; only 1: intros; only 1: rewrite phi2_phi_inv2; only 1: apply Zmod_small; only 1: generalize (phi_bounded x); only 1: nia).	17.435076952	1235
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_div21	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_div	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_mod	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_gcd	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_gcd	40
Coq.Numbers.Cyclic.Int31.Cyclic31.iter_int31_iter_nat	40
Coq.Numbers.Cyclic.Int31.Cyclic31.addmuldiv31_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_add_mul_div	40
Coq.Numbers.Cyclic.Int31.Cyclic31.shift_unshift_mod_2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_pos_mod	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_head00	40
Coq.Numbers.Cyclic.Int31.Cyclic31.head031_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_nz	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_head0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_tail00	40	1.0.2.0.0.2.0	search with cache (only 1: intros; only 1: generalize (phi_inv_phi x); only 1: rewrite H; only 1: simpl phi_inv; only 1: intros H'; only 1: rewrite <- H'; only 1: auto).	0.648818969727	112
Coq.Numbers.Cyclic.Int31.Cyclic31.tail031_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_tail0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.quotient_by_2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt_main_trick	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt_main	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt_init	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt_test_true	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt_test_false	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt31_step_def	40
Coq.Numbers.Cyclic.Int31.Cyclic31.div31_phi	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt31_step_correct	40
Coq.Numbers.Cyclic.Int31.Cyclic31.iter31_sqrt_correct	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_sqrt	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt312_step_def	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt312_lower_bound	40
Coq.Numbers.Cyclic.Int31.Cyclic31.div312_phi	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt312_step_correct	40
Coq.Numbers.Cyclic.Int31.Cyclic31.iter312_sqrt_correct	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_sqrt2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_eq0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_is_even	40
Coq.Numbers.Cyclic.Int31.Cyclic31.log2_phi_bounded	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_lor	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_land	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_lxor	40
Coq.Numbers.Cyclic.Int63.Ring63.ring_theory_switch_eq	40
Coq.Numbers.Cyclic.Int63.Ring63.Int63Ring	40
Coq.Numbers.Cyclic.Int63.Ring63.eq31_correct	40
Coq.Numbers.Cyclic.Int63.Ring63.test	40	23.9.33	search with cache (only 1: intros H; only 1: intros p1; only 1: ring).	23.4955849648	23946
Coq.Numbers.Cyclic.Int63.Cyclic63.is_zero_spec_aux	40
Coq.Numbers.Cyclic.Int63.Cyclic63.positive_to_int_spec	40
Coq.Numbers.Cyclic.Int63.Cyclic63.mulc_WW_spec	40
Coq.Numbers.Cyclic.Int63.Cyclic63.diveucl_spec_aux	40
Coq.Numbers.Cyclic.Int63.Cyclic63.shift_unshift_mod_2	40
Coq.Numbers.Cyclic.Int63.Cyclic63.div_le_0	40
Coq.Numbers.Cyclic.Int63.Cyclic63.div_lt	40
Coq.Numbers.Cyclic.Int63.Cyclic63.P	40
Coq.Numbers.Cyclic.Int63.Cyclic63.shift_unshift_mod_3	40	0.0.1.0.1.0.0.0.0.0.0.0	search with cache (only 1: intros n p a H; only 1: rewrite Zmod_eq by auto with zarith; only 1: unfold Z.sub at 1; only 1: rewrite Z_div_plus_full_l by auto with zarith; only 1: replace (2 ^ n) with 2 ^ (n - p) * 2 ^ p by (rewrite <- Zpower_exp; [ f_equal |  |  ]; lia); only 1: rewrite <- Zdiv_Zdiv, Z_div_mult by auto with zarith; only 1: rewrite (Z.mul_comm (2 ^ (n - p))), Z.mul_assoc; only 1: rewrite Zopp_mult_distr_l; only 1: rewrite Z_div_mult by auto with zarith; only 1: symmetry; only 1: apply Zmod_eq; only 1: auto with zarith).	17.7101809978	1691
Coq.Numbers.Cyclic.Int63.Cyclic63.pos_mod_spec	40
Coq.Numbers.Cyclic.Int63.Int63.to_Z_rec_bounded	40
Coq.Numbers.Cyclic.Int63.Int63.to_Z_bounded	40
Coq.Numbers.Cyclic.Int63.Int63.Z_lt_div2	40
Coq.Numbers.Cyclic.Int63.Int63.Zmod_le_first	40
Coq.Numbers.Cyclic.Int63.Int63.Zmod_distr	40
Coq.Numbers.Cyclic.Int63.Int63.pow2_pos	40	3.1.2	search with cache (only 1: intros; only 1: apply Z.lt_gt; only 1: now auto with zarith).	0.113016843796	9
Coq.Numbers.Cyclic.Int63.Int63.pow2_nz	40
Coq.Numbers.Cyclic.Int63.Int63.wB_diff_0	40	1.4	search with cache (only 1: intros h; only 1: now Z.nzsimpl).	0.116526842117	7
Coq.Numbers.Cyclic.Int63.Int63.wB_pos	40	24	search with cache (only 1: easy).	2.35338187218	280
Coq.Numbers.Cyclic.Int63.Int63.to_Z_0	40	2	search with cache (only 1: now Z.nzsimpl).	0.0859389305115	3
Coq.Numbers.Cyclic.Int63.Int63.to_Z_1	40	0	search with cache (only 1: reflexivity).	0.0503840446472	1
Coq.Numbers.Cyclic.Int63.Int63.can_inj	40	172	search with cache (only 1: congruence).	11.1502811909	29290
Coq.Numbers.Cyclic.Int63.Int63.to_Z_inj	40
Coq.Numbers.Cyclic.Int63.Int63.eqb_complete	40
Coq.Numbers.Cyclic.Int63.Int63.eqb_spec	40
Coq.Numbers.Cyclic.Int63.Int63.eqb_false_spec	40
Coq.Numbers.Cyclic.Int63.Int63.eqb_false_complete	40	0.0.0	search with cache (only 1: intros; only 1: rewrite <- not_true_iff_false, eqb_spec; only 1: trivial).	0.10455083847	3
Coq.Numbers.Cyclic.Int63.Int63.eqb_false_correct	40	0.0.1	search with cache (only 1: intros x y; only 1: rewrite eqb_false_spec; only 1: trivial).	0.132030963898	13
Coq.Numbers.Cyclic.Int63.Int63.eq_dec	40
Coq.Numbers.Cyclic.Int63.Int63.cast_refl	40
Coq.Numbers.Cyclic.Int63.Int63.cast_diff	40
Coq.Numbers.Cyclic.Int63.Int63.eqo_refl	40
Coq.Numbers.Cyclic.Int63.Int63.eqo_diff	40	0.3.1.0.6	search with cache (only 1: unfold eqo; only 1: intros; only 1: generalize (eqb_correct i j); only 1: rewrite H; only 1: trivial).	3.77005290985	699
Coq.Numbers.Cyclic.Int63.Int63.eqbP	40
Coq.Numbers.Cyclic.Int63.Int63.ltbP	40
Coq.Numbers.Cyclic.Int63.Int63.lebP	40
Coq.Numbers.Cyclic.Int63.Int63.compare_spec	40
Coq.Numbers.Cyclic.Int63.Int63.is_zero_spec	40	0.9.4.2.0	search with cache (only 1: split; only 1: auto using eqb_correct, eqb_complete; only 1: intros; only 1: rewrite H; only 1: trivial).	2.23877000809	952
Coq.Numbers.Cyclic.Int63.Int63.diveucl_spec	40
Coq.Numbers.Cyclic.Int63.Int63.addc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.succ_spec	40
Coq.Numbers.Cyclic.Int63.Int63.succc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.addcarry_spec	40
Coq.Numbers.Cyclic.Int63.Int63.addcarryc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.subc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.pred_spec	40
Coq.Numbers.Cyclic.Int63.Int63.predc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.oppc_spec	40	1	search with cache (only 1: apply subc_spec).	0.0546991825104	2
Coq.Numbers.Cyclic.Int63.Int63.opp_spec	40	3	search with cache (only 1: apply sub_spec).	0.0884368419647	4
Coq.Numbers.Cyclic.Int63.Int63.oppcarry_spec	40
Coq.Numbers.Cyclic.Int63.Int63.subcarry_spec	40
Coq.Numbers.Cyclic.Int63.Int63.subcarryc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.to_Z_gcd	40
Coq.Numbers.Cyclic.Int63.Int63.gcd_spec	40
Coq.Numbers.Cyclic.Int63.Int63.head00_spec	40
Coq.Numbers.Cyclic.Int63.Int63.tail00_spec	40	0	search with cache (only 1: now intros h; rewrite (to_Z_inj _ 0 h)).	0.069787979126	1
Coq.Numbers.Cyclic.Int63.Int63.eqm_mod	40
Coq.Numbers.Cyclic.Int63.Int63.eqm_sub	40
Coq.Numbers.Cyclic.Int63.Int63.eqmE	40
Coq.Numbers.Cyclic.Int63.Int63.eqm_subE	40
Coq.Numbers.Cyclic.Int63.Int63.int_eqm	40	6.5.12	search with cache (only 1: intros h; only 1: subst y; only 1: reflexivity).	1.33826398849	457
Coq.Numbers.Cyclic.Int63.Int63.eqmI	40
Coq.Numbers.Cyclic.Int63.Int63.add_assoc	40
Coq.Numbers.Cyclic.Int63.Int63.add_comm	40
Coq.Numbers.Cyclic.Int63.Int63.add_le_r	40
Coq.Numbers.Cyclic.Int63.Int63.add_cancel_l	40
Coq.Numbers.Cyclic.Int63.Int63.add_cancel_r	40	0.0.0.0.0.1.0	search with cache (only 1: intros h; only 1: apply int_eqm in h; only 1: rewrite !add_spec in h; only 1: apply eqm_mod, eqm_sub in h; only 1: replace (_ + _ - _) with φ (y) - φ (z) in h by lia; only 1: rewrite <- eqm_subE in h; only 1: apply eqmI, h).	0.194649934769	8
Coq.Numbers.Cyclic.Int63.Int63.lsr0	40
Coq.Numbers.Cyclic.Int63.Int63.lsr_0_r	40	16.1.0.0	search with cache (only 1: apply to_Z_inj; only 1: rewrite lsr_spec; only 1: rewrite to_Z_0; only 1: auto with zarith).	8.43174815178	3052
Coq.Numbers.Cyclic.Int63.Int63.lsr_1	40
Coq.Numbers.Cyclic.Int63.Int63.lsr_add	40
Coq.Numbers.Cyclic.Int63.Int63.lsl0	40
Coq.Numbers.Cyclic.Int63.Int63.lsl0_r	40
Coq.Numbers.Cyclic.Int63.Int63.lsl_add_distr	40
Coq.Numbers.Cyclic.Int63.Int63.lsr_M_r	40
Coq.Numbers.Cyclic.Int63.Int63.bit_0_spec	40
Coq.Numbers.Cyclic.Int63.Int63.bit_split	40
Coq.Numbers.Cyclic.Int63.Int63.bit_lsr	40
Coq.Numbers.Cyclic.Int63.Int63.bit_b2i	40
Coq.Numbers.Cyclic.Int63.Int63.bit_1	40	7.0.0	search with cache (only 1: unfold bit; only 1: rewrite lsr_1; only 1: now case eqbP).	0.0984370708466	10
Coq.Numbers.Cyclic.Int63.Int63.to_Z_split	40
Coq.Numbers.Cyclic.Int63.Int63.bit_M	40
Coq.Numbers.Cyclic.Int63.Int63.bit_half	40
Coq.Numbers.Cyclic.Int63.Int63.bit_ext	40
Coq.Numbers.Cyclic.Int63.Int63.bit_lsl	40
Coq.Numbers.Cyclic.Int63.Int63.lor_lsr	40
Coq.Numbers.Cyclic.Int63.Int63.lor_le	40
Coq.Numbers.Cyclic.Int63.Int63.bit_0	40
Coq.Numbers.Cyclic.Int63.Int63.bit_add_or	40
Coq.Numbers.Cyclic.Int63.Int63.addmuldiv_spec	40
Coq.Numbers.Cyclic.Int63.Int63.is_even_bit	40
Coq.Numbers.Cyclic.Int63.Int63.is_even_spec	40
Coq.Numbers.Cyclic.Int63.Int63.is_even_0	40	7.0	search with cache (only 1: unfold is_even; only 1: auto).	0.119042873383	19
Coq.Numbers.Cyclic.Int63.Int63.is_even_lsl_1	40
Coq.Numbers.Cyclic.Int63.Int63.quotient_by_2	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_main_trick	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_main	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_test_false	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_test_true	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_step_correct	40
Coq.Numbers.Cyclic.Int63.Int63.iter_sqrt_correct	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_init	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_spec	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt2_step_def	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt2_lower_bound	40
Coq.Numbers.Cyclic.Int63.Int63.diveucl_21_spec_aux	40
Coq.Numbers.Cyclic.Int63.Int63.div2_phi	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt2_step_correct	40
Coq.Numbers.Cyclic.Int63.Int63.iter2_sqrt_correct	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt2_spec	40
Coq.Numbers.Cyclic.Int63.Int63.of_pos_rec_spec	40
Coq.Numbers.Cyclic.Int63.Int63.is_int	40
Coq.Numbers.Cyclic.Int63.Int63.of_Z_spec	40
Coq.Numbers.Cyclic.Int63.Int63.negbE	40
Coq.Numbers.Cyclic.Int63.Int63.Z_oddE	40
Coq.Numbers.Cyclic.Int63.Int63.Z_evenE	40
Coq.Numbers.Cyclic.Int63.Int63.is_zeroE	40
Coq.Numbers.Cyclic.Int63.Int63.bitE	40
Coq.Numbers.Cyclic.Int63.Int63.lt_pow_lt_log	40
Coq.Numbers.Cyclic.Int63.Int63.land_spec'	40
Coq.Numbers.Cyclic.Int63.Int63.lor_spec'	40
Coq.Numbers.Cyclic.Int63.Int63.lxor_spec'	40
Coq.Numbers.Cyclic.Int63.Int63.landC	40
Coq.Numbers.Cyclic.Int63.Int63.landA	40
Coq.Numbers.Cyclic.Int63.Int63.land0	40
Coq.Numbers.Cyclic.Int63.Int63.land0_r	40
Coq.Numbers.Cyclic.Int63.Int63.lorC	40
Coq.Numbers.Cyclic.Int63.Int63.lorA	40
Coq.Numbers.Cyclic.Int63.Int63.lor0	40
Coq.Numbers.Cyclic.Int63.Int63.lor0_r	40
Coq.Numbers.Cyclic.Int63.Int63.lxorC	40
Coq.Numbers.Cyclic.Int63.Int63.lxorA	40
Coq.Numbers.Cyclic.Int63.Int63.lxor0	40
Coq.Numbers.Cyclic.Int63.Int63.lxor0_r	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_more_than_1_digit	40	18	search with cache (only 1: lia).	0.671581029892	145
Coq.Numbers.Cyclic.ZModulo.ZModulo.wB_pos	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_to_Z_1	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_to_Z_2	40	0.1.1.0	search with cache (only 1: unfold to_Z; only 1: intros; only 1: destruct (Z_mod_lt x wB wB_pos); only 1: auto).	0.267872095108	6
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_to_Z	40	0.1.1.0	search with cache (only 1: unfold to_Z; only 1: intros; only 1: destruct (Z_mod_lt x wB wB_pos); only 1: auto).	0.258762121201	6
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_of_pos	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_zdigits	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_0	40	1.2.0.0	search with cache (only 1: unfold to_Z, zdigits; only 1: apply Zmod_small; only 1: unfold wB, base; only 1: auto with zarith).	0.1171438694	11
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_1	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_Bm1	40	0.7.0.0	search with cache (only 1: unfold to_Z, zdigits; only 1: apply Zmod_small; only 1: generalize wB_pos; only 1: auto with zarith).	0.645035982132	119
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_compare	40	0.0.0.0	search with cache (only 1: unfold to_Z; only 1: intros; only 1: destruct (Z_mod_lt x wB wB_pos); only 1: auto).	0.114275932312	4
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_eq0	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_opp_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_opp	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_opp_carry	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.Zmod_equal	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_succ_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_add_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_add_carry_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_succ	40	2.12.7.0.0	search with cache (only 1: intros; only 1: unfold opp, to_Z; only 1: generalize (Z_mod_lt x wB wB_pos); only 1: rewrite Zplus_mod_idemp_l; only 1: auto).	27.0539410114	8015
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_add	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_add_carry	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_pred_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_sub_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_sub_carry_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_pred	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_sub	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_sub_carry	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_mul_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_mul	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_square_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_div	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_div_gt	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_modulo	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_modulo_gt	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.Zgcd_bound	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_gcd	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_gcd_gt	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_div21	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_add_mul_div	40	11	search with cache (only 1: split).	0.377763032913	51
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_pos_mod	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_is_even	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_sqrt	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_sqrt2	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.two_p_power2	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_head00	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_head0	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.Ptail_pos	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.Ptail_bounded	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_tail00	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_tail0	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_lor	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_land	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow_sub_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow_div_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.exists_div2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_0_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_succ_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_spec'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_spec	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_true	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_false	40	0.0.1.0.0.0.0.2.0.0.0	search with cache (only 1: intros a n Hn; only 1: rewrite <- testbit_spec' by trivial; only 1: destruct a.[n]; only 1: simpl; only 1: split; only 1: now try order'; only 1: now try order'; only 1: split; only 1: simpl; only 1: now try order'; only 1: split).	8.84695696831	1578
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.b2z_inj	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_b2z_double_div2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_b2z_double_bit0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.b2z_div2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.b2z_bit0	40	0.0.0.0.19	search with cache (only 1: intros a0; only 1: apply b2z_inj; only 1: rewrite testbit_spec' by order; only 1: nzsimpl; only 1: now rewrite mod_small by (destruct a0; split; simpl; order')).	0.916188955307	291
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_unique	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_opp	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_m1	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit0_odd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit0_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit0_mod	40	1.0.0.0.1.0.0.0.1.2.1.0.0.0.1.0	search with cache (only 1: intros a; only 1: destruct (exists_div2 a) as (a', (b, H)); only 1: rewrite H  at 1; only 1: rewrite testbit_0_r; only 1: apply mod_unique with a'; only 1: left; only 1: destruct b; only 1: simpl; only 1: split; only 1: order'; only 1: order'; only 1: simpl; only 1: split; only 1: order'; only 1: order'; only 1: trivial).	30.2630860806	5770
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_odd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit_log2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_above_log2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit_log2_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_above_log2_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_nonneg'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_nonneg_ex	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_neg'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_neg_ex	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div_pow2_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.double_bits_succ	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.double_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mul_pow2_bits_add	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mul_pow2_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mul_pow2_bits_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mod_pow2_bits_high	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mod_pow2_bits_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.eqf_equiv	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_eqf	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj_0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj_iff'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.are_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_spec	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_opp_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_opp_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_div_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_mul_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_mul_pow2	40	0.1.0.0.0.1.7.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: rewrite mul_pow2_bits by trivial; only 1: destruct (le_gt_cases n m); only 1: now apply shiftl_spec_high; only 1: rewrite shiftl_spec_low, testbit_neg_r; only 1: trivial; only 1: now apply lt_sub_0; only 1: order).	4.87935304642	1191
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_div_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_spec_alt	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_shiftl	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_shiftl_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_shiftl_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_shiftr	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_1_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_0_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_0_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_0_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_0_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_eq_0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_div	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_wd	40	1.1.2.5.1.0.15	search with cache (only 1: intros f Hf H0; only 1: rewrite div2_spec, shiftr_div_pow2; only 1: rewrite div2_spec, shiftr_div_pow2; only 1: f_equiv; only 1: trivial; only 1: order'; only 1: order').	7.2278008461	1205
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_odd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_wd	40	0.0.1	search with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.410084962845	26
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_wd	40	0.0.1	search with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.419841051102	26
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_wd	40	0.0.1	search with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.292981147766	26
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_eq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_nilpotent	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_0_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_0_r	40	0.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_l).	0.169018030167	3
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_comm	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_assoc	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_0_l	40	11.0.11	search with cache (only 1: intros; only 1: bitwise; only 1: trivial).	1.14829301834	508
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_0_r	40	2.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_r).	0.102905035019	5
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_comm	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_assoc	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_eq_0_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_0_l	40	11.0.10	search with cache (only 1: intros; only 1: bitwise; only 1: trivial).	1.22108316422	440
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_0_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_comm	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_assoc	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_0_l	40	1.0.10	search with cache (only 1: intros; only 1: bitwise; only 1: trivial).	0.214464902878	64
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_0_r	40	5.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply andb_comm).	0.0980038642883	8
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_land_distr_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_land_distr_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_lor_distr_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_lor_distr_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ldiff_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_ldiff_and	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_spec'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_spec'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_wd	40	0.0.2.1	search with cache (only 1: intros a a' Ha b b' Hb; only 1: unfold setbit; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.551347970963	41
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_wd	40	0.0.2.2	search with cache (only 1: intros a a' Ha b b' Hb; only 1: unfold clearbit; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.514269828796	34
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow2_bits_true	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow2_bits_false	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow2_bits_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_eq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_neq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_eq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_neq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_spec	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_involutive	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_m1	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_m1_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_m1_l	40	25.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: now rewrite bits_opp, one_succ, pred_succ, bits_0).	1.32348203659	989
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_m1_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_m1_l	40	34.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: now rewrite bits_opp, one_succ, pred_succ, bits_0).	2.96206402779	2218
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_m1_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_m1_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_lnot_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_lnot_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_lnot_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_lnot_lnot	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lxor_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lxor_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_m1_r	40	3.0.1	search with cache (only 1: intros; only 1: bitwise; only 1: now rewrite lnot_spec, bits_m1).	0.0860548019409	11
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_m1_l	40	3.2.0	search with cache (only 1: intros; only 1: bitwise; only 1: now rewrite lnot_spec, bits_m1).	0.164609909058	11
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_shiftr	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_equiv	40	4.9.10	search with cache (only 1: intros; only 1: unfold ones; only 1: now rewrite shiftl_1_l).	2.52071404457	815
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_add	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_div_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_mod_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_spec_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_spec_high	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_spec_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_ones_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ones	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ones_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_r_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_l_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_neg	40	0.7.0	search with cache (only 1: intros a n; only 1: rewrite <- shiftl_opp_r; only 1: now rewrite 2!lt_nge, shiftl_nonneg).	0.234387874603	20
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_neg	40	0.0.0	search with cache (only 1: intros; only 1: rewrite div2_spec; only 1: now rewrite 2!lt_nge, shiftr_nonneg).	0.237658023834	3
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_bits_unique	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_shiftr	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_shiftl	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_shiftl'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_bit0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add3_bit0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add3_bits_div2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_carry_div2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_carry_bits_aux	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_carry_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_bit1	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.nocarry_equiv	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_le	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.sub_nocarry_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_lt_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_mod_lt_pow2	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.quot_div_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_mod_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.quot_div	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_mod	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.mod_divide	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_divide	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_mod_eq_0	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.quot_div_exact	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_div_mul_exact	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_quot_mul_exact	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_div_factor	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_quot_factor	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_div_gcd	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_quot_gcd	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2.1	search with cache (only 1: intros a b g NZ EQ; only 1: rewrite !quot_div_exact; only 1: rewrite gcd_div_factor; only 1: now rewrite <- EQ, div_same; only 1: generalize (gcd_nonneg a b); only 1: order; only 1: rewrite EQ; only 1: apply gcd_divide_l; only 1: rewrite EQ; only 1: apply gcd_divide_r; only 1: generalize (gcd_nonneg a b); only 1: order; only 1: rewrite EQ; only 1: apply gcd_divide_r; only 1: generalize (gcd_nonneg a b); only 1: order; only 1: rewrite EQ; only 1: apply gcd_divide_l).	26.9687349796	4780
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_mod	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_rem	40	0.1.1.10.0	search with cache (only 1: intros a b Hb; only 1: rewrite !rem_eq by trivial; only 1: rewrite <- add_opp_r, mul_comm, <- mul_opp_l; only 1: rewrite (gcd_comm _ b); only 1: apply gcd_add_mult_diag_r).	2.54548096657	778
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_wd	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_equiv1	40	0.0.0.2.14	search with cache (only 1: symmetry; only 1: apply divide_div_mul_exact; only 1: generalize (gcd_nonneg a b); only 1: order; only 1: apply gcd_divide_r).	0.780699968338	215
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_equiv2	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_div_swap	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_l	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_r	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_div	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_least	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_nonneg	40	11.1	search with cache (only 1: unfold lcm; only 1: trivial using gcd_nonneg, abs_nonneg).	1.3179359436	157
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_comm	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_divide_iff	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_unique	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_unique_alt	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_assoc	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_0_l	40	0.0.1.0.2.6.1.3	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: solve_proper; only 1: exists 0; only 1: now nzsimpl; only 1: exists 0; only 1: now nzsimpl; only 1: trivial).	3.06402182579	1110
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_0_r	40	0.0.2.0.1.6.0.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: solve_proper; only 1: exists 0; only 1: now nzsimpl; only 1: exists 0; only 1: now nzsimpl; only 1: trivial).	1.48122000694	636
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_l_nonneg	40	1.6.3.2.3.1.2	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: trivial; only 1: exists n; only 1: now nzsimpl; only 1: apply divide_refl; only 1: trivial using divide_1_l, le_0_1).	16.3470048904	5893
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_r_nonneg	40	0.0.6.3.0.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: trivial; only 1: apply divide_refl; only 1: trivial using divide_1_l, le_0_1, divide_refl; only 1: trivial using divide_1_l, le_0_1, divide_refl).	2.18082904816	520
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_diag_nonneg	40	2.1.3.4.0	search with cache (only 1: intros; only 1: apply lcm_unique_alt; only 1: trivial; only 1: intros q; only 1: now split).	2.75503396988	700
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_eq_0	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_eq_r	40	1.4.2.1.0.2	search with cache (only 1: intros; only 1: apply divide_antisym_nonneg; only 1: apply lcm_nonneg; only 1: trivial; only 1: now apply lcm_least; only 1: apply divide_lcm_r).	1.28290390968	486
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_iff	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_opp_l	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_opp_r	40	0.0.0.1.0.0	search with cache (only 1: intros; only 1: apply lcm_unique_alt; only 1: apply lcm_nonneg; only 1: intros; only 1: rewrite divide_opp_l; only 1: apply lcm_divide_iff).	0.171324968338	7
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_abs_l	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_abs_r	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_l	40	0.3.0.10.0.3.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: apply abs_nonneg; only 1: trivial using divide_1_l, le_0_1; only 1: now apply divide_abs_l; only 1: intros p Hn Hm; only 1: now apply divide_abs_l).	6.17907500267	1755
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_r	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_diag	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_l	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_l_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_r	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_r_nonneg	40	1.9.1.0	search with cache (only 1: intros; only 1: rewrite <- (abs_eq p)  at 3; only 1: now rewrite !(mul_comm _ p), lcm_mul_mono_l, mul_comm; only 1: trivial).	20.1210148335	905
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_1_lcm_mul	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_twice_r	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.even_pow	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.odd_pow	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_opp_even	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_opp_odd	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_even_abs	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_even_nonneg	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_odd_abs_sgn	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_odd_sgn	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.abs_pow	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_eq	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mod_unique	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_unique	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_unique	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_opp_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_opp_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_opp_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_opp_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_same	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_same	40	0.3.64.5.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 1; only 1: now rewrite abs_pos; only 1: now nzsimpl).	19.9262909889	23755
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_small	40	1.6.0	search with cache (only 1: intros; only 1: apply div_small; only 1: intuition).	0.651525020599	88
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_small	40	10.0	search with cache (only 1: intros; only 1: auto using mod_small).	1.75682091713	328
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_0_l	40	0.3.1.2.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique with 0; only 1: now rewrite abs_pos; only 1: now nzsimpl).	0.256939172745	57
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_0_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_1_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_1_r	40	1.0.0.0.0.0.1.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: pose proof lt_0_1 as H; only 1: rewrite abs_pos; only 1: intuition; only 1: order; only 1: now nzsimpl).	0.24095582962	10
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_1_l	40	5.0.0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: split; only 1: apply le_0_1; only 1: order).	0.120152950287	10
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_1_l	40	5.0.0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: split; only 1: apply le_0_1; only 1: order).	0.120354890823	10
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mul	40	1.0.3.4.2.0.1.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: split; only 1: intuition order; only 1: now rewrite abs_pos; only 1: nzsimpl; only 1: apply mul_comm).	9.75309896469	1334
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_unique_exact	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_le	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_pos	40	1.1	search with cache (only 1: intros; only 1: auto using div_pos).	0.0664689540863	4
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_str_pos	40	0.8.0	search with cache (only 1: intros a b (Hb, Hab); only 1: apply div_str_pos; only 1: auto).	0.826657056808	140
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_lt	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_mono	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_div_le	40	5.1.1.3.22	search with cache (only 1: intuition; only 1: rewrite (add_le_mono_r _ _ (a mod b)), <- div_mod by order; only 1: rewrite <- (add_0_r a)  at 1; only 1: rewrite <- add_le_mono_l; only 1: now apply mod_always_pos).	9.77824401855	4003
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_succ_div_gt	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_pred_div_gt	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_exact	40	0.0.0.0	search with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite <- (add_0_r (b * (a / b)))  at 2; only 1: apply add_cancel_l).	0.144897222519	4
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_lt_upper_bound	40	1.0.0.1.2.0.0	search with cache (only 1: intros; only 1: rewrite (mul_lt_mono_pos_l b) by order; only 1: apply le_lt_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: intuition; only 1: order; only 1: auto).	1.02521300316	113
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_upper_bound	40	1.0.3.1.0.0	search with cache (only 1: intros; only 1: rewrite (mul_le_mono_pos_l _ _ b) by order; only 1: apply le_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: order; only 1: trivial).	0.793694972992	112
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_lower_bound	40	2.1.0.1.0	search with cache (only 1: intros; only 1: rewrite <- (div_mul q b) by order; only 1: apply Private_NZDiv.div_le_mono; only 1: trivial; only 1: now rewrite mul_comm).	0.345613002777	33
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_compat_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_add	40	2.0.3.1.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with (a / c + b); only 1: now apply mod_always_pos; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	2.08965301514	344
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_add	40	1.1.0.0.0.2.0	search with cache (only 1: intros; only 1: apply (mul_cancel_l _ _ c); only 1: trivial; only 1: apply (add_cancel_r _ _ ((a + b * c) mod c)); only 1: rewrite <- div_mod, Private_NZDiv.mod_add by order; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	0.641272068024	77
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_add_l	40	0.0.0.2.0	search with cache (only 1: intros; only 1: rewrite (add_comm _ c), (add_comm a); only 1: apply Private_NZDiv.div_add; only 1: intros EQ; only 1: order).	0.202670812607	7
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_cancel_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_cancel_l	40	4.5.1	search with cache (only 1: intros a b c; only 1: rewrite !(mul_comm c); only 1: apply Private_NZDiv.div_mul_cancel_r).	20.8697171211	1377
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_distr_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_distr_r	40	5.6.0	search with cache (only 1: intros; only 1: rewrite !(mul_comm _ c); only 1: now rewrite Private_NZDiv.mul_mod_distr_l).	6.32867503166	585
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mod	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_idemp_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.add_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.add_mod_idemp_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.add_mod	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_div	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mul_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_div	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_le	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_divides	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_eq	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_bound_abs	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mod_unique	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique_pos	40	0.1.0.5.1.0.1.1.1.1	search with cache (only 1: intros a b q r Hr EQ; only 1: assert (Hb : b ~= 0) by (destruct Hr; intuition; order); only 1: destruct (div_mod_unique b q (a / b) r (a mod b)); only 1: left; only 1: trivial; only 1: left; only 1: apply mod_pos_bound; only 1: intuition order; only 1: now rewrite <- div_mod; only 1: trivial).	20.0031869411	5863
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique_neg	40	0.0.4.3.0	search with cache (only 1: intros; only 1: apply div_unique with r; only 1: right; only 1: trivial; only 1: trivial).	1.30002903938	237
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique_pos	40	0.1.0.5.1.0.1.1.1.1	search with cache (only 1: intros a b q r Hr EQ; only 1: assert (Hb : b ~= 0) by (destruct Hr; intuition; order); only 1: destruct (div_mod_unique b q (a / b) r (a mod b)); only 1: left; only 1: trivial; only 1: left; only 1: apply mod_pos_bound; only 1: intuition order; only 1: now rewrite <- div_mod; only 1: trivial).	23.0961389542	6673
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique_neg	40	0.0.4.2.0	search with cache (only 1: intros; only 1: apply mod_unique with q; only 1: right; only 1: trivial; only 1: trivial).	0.736768960953	97
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_bound_or	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.opp_mod_bound_or	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_r_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_r_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_r_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_r_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign_mul	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_same	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_same	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_small	40	1.1.3.0.1.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique with a; only 1: left; only 1: intuition; only 1: now nzsimpl).	2.08501720428	304
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_small	40	1.1.3.1.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 0; only 1: left; only 1: intuition; only 1: now nzsimpl).	3.79497289658	478
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_0_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_0_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_1_r	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_1_r	40	1.0.21.0.1.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: left; only 1: intuition; only 1: apply lt_0_1; only 1: now nzsimpl).	26.6491122246	23571
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_1_l	40	4.0.0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: split; only 1: apply le_0_1; only 1: order).	0.198473930359	9
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_1_l	40	4.0.0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: split; only 1: apply le_0_1; only 1: order).	0.123907089233	9
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_mul	40	1.0.0.0.0.2.1.0.1.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: destruct (lt_ge_cases 0 b); only 1: left; only 1: intuition; only 1: right; only 1: intuition; only 1: order; only 1: nzsimpl; only 1: apply mul_comm).	22.1502959728	4512
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique_exact	40	0.0.0.3.0.1.11.3.10.10	search with cache (only 1: symmetry; only 1: symmetry; only 1: apply Private_NZDiv.div_unique with 0; only 1: destruct (lt_ge_cases 0 b); only 1: left; only 1: intuition order; only 1: right; only 1: intuition order; only 1: nzsimpl; only 1: trivial).	5.64195799828	3834
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_le	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_pos	40	4.1	search with cache (only 1: intros; only 1: auto using div_pos).	0.687414169312	46
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_str_pos	40	0.6.0	search with cache (only 1: intros a b (Hb, Hab); only 1: apply div_str_pos; only 1: auto).	0.729397058487	51
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_lt	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_mono	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_div_le	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_div_ge	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_succ_div_gt	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_succ_div_lt	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_exact	40	0.0.0.0	search with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite <- (add_0_r (b * (a / b)))  at 2; only 1: apply add_cancel_l).	0.193341016769	4
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_lt_upper_bound	40	3.3.0.1.0.0	search with cache (only 1: intros; only 1: rewrite (mul_lt_mono_pos_l b) by order; only 1: apply le_lt_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: auto; only 1: auto).	3.44963598251	501
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_upper_bound	40	0.0.1.4.0.0	search with cache (only 1: intros; only 1: rewrite (mul_le_mono_pos_l _ _ b) by order; only 1: apply le_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: trivial; only 1: trivial).	1.21161007881	159
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_lower_bound	40	3.0.0.1.0	search with cache (only 1: intros; only 1: rewrite <- (div_mul q b) by order; only 1: apply Private_NZDiv.div_le_mono; only 1: trivial; only 1: now rewrite mul_comm).	0.355638980865	27
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_compat_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_add	40	1.0.3.1.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with (a / c + b); only 1: now apply mod_bound_or; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	2.00414991379	262
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_add	40	1.1.0.0.0.2.0	search with cache (only 1: intros; only 1: apply (mul_cancel_l _ _ c); only 1: trivial; only 1: apply (add_cancel_r _ _ ((a + b * c) mod c)); only 1: rewrite <- div_mod, Private_NZDiv.mod_add by order; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	0.954224824905	67
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_add_l	40	1.1.2.0	search with cache (only 1: intros; only 1: rewrite (add_comm _ c), (add_comm a); only 1: apply Private_NZDiv.div_add; only 1: tauto).	0.163067102432	11
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul_cancel_r	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul_cancel_l	40	4.3.1	search with cache (only 1: intros a b c; only 1: rewrite !(mul_comm c); only 1: apply Private_NZDiv.div_mul_cancel_r).	5.7355298996	491
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_distr_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_distr_r	40	6.7.0	search with cache (only 1: intros; only 1: rewrite !(mul_comm _ c); only 1: now rewrite Private_NZDiv.mul_mod_distr_l).	27.2643618584	2292
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_mod	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_idemp_r	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod_idemp_r	40	1.4.3.5	search with cache (only 1: intros a b Hb H; only 1: rewrite !(add_comm a); only 1: apply Private_NZDiv.add_mod_idemp_l; only 1: tauto).	23.4017159939	3471
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod	40	1.1.7.4.5	search with cache (only 1: intros a b Hb H; only 1: rewrite Private_NZDiv.add_mod_idemp_l, Private_NZDiv.add_mod_idemp_r; only 1: reflexivity; only 1: tauto; only 1: tauto).	37.8185639381	10229
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_div	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.rem_mul_r	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_div	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul_le	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_eq	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_opp_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_opp_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_rem_unique	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_unique	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_unique	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_same	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_same	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_small	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_small	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_0_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_0_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_1_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_1_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_1_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_1_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_mul	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_unique_exact	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_nonneg	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_nonpos	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_sign_mul	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_sign_nz	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_sign	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_abs_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_abs_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_abs	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_abs_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_abs_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_abs	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_bound_abs	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_le	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_pos	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_str_pos	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_lt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_mono	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_quot_le	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_quot_ge	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_succ_quot_gt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_pred_quot_lt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_pred_quot_gt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_succ_quot_lt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_exact	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_lt_upper_bound	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_upper_bound	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_lower_bound	40	4.1.1.6.0	search with cache (only 1: intros; only 1: rewrite <- (quot_mul q b) by order; only 1: apply quot_le_mono; only 1: trivial; only 1: now rewrite mul_comm).	37.5797300339	6471
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_compat_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_add	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_add	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_add_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul_cancel_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul_cancel_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_distr_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_distr_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_rem	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_idemp_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.add_rem_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.add_rem_idemp_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.add_rem	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_quot	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mod_mul_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_quot	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul_le	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_opp_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_opp_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_abs_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_abs_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_1_r_abs	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_1_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_antisym_abs	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_antisym	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_sub_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_add_cancel_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_opp_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_opp_r	40	1.0.0.0.0.1.0.0	search with cache (only 1: intros; only 1: apply gcd_unique_alt; only 1: apply gcd_nonneg; only 1: intros; only 1: rewrite divide_opp_r; only 1: rewrite and_comm; only 1: rewrite and_comm; only 1: apply gcd_divide_iff).	0.390362024307	11
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_abs_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_abs_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_0_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_0_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_diag	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_add_mult_diag_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_add_diag_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_sub_diag_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.Bezout_wd	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.bezout_1_gcd	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_bezout	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_l_nonneg	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_r_nonneg	40	0.3.1.0	search with cache (only 1: intros; only 1: rewrite <- (abs_eq p)  at 3; only 1: now rewrite !(mul_comm _ p), gcd_mul_mono_l, mul_comm; only 1: trivial).	0.281359910965	13
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gauss	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_mul_split	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.succ_max_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.succ_min_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.pred_max_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.pred_min_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_max_distr_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_max_distr_r	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_min_distr_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_min_distr_r	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.opp_max_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.opp_min_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_max_distr_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_max_distr_r	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_min_distr_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_min_distr_r	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonneg_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonneg_r	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonneg_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonneg_r	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonpos_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonpos_r	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonpos_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonpos_r	40
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.odd_pred	40
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_pred	40	0.0.3.1.1.0	search with cache (only 1: intros; only 1: rewrite <- (succ_pred n)  at 2; only 1: symmetry; only 1: apply eq_iff_eq_true; only 1: rewrite even_spec, odd_spec; only 1: apply Odd_succ).	0.902655124664	104
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_opp	40
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.odd_opp	40
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_sub	40
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.odd_sub	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericAbs.abs_eq	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericAbs.abs_neq	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_null	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_pos	40	3.0.0.0.0.0	search with cache (only 1: unfold sgn; only 1: intros; only 1: destruct (compare_spec 0 n); only 1: order; only 1: order; only 1: order').	0.158126115799	9
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_neg	40	0.0.0.0.0.0	search with cache (only 1: unfold sgn; only 1: intros; only 1: destruct (compare_spec 0 n); only 1: order; only 1: order; only 1: order).	0.26207613945	6
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_wd	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_max	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_neq'	40	1.6.1.6	search with cache (only 1: intros n m; only 1: rewrite abs_neq; only 1: auto with relations; only 1: now rewrite (opp_le_mono n 0), opp_0).	8.53425002098	1881
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_nonneg	40	5.3.5.1.0	search with cache (only 1: intros; only 1: destruct_max n; only 1: trivial; only 1: rewrite opp_nonneg_nonpos; only 1: trivial).	5.71304392815	1548
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_eq_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_neq_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_opp	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_0	40	5.0.8	search with cache (only 1: rewrite abs_neq; only 1: now nzsimpl; only 1: solve_proper).	0.6969602108	215
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_0_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_pos	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_eq_or_opp	40	4.4.11.5.0	search with cache (only 1: intros; only 1: destruct_max n; only 1: now left; only 1: right; only 1: reflexivity).	27.6041908264	8402
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_or_opp_abs	40	18.5.0.0.0	search with cache (only 1: intros; only 1: destruct_max n; only 1: auto with relations; only 1: right; only 1: now rewrite opp_involutive).	10.8986988068	5266
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_involutive	40	1.12.0	search with cache (only 1: intros; only 1: apply abs_eq; only 1: apply abs_nonneg).	1.54801917076	562
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_spec	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_case_strong	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_case	40	1.1.0.0	search with cache (only 1: intros; only 1: destruct_max n; only 1: auto; only 1: auto).	0.136121988297	6
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_eq_cases	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_lt	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_le	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_triangle	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_sub_triangle	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_mul	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_square	40	8.1.0.1	search with cache (only 1: intros; only 1: destruct_max n; only 1: apply eq_refl; only 1: now rewrite mul_opp_l, mul_opp_r, opp_involutive).	1.86290216446	242
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_wd	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_spec	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_0	40	0.10.1.3.0.10.1.3.2	search with cache (only 1: rewrite sgn_null; only 1: rewrite <- abs_0_iff; only 1: apply abs_eq; only 1: apply opp_nonpos_nonneg; only 1: now nzsimpl; only 1: rewrite <- abs_0_iff; only 1: apply abs_eq; only 1: apply opp_nonpos_nonneg; only 1: now nzsimpl).	20.5403251648	11901
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_pos_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_null_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_neg_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_opp	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_nonneg	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_nonpos	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_mul	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_abs	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_sgn	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_sgn	40	0.10.1.0.0.1.0.1	search with cache (only 1: intros n; only 1: destruct_sgn n; only 1: apply sgn_pos; only 1: apply lt_0_1; only 1: apply sgn_0; only 1: apply sgn_neg; only 1: rewrite opp_neg_pos; only 1: apply lt_0_1).	12.8799889088	4939
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_lt_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_le_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_nonpos_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_nonneg_nonpos	40	0.7.3	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (mul_0_l m); only 1: now apply mul_le_mono_nonpos_r).	2.25067901611	306
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_nonpos_nonneg	40	17.1.0.0.1.3	search with cache (only 1: intros n m H1 H2; only 1: le_elim H2; only 1: rewrite <- (mul_0_l m)  at 1; only 1: now apply mul_le_mono_pos_r; only 1: rewrite <- H2; only 1: now nzsimpl).	32.1563389301	10613
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_0	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_0_mul	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_mul_0	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.nlt_square_0	40	0.1.0.2.0.48.1.16	search with cache (only 1: intros; only 1: rewrite nlt_ge; only 1: assert (R : forall n, 0 == n <-> n == 0) by (intros; split; apply eq_sym); only 1: repeat rewrite lt_eq_cases; only 1: repeat rewrite R; only 1: rewrite lt_0_mul, eq_mul_0; only 1: pose proof (lt_trichotomy n 0); only 1: tauto).	38.9594011307	32830
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_lt_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_le_mono_nonpos	40	3.1.3.1.1.3	search with cache (only 1: intros n m H1 H2; only 1: le_elim H2; only 1: apply lt_le_incl; only 1: now apply mul_lt_mono_nonpos; only 1: rewrite <- H2; only 1: now apply eq_le_incl).	4.27768802643	1608
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_lt_simpl_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_le_simpl_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_1_mul_neg	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_m1_neg	40	0.0.0.0.0.5.4.0.0	search with cache (only 1: intros n m H1 H2; only 1: apply (mul_lt_mono_neg_r m) in H1; only 1: rewrite mul_1_l in H1; only 1: apply lt_le_pred in H2; only 1: setoid_replace P 0 with -1 in H2; only 1: now apply lt_le_trans with m; only 1: apply eq_opp_r; only 1: now rewrite one_succ, opp_pred, opp_0; only 1: assumption).	16.0860769749	3929
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_m1_pos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_1_mul_l	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_m1_mul_r	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.eq_mul_1	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_diag_l	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_diag_r	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_mul_diag_l	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_mul_diag_r	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_neg_neg	40	0.1.5	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_lt_mono).	0.321782827377	19
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_neg_nonpos	40	0.0.0	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_lt_le_mono).	0.131717920303	3
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_nonpos_neg	40	0.0.0	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_le_lt_mono).	0.133413076401	3
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_nonpos_nonpos	40	0.0.2	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_le_mono).	0.447920084	35
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_0_sub	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_0_sub	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_0	40	0.2.25	search with cache (only 1: intros H; only 1: intro n; only 1: now rewrite (add_lt_mono_r _ _ n), add_0_l, sub_simpl_r).	4.54013800621	2443
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_0	40	0.7.6	search with cache (only 1: intro m; only 1: intro n; only 1: now rewrite (add_le_mono_r _ _ n), add_0_l, sub_simpl_r).	2.26190280914	376
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_lt_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_le_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_pos_neg	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_neg_pos	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_nonneg_nonpos	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_nonpos_nonneg	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_m1_0	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_mono_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_mono_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_mono_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_mono_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_le_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_lt_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_lt_sub_lt	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_le_sub_lt	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_le_sub_lt	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_add_lt_sub_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_add_le_sub_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_add_lt_sub_l	40	0.17.4.14	search with cache (only 1: intro p; only 1: intros n m; only 1: rewrite (add_comm p m); only 1: now rewrite (sub_lt_mono_r _ _ p), add_simpl_r).	30.3340408802	8963
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_add_le_sub_l	40	0.18.4.5	search with cache (only 1: intro p; only 1: intros n m; only 1: rewrite (add_comm p m); only 1: now rewrite (sub_le_mono_r _ _ p), add_simpl_r).	25.7051160336	4965
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_lt_add_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_le_add_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_lt_add_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_le_add_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_lt_add	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_le_add	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_pos	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_nonneg	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_neg_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_pos_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_nonpos_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_nonneg_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.zero_pos_neg	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neg_pos_cases	40	1.1.1.1.46.8	search with cache (only 1: split; only 1: destruct (lt_trichotomy n 0) as [H1| [H1| H1]]; only 1: intuition order; only 1: intuition order; only 1: intuition order; only 1: intuition order).	13.6325199604	10391
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.nonpos_pos_cases	40	0.0.0.14.21.6	search with cache (only 1: intro; only 1: rewrite lt_eq_cases; only 1: destruct (lt_trichotomy n 0) as [H1| [H1| H1]]; only 1: intuition; only 1: intuition; only 1: intuition).	4.67807817459	2140
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neg_nonneg_cases	40	0.0.0.14.23.0	search with cache (only 1: intro; only 1: rewrite lt_eq_cases; only 1: destruct (lt_trichotomy n 0) as [H1| [H1| H1]]; only 1: intuition; only 1: intuition; only 1: intuition).	3.66467094421	1992
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.nonpos_nonneg_cases	40	1.1.1	search with cache (only 1: intro; only 1: apply add_le_cases; only 1: now nzsimpl).	0.125321149826	6
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_l	40	26.6.6	search with cache (only 1: intro n; only 1: rewrite <- (succ_pred n)  at 2; only 1: apply lt_succ_diag_r).	2.9146399498	2079
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_pred_l	40	40.5.7	search with cache (only 1: intro n; only 1: rewrite <- (succ_pred n)  at 2; only 1: now apply le_le_succ_r).	9.81837582588	4807
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_le_pred	40	5.4.13.4.0.0	search with cache (only 1: intro; only 1: intro; only 1: symmetry; only 1: rewrite <- (succ_pred m)  at 2; only 1: symmetry; only 1: apply lt_succ_r).	8.49633216858	3831
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.nle_pred_r	40	0.0.7.1	search with cache (only 1: intro; only 1: rewrite nle_gt; only 1: rewrite <- (succ_pred n)  at 2; only 1: apply lt_succ_diag_r).	0.580303907394	96
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_le	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_lt_pred	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_le_pred	40	4.1.5.2	search with cache (only 1: intros m H1 H2; only 1: apply lt_le_incl; only 1: apply le_succ_l; only 1: now rewrite succ_pred).	30.1816189289	3263
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_lt	40	1.0.5.1.0.1	search with cache (only 1: intros; only 1: rewrite <- (succ_pred m); only 1: apply lt_succ_r; only 1: apply lt_le_incl; only 1: rewrite <- (succ_pred m); only 1: now rewrite pred_succ).	7.94345188141	1235
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_pred_lt	40	4.4.1	search with cache (only 1: intros n m; only 1: rewrite <- lt_le_pred; only 1: order).	8.04114413261	795
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.pred_lt_mono	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.pred_le_mono	40	0.1.0.9.1.0	search with cache (only 1: intros n m; only 1: symmetry; only 1: rewrite <- lt_le_pred; only 1: rewrite <- (succ_pred n)  at 2; only 1: symmetry; only 1: apply le_succ_l).	13.8068799973	2888
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_succ_lt_pred	40	6.0.0	search with cache (only 1: intros; only 1: rewrite lt_le_pred; only 1: apply le_succ_l).	0.368026971817	24
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_succ_le_pred	40	1.0.0.0.0.0	search with cache (only 1: intros; only 1: rewrite <- lt_pred_le; only 1: rewrite pred_succ; only 1: rewrite <- (succ_pred m); only 1: rewrite pred_succ; only 1: apply lt_succ_r).	0.170121192932	7
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_lt_succ	40	0.1.0.3.1.3.2.0	search with cache (only 1: intros n m; only 1: symmetry; only 1: rewrite lt_le_pred; only 1: symmetry; only 1: rewrite pred_succ; only 1: rewrite <- (succ_pred n)  at 2; only 1: symmetry; only 1: apply le_succ_l).	9.62144899368	2148
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_pred_lt_succ	40	6.1.3.0	search with cache (only 1: intros n m; only 1: symmetry; only 1: rewrite <- lt_pred_le; only 1: apply lt_succ_r).	4.72135305405	914
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neq_pred_l	40	15.4.20.7	search with cache (only 1: intro; only 1: apply lt_gt_cases; only 1: rewrite lt_pred_le; only 1: intuition order).	32.6130809784	15126
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_m1_r	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_pred_r	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_pred_l	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_l	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_r	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_opp	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_comm	40	3.14.0	search with cache (only 1: intros n m; only 1: apply opp_inj; only 1: now rewrite mul_opp_l, mul_opp_r, opp_involutive).	1.87439680099	616
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_sub_distr_l	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_sub_distr_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_pred_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_pred_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_0_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_succ_l	40	4.5.3.0.2	search with cache (only 1: intro n; only 1: intro m; only 1: rewrite <- add_opp_r; only 1: rewrite <- add_opp_r; only 1: now nzsimpl).	10.4997360706	1974
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_pred_l	40	0.1.1.1.1	search with cache (only 1: intro n; only 1: intro m; only 1: rewrite <- 2!add_opp_r; only 1: rewrite <- (succ_pred n)  at 2; only 1: now rewrite add_succ_l, pred_succ).	0.266600847244	9
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_pred_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_pred	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_diag	40	0.0.5.0.0.1.14.1	search with cache (only 1: intro m; only 1: nzinduct m; only 1: rewrite <- add_opp_r; only 1: now nzsimpl; only 1: intro m; only 1: rewrite sub_succ_r; only 1: rewrite sub_succ_l; only 1: now rewrite pred_succ).	33.8247771263	6767
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_diag_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_diag_r	40	0.0.10.1.0.8.2	search with cache (only 1: intro m; only 1: nzinduct m; only 1: now nzsimpl; only 1: intro n; only 1: split; only 1: now rewrite add_comm, add_opp_r, sub_diag; only 1: now rewrite add_comm, add_opp_r, sub_diag).	4.75728487968	1823
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_l	40	8.1.4.4.1	search with cache (only 1: intro m; only 1: intro n; only 1: rewrite <- add_opp_r; only 1: rewrite add_comm; only 1: now nzsimpl).	39.3223459721	8865
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_sub_assoc	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_involutive	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_add_distr	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_sub_distr	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_inj	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_inj_wd	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.eq_opp_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.eq_opp_r	40	0.1	search with cache (only 1: intros n m; only 1: now rewrite <- (opp_inj_wd (- n) m), opp_involutive).	0.0688471794128	16
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add_distr	40	0.0.0.0	search with cache (only 1: intros n m p; only 1: rewrite <- 2!add_opp_r; only 1: rewrite <- add_opp_r, opp_add_distr; only 1: now rewrite add_assoc).	0.0601801872253	4
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_sub_distr	40	2.7.2.0	search with cache (only 1: intros n m p; only 1: rewrite <- 2!add_opp_r; only 1: rewrite <- add_opp_r, opp_add_distr, add_assoc; only 1: now rewrite opp_involutive).	4.86908817291	616
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_opp_l	40	8.0.0.0.0	search with cache (only 1: intro n; only 1: intro m; only 1: rewrite <- add_opp_r; only 1: rewrite <- add_opp_r; only 1: now rewrite add_comm).	3.80658507347	513
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_opp_r	40	0.0.0	search with cache (only 1: intros n m; only 1: rewrite <- add_opp_r; only 1: now rewrite opp_involutive).	0.0910830497742	3
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_sub_swap	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_cancel_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_cancel_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_0_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_0_r	40	4.17.0	search with cache (only 1: intros n m; only 1: rewrite add_comm; only 1: now rewrite add_move_l, sub_0_l).	13.8764600754	2395
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_0_l	40	5.0.0.1	search with cache (only 1: intro n; only 1: intro m; only 1: rewrite <- (add_opp_r n m); only 1: now rewrite add_move_l, sub_0_l).	0.132364988327	10
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_0_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_simpl_l	40	0.1	search with cache (only 1: intros n m; only 1: now rewrite add_comm, <- add_sub_assoc, sub_diag, add_0_r).	0.0379900932312	3
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_simpl_r	40	5.3.0	search with cache (only 1: intros; only 1: rewrite add_comm; only 1: now rewrite add_comm, <- add_sub_assoc, sub_diag, add_0_r).	0.409789085388	65
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_simpl_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_simpl_r	40	1.0.1.3	search with cache (only 1: nzinduct m; only 1: now nzsimpl; only 1: intro m; only 1: now do 2 rewrite <- sub_sub_distr, sub_diag, sub_0_r).	0.362835884094	31
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add	40	4.0	search with cache (only 1: intros; only 1: now rewrite <- sub_sub_distr, sub_diag, sub_0_r).	0.111496210098	6
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_l_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_l_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_r_l	40	3.9.0.4	search with cache (only 1: intro m; only 1: intros; only 1: rewrite add_comm; only 1: apply add_add_simpl_l_l).	24.1045589447	3740
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_r_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add_simpl_r_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add_simpl_r_r	40	0.17.0	search with cache (only 1: intros n m p; only 1: rewrite (add_comm p m); only 1: now rewrite <- sub_sub_distr, sub_add_distr, sub_diag, sub_0_l, sub_opp_r).	2.77688789368	783
Coq.Numbers.Integer.Abstract.ZBase.ZBaseProp.pred_inj	40
Coq.Numbers.Integer.Abstract.ZBase.ZBaseProp.pred_inj_wd	40	5.5.0.8.0.0.21.12	search with cache (only 1: intros n m; only 1: intuition; only 1: apply succ_wd in H; only 1: now rewrite 2!succ_pred in H; only 1: destruct (eq_decidable n m) as [H1| H1]; only 1: apply succ_wd in H; only 1: now f_equiv; only 1: tauto).	29.7189869881	14031
Coq.Numbers.Integer.Abstract.ZBase.ZBaseProp.succ_m1	40
Coq.Numbers.Integer.Binary.ZBinary.test	40	5.5	search with cache (only 1: intros a n Ha H; only 1: Z.order').	0.329885005951	81
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_add_opp	40	4.2	search with cache (only 1: intros m IH; only 1: tauto).	0.0732820034027	8
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.eq_equiv	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.pair_wd	40	1.0.0.0.11.9	search with cache (only 1: intros x x' Hx y y' Hy; only 1: unfold Reflexive, Z.eq; only 1: simpl in *; only 1: setoid_rewrite Hx; only 1: setoid_rewrite Hy; only 1: auto with *).	18.8153731823	4207
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.succ_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.pred_wd	40	0.12.2.0.1	search with cache (only 1: unfold Z.succ, Z.eq; only 1: intros n m H; only 1: simpl; only 1: nzsimpl; only 1: now rewrite H).	7.4555709362	2190
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.add_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.opp_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_comm	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.bi_induction	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.pred_succ	40	0.7.0.12.0.2	search with cache (only 1: unfold Z.pred, Z.eq; only 1: simpl; only 1: destruct n as [n m]; only 1: simpl; only 1: rewrite add_succ_r; only 1: now rewrite add_succ_l).	17.2601108551	6219
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.succ_pred	40	0.0.0.0	search with cache (only 1: unfold Z.pred, Z.succ, Z.eq; only 1: intro n; only 1: simpl; only 1: now nzsimpl).	0.338608980179	4
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.one_succ	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.two_succ	40	0.0.0	search with cache (only 1: unfold Z.eq; only 1: simpl; only 1: now nzsimpl').	0.194886922836	3
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.opp_0	40	0	search with cache (only 1: now do 2 f_equiv).	0.0992980003357	1
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.opp_succ	40	0.0.0.0	search with cache (only 1: unfold Z.pred, Z.succ, Z.eq; only 1: intro n; only 1: simpl; only 1: now nzsimpl).	0.352098941803	4
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.add_0_l	40	1.0.4.2	search with cache (only 1: intro n; only 1: unfold Z.zero, Z.succ, Z.eq in *; only 1: simpl; only 1: now nzsimpl).	0.89691400528	66
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.add_succ_l	40	0.5.0.1.0	search with cache (only 1: intro n; only 1: unfold Z.add, Z.eq; only 1: simpl; only 1: intro H1; only 1: now nzsimpl).	1.09140491486	98
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_0_r	40	0.0.1.1	search with cache (only 1: intro n; only 1: unfold Z.add, Z.eq; only 1: simpl; only 1: now nzsimpl).	0.214248895645	6
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_succ_r	40	0.0.0.6	search with cache (only 1: intros n m; only 1: unfold Z.sub, Z.eq; only 1: simpl; only 1: now nzsimpl).	0.990193843842	80
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_0_l	40	1.0.3.3	search with cache (only 1: unfold Z.mul, Z.eq; only 1: intro n; only 1: simpl; only 1: now nzsimpl).	0.461079120636	61
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_succ_l	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_eq_cases	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_irrefl	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_succ_r	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.min_l	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.min_r	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.max_l	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.max_r	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_nge	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_wd	40
Coq.Numbers.NatInt.NZDomain.nat_rect_wd	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.itersucc_or_itersucc	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.succ_swap_pred	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.itersucc_or_iterpred	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.itersucc0_or_iterpred0	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.initial_alt	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.initial_alt2	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.initial_unique	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.initial_ancestor	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.succ_pred_approx	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.succ_onto_gives_succ_pred	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.succ_onto_pred_injective	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.bi_induction_pred	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.central_induction_pred	40
Coq.Numbers.NatInt.NZDomain.NZOfNat.ofnat_zero	40	9	search with cache (only 1: solve_proper).	0.02205991745	10
Coq.Numbers.NatInt.NZDomain.NZOfNat.ofnat_succ	40	0	search with cache (only 1: reflexivity).	0.0228610038757	1
Coq.Numbers.NatInt.NZDomain.NZOfNat.ofnat_pred	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_S_gt_0	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_S_neq_0	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_injective	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_eq	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_lt	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_le	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_add_l	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_add	40	0.0.0.0.0.9.0.6.0	search with cache (only 1: induction n; only 1: unfold ofnat; only 1: intros; only 1: symmetry; only 1: apply add_0_l; only 1: intros; only 1: rewrite ofnat_succ, add_succ_l; only 1: simpl; only 1: now f_equiv).	8.10671710968	3065
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_mul	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_sub_r	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_sub	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mod_unique	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_unique	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_unique	40	0.0.0.1.0.0.1.0.4.0	search with cache (only 1: intros a b q r Ha (Hb, Hr) EQ; only 1: destruct (div_mod_unique b q (a / b) r (a mod b)); only 1: auto; only 1: apply mod_bound_pos; only 1: order; only 1: order; only 1: rewrite <- div_mod; only 1: order; only 1: order; only 1: auto).	3.0617878437	822
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_unique_exact	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_same	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_same	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_small	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_small	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_0_l	40	1.0.0.4.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique with 0; only 1: order; only 1: intuition; only 1: now nzsimpl).	1.94735097885	380
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_0_l	40	1.0.0.2.1.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply mod_unique with 0; only 1: order; only 1: intuition; only 1: now nzsimpl).	0.437721014023	55
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_1_r	40	1.0.2.2.6.1.3	search with cache (only 1: symmetry; only 1: apply div_unique with 0; only 1: trivial; only 1: intuition; only 1: rewrite succ_lt_mono, <- one_succ; only 1: apply lt_succ_diag_r; only 1: now nzsimpl).	3.33912396431	1535
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_1_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_1_l	40	6.1.2.0	search with cache (only 1: intros; only 1: apply div_small; only 1: intuition; only 1: apply lt_le_incl, lt_0_1).	1.36383199692	462
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_1_l	40	2.0.0.4.0	search with cache (only 1: intros; only 1: apply mod_small; only 1: split; only 1: apply le_0_1; only 1: order).	0.670026063919	225
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_mul	40	1.0.0.0.1.1.10.3	search with cache (only 1: symmetry; only 1: apply mod_unique with a; only 1: apply mul_nonneg_nonneg; only 1: trivial; only 1: order; only 1: now try split; only 1: nzsimpl; only 1: apply mul_comm).	10.4348330498	3901
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_le	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_pos	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_str_pos	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_small_iff	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_small_iff	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_str_pos_iff	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_lt	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_mono	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_div_le	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_succ_div_gt	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_exact	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_lt_upper_bound	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_upper_bound	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_lower_bound	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_compat_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_add	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_add	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_add_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul_cancel_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul_cancel_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_distr_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_distr_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_mod	40	2.1.5.1.13.1	search with cache (only 1: intros; only 1: apply mod_small; only 1: apply mod_bound_pos; only 1: order; only 1: rewrite <- (add_0_l 0); only 1: now nzsimpl).	35.4970669746	6135
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_idemp_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_idemp_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.add_mod_idemp_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.add_mod_idemp_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.add_mod	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_div	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_mul_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul_le	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_divides	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_wd	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_1_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_0_r	40	2.15.1	search with cache (only 1: unfold divide; only 1: exists 0; only 1: now nzsimpl).	1.38633394241	1217
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_0_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.eq_mul_1_nonneg	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.eq_mul_1_nonneg'	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_1_r_nonneg	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_refl	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_trans	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_antisym_nonneg	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_mono_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_mono_r	40	0.38.0.0	search with cache (only 1: intros n m p (q, Hq); only 1: exists q; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now rewrite mul_shuffle3, Hq).	29.3827109337	14520
Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_cancel_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_cancel_r	40	0.0.0.2.0.6.0	search with cache (only 1: intros n m p Hp; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: split; only 1: intros (q, Hq); only 1: exists q; only 1: now rewrite mul_shuffle3, mul_cancel_l in Hq; only 1: apply mul_divide_mono_l).	3.54071187973	729
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_add_r	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_mul_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_mul_r	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_factor_l	40	0.5.6.1	search with cache (only 1: intros; only 1: apply divide_mul_l; only 1: exists 1; only 1: now nzsimpl).	1.09087705612	235
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_factor_r	40	2.8.1	search with cache (only 1: intros; only 1: rewrite mul_comm; only 1: apply divide_mul_l, divide_refl).	0.733093976974	133
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_pos_le	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_unique	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_wd	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_divide_iff	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_unique_alt	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_comm	40	2.13.6.5.0.1.4	search with cache (only 1: intros; only 1: apply gcd_unique; only 1: apply gcd_nonneg; only 1: apply gcd_divide_r; only 1: apply gcd_divide_l; only 1: intros; only 1: now apply gcd_greatest).	18.4558138847	12492
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_assoc	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_0_l_nonneg	40	3.8.2.0.3.1.2	search with cache (only 1: intros; only 1: apply gcd_unique; only 1: trivial; only 1: exists 0; only 1: now nzsimpl; only 1: apply divide_refl; only 1: trivial).	5.3217549324	3089
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_0_r_nonneg	40	0.1.1.3.0.0	search with cache (only 1: intros; only 1: apply gcd_unique; only 1: trivial; only 1: apply divide_refl; only 1: apply divide_0_r; only 1: trivial).	0.410883903503	60
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_1_l	40	4.0.0.14.0.3.0	search with cache (only 1: intros; only 1: apply gcd_unique; only 1: apply lt_le_incl, lt_0_1; only 1: now nzsimpl; only 1: exists n; only 1: now nzsimpl; only 1: trivial).	12.8010981083	4773
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_1_r	40	0.2.0.0.0.0.0	search with cache (only 1: intros; only 1: apply gcd_unique; only 1: trivial using divide_1_l, le_0_1; only 1: exists n; only 1: now nzsimpl; only 1: trivial using divide_1_l, le_0_1; only 1: trivial using divide_1_l, le_0_1).	0.257307052612	12
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_diag_nonneg	40	0.1.1.3.1.0	search with cache (only 1: intros; only 1: apply gcd_unique; only 1: trivial; only 1: apply divide_refl; only 1: apply divide_refl; only 1: trivial).	0.463869094849	118
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_eq_0_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_eq_0_r	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_eq_0	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_mul_diag_l	40	5.7.1.3.1.0	search with cache (only 1: intros; only 1: apply gcd_unique; only 1: trivial; only 1: trivial using divide_refl; only 1: apply divide_mul_l, divide_refl; only 1: trivial).	14.2799079418	3180
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_gcd_iff	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_nonneg	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_unique	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_wd	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_spec_alt	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_unique'	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pred_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_1	40	6.0.1.0.0.6.12	search with cache (only 1: apply log2_unique; only 1: order_pos; only 1: nzsimpl; only 1: split; only 1: order; only 1: order'; only 1: order_pos).	14.6736650467	3706
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_2	40	2.0.1.6.4.2.4	search with cache (only 1: apply log2_unique' with 0; only 1: order'; only 1: split; only 1: order_pos; only 1: nzsimpl; only 1: order'; only 1: now nzsimpl).	3.70381999016	1052
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pos	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_null	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_le_mono	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_lt_cancel	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_le_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_lt_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_lt_lin	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_le_lin	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_mul_below	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_mul_above	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_mul_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_double	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_same	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_succ_le	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_succ_or	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_eq_succ_is_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_eq_succ_iff_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_succ_double	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_add_le	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.add_log2_lt	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eqn0	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eqn	40	0.0.0.0.1.0	search with cache (only 1: intros a Ha; only 1: unfold log2_up; only 1: case compare_spec; only 1: order; only 1: order; only 1: order).	0.16802406311	7
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_spec	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_nonpos	40	0.15.0.0.0.0	search with cache (only 1: intros a Ha; only 1: unfold log2_up; only 1: case compare_spec; only 1: order; only 1: order'; only 1: order).	10.6594388485	2384
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_wd	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_nonneg	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_unique	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_1	40	0.0.0.0.1	search with cache (only 1: unfold log2_up; only 1: case compare_spec; only 1: order; only 1: order; only 1: order).	0.119021892548	6
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.le_log2_log2_up	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.le_log2_up_succ_log2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_log2_up_spec	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_log2_up_exact	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_pos	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_null	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_le_mono	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_lt_cancel	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_lt_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_le_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_lt_lin	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_le_lin	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_mul_above	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_mul_below	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_mul_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_double	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_same	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_le	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_or	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eq_succ_is_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eq_succ_iff_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_double	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_add_le	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.add_log2_up_lt	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_pred	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_pos_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_pos_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_neg_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_neg_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonneg_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonpos_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonneg_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonpos_r	40	0.1.0.0.0.6.0.0.1.0.0	search with cache (only 1: intros n m p H1 H2; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: le_elim H1; only 1: le_elim H2; only 1: apply lt_le_incl; only 1: now apply mul_lt_mono_neg_l; only 1: apply eq_le_incl; only 1: now rewrite H2; only 1: apply eq_le_incl; only 1: rewrite H1; only 1: now do 2 rewrite mul_0_l).	19.9243779182	4219
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_cancel_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_cancel_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_id_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_id_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_pos_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_pos_r	40	1.0.0.4.0	search with cache (only 1: intros n m p H; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: do 2 rewrite lt_eq_cases; only 1: rewrite (mul_lt_mono_pos_l p n m) by assumption; only 1: now rewrite (mul_cancel_l n m p) by (intro H1; rewrite H1 in H; false_hyp H lt_irrefl)).	0.227010965347	25
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_neg_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_neg_r	40	3.1.0.1.2.0.0	search with cache (only 1: intros n m p H; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: do 2 rewrite lt_eq_cases; only 1: rewrite (mul_lt_mono_neg_l p n m); only 1: rewrite (mul_cancel_l m n p) by (intro H1; rewrite H1 in H; false_hyp H lt_irrefl); only 1: now setoid_replace n == m with m == n by split; now intro; only 1: trivial).	1.8703660965	429
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_pos	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_neg_neg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_neg	40	2.7.7	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (mul_0_l m); only 1: now apply mul_lt_mono_neg_r).	0.93727016449	343
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_neg_pos	40	1.7.7	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (mul_0_l m); only 1: now apply mul_lt_mono_pos_r).	0.728615999222	288
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_cancel_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_cancel_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_cancel_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_cancel_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.lt_1_mul_pos	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_mul_0	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.neq_mul_0	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_square_0	40	6.2.0.15.3.6.4	search with cache (only 1: intros; only 1: split; only 1: intro H1; only 1: apply eq_mul_0 in H1; only 1: tauto; only 1: intro H; only 1: now rewrite H, mul_0_l).	32.2643170357	16255
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_mul_0_l	40	0.9.2.2	search with cache (only 1: intros n m; only 1: intro H1; only 1: apply eq_mul_0 in H1; only 1: tauto).	2.60704493523	1197
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_mul_0_r	40	0.9.2	search with cache (only 1: intros n m H1 H2; only 1: apply eq_mul_0 in H1; only 1: tauto).	1.85392594337	467
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.lt_0_mul	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_lt_mono_nonneg	40	0.4	search with cache (only 1: intros; only 1: now apply mul_lt_mono_nonneg).	0.175204992294	12
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_le_mono_nonneg	40	0.2.0.0.2.6	search with cache (only 1: intros n m H1 H2; only 1: le_elim H2; only 1: apply lt_le_incl; only 1: now apply mul_lt_mono_nonneg; only 1: rewrite H2; only 1: now apply eq_le_incl).	2.02337908745	560
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_lt_simpl_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_le_simpl_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_2_mono_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.add_le_mul	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.crossmul_le_addsquare	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.add_square_le	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_add_le	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.quadmul_le_squareadd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_wd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Odd_wd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_wd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_wd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_or_Odd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.double_below	40
Coq.Numbers.NatInt.NZParity.NZParityProp.double_above	40	0.0.0.0.0.0	search with cache (only 1: intros n m; only 1: rewrite <- le_succ_l, (mul_le_mono_pos_l (S n) m 2); only 1: rewrite two_succ; only 1: nzsimpl; only 1: now rewrite le_succ_l; only 1: order').	0.433020114899	6
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_Odd_False	40
Coq.Numbers.NatInt.NZParity.NZParityProp.orb_even_odd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.negb_odd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.negb_even	40	0.0.0.0.0.0.0.0.0.0.2.0	search with cache (only 1: intros; only 1: generalize (Even_or_Odd n), (Even_Odd_False n); only 1: rewrite <- even_spec, <- odd_spec; only 1: destruct (odd n), (even n); only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).	13.9623839855	1257
Coq.Numbers.NatInt.NZParity.NZParityProp.even_0	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_0	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_1	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_1	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_2	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_2	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Odd_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_succ	40	0.0.0.0.0	search with cache (only 1: split; only 1: rewrite <- even_spec, <- odd_spec; only 1: now rewrite <- negb_odd, odd_succ, negb_even; only 1: rewrite <- even_spec, <- odd_spec; only 1: now rewrite <- negb_odd, odd_succ, negb_even).	0.138715028763	5
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_succ_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Odd_succ_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_succ_succ	40	0.13.0	search with cache (only 1: intros; only 1: rewrite eq_iff_eq_true, 2!even_spec; only 1: now rewrite Even_succ, Odd_succ).	4.93807888031	602
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_succ_succ	40	0.15.0	search with cache (only 1: intros; only 1: rewrite eq_iff_eq_true, 2!odd_spec; only 1: now rewrite Odd_succ, Even_succ).	4.26491498947	1269
Coq.Numbers.NatInt.NZParity.NZParityProp.even_add	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_mul	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_mul	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_even	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add_even	40	0.0.1.0.2	search with cache (only 1: intros n m Hm; only 1: rewrite <- !negb_even; only 1: apply even_spec in Hm; only 1: rewrite even_add; only 1: now destruct (even n), (even m)).	0.823500871658	53
Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_mul_even	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add_mul_even	40	0.1.1.0.2.2	search with cache (only 1: intros n m p Hm; only 1: rewrite <- !negb_even; only 1: apply even_spec in Hm; only 1: rewrite even_add; only 1: rewrite even_mul; only 1: now destruct (even n), (even m)).	1.92807507515	286
Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_mul_2	40	0.2.0.1	search with cache (only 1: intros; only 1: apply even_add_even; only 1: exists m; only 1: now f_equiv).	0.0566129684448	7
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add_mul_2	40	0.2.1.1	search with cache (only 1: intros; only 1: apply odd_add_even; only 1: exists m; only 1: now f_equiv).	0.0555260181427	8
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_0_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_0_l'	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_1_r	40	0.31.15	search with cache (only 1: intro n; only 1: rewrite one_succ; only 1: now nzsimpl).	2.56184577942	2019
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_1_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_2_r	40	0.10.2.13.14	search with cache (only 1: intro n; only 1: rewrite two_succ; only 1: nzsimpl; only 1: now f_equiv; only 1: apply lt_le_incl, lt_0_1).	16.6626410484	4184
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_eq_0	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_nonzero	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_eq_0_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_add_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_mul_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_mul_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_nonneg	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_pos_nonneg	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_gt_1	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_inj_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_inj_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_l_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_l_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_r_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_r_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_gt_lin_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_add_lower	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_add_upper	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_spec_nonneg	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_nonneg	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_unique	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_wd	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_spec_alt	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_unique'	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_pred_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_le_mono	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_lt_cancel	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_le_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_lt_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_0	40	1.5.0.5.6.1	search with cache (only 1: apply sqrt_unique' with 0; only 1: split; only 1: solve_proper; only 1: nzsimpl; only 1: solve_proper; only 1: now nzsimpl).	2.27953481674	843
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_1	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_2	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_pos	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_lt_lin	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_le_lin	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_mul_below	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_mul_above	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_succ_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_succ_or	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_eq_succ_iff_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_add_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.add_sqrt_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_eqn0	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_eqn	40	0.0.0.0.1.0	search with cache (only 1: intros a Ha; only 1: unfold sqrt_up; only 1: case compare_spec; only 1: order; only 1: order; only 1: order).	0.174234867096	7
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_spec	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_nonneg	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_wd	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_unique	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_succ_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_0	40	5.0.0.0.2	search with cache (only 1: unfold sqrt_up; only 1: case compare_spec; only 1: tauto; only 1: order; only 1: reflexivity).	0.844349145889	153
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_1	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_2	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.le_sqrt_sqrt_up	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.le_sqrt_up_succ_sqrt	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_sqrt_up_spec	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_sqrt_up_exact	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_mono	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_lt_cancel	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_lt_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_pos	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_lt_lin	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_lin	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_mul_above	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_mul_below	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_succ_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_succ_or	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_eq_succ_iff_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_add_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.add_sqrt_up_le	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_mono_l	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_mono_r	40	0.0.0.0.2.0	search with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite <- succ_lt_mono).	0.388027191162	8
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_mono	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_mono_l	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_mono_r	40	0.0.0.0.2.0	search with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite <- succ_le_mono).	0.395037889481	8
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_mono	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_le_mono	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_lt_mono	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_pos_pos	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_pos_nonneg	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonneg_pos	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonneg_nonneg	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_add_pos_l	40	0.0.0.0.3.13.5.10	search with cache (only 1: intro; only 1: intro p; only 1: nzinduct p; only 1: rewrite <- (add_0_l 0); only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite <- succ_lt_mono).	18.0829689503	5524
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_add_pos_r	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_lt_add_lt	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_le_add_lt	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_le_add_le	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_cases	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_cases	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_neg_cases	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_pos_cases	40	1.0.0	search with cache (only 1: intros n m H; only 1: apply add_lt_cases; only 1: now nzsimpl).	0.150010108948	4
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonpos_cases	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonneg_cases	40	1.0.0	search with cache (only 1: intros n m H; only 1: apply add_le_cases; only 1: now nzsimpl).	0.158144950867	4
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_exists_sub	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_0_r	40	1.1.0.0.1	search with cache (only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now nzsimpl).	0.251996994019	8
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_succ_r	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_comm	40	0.0.0.0.2.1	search with cache (only 1: intros; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro n; only 1: nzsimpl; only 1: now rewrite add_cancel_r).	0.621451854706	36
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_add_distr_r	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_add_distr_l	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_assoc	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_1_l	40	9.0	search with cache (only 1: intro n; only 1: now nzsimpl').	0.785598993301	72
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_1_r	40	0.0	search with cache (only 1: intro n; only 1: now nzsimpl').	0.0656080245972	2
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle0	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle1	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle2	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle3	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_wd	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_le_incl	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_refl	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_succ_diag_r	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_diag_r	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.neq_succ_diag_l	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.neq_succ_diag_r	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nlt_succ_diag_l	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nle_succ_diag_l	40	6.4.2.4.0	search with cache (only 1: intro; only 1: intro; only 1: apply (lt_irrefl (S n)); only 1: rewrite lt_succ_r; only 1: tauto).	8.86844778061	1505
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_l	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_gt_cases	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_trichotomy	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_asymm	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_trans	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_trans	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_strorder	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_preorder	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_partialorder	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_neq	40	3.2.0.6	search with cache (only 1: intros n H; only 1: intros LT EQ; only 1: rewrite EQ in LT; only 1: false_hyp LT lt_irrefl).	1.83426713943	670
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_neq	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.eq_le_incl	40	2	search with cache (only 1: intuition order).	0.0573289394379	25
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_stepl	40	0.1	search with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.218183994293	34
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_stepr	40	1.1	search with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.567689180374	44
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_stepl	40	0.4.0	search with cache (only 1: intros x y z; only 1: rewrite 2!lt_eq_cases; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.189853906631	13
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_stepr	40	0.4.0	search with cache (only 1: intros x y z; only 1: rewrite 2!lt_eq_cases; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.145380020142	13
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_lt_trans	40	7	search with cache (only 1: intuition order).	0.205207109451	87
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_le_trans	40	7.1	search with cache (only 1: intro n; only 1: order).	0.159359931946	51
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_antisymm	40	2	search with cache (only 1: order).	0.134270906448	34
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_r	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_succ_l	40	1.17.4.2	search with cache (only 1: intros n H; only 1: intro m; only 1: apply le_succ_l; only 1: now apply lt_le_incl).	3.31641292572	4874
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_le_succ_r	40	3.6.2.7	search with cache (only 1: intro H; only 1: intros n m; only 1: apply lt_le_incl; only 1: now rewrite lt_succ_r).	23.3909769058	7500
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_lt_succ_r	40	3.11.0.1	search with cache (only 1: intro m; only 1: intro n; only 1: rewrite lt_succ_r; only 1: now apply lt_le_incl).	3.59746384621	1727
Coq.Numbers.NatInt.NZOrder.NZOrderProp.succ_lt_mono	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.succ_le_mono	40	4.3.0.1.0.0	search with cache (only 1: intro n; only 1: intro m; only 1: symmetry; only 1: rewrite lt_eq_cases; only 1: rewrite lt_succ_r, le_succ_l, !lt_eq_cases; only 1: now rewrite succ_inj_wd).	8.70972108841	1546
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_0_1	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_0_1	40	0.23.0	search with cache (only 1: rewrite one_succ; only 1: apply lt_le_incl; only 1: apply lt_succ_diag_r).	1.03243994713	580
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_1_2	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_0_2	40	0.29.0	search with cache (only 1: rewrite two_succ; only 1: rewrite lt_succ_r; only 1: apply lt_le_incl, lt_0_1).	2.23685097694	1327
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_0_2	40	0.24.1.0.1	search with cache (only 1: transitivity 1; only 1: apply lt_le_incl, lt_0_1; only 1: rewrite two_succ; only 1: apply lt_le_incl; only 1: apply lt_succ_diag_r).	8.10050916672	4777
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_1_l	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_ge_cases	40	2.0.1.1.1	search with cache (only 1: intros n m; only 1: rewrite lt_eq_cases; only 1: generalize (le_gt_cases n m); only 1: rewrite lt_eq_cases; only 1: intuition).	0.276455879211	21
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_ge_cases	40	0.0.1.0.2.1	search with cache (only 1: intros n m; only 1: rewrite lt_eq_cases; only 1: rewrite lt_eq_cases; only 1: generalize (le_gt_cases n m); only 1: rewrite lt_eq_cases; only 1: tauto).	0.24601817131	19
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_gt_cases	40	5.6.0	search with cache (only 1: intros; only 1: generalize (le_gt_cases n m); only 1: intuition order).	3.48324608803	484
Coq.Numbers.NatInt.NZOrder.NZOrderProp.eq_decidable	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.eq_dne	40	0.0.0.1.0.0.0.0	search with cache (only 1: intros; only 1: destruct (lt_trichotomy n m); only 1: destruct (lt_trichotomy n m); only 1: destruct (lt_trichotomy n m); only 1: intuition order; only 1: intuition order; only 1: intuition order; only 1: intuition order).	0.605725049973	35
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_ngt	40	7.0	search with cache (only 1: intro n; only 1: intuition order).	0.124662876129	39
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nlt_ge	40	0	search with cache (only 1: intuition order).	0.0627250671387	1
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_decidable	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_dne	40	0.0.0.1.0.0.0.1	search with cache (only 1: intros n m; only 1: destruct (lt_trichotomy n m); only 1: destruct (lt_trichotomy n m); only 1: destruct (lt_trichotomy n m); only 1: intuition order; only 1: intuition order; only 1: intuition order; only 1: intuition order).	0.819114208221	25
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nle_gt	40	0	search with cache (only 1: intuition order).	0.0299861431122	1
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_nge	40	0	search with cache (only 1: intuition order).	0.0309278964996	1
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_decidable	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_dne	40	0.0.1.1.1	search with cache (only 1: intros n m; only 1: rewrite lt_eq_cases; only 1: destruct (lt_trichotomy n m); only 1: intuition order; only 1: intuition order).	0.202977180481	8
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nlt_succ_r	40	7.0.5.2	search with cache (only 1: intro m; only 1: symmetry; only 1: rewrite <- le_succ_l; only 1: intuition order).	7.95093488693	3356
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_exists_pred_strong	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_exists_pred	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_succ_pred	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.rs_rs'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.rs'_rs''	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.rbase	40	39.11	search with cache (only 1: intros RS' n; only 1: order).	2.9472899437	3992
Coq.Numbers.NatInt.NZOrder.NZOrderProp.A'A_right	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.strong_right_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.right_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.right_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.strong_right_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.ls_ls'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.ls'_ls''	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lbase	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.A'A_left	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.strong_left_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.left_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.left_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.strong_left_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.order_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.order_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_ind	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_ind	40	3	search with cache (only 1: apply right_induction).	0.0552020072937	4
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Rlt_wd	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Rgt_wd	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_wf	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.gt_wf	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_0_r	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_succ_r	40	0.1.0.0.2.3.2.0	search with cache (only 1: intro; only 1: intro; only 1: nzinduct n; only 1: nzsimpl; only 1: now rewrite succ_inj_wd; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	3.35158801079	895
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_succ_comm	40	0.0.0.0.1.0.0	search with cache (only 1: intros n m; only 1: nzsimpl; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.15597319603	8
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_comm	40	0.0.0.0.2.0	search with cache (only 1: intros n m; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.174129962921	8
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_1_l	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_1_r	40	0.0	search with cache (only 1: intro n; only 1: now nzsimpl').	0.0538549423218	2
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_assoc	40	0.0.0.0.2.4.1	search with cache (only 1: intros n m; only 1: intro; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	3.12079405785	535
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_cancel_l	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_cancel_r	40	0.0.0.0.1.0	search with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.0999121665955	7
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle0	40	0.0.0.0.4.0	search with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.163753986359	19
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle1	40	0.0.0.0.3.5.4.0	search with cache (only 1: intros n m p; only 1: intro; only 1: nzinduct p; only 1: rewrite <- 2!add_assoc, add_cancel_l; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	21.64529109	3967
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle2	40	0.0.0.2.6.7.0	search with cache (only 1: intros n m p q; only 1: nzinduct p; only 1: nzsimpl; only 1: apply add_shuffle0; only 1: intro p; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	12.4102900028	3067
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle3	40	0.0.0.0.3.1	search with cache (only 1: intros n m p; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.131315946579	10
Coq.Numbers.NatInt.NZAdd.NZAddProp.sub_1_r	40	1.1	search with cache (only 1: intro n; only 1: now nzsimpl').	0.0875270366669	4
Coq.Numbers.NatInt.NZBase.NZBaseProp.eq_sym_iff	40	3	search with cache (only 1: simpl_relation).	0.0231499671936	4
Coq.Numbers.NatInt.NZBase.NZBaseProp.neq_sym	40	5.0	search with cache (only 1: intros; only 1: simpl_relation).	0.0597999095917	7
Coq.Numbers.NatInt.NZBase.NZBaseProp.eq_stepl	40
Coq.Numbers.NatInt.NZBase.NZBaseProp.succ_inj	40
Coq.Numbers.NatInt.NZBase.NZBaseProp.succ_inj_wd	40
Coq.Numbers.NatInt.NZBase.NZBaseProp.succ_inj_wd_neg	40
Coq.Numbers.NatInt.NZBase.NZBaseProp.central_induction	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.if_zero_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.if_zero_0	40	2.0.0.0	search with cache (only 1: intros; only 1: unfold if_zero; only 1: rewrite recursion_0; only 1: auto).	0.128201961517	6
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.if_zero_succ	40	0.3.1.2.0.0	search with cache (only 1: unfold if_zero; only 1: intros; only 1: rewrite recursion_succ; only 1: f_equiv'; only 1: auto; only 1: f_equiv').	0.764542818069	179
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_0_l	40	2.1.1.0	search with cache (only 1: unfold def_add; only 1: intros; only 1: rewrite recursion_0; only 1: auto with *).	0.126923084259	8
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_succ_l	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_add	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_0_r	40	1.3.0	search with cache (only 1: unfold def_mul; only 1: intro y; only 1: now rewrite recursion_0).	0.0955770015717	7
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_succ_r	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_mul	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_base	40	0.2.1.1.1	search with cache (only 1: unfold if_zero; only 1: unfold ltb; only 1: intros; only 1: rewrite recursion_0; only 1: f_equiv').	1.16235589981	10
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_step	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_0	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_0_succ	40	9.7.6.0	search with cache (only 1: intro n; only 1: rewrite ltb_base; only 1: unfold if_zero; only 1: now rewrite recursion_succ).	7.65880393982	3879
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.succ_ltb_mono	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_lt	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_ge	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.even_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.even_0	40	1.18	search with cache (only 1: unfold even; only 1: now rewrite recursion_0).	0.511486053467	187
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.even_succ	40	6.0.3	search with cache (only 1: intro n; only 1: unfold even; only 1: now rewrite recursion_succ).	0.79247379303	101
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_0	40	5.3	search with cache (only 1: compute in *; only 1: now rewrite recursion_0).	1.22172403336	39
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_succ	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_spec	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_spec2	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_0	40	6.0.0	search with cache (only 1: unfold half; only 1: rewrite half_aux_0; only 1: f_equiv').	0.141794919968	27
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_1	40	6.0.0.1.0.5	search with cache (only 1: rewrite one_succ; only 1: unfold half; only 1: rewrite half_aux_succ; only 1: simpl; only 1: rewrite half_aux_0; only 1: f_equiv').	3.93196296692	877
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_double	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_upper_bound	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_lower_bound	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_nz	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_decrease	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow_0	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow_succ	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_prewd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_good_step	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_init	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_step	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow2_log	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow_sub_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow_div_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_proper	40	8.4	search with cache (only 1: intros a a' Ha; only 1: now rewrite ?Ha).	3.27330207825	780
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.exists_div2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_0_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_succ_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_spec'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_spec	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_true	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_false	40	0.0.1.0.0.0.0.2.0.0.0	search with cache (only 1: intros a n; only 1: rewrite <- testbit_spec'; only 1: destruct a.[n]; only 1: simpl; only 1: split; only 1: now try order'; only 1: now try order'; only 1: split; only 1: simpl; only 1: now try order'; only 1: split).	6.22381591797	1087
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_inj	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_b2n_double_div2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_b2n_double_bit0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_div2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_bit0	40	0.0.0.0.19	search with cache (only 1: intros a0; only 1: apply b2n_inj; only 1: rewrite testbit_spec'; only 1: nzsimpl; only 1: now rewrite mod_small by (destruct a0; order')).	0.974359035492	294
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_unique	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_0	40	0.0.4.1.0.3.7	search with cache (only 1: intros a0; only 1: apply b2n_inj; only 1: rewrite testbit_spec'; only 1: nzsimpl; only 1: now nzsimpl; only 1: order'; only 1: order_nz).	1.47685098648	479
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit0_odd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit0_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit0_mod	40	0.0.0.1.1.0.0.1.0	search with cache (only 1: intros a; only 1: destruct (exists_div2 a) as (a', (b, H)); only 1: rewrite H  at 1; only 1: rewrite testbit_0_r; only 1: apply mod_unique with a'; only 1: destruct b; only 1: order'; only 1: order'; only 1: trivial).	0.864519119263	154
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_odd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit_log2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_above_log2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_bits	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div_pow2_bits	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.double_bits_succ	40	0.0	search with cache (only 1: intros; only 1: apply testbit_even_succ, le_0_l).	0.0268979072571	2
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mul_pow2_bits_add	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mul_pow2_bits_high	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mul_pow2_bits_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mod_pow2_bits_high	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mod_pow2_bits_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.eqf_equiv	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_eqf	40	2.0.0.7.2.0.3	search with cache (only 1: repeat red; only 1: intros a Ha; only 1: revert a; only 1: intros; only 1: apply b2n_inj; only 1: rewrite H  at 1; only 1: order').	23.2391219139	5778
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_inj_0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_inj	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_inj_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.are_bits	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_spec'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_spec_high'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_div_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_mul_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_spec_alt	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_shiftl	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_shiftr	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_shiftl_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_shiftl_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_1_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_0_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_0_r	40	0.1.3.0	search with cache (only 1: intros; only 1: bitwise; only 1: rewrite shiftr_spec'; only 1: now nzsimpl).	0.15752196312	8
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_0_l	40	20.4.0	search with cache (only 1: intros; only 1: rewrite shiftl_mul_pow2; only 1: now nzsimpl).	14.1421759129	3838
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_0_l	40	0.10.0.3.0	search with cache (only 1: intros; only 1: rewrite shiftr_div_pow2; only 1: nzsimpl; only 1: order_nz; only 1: order_nz).	6.37781000137	1665
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_eq_0	40	0.2.0.3.0.1	search with cache (only 1: intros; only 1: rewrite shiftr_div_pow2, div_small_iff by order_nz; only 1: apply log2_lt_cancel; only 1: rewrite log2_pow2; only 1: trivial; only 1: trivial using le_0_l).	4.5692460537	684
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_div	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_odd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_wd	40	0.2.1	search with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.106420040131	18
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_wd	40	0.2.1	search with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.200836896896	18
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_wd	40	0.2.1	search with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.198715925217	18
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_eq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_nilpotent	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_0_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_0_r	40	0.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_l).	0.0815279483795	3
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_comm	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_assoc	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_0_l	40	7.0.2	search with cache (only 1: intro n; only 1: bitwise; only 1: trivial).	0.886671066284	104
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_0_r	40	2.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_r).	0.0878050327301	5
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_comm	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_assoc	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_diag	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_eq_0_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_0_l	40	1.2.1.0.9	search with cache (only 1: intros n; only 1: bitwise; only 1: destruct (zero_or_succ m) as [Hm| (m', Hm)]; only 1: trivial; only 1: trivial).	1.30047702789	300
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_0_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_comm	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_assoc	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_diag	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_0_l	40	1.0.8	search with cache (only 1: intros; only 1: bitwise; only 1: trivial).	0.188207864761	38
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_0_r	40	5.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply andb_comm).	0.126126050949	8
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_diag	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_land_distr_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_land_distr_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lor_distr_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lor_distr_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ldiff_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_ldiff_and	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_ldiff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_spec'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_spec'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_wd	40	0.0.4.1	search with cache (only 1: intros a a' Ha b b' Hb; only 1: unfold setbit; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.404492855072	37
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_wd	40	0.0.4.2	search with cache (only 1: intros a a' Ha b b' Hb; only 1: unfold clearbit; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.507122993469	30
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_true	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_false	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_eq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_neq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_eq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_neq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_lxor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_lxor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_land	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_land	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_lor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_lor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_ldiff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_ldiff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_equiv	40	0.1.36	search with cache (only 1: unfold ones; only 1: intros; only 1: now rewrite shiftl_mul_pow2, mul_1_l).	8.17949604988	4385
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_add	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_div_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_mod_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_spec_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_spec_high	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_spec_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_spec_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_spec_high	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_involutive	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_0_l	40	0.3.9.2	search with cache (only 1: intros; only 1: unfold lnot; only 1: bitwise; only 1: apply xorb_false_r).	5.64936614037	1358
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_ones	40	0.0.0.0.0.1.0	search with cache (only 1: intros; only 1: bitwise; only 1: destruct (le_gt_cases n m); only 1: unfold lnot; only 1: now rewrite lxor_spec, ones_spec_high, xorb_false_r; only 1: unfold lnot; only 1: now rewrite lxor_spec, ones_spec_low).	0.157598972321	19
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_ones_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_ones	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_ones_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ones_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ones_r_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ones_l_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_lnot_diag	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_lnot_diag_low	40	1.1.1.0.0.0.1.0.0.2.0.0	search with cache (only 1: intros a n H; only 1: bitwise; only 1: destruct (le_gt_cases n m); only 1: rewrite ones_spec_high, lnot_spec_high, bits_above_log2; only 1: trivial; only 1: now apply lt_le_trans with n; only 1: trivial; only 1: trivial; only 1: rewrite lnot_spec_low, ones_spec_low; only 1: now destruct a.[m]; only 1: trivial; only 1: trivial).	12.42999506	4068
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lnot_diag	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lnot_diag_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_lor_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_land_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_land_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_ldiff_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_lnot_lnot	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_lxor_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_lxor_r	40	0.0.1.13	search with cache (only 1: unfold lnot; only 1: intros; only 1: bitwise; only 1: apply xorb_assoc_reverse).	13.9397149086	4186
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_lor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_bits_unique	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_shiftr	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_shiftl	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_lor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_land	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_lxor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_bit0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add3_bit0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add3_bits_div2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_carry_div2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_carry_bits	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_bit1	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.nocarry_equiv	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_nocarry_lxor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_le	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.sub_nocarry_ldiff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_lnot_diag_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_sub_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_nocarry_lt_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_nocarry_mod_lt_pow2	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.mod_divide	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_div_mul_exact	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_div_factor	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_div_gcd	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_mod	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_wd	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_equiv1	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_equiv2	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_div_swap	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_l	40	7.3.10	search with cache (only 1: intros n; only 1: intros; only 1: now apply divide_mul_l).	2.55482697487	1572
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_r	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_div	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_least	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_comm	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_divide_iff	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_unique	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_unique_alt	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_assoc	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_0_l	40	0.7.3	search with cache (only 1: intros; only 1: unfold lcm; only 1: now nzsimpl).	0.65874505043	142
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_0_r	40	5.21.2.0	search with cache (only 1: intros; only 1: apply divide_antisym; only 1: apply divide_0_r; only 1: apply divide_lcm_r).	4.52246499062	2799
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_1_l	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_1_r	40	1.3.1.1.4.3.1.6.3.0	search with cache (only 1: intros; only 1: apply lcm_unique_alt; only 1: trivial using divide_1_l, le_0_l, divide_refl; only 1: intros; only 1: split; only 1: split; only 1: trivial; only 1: trivial using divide_1_l, le_0_1; only 1: intros (U, V); only 1: trivial using divide_1_l, le_0_1).	11.1271760464	6356
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_diag	40	3.6.4.0	search with cache (only 1: intros; only 1: apply divide_antisym; only 1: now apply lcm_least; only 1: trivial using divide_lcm_l).	0.663327932358	524
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_eq_0	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_eq_r	40	6.3.1.2	search with cache (only 1: intros; only 1: apply divide_antisym; only 1: now apply lcm_least; only 1: apply divide_lcm_r).	1.92451810837	682
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_iff	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_mul_mono_l	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_mul_mono_r	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_1_lcm_mul	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_succ_r'	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_0_l	40	0.1.1.0.0	search with cache (only 1: intros a Ha; only 1: destruct (lt_trichotomy a 0) as [LT| [EQ| GT]]; only 1: now rewrite pow_neg_r; only 1: order; only 1: now apply pow_0_l).	0.131363868713	7
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_1_l	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_mul_l	40	1.1.1.2.1.0.0.0.0.0.0.0.0.6.0	search with cache (only 1: intros a b c; only 1: destruct (lt_ge_cases c 0) as [Hc| Hc]; only 1: rewrite !(pow_neg_r _ _ Hc); only 1: now nzsimpl; only 1: apply le_ind with (4 := Hc); only 1: solve_proper; only 1: now nzsimpl; only 1: clear c Hc; only 1: intros c Hc IH; only 1: nzsimpl; only 1: rewrite IH; only 1: apply mul_shuffle1; only 1: trivial; only 1: trivial; only 1: trivial).	14.4684860706	3371
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_mul_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_eq_0	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_nonzero	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_l	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_l	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_gt_1	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono	40	3.1.3.3.1.0.3	search with cache (only 1: intros; only 1: transitivity (a ^ d); only 1: apply Private_NZPow.pow_le_mono_r; only 1: intuition order; only 1: intuition order; only 1: apply Private_NZPow.pow_le_mono_l; only 1: intuition order).	20.9909830093	5141
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_inj_l	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_inj_r	40	0.1.0.0.2.4.5	search with cache (only 1: intros; only 1: destruct (lt_trichotomy b c) as [LT| [EQ'| GT]]; only 1: assert (a ^ b < a ^ c) by (apply Private_NZPow.pow_lt_mono_r; try split; trivial); only 1: order; only 1: trivial; only 1: assert (a ^ c < a ^ b) by (apply Private_NZPow.pow_lt_mono_r; try split; trivial); only 1: order).	1.19347500801	574
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_l_iff	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_l_iff	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_r_iff	40	2.0.5.5.1.5	search with cache (only 1: split; only 1: now apply Private_NZPow.pow_lt_mono_r; only 1: destruct (le_gt_cases c b) as [LE| GT]; only 1: assert (a ^ c <= a ^ b) by (apply Private_NZPow.pow_le_mono_r; order'); only 1: order; only 1: trivial).	26.6284070015	6577
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_r_iff	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_gt_lin_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_lower	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_upper	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.even_pow	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.odd_pow	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_upper_bound	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_eq	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mod_unique	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_unique	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_unique	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_unique_exact	40	0.3.11.1.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_unique with 0; only 1: auto'; only 1: nzsimpl; only 1: order).	3.27991199493	1168
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_same	40	2.1.0.5.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique_exact; only 1: auto'; only 1: now nzsimpl).	0.946118831635	111
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_same	40	1.0.33.1.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 1; only 1: auto'; only 1: now nzsimpl).	28.9161529541	15149
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_small	40	12.7.1	search with cache (only 1: intros; only 1: apply div_small; only 1: auto').	12.552975893	4163
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_small	40	0.1.1	search with cache (only 1: intros; only 1: apply mod_small; only 1: auto').	0.072872877121	5
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_0_l	40	0.2.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: auto').	0.117713928223	5
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_0_l	40	0.1.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: auto').	0.104142904282	4
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_1_r	40	2.4.0.1.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique_exact; only 1: order'; only 1: now nzsimpl).	0.782984972	155
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_1_r	40	1.9.1.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: apply lt_0_1; only 1: now nzsimpl).	3.4049179554	1380
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_1_l	40	1	search with cache (only 1: apply Private_NZDiv.div_small).	0.25017786026	27
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_1_l	40	1	search with cache (only 1: apply Private_NZDiv.mod_small).	0.271780014038	25
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul	40	11.2.0.2.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique_exact; only 1: auto'; only 1: apply mul_comm).	5.01088690758	1374
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_mul	40	1.0.16.0	search with cache (only 1: intros; only 1: apply mod_mul; only 1: auto'; only 1: auto').	14.2702858448	5954
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_le	40	1.0.20.0	search with cache (only 1: intros; only 1: apply mod_le; only 1: auto'; only 1: auto').	2.73205399513	1237
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_str_pos	40	0.9.0	search with cache (only 1: intros a b (Hb, Hab); only 1: apply div_str_pos; only 1: auto).	1.20710897446	149
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_small_iff	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_small_iff	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_str_pos_iff	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_lt	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_mono	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_div_le	40	1.0.10.0	search with cache (only 1: intros; only 1: apply mul_div_le; only 1: auto'; only 1: auto').	0.828714132309	255
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_succ_div_gt	40	1.0.2.2.0.0.0	search with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite mul_succ_r; only 1: rewrite <- add_lt_mono_l; only 1: apply mod_bound_pos; only 1: auto'; only 1: auto').	0.823756933212	164
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_exact	40	0.0.0.0	search with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite <- (add_0_r (b * (a / b)))  at 2; only 1: apply add_cancel_l).	0.145250082016	4
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_lt_upper_bound	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_upper_bound	40	0.0.14.0.0.1.0	search with cache (only 1: intros; only 1: rewrite <- (Private_NZDiv.div_mul q b); only 1: apply Private_NZDiv.div_le_mono; only 1: auto'; only 1: rewrite mul_comm; only 1: auto'; only 1: auto').	17.5024209023	6254
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_lower_bound	40	0.0.15.0.1.2.0	search with cache (only 1: intros; only 1: rewrite <- (Private_NZDiv.div_mul q b); only 1: apply Private_NZDiv.div_le_mono; only 1: auto'; only 1: rewrite mul_comm; only 1: auto'; only 1: auto').	23.0552990437	8697
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_compat_l	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_add	40	3.0.0.0.9.0.1.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with (a / c + b); only 1: apply mod_bound_pos; only 1: auto'; only 1: auto'; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	9.7485909462	3006
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_add	40	5.0.0.0.0.0.0	search with cache (only 1: intros; only 1: apply (mul_cancel_l _ _ c); only 1: auto'; only 1: apply (add_cancel_r _ _ ((a + b * c) mod c)); only 1: rewrite <- div_mod, Private_NZDiv.mod_add by order; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	4.43653488159	343
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_add_l	40	3.2.1.0	search with cache (only 1: intros; only 1: rewrite (add_comm _ c), (add_comm a); only 1: apply Private_NZDiv.div_add; only 1: auto').	0.0732309818268	10
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_cancel_r	40	1.2.1.5.0	search with cache (only 1: intros; only 1: apply div_mul_cancel_r; only 1: auto'; only 1: auto'; only 1: auto').	2.14045810699	483
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_cancel_l	40	0.0.0.6.0	search with cache (only 1: intros; only 1: rewrite !(mul_comm c); only 1: apply Private_NZDiv.div_mul_cancel_r; only 1: auto'; only 1: auto').	0.47670507431	64
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_distr_r	40	1.1.0.2.0.1.1.2.0	search with cache (only 1: intros; only 1: rewrite !(mul_comm _ c); only 1: rewrite <- (add_cancel_l _ _ (c * b * (c * a / (c * b)))); only 1: rewrite <- div_mod by (apply neq_mul_0; split; order); only 1: rewrite Private_NZDiv.div_mul_cancel_l; only 1: rewrite <- mul_assoc, <- mul_add_distr_l, mul_cancel_l by order; only 1: now apply div_mod; only 1: auto'; only 1: auto').	8.7556540966	1212
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_distr_l	40	1.1.0.2.0.1.2.0	search with cache (only 1: intros; only 1: rewrite <- (add_cancel_l _ _ (c * b * (c * a / (c * b)))); only 1: rewrite <- div_mod by (apply neq_mul_0; split; order); only 1: rewrite Private_NZDiv.div_mul_cancel_l; only 1: rewrite <- mul_assoc, <- mul_add_distr_l, mul_cancel_l by order; only 1: now apply div_mod; only 1: auto'; only 1: auto').	3.27683019638	557
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_mod	40	1.19.6.0.0	search with cache (only 1: intros; only 1: destruct (mod_bound_pos a n); only 1: auto'; only 1: auto'; only 1: now rewrite Private_NZDiv.mod_small_iff).	5.34472703934	3889
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_idemp_l	40	0.0.0.7.0	search with cache (only 1: intros; only 1: apply mul_mod_idemp_l; only 1: auto'; only 1: auto'; only 1: auto').	1.68798708916	131
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_idemp_r	40	1.0.3.0	search with cache (only 1: intros; only 1: rewrite !(mul_comm a); only 1: apply Private_NZDiv.mul_mod_idemp_l; only 1: auto').	0.120488882065	8
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod	40	1.1.8.4.0	search with cache (only 1: intros; only 1: rewrite Private_NZDiv.mul_mod_idemp_l, Private_NZDiv.mul_mod_idemp_r; only 1: reflexivity; only 1: auto'; only 1: auto').	4.15004992485	748
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.add_mod_idemp_l	40	0.0.0.4.0	search with cache (only 1: intros; only 1: apply add_mod_idemp_l; only 1: auto'; only 1: auto'; only 1: auto').	0.764565944672	34
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.add_mod_idemp_r	40	2.0.2.0	search with cache (only 1: intros; only 1: rewrite !(add_comm a); only 1: apply Private_NZDiv.add_mod_idemp_l; only 1: auto').	0.0726308822632	8
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.add_mod	40	2.2.5.2.0	search with cache (only 1: intros; only 1: rewrite Private_NZDiv.add_mod_idemp_l, Private_NZDiv.add_mod_idemp_r; only 1: reflexivity; only 1: auto'; only 1: auto').	5.73276686668	748
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_div	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_mul_r	40	0.0.2.0.0.0.1	search with cache (only 1: intros; only 1: apply add_cancel_l with (b * c * (a / (b * c))); only 1: rewrite <- div_mod by (apply neq_mul_0; split; order); only 1: rewrite <- Private_NZDiv.div_div by trivial; only 1: rewrite add_assoc, add_shuffle0, <- mul_assoc, <- mul_add_distr_l; only 1: rewrite <- div_mod by order; only 1: now apply div_mod).	0.176772117615	14
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_le	40	4.0.0.1.0.4.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto'; only 1: rewrite mul_assoc, (mul_comm b c), <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: auto'; only 1: apply Private_NZDiv.mul_div_le; only 1: auto').	3.99034404755	493
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_divides	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.divide_add_cancel_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.divide_sub_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_add_mult_diag_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_add_diag_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_sub_diag_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.Bezout_wd	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.bezout_1_gcd	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout_pos_pos	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout_pos	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_mul_mono_l	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_mul_mono_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gauss	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.divide_mul_split	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.max_0_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.max_0_r	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.min_0_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.min_0_r	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.succ_max_distr	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.succ_min_distr	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_max_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_max_distr_r	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_min_distr_l	40	0.0.0.1.0.0.0.0.2.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?succ_le_mono; only 1: now rewrite <- ?add_le_mono_l; only 1: rewrite 2!min_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?succ_le_mono; only 1: now rewrite <- ?add_le_mono_l).	3.64795589447	572
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_min_distr_r	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_max_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_max_distr_r	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_min_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_min_distr_r	40	0.0.5.1.0.0.5.0.2.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: now rewrite <- ?succ_le_mono; only 1: now apply mul_le_mono_r; only 1: rewrite 2!min_r; only 1: order; only 1: now rewrite <- ?succ_le_mono; only 1: now apply mul_le_mono_r).	19.0385558605	6970
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_max_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_max_distr_r	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_min_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_min_distr_r	40
Coq.Numbers.Natural.Abstract.NParity.NParityProp.odd_pred	40
Coq.Numbers.Natural.Abstract.NParity.NParityProp.even_pred	40	0.0.5.1.0.0	search with cache (only 1: intros; only 1: rewrite <- (succ_pred n)  at 2 by trivial; only 1: symmetry; only 1: apply eq_iff_eq_true; only 1: rewrite even_spec, odd_spec; only 1: apply Odd_succ).	1.59541606903	289
Coq.Numbers.Natural.Abstract.NParity.NParityProp.even_sub	40
Coq.Numbers.Natural.Abstract.NParity.NParityProp.odd_sub	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_spec'	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_square	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_le_square	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_lt_square	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_le_lin	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_mul_above	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_succ_le	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_succ_or	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.add_sqrt_le	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec_alt	40	3.1	search with cache (only 1: intro n; only 1: auto).	0.228507995605	13
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec0_wd	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec_wd	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec0_0	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec0_succ	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec_0	40	0.0.0.0.0.0.0.0.0.1	search with cache (only 1: intros; only 1: rewrite !strong_rec_alt; only 1: unfold strong_rec0; only 1: f_equiv; only 1: rewrite recursion_succ; only 1: f_equiv'; only 1: rewrite recursion_0; only 1: f_equiv'; only 1: f_equiv'; only 1: f_equiv').	7.2098429203	69
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec0_more_steps	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec0_fixpoint	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec_fixpoint	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec_0_any	40	0.1.3.3.0	search with cache (only 1: intros; only 1: rewrite strong_rec_alt, strong_rec0_succ; only 1: apply step_good; only 1: intros m Hm; only 1: destruct (nlt_0_r _ Hm)).	2.55147504807	103
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec_any_fst_arg	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_0_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_succ	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_diag	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_gt	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_assoc	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_succ_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_add	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_eq_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_eq_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_eq_nz	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_add_distr	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_swap	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_sub_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_0_le	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_add_le	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_sub_le_add_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_sub_le_add_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_sub_lt_add_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_sub_lt_add_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_add_le_sub_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_add_le_sub_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_add_lt_sub_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_add_lt_sub_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_lt	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_le_mono_r	40	0.3.1.0.0.3.1	search with cache (only 1: intros n m p LE; only 1: destruct (le_ge_cases n p) as [LE'| GE]; only 1: rewrite <- sub_0_le in LE'; only 1: rewrite LE'; only 1: apply le_0_l; only 1: apply le_add_le_sub_r; only 1: now rewrite sub_add).	8.85004401207	1500
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_le_mono_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.mul_pred_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.mul_sub_distr_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.mul_sub_distr_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_equiv	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_equiv	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_alt_wd	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_alt_wd	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_alt_dichotomy	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_dichotomy	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.square_lt_mono	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.square_le_mono	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_le_mono_l	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_le_mono_r	40	6.3.2.4.4	search with cache (only 1: intros; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: apply mul_le_mono_nonneg_l; only 1: apply le_0_l; only 1: trivial).	14.9578249454	5817
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_lt_mono	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_le_mono	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.lt_0_mul'	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.eq_mul_1	40
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.le_add_r	40
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.lt_lt_add_r	40
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.lt_lt_add_l	40
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.add_pos_l	40	8.17.9	search with cache (only 1: intros H; only 1: intro p; only 1: apply lt_lt_add_r).	32.6506791115	11131
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.add_pos_r	40
Coq.Numbers.Natural.Abstract.NIso.Homomorphism.natural_isomorphism_wd	40
Coq.Numbers.Natural.Abstract.NIso.Homomorphism.natural_isomorphism_0	40
Coq.Numbers.Natural.Abstract.NIso.Homomorphism.natural_isomorphism_succ	40
Coq.Numbers.Natural.Abstract.NIso.Homomorphism.hom_nat_iso	40	0.0.1.1.0.0.0.11.3.0	search with cache (only 1: unfold natural_isomorphism; only 1: repeat red; only 1: intuition; only 1: now rewrite N1.recursion_0; only 1: rewrite N1.recursion_succ; only 1: auto with *; only 1: auto with *; only 1: repeat red; only 1: intros; only 1: now f_equiv).	1.14054608345	934
Coq.Numbers.Natural.Abstract.NIso.Inverse.inverse_nat_iso	40
Coq.Numbers.Natural.Abstract.NIso.Isomorphism.iso_nat_iso	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_wf_0	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.nlt_0_r	40	27.0.5	search with cache (only 1: intro H; only 1: rewrite nlt_ge; only 1: apply le_0_l).	4.03864598274	3943
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.nle_succ_0	40	12.6.22.0	search with cache (only 1: intro n; only 1: rewrite nle_gt; only 1: apply lt_succ_r; only 1: apply le_0_l).	12.5446519852	8993
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_0_r	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_0_succ	40	13.4.40	search with cache (only 1: intros; only 1: apply lt_succ_r; only 1: apply le_0_l).	6.21461892128	4469
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.neq_0_lt_0	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.eq_0_gt_0_cases	40	2.1.5.6	search with cache (only 1: cases ltac:(n); only 1: intuition order; only 1: right; only 1: apply lt_0_succ).	1.22089195251	219
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.zero_one	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_1_r	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_1_r	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_lt_0	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_1_l'	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_ind_rel	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_ind_rel	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.succ_pred_pos	40	0.1.2.0.0	search with cache (only 1: cases ltac:(n); only 1: intro H; only 1: order; only 1: intros; only 1: now rewrite pred_succ).	0.166251897812	16
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_pred_l	40	4.4.5.1.4.1.10	search with cache (only 1: cases ltac:(n); only 1: rewrite pred_0; only 1: solve_proper; only 1: intro n; only 1: rewrite pred_succ; only 1: apply le_le_succ_r; only 1: solve_proper).	8.42525005341	4271
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_l	40	2.5.1.3.0.2	search with cache (only 1: cases ltac:(n); only 1: intro H; only 1: now elim H; only 1: intros n _; only 1: rewrite pred_succ; only 1: apply lt_succ_diag_r).	8.01163101196	2293
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_le_pred	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_lt_pred	40	2.0.0.6.8.0.0	search with cache (only 1: cases ltac:(n); only 1: intro H; only 1: rewrite pred_0; only 1: order'; only 1: intros; only 1: rewrite pred_succ; only 1: now apply lt_succ_l).	9.15425276756	5102
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_le_pred	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_le	40	0.1.5.1.2.0.1	search with cache (only 1: cases ltac:(n); only 1: intro H; only 1: rewrite pred_0; only 1: order; only 1: intros m IH; only 1: rewrite pred_succ; only 1: now apply le_succ_l).	5.10882401466	1323
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_lt	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_pred_le	40	5.0.8.2.2.0.0	search with cache (only 1: intro n; only 1: cases ltac:(m); only 1: rewrite pred_0; only 1: order; only 1: intro H; only 1: rewrite pred_succ; only 1: apply le_le_succ_r).	24.1642839909	13518
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.pred_le_mono	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.pred_lt_mono	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_succ_lt_pred	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_succ_le_pred	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_lt_succ	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_pred_le_succ	40
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.eq_add_0	40
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.eq_add_succ	40
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.eq_add_1	40
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.succ_add_discr	40
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.add_pred_l	40
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.add_pred_r	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_succ_0	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_0_succ	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.le_0_l	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.induction	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.case_analysis	40	0.0.0.3.3.0.0	search with cache (only 1: intros A A_wd A0 AS n; only 1: apply right_induction with 0; only 1: auto; only 1: auto; only 1: intros; only 1: auto; only 1: apply le_0_l).	0.922975063324	210
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_0	40	9.5	search with cache (only 1: intro n; only 1: now apply (neq_succ_diag_l 0)).	0.439719200134	130
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_0_r	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.zero_or_succ	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.eq_pred_0	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.succ_pred	40	2.0.4.1	search with cache (only 1: cases ltac:(n); only 1: order; only 1: intro n; only 1: now rewrite pred_succ).	0.39022898674	69
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.pred_inj	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.pair_induction	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.two_dim_induction	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.double_induction	40
Coq.Numbers.Natural.Peano.NPeano.Even_equiv	40
Coq.Numbers.Natural.Peano.NPeano.Odd_equiv	40
Coq.PArith.Pnat.Pos2Nat.inj_succ	40
Coq.PArith.Pnat.Pos2Nat.inj_add	40
Coq.PArith.Pnat.Pos2Nat.inj_mul	40
Coq.PArith.Pnat.Pos2Nat.inj_1	40	1.3	search with cache (only 1: unfold to_nat; only 1: trivial).	0.0228600502014	6
Coq.PArith.Pnat.Pos2Nat.inj_xO	40
Coq.PArith.Pnat.Pos2Nat.inj_xI	40
Coq.PArith.Pnat.Pos2Nat.is_succ	40
Coq.PArith.Pnat.Pos2Nat.is_pos	40	0.4.0.9.10.5	search with cache (only 1: induction p using peano_ind; only 1: auto; only 1: unfold to_nat; only 1: rewrite iter_op_succ; only 1: auto; only 1: apply Nat.add_assoc).	1.76358294487	1347
Coq.PArith.Pnat.Pos2Nat.id	40
Coq.PArith.Pnat.Pos2Nat.inj	40
Coq.PArith.Pnat.Pos2Nat.inj_iff	40	0.0.27.2	search with cache (only 1: revert q; only 1: intuition; only 1: now rewrite <- (id p), <- (id q), H; only 1: now rewrite <- (id p), <- (id q), H).	16.3880829811	13260
Coq.PArith.Pnat.Pos2Nat.inj_compare	40
Coq.PArith.Pnat.Pos2Nat.inj_lt	40
Coq.PArith.Pnat.Pos2Nat.inj_le	40
Coq.PArith.Pnat.Pos2Nat.inj_gt	40
Coq.PArith.Pnat.Pos2Nat.inj_ge	40
Coq.PArith.Pnat.Pos2Nat.inj_sub	40
Coq.PArith.Pnat.Pos2Nat.inj_sub_max	40
Coq.PArith.Pnat.Pos2Nat.inj_pred	40
Coq.PArith.Pnat.Pos2Nat.inj_pred_max	40
Coq.PArith.Pnat.Pos2Nat.inj_min	40
Coq.PArith.Pnat.Pos2Nat.inj_max	40
Coq.PArith.Pnat.Pos2Nat.inj_iter	40
Coq.PArith.Pnat.Nat2Pos.id	40
Coq.PArith.Pnat.Nat2Pos.id_max	40	6.0.0.0.2.0.12	search with cache (only 1: induction n as [| n H]; only 1: trivial; only 1: simpl Pos.of_nat; only 1: destruct n; only 1: trivial; only 1: rewrite Pos2Nat.inj_succ; only 1: now rewrite H).	2.13602399826	884
Coq.PArith.Pnat.Nat2Pos.inj	40
Coq.PArith.Pnat.Nat2Pos.inj_iff	40
Coq.PArith.Pnat.Nat2Pos.inj_succ	40	0.1.0	search with cache (only 1: destruct n; only 1: now destruct 1; only 1: trivial).	0.220808029175	4
Coq.PArith.Pnat.Nat2Pos.inj_pred	40
Coq.PArith.Pnat.Nat2Pos.inj_add	40
Coq.PArith.Pnat.Nat2Pos.inj_mul	40
Coq.PArith.Pnat.Nat2Pos.inj_compare	40
Coq.PArith.Pnat.Nat2Pos.inj_sub	40
Coq.PArith.Pnat.Nat2Pos.inj_min	40
Coq.PArith.Pnat.Nat2Pos.inj_max	40
Coq.PArith.Pnat.Pos2SuccNat.id_succ	40
Coq.PArith.Pnat.Pos2SuccNat.pred_id	40
Coq.PArith.Pnat.SuccNat2Pos.id_succ	40	0.0.0.0.0.9	search with cache (only 1: induction n; only 1: trivial; only 1: simpl; only 1: rewrite Pos2Nat.inj_succ; only 1: f_equal; only 1: trivial).	1.01172685623	236
Coq.PArith.Pnat.SuccNat2Pos.pred_id	40	3.0.4.2.5.2	search with cache (only 1: rewrite Pos.of_nat_succ; only 1: simpl Pos.of_nat; only 1: destruct n; only 1: trivial; only 1: rewrite Pos2Nat.inj_succ; only 1: now apply Nat2Pos.id).	2.63638901711	1236
Coq.PArith.Pnat.SuccNat2Pos.inj	40
Coq.PArith.Pnat.SuccNat2Pos.inj_iff	40	2.6.0.0.0.1.0.3	search with cache (only 1: split; only 1: intro H; only 1: apply (f_equal Pos.to_nat) in H; only 1: rewrite !id_succ in H; only 1: now injection H; only 1: intro H; only 1: f_equal; only 1: now subst).	4.20082783699	1464
Coq.PArith.Pnat.SuccNat2Pos.inv	40
Coq.PArith.Pnat.SuccNat2Pos.inj_succ	40	0.1	search with cache (only 1: simpl; only 1: f_equal).	0.0585868358612	3
Coq.PArith.Pnat.SuccNat2Pos.inj_compare	40
Coq.PArith.Pnat.Pmult_nat_mult	40
Coq.PArith.Pnat.Pmult_nat_succ_morphism	40
Coq.PArith.Pnat.Pmult_nat_l_plus_morphism	40
Coq.PArith.Pnat.Pmult_nat_plus_carry_morphism	40
Coq.PArith.Pnat.Pmult_nat_r_plus_morphism	40
Coq.PArith.Pnat.ZL6	40
Coq.PArith.Pnat.le_Pmult_nat	40
Coq.PArith.BinPos.Pos.eq_dec	40
Coq.PArith.BinPos.Pos.xI_succ_xO	40	31	search with cache (only 1: solve_proper).	1.16870689392	1643
Coq.PArith.BinPos.Pos.succ_discr	40
Coq.PArith.BinPos.Pos.pred_double_spec	40	0	search with cache (only 1: reflexivity).	0.042720079422	1
Coq.PArith.BinPos.Pos.succ_pred_double	40
Coq.PArith.BinPos.Pos.pred_double_succ	40	0.0.1.2.4	search with cache (only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: reflexivity; only 1: reflexivity).	0.387371063232	54
Coq.PArith.BinPos.Pos.double_succ	40	0.1	search with cache (only 1: simpl; only 1: now f_equal).	0.0613808631897	3
Coq.PArith.BinPos.Pos.pred_double_xO_discr	40	0.0.0.0.0.0.2	search with cache (only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal).	0.147325992584	9
Coq.PArith.BinPos.Pos.succ_not_1	40	0	search with cache (only 1: now destruct p).	0.0616471767426	1
Coq.PArith.BinPos.Pos.pred_succ	40	2.0.1.0.1.0.0.0.1.0.3	search with cache (only 1: induction p; only 1: simpl; only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: now destruct p; only 1: reflexivity).	12.634898901	2009
Coq.PArith.BinPos.Pos.succ_pred_or	40
Coq.PArith.BinPos.Pos.succ_pred	40
Coq.PArith.BinPos.Pos.succ_inj	40
Coq.PArith.BinPos.Pos.pred_N_succ	40	1.1.0.2.8.1.4	search with cache (only 1: destruct p; only 1: simpl; only 1: f_equal; only 1: apply pred_double_succ; only 1: reflexivity; only 1: simpl; only 1: now f_equal).	5.86362695694	2387
Coq.PArith.BinPos.Pos.add_1_r	40	0	search with cache (only 1: now destruct p).	0.0422070026398	1
Coq.PArith.BinPos.Pos.add_1_l	40	0	search with cache (only 1: now destruct p).	0.0327360630035	1
Coq.PArith.BinPos.Pos.add_carry_spec	40
Coq.PArith.BinPos.Pos.add_comm	40
Coq.PArith.BinPos.Pos.add_succ_r	40
Coq.PArith.BinPos.Pos.add_succ_l	40
Coq.PArith.BinPos.Pos.add_no_neutral	40
Coq.PArith.BinPos.Pos.add_carry_add	40
Coq.PArith.BinPos.Pos.add_reg_r	40
Coq.PArith.BinPos.Pos.add_reg_l	40
Coq.PArith.BinPos.Pos.add_cancel_r	40
Coq.PArith.BinPos.Pos.add_cancel_l	40
Coq.PArith.BinPos.Pos.add_carry_reg_r	40	6.3.6	search with cache (only 1: rewrite add_carry_spec, <- add_succ_r; only 1: rewrite add_carry_spec, <- add_succ_r; only 1: apply add_reg_r).	2.2396531105	601
Coq.PArith.BinPos.Pos.add_carry_reg_l	40
Coq.PArith.BinPos.Pos.add_assoc	40
Coq.PArith.BinPos.Pos.add_xO	40	0.2	search with cache (only 1: simpl; only 1: f_equal).	0.062108039856	4
Coq.PArith.BinPos.Pos.add_xI_pred_double	40
Coq.PArith.BinPos.Pos.add_xO_pred_double	40
Coq.PArith.BinPos.Pos.add_diag	40
Coq.PArith.BinPos.Pos.peano_rect_succ	40
Coq.PArith.BinPos.Pos.peano_rect_base	40	0.0	search with cache (only 1: revert P a f; only 1: trivial).	0.0583701133728	2
Coq.PArith.BinPos.Pos.peano_case	40
Coq.PArith.BinPos.Pos.eq_dep_eq_positive	40
Coq.PArith.BinPos.Pos.PeanoViewUnique	40
Coq.PArith.BinPos.Pos.peano_equiv	40
Coq.PArith.BinPos.Pos.mul_1_l	40	1.0.0.0	search with cache (only 1: destruct p; only 1: trivial; only 1: trivial; only 1: trivial).	0.146723985672	5
Coq.PArith.BinPos.Pos.mul_1_r	40
Coq.PArith.BinPos.Pos.mul_xO_r	40	0.1.1.1.6.0.3	search with cache (only 1: induction p; only 1: simpl; only 1: rewrite IHp; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: now f_equal).	4.19151091576	719
Coq.PArith.BinPos.Pos.mul_xI_r	40
Coq.PArith.BinPos.Pos.mul_comm	40
Coq.PArith.BinPos.Pos.mul_add_distr_l	40
Coq.PArith.BinPos.Pos.mul_add_distr_r	40
Coq.PArith.BinPos.Pos.mul_assoc	40
Coq.PArith.BinPos.Pos.mul_succ_l	40
Coq.PArith.BinPos.Pos.mul_succ_r	40
Coq.PArith.BinPos.Pos.mul_xI_mul_xO_discr	40
Coq.PArith.BinPos.Pos.mul_xO_discr	40
Coq.PArith.BinPos.Pos.mul_reg_r	40
Coq.PArith.BinPos.Pos.mul_reg_l	40
Coq.PArith.BinPos.Pos.mul_cancel_r	40
Coq.PArith.BinPos.Pos.mul_cancel_l	40	1.2.3.0	search with cache (only 1: split; only 1: rewrite 2!(mul_comm r); only 1: apply mul_reg_r; only 1: congruence).	0.250663042068	31
Coq.PArith.BinPos.Pos.mul_eq_1_l	40
Coq.PArith.BinPos.Pos.mul_eq_1_r	40	0	search with cache (only 1: now destruct p, q).	0.0710978507996	1
Coq.PArith.BinPos.Pos.square_xO	40	4.0.2	search with cache (only 1: simpl; only 1: f_equal; only 1: auto using mul_xI_r, mul_xO_r, mul_1_r).	0.092031955719	11
Coq.PArith.BinPos.Pos.square_xI	40
Coq.PArith.BinPos.Pos.iter_swap_gen	40
Coq.PArith.BinPos.Pos.iter_swap	40	0.1.1.1.0.1.1.0.0	search with cache (only 1: induction p; only 1: simpl; only 1: intros; only 1: now rewrite ?H, ?IHp; only 1: simpl; only 1: intros; only 1: now rewrite ?H, ?IHp; only 1: simpl; only 1: now f_equal).	13.4814839363	1957
Coq.PArith.BinPos.Pos.iter_succ	40
Coq.PArith.BinPos.Pos.iter_add	40
Coq.PArith.BinPos.Pos.iter_invariant	40
Coq.PArith.BinPos.Pos.pow_1_r	40
Coq.PArith.BinPos.Pos.pow_succ_r	40
Coq.PArith.BinPos.Pos.square_spec	40
Coq.PArith.BinPos.Pos.sub_mask_succ_r	40
Coq.PArith.BinPos.Pos.sub_mask_carry_spec	40
Coq.PArith.BinPos.Pos.sub_mask_spec	40
Coq.PArith.BinPos.Pos.sub_mask_nul_iff	40
Coq.PArith.BinPos.Pos.sub_mask_diag	40	3.0.0.0.0.0.0	search with cache (only 1: induction p; only 1: simpl; only 1: now rewrite ?IHp; only 1: simpl; only 1: now rewrite ?IHp; only 1: simpl; only 1: now rewrite ?IHp).	0.313682079315	10
Coq.PArith.BinPos.Pos.sub_mask_add	40
Coq.PArith.BinPos.Pos.sub_mask_add_diag_l	40
Coq.PArith.BinPos.Pos.sub_mask_pos_iff	40
Coq.PArith.BinPos.Pos.sub_mask_add_diag_r	40
Coq.PArith.BinPos.Pos.sub_mask_neg_iff	40
Coq.PArith.BinPos.Pos.eqb_eq	40
Coq.PArith.BinPos.Pos.ltb_lt	40
Coq.PArith.BinPos.Pos.leb_le	40
Coq.PArith.BinPos.Pos.compare_cont_spec	40
Coq.PArith.BinPos.Pos.compare_cont_Eq	40
Coq.PArith.BinPos.Pos.compare_cont_Lt_Gt	40
Coq.PArith.BinPos.Pos.compare_cont_Lt_Lt	40	0.0.0.0.6.0	search with cache (only 1: rewrite compare_cont_spec; only 1: unfold leb, le; only 1: destruct (p ?= q); only 1: now split; only 1: now split; only 1: now split).	3.90389108658	319
Coq.PArith.BinPos.Pos.compare_cont_Gt_Lt	40	0.0.0.0.3.1	search with cache (only 1: unfold ltb, lt; only 1: rewrite compare_cont_spec; only 1: destruct (p ?= q); only 1: easy'; only 1: easy'; only 1: easy').	1.14734506607	103
Coq.PArith.BinPos.Pos.compare_cont_Gt_Gt	40
Coq.PArith.BinPos.Pos.compare_cont_Lt_not_Lt	40	0.0.0.0.0.0	search with cache (only 1: rewrite compare_cont_spec; only 1: unfold gt; only 1: destruct (p ?= q); only 1: easy'; only 1: easy'; only 1: easy').	0.114274024963	6
Coq.PArith.BinPos.Pos.compare_cont_Lt_not_Gt	40	0.0.0.0.0.0	search with cache (only 1: rewrite compare_cont_spec; only 1: unfold le; only 1: destruct (p ?= q); only 1: easy'; only 1: easy'; only 1: easy').	0.199635028839	6
Coq.PArith.BinPos.Pos.compare_cont_Gt_not_Lt	40	0.0.0.0.0.0	search with cache (only 1: rewrite compare_cont_spec; only 1: unfold ge; only 1: destruct (p ?= q); only 1: easy'; only 1: easy'; only 1: easy').	0.204370975494	6
Coq.PArith.BinPos.Pos.compare_cont_Gt_not_Gt	40	0.0.0.0.0.0	search with cache (only 1: rewrite compare_cont_spec; only 1: unfold lt; only 1: destruct (p ?= q); only 1: easy'; only 1: easy'; only 1: easy').	0.151629924774	6
Coq.PArith.BinPos.Pos.compare_xO_xO	40	1.1.1.0	search with cache (only 1: destruct compare; only 1: easy'; only 1: trivial; only 1: trivial).	0.0820178985596	7
Coq.PArith.BinPos.Pos.compare_xI_xI	40	0	search with cache (only 1: reflexivity).	0.0265560150146	1
Coq.PArith.BinPos.Pos.compare_xI_xO	40	0.1.9.0.7	search with cache (only 1: unfold compare; only 1: simpl; only 1: rewrite compare_cont_spec; only 1: unfold compare; only 1: now destruct (compare_cont Eq p q)).	10.5262269974	3925
Coq.PArith.BinPos.Pos.compare_xO_xI	40	0.1.9.0.7	search with cache (only 1: unfold compare; only 1: simpl; only 1: rewrite compare_cont_spec; only 1: unfold compare; only 1: now destruct (compare_cont Eq p q)).	4.5369579792	1859
Coq.PArith.BinPos.Pos.compare_sub_mask	40
Coq.PArith.BinPos.Pos.lt_iff_add	40
Coq.PArith.BinPos.Pos.gt_iff_add	40
Coq.PArith.BinPos.Pos.compare_cont_refl	40	6.6.6.5.1.0	search with cache (only 1: rewrite compare_cont_spec; only 1: unfold compare; only 1: induction p; only 1: trivial; only 1: trivial; only 1: trivial).	6.9284529686	4425
Coq.PArith.BinPos.Pos.compare_cont_antisym	40
Coq.PArith.BinPos.Pos.compare_eq_iff	40
Coq.PArith.BinPos.Pos.compare_antisym	40
Coq.PArith.BinPos.Pos.compare_lt_iff	40	0.2.0.1.0	search with cache (only 1: unfold lt; only 1: destruct compare; only 1: easy'; only 1: easy'; only 1: easy').	0.219954967499	8
Coq.PArith.BinPos.Pos.compare_le_iff	40	0.0.0.0.1	search with cache (only 1: unfold le; only 1: destruct compare; only 1: easy'; only 1: easy'; only 1: easy').	0.16534280777	6
Coq.PArith.BinPos.Pos.gt_lt_iff	40	4.3	search with cache (only 1: unfold gt; only 1: now rewrite <- compare_lt_iff, compare_antisym, CompOpp_iff).	0.469141960144	64
Coq.PArith.BinPos.Pos.gt_lt	40	0.0	search with cache (only 1: unfold lt, gt; only 1: now rewrite compare_antisym, CompOpp_iff).	0.0465130805969	2
Coq.PArith.BinPos.Pos.lt_gt	40	0.0	search with cache (only 1: unfold lt, gt; only 1: now rewrite compare_antisym, CompOpp_iff).	0.0288820266724	2
Coq.PArith.BinPos.Pos.ge_le_iff	40	4.1.2	search with cache (only 1: unfold ge; only 1: unfold le; only 1: now rewrite compare_antisym, CompOpp_iff).	0.117166042328	18
Coq.PArith.BinPos.Pos.ge_le	40	0.0	search with cache (only 1: unfold le, ge; only 1: now rewrite compare_antisym, CompOpp_iff).	0.0397291183472	2
Coq.PArith.BinPos.Pos.le_ge	40	0	search with cache (only 1: apply ge_le_iff).	0.0152039527893	1
Coq.PArith.BinPos.Pos.compare_succ_r	40
Coq.PArith.BinPos.Pos.compare_succ_l	40
Coq.PArith.BinPos.Pos.lt_succ_r	40
Coq.PArith.BinPos.Pos.lt_succ_diag_r	40
Coq.PArith.BinPos.Pos.compare_succ_succ	40
Coq.PArith.BinPos.Pos.le_1_l	40	11.2.0	search with cache (only 1: apply ge_le_iff; only 1: unfold le, ge; only 1: now destruct compare || now destruct p).	6.88744115829	2104
Coq.PArith.BinPos.Pos.nlt_1_r	40	11.11	search with cache (only 1: unfold ltb, lt; only 1: now destruct compare || now destruct p).	4.41891813278	1704
Coq.PArith.BinPos.Pos.lt_1_succ	40	1	search with cache (only 1: now destruct p).	0.0992159843445	25
Coq.PArith.BinPos.Pos.le_nlt	40	1.0	search with cache (only 1: unfold lt, le; only 1: now rewrite compare_antisym, CompOpp_iff).	1.2883579731	147
Coq.PArith.BinPos.Pos.lt_nle	40	6.3	search with cache (only 1: unfold ge, lt, compare; only 1: now rewrite <- compare_nle_iff, compare_antisym, CompOpp_iff).	4.32375001907	517
Coq.PArith.BinPos.Pos.lt_le_incl	40	0.0.0.4.2	search with cache (only 1: unfold lt, le; only 1: destruct compare; only 1: discriminate; only 1: discriminate; only 1: discriminate).	1.7832942009	241
Coq.PArith.BinPos.Pos.lt_lt_succ	40
Coq.PArith.BinPos.Pos.succ_lt_mono	40
Coq.PArith.BinPos.Pos.succ_le_mono	40	0.5	search with cache (only 1: unfold lt, le; only 1: now rewrite compare_succ_succ).	0.159581899643	7
Coq.PArith.BinPos.Pos.lt_trans	40
Coq.PArith.BinPos.Pos.lt_ind	40
Coq.PArith.BinPos.Pos.lt_strorder	40
Coq.PArith.BinPos.Pos.lt_compat	40	15	search with cache (only 1: intuition).	2.56751298904	860
Coq.PArith.BinPos.Pos.lt_total	40
Coq.PArith.BinPos.Pos.le_refl	40	0.9	search with cache (only 1: apply le_lteq; only 1: intuition).	1.36085009575	254
Coq.PArith.BinPos.Pos.le_lt_trans	40
Coq.PArith.BinPos.Pos.lt_le_trans	40
Coq.PArith.BinPos.Pos.le_trans	40
Coq.PArith.BinPos.Pos.le_succ_l	40
Coq.PArith.BinPos.Pos.le_antisym	40
Coq.PArith.BinPos.Pos.le_preorder	40
Coq.PArith.BinPos.Pos.le_partorder	40
Coq.PArith.BinPos.Pos.add_compare_mono_l	40
Coq.PArith.BinPos.Pos.add_compare_mono_r	40
Coq.PArith.BinPos.Pos.lt_add_diag_r	40
Coq.PArith.BinPos.Pos.add_lt_mono_l	40	0.0.5.0.0.1.2.0	search with cache (only 1: unfold lt; only 1: revert p q r; only 1: induction p using peano_ind; only 1: intros q r; only 1: rewrite 2!add_1_l; only 1: now rewrite compare_succ_succ; only 1: intros q r; only 1: now rewrite 2!add_succ_l, compare_succ_succ).	5.93412208557	1662
Coq.PArith.BinPos.Pos.add_lt_mono_r	40	1.0.1.0	search with cache (only 1: unfold lt; only 1: rewrite 2!(add_comm _ p); only 1: rewrite add_compare_mono_l; only 1: apply iff_refl).	0.0967569351196	6
Coq.PArith.BinPos.Pos.add_lt_mono	40
Coq.PArith.BinPos.Pos.add_le_mono_l	40	1.0.6	search with cache (only 1: unfold lt, le; only 1: rewrite add_compare_mono_l; only 1: now rewrite compare_antisym, CompOpp_iff).	0.205507993698	11
Coq.PArith.BinPos.Pos.add_le_mono_r	40	1.1.0	search with cache (only 1: unfold le; only 1: rewrite add_compare_mono_r; only 1: apply iff_refl).	0.187162876129	5
Coq.PArith.BinPos.Pos.add_le_mono	40
Coq.PArith.BinPos.Pos.mul_compare_mono_l	40
Coq.PArith.BinPos.Pos.mul_compare_mono_r	40
Coq.PArith.BinPos.Pos.mul_lt_mono_l	40
Coq.PArith.BinPos.Pos.mul_lt_mono_r	40	2.0.5.0	search with cache (only 1: unfold lt; only 1: rewrite 2!(mul_comm _ p); only 1: rewrite mul_compare_mono_l; only 1: apply iff_refl).	0.508672952652	95
Coq.PArith.BinPos.Pos.mul_lt_mono	40
Coq.PArith.BinPos.Pos.mul_le_mono_l	40	2.1.0	search with cache (only 1: unfold le; only 1: rewrite mul_compare_mono_l; only 1: apply iff_refl).	0.0807139873505	6
Coq.PArith.BinPos.Pos.mul_le_mono_r	40	2.1.0	search with cache (only 1: unfold le; only 1: rewrite mul_compare_mono_r; only 1: apply iff_refl).	0.0786890983582	6
Coq.PArith.BinPos.Pos.mul_le_mono	40
Coq.PArith.BinPos.Pos.lt_add_r	40	1.3	search with cache (only 1: rewrite lt_iff_add; only 1: now exists q).	0.0512130260468	6
Coq.PArith.BinPos.Pos.lt_not_add_l	40
Coq.PArith.BinPos.Pos.pow_gt_1	40
Coq.PArith.BinPos.Pos.sub_1_r	40	0.0.0.0.0.3	search with cache (only 1: destruct (sub_mask p q) as [| [r| r| ]| ] || destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: auto).	0.0556728839874	9
Coq.PArith.BinPos.Pos.pred_sub	40	0	search with cache (only 1: now destruct p).	0.017107963562	1
Coq.PArith.BinPos.Pos.sub_succ_r	40
Coq.PArith.BinPos.Pos.sub_mask_pos'	40
Coq.PArith.BinPos.Pos.sub_mask_pos	40	4.0.0.0	search with cache (only 1: rewrite lt_iff_add; only 1: intros (r, Hr); only 1: exists r; only 1: now apply sub_mask_pos_iff).	0.127498865128	13
Coq.PArith.BinPos.Pos.sub_add	40
Coq.PArith.BinPos.Pos.add_sub	40
Coq.PArith.BinPos.Pos.mul_sub_distr_l	40
Coq.PArith.BinPos.Pos.mul_sub_distr_r	40
Coq.PArith.BinPos.Pos.sub_lt_mono_l	40
Coq.PArith.BinPos.Pos.sub_compare_mono_l	40
Coq.PArith.BinPos.Pos.sub_compare_mono_r	40
Coq.PArith.BinPos.Pos.sub_lt_mono_r	40
Coq.PArith.BinPos.Pos.sub_decr	40
Coq.PArith.BinPos.Pos.add_sub_assoc	40
Coq.PArith.BinPos.Pos.sub_add_distr	40
Coq.PArith.BinPos.Pos.sub_sub_distr	40
Coq.PArith.BinPos.Pos.sub_xO_xO	40
Coq.PArith.BinPos.Pos.sub_xI_xI	40	0.3.1.0	search with cache (only 1: unfold sub; only 1: simpl; only 1: intros H; only 1: now destruct (sub_mask_pos n m H) as (p, ->)).	0.043564081192	8
Coq.PArith.BinPos.Pos.sub_xI_xO	40	1.3.0.0	search with cache (only 1: unfold sub; only 1: simpl; only 1: intros H; only 1: now destruct (sub_mask_pos n m H) as (p, ->)).	0.0419747829437	8
Coq.PArith.BinPos.Pos.sub_xO_xI	40
Coq.PArith.BinPos.Pos.sub_mask_neg_iff'	40	0.2.0.4.0.0.0.0.12	search with cache (only 1: rewrite lt_iff_add; only 1: split; only 1: case sub_mask_spec; only 1: discriminate; only 1: discriminate; only 1: intros r Hr _; only 1: now exists r; only 1: intros (r, <-); only 1: apply sub_mask_add_diag_r).	32.1864981651	17804
Coq.PArith.BinPos.Pos.sub_mask_neg	40	1.0	search with cache (only 1: rewrite lt_iff_add; only 1: apply sub_mask_neg_iff).	0.0768370628357	11
Coq.PArith.BinPos.Pos.sub_le	40
Coq.PArith.BinPos.Pos.sub_lt	40	0.0.0.0.0.0.23	search with cache (only 1: unfold lt; only 1: unfold le, sub; only 1: rewrite compare_sub_mask; only 1: destruct sub_mask; only 1: easy'; only 1: easy'; only 1: easy').	12.4961409569	7198
Coq.PArith.BinPos.Pos.sub_diag	40
Coq.PArith.BinPos.Pos.size_nat_monotone	40
Coq.PArith.BinPos.Pos.size_gt	40
Coq.PArith.BinPos.Pos.size_le	40
Coq.PArith.BinPos.Pos.max_l	40
Coq.PArith.BinPos.Pos.max_r	40	0.0.2.1.0.0.0.0	search with cache (only 1: intros x y H; only 1: unfold max; only 1: case compare_spec; only 1: now subst; only 1: auto; only 1: intros H'; only 1: apply le_nlt in H; only 1: now elim H).	1.53246998787	201
Coq.PArith.BinPos.Pos.min_l	40
Coq.PArith.BinPos.Pos.min_r	40	1.0.0.2.0.0.8.1	search with cache (only 1: intros x y H; only 1: unfold le, min; only 1: case compare_spec; only 1: now subst; only 1: intros H'; only 1: apply le_nlt in H; only 1: now elim H; only 1: auto).	12.4597029686	4777
Coq.PArith.BinPos.Pos.max_1_l	40
Coq.PArith.BinPos.Pos.max_1_r	40	1.1.0.2.0.2.0.0	search with cache (only 1: unfold max; only 1: case compare_spec; only 1: auto; only 1: intros H; only 1: apply lt_nle in H; only 1: elim H; only 1: apply le_1_l; only 1: auto).	1.9156999588	541
Coq.PArith.BinPos.Pos.min_1_l	40	1.36	search with cache (only 1: apply min_r || apply min_l; only 1: apply le_1_l).	1.84731483459	1482
Coq.PArith.BinPos.Pos.min_1_r	40	1.1.0.2.0.2.0.0	search with cache (only 1: unfold min; only 1: case compare_spec; only 1: auto; only 1: intros H; only 1: apply lt_nle in H; only 1: elim H; only 1: apply le_1_l; only 1: auto).	1.92861008644	495
Coq.PArith.BinPos.Pos.succ_max_distr	40
Coq.PArith.BinPos.Pos.succ_min_distr	40
Coq.PArith.BinPos.Pos.add_max_distr_l	40
Coq.PArith.BinPos.Pos.add_max_distr_r	40
Coq.PArith.BinPos.Pos.add_min_distr_l	40
Coq.PArith.BinPos.Pos.add_min_distr_r	40	0.0.0.2	search with cache (only 1: rewrite 3!(add_comm _ p); only 1: apply min_monotone; only 1: intros x x'; only 1: apply add_le_mono_l).	0.0465879440308	6
Coq.PArith.BinPos.Pos.mul_max_distr_l	40
Coq.PArith.BinPos.Pos.mul_max_distr_r	40
Coq.PArith.BinPos.Pos.mul_min_distr_l	40	0.0.27	search with cache (only 1: apply min_monotone; only 1: intros x x'; only 1: apply mul_le_mono_l).	12.647313118	2545
Coq.PArith.BinPos.Pos.mul_min_distr_r	40	0.0.0.1	search with cache (only 1: rewrite 3!(mul_comm _ p); only 1: apply min_monotone; only 1: intros x x'; only 1: apply mul_le_mono_l).	0.0469291210175	5
Coq.PArith.BinPos.Pos.iter_op_succ	40
Coq.PArith.BinPos.Pos.of_nat_succ	40
Coq.PArith.BinPos.Pos.pred_of_succ_nat	40
Coq.PArith.BinPos.Pos.succ_of_nat	40	1.2.3.2.1.5.3	search with cache (only 1: induction n; only 1: simpl; only 1: easy'; only 1: simpl; only 1: induction n; only 1: trivial; only 1: now rewrite IHn).	13.9327669144	2289
Coq.PArith.BinPos.Pos.sqrtrem_step_spec	40
Coq.PArith.BinPos.Pos.sqrtrem_spec	40
Coq.PArith.BinPos.Pos.sqrt_spec	40
Coq.PArith.BinPos.Pos.divide_add_cancel_l	40
Coq.PArith.BinPos.Pos.divide_xO_xI	40
Coq.PArith.BinPos.Pos.divide_xO_xO	40
Coq.PArith.BinPos.Pos.divide_mul_l	40
Coq.PArith.BinPos.Pos.divide_mul_r	40
Coq.PArith.BinPos.Pos.ggcdn_gcdn	40
Coq.PArith.BinPos.Pos.ggcd_gcd	40
Coq.PArith.BinPos.Pos.ggcdn_correct_divisors	40
Coq.PArith.BinPos.Pos.ggcd_correct_divisors	40
Coq.PArith.BinPos.Pos.gcd_divide_l	40
Coq.PArith.BinPos.Pos.gcd_divide_r	40
Coq.PArith.BinPos.Pos.gcdn_greatest	40
Coq.PArith.BinPos.Pos.gcd_greatest	40
Coq.PArith.BinPos.Pos.ggcd_greatest	40
Coq.PArith.BinPos.Peqb_true_eq	40	5.260	search with cache (only 1: fix sqrtrem_spec 1; only 1: intuition Pos.Private_Tac.order).	38.1592948437	149608
Coq.PArith.BinPos.Pcompare_eq_Gt	40	7	search with cache (only 1: intuition).	0.0586338043213	11
Coq.PArith.BinPos.Pminus_mask_Gt	40
Coq.PArith.BinPos.Pplus_minus	40
Coq.PArith.BinPos.Dcompare	40
Coq.Program.Subset.subset_eq	40
Coq.Program.Subset.match_eq_rewrite	40
Coq.Program.Wf.Fix_F_eq	40	4.12.10.7	search with cache (only 1: intro; only 1: intro p; only 1: destruct p; only 1: reflexivity).	1.90943408012	2101
Coq.Program.Wf.Fix_F_inv	40	0.6.16.11.1	search with cache (only 1: destruct r using Acc_inv_dep; only 1: intro p; only 1: destruct p; only 1: simpl in *; only 1: auto).	12.4342849255	8194
Coq.Program.Wf.Fix_eq	40
Coq.Program.Wf.fix_sub_eq	40	0.0.0.0.0.0	search with cache (only 1: intro x; only 1: unfold Fix_sub; only 1: rewrite <- Fix_F_eq; only 1: apply F_ext; only 1: intros; only 1: apply Fix_F_inv).	0.134465932846	6
Coq.Program.Wf.measure_wf	40
Coq.Program.Wf.F_unfold	40	0.1	search with cache (only 1: destruct r using Acc_inv_dep; only 1: auto).	0.0709419250488	3
Coq.Program.Wf.Fix_F_sub_rect	40	2.9.7.0	search with cache (only 1: intros; only 1: induction (Rwf x); only 1: rewrite <- Fix_F_eq; only 1: auto).	1.2043800354	806
Coq.Program.Wf.eq_Fix_F_sub	40	2.3.3.5	search with cache (only 1: induction (Rwf x); only 1: rewrite F_unfold; only 1: rewrite F_unfold; only 1: auto).	2.15202999115	570
Coq.Program.Wf.Fix_sub_rect	40
Coq.Program.Wf.WfExtensionality.fix_sub_eq_ext	40
Coq.Program.Equality.JMeq_eq_refl	40	3	search with cache (only 1: apply UIP).	0.0235559940338	4
Coq.Program.Equality.UIP_refl_refl	40	6	search with cache (only 1: apply UIP).	0.172118902206	24
Coq.Program.Equality.inj_pairT2_refl	40	21	search with cache (only 1: apply UIP).	0.953450918198	412
Coq.Program.Equality.solution_left	40	2.1.35	search with cache (only 1: intros; only 1: destruct H; only 1: trivial).	0.859037876129	972
Coq.Program.Equality.solution_right	40	3.0.0	search with cache (only 1: intros; only 1: subst; only 1: trivial).	0.0669798851013	6
Coq.Program.Equality.deletion	40	2.1	search with cache (only 1: intros; only 1: assumption).	0.0506920814514	5
Coq.Program.Equality.simplification_heq	40	1.7.30.9	search with cache (only 1: intros h1 h2; only 1: subst; only 1: apply h1; only 1: trivial).	2.2804210186	3704
Coq.Program.Equality.simplification_existT2	40	0.0.44.7.25	search with cache (only 1: intro H; only 1: intros; only 1: apply H; only 1: apply eq_dep_eq; only 1: auto using eq_sigT_eq_dep, eq_dep_eq_sigT).	8.76886177063	22626
Coq.Program.Equality.simplification_existT1	40	0.4.6.8.13.58	search with cache (only 1: intro eq_dep_eq; only 1: intros; only 1: apply eq_dep_eq; only 1: dependent rewrite H; only 1: auto using eq_sigT_eq_dep, eq_dep_eq_sigT; only 1: assumption).	23.1366639137	42324
Coq.Program.Equality.simplification_K	40	21.5.6	search with cache (only 1: intros; only 1: rewrite UIP_refl; only 1: assumption).	24.1777989864	9074
Coq.Program.Combinators.compose_id_left	40	8	search with cache (only 1: trivial).	0.0766189098358	16
Coq.Program.Combinators.compose_id_right	40	0.0	search with cache (only 1: intros; only 1: reflexivity).	0.0430970191956	2
Coq.Program.Combinators.compose_assoc	40	0.0	search with cache (only 1: intros; only 1: reflexivity).	0.0460770130157	2
Coq.Program.Combinators.flip_flip	40	0.0	search with cache (only 1: intros; only 1: reflexivity).	0.0411059856415	2
Coq.Program.Combinators.prod_uncurry_curry	40	0.0	search with cache (only 1: intros; only 1: reflexivity).	0.0208599567413	2
Coq.Program.Combinators.prod_curry_uncurry	40
Coq.QArith.Qreals.IZR_nz	40	1	search with cache (only 1: auto with real).	0.128116130829	2
Coq.QArith.Qreals.eqR_Qeq	40
Coq.QArith.Qreals.Qeq_eqR	40
Coq.QArith.Qreals.Rle_Qle	40
Coq.QArith.Qreals.Qle_Rle	40
Coq.QArith.Qreals.Rlt_Qlt	40
Coq.QArith.Qreals.Qlt_Rlt	40
Coq.QArith.Qreals.Q2R_plus	40
Coq.QArith.Qreals.Q2R_mult	40
Coq.QArith.Qreals.Q2R_opp	40
Coq.QArith.Qreals.Q2R_minus	40
Coq.QArith.Qreals.Q2R_inv	40
Coq.QArith.Qreals.Q2R_div	40
Coq.QArith.Qpower.Qpower_positive_1	40
Coq.QArith.Qpower.Qpower_1	40
Coq.QArith.Qpower.Qpower_positive_0	40	3.0.0.0.0.0.0.0	search with cache (only 1: induction n; only 1: simpl; only 1: rewrite IHn; only 1: reflexivity; only 1: simpl; only 1: rewrite IHn; only 1: reflexivity; only 1: reflexivity).	0.769828081131	132
Coq.QArith.Qpower.Qpower_0	40
Coq.QArith.Qpower.Qpower_not_0_positive	40
Coq.QArith.Qpower.Qpower_pos_positive	40
Coq.QArith.Qpower.Qpower_pos	40
Coq.QArith.Qpower.Qmult_power_positive	40
Coq.QArith.Qpower.Qmult_power	40
Coq.QArith.Qpower.Qinv_power_positive	40
Coq.QArith.Qpower.Qinv_power	40
Coq.QArith.Qpower.Qdiv_power	40
Coq.QArith.Qpower.Qinv_power_n	40
Coq.QArith.Qpower.Qpower_plus_positive	40
Coq.QArith.Qpower.Qpower_opp	40
Coq.QArith.Qpower.Qpower_minus_positive	40
Coq.QArith.Qpower.Qpower_plus	40
Coq.QArith.Qpower.Qpower_plus'	40
Coq.QArith.Qpower.Qpower_mult_positive	40
Coq.QArith.Qpower.Qpower_mult	40
Coq.QArith.Qpower.Zpower_Qpower	40
Coq.QArith.Qpower.Qsqr_nonneg	40
Coq.QArith.Qpower.Qpower_decomp	40
Coq.QArith.Qcabs.Qred_abs	40
Coq.QArith.Qcabs.Qcabs_canon	40
Coq.QArith.Qcabs.Qcabs_case	40
Coq.QArith.Qcabs.Qcabs_pos	40
Coq.QArith.Qcabs.Qcabs_neg	40
Coq.QArith.Qcabs.Qcabs_nonneg	40
Coq.QArith.Qcabs.Qcabs_opp	40
Coq.QArith.Qcabs.Qcabs_triangle	40	0.0.0.8	search with cache (only 1: Qc_unfolds; only 1: fold (this x); only 1: repeat rewrite Qred_correct; only 1: apply Qabs_triangle).	0.30774307251	47
Coq.QArith.Qcabs.Qcabs_Qcmult	40
Coq.QArith.Qcabs.Qcabs_Qcminus	40
Coq.QArith.Qcabs.Qcle_Qcabs	40
Coq.QArith.Qcabs.Qcabs_triangle_reverse	40
Coq.QArith.Qcabs.Qcabs_Qcle_condition	40	3.2.0.1.5	search with cache (only 1: Qc_unfolds; only 1: rewrite Qabs_Qle_condition; only 1: fold (this x) (this y) (this (- x)) (this (- y)); only 1: repeat rewrite Qred_correct; only 1: intuition).	1.92151999474	524
Coq.QArith.Qcabs.Qcabs_diff_Qcle_condition	40
Coq.QArith.Qcabs.Qcabs_null	40
Coq.QArith.Qabs.Qabs_case	40
Coq.QArith.Qabs.Qabs_wd_Proper	40
Coq.QArith.Qabs.Qabs_pos	40
Coq.QArith.Qabs.Qabs_neg	40
Coq.QArith.Qabs.Qabs_nonneg	40	1.1.2.2	search with cache (only 1: destruct x as [[| xn| xn] xd]; only 1: abstract (compute; discriminate); only 1: abstract (compute; discriminate); only 1: abstract (compute; discriminate)).	0.16361784935	26
Coq.QArith.Qabs.Zabs_Qabs	40	4.0.0.0	search with cache (only 1: simpl; only 1: unfold Qeq in *; only 1: simpl in *; only 1: congruence).	0.062539100647	8
Coq.QArith.Qabs.Qabs_opp	40	4.4.4.1.5	search with cache (only 1: intros x; only 1: destruct x as [[| xn| xn] xd]; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	17.3405730724	5675
Coq.QArith.Qabs.Qabs_triangle	40
Coq.QArith.Qabs.Qabs_Qmult	40	2.3.0.1.0.10	search with cache (only 1: intros [xn xd] [yn yd]; only 1: simpl; only 1: unfold Qeq in *; only 1: simpl in *; only 1: repeat rewrite <- Z.abs_mul; only 1: congruence).	20.155602932	6469
Coq.QArith.Qabs.Qabs_Qinv	40
Coq.QArith.Qabs.Qabs_Qminus	40
Coq.QArith.Qabs.Qle_Qabs	40	2.1.0.1.4.1.3	search with cache (only 1: intros x; only 1: destruct x as [[| xn| xn] xd]; only 1: abstract (compute; discriminate); only 1: unfold Qle; only 1: simpl; only 1: auto with *; only 1: abstract (compute; discriminate)).	6.86540794373	2090
Coq.QArith.Qabs.Qabs_triangle_reverse	40
Coq.QArith.Qabs.Qabs_Qle_condition	40
Coq.QArith.Qabs.Qabs_diff_Qle_condition	40
Coq.QArith.Qcanon.Qred_identity	40
Coq.QArith.Qcanon.Qred_identity2	40
Coq.QArith.Qcanon.Qred_iff	40
Coq.QArith.Qcanon.Qc_is_canon	40
Coq.QArith.Qcanon.Qc_decomp	40	0.0.0.3.2.0.0	search with cache (only 1: intros (q, hq) (q', hq') H; only 1: simpl in *; only 1: subst q'; only 1: f_equal; only 1: apply eq_proofs_unicity; only 1: intros; only 1: repeat decide equality).	0.766417980194	101
Coq.QArith.Qcanon.Qred_involutive	40	4.13.1	search with cache (only 1: intros (x, y); only 1: apply Qred_complete; only 1: now rewrite !Qred_correct).	12.7680361271	4371
Coq.QArith.Qcanon.Q2Qc_eq_iff	40
Coq.QArith.Qcanon.Qceq_alt	40
Coq.QArith.Qcanon.Qclt_alt	40	1.1.4	search with cache (only 1: split; only 1: auto; only 1: auto).	0.856142044067	81
Coq.QArith.Qcanon.Qcgt_alt	40
Coq.QArith.Qcanon.Qcle_alt	40	4.4.3.0.2	search with cache (only 1: unfold Qccompare; only 1: intros; only 1: split; only 1: auto; only 1: auto).	2.95033192635	1087
Coq.QArith.Qcanon.Qcge_alt	40
Coq.QArith.Qcanon.Qc_eq_dec	40
Coq.QArith.Qcanon.Q_apart_0_1	40	27.0	search with cache (only 1: intro H; only 1: discriminate).	1.26414084435	1126
Coq.QArith.Qcanon.Qcplus_assoc	40
Coq.QArith.Qcanon.Qcplus_0_l	40
Coq.QArith.Qcanon.Qcplus_0_r	40
Coq.QArith.Qcanon.Qcplus_comm	40
Coq.QArith.Qcanon.Qcopp_involutive	40
Coq.QArith.Qcanon.Qcplus_opp_r	40
Coq.QArith.Qcanon.Qcmult_assoc	40
Coq.QArith.Qcanon.Qcmult_0_l	40	4.2.0.7.0	search with cache (only 1: intros; only 1: apply Qc_is_canon; only 1: unfold Q2Qc; only 1: simpl in *; only 1: auto with qarith).	3.82986092567	1332
Coq.QArith.Qcanon.Qcmult_0_r	40
Coq.QArith.Qcanon.Qcmult_1_l	40
Coq.QArith.Qcanon.Qcmult_1_r	40	0.1.0.0	search with cache (only 1: intros; only 1: qc; only 1: rewrite Qmult_comm; only 1: apply Qmult_1_l).	0.134212970734	5
Coq.QArith.Qcanon.Qcmult_comm	40	6.5.0.0	search with cache (only 1: intros; only 1: qc; only 1: rewrite Qmult_comm; only 1: split).	1.44492220879	322
Coq.QArith.Qcanon.Qcmult_plus_distr_r	40
Coq.QArith.Qcanon.Qcmult_plus_distr_l	40
Coq.QArith.Qcanon.Qcmult_integral	40
Coq.QArith.Qcanon.Qcmult_integral_l	40
Coq.QArith.Qcanon.Qcmult_inv_r	40
Coq.QArith.Qcanon.Qcmult_inv_l	40	0.0.2.0.0	search with cache (only 1: intros; only 1: qc; only 1: rewrite Qmult_comm; only 1: apply Qmult_inv_r; only 1: auto).	0.23057103157	7
Coq.QArith.Qcanon.Qcinv_mult_distr	40
Coq.QArith.Qcanon.Qcdiv_mult_l	40
Coq.QArith.Qcanon.Qcmult_div_r	40
Coq.QArith.Qcanon.Qcle_refl	40	9.65.0	search with cache (only 1: intros; only 1: red; only 1: auto with qarith).	7.87712287903	15879
Coq.QArith.Qcanon.Qcle_antisym	40	9.0.1	search with cache (only 1: unfold Qcle; only 1: intros; only 1: auto with qarith).	0.8683989048	270
Coq.QArith.Qcanon.Qcle_trans	40
Coq.QArith.Qcanon.Qclt_not_eq	40
Coq.QArith.Qcanon.Qclt_le_weak	40	7.2.2	search with cache (only 1: unfold Qcle; only 1: unfold Qclt; only 1: auto with qarith).	1.7910888195	706
Coq.QArith.Qcanon.Qcle_lt_trans	40
Coq.QArith.Qcanon.Qclt_le_trans	40
Coq.QArith.Qcanon.Qclt_trans	40	2.0.4.0.0	search with cache (only 1: intros; only 1: eapply Qle_lt_trans; only 1: apply Qlt_le_weak; only 1: eauto; only 1: eauto).	1.12306404114	157
Coq.QArith.Qcanon.Qcnot_lt_le	40	13.0	search with cache (only 1: unfold Qcle, Qclt; only 1: auto with qarith).	2.30074596405	1078
Coq.QArith.Qcanon.Qcnot_le_lt	40	11.0.1	search with cache (only 1: unfold Qclt; only 1: intros; only 1: auto with qarith).	2.73619103432	1139
Coq.QArith.Qcanon.Qclt_not_le	40	1.0.3.1.1	search with cache (only 1: unfold Qclt; only 1: intros; only 1: intro; only 1: destruct (Qlt_not_eq _ _ H); only 1: auto with qarith).	0.677358865738	128
Coq.QArith.Qcanon.Qcle_not_lt	40	16.0	search with cache (only 1: unfold Qcle, Qclt; only 1: auto with qarith).	2.50766277313	1404
Coq.QArith.Qcanon.Qcle_lt_or_eq	40
Coq.QArith.Qcanon.Qc_dec	40
Coq.QArith.Qcanon.Qclt_le_dec	40
Coq.QArith.Qcanon.Qcopp_le_compat	40
Coq.QArith.Qcanon.Qcle_minus_iff	40
Coq.QArith.Qcanon.Qclt_minus_iff	40
Coq.QArith.Qcanon.Qcplus_le_compat	40
Coq.QArith.Qcanon.Qcmult_le_compat_r	40
Coq.QArith.Qcanon.Qcmult_lt_0_le_reg_r	40
Coq.QArith.Qcanon.Qcmult_lt_compat_r	40
Coq.QArith.Qcanon.Qcpower_1	40
Coq.QArith.Qcanon.Qcpower_0	40	1.0.4.0	search with cache (only 1: induction n; only 1: tauto; only 1: simpl; only 1: auto with qarith).	0.328053951263	40
Coq.QArith.Qcanon.Qcpower_pos	40
Coq.QArith.Qcanon.Qc_eq_bool_correct	40
Coq.QArith.Qcanon.Qcrt	40
Coq.QArith.Qcanon.Qcft	40
Coq.QArith.Qcanon.test_field	40	0.0.4.3.0.0	search with cache (only 1: unfold Qcdiv; only 1: intros; only 1: rewrite <- Qcmult_assoc; only 1: rewrite Qcmult_inv_l; only 1: apply Qcmult_1_r; only 1: tauto).	1.44091796875	306
Coq.QArith.Qround.Qopp_lt_compat	40
Coq.QArith.Qround.Qfloor_Z	40	44.107	search with cache (only 1: simpl in *; only 1: auto with zarith).	15.4785830975	45281
Coq.QArith.Qround.Qceiling_Z	40
Coq.QArith.Qround.Qfloor_le	40
Coq.QArith.Qround.Qle_ceiling	40
Coq.QArith.Qround.Qle_floor_ceiling	40	0.0.2.2.0.0	search with cache (only 1: intros x; only 1: apply Qle_trans with (- - x); only 1: rewrite Qopp_involutive; only 1: auto with *; only 1: change_no_check (Qceiling x : Q) with (- Qfloor (- x)); only 1: auto with *).	0.281675100327	10
Coq.QArith.Qround.Qlt_floor	40
Coq.QArith.Qround.Qceiling_lt	40
Coq.QArith.Qround.Qfloor_resp_le	40
Coq.QArith.Qround.Qceiling_resp_le	40
Coq.QArith.Qround.Qfloor_comp_Proper	40
Coq.QArith.Qround.Qceiling_comp_Proper	40	1.2.1.1.3	search with cache (only 1: intros x y H; only 1: apply Z.le_antisymm; only 1: auto with *; only 1: symmetry in H; only 1: auto with *).	3.93722915649	892
Coq.QArith.Qround.Zdiv_Qdiv	40
Coq.QArith.Qreduction.Qred_correct	40
Coq.QArith.Qreduction.Qred_complete	40
Coq.QArith.Qreduction.Qred_eq_iff	40
Coq.QArith.Qreduction.Qred_comp_Proper	40
Coq.QArith.Qreduction.Qplus'_correct	40
Coq.QArith.Qreduction.Qmult'_correct	40	1.0	search with cache (only 1: intros; only 1: apply Qred_correct).	0.0618929862976	3
Coq.QArith.Qreduction.Qminus'_correct	40	1.0	search with cache (only 1: intros; only 1: apply Qred_correct).	0.0695869922638	3
Coq.QArith.Qreduction.Qplus'_comp_Proper	40
Coq.QArith.Qreduction.Qmult'_comp_Proper	40	1.0.5.0	search with cache (only 1: intros; only 1: unfold Qmult'; only 1: rewrite H, H0; only 1: auto with qarith).	0.231472969055	10
Coq.QArith.Qreduction.Qminus'_comp_Proper	40	1.0.1.1	search with cache (only 1: unfold Qminus'; only 1: intros; only 1: rewrite H, H0; only 1: auto with qarith).	0.360098838806	19
Coq.QArith.Qreduction.Qred_opp	40
Coq.QArith.Qreduction.Qred_compare	40	0.2	search with cache (only 1: intros; only 1: now rewrite !Qred_correct).	2.0226650238	210
Coq.QArith.Qreduction.Qred_le	40	16	search with cache (only 1: now rewrite !Qred_correct).	7.69493603706	1623
Coq.QArith.Qreduction.Qred_lt	40	17	search with cache (only 1: now rewrite !Qred_correct).	8.8652279377	1726
Coq.QArith.Qfield.Qsrt	40
Coq.QArith.Qfield.Qsft	40
Coq.QArith.Qfield.Qpower_theory	40	3.0.1.0.0.0.0	search with cache (only 1: constructor; only 1: intros; only 1: destruct n; only 1: simpl; only 1: auto with *; only 1: simpl; only 1: reflexivity).	1.55427289009	158
Coq.QArith.Qfield.ex1	40	0	search with cache (only 1: exact Qmult_plus_distr_l).	0.0434591770172	1
Coq.QArith.Qfield.ex2	40	0.1	search with cache (only 1: intros; only 1: ring).	0.0835719108582	3
Coq.QArith.Qfield.ex3	40	0.1	search with cache (only 1: intros; only 1: ring).	0.0913479328156	3
Coq.QArith.Qfield.ex4	40	1	search with cache (only 1: ring).	0.0601561069489	2
Coq.QArith.Qfield.ex5	40	0	search with cache (only 1: ring).	0.0476629734039	1
Coq.QArith.Qfield.ex6	40	0	search with cache (only 1: ring).	0.0386347770691	1
Coq.QArith.Qfield.ex7	40	0.1	search with cache (only 1: intros; only 1: ring).	0.0464179515839	3
Coq.QArith.Qfield.ex8	40	1.0	search with cache (only 1: intro; only 1: ring).	0.12112903595	3
Coq.QArith.Qfield.ex9	40	1.0	search with cache (only 1: intro; only 1: ring).	0.121381044388	3
Coq.QArith.Qfield.ex10	40
Coq.QArith.Qfield.Qopp_plus	40	1.0.0.0.0	search with cache (only 1: red; only 1: simpl; only 1: intro; only 1: intro; only 1: ring).	0.11376619339	6
Coq.QArith.Qfield.Qopp_opp	40	0.0.0.0	search with cache (only 1: red; only 1: simpl; only 1: intros; only 1: ring).	0.105542898178	4
Coq.QArith.Qminmax.Q.plus_max_distr_l	40
Coq.QArith.Qminmax.Q.plus_max_distr_r	40
Coq.QArith.Qminmax.Q.plus_min_distr_l	40
Coq.QArith.Qminmax.Q.plus_min_distr_r	40	2.0.0.0.1.0.0.0.2.0	search with cache (only 1: intros; only 1: rewrite (Qplus_comm n p), (Qplus_comm m p), (Qplus_comm _ p); only 1: apply min_monotone; only 1: intros x x' Hx; only 1: rewrite Hx; only 1: auto with qarith; only 1: intros x x' Hx; only 1: apply Qplus_le_compat; only 1: q_order; only 1: q_order).	2.56847190857	510
Coq.QArith.QArith_base.inject_Z_injective	40
Coq.QArith.QArith_base.Qeq_alt	40
Coq.QArith.QArith_base.Qlt_alt	40	3.1.1.1	search with cache (only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: reflexivity).	0.301226854324	12
Coq.QArith.QArith_base.Qgt_alt	40
Coq.QArith.QArith_base.Qle_alt	40	3.1.1.1	search with cache (only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: reflexivity).	0.187241077423	12
Coq.QArith.QArith_base.Qge_alt	40
Coq.QArith.QArith_base.Qcompare_antisym	40
Coq.QArith.QArith_base.Qcompare_spec	40
Coq.QArith.QArith_base.Qeq_refl	40	1.0	search with cache (only 1: unfold Qeq, Qlt, Qcompare; only 1: now constructor).	0.133256196976	3
Coq.QArith.QArith_base.Qeq_sym	40	1	search with cache (only 1: auto with qarith).	0.2123939991	19
Coq.QArith.QArith_base.Qeq_trans	40
Coq.QArith.QArith_base.Q_Setoid	40
Coq.QArith.QArith_base.Qeq_dec	40
Coq.QArith.QArith_base.Qeq_bool_iff	40
Coq.QArith.QArith_base.Qeq_bool_eq	40	5.1.0.0	search with cache (only 1: symmetry; only 1: symmetry; only 1: apply Zeq_is_eq_bool; only 1: auto with qarith).	1.04816293716	82
Coq.QArith.QArith_base.Qeq_eq_bool	40	0	search with cache (only 1: apply Qeq_bool_iff).	0.0574049949646	1
Coq.QArith.QArith_base.Qeq_bool_neq	40
Coq.QArith.QArith_base.Qle_bool_iff	40
Coq.QArith.QArith_base.Qle_bool_imp_le	40	0	search with cache (only 1: apply Zle_is_le_bool).	0.0719981193542	1
Coq.QArith.QArith_base.Qnot_eq_sym	40	0.3	search with cache (only 1: unfold Qeq, Qlt, Qcompare; only 1: auto with qarith).	0.407503843307	21
Coq.QArith.QArith_base.Qeq_bool_comm	40
Coq.QArith.QArith_base.Qeq_bool_refl	40	4.1.0.0.0	search with cache (only 1: apply Qeq_bool_iff; only 1: apply Qeq_bool_iff; only 1: apply Qeq_bool_iff; only 1: unfold Qeq, Qlt, Qcompare; only 1: now constructor).	0.570397138596	45
Coq.QArith.QArith_base.Qeq_bool_sym	40	5.3	search with cache (only 1: rewrite !Qeq_bool_iff; only 1: now symmetry).	0.844384908676	37
Coq.QArith.QArith_base.Qeq_bool_trans	40	0.0.0.2.0.3	search with cache (only 1: rewrite !Qeq_bool_iff; only 1: unfold Qeq; only 1: intros XY YZ; only 1: apply Z.mul_reg_r with (QDen y); only 1: auto with qarith; only 1: now rewrite Z.mul_shuffle0, XY, Z.mul_shuffle0, YZ, Z.mul_shuffle0).	1.06906700134	91
Coq.QArith.QArith_base.Qmake_Qdiv	40	7.0.0.0	search with cache (only 1: unfold Qeq; only 1: simpl; only 1: rewrite !Z.mul_1_r; only 1: now constructor).	0.577165126801	78
Coq.QArith.QArith_base.Qplus_comp	40
Coq.QArith.QArith_base.Qopp_comp	40
Coq.QArith.QArith_base.Qminus_comp	40
Coq.QArith.QArith_base.Qmult_comp	40
Coq.QArith.QArith_base.Qinv_comp	40
Coq.QArith.QArith_base.Qdiv_comp	40
Coq.QArith.QArith_base.Qcompare_comp	40
Coq.QArith.QArith_base.Qle_comp	40
Coq.QArith.QArith_base.Qlt_compat	40
Coq.QArith.QArith_base.Qeqb_comp	40	4.0.3.9.1	search with cache (only 1: intros x x' Hx y y' Hy; only 1: apply eq_true_iff_eq; only 1: rewrite !Qeq_bool_iff; only 1: rewrite Hx, Hy; only 1: now symmetry).	34.0114428997	10190
Coq.QArith.QArith_base.Qleb_comp	40
Coq.QArith.QArith_base.Q_apart_0_1	40	0	search with cache (only 1: now subst).	0.0827488899231	1
Coq.QArith.QArith_base.Qplus_assoc	40	3.0.0.0.4.2	search with cache (only 1: unfold Qeq, Qplus; only 1: intros (p1, p2) (q1, q2) EQ; only 1: simpl in *; only 1: simpl_mult; only 1: ring_simplify; only 1: ring).	7.43064689636	661
Coq.QArith.QArith_base.Qplus_0_l	40	6.28.1.0	search with cache (only 1: unfold Qeq, Qplus; only 1: simpl; only 1: intros; only 1: ring).	16.9046170712	5462
Coq.QArith.QArith_base.Qplus_0_r	40	0.0.0.0.0	search with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: simpl_mult; only 1: ring).	0.286275148392	5
Coq.QArith.QArith_base.Qplus_comm	40	0.0.24.0.0.1	search with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: intros; only 1: simpl_mult; only 1: ring).	20.3352119923	5372
Coq.QArith.QArith_base.Qopp_involutive	40	3.0.0.3	search with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: ring).	0.297522068024	30
Coq.QArith.QArith_base.Qplus_opp_r	40	1.0.0.0	search with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: ring).	0.284240961075	5
Coq.QArith.QArith_base.Qplus_inj_r	40
Coq.QArith.QArith_base.Qplus_inj_l	40
Coq.QArith.QArith_base.Qmult_assoc	40	0.0.0.0.7	search with cache (only 1: intros (x1, x2) (y1, y2) (z1, z2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: simpl_mult; only 1: ring).	2.20330095291	227
Coq.QArith.QArith_base.Qmult_0_l	40	0.0.0	search with cache (only 1: red; only 1: simpl in *; only 1: now subst).	0.194780111313	3
Coq.QArith.QArith_base.Qmult_0_r	40	3.0.2.0	search with cache (only 1: intros; only 1: red; only 1: simpl in *; only 1: ring).	0.355381965637	17
Coq.QArith.QArith_base.Qmult_1_l	40
Coq.QArith.QArith_base.Qmult_1_r	40	2.2.5.0.0.0	search with cache (only 1: intro; only 1: red; only 1: simpl; only 1: rewrite Pos.mul_comm; only 1: simpl; only 1: ring).	7.12948203087	1477
Coq.QArith.QArith_base.Qmult_comm	40	2.1.0.2.0	search with cache (only 1: intros; only 1: red; only 1: simpl; only 1: rewrite Pos.mul_comm; only 1: ring).	0.687462091446	18
Coq.QArith.QArith_base.Qmult_plus_distr_r	40	0.0.0.0.3	search with cache (only 1: intros (x1, x2) (y1, y2) (z1, z2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: simpl_mult; only 1: ring).	1.85893297195	105
Coq.QArith.QArith_base.Qmult_plus_distr_l	40	0.0.0.0.0	search with cache (only 1: intros (x1, x2) (y1, y2) (z1, z2); only 1: unfold Qeq, Qmult, Qplus; only 1: simpl; only 1: simpl_mult; only 1: ring).	0.391266107559	5
Coq.QArith.QArith_base.Qmult_integral	40
Coq.QArith.QArith_base.Qmult_integral_l	40
Coq.QArith.QArith_base.inject_Z_plus	40
Coq.QArith.QArith_base.inject_Z_mult	40	0.3.0	search with cache (only 1: unfold Qplus, inject_Z; only 1: compute; only 1: f_equal).	0.1868019104	6
Coq.QArith.QArith_base.inject_Z_opp	40	4.0	search with cache (only 1: unfold Qplus, inject_Z; only 1: now subst).	0.118881940842	6
Coq.QArith.QArith_base.Qinv_involutive	40
Coq.QArith.QArith_base.Qmult_inv_r	40
Coq.QArith.QArith_base.Qinv_mult_distr	40
Coq.QArith.QArith_base.Qdiv_mult_l	40
Coq.QArith.QArith_base.Qmult_div_r	40
Coq.QArith.QArith_base.Qinv_plus_distr	40	1.1.0.0.0	search with cache (only 1: unfold Qeq, Qplus; only 1: simpl; only 1: intros; only 1: simpl_mult; only 1: ring).	0.184377908707	7
Coq.QArith.QArith_base.Qinv_minus_distr	40	0.0.0.0.0	search with cache (only 1: intros; only 1: unfold Qeq; only 1: simpl; only 1: rewrite Pos2Z.inj_mul; only 1: ring).	0.187879800797	5
Coq.QArith.QArith_base.Qmult_inj_r	40
Coq.QArith.QArith_base.Qmult_inj_l	40
Coq.QArith.QArith_base.Qle_refl	40
Coq.QArith.QArith_base.Qle_antisym	40
Coq.QArith.QArith_base.Qle_trans	40
Coq.QArith.QArith_base.Qlt_irrefl	40	0.32	search with cache (only 1: apply Z.ge_le_iff; only 1: auto with zarith).	2.27227711678	1202
Coq.QArith.QArith_base.Qlt_not_eq	40
Coq.QArith.QArith_base.Zle_Qle	40	0.0.0.0.16	search with cache (only 1: unfold Qle; only 1: simpl; only 1: f_equal; only 1: ring; only 1: ring).	1.72370290756	768
Coq.QArith.QArith_base.Zlt_Qlt	40	0.0.6	search with cache (only 1: unfold Qeq, Qlt, Qcompare; only 1: simpl; only 1: now rewrite !Z.mul_1_r).	0.192912817001	18
Coq.QArith.QArith_base.Qle_lteq	40
Coq.QArith.QArith_base.Qlt_le_weak	40
Coq.QArith.QArith_base.Qle_lt_trans	40
Coq.QArith.QArith_base.Qlt_le_trans	40
Coq.QArith.QArith_base.Qlt_trans	40
Coq.QArith.QArith_base.Qnot_lt_le	40	15	search with cache (only 1: apply Z.ge_le_iff).	0.626233100891	115
Coq.QArith.QArith_base.Qnot_le_lt	40
Coq.QArith.QArith_base.Qlt_not_le	40	0	search with cache (only 1: apply Z.nle_gt).	0.038861989975	1
Coq.QArith.QArith_base.Qle_not_lt	40	0	search with cache (only 1: apply Z.nlt_ge).	0.0838930606842	1
Coq.QArith.QArith_base.Qle_lt_or_eq	40
Coq.QArith.QArith_base.Q_dec	40
Coq.QArith.QArith_base.Qlt_le_dec	40
Coq.QArith.QArith_base.Qarchimedean	40
Coq.QArith.QArith_base.Qopp_le_compat	40
Coq.QArith.QArith_base.Qle_minus_iff	40
Coq.QArith.QArith_base.Qlt_minus_iff	40
Coq.QArith.QArith_base.Qplus_le_compat	40
Coq.QArith.QArith_base.Qplus_lt_le_compat	40
Coq.QArith.QArith_base.Qplus_le_l	40
Coq.QArith.QArith_base.Qplus_le_r	40
Coq.QArith.QArith_base.Qplus_lt_l	40
Coq.QArith.QArith_base.Qplus_lt_r	40
Coq.QArith.QArith_base.Qmult_le_compat_r	40
Coq.QArith.QArith_base.Qmult_lt_0_le_reg_r	40
Coq.QArith.QArith_base.Qmult_le_r	40
Coq.QArith.QArith_base.Qmult_le_l	40	0.4.1.2.0.2.0.6	search with cache (only 1: rewrite (Qmult_comm z x), (Qmult_comm z y); only 1: split; only 1: intro; only 1: now apply Qmult_lt_0_le_reg_r with z; only 1: intro; only 1: apply Qmult_le_compat_r; only 1: auto with qarith; only 1: auto with qarith).	22.1071429253	4642
Coq.QArith.QArith_base.Qmult_lt_compat_r	40
Coq.QArith.QArith_base.Qmult_lt_r	40
Coq.QArith.QArith_base.Qmult_lt_l	40
Coq.QArith.QArith_base.Qmult_le_0_compat	40
Coq.QArith.QArith_base.Qinv_le_0_compat	40
Coq.QArith.QArith_base.Qle_shift_div_l	40
Coq.QArith.QArith_base.Qle_shift_inv_l	40
Coq.QArith.QArith_base.Qle_shift_div_r	40
Coq.QArith.QArith_base.Qle_shift_inv_r	40
Coq.QArith.QArith_base.Qinv_lt_0_compat	40	0.0.0.5	search with cache (only 1: intros [[| n| n] d] Ha; only 1: assumption; only 1: assumption; only 1: assumption).	0.18203997612	9
Coq.QArith.QArith_base.Qlt_shift_div_l	40
Coq.QArith.QArith_base.Qlt_shift_inv_l	40
Coq.QArith.QArith_base.Qlt_shift_div_r	40
Coq.QArith.QArith_base.Qlt_shift_inv_r	40
Coq.QArith.QArith_base.Qinv_lt_contravar	40
Coq.QArith.QArith_base.Qpower_positive_comp	40
Coq.QArith.QArith_base.Qpower_comp	40
Coq.QArith.QOrderedType.Q_as_OT.lt_strorder	40
Coq.QArith.QOrderedType.Q_as_OT.lt_compat	40	0.0.0	search with cache (only 1: intros p q H r s H'; only 1: rewrite 2!Qlt_alt, H, H'; only 1: auto with *).	0.203817844391	3
Coq.Reals.NewtonInt.FTCN_step1	40
Coq.Reals.NewtonInt.FTC_Newton	40	5.0	search with cache (only 1: intros f a b; only 1: split).	0.195862054825	14
Coq.Reals.NewtonInt.NewtonInt_P1	40
Coq.Reals.NewtonInt.NewtonInt_P2	40
Coq.Reals.NewtonInt.NewtonInt_P3	40
Coq.Reals.NewtonInt.NewtonInt_P4	40
Coq.Reals.NewtonInt.NewtonInt_P5	40
Coq.Reals.NewtonInt.antiderivative_P1	40
Coq.Reals.NewtonInt.NewtonInt_P6	40
Coq.Reals.NewtonInt.antiderivative_P2	40
Coq.Reals.NewtonInt.antiderivative_P3	40
Coq.Reals.NewtonInt.antiderivative_P4	40
Coq.Reals.NewtonInt.NewtonInt_P7	40
Coq.Reals.NewtonInt.NewtonInt_P8	40
Coq.Reals.NewtonInt.NewtonInt_P9	40
Coq.Reals.Machin.atan_sub_correct	40
Coq.Reals.Machin.tech	40
Coq.Reals.Machin.Machin_2_3	40
Coq.Reals.Machin.Machin_4_5_239	40
Coq.Reals.Machin.Machin_2_3_7	40
Coq.Reals.Machin.PI_2_3_7_ineq	40
Coq.Reals.Ratan.Ropp_div	40	14.5	search with cache (only 1: intros; only 1: lra).	3.81231999397	750
Coq.Reals.Ratan.pos_half_prf	40	1	search with cache (only 1: lra).	0.0857360363007	11
Coq.Reals.Ratan.Boule_half_to_interval	40
Coq.Reals.Ratan.Boule_lt	40
Coq.Reals.Ratan.Un_cv_ext	40
Coq.Reals.Ratan.Alt_first_term_bound	40
Coq.Reals.Ratan.Alt_CVU	40
Coq.Reals.Ratan.pow2_ge_0	40
Coq.Reals.Ratan.pow2_abs	40
Coq.Reals.Ratan.derivable_pt_tan	40
Coq.Reals.Ratan.derive_pt_tan	40
Coq.Reals.Ratan.derive_increasing_interv	40
Coq.Reals.Ratan.plus_Rsqr_gt_0	40
Coq.Reals.Ratan.PI2_lower_bound	40
Coq.Reals.Ratan.PI2_3_2	40
Coq.Reals.Ratan.PI2_1	40
Coq.Reals.Ratan.tan_increasing	40
Coq.Reals.Ratan.tan_is_inj	40
Coq.Reals.Ratan.exists_atan_in_frame	40
Coq.Reals.Ratan.tan_1_gt_1	40
Coq.Reals.Ratan.frame_tan	40
Coq.Reals.Ratan.ub_opp	40	4.0.5	search with cache (only 1: intros; only 1: unfold Rdiv; only 1: lra).	0.750555038452	156
Coq.Reals.Ratan.pos_opp_lt	40	2.0	search with cache (only 1: intros x h; only 1: lra).	0.0521349906921	4
Coq.Reals.Ratan.tech_opp_tan	40
Coq.Reals.Ratan.pre_atan	40
Coq.Reals.Ratan.atan_bound	40
Coq.Reals.Ratan.atan_right_inv	40
Coq.Reals.Ratan.atan_opp	40
Coq.Reals.Ratan.derivable_pt_atan	40
Coq.Reals.Ratan.atan_increasing	40
Coq.Reals.Ratan.atan_0	40
Coq.Reals.Ratan.atan_1	40
Coq.Reals.Ratan.derive_pt_atan	40
Coq.Reals.Ratan.derivable_pt_lim_atan	40
Coq.Reals.Ratan.Ratan_seq_decreasing	40
Coq.Reals.Ratan.Ratan_seq_converging	40
Coq.Reals.Ratan.ps_atan_exists_01	40
Coq.Reals.Ratan.Ratan_seq_opp	40
Coq.Reals.Ratan.sum_Ratan_seq_opp	40
Coq.Reals.Ratan.ps_atan_exists_1	40
Coq.Reals.Ratan.in_int	40
Coq.Reals.Ratan.ps_atan0_0	40
Coq.Reals.Ratan.ps_atan_exists_1_opp	40
Coq.Reals.Ratan.ps_atan_opp	40
Coq.Reals.Ratan.ps_atanSeq_continuity_pt_1	40
Coq.Reals.Ratan.pow_lt_1_compat	40
Coq.Reals.Ratan.Datan_seq_Rabs	40
Coq.Reals.Ratan.Datan_seq_pos	40	2.0.0	search with cache (only 1: intros x n; only 1: unfold Datan_seq; only 1: apply pow_lt).	0.0699210166931	5
Coq.Reals.Ratan.Datan_sum_eq	40
Coq.Reals.Ratan.Datan_seq_increasing	40
Coq.Reals.Ratan.Datan_seq_decreasing	40
Coq.Reals.Ratan.Datan_seq_CV_0	40
Coq.Reals.Ratan.Datan_lim	40
Coq.Reals.Ratan.Datan_CVU_prelim	40
Coq.Reals.Ratan.Datan_is_datan	40
Coq.Reals.Ratan.Ratan_CVU'	40
Coq.Reals.Ratan.Ratan_CVU	40
Coq.Reals.Ratan.Alt_PI_tg	40	0.1.0.4.0.13	search with cache (only 1: symmetry; only 1: unfold Ratan_seq, PI_tg; only 1: rewrite pow1; only 1: unfold Rdiv; only 1: rewrite Rmult_1_l; only 1: ring).	5.70445895195	1821
Coq.Reals.Ratan.Ratan_is_ps_atan	40
Coq.Reals.Ratan.Datan_continuity	40
Coq.Reals.Ratan.derivable_pt_lim_ps_atan	40
Coq.Reals.Ratan.derivable_pt_ps_atan	40
Coq.Reals.Ratan.ps_atan_continuity_pt_1	40
Coq.Reals.Ratan.Datan_eq_DatanSeq_interv	40
Coq.Reals.Ratan.atan_eq_ps_atan	40
Coq.Reals.Ratan.Alt_PI_eq	40
Coq.Reals.Ratan.PI_ineq	40
Coq.Reals.Ranalysis5.f_incr_implies_g_incr_interv	40
Coq.Reals.Ranalysis5.derivable_pt_id_interv	40
Coq.Reals.Ranalysis5.pr_nu_var2_interv	40
Coq.Reals.Ranalysis5.leftinv_is_rightinv	40
Coq.Reals.Ranalysis5.leftinv_is_rightinv_interv	40
Coq.Reals.Ranalysis5.IVT_interv_prelim0	40
Coq.Reals.Ranalysis5.IVT_interv_prelim1	40
Coq.Reals.Ranalysis5.IVT_interv	40
Coq.Reals.Ranalysis5.f_interv_is_interv	40
Coq.Reals.Ranalysis5.continuity_pt_recip_prelim	40
Coq.Reals.Ranalysis5.continuity_pt_recip_interv	40
Coq.Reals.Ranalysis5.derivable_pt_lim_recip_interv	40
Coq.Reals.Ranalysis5.derivable_pt_recip_interv_prelim0	40
Coq.Reals.Ranalysis5.derivable_pt_recip_interv_prelim1	40	13	search with cache (only 1: intuition).	0.399885177612	60
Coq.Reals.Ranalysis5.derivable_pt_recip_interv	40
Coq.Reals.Ranalysis5.derive_pt_recip_interv_prelim0	40
Coq.Reals.Ranalysis5.derive_pt_recip_interv_prelim1_0	40
Coq.Reals.Ranalysis5.derive_pt_recip_interv_prelim1_1	40
Coq.Reals.Ranalysis5.derive_pt_recip_interv	40
Coq.Reals.Ranalysis5.ub_lt_2_pos	40
Coq.Reals.Ranalysis5.mkposreal_lb_ub	40
Coq.Reals.Ranalysis5.derivable_pt_lim_CVU	40
Coq.Reals.RiemannInt.phi_sequence_prop	40
Coq.Reals.RiemannInt.RiemannInt_P1	40
Coq.Reals.RiemannInt.RiemannInt_P2	40
Coq.Reals.RiemannInt.RiemannInt_P3	40
Coq.Reals.RiemannInt.RiemannInt_exists	40
Coq.Reals.RiemannInt.RiemannInt_P4	40
Coq.Reals.RiemannInt.RinvN_pos	40	103.0.7	search with cache (only 1: intros; only 1: apply Rinv_0_lt_compat; only 1: auto with real).	6.59450507164	17211
Coq.Reals.RiemannInt.RinvN_cv	40
Coq.Reals.RiemannInt.Riemann_integrable_ext	40
Coq.Reals.RiemannInt.RiemannInt_P5	40
Coq.Reals.RiemannInt.maxN	40
Coq.Reals.RiemannInt.Heine_cor1	40
Coq.Reals.RiemannInt.Heine_cor2	40
Coq.Reals.RiemannInt.SubEqui_P1	40	5.0	search with cache (only 1: intros; only 1: reflexivity).	0.092029094696	7
Coq.Reals.RiemannInt.SubEqui_P2	40
Coq.Reals.RiemannInt.SubEqui_P3	40
Coq.Reals.RiemannInt.SubEqui_P4	40
Coq.Reals.RiemannInt.SubEqui_P5	40
Coq.Reals.RiemannInt.SubEqui_P6	40
Coq.Reals.RiemannInt.SubEqui_P7	40
Coq.Reals.RiemannInt.SubEqui_P8	40
Coq.Reals.RiemannInt.SubEqui_P9	40
Coq.Reals.RiemannInt.RiemannInt_P6	40
Coq.Reals.RiemannInt.RiemannInt_P7	40
Coq.Reals.RiemannInt.continuity_implies_RiemannInt	40
Coq.Reals.RiemannInt.RiemannInt_P8	40
Coq.Reals.RiemannInt.RiemannInt_P9	40
Coq.Reals.RiemannInt.RiemannInt_P10	40
Coq.Reals.RiemannInt.RiemannInt_P11	40
Coq.Reals.RiemannInt.RiemannInt_P12	40
Coq.Reals.RiemannInt.RiemannInt_P13	40
Coq.Reals.RiemannInt.RiemannInt_P14	40
Coq.Reals.RiemannInt.RiemannInt_P15	40
Coq.Reals.RiemannInt.RiemannInt_P16	40
Coq.Reals.RiemannInt.Rle_cv_lim	40
Coq.Reals.RiemannInt.RiemannInt_P17	40
Coq.Reals.RiemannInt.RiemannInt_P18	40
Coq.Reals.RiemannInt.RiemannInt_P19	40
Coq.Reals.RiemannInt.FTC_P1	40
Coq.Reals.RiemannInt.RiemannInt_P20	40
Coq.Reals.RiemannInt.RiemannInt_P21	40
Coq.Reals.RiemannInt.RiemannInt_P22	40
Coq.Reals.RiemannInt.RiemannInt_P23	40
Coq.Reals.RiemannInt.RiemannInt_P24	40
Coq.Reals.RiemannInt.RiemannInt_P25	40
Coq.Reals.RiemannInt.RiemannInt_P26	40
Coq.Reals.RiemannInt.RiemannInt_P27	40
Coq.Reals.RiemannInt.RiemannInt_P28	40
Coq.Reals.RiemannInt.RiemannInt_P29	40
Coq.Reals.RiemannInt.RiemannInt_P30	40
Coq.Reals.RiemannInt.RiemannInt_P31	40
Coq.Reals.RiemannInt.RiemannInt_P32	40
Coq.Reals.RiemannInt.RiemannInt_P33	40
Coq.Reals.RiemannInt.FTC_Riemann	40
Coq.Reals.RiemannInt.RiemannInt_const_bound	40
Coq.Reals.RiemannInt.Riemann_integrable_scal	40
Coq.Reals.RiemannInt.Riemann_integrable_Ropp	40
Coq.Reals.RiemannInt_SF.IZN_var	40
Coq.Reals.RiemannInt_SF.Nzorn	40
Coq.Reals.RiemannInt_SF.StepFun_P1	40
Coq.Reals.RiemannInt_SF.StepFun_P2	40
Coq.Reals.RiemannInt_SF.StepFun_P3	40
Coq.Reals.RiemannInt_SF.StepFun_P4	40
Coq.Reals.RiemannInt_SF.StepFun_P5	40
Coq.Reals.RiemannInt_SF.StepFun_P6	40
Coq.Reals.RiemannInt_SF.StepFun_P7	40
Coq.Reals.RiemannInt_SF.StepFun_P8	40
Coq.Reals.RiemannInt_SF.StepFun_P9	40
Coq.Reals.RiemannInt_SF.StepFun_P10	40
Coq.Reals.RiemannInt_SF.StepFun_P11	40
Coq.Reals.RiemannInt_SF.StepFun_P12	40
Coq.Reals.RiemannInt_SF.StepFun_P13	40
Coq.Reals.RiemannInt_SF.StepFun_P14	40
Coq.Reals.RiemannInt_SF.StepFun_P15	40
Coq.Reals.RiemannInt_SF.StepFun_P16	40
Coq.Reals.RiemannInt_SF.StepFun_P17	40
Coq.Reals.RiemannInt_SF.StepFun_P18	40
Coq.Reals.RiemannInt_SF.StepFun_P19	40
Coq.Reals.RiemannInt_SF.StepFun_P20	40
Coq.Reals.RiemannInt_SF.StepFun_P21	40
Coq.Reals.RiemannInt_SF.StepFun_P22	40
Coq.Reals.RiemannInt_SF.StepFun_P23	40
Coq.Reals.RiemannInt_SF.StepFun_P24	40
Coq.Reals.RiemannInt_SF.StepFun_P25	40
Coq.Reals.RiemannInt_SF.StepFun_P26	40
Coq.Reals.RiemannInt_SF.StepFun_P27	40
Coq.Reals.RiemannInt_SF.StepFun_P28	40
Coq.Reals.RiemannInt_SF.StepFun_P29	40
Coq.Reals.RiemannInt_SF.StepFun_P30	40
Coq.Reals.RiemannInt_SF.StepFun_P31	40
Coq.Reals.RiemannInt_SF.StepFun_P32	40
Coq.Reals.RiemannInt_SF.StepFun_P33	40
Coq.Reals.RiemannInt_SF.StepFun_P34	40
Coq.Reals.RiemannInt_SF.StepFun_P35	40
Coq.Reals.RiemannInt_SF.StepFun_P36	40
Coq.Reals.RiemannInt_SF.StepFun_P37	40
Coq.Reals.RiemannInt_SF.StepFun_P38	40
Coq.Reals.RiemannInt_SF.StepFun_P39	40
Coq.Reals.RiemannInt_SF.StepFun_P40	40
Coq.Reals.RiemannInt_SF.StepFun_P41	40
Coq.Reals.RiemannInt_SF.StepFun_P42	40
Coq.Reals.RiemannInt_SF.StepFun_P43	40
Coq.Reals.RiemannInt_SF.StepFun_P44	40
Coq.Reals.RiemannInt_SF.StepFun_P45	40
Coq.Reals.RiemannInt_SF.StepFun_P46	40
Coq.Reals.Ranalysis_reg.AppVar	40
Coq.Reals.Rpower.P_Rmin	40
Coq.Reals.Rpower.exp_le_3	40
Coq.Reals.Rpower.exp_increasing	40
Coq.Reals.Rpower.exp_lt_inv	40
Coq.Reals.Rpower.exp_ineq1	40
Coq.Reals.Rpower.ln_exists1	40
Coq.Reals.Rpower.ln_exists	40
Coq.Reals.Rpower.exp_ln	40
Coq.Reals.Rpower.exp_inv	40
Coq.Reals.Rpower.exp_Ropp	40
Coq.Reals.Rpower.ln_increasing	40
Coq.Reals.Rpower.ln_exp	40
Coq.Reals.Rpower.ln_1	40	4.2.18.1	search with cache (only 1: apply exp_inv; only 1: rewrite exp_0; only 1: apply exp_ln; only 1: apply Rlt_0_1).	37.1038248539	11344
Coq.Reals.Rpower.ln_lt_inv	40
Coq.Reals.Rpower.ln_inv	40
Coq.Reals.Rpower.ln_mult	40
Coq.Reals.Rpower.ln_Rinv	40
Coq.Reals.Rpower.ln_continue	40
Coq.Reals.Rpower.Rpower_plus	40
Coq.Reals.Rpower.Rpower_mult	40
Coq.Reals.Rpower.Rpower_O	40
Coq.Reals.Rpower.Rpower_1	40	6.8.11.1	search with cache (only 1: unfold Rpower; only 1: intros H1; only 1: rewrite Rmult_1_l; only 1: apply exp_ln).	7.63000512123	3697
Coq.Reals.Rpower.Rpower_pow	40
Coq.Reals.Rpower.Rpower_lt	40
Coq.Reals.Rpower.Rpower_sqrt	40
Coq.Reals.Rpower.Rpower_Ropp	40
Coq.Reals.Rpower.powerRZ_Rpower	40
Coq.Reals.Rpower.Rle_Rpower	40
Coq.Reals.Rpower.ln_lt_2	40
Coq.Reals.Rpower.limit1_ext	40
Coq.Reals.Rpower.limit1_imp	40
Coq.Reals.Rpower.Rinv_Rdiv	40
Coq.Reals.Rpower.Dln	40
Coq.Reals.Rpower.derivable_pt_lim_ln	40
Coq.Reals.Rpower.D_in_imp	40
Coq.Reals.Rpower.D_in_ext	40	0.7.0.2	search with cache (only 1: intros f g D l x H; only 1: unfold D_in; only 1: rewrite <- H; only 1: auto).	2.56728792191	854
Coq.Reals.Rpower.Dpower	40
Coq.Reals.Rpower.derivable_pt_lim_power	40
Coq.Reals.Rpower.Rpower_mult_distr	40
Coq.Reals.Rpower.Rlt_Rpower_l	40
Coq.Reals.Rpower.Rle_Rpower_l	40
Coq.Reals.Rpower.arcsinh_sinh	40
Coq.Reals.Rpower.sinh_arcsinh	40
Coq.Reals.Rpower.derivable_pt_lim_arcsinh	40
Coq.Reals.Rpower.arcsinh_lt	40
Coq.Reals.Rpower.arcsinh_le	40
Coq.Reals.Rpower.arcsinh_0	40
Coq.Reals.Exp_prop.E1_cvg	40
Coq.Reals.Exp_prop.exp_form	40
Coq.Reals.Exp_prop.div2_double	40
Coq.Reals.Exp_prop.div2_S_double	40	1.2.0.0.0.3.0.2.0	search with cache (only 1: intro; only 1: induction N as [| N HrecN]; only 1: reflexivity; only 1: replace (2 * S N)%nat with S (S (2 * N)); only 1: simpl; only 1: simpl in HrecN; only 1: rewrite HrecN; only 1: reflexivity; only 1: ring).	11.5573070049	2600
Coq.Reals.Exp_prop.div2_not_R0	40
Coq.Reals.Exp_prop.Reste_E_maj	40
Coq.Reals.Exp_prop.maj_Reste_cv_R0	40
Coq.Reals.Exp_prop.Reste_E_cv	40
Coq.Reals.Exp_prop.exp_plus	40
Coq.Reals.Exp_prop.exp_pos_pos	40
Coq.Reals.Exp_prop.exp_pos	40
Coq.Reals.Exp_prop.derivable_pt_lim_exp_0	40
Coq.Reals.Exp_prop.derivable_pt_lim_exp	40
Coq.Reals.Ranalysis4.derivable_pt_inv	40
Coq.Reals.Ranalysis4.pr_nu_var	40
Coq.Reals.Ranalysis4.pr_nu_var2	40
Coq.Reals.Ranalysis4.derivable_inv	40
Coq.Reals.Ranalysis4.derive_pt_inv	40
Coq.Reals.Ranalysis4.Rabs_derive_1	40
Coq.Reals.Ranalysis4.Rabs_derive_2	40
Coq.Reals.Ranalysis4.Rderivable_pt_abs	40
Coq.Reals.Ranalysis4.Rcontinuity_abs	40
Coq.Reals.Ranalysis4.continuity_finite_sum	40
Coq.Reals.Ranalysis4.derivable_pt_lim_fs	40
Coq.Reals.Ranalysis4.derivable_pt_lim_finite_sum	40
Coq.Reals.Ranalysis4.derivable_pt_finite_sum	40
Coq.Reals.Ranalysis4.derivable_finite_sum	40
Coq.Reals.Ranalysis4.derivable_pt_lim_cosh	40
Coq.Reals.Ranalysis4.derivable_pt_lim_sinh	40
Coq.Reals.Ranalysis4.derivable_pt_exp	40
Coq.Reals.Ranalysis4.derivable_pt_cosh	40
Coq.Reals.Ranalysis4.derivable_pt_sinh	40
Coq.Reals.Ranalysis4.derivable_exp	40	0.0.0.0	search with cache (only 1: intro x; only 1: unfold derivable_pt; only 1: exists (exp x); only 1: apply derivable_pt_lim_exp).	0.111258983612	4
Coq.Reals.Ranalysis4.derivable_cosh	40	0.0.0.5	search with cache (only 1: intro; only 1: unfold derivable_pt; only 1: exists (sinh x); only 1: apply derivable_pt_lim_cosh).	0.951748847961	114
Coq.Reals.Ranalysis4.derivable_sinh	40	0.0.0.4	search with cache (only 1: intro; only 1: unfold derivable_pt; only 1: exists (cosh x); only 1: apply derivable_pt_lim_sinh).	1.2404589653	137
Coq.Reals.Ranalysis4.derive_pt_exp	40
Coq.Reals.Ranalysis4.derive_pt_cosh	40	2.2.0	search with cache (only 1: intros; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_cosh).	1.88567614555	209
Coq.Reals.Ranalysis4.derive_pt_sinh	40	3.0.0	search with cache (only 1: intro; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_sinh).	0.989421129227	110
Coq.Reals.Ranalysis4.sinh_lt	40
Coq.Reals.Rgeom.distance_refl	40
Coq.Reals.Rgeom.distance_symm	40
Coq.Reals.Rgeom.law_cosines	40
Coq.Reals.Rgeom.triangle	40
Coq.Reals.Rgeom.translation_0	40
Coq.Reals.Rgeom.isometric_translation	40
Coq.Reals.Rgeom.rotation_0	40
Coq.Reals.Rgeom.rotation_PI2	40
Coq.Reals.Rgeom.isometric_rotation_0	40
Coq.Reals.Rgeom.isometric_rotation	40
Coq.Reals.Rgeom.isometric_rot_trans	40
Coq.Reals.Rgeom.isometric_trans_rot	40
Coq.Reals.Rtrigo1.CVN_R_cos	40
Coq.Reals.Rtrigo1.continuity_cos	40
Coq.Reals.Rtrigo1.sin_gt_cos_7_8	40
Coq.Reals.Rtrigo1.PI_2_aux	40
Coq.Reals.Rtrigo1.cos_pi2	40
Coq.Reals.Rtrigo1.pi2_int	40
Coq.Reals.Rtrigo1.cos_minus	40
Coq.Reals.Rtrigo1.sin2_cos2	40
Coq.Reals.Rtrigo1.cos2	40
Coq.Reals.Rtrigo1.sin2	40	0.0.0	search with cache (only 1: intros x; only 1: rewrite <- (sin2_cos2 x); only 1: ring).	0.205136060715	3
Coq.Reals.Rtrigo1.cos_PI2	40
Coq.Reals.Rtrigo1.sin_pos_tech	40
Coq.Reals.Rtrigo1.sin_PI2	40
Coq.Reals.Rtrigo1.PI_RGT_0	40
Coq.Reals.Rtrigo1.PI_4	40	0.3.1.1	search with cache (only 1: unfold PI; only 1: generalize cos_pi2; only 1: destruct pi2_int; only 1: lra).	0.641540050507	15
Coq.Reals.Rtrigo1.PI_neq0	40	0.3.1.0.0	search with cache (only 1: unfold PI; only 1: generalize cos_pi2; only 1: generalize cos_pi2; only 1: destruct pi2_int; only 1: lra).	0.733645915985	15
Coq.Reals.Rtrigo1.cos_PI	40
Coq.Reals.Rtrigo1.sin_PI	40
Coq.Reals.Rtrigo1.sin_bound	40
Coq.Reals.Rtrigo1.cos_bound	40
Coq.Reals.Rtrigo1.neg_cos	40
Coq.Reals.Rtrigo1.sin_cos	40	0.4.0.0.0	search with cache (only 1: intro x; only 1: rewrite cos_plus; only 1: rewrite sin_PI2; only 1: rewrite cos_PI2; only 1: ring).	0.376446962357	9
Coq.Reals.Rtrigo1.sin_plus	40
Coq.Reals.Rtrigo1.sin_minus	40
Coq.Reals.Rtrigo1.tan_plus	40
Coq.Reals.Rtrigo1.sin_2a	40
Coq.Reals.Rtrigo1.cos_2a	40	6.3.10.2.0	search with cache (only 1: intro x; only 1: rewrite double; only 1: unfold Rminus; only 1: rewrite cos_plus; only 1: ring).	3.26634287834	1581
Coq.Reals.Rtrigo1.cos_2a_cos	40
Coq.Reals.Rtrigo1.cos_2a_sin	40
Coq.Reals.Rtrigo1.tan_2a	40
Coq.Reals.Rtrigo1.sin_neg	40
Coq.Reals.Rtrigo1.cos_neg	40
Coq.Reals.Rtrigo1.tan_0	40
Coq.Reals.Rtrigo1.tan_neg	40
Coq.Reals.Rtrigo1.tan_minus	40
Coq.Reals.Rtrigo1.cos_3PI2	40
Coq.Reals.Rtrigo1.sin_2PI	40	1.0.0.1	search with cache (only 1: rewrite double; only 1: rewrite sin_plus; only 1: rewrite sin_PI; only 1: ring).	0.152344942093	6
Coq.Reals.Rtrigo1.cos_2PI	40	0.2.0.0.2	search with cache (only 1: repeat rewrite double; only 1: rewrite cos_plus; only 1: rewrite sin_PI; only 1: rewrite cos_PI; only 1: ring).	0.654335975647	112
Coq.Reals.Rtrigo1.neg_sin	40	0.0.0.4.0	search with cache (only 1: intro x; only 1: rewrite sin_plus; only 1: rewrite sin_PI; only 1: rewrite cos_PI; only 1: ring).	0.280273914337	22
Coq.Reals.Rtrigo1.sin_PI_x	40	0.1.0.0.0.0.0.0	search with cache (only 1: intros; only 1: unfold Rminus; only 1: rewrite sin_plus; only 1: rewrite sin_PI; only 1: rewrite cos_PI; only 1: rewrite <- cos_sym; only 1: rewrite sin_antisym; only 1: ring).	0.218914985657	9
Coq.Reals.Rtrigo1.sin_period	40
Coq.Reals.Rtrigo1.cos_period	40
Coq.Reals.Rtrigo1.sin_shift	40
Coq.Reals.Rtrigo1.cos_shift	40
Coq.Reals.Rtrigo1.cos_sin	40	3.0.0.0.0.0.0.1.0.0	search with cache (only 1: intro x; only 1: rewrite (sin_cos (PI / 2 + x)); only 1: replace (PI / 2 + (PI / 2 + x)) with x + PI; only 1: rewrite cos_plus; only 1: rewrite sin_PI; only 1: rewrite cos_PI; only 1: ring; only 1: pattern PI at 1; only 1: rewrite (double_var PI); only 1: ring).	14.8009150028	1526
Coq.Reals.Rtrigo1.PI2_RGT_0	40	0.3.3	search with cache (only 1: unfold PI; only 1: destruct pi2_int; only 1: lra).	0.510747909546	32
Coq.Reals.Rtrigo1.SIN_bound	40
Coq.Reals.Rtrigo1.COS_bound	40
Coq.Reals.Rtrigo1.cos_sin_0	40
Coq.Reals.Rtrigo1.cos_sin_0_var	40
Coq.Reals.Rtrigo1.sin_lb_gt_0	40
Coq.Reals.Rtrigo1.SIN	40
Coq.Reals.Rtrigo1.COS	40
Coq.Reals.Rtrigo1._PI2_RLT_0	40
Coq.Reals.Rtrigo1.PI4_RLT_PI2	40	0.3.49.0	search with cache (only 1: change_no_check 4 with 2²; only 1: pose proof PI_RGT_0 as H; only 1: unfold Rsqr; only 1: lra).	11.8148949146	10995
Coq.Reals.Rtrigo1.PI2_Rlt_PI	40	0.4	search with cache (only 1: pose proof PI_RGT_0 as H; only 1: lra).	0.0837240219116	13
Coq.Reals.Rtrigo1.sin_gt_0	40
Coq.Reals.Rtrigo1.cos_gt_0	40
Coq.Reals.Rtrigo1.sin_ge_0	40
Coq.Reals.Rtrigo1.cos_ge_0	40
Coq.Reals.Rtrigo1.sin_le_0	40
Coq.Reals.Rtrigo1.cos_le_0	40
Coq.Reals.Rtrigo1.sin_lt_0	40
Coq.Reals.Rtrigo1.sin_lt_0_var	40
Coq.Reals.Rtrigo1.cos_lt_0	40
Coq.Reals.Rtrigo1.tan_gt_0	40
Coq.Reals.Rtrigo1.tan_lt_0	40
Coq.Reals.Rtrigo1.cos_ge_0_3PI2	40
Coq.Reals.Rtrigo1.form1	40
Coq.Reals.Rtrigo1.form2	40	0.0.1.0.0.0.0.0	search with cache (only 1: intros p q; only 1: pattern p at 1; only 1: replace p with (p - q) / 2 + (p + q) / 2 by field; only 1: rewrite <- (cos_neg q); only 1: replace (- q) with (p - q) / 2 - (p + q) / 2 by field; only 1: rewrite cos_plus; only 1: rewrite cos_minus; only 1: ring).	0.323418855667	13
Coq.Reals.Rtrigo1.form3	40
Coq.Reals.Rtrigo1.form4	40
Coq.Reals.Rtrigo1.sin_increasing_0	40
Coq.Reals.Rtrigo1.sin_increasing_1	40
Coq.Reals.Rtrigo1.sin_decreasing_0	40
Coq.Reals.Rtrigo1.sin_decreasing_1	40
Coq.Reals.Rtrigo1.cos_increasing_0	40
Coq.Reals.Rtrigo1.cos_increasing_1	40
Coq.Reals.Rtrigo1.cos_decreasing_0	40
Coq.Reals.Rtrigo1.cos_decreasing_1	40
Coq.Reals.Rtrigo1.tan_diff	40
Coq.Reals.Rtrigo1.tan_increasing_0	40
Coq.Reals.Rtrigo1.tan_increasing_1	40
Coq.Reals.Rtrigo1.sin_incr_0	40
Coq.Reals.Rtrigo1.sin_incr_1	40
Coq.Reals.Rtrigo1.sin_decr_0	40
Coq.Reals.Rtrigo1.sin_decr_1	40
Coq.Reals.Rtrigo1.cos_incr_0	40
Coq.Reals.Rtrigo1.cos_incr_1	40
Coq.Reals.Rtrigo1.cos_decr_0	40
Coq.Reals.Rtrigo1.cos_decr_1	40
Coq.Reals.Rtrigo1.tan_incr_0	40
Coq.Reals.Rtrigo1.tan_incr_1	40
Coq.Reals.Rtrigo1.sin_eq_0_1	40
Coq.Reals.Rtrigo1.sin_eq_0_0	40
Coq.Reals.Rtrigo1.cos_eq_0_0	40
Coq.Reals.Rtrigo1.cos_eq_0_1	40
Coq.Reals.Rtrigo1.sin_eq_O_2PI_0	40
Coq.Reals.Rtrigo1.sin_eq_O_2PI_1	40
Coq.Reals.Rtrigo1.cos_eq_0_2PI_0	40
Coq.Reals.Rtrigo1.cos_eq_0_2PI_1	40
Coq.Reals.Rtrigo_calc.tan_PI	40
Coq.Reals.Rtrigo_calc.sin_3PI2	40
Coq.Reals.Rtrigo_calc.tan_2PI	40
Coq.Reals.Rtrigo_calc.sin_cos_PI4	40
Coq.Reals.Rtrigo_calc.sin_PI3_cos_PI6	40
Coq.Reals.Rtrigo_calc.sin_PI6_cos_PI3	40
Coq.Reals.Rtrigo_calc.PI6_RGT_0	40
Coq.Reals.Rtrigo_calc.PI6_RLT_PI2	40
Coq.Reals.Rtrigo_calc.sin_PI6	40
Coq.Reals.Rtrigo_calc.sqrt2_neq_0	40
Coq.Reals.Rtrigo_calc.R1_sqrt2_neq_0	40
Coq.Reals.Rtrigo_calc.sqrt3_2_neq_0	40
Coq.Reals.Rtrigo_calc.Rlt_sqrt2_0	40
Coq.Reals.Rtrigo_calc.Rlt_sqrt3_0	40
Coq.Reals.Rtrigo_calc.PI4_RGT_0	40
Coq.Reals.Rtrigo_calc.cos_PI4	40
Coq.Reals.Rtrigo_calc.sin_PI4	40
Coq.Reals.Rtrigo_calc.tan_PI4	40
Coq.Reals.Rtrigo_calc.cos_3PI4	40
Coq.Reals.Rtrigo_calc.sin_3PI4	40
Coq.Reals.Rtrigo_calc.cos_PI6	40
Coq.Reals.Rtrigo_calc.tan_PI6	40
Coq.Reals.Rtrigo_calc.sin_PI3	40	11.3.1.9	search with cache (only 1: rewrite sin_PI3_cos_PI6; only 1: rewrite cos_PI6; only 1: unfold Rdiv; only 1: ring).	29.4260818958	10617
Coq.Reals.Rtrigo_calc.cos_PI3	40
Coq.Reals.Rtrigo_calc.tan_PI3	40
Coq.Reals.Rtrigo_calc.sin_2PI3	40
Coq.Reals.Rtrigo_calc.cos_2PI3	40
Coq.Reals.Rtrigo_calc.tan_2PI3	40
Coq.Reals.Rtrigo_calc.cos_5PI4	40
Coq.Reals.Rtrigo_calc.sin_5PI4	40	0.4.2.0.0.5.1.0	search with cache (only 1: replace (5 * (PI / 4)) with PI / 4 + PI by field; only 1: rewrite sin_plus; only 1: rewrite cos_PI4; only 1: rewrite sin_PI; only 1: rewrite cos_PI; only 1: rewrite sin_PI4; only 1: unfold Rdiv; only 1: ring).	15.4073970318	3874
Coq.Reals.Rtrigo_calc.sin_cos5PI4	40	0.0.0.0.0.0.0	search with cache (only 1: replace (5 * (PI / 4)) with PI / 4 + PI by field; only 1: rewrite neg_cos; only 1: rewrite cos_PI4; only 1: rewrite neg_sin; only 1: rewrite sin_PI4; only 1: unfold Rdiv; only 1: ring).	0.190425872803	7
Coq.Reals.Rtrigo_calc.Rgt_3PI2_0	40
Coq.Reals.Rtrigo_calc.Rgt_2PI_0	40	1.24.8	search with cache (only 1: apply Rmult_lt_0_compat; only 1: prove_sup0; only 1: apply PI_RGT_0).	16.8106210232	10761
Coq.Reals.Rtrigo_calc.Rlt_PI_3PI2	40
Coq.Reals.Rtrigo_calc.Rlt_3PI2_2PI	40
Coq.Reals.Rtrigo_calc.rad_deg	40
Coq.Reals.Rtrigo_calc.toRad_inj	40
Coq.Reals.Rtrigo_calc.deg_rad	40
Coq.Reals.Rtrigo_calc.Rsqr_sin_cos_d_one	40
Coq.Reals.Rtrigo_calc.sin_lb_ge_0	40
Coq.Reals.Rtrigo_reg.continuity_sin	40
Coq.Reals.Rtrigo_reg.CVN_R_sin	40
Coq.Reals.Rtrigo_reg.derivable_pt_lim_sin_0	40
Coq.Reals.Rtrigo_reg.derivable_pt_lim_cos_0	40
Coq.Reals.Rtrigo_reg.derivable_pt_lim_sin	40
Coq.Reals.Rtrigo_reg.derivable_pt_lim_cos	40
Coq.Reals.Rtrigo_reg.derivable_pt_sin	40
Coq.Reals.Rtrigo_reg.derivable_pt_cos	40
Coq.Reals.Rtrigo_reg.derivable_sin	40	0.0.2.23.53	search with cache (only 1: set (r := {| pos := _; cond_pos := Rlt_0_1 |}); only 1: intro; only 1: unfold derivable_pt; only 1: exists (cos x); only 1: apply derivable_pt_lim_sin).	3.81508684158	4679
Coq.Reals.Rtrigo_reg.derivable_cos	40	0.0.1.0.0	search with cache (only 1: unfold derivable; only 1: unfold derivable_pt; only 1: intro; only 1: exists (- sin x); only 1: apply derivable_pt_lim_cos).	0.100023031235	6
Coq.Reals.Rtrigo_reg.derive_pt_sin	40
Coq.Reals.Rtrigo_reg.derive_pt_cos	40
Coq.Reals.Cos_plus.Majxy_cv_R0	40
Coq.Reals.Cos_plus.reste1_maj	40
Coq.Reals.Cos_plus.reste2_maj	40
Coq.Reals.Cos_plus.reste1_cv_R0	40
Coq.Reals.Cos_plus.reste2_cv_R0	40
Coq.Reals.Cos_plus.reste_cv_R0	40
Coq.Reals.Cos_plus.cos_plus	40
Coq.Reals.Cos_rel.cos_plus_form	40
Coq.Reals.Cos_rel.pow_sqr	40
Coq.Reals.Cos_rel.A1_cvg	40
Coq.Reals.Cos_rel.C1_cvg	40
Coq.Reals.Cos_rel.B1_cvg	40
Coq.Reals.Rtrigo_alt.pre_sin_bound	40
Coq.Reals.Rtrigo_alt.pre_cos_bound	40
Coq.Reals.Rtrigo_def.exp_cof_no_R0	40
Coq.Reals.Rtrigo_def.exist_exp	40
Coq.Reals.Rtrigo_def.pow_i	40	1.0.5.0.0.32.36.24	search with cache (only 1: intro; only 1: intro X; only 1: elim X; only 1: simpl; only 1: ring; only 1: intros; only 1: simpl; only 1: ring).	20.9809679985	31341
Coq.Reals.Rtrigo_def.exist_exp0	40
Coq.Reals.Rtrigo_def.exp_0	40
Coq.Reals.Rtrigo_def.cosh_0	40
Coq.Reals.Rtrigo_def.sinh_0	40
Coq.Reals.Rtrigo_def.simpl_cos_n	40
Coq.Reals.Rtrigo_def.archimed_cor1	40
Coq.Reals.Rtrigo_def.Alembert_cos	40
Coq.Reals.Rtrigo_def.cosn_no_R0	40	0.0.0.0.5.0	search with cache (only 1: intro; only 1: apply Rmult_integral_contrapositive_currified; only 1: apply pow_nonzero; only 1: discrR; only 1: apply Rinv_neq_0_compat; only 1: apply INR_fact_neq_0).	1.22093701363	161
Coq.Reals.Rtrigo_def.exist_cos	40
Coq.Reals.Rtrigo_def.simpl_sin_n	40
Coq.Reals.Rtrigo_def.Alembert_sin	40
Coq.Reals.Rtrigo_def.sin_no_R0	40	0.0.2.0.5.0	search with cache (only 1: intro; only 1: apply Rmult_integral_contrapositive_currified; only 1: apply pow_nonzero; only 1: discrR; only 1: apply Rinv_neq_0_compat; only 1: apply INR_fact_neq_0).	4.01337885857	506
Coq.Reals.Rtrigo_def.exist_sin	40
Coq.Reals.Rtrigo_def.cos_sym	40
Coq.Reals.Rtrigo_def.sin_antisym	40
Coq.Reals.Rtrigo_def.sin_0	40
Coq.Reals.Rtrigo_def.exist_cos0	40
Coq.Reals.Rtrigo_def.cos_0	40
Coq.Reals.Sqrt_reg.sqrt_var_maj	40
Coq.Reals.Sqrt_reg.sqrt_continuity_pt_R1	40
Coq.Reals.Sqrt_reg.sqrt_continuity_pt	40
Coq.Reals.Sqrt_reg.derivable_pt_lim_sqrt	40
Coq.Reals.Sqrt_reg.derivable_pt_sqrt	40
Coq.Reals.Sqrt_reg.derive_pt_sqrt	40
Coq.Reals.Sqrt_reg.continuity_pt_sqrt	40
Coq.Reals.R_sqrt.sqrt_pos	40
Coq.Reals.R_sqrt.sqrt_positivity	40
Coq.Reals.R_sqrt.sqrt_sqrt	40
Coq.Reals.R_sqrt.sqrt_0	40
Coq.Reals.R_sqrt.sqrt_1	40
Coq.Reals.R_sqrt.sqrt_eq_0	40
Coq.Reals.R_sqrt.sqrt_lem_0	40
Coq.Reals.R_sqrt.sqrt_lem_1	40
Coq.Reals.R_sqrt.sqrt_def	40	1.0	search with cache (only 1: intros; only 1: apply (sqrt_sqrt x H)).	0.0543329715729	3
Coq.Reals.R_sqrt.sqrt_square	40
Coq.Reals.R_sqrt.sqrt_Rsqr	40	0.0.0.0.0	search with cache (only 1: unfold Rsqr; only 1: intros; only 1: apply (Rsqr_inj (sqrt x²) x (sqrt_positivity x² (Rle_0_sqr x)) H); only 1: unfold Rsqr; only 1: apply (sqrt_sqrt x² (Rle_0_sqr x))).	0.0870561599731	5
Coq.Reals.R_sqrt.sqrt_pow2	40	0.0.0.12.0.1	search with cache (only 1: simpl; only 1: intros; only 1: rewrite Rmult_1_r; only 1: apply (Rsqr_inj (sqrt x²) x (sqrt_positivity x² (Rle_0_sqr x)) H); only 1: unfold Rsqr; only 1: apply (sqrt_sqrt x² (Rle_0_sqr x))).	3.23416590691	995
Coq.Reals.R_sqrt.sqrt_Rsqr_abs	40
Coq.Reals.R_sqrt.Rsqr_sqrt	40	1.0.0	search with cache (only 1: unfold Rsqr; only 1: intros; only 1: apply (sqrt_sqrt x H)).	0.0594799518585	4
Coq.Reals.R_sqrt.sqrt_mult_alt	40
Coq.Reals.R_sqrt.sqrt_mult	40
Coq.Reals.R_sqrt.sqrt_lt_R0	40
Coq.Reals.R_sqrt.Rlt_mult_inv_pos	40
Coq.Reals.R_sqrt.Rle_mult_inv_pos	40	0.8.0.0	search with cache (only 1: intros x y H H0; only 1: replace 0 with x * 0; only 1: auto with real; only 1: ring).	2.13915681839	344
Coq.Reals.R_sqrt.sqrt_div_alt	40
Coq.Reals.R_sqrt.sqrt_div	40
Coq.Reals.R_sqrt.sqrt_lt_0_alt	40
Coq.Reals.R_sqrt.sqrt_lt_0	40
Coq.Reals.R_sqrt.sqrt_lt_1_alt	40
Coq.Reals.R_sqrt.sqrt_lt_1	40
Coq.Reals.R_sqrt.sqrt_le_0	40
Coq.Reals.R_sqrt.sqrt_le_1_alt	40
Coq.Reals.R_sqrt.sqrt_le_1	40
Coq.Reals.R_sqrt.sqrt_inj	40
Coq.Reals.R_sqrt.sqrt_less_alt	40
Coq.Reals.R_sqrt.sqrt_less	40
Coq.Reals.R_sqrt.sqrt_more	40
Coq.Reals.R_sqrt.sqrt_cauchy	40
Coq.Reals.R_sqrt.Rsqr_sol_eq_0_1	40
Coq.Reals.R_sqrt.Rsqr_sol_eq_0_0	40
Coq.Reals.PSeries_reg.Boule_convex	40
Coq.Reals.PSeries_reg.boule_of_interval	40
Coq.Reals.PSeries_reg.boule_in_interval	40
Coq.Reals.PSeries_reg.Ball_in_inter	40
Coq.Reals.PSeries_reg.Boule_center	40
Coq.Reals.PSeries_reg.CVN_CVU	40
Coq.Reals.PSeries_reg.CVU_continuity	40
Coq.Reals.PSeries_reg.continuity_pt_finite_SF	40
Coq.Reals.PSeries_reg.SFL_continuity_pt	40
Coq.Reals.PSeries_reg.SFL_continuity	40
Coq.Reals.PSeries_reg.CVN_R_CVS	40
Coq.Reals.PSeries_reg.CVU_cv	40
Coq.Reals.PSeries_reg.CVU_ext_lim	40
Coq.Reals.PSeries_reg.CVU_derivable	40
Coq.Reals.Rsqrt_def.dicho_comp	40
Coq.Reals.Rsqrt_def.dicho_lb_growing	40
Coq.Reals.Rsqrt_def.dicho_up_decreasing	40
Coq.Reals.Rsqrt_def.dicho_lb_maj_y	40
Coq.Reals.Rsqrt_def.dicho_lb_maj	40
Coq.Reals.Rsqrt_def.dicho_up_min_x	40
Coq.Reals.Rsqrt_def.dicho_up_min	40
Coq.Reals.Rsqrt_def.dicho_lb_cv	40
Coq.Reals.Rsqrt_def.dicho_up_cv	40
Coq.Reals.Rsqrt_def.dicho_lb_dicho_up	40
Coq.Reals.Rsqrt_def.pow_2_n_neq_R0	40	0.1.39	search with cache (only 1: intros; only 1: apply pow_nonzero; only 1: discrR).	1.4732530117	1273
Coq.Reals.Rsqrt_def.pow_2_n_growing	40
Coq.Reals.Rsqrt_def.pow_2_n_infty	40
Coq.Reals.Rsqrt_def.cv_dicho	40
Coq.Reals.Rsqrt_def.continuity_seq	40
Coq.Reals.Rsqrt_def.dicho_lb_car	40
Coq.Reals.Rsqrt_def.dicho_up_car	40	2.1.2.1.3.0.2.5.3	search with cache (only 1: intros; only 1: induction n as [| n Hrecn]; only 1: assumption; only 1: simpl; only 1: destruct (sumbool_of_bool (P ((Dichotomy_lb x y P n + Dichotomy_ub x y P n) / 2))) as [Heq| Heq]; only 1: rewrite Heq; only 1: assumption; only 1: rewrite Heq; only 1: assumption).	13.5493490696	3322
Coq.Reals.Rsqrt_def.cv_pow_half	40
Coq.Reals.Rsqrt_def.IVT	40
Coq.Reals.Rsqrt_def.IVT_cor	40
Coq.Reals.Rsqrt_def.Rsqrt_exists	40
Coq.Reals.Rsqrt_def.Rsqrt_positivity	40
Coq.Reals.Rsqrt_def.Rsqrt_Rsqrt	40
Coq.Reals.Rtrigo_fun.Alembert_exp	40
Coq.Reals.SeqSeries.sum_maj1	40
Coq.Reals.SeqSeries.Rseries_CV_comp	40
Coq.Reals.SeqSeries.Cesaro	40
Coq.Reals.SeqSeries.Cesaro_1	40
Coq.Reals.MVT.MVT	40
Coq.Reals.MVT.MVT_cor1	40
Coq.Reals.MVT.MVT_cor2	40
Coq.Reals.MVT.MVT_cor3	40
Coq.Reals.MVT.Rolle	40
Coq.Reals.MVT.nonneg_derivative_1	40
Coq.Reals.MVT.nonpos_derivative_0	40
Coq.Reals.MVT.increasing_decreasing_opp	40
Coq.Reals.MVT.nonpos_derivative_1	40
Coq.Reals.MVT.positive_derivative	40
Coq.Reals.MVT.strictincreasing_strictdecreasing_opp	40
Coq.Reals.MVT.negative_derivative	40
Coq.Reals.MVT.null_derivative_0	40
Coq.Reals.MVT.increasing_decreasing	40
Coq.Reals.MVT.null_derivative_1	40
Coq.Reals.MVT.derive_increasing_interv_ax	40
Coq.Reals.MVT.derive_increasing_interv	40
Coq.Reals.MVT.derive_increasing_interv_var	40
Coq.Reals.MVT.IAF	40
Coq.Reals.MVT.IAF_var	40
Coq.Reals.MVT.null_derivative_loc	40
Coq.Reals.MVT.antiderivative_Ucte	40
Coq.Reals.MVT.MVT_abs	40
Coq.Reals.Ranalysis3.derivable_pt_lim_div	40
Coq.Reals.Ranalysis3.derivable_pt_div	40
Coq.Reals.Ranalysis3.derivable_div	40
Coq.Reals.Ranalysis3.derive_pt_div	40
Coq.Reals.Rprod.prod_SO_split	40
Coq.Reals.Rprod.prod_SO_pos	40
Coq.Reals.Rprod.prod_SO_Rle	40
Coq.Reals.Rprod.fact_prodSO	40
Coq.Reals.Rprod.le_n_2n	40	10.9	search with cache (only 1: simpl; only 1: lia).	2.12984895706	606
Coq.Reals.Rprod.RfactN_fact2N_factk	40
Coq.Reals.Rprod.INR_fact_lt_0	40
Coq.Reals.Rprod.C_maj	40
Coq.Reals.Alembert.Alembert_C1	40
Coq.Reals.Alembert.Alembert_C2	40
Coq.Reals.Alembert.AlembertC3_step1	40
Coq.Reals.Alembert.AlembertC3_step2	40
Coq.Reals.Alembert.Alembert_C3	40
Coq.Reals.Alembert.Alembert_C4	40
Coq.Reals.Alembert.Alembert_C5	40
Coq.Reals.Alembert.Alembert_C6	40
Coq.Reals.AltSeries.CV_ALT_step0	40
Coq.Reals.AltSeries.CV_ALT_step1	40
Coq.Reals.AltSeries.CV_ALT_step2	40
Coq.Reals.AltSeries.CV_ALT_step3	40
Coq.Reals.AltSeries.CV_ALT_step4	40
Coq.Reals.AltSeries.CV_ALT	40
Coq.Reals.AltSeries.alternated_series	40
Coq.Reals.AltSeries.alternated_series_ineq	40
Coq.Reals.AltSeries.PI_tg_pos	40
Coq.Reals.AltSeries.PI_tg_decreasing	40
Coq.Reals.AltSeries.PI_tg_cv	40
Coq.Reals.AltSeries.exist_PI	40
Coq.Reals.AltSeries.Alt_PI_ineq	40
Coq.Reals.AltSeries.Alt_PI_RGT_0	40
Coq.Reals.Binomial.pascal_step1	40
Coq.Reals.Binomial.pascal_step2	40
Coq.Reals.Binomial.pascal_step3	40
Coq.Reals.Binomial.pascal	40
Coq.Reals.Binomial.binomial	40
Coq.Reals.Cauchy_prod.sum_N_predN	40	8.0.1.0	search with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: elim (Nat.lt_irrefl _ H); only 1: reflexivity).	2.39149403572	313
Coq.Reals.Cauchy_prod.sum_plus	40	1.0.0.0.0.1.0	search with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: ring; only 1: do 3 rewrite tech5; only 1: rewrite HrecN; only 1: ring).	0.532787084579	9
Coq.Reals.Cauchy_prod.cauchy_finite	40
Coq.Reals.Ranalysis1.continuity_pt_locally_ext	40
Coq.Reals.Ranalysis1.continuity_pt_plus	40
Coq.Reals.Ranalysis1.continuity_pt_opp	40
Coq.Reals.Ranalysis1.continuity_pt_minus	40	1.2.1.0.0.0.0	search with cache (only 1: unfold continuity_pt, plus_fct; only 1: unfold continue_in; only 1: intros; only 1: apply limit_plus; only 1: assumption; only 1: apply limit_Ropp; only 1: assumption).	1.07115197182	155
Coq.Reals.Ranalysis1.continuity_pt_mult	40
Coq.Reals.Ranalysis1.continuity_pt_const	40
Coq.Reals.Ranalysis1.continuity_pt_scal	40
Coq.Reals.Ranalysis1.continuity_pt_inv	40
Coq.Reals.Ranalysis1.div_eq_inv	40	4.4	search with cache (only 1: intros a b; only 1: tauto).	0.475796937943	72
Coq.Reals.Ranalysis1.continuity_pt_div	40	3.3.4.3.2.0	search with cache (only 1: intros; only 1: apply limit_mul; only 1: assumption; only 1: apply limit_inv; only 1: assumption; only 1: assumption).	29.9133558273	3916
Coq.Reals.Ranalysis1.continuity_pt_comp	40
Coq.Reals.Ranalysis1.continuity_plus	40
Coq.Reals.Ranalysis1.continuity_opp	40	9.0.0.0.0.0	search with cache (only 1: unfold continuity; only 1: unfold continuity_pt, opp_fct; only 1: unfold continue_in; only 1: intros; only 1: apply limit_Ropp; only 1: trivial).	21.3359708786	3863
Coq.Reals.Ranalysis1.continuity_minus	40
Coq.Reals.Ranalysis1.continuity_mult	40
Coq.Reals.Ranalysis1.continuity_const	40
Coq.Reals.Ranalysis1.continuity_scal	40
Coq.Reals.Ranalysis1.continuity_inv	40
Coq.Reals.Ranalysis1.continuity_div	40
Coq.Reals.Ranalysis1.continuity_comp	40
Coq.Reals.Ranalysis1.uniqueness_step1	40
Coq.Reals.Ranalysis1.uniqueness_step2	40
Coq.Reals.Ranalysis1.uniqueness_step3	40
Coq.Reals.Ranalysis1.uniqueness_limite	40
Coq.Reals.Ranalysis1.derive_pt_eq	40
Coq.Reals.Ranalysis1.derive_pt_eq_0	40	3.1.0.0.1.0.3.0	search with cache (only 1: intros; only 1: pose proof (proj2_sig pr) as H1; only 1: unfold derivable_pt_abs in H1; only 1: pose proof (uniqueness_limite _ _ _ _ H H1) as H2; only 1: unfold derive_pt; only 1: unfold derivable_pt_abs; only 1: symmetry; only 1: assumption).	9.6279540062	1281
Coq.Reals.Ranalysis1.derive_pt_eq_1	40	0.0.1.5.0	search with cache (only 1: intros; only 1: pose proof (proj2_sig pr) as H1; only 1: unfold derive_pt in H; only 1: rewrite H in H1; only 1: assumption).	0.474917888641	72
Coq.Reals.Ranalysis1.derive_pt_D_in	40
Coq.Reals.Ranalysis1.derivable_pt_lim_D_in	40
Coq.Reals.Ranalysis1.derivable_pt_lim_ext	40
Coq.Reals.Ranalysis1.derivable_pt_lim_locally_ext	40
Coq.Reals.Ranalysis1.derivable_derive	40
Coq.Reals.Ranalysis1.derivable_continuous_pt	40
Coq.Reals.Ranalysis1.derivable_continuous	40
Coq.Reals.Ranalysis1.derivable_pt_lim_plus	40
Coq.Reals.Ranalysis1.derivable_pt_lim_opp	40
Coq.Reals.Ranalysis1.derivable_pt_lim_minus	40
Coq.Reals.Ranalysis1.derivable_pt_lim_mult	40
Coq.Reals.Ranalysis1.derivable_pt_lim_const	40
Coq.Reals.Ranalysis1.derivable_pt_lim_scal	40
Coq.Reals.Ranalysis1.derivable_pt_lim_div_scal	40
Coq.Reals.Ranalysis1.derivable_pt_lim_scal_right	40
Coq.Reals.Ranalysis1.derivable_pt_lim_id	40
Coq.Reals.Ranalysis1.derivable_pt_lim_Rsqr	40
Coq.Reals.Ranalysis1.derivable_pt_lim_comp	40
Coq.Reals.Ranalysis1.derivable_pt_plus	40
Coq.Reals.Ranalysis1.derivable_pt_opp	40
Coq.Reals.Ranalysis1.derivable_pt_minus	40
Coq.Reals.Ranalysis1.derivable_pt_mult	40
Coq.Reals.Ranalysis1.derivable_pt_const	40
Coq.Reals.Ranalysis1.derivable_pt_scal	40
Coq.Reals.Ranalysis1.derivable_pt_id	40
Coq.Reals.Ranalysis1.derivable_pt_Rsqr	40
Coq.Reals.Ranalysis1.derivable_pt_comp	40
Coq.Reals.Ranalysis1.derivable_plus	40
Coq.Reals.Ranalysis1.derivable_opp	40
Coq.Reals.Ranalysis1.derivable_minus	40
Coq.Reals.Ranalysis1.derivable_mult	40
Coq.Reals.Ranalysis1.derivable_const	40	0.5.0	search with cache (only 1: intros; only 1: exists 0; only 1: apply derivable_pt_lim_const).	0.208509922028	30
Coq.Reals.Ranalysis1.derivable_scal	40
Coq.Reals.Ranalysis1.derivable_id	40	0.0.0.0	search with cache (only 1: unfold derivable, continuity; only 1: unfold derivable_pt; only 1: exists 1; only 1: apply derivable_pt_lim_id).	0.112232208252	4
Coq.Reals.Ranalysis1.derivable_Rsqr	40	0.0.0.4	search with cache (only 1: intro; only 1: unfold derivable_pt; only 1: exists (2 * x); only 1: apply derivable_pt_lim_Rsqr).	0.118324995041	16
Coq.Reals.Ranalysis1.derivable_comp	40
Coq.Reals.Ranalysis1.derive_pt_plus	40
Coq.Reals.Ranalysis1.derive_pt_opp	40
Coq.Reals.Ranalysis1.derive_pt_minus	40
Coq.Reals.Ranalysis1.derive_pt_mult	40
Coq.Reals.Ranalysis1.derive_pt_const	40	5.0.0.0.0.0.0.0.0.0.0.17.2.0	search with cache (only 1: intros; only 1: unfold mult_real_fct, mult_fct, fct_cte; only 1: apply derive_pt_eq_0; only 1: unfold fct_cte, derivable_pt_lim; only 1: intros; only 1: exists {| pos := 1; cond_pos := Rlt_0_1 |}; only 1: intros; only 1: unfold Rminus; only 1: rewrite Rplus_opp_r; only 1: unfold Rdiv; only 1: rewrite Rmult_0_l; only 1: rewrite Rplus_opp_r; only 1: rewrite Rabs_R0; only 1: assumption).	33.4122858047	13412
Coq.Reals.Ranalysis1.derive_pt_scal	40
Coq.Reals.Ranalysis1.derive_pt_id	40	6.57.4	search with cache (only 1: intro; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_id).	18.1013140678	35966
Coq.Reals.Ranalysis1.derive_pt_Rsqr	40
Coq.Reals.Ranalysis1.derive_pt_comp	40
Coq.Reals.Ranalysis1.derivable_pt_lim_pow_pos	40
Coq.Reals.Ranalysis1.derivable_pt_lim_pow	40
Coq.Reals.Ranalysis1.derivable_pt_pow	40
Coq.Reals.Ranalysis1.derivable_pow	40
Coq.Reals.Ranalysis1.derive_pt_pow	40
Coq.Reals.Ranalysis1.pr_nu	40
Coq.Reals.Ranalysis1.deriv_maximum	40
Coq.Reals.Ranalysis1.deriv_minimum	40
Coq.Reals.Ranalysis1.deriv_constant2	40
Coq.Reals.Ranalysis1.nonneg_derivative_0	40
Coq.Reals.Ranalysis2.formule	40
Coq.Reals.Ranalysis2.maj_term1	40
Coq.Reals.Ranalysis2.maj_term2	40
Coq.Reals.Ranalysis2.maj_term3	40
Coq.Reals.Ranalysis2.maj_term4	40
Coq.Reals.Ranalysis2.D_x_no_cond	40
Coq.Reals.Ranalysis2.Rabs_4	40
Coq.Reals.Ranalysis2.Rlt_4	40
Coq.Reals.Ranalysis2.quadruple	40	0.0	search with cache (only 1: intros; only 1: assumption || ring).	0.131739854813	2
Coq.Reals.Ranalysis2.quadruple_var	40	27.1	search with cache (only 1: intro; only 1: field).	8.54321599007	2210
Coq.Reals.Ranalysis2.continuous_neq_0	40
Coq.Reals.Rsigma.sigma_split	40
Coq.Reals.Rsigma.sigma_diff	40
Coq.Reals.Rsigma.sigma_diff_neg	40	0.2.0.0.0.0.0.0	search with cache (only 1: intros low high k H1 H2; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: rewrite (sigma_split H1 H2); only 1: ring).	0.305325031281	16
Coq.Reals.Rsigma.sigma_first	40
Coq.Reals.Rsigma.sigma_last	40
Coq.Reals.Rsigma.sigma_eq_arg	40	0.2.0.0.0.0.3	search with cache (only 1: intros; only 1: unfold sigma; only 1: rewrite <- minus_n_n; only 1: simpl; only 1: replace (low + 0)%nat with low; only 1: reflexivity; only 1: ring).	0.51291513443	94
Coq.Reals.Rtopology.interior_P1	40
Coq.Reals.Rtopology.interior_P2	40	4.25.0.1	search with cache (only 1: unfold included; only 1: intros; only 1: apply H; only 1: apply H0).	7.14262914658	9289
Coq.Reals.Rtopology.adherence_P1	40
Coq.Reals.Rtopology.included_trans	40
Coq.Reals.Rtopology.interior_P3	40
Coq.Reals.Rtopology.complementary_P1	40
Coq.Reals.Rtopology.adherence_P2	40
Coq.Reals.Rtopology.adherence_P3	40
Coq.Reals.Rtopology.open_set_P1	40
Coq.Reals.Rtopology.closed_set_P1	40
Coq.Reals.Rtopology.neighbourhood_P1	40
Coq.Reals.Rtopology.open_set_P2	40
Coq.Reals.Rtopology.open_set_P3	40
Coq.Reals.Rtopology.open_set_P4	40	14.2	search with cache (only 1: unfold open_set, complementary, point_adherent; only 1: tauto).	1.49296402931	632
Coq.Reals.Rtopology.open_set_P5	40
Coq.Reals.Rtopology.disc_P1	40
Coq.Reals.Rtopology.continuity_P1	40
Coq.Reals.Rtopology.continuity_P2	40
Coq.Reals.Rtopology.continuity_P3	40
Coq.Reals.Rtopology.Rsepare	40
Coq.Reals.Rtopology.restriction_family	40
Coq.Reals.Rtopology.family_P1	40
Coq.Reals.Rtopology.open_set_P6	40
Coq.Reals.Rtopology.compact_P1	40
Coq.Reals.Rtopology.compact_P2	40
Coq.Reals.Rtopology.compact_EMP	40
Coq.Reals.Rtopology.compact_eqDom	40
Coq.Reals.Rtopology.compact_P3	40
Coq.Reals.Rtopology.compact_P4	40
Coq.Reals.Rtopology.compact_P5	40
Coq.Reals.Rtopology.compact_carac	40
Coq.Reals.Rtopology.continuity_compact	40
Coq.Reals.Rtopology.prolongement_C0	40
Coq.Reals.Rtopology.continuity_ab_maj	40
Coq.Reals.Rtopology.continuity_ab_min	40
Coq.Reals.Rtopology.ValAdh_un_exists	40
Coq.Reals.Rtopology.ValAdh_un_prop	40
Coq.Reals.Rtopology.adherence_P4	40
Coq.Reals.Rtopology.compact_P6	40
Coq.Reals.Rtopology.Bolzano_Weierstrass	40
Coq.Reals.Rtopology.is_lub_u	40
Coq.Reals.Rtopology.domain_P1	40
Coq.Reals.Rtopology.Heine	40
Coq.Reals.PartSum.tech1	40
Coq.Reals.PartSum.tech2	40
Coq.Reals.PartSum.tech3	40
Coq.Reals.PartSum.tech4	40
Coq.Reals.PartSum.tech5	40	0.0	search with cache (only 1: intros; only 1: reflexivity).	0.08673620224	2
Coq.Reals.PartSum.tech6	40
Coq.Reals.PartSum.tech7	40
Coq.Reals.PartSum.tech11	40
Coq.Reals.PartSum.tech12	40	14.0	search with cache (only 1: intros; only 1: assumption).	0.34454202652	160
Coq.Reals.PartSum.scal_sum	40	9.4.0.0.0.0.0.1.0	search with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: ring; only 1: rewrite tech5; only 1: rewrite Rmult_plus_distr_l; only 1: rewrite tech5; only 1: rewrite HrecN; only 1: ring).	3.1801970005	1676
Coq.Reals.PartSum.decomp_sum	40
Coq.Reals.PartSum.plus_sum	40	2.0.3.3.3.3.0	search with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: ring; only 1: do 3 rewrite tech5; only 1: rewrite HrecN; only 1: ring).	2.97844314575	829
Coq.Reals.PartSum.sum_eq	40
Coq.Reals.PartSum.uniqueness_sum	40
Coq.Reals.PartSum.minus_sum	40	2.1.0.0.1.0.1.0	search with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: unfold Rminus, SeqProp.opp_seq; only 1: reflexivity; only 1: do 3 rewrite tech5; only 1: rewrite HrecN; only 1: ring).	1.65878200531	282
Coq.Reals.PartSum.sum_decomposition	40
Coq.Reals.PartSum.sum_Rle	40
Coq.Reals.PartSum.Rsum_abs	40
Coq.Reals.PartSum.sum_cte	40	2.1.1.8.4.13.0.0.4.0	search with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: ring; only 1: rewrite tech5; only 1: rewrite HrecN; only 1: simpl; only 1: rewrite Rmult_plus_distr_l; only 1: rewrite Rmult_1_r; only 1: ring).	34.1791088581	11933
Coq.Reals.PartSum.sum_growing	40
Coq.Reals.PartSum.Rabs_triang_gen	40	5.3.1.0.1.0.0.0.0.0.0	search with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: right; only 1: reflexivity; only 1: do 2 rewrite tech5; only 1: apply Rle_trans with (Rabs (sum_f_R0 An N) + Rabs (An (S N))); only 1: apply Rabs_triang; only 1: do 2 rewrite <- (Rplus_comm (Rabs (An (S N)))); only 1: apply Rplus_le_compat_l; only 1: apply HrecN).	11.5596420765	3902
Coq.Reals.PartSum.cond_pos_sum	40
Coq.Reals.PartSum.cauchy_abs	40
Coq.Reals.PartSum.cv_cauchy_1	40
Coq.Reals.PartSum.cv_cauchy_2	40
Coq.Reals.PartSum.sum_eq_R0	40
Coq.Reals.PartSum.sum_incr	40
Coq.Reals.PartSum.sum_cv_maj	40
Coq.Reals.Rderiv.cont_deriv	40
Coq.Reals.Rderiv.Dconst	40
Coq.Reals.Rderiv.Dx	40
Coq.Reals.Rderiv.Dadd	40
Coq.Reals.Rderiv.Dmult	40
Coq.Reals.Rderiv.Dmult_const	40
Coq.Reals.Rderiv.Dopp	40
Coq.Reals.Rderiv.Dminus	40
Coq.Reals.Rderiv.Dx_pow_n	40
Coq.Reals.Rderiv.Dcomp	40
Coq.Reals.Rderiv.D_pow_n	40
Coq.Reals.Rcomplete.R_complete	40
Coq.Reals.Rlimit.eps2_Rgt_R0	40	0.0.19.6.5.0.0	search with cache (only 1: intro; only 1: intros; only 1: unfold Rgt in H; only 1: apply Rmult_lt_0_compat; only 1: auto; only 1: apply Rinv_0_lt_compat; only 1: auto with real).	4.46588087082	4534
Coq.Reals.Rlimit.eps2	40	0.0	search with cache (only 1: intros; only 1: lra).	0.221451044083	2
Coq.Reals.Rlimit.eps4	40	4.0	search with cache (only 1: intro esp; only 1: lra).	0.0791218280792	6
Coq.Reals.Rlimit.Rlt_eps2_eps	40	0.0	search with cache (only 1: intros; only 1: lra).	0.0778329372406	2
Coq.Reals.Rlimit.Rlt_eps4_eps	40	0.0	search with cache (only 1: intros; only 1: lra).	0.0538990497589	2
Coq.Reals.Rlimit.prop_eps	40
Coq.Reals.Rlimit.mul_factor_wd	40
Coq.Reals.Rlimit.mul_factor_gt	40
Coq.Reals.Rlimit.mul_factor_gt_f	40
Coq.Reals.Rlimit.tech_limit	40
Coq.Reals.Rlimit.tech_limit_contr	40
Coq.Reals.Rlimit.lim_x	40
Coq.Reals.Rlimit.limit_plus	40
Coq.Reals.Rlimit.limit_Ropp	40
Coq.Reals.Rlimit.limit_minus	40
Coq.Reals.Rlimit.limit_free	40
Coq.Reals.Rlimit.limit_mul	40
Coq.Reals.Rlimit.single_limit	40
Coq.Reals.Rlimit.limit_comp	40
Coq.Reals.Rlimit.limit_inv	40
Coq.Reals.SeqProp.growing_cv	40
Coq.Reals.SeqProp.decreasing_growing	40
Coq.Reals.SeqProp.decreasing_cv	40
Coq.Reals.SeqProp.ub_to_lub	40
Coq.Reals.SeqProp.lb_to_glb	40
Coq.Reals.SeqProp.maj_ss	40
Coq.Reals.SeqProp.min_ss	40	1.0.0.1.0.2.0.6.2.4.0	search with cache (only 1: intros; only 1: elim H; only 1: intros; only 1: exists x; only 1: unfold is_upper_bound; only 1: intros; only 1: apply H0; only 1: elim H1; only 1: intros; only 1: exists (k + x1)%nat; only 1: assumption).	11.8853471279	3459
Coq.Reals.SeqProp.Wn_decreasing	40
Coq.Reals.SeqProp.Vn_growing	40
Coq.Reals.SeqProp.Vn_Un_Wn_order	40
Coq.Reals.SeqProp.min_maj	40
Coq.Reals.SeqProp.maj_min	40
Coq.Reals.SeqProp.cauchy_maj	40
Coq.Reals.SeqProp.cauchy_opp	40
Coq.Reals.SeqProp.cauchy_min	40
Coq.Reals.SeqProp.maj_cv	40
Coq.Reals.SeqProp.min_cv	40
Coq.Reals.SeqProp.cond_eq	40
Coq.Reals.SeqProp.not_Rlt	40
Coq.Reals.SeqProp.approx_maj	40
Coq.Reals.SeqProp.approx_min	40
Coq.Reals.SeqProp.UL_sequence	40
Coq.Reals.SeqProp.CV_plus	40
Coq.Reals.SeqProp.cv_cvabs	40
Coq.Reals.SeqProp.CV_Cauchy	40
Coq.Reals.SeqProp.maj_by_pos	40
Coq.Reals.SeqProp.CV_mult	40
Coq.Reals.SeqProp.tech9	40
Coq.Reals.SeqProp.tech13	40
Coq.Reals.SeqProp.growing_ineq	40
Coq.Reals.SeqProp.CV_opp	40
Coq.Reals.SeqProp.decreasing_ineq	40
Coq.Reals.SeqProp.CV_minus	40
Coq.Reals.SeqProp.cv_infty_cv_R0	40
Coq.Reals.SeqProp.decreasing_prop	40
Coq.Reals.SeqProp.cv_speed_pow_fact	40
Coq.Reals.RList.MaxRlist_P1	40
Coq.Reals.RList.MinRlist_P1	40
Coq.Reals.RList.AbsList_P1	40
Coq.Reals.RList.MinRlist_P2	40
Coq.Reals.RList.AbsList_P2	40
Coq.Reals.RList.MaxRlist_P2	40
Coq.Reals.RList.pos_Rl_P1	40	0.0.15.5	search with cache (only 1: intros; only 1: elim H; only 1: auto with arith; only 1: auto with arith).	0.82040309906	482
Coq.Reals.RList.pos_Rl_P2	40
Coq.Reals.RList.Rlist_P1	40
Coq.Reals.RList.RList_P0	40
Coq.Reals.RList.RList_P1	40
Coq.Reals.RList.RList_P2	40
Coq.Reals.RList.RList_P3	40
Coq.Reals.RList.RList_P4	40
Coq.Reals.RList.RList_P5	40
Coq.Reals.RList.RList_P6	40
Coq.Reals.RList.RList_P7	40
Coq.Reals.RList.RList_P8	40
Coq.Reals.RList.RList_P9	40
Coq.Reals.RList.RList_P10	40
Coq.Reals.RList.RList_P11	40
Coq.Reals.RList.RList_P12	40
Coq.Reals.RList.RList_P13	40
Coq.Reals.RList.RList_P14	40
Coq.Reals.RList.RList_P15	40
Coq.Reals.RList.RList_P16	40
Coq.Reals.RList.RList_P17	40
Coq.Reals.RList.RList_P18	40
Coq.Reals.RList.RList_P19	40
Coq.Reals.RList.RList_P20	40
Coq.Reals.RList.RList_P21	40	2.8.0	search with cache (only 1: intros; only 1: elim H; only 1: reflexivity).	0.496397972107	125
Coq.Reals.RList.RList_P22	40	2.3.4.6.0	search with cache (only 1: intros; only 1: induction l1 as [| r l1 Hrecl1]; only 1: elim H; only 1: reflexivity; only 1: reflexivity).	1.18690991402	528
Coq.Reals.RList.RList_P23	40	5.14.1.0.0.0.0	search with cache (only 1: simple induction l1; only 1: intro; only 1: reflexivity; only 1: intros; only 1: simpl; only 1: rewrite H; only 1: ring).	28.089373827	11416
Coq.Reals.RList.RList_P24	40
Coq.Reals.RList.RList_P25	40
Coq.Reals.RList.RList_P26	40
Coq.Reals.RList.RList_P27	40
Coq.Reals.RList.RList_P28	40
Coq.Reals.RList.RList_P29	40
Coq.Reals.Rfunctions.INR_fact_neq_0	40
Coq.Reals.Rfunctions.fact_simpl	40	0.2.17	search with cache (only 1: simpl; only 1: intro; only 1: ring).	1.06486177444	513
Coq.Reals.Rfunctions.simpl_fact	40	4.51	search with cache (only 1: fix ind_0_1_SS 1; only 1: assumption).	7.25291705132	8313
Coq.Reals.Rfunctions.pow_O	40	46	search with cache (only 1: split).	1.26301407814	1242
Coq.Reals.Rfunctions.pow_1	40	20.4	search with cache (only 1: intro; only 1: ring).	1.12437701225	584
Coq.Reals.Rfunctions.pow_add	40
Coq.Reals.Rfunctions.Rpow_mult_distr	40
Coq.Reals.Rfunctions.pow_nonzero	40	2.0.3.5.5	search with cache (only 1: intros x n; only 1: elim n; only 1: auto with real; only 1: simpl; only 1: auto with real).	12.957859993	1004
Coq.Reals.Rfunctions.pow_RN_plus	40
Coq.Reals.Rfunctions.pow_lt	40
Coq.Reals.Rfunctions.Rlt_pow_R1	40
Coq.Reals.Rfunctions.Rlt_pow	40
Coq.Reals.Rfunctions.tech_pow_Rmult	40	3.0.2.0	search with cache (only 1: simpl; only 1: intros; only 1: apply Rmult_eq_compat_l; only 1: field).	0.257359027863	12
Coq.Reals.Rfunctions.tech_pow_Rplus	40	1.21.2.2.6.2	search with cache (only 1: simple induction n; only 1: simpl; only 1: field; only 1: simpl; only 1: intros; only 1: ring).	38.9681499004	18529
Coq.Reals.Rfunctions.poly	40
Coq.Reals.Rfunctions.Power_monotonic	40
Coq.Reals.Rfunctions.RPow_abs	40
Coq.Reals.Rfunctions.Pow_x_infinity	40
Coq.Reals.Rfunctions.pow_ne_zero	40
Coq.Reals.Rfunctions.Rinv_pow	40
Coq.Reals.Rfunctions.pow_lt_1_zero	40
Coq.Reals.Rfunctions.pow_R1	40
Coq.Reals.Rfunctions.pow_Rsqr	40
Coq.Reals.Rfunctions.pow_le	40
Coq.Reals.Rfunctions.pow_1_even	40
Coq.Reals.Rfunctions.pow_1_odd	40
Coq.Reals.Rfunctions.pow_1_abs	40
Coq.Reals.Rfunctions.pow_mult	40
Coq.Reals.Rfunctions.pow_incr	40
Coq.Reals.Rfunctions.pow_R1_Rle	40
Coq.Reals.Rfunctions.Rle_pow	40
Coq.Reals.Rfunctions.pow1	40	2.3.1.0.1.0.3	search with cache (only 1: simple induction n; only 1: simpl; only 1: auto with real arith; only 1: intros; only 1: simpl; only 1: rewrite H; only 1: ring).	3.14120006561	861
Coq.Reals.Rfunctions.pow_Rabs	40
Coq.Reals.Rfunctions.pow_maj_Rabs	40
Coq.Reals.Rfunctions.Rsqr_pow2	40	1.41.4.0	search with cache (only 1: intros; only 1: simpl; only 1: rewrite Rmult_1_r; only 1: reflexivity).	7.6988530159	8964
Coq.Reals.Rfunctions.intP	40
Coq.Reals.Rfunctions.Zpower_NR0	40
Coq.Reals.Rfunctions.powerRZ_O	40	30	search with cache (only 1: auto with real).	1.86811304092	1020
Coq.Reals.Rfunctions.powerRZ_1	40	0.6	search with cache (only 1: simpl; only 1: auto with real).	0.216526985168	21
Coq.Reals.Rfunctions.powerRZ_NOR	40
Coq.Reals.Rfunctions.powerRZ_pos_sub	40
Coq.Reals.Rfunctions.powerRZ_add	40
Coq.Reals.Rfunctions.Zpower_nat_powerRZ	40
Coq.Reals.Rfunctions.Zpower_pos_powerRZ	40
Coq.Reals.Rfunctions.powerRZ_lt	40	0.0.0.0.9.1	search with cache (only 1: destruct z; only 1: auto with real; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: auto with real).	1.49126791954	510
Coq.Reals.Rfunctions.powerRZ_le	40	0.0.0.0.0.2.0.0.0	search with cache (only 1: intros x z; only 1: case z; only 1: simpl; only 1: left; only 1: auto with real; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: auto with real).	1.49005293846	174
Coq.Reals.Rfunctions.Zpower_nat_powerRZ_absolu	40
Coq.Reals.Rfunctions.powerRZ_R1	40
Coq.Reals.Rfunctions.pow_powerRZ	40	0.0.0.0.1.0.15	search with cache (only 1: case n; only 1: simpl; only 1: auto with real arith; only 1: simpl; only 1: intros m2; only 1: rewrite SuccNat2Pos.id_succ; only 1: auto).	1.69417881966	282
Coq.Reals.Rfunctions.powerRZ_ind	40
Coq.Reals.Rfunctions.powerRZ_inv	40
Coq.Reals.Rfunctions.powerRZ_neg	40
Coq.Reals.Rfunctions.powerRZ_mult_distr	40
Coq.Reals.Rfunctions.GP_finite	40
Coq.Reals.Rfunctions.sum_f_R0_triangle	40
Coq.Reals.Rfunctions.R_dist_pos	40
Coq.Reals.Rfunctions.R_dist_sym	40
Coq.Reals.Rfunctions.R_dist_refl	40
Coq.Reals.Rfunctions.R_dist_eq	40	6.9.0.0.0	search with cache (only 1: unfold R_dist; only 1: intros; only 1: split_Rabs; only 1: ring; only 1: ring).	2.43963694572	1986
Coq.Reals.Rfunctions.R_dist_tri	40
Coq.Reals.Rfunctions.R_dist_plus	40
Coq.Reals.Rfunctions.R_dist_mult_l	40
Coq.Reals.Rseries.EUn_noempty	40
Coq.Reals.Rseries.Un_in_EUn	40	0.2.5.2	search with cache (only 1: unfold EUn; only 1: intros N; only 1: exists N; only 1: trivial).	0.94855093956	235
Coq.Reals.Rseries.Un_bound_imp	40
Coq.Reals.Rseries.growing_prop	40
Coq.Reals.Rseries.Un_cv_crit_lub	40
Coq.Reals.Rseries.Un_cv_crit	40
Coq.Reals.Rseries.finite_greater	40
Coq.Reals.Rseries.cauchy_bound	40
Coq.Reals.Rseries.GP_infinite	40
Coq.Reals.Rseries.CV_shift	40
Coq.Reals.Rseries.CV_shift'	40	0.0.6.2.0.0.0.0	search with cache (only 1: intros f' k l cvfk eps ep; only 1: destruct (cvfk eps ep) as [N Pn]; only 1: exists (N + k)%nat; only 1: intros n nN; only 1: apply Pn; only 1: apply Nat.le_trans with (N + k)%nat; only 1: auto with arith; only 1: auto with arith).	2.19636106491	652
Coq.Reals.Rseries.Un_growing_shift	40	1.8.12.24.18	search with cache (only 1: intros N; only 1: intros H5; only 1: intros n nN; only 1: simpl; only 1: now ring_simplify).	10.4968938828	9644
Coq.Reals.Runcountable.in_holed_interval_dec	40
Coq.Reals.Runcountable.middle_in_interval	40
Coq.Reals.Runcountable.point_in_holed_interval_works	40
Coq.Reals.Runcountable.first_in_holed_interval	40
Coq.Reals.Runcountable.first_in_holed_interval_works	40
Coq.Reals.Runcountable.split_couple_eq	40
Coq.Reals.Runcountable.first_two_in_interval_works	40
Coq.Reals.Runcountable.tearing_sequences	40
Coq.Reals.Runcountable.tearing_sequences_projsig	40
Coq.Reals.Runcountable.tearing_sequences_inc_dec	40
Coq.Reals.Runcountable.split_lt_succ	40
Coq.Reals.Runcountable.increase_seq_transit	40
Coq.Reals.Runcountable.decrease_seq_transit	40
Coq.Reals.Runcountable.tearing_sequences_ordered_forall	40
Coq.Reals.Runcountable.torn_number	40
Coq.Reals.Runcountable.torn_number_above_first_sequence	40
Coq.Reals.Runcountable.torn_number_below_second_sequence	40
Coq.Reals.Runcountable.limit_index_above_all_indices	40
Coq.Reals.Runcountable.first_indices_increasing	40
Coq.Reals.Runcountable.R_uncountable	40
Coq.Reals.ArithProp.minus_neq_O	40	0.23	search with cache (only 1: fix even_odd_double 1; only 1: auto with arith).	3.45484495163	1856
Coq.Reals.ArithProp.le_minusni_n	40
Coq.Reals.ArithProp.lt_minus_O_lt	40
Coq.Reals.ArithProp.even_odd_cor	40	6.24	search with cache (only 1: fix ind_0_1_SS 1; only 1: auto with arith).	2.27689099312	1704
Coq.Reals.ArithProp.le_double	40
Coq.Reals.ArithProp.euclidian_division	40
Coq.Reals.ArithProp.tech8	40
Coq.Reals.R_sqr.Rsqr_neg	40
Coq.Reals.R_sqr.Rsqr_mult	40	0.0	search with cache (only 1: intros; only 1: ring_Rsqr).	0.10528087616	2
Coq.Reals.R_sqr.Rsqr_plus	40	0.0	search with cache (only 1: intros; only 1: ring_Rsqr).	0.118527889252	2
Coq.Reals.R_sqr.Rsqr_minus	40	0.0	search with cache (only 1: intros; only 1: ring_Rsqr).	0.140807151794	2
Coq.Reals.R_sqr.Rsqr_neg_minus	40	0.0	search with cache (only 1: intros; only 1: ring_Rsqr).	0.0717380046844	2
Coq.Reals.R_sqr.Rsqr_1	40	1	search with cache (only 1: ring_Rsqr).	0.0808041095734	2
Coq.Reals.R_sqr.Rsqr_gt_0_0	40
Coq.Reals.R_sqr.Rsqr_pos_lt	40
Coq.Reals.R_sqr.Rsqr_div	40
Coq.Reals.R_sqr.Rsqr_eq_0	40
Coq.Reals.R_sqr.Rsqr_minus_plus	40	6.0.0	search with cache (only 1: intros; only 1: unfold Rminus; only 1: ring_Rsqr).	0.169214010239	9
Coq.Reals.R_sqr.Rsqr_plus_minus	40	0.0	search with cache (only 1: intros; only 1: ring_Rsqr).	0.101719856262	2
Coq.Reals.R_sqr.Rsqr_incr_0	40
Coq.Reals.R_sqr.Rsqr_incr_0_var	40
Coq.Reals.R_sqr.Rsqr_incr_1	40	11.0.1	search with cache (only 1: unfold Rsqr; only 1: intros p q r H; only 1: auto with real).	4.30568194389	1165
Coq.Reals.R_sqr.Rsqr_incrst_0	40
Coq.Reals.R_sqr.Rsqr_incrst_1	40
Coq.Reals.R_sqr.Rsqr_neg_pos_le_0	40
Coq.Reals.R_sqr.Rsqr_neg_pos_le_1	40
Coq.Reals.R_sqr.neg_pos_Rsqr_le	40
Coq.Reals.R_sqr.Rsqr_abs	40	8.0.0.2.1	search with cache (only 1: intros; only 1: unfold Rabs; only 1: destruct (Rcase_abs x) as [Hltx| Hgex]; only 1: ring_Rsqr; only 1: ring_Rsqr).	13.601596117	4385
Coq.Reals.R_sqr.Rsqr_le_abs_0	40
Coq.Reals.R_sqr.Rsqr_le_abs_1	40
Coq.Reals.R_sqr.Rsqr_lt_abs_0	40
Coq.Reals.R_sqr.Rsqr_lt_abs_1	40
Coq.Reals.R_sqr.Rsqr_inj	40
Coq.Reals.R_sqr.Rsqr_eq_abs_0	40
Coq.Reals.R_sqr.Rsqr_eq_asb_1	40
Coq.Reals.R_sqr.triangle_rectangle	40
Coq.Reals.R_sqr.triangle_rectangle_lt	40
Coq.Reals.R_sqr.triangle_rectangle_le	40
Coq.Reals.R_sqr.Rsqr_inv	40
Coq.Reals.R_sqr.canonical_Rsqr	40
Coq.Reals.R_sqr.Rsqr_eq	40
Coq.Reals.Rminmax.Rmax_l	40	4.5.0.0	search with cache (only 1: intros; only 1: apply Rmax_case_strong; only 1: reflexivity; only 1: reflexivity || (apply Rle_antisym; assumption || auto with real)).	4.12718296051	874
Coq.Reals.Rminmax.Rmax_r	40	5.4.0.0	search with cache (only 1: intros; only 1: apply Rmax_case_strong; only 1: reflexivity || (apply Rle_antisym; assumption || auto with real); only 1: reflexivity).	5.64855384827	1209
Coq.Reals.Rminmax.Rmin_l	40	0.3.2.0.1	search with cache (only 1: intros a b c; only 1: unfold Rmin; only 1: destruct (Rle_dec a b); only 1: auto with real; only 1: match goal with | id:~ ?x <= ?y, id2:?x <= ?z |- _ => case id; apply Rle_trans with z; auto with real | id:~ ?x <= ?y, id2:~ ?z <= ?x |- _ => case id; apply Rle_trans with z; auto with real end).	2.25844597816	480
Coq.Reals.Rminmax.Rmin_r	40	3.1.2.0.2	search with cache (only 1: intros a b c; only 1: unfold Rmin; only 1: destruct (Rle_dec a b); only 1: auto with real; only 1: auto with real).	11.2113831043	2191
Coq.Reals.Rminmax.R.plus_max_distr_l	40
Coq.Reals.Rminmax.R.plus_max_distr_r	40
Coq.Reals.Rminmax.R.plus_min_distr_l	40
Coq.Reals.Rminmax.R.plus_min_distr_r	40	0.0.0.3.0	search with cache (only 1: intros; only 1: rewrite (Rplus_comm n p), (Rplus_comm m p), (Rplus_comm _ p); only 1: apply min_monotone; only 1: intros x y; only 1: apply Rplus_le_compat_l).	0.0833308696747	8
Coq.Reals.Rminmax.R.opp_max_distr	40	1.0.0.0	search with cache (only 1: intros x y; only 1: apply Rmax_case_strong; only 1: now intros w; rewrite Rmin_left; [  | apply Rge_le, Ropp_le_ge_contravar ]; only 1: now intros w; rewrite Rmin_right; [  | apply Rge_le, Ropp_le_ge_contravar ]).	0.0781979560852	5
Coq.Reals.Rminmax.R.opp_min_distr	40	1.0.0.0	search with cache (only 1: intros x y; only 1: apply Rmin_case_strong; only 1: now intros w; rewrite Rmax_left; [  | apply Rge_le, Ropp_le_ge_contravar ]; only 1: now intros w; rewrite Rmax_right; [  | apply Rge_le, Ropp_le_ge_contravar ]).	0.094761133194	5
Coq.Reals.Rminmax.R.minus_max_distr_l	40
Coq.Reals.Rminmax.R.minus_max_distr_r	40
Coq.Reals.Rminmax.R.minus_min_distr_l	40
Coq.Reals.Rminmax.R.minus_min_distr_r	40
Coq.Reals.ROrderedType.Req_dec	40
Coq.Reals.ROrderedType.Reqb_eq	40
Coq.Reals.ROrderedType.Rcompare_spec	40
Coq.Reals.ROrderedType.R_as_OT.lt_strorder	40
Coq.Reals.ROrderedType.R_as_OT.lt_compat	40	6	search with cache (only 1: auto with *).	0.0817210674286	16
Coq.Reals.ROrderedType.R_as_OT.le_lteq	40	2.1.2	search with cache (only 1: repeat red; only 1: intros; only 1: auto).	0.138345003128	33
Coq.Reals.Rbasic_fun.Rmin_case	40
Coq.Reals.Rbasic_fun.Rmin_case_strong	40
Coq.Reals.Rbasic_fun.Rmin_Rgt_l	40
Coq.Reals.Rbasic_fun.Rmin_Rgt_r	40
Coq.Reals.Rbasic_fun.Rmin_Rgt	40
Coq.Reals.Rbasic_fun.Rmin_l	40
Coq.Reals.Rbasic_fun.Rmin_r	40	2.9.0.0.0.0	search with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: intro H1; only 1: exact H1; only 1: auto with real).	8.50610995293	1463
Coq.Reals.Rbasic_fun.Rmin_left	40	2.0.0.0.0.1	search with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: reflexivity; only 1: intro H1; only 1: auto with real).	0.372563123703	11
Coq.Reals.Rbasic_fun.Rmin_right	40	0.0.0.0	search with cache (only 1: intros; only 1: apply Rmin_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	0.324680089951	4
Coq.Reals.Rbasic_fun.Rle_min_compat_r	40
Coq.Reals.Rbasic_fun.Rle_min_compat_l	40	0.0.0.0.0.0	search with cache (only 1: intros; only 1: do 2 (apply Rmin_case_strong; intro); only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl).	0.257981061935	6
Coq.Reals.Rbasic_fun.Rmin_comm	40	0.1.0.1.0.0.0.0	search with cache (only 1: intros; only 1: apply Rmin_case_strong; only 1: apply Rmin_case_strong; only 1: auto using Rle_antisym; only 1: reflexivity; only 1: apply Rmin_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	0.339555978775	10
Coq.Reals.Rbasic_fun.Rmin_stable_in_posreal	40
Coq.Reals.Rbasic_fun.Rmin_pos	40	1.7.6.3	search with cache (only 1: intros r1 r2 r; only 1: intros; only 1: apply Rmin_Rgt_r; only 1: auto with real).	16.5136971474	5095
Coq.Reals.Rbasic_fun.Rmin_glb	40	0.0.1.1.0	search with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl).	0.972606897354	50
Coq.Reals.Rbasic_fun.Rmin_glb_lt	40	3.4.0.0.1	search with cache (only 1: intros r1 r2 P H1 H2; only 1: unfold Rmin; only 1: case (Rle_dec r1 r2); only 1: auto; only 1: auto).	10.2245090008	1722
Coq.Reals.Rbasic_fun.Rmax_case	40
Coq.Reals.Rbasic_fun.Rmax_case_strong	40	3.1.0.0.0	search with cache (only 1: intros r1 r2 P H1 H2; only 1: unfold Rmax; only 1: case (Rle_dec r1 r2); only 1: auto; only 1: auto with real).	1.22581291199	75
Coq.Reals.Rbasic_fun.Rmax_Rle	40
Coq.Reals.Rbasic_fun.Rmax_comm	40
Coq.Reals.Rbasic_fun.Rmax_l	40	5.2.0.0.2	search with cache (only 1: intros p q; only 1: unfold Rmax; only 1: case (Rle_dec p q); only 1: auto; only 1: auto with real).	14.5420000553	2068
Coq.Reals.Rbasic_fun.Rmax_r	40	7.2.1.0.0	search with cache (only 1: intros; only 1: unfold Rmax; only 1: case (Rle_dec x y); only 1: eauto using Rle_trans, Rle_refl; only 1: auto with real).	19.4946939945	3304
Coq.Reals.Rbasic_fun.Rmax_left	40	1.1.1.0.2	search with cache (only 1: intros; only 1: unfold Rmax; only 1: case (Rle_dec x y); only 1: reflexivity || (apply Rle_antisym; assumption || auto with real); only 1: reflexivity || (apply Rle_antisym; assumption || auto with real)).	1.72305989265	174
Coq.Reals.Rbasic_fun.Rmax_right	40	2.1.1.0.0.0	search with cache (only 1: intros; only 1: apply Rmax_case_strong; only 1: intros; only 1: reflexivity || (apply Rle_antisym; assumption || auto with real); only 1: intros; only 1: reflexivity).	0.26638007164	10
Coq.Reals.Rbasic_fun.Rle_max_compat_r	40	0.0.1.0.0.1.1.0	search with cache (only 1: intros; only 1: apply Rmax_case_strong; only 1: apply Rmax_case_strong; only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl; only 1: apply Rmax_case_strong; only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl).	9.17282295227	924
Coq.Reals.Rbasic_fun.Rle_max_compat_l	40	0.0.0.0.0.0	search with cache (only 1: intros; only 1: do 2 (apply Rmax_case_strong; intro); only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl).	0.199224948883	6
Coq.Reals.Rbasic_fun.RmaxRmult	40
Coq.Reals.Rbasic_fun.Rmax_stable_in_negreal	40
Coq.Reals.Rbasic_fun.Rmax_lub	40	2.1.0.0.1.0	search with cache (only 1: intros; only 1: unfold Rmax; only 1: case (Rle_dec x y); only 1: eauto using Rle_trans, Rle_refl; only 1: intro; only 1: assumption).	0.899807929993	27
Coq.Reals.Rbasic_fun.Rmax_lub_lt	40	2.1.2.1.0.1.0	search with cache (only 1: intros; only 1: unfold Rmax; only 1: case (Rle_dec x y); only 1: intro; only 1: assumption; only 1: intro; only 1: assumption).	18.3457100391	2752
Coq.Reals.Rbasic_fun.Rmax_Rlt	40
Coq.Reals.Rbasic_fun.Rmax_neg	40	4.0.6	search with cache (only 1: intros x y H; only 1: apply Rmax_lub_lt; only 1: apply H).	10.1773397923	1529
Coq.Reals.Rbasic_fun.Rcase_abs	40
Coq.Reals.Rbasic_fun.Rabs_R0	40
Coq.Reals.Rbasic_fun.Rabs_R1	40
Coq.Reals.Rbasic_fun.Rabs_no_R0	40
Coq.Reals.Rbasic_fun.Rabs_left	40
Coq.Reals.Rbasic_fun.Rabs_right	40
Coq.Reals.Rbasic_fun.Rabs_left1	40
Coq.Reals.Rbasic_fun.Rabs_pos	40
Coq.Reals.Rbasic_fun.Rle_abs	40
Coq.Reals.Rbasic_fun.Rabs_le	40
Coq.Reals.Rbasic_fun.Rabs_pos_eq	40	3.2.2.1	search with cache (only 1: intros; only 1: rewrite Rabs_right; only 1: reflexivity; only 1: auto with real).	6.98719000816	726
Coq.Reals.Rbasic_fun.Rabs_Rabsolu	40
Coq.Reals.Rbasic_fun.Rabs_pos_lt	40
Coq.Reals.Rbasic_fun.Rabs_minus_sym	40
Coq.Reals.Rbasic_fun.Rabs_mult	40
Coq.Reals.Rbasic_fun.Rabs_Rinv	40
Coq.Reals.Rbasic_fun.Rabs_Ropp	40
Coq.Reals.Rbasic_fun.Rabs_triang	40
Coq.Reals.Rbasic_fun.Rabs_triang_inv	40
Coq.Reals.Rbasic_fun.Rabs_triang_inv2	40
Coq.Reals.Rbasic_fun.Rabs_def1	40
Coq.Reals.Rbasic_fun.Rabs_def2	40
Coq.Reals.Rbasic_fun.RmaxAbs	40
Coq.Reals.Rbasic_fun.Rabs_Zabs	40
Coq.Reals.Rbasic_fun.abs_IZR	40
Coq.Reals.Rbasic_fun.Ropp_Rmax	40
Coq.Reals.Rbasic_fun.Ropp_Rmin	40
Coq.Reals.Rbasic_fun.Rmax_assoc	40
Coq.Reals.Rbasic_fun.Rminmax	40
Coq.Reals.Rbasic_fun.Rmin_assoc	40
Coq.Reals.DiscrR.Rlt_R0_R2	40
Coq.Reals.DiscrR.IZR_eq	40	3.11.2	search with cache (only 1: intros; only 1: intuition subst; only 1: tauto).	1.41244792938	310
Coq.Reals.R_Ifp.tech_up	40
Coq.Reals.R_Ifp.up_tech	40
Coq.Reals.R_Ifp.fp_R0	40
Coq.Reals.R_Ifp.for_base_fp	40
Coq.Reals.R_Ifp.base_fp	40
Coq.Reals.R_Ifp.base_Int_part	40
Coq.Reals.R_Ifp.Int_part_INR	40
Coq.Reals.R_Ifp.fp_nat	40
Coq.Reals.R_Ifp.R0_fp_O	40
Coq.Reals.R_Ifp.Rminus_Int_part1	40
Coq.Reals.R_Ifp.Rminus_Int_part2	40
Coq.Reals.R_Ifp.Rminus_fp1	40
Coq.Reals.R_Ifp.Rminus_fp2	40
Coq.Reals.R_Ifp.plus_Int_part1	40
Coq.Reals.R_Ifp.plus_Int_part2	40
Coq.Reals.R_Ifp.plus_frac_part1	40
Coq.Reals.R_Ifp.plus_frac_part2	40
Coq.Reals.Rlogic.sig_forall_dec	40
Coq.Reals.Rlogic.not_not_archimedean	40
Coq.Reals.Rlogic.sig_not_dec	40
Coq.Reals.RIneq.Rle_refl	40	8.2.0	search with cache (only 1: intros; only 1: right; only 1: auto).	1.25879192352	318
Coq.Reals.RIneq.Rge_refl	40	3.0.0	search with cache (only 1: intros; only 1: right; only 1: reflexivity).	0.143599033356	12
Coq.Reals.RIneq.Rlt_irrefl	40
Coq.Reals.RIneq.Rgt_irrefl	40	6.0.0.1.1	search with cache (only 1: unfold Rgt; only 1: intros r H; only 1: eapply Rlt_asym; only 1: eauto; only 1: eauto).	3.48132801056	573
Coq.Reals.RIneq.Rlt_not_eq	40
Coq.Reals.RIneq.Rgt_not_eq	40
Coq.Reals.RIneq.Rlt_dichotomy_converse	40
Coq.Reals.RIneq.Req_dec	40
Coq.Reals.RIneq.Rtotal_order	40	0.0.15.0	search with cache (only 1: intuition eauto  3; only 1: generalize (total_order_T r1 r2), Rlt_dichotomy_converse; only 1: unfold not; only 1: intuition eauto  3).	1.79086494446	659
Coq.Reals.RIneq.Rdichotomy	40	0.1.0	search with cache (only 1: intuition; only 1: generalize (total_order_T r1 r2); only 1: tauto).	0.175947904587	4
Coq.Reals.RIneq.Rlt_le	40	0.6	search with cache (only 1: red; only 1: intuition eauto  3).	0.321892976761	34
Coq.Reals.RIneq.Rgt_ge	40	0.1.6	search with cache (only 1: unfold Rgt; only 1: red; only 1: intuition eauto  3).	0.388183116913	49
Coq.Reals.RIneq.Rle_ge	40
Coq.Reals.RIneq.Rge_le	40	1.0.0.0.0	search with cache (only 1: destruct 1; only 1: red; only 1: tauto; only 1: red; only 1: intuition eauto  3).	0.170565128326	6
Coq.Reals.RIneq.Rlt_gt	40	0	search with cache (only 1: intuition eauto  3).	0.0718688964844	1
Coq.Reals.RIneq.Rgt_lt	40	0	search with cache (only 1: intuition eauto  3).	0.0666170120239	1
Coq.Reals.RIneq.Rnot_le_lt	40
Coq.Reals.RIneq.Rnot_ge_gt	40
Coq.Reals.RIneq.Rnot_le_gt	40	0.2.0.0	search with cache (only 1: intros r1 r2; only 1: unfold Rle; only 1: generalize (total_order_T r1 r2); only 1: tauto).	0.167199134827	6
Coq.Reals.RIneq.Rnot_ge_lt	40	0.0.0	search with cache (only 1: intros; only 1: apply Rnot_le_lt; only 1: auto with real).	0.0878009796143	3
Coq.Reals.RIneq.Rnot_lt_le	40	2.2.0.1.0	search with cache (only 1: intros r1 r2; only 1: generalize (Rtotal_order r1 r2); only 1: unfold Rle; only 1: generalize (total_order_T r1 r2); only 1: intuition eauto  3).	0.380644083023	11
Coq.Reals.RIneq.Rnot_gt_le	40	0.2.0.0	search with cache (only 1: intros; only 1: red; only 1: generalize (total_order_T r1 r2); only 1: tauto).	0.198961019516	6
Coq.Reals.RIneq.Rnot_gt_ge	40	2.2.0.0	search with cache (only 1: intros; only 1: red; only 1: generalize (total_order_T r1 r2); only 1: intuition eauto  3).	0.241713047028	8
Coq.Reals.RIneq.Rnot_lt_ge	40	0.2.1.0	search with cache (only 1: intros; only 1: red; only 1: generalize (total_order_T r1 r2); only 1: tauto).	0.206481933594	7
Coq.Reals.RIneq.Rlt_not_le	40
Coq.Reals.RIneq.Rgt_not_le	40	2.0	search with cache (only 1: intros; only 1: auto with real).	0.463055849075	45
Coq.Reals.RIneq.Rlt_not_ge	40
Coq.Reals.RIneq.Rgt_not_ge	40	3.0	search with cache (only 1: intros; only 1: auto with real).	0.0869309902191	13
Coq.Reals.RIneq.Rle_not_lt	40	0.0.0.3	search with cache (only 1: generalize Rlt_asym, Rlt_dichotomy_converse; only 1: unfold Rle; only 1: unfold not; only 1: intuition eauto  3).	0.827525138855	127
Coq.Reals.RIneq.Rge_not_lt	40	0.0.0.0.1	search with cache (only 1: red; only 1: intros; only 1: eapply Rlt_not_le; only 1: eauto with real; only 1: auto with real).	0.142210960388	6
Coq.Reals.RIneq.Rle_not_gt	40	0.0.0.9	search with cache (only 1: generalize Rlt_asym, Rlt_dichotomy_converse; only 1: unfold Rle; only 1: unfold not; only 1: intuition eauto  3).	4.14637088776	486
Coq.Reals.RIneq.Rge_not_gt	40	0.3.1.0	search with cache (only 1: intros; only 1: red; only 1: apply Rle_not_lt; only 1: auto with real).	0.20009303093	8
Coq.Reals.RIneq.Req_le	40	0.0	search with cache (only 1: unfold Rle; only 1: intuition eauto  3).	0.0705251693726	2
Coq.Reals.RIneq.Req_ge	40	0.0	search with cache (only 1: red; only 1: intuition eauto  3).	0.10946393013	2
Coq.Reals.RIneq.Req_le_sym	40	1.0	search with cache (only 1: unfold Rle; only 1: intuition eauto  3).	0.0897259712219	3
Coq.Reals.RIneq.Req_ge_sym	40	1.0	search with cache (only 1: unfold Rge; only 1: intuition eauto  3).	0.127860069275	3
Coq.Reals.RIneq.Rgt_asym	40	0.1.1.2	search with cache (only 1: intros; only 1: apply Rle_not_lt; only 1: red; only 1: tauto).	0.144936084747	8
Coq.Reals.RIneq.Rle_antisym	40	0.0.6.3	search with cache (only 1: do 2 intro; only 1: generalize (Rlt_asym r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: unfold Rle; only 1: intuition).	2.0053961277	404
Coq.Reals.RIneq.Rge_antisym	40	3.1.0	search with cache (only 1: unfold Rge; only 1: intuition eauto  3; only 1: intuition).	0.276188135147	12
Coq.Reals.RIneq.Rle_le_eq	40	2.2.1.0	search with cache (only 1: intros r1 r2; only 1: red; only 1: unfold Rle; only 1: intuition).	0.237611055374	11
Coq.Reals.RIneq.Rge_ge_eq	40	0	search with cache (only 1: intuition).	0.116772890091	1
Coq.Reals.RIneq.Rlt_eq_compat	40	3.5.1	search with cache (only 1: intuition eauto  3; only 1: subst; only 1: tauto).	0.759991168976	136
Coq.Reals.RIneq.Rgt_eq_compat	40	0.16.1	search with cache (only 1: intuition eauto  3; only 1: subst; only 1: tauto).	9.87852597237	2302
Coq.Reals.RIneq.Rle_trans	40
Coq.Reals.RIneq.Rge_trans	40
Coq.Reals.RIneq.Rgt_trans	40
Coq.Reals.RIneq.Rle_lt_trans	40	1.0.5	search with cache (only 1: generalize eq_trans, Rlt_trans, Rlt_eq_compat; only 1: unfold Rle; only 1: intuition eauto  2).	1.14575004578	144
Coq.Reals.RIneq.Rlt_le_trans	40	1.0.3	search with cache (only 1: generalize Rlt_trans, Rlt_eq_compat; only 1: unfold Rle; only 1: intuition eauto  2).	0.654734134674	86
Coq.Reals.RIneq.Rge_gt_trans	40
Coq.Reals.RIneq.Rgt_ge_trans	40
Coq.Reals.RIneq.Rlt_dec	40
Coq.Reals.RIneq.Rle_dec	40
Coq.Reals.RIneq.Rgt_dec	40	1.14.2	search with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition).	14.4716110229	1324
Coq.Reals.RIneq.Rge_dec	40	1.11.1	search with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition).	2.14869904518	274
Coq.Reals.RIneq.Rlt_le_dec	40	0.1.0	search with cache (only 1: intuition eauto  4 with real; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition eauto  4 with real).	0.153551101685	4
Coq.Reals.RIneq.Rgt_ge_dec	40	0.1.1.0.1.5.0	search with cache (only 1: intros; only 1: edestruct Rle_dec; only 1: right; only 1: eauto with rorders; only 1: left; only 1: red; only 1: eauto with real).	4.40010690689	709
Coq.Reals.RIneq.Rle_lt_dec	40	0.2.0	search with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition eauto  4 with real).	0.169359922409	5
Coq.Reals.RIneq.Rge_gt_dec	40	0.1.0.1.1.0	search with cache (only 1: intros; only 1: edestruct Rlt_le_dec; only 1: right; only 1: eauto with rorders; only 1: left; only 1: eauto with rorders).	0.446231842041	47
Coq.Reals.RIneq.Rlt_or_le	40	1.2.0.0	search with cache (only 1: unfold Rle; only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition eauto  3).	0.157189846039	7
Coq.Reals.RIneq.Rgt_or_ge	40	0.1.0.0.3.1	search with cache (only 1: intros; only 1: edestruct Rlt_le_dec; only 1: left; only 1: eauto with rorders; only 1: right; only 1: eauto with rorders).	0.652354955673	85
Coq.Reals.RIneq.Rle_or_lt	40	0.2.0.1	search with cache (only 1: unfold Rle; only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: tauto).	1.30281496048	102
Coq.Reals.RIneq.Rge_or_gt	40	0.1.0.1.0.0	search with cache (only 1: intros; only 1: edestruct Rlt_or_le; only 1: right; only 1: eauto with rorders; only 1: left; only 1: eauto with rorders).	0.4470911026	47
Coq.Reals.RIneq.Rle_lt_or_eq_dec	40	0.11.0	search with cache (only 1: intuition eauto  3; only 1: generalize (total_order_T r1 r2); only 1: intuition eauto  4 with real).	4.31136608124	358
Coq.Reals.RIneq.inser_trans_R	40
Coq.Reals.RIneq.Rplus_0_r	40
Coq.Reals.RIneq.Rplus_ne	40	1.1.31	search with cache (only 1: constructor; only 1: ring; only 1: ring).	10.13656497	5021
Coq.Reals.RIneq.Rplus_opp_l	40	7.0	search with cache (only 1: intros; only 1: ring).	5.18024396896	36
Coq.Reals.RIneq.Rplus_opp_r_uniq	40
Coq.Reals.RIneq.Rplus_eq_compat_l	40	7.1	search with cache (only 1: intros; only 1: intuition eauto  4 with real).	1.36452507973	57
Coq.Reals.RIneq.Rplus_eq_compat_r	40	2.1.0.0.2	search with cache (only 1: intro; only 1: intros x y H; only 1: replace y with - x + x + y by ring; only 1: rewrite H; only 1: ring).	0.60932803154	81
Coq.Reals.RIneq.Rplus_eq_reg_l	40
Coq.Reals.RIneq.Rplus_eq_reg_r	40
Coq.Reals.RIneq.Rplus_0_r_uniq	40	0.1.0.0.0	search with cache (only 1: intros x y H; only 1: replace y with - x + x + y by ring; only 1: rewrite Rplus_assoc; only 1: rewrite H; only 1: ring).	0.158489942551	6
Coq.Reals.RIneq.Rplus_eq_0_l	40
Coq.Reals.RIneq.Rplus_eq_R0	40	2.0.0.4.0.0.1.0.0.0	search with cache (only 1: intros a b H [H0| H0] H1; only 1: absurd (0 < a + b); only 1: rewrite H1; only 1: auto with real; only 1: apply Rle_lt_trans with (a + 0); only 1: rewrite Rplus_0_r; only 1: auto using Rplus_lt_compat_l with real; only 1: auto using Rplus_lt_compat_l with real; only 1: rewrite <- H0, Rplus_0_r in H1; only 1: auto with real).	17.4885869026	2156
Coq.Reals.RIneq.Rinv_r	40
Coq.Reals.RIneq.Rinv_l_sym	40	0.0.1	search with cache (only 1: intros; only 1: field; only 1: trivial).	0.186125993729	4
Coq.Reals.RIneq.Rinv_r_sym	40	0.0.1	search with cache (only 1: intros; only 1: field; only 1: trivial).	0.189198970795	4
Coq.Reals.RIneq.Rmult_0_r	40	1.1	search with cache (only 1: intros; only 1: field).	0.13410782814	13
Coq.Reals.RIneq.Rmult_0_l	40	0.0	search with cache (only 1: intro; only 1: ring).	0.0840330123901	2
Coq.Reals.RIneq.Rmult_ne	40	12.0.0	search with cache (only 1: intros; only 1: rewrite Rmult_comm; only 1: auto with real).	3.06789898872	951
Coq.Reals.RIneq.Rmult_1_r	40	0.0.1.0.0.0.0.0.0	search with cache (only 1: intros; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: apply Rquot1; only 1: rewrite Rrepr_mult, Rrepr_1; only 1: apply CReal_mult_1_l).	0.331488847733	17
Coq.Reals.RIneq.Rmult_eq_compat_l	40	0.6.1	search with cache (only 1: intros; only 1: apply f_equal; only 1: tauto).	2.1622440815	17
Coq.Reals.RIneq.Rmult_eq_compat_r	40
Coq.Reals.RIneq.Rmult_eq_reg_l	40
Coq.Reals.RIneq.Rmult_eq_reg_r	40
Coq.Reals.RIneq.Rmult_integral	40
Coq.Reals.RIneq.Rmult_eq_0_compat	40
Coq.Reals.RIneq.Rmult_eq_0_compat_r	40	4	search with cache (only 1: auto with real).	0.578892946243	51
Coq.Reals.RIneq.Rmult_eq_0_compat_l	40	3	search with cache (only 1: auto with real).	0.738974094391	82
Coq.Reals.RIneq.Rmult_neq_0_reg	40	30.1	search with cache (only 1: intros; only 1: intuition eauto  4 with real).	7.20763707161	3215
Coq.Reals.RIneq.Rmult_integral_contrapositive	40
Coq.Reals.RIneq.Rmult_integral_contrapositive_currified	40	6	search with cache (only 1: auto with real).	0.816998004913	90
Coq.Reals.RIneq.Rmult_plus_distr_r	40	3.2.1.0.1	search with cache (only 1: intros m n p; only 1: rewrite Rmult_comm; only 1: rewrite (Rmult_comm n p); only 1: rewrite (Rmult_comm m p); only 1: apply Rmult_plus_distr_l).	35.9776890278	844
Coq.Reals.RIneq.Rsqr_0	40
Coq.Reals.RIneq.Rsqr_0_uniq	40
Coq.Reals.RIneq.Ropp_eq_compat	40	2.1.0.0.0	search with cache (only 1: intros x y H; only 1: replace y with - x + x + y by ring; only 1: rewrite Rplus_assoc; only 1: rewrite H; only 1: ring).	0.331369161606	8
Coq.Reals.RIneq.Ropp_0	40	2	search with cache (only 1: ring).	0.081531047821	3
Coq.Reals.RIneq.Ropp_eq_0_compat	40	0.5.2	search with cache (only 1: intros; only 1: rewrite H; only 1: ring).	0.349237918854	19
Coq.Reals.RIneq.Ropp_involutive	40	5.1	search with cache (only 1: intros; only 1: ring).	0.181123971939	13
Coq.Reals.RIneq.Ropp_neq_0_compat	40
Coq.Reals.RIneq.Ropp_plus_distr	40	2.1	search with cache (only 1: intros; only 1: ring).	0.107483148575	5
Coq.Reals.RIneq.Ropp_mult_distr_l	40	0.2	search with cache (only 1: intros; only 1: ring).	0.1420981884	4
Coq.Reals.RIneq.Ropp_mult_distr_l_reverse	40	0.0	search with cache (only 1: intros; only 1: ring).	0.208396196365	2
Coq.Reals.RIneq.Rmult_opp_opp	40	0.0	search with cache (only 1: intros; only 1: ring).	0.139169931412	2
Coq.Reals.RIneq.Ropp_mult_distr_r	40	0.0	search with cache (only 1: intros; only 1: ring).	0.0959379673004	2
Coq.Reals.RIneq.Ropp_mult_distr_r_reverse	40	0.0	search with cache (only 1: intros; only 1: ring).	0.0834760665894	2
Coq.Reals.RIneq.Rminus_0_r	40	1.0.10	search with cache (only 1: unfold Rminus; only 1: intros; only 1: ring).	0.607215166092	119
Coq.Reals.RIneq.Rminus_0_l	40	0.1	search with cache (only 1: intro; only 1: ring).	0.0726392269135	3
Coq.Reals.RIneq.Ropp_minus_distr	40	0.0.0	search with cache (only 1: intro; only 1: intro; only 1: ring).	0.103585958481	3
Coq.Reals.RIneq.Ropp_minus_distr'	40	0.0	search with cache (only 1: intros; only 1: ring).	0.0977528095245	2
Coq.Reals.RIneq.Rminus_diag_eq	40	0.2.3.6	search with cache (only 1: intros x y H; only 1: unfold Rminus; only 1: rewrite H; only 1: ring).	18.3127532005	2722
Coq.Reals.RIneq.Rminus_diag_uniq	40
Coq.Reals.RIneq.Rminus_diag_uniq_sym	40
Coq.Reals.RIneq.Rplus_minus	40	0.0.1	search with cache (only 1: unfold Rminus; only 1: intros; only 1: ring).	0.105509996414	4
Coq.Reals.RIneq.Rminus_eq_contra	40	6.0.1.0	search with cache (only 1: intros; only 1: unfold Rminus; only 1: intro; only 1: auto with real).	0.939415931702	173
Coq.Reals.RIneq.Rminus_not_eq	40	1.0.0.0	search with cache (only 1: red; only 1: intros r1 r2 H H0; only 1: apply H; only 1: auto with real).	0.116348981857	5
Coq.Reals.RIneq.Rminus_not_eq_right	40	2.3.0.0.0	search with cache (only 1: red; only 1: intros; only 1: elim H; only 1: apply Rminus_diag_eq; only 1: auto).	0.256864070892	12
Coq.Reals.RIneq.Rmult_minus_distr_l	40	1.1	search with cache (only 1: intros; only 1: ring).	1.51500105858	16
Coq.Reals.RIneq.Rinv_1	40	2	search with cache (only 1: field).	0.0580880641937	3
Coq.Reals.RIneq.Rinv_neq_0_compat	40
Coq.Reals.RIneq.Rinv_involutive	40	0.3.1	search with cache (only 1: intros; only 1: field; only 1: trivial).	0.54274892807	23
Coq.Reals.RIneq.Rinv_mult_distr	40
Coq.Reals.RIneq.Ropp_inv_permute	40	0.0.1	search with cache (only 1: intros; only 1: field; only 1: trivial).	0.121979951859	4
Coq.Reals.RIneq.Rinv_r_simpl_r	40	0.0.1	search with cache (only 1: intros; only 1: field; only 1: trivial).	0.171361923218	4
Coq.Reals.RIneq.Rinv_r_simpl_l	40	0.0.3.0.0	search with cache (only 1: intros; only 1: transitivity (1 * r2); only 1: field; only 1: trivial; only 1: auto with real).	0.438616037369	16
Coq.Reals.RIneq.Rinv_r_simpl_m	40	1.5.0	search with cache (only 1: intros; only 1: field; only 1: trivial).	3.0721180439	267
Coq.Reals.RIneq.Rinv_mult_simpl	40
Coq.Reals.RIneq.Rplus_gt_compat_l	40	8.1	search with cache (only 1: intros x y H; only 1: apply Rplus_lt_compat_l).	0.930078029633	146
Coq.Reals.RIneq.Rplus_lt_compat_r	40
Coq.Reals.RIneq.Rplus_gt_compat_r	40	7.9	search with cache (only 1: intros m n p; only 1: intuition).	9.17805600166	2020
Coq.Reals.RIneq.Rplus_le_compat_l	40
Coq.Reals.RIneq.Rplus_ge_compat_l	40	7.9	search with cache (only 1: unfold Rge; only 1: intuition).	32.1090819836	4214
Coq.Reals.RIneq.Rplus_le_compat_r	40
Coq.Reals.RIneq.Rplus_ge_compat_r	40	4	search with cache (only 1: intuition).	0.574611186981	62
Coq.Reals.RIneq.Rplus_lt_compat	40
Coq.Reals.RIneq.Rplus_le_compat	40
Coq.Reals.RIneq.Rplus_gt_compat	40	1.1.1	search with cache (only 1: do 3 intro; only 1: red; only 1: auto with real).	0.110690832138	6
Coq.Reals.RIneq.Rplus_ge_compat	40
Coq.Reals.RIneq.Rplus_lt_le_compat	40
Coq.Reals.RIneq.Rplus_le_lt_compat	40
Coq.Reals.RIneq.Rplus_gt_ge_compat	40	3.0.1.4	search with cache (only 1: intros; only 1: apply Rle_lt_trans with (r2 + r3); only 1: auto with real; only 1: auto with real).	1.97321414948	232
Coq.Reals.RIneq.Rplus_ge_gt_compat	40	0.3.2.5	search with cache (only 1: intros; only 1: apply Rlt_le_trans with (r2 + r3); only 1: auto with real; only 1: auto with real).	2.65518522263	492
Coq.Reals.RIneq.Rplus_lt_0_compat	40
Coq.Reals.RIneq.Rplus_le_lt_0_compat	40
Coq.Reals.RIneq.Rplus_lt_le_0_compat	40
Coq.Reals.RIneq.Rplus_le_le_0_compat	40
Coq.Reals.RIneq.sum_inequa_Rle_lt	40	0.0.0	search with cache (only 1: intros n m p q; only 1: generalize (Rlt_le_dec m q); only 1: intuition).	0.078027009964	3
Coq.Reals.RIneq.Rplus_lt_reg_l	40
Coq.Reals.RIneq.Rplus_lt_reg_r	40
Coq.Reals.RIneq.Rplus_le_reg_l	40
Coq.Reals.RIneq.Rplus_le_reg_r	40
Coq.Reals.RIneq.Rplus_gt_reg_l	40
Coq.Reals.RIneq.Rplus_ge_reg_l	40
Coq.Reals.RIneq.Rplus_le_reg_pos_r	40
Coq.Reals.RIneq.Rplus_lt_reg_pos_r	40
Coq.Reals.RIneq.Rplus_ge_reg_neg_r	40
Coq.Reals.RIneq.Rplus_gt_reg_neg_r	40
Coq.Reals.RIneq.Ropp_gt_lt_contravar	40
Coq.Reals.RIneq.Ropp_lt_gt_contravar	40	6.0	search with cache (only 1: intros; only 1: intuition).	0.0783131122589	8
Coq.Reals.RIneq.Ropp_lt_contravar	40	0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: rewrite Rlt_def; only 1: rewrite Rrepr_opp, Rrepr_opp; only 1: apply CRealLtForget; only 1: apply CReal_opp_gt_lt_contravar; only 1: rewrite Rlt_def in H; only 1: apply CRealLtEpsilon; only 1: exact H).	0.0859570503235	8
Coq.Reals.RIneq.Ropp_gt_contravar	40	5.2.0	search with cache (only 1: intros; only 1: unfold Rgt; only 1: intuition eauto  4 with real).	0.447556972504	29
Coq.Reals.RIneq.Ropp_le_ge_contravar	40	3.2.2	search with cache (only 1: red; only 1: unfold Rle; only 1: intuition).	0.933714866638	70
Coq.Reals.RIneq.Ropp_ge_le_contravar	40	0.3.0.0	search with cache (only 1: unfold Rge; only 1: intros r1 r2 [H| H]; only 1: auto with real; only 1: auto with real).	0.0497710704803	7
Coq.Reals.RIneq.Ropp_le_contravar	40	0.0.0.0	search with cache (only 1: unfold Rle; only 1: intros r1 r2 [H| H]; only 1: auto with real; only 1: auto with real).	0.0882461071014	4
Coq.Reals.RIneq.Ropp_ge_contravar	40	0.0.0.0	search with cache (only 1: unfold Rge; only 1: intros r1 r2 [H| H]; only 1: auto with real; only 1: auto with real).	0.0844640731812	4
Coq.Reals.RIneq.Ropp_0_lt_gt_contravar	40
Coq.Reals.RIneq.Ropp_0_gt_lt_contravar	40	0.0.0.0	search with cache (only 1: intros; only 1: replace 0 with - 0; only 1: auto with real; only 1: auto with real).	0.0411059856415	4
Coq.Reals.RIneq.Ropp_lt_gt_0_contravar	40	0.0.0.0	search with cache (only 1: intros; only 1: replace 0 with - 0; only 1: auto with real; only 1: auto with real).	0.0481781959534	4
Coq.Reals.RIneq.Ropp_gt_lt_0_contravar	40	0.0.0.0	search with cache (only 1: intros; only 1: replace 0 with - 0; only 1: auto with real; only 1: auto with real).	0.0476939678192	4
Coq.Reals.RIneq.Ropp_0_le_ge_contravar	40	0.0.1.12	search with cache (only 1: intros; only 1: replace 0 with - 0; only 1: auto with real; only 1: auto with real).	3.15878796577	974
Coq.Reals.RIneq.Ropp_0_ge_le_contravar	40	0.0.0.0	search with cache (only 1: intros; only 1: replace 0 with - 0; only 1: auto with real; only 1: auto with real).	0.0501379966736	4
Coq.Reals.RIneq.Ropp_lt_cancel	40
Coq.Reals.RIneq.Ropp_gt_cancel	40	1.3.1	search with cache (only 1: intros; only 1: unfold Rgt; only 1: auto with real).	0.0438220500946	8
Coq.Reals.RIneq.Ropp_le_cancel	40	1.0.0.8	search with cache (only 1: intros x y H; only 1: rewrite <- (Ropp_involutive x); only 1: rewrite <- (Ropp_involutive y); only 1: auto with real).	11.6938991547	2178
Coq.Reals.RIneq.Ropp_ge_cancel	40
Coq.Reals.RIneq.Rmult_lt_compat_r	40
Coq.Reals.RIneq.Rmult_gt_compat_r	40	2.1.0.0.1	search with cache (only 1: unfold Rgt; only 1: intros; only 1: rewrite (Rmult_comm r2 r); only 1: rewrite (Rmult_comm r1 r); only 1: auto with real).	0.106356859207	23
Coq.Reals.RIneq.Rmult_gt_compat_l	40	2.0.2	search with cache (only 1: unfold Rgt; only 1: intros; only 1: auto with real).	0.0840928554535	15
Coq.Reals.RIneq.Rmult_le_compat_l	40
Coq.Reals.RIneq.Rmult_le_compat_r	40
Coq.Reals.RIneq.Rmult_ge_compat_l	40
Coq.Reals.RIneq.Rmult_ge_compat_r	40
Coq.Reals.RIneq.Rmult_le_compat	40
Coq.Reals.RIneq.Rmult_ge_compat	40
Coq.Reals.RIneq.Rmult_gt_0_lt_compat	40
Coq.Reals.RIneq.Rmult_le_0_lt_compat	40
Coq.Reals.RIneq.Rmult_lt_0_compat	40
Coq.Reals.RIneq.Rmult_le_compat_neg_l	40
Coq.Reals.RIneq.Rmult_le_ge_compat_neg_l	40	0	search with cache (only 1: auto with real rorders).	0.0238909721375	1
Coq.Reals.RIneq.Rmult_lt_gt_compat_neg_l	40
Coq.Reals.RIneq.Rmult_lt_reg_l	40
Coq.Reals.RIneq.Rmult_lt_reg_r	40
Coq.Reals.RIneq.Rmult_gt_reg_l	40	5.0.1.0	search with cache (only 1: intros; only 1: apply Rmult_lt_reg_l with r; only 1: exact H; only 1: auto with real).	0.0534341335297	13
Coq.Reals.RIneq.Rmult_le_reg_l	40
Coq.Reals.RIneq.Rmult_le_reg_r	40
Coq.Reals.RIneq.Rlt_minus	40
Coq.Reals.RIneq.Rgt_minus	40	0.0.0.0.3	search with cache (only 1: red; only 1: intros; only 1: apply (Rplus_lt_reg_l r2); only 1: replace (r2 + (r1 - r2)) with r1 by ring; only 1: now rewrite Rplus_0_r).	0.162461996078	21
Coq.Reals.RIneq.Rlt_Rminus	40
Coq.Reals.RIneq.Rle_minus	40
Coq.Reals.RIneq.Rge_minus	40
Coq.Reals.RIneq.Rminus_lt	40
Coq.Reals.RIneq.Rminus_gt	40
Coq.Reals.RIneq.Rminus_gt_0_lt	40
Coq.Reals.RIneq.Rminus_le	40	0.0.0.0.0.0.1.1.3.1	search with cache (only 1: unfold Rle; only 1: intro; only 1: intuition eauto  3; only 1: replace r1 with r1 - r2 + r2; only 1: pattern r2 at 3; only 1: replace r2 with 0 + r2; only 1: auto with real; only 1: auto with real; only 1: ring; only 1: auto with real).	7.12914204597	2426
Coq.Reals.RIneq.Rminus_ge	40
Coq.Reals.RIneq.tech_Rplus	40
Coq.Reals.RIneq.Rle_0_sqr	40
Coq.Reals.RIneq.Rlt_0_sqr	40
Coq.Reals.RIneq.Rplus_sqr_eq_0_l	40
Coq.Reals.RIneq.Rplus_sqr_eq_0	40
Coq.Reals.RIneq.Rlt_0_1	40	0.5.6	search with cache (only 1: replace 1 with 0 + 1; only 1: apply Rlt_n_Sn; only 1: apply Rplus_0_l).	0.356419086456	153
Coq.Reals.RIneq.Rle_0_1	40	2	search with cache (only 1: auto with real).	0.0489459037781	3
Coq.Reals.RIneq.Rinv_0_lt_compat	40
Coq.Reals.RIneq.Rinv_lt_0_compat	40	0.0.0.0.0.0.1.0.0.0.0	search with cache (only 1: intros; only 1: apply Rnot_le_lt; only 1: red; only 1: intros; only 1: absurd (1 <= 0); only 1: auto with real; only 1: replace 1 with r * / r; only 1: replace 0 with r * 0; only 1: auto with real; only 1: auto with real; only 1: auto with real).	1.39799904823	400
Coq.Reals.RIneq.Rinv_lt_contravar	40
Coq.Reals.RIneq.Rinv_1_lt_contravar	40
Coq.Reals.RIneq.Rle_lt_0_plus_1	40	0.0.1.23	search with cache (only 1: intros; only 1: replace 0 with 0 + 0; only 1: auto with real; only 1: auto with real).	0.856215953827	1369
Coq.Reals.RIneq.Rlt_plus_1	40
Coq.Reals.RIneq.tech_Rgt_minus	40
Coq.Reals.RIneq.S_INR	40
Coq.Reals.RIneq.S_O_plus_INR	40
Coq.Reals.RIneq.plus_INR	40
Coq.Reals.RIneq.minus_INR	40
Coq.Reals.RIneq.mult_INR	40
Coq.Reals.RIneq.pow_INR	40
Coq.Reals.RIneq.lt_0_INR	40
Coq.Reals.RIneq.lt_INR	40
Coq.Reals.RIneq.lt_1_INR	40
Coq.Reals.RIneq.pos_INR_nat_of_P	40
Coq.Reals.RIneq.pos_INR	40	5.2.1.13.0	search with cache (only 1: intros; only 1: induction n as [| n Hrecn]; only 1: auto with real; only 1: rewrite S_INR; only 1: auto with real).	30.1363739967	18718
Coq.Reals.RIneq.INR_lt	40
Coq.Reals.RIneq.le_INR	40	4.0.0.0.4	search with cache (only 1: apply le_elim_rel; only 1: apply pos_INR; only 1: intros; only 1: repeat rewrite S_INR; only 1: auto with real).	1.10806488991	650
Coq.Reals.RIneq.INR_not_0	40	0.0.5.1	search with cache (only 1: intro; only 1: case n; only 1: auto with real; only 1: auto with arith).	0.16600394249	26
Coq.Reals.RIneq.not_0_INR	40
Coq.Reals.RIneq.not_INR	40
Coq.Reals.RIneq.INR_eq	40
Coq.Reals.RIneq.INR_le	40
Coq.Reals.RIneq.not_1_INR	40	15.3	search with cache (only 1: intros; only 1: now apply not_INR in H).	11.4092290401	3699
Coq.Reals.RIneq.IZN	40
Coq.Reals.RIneq.INR_IPR	40
Coq.Reals.RIneq.INR_IZR_INZ	40
Coq.Reals.RIneq.plus_IZR_NEG_POS	40
Coq.Reals.RIneq.plus_IZR	40
Coq.Reals.RIneq.mult_IZR	40
Coq.Reals.RIneq.pow_IZR	40
Coq.Reals.RIneq.succ_IZR	40	2.3.0.0.0.6.1.0.0	search with cache (only 1: intro t; only 1: destruct t; only 1: auto with real; only 1: simpl; only 1: unfold IZR; only 1: rewrite <- 3!INR_IPR, Pos2Nat.inj_add; only 1: apply plus_INR; only 1: rewrite Rplus_comm; only 1: apply plus_IZR_NEG_POS).	4.25838494301	3259
Coq.Reals.RIneq.opp_IZR	40	9.1.3.1.0.7	search with cache (only 1: intro t; only 1: case t; only 1: auto with real; only 1: auto with real; only 1: unfold IZR; only 1: auto with real).	21.6754009724	12499
Coq.Reals.RIneq.minus_IZR	40
Coq.Reals.RIneq.Z_R_minus	40
Coq.Reals.RIneq.lt_0_IZR	40
Coq.Reals.RIneq.lt_IZR	40
Coq.Reals.RIneq.eq_IZR_R0	40
Coq.Reals.RIneq.eq_IZR	40
Coq.Reals.RIneq.not_0_IZR	40
Coq.Reals.RIneq.le_0_IZR	40
Coq.Reals.RIneq.le_IZR	40
Coq.Reals.RIneq.le_IZR_R1	40
Coq.Reals.RIneq.IZR_ge	40
Coq.Reals.RIneq.IZR_le	40
Coq.Reals.RIneq.IZR_lt	40
Coq.Reals.RIneq.IZR_neq	40	4.2.0.1.0.0.3	search with cache (only 1: intro n; only 1: intros z H; only 1: red; only 1: intros H0; only 1: case H; only 1: apply eq_IZR; only 1: auto).	31.03946805	14088
Coq.Reals.RIneq.one_IZR_lt1	40
Coq.Reals.RIneq.one_IZR_r_R1	40
Coq.Reals.RIneq.single_z_r_R1	40
Coq.Reals.RIneq.tech_single_z_r_R1	40
Coq.Reals.RIneq.Rmult_le_pos	40
Coq.Reals.RIneq.Rinv_le_contravar	40
Coq.Reals.RIneq.Rle_Rinv	40
Coq.Reals.RIneq.Ropp_div	40
Coq.Reals.RIneq.double	40	12.15	search with cache (only 1: intro H1; only 1: ring).	0.503422021866	540
Coq.Reals.RIneq.double_var	40
Coq.Reals.RIneq.R_rm	40
Coq.Reals.RIneq.Zeq_bool_IZR	40
Coq.Reals.RIneq.Rmult_ge_0_gt_0_lt_compat	40	1.1.2.0	search with cache (only 1: intros; only 1: apply Rle_lt_trans with (r2 * r3); only 1: auto with real; only 1: auto with real).	0.373224020004	81
Coq.Reals.RIneq.le_epsilon	40
Coq.Reals.RIneq.completeness_weak	40
Coq.Reals.RIneq.Rdiv_lt_0_compat	40
Coq.Reals.RIneq.Rdiv_plus_distr	40	8.0.1.0	search with cache (only 1: intro; only 1: intros x y; only 1: unfold Rdiv; only 1: ring).	0.715266942978	430
Coq.Reals.RIneq.Rdiv_minus_distr	40	10.0.1.2	search with cache (only 1: intro; only 1: intros x y; only 1: unfold Rdiv; only 1: ring).	1.13553500175	1038
Coq.Reals.RIneq.Req_EM_T	40
Coq.Reals.Raxioms.Rrepr_0	40
Coq.Reals.Raxioms.Rrepr_1	40
Coq.Reals.Raxioms.Rrepr_plus	40
Coq.Reals.Raxioms.Rrepr_opp	40
Coq.Reals.Raxioms.Rrepr_minus	40
Coq.Reals.Raxioms.Rrepr_mult	40
Coq.Reals.Raxioms.Rrepr_inv	40
Coq.Reals.Raxioms.Rrepr_le	40
Coq.Reals.Raxioms.Rrepr_appart	40
Coq.Reals.Raxioms.Rappart_repr	40
Coq.Reals.Raxioms.Rplus_comm	40
Coq.Reals.Raxioms.Rplus_assoc	40
Coq.Reals.Raxioms.Rplus_opp_r	40
Coq.Reals.Raxioms.Rplus_0_l	40
Coq.Reals.Raxioms.Rmult_comm	40
Coq.Reals.Raxioms.Rmult_assoc	40
Coq.Reals.Raxioms.Rinv_l	40
Coq.Reals.Raxioms.Rmult_1_l	40
Coq.Reals.Raxioms.R1_neq_R0	40
Coq.Reals.Raxioms.Rmult_plus_distr_l	40
Coq.Reals.Raxioms.Rlt_asym	40
Coq.Reals.Raxioms.Rlt_trans	40
Coq.Reals.Raxioms.Rplus_lt_compat_l	40
Coq.Reals.Raxioms.Rmult_lt_compat_l	40
Coq.Reals.Raxioms.Rrepr_INR	40
Coq.Reals.Raxioms.Rrepr_IPR2	40
Coq.Reals.Raxioms.Rrepr_IPR	40
Coq.Reals.Raxioms.Rrepr_IZR	40
Coq.Reals.Raxioms.archimed	40
Coq.Reals.Raxioms.completeness	40
Coq.Reals.ConstructiveRealsLUB.is_upper_bound_dec	40
Coq.Reals.ConstructiveRealsLUB.is_upper_bound_epsilon	40
Coq.Reals.ConstructiveRealsLUB.is_upper_bound_not_epsilon	40
Coq.Reals.ConstructiveRealsLUB.DDlow_below_up	40
Coq.Reals.ConstructiveRealsLUB.DDcut_limit_fix	40
Coq.Reals.ConstructiveRealsLUB.DDcut_limit	40
Coq.Reals.ConstructiveRealsLUB.glb_dec_Q	40
Coq.Reals.ConstructiveRealsLUB.is_upper_bound_glb	40
Coq.Reals.ConstructiveRealsLUB.is_upper_bound_closed	40
Coq.Reals.ConstructiveRealsLUB.sig_lub	40
Coq.Reals.ConstructiveRealsLUB.CR_sig_lub	40
Coq.Reals.Rdefinitions.total_order_T	40
Coq.Reals.Rdefinitions.Req_appart_dec	40
Coq.Reals.Rdefinitions.Rrepr_appart_0	40
Coq.Reals.Rdefinitions.up	40
Coq.Reals.ClassicalDedekindReals.isLowerCut_hprop	40
Coq.Reals.ClassicalDedekindReals.lowerCutBelow	40
Coq.Reals.ClassicalDedekindReals.lowerCutAbove	40
Coq.Reals.ClassicalDedekindReals.DRealQlim_rec	40
Coq.Reals.ClassicalDedekindReals.DRealQlim	40
Coq.Reals.ClassicalDedekindReals.DRealAbstr	40
Coq.Reals.ClassicalDedekindReals.UpperAboveLower	40
Coq.Reals.ClassicalDedekindReals.DRealRepr	40
Coq.Reals.ClassicalDedekindReals.Rle_antisym	40
Coq.Reals.ClassicalDedekindReals.lowerUpper	40
Coq.Reals.ClassicalDedekindReals.DRealOpen	40
Coq.Reals.ClassicalDedekindReals.DRealReprQ	40
Coq.Reals.ClassicalDedekindReals.DRealReprQup	40
Coq.Reals.ClassicalDedekindReals.DRealQuot1	40
Coq.Reals.ClassicalDedekindReals.DRealAbstrFalse	40
Coq.Reals.ClassicalDedekindReals.DRealQuot2	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_increasing_inv	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_unique	40
Coq.Reals.ConstructiveRealsMorphisms.Endomorph_id	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_proper	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_compose	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_le	40	4.10.20.4	search with cache (only 1: intros; only 1: intro abs; only 1: apply CRmorph_increasing_inv in abs; only 1: contradiction).	3.48884105682	3158
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_le_inv	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_zero	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_one	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_opp	40
Coq.Reals.ConstructiveRealsMorphisms.CRplus_pos_rat_lt	40
Coq.Reals.ConstructiveRealsMorphisms.CRplus_neg_rat_lt	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_plus_rat	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_plus	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_pos	40
Coq.Reals.ConstructiveRealsMorphisms.NatOfZ	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_int	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_inv	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_rat	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_pos_pos_le	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_pos_pos	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_appart	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_appart_zero	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_inv	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_rat	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_increasing_Ql	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_increasing_Qr	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_increasing	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorphism	40
Coq.Reals.ConstructiveRealsMorphisms.RightBound	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inv	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inv_rat	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inv_increasing_Qr	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inv_increasing	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorphismInv	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_surject	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inject	40
Coq.Reals.ConstructiveRcomplete.CReal_absSmall	40
Coq.Reals.ConstructiveRcomplete.Un_cv_mod_eq	40
Coq.Reals.ConstructiveRcomplete.Rfloor	40
Coq.Reals.ConstructiveRcomplete.FQ_dense	40
Coq.Reals.ConstructiveRcomplete.RQ_limit	40
Coq.Reals.ConstructiveRcomplete.Rdiag_cauchy_sequence	40
Coq.Reals.ConstructiveRcomplete.doubleLeCovariant	40
Coq.Reals.ConstructiveRcomplete.CReal_cv_self	40
Coq.Reals.ConstructiveRcomplete.Un_cv_extens	40
Coq.Reals.ConstructiveRcomplete.R_has_all_rational_limits	40
Coq.Reals.ConstructiveRcomplete.Rcauchy_complete	40
Coq.Reals.ConstructiveRcomplete.CRealImplem	40
Coq.Reals.ConstructiveCauchyRealsMult.BoundFromZero	40
Coq.Reals.ConstructiveCauchyRealsMult.QCauchySeq_bounded	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_cauchy	40
Coq.Reals.ConstructiveCauchyRealsMult.linear_max	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult	40	74.31	search with cache (only 1: destruct x as [xn limx]; only 1: auto).	3.58899712563	8672
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_unfold	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_assoc_bounded_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_assoc	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_comm	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_proper_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_0_compat	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_plus_distr_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_plus_distr_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_1_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_isRingExt	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_isRing	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_morph_Proper	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_morph_T	40	7	search with cache (only 1: apply CReal_isRingExt).	11.8198399544	264
Coq.Reals.ConstructiveCauchyRealsMult.CReal_opp_morph_Proper	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_opp_morph_T	40	4	search with cache (only 1: apply (Ropp_ext CReal_isRingExt)).	10.502560854	72
Coq.Reals.ConstructiveCauchyRealsMult.CReal_minus_morph_Proper	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_minus_morph_T	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_0_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_0_r	40	0.0	search with cache (only 1: intro; only 1: ring).	0.0950090885162	2
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_1_r	40	0.2	search with cache (only 1: intro; only 1: ring).	2.61877393723	117
Coq.Reals.ConstructiveCauchyRealsMult.CReal_opp_mult_distr_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_opp_mult_distr_r	40	0.0	search with cache (only 1: intros; only 1: ring).	0.0504369735718	2
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_compat_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_compat_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_reg_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_abs_appart_zero	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealArchimedean	40
Coq.Reals.ConstructiveCauchyRealsMult.Rup_pos	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealLtDisjunctEpsilon	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealShiftReal	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealShiftEqual	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealNegShift	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealPosShift	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_neg	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_pos	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_0_lt_compat	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_linear_shift	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_linear_shift_eq	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_1	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_mult_distr	40
Coq.Reals.ConstructiveCauchyRealsMult.Rinv_eq_compat	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_reg_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_reg_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_reg_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_compat_l	40	1.9	search with cache (only 1: intros x y z; only 1: apply CReal_mult_proper_l).	14.7464489937	946
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_compat_r	40	1.2.2	search with cache (only 1: intros; only 1: rewrite H; only 1: reflexivity).	0.739006996155	85
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_pos_appart_zero	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_le_compat_l_half	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_invQ	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealQ_dense	40
Coq.Reals.ConstructiveCauchyRealsMult.inject_Q_mult	40
Coq.Reals.ConstructiveCauchyReals.QSeqEquiv_sym	40
Coq.Reals.ConstructiveCauchyReals.factorDenom	40	0.0.0.7	search with cache (only 1: intros [| n| n]; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	0.373637914658	44
Coq.Reals.ConstructiveCauchyReals.QSeqEquiv_trans	40
Coq.Reals.ConstructiveCauchyReals.QSeqEquivEx_sym	40
Coq.Reals.ConstructiveCauchyReals.QSeqEquivEx_trans	40
Coq.Reals.ConstructiveCauchyReals.QSeqEquiv_cau_r	40
Coq.Reals.ConstructiveCauchyReals.increasing_modulus_inc	40
Coq.Reals.ConstructiveCauchyReals.increasing_modulus_max	40
Coq.Reals.ConstructiveCauchyReals.standard_modulus	40
Coq.Reals.ConstructiveCauchyReals.CRealLtEpsilon	40
Coq.Reals.ConstructiveCauchyReals.CRealLtForget	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_lpo_dec	40
Coq.Reals.ConstructiveCauchyReals.CRealLe_not_lt	40
Coq.Reals.ConstructiveCauchyReals.CRealEq_diff	40
Coq.Reals.ConstructiveCauchyReals.CRealEq_modindep	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_aboveSig	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_above	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_above_same	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_asym	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_irrefl	40
Coq.Reals.ConstructiveCauchyReals.CRealLe_refl	40
Coq.Reals.ConstructiveCauchyReals.CRealEq_refl	40	1.18.1.18.2	search with cache (only 1: split; only 1: intro abs; only 1: exact (CRealLt_asym x x abs abs); only 1: intro abs; only 1: exact (CRealLt_asym x x abs abs)).	19.60521698	14335
Coq.Reals.ConstructiveCauchyReals.CRealEq_sym	40	5.0.8.2	search with cache (only 1: split; only 1: apply H; only 1: destruct H; only 1: apply H).	6.24523091316	2223
Coq.Reals.ConstructiveCauchyReals.CRealLt_dec	40
Coq.Reals.ConstructiveCauchyReals.CReal_le_lt_trans	40
Coq.Reals.ConstructiveCauchyReals.CReal_lt_le_trans	40
Coq.Reals.ConstructiveCauchyReals.CReal_le_trans	40
Coq.Reals.ConstructiveCauchyReals.CReal_lt_trans	40
Coq.Reals.ConstructiveCauchyReals.CRealEq_trans	40
Coq.Reals.ConstructiveCauchyReals.CRealEq_relT	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_morph	40
Coq.Reals.ConstructiveCauchyReals.CRealGt_morph	40
Coq.Reals.ConstructiveCauchyReals.CReal_appart_morph	40
Coq.Reals.ConstructiveCauchyReals.CRealLtProp_morph_Proper	40
Coq.Reals.ConstructiveCauchyReals.CRealLe_morph_Proper	40
Coq.Reals.ConstructiveCauchyReals.CRealGe_morph_Proper	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_proper_l	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_proper_r	40
Coq.Reals.ConstructiveCauchyReals.CRealLe_proper_l	40	2.2.4.1.4.0	search with cache (only 1: intros; only 1: intro abs; only 1: apply H0; only 1: apply (CRealLt_morph z z (CRealEq_refl z) x y); only 1: assumption; only 1: assumption).	3.56076812744	1024
Coq.Reals.ConstructiveCauchyReals.CRealLe_proper_r	40	4.0.5.3.7.0	search with cache (only 1: intros; only 1: intro abs; only 1: apply H0; only 1: apply (CRealLt_morph x y H z z); only 1: apply CRealEq_refl; only 1: assumption).	9.42713999748	2537
Coq.Reals.ConstructiveCauchyReals.ConstCauchy	40
Coq.Reals.ConstructiveCauchyReals.inject_Q	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_0_1	40
Coq.Reals.ConstructiveCauchyReals.CReal_injectQPos	40
Coq.Reals.ConstructiveCauchyReals.CRealLtQ	40
Coq.Reals.ConstructiveCauchyReals.CRealLtQopp	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_compare	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_morph_Proper	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_morph_T	40	0.0.0.0.0.0.0.0.0.0.0.0.1	search with cache (only 1: split; only 1: intros [n abs]; only 1: simpl in abs; only 1: rewrite H in abs; only 1: unfold Qminus in abs; only 1: rewrite Qplus_opp_r in abs; only 1: discriminate abs; only 1: intros [n abs]; only 1: simpl in abs; only 1: rewrite H in abs; only 1: unfold Qminus in abs; only 1: rewrite Qplus_opp_r in abs; only 1: discriminate abs).	2.76675581932	582
Coq.Reals.ConstructiveCauchyReals.CReal_plus_cauchy	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus	40	6.67	search with cache (only 1: pose proof (CRealLe_not_lt x y) as [_ H2]; only 1: assumption).	1.68751621246	2829
Coq.Reals.ConstructiveCauchyReals.CReal_plus_nth	40	7.0.3.0.1.19	search with cache (only 1: simpl; only 1: intro n; only 1: destruct n; only 1: intro n; only 1: destruct n; only 1: auto).	6.14027810097	2144
Coq.Reals.ConstructiveCauchyReals.CReal_plus_unfold	40
Coq.Reals.ConstructiveCauchyReals.CReal_opp	40	112	search with cache (only 1: auto).	2.25876617432	6564
Coq.Reals.ConstructiveCauchyReals.belowMultiple	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_assoc	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_comm	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_0_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_0_r	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_lt_compat_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_lt_compat_r	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_lt_reg_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_lt_reg_r	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_reg_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_reg_r	40	6.2.1.0.0.0.0	search with cache (only 1: intros; only 1: intro abs; only 1: apply H; only 1: clear H; only 1: do 2 rewrite <- (CReal_plus_comm x); only 1: apply CReal_plus_lt_compat_l; only 1: exact abs).	16.891409874	2041
Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_compat_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_lt_compat	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_compat	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_opp_r	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_opp_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_proper_r	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_proper_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_morph_Proper	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_morph_T	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_eq_reg_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_opp_0	40	8	search with cache (only 1: apply CReal_plus_0_l).	1.33972001076	62
Coq.Reals.ConstructiveCauchyReals.CReal_opp_plus_distr	40
Coq.Reals.ConstructiveCauchyReals.CReal_opp_involutive	40
Coq.Reals.ConstructiveCauchyReals.CReal_opp_gt_lt_contravar	40
Coq.Reals.ConstructiveCauchyReals.CReal_opp_ge_le_contravar	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_plus	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_one	40	2.5.0	search with cache (only 1: apply (CReal_plus_eq_reg_l 0); only 1: rewrite CReal_plus_comm; only 1: apply CReal_plus_0_l).	0.33430480957	32
Coq.Reals.ConstructiveCauchyReals.inject_Q_lt	40
Coq.Reals.ConstructiveCauchyReals.opp_inject_Q	40
Coq.Reals.ConstructiveCauchyReals.lt_inject_Q	40
Coq.Reals.ConstructiveCauchyReals.le_inject_Q	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_le	40
Coq.Reals.ConstructiveCauchyReals.inject_Z_plus	40
Coq.Reals.ConstructiveCauchyReals.opp_inject_Z	40
Coq.Reals.ConstructiveReals.CRlt_asym	40
Coq.Reals.ConstructiveReals.CRlt_proper	40
Coq.Reals.ConstructiveReals.CRle_refl	40
Coq.Reals.ConstructiveReals.CRle_lt_trans	40
Coq.Reals.ConstructiveReals.CRlt_le_trans	40
Coq.Reals.ConstructiveReals.CRle_trans	40
Coq.Reals.ConstructiveReals.CRlt_trans	40	4.17.12	search with cache (only 1: intro; only 1: destruct (CRltLinear R), p; only 1: apply c).	35.3752498627	20188
Coq.Reals.ConstructiveReals.CRlt_trans_flip	40
Coq.Reals.ConstructiveReals.CReq_refl	40
Coq.Reals.ConstructiveReals.CReq_sym	40
Coq.Reals.ConstructiveReals.CReq_trans	40
Coq.Reals.ConstructiveReals.CR_setoid	40
Coq.Reals.ConstructiveReals.CRplus_0_r	40
Coq.Reals.ConstructiveReals.CRmult_1_r	40
Coq.Reals.ConstructiveReals.CRplus_opp_l	40
Coq.Reals.ConstructiveReals.CRplus_lt_compat_r	40
Coq.Reals.ConstructiveReals.CRplus_lt_reg_r	40
Coq.Reals.ConstructiveReals.CRplus_le_compat_l	40
Coq.Reals.ConstructiveReals.CRplus_le_compat_r	40
Coq.Reals.ConstructiveReals.CRplus_le_reg_l	40	12.5.12.0.0	search with cache (only 1: intros; only 1: intros abs; only 1: apply H; only 1: apply CRplus_lt_compat_l; only 1: exact abs).	5.98665213585	4312
Coq.Reals.ConstructiveReals.CRplus_le_reg_r	40
Coq.Reals.ConstructiveReals.CRplus_lt_le_compat	40
Coq.Reals.ConstructiveReals.CRplus_eq_reg_l	40
Coq.Reals.ConstructiveReals.CRplus_eq_reg_r	40
Coq.Reals.ConstructiveReals.CRopp_involutive	40
Coq.Reals.ConstructiveReals.CRopp_gt_lt_contravar	40
Coq.Reals.ConstructiveReals.CRopp_lt_cancel	40
Coq.Reals.ConstructiveReals.CRopp_plus_distr	40
Coq.Reals.ConstructiveReals.CRmult_plus_distr_l	40
Coq.Reals.ConstructiveReals.CRzero_double	40
Coq.Reals.ConstructiveReals.CRmult_0_r	40
Coq.Reals.ConstructiveReals.CRopp_mult_distr_r	40
Coq.Reals.ConstructiveReals.CRopp_mult_distr_l	40
Coq.Reals.ConstructiveReals.CRmult_lt_compat_r	40
Coq.Reals.ConstructiveReals.CRinv_r	40
Coq.Reals.ConstructiveReals.CRmult_lt_reg_r	40
Coq.Reals.ConstructiveReals.CRmult_lt_reg_l	40
Coq.Reals.ConstructiveReals.CRmult_le_compat_l	40
Coq.Reals.ConstructiveReals.CRmult_le_compat_r	40
Coq.Reals.ConstructiveReals.CRmult_eq_reg_r	40
Coq.Reals.ConstructiveReals.CR_of_Q_proper	40
Coq.Reals.ConstructiveReals.CR_of_Q_zero	40
Coq.Reals.ConstructiveReals.CR_of_Q_opp	40
Coq.Reals.ConstructiveReals.CR_of_Q_le	40
Coq.Reals.ConstructiveReals.CR_of_Q_pos	40
Coq.Reals.ConstructiveReals.CR_cv_above_rat	40
Coq.Reals.ConstructiveReals.CR_cv_below_rat	40
Coq.Reals.ConstructiveReals.CR_cv_const	40
Coq.Relations.Relations.inverse_image_of_equivalence	40
Coq.Relations.Relations.inverse_image_of_eq	40	1.3.0.1.3.0.1.0.0.0	search with cache (only 1: intros; only 1: split; only 1: red; only 1: reflexivity; only 1: red; only 1: destruct 1; only 1: trivial; only 1: red; only 1: destruct 1; only 1: trivial).	2.86546683311	1212
Coq.Relations.Operators_Properties.clos_rt_is_preorder	40
Coq.Relations.Operators_Properties.clos_rt_idempotent	40
Coq.Relations.Operators_Properties.clos_rt_clos_rst	40
Coq.Relations.Operators_Properties.clos_r_clos_rt	40	1.1.0.0	search with cache (only 1: red; only 1: induction 1; only 1: auto with sets; only 1: auto with sets).	0.0581870079041	6
Coq.Relations.Operators_Properties.clos_rt_t	40
Coq.Relations.Operators_Properties.clos_rst_is_equiv	40	2.0.0.1.5.1.2.8	search with cache (only 1: constructor; only 1: auto with sets; only 1: red; only 1: intros; only 1: apply rst_trans with y; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets).	8.81693100929	3198
Coq.Relations.Operators_Properties.clos_rst_idempotent	40	0.0.1.0.0.0.2.0	search with cache (only 1: red; only 1: induction 1; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets; only 1: apply rst_trans with y; only 1: auto with sets; only 1: auto with sets).	0.708076953888	143
Coq.Relations.Operators_Properties.clos_t1n_trans	40
Coq.Relations.Operators_Properties.clos_trans_t1n	40
Coq.Relations.Operators_Properties.clos_trans_t1n_iff	40
Coq.Relations.Operators_Properties.clos_tn1_trans	40	4.1.4.3.1.1.3	search with cache (only 1: induction 1; only 1: left; only 1: auto with sets; only 1: right with y; only 1: auto; only 1: left; only 1: auto).	9.37418603897	8281
Coq.Relations.Operators_Properties.clos_trans_tn1	40
Coq.Relations.Operators_Properties.clos_trans_tn1_iff	40
Coq.Relations.Operators_Properties.clos_rt1n_step	40	2.1.5.0	search with cache (only 1: intros; only 1: right with y; only 1: auto with sets; only 1: left).	0.498765945435	163
Coq.Relations.Operators_Properties.clos_rtn1_step	40	6.1.0.2	search with cache (only 1: intro y0; only 1: right with y0; only 1: auto; only 1: left).	0.708646059036	317
Coq.Relations.Operators_Properties.clos_rt1n_rt	40	3.3.5.1.3	search with cache (only 1: induction 1; only 1: auto with sets; only 1: apply rt_trans with y; only 1: auto with sets; only 1: auto with sets).	1.2328851223	1074
Coq.Relations.Operators_Properties.clos_rt_rt1n	40
Coq.Relations.Operators_Properties.clos_rt_rt1n_iff	40
Coq.Relations.Operators_Properties.clos_rtn1_rt	40	9.6.7.2.4	search with cache (only 1: induction 1; only 1: auto with sets; only 1: constructor 3 with y; only 1: auto; only 1: auto with sets).	12.2574689388	16173
Coq.Relations.Operators_Properties.clos_rt_rtn1	40
Coq.Relations.Operators_Properties.clos_rt_rtn1_iff	40
Coq.Relations.Operators_Properties.clos_refl_trans_ind_left	40
Coq.Relations.Operators_Properties.rt1n_ind_right	40
Coq.Relations.Operators_Properties.clos_refl_trans_ind_right	40	0.0.1.0.0.2.0.1.4.1.1.1.1.7.5.0	search with cache (only 1: intros; only 1: induction H1; only 1: apply H0 with y; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets; only 1: apply IHclos_refl_trans1; only 1: auto with sets; only 1: intros; only 1: apply H0 with y0; only 1: auto with sets; only 1: auto with sets; only 1: apply rt_trans with y; only 1: auto with sets; only 1: auto with sets).	17.7387881279	20066
Coq.Relations.Operators_Properties.clos_rst1n_rst	40
Coq.Relations.Operators_Properties.clos_rst1n_trans	40	4.4.10.4.1	search with cache (only 1: induction 1; only 1: auto; only 1: right with y; only 1: auto; only 1: auto).	9.92554116249	4710
Coq.Relations.Operators_Properties.clos_rst1n_sym	40
Coq.Relations.Operators_Properties.clos_rst_rst1n	40
Coq.Relations.Operators_Properties.clos_rst_rst1n_iff	40
Coq.Relations.Operators_Properties.clos_rstn1_rst	40
Coq.Relations.Operators_Properties.clos_rstn1_trans	40
Coq.Relations.Operators_Properties.clos_rstn1_sym	40
Coq.Relations.Operators_Properties.clos_rst_rstn1	40
Coq.Relations.Operators_Properties.clos_rst_rstn1_iff	40
Coq.Relations.Operators_Properties.clos_trans_transp_permute	40
Coq.Setoids.Setoid.Seq_refl	40	61.7	search with cache (only 1: simpl_relation; only 1: firstorder).	5.18740797043	8044
Coq.Setoids.Setoid.Seq_sym	40	6.0.0	search with cache (only 1: unfold Setoid_Theory in s; only 1: intros; only 1: intuition).	0.0638911724091	11
Coq.Setoids.Setoid.Seq_trans	40	8.0.0	search with cache (only 1: unfold Setoid_Theory in s; only 1: intros; only 1: now transitivity y).	0.404034137726	160
Coq.Setoids.Setoid.gen_st	40	3	search with cache (only 1: simpl_relation).	0.0571191310883	4
Coq.Sets.Integers.le_reflexive	40	6.1	search with cache (only 1: intro H'0; only 1: auto with sets arith).	0.164863109589	9
Coq.Sets.Integers.le_antisym	40	6	search with cache (only 1: auto with sets arith).	0.541519880295	35
Coq.Sets.Integers.le_trans	40	1.1.12.5.1	search with cache (only 1: intro H'0; only 1: intros x y H H'; only 1: elim H'; only 1: auto; only 1: auto).	6.34086298943	3312
Coq.Sets.Integers.le_Order	40
Coq.Sets.Integers.triv_nat	40
Coq.Sets.Integers.nat_po	40
Coq.Sets.Integers.le_total_order	40
Coq.Sets.Integers.Finite_subset_has_lub	40
Coq.Sets.Integers.Integers_has_no_ub	40
Coq.Sets.Integers.Integers_infinite	40
Coq.Sets.Infinite_sets.make_new_approximant	40
Coq.Sets.Infinite_sets.approximants_grow	40
Coq.Sets.Infinite_sets.approximants_grow'	40
Coq.Sets.Infinite_sets.approximant_can_be_any_size	40
Coq.Sets.Infinite_sets.Image_set_continuous	40
Coq.Sets.Infinite_sets.Image_set_continuous'	40
Coq.Sets.Infinite_sets.Pigeonhole_bis	40
Coq.Sets.Infinite_sets.Pigeonhole_ter	40
Coq.Sets.Image.Im_def	40
Coq.Sets.Image.Im_add	40
Coq.Sets.Image.image_empty	40	3.2.3.1.0.0.0.3	search with cache (only 1: intro H'3; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: destruct 1; only 1: auto with sets).	3.83665299416	1602
Coq.Sets.Image.finite_image	40
Coq.Sets.Image.Im_inv	40	0.5.4.3	search with cache (only 1: intros x0 H'0; only 1: destruct 1; only 1: exists x; only 1: auto using Im_def with sets).	2.19194602966	560
Coq.Sets.Image.not_injective_elim	40
Coq.Sets.Image.cardinal_Im_intro	40
Coq.Sets.Image.In_Image_elim	40
Coq.Sets.Image.injective_preserves_cardinal	40
Coq.Sets.Image.cardinal_decreases	40
Coq.Sets.Image.Pigeonhole	40
Coq.Sets.Image.Pigeonhole_principle	40
Coq.Sets.Finite_sets_facts.finite_cardinal	40
Coq.Sets.Finite_sets_facts.cardinal_finite	40	3.2.5.4.9	search with cache (only 1: intros u H'2; only 1: intro H'0; only 1: elim H'0; only 1: auto with sets; only 1: auto with sets).	4.27029299736	2627
Coq.Sets.Finite_sets_facts.Add_preserves_Finite	40
Coq.Sets.Finite_sets_facts.Singleton_is_finite	40	1.44.97	search with cache (only 1: intro x; only 1: rewrite <- (Empty_set_zero' U x); only 1: auto with sets).	21.5178458691	70678
Coq.Sets.Finite_sets_facts.Union_preserves_Finite	40
Coq.Sets.Finite_sets_facts.Finite_downward_closed	40
Coq.Sets.Finite_sets_facts.Intersection_preserves_finite	40
Coq.Sets.Finite_sets_facts.cardinalO_empty	40
Coq.Sets.Finite_sets_facts.inh_card_gt_O	40
Coq.Sets.Finite_sets_facts.card_soustr_1	40
Coq.Sets.Finite_sets_facts.cardinal_is_functional	40
Coq.Sets.Finite_sets_facts.cardinal_Empty	40
Coq.Sets.Finite_sets_facts.cardinal_unicity	40
Coq.Sets.Finite_sets_facts.card_Add_gen	40
Coq.Sets.Finite_sets_facts.incl_st_card_lt	40
Coq.Sets.Finite_sets_facts.incl_card_le	40
Coq.Sets.Finite_sets_facts.G_aux	40
Coq.Sets.Finite_sets_facts.Generalized_induction_on_finite_sets	40
Coq.Sets.Powerset_Classical_facts.sincl_add_x	40
Coq.Sets.Powerset_Classical_facts.incl_soustr_in	40	0.6.5.0	search with cache (only 1: intros A x y H'; only 1: intro H'0; only 1: elim H'0; only 1: auto with sets).	3.43769788742	710
Coq.Sets.Powerset_Classical_facts.incl_soustr	40	0.0.0.0.4	search with cache (only 1: intros X Y I NI; only 1: red; only 1: intros x0 H'0; only 1: elim H'0; only 1: auto with sets).	1.69872903824	213
Coq.Sets.Powerset_Classical_facts.incl_soustr_add_l	40
Coq.Sets.Powerset_Classical_facts.incl_soustr_add_r	40
Coq.Sets.Powerset_Classical_facts.add_soustr_2	40
Coq.Sets.Powerset_Classical_facts.add_soustr_1	40
Coq.Sets.Powerset_Classical_facts.add_soustr_xy	40
Coq.Sets.Powerset_Classical_facts.incl_st_add_soustr	40
Coq.Sets.Powerset_Classical_facts.Sub_Add_new	40
Coq.Sets.Powerset_Classical_facts.Simplify_add	40
Coq.Sets.Powerset_Classical_facts.Included_Add	40
Coq.Sets.Powerset_Classical_facts.setcover_inv	40
Coq.Sets.Powerset_Classical_facts.Add_covers	40
Coq.Sets.Powerset_Classical_facts.covers_Add	40
Coq.Sets.Powerset_Classical_facts.covers_is_Add	40
Coq.Sets.Powerset_Classical_facts.Singleton_atomic	40
Coq.Sets.Powerset_Classical_facts.less_than_singleton	40
Coq.Sets.Classical_sets.not_included_empty_Inhabited	40
Coq.Sets.Classical_sets.not_empty_Inhabited	40
Coq.Sets.Classical_sets.Inhabited_Setminus	40
Coq.Sets.Classical_sets.Strict_super_set_contains_new_element	40
Coq.Sets.Classical_sets.Subtract_intro	40	3.0.0.0	search with cache (only 1: red; only 1: red; only 1: intros x YX; only 1: auto  7 using Inhabited_Setminus with sets).	0.160757064819	7
Coq.Sets.Classical_sets.Subtract_inv	40
Coq.Sets.Classical_sets.Included_Strict_Included	40
Coq.Sets.Classical_sets.Strict_Included_inv	40
Coq.Sets.Classical_sets.not_SIncl_empty	40	0.3.7.8	search with cache (only 1: intros x H'; only 1: red in H'; only 1: elim H'; only 1: auto with sets).	2.32074999809	1151
Coq.Sets.Classical_sets.Complement_Complement	40
Coq.Sets.Multiset.meq_refl	40	2.9.10	search with cache (only 1: intros; only 1: intros LT; only 1: auto).	0.684958934784	441
Coq.Sets.Multiset.meq_trans	40
Coq.Sets.Multiset.meq_sym	40	0.1.1.0.0	search with cache (only 1: destruct x; only 1: unfold meq; only 1: destruct y; only 1: intros; only 1: auto).	0.135162115097	7
Coq.Sets.Multiset.munion_empty_left	40	0.1.0.0	search with cache (only 1: destruct x; only 1: unfold meq; only 1: intros; only 1: auto).	0.182462930679	5
Coq.Sets.Multiset.munion_empty_right	40	0.2.2.0.0.0	search with cache (only 1: unfold meq; only 1: unfold munion; only 1: simpl; only 1: destruct x; only 1: intros; only 1: auto).	0.212620973587	13
Coq.Sets.Multiset.munion_comm	40
Coq.Sets.Multiset.munion_ass	40	0.0.0.0.0.0	search with cache (only 1: unfold meq; only 1: unfold munion; only 1: simpl; only 1: destruct x; only 1: destruct y; only 1: auto with arith).	0.307501077652	6
Coq.Sets.Multiset.meq_left	40	1.1.0.0.0.0	search with cache (only 1: unfold meq; only 1: unfold munion; only 1: unfold multiplicity; only 1: destruct z; only 1: destruct y; only 1: auto with arith).	0.170848846436	8
Coq.Sets.Multiset.meq_right	40	3.1.0.0.0.0	search with cache (only 1: unfold meq; only 1: unfold munion; only 1: unfold multiplicity; only 1: destruct z; only 1: destruct y; only 1: auto with arith).	0.361643075943	13
Coq.Sets.Multiset.munion_rotate	40
Coq.Sets.Multiset.meq_congr	40	3.1.0.0.0.0	search with cache (only 1: unfold meq; only 1: unfold munion; only 1: unfold multiplicity; only 1: destruct z; only 1: destruct y; only 1: auto with arith).	0.359499931335	13
Coq.Sets.Multiset.munion_perm_left	40
Coq.Sets.Multiset.multiset_twist1	40
Coq.Sets.Multiset.multiset_twist2	40
Coq.Sets.Multiset.treesort_twist1	40
Coq.Sets.Multiset.treesort_twist2	40
Coq.Sets.Multiset.meq_singleton	40
Coq.Sets.Powerset_facts.Empty_set_zero	40	71.8	search with cache (only 1: intro H; only 1: auto  6 with sets).	13.9930100441	17493
Coq.Sets.Powerset_facts.Empty_set_zero_right	40	0	search with cache (only 1: auto  6 with sets).	0.0484280586243	1
Coq.Sets.Powerset_facts.Empty_set_zero'	40	0.8	search with cache (only 1: unfold Add at 1; only 1: auto  6 with sets).	0.131665945053	26
Coq.Sets.Powerset_facts.less_than_empty	40	0	search with cache (only 1: auto with sets).	0.0200650691986	1
Coq.Sets.Powerset_facts.Union_commutative	40	0	search with cache (only 1: auto  6 with sets).	0.0212509632111	1
Coq.Sets.Powerset_facts.Union_associative	40
Coq.Sets.Powerset_facts.Union_idempotent	40	0	search with cache (only 1: auto  6 with sets).	0.0207669734955	1
Coq.Sets.Powerset_facts.Union_absorbs	40	0	search with cache (only 1: auto  7 with sets).	0.0237832069397	1
Coq.Sets.Powerset_facts.Couple_as_union	40
Coq.Sets.Powerset_facts.Triple_as_union	40
Coq.Sets.Powerset_facts.Triple_as_Couple	40	0.0.0.0.0.0.0.0.0.0.0.0.0.1	search with cache (only 1: intros x y; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x1 H'0; only 1: elim H'0; only 1: auto with sets; only 1: auto with sets; only 1: red; only 1: intros x1 H'0; only 1: elim H'0; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets).	2.68700098991	898
Coq.Sets.Powerset_facts.Triple_as_Couple_Singleton	40
Coq.Sets.Powerset_facts.Intersection_commutative	40
Coq.Sets.Powerset_facts.Distributivity	40
Coq.Sets.Powerset_facts.Distributivity_l	40
Coq.Sets.Powerset_facts.Distributivity'	40
Coq.Sets.Powerset_facts.Union_add	40	9.1.1	search with cache (only 1: unfold Add at 1; only 1: unfold Add at 1; only 1: auto  9 with sets).	4.43429398537	1062
Coq.Sets.Powerset_facts.Non_disjoint_union	40	0.0.0.1.1.0.1.1.0.0.0.2.1	search with cache (only 1: unfold Add; only 1: intros x y z; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x1 H'0; only 1: elim H'0; only 1: auto with sets; only 1: intros x2 H'1; only 1: elim H'1; only 1: auto with sets; only 1: red; only 1: auto with sets).	7.70824408531	3202
Coq.Sets.Powerset_facts.Non_disjoint_union'	40
Coq.Sets.Powerset_facts.singlx	40	0.1.1.2.2.1	search with cache (only 1: unfold Add at 1; only 1: intros x y H'; only 1: elim H'; only 1: intros x1 H'0; only 1: elim H'0; only 1: auto with sets).	1.23671603203	251
Coq.Sets.Powerset_facts.incl_add	40	0.0	search with cache (only 1: unfold Add; only 1: auto with sets).	0.0243721008301	2
Coq.Sets.Powerset_facts.incl_add_x	40
Coq.Sets.Powerset_facts.Add_commutative	40	8.0	search with cache (only 1: unfold Add; only 1: auto  9 with sets).	0.402405023575	48
Coq.Sets.Powerset_facts.Add_commutative'	40
Coq.Sets.Powerset_facts.Add_distributes	40
Coq.Sets.Powerset_facts.setcover_intro	40	0	search with cache (only 1: auto with sets).	0.0400860309601	1
Coq.Sets.Powerset_facts.Disjoint_Intersection	40
Coq.Sets.Powerset_facts.Intersection_Empty_set_l	40	1.1.0.0.0	search with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intuition; only 1: intuition).	0.114520072937	7
Coq.Sets.Powerset_facts.Intersection_Empty_set_r	40	0.0	search with cache (only 1: intros; only 1: auto with sets).	0.0631420612335	2
Coq.Sets.Powerset_facts.Seminus_Empty_set_l	40	0.1.0.1.0.1.0.0.0.5	search with cache (only 1: intros X H'; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x0 H'0; only 1: elim H'0; only 1: auto with sets; only 1: red; only 1: intros x0 H'0; only 1: elim H'0).	13.4125900269	4110
Coq.Sets.Powerset_facts.Seminus_Empty_set_r	40	0.0.0.0.1.0.0.0	search with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x H1; only 1: destruct H1; only 1: unfold In in *; only 1: assumption; only 1: intuition).	0.16422700882	9
Coq.Sets.Powerset_facts.Setminus_Union_l	40
Coq.Sets.Powerset_facts.Setminus_Union_r	40
Coq.Sets.Powerset_facts.Setminus_Disjoint_noop	40
Coq.Sets.Powerset_facts.Setminus_Included_empty	40	1.0.0.0.0.1.0.0.1.0	search with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x H1; only 1: inversion_clear H1; only 1: intuition; only 1: contradict H; only 1: intuition; only 1: intros x H1; only 1: inversion_clear H1).	1.80008101463	295
Coq.Sets.Powerset.Empty_set_minimal	40	11.28.10	search with cache (only 1: intro H'6; only 1: intros H'3 H'4; only 1: elim H'4).	15.5956399441	27453
Coq.Sets.Powerset.Power_set_Inhabited	40
Coq.Sets.Powerset.Inclusion_is_an_order	40	24	search with cache (only 1: auto  10 with sets).	1.50076699257	644
Coq.Sets.Powerset.Inclusion_is_transitive	40	4.0.0.0.0	search with cache (only 1: red; only 1: intro X; only 1: red; only 1: intros x H'; only 1: auto  6 with sets).	0.0973460674286	12
Coq.Sets.Powerset.Power_set_PO	40
Coq.Sets.Powerset.Strict_Rel_is_Strict_Included	40	0.6	search with cache (only 1: red; only 1: intuition).	0.0603420734406	8
Coq.Sets.Powerset.Strict_inclusion_is_transitive_with_inclusion	40
Coq.Sets.Powerset.Strict_inclusion_is_transitive_with_inclusion_left	40
Coq.Sets.Powerset.Strict_inclusion_is_transitive	40
Coq.Sets.Powerset.Empty_set_is_Bottom	40
Coq.Sets.Powerset.Union_minimal	40
Coq.Sets.Powerset.Intersection_maximal	40	0	search with cache (only 1: auto with sets).	0.0401880741119	1
Coq.Sets.Powerset.Union_increases_l	40	0.0.1	search with cache (only 1: red; only 1: intros x H'1; only 1: auto with sets).	0.0652740001678	4
Coq.Sets.Powerset.Union_increases_r	40	0	search with cache (only 1: auto with sets).	0.0401771068573	1
Coq.Sets.Powerset.Intersection_decreases_l	40	0.2.2.4.6	search with cache (only 1: intros H'1 H'2; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: auto with sets).	2.83042216301	1090
Coq.Sets.Powerset.Intersection_decreases_r	40	0.1.1.0.0	search with cache (only 1: intros a b; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: auto with sets).	0.0908389091492	7
Coq.Sets.Powerset.Union_is_Lub	40
Coq.Sets.Powerset.Intersection_is_Glb	40
Coq.Sets.Relations_3_facts.Rstar_imp_coherent	40	1.0.7.0.6.1.3.9	search with cache (only 1: intros x0 H'0; only 1: generalize Rstar_transitive; only 1: intro T1; only 1: red; only 1: red in T1; only 1: intros x1 y0 H'1; only 1: exists y0; only 1: auto with sets).	18.0736818314	13601
Coq.Sets.Relations_3_facts.coherent_symmetric	40
Coq.Sets.Relations_3_facts.Strong_confluence	40
Coq.Sets.Relations_3_facts.Strong_confluence_direct	40
Coq.Sets.Relations_3_facts.Noetherian_contains_Noetherian	40
Coq.Sets.Relations_3_facts.Newman	40
Coq.Sets.Finite_sets.cardinal_invert	40
Coq.Sets.Finite_sets.cardinal_elim	40	5.5.0	search with cache (only 1: induction 1; only 1: auto with sets; only 1: auto with sets).	0.607846021652	135
Coq.Sets.Relations_2_facts.Rstar_reflexive	40	0	search with cache (only 1: intuition).	0.0132219791412	1
Coq.Sets.Relations_2_facts.Rplus_contains_R	40	0	search with cache (only 1: intuition).	0.0384519100189	1
Coq.Sets.Relations_2_facts.Rstar_contains_R	40
Coq.Sets.Relations_2_facts.Rstar_contains_Rplus	40
Coq.Sets.Relations_2_facts.Rstar_transitive	40
Coq.Sets.Relations_2_facts.Rstar_cases	40
Coq.Sets.Relations_2_facts.Rstar_equiv_Rstar1	40
Coq.Sets.Relations_2_facts.Rsym_imp_Rstarsym	40
Coq.Sets.Relations_2_facts.Sstar_contains_Rstar	40
Coq.Sets.Relations_2_facts.star_monotone	40
Coq.Sets.Relations_2_facts.RstarRplus_RRstar	40
Coq.Sets.Relations_2_facts.Lemma1	40
Coq.Sets.Constructive_sets.Extension	40	3.1.5.3.1.5.11.12	search with cache (only 1: red; only 1: split; only 1: intros Hfst Hsnd; only 1: destruct H; only 1: trivial; only 1: intros Hfst Hsnd; only 1: destruct H; only 1: trivial).	24.7758841515	27777
Coq.Sets.Constructive_sets.Noone_in_empty	40	7.5.4.4	search with cache (only 1: red; only 1: intro A; only 1: intro H1; only 1: elim H1).	1.34173512459	1324
Coq.Sets.Constructive_sets.Included_Empty	40	1.0.0	search with cache (only 1: red; only 1: red; only 1: destruct 1).	0.0599138736725	4
Coq.Sets.Constructive_sets.Add_intro1	40	0.17.5	search with cache (only 1: intros B C H'; only 1: left; only 1: auto with sets).	7.54749488831	6083
Coq.Sets.Constructive_sets.Add_intro2	40	0.0	search with cache (only 1: unfold Add at 1; only 1: auto with sets).	0.0567619800568	2
Coq.Sets.Constructive_sets.Inhabited_add	40	0.42.4.4.0	search with cache (only 1: unfold Add at 1; only 1: intro; only 1: intro; only 1: exists x; only 1: auto with sets).	24.1930439472	48757
Coq.Sets.Constructive_sets.Inhabited_not_empty	40
Coq.Sets.Constructive_sets.Add_not_Empty	40
Coq.Sets.Constructive_sets.not_Empty_Add	40	1.8.14.2.2.0	search with cache (only 1: intros A x; only 1: red; only 1: intro H'1; only 1: elim (Noone_in_empty x); only 1: rewrite H'1; only 1: auto using Add_intro2 with sets).	10.3242518902	15296
Coq.Sets.Constructive_sets.Singleton_inv	40	2.4	search with cache (only 1: destruct 1; only 1: auto with sets).	0.0881249904633	31
Coq.Sets.Constructive_sets.Singleton_intro	40	1.0.0	search with cache (only 1: intros x y H'; only 1: elim H'; only 1: trivial with sets).	0.0664041042328	4
Coq.Sets.Constructive_sets.Union_inv	40	1.1.12	search with cache (only 1: destruct 1; only 1: auto with sets; only 1: auto with sets).	1.44174599648	585
Coq.Sets.Constructive_sets.Add_inv	40
Coq.Sets.Constructive_sets.Intersection_inv	40	0.1.0	search with cache (only 1: intros B C x H'; only 1: elim H'; only 1: auto with sets).	0.0545909404755	4
Coq.Sets.Constructive_sets.Couple_inv	40	2.2.4.1.0.0	search with cache (only 1: intros A x y H'; only 1: induction H'; only 1: left; only 1: trivial with sets; only 1: right; only 1: trivial with sets).	1.51580905914	988
Coq.Sets.Constructive_sets.Setminus_intro	40	0	search with cache (only 1: auto with sets).	0.0401079654694	1
Coq.Sets.Constructive_sets.Strict_Included_intro	40	3.0.0.0	search with cache (only 1: intro; only 1: intro; only 1: red; only 1: auto with sets).	0.0846688747406	7
Coq.Sets.Constructive_sets.Strict_Included_strict	40	0.6.5	search with cache (only 1: intros X H'; only 1: elim H'; only 1: auto with sets).	0.750766992569	447
Coq.Sets.Partial_Order.Strict_Rel_Transitive_with_Rel	40
Coq.Sets.Partial_Order.Strict_Rel_Transitive_with_Rel_left	40
Coq.Sets.Partial_Order.Strict_Rel_Transitive	40
Coq.Sets.Relations_1_facts.Rsym_imp_notRsym	40	4.0.1.6.6.27	search with cache (only 1: intro x; only 1: red; only 1: red; only 1: unfold not; only 1: intros h1 h2; only 1: auto).	2.65867400169	4988
Coq.Sets.Relations_1_facts.Equiv_from_preorder	40
Coq.Sets.Relations_1_facts.Equiv_from_order	40	8.1.0	search with cache (only 1: intros U R H'; only 1: elim H'; only 1: auto  10 with sets).	2.0860350132	340
Coq.Sets.Relations_1_facts.contains_is_preorder	40	18	search with cache (only 1: auto  10 with sets).	0.386188030243	248
Coq.Sets.Relations_1_facts.same_relation_is_equivalence	40
Coq.Sets.Relations_1_facts.cong_reflexive_same_relation	40	0.4.9.0	search with cache (only 1: unfold same_relation at 1; only 1: intros x y z h; only 1: elim h; only 1: auto  10 with sets).	3.41579294205	1538
Coq.Sets.Relations_1_facts.cong_symmetric_same_relation	40	0.0.0	search with cache (only 1: unfold Symmetric, Complement; only 1: unfold same_relation at 1; only 1: intuition).	0.0676300525665	3
Coq.Sets.Relations_1_facts.cong_antisymmetric_same_relation	40	0.1	search with cache (only 1: unfold same_relation at 1; only 1: intuition).	0.102411031723	20
Coq.Sets.Relations_1_facts.cong_transitive_same_relation	40
Coq.Sets.Uniset.leb_refl	40	0	search with cache (only 1: destr_bool).	0.0153558254242	1
Coq.Sets.Uniset.incl_left	40	2.5.7.12	search with cache (only 1: intros; only 1: intro z; only 1: destruct (H z); only 1: auto).	3.60485506058	2093
Coq.Sets.Uniset.incl_right	40	1.0.0.0	search with cache (only 1: unfold incl; only 1: intros s1 s2 E a; only 1: elim (E a); only 1: auto).	0.0795950889587	5
Coq.Sets.Uniset.seq_refl	40	3	search with cache (only 1: auto).	0.0353538990021	4
Coq.Sets.Uniset.seq_trans	40	0.1.2.13.0.0	search with cache (only 1: destruct x; only 1: unfold seq; only 1: intro H; only 1: intros s1 s2 E a; only 1: elim (E a); only 1: auto).	2.88935017586	2335
Coq.Sets.Uniset.seq_sym	40	0.0.0.1.1.0.0	search with cache (only 1: destruct x; only 1: unfold seq; only 1: destruct y; only 1: simpl; only 1: intros; only 1: rewrite H; only 1: auto).	0.119049072266	9
Coq.Sets.Uniset.union_empty_left	40	1.0.0	search with cache (only 1: destruct x; only 1: unfold seq; only 1: auto).	0.0389320850372	4
Coq.Sets.Uniset.union_empty_right	40	4.0.0.11.0.0.0.0.2	search with cache (only 1: destruct x; only 1: unfold seq; only 1: unfold union; only 1: simpl; only 1: intros; only 1: destruct b; only 1: auto; only 1: simpl; only 1: auto).	19.4778270721	16499
Coq.Sets.Uniset.union_comm	40
Coq.Sets.Uniset.union_ass	40	0.0.0.1.0.0.0	search with cache (only 1: unfold seq; only 1: unfold charac; only 1: unfold union; only 1: simpl; only 1: destruct x; only 1: destruct y; only 1: auto with bool).	0.188207864761	19
Coq.Sets.Uniset.seq_left	40	0.0.1.0.1.1.0.1.0	search with cache (only 1: unfold seq; only 1: unfold union; only 1: unfold charac; only 1: destruct x; only 1: destruct y; only 1: destruct z; only 1: intros; only 1: rewrite H; only 1: auto).	10.7968258858	1749
Coq.Sets.Uniset.seq_right	40	1.0.2.0.0.1.0	search with cache (only 1: unfold seq; only 1: unfold union; only 1: unfold charac; only 1: destruct z; only 1: intros; only 1: elim H; only 1: auto).	3.19098210335	446
Coq.Sets.Uniset.union_rotate	40
Coq.Sets.Uniset.seq_congr	40
Coq.Sets.Uniset.union_perm_left	40
Coq.Sets.Uniset.uniset_twist1	40
Coq.Sets.Uniset.uniset_twist2	40
Coq.Sets.Uniset.treesort_twist1	40
Coq.Sets.Uniset.treesort_twist2	40
Coq.Sets.Permut.cong_congr	40
Coq.Sets.Permut.comm_right	40	3.2.2	search with cache (only 1: intros; only 1: apply cong_right; only 1: trivial).	0.19877409935	34
Coq.Sets.Permut.comm_left	40	3.2.2	search with cache (only 1: intros; only 1: apply cong_left; only 1: apply op_comm).	0.131299972534	24
Coq.Sets.Permut.perm_right	40
Coq.Sets.Permut.perm_left	40
Coq.Sets.Permut.op_rotate	40
Coq.Sets.Permut.twist	40
Coq.Sorting.Heap.leA_Tree_Leaf	40	13.9.7	search with cache (only 1: intro l; only 1: red; only 1: trivial).	1.20895695686	865
Coq.Sorting.Heap.leA_Tree_Node	40	0.0	search with cache (only 1: simpl; only 1: auto with datatypes).	0.0369851589203	2
Coq.Sorting.Heap.invert_heap	40	1.13.12	search with cache (only 1: intros l1 l2 e; only 1: inversion 1; only 1: auto with datatypes).	1.85516881943	996
Coq.Sorting.Heap.is_heap_rect	40
Coq.Sorting.Heap.is_heap_rec	40
Coq.Sorting.Heap.low_trans	40
Coq.Sorting.Heap.Equivalence_instance_0	40
Coq.Sorting.Heap.Proper_instance_0	40	1.0.0.4	search with cache (only 1: intros x x' Hxx' y y' Hyy'; only 1: red; only 1: simpl in *; only 1: auto).	0.395353794098	42
Coq.Sorting.Heap.merge	40
Coq.Sorting.Heap.insert	40	1.26	search with cache (only 1: fix merge0 1; only 1: auto with datatypes).	22.4800999165	8671
Coq.Sorting.Heap.list_to_heap	40	8.13	search with cache (only 1: fix merge0 1; only 1: auto with datatypes).	0.605700016022	358
Coq.Sorting.Heap.heap_to_list	40	1.54	search with cache (only 1: fix merge0 1; only 1: auto with datatypes).	19.7228498459	25162
Coq.Sorting.Heap.treesort	40	10.14	search with cache (only 1: fix merge0 1; only 1: auto with datatypes).	1.08312392235	472
Coq.Sorting.PermutEq.multiplicity_In	40
Coq.Sorting.PermutEq.multiplicity_In_O	40
Coq.Sorting.PermutEq.multiplicity_In_S	40	0.0.0.0.0	search with cache (only 1: intros; only 1: eapply In_InA, multiplicity_InA in H; only 1: eauto with typeclass_instances; only 1: eauto with typeclass_instances; only 1: eauto with typeclass_instances).	0.290050983429	5
Coq.Sorting.PermutEq.multiplicity_NoDup	40
Coq.Sorting.PermutEq.NoDup_permut	40
Coq.Sorting.PermutEq.permut_In_In	40
Coq.Sorting.PermutEq.permut_cons_In	40
Coq.Sorting.PermutEq.permut_nil	40
Coq.Sorting.PermutEq.permutation_Permutation	40
Coq.Sorting.PermutEq.permut_length_1	40	0.44	search with cache (only 1: apply permut_length_1; only 1: auto with typeclass_instances).	7.30259799957	7167
Coq.Sorting.PermutEq.permut_length_2	40
Coq.Sorting.PermutEq.permut_length	40
Coq.Sorting.PermutEq.permutation_map	40
Coq.Sorting.PermutSetoid.list_contents_app	40
Coq.Sorting.PermutSetoid.permut_refl	40	11	search with cache (only 1: congruence).	0.458925008774	89
Coq.Sorting.PermutSetoid.permut_sym	40	1.0	search with cache (only 1: unfold permutation; only 1: auto with datatypes).	0.175107955933	3
Coq.Sorting.PermutSetoid.permut_trans	40	12.0.0	search with cache (only 1: unfold permutation, meq; only 1: intros; only 1: congruence).	4.83447384834	1368
Coq.Sorting.PermutSetoid.permut_cons_eq	40
Coq.Sorting.PermutSetoid.permut_cons	40	0.0.0	search with cache (only 1: unfold permutation; only 1: simpl; only 1: auto with datatypes).	0.11211514473	3
Coq.Sorting.PermutSetoid.permut_app	40
Coq.Sorting.PermutSetoid.permut_add_inside_eq	40
Coq.Sorting.PermutSetoid.permut_add_inside	40
Coq.Sorting.PermutSetoid.permut_add_cons_inside_eq	40
Coq.Sorting.PermutSetoid.permut_add_cons_inside	40
Coq.Sorting.PermutSetoid.permut_middle	40
Coq.Sorting.PermutSetoid.permut_sym_app	40	2.0.4.0.1	search with cache (only 1: unfold permutation, meq in *; only 1: intros; only 1: repeat rewrite list_contents_app in *; only 1: simpl in *; only 1: auto with arith).	1.65275192261	130
Coq.Sorting.PermutSetoid.permut_rev	40
Coq.Sorting.PermutSetoid.permut_conv_inv	40
Coq.Sorting.PermutSetoid.permut_app_inv1	40
Coq.Sorting.PermutSetoid.if_eqA_then	40	12.0.24.5	search with cache (only 1: intros; only 1: destruct (eqA_dec a a'); only 1: trivial; only 1: congruence).	7.19268012047	5406
Coq.Sorting.PermutSetoid.permut_app_inv2	40	0.1.0.0.0.0.1.0.0.1	search with cache (only 1: intros l l1 l2; only 1: unfold permutation, meq; only 1: intros H a; only 1: generalize (H a); only 1: clear H; only 1: do 2 rewrite list_contents_app; only 1: simpl; only 1: intros; only 1: apply plus_reg_l with (multiplicity (list_contents l) a); only 1: trivial).	6.82898807526	785
Coq.Sorting.PermutSetoid.permut_remove_hd_eq	40
Coq.Sorting.PermutSetoid.permut_remove_hd	40
Coq.Sorting.PermutSetoid.if_eqA_else	40	1.3.34.0	search with cache (only 1: intros; only 1: destruct (eqA_dec a a'); only 1: congruence; only 1: auto).	17.3500499725	10277
Coq.Sorting.PermutSetoid.if_eqA_refl	40	10.0.2.0.0	search with cache (only 1: intros; only 1: destruct eqA_dec as [_| NEQ]; only 1: auto; only 1: contradict NEQ; only 1: reflexivity).	2.26607894897	689
Coq.Sorting.PermutSetoid.if_eqA	40
Coq.Sorting.PermutSetoid.if_eqA_rewrite_l	40
Coq.Sorting.PermutSetoid.if_eqA_rewrite_r	40
Coq.Sorting.PermutSetoid.multiplicity_eqA	40
Coq.Sorting.PermutSetoid.multiplicity_InA	40
Coq.Sorting.PermutSetoid.multiplicity_InA_O	40
Coq.Sorting.PermutSetoid.multiplicity_InA_S	40	0.0.7	search with cache (only 1: intros l a; only 1: rewrite multiplicity_InA; only 1: auto with *).	0.749134063721	30
Coq.Sorting.PermutSetoid.multiplicity_NoDupA	40
Coq.Sorting.PermutSetoid.permut_InA_InA	40
Coq.Sorting.PermutSetoid.permut_cons_InA	40
Coq.Sorting.PermutSetoid.permut_nil	40
Coq.Sorting.PermutSetoid.permut_length_1	40
Coq.Sorting.PermutSetoid.permut_length_2	40
Coq.Sorting.PermutSetoid.permut_length	40
Coq.Sorting.PermutSetoid.NoDupA_equivlistA_permut	40
Coq.Sorting.PermutSetoid.permut_map	40
Coq.Sorting.PermutSetoid.Permutation_impl_permutation	40
Coq.Sorting.PermutSetoid.permut_eqA	40	1.1.1.3.0.0	search with cache (only 1: induction 1; only 1: apply permut_refl; only 1: apply permut_cons_eq; only 1: trivial; only 1: trivial; only 1: trivial).	0.646411895752	89
Coq.Sorting.PermutSetoid.permutation_Permutation	40
Coq.Sorting.Mergesort.Sort.Sorted_merge	40
Coq.Sorting.Mergesort.Sort.Permuted_merge	40
Coq.Sorting.Mergesort.Sort.Sorted_merge_list_to_stack	40
Coq.Sorting.Mergesort.Sort.Permuted_merge_list_to_stack	40
Coq.Sorting.Mergesort.Sort.Sorted_merge_stack	40	1.1.1.3.0.3.3.2.0	search with cache (only 1: induction stack as [| [| ]]; only 1: simpl; only 1: constructor; only 1: intros; only 1: destruct H; only 1: apply Sorted_merge; only 1: auto; only 1: auto; only 1: auto).	8.66252613068	3167
Coq.Sorting.Mergesort.Sort.Permuted_merge_stack	40
Coq.Sorting.Mergesort.Sort.Sorted_iter_merge	40
Coq.Sorting.Mergesort.Sort.Permuted_iter_merge	40
Coq.Sorting.Mergesort.Sort.Sorted_sort	40
Coq.Sorting.Mergesort.Sort.LocallySorted_sort	40
Coq.Sorting.Mergesort.Sort.Permuted_sort	40
Coq.Sorting.Mergesort.Sort.StronglySorted_sort	40
Coq.Sorting.Mergesort.NatOrder.leb_total	40
Coq.Sorting.Permutation.Permutation_nil	40
Coq.Sorting.Permutation.Permutation_nil_cons	40
Coq.Sorting.Permutation.Permutation_refl	40
Coq.Sorting.Permutation.Permutation_sym	40
Coq.Sorting.Permutation.Permutation_trans	40	2.0	search with cache (only 1: intros l l' Hperm; only 1: apply perm_trans with (l' := l')).	0.0256831645966	4
Coq.Sorting.Permutation.Permutation_cons	40	0.2.16.4	search with cache (only 1: intros l x HF; only 1: induction HF; only 1: constructor; only 1: auto).	1.03904795647	566
Coq.Sorting.Permutation.Permutation_in	40
Coq.Sorting.Permutation.Permutation_in'	40
Coq.Sorting.Permutation.Permutation_app_tail	40
Coq.Sorting.Permutation.Permutation_app_head	40	0.0.0.0.0.11	search with cache (only 1: induction l; only 1: simpl; only 1: intros; only 1: auto; only 1: simpl; only 1: auto).	3.74490499496	682
Coq.Sorting.Permutation.Permutation_app	40
Coq.Sorting.Permutation.Permutation_app'	40
Coq.Sorting.Permutation.Permutation_add_inside	40
Coq.Sorting.Permutation.Permutation_cons_append	40
Coq.Sorting.Permutation.Permutation_app_comm	40
Coq.Sorting.Permutation.Permutation_cons_app	40
Coq.Sorting.Permutation.Permutation_Add	40
Coq.Sorting.Permutation.Permutation_middle	40	0.0.6	search with cache (only 1: intros; only 1: rewrite app_comm_cons, Permutation_cons_append; only 1: now rewrite <- app_assoc).	0.0954971313477	14
Coq.Sorting.Permutation.Permutation_rev	40	1.0.8.2.11	search with cache (only 1: induction l as [| x l]; only 1: constructor; only 1: simpl; only 1: rewrite <- IHl; only 1: auto).	9.30294799805	1474
Coq.Sorting.Permutation.Permutation_rev'	40
Coq.Sorting.Permutation.Permutation_length	40
Coq.Sorting.Permutation.Permutation_length'	40	0.0.0.0.0.3.2.0.0	search with cache (only 1: repeat red; only 1: intros l l' Hperm; only 1: induction Hperm; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: now transitivity (length l')).	1.50179004669	362
Coq.Sorting.Permutation.Permutation_ind_bis	40
Coq.Sorting.Permutation.Permutation_nil_app_cons	40
Coq.Sorting.Permutation.Permutation_Add_inv	40
Coq.Sorting.Permutation.Permutation_app_inv	40
Coq.Sorting.Permutation.Permutation_cons_inv	40
Coq.Sorting.Permutation.Permutation_cons_app_inv	40	0.4.0.4.3	search with cache (only 1: intros; only 1: eapply Permutation_Add_inv; only 1: eauto using Add_app; only 1: eauto using Add_head; only 1: eauto using Add_app).	17.9612929821	178
Coq.Sorting.Permutation.Permutation_app_inv_l	40
Coq.Sorting.Permutation.Permutation_app_inv_r	40
Coq.Sorting.Permutation.Permutation_length_1_inv	40
Coq.Sorting.Permutation.Permutation_length_1	40
Coq.Sorting.Permutation.Permutation_length_2_inv	40
Coq.Sorting.Permutation.Permutation_length_2	40
Coq.Sorting.Permutation.NoDup_Permutation	40
Coq.Sorting.Permutation.NoDup_Permutation_bis	40
Coq.Sorting.Permutation.Permutation_NoDup	40
Coq.Sorting.Permutation.Permutation_NoDup'	40
Coq.Sorting.Permutation.Permutation_map	40
Coq.Sorting.Permutation.Permutation_map'	40	0.0.0.0.0.0.0.0.0	search with cache (only 1: repeat red; only 1: induction 1; only 1: simpl; only 1: eauto; only 1: simpl; only 1: eauto; only 1: simpl; only 1: eauto; only 1: eauto).	0.294531822205	9
Coq.Sorting.Permutation.nat_bijection_Permutation	40
Coq.Sorting.Permutation.adapt_injective	40
Coq.Sorting.Permutation.adapt_ok	40
Coq.Sorting.Permutation.Permutation_nth_error	40
Coq.Sorting.Permutation.Permutation_nth_error_bis	40
Coq.Sorting.Permutation.Permutation_nth	40
Coq.Sorting.Sorted.HdRel_inv	40	0.32	search with cache (only 1: inversion 1; only 1: trivial).	6.64478588104	5961
Coq.Sorting.Sorted.Sorted_inv	40	0.0	search with cache (only 1: inversion 1; only 1: auto).	0.104905843735	2
Coq.Sorting.Sorted.Sorted_rect	40
Coq.Sorting.Sorted.Sorted_LocallySorted_iff	40
Coq.Sorting.Sorted.StronglySorted_inv	40	0.13	search with cache (only 1: inversion 1; only 1: auto).	1.67681193352	274
Coq.Sorting.Sorted.StronglySorted_rect	40
Coq.Sorting.Sorted.StronglySorted_rec	40	0.0.0	search with cache (only 1: induction l; only 1: firstorder using StronglySorted_inv; only 1: firstorder using StronglySorted_inv).	0.122930049896	3
Coq.Sorting.Sorted.StronglySorted_Sorted	40
Coq.Sorting.Sorted.Sorted_extends	40
Coq.Sorting.Sorted.Sorted_StronglySorted	40
Coq.Strings.BinaryString.Raw.to_N_of_pos	40	13	search with cache (only 1: now subst).	0.0673558712006	60
Coq.Strings.BinaryString.to_N_of_N	40
Coq.Strings.BinaryString.Z_of_of_Z	40
Coq.Strings.BinaryString.to_nat_of_nat	40
Coq.Strings.BinaryString.to_pos_of_pos	40
Coq.Strings.HexString.Raw.to_N_of_pos	40	13	search with cache (only 1: now subst).	0.167328119278	60
Coq.Strings.HexString.to_N_of_N	40
Coq.Strings.HexString.to_Z_of_Z	40
Coq.Strings.HexString.to_nat_of_nat	40
Coq.Strings.HexString.to_pos_of_pos	40
Coq.Strings.OctalString.Raw.to_N_of_pos	40	13	search with cache (only 1: now subst).	0.123328924179	60
Coq.Strings.OctalString.to_N_of_N	40
Coq.Strings.OctalString.to_Z_of_Z	40
Coq.Strings.OctalString.to_nat_of_nat	40
Coq.Strings.OctalString.to_pos_of_pos	40
Coq.Strings.String.string_dec	40
Coq.Strings.String.eqb_spec	40
Coq.Strings.String.eqb_refl	40
Coq.Strings.String.eqb_sym	40	0	search with cache (only 1: t_eqb).	0.0511860847473	1
Coq.Strings.String.eqb_eq	40	0	search with cache (only 1: t_eqb).	0.0509979724884	1
Coq.Strings.String.eqb_neq	40	0	search with cache (only 1: t_eqb).	0.0626440048218	1
Coq.Strings.String.eqb_compat	40	0	search with cache (only 1: t_eqb).	0.0572340488434	1
Coq.Strings.String.get_correct	40
Coq.Strings.String.append_correct1	40
Coq.Strings.String.append_correct2	40
Coq.Strings.String.substring_correct1	40
Coq.Strings.String.substring_correct2	40
Coq.Strings.String.prefix_correct	40
Coq.Strings.String.index_correct1	40
Coq.Strings.String.index_correct2	40
Coq.Strings.String.index_correct3	40
Coq.Strings.String.index_correct4	40
Coq.Strings.String.string_of_list_ascii_of_string	40
Coq.Strings.String.list_ascii_of_string_of_list_ascii	40	0.1.3.2	search with cache (only 1: induction s as [| ? ? IHs]; only 1: reflexivity; only 1: cbn; only 1: apply f_equal, IHs).	0.130133867264	16
Coq.Strings.String.string_of_list_byte_of_string	40
Coq.Strings.String.list_byte_of_string_of_list_byte	40
Coq.Strings.Ascii.ascii_dec	40
Coq.Strings.Ascii.eqb_spec	40
Coq.Strings.Ascii.eqb_refl	40
Coq.Strings.Ascii.eqb_sym	40	0	search with cache (only 1: t_eqb).	0.0407388210297	1
Coq.Strings.Ascii.eqb_eq	40	0	search with cache (only 1: t_eqb).	0.0496199131012	1
Coq.Strings.Ascii.eqb_neq	40	0	search with cache (only 1: t_eqb).	0.0367381572723	1
Coq.Strings.Ascii.eqb_compat	40	0	search with cache (only 1: t_eqb).	0.0338439941406	1
Coq.Strings.Ascii.ascii_N_embedding	40
Coq.Strings.Ascii.N_ascii_embedding	40
Coq.Strings.Ascii.N_ascii_bounded	40
Coq.Strings.Ascii.ascii_nat_embedding	40
Coq.Strings.Ascii.nat_ascii_embedding	40
Coq.Strings.Ascii.nat_ascii_bounded	40
Coq.Strings.Ascii.ascii_of_byte_of_ascii	40
Coq.Strings.Ascii.byte_of_ascii_of_byte	40
Coq.Strings.Ascii.ascii_of_byte_via_N	40
Coq.Strings.Ascii.ascii_of_byte_via_nat	40
Coq.Strings.Ascii.byte_of_ascii_via_N	40
Coq.Strings.Ascii.byte_of_ascii_via_nat	40
Coq.Strings.Byte.byte_dec_lb	40
Coq.Strings.Byte.byte_dec_bl	40
Coq.Strings.Byte.eqb_false	40
Coq.Strings.Byte.of_to_nat	40
Coq.Strings.Byte.to_of_nat	40
Coq.Strings.Byte.to_of_nat_iff	40
Coq.Strings.Byte.to_of_nat_option_map	40
Coq.Strings.Byte.to_nat_bounded	40
Coq.Strings.Byte.of_nat_None_iff	40
Coq.Strings.Byte.of_to_N	40
Coq.Strings.Byte.to_of_N	40
Coq.Strings.Byte.to_of_N_iff	40
Coq.Strings.Byte.to_of_N_option_map	40	0.1	search with cache (only 1: cbv[of_N]; only 1: repeat match goal with | |- context [ match ?x with | _ => _ end ] => is_var x; destruct x | _ => intro | _ => reflexivity | _ => progress subst | H:Some ?a = Some ?b |- _ => assert (a = b) by refine match H with | eq_refl => eq_refl end; clear H | H:None = Some _ |- _ => solve [ inversion H ] end).	0.954730987549	3
Coq.Strings.Byte.to_N_bounded	40
Coq.Strings.Byte.of_N_None_iff	40
Coq.Strings.Byte.to_N_via_nat	40
Coq.Strings.Byte.to_nat_via_N	40
Coq.Strings.Byte.of_N_via_nat	40
Coq.Strings.Byte.of_nat_via_N	40
Coq.Structures.DecidableTypeEx.PairDecidableType.eq_refl	40	8.0	search with cache (only 1: intros EQ; only 1: now subst).	0.029913187027	10
Coq.Structures.DecidableTypeEx.PairDecidableType.eq_sym	40	1.2.0.13.2	search with cache (only 1: intros EQ; only 1: intro H; only 1: intros (x1, x2); only 1: red; only 1: auto).	5.43080306053	6189
Coq.Structures.DecidableTypeEx.PairDecidableType.eq_trans	40
Coq.Structures.DecidableTypeEx.PairDecidableType.eq_dec	40
Coq.Structures.DecidableTypeEx.PairUsualDecidableType.eq_dec	40
Coq.Structures.OrderedTypeEx.Nat_as_OT.lt_trans	40
Coq.Structures.OrderedTypeEx.Nat_as_OT.lt_not_eq	40
Coq.Structures.OrderedTypeEx.Nat_as_OT.compare	40
Coq.Structures.OrderedTypeEx.Z_as_OT.lt_trans	40	8.33	search with cache (only 1: intros ? ? LT ->; only 1: auto).	3.64816617966	2829
Coq.Structures.OrderedTypeEx.Z_as_OT.lt_not_eq	40
Coq.Structures.OrderedTypeEx.Z_as_OT.compare	40
Coq.Structures.OrderedTypeEx.Positive_as_OT.lt_not_eq	40
Coq.Structures.OrderedTypeEx.Positive_as_OT.compare	40
Coq.Structures.OrderedTypeEx.N_as_OT.compare	40
Coq.Structures.OrderedTypeEx.PairOrderedType.eq_refl	40	15.6	search with cache (only 1: intro H; only 1: now subst).	0.504414081573	451
Coq.Structures.OrderedTypeEx.PairOrderedType.eq_sym	40	1.2.3.3	search with cache (only 1: intros x y H; only 1: destruct H; only 1: red; only 1: auto with ordered_type).	0.780992031097	362
Coq.Structures.OrderedTypeEx.PairOrderedType.eq_trans	40
Coq.Structures.OrderedTypeEx.PairOrderedType.lt_trans	40
Coq.Structures.OrderedTypeEx.PairOrderedType.lt_not_eq	40	1.1.1.3	search with cache (only 1: unfold eq, lt; only 1: intuition; only 1: MO1.order; only 1: MO2.order).	1.08454298973	146
Coq.Structures.OrderedTypeEx.PairOrderedType.compare	40
Coq.Structures.OrderedTypeEx.PairOrderedType.eq_dec	40
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.bits_lt_trans	40
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.lt_trans	40
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.bits_lt_antirefl	40	2.2.2.3	search with cache (only 1: induction x; only 1: intuition; only 1: intuition; only 1: eauto).	0.564550161362	137
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.lt_not_eq	40
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.compare	40
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.eq_dec	40
Coq.Structures.OrderedTypeEx.String_as_OT.nat_of_ascii_inverse	40
Coq.Structures.OrderedTypeEx.String_as_OT.lts_tail_unique	40
Coq.Structures.OrderedTypeEx.String_as_OT.lt_trans	40
Coq.Structures.OrderedTypeEx.String_as_OT.lt_not_eq	40
Coq.Structures.OrderedTypeEx.String_as_OT.compare	40
Coq.Structures.OrdersEx.PairOrderedType.lt_strorder	40
Coq.Structures.OrdersEx.PairOrderedType.lt_compat	40
Coq.Structures.OrdersEx.PairOrderedType.compare_spec	40
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.bits_lt_antirefl	40
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.bits_lt_trans	40
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.lt_compat	40	1	search with cache (only 1: solve_proper).	0.0963709354401	2
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.lt_strorder	40
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.compare_spec	40
Coq.Structures.OrdersLists.OrderedTypeLists.In_eq	40	0.1.0	search with cache (only 1: intros; only 1: subst; only 1: tauto).	0.239031076431	4
Coq.Structures.OrdersLists.OrderedTypeLists.ListIn_In	40
Coq.Structures.OrdersLists.OrderedTypeLists.Inf_lt	40	9.0.0.1.5	search with cache (only 1: destruct l; only 1: constructor; only 1: constructor; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: now rewrite H).	23.7365219593	3775
Coq.Structures.OrdersLists.OrderedTypeLists.Inf_eq	40	3.1	search with cache (only 1: intros; only 1: now rewrite H).	0.263563156128	6
Coq.Structures.OrdersLists.OrderedTypeLists.Sort_Inf_In	40
Coq.Structures.OrdersLists.OrderedTypeLists.ListIn_Inf	40	1.2.3.6.4	search with cache (only 1: simple induction l; only 1: auto; only 1: simpl; only 1: intros; only 1: auto).	2.19544696808	800
Coq.Structures.OrdersLists.OrderedTypeLists.In_Inf	40
Coq.Structures.OrdersLists.OrderedTypeLists.Inf_alt	40
Coq.Structures.OrdersLists.OrderedTypeLists.Sort_NoDup	40
Coq.Structures.OrdersLists.KeyOrderedType.ltk_compat	40	14	search with cache (only 1: eauto with *).	1.25588583946	273
Coq.Structures.OrdersLists.KeyOrderedType.ltk_compat'	40
Coq.Structures.OrdersLists.KeyOrderedType.pair_compat	40	11	search with cache (only 1: firstorder).	0.455363988876	75
Coq.Structures.OrdersLists.KeyOrderedType.ltk_not_eqk	40
Coq.Structures.OrdersLists.KeyOrderedType.ltk_not_eqke	40	1.0.0	search with cache (only 1: intros LT EQ; only 1: rewrite EQ in LT; only 1: elim (StrictOrder_Irreflexive _ LT)).	0.105962991714	4
Coq.Structures.OrdersLists.KeyOrderedType.Inf_eq	40
Coq.Structures.OrdersLists.KeyOrderedType.Inf_lt	40
Coq.Structures.OrdersLists.KeyOrderedType.Sort_Inf_In	40
Coq.Structures.OrdersLists.KeyOrderedType.Sort_Inf_NotIn	40
Coq.Structures.OrdersLists.KeyOrderedType.Sort_NoDupA	40
Coq.Structures.OrdersLists.KeyOrderedType.Sort_In_cons_1	40
Coq.Structures.OrdersLists.KeyOrderedType.Sort_In_cons_2	40
Coq.Structures.OrdersLists.KeyOrderedType.Sort_In_cons_3	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_eqk	40	0	search with cache (only 1: firstorder).	0.309598207474	1
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_def	40	0	search with cache (only 1: firstorder).	0.321041107178	1
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_def'	40	0	search with cache (only 1: reflexivity).	0.0568721294403	1
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_1	40	1	search with cache (only 1: firstorder).	0.0571520328522	2
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_2	40	1	search with cache (only 1: now destruct 1).	0.0460538864136	2
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqk_def	40	0	search with cache (only 1: reflexivity).	0.0527429580688	1
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqk_def'	40	0	search with cache (only 1: reflexivity).	0.0613329410553	1
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqk_1	40	2	search with cache (only 1: firstorder).	0.0651500225067	3
Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqke_eqk	40	1.2	search with cache (only 1: do 2 rewrite InA_alt; only 1: firstorder).	0.432178974152	21
Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqk_eqke	40	0.0.0	search with cache (only 1: induction 1; only 1: firstorder; only 1: firstorder).	0.110493183136	3
Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqk	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_alt	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_alt'	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_alt2	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_nil	40	1.2.0	search with cache (only 1: rewrite In_alt; only 1: firstorder; only 1: now compute).	0.333187818527	28
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_cons	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.MapsTo_compat	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_compat	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.MapsTo_eq	40	30	search with cache (only 1: now intros <-).	11.4143939018	4418
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_eq	40	3	search with cache (only 1: now intros <-).	0.345543146133	39
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_inv	40	0.0	search with cache (only 1: rewrite !In_alt2, Exists_cons; only 1: intuition).	0.131035804749	2
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_inv_2	40	1.6.42.5	search with cache (only 1: intuition; only 1: invlist InA; only 1: intuition; only 1: intuition).	26.9976568222	14535
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_inv_3	40
Coq.Structures.EqualitiesFacts.PairDecidableType.eq_dec	40
Coq.Structures.EqualitiesFacts.PairUsualDecidableType.eq_dec	40
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.eq_refl	40
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.eq_sym	40
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.lt_not_eq	40	0.2.0.0.0	search with cache (only 1: intro x; only 1: unfold eq; only 1: intros; only 1: rewrite H; only 1: discriminate).	0.473569869995	19
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.compare	40
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.eq_dec	40
Coq.Structures.OrderedTypeAlt.OrderedType_to_Alt.compare_sym	40
Coq.Structures.OrderedTypeAlt.OrderedType_to_Alt.compare_trans	40
Coq.Structures.OrdersAlt.Update_OT.lt_strorder	40
Coq.Structures.OrdersAlt.Update_OT.lt_compat	40
Coq.Structures.OrdersAlt.Update_OT.compare_spec	40
Coq.Structures.OrdersAlt.Backport_OT.lt_not_eq	40
Coq.Structures.OrdersAlt.Backport_OT.lt_trans	40	2.5.1	search with cache (only 1: intros x y L E; only 1: rewrite E; only 1: auto).	0.172290086746	31
Coq.Structures.OrdersAlt.Backport_OT.compare	40
Coq.Structures.OrdersAlt.OT_from_Alt.eq_equiv	40
Coq.Structures.OrdersAlt.OT_from_Alt.lt_strorder	40
Coq.Structures.OrdersAlt.OT_from_Alt.lt_eq	40
Coq.Structures.OrdersAlt.OT_from_Alt.eq_lt	40
Coq.Structures.OrdersAlt.OT_from_Alt.lt_compat	40
Coq.Structures.OrdersAlt.OT_from_Alt.compare_spec	40
Coq.Structures.OrdersAlt.OT_from_Alt.eq_dec	40
Coq.Structures.OrdersAlt.OT_to_Alt.compare_sym	40
Coq.Structures.OrdersAlt.OT_to_Alt.compare_Eq	40
Coq.Structures.OrdersAlt.OT_to_Alt.compare_Lt	40
Coq.Structures.OrdersAlt.OT_to_Alt.compare_Gt	40
Coq.Structures.OrdersAlt.OT_to_Alt.compare_trans	40
Coq.Structures.DecidableType.KeyDecidableType.eqke_eqk	40	2.0.4.1	search with cache (only 1: compute; only 1: intros; only 1: destruct H; only 1: auto).	0.395828962326	39
Coq.Structures.DecidableType.KeyDecidableType.eqk_refl	40	0.0	search with cache (only 1: unfold eqk, eqke; only 1: intuition).	0.298840999603	2
Coq.Structures.DecidableType.KeyDecidableType.eqke_refl	40	0.0	search with cache (only 1: unfold eqk, eqke; only 1: intuition).	0.237710952759	2
Coq.Structures.DecidableType.KeyDecidableType.eqk_sym	40	0.0	search with cache (only 1: unfold eqk, eqke; only 1: intuition).	0.21605181694	2
Coq.Structures.DecidableType.KeyDecidableType.eqke_sym	40	0.0	search with cache (only 1: unfold eqk, eqke; only 1: intuition).	0.325073003769	2
Coq.Structures.DecidableType.KeyDecidableType.eqk_trans	40
Coq.Structures.DecidableType.KeyDecidableType.eqke_trans	40	0.2.6.0.2.0	search with cache (only 1: unfold eqke; only 1: compute; only 1: intuition; only 1: eauto; only 1: subst b; only 1: intuition).	9.23554205894	1677
Coq.Structures.DecidableType.KeyDecidableType.eqk_equiv	40	2.0.0.33.0	search with cache (only 1: unfold eqk, eqke; only 1: split; only 1: intuition; only 1: intuition; only 1: eauto).	1.59898805618	2543
Coq.Structures.DecidableType.KeyDecidableType.eqke_equiv	40	0.0.0.0	search with cache (only 1: split; only 1: eauto; only 1: eauto; only 1: eauto).	0.0582318305969	4
Coq.Structures.DecidableType.KeyDecidableType.InA_eqke_eqk	40
Coq.Structures.DecidableType.KeyDecidableType.InA_eqk	40
Coq.Structures.DecidableType.KeyDecidableType.In_alt	40
Coq.Structures.DecidableType.KeyDecidableType.MapsTo_eq	40
Coq.Structures.DecidableType.KeyDecidableType.In_eq	40
Coq.Structures.DecidableType.KeyDecidableType.In_inv	40
Coq.Structures.DecidableType.KeyDecidableType.In_inv_2	40	0.3.0	search with cache (only 1: inversion 1; only 1: intuition; only 1: eauto).	0.0574128627777	6
Coq.Structures.DecidableType.KeyDecidableType.In_inv_3	40	0.0.5.0	search with cache (only 1: unfold eqke; only 1: inversion_clear 1; only 1: intuition; only 1: intuition).	1.97569894791	42
Coq.Structures.OrderedType.MOT_to_OT.eq_dec	40
Coq.Structures.OrderedType.OrderedTypeFacts.eq_equiv	40
Coq.Structures.OrderedType.OrderedTypeFacts.lt_antirefl	40
Coq.Structures.OrderedType.OrderedTypeFacts.lt_strorder	40
Coq.Structures.OrderedType.OrderedTypeFacts.lt_eq	40
Coq.Structures.OrderedType.OrderedTypeFacts.eq_lt	40
Coq.Structures.OrderedType.OrderedTypeFacts.lt_compat	40
Coq.Structures.OrderedType.OrderedTypeFacts.lt_total	40
Coq.Structures.OrderedType.OrderedTypeFacts.IsTO.le_lteq	40	17	search with cache (only 1: auto with *).	1.76645493507	533
Coq.Structures.OrderedType.OrderedTypeFacts.le_eq	40
Coq.Structures.OrderedType.OrderedTypeFacts.eq_le	40	0	search with cache (only 1: order).	0.0322921276093	1
Coq.Structures.OrderedType.OrderedTypeFacts.neq_eq	40	5	search with cache (only 1: order).	0.0357930660248	6
Coq.Structures.OrderedType.OrderedTypeFacts.eq_neq	40	0	search with cache (only 1: order).	0.0618250370026	1
Coq.Structures.OrderedType.OrderedTypeFacts.le_lt_trans	40	0	search with cache (only 1: order).	0.0721089839935	1
Coq.Structures.OrderedType.OrderedTypeFacts.lt_le_trans	40	0	search with cache (only 1: order).	0.0568909645081	1
Coq.Structures.OrderedType.OrderedTypeFacts.le_neq	40	0	search with cache (only 1: order).	0.0582540035248	1
Coq.Structures.OrderedType.OrderedTypeFacts.le_trans	40	0	search with cache (only 1: order).	0.05779504776	1
Coq.Structures.OrderedType.OrderedTypeFacts.le_antisym	40	0	search with cache (only 1: order).	0.0708599090576	1
Coq.Structures.OrderedType.OrderedTypeFacts.neq_sym	40	0	search with cache (only 1: order).	0.069521188736	1
Coq.Structures.OrderedType.OrderedTypeFacts.lt_le	40	0	search with cache (only 1: order).	0.0535430908203	1
Coq.Structures.OrderedType.OrderedTypeFacts.gt_not_eq	40	0	search with cache (only 1: order).	0.0568251609802	1
Coq.Structures.OrderedType.OrderedTypeFacts.eq_not_lt	40	0	search with cache (only 1: order).	0.0572791099548	1
Coq.Structures.OrderedType.OrderedTypeFacts.eq_not_gt	40	0	search with cache (only 1: order).	0.0738940238953	1
Coq.Structures.OrderedType.OrderedTypeFacts.lt_not_gt	40	0	search with cache (only 1: order).	0.0540308952332	1
Coq.Structures.OrderedType.OrderedTypeFacts.elim_compare_eq	40
Coq.Structures.OrderedType.OrderedTypeFacts.elim_compare_lt	40	0.0.0.0.1.0.3.2.0.2.2	search with cache (only 1: intros; only 1: case (compare x y); only 1: intros H'; only 1: exists H'; only 1: auto; only 1: intros H'; only 1: exfalso; only 1: order; only 1: intros H'; only 1: exfalso; only 1: order).	7.22564196587	2926
Coq.Structures.OrderedType.OrderedTypeFacts.elim_compare_gt	40	3.2.0.0.1.0.0.1.0.2.1	search with cache (only 1: intros; only 1: case (compare x y); only 1: intros H'; only 1: exfalso; only 1: order; only 1: intros H'; only 1: exfalso; only 1: order; only 1: intros H'; only 1: exists H'; only 1: auto).	14.9726948738	4047
Coq.Structures.OrderedType.OrderedTypeFacts.lt_dec	40	6.5.6.9.0	search with cache (only 1: intros; only 1: case (compare x y); only 1: auto with ordered_type; only 1: auto with ordered_type; only 1: auto with ordered_type).	25.8602371216	10683
Coq.Structures.OrderedType.OrderedTypeFacts.eqb_alt	40
Coq.Structures.OrderedType.OrderedTypeFacts.In_eq	40
Coq.Structures.OrderedType.OrderedTypeFacts.ListIn_In	40
Coq.Structures.OrderedType.OrderedTypeFacts.Inf_lt	40
Coq.Structures.OrderedType.OrderedTypeFacts.Inf_eq	40	1.2	search with cache (only 1: intros; only 1: now rewrite H).	0.0890219211578	5
Coq.Structures.OrderedType.OrderedTypeFacts.Sort_Inf_In	40
Coq.Structures.OrderedType.OrderedTypeFacts.ListIn_Inf	40	1.0.3.6.4	search with cache (only 1: simple induction l; only 1: auto; only 1: simpl; only 1: intros; only 1: auto).	1.79000687599	504
Coq.Structures.OrderedType.OrderedTypeFacts.In_Inf	40	26.8.8	search with cache (only 1: simple induction l; only 1: constructor; only 1: auto with *).	12.7055130005	9394
Coq.Structures.OrderedType.OrderedTypeFacts.Inf_alt	40
Coq.Structures.OrderedType.OrderedTypeFacts.Sort_NoDup	40
Coq.Structures.OrderedType.KeyOrderedType.eqke_eqk	40	0.0.4.1	search with cache (only 1: compute; only 1: intros; only 1: destruct H; only 1: auto with ordered_type).	0.117458105087	9
Coq.Structures.OrderedType.KeyOrderedType.ltk_right_r	40	0	search with cache (only 1: intuition).	0.0719430446625	1
Coq.Structures.OrderedType.KeyOrderedType.ltk_right_l	40	0	search with cache (only 1: auto).	0.0418899059296	1
Coq.Structures.OrderedType.KeyOrderedType.eqk_refl	40	0.0	search with cache (only 1: unfold eqk, eqke; only 1: intuition).	0.0727100372314	2
Coq.Structures.OrderedType.KeyOrderedType.eqke_refl	40	0.0	search with cache (only 1: unfold eqk, eqke; only 1: intuition).	0.0639901161194	2
Coq.Structures.OrderedType.KeyOrderedType.eqk_sym	40	0	search with cache (only 1: auto with ordered_type).	0.0294239521027	1
Coq.Structures.OrderedType.KeyOrderedType.eqke_sym	40	0.1	search with cache (only 1: unfold eqk, eqke; only 1: intuition).	0.0499749183655	3
Coq.Structures.OrderedType.KeyOrderedType.eqk_trans	40
Coq.Structures.OrderedType.KeyOrderedType.eqke_trans	40	0.2.6.0.2.0	search with cache (only 1: unfold eqke; only 1: compute; only 1: intuition; only 1: eauto with ordered_type; only 1: subst b; only 1: intuition).	8.6850810051	1364
Coq.Structures.OrderedType.KeyOrderedType.ltk_trans	40	1.2	search with cache (only 1: intuition; only 1: eauto with ordered_type).	0.0509140491486	5
Coq.Structures.OrderedType.KeyOrderedType.ltk_not_eqk	40	1	search with cache (only 1: eauto with ordered_type).	0.036966085434	2
Coq.Structures.OrderedType.KeyOrderedType.ltk_not_eqke	40	8.5.14.0.4.0	search with cache (only 1: unfold eqk, ltk; only 1: unfold eqke; only 1: intuition; only 1: simpl in *; only 1: destruct H2; only 1: order).	30.7682678699	15555
Coq.Structures.OrderedType.KeyOrderedType.eqk_equiv	40	2.0.0.0.0.38	search with cache (only 1: split; only 1: unfold eqk, ltk; only 1: intuition; only 1: unfold eqk, ltk; only 1: intuition; only 1: eauto with ordered_type).	5.86339688301	4884
Coq.Structures.OrderedType.KeyOrderedType.eqke_equiv	40	0.0.0.0	search with cache (only 1: constructor; only 1: eauto with ordered_type; only 1: eauto with ordered_type; only 1: eauto with ordered_type).	0.420325994492	4
Coq.Structures.OrderedType.KeyOrderedType.ltk_strorder	40	0.15.16.11	search with cache (only 1: constructor; only 1: compute; only 1: order; only 1: eauto with ordered_type).	15.0293500423	11667
Coq.Structures.OrderedType.KeyOrderedType.ltk_compat	40
Coq.Structures.OrderedType.KeyOrderedType.ltk_compat'	40
Coq.Structures.OrderedType.KeyOrderedType.eqk_not_ltk	40	1.0	search with cache (only 1: unfold eqk, ltk; only 1: auto with ordered_type).	0.185997009277	18
Coq.Structures.OrderedType.KeyOrderedType.ltk_eqk	40	1.0.0	search with cache (only 1: unfold eqk, ltk; only 1: intuition; only 1: eauto with ordered_type).	0.0828790664673	4
Coq.Structures.OrderedType.KeyOrderedType.eqk_ltk	40	1.0.0	search with cache (only 1: unfold eqk, ltk; only 1: intuition; only 1: eauto with ordered_type).	0.133708953857	4
Coq.Structures.OrderedType.KeyOrderedType.InA_eqke_eqk	40
Coq.Structures.OrderedType.KeyOrderedType.In_alt	40
Coq.Structures.OrderedType.KeyOrderedType.MapsTo_eq	40
Coq.Structures.OrderedType.KeyOrderedType.In_eq	40
Coq.Structures.OrderedType.KeyOrderedType.Inf_eq	40
Coq.Structures.OrderedType.KeyOrderedType.Inf_lt	40
Coq.Structures.OrderedType.KeyOrderedType.Sort_Inf_In	40
Coq.Structures.OrderedType.KeyOrderedType.Sort_Inf_NotIn	40
Coq.Structures.OrderedType.KeyOrderedType.Sort_NoDupA	40
Coq.Structures.OrderedType.KeyOrderedType.Sort_In_cons_1	40
Coq.Structures.OrderedType.KeyOrderedType.Sort_In_cons_2	40
Coq.Structures.OrderedType.KeyOrderedType.Sort_In_cons_3	40
Coq.Structures.OrderedType.KeyOrderedType.In_inv	40
Coq.Structures.OrderedType.KeyOrderedType.In_inv_2	40	0.3.0	search with cache (only 1: inversion_clear 1; only 1: intuition; only 1: eauto with ordered_type).	0.0785140991211	6
Coq.Structures.OrderedType.KeyOrderedType.In_inv_3	40	0.0.5.1	search with cache (only 1: inversion_clear 1; only 1: compute in H0; only 1: intuition; only 1: eauto with *).	0.192462921143	22
Coq.Structures.GenericMinMax.GenericMinMax.ge_not_lt	40
Coq.Structures.GenericMinMax.GenericMinMax.max_l	40
Coq.Structures.GenericMinMax.GenericMinMax.max_r	40
Coq.Structures.GenericMinMax.GenericMinMax.min_l	40
Coq.Structures.GenericMinMax.GenericMinMax.min_r	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_spec	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_spec_le	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.Proper_instance_0	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_compat	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_unicity	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_unicity_ext	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_mono	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_id	40	3.12	search with cache (only 1: apply max_r; only 1: order).	0.260474920273	114
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_assoc	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_comm	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_max_l	40	4.0.3.0.16	search with cache (only 1: destruct (max_spec n m); only 1: intuition; only 1: order; only 1: intuition; only 1: order).	5.19007706642	1930
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_max_r	40	0	search with cache (only 1: solve_max).	0.056202173233	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_l_iff	40	20	search with cache (only 1: solve_max).	4.05253314972	1240
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_r_iff	40	0	search with cache (only 1: solve_max).	0.0261058807373	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_iff	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lt_iff	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_l	40	5	search with cache (only 1: solve_max).	0.0891649723053	16
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_r	40	5	search with cache (only 1: solve_max).	0.107480049133	16
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub	40	5.0	search with cache (only 1: intuition; only 1: solve_max).	0.0820851325989	7
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_iff	40	6	search with cache (only 1: solve_max).	0.393843173981	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_lt	40	0.0.0.0.2.1	search with cache (only 1: intuition; only 1: destruct (max_spec n m); only 1: intuition; only 1: order || (right; order) || (left; order); only 1: intuition; only 1: order || (right; order) || (left; order)).	0.134257793427	9
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_lt_iff	40	0.0.0.0.0.0.0.0.1	search with cache (only 1: destruct (max_spec n m); only 1: intuition; only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order); only 1: intuition; only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order)).	0.46210193634	39
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_compat_l	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_compat_r	40	0.1.0	search with cache (only 1: intros; only 1: apply max_lub_iff; only 1: solve_max).	0.190171003342	4
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_compat	40	2.2.1	search with cache (only 1: intros; only 1: apply max_lub_iff; only 1: solve_max).	0.20466709137	12
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_spec	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_spec_le	40	2.0.2.0.0.0.0.0.4.0.2	search with cache (only 1: destruct (lt_total n m); only 1: left; only 1: split; only 1: order || (right; order) || (left; order); only 1: apply min_l; only 1: order || (right; order) || (left; order); only 1: right; only 1: assert (m <= n) by (rewrite le_lteq; intuition); only 1: split; only 1: intuition; only 1: now apply min_r).	36.9273240566	6567
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_compat	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_unicity	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_unicity_ext	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_mono	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_id	40	1.1	search with cache (only 1: apply min_l; only 1: order || (right; order) || (left; order)).	0.0817220211029	4
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_assoc	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_comm	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_min_r	40	3.3.0.7	search with cache (only 1: pose proof (min_spec n m) as Hm; only 1: intuition; only 1: order; only 1: order).	1.21899414062	209
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_min_l	40	0	search with cache (only 1: solve_min).	0.0533719062805	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_l_iff	40	3.3.3.0.8	search with cache (only 1: pose proof (min_spec n m) as Hm; only 1: intuition; only 1: order; only 1: order; only 1: order).	4.42337584496	1009
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_r_iff	40	0	search with cache (only 1: solve_min).	0.0224211215973	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_iff	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_lt_iff	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_l	40	0	search with cache (only 1: solve_min).	0.0449600219727	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_r	40	0	search with cache (only 1: solve_min).	0.0545918941498	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb	40	0	search with cache (only 1: solve_min).	0.0605659484863	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_iff	40	0.0.3.0	search with cache (only 1: split; only 1: solve_min; only 1: intuition; only 1: solve_min).	0.154887914658	16
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_lt	40	0.0.0.0.2.1	search with cache (only 1: intuition; only 1: destruct (min_spec n m); only 1: intuition; only 1: order || (right; order) || (left; order); only 1: intuition; only 1: order || (right; order) || (left; order)).	0.13476896286	9
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_lt_iff	40	0.0.0.0.0.0.0.0.1	search with cache (only 1: destruct (min_spec n m); only 1: intuition; only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order); only 1: intuition; only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order)).	0.333451986313	39
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_compat_l	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_compat_r	40	0.1.0	search with cache (only 1: intros; only 1: apply min_glb_iff; only 1: solve_min).	0.0813529491425	4
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_compat	40	0.2.1	search with cache (only 1: intros; only 1: apply min_glb_iff; only 1: solve_min).	0.185049057007	6
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_absorption	40	0.2	search with cache (only 1: apply max_l; only 1: solve_min).	0.0614838600159	4
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_absorption	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_distr	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_distr	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_modular	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_modular	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_disassoc	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_antimono	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_antimono	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.max_case_strong	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.max_case	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.max_dec	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.min_case_strong	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.min_case	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.min_dec	40
Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.max_monotone	40
Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.min_monotone	40
Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.min_max_antimonotone	40
Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.max_min_antimonotone	40
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.max_case_strong	40	4.0.3.11.2	search with cache (only 1: intros Compat Hl Hr; only 1: apply max_case_strong; only 1: intros; only 1: rewrite <- H; only 1: auto).	1.48681712151	857
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.max_case	40	3.3.3.0	search with cache (only 1: intros; only 1: apply Private_Dec.max_case_strong; only 1: congruence; only 1: congruence).	0.406401872635	158
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.max_dec	40	6.6.0.8	search with cache (only 1: intros; only 1: apply Private_Dec.max_case; only 1: auto with relations; only 1: auto with relations).	3.50255703926	1323
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_case_strong	40	3.12.3	search with cache (only 1: intros Compat Hl Hr; only 1: apply min_case_strong; only 1: congruence).	2.23574090004	1291
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_case	40	3.2.3	search with cache (only 1: intros Compat Hl Hr; only 1: apply min_case; only 1: congruence).	0.326505899429	71
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_dec	40	6.6.0.1	search with cache (only 1: intros; only 1: apply Private_Dec.min_case; only 1: auto with relations; only 1: auto with relations).	0.797964811325	509
Coq.Structures.GenericMinMax.TOMaxEqDec_to_Compare.compare_spec	40
Coq.Structures.OrdersFacts.CompareFacts.compare_eq_iff	40
Coq.Structures.OrdersFacts.CompareFacts.compare_eq	40	1.0.1.0.1.0.0	search with cache (only 1: case compare_spec; only 1: intro H; only 1: easy; only 1: intro H; only 1: easy; only 1: intro H; only 1: easy).	0.224306106567	10
Coq.Structures.OrdersFacts.CompareFacts.compare_lt_iff	40
Coq.Structures.OrdersFacts.CompareFacts.compare_gt_iff	40
Coq.Structures.OrdersFacts.CompareFacts.compare_nlt_iff	40
Coq.Structures.OrdersFacts.CompareFacts.compare_ngt_iff	40
Coq.Structures.OrdersFacts.CompareFacts.compare_compat	40
Coq.Structures.OrdersFacts.CompareFacts.compare_refl	40	1.0	search with cache (only 1: autorewrite with order; only 1: easy).	0.0592160224915	3
Coq.Structures.OrdersFacts.CompareFacts.compare_antisym	40
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_compat	40
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_preorder	40	5.2.5.2.32	search with cache (only 1: split; only 1: repeat red; only 1: iorder; only 1: repeat red; only 1: iorder).	1.32449507713	1751
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_order	40	0.2.1	search with cache (only 1: repeat red; only 1: compute; only 1: iorder).	0.0318720340729	6
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_antisym	40	3.0	search with cache (only 1: compute; only 1: iorder).	0.0908639431	18
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_not_gt_iff	40	13	search with cache (only 1: iorder).	0.552026033401	151
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.lt_not_ge_iff	40	0	search with cache (only 1: iorder).	0.0409770011902	1
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_or_gt	40
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.lt_or_ge	40	2.2.2.0.0.0	search with cache (only 1: intros; only 1: rewrite le_lteq; only 1: destruct (compare_spec x y); only 1: intuition; only 1: intuition; only 1: intuition).	7.5347161293	924
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.eq_is_le_ge	40	0	search with cache (only 1: iorder).	0.0575129985809	1
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.compare_le_iff	40	1.0	search with cache (only 1: rewrite compare_gt_iff; only 1: iorder).	0.0588529109955	3
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.compare_ge_iff	40	0.0.0	search with cache (only 1: rewrite le_not_gt_iff; only 1: rewrite compare_lt_iff; only 1: intuition).	0.0743250846863	3
Coq.Structures.OrdersFacts.OrderedTypeFacts.lt_dec	40
Coq.Structures.OrdersFacts.OrderedTypeFacts.if_eq_dec	40
Coq.Structures.OrdersFacts.OrderedTypeFacts.eqb_alt	40
Coq.Structures.OrdersFacts.OrderedTypeFacts.eqb_compat	40
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_not_eq	40	5.1	search with cache (only 1: intro H; only 1: order).	0.0443649291992	14
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_eq	40	0	search with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.022812128067	1
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_lt	40	0	search with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0205709934235	1
Coq.Structures.OrdersFacts.OrderedTypeTest.le_eq	40	1	search with cache (only 1: order).	1.01503300667	2
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_le	40	0	search with cache (only 1: order).	0.0327320098877	1
Coq.Structures.OrdersFacts.OrderedTypeTest.neq_eq	40	5.1	search with cache (only 1: intro H; only 1: order).	0.204734802246	22
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_neq	40	0	search with cache (only 1: order).	0.0348229408264	1
Coq.Structures.OrdersFacts.OrderedTypeTest.le_lt_trans	40	0	search with cache (only 1: order).	0.0372829437256	1
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_le_trans	40	0	search with cache (only 1: order).	0.0346200466156	1
Coq.Structures.OrdersFacts.OrderedTypeTest.le_trans	40	0	search with cache (only 1: order).	0.0352199077606	1
Coq.Structures.OrdersFacts.OrderedTypeTest.le_antisym	40	2	search with cache (only 1: order).	0.141258001328	18
Coq.Structures.OrdersFacts.OrderedTypeTest.le_neq	40	2.1	search with cache (only 1: intro H; only 1: order).	0.126945972443	12
Coq.Structures.OrdersFacts.OrderedTypeTest.neq_sym	40	5.1	search with cache (only 1: intro H; only 1: order).	0.154765129089	22
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_le	40	6	search with cache (only 1: order).	0.169400930405	21
Coq.Structures.OrdersFacts.OrderedTypeTest.gt_not_eq	40	2.1	search with cache (only 1: intro H; only 1: order).	0.135453939438	5
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_not_lt	40	2	search with cache (only 1: order).	0.174633026123	19
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_not_gt	40	2	search with cache (only 1: order).	0.130779027939	19
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_not_gt	40	6	search with cache (only 1: order).	0.0794830322266	21
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_is_nlt_ngt	40
Coq.Structures.OrdersFacts.OrderedTypeRev.lt_strorder	40
Coq.Structures.OrdersFacts.OrderedTypeRev.lt_compat	40	0.5.4.3.0.2	search with cache (only 1: simpl_relation; only 1: unfold lt; only 1: unfold flip in *; only 1: rewrite <- H; only 1: rewrite H0; only 1: auto with *).	21.266163826	8442
Coq.Structures.OrdersFacts.OrderedTypeRev.le_lteq	40
Coq.Structures.OrdersFacts.OrderedTypeRev.compare_spec	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_spec	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_eq	40	2.1	search with cache (only 1: intros H; only 1: now apply compare_eq_iff).	0.0576248168945	5
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_refl	40	3.0.0.0.0.0.0	search with cache (only 1: apply compare_eq_iff; only 1: apply compare_eq_iff; only 1: apply compare_eq_iff; only 1: apply compare_eq_iff; only 1: apply compare_eq_iff; only 1: apply compare_eq_iff; only 1: now apply compare_eq_iff).	0.25242805481	16
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_gt_iff	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_ge_iff	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_ngt_iff	40	0	search with cache (only 1: now rewrite <- compare_lt_iff, compare_antisym, CompOpp_iff).	0.0523130893707	1
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_nlt_iff	40	5	search with cache (only 1: now rewrite <- compare_lt_iff, compare_antisym, CompOpp_iff).	0.114634037018	18
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_nle_iff	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_nge_iff	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.lt_irrefl	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.lt_eq_cases	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_spec0	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_spec	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_spec0	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_spec	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_nle	40	0.4.5	search with cache (only 1: case leb_spec0; only 1: intuition; only 1: now rewrite <- compare_nle_iff, compare_antisym, CompOpp_iff).	1.73930001259	336
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_gt	40	3.10.4	search with cache (only 1: case leb_spec0; only 1: now rewrite <- compare_lt_iff, compare_nge_iff; only 1: now rewrite <- compare_lt_iff, compare_nge_iff).	10.1376030445	2021
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_nlt	40	6.4.5	search with cache (only 1: case ltb_spec0; only 1: intuition; only 1: intuition).	4.9941599369	1100
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_ge	40	0.2.9	search with cache (only 1: rewrite <- compare_le_iff; only 1: rewrite compare_gt_iff; only 1: now rewrite <- not_true_iff_false, ltb_lt).	2.00296807289	256
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_refl	40	1.0.9.0	search with cache (only 1: apply leb_le; only 1: rewrite <- compare_le_iff; only 1: rewrite compare_gt_iff; only 1: now rewrite <- compare_lt_iff, compare_refl).	0.935216903687	327
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_antisym	40	4.0.5.0.8	search with cache (only 1: case ltb_spec0; only 1: now rewrite leb_nle, <- compare_lt_iff, compare_nge_iff; only 1: case leb_spec0; only 1: constructor; only 1: now rewrite <- compare_lt_iff, compare_nge_iff).	5.79388284683	1509
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_irrefl	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_antisym	40	4.0.8.0.11	search with cache (only 1: case leb_spec0; only 1: now rewrite ltb_nlt, <- compare_le_iff, compare_ngt_iff; only 1: case ltb_spec0; only 1: constructor; only 1: now rewrite <- compare_lt_iff, compare_nge_iff).	13.9993541241	4447
Coq.Structures.OrdersFacts.BoolOrderFacts.eqb_compare	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_compare	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_compare	40
Coq.Structures.OrdersTac.OrderFacts.eq_refl	40	8	search with cache (only 1: solve_proper).	0.0264451503754	9
Coq.Structures.OrdersTac.OrderFacts.le_refl	40
Coq.Structures.OrdersTac.OrderFacts.lt_irrefl	40	5.49.6.1	search with cache (only 1: intros; only 1: intuition; only 1: elim (CRelationClasses.StrictOrder_Irreflexive x); only 1: tauto).	12.6027100086	17434
Coq.Structures.OrdersTac.OrderFacts.eq_sym	40	16.2	search with cache (only 1: intros; only 1: simpl_relation).	0.518002033234	301
Coq.Structures.OrdersTac.OrderFacts.le_antisym	40
Coq.Structures.OrdersTac.OrderFacts.neq_sym	40	0	search with cache (only 1: auto with *).	0.141001939774	1
Coq.Structures.OrdersTac.OrderFacts.trans	40
Coq.Structures.OrdersTac.OrderFacts.eq_neq	40
Coq.Structures.OrdersTac.OrderFacts.neq_eq	40	0	search with cache (only 1: eauto using eq_trans, eq_sym).	0.035530090332	1
Coq.Structures.OrdersTac.OrderFacts.not_neq_eq	40
Coq.Structures.OrdersTac.OrderFacts.not_ge_lt	40	0.1.3.0.11.4.0.2	search with cache (only 1: intros x y; only 1: rewrite ?P.le_lteq; only 1: intro H; only 1: destruct (P.lt_total x y) as [H'| [H'| H']]; only 1: intuition auto; subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: destruct H; only 1: intuition; only 1: intuition auto; subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	25.4541311264	18083
Coq.Structures.OrdersTac.OrderFacts.not_gt_le	40	2.2.1.3.2.0	search with cache (only 1: intros x y H; only 1: destruct (P.lt_total x y); only 1: rewrite P.le_lteq; only 1: auto; only 1: rewrite P.le_lteq; only 1: intuition auto; subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	6.44105195999	2009
Coq.Structures.OrdersTac.OrderFacts.le_neq_lt	40	0.1.2.2	search with cache (only 1: intros x y; only 1: rewrite P.le_lteq; only 1: generalize (P.lt_total x y); only 1: intuition).	0.258013963699	44
Coq.Structures.Orders.Compare2EqBool.eqb_eq	40
Coq.Structures.Orders.OT_to_Full.le_lteq	40	21	search with cache (only 1: solve_proper).	3.45785307884	2130
Coq.Structures.Orders.OTF_LtIsTotal.lt_total	40
Coq.Structures.Orders.OTF_to_TTLB.leb_le	40
Coq.Structures.Orders.OTF_to_TTLB.leb_total	40
Coq.Structures.Orders.OTF_to_TTLB.leb_trans	40
Coq.Structures.Orders.TTLB_to_OTF.compare_spec	40
Coq.Structures.Orders.TTLB_to_OTF.eqb_eq	40
Coq.Structures.Orders.TTLB_to_OTF.eq_equiv	40
Coq.Structures.Orders.TTLB_to_OTF.lt_strorder	40
Coq.Structures.Orders.TTLB_to_OTF.lt_compat	40
Coq.Structures.Orders.TTLB_to_OTF.le_lteq	40	0.0.0.2.1.0.0	search with cache (only 1: intros; only 1: unfold eq, lt, le in *; only 1: case leb; only 1: case leb; only 1: intuition; only 1: intuition; only 1: intuition).	0.512828826904	35
Coq.Structures.Equalities.UpdateEq.eq_equiv	40
Coq.Structures.Equalities.HasEqDec2Bool.eqb_eq	40
Coq.Structures.Equalities.HasEqBool2Dec.eq_dec	40
Coq.Structures.Equalities.BoolEqualityFacts.eqb_compat	40
Coq.Structures.Equalities.BoolEqualityFacts.eqb_spec	40
Coq.Structures.Equalities.BoolEqualityFacts.eqb_neq	40
Coq.Structures.Equalities.BoolEqualityFacts.eqb_refl	40	14.1	search with cache (only 1: apply eqb_eq; only 1: simpl_relation).	2.65563988686	908
Coq.Structures.Equalities.BoolEqualityFacts.eqb_sym	40
Coq.Vectors.VectorEq.eqb_nat_eq	40
Coq.Vectors.VectorEq.eqb_eq	40
Coq.Vectors.VectorEq.eq_dec	40
Coq.Vectors.VectorEq.cast	40	1.3.13	search with cache (only 1: intros; only 1: subst; only 1: now f_equal).	3.84289097786	1358
Coq.Vectors.VectorSpec.eta	40
Coq.Vectors.VectorSpec.eq_nth_iff	40
Coq.Vectors.VectorSpec.nth_order_last	40
Coq.Vectors.VectorSpec.shiftin_nth	40
Coq.Vectors.VectorSpec.shiftin_last	40
Coq.Vectors.VectorSpec.shiftrepeat_nth	40
Coq.Vectors.VectorSpec.shiftrepeat_last	40	0.0.1	search with cache (only 1: refine (@rectS _ _ _ _); only 1: now simpl; only 1: now simpl).	0.0656020641327	4
Coq.Vectors.VectorSpec.const_nth	40	0.0.32.3	search with cache (only 1: generalize dependent n; only 1: induction p; only 1: now simpl; only 1: now simpl).	4.46540093422	3302
Coq.Vectors.VectorSpec.nth_map	40
Coq.Vectors.VectorSpec.nth_map2	40
Coq.Vectors.VectorSpec.fold_left_right_assoc_eq	40
Coq.Vectors.VectorSpec.to_list_of_list_opp	40
Coq.Vectors.VectorSpec.take_O	40	1.0	search with cache (only 1: intros; only 1: reflexivity).	0.0997891426086	3
Coq.Vectors.VectorSpec.take_idem	40
Coq.Vectors.VectorSpec.take_app	40
Coq.Vectors.VectorSpec.take_prf_irr	40	1.0.0.0.0.1.0.0.2	search with cache (only 1: induction p; only 1: intros n v le le'; only 1: auto; only 1: intros n v le le'; only 1: destruct v; only 1: inversion le; only 1: simpl; only 1: apply f_equal; only 1: apply IHp).	7.77645993233	1226
Coq.Vectors.VectorSpec.uncons_cons	40	0.1	search with cache (only 1: intros; only 1: now simpl).	0.22150683403	3
Coq.Vectors.VectorSpec.append_comm_cons	40	3.0.0	search with cache (only 1: intros m w le; only 1: simpl; only 1: reflexivity).	0.119186878204	6
Coq.Vectors.VectorSpec.splitat_append	40
Coq.Vectors.VectorSpec.append_splitat	40
Coq.Vectors.VectorDef.trunc	40
Coq.Vectors.Fin.of_nat_ext	40
Coq.Vectors.Fin.of_nat_to_nat_inv	40
Coq.Vectors.Fin.to_nat_of_nat	40
Coq.Vectors.Fin.to_nat_inj	40
Coq.Vectors.Fin.L_sanity	40
Coq.Vectors.Fin.L_R	40
Coq.Vectors.Fin.R_sanity	40
Coq.Vectors.Fin.depair_sanity	40
Coq.Vectors.Fin.eqb_nat_eq	40
Coq.Vectors.Fin.eqb_eq	40
Coq.Vectors.Fin.eq_dec	40
Coq.Vectors.Fin.cast	40	13.17.1	search with cache (only 1: intros; only 1: destruct H; only 1: now f_equal).	10.9889669418	9824
Coq.Wellfounded.Lexicographic_Exponentiation.left_prefix	40
Coq.Wellfounded.Lexicographic_Exponentiation.right_prefix	40
Coq.Wellfounded.Lexicographic_Exponentiation.desc_prefix	40
Coq.Wellfounded.Lexicographic_Exponentiation.desc_tail	40
Coq.Wellfounded.Lexicographic_Exponentiation.dist_aux	40
Coq.Wellfounded.Lexicographic_Exponentiation.dist_Desc_concat	40
Coq.Wellfounded.Lexicographic_Exponentiation.desc_end	40
Coq.Wellfounded.Lexicographic_Exponentiation.ltl_unit	40
Coq.Wellfounded.Lexicographic_Exponentiation.acc_app	40	6.1.3.1.0	search with cache (only 1: intro; only 1: intros a b x; only 1: case x; only 1: intros; only 1: auto with sets).	5.96069812775	1424
Coq.Wellfounded.Lexicographic_Exponentiation.wf_lex_exp	40
Coq.Wellfounded.Lexicographic_Product.acc_A_B_lexprod	40
Coq.Wellfounded.Lexicographic_Product.wf_lexprod	40
Coq.Wellfounded.Lexicographic_Product.Acc_symprod	40
Coq.Wellfounded.Lexicographic_Product.wf_symprod	40
Coq.Wellfounded.Lexicographic_Product.swap_Acc	40
Coq.Wellfounded.Lexicographic_Product.Acc_swapprod	40
Coq.Wellfounded.Lexicographic_Product.wf_swapprod	40
Coq.Wellfounded.Union.strip_commut	40
Coq.Wellfounded.Union.Acc_union	40
Coq.Wellfounded.Union.wf_union	40
Coq.Wellfounded.Disjoint_Union.acc_A_sum	40
Coq.Wellfounded.Disjoint_Union.acc_B_sum	40
Coq.Wellfounded.Disjoint_Union.wf_disjoint_sum	40
Coq.Wellfounded.Transitive_Closure.incl_clos_trans	40	0.9.92	search with cache (only 1: intros n m; only 1: constructor; only 1: auto).	13.6536419392	55263
Coq.Wellfounded.Transitive_Closure.Acc_clos_trans	40
Coq.Wellfounded.Transitive_Closure.Acc_inv_trans	40	0.0.0.1.8.2.5.10	search with cache (only 1: intro x; only 1: intros y H2; only 1: induction H2; only 1: intros; only 1: apply Acc_inv with y; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets).	10.8037059307	6920
Coq.Wellfounded.Transitive_Closure.wf_clos_trans	40	0.0	search with cache (only 1: red; only 1: auto with sets).	0.0607340335846	2
Coq.Wellfounded.Well_Ordering.wf_WO	40
Coq.Wellfounded.Well_Ordering.wof	40
Coq.Wellfounded.Inclusion.Acc_incl	40	4.18.0.21.2	search with cache (only 1: intro z; only 1: apply Acc_rect; only 1: intro H; only 1: split; only 1: auto).	25.290186882	35494
Coq.Wellfounded.Inclusion.wf_incl	40	0.5.14	search with cache (only 1: intros; only 1: intro z; only 1: auto with sets).	0.776218175888	740
Coq.Wellfounded.Inverse_Image.Acc_lemma	40
Coq.Wellfounded.Inverse_Image.Acc_inverse_image	40
Coq.Wellfounded.Inverse_Image.wf_inverse_image	40	0.1.5.4.5.2	search with cache (only 1: intros y0 H1; only 1: apply Acc_intro; only 1: intros x H; only 1: apply (Acc_lemma (f x)); only 1: trivial; only 1: trivial).	1.21559000015	1398
Coq.Wellfounded.Inverse_Image.Acc_inverse_rel	40
Coq.Wellfounded.Inverse_Image.wf_inverse_rel	40
Coq.ZArith.Zdigits.binary_value	40
Coq.ZArith.Zdigits.two_compl_value	40	0.0.0.3.2.3	search with cache (only 1: refine (nat_rect _ _ _); only 1: intros; only 1: exact 0%Z; only 1: intros; only 1: inversion H0; only 1: exact (bit_value h + 2 * H H2)%Z).	1.09102320671	231
Coq.ZArith.Zdigits.Zmod2_twice	40
Coq.ZArith.Zdigits.Z_to_binary	40
Coq.ZArith.Zdigits.Z_to_two_compl	40
Coq.ZArith.Zdigits.binary_value_Sn	40	5.1	search with cache (only 1: simpl; only 1: trivial).	0.14336681366	8
Coq.ZArith.Zdigits.Z_to_binary_Sn	40
Coq.ZArith.Zdigits.binary_value_pos	40
Coq.ZArith.Zdigits.two_compl_value_Sn	40	2.3.1.0	search with cache (only 1: destruct b; only 1: simpl; only 1: auto; only 1: auto).	0.180876016617	11
Coq.ZArith.Zdigits.Z_to_two_compl_Sn	40
Coq.ZArith.Zdigits.Z_to_binary_Sn_z	40	2.0.1.0.0.1	search with cache (only 1: destruct z; only 1: simpl; only 1: auto; only 1: auto; only 1: simpl; only 1: auto).	0.298450946808	18
Coq.ZArith.Zdigits.Z_div2_value	40
Coq.ZArith.Zdigits.Pdiv2	40
Coq.ZArith.Zdigits.Zdiv2_two_power_nat	40
Coq.ZArith.Zdigits.Z_to_two_compl_Sn_z	40	0.1.0.0.0.0.1	search with cache (only 1: destruct z as [| p| p]; only 1: auto; only 1: auto; only 1: destruct p as [p| p| ]; only 1: auto; only 1: auto; only 1: auto).	0.49344587326	16
Coq.ZArith.Zdigits.Zeven_bit_value	40
Coq.ZArith.Zdigits.Zodd_bit_value	40	0.0.0.0.0.0.1.0.0.0.5.0.0	search with cache (only 1: destruct z; only 1: unfold bit_value; only 1: tauto || (intro H; elim H); only 1: unfold bit_value; only 1: destruct p; only 1: auto; only 1: tauto || (intro H; elim H); only 1: auto; only 1: unfold bit_value; only 1: destruct p; only 1: tauto || (intro H; elim H); only 1: tauto || (intro H; elim H); only 1: tauto || (intro H; elim H)).	12.9498648643	3386
Coq.ZArith.Zdigits.Zge_minus_two_power_nat_S	40
Coq.ZArith.Zdigits.Zlt_two_power_nat_S	40	1.0.1.0.1.1.2.1	search with cache (only 1: intros n z; only 1: rewrite (two_power_nat_S n); only 1: generalize (Zmod2_twice z); only 1: destruct (Zeven_odd_dec z) as [H| H]; only 1: rewrite (Zeven_bit_value z H); only 1: lia; only 1: rewrite (Zodd_bit_value z H); only 1: lia).	2.46073508263	533
Coq.ZArith.Zdigits.binary_to_Z_to_binary	40
Coq.ZArith.Zdigits.two_compl_to_Z_to_two_compl	40
Coq.ZArith.Zdigits.Z_to_binary_to_Z	40
Coq.ZArith.Zdigits.Z_to_two_compl_to_Z	40
Coq.ZArith.Zgcd_alt.Zgcdn_pos	40
Coq.ZArith.Zgcd_alt.Zgcd_alt_pos	40
Coq.ZArith.Zgcd_alt.Zgcdn_linear_bound	40
Coq.ZArith.Zgcd_alt.fibonacci_pos	40
Coq.ZArith.Zgcd_alt.fibonacci_incr	40
Coq.ZArith.Zgcd_alt.Zgcdn_worst_is_fibonacci	40
Coq.ZArith.Zgcd_alt.Zgcdn_ok_before_fibonacci	40
Coq.ZArith.Zgcd_alt.Zgcd_bound_fibonacci	40
Coq.ZArith.Zgcd_alt.Zgcd_bound_opp	40
Coq.ZArith.Zgcd_alt.Zgcdn_opp	40
Coq.ZArith.Zgcd_alt.Zgcdn_is_gcd_pos	40
Coq.ZArith.Zgcd_alt.Zgcdn_is_gcd	40
Coq.ZArith.Zgcd_alt.Zgcd_is_gcd	40
Coq.ZArith.Zpow_facts.Zpower_pos_1_l	40
Coq.ZArith.Zpow_facts.Zpower_pos_0_l	40
Coq.ZArith.Zpow_facts.Zpower_pos_pos	40
Coq.ZArith.Zpow_facts.Zpower_le_monotone	40
Coq.ZArith.Zpow_facts.Zpower_lt_monotone	40
Coq.ZArith.Zpow_facts.Zpower_gt_1	40
Coq.ZArith.Zpow_facts.Zmult_power	40
Coq.ZArith.Zpow_facts.Zpower_le_monotone3	40
Coq.ZArith.Zpow_facts.Zpower_le_monotone_inv	40
Coq.ZArith.Zpow_facts.Zpower2_lt_lin	40
Coq.ZArith.Zpow_facts.Zpower2_le_lin	40	1.27.0	search with cache (only 1: intros; only 1: apply Z.lt_le_incl; only 1: now apply Z.pow_gt_lin_r).	1.49963498116	954
Coq.ZArith.Zpow_facts.Zpower2_Psize	40
Coq.ZArith.Zpow_facts.Zpower_mod	40
Coq.ZArith.Zpow_facts.Zpow_mod_pos_correct	40
Coq.ZArith.Zpow_facts.Zpow_mod_correct	40
Coq.ZArith.Zpow_facts.Zpower_divide	40
Coq.ZArith.Zpow_facts.rel_prime_Zpower_r	40
Coq.ZArith.Zpow_facts.rel_prime_Zpower	40
Coq.ZArith.Zpow_facts.prime_power_prime	40
Coq.ZArith.Zpow_facts.Zdivide_power_2	40
Coq.ZArith.Zquot.Zquot_0_r	40
Coq.ZArith.Zquot.Zrem_0_r	40	32	search with cache (only 1: now destruct a).	0.810014009476	516
Coq.ZArith.Zquot.Zrem_0_l	40	0	search with cache (only 1: now destruct a).	0.0646729469299	1
Coq.ZArith.Zquot.Zquot_0_l	40	0	search with cache (only 1: now destruct a).	0.0704379081726	1
Coq.ZArith.Zquot.Z_rem_same	40
Coq.ZArith.Zquot.Z_rem_mult	40
Coq.ZArith.Zquot.Zquot_opp_l	40
Coq.ZArith.Zquot.Zquot_opp_r	40
Coq.ZArith.Zquot.Zrem_opp_l	40
Coq.ZArith.Zquot.Zrem_opp_r	40
Coq.ZArith.Zquot.Zquot_opp_opp	40
Coq.ZArith.Zquot.Zrem_opp_opp	40
Coq.ZArith.Zquot.Zrem_sgn	40
Coq.ZArith.Zquot.Zrem_sgn2	40
Coq.ZArith.Zquot.Zrem_lt_pos	40
Coq.ZArith.Zquot.Zrem_lt_neg	40
Coq.ZArith.Zquot.Zrem_lt_pos_pos	40	0.2.1.0	search with cache (only 1: generalize (Z.rem_nonpos a b), (Z.rem_bound_abs a b); only 1: intros; only 1: generalize (Z.rem_nonneg a b), (Z.rem_bound_abs a b); only 1: lia).	0.257977962494	7
Coq.ZArith.Zquot.Zrem_lt_pos_neg	40	0.1.0	search with cache (only 1: intros; only 1: generalize (Zrem_lt_pos a b); only 1: lia).	0.14696598053	4
Coq.ZArith.Zquot.Zrem_lt_neg_pos	40	0.1.1.0	search with cache (only 1: intros; only 1: generalize (Zrem_lt_pos a b); only 1: generalize (Z.rem_nonpos a b), (Z.rem_bound_abs a b); only 1: lia).	0.143996953964	6
Coq.ZArith.Zquot.Zrem_lt_neg_neg	40	0.3.1.1.0	search with cache (only 1: intros; only 1: generalize (Zrem_lt_pos a b); only 1: intros; only 1: generalize (Z.rem_nonpos a b), (Z.rem_bound_abs a b); only 1: lia).	0.224638938904	12
Coq.ZArith.Zquot.Remainder_equiv	40
Coq.ZArith.Zquot.Zquot_mod_unique_full	40
Coq.ZArith.Zquot.Zquot_unique_full	40
Coq.ZArith.Zquot.Zrem_unique_full	40	1.3.3.3.2	search with cache (only 1: intros; only 1: destruct (Zquot_mod_unique_full a b q r); only 1: auto; only 1: auto; only 1: auto).	7.30909991264	1288
Coq.ZArith.Zquot.Z_quot_pos	40
Coq.ZArith.Zquot.Z_quot_lt	40
Coq.ZArith.Zquot.Z_quot_monotone	40
Coq.ZArith.Zquot.Z_mult_quot_le	40
Coq.ZArith.Zquot.Z_mult_quot_ge	40
Coq.ZArith.Zquot.Z_quot_exact_full	40
Coq.ZArith.Zquot.Zrem_le	40
Coq.ZArith.Zquot.Zquot_le_upper_bound	40
Coq.ZArith.Zquot.Zquot_lt_upper_bound	40
Coq.ZArith.Zquot.Zquot_le_lower_bound	40
Coq.ZArith.Zquot.Zquot_sgn	40
Coq.ZArith.Zquot.Z_rem_plus	40
Coq.ZArith.Zquot.Z_quot_plus	40
Coq.ZArith.Zquot.Z_quot_plus_l	40
Coq.ZArith.Zquot.Zquot_mult_cancel_r	40
Coq.ZArith.Zquot.Zquot_mult_cancel_l	40
Coq.ZArith.Zquot.Zmult_rem_distr_l	40
Coq.ZArith.Zquot.Zmult_rem_distr_r	40
Coq.ZArith.Zquot.Zrem_rem	40
Coq.ZArith.Zquot.Zmult_rem	40
Coq.ZArith.Zquot.Zplus_rem	40
Coq.ZArith.Zquot.Zplus_rem_idemp_l	40
Coq.ZArith.Zquot.Zplus_rem_idemp_r	40
Coq.ZArith.Zquot.Zmult_rem_idemp_l	40
Coq.ZArith.Zquot.Zmult_rem_idemp_r	40
Coq.ZArith.Zquot.Zquot_Zquot	40
Coq.ZArith.Zquot.Zquot_mult_le	40
Coq.ZArith.Zquot.Zrem_divides	40
Coq.ZArith.Zquot.Zquot2_odd_remainder	40
Coq.ZArith.Zquot.Zrem_odd	40
Coq.ZArith.Zquot.Zrem_even	40
Coq.ZArith.Zquot.Zeven_rem	40	2.0.0.0.1.3.0.5	search with cache (only 1: intros [| p| p]; only 1: rewrite Zrem_odd, Zodd_even_bool; only 1: simpl; only 1: tauto; only 1: rewrite Zrem_odd, Zodd_even_bool; only 1: now destruct Z.even; only 1: rewrite Zrem_odd, Zodd_even_bool; only 1: now destruct Z.even).	5.06567287445	1984
Coq.ZArith.Zquot.Zodd_rem	40	1.1.0.0.0.0	search with cache (only 1: intros a; only 1: rewrite Zrem_even; only 1: destruct a as [| p| p]; only 1: trivial; only 1: now destruct p; only 1: now destruct p).	0.188478946686	8
Coq.ZArith.Zquot.Zquotrem_Zdiv_eucl_pos	40
Coq.ZArith.Zquot.Zquot_Zdiv_pos	40
Coq.ZArith.Zquot.Zrem_Zmod_pos	40
Coq.ZArith.Zquot.Zrem_Zmod_zero	40
Coq.ZArith.Zwf.Zwf_well_founded	40
Coq.ZArith.Zwf.Zwf_up_well_founded	40
Coq.ZArith.Znumtheory.Zdivide_opp_r	40
Coq.ZArith.Znumtheory.Zdivide_opp_r_rev	40	0	search with cache (only 1: apply Z.divide_opp_r).	0.0318150520325	1
Coq.ZArith.Znumtheory.Zdivide_opp_l	40
Coq.ZArith.Znumtheory.Zdivide_opp_l_rev	40	0	search with cache (only 1: apply Z.divide_opp_l).	0.0285811424255	1
Coq.ZArith.Znumtheory.Zdivide_Zabs_l	40
Coq.ZArith.Znumtheory.Zdivide_Zabs_inv_l	40	0	search with cache (only 1: apply Z.divide_abs_l).	0.0469160079956	1
Coq.ZArith.Znumtheory.Zmult_one	40
Coq.ZArith.Znumtheory.Zdivide_bounds	40
Coq.ZArith.Znumtheory.Zmod_divide	40	1.1.16.6	search with cache (only 1: intros b Hb a; only 1: rewrite Z.mod_divide; only 1: trivial; only 1: tauto).	3.20452618599	2353
Coq.ZArith.Znumtheory.Zdivide_mod	40	0.6.8.1.0.1	search with cache (only 1: intros a b; only 1: intros (c, Hc); only 1: zero_or_not b; only 1: subst; only 1: apply Z.mod_mul; only 1: tauto).	10.3529419899	3496
Coq.ZArith.Znumtheory.Zdivide_dec	40
Coq.ZArith.Znumtheory.Z_lt_neq	40	35	search with cache (only 1: Z.order).	12.5105159283	7677
Coq.ZArith.Znumtheory.Zdivide_Zdiv_eq	40
Coq.ZArith.Znumtheory.Zdivide_Zdiv_eq_2	40
Coq.ZArith.Znumtheory.Zdivide_le	40	0.1.21.0	search with cache (only 1: intros Hb; only 1: intro eq; only 1: intros Ha H; only 1: now apply Z.divide_pos_le).	17.8808979988	5019
Coq.ZArith.Znumtheory.Zdivide_Zdiv_lt_pos	40
Coq.ZArith.Znumtheory.Zmod_div_mod	40
Coq.ZArith.Znumtheory.Zmod_divide_minus	40
Coq.ZArith.Znumtheory.Zdivide_mod_minus	40
Coq.ZArith.Znumtheory.Zis_gcd_sym	40
Coq.ZArith.Znumtheory.Zis_gcd_0	40	0.2.12.1	search with cache (only 1: constructor; only 1: intuition; only 1: apply Z.divide_0_r; only 1: intuition).	0.736886024475	469
Coq.ZArith.Znumtheory.Zis_gcd_1	40	0.11.17.1	search with cache (only 1: constructor; only 1: intuition; only 1: easy; only 1: intuition).	6.91769099236	4060
Coq.ZArith.Znumtheory.Zis_gcd_refl	40	0.12.12.1	search with cache (only 1: constructor; only 1: intuition; only 1: intuition; only 1: intuition).	1.73510408401	1626
Coq.ZArith.Znumtheory.Zis_gcd_minus	40	0.0.0.0.0	search with cache (only 1: induction 1; only 1: constructor; only 1: intuition; only 1: intuition; only 1: intuition).	0.209114074707	5
Coq.ZArith.Znumtheory.Zis_gcd_opp	40	0.0.0.0.0	search with cache (only 1: induction 1; only 1: constructor; only 1: intuition; only 1: intuition; only 1: intuition).	0.104079008102	5
Coq.ZArith.Znumtheory.Zis_gcd_0_abs	40
Coq.ZArith.Znumtheory.Zis_gcd_unique	40
Coq.ZArith.Znumtheory.Zis_gcd_for_euclid	40
Coq.ZArith.Znumtheory.Zis_gcd_for_euclid2	40
Coq.ZArith.Znumtheory.euclid_rec	40
Coq.ZArith.Znumtheory.euclid	40
Coq.ZArith.Znumtheory.Zis_gcd_uniqueness_apart_sign	40	3.3.0.0	search with cache (only 1: intros a b c d [Hc1 Hc2 Hc3] [Hd1 Hd2 Hd3]; only 1: apply Z.divide_antisym; only 1: auto; only 1: auto).	0.516220092773	45
Coq.ZArith.Znumtheory.Zis_gcd_bezout	40
Coq.ZArith.Znumtheory.Zis_gcd_mult	40
Coq.ZArith.Znumtheory.rel_prime_bezout	40
Coq.ZArith.Znumtheory.bezout_rel_prime	40
Coq.ZArith.Znumtheory.Gauss	40
Coq.ZArith.Znumtheory.rel_prime_mult	40
Coq.ZArith.Znumtheory.rel_prime_cross_prod	40
Coq.ZArith.Znumtheory.Zis_gcd_rel_prime	40
Coq.ZArith.Znumtheory.rel_prime_sym	40	28.0	search with cache (only 1: intros a b; only 1: now apply Zis_gcd_sym).	10.5492420197	3671
Coq.ZArith.Znumtheory.rel_prime_div	40
Coq.ZArith.Znumtheory.rel_prime_1	40	1.1.0.0.7	search with cache (only 1: red; only 1: constructor; only 1: apply Z.divide_1_l; only 1: apply Z.divide_1_l; only 1: trivial).	0.932114124298	261
Coq.ZArith.Znumtheory.not_rel_prime_0	40
Coq.ZArith.Znumtheory.rel_prime_mod	40
Coq.ZArith.Znumtheory.rel_prime_mod_rev	40
Coq.ZArith.Znumtheory.Zrel_prime_neq_mod_0	40
Coq.ZArith.Znumtheory.prime_divisors	40
Coq.ZArith.Znumtheory.prime_rel_prime	40
Coq.ZArith.Znumtheory.rel_prime_le_prime	40
Coq.ZArith.Znumtheory.prime_mult	40
Coq.ZArith.Znumtheory.not_prime_0	40	15.2	search with cache (only 1: intros [q Hq]; only 1: discriminate).	0.843513011932	366
Coq.ZArith.Znumtheory.not_prime_1	40	24.3	search with cache (only 1: intros [q Hq]; only 1: discriminate).	4.44329595566	1696
Coq.ZArith.Znumtheory.prime_2	40
Coq.ZArith.Znumtheory.prime_3	40
Coq.ZArith.Znumtheory.prime_ge_2	40
Coq.ZArith.Znumtheory.Z_0_1_more	40
Coq.ZArith.Znumtheory.prime_alt	40
Coq.ZArith.Znumtheory.square_not_prime	40
Coq.ZArith.Znumtheory.prime_div_prime	40
Coq.ZArith.Znumtheory.Zgcd_is_gcd	40
Coq.ZArith.Znumtheory.Zgcd_spec	40
Coq.ZArith.Znumtheory.Zdivide_Zgcd	40	0.14	search with cache (only 1: intros n Hn Hnp; only 1: apply Z.gcd_greatest).	0.225018024445	91
Coq.ZArith.Znumtheory.Zis_gcd_gcd	40
Coq.ZArith.Znumtheory.Zgcd_div_swap0	40
Coq.ZArith.Znumtheory.Zgcd_div_swap	40
Coq.ZArith.Znumtheory.Zgcd_ass	40
Coq.ZArith.Znumtheory.Zgcd_1_rel_prime	40
Coq.ZArith.Znumtheory.rel_prime_dec	40
Coq.ZArith.Znumtheory.prime_dec_aux	40
Coq.ZArith.Znumtheory.prime_dec	40
Coq.ZArith.Znumtheory.not_prime_divide	40
Coq.ZArith.Zdiv.Z_div_mod_POS	40
Coq.ZArith.Zdiv.Z_div_mod	40
Coq.ZArith.Zdiv.Remainder_equiv	40
Coq.ZArith.Zdiv.Z_div_mod_full	40
Coq.ZArith.Zdiv.Z_mod_remainder	40
Coq.ZArith.Zdiv.Z_div_mod_eq	40
Coq.ZArith.Zdiv.Zmod_eq_full	40
Coq.ZArith.Zdiv.Zmod_eq	40	1.11.2.0	search with cache (only 1: intros; only 1: rewrite Z.mul_comm; only 1: assert (Hb' : b <> 0) by now destruct b; only 1: now apply Z.mod_eq).	14.4456350803	2741
Coq.ZArith.Zdiv.Zdiv_eucl_exist	40
Coq.ZArith.Zdiv.Zdiv_mod_unique	40
Coq.ZArith.Zdiv.Zdiv_unique	40
Coq.ZArith.Zdiv.Zmod_unique	40
Coq.ZArith.Zdiv.Zmod_0_l	40	8.0	search with cache (only 1: intros; only 1: tauto).	0.16069984436	23
Coq.ZArith.Zdiv.Zmod_0_r	40	0.0.1.0	search with cache (only 1: destruct a; only 1: auto; only 1: auto; only 1: auto).	0.128564119339	5
Coq.ZArith.Zdiv.Zdiv_0_l	40	7.0	search with cache (only 1: intros; only 1: tauto).	0.109228134155	9
Coq.ZArith.Zdiv.Zdiv_0_r	40	0.0.1.0	search with cache (only 1: destruct a; only 1: auto; only 1: auto; only 1: auto).	0.247366905212	5
Coq.ZArith.Zdiv.Zmod_1_r	40
Coq.ZArith.Zdiv.Zdiv_1_r	40
Coq.ZArith.Zdiv.Z_mod_same_full	40
Coq.ZArith.Zdiv.Z_mod_mult	40
Coq.ZArith.Zdiv.Z_div_pos	40
Coq.ZArith.Zdiv.Z_div_ge0	40	0.0.0.10.0	search with cache (only 1: intros; only 1: Z.swap_greater; only 1: apply Z.div_pos; only 1: auto using Z.gt_lt; only 1: auto using Z.gt_lt).	1.92981004715	581
Coq.ZArith.Zdiv.Z_div_lt	40
Coq.ZArith.Zdiv.Z_div_ge	40
Coq.ZArith.Zdiv.Z_div_le	40	0.0.0.0	search with cache (only 1: intros; only 1: apply Z.div_le_mono; only 1: auto using Z.gt_lt, Z.ge_le; only 1: auto using Z.gt_lt, Z.ge_le).	0.124664068222	4
Coq.ZArith.Zdiv.Z_mult_div_ge	40
Coq.ZArith.Zdiv.Z_mult_div_ge_neg	40
Coq.ZArith.Zdiv.Z_div_exact_full_1	40
Coq.ZArith.Zdiv.Z_div_exact_full_2	40	3.3.0.1.0	search with cache (only 1: intros a b; only 1: intros; only 1: rewrite Z.div_exact; only 1: auto; only 1: auto).	1.57397007942	325
Coq.ZArith.Zdiv.Zmod_le	40
Coq.ZArith.Zdiv.Zdiv_lt_upper_bound	40
Coq.ZArith.Zdiv.Zdiv_le_upper_bound	40
Coq.ZArith.Zdiv.Zdiv_le_lower_bound	40
Coq.ZArith.Zdiv.Zdiv_le_compat_l	40
Coq.ZArith.Zdiv.Zdiv_sgn	40
Coq.ZArith.Zdiv.Z_mod_plus_full	40
Coq.ZArith.Zdiv.Zdiv_opp_opp	40
Coq.ZArith.Zdiv.Zmod_opp_opp	40
Coq.ZArith.Zdiv.Z_mod_zero_opp_full	40
Coq.ZArith.Zdiv.Z_mod_nz_opp_full	40
Coq.ZArith.Zdiv.Z_mod_zero_opp_r	40
Coq.ZArith.Zdiv.Z_mod_nz_opp_r	40
Coq.ZArith.Zdiv.Z_div_zero_opp_full	40
Coq.ZArith.Zdiv.Z_div_nz_opp_full	40
Coq.ZArith.Zdiv.Z_div_zero_opp_r	40
Coq.ZArith.Zdiv.Z_div_nz_opp_r	40
Coq.ZArith.Zdiv.Zdiv_mult_cancel_r	40
Coq.ZArith.Zdiv.Zdiv_mult_cancel_l	40
Coq.ZArith.Zdiv.Zmult_mod_distr_l	40
Coq.ZArith.Zdiv.Zmult_mod_distr_r	40
Coq.ZArith.Zdiv.Zmod_mod	40
Coq.ZArith.Zdiv.Zmult_mod	40
Coq.ZArith.Zdiv.Zplus_mod	40
Coq.ZArith.Zdiv.Zminus_mod	40
Coq.ZArith.Zdiv.Zplus_mod_idemp_l	40
Coq.ZArith.Zdiv.Zplus_mod_idemp_r	40	3.2.0.0	search with cache (only 1: intros; only 1: zero_or_not n; only 1: rewrite Zplus_mod, Zmod_mod, <- Zplus_mod; only 1: auto).	0.566839933395	32
Coq.ZArith.Zdiv.Zminus_mod_idemp_l	40
Coq.ZArith.Zdiv.Zminus_mod_idemp_r	40	0.1.1.1.0	search with cache (only 1: intros; only 1: rewrite Zminus_mod, Zmod_mod, <- Zminus_mod; only 1: replace (a - b) with a + -1 * b; only 1: auto with zarith; only 1: auto with zarith).	0.434961080551	53
Coq.ZArith.Zdiv.Zmult_mod_idemp_l	40
Coq.ZArith.Zdiv.Zmult_mod_idemp_r	40	3.0.0	search with cache (only 1: intros; only 1: rewrite Zmult_mod, Zmod_mod, <- Zmult_mod; only 1: auto).	0.11989402771	15
Coq.ZArith.Zdiv.eqm_refl	40	27.2	search with cache (only 1: intros Hb; only 1: easy).	1.4491250515	1196
Coq.ZArith.Zdiv.eqm_sym	40	0.0	search with cache (only 1: unfold eqm; only 1: auto).	0.0431020259857	2
Coq.ZArith.Zdiv.eqm_trans	40
Coq.ZArith.Zdiv.eqm_setoid	40
Coq.ZArith.Zdiv.Zplus_eqm	40
Coq.ZArith.Zdiv.Zminus_eqm	40
Coq.ZArith.Zdiv.Zmult_eqm	40
Coq.ZArith.Zdiv.Zopp_eqm	40
Coq.ZArith.Zdiv.Zmod_eqm	40	4.2.1.0	search with cache (only 1: repeat red; only 1: intros; only 1: repeat rewrite Zmod_mod; only 1: auto).	0.359467029572	74
Coq.ZArith.Zdiv.Zdiv_Zdiv	40
Coq.ZArith.Zdiv.Zmod_div	40
Coq.ZArith.Zdiv.Zdiv_mult_le	40
Coq.ZArith.Zdiv.Zmod_divides	40
Coq.ZArith.Zdiv.Zmod_odd	40
Coq.ZArith.Zdiv.Zmod_even	40
Coq.ZArith.Zdiv.Zodd_mod	40	0.2.0	search with cache (only 1: intros a; only 1: rewrite Zmod_odd, Zodd_even_bool; only 1: now destruct Z.even).	0.0987272262573	5
Coq.ZArith.Zdiv.Zeven_mod	40	0.2.0	search with cache (only 1: intros a; only 1: rewrite Zmod_odd, Zodd_even_bool; only 1: now destruct Z.even).	0.27198600769	13
Coq.ZArith.Zdiv.Z_mod_same	40	1.2.19.2	search with cache (only 1: intros; only 1: rewrite Z.mod_divide; only 1: reflexivity; only 1: now intros ->).	4.90646910667	2791
Coq.ZArith.Zdiv.Z_div_same	40
Coq.ZArith.Zdiv.Z_div_plus	40
Coq.ZArith.Zdiv.Z_div_mult	40
Coq.ZArith.Zdiv.Z_mod_plus	40	0.0.1.2	search with cache (only 1: intros; only 1: zero_or_not c; only 1: apply Z.mod_add; only 1: auto using Z.gt_lt, Z.ge_le).	0.313173770905	26
Coq.ZArith.Zdiv.Z_div_exact_1	40	0.2.0.4.0	search with cache (only 1: intros a b; only 1: zero_or_not b; only 1: rewrite Z.div_exact; only 1: now destruct b; only 1: tauto).	0.775285005569	131
Coq.ZArith.Zdiv.Z_div_exact_2	40	0.3.1.3.5.1	search with cache (only 1: intros a b; only 1: zero_or_not b; only 1: now rewrite Z.mul_0_r; only 1: rewrite Z.div_exact; only 1: now destruct b; only 1: tauto).	7.8073527813	1886
Coq.ZArith.Zdiv.Z_mod_zero_opp	40	3.3.1.0.0	search with cache (only 1: intros; only 1: zero_or_not b; only 1: apply Z.mod_opp_l_z; only 1: now destruct b; only 1: now destruct b).	0.830111026764	186
Coq.ZArith.Zdiv.Zmod_POS_correct	40
Coq.ZArith.Zdiv.Zmod'_correct	40
Coq.ZArith.Zdiv.Zdiv_eucl_extended	40
Coq.ZArith.Zdiv.div_Zdiv	40
Coq.ZArith.Zdiv.mod_Zmod	40	0.0.0.0.0.8.12.73.6	search with cache (only 1: intros; only 1: eapply Zmod_unique_full; only 1: red; only 1: left; only 1: split; only 1: auto with zarith; only 1: now apply inj_lt, Nat.mod_upper_bound; only 1: rewrite <- Nat2Z.inj_mul, <- Nat2Z.inj_add; only 1: now apply inj_eq, Nat.div_mod).	39.8904669285	27669
Coq.ZArith.Zcomplements.floor_gt0	40	1.0.0.0	search with cache (only 1: intros; only 1: Z.swap_greater; only 1: assert (EQ : 0 <= Z.pred (Z.pos p)) by now apply Z.lt_le_pred; only 1: easy).	0.092542886734	5
Coq.ZArith.Zcomplements.floor_ok	40
Coq.ZArith.Zcomplements.Z_lt_abs_rec	40
Coq.ZArith.Zcomplements.Z_lt_abs_induction	40
Coq.ZArith.Zcomplements.Zcase_sign	40
Coq.ZArith.Zcomplements.sqr_pos	40	1.2.2.4.5.23.0	search with cache (only 1: Z.swap_greater; only 1: destruct n; only 1: auto with zarith; only 1: auto with zarith; only 1: simpl; only 1: assert (EQ : 0 <= Z.pred (Z.pos p)) by now apply Z.lt_le_pred; only 1: easy).	33.8487730026	12640
Coq.ZArith.Zcomplements.Zlength_correct	40
Coq.ZArith.Zcomplements.Zlength_nil	40	0.0	search with cache (only 1: unfold Zlength; only 1: auto with zarith).	0.0631699562073	2
Coq.ZArith.Zcomplements.Zlength_cons	40
Coq.ZArith.Zcomplements.Zlength_nil_inv	40
Coq.ZArith.Zpower.Zpower_nat_0_r	40	0	search with cache (only 1: trivial).	0.0679919719696	1
Coq.ZArith.Zpower.Zpower_nat_succ_r	40	0	search with cache (only 1: reflexivity).	0.0571718215942	1
Coq.ZArith.Zpower.Zpower_nat_is_exp	40
Coq.ZArith.Zpower.Zpower_pos_nat	40
Coq.ZArith.Zpower.Zpower_nat_Z	40
Coq.ZArith.Zpower.Zpower_nat_Zpower	40	1.6.11.1.2	search with cache (only 1: induction n; only 1: now f_equal; only 1: intros; only 1: apply Pos2Nat.inj_iter; only 1: now f_equal).	7.14161205292	2646
Coq.ZArith.Zpower.Zpower_pos_is_exp	40
Coq.ZArith.Zpower.Zpower_exp	40
Coq.ZArith.Zpower.shift_nat_equiv	40	5	search with cache (only 1: now f_equal).	0.0288851261139	6
Coq.ZArith.Zpower.shift_pos_equiv	40	0	search with cache (only 1: reflexivity).	0.0280129909515	1
Coq.ZArith.Zpower.shift_equiv	40
Coq.ZArith.Zpower.two_power_nat_equiv	40
Coq.ZArith.Zpower.two_power_pos_equiv	40	4	search with cache (only 1: now apply Pos.iter_swap_gen).	0.0636239051819	5
Coq.ZArith.Zpower.two_p_equiv	40	2.0.1.41	search with cache (only 1: destruct x; only 1: trivial; only 1: now apply Pos.iter_swap_gen; only 1: trivial).	1.43216109276	1363
Coq.ZArith.Zpower.two_power_nat_S	40	2.0.1.0.1	search with cache (only 1: induction n; only 1: trivial; only 1: induction n; only 1: trivial; only 1: trivial).	0.118530988693	12
Coq.ZArith.Zpower.shift_nat_plus	40	14.0.1.5	search with cache (only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: now f_equal).	2.9384291172	1066
Coq.ZArith.Zpower.shift_nat_correct	40
Coq.ZArith.Zpower.two_power_nat_correct	40
Coq.ZArith.Zpower.shift_pos_nat	40	4	search with cache (only 1: apply Pos2Nat.inj_iter).	0.0317049026489	5
Coq.ZArith.Zpower.two_power_pos_nat	40
Coq.ZArith.Zpower.shift_pos_correct	40
Coq.ZArith.Zpower.two_power_pos_correct	40	1	search with cache (only 1: now apply Pos.iter_swap_gen).	0.0306599140167	2
Coq.ZArith.Zpower.two_power_pos_is_exp	40
Coq.ZArith.Zpower.two_p_is_exp	40
Coq.ZArith.Zpower.two_p_gt_ZERO	40	0.0.4.1	search with cache (only 1: destruct x; only 1: easy; only 1: easy; only 1: easy).	0.26215004921	31
Coq.ZArith.Zpower.two_p_S	40
Coq.ZArith.Zpower.two_p_pred	40
Coq.ZArith.Zpower.Zdiv_rest_correct1	40
Coq.ZArith.Zpower.Zdiv_rest_correct2	40
Coq.ZArith.Zpower.Zdiv_rest_correct	40
Coq.ZArith.Zpower.Zdiv_rest_ok	40
Coq.ZArith.Zpower.Zdiv_rest_shiftr	40
Coq.ZArith.Wf_Z.Z_of_nat_complete	40
Coq.ZArith.Wf_Z.Z_of_nat_complete_inf	40	0.1.0	search with cache (only 1: exists (Z.to_nat x); only 1: symmetry; only 1: now apply Z2Nat.id).	0.0669479370117	4
Coq.ZArith.Wf_Z.Z_of_nat_prop	40
Coq.ZArith.Wf_Z.Z_of_nat_set	40
Coq.ZArith.Wf_Z.natlike_ind	40
Coq.ZArith.Wf_Z.natlike_rec	40
Coq.ZArith.Wf_Z.R_wf	40
Coq.ZArith.Wf_Z.natlike_rec2	40
Coq.ZArith.Wf_Z.natlike_rec3	40
Coq.ZArith.Wf_Z.Zlt_0_rec	40
Coq.ZArith.Wf_Z.Zlt_0_ind	40
Coq.ZArith.Wf_Z.Z_lt_rec	40
Coq.ZArith.Wf_Z.Z_lt_induction	40
Coq.ZArith.Wf_Z.Zlt_lower_bound_rec	40
Coq.ZArith.Wf_Z.Zlt_lower_bound_ind	40
Coq.ZArith.Zabs.Zabs_ind	40
Coq.ZArith.Zabs.Zabs_intro	40	5.0	search with cache (only 1: intros; only 1: now destruct n).	0.0653300285339	7
Coq.ZArith.Zabs.Zabs_dec	40
Coq.ZArith.Zabs.Zabs_spec	40
Coq.ZArith.Zabs.Zsgn_spec	40
Coq.ZArith.Zabs.Zabs_nat_le	40
Coq.ZArith.Zabs.Zabs_nat_lt	40
Coq.ZArith.Zbool.Zle_cases	40
Coq.ZArith.Zbool.Zlt_cases	40
Coq.ZArith.Zbool.Zge_cases	40
Coq.ZArith.Zbool.Zgt_cases	40
Coq.ZArith.Zbool.Zle_bool_imp_le	40	0.12.0	search with cache (only 1: case Z.leb_spec; only 1: auto; only 1: discriminate).	0.502112865448	233
Coq.ZArith.Zbool.Zle_imp_le_bool	40	0	search with cache (only 1: apply Z.leb_le).	0.040463924408	1
Coq.ZArith.Zbool.Zle_bool_antisym	40
Coq.ZArith.Zbool.Zle_bool_trans	40	1.0.1	search with cache (only 1: rewrite !Z.leb_le; only 1: intros; only 1: Z.order).	0.0489001274109	5
Coq.ZArith.Zbool.Zle_bool_total	40
Coq.ZArith.Zbool.Zle_bool_plus_mono	40
Coq.ZArith.Zbool.Zone_pos	40	3	search with cache (only 1: trivial).	0.0192651748657	4
Coq.ZArith.Zbool.Zone_min_pos	40
Coq.ZArith.Zbool.Zle_is_le_bool	40	2.1	search with cache (only 1: rewrite !Z.leb_le; only 1: now Z.swap_greater).	0.0568511486053	5
Coq.ZArith.Zbool.Zge_is_le_bool	40	0.2.1.1.1	search with cache (only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: rewrite !Z.leb_le; only 1: now Z.swap_greater).	0.103248119354	12
Coq.ZArith.Zbool.Zlt_is_lt_bool	40
Coq.ZArith.Zbool.Zgt_is_gt_bool	40	0.4.1.0	search with cache (only 1: rewrite Z.gtb_ltb; only 1: symmetry; only 1: Z.swap_greater; only 1: apply Z.ltb_lt).	0.177281141281	26
Coq.ZArith.Zbool.Zlt_is_le_bool	40
Coq.ZArith.Zbool.Zgt_is_le_bool	40	0.1.0	search with cache (only 1: rewrite Z.leb_le; only 1: Z.swap_greater; only 1: apply Z.lt_le_pred).	0.0402879714966	4
Coq.ZArith.Zbool.Zeq_is_eq_bool	40
Coq.ZArith.Zbool.Zeq_bool_eq	40
Coq.ZArith.Zbool.Zeq_bool_neq	40
Coq.ZArith.Zbool.Zeq_bool_if	40
Coq.ZArith.ZArith_dec.Dcompare_inf	40
Coq.ZArith.ZArith_dec.Zcompare_rect	40	4.4.4.0	search with cache (only 1: destruct (n ?= m); only 1: auto; only 1: auto; only 1: auto).	12.0032820702	3498
Coq.ZArith.ZArith_dec.Zcompare_rec	40	2.2.2.0	search with cache (only 1: destruct (n ?= m); only 1: auto; only 1: auto; only 1: auto).	1.57168984413	270
Coq.ZArith.ZArith_dec.Z_lt_dec	40
Coq.ZArith.ZArith_dec.Z_le_dec	40
Coq.ZArith.ZArith_dec.Z_gt_dec	40
Coq.ZArith.ZArith_dec.Z_ge_dec	40
Coq.ZArith.ZArith_dec.Z_lt_ge_dec	40	0.0.0.0.3.0	search with cache (only 1: unfold Z.ge; only 1: unfold Z.lt; only 1: case Z.compare; only 1: now left || now right; only 1: now left || now right; only 1: now left || now right).	1.37113595009	167
Coq.ZArith.ZArith_dec.Z_lt_le_dec	40
Coq.ZArith.ZArith_dec.Z_le_gt_dec	40	0.0.0.0.1.0	search with cache (only 1: unfold Z.gt; only 1: unfold Z.le; only 1: case Z.compare; only 1: now left || now right; only 1: now left || now right; only 1: now left || now right).	0.730090856552	88
Coq.ZArith.ZArith_dec.Z_gt_le_dec	40	0.0.0.0.3.5	search with cache (only 1: unfold Z.gt; only 1: unfold Z.le; only 1: case Z.compare; only 1: now left || now right; only 1: now left || now right; only 1: now left || now right).	9.15594387054	1603
Coq.ZArith.ZArith_dec.Z_ge_lt_dec	40	0.0.0.0.1.3	search with cache (only 1: unfold Z.lt; only 1: unfold Z.ge; only 1: case Z.compare; only 1: now left || now right; only 1: now left || now right; only 1: now left || now right).	1.10996985435	119
Coq.ZArith.ZArith_dec.Z_le_lt_eq_dec	40
Coq.ZArith.ZArith_dec.Zlt_cotrans	40
Coq.ZArith.ZArith_dec.Zlt_cotrans_pos	40
Coq.ZArith.ZArith_dec.Zlt_cotrans_neg	40
Coq.ZArith.ZArith_dec.not_Zeq_inf	40
Coq.ZArith.ZArith_dec.Z_dec	40
Coq.ZArith.ZArith_dec.Z_dec'	40
Coq.ZArith.ZArith_dec.Z_zerop	40
Coq.ZArith.Zmax.Zmax_spec	40
Coq.ZArith.Zmax.Zmax_left	40
Coq.ZArith.Zmax.Zpos_max_1	40	0.0.0.80	search with cache (only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	4.67041492462	6103
Coq.ZArith.Zmin.Zmin_spec	40
Coq.ZArith.Zmin.Zmin_irreducible	40
Coq.ZArith.Zmin.Zmin_le_prime_inf	40
Coq.ZArith.Zmin.Zpos_min_1	40	0.0.0.81	search with cache (only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	13.8178188801	21192
Coq.ZArith.Zmisc.iter_nat_of_Z	40
Coq.ZArith.auxiliary.Zne_left	40
Coq.ZArith.auxiliary.Zegal_left	40	0	search with cache (only 1: now rewrite <- Z.sub_move_0_r).	0.0518109798431	1
Coq.ZArith.auxiliary.Zle_left	40	41	search with cache (only 1: apply Z.le_0_sub).	1.3955271244	1054
Coq.ZArith.auxiliary.Zle_left_rev	40	0	search with cache (only 1: apply Z.le_0_sub).	0.0443170070648	1
Coq.ZArith.auxiliary.Zlt_left_rev	40	19	search with cache (only 1: apply Z.lt_0_sub).	2.36738681793	603
Coq.ZArith.auxiliary.Zlt_left_lt	40	0	search with cache (only 1: apply Z.lt_0_sub).	0.0435709953308	1
Coq.ZArith.auxiliary.Zlt_left	40
Coq.ZArith.auxiliary.Zge_left	40	0.18	search with cache (only 1: Z.swap_greater; only 1: apply Z.le_0_sub).	6.26446294785	1084
Coq.ZArith.auxiliary.Zgt_left	40	0.2.0.2.1	search with cache (only 1: intros; only 1: rewrite Z.add_shuffle0; only 1: change_no_check (-1) with (- Z.succ 0); only 1: Z.swap_greater; only 1: now apply Z.le_0_sub, Z.le_succ_l, Z.lt_0_sub).	0.446014165878	55
Coq.ZArith.auxiliary.Zgt_left_gt	40	1.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.lt_0_sub).	0.176962137222	3
Coq.ZArith.auxiliary.Zgt_left_rev	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.lt_0_sub).	0.0858271121979	2
Coq.ZArith.auxiliary.Zle_mult_approx	40
Coq.ZArith.auxiliary.Zmult_le_approx	40
Coq.ZArith.Zorder.Ztrichotomy_inf	40
Coq.ZArith.Zorder.Ztrichotomy	40
Coq.ZArith.Zorder.dec_Zne	40
Coq.ZArith.Zorder.dec_Zgt	40
Coq.ZArith.Zorder.dec_Zge	40
Coq.ZArith.Zorder.not_Zeq	40
Coq.ZArith.Zorder.Zle_not_lt	40	3	search with cache (only 1: Z.order).	0.0396199226379	4
Coq.ZArith.Zorder.Zlt_not_le	40	4	search with cache (only 1: Z.order).	0.0563149452209	5
Coq.ZArith.Zorder.Zle_not_gt	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.le_ngt).	0.113803863525	2
Coq.ZArith.Zorder.Zgt_not_le	40	0.2	search with cache (only 1: Z.swap_greater; only 1: apply Z.lt_nge).	0.110656023026	4
Coq.ZArith.Zorder.Znot_ge_lt	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.lt_nge).	0.0797381401062	2
Coq.ZArith.Zorder.Znot_lt_ge	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.le_ngt).	0.0891659259796	2
Coq.ZArith.Zorder.Znot_gt_le	40	0	search with cache (only 1: trivial).	0.0599939823151	1
Coq.ZArith.Zorder.Znot_le_gt	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.nle_gt).	0.0883920192719	2
Coq.ZArith.Zorder.not_Zne	40	11.1.0.4	search with cache (only 1: destruct (Z.eq_decidable n m); only 1: subst; only 1: auto; only 1: now Z.swap_greater).	3.42819404602	905
Coq.ZArith.Zorder.Zgt_asym	40	15.1	search with cache (only 1: Z.swap_greater; only 1: Z.order).	2.60934114456	565
Coq.ZArith.Zorder.Zgt_irrefl	40	9.5.1	search with cache (only 1: Z.swap_greater; only 1: apply Z.le_ngt; only 1: Z.order).	1.82548713684	446
Coq.ZArith.Zorder.Zle_lt_or_eq	40
Coq.ZArith.Zorder.Zgt_trans	40	0.0	search with cache (only 1: Z.swap_greater; only 1: now transitivity m).	0.0607008934021	2
Coq.ZArith.Zorder.Zle_gt_trans	40	4.1	search with cache (only 1: Z.swap_greater; only 1: Z.order).	0.0880489349365	7
Coq.ZArith.Zorder.Zgt_le_trans	40	0.0	search with cache (only 1: Z.swap_greater; only 1: Z.order).	0.103917121887	2
Coq.ZArith.Zorder.Zge_trans	40	0.5	search with cache (only 1: Z.swap_greater; only 1: Z.order).	0.344464063644	19
Coq.ZArith.Zorder.Zsucc_le_compat	40
Coq.ZArith.Zorder.Zsucc_lt_compat	40
Coq.ZArith.Zorder.Zsucc_gt_compat	40	0.10	search with cache (only 1: Z.swap_greater; only 1: apply Z.succ_lt_mono).	0.901487112045	125
Coq.ZArith.Zorder.Zsucc_gt_reg	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.succ_lt_mono).	0.0587480068207	2
Coq.ZArith.Zorder.Zsucc_le_reg	40	0	search with cache (only 1: apply Z.succ_le_mono).	0.0630769729614	1
Coq.ZArith.Zorder.Zsucc_lt_reg	40	0	search with cache (only 1: apply Z.succ_lt_mono).	0.0635659694672	1
Coq.ZArith.Zorder.Zgt_succ	40	1.0.0.0.0.0.0.0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.succ_lt_mono; only 1: apply Z.succ_lt_mono; only 1: apply Z.succ_lt_mono; only 1: apply Z.succ_lt_mono; only 1: apply Z.succ_lt_mono; only 1: apply Z.succ_lt_mono; only 1: apply Z.succ_lt_mono; only 1: apply Z.lt_succ_diag_r).	0.250544071198	11
Coq.ZArith.Zorder.Znot_le_succ	40	1.0.0.0.0.0.0.1	search with cache (only 1: apply Z.nle_gt; only 1: apply Z.succ_lt_mono; only 1: apply Z.succ_lt_mono; only 1: apply Z.succ_lt_mono; only 1: apply Z.succ_lt_mono; only 1: apply Z.succ_lt_mono; only 1: apply Z.succ_lt_mono; only 1: apply Z.lt_succ_diag_r).	0.190274000168	11
Coq.ZArith.Zorder.Zgt_le_succ	40	10.1	search with cache (only 1: Z.swap_greater; only 1: apply Z.le_succ_l).	0.466975927353	91
Coq.ZArith.Zorder.Zle_gt_succ	40
Coq.ZArith.Zorder.Zle_lt_succ	40	0	search with cache (only 1: apply Z.lt_succ_r).	0.063138961792	1
Coq.ZArith.Zorder.Zlt_le_succ	40	0	search with cache (only 1: apply Z.le_succ_l).	0.0389230251312	1
Coq.ZArith.Zorder.Zgt_succ_le	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.lt_succ_r).	0.0607378482819	2
Coq.ZArith.Zorder.Zlt_succ_le	40	0	search with cache (only 1: apply Z.lt_succ_r).	0.0385510921478	1
Coq.ZArith.Zorder.Zle_succ_gt	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.le_succ_l).	0.0630009174347	2
Coq.ZArith.Zorder.Zle_succ_le	40
Coq.ZArith.Zorder.Zgt_succ_pred	40
Coq.ZArith.Zorder.Zlt_succ_pred	40	0	search with cache (only 1: apply Z.lt_succ_lt_pred).	0.0639982223511	1
Coq.ZArith.Zorder.Zlt_0_le_0_pred	40
Coq.ZArith.Zorder.Zgt_0_le_0_pred	40	0.1	search with cache (only 1: Z.swap_greater; only 1: apply Z.lt_le_pred).	0.102216959	3
Coq.ZArith.Zorder.Zle_neg_pos	40	0	search with cache (only 1: easy).	0.0712268352509	1
Coq.ZArith.Zorder.Zgt_pos_0	40	0.2.0	search with cache (only 1: symmetry; only 1: simpl; only 1: now subst).	0.103094100952	5
Coq.ZArith.Zorder.Zle_0_pos	40	2	search with cache (only 1: easy).	0.0589900016785	3
Coq.ZArith.Zorder.Zlt_neg_0	40	0	search with cache (only 1: easy).	0.0697641372681	1
Coq.ZArith.Zorder.Zle_0_nat	40	2.9.2.47	search with cache (only 1: induction n; only 1: easy; only 1: cbn; only 1: easy).	7.13669705391	4817
Coq.ZArith.Zorder.Zgt_succ_gt_or_eq	40
Coq.ZArith.Zorder.Zplus_gt_compat_l	40
Coq.ZArith.Zorder.Zplus_gt_compat_r	40
Coq.ZArith.Zorder.Zplus_le_compat_l	40
Coq.ZArith.Zorder.Zplus_le_compat_r	40
Coq.ZArith.Zorder.Zplus_lt_compat_l	40	0	search with cache (only 1: apply Z.add_lt_mono_l).	0.0513851642609	1
Coq.ZArith.Zorder.Zplus_lt_compat_r	40	1	search with cache (only 1: apply Z.add_lt_mono_r).	0.0534770488739	2
Coq.ZArith.Zorder.Zplus_le_reg_l	40	1	search with cache (only 1: apply Z.add_le_mono_l).	0.0412149429321	2
Coq.ZArith.Zorder.Zplus_le_reg_r	40	0	search with cache (only 1: apply Z.add_le_mono_r).	0.0514540672302	1
Coq.ZArith.Zorder.Zplus_lt_reg_l	40	0	search with cache (only 1: apply Z.add_lt_mono_l).	0.0589239597321	1
Coq.ZArith.Zorder.Zplus_lt_reg_r	40	1	search with cache (only 1: apply Z.add_lt_mono_r).	0.048330783844	2
Coq.ZArith.Zorder.Zplus_gt_reg_l	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.add_lt_mono_l).	0.0950779914856	2
Coq.ZArith.Zorder.Zplus_gt_reg_r	40	1.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.add_lt_mono_r).	0.0696430206299	3
Coq.ZArith.Zorder.Zmult_le_compat_r	40
Coq.ZArith.Zorder.Zmult_le_compat_l	40
Coq.ZArith.Zorder.Zmult_lt_compat_r	40
Coq.ZArith.Zorder.Zmult_gt_compat_r	40	0.10	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).	2.23485183716	545
Coq.ZArith.Zorder.Zmult_gt_0_lt_compat_r	40	0.5	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).	0.476589918137	68
Coq.ZArith.Zorder.Zmult_gt_0_le_compat_r	40	0.4.2.5.0	search with cache (only 1: intros; only 1: destruct p; only 1: now apply Z.mul_le_mono_nonneg_r; only 1: now apply Z.mul_le_mono_nonneg_r; only 1: discriminate).	2.35861897469	678
Coq.ZArith.Zorder.Zmult_lt_0_le_compat_r	40	0	search with cache (only 1: apply Z.mul_le_mono_pos_r).	0.0469679832458	1
Coq.ZArith.Zorder.Zmult_gt_0_lt_compat_l	40
Coq.ZArith.Zorder.Zmult_lt_compat_l	40	0	search with cache (only 1: apply Z.mul_lt_mono_pos_l).	0.0461781024933	1
Coq.ZArith.Zorder.Zmult_gt_compat_l	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_l).	0.100255012512	2
Coq.ZArith.Zorder.Zmult_ge_compat_r	40	2.0.0	search with cache (only 1: Z.swap_greater; only 1: intros; only 1: now apply Z.mul_le_mono_nonneg_r).	0.180883169174	5
Coq.ZArith.Zorder.Zmult_ge_compat_l	40	1.0.0	search with cache (only 1: Z.swap_greater; only 1: intros; only 1: now apply Z.mul_le_mono_nonneg_l).	0.162725925446	4
Coq.ZArith.Zorder.Zmult_ge_compat	40
Coq.ZArith.Zorder.Zmult_le_compat	40	1.0	search with cache (only 1: intros; only 1: now apply Z.mul_le_mono_nonneg).	0.0780029296875	3
Coq.ZArith.Zorder.Zmult_gt_0_lt_reg_r	40	1.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).	0.0655798912048	3
Coq.ZArith.Zorder.Zmult_lt_reg_r	40	1	search with cache (only 1: apply Z.mul_lt_mono_pos_r).	0.0677440166473	2
Coq.ZArith.Zorder.Zmult_le_reg_r	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_le_mono_pos_r).	0.0723671913147	2
Coq.ZArith.Zorder.Zmult_lt_0_le_reg_r	40	0	search with cache (only 1: apply Z.mul_le_mono_pos_r).	0.0620350837708	1
Coq.ZArith.Zorder.Zmult_ge_reg_r	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_le_mono_pos_r).	0.133790969849	2
Coq.ZArith.Zorder.Zmult_gt_reg_r	40	1.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).	0.195138931274	3
Coq.ZArith.Zorder.Zmult_lt_compat	40
Coq.ZArith.Zorder.Zmult_lt_compat2	40
Coq.ZArith.Zorder.Zmult_gt_0_compat	40	3.0.26	search with cache (only 1: rewrite Z.mul_comm; only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).	12.9241199493	5476
Coq.ZArith.Zorder.Zmult_gt_0_le_0_compat	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_le_mono_pos_r).	0.106206893921	2
Coq.ZArith.Zorder.Zmult_le_0_reg_r	40
Coq.ZArith.Zorder.Zmult_lt_0_reg_r	40
Coq.ZArith.Zorder.Zmult_gt_0_lt_0_reg_r	40	4.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_pos_cancel_r).	0.117045879364	6
Coq.ZArith.Zorder.Zmult_gt_0_reg_l	40	4.0.30	search with cache (only 1: rewrite Z.mul_comm; only 1: Z.swap_greater; only 1: apply Z.mul_pos_cancel_r).	30.2496750355	14637
Coq.ZArith.Zorder.Zlt_square_simpl	40
Coq.ZArith.Zorder.Zgt_square_simpl	40	2.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.square_lt_simpl_nonneg).	0.0833361148834	4
Coq.ZArith.Zorder.Zeq_plus_swap	40
Coq.ZArith.Zorder.Zlt_0_minus_lt	40
Coq.ZArith.Zorder.Zle_0_minus_le	40
Coq.ZArith.Zorder.Zle_minus_le_0	40	0	search with cache (only 1: apply Z.le_0_sub).	0.060173034668	1
Coq.ZArith.Zcompare.Zcompare_Gt_trans	40
Coq.ZArith.Zcompare.Zcompare_opp	40
Coq.ZArith.Zcompare.Zcompare_Gt_spec	40
Coq.ZArith.Zcompare.Zcompare_plus_compat	40
Coq.ZArith.Zcompare.Zplus_compare_compat	40
Coq.ZArith.Zcompare.Zcompare_succ_Gt	40
Coq.ZArith.Zcompare.Zcompare_Gt_not_Lt	40
Coq.ZArith.Zcompare.Zcompare_succ_compat	40
Coq.ZArith.Zcompare.Zcompare_mult_compat	40
Coq.ZArith.Zcompare.Zmult_compare_compat_l	40
Coq.ZArith.Zcompare.Zmult_compare_compat_r	40
Coq.ZArith.Zcompare.Zcompare_elim	40
Coq.ZArith.Zcompare.Zcompare_eq_case	40
Coq.ZArith.Zcompare.Zle_compare	40
Coq.ZArith.Zcompare.Zlt_compare	40	1.0.3.0.0	search with cache (only 1: intros; only 1: case Z.compare_spec; only 1: Z.order; only 1: trivial; only 1: Z.order).	0.0866439342499	9
Coq.ZArith.Zcompare.Zge_compare	40	1.1.0.4.0	search with cache (only 1: intros x y H; only 1: case Z.compare_spec; only 1: now f_equal; only 1: now f_equal; only 1: now f_equal).	1.05676198006	108
Coq.ZArith.Zcompare.Zgt_compare	40	0.1	search with cache (only 1: intros x y H; only 1: now rewrite H).	0.152350902557	22
Coq.ZArith.Zeven.Zeven_equiv	40
Coq.ZArith.Zeven.Zodd_equiv	40
Coq.ZArith.Zeven.Zeven_bool_iff	40
Coq.ZArith.Zeven.Zodd_bool_iff	40
Coq.ZArith.Zeven.Zodd_even_bool	40
Coq.ZArith.Zeven.Zeven_odd_bool	40
Coq.ZArith.Zeven.Zeven_odd_dec	40
Coq.ZArith.Zeven.Zeven_dec	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: destruct n as [| p| p]; only 1: simpl; only 1: now left || now right; only 1: destruct p; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right; only 1: destruct p; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right).	36.8378121853	6743
Coq.ZArith.Zeven.Zodd_dec	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: destruct n as [| p| p]; only 1: simpl; only 1: now left || now right; only 1: destruct p; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right; only 1: destruct p; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right).	23.6737561226	4624
Coq.ZArith.Zeven.Zeven_not_Zodd	40
Coq.ZArith.Zeven.Zodd_not_Zeven	40	0.0.0.0.0	search with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd; only 1: destruct Z.odd; only 1: intuition; only 1: intuition).	0.264611959457	5
Coq.ZArith.Zeven.Zeven_Sn	40
Coq.ZArith.Zeven.Zodd_Sn	40
Coq.ZArith.Zeven.Zeven_pred	40
Coq.ZArith.Zeven.Zodd_pred	40
Coq.ZArith.Zeven.Zeven_div2	40
Coq.ZArith.Zeven.Zodd_div2	40
Coq.ZArith.Zeven.Zquot2_odd_eqn	40
Coq.ZArith.Zeven.Zeven_quot2	40	0	search with cache (only 1: now destruct n as [| [p| p| ]| [p| p| ]]).	0.0792820453644	1
Coq.ZArith.Zeven.Zodd_quot2	40	0	search with cache (only 1: now destruct n as [| [p| p| ]| [p| p| ]]).	0.0857119560242	1
Coq.ZArith.Zeven.Zodd_quot2_neg	40	4.0.0.1.0	search with cache (only 1: intros Hn Hn'; only 1: apply Zodd_bool_iff in Hn'; only 1: rewrite (Zquot2_odd_eqn n)  at 1; only 1: rewrite Hn'; only 1: now destruct n as [| [p| p| ]| [p| p| ]]).	0.626452922821	15
Coq.ZArith.Zeven.Zquot2_opp	40	5	search with cache (only 1: now destruct n as [| [p| p| ]| [p| p| ]]).	0.242333173752	20
Coq.ZArith.Zeven.Zquot2_quot	40
Coq.ZArith.Zeven.Z_modulo_2	40
Coq.ZArith.Zeven.Zsplit2	40
Coq.ZArith.Zeven.Zeven_ex	40	0.0.3	search with cache (only 1: intros Hn; only 1: exists (Z.div2 n); only 1: exact (Zeven_div2 n Hn)).	0.340445041656	24
Coq.ZArith.Zeven.Zodd_ex	40	0.0.10	search with cache (only 1: intros Hn; only 1: exists (Z.div2 n); only 1: exact (Zodd_div2 n Hn)).	6.22939181328	370
Coq.ZArith.Zeven.Zeven_2p	40	0.0.0.0.1.0.1.3.6	search with cache (only 1: boolify_even_odd; only 1: simpl; only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).	1.550978899	432
Coq.ZArith.Zeven.Zodd_2p_plus_1	40	0.0.0.0.0.1.0.0.0.7.9.27.5	search with cache (only 1: boolify_even_odd; only 1: simpl; only 1: destruct p; only 1: now destruct Hn || easy; only 1: simpl; only 1: intuition; only 1: simpl; only 1: destruct p; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: intuition).	12.0725808144	4479
Coq.ZArith.Zeven.Zeven_plus_Zodd	40
Coq.ZArith.Zeven.Zeven_plus_Zeven	40	1.2.0.2.0.0	search with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: intros Ha Hb; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: now rewrite Z.odd_add, Ha, Hb).	0.764516115189	86
Coq.ZArith.Zeven.Zodd_plus_Zeven	40	1.0.0.0	search with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: intros Ha Hb; only 1: now rewrite Z.odd_add, Ha, Hb).	0.268730163574	5
Coq.ZArith.Zeven.Zodd_plus_Zodd	40	1.0.0.0	search with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: intros Ha Hb; only 1: now rewrite Z.odd_add, Ha, Hb).	0.201421022415	5
Coq.ZArith.Zeven.Zeven_mult_Zeven_l	40
Coq.ZArith.Zeven.Zeven_mult_Zeven_r	40
Coq.ZArith.Zeven.Zodd_mult_Zodd	40
Coq.ZArith.Znat.nat_N_Z	40	0.1.2.3	search with cache (only 1: induction n; only 1: now f_equal; only 1: simpl; only 1: trivial).	0.229362010956	15
Coq.ZArith.Znat.N_nat_Z	40	0.1.0.2.2.1.2.1.1.41	search with cache (only 1: induction n; only 1: trivial; only 1: simpl N.to_nat; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: apply Pos2Nat.inj; only 1: rewrite H; only 1: apply SuccNat2Pos.id_succ).	6.04389405251	4328
Coq.ZArith.Znat.positive_nat_Z	40	0.0.0.0.0	search with cache (only 1: destruct (Pos2Nat.is_succ p) as (m, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv).	0.148550033569	5
Coq.ZArith.Znat.positive_N_Z	40	0	search with cache (only 1: trivial).	0.0597460269928	1
Coq.ZArith.Znat.positive_N_nat	40	1.2	search with cache (only 1: simpl; only 1: trivial).	0.0955920219421	5
Coq.ZArith.Znat.positive_nat_N	40	0.1.0.0.0.0.1	search with cache (only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: apply Pos2Nat.inj; only 1: rewrite H; only 1: apply SuccNat2Pos.id_succ).	0.294672012329	9
Coq.ZArith.Znat.Z_N_nat	40	0.0.0.3	search with cache (only 1: induction n; only 1: now f_equal; only 1: trivial; only 1: trivial).	0.113909006119	7
Coq.ZArith.Znat.Z_nat_N	40	0.1.0.0.0.1.1.0.21	search with cache (only 1: induction n; only 1: now f_equal; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: simpl; only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv; only 1: trivial).	3.36086297035	960
Coq.ZArith.Znat.Zabs_N_nat	40	0	search with cache (only 1: now destruct n).	0.0602478981018	1
Coq.ZArith.Znat.Zabs_nat_N	40	1.0.1.0.0.0.1	search with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply positive_nat_N; only 1: simpl; only 1: apply positive_nat_N).	0.280707836151	10
Coq.ZArith.Znat.N2Z.id	40	0.0.1.0	search with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: trivial).	0.0998239517212	5
Coq.ZArith.Znat.N2Z.inj	40
Coq.ZArith.Znat.N2Z.inj_iff	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.3	search with cache (only 1: split; only 1: destruct n, m; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: destruct n, m; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence).	25.2648949623	10437
Coq.ZArith.Znat.N2Z.is_nonneg	40	6	search with cache (only 1: now destruct n).	0.32196187973	17
Coq.ZArith.Znat.N2Z.inj_0	40	0	search with cache (only 1: trivial).	0.0642220973969	1
Coq.ZArith.Znat.N2Z.inj_pos	40	0	search with cache (only 1: reflexivity).	0.0736510753632	1
Coq.ZArith.Znat.N2Z.inj_compare	40	0.0.0.0.0.0.0.0.2	search with cache (only 1: destruct n, m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	0.71022105217	62
Coq.ZArith.Znat.N2Z.inj_le	40	5	search with cache (only 1: now destruct n, m).	0.870719909668	105
Coq.ZArith.Znat.N2Z.inj_lt	40	7	search with cache (only 1: now destruct n, m).	0.476563930511	43
Coq.ZArith.Znat.N2Z.inj_ge	40	0.4	search with cache (only 1: unfold Z.le, Z.ge; only 1: now rewrite inj_compare).	0.459688901901	23
Coq.ZArith.Znat.N2Z.inj_gt	40	0.5	search with cache (only 1: unfold Z.lt, Z.gt; only 1: now rewrite inj_compare).	0.224684000015	16
Coq.ZArith.Znat.N2Z.inj_abs_N	40
Coq.ZArith.Znat.N2Z.inj_add	40	1.0.0.0.0.0.2	search with cache (only 1: destruct n, m; only 1: trivial; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: trivial).	0.298905134201	11
Coq.ZArith.Znat.N2Z.inj_mul	40	0.0.0.0.0.0.0.2	search with cache (only 1: destruct n, m; only 1: trivial; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy; only 1: simpl; only 1: reflexivity).	0.281617879868	10
Coq.ZArith.Znat.N2Z.inj_sub_max	40
Coq.ZArith.Znat.N2Z.inj_sub	40
Coq.ZArith.Znat.N2Z.inj_succ	40	0.2.0.7	search with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: now rewrite Pos.add_1_r).	0.50826215744	65
Coq.ZArith.Znat.N2Z.inj_pred_max	40	0.0.0.0.0.0.27.0.0.15	search with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	7.81402111053	7507
Coq.ZArith.Znat.N2Z.inj_pred	40	0.0.0.0.0.0.8.0.0.11	search with cache (only 1: destruct n; only 1: unfold Z.pred; only 1: now rewrite N.pred_sub, inj_sub_max; only 1: destruct p; only 1: unfold Z.pred; only 1: now rewrite N.pred_sub, inj_sub_max; only 1: unfold Z.pred; only 1: now rewrite N.pred_sub, inj_sub_max; only 1: unfold Z.pred; only 1: now rewrite N.pred_sub, inj_sub_max).	8.73466491699	3991
Coq.ZArith.Znat.N2Z.inj_min	40
Coq.ZArith.Znat.N2Z.inj_max	40
Coq.ZArith.Znat.N2Z.inj_div	40
Coq.ZArith.Znat.N2Z.inj_mod	40
Coq.ZArith.Znat.N2Z.inj_quot	40
Coq.ZArith.Znat.N2Z.inj_rem	40
Coq.ZArith.Znat.N2Z.inj_div2	40
Coq.ZArith.Znat.N2Z.inj_quot2	40	1.0.0	search with cache (only 1: destruct n as [| p]; only 1: trivial; only 1: now destruct p).	0.133606910706	4
Coq.ZArith.Znat.N2Z.inj_pow	40
Coq.ZArith.Znat.N2Z.inj_testbit	40
Coq.ZArith.Znat.Z2N.id	40	2	search with cache (only 1: now destruct n).	0.0637981891632	3
Coq.ZArith.Znat.Z2N.inj	40	0.0.0.0.1.0.1.0.1.3.0.1.0.0.5	search with cache (only 1: destruct n, m; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: easy; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: now destruct 1 || trivial; only 1: now destruct 1 || trivial; only 1: now destruct 1 || trivial).	19.5323851109	7346
Coq.ZArith.Znat.Z2N.inj_iff	40	2.0.0.1.0.3	search with cache (only 1: split; only 1: intros; only 1: rewrite <- (id n), <- (id m) by trivial; only 1: now f_equal; only 1: intros; only 1: now f_equal).	3.68899893761	335
Coq.ZArith.Znat.Z2N.inj_0	40	2.0	search with cache (only 1: simpl; only 1: trivial).	0.163077116013	4
Coq.ZArith.Znat.Z2N.inj_pos	40	0.0	search with cache (only 1: simpl; only 1: f_equal).	0.203037023544	2
Coq.ZArith.Znat.Z2N.inj_neg	40	0.0	search with cache (only 1: simpl; only 1: trivial).	0.257944107056	2
Coq.ZArith.Znat.Z2N.inj_add	40	8.4.2	search with cache (only 1: intros; only 1: rewrite <- (id n), <- (id m) by trivial; only 1: now destruct n, m).	3.09197998047	461
Coq.ZArith.Znat.Z2N.inj_mul	40	1.0.0.0.0.0.0.0.0.3	search with cache (only 1: destruct n, m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: now destruct 1 || now destruct 2).	6.49513196945	878
Coq.ZArith.Znat.Z2N.inj_succ	40	1.0.2.0.8	search with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: now rewrite Pos.add_1_r; only 1: now destruct 1 || now destruct 2).	1.58889198303	243
Coq.ZArith.Znat.Z2N.inj_sub	40
Coq.ZArith.Znat.Z2N.inj_pred	40	0.0.0.0.3.0.9	search with cache (only 1: destruct n; only 1: Nat2N.nat2N; only 1: destruct p; only 1: easy || now destruct 1; only 1: easy || now destruct 1; only 1: Nat2N.nat2N; only 1: trivial).	1.91944408417	310
Coq.ZArith.Znat.Z2N.inj_compare	40	2	search with cache (only 1: now destruct n, m).	0.610738992691	76
Coq.ZArith.Znat.Z2N.inj_le	40
Coq.ZArith.Znat.Z2N.inj_lt	40
Coq.ZArith.Znat.Z2N.inj_min	40
Coq.ZArith.Znat.Z2N.inj_max	40
Coq.ZArith.Znat.Z2N.inj_div	40
Coq.ZArith.Znat.Z2N.inj_mod	40
Coq.ZArith.Znat.Z2N.inj_quot	40
Coq.ZArith.Znat.Z2N.inj_rem	40
Coq.ZArith.Znat.Z2N.inj_div2	40	0.10.0.13	search with cache (only 1: destruct n; only 1: Nat2N.nat2N; only 1: now destruct p; only 1: trivial).	2.15440201759	576
Coq.ZArith.Znat.Z2N.inj_quot2	40	1.1.0.0	search with cache (only 1: destruct n as [| p| p]; only 1: trivial; only 1: now destruct p; only 1: now destruct p).	0.142845869064	6
Coq.ZArith.Znat.Z2N.inj_pow	40
Coq.ZArith.Znat.Z2N.inj_testbit	40
Coq.ZArith.Znat.Zabs2N.abs_N_spec	40	0.0.0.0.2.0.0	search with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	0.25355887413	9
Coq.ZArith.Znat.Zabs2N.abs_N_nonneg	40	0	search with cache (only 1: now destruct n).	0.0598959922791	1
Coq.ZArith.Znat.Zabs2N.id_abs	40	1	search with cache (only 1: now destruct n).	0.058984041214	2
Coq.ZArith.Znat.Zabs2N.id	40	0.0.2.0.0	search with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	0.156232118607	7
Coq.ZArith.Znat.Zabs2N.inj_0	40	0	search with cache (only 1: trivial).	0.0416460037231	1
Coq.ZArith.Znat.Zabs2N.inj_pos	40	0	search with cache (only 1: trivial).	0.057708978653	1
Coq.ZArith.Znat.Zabs2N.inj_neg	40	0	search with cache (only 1: trivial).	0.0659520626068	1
Coq.ZArith.Znat.Zabs2N.inj_opp	40	0.0.0.0	search with cache (only 1: destruct n; only 1: trivial; only 1: trivial; only 1: trivial).	0.150153160095	4
Coq.ZArith.Znat.Zabs2N.inj_succ	40	1.0.2.0.1	search with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: now rewrite Pos.add_1_r; only 1: now destruct 1).	0.463163137436	40
Coq.ZArith.Znat.Zabs2N.inj_add	40	0.1.0.1.0.0.0.0.0.0	search with cache (only 1: destruct n, m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: now destruct 1 || now destruct 2; only 1: trivial; only 1: now destruct 1 || now destruct 2; only 1: trivial).	5.81520605087	962
Coq.ZArith.Znat.Zabs2N.inj_mul	40	0.0.0.0.0.0.0.0.0.0	search with cache (only 1: destruct n, m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial).	0.212584972382	10
Coq.ZArith.Znat.Zabs2N.inj_sub	40
Coq.ZArith.Znat.Zabs2N.inj_pred	40
Coq.ZArith.Znat.Zabs2N.inj_compare	40	8	search with cache (only 1: now destruct n, m).	0.356411933899	31
Coq.ZArith.Znat.Zabs2N.inj_le	40	0.1.0	search with cache (only 1: unfold Z.le, N.le; only 1: intros; only 1: now rewrite Z2N.inj_compare).	0.154572963715	4
Coq.ZArith.Znat.Zabs2N.inj_lt	40	0.1.0	search with cache (only 1: unfold Z.lt, N.lt; only 1: intros; only 1: now rewrite inj_compare).	0.109707117081	4
Coq.ZArith.Znat.Zabs2N.inj_min	40
Coq.ZArith.Znat.Zabs2N.inj_max	40
Coq.ZArith.Znat.Zabs2N.inj_quot	40
Coq.ZArith.Znat.Zabs2N.inj_rem	40
Coq.ZArith.Znat.Zabs2N.inj_pow	40
Coq.ZArith.Znat.Zabs2N.inj_succ_abs	40	0.4.0.4.2.14	search with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: now rewrite Pos.add_1_r; only 1: simpl; only 1: now rewrite Pos.add_1_r).	15.727670908	6789
Coq.ZArith.Znat.Zabs2N.inj_add_abs	40	7	search with cache (only 1: now destruct n, m).	0.503895044327	65
Coq.ZArith.Znat.Zabs2N.inj_mul_abs	40	0	search with cache (only 1: now destruct n, m).	0.063836812973	1
Coq.ZArith.Znat.Nat2Z.inj_0	40	0	search with cache (only 1: trivial).	0.0587849617004	1
Coq.ZArith.Znat.Nat2Z.inj_succ	40	0.0.0.3	search with cache (only 1: destruct n; only 1: reflexivity; only 1: simpl; only 1: now rewrite Pos.add_1_r).	0.209681987762	23
Coq.ZArith.Znat.Nat2Z.is_nonneg	40	1	search with cache (only 1: now destruct n).	0.149915933609	37
Coq.ZArith.Znat.Nat2Z.id	40	1.0.1.1	search with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: apply SuccNat2Pos.id_succ).	0.130112886429	7
Coq.ZArith.Znat.Nat2Z.inj	40	0.3.15.10	search with cache (only 1: intros; only 1: rewrite <- (Z2N.id n), <- (Z2N.id m) by trivial; only 1: rewrite H; only 1: now rewrite <- nat_N_Z, <- Z_N_nat, N2Z.id, Nat2N.id).	8.10738897324	4600
Coq.ZArith.Znat.Nat2Z.inj_iff	40	0.1.0.1.3	search with cache (only 1: split; only 1: intros H; only 1: now rewrite <- (id n), <- (id m), H; only 1: intros H; only 1: now rewrite <- (id n), <- (id m), H).	0.148352861404	10
Coq.ZArith.Znat.Nat2Z.inj_compare	40
Coq.ZArith.Znat.Nat2Z.inj_le	40
Coq.ZArith.Znat.Nat2Z.inj_lt	40
Coq.ZArith.Znat.Nat2Z.inj_ge	40
Coq.ZArith.Znat.Nat2Z.inj_gt	40
Coq.ZArith.Znat.Nat2Z.inj_abs_nat	40
Coq.ZArith.Znat.Nat2Z.inj_add	40
Coq.ZArith.Znat.Nat2Z.inj_mul	40
Coq.ZArith.Znat.Nat2Z.inj_sub_max	40
Coq.ZArith.Znat.Nat2Z.inj_sub	40
Coq.ZArith.Znat.Nat2Z.inj_pred_max	40
Coq.ZArith.Znat.Nat2Z.inj_pred	40
Coq.ZArith.Znat.Nat2Z.inj_min	40
Coq.ZArith.Znat.Nat2Z.inj_max	40
Coq.ZArith.Znat.Z2Nat.id	40
Coq.ZArith.Znat.Z2Nat.inj	40	4.5.1	search with cache (only 1: intros; only 1: rewrite <- (Z2N.id n), <- (Z2N.id m) by trivial; only 1: now f_equal).	0.375885009766	83
Coq.ZArith.Znat.Z2Nat.inj_iff	40	2.0.0.1.0.3	search with cache (only 1: split; only 1: intros; only 1: rewrite <- (id n), <- (id m) by trivial; only 1: now f_equal; only 1: intros; only 1: now f_equal).	2.23605418205	251
Coq.ZArith.Znat.Z2Nat.inj_0	40	0	search with cache (only 1: now f_equal).	0.0386300086975	1
Coq.ZArith.Znat.Z2Nat.inj_pos	40	0	search with cache (only 1: now f_equal).	0.0392558574677	1
Coq.ZArith.Znat.Z2Nat.inj_neg	40	0	search with cache (only 1: reflexivity).	0.0498061180115	1
Coq.ZArith.Znat.Z2Nat.inj_add	40
Coq.ZArith.Znat.Z2Nat.inj_mul	40
Coq.ZArith.Znat.Z2Nat.inj_succ	40
Coq.ZArith.Znat.Z2Nat.inj_sub	40
Coq.ZArith.Znat.Z2Nat.inj_pred	40
Coq.ZArith.Znat.Z2Nat.inj_compare	40
Coq.ZArith.Znat.Z2Nat.inj_le	40
Coq.ZArith.Znat.Z2Nat.inj_lt	40
Coq.ZArith.Znat.Z2Nat.inj_min	40
Coq.ZArith.Znat.Z2Nat.inj_max	40
Coq.ZArith.Znat.Zabs2Nat.abs_nat_spec	40	0	search with cache (only 1: now destruct n).	0.041827917099	1
Coq.ZArith.Znat.Zabs2Nat.abs_nat_nonneg	40	0	search with cache (only 1: now destruct n).	0.0660910606384	1
Coq.ZArith.Znat.Zabs2Nat.id_abs	40	1.0.0.0.1.0.1.0.0.0.1.0.0.0.3	search with cache (only 1: destruct n; only 1: simpl; only 1: now subst; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv).	14.4858548641	6350
Coq.ZArith.Znat.Zabs2Nat.id	40	1.0.0.7	search with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: apply SuccNat2Pos.id_succ).	0.427205085754	42
Coq.ZArith.Znat.Zabs2Nat.inj_0	40	0	search with cache (only 1: trivial).	0.0631248950958	1
Coq.ZArith.Znat.Zabs2Nat.inj_pos	40	0	search with cache (only 1: trivial).	0.0776000022888	1
Coq.ZArith.Znat.Zabs2Nat.inj_neg	40	0	search with cache (only 1: trivial).	0.0507488250732	1
Coq.ZArith.Znat.Zabs2Nat.inj_succ	40
Coq.ZArith.Znat.Zabs2Nat.inj_add	40
Coq.ZArith.Znat.Zabs2Nat.inj_mul	40
Coq.ZArith.Znat.Zabs2Nat.inj_sub	40
Coq.ZArith.Znat.Zabs2Nat.inj_pred	40
Coq.ZArith.Znat.Zabs2Nat.inj_compare	40
Coq.ZArith.Znat.Zabs2Nat.inj_le	40	0.6.0	search with cache (only 1: unfold Z.le; only 1: intros; only 1: now rewrite nat_compare_le, Z2Nat.inj_compare).	0.220859050751	9
Coq.ZArith.Znat.Zabs2Nat.inj_lt	40	0.5.0	search with cache (only 1: unfold Z.lt; only 1: intros; only 1: now rewrite nat_compare_lt, Z2Nat.inj_compare).	0.291662931442	8
Coq.ZArith.Znat.Zabs2Nat.inj_min	40
Coq.ZArith.Znat.Zabs2Nat.inj_max	40
Coq.ZArith.Znat.Zabs2Nat.inj_succ_abs	40	0.0.0.3	search with cache (only 1: destruct n; only 1: now rewrite <- !Zabs_N_nat, Zabs2N.inj_succ, N2Nat.inj_succ; only 1: now rewrite <- !Zabs_N_nat, Zabs2N.inj_succ, N2Nat.inj_succ; only 1: now rewrite <- !Zabs_N_nat, Zabs2N.inj_succ, N2Nat.inj_succ).	0.379219055176	7
Coq.ZArith.Znat.Zabs2Nat.inj_add_abs	40	1.1.1.1.1.1.1.1.1.7	search with cache (only 1: destruct n, m; only 1: now rewrite <- !Zabs_N_nat, Zabs2N.inj_add, N2Nat.inj_add; only 1: now rewrite <- !Zabs_N_nat, Zabs2N.inj_add, N2Nat.inj_add; only 1: now rewrite <- !Zabs_N_nat, Zabs2N.inj_add, N2Nat.inj_add; only 1: now rewrite <- !Zabs_N_nat, Zabs2N.inj_add, N2Nat.inj_add; only 1: now rewrite <- !Zabs_N_nat, Zabs2N.inj_add, N2Nat.inj_add; only 1: now rewrite <- !Zabs_N_nat, Zabs2N.inj_add, N2Nat.inj_add; only 1: now rewrite <- !Zabs_N_nat, Zabs2N.inj_add, N2Nat.inj_add; only 1: now rewrite <- !Zabs_N_nat, Zabs2N.inj_add, N2Nat.inj_add; only 1: now rewrite <- !Zabs_N_nat, Zabs2N.inj_add, N2Nat.inj_add).	23.8438119888	6005
Coq.ZArith.Znat.Zabs2Nat.inj_mul_abs	40
Coq.ZArith.Znat.inj_neq	40
Coq.ZArith.Znat.inj_minus2	40
Coq.ZArith.BinInt.Z.eq_dec	40
Coq.ZArith.BinInt.Z.pos_sub_spec	40
Coq.ZArith.BinInt.Z.pos_sub_discr	40
Coq.ZArith.BinInt.Z.pos_sub_diag	40	0.1.0.1.1.1.0.1.1.1.6	search with cache (only 1: induction p; only 1: simpl; only 1: rewrite ?Pos.compare_xI_xI, ?Pos.compare_xO_xI, ?Pos.compare_xI_xO, ?Pos.compare_xO_xO, IHp; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite ?Pos.compare_xI_xI, ?Pos.compare_xO_xI, ?Pos.compare_xI_xO, ?Pos.compare_xO_xO, IHp; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	3.31028008461	1108
Coq.ZArith.BinInt.Z.pos_sub_lt	40
Coq.ZArith.BinInt.Z.pos_sub_gt	40
Coq.ZArith.BinInt.Z.pos_sub_opp	40
Coq.ZArith.BinInt.Z.Private_BootStrap.add_0_r	40
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_0_r	40	4	search with cache (only 1: now destruct n).	0.0526928901672	5
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_1_l	40	0	search with cache (only 1: now destruct n).	0.0518178939819	1
Coq.ZArith.BinInt.Z.Private_BootStrap.add_comm	40
Coq.ZArith.BinInt.Z.Private_BootStrap.opp_add_distr	40
Coq.ZArith.BinInt.Z.Private_BootStrap.opp_inj	40
Coq.ZArith.BinInt.Z.Private_BootStrap.pos_sub_add	40
Coq.ZArith.BinInt.Z.Private_BootStrap.add_assoc_pos	40
Coq.ZArith.BinInt.Z.Private_BootStrap.add_assoc	40
Coq.ZArith.BinInt.Z.Private_BootStrap.add_opp_diag_r	40	2.0.2.0.0.0.7	search with cache (only 1: destruct n; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now rewrite pos_sub_spec, Pos.compare_refl; only 1: simpl; only 1: now rewrite pos_sub_spec, Pos.compare_refl).	1.68140292168	362
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_opp_r	40	0.0.0.0.0.1.0.0.0.0.0.1.0.1.0.1.0.1.1	search with cache (only 1: destruct n, m; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal).	18.6224610806	6364
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_add_distr_pos	40
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_add_distr_r	40
Coq.ZArith.BinInt.Z.one_succ	40	1	search with cache (only 1: trivial).	0.0460958480835	2
Coq.ZArith.BinInt.Z.two_succ	40	0	search with cache (only 1: reflexivity).	0.0534389019012	1
Coq.ZArith.BinInt.Z.add_0_l	40	0	search with cache (only 1: now destruct n).	0.0547618865967	1
Coq.ZArith.BinInt.Z.add_succ_l	40
Coq.ZArith.BinInt.Z.opp_0	40	0.0	search with cache (only 1: simpl; only 1: now f_equal).	0.0840530395508	2
Coq.ZArith.BinInt.Z.opp_succ	40	0.0.2.0.0.1.0.4.0	search with cache (only 1: unfold succ; only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: rewrite !opp_add_distr; only 1: simpl; only 1: trivial).	5.07605099678	1381
Coq.ZArith.BinInt.Z.succ_pred	40
Coq.ZArith.BinInt.Z.pred_succ	40	0.0	search with cache (only 1: unfold succ, pred; only 1: now rewrite <- add_assoc, add_opp_diag_r, add_0_r).	0.104969024658	2
Coq.ZArith.BinInt.Z.sub_0_r	40	1	search with cache (only 1: now destruct n).	0.0715491771698	2
Coq.ZArith.BinInt.Z.sub_succ_r	40
Coq.ZArith.BinInt.Z.mul_0_l	40	0	search with cache (only 1: now destruct n).	0.0571689605713	1
Coq.ZArith.BinInt.Z.mul_succ_l	40
Coq.ZArith.BinInt.Z.eqb_eq	40
Coq.ZArith.BinInt.Z.ltb_lt	40
Coq.ZArith.BinInt.Z.leb_le	40
Coq.ZArith.BinInt.Z.compare_eq_iff	40
Coq.ZArith.BinInt.Z.compare_sub	40
Coq.ZArith.BinInt.Z.compare_antisym	40	0.1.0.0.0.0.0.0.0.1.0.0.0.0.0.0	search with cache (only 1: destruct n as [| n| n], m as [| m| m]; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: simpl; only 1: rewrite <- ?Pos.compare_antisym, ?pos_sub_spec; only 1: trivial; only 1: simpl; only 1: trivial; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite <- ?Pos.compare_antisym, ?pos_sub_spec; only 1: trivial).	32.5034480095	9237
Coq.ZArith.BinInt.Z.compare_lt_iff	40	0.0.0.0.1	search with cache (only 1: unfold ltb, lt; only 1: destruct compare; only 1: easy'; only 1: easy'; only 1: easy').	2.12802696228	159
Coq.ZArith.BinInt.Z.compare_le_iff	40	0.0.0.0.1	search with cache (only 1: unfold leb, le; only 1: destruct compare; only 1: easy'; only 1: easy'; only 1: easy').	1.02340602875	103
Coq.ZArith.BinInt.Z.lt_succ_r	40
Coq.ZArith.BinInt.Z.max_l	40
Coq.ZArith.BinInt.Z.max_r	40
Coq.ZArith.BinInt.Z.min_l	40
Coq.ZArith.BinInt.Z.min_r	40	0.0.0.1.1.0	search with cache (only 1: unfold le, min; only 1: rewrite (compare_antisym n m); only 1: case compare_spec; only 1: intuition; only 1: intuition; only 1: intuition).	2.08073377609	185
Coq.ZArith.BinInt.Z.peano_ind	40
Coq.ZArith.BinInt.Z.bi_induction	40
Coq.ZArith.BinInt.Z.abs_eq	40
Coq.ZArith.BinInt.Z.abs_neq	40	0.1.0.0	search with cache (only 1: destruct n; only 1: trivial; only 1: now destruct 1; only 1: trivial).	0.135281085968	5
Coq.ZArith.BinInt.Z.sgn_null	40
Coq.ZArith.BinInt.Z.sgn_pos	40
Coq.ZArith.BinInt.Z.sgn_neg	40	0	search with cache (only 1: now destruct n).	0.0834538936615	1
Coq.ZArith.BinInt.Z.pow_0_r	40	0	search with cache (only 1: now f_equiv).	0.0551340579987	1
Coq.ZArith.BinInt.Z.pow_succ_r	40
Coq.ZArith.BinInt.Z.pow_neg_r	40
Coq.ZArith.BinInt.Z.pow_pos_fold	40	2.0.1	search with cache (only 1: simpl; only 1: unfold pow_pos; only 1: trivial).	0.186095952988	6
Coq.ZArith.BinInt.Z.square_spec	40
Coq.ZArith.BinInt.Z.sqrtrem_spec	40
Coq.ZArith.BinInt.Z.sqrt_spec	40
Coq.ZArith.BinInt.Z.sqrt_neg	40	0.1.0.1.0.0.6.0.0.0	search with cache (only 1: destruct n; only 1: now repeat split; only 1: unfold sqrt; only 1: generalize (Pos.sqrtrem_spec p); only 1: destruct 1; only 1: subst; only 1: now repeat split; only 1: subst; only 1: now repeat split; only 1: now destruct 1).	8.16775894165	2431
Coq.ZArith.BinInt.Z.sqrtrem_sqrt	40
Coq.ZArith.BinInt.Z.log2_spec	40
Coq.ZArith.BinInt.Z.log2_nonpos	40	0.0.3.8.0.0	search with cache (only 1: destruct n as [| [p| p| ]| ]; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	10.9307498932	3454
Coq.ZArith.BinInt.Z.even_spec	40
Coq.ZArith.BinInt.Z.odd_spec	40
Coq.ZArith.BinInt.Z.double_spec	40	0	search with cache (only 1: now destruct n as [| [| | ]| [| | ]]).	0.0683431625366	1
Coq.ZArith.BinInt.Z.succ_double_spec	40	9	search with cache (only 1: now destruct n as [| [| | ]| [| | ]]).	1.01500701904	106
Coq.ZArith.BinInt.Z.pred_double_spec	40	0	search with cache (only 1: now destruct n).	0.0621161460876	1
Coq.ZArith.BinInt.Z.pos_div_eucl_eq	40
Coq.ZArith.BinInt.Z.div_eucl_eq	40
Coq.ZArith.BinInt.Z.div_mod	40
Coq.ZArith.BinInt.Z.pos_div_eucl_bound	40
Coq.ZArith.BinInt.Z.mod_pos_bound	40
Coq.ZArith.BinInt.Z.mod_neg_bound	40
Coq.ZArith.BinInt.Z.quotrem_eq	40
Coq.ZArith.BinInt.Z.quot_rem'	40
Coq.ZArith.BinInt.Z.quot_rem	40	0.0.1.0.0.0.0.0	search with cache (only 1: rewrite mul_comm; only 1: rewrite mul_comm; only 1: rewrite mul_comm; only 1: rewrite mul_comm; only 1: rewrite mul_comm; only 1: generalize (quotrem_eq a b); only 1: unfold quot, rem; only 1: now destruct quotrem).	0.724173069	24
Coq.ZArith.BinInt.Z.rem_bound_pos	40
Coq.ZArith.BinInt.Z.rem_opp_l'	40
Coq.ZArith.BinInt.Z.rem_opp_r'	40
Coq.ZArith.BinInt.Z.rem_opp_l	40
Coq.ZArith.BinInt.Z.rem_opp_r	40
Coq.ZArith.BinInt.Z.divide_Zpos	40
Coq.ZArith.BinInt.Z.divide_Zpos_Zneg_r	40
Coq.ZArith.BinInt.Z.divide_Zpos_Zneg_l	40
Coq.ZArith.BinInt.Z.ggcd_gcd	40
Coq.ZArith.BinInt.Z.ggcd_correct_divisors	40
Coq.ZArith.BinInt.Z.gcd_divide_l	40
Coq.ZArith.BinInt.Z.gcd_divide_r	40
Coq.ZArith.BinInt.Z.gcd_greatest	40
Coq.ZArith.BinInt.Z.gcd_nonneg	40
Coq.ZArith.BinInt.Z.ggcd_opp	40
Coq.ZArith.BinInt.Z.testbit_of_N	40
Coq.ZArith.BinInt.Z.testbit_of_N'	40	1.0.0.0.1.0.0.0.0.0.0.0.0	search with cache (only 1: destruct a as [| a], n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now destruct a; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now destruct a).	8.4969420433	2122
Coq.ZArith.BinInt.Z.testbit_Zpos	40	1.0.0.0.0.2.0	search with cache (only 1: rewrite <- testbit_of_N; only 1: intro Hn; only 1: f_equal; only 1: destruct n; only 1: trivial; only 1: trivial; only 1: now destruct Hn).	0.193261861801	10
Coq.ZArith.BinInt.Z.testbit_Zneg	40
Coq.ZArith.BinInt.Z.div2_spec	40	4	search with cache (only 1: trivial).	0.0682599544525	5
Coq.ZArith.BinInt.Z.testbit_0_l	40	0.1.0.0.0.0.1	search with cache (only 1: destruct n as [| n| n]; only 1: unfold testbit; only 1: easy; only 1: simpl; only 1: trivial; only 1: unfold testbit; only 1: trivial).	0.427377939224	28
Coq.ZArith.BinInt.Z.testbit_neg_r	40	0	search with cache (only 1: now destruct n).	0.09685587883	1
Coq.ZArith.BinInt.Z.testbit_odd_0	40
Coq.ZArith.BinInt.Z.testbit_even_0	40	0	search with cache (only 1: now destruct a as [| a| [a| a| ]]).	0.0650420188904	1
Coq.ZArith.BinInt.Z.testbit_odd_succ	40
Coq.ZArith.BinInt.Z.testbit_even_succ	40
Coq.ZArith.BinInt.Z.shiftr_spec_aux	40
Coq.ZArith.BinInt.Z.shiftl_spec_low	40
Coq.ZArith.BinInt.Z.shiftl_spec_high	40
Coq.ZArith.BinInt.Z.shiftr_spec	40
Coq.ZArith.BinInt.Z.lor_spec	40
Coq.ZArith.BinInt.Z.land_spec	40
Coq.ZArith.BinInt.Z.ldiff_spec	40
Coq.ZArith.BinInt.Z.lxor_spec	40
Coq.ZArith.BinInt.Z.gt_lt_iff	40
Coq.ZArith.BinInt.Z.gt_lt	40	0.0	search with cache (only 1: unfold lt, gt; only 1: now rewrite compare_antisym, CompOpp_iff).	0.115519046783	2
Coq.ZArith.BinInt.Z.lt_gt	40	0.0	search with cache (only 1: unfold lt, gt; only 1: now rewrite compare_antisym, CompOpp_iff).	0.0854179859161	2
Coq.ZArith.BinInt.Z.ge_le_iff	40
Coq.ZArith.BinInt.Z.ge_le	40	0.0	search with cache (only 1: unfold le, ge; only 1: now rewrite compare_antisym, CompOpp_iff).	0.10437297821	2
Coq.ZArith.BinInt.Z.le_ge	40	0.0	search with cache (only 1: unfold le, ge; only 1: now rewrite compare_antisym, CompOpp_iff).	0.129238128662	2
Coq.ZArith.BinInt.Z.gtb_ltb	40
Coq.ZArith.BinInt.Z.geb_leb	40
Coq.ZArith.BinInt.Z.gtb_lt	40	1.2.1.10	search with cache (only 1: unfold lt, gt; only 1: unfold gtb, ltb; only 1: rewrite compare_antisym; only 1: now case compare).	11.0922291279	2036
Coq.ZArith.BinInt.Z.geb_le	40	1.2.1.17	search with cache (only 1: unfold le, ge; only 1: unfold geb, leb; only 1: rewrite compare_antisym; only 1: now case compare).	29.7146570683	9753
Coq.ZArith.BinInt.Z.gtb_spec	40
Coq.ZArith.BinInt.Z.geb_spec	40
Coq.ZArith.BinInt.Z.add_reg_l	40
Coq.ZArith.BinInt.Z.mul_reg_l	40
Coq.ZArith.BinInt.Z.mul_reg_r	40
Coq.ZArith.BinInt.Z.opp_eq_mul_m1	40
Coq.ZArith.BinInt.Z.add_diag	40
Coq.ZArith.BinInt.Z.compare_opp	40
Coq.ZArith.BinInt.Z.add_compare_mono_l	40
Coq.ZArith.BinInt.Z.testbit_mod_pow2	40
Coq.ZArith.BinInt.Z.testbit_ones	40
Coq.ZArith.BinInt.Z.testbit_ones_nonneg	40	0.0.0.0.1	search with cache (only 1: destruct (ltb_spec i n); only 1: rewrite ?testbit_neg_r, ?ones_spec_low, ?ones_spec_high by auto; only 1: trivial; only 1: rewrite ?testbit_neg_r, ?ones_spec_low, ?ones_spec_high by auto; only 1: trivial).	0.960613012314	73
Coq.ZArith.BinInt.Pos2Z.id	40	3.0	search with cache (only 1: simpl; only 1: trivial).	0.0794048309326	5
Coq.ZArith.BinInt.Pos2Z.inj	40
Coq.ZArith.BinInt.Pos2Z.inj_iff	40	5.10.8.0.7	search with cache (only 1: split; only 1: now injection 1; only 1: intros; only 1: f_equal; only 1: trivial).	1.6990711689	1564
Coq.ZArith.BinInt.Pos2Z.is_pos	40	1	search with cache (only 1: now f_equal).	0.0630130767822	2
Coq.ZArith.BinInt.Pos2Z.is_nonneg	40	2	search with cache (only 1: now f_equal).	0.0691499710083	3
Coq.ZArith.BinInt.Pos2Z.inj_1	40	2	search with cache (only 1: trivial).	0.0612399578094	3
Coq.ZArith.BinInt.Pos2Z.inj_xO	40	3.0	search with cache (only 1: change_no_check 2 with (1 + 1); only 1: f_equiv).	0.28230214119	5
Coq.ZArith.BinInt.Pos2Z.inj_xI	40	1	search with cache (only 1: reflexivity).	0.326205968857	2
Coq.ZArith.BinInt.Pos2Z.inj_succ	40
Coq.ZArith.BinInt.Pos2Z.inj_add	40	1	search with cache (only 1: now f_equal).	0.107620954514	2
Coq.ZArith.BinInt.Pos2Z.inj_sub	40
Coq.ZArith.BinInt.Pos2Z.inj_sub_max	40
Coq.ZArith.BinInt.Pos2Z.inj_pred	40
Coq.ZArith.BinInt.Pos2Z.inj_mul	40	0	search with cache (only 1: reflexivity).	0.0762889385223	1
Coq.ZArith.BinInt.Pos2Z.inj_pow_pos	40
Coq.ZArith.BinInt.Pos2Z.inj_pow	40	0	search with cache (only 1: now apply Pos.iter_swap_gen).	0.0645689964294	1
Coq.ZArith.BinInt.Pos2Z.inj_square	40	0	search with cache (only 1: now f_equal).	0.0675959587097	1
Coq.ZArith.BinInt.Pos2Z.inj_compare	40	1.0	search with cache (only 1: simpl; only 1: trivial).	0.634666919708	47
Coq.ZArith.BinInt.Pos2Z.inj_leb	40	0	search with cache (only 1: now f_equal).	0.0648739337921	1
Coq.ZArith.BinInt.Pos2Z.inj_ltb	40	0	search with cache (only 1: reflexivity).	0.0767362117767	1
Coq.ZArith.BinInt.Pos2Z.inj_eqb	40	0	search with cache (only 1: reflexivity).	0.0772650241852	1
Coq.ZArith.BinInt.Pos2Z.inj_max	40
Coq.ZArith.BinInt.Pos2Z.inj_min	40
Coq.ZArith.BinInt.Pos2Z.inj_sqrt	40	0	search with cache (only 1: now f_equal).	0.0381481647491	1
Coq.ZArith.BinInt.Pos2Z.inj_gcd	40	0	search with cache (only 1: now f_equal).	0.0719928741455	1
Coq.ZArith.BinInt.Pos2Z.inj_divide	40
Coq.ZArith.BinInt.Pos2Z.inj_testbit	40
Coq.ZArith.BinInt.Pos2Z.inj_neg	40	1	search with cache (only 1: now injection 1).	0.0696868896484	2
Coq.ZArith.BinInt.Pos2Z.inj_neg_iff	40	1.3.0.1	search with cache (only 1: split; only 1: now injection 1; only 1: intros; only 1: now f_equal).	0.234247922897	9
Coq.ZArith.BinInt.Pos2Z.inj_pos	40	1	search with cache (only 1: now injection 1).	0.0677421092987	2
Coq.ZArith.BinInt.Pos2Z.inj_pos_iff	40	0.2.1.0	search with cache (only 1: split; only 1: now injection 1; only 1: intros; only 1: now f_equal).	0.246686220169	7
Coq.ZArith.BinInt.Pos2Z.neg_is_neg	40	1	search with cache (only 1: now f_equal).	0.0771460533142	2
Coq.ZArith.BinInt.Pos2Z.neg_is_nonpos	40	2	search with cache (only 1: now f_equal).	0.0975639820099	3
Coq.ZArith.BinInt.Pos2Z.pos_is_pos	40	0	search with cache (only 1: reflexivity).	0.0762028694153	1
Coq.ZArith.BinInt.Pos2Z.pos_is_nonneg	40	0	search with cache (only 1: easy).	0.087042093277	1
Coq.ZArith.BinInt.Pos2Z.neg_le_pos	40	0	search with cache (only 1: easy).	0.193995952606	1
Coq.ZArith.BinInt.Pos2Z.neg_lt_pos	40	0	search with cache (only 1: easy).	0.18615603447	1
Coq.ZArith.BinInt.Pos2Z.neg_le_neg	40
Coq.ZArith.BinInt.Pos2Z.neg_lt_neg	40
Coq.ZArith.BinInt.Pos2Z.pos_le_pos	40	3.0.1.0	search with cache (only 1: intros; only 1: unfold Z.le; only 1: simpl; only 1: trivial).	0.112951993942	8
Coq.ZArith.BinInt.Pos2Z.pos_lt_pos	40	4.0	search with cache (only 1: intros; only 1: now destruct (p - q)%positive).	0.0857639312744	6
Coq.ZArith.BinInt.Pos2Z.neg_xO	40	0	search with cache (only 1: reflexivity).	0.0578920841217	1
Coq.ZArith.BinInt.Pos2Z.neg_xI	40	0	search with cache (only 1: reflexivity).	0.0810680389404	1
Coq.ZArith.BinInt.Pos2Z.pos_xO	40	0	search with cache (only 1: reflexivity).	0.0660319328308	1
Coq.ZArith.BinInt.Pos2Z.pos_xI	40	0	search with cache (only 1: reflexivity).	0.0677509307861	1
Coq.ZArith.BinInt.Pos2Z.opp_neg	40	0.0	search with cache (only 1: simpl; only 1: now f_equal).	0.0896768569946	2
Coq.ZArith.BinInt.Pos2Z.opp_pos	40	0	search with cache (only 1: reflexivity).	0.066554069519	1
Coq.ZArith.BinInt.Pos2Z.add_neg_neg	40	0	search with cache (only 1: reflexivity).	0.0373408794403	1
Coq.ZArith.BinInt.Pos2Z.add_pos_neg	40	2	search with cache (only 1: reflexivity).	0.483937978745	34
Coq.ZArith.BinInt.Pos2Z.add_neg_pos	40	0	search with cache (only 1: reflexivity).	0.0538718700409	1
Coq.ZArith.BinInt.Pos2Z.add_pos_pos	40	0	search with cache (only 1: reflexivity).	0.0608489513397	1
Coq.ZArith.BinInt.Pos2Z.divide_pos_neg_r	40
Coq.ZArith.BinInt.Pos2Z.divide_pos_neg_l	40
Coq.ZArith.BinInt.Pos2Z.testbit_neg	40
Coq.ZArith.BinInt.Pos2Z.testbit_pos	40	0	search with cache (only 1: apply Z.testbit_Zpos).	0.0690810680389	1
Coq.ZArith.BinInt.Z2Pos.id	40
Coq.ZArith.BinInt.Z2Pos.inj	40
Coq.ZArith.BinInt.Z2Pos.inj_iff	40
Coq.ZArith.BinInt.Z2Pos.to_pos_nonpos	40	6.2	search with cache (only 1: intros; only 1: now destruct x).	0.337965965271	17
Coq.ZArith.BinInt.Z2Pos.inj_1	40	0	search with cache (only 1: trivial).	0.0740931034088	1
Coq.ZArith.BinInt.Z2Pos.inj_double	40	5.2	search with cache (only 1: intros; only 1: now destruct x).	0.398864984512	15
Coq.ZArith.BinInt.Z2Pos.inj_succ_double	40	5.2	search with cache (only 1: intros; only 1: now destruct x).	0.395085096359	15
Coq.ZArith.BinInt.Z2Pos.inj_succ	40	0.0.0.0.0.0.3	search with cache (only 1: destruct x; only 1: simpl; only 1: easy || now destruct 1; only 1: simpl; only 1: now rewrite Pos.add_1_r; only 1: simpl; only 1: easy).	0.565700054169	23
Coq.ZArith.BinInt.Z2Pos.inj_add	40
Coq.ZArith.BinInt.Z2Pos.inj_sub	40
Coq.ZArith.BinInt.Z2Pos.inj_pred	40	0.0.0.0.0.0.3	search with cache (only 1: destruct x; only 1: easy; only 1: destruct p; only 1: easy || now destruct 1; only 1: easy || now destruct 1; only 1: easy || now destruct 1; only 1: easy).	0.406229972839	24
Coq.ZArith.BinInt.Z2Pos.inj_mul	40	0.0.0.3.2	search with cache (only 1: intros; only 1: destruct x; only 1: easy; only 1: easy || now destruct y; only 1: easy).	0.190017938614	10
Coq.ZArith.BinInt.Z2Pos.inj_pow	40
Coq.ZArith.BinInt.Z2Pos.inj_pow_pos	40
Coq.ZArith.BinInt.Z2Pos.inj_compare	40	0.1.1.3	search with cache (only 1: destruct x; only 1: easy; only 1: easy || now destruct y; only 1: easy).	0.427454948425	20
Coq.ZArith.BinInt.Z2Pos.inj_leb	40	0.1.1.3	search with cache (only 1: destruct x; only 1: easy; only 1: easy || now destruct y; only 1: easy).	0.359264850616	20
Coq.ZArith.BinInt.Z2Pos.inj_ltb	40	0.1.1.0	search with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.224733114243	6
Coq.ZArith.BinInt.Z2Pos.inj_eqb	40	0.1.1.0	search with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.286302089691	6
Coq.ZArith.BinInt.Z2Pos.inj_max	40
Coq.ZArith.BinInt.Z2Pos.inj_min	40
Coq.ZArith.BinInt.Z2Pos.inj_sqrt	40	0.0.0.3	search with cache (only 1: destruct x; only 1: reflexivity; only 1: reflexivity; only 1: trivial).	0.262512922287	7
Coq.ZArith.BinInt.Z2Pos.inj_gcd	40	0.0.0.3.2	search with cache (only 1: intros; only 1: destruct x; only 1: easy; only 1: easy || now destruct y; only 1: easy).	0.339684009552	10
Coq.ZArith.BinInt.Zplus_minus_eq	40
Coq.ZArith.BinInt.Zpos_eq	40	0.4	search with cache (only 1: intros; only 1: now f_equal).	0.0581061840057	6
Coq.ZArith.BinInt.ZL0	40	7	search with cache (only 1: now f_equal).	0.0752902030945	8
Coq.ZArith.BinInt.Zplus_diag_eq_mult_2	40	8.0	search with cache (only 1: change_no_check 2 with (1 + 1); only 1: now Z.nzsimpl').	0.385786056519	10
Coq.ZArith.BinInt.Z_eq_mult	40
Coq.ZArith.Int.MoreInt.eqb_eq	40
Coq.ZArith.Int.MoreInt.eqb_neq	40
Coq.ZArith.Int.MoreInt.ltb_lt	40
Coq.ZArith.Int.MoreInt.ltb_nlt	40
Coq.ZArith.Int.MoreInt.leb_le	40
Coq.ZArith.Int.MoreInt.leb_nle	40
Coq.ZArith.Int.MoreInt.norm_ei_correct	40
Coq.ZArith.Int.MoreInt.norm_ez_correct	40
Coq.ZArith.Int.MoreInt.norm_ep_correct	40
Coq.ZArith.Int.MoreInt.norm_ep_correct2	40
Coq.ZArith.Int.Z_as_Int.gt_le_dec	40
Coq.ZArith.Int.Z_as_Int.ge_lt_dec	40
Coq.ZArith.Int.Z_as_Int.i2z_eq	40	4	search with cache (only 1: now f_equal).	0.019800901413	5
Coq.ZArith.Int.Z_as_Int.i2z_0	40	0	search with cache (only 1: trivial).	0.0167248249054	1
Coq.ZArith.Int.Z_as_Int.i2z_1	40	0	search with cache (only 1: trivial).	0.017425775528	1
Coq.ZArith.Int.Z_as_Int.i2z_2	40	0	search with cache (only 1: reflexivity).	0.0177929401398	1
Coq.ZArith.Int.Z_as_Int.i2z_3	40	0	search with cache (only 1: reflexivity).	0.0305650234222	1
Coq.ZArith.Int.Z_as_Int.i2z_add	40	0	search with cache (only 1: trivial).	0.0371339321136	1
Coq.ZArith.Int.Z_as_Int.i2z_opp	40	0	search with cache (only 1: trivial).	0.0239379405975	1
Coq.ZArith.Int.Z_as_Int.i2z_sub	40	0	search with cache (only 1: trivial).	0.0369400978088	1
Coq.ZArith.Int.Z_as_Int.i2z_mul	40	0	search with cache (only 1: trivial).	0.0371160507202	1
Coq.ZArith.Int.Z_as_Int.i2z_max	40	0	search with cache (only 1: trivial).	0.0319378376007	1
Coq.ZArith.Int.Z_as_Int.i2z_eqb	40	0	search with cache (only 1: trivial).	0.0367538928986	1
Coq.ZArith.Int.Z_as_Int.i2z_leb	40	0	search with cache (only 1: reflexivity).	0.0342960357666	1
Coq.ZArith.Int.Z_as_Int.i2z_ltb	40	0	search with cache (only 1: reflexivity).	0.0274150371552	1
Coq.ZArith.Zeuclid.ZEuclid.mod_wd	40	1	search with cache (only 1: solve_proper).	0.0715100765228	2
Coq.ZArith.Zeuclid.ZEuclid.div_wd	40	0	search with cache (only 1: congruence).	0.0637619495392	1
Coq.ZArith.Zeuclid.ZEuclid.div_mod	40
Coq.ZArith.Zeuclid.ZEuclid.mod_always_pos	40
Coq.ZArith.Zeuclid.ZEuclid.mod_bound_pos	40
Coq.ZArith.Zpow_alt.Piter_mul_acc	40
Coq.ZArith.Zpow_alt.Piter_op_square	40
Coq.ZArith.Zpow_alt.Zpower_equiv	40
Coq.ZArith.Zpow_alt.Zpower_alt_0_r	40	0	search with cache (only 1: trivial).	0.0322539806366	1
Coq.ZArith.Zpow_alt.Zpower_alt_succ_r	40
Coq.ZArith.Zpow_alt.Zpower_alt_neg_r	40	2.0.4.0.1.2.0	search with cache (only 1: destruct b as [| b| b]; only 1: simpl; only 1: Z.order'; only 1: intros Hb; only 1: now elim Hb; only 1: intros Hb; only 1: now elim Hb).	14.7405471802	2313
Coq.ZArith.Zpow_alt.Zpower_alt_Ppow	40
Coq.ZArith.Zpow_def.Zpower_theory	40